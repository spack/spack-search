{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/ChangeLog.2003": "2003-12-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/annotate.c (RenderFreetype): Ensure that image storage\n\tclass is set to DirectClass. Text rendering was not working\n\tproperly on top of PseudoClass images.\n\n\t* magick/map.c (MagickMapRemoveEntry): Logic didn't properly\n\thandle removing entry in list.\n\n\t* configure.ac: Added --enable-efence option to enable memory\n\tdebugging using Electric Fence.\n\n2003-12-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tests/maptest.c (main): Extended test to add an entry to the\n\tlist after an entry has already been removed.\n\n\t* magick/image.c (ColorspaceTypeToString): Add support for LAB\n\tcolorspace.\n\n\t* magick/map.c: Added signature members to all structures and\n\tadded assertions to ensure that the signature == MagickSignature\n\tprior to use. MagickMapAllocateObject now initializes the object\n\treference count to one, and MagickMapDestroyObject decrements it\n\tin order to be more correct even though the object reference count\n\tis not actually used yet.\n\t(MagickMapCopyString): Preserve a null argument, and use\n\tAcquireString since it doesn't enlarge the string storage.\n\t(MagickMapCopyBlob): Preserve null blobs.\n\n\t* configure.ac: Search for the shmctl() function.  Under current\n\tCygwin, this is hiding in -lcygipc.\n\n2003-12-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/composite.c: Fixed the composite operator list in the\n\tCompositeImage documentation.\n\n\t* www/api/types.html: Corrected list of composition\n\toperators. Sometime prior to the creation of GraphicsMagick, the\n\t\"Replace\" composite operators were renamed to be \"Copy\" composite\n\toperators.  Thanks to David Relson for bringing this problem to\n\tour attention.\n\n\t* PerlMagick/Magick.xs: Added \"LAB\" to colorspace types.\n\n\t* magick/image.h (enum ColorSpace): Add LABColorspace enumeration.\n\n\t* wand/magick_wand.h : Add some compatibility definitions to\n\ttranslate from ImageMagick enumerations to existing GraphicsMagick\n\tenumerations.\n\n2003-12-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/annotate.c: Use header synonyms defined by FreeType's\n\tftheader.h (included via <ft2build.h>) to include FreeType headers.\n\tThis will presumably be more portable in the future.\n\n\t* configure.ac: <ft2build.h> is an optional prerequisite for\n\t<freetype/freetype.h> and <libwmf/ipa.h> so include it when\n\ttesting for these headers.\n\n\t* magick/annotate.c: Include <ft2build.h> if it is available.\n\n2003-12-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* wand/wandtest.c: Ported from latest ImageMagick version.\n\n\t* wand/drawing_wand.c: Adapted to be compatible with latest\n\tImageMagick version.\n\n\t* wand/pixel_wand.c: Adapted to be compatible with latest\n\tImageMagick version.\n\n\t* wand/magick_wand.c: Ported from latest ImageMagick version.\n\n\t* magick/image.h (Image): Members color_profile, iptc_profile,\n\tgeneric_profile, and generic_profiles are now deprecated and\n\tprivate although they continue to work as before. Please migrate\n\texisting code to use the GetImageProfile and SetImageProfile\n\tfunctions since these members will eventually be removed.\n\n\t* magick/image.c (GetImageProfile): New function to retrieve an\n\timage profile. Return value differs from similarly named\n\tImageMagick method since the ImageMagick approach assumes a\n\tparticular storage method.\n\t(SetImageProfile): New function to add (or remove) an image\n\tprofile. Does not execute CMS color profiles.\n\n\t* magick/cache.c (SetImageVirtualPixelMethod): Return unsigned int to\n\tmake the Wand implementation happy.\n\n\t* magick/image.c (TransformColorspace): Return unsigned int to\n\tmake the Wand implementation happy.\n\t(SetImageType): Return unsigned int to make the Wand\n\timplementation happy.\n\n\t* magick/draw.h, magick/draw.c: Substitute `unsigned long` in\n\tplace of `size_t` in interfaces so that the draw API is not\n\tsensitive to the definition of _LP64.\n\n\t* locale/C.mgk: Added new messages required by Wand library.\n\n\t* magick/error.c (ExceptionSeverityToTag): Add tag translations\n\tfor the WandWarning, WandError, & WandFatalError enumerations\n\n\t* magick/error.h (enum ExceptionType): Add WandWarning, WandError,\n\t& WandFatalError enumerations to ExceptionType for ImageMagick\n\tAPI compatibility.\n\n\t* magick/image.h (enum ChannelType): Add an `AllChannels`\n\tenumeration to the ChannelType enumeration for ImageMagick\n\tAPI compatibility.\n\n2003-12-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* PerlMagick, tests: Adjusted allowed error values for tests based\n\ton new error computation arithmatic.  Some tests were left failing\n\tsince the operation they test provides results which are\n\tunreasonably inaccurate, or obviously broken.\n\n2003-12-17  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* coders/jpeg.c: Changed \"JPEG:preserve-settings from a key/value\n\tpair to a simple flag.  Save and restore attributes when\n\t\"-define JPEG:preserve-settings\" appears on the commandline.  Use\n\t\"+define JPEG:preserve-settings\" to unset the flag.\n\n2003-12-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/wmf.c: Include <ft2build.h> if it is available since some\n\tlibwmf installs don't work unless it is included before the libwmf\n\tAPI headers.\n\n\t* configure.ac: Check for <ft2build.h>.\n\n2003-12-16  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* coders/jpeg.c: Changed stored jpeg quality attribute from\n\t[jpeg-quality] to JPEG-Quality.  Added attributes JPEG-Colorspace\n\tand JPEG-Sampling-factors.  Added code to save and restore\n\tthese attributes when \"-define JPEG:preserve-settings=yes\" is\n\tpresent in the comandline.  Quality is restored if the input\n\twas a JPEG and the quality was preserved.  Sampling factors\n\tare restored if the input was a JPEG, sampling factors were\n\tpreserved, and the colorspace for the output file is the same\n\tas that of the input file.\n\n2003-12-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* TclMagick/source/configure.ac: Add an initial TclMagick\n\tconfigure-based build environment based on a template and macros\n\tfrom the Tcl project.  I recall that while the extension does build,\n\tit is possible that it is not properly registered as a module to Tcl.\n\n2003-12-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.c (IsImagesEqual): Properly compute error distance\n\tvectors. Math was missing the necessary sqrt call.  Also,\n\tpre-normalize the error differences to 1.0 in order to reduce the\n\tstorage size required to store the summation of error values.\n\n\t* PerlMagick/t/composite.t: Update Minus and Xor reference images.\n\n\t* magick/composite.c (CompositeImage): Incorporated fixes from\n\tImageMagick for XorCompositeOp, PlusCompositeOp, and\n\tMinusCompositeOp.  Thanks to John Cristy for bringing the need for\n\tthese fixes to our attention.\n\n\t* magick/image.h (RoundToQuantum): Added missing parenthesis.\n\n2003-12-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* doc/environment.imdoc: Document MAGICK_CODER_MODULE_PATH and\n\tMAGICK_FILTER_MODULE_PATH.\n\n\t* rungm.sh.in: Pass MAGICK_CODER_MODULE_PATH and\n\tMAGICK_FILTER_MODULE_PATH in the environment so modules build may\n\tbe tested without first being installed.\n\n\t* magick/module.c (FindMagickModule): Use the\n\tMAGICK_CODER_MODULE_PATH environment variable to specify a search\n\tpath for coder modules.  Use MAGICK_FILTER_MODULE_PATH to specify\n\ta search path for filter modules.\n\n\t* Makefile.am: Updated to Automake 1.8.\n\t(install-exec-perl): Fixes which achieve a successful\n\t`make distcheck` for the first time in *Magick history.\n\n\t* configure.ac: Set scripts to executable.\n\n2003-12-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.am (uninstall-data-html): Pathnames were computed\n\tincorrectly so documentation directories were being left behind.\n\n\t* configure.ac: --without-frozenpaths is now the default.  This\n\thelps `make distcheck` work and makes the package more portable.\n\tPath to gm was being incorrectly frozen when --without-frozenpaths\n\twas specified.\n\n\t* magick/delegate.c (ReadConfigureFile): Validate delegate paths\n\tprior to substitution.\n\n\t* rungm.sh.in (top_builddir): Use a more reliable scheme for\n\tcomputing location of source and build directories.\n\n\t* magick/Makefile.am: Improve include directory computation logic.\n\n\t* configure.ac: Don't override includedir.  Pass user-supplied LIBS\n\tto the linker.\n\n2003-12-08  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* coders/jpeg.c: store JPEG quality as \"[jpeg_quality]\" attribute.\n\n2003-12-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* rungm.sh.in: New script to support executing uninstalled\n\texecutables.\n\n\t* magick/blob.c (GetConfigureBlob): New MAGICK_CONFIGURE_PATH\n\tenvironment variable allows the user to specify the search path\n\tfor configuration (.mgk) files.\n\n2003-12-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* index.html: Added a table showing current stable release and\n\tdevelopment version.\n\n2003-12-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* doc/options.imdoc (use): Describe the syntax of the -process\n\targument.\n\n\t* acinclude.m4 (AC_CHECK_CC_OPT): Add quoting in AC_CHECK_CC_OPT\n\tdefinition.  Change suggested by Patrick Welche\n\n2003-12-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/magick.c (GetMagickInfo): Fix preprocessing logic error\n\twhich caused moby shared library build to not register static\n\tmodules.\n\n2003-12-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/module.c (ExecuteModuleProcess): Add some logging.\n\n\t* magick/static.c (ExecuteStaticModuleProcess): Add some logging.\n\n2003-11-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* VisualMagick/installer: Add optional build support for LZW.\n\n\t* wand/Makefile.am: Add AUTOMAKE_OPTIONS.\n\n\t* configure.ac: Update to Autoconf 2.59.\n\n2003-11-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* VisualMagick/installer/inc/tasks-install-perlmagick.isx: Update\n\tto reflect that the next release will use ActivePerl 5.8.1 Build\n\t807.\n\n\t* VisualMagick/installer/inc/files-configs.isx: Updated the source\n\tlocations for the .mgk files.  Install modules.mgk into the config\n\tdirectory rather than the modules directory.\n\n\t* configure.ac: Fixes to work with latest CVS libtool.\n\n\t* libtool.m4: Update to latest CVS libtool.\n\n\t* magick/modules.c, magick/static.c (ExecuteStaticModuleProcess):\n\tFix conditional compilation logic so that \"moby\" shared library\n\tbuild works again.\n\n\t* magick/compress.c, magick/mac.c: Use existing SaveImageText and\n\tLoadImageText global constants rather than separate defines.\n\n2003-11-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Update to Autoconf 2.58.\n\n\t* Makefile.am: Update to Automake 1.7.9.\n\n2003-11-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/draw.c (DrawComposite): Base64-encoded image was not\n\tbeing deallocated. Bad memory leak.\n\n2003-11-03  Mike Chiarappa  <mikechiarappa@libero.it>\n\n\t* BCBMagick: Updated installation procedure. Please read \n\tBCBMagick/readme.txt for details.\n\t\n2003-11-03  Mike Chiarappa  <mikechiarappa@libero.it>\n\n\t* BCBMagick: Released DLL Version. Please read BCBMagick/readme.txt\n\tfor details about installation and/or use.\n\n2003-11-03  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* magick/utility.c (GetPathComponent): Added x, X, and +\n\tcharacters to list of legal characters in subimage\n\tspecifications. Required by raw RGB image reader which accepts the\n\tsyntax \"image.rgb[100x100+50+50]\". Thanks to John Cristy for\n\tcatching that one.\n\n2003-11-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/locale.c (GetLocaleMessageFromID): Fix ID range checking\n\tlogic.\n\n2003-10-30  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* coders/jpeg.c: changed to not write gray CMYK images as\n\tgrayscales. That would not be a valid optimization.\n\n\t* magick/color.c (IsGrayImage, IsMonochromeImage): Changed to\n\tnever return true for CMYK images. Separated images get wrong\n\tcolors when optimized to grayscales based on what these two\n\tfunctions return. Gray and CMYK are two different color spaces.\n\n\t* magick/nt_feature.c (NTIsMagickConflict): changed to accept\n\tcolon as part of the magick string, consistent with the way the\n\tfunction is used.\n\n\t* magick/utility.c, magick/utility.h (ExpandFilenames,\n\tGetPathComponent): Fixed filename glob expansion. Added handling\n\tof filename prefix-magick and sub-image specification to\n\tGetPathComponent. Sub-image specification takes precedence over\n\tany filename patterns.\n\n2003-10-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/static.c (ExecuteModuleProcess): Renamed from\n\tExecuteStaticModuleProcess. Only compiled if SupportMagickModules\n\tis not defined.\n\n\t* magick/type.c (GetTypeBlob): Eliminated function.\n\t(ReadTypeConfigureFile): Use GetConfigureBlob() rather than\n\tGetTypeBlob().\n\n\t* magick/module.c (GetModuleBlob): Eliminate this function since\n\tmodules.mgk is now installed under\n\t${prefix}/share/GraphicsMagick-version/config so\n\tGetConfigureBlob() may be used.\n\t(lt_dlexit, etc.) Eliminate fake libltdl function wrappers used\n\tfor the static build.\n\t(DestroyMagickModules): Added a new destroy function (simply\n\tinvokes DestroyModuleInfo()).\n\t(GetModuleList): Learn where modules live by using\n\tFindMagickModule() to locate the LOGO module rather than by using\n\tthe location of modules.mgk.  This is necessary since now\n\tmodules.mgk may be seperate from the modules.\n\t(GetModuleBlob): Eliminated function.\n\t(InitializeMagickModules): New function to safely initialize the\n\tmodule loader.\n\t(OpenModule): Added logging messages.\n\t(OpenModules): Added logging messages.\n\t(ReadModuleConfigureFile): Use GetConfigureBlob() rather than\n\tGetModuleBlob().\n\tTotally eliminated the rat's-nest of conditional code dependent on\n\tSupportMagickModules.  Now all the code in module.c is dependent\n\ton #if defined(SupportMagickModules).\n\n\t* magick/magick.c (DestroyMagick): Invoke DestroyMagickModules().\n\t(GetMagickInfo): #ifdef chunks of code which exist to support the\n\tmodules-build rather than forcing the module loader to pretend\n\tthat modules are being used when they are not. Pass module loading\n\texceptions back to the user rather than discarding them.\n\t(GetMagickInfoArray): Don't inspect the exception status since may\n\tshort-circuits the operation.  Use best-effort instead.\n\t(ListMagickInfo): Don't inspect the current exception status so\n\tthat all the modules which did load successfully will be\n\trepresented.\n\t(InitializeMagick): Invoke InitializeMagickModules().\n\n\t* magick/log.c: (GetLogBlob): Eliminated function.\n\tGetConfigureBlob() is safe to use now when configuring logging.\n\t(LogToBlob): Simplified function.  Only exists since FileToBlob()\n\tmay throw exceptions (which are logged, causing deadlock).\n\t(ReadLogConfigureFile): Use GetConfigureBlob().\n\n\t* magick/blob.c (GetConfigureBlob): Re-written to use the\n\tMagickMap interface and to support the new `lib` and `share`\n\tconfig directories.  The directory\n\t${prefix}/lib/GraphicsMagick-version/config is scanned before\n\t${prefix}/share/GraphicsMagick-version/config.\n\t(FileToBlob): Simplified implementation.\n\n\t* config/Makefile.am: New makefile to install .mgk files.\n\n\t* magick/magick_config.h.in: Added MagickLibConfigPath and\n\tMagickShareConfigPath defines.\n\n\t* configure.ac: Install configuration files (.mgk files) in\n\t${prefix}/lib/GraphicsMagick-version/config and\n\t${prefix}/share/GraphicsMagick-version/config.  Architecture\n\tindependent files to under \"share\" while architecture dependnet\n\tfiles go under \"lib\".\n\n\t* Makefile.am: Added `config` subdirectory to distribution.  All\n\t.mgk files are moved from `coders` & `magick` into this single\n\tdirectory.\n\n2003-10-21  Mike Chiarappa  <mikechiarappa@libero.it>\n\n\t* magick/studio.h: small modifications to achieve DLL\n\tcompilation of library with Borland C++ Builder.\n\n\t* coders/ps3.c (ZLIBEncode2Image): Fixed bug. Compilation\n\tfail when HasZLIB is undefined because parameters 5 and 6,\n\tare undefined.\n\t\n2003-10-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtool.m4: Updated libtool again to CVS latest version.\n\tLibtool required some fixes for building DLLs under MinGW.\n\n\t* magick/resource.c (InitializeMagickResources): Some code is\n\tconditional based on HAVE_POPEN.\n\n\t* magick/utility.c (SystemCommand): Improved conditional\n\tcompilation logic.\n\n\t* magick/blob.c (OpenBlob): Code depending on popen() is\n\tconditionally compiled based on HAVE_POPEN.  Code depending on\n\tpclose() is conditionally compiled based on HAVE_PCLOSE.\n\n\t* configure.ac: Add test for _pclose(), pclose(), _popen(), and\n\tpopen().\n\n\t* magick/locale.c (GetLocaleMessage): Add missing MagickExport.\n\t(GetLocaleMessageFromID): Add missing MagickExport.\n\n\t* VisualMagick/installer/inc/files-development.isx (Source):\n\tInclude all of the headers from the magick directory in the\n\tdevelopment package.  Including them individually is too error\n\tprone.\n\n2003-10-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* VisualMagick/magick/magick_config.h.in: Added\n\tPREFIX_MAGICK_SYMBOLS as a configuration option.\n\n\t* magick/module.c (_CoderInfo): Added register_function and\n\tunregister_function members to record the module's register and\n\tunregister function addresses.\n\t(OpenModule): Locate the module's register and unregister\n\tfunctions and save their address to the module's CoderInfo record.\n\t(UnloadModule): Invoke the module unregister function using the\n\taddress recorded by OpenModule().\n\t(TagToFunctionName): If PREFIX_MAGICK_SYMBOLS is defined, then add\n\ta \"Gm\" prefix to the register and unregister function names.\n\n\t* libtool: Updated libtool files to the latest CVS version.\n\n\t* configure.ac: Changed define name from MAGICK_SYMBOL_PREFIX to\n\tPREFIX_MAGICK_SYMBOLS since support is not available for\n\tspecifying an arbitrary prefix.\n\n2003-10-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Added --enable-symbol-prefix configure option\n\twhich prepends \"Gm\" to all GraphicsMagick library symbols using\n\tthe C pre-processor.  In the future, this may change to support\n\tspecifying an arbitrary prefix, depending on experience.\n\n\t* magick/studio.h: Include magick/symbols.h.\n\n\t* magick/api.h: Include magick/symbols.h.\n\n\t* magick/symbols.h: New header to support optionally remapping\n\tlibrary symbols.  If MAGICK_SYMBOL_PREFIX is defined, then\n\tlibrary symbols are remapped.\n\n2003-10-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/api.h: Removed inclusion of <magick/semaphore.h> since it\n\tis an implementation header.\n\n2003-10-13  Lars Skyum  <lrs@stibo.dk>\n\n\t* www/GraphicsMagick.html, www/animate.html, www/composite.html,\n\twww/conjure.html, www/convert.html, www/display.html, www/gm.html,\n\twww/identify.html, www/import.html, www/mogrify.html,\n\twww/montage.html: added documentation for \"-define\" command line\n\toption.\t\n\n\t* doc/brief_options.imdoc, doc/options.imdoc: Added documentation\n\tfor \"-define\" command line option.\n\n\t* doc/gmdocselect, doc/imdocselect: Changed \"skipform\" label in\n\tsed scripts to just \"skipf\". Solaris sed had problems with the\n\tlong(?) \"skipform\" label.\n\n2003-10-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* doc/composite.imdoc, doc/options.imdoc, doc/GraphicsMagick.imdoc:\n\tAttempted to clarify the meaning of the compose arguments and how\n\tcomposition works, as well as eliminating use of hard-coded values like\n\t255.\n\n\t* www/links.html: Added a link to Michael Still's article\n\t\"Graphics from the command line\".\n\n2003-10-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/*.c: Updated module descriptions so that they accurately\n\tdescribe the module rather than saying \"Read/Write GraphicsMagick\n\tImage Format\".\n\n\t* coders/cineon.c: Fix source module description.  Contrary to\n\topinion, ImageMagick did not invent the Cineon X image format so\n\tdescription is now \"Read/Write Cineon X Image Format.\"\n\n\t* magick/magic.mgk: Added a CINEON entry for the Cineon X image\n\tformat.\n\n\t* magick/static.c (RegisterStaticModules): Invoke\n\tRegisterCINEONImage().\n\n\t* coders/modules.mgk: Map \"CIN\" magick to CINEON module.\n\n2003-10-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* locale/C.mgk: Added message for \"UnrecognizedCommand\".\n\n\t* magick/command.c (MagickCommand): No error was reported when a\n\tsubcommand failed to be matched so `gm foo` would silently return.\n\tNow an error message is properly reported.\n\n2003-10-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.am: Updated to Automake 1.7.8.\n\n\t* various: Edits to eliminate minor issues detected by SGI C compiler.\n\n\t* coders/ps3.c (WritePS3Image): Variable `value` was set but never\n\tused so it is removed.\n\n\t* magick/image.c (RGBTransformPacket): Removed inline request\n\tsince this function is too big to inline.\n\n\t* magick/animate.c (XAnimateBackgroundImage): Fixed a GCC 3.X\n\t\"type pinning\" warning.\n\n\t* magick/display.c (XDisplayBackgroundImage): Fixed a GCC 3.X\n\t\"type pinning\" warning.\n\n\t* magick/render.c (GetPixelOpacity): Removed inline directive.  No\n\tone in their right mind could ever imagine this function inlining\n\tsuccessfully.\t\n\n\t* magick/cache.c (IsNexusInCore): Adjusted so function inlines as\n\trequested.\n\n\t* coders/tiff.c (ReadTIFFImage): Improved logging information.\n\t(WriteTIFFImage): Changed the way the bilevel/grayscale logic\n\tworks.  Now bilevel images are treated similar to any other\n\tgrayscale image unless CCITT FAX3 or FAX4 compression is requested\n\t(which selects the MINISWHITE photometric).  The default is now to\n\twrite uncompressed bilevel images with MINISBLACK photometric.\n\n\t* PerlMagick/t/composite.t: Use some reasonable error values.\n\n\t* magick/image.c (GetImageDepth): Added special cases for\n\tcolormapped images and monochrome images in order to improve\n\tperformance.\n\n2003-10-09  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* NEWS: added info about color scaling, sampling-factor, and\n\tchanged a reference to \"-coder-options\" to \"-define\".\n\n2003-10-09  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* VisualMagick/bin/modules.mgk: added EPS3 mapping to PS3 module.\n\n\t* coders/ps3.c, coders/tiff.c, magick/command.c, magick/image.c,\n\tmagick/image.h, magick/utility.c: Changed -coder-options option to\n\t-define. Also renamed functions {Add,Remove,Access}CoderOption(s)\n\tto {Add,Remove,Access}Definition(s). Changed ps coder-specific\n\toption ps:image=imagemask to just ps:imagemask.\n\n2003-10-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/cineon.c: Imported and adapted Cineon image format coder\n\twritten by Kelly Bergougnoux <three3@users.sourceforge.net> with\n\tassistance from John Cristy.\n\n2003-10-08  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* coders/jpeg.c: Extended -sampling-factor option to allow\n\tuser to supply full set of sampling factors.  If the full\n\tset is not supplied, omitted ones are 1x1 by default, similar\n\tto the behavior of \"cjpeg -sample\".\n\n\t* magick/command.c: Accept multiple pairs of sampling factors.\n\n2003-10-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/tiff.c (WriteTIFFImage): Re-arranged logging for improved\n\toutput.  Cleaned up evaluation of SAMPLESPERPIXEL and\n\tBITSPERSAMPLE.  Provided support for the TIFF coder options\n\ttiff:samples-per-pixel and tiff:bits-per-sample for power users.\n\t(ReadTIFFImage): Colormap generation for PHOTOMETRIC_MINISBLACK\n\tand PHOTOMETRIC_MINISWHITE was inaccurate.  Seems to be accurate\n\tnow.\n\n\t* PerlMagick/t/reference/read/input.miff: Updated due to Glenn's\n\tchange to scale macros.\n\n\t* PerlMagick/t/tiff/input_gray_12bit.tiff: Replaced 12 bit image\n\twith a different one which is written by GraphicsMagick.\n\n\t* coders/ps3.c (WritePS3Image): Use AccessCoderOption().\n\n\t* magick/image.c (AccessCoderOption): Added a function to use for\n\taccessing coder-specific options.\n\n2003-10-08  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* magick/attribute.c (TraceSVGClippingPath): optimized for speed\n\tand precision in clipping mask generation by using lines to\n\tconnect Bezier curve anchor points where applicable.\n\n2003-10-07  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* Revised ScaleColor5to8 and ScaleColor6to8 macros again, to\n\tfill the low bits correctly.\n\n2003-10-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* PerlMagick/t/tiff/read.t: Added 16-color and 256 color\n\tcolormapped tests with a matte channel.\n\n\t* PerlMagick/t/tiff/write.t: Added 16-color and 256 color\n\tcolormapped tests with a matte channel.\n\n\t* coders/tiff.c (WriteTIFFImage): When using LZW compression,\n\tapply the horizontal differencing predictor to RGB truecolor and\n\tdeep gray images since the TIFF spec says that LZW compression is\n\tusually improved by using horizontal differencing with continuous\n\ttone images.\n\tRe-implemented grayscale and colormapped scanline preparation to\n\tuse the new bit-stream interface.  This is a bit slower, but very\n\tflexible, and the implementation is very compact.  Writing of a\n\tmatte (transparency) channel is now believed to be correct for all\n\tdepths.\n\n\t* magick/command.c (MogrifyImage): Only transform the colorspace\n\tif it has been set (i.e. is not UndefinedColorspace).\n\n2003-10-06  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* coders/png.c (ReadOnePNGImage): PNG decoder would exit too\n\tearly when reading image.png[0].\n\n2003-10-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* PerlMagick/t/tiff/write.t: Added TIFF write tests for 4\n\tbits-per-sample TIFF images, both with and without a transparency\n\tchannel.\n\n\t* magick/image.c (DescribeImage): Added -verbose support for\n\tdisplaying individual channel depths.\n\n2003-10-06  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* magick/image.c (SetImageInfo): cleaned up parsing of subimage\n\tspecification (image.psd[0]). It would fail sometimes due to\n\tincorrect reuse of variables. It's a bit strange the code accepts\n\tmore range syntax-variations than can be stored in ImageInfo.\n\n2003-10-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.c (ChannelImage): The OpacityChannel, MatteChannel,\n\tand BlackChannel operations set the matte channel to opaque, so\n\tset image->matte to False for those operations.\n\t(RGBTransformImage): Add an assertion to prevent passing the\n\tcolorspace argument `UndefinedColorspace`.\n\t(TransformRGBImage): Add an assertion to prevent passing an image\n\twith colorspace set to `UndefinedColorspace`.\n\n2003-10-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/log.c (LogToBlob): Since MagickSeek(file,0,SEEK_END) is\n\tused to obtain the Blob size, MagickSeek(file,0,SEEK_SET) must be\n\tused to restore the seek position.  Thanks to John Cristy for\n\tbringing this to our attention.\n\n2003-10-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/bit_stream.h: Added a bit-stream writer function.\n\n\t* PerlMagick/t/reference/read/input_tim.miff: Reference image\n\twas defective.\n\n2003-10-03  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* magick/image.c, magick/image.h: Updated AddCoderOptions to\n\taccept \"flag\" keys that have no values. They are placed in the\n\tcoder options map with an empty, zero length string value. Option\n\targument syntax is now: \"key1[=[value1]],key2[=[value2]],...\"\n\n2003-10-03  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* magick/command.c: Updated +coder-options option to not clear the\n\tentire map of coder options, but accept a list of names to remove\n\tfrom the map. Use option argument \"*\" to clear the entire map of\n\tcoder options.\n\n\t* magick/image.c, magick/image.h: Added function\n\tRemoveCoderOptions. Added cast of signed char to unsigned char and\n\tint in calls to isspace and isprint.\n\n\t* magick/utility.c: Added cast of signed char to unsigned char and\n\tint in calls to isspace and isprint. Added special handling of\n\t+coder-options option in ExpandFilenames function.\n\n2003-10-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* PerlMagick/t/reference/read/input_tim.miff: The TIM read results\n\tchanged somewhat due to Glenn's ScaleColor5to8 fix.\n\n2003-10-01  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* Revised ScaleColor5to8 and ScaleColor6to8 macros to fill in the\n\tlow bytes.\n\n\t* coders/bmp.c (ReadBMPImage): scaling of 8-8-8-8-bit images was\n\talso slightly incorrect.\n\n2003-09-30  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* coders/bmp.c (ReadBMPImage): scaling of 5-5-5-bit and 5-6-5-bit\n\timages was slightly incorrect.\n\n2003-09-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/tiff.c (ReadTIFFImage): When using the generic bit-stream\n\tmarshaller to read colormapped/gray images, the slight performance\n\timprovement from creating a special case for matte images did not\n\tjustify almost doubling the amount of code.  Therefore, the two\n\tloops are combined back into one.\n\n2003-09-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/tiff.c (ReadTIFFImage): Fixed reading grayscale TIFFs\n\tthat have a transparency channel. Now uses a generic bit-stream\n\tmarshaller to allow reading any grayscale or colormapped TIFF with\n\tany bits per sample in the range of 1 to 16.\n\n\t* magick/bit_stream.h: Added a generic implementation for\n\tmarshalling from a bit-stream into a quantum.  Still needs\n\tre-writing for best performance.\n\n\t* PerlMagick/t/tiff/read.t: Added a test case for reading 8-bit\n\tgrayscale TIFF with matte.  Corrected grayscale 12-bit read\n\tsignatures.  Added 16 color PseudoClass read test.  Added 4-bit\n\tgrayscale read test.\n\n2003-09-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/tiff.c (WriteTIFFImage): Add support for writing\n\tDirectClass grayscale images at 4 bits per sample, including those\n\twith an opacity channel.  This allows writing smaller files\n\t(half the size) when the image has 16 (or less) levels of gray.\n\tUse \"gm convert inimage.tiff -depth 4 outimage.tiff\" to quickly\n\tcreate grayscale TIFF file with 16 (or less) levels of gray.\n\n2003-09-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* NEWS: Updated NEWS file with changes since last update.\n\n\t* index.html: Added a link to the www/AUTHORS.html file, as well\n\tas text stating that GraphicsMagick is originally derived from\n\tImageMagick 5.5.2, with a link to the ImageMagick site.\n\n\t* Makefile.am: Add rules to generate www/AUTHORS.html.\n\n\t* www/AUTHORS.html: New HTML file based on the AUTHORS file in the\n\tsource package.  GraphicsMagick has many authors.\n\n2003-09-25  William Radcliffe  <billr@corbis.com>\n\t* magick/image.c: Updated DescribeImage to cleanup EXIF data display\n\tbased on work by Cristy in ImageMagick.\n\n2003-09-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/tiff.c (WriteTIFFImage): Add support for writing\n\tcolormapped TIFF images with 1, 2, & 4 bits per colormap index.\n\tThis allows writing smaller files.\n\n2003-09-24  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* coders/ps3.c: Now creates a correct %%BoundingBox for images\n\twith resolution stored as pixels per centimeter. Renamed serialize\n\tfunctions. Added comment headers where they were\n\tmissing. Reformatted code to be in alignment with GraphicsMagick\n\tstandard formatting.\n\n\t* magick/map.c: Fixed semaphore double locking problem in\n\tMagickMapCloneMap.\n\n2003-09-23  Mike Chiarappa  <mikechiarappa@libero.it>\n\n\t* BCBMagick/readme.txt : Updated compilation instructions.\n\n\t* BCBMagick/magick/libMagick.bpr : Updated project, now include map.c.\n\n\t* BCBMagick/lcms/Projects/BCB6/lcms.bpr : Updated project, now\n\tinclude cmscam02.c and cmsvirt.c.  Much thanks to Alex Dvoretsky\n\tfor bringing this problem to my attention.\n\t\n2003-09-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.h (Image): Moved private members to bottom of\n\tstructure.\n\t(_ImageInfo): Moved private members to bottom of\n\tstructure.\n\n\t* magick/Makefile.am (pkginclude_HEADERS): Don't install\n\tsemaphore.h.\n\t(noinst_HEADERS): Distribute map.h and semaphore.h.\n\n\t* magick/image.h (ImageInfo): Change coder_options member from\n\ttype `MagickMap` to type `void *`.\n\n\t* coders/png.c: include magick/semaphore.h.\n\n\t* magick/blob.c: include magick/semaphore.h.\n\n\t* magick/color.c: include magick/semaphore.h.\n\n\t* magick/constitute.c: include magick/semaphore.h.\n\n\t* magick/delegate.c: include magick/semaphore.h.\n\n\t* magick/log.c: include magick/semaphore.h.\n\n\t* magick/magic.c: include magick/semaphore.h.\n\n\t* magick/magick.c: include magick/semaphore.h.\n\n\t* magick/module.c: include magick/semaphore.h.\n\n\t* magick/semaphore.c: include magick/semaphore.h.\n\n\t* magick/stream.c: include magick/semaphore.h.\n\n\t* magick/tempfile.c: include magick/semaphore.h.\n\n\t* magick/type.c: include magick/semaphore.h.\n\n\t* magick/blob.h (_BlobInfo): Changed `Semaphore *` to `void *`.\n\n\t* magick/cache.h (_CacheInfo): Changed `Semaphore *` to `void *`.\n\n\t* magick/image.h (_Image): Changed `Semaphore *` to `void *`.\n\n\t* magick/command.c: Updated each invokation of MagickMapAddEntry()\n\tto add an exception argument.\n\n\t* tests/maptest.c: Updated to pass an exception argument to\n\tMagickMapAddEntry.\n\n\t* magick/image.c (AddCoderOptions): Added exception argument\n\tand some more error handling.\n\n\t* magick/map.c: Added formal documentation for methods.\n\t(MagickMapCloneMap): Added exception argument.\n\t(MagickMapAddEntry): Added exception argument and status.\n\n2003-09-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/emf.c: Changed NotAnEMFFile to ImproperImageHeader.\n\n\t* magick/map.h: Changed all size parmeters from type `unsigned\n\tlong` to `size_t`.\n\n\t* magick/map.c (MagickMapCopyBlob): Add new function to support\n\tcopying a Blob in a MagickMap.\n\t(MagickMapDeallocateBlob): Add new function to support\n\tdeallocating a Blob in MagickMap.\n\n2003-09-23  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* coders/ps3.c: Fixed handling the case when no -coder-options are\n\tprovided to the PS3 coder.\n\n2003-09-22  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* coders/ps3.c: Changed %%Creator version to use\n\tMagickLibVersionText, increased precision in HiResBoundingBox,\n\tadded a coder specific option for rendering bilevel images with\n\tthe PS imagemask operator indstead of the image operator.  \n\n\t* magick/command.c: Added \"-coder-options\" command line argument\n\tto all relevant command line utilities. Option argument to\n\t-coder-options is a list of comma separated key-value pairs that\n\tare saved in a MagickMap in ImageInfo for (de-)coders to use. See\n\tPS3 coder for an example that checks for: -coder-options\n\t\"ps:image=imagemask\"\n\n\t* magick/image.c, magick/image.h: Added function AddCoderOptions().\n\n\t* magick/map.c, magick/map.h: removed MS-DOS line terminators.\n\n2003-09-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tests/maptest.c (main): Test/demo program for key,value map API.\n\n\t* magick/map.c, magick/map.h: Implementation of a key,value map\n\tAPI for internal use.\n\n2003-09-19  William Radcliffe  <billr@corbis.com>\n\n\t* lcms/include/icc34.h lcms.h: Added back the icc34.h header and\n\tchanges to make lcms compile on Win32\" icc34.h lcms.h.\n\n2003-09-19  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* coders/ps3.c: Fixed warnings from Solaris compiler.\n\n2003-09-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* locale/C.mgk: Eliminated the many \"NotA\" messages since they may\n\tall be considered forms of \"ImproperImageHeader\".  It is useful to\n\tprovide the origin of such messages in case the wrong coder has\n\tbeen invoked, however, this is expensive to do via the message\n\tdatabase since it explodes the number of messages.  The exception\n\tlogging can help here.  Once the exception reports include the\n\treporting entity, it will be more clear when the software\n\tmisbehaves.\n\n\t* magick/error.h (ThrowReaderException2): Remove since no longer\n\tused.\n\t(ThrowReaderException): Simplified implementation so that\n\tThrowException is not expanded twice.\n\n\t* magick/error.h (ThrowReaderException3): Remove since never used.\n\n\t* coders/xtrn.c (ReadXTRNImage): Use ThrowReaderException rather\n\tthan ThrowReaderException2.\n\n\t* locale/C.mgk (MissingArgument) Updated to include %s so that the\n\tdescription field appears earlier in the message.\n\n\t* magick/error.c (DefaultErrorHandler): Added a hack to allow the\n\t`reason` member to include a %s so that it may specify the\n\tformating of the message.  Care should be taken to not over-use\n\tthis hack.\n\n2003-09-18  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* coders/ps3.c: Major update of the PS3 coder. Now ascii85 encodes\n\tall binary data. Many printer spoolers don't like the binary\n\tdata. The coder now creates much smaller files for bilevel, gray,\n\tand colormapped images. Compression and image type is now\n\tseparated so they may be combined independently. Any alpha channel\n\tis separated into a separate mask so it's possible to mask\n\tbilevel, gray, colormapped, rgb, and CKYK images. You may also\n\tmask a JPEG compressed PS file for instance. Clipping masks\n\tcreated from a photoshop clipping path with -clip option is\n\tconverted to a corresponding postscript clipping path.  New\n\tfunctions need comment headers.\n\n\t* magick/attribute.c: Added TracePSClippingPath for creating a\n\tpostscript clipping path from a photoshop clipping path.\n\n\t* magick/compress.c, magick/compress.h: Added write-hook based\n\tinterface to compression functions. Required for ascii encoding\n\tcompressed, binary data. The interface between blob write\n\tfunctions, compression functions, and encoding functions could\n\tbenefit from more of this work.\n\n\t* magick/image.c: ClipPathImage now stores the name of the\n\tclipping path in the mask image filename so that it is remembered\n\tand may be used for creating a postscript clipping path for\n\tpostscript output.\n\n\t* coders/modules.mgk: Added EPS3 mapping to module PS3.\n\n2003-09-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/command.c: Coalesced various \"Missing\" error reports into\n\tone \"MissingArgument\" error report in order to reduce the number\n\tof messages to be maintained.\n\n\t* locale/C.mgk: Removed almost all \"Missing\" messages.\n\n\t* magick/gm_messages.mc: Added Microsoft message compiler source\n\tfile to CVS until which time it may be generated automatically\n\tduring the build.\n\n2003-09-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* locale/Makefile: Added ability to generate gm_messages.mc\n\t(for Windows message compiler) as well as adding `clean` and\n\t`install` targets.\n\n\t* magick/delegate.h: Visual Studio .NET 2003 doesn't like\n\tthe chaining of GhostscriptVector members which share a\n\tcommon return type. Splitting the definitions solves this\n\tproblem.\n\n2003-09-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/deprecate.h (MagickSignedType): Compatibility definition\n\tto handle ImageMagick API change.\n\t(MagickUnsignedType): Compatibility definition to handle\n\tImageMagick API change. The new names are just as useless as the\n\told names, but at least they are shorter.\n\n\t* magick/command.c: Linux's sscanf has the terrible bug that it\n\timproperly handles pulling out the first floating value from the\n\tstring \"0x1\".  Instead of retrieving the value 0 and returning 1,\n\tit returns 0, probably because it rejects the string as a hex\n\tconstant. As a result, all options which used sscanf to validate\n\tthis input are now converted to use IsGeometry().\n\n2003-09-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* ltdl/ltdl.c: Update to libltdl current as of today.\n\n\t* ltmain.sh: Update to libtool current as of today.\n\n\t* configure.ac: For HPUX C++ compiler, add -AA to CXXFLAGS rather\n\tthan CXX.\n\n2003-09-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Decided that the standards conformance\n\tdefines create more problems than they solve so they are\n\tremoved.\n\tMove the large-file tests to before the libtool configuration\n\tsince the libtool configuration was causing stdlib.h to be\n\tincluded prior to the large file defines, and this causes\n\theader failure with C++ under AIX.\n\n\t* www/api/types.html: Update description of MonitorHandler.\n\n2003-09-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Set CXX to PTHREAD_CXX if necessary (and warn).\n\n\t* acinclude.m4 (ACX_PTHREAD): Add check to see if xlC_r should be\n\tused for AIX.\n\n2003-09-10  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* magick/render.c: Fixed handling of arc primitive (see IM-5.5.8).\n\n2003-09-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/log.h: It seems that test programs are using\n\tGetMagickModule so make it visible by default.\n\n\t* configure.ac: Use GM_FUNC_MMAP_FILEIO macro to test mmap.\n\n\t* acinclude.m4 (GM_FUNC_MMAP_FILEIO): New macro to test mmap's\n\tcapability to do coherent file I/O.  The AC_FUNC_MMAP macro\n\twas not testing the mmap features that GraphicsMagick uses, and\n\twas failing on a number of systems.\n\n\t* magick/blob.c (BlobMapModeToString): Only include this static\n\tfunction if HAVE_MMAP is defined.\n\n\t* coders/locale.c (WriteLOCALEImage): Fix FormatString argument\n\ttype inconsistencies.\n\n\t* wand/magick_compat.h: Change MagickExport to WandExport.\n\n\t* coders/jpeg.c, coders/locale.c, coders/meta.c, coders/miff.c,\n\tcoders/palm.c, coders/pict.c, coders/svg.c, coders/tiff.c,\n\tcoders/topol.c, magick/cache.c, magick/display.c, magick/image.c,\n\tmagick/widget.c: Removed unused values, changed storage types, or\n\tadded explicit casts, in order to reduce the number of \"REMARK\"s\n\twhen using the SGI IRIX compiler.\n\n\t* magick/render.c (DrawClipPath): Fix memory leak of\n\tclone_info->clip_path.  Problem reported by Vladimir\n\t<lvm@integrum.ru>.\n\t(DestroyDrawInfo): Remove unnecessary checks for non-null prior to\n\tinvoking MagickFreeMemory. MagickFreeMemory already checks for\n\tnon-null.\n\n\t* magick/log.h (GetCurrentFunction): Apparently Visual C++ 6.0\n\tdoes not support __FUNCTION__.  Problem reported by Vladimir\n\t<lvm@integrum.ru>.\n\n\t* wand/magick_compat.c: All functions in magick_compat.c must use\n\tWandExport rather than MagickExport. Fix recommended by Vladimir\n\t<lvm@integrum.ru>.\n\n\t* magick/constitute.c (PushImagePixels): number_pixels was always\n\tcast to a long during use, so change to store value in a long\n\tinstead.\n\t(PopImagePixels): number_pixels was always\n\tcast to a long during use, so change to store value in a long\n\tinstead.\n\n2003-09-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/psd.c: Eliminated warning regarding unused initialized\n\tvariable.\n\n\t* magick/log.c: Eliminate type warnings regarding enum assignment.\n\n\t* coders/locale.c (WriteLOCALEImage): Use UndefinedException\n\trather than 0 in severity_list terminating entry in order to avoid\n\ta type conversion warning.\n\n\t* magick/image.c (SetImageChannelDepth): Depth parameter was being\n\treturned rather than status.  Oops!\n\n\t* magick/effect.c (BlurScanline): Due to automatic casting\n\tconventions, computation was being done (at least with SGI\n\tcompiler) as type `unsigned long` rather than `long` as it should\n\thave been.\n\n\t* coders/jpeg.c, coders/meta.c, coders/miff.c, coders/msl.c,\n\tcoders/palm.c, coders/pcd.c, coders/psd.c, coders/svg.c,\n\tcoders/tiff.c, coders/xcf.c, magick/render.c, : Quench many SGI\n\tcompiler warnings regarding variables which are initialized but\n\tnever used.\n\n\t* magick/xwindow.h: Undef gravity defines so that enumerated type\n\tis used instead.\n\n2003-09-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/log.c (LogMagickEvent): Windows system logging\n\tfunctionality is not currently ported to work with Cygwin so\n\tdisable when compiling under Cygwin.\n\n\t* magick/log.c (Win32EventlogOutput): Remove spurious comma in enum.\n\n\t* wand/drawing_wand.h: Remove junk comment marker that I forgot to\n\tremove.\n\n\t* magick/studio.h: Provide prototypes for strlcpy and vsnprintf if\n\tthe system doesn't provide them in the requested compilation\n\tenvironment.\n\n\t* configure.ac: Add necessary standards compilance definitions to\n\tmagick_config.h.\n\tCheck for strlcpy and vsnprintf prototypes.\n\n\t* Makefile.am (DOCDIRS): www/api/types does not exist anymore.\n\n2003-09-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Move multithread tests prior to libtool\n\tconfiguration in case value of CC is changed.  Otherwise libtool\n\tgets confused and refuses to run.\n\n\t* acinclude.m4 (ACX_PTHREAD): If using AIX CC `xlc` use `xlc_r`\n\tfor multithread compiler.\n\n\t* coders/jpeg.c: Undef HAVE_STDLIB_H before including the\n\tjpeg headers or else we get an already defined error/warning.\n\n2003-09-04  Mike Chiarappa  <mikechiarappa@libero.it>\n\n\t* BCBMagick : Updated whole directory tree to achieve correct\n\tcompilation with Borland C++ Buider 6.0.\n\n2003-09-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.c (ClipPathImage): Remove MS-DOS line terminations\n\t(actually, extra carriage returns) which somehow crept into\n\tClipPathImage.\n\n\t* locale/C.mgk: Added message for \"PNG library is too old\".\n\n2003-09-04  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* magick/transform.c (ProfileImage): Bugfix: conditional\n\tcompilation based on LCMS being present or not now works as\n\texpected. An exception is thrown if LCMS is not present and\n\tprofile conversion is used.\n\n2003-09-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/txt.c (ReadTXTImage): Fix strlen() pointer type warning.\n\n\t* magick/image.c (TextureImage): Fixed return with no value warning.\n\n\t* magick/color.c (GetColorInfoArray): Decided that the const\n\treturn value was a bad idea.  Therefore, the return type has been\n\tmade non-const.\n\n\t* magick/magick.c (GetMagickInfoArray): Decided that the const\n\treturn value was a bad idea.  Therefore, the return type has been\n\tmade non-const.\t\n\n\t* tests/constitute.c, tests/rwblob.c, tests/rwfile.c : Define\n\tMAGICK_IMPLEMENTATION since these test programs using some internal\n\textensions.\n\n\t* configure.ac: Test C++ compiler for __func__ support.\n\n\t* magick/log.h: Added GetCurrentFunction() macro to handle\n\t__func__ support determination.  Re-wrote GetMagickModule() macro\n\tto use GetCurrentFunction().  Changes should allow compilation of\n\tMagick++ when the C compiler supports __func__ but the C++\n\tcompiler does not.\n\n\t* configure.ac: Changed from using HAS___func__ define to\n\tHAS_C__func__ since this feature may be language sensitive.\n\n\t* locale/C.mgk: Added missing JNGCompressionNotSupported message.\n\n2003-09-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/attribute.c (Generate8BIMAttribute): Fix sscanf argument\n\ttype mis-match.\n\n\t* coders/ps3.c (ZLIBEncodeImage): Fix mis-classified\n\tZipLibraryIsNotAvailable error report.\n\n\t* coders/url.c (RegisterURLImage): Only register URL format\n\tsupport if libxml2 is available.\n\n\t* coders/msl.c (RegisterMSLImage): Only register MSL format\n\tsupport if libxml2 is available.\n\n2003-09-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/histogram.c (WriteHISTOGRAMImage): Remove a useless loop.\n\n\t* coders/wpg.c: Applied patch from Fojtik Jaroslav to support\n\treading WPGs which use the EXT token.\n\n2003-08-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/color.c (HistogramToFile): Renamed static method\n\t`Histogram` to `HistogramToFile` to make it more clear what this\n\tfunction does.\n\t(GetColorHistogram): Added new function to support retrieving a\n\tcolor histogram of the image.  A color histogram contains a count\n\tof how many times each color occurs in the image.\n\n\t* magick/image.c (GetImageChannelDepth): Return an `unsigned int`\n\trather than `long`.\n\n2003-08-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* PerlMagick/Magick.xs: Add support for CopyCyan, CopyMagenta,\n\tCopyYellow, and CopyBlack, composition operators.\n\n\t* magick/composite.c (CompositeImage): Added support for\n\tCopyCyanCompositeOp, CopyMagentaCompositeOp,\n\tCopyYellowCompositeOp, and CopyBlackCompositeOp, composition\n\toperators.\n\n2003-08-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* wand/*: Updated to current ImageMagick Wand API (minus a few\n\tunimplemented functions).\n\n\t* magick/image.c (TextureImage): Add status return because Wand API\n\twants it.  Inherit is_grayscale status from texture image.\n\n\t* magick/fx.c (SolarizeImage): Add status return because Wand API\n\twants it.\n\n\t* magick/resource.c (SetMagickResourceLimit): Add status return\n\tbecause Wand API wants it.\n\n\t* magick/draw.c (DrawPeekGraphicContext): Now returns a\n\tcopy of the current DrawInfo context rather than returning\n\ta pointer into the context stack. The user must destroy\n\tthis copy using DestroyDrawInfo() once it is no longer\n\tneeded.\n\n2003-08-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* VisualMagick/filters/LIBRARY.txt: This file is necessary to\n\tincorporate analyze.c into the static build.  Without it the\n\tbuild fails.\n\n2003-08-23  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* magick/transform.c: ProfileImage updated to handle alpha\n\tchannels and grayscale images. Also optimized color profiling of\n\tcolor mapped images and fixed a few bugs in profiling of CMYK\n\timages.\n\n\t* magic/locale_c.h: added MagickExport to prototype declaration of\n\tGetLocaleMessageFromID in WriteLOCALEImage again. Please update\n\tyour locale coder.\n\t\n2003-08-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/wpg.c: Applied patch from Fojtik Jaroslav to use the\n\tGetMagicInfo() function to obtain the format of embedded images,\n\tand to provide a default WPG palette if the WPG file does not\n\tsupply a palette.\n\n2003-08-22  William Radcliffe  <billr@corbis.com>\n\n\t* magick\\gm_messages.bin locale_c.h transform.c: Fixed missing\n\tmessage problem and added support for new lcms error handler.\n\n2003-08-21  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* magick/attribute.c, magick/image.c, magick/command.c: Added\n\t\"clippath\" option for clipping named Photoshop clipping paths,\n\tincreased precision in clipping path knots, added comments, and\n\tfixed a few bugs resulting from moving TraceClippingPath function\n\tfrom ImageMagick to GraphicsMagick. Still need to update some of\n\tthe documentation.\n\n\t* magick/locale_c.h, magick/studio.h: added MagickExport to\n\tdeclaration of GetLocaleMessageFromID and moved include of\n\tmagick/locale_c.h after declaration of MagickExport. This fixes a\n\tlink error in dynamic, DLL version.\n\n\t* coders/locale.h: added MagickExport to prototype declaration of\n\tGetLocaleMessageFromID in WriteLOCALEImage.\n\n2003-08-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* PerlMagick/t/subroutines.pl (testRead): Ignore useless TIFF\n\twarning so that 12-bit TIFF test passes.\n\n\t* magick/constitute.c (ReadImage): Ensure that the reported image\n\tmagic string is that of the user-specified input file rather than\n\ta temporary file prepared by an external delegate program.\n\n\t* magick/command.c (ImportImageCommand): Since\n\tDestroyExceptionInfo() now sets the destroyed exception signature\n\tto an invalid value, GetExceptionInfo(exception) must be invoked\n\twhen the intention is to simply purge the exception.  This fix\n\tresolves an abort when executing `gm import`.\n\n2003-08-18  William Radcliffe  <billr@corbis.com>\n\n\t* magick\\gm_messages.bin locale_c.h transform.c: Updates that\n\tadd latest enhancments by Lars to color management code in\n\tProfileImage.\n\n2003-08-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/wpg.c: Incorporated patch from Fojtik Jaroslav to support\n\trendering embedded WMFs.\n\n2003-08-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.c (SetImageChannelDepth): New function to transform\n\tthe specified channel so it fits the specified modulus depth.\n\n\t* magick/blob.c (BlobToImage): Skip calling SetImageInfo() if\n\tmagick is already set.\n\n2003-08-18  William Radcliffe  <billr@corbis.com>\n\n\t* PerlMagick/Magick.xs: Some fixes to get PerlMagick compiling\n\tagain due to new ID based error macros.\n\n2003-08-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/error.h (enum): Remove spurious comma.\n\n2003-08-17  William Radcliffe  <billr@corbis.com>\n\n\t* coders\\png.c: Had to modify a few exception calls to work with\n\tnewest macros.\n\n2003-08-17  William Radcliffe  <billr@corbis.com>\n\n\t* coders\\locale.c magick/error.h locale.c locale_c.h studio.h:\n\tThe LOCALEH header file generator now adds an MGK_ prefiix to\n\tall the ID defines as part of a fix to support the new error\n\tand exception macros cross platform.\n\n2003-08-16  William Radcliffe  <billr@corbis.com>\n\n\t* wand\\magick_wand.c pixel_wand.c: The wand api code was totally\n\tleft out of the large macro conversion below as an oversight.\n\n2003-08-15  William Radcliffe  <billr@corbis.com>\n\n\t* .\\coders art.c avi.c avs.c bmp.c caption.c clipboard.c cmyk.c\n\tcut.c dcm.c dib.c dps.c dpx.c emf.c ept.c fax.c fits.c fpx.c gif.c\n\tgradient.c gray.c hdf.c histogram.c html.c icon.c jbig.c jp2.c\n\tjpeg.c label.c locale.c logo.c map.c mat.c matte.c meta.c miff.c\n\tmono.c mpc.c mpeg.c msl.c mtv.c mvg.c null.c otb.c palm.c pcd.c\n\tpcl.c pcx.c pdb.c pdf.c pict.c pix.c png.c pnm.c preview.c ps.c\n\tps2.c ps3.c psd.c pwp.c rgb.c rla.c rle.c sct.c sfw.c sgi.c\n\tstegano.c sun.c svg.c tga.c tiff.c tile.c tim.c topol.c ttf.c txt.c\n\tuil.c url.c uyvy.c vicar.c vid.c viff.c wbmp.c wmf.c wpg.c x.c xbm.c\n\txc.c xcf.c xpm.c xtrn.c xwd.c yuv.c .\\magick\\animate.c annotate.c\n\tblob.c cache.c cache_view.c color.c color.h command.c compress.c\n\tconstitute.c decorate.c delegate.c display.c draw.c effect.c\n\tenhance.c error.c error.h fx.c gm_messages.bin image.c list.c\n\tlocale.c locale_c.h log.c mac.c magic.c magick.c module.c montage.c\n\tnt_feature.c paint.c quantize.c registry.c render.c resize.c\n\tsegment.c semaphore.c shear.c signature.c static.c static.h\n\tstream.c studio.h tempfile.h transform.c type.c utility.c widget.c\n\txwindow.c : Changes to support ID based message access and checking\n\tall message usages. The main thing that was done was to remove all\n\tthe quotes around the \"tags\" used to lookup messages defined in\n\tthe locale\\C.XML file. Macros were added to error.h to allow the\n\tcode to be compiled for either string based access or binary ID\n\tbased access. Using binary ID's will cause the code to fail to\n\tcompile if a message does not exist in C.XML, since no ID will be\n\tcreated for a missing message. This change then allowed us to\n\teasily track down all the messages that were \"missing\" or not\n\tbeing accessed properly. The problems were massive and took many\n\tdays to resolve. I have left the code compiling in ID mode to keep\n\tthings in sync going forward and also because it makes message\n\tlookup instantaneous. An ID is just an index into and array of\n\tchar *'s. There is still a lot of cleanup work remaining, but this\n\tis a very good start. \n\n2003-08-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/error.c (GetLocaleExceptionMessage): Add check to avoid\n\tduplicating severity prefix.\n\n\t* magick/log.c (LogMagickEvent): Incorporated fix from Bill\n\tRadcliffe to enable logging control flags to work properly again.\n\n\t* NEWS: Updated news.\n\n\t* magick/blob.c (OpenBlob): Rewind file descriptor so that first\n\tread is at zero offset. This fixes reading GIFs via a\n\tuser-provided file handle.\n\n2003-08-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.c (GetImageDepth): Extend so that the actual\n\tminimum depth required to represent the image is\n\treturned. Previously only the values 8, 16, and 32 were\n\treturned. This means that a value of one is returned for a\n\tmonochrome image. Also fixed a bug in that the pixels were\n\tincremented while the depth was incremented, resulting in the\n\tfirst image pixels not being properly evaluated for depth.\n\t(SetImageDepth): Extend to support converting the image to\n\tarbitrary modulus depths.\n\t(GetImageChannelDepth): New function to obtain the modulus depth\n\tfor a specified image channel.\n\n2003-08-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/draw.c (MvgAutoWrapPrintf): StreamError reported when\n\tDrawError was intended.\n\n\t* coders/logo.c (ReadLOGOImage): Report FileOpenError rather than\n\tBlobError if requested image does not exist.\n\n2003-08-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/cache.c (PersistCache): If HAVE_SYSCONF and _SC_PAGE_SIZE\n\tare defined, then assume that sysconf works and don't use legacy\n\tgetpagesize() function.\n\n\t* magick/studio.h (_XOPEN_SOURCE): Should be defined as 600 in\n\torder to match _POSIX_C_SOURCE=200112L according to the Single\n\tUNIX Specification v3.  This is necessary for the vsnprintf\n\tprototype to be visible.\n\n\t* magick/attribute.c (ReadByte): Fix compilation warnings due to\n\tcasting `unsigned char *` to `char *` by changing function\n\tdefinition to accept `unsigned char *` instead.\n\n\t* magick/error.h (UndefinedException): UndefinedException should\n\tbe ExceptionType, not ExceptionBaseType.\n\n\t* magick/magick.c (IsValidFilesystemPath): Eliminate warning about\n\tunused function when UseInstalledMagick is defined.\n\n\t* magick/error.c (ThrowLoggedException): Fix improper parameters\n\tpassed to LogMagickEvent() when reason is not available.\n\n003-08-07  William Radcliffe  <billr@corbis.com>\n\n\t* magick/log.c, log.h: Added ability to log by either severity\n\tor by category of event. Made the defualt on windows to log all\n\tfatal errors, errors, and warnings to the event log. This will\n\tinclude anything generated by exceptions currently, but not any\n\tnormal \"informational\" logging.\n\n2003-08-07  William Radcliffe  <billr@corbis.com>\n\n\t* magick/log.c, log.h: Translation of event codes to mask vals\n\twas not working. Code was left out of last update. It is now in.\n\n2003-08-07  William Radcliffe  <billr@corbis.com>\n\n\t* magick/error.c: Protect against NULL string passed into the\n\tmessage lookup function.\n\n2003-08-07  William Radcliffe  <billr@corbis.com>\n\n\t* magick/locale.c: Switched use of IsAccessible to nonloggging\n\tversion to prevent recursive problems.\n\n2003-08-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/Makefile.am (noinst_HEADERS): Distribute locale_c.h.\n\n\t* locale/Makefile: Output locale_c.h.\n\n\t* utilities/gm.c (main): Fix typo in Unix InitializeMagick\n\tinvocation.\n\n\t* configure.ac: Use ACX_PTHREAD pthreads test macro.\n\n\t* magick/(semaphore.c,spinlock.h,studio.h): Change HasPTHREADS\n\tconditional define to HAVE_PTHREAD.\n\n\t* magick/Makefile.am (noinst_HEADERS): Include spinlock.h in\n\tdistribution.\n\n2003-08-06  William Radcliffe  <billr@corbis.com>\n\n\t* contrib\\win32\\ATL7\\ImageMagickObject/ImageMagickObject.cpp,\n\tImageMagickObject_.h, ImageMagickObject.def, ImageMagickObject.rc\n\tgm.rc: Changes to get things compiling again since all windows\n\tspecific logging support has been eliminated. The special build\n\tscript BuildImageMagickObject.cmd now compiles the message file\n\tfor resource based messages. The result is in gm_messages.bin.\n\tThe script also generates a special version of gm.exe that uses\n\tthe COM dll as a regular DLL and links to it. This is the long\n\tdesired Moby DLL build idea.\n\n\t* magick/error.c, magick/error.h, magick/log.c, magick/log.h:\n\tUpgrade of logging system to take over previous special logging\n\tcode for windows in nt_base.c. The new logic provides logging of\n\tevents to the debug api and the windows event log and also\n\tprovides a generic text file logging method.\n\n\t* magick/gm_messages.bin, magick/ImageMagick.rc: New compiled\n\tmessage file based on data in locale\\C.mgk. RC file modified to\n\tinclude this as a resource.\n\n\t* magick/locale.c, magick/locale_c.h: locale_c.h is generated by\n\tthe LOCALEH format of the locale coder. The logic in locale.c uses\n\tthe tables in the header lookup messages. On windows, all the\n\tmessages are stored as resources, while on UNIX they remain in a\n\tstring table.\n\n\t* locale/C.mgk: Removed duplicate messages and added some new\n\tdefault messages that help to create a complete set of severity\n\tstrings.\n\n\t* magick/command.c, magick/magick.c: Get rid compiler warnings.\n\n2003-08-05  William Radcliffe  <billr@corbis.com>\n\n\t* magick/command.c, magick/gm.c: Application level changes to\n\timplement the client name - filename changes. The client name can\n\tnow be anything that the application wants and has nothing to do\n\twith the saved filename of the application.\n\n\t* magick/nt_base.c, magick/nt_base.h, magick/magick.c: Ripped out\n\told nt specific debugging and logging logic. Moving to the\n\tstandard logging. New and major revisions to InitializeMagick to\n\tmake the code more maintainable, reliable, and reaable. It should\n\tbe functionally identical, but implements the new split client\n\tname and filename methododology.\n\n\t* magick/utility.c, magick/utility.h: Added a couple of new\n\troutines to support splitting the overloaded use of the client\n\tname and client filename.\n\n\t* coders/xtrn.c: Minor code cleanup\n\n2003-08-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Copyright.txt: Added missing copyright notice which is required\n\tdue to copying the rlecomp manual page into ImageMagick.\n\n\t* doc/config_files.imdoc: Started documentation for configuration\n\tfiles.\n\n\t* magick/xwindow.c (XSignalHandler): Ensure that segment_info is\n\tnon-null before attempting to use it.  Much thanks to John Cristy\n\tfor bringing this problem to our attention.\n\n2003-08-05  William Radcliffe  <billr@corbis.com>\n\n\t* coders/locale.c: Added several new formats to this coder to\n\tgenerate windows message resource format messages and also to\n\tgenerates a new header file format that will support a table based\n\tversion of the other magick/locale.c.\n\n\t* coders/xtrn.c: Minor code cleanup\n\n2003-08-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Only configure C and C++ libtool tags.\n\n\t* PerlMagick/t/reference/composite/*.miff: Added some composition\n\ttest reference images.  These reference images will serve as\n\tplaceholders until better composition tests can be figured out.\n\tIt is not clear from the documentation what some of the\n\tcomposition operators are supposed to do.\n\n2003-08-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* README.txt: Add documentation regarding using TRIO.\n\n\t* configure.ac: Test for TRIO library if vsnprintf is not\n\tavailable.\n\n\t* magick/studio.h: Remap vsnprintf to trio_vsnprintf if TRIO is\n\tavailable.\n\n\t* coders/topol.c, coders/wmf.c, magick/magick.c, magick/nt_base.c,\n\tmagick/resource.c: Use traditional C comment form in C source\n\tfiles.\n\n2003-07-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/log.h (LogEventType::AllEvents): Increase the value of\n\tAllEvents so that it spans the complete positive range of a signed\n\tinteger.\n\n\t* magick/xwindow.c, magick/xwindow.h: Incorporate patch from John\n\tCristy's ImageMagick to eliminate conditional dependence of\n\tmagick/xwindow.h on <X11/extensions/XShm.h>.\n\n\t* magick/magick_config_api.h.in: HasSharedMemory define no longer\n\tneeded.\n\n2003-07-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* www/programming.html: Update Rmagick URL.\n\n\t* GraphicsMagick.spec.in : Update according to instructions from\n\tTroy Edwards.\n\n2003-07-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* GraphicsMagick.spec.in: Replaced GraphicsMagick.spec with\n\tGraphicsMagick.spec.in, which is configured to produce\n\tGraphicsMagick.spec.\n\n\t* configure.ac: Configure GraphicsMagick.spec.\n\n2003-07-29  Troy Edwards  <vallimar@sexorcisto.net>\n\n\t* GraphicsMagick.spec: Updated to CVS build. Added the\n\tGraphicsMagickWand files to the spec.  Only try to remove the\n\tunneeded perl package files if we are using PerlMagick.\n\n2003-07-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* GraphicsMagick.spec: Added RPM spec file authored by Troy\n\tEdwards <vallimar@sexorcisto.net>.\n\n\t* NEWS: Add note regarding EXIF fix.\n\n\t* magick/attribute.c (GenerateEXIFAttribute): Look for the profile\n\tname \"EXIF\" rather than \"APP1\".\n\n2003-07-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/magick_config_api.h.in: XWindowInfo structure in\n\txwindow.h needs HasSharedMemory define.\n\n\t* magick/xwindow.c, magick/xwindow.h: Move inclusion of\n\t<X11/extensions/shape.h> to xwindow.c.\n\n\t* coders/dps.c, magick/xwindow.h: Move DPS includes to\n\tcoders/dps.c\n\n\t* coders/Makefile.am: Substituted values are also set as\n\tmake variables, so use variables rather than substitutions.\n\n\t* magick/log.c (GetLogBlob): MAGICK_HOME needs to take\n\tprecedence over the client path for the uninstalled build.\n\n\t* magick/type.c (GetTypeBlob): MAGICK_HOME needs to take\n\tprecedence over the client path for the uninstalled build.\n\n\t* magick/blob.c (GetConfigureBlob): MAGICK_HOME needs to take\n\tprecedence over the client path for the uninstalled build.\n\n\t* magick/module.c (FindMagickModule): MAGICK_HOME needs to take\n\tprecedence over the client path for the uninstalled build.\n\n2003-07-24  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n\t* magick/attribute.c (TraceClippingPath): Improvements to clipping\n\tpath parsing.\n\n2003-07-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/cache.c: Disable the Windows open() extensions when\n\tcompiling using Borland C++.\n\n\t* magick/log.c (LogMagickEvent): Unlock semaphore before\n\treturning.\n\n\t* ltdl/ltdl.h: Updated to latest CVS version.\n\n\t* ltdl/ltdl.c: Updated to latest CVS version.\n\n\t* Libtool: Updated to use latest CVS libtool.\n\n2003-07-17  Mike Chiarappa  <mikechiarappa@libero.it>\n\n\t* BCBMagick: Contributed initial Borland C++ Builder 6.0 build\n\tenvironment.\n\n2003-07-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/color.c (GetColorInfoArray): Added a function to access\n\tthe color definition list as an array.\n\t(GetColorList): Added access locks to ensure that list is not\n\tre-ordered while it is being traversed.\n\n\t* www/Magick++/Image.html: Add some more information regarding raw\n\tpixel access.\n\n2003-07-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* wand/GraphicsMagickWand.pc.in (Cflags): Remove LFS_CPPFLAGS.\n\n\t* wand/GraphicsMagickWand-config.in: Remove LFS_CPPFLAGS.\n\n\t* magick/GraphicsMagick.pc.in (Cflags): Remove LFS_CPPFLAGS.\n\n\t* magick/GraphicsMagick-config.in: Remove LFS_CPPFLAGS.\n\n\t* configure.ac: Logic for setting LFS_CPPFLAGS was incomplete.\n\n\t* coders/topol.c: Updated topol coder contributed by Jaroslav\n\tFojtik.  Topol is coming to life!\n\n2003-07-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/nt_base.h: Add a typedef for ssize_t\n\n\t* magick/deprecate.h: ExtendedSignedIntegralType and\n\tExtendedUnsignedIntegralType are now deprecated types so they are\n\tmoved to deprecate.h. Existing code which uses these types should\n\tcontinue to work.\n\n\t* magick/blob.c (MapBlob): Change `offset` parameter from type\n\toff_t to magick_off_t so that it is not LFS dependent.\n\n\t* magick/cache.c (GetPixelCacheArea): Return magick_off_t.\n\t(PersistCache): Change `offset` parameter to type magick_off_t.\n\n\t* magick/cache.h (NexusInfo): Change `length` type from\n\tExtendedSignedIntegralType to magick_off_t.\n\t(CacheInfo): Change `offset` and `length` types from\n\tExtendedSignedIntegralType to magick_off_t.\n\n\t* magick/blob.c (BlobToFile): Use ssize_t rather than\n\tExtendedSignedIntegralType for count.\n\t(TellBlob): Return magick_off_t rather than\n\tExtendedSignedIntegralType.\n\n\t* configure.ac: Check for a ssize_t type.\n\n\t* magick/blob.h (_BlobInfo): Change `offset` and `size` members\n\tfrom ExtendedSignedIntegralType to magick_off_t.\n\n\t* magick/blob.c (GetBlobSize): Return magick_off_t rather than\n\tExtendedSignedIntegralType.\n\t(SeekBlob): Accept and return magick_off_t rather than\n\tExtendedSignedIntegralType.\n\n2003-07-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/monitor.c (MagickMonitor): Change `quantum` argument from\n\ttype ExtendedSignedIntegralType to magick_int64_t. Change `span`\n\targument from ExtendedUnsignedIntegralType to magick_uint64_t.\n\n\t* magick/xwindow.c (XMagickMonitor): Change `quantum` argument from\n\ttype ExtendedSignedIntegralType to magick_int64_t. Change `span`\n\targument from ExtendedUnsignedIntegralType to magick_uint64_t.\n\n\t* magick/widget.c (XMonitorWidget): Change `quantum` argument from\n\ttype ExtendedSignedIntegralType to magick_int64_t. Change `span`\n\targument from ExtendedUnsignedIntegralType to magick_uint64_t.\n\n\t* magick/studio.h (QuantumTick): Change typecast from\n\tExtendedSignedIntegralType to magick_int64_t.\n\n\t* magick/resource.c (AcquireMagickResource): Change `size`\n\targument type from ExtendedSignedIntegralType to magick_int64_t.\n\t(LiberateMagickResource): Change `size` argument type from\n\tExtendedSignedIntegralType to magick_int64_t.\n\n\t* magick/utility.c (FormatSize): Change `size` argument type from\n\tExtendedSignedIntegralType to magick_int64_t.\n\n\t* magick/nt_base.c: Change MagickOffset to magick_off_t.\n\n\t* magick/studio.h (magick_off_t): Change MagickOffset to magick_off_t.\n\n\t* coders/topol.c: Insert dummy member into palettRAS structure\n\tsince Visual C++ doesn`t seem to handle empty structures.\n\n\t* wand/GraphicsMagickWand.pc.in (prefix): Pass LFS CPPFLAGS.\n\n\t* wand/GraphicsMagickWand-config.in: Pass LFS CPPFLAGS.\n\n\t* wand/Makefile.am: Fix include path.\n\n\t* magick/GraphicsMagick.pc.in (prefix): Pass LFS CPPFLAGS.\n\n\t* magick/magick_config_api.h.in: Pass LFS configuration options\n\tuntil the API is fixed so that it is not LFS sensitive anymore.\n\n\t* magick/GraphicsMagick-config.in: Pass LFS CPPFLAGS.\n\n\t* PerlMagick/Makefile.PL.in: Pass LFS CPPFLAGS.\n\n\t* magick/Makefile.am: Install magick_types.h.\n\n\t* magick/api.h: Include magick_types.h.\n\n\t* magick/studio.h: Include magick_types.h rather than integral_types.h.\n\t* VisualMagick/magick/magick_types.h.in: New header file (replacing\n\tintegral_types.h) to contain CPU and system-dependent primitive\n\ttypedefs.\n\n\t* magick/magick_types.h.in: New header file (replacing\n\tintegral_types.h) to contain CPU and system-dependent primitive\n\ttypedefs.\n\n\t* configure.ac: Use AC_SYS_LARGEFILE to test for large file\n\toptions. Update to determine integral typedefs for current CPU and\n\tcompiler options. Configure magick_types.h.\n\n\t* magick/attribute.c (TraceClippingPath): Apply patch from Lars\n\tRuben Skyum which fixes clipping path parsing for paths generated\n\tby Adobe software which pre-dates the Photoshop file format\n\tspecification.\n\n2003-07-08  William Radcliffe  <billr@corbis.com>\n\n\t* magick/semaphore.c: Modified the way the system handles the\n\tinitialization of Win32 critical sections to use a spin lock\n\ton WIn32 to bootstrap the initialization of all other crtical\n\tsections. This is not an issue on UNIX since static init is used.\n\n\t* magick/magic.c module.c magick.c log.c resource.c constitute.c\n\tcolor.c cache.c delegate.c registry.c type.c: Small modifications\n\twere made to eliminate the side effect of unlocking semaphores\n\tas part of the releasing procedure. This also eliminated the\n\tapparent bug of the system double locking certain semaphores.\n\tThe locked flag should now not be needed, but remains in place\n\tfor the time being as an added safegaurd.\n\n2003-07-04  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* png.c: added missing #ifdef JNG_SUPPORTED/#endif directives.\n\n2003-07-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* NEWS: Updated news to include fixes and enhancements since the\n\t1.0 release.\n\n2003-07-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/semaphore.c (UnlockSemaphoreInfo): Bugfix, modify\n\tthe `locked` flag while still under protection of the lock.\n\tThis fix is necessary for thread-safety.\n\n2003-07-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/jpeg.c (ReadJPEGImage): Conditionally copy exception.\n\n\t* wand/Makefile.am (noinst_HEADERS): Need to distribute\n\tmagick_compat.h.\n\t(EXTRA_DIST): Need to distribute GraphicsMagickWand-config.1.\n\n\t* coders/wmf.c (ipa_bmp_draw): Use CopyException.\n\t(ipa_device_begin): Use CopyException.\n\t(lite_font_map): Use CopyException.\n\t* coders/jpeg.c (ReadJPEGImage): Use CopyException.\n\t* magick/image.c (GetImageException): Use CopyException.\n\t* magick/constitute.c (WriteImages): Use CopyException.\n\t* Makefile.am (DIST_SUBDIRS): wand needs to be included in\n\tdistribution.\n\n2003-06-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/static.c (RegisterStaticModules): Invoke\n\tRegisterTOPOLImage.\n\n\t* magick/magick.h (MagickInfo): Add member usage comments.\n\n\t* magick/error.c (CatchException): Restore saved errno from\n\texception->error_number.\n\t(CopyException): Copy error_number.\n\t(DestroyExceptionInfo): Reset error_number to zero.\n\t(GetExceptionInfo): Initialize error_number to zero.\n\t(ThrowException): Save errno to exception-> error_number.\n\t(ThrowLoggedException): Save errno to exception-> error_number.\n\n\t* magick/error.h (ExceptionInfo): Borrow John Cristy's idea and\n\tadd a error_number member to ExceptionInfo to save the current\n\terrno value. Otherwise CatchException may use some random errno.\n\n\t* coders/Makefile.am: Build topol.c.\n\n\t* coders/topol.c: Added initial TOPOL X image coder which is under\n\tdevelopment by Jaroslav Fojtik. Not working yet.\n\n2003-06-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/pwp.c (ReadPWPImage): Ensure that image is initialized\n\tbefore invoking ThrowReaderException.\n\n\t* magick/image.c (CloneImage): Use CopyException.\n\n\t* magick/error.c (CopyException): Add function to support copying\n\tExceptionInfo structures.\n\n\t* magick/error.h (ExceptionInfo): Replaced recently-added `whence`\n\tmember with module, function, and line members in order to keep\n\tthe information seperate, and match the parameters used by the\n\tlogging system.\n\t(ThrowException): Log thrown exceptions.\n\n\t* magick/error.c (ThrowLoggedException): New function used to\n\tthrow an exception, while recording and logging the location\n\twhere the exception is thrown.\n\n\t* doc/options.imdoc (operation): Document TemporaryFile and\n\tException events.\n\n\t* magick/log.c (LogMagickEvent): Support logging ExceptionEvent.\n\n\t* PerlMagick/Magick.xs: Added \"Exception\" event type.\n\n\t* magick/log.h (LogEventType): Added ExceptionEvent.\n\n2003-06-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/error.c (ThrowException): Handle `whence`\n\tmember. MagickFreeMemory already checks for null pointer so don't\n\tcheck again.\n\t(DestroyExceptionInfo): Handle `whence` member. MagickFreeMemory\n\talready checks for null pointer so don't check again.\n\n\t* magick/error.h (ExceptionInfo): Add a `whence` member to support\n\tthe ability to record where the exception is was thrown.\n\n\t* VisualMagick/installer: Install Wand files.\n\n2003-06-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/blob.c (GetConfigureBlob): GetConfigureBlob should always\n\treturn a value.\n\n\t* magick/type.c (GetTypeBlob): GetTypeBlob should always return a\n\tvalue.\n\n\t* magick/log.c (GetLogBlob): GetLogBlob should always return\n\ta value.\n\n\t* magick/magick.c (GetMagickInfoArray): Fixed array memory\n\tallocation and clearing bug. Eliminate warnings.\n\n2003-06-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* VisualMagick/installer/inc/files-configs.isx: For a static\n\tbuild, install the configuration files directly into the\n\tapplication directory.\n\n\t* VisualMagick/installer/inc/uninstallrun-unregister-com.isx\n\t(Filename): Change ImageMagickObject.dll path.\n\n\t* VisualMagick/installer/inc/run-register-com.isx (Filename):\n\tChange ImageMagickObject.dll path.\n\n\t* VisualMagick/installer/inc/files-com.isx (Source): Install\n\tImageMagickObject.dll and MagickCMD.exe in the application\n\tdirectory alongside gm.exe and the CORE DLLs.\n\n\t* INSTALL-unix.txt: Add additional information regarding LZW.\n\n\t* VisualMagick/magick/magick_config.h.in: Add additional notes\n\tregarding UNISYS LZW patent.\n\n\t* PerlMagick/Magick.xs: Applied Dissolve composite operator fix\n\tobtained from from John Cristy's ImageMagick which ensures that an\n\tunused matte channel is set to Opaque, and uses this knowledge to\n\tsimplify the math.\n\n\t* VisualMagick/configure/configure.cpp: The `wand` library has a\n\tlinkage dependency on the `magick` library. Also don't include\n\tthe magick subdirectory so that headers must be included like\n\t<magick/api.h> for safety.\n\n\t* coders/xtrn.c: Fix magick header inclusion.\n\n\t* lcms\\src\\cmserr.c: Fix magick header inclusion.\n\n2003-06-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* doc/options.imdoc: Fix to formatting. Fix spelling of origin.\n\n\t* PerlMagick/t/bzlib/read.t: Add test for reading BZipped file.\n\n\t* PerlMagick/t/subroutines.pl (testRead): Skip testing reads\n\tof compressed BLOBs because reading compressed BLOBs is not\n\tsupported yet.\n\n\t* coders/bmp.c (ReadBMPImage): Only validate the file size value\n\tfor compressed BMPs.\n\n\t* VisualMagick/wand, wand: First stab at building the Wand API\n\tunder Visual C++.  Still does not build as a DLL.\n\n2003-06-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/static.h: Add prototypes for RegisterXTRNImage and\n\tUnregisterXTRNImage.\t\n\n\t* Makefile.am (DISTDIRS): Don't distribute the `guide`\n\tsubdirectory. It is available for checkout from CVS.\n\n\t* www: Utilities documentation is updated from <imdoc> masters.\n\tFormatting could be improved, but the content seems ok.\n\n\t* doc/environment.imdoc: New file to describe environment\n\tvariables.\n\n\t* coders/cut.c (ReadCUTImage): Use MagickAllocateMemory and\n\tMagickFreeMemory rather than malloc and free.\n\n\t* doc/gmdoc2html: Add GraphicsMagick styling to utility web pages.\n\n\t* doc/Makefile: Additional documentation Makefile enhancements.\n\n\t* AUTHORS: New file to acknowledge significant contributors\n\tto the software. If an author is not listed here, please let\n\tus know.\n\n\t* configure.ac: test -a is not POSIX compliant.\n\n2003-06-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* doc: Source documentation for `gm` is now available via a `doc`\n\tCVS module. A Makefile is provided which formats the\n\tdocumentation and installs it into the `www` and `utilities`\n\tsubdirectories.\n\n2003-06-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* wand: Added Magick Wand library available via\n\t-lGraphicsMagickWand and <wand/wand_api.h>. Use\n\tGraphicsMagickWand-config or GraphicsMagickWand.pc to obtain the\n\tcompilation options required to use the library. Magick Wand is\n\tauthored by John Cristy. Magick Wand is provided as a separate\n\tlibrary from -lGraphicsMagick in order to assure the stability of\n\tthe core GraphicsMagick library while allowing Magick Wand to\n\tto evolve.\n\n\t* images: Replace existing logo images with cleaner ones.\n\n\t* www: Update links to point to updated logo images.\n\n\t* logos: New CVS directory to contain master logos.\n\n\t* scripts/txt2html: Updated inline logo image link.\n\n\t* scripts/format_c_api_docs: Updated inline logo image link.\n\n\t* version.sh: Support versioning all libraries independently.\n\n\t* coders/meta.c: Prefix include paths for safety.\n\n\t* magick/image.h: (TransmitType) Removed unused enumeration.\n\t(ProfileType) Removed unused enumeration.\n\t(QuantumType) Moved enumeration to constitute.h\n\t(StorageType) Moved enumeration to constitute.h\n\n\t* magick/draw.c (DrawPeekGraphicContext): Added function to peek\n\tat head of drawing context stack (function added for ImageMagick\n\tcompatability).\n\n\t* magick/image.c (CycleColormapImage): Change return type from\n\t`void` to `unsigned int` so that error status is returned to user.\n\t(DescribeImage): Change return type from\n\t`void` to `unsigned int` so that error status is returned to user.\n\n\t* magick/list.c (ReplaceImageInList): Incorporated function from\n\tJohn Cristy's ImageMagick to replace current image in the list.\n\n\t* coders/sgi.c (ReadSGIImage): Applied patch from John Cristy's\n\tImageMagick to save the compression type for SGI images.\n\n2003-06-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/txt.c (WriteTXTImage): Apply patch from John Cristy's\n\tImageMagick to observe image depth while writing pixel colors.\n\tThis patch is not applied to the 1.0 branch because it represents\n\tan output format change which could break a dependent application.\n\t(IsTXT): Recognize files written by the TXT coder.\n\t(ReadTXTImage): Reject files written by the TXT coder until support\n\tfor reading these files is implemented.\n\t(IsTXT): Ensure that sscanf doesn't read outside of provided data\n\tby using a fixed size buffer.\n\n2003-06-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Don't add -lfpx to LIBS while configuring\n\tbecause the C compiler may fail to link with it in later\n\ttests.\n\n2003-06-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* PerlMagick/Magick.xs: RotateImage is documented to take\n\t`degrees` argument, not `degree`.  SwirlImage is documented to\n\ttake `degrees` argument, not `degree`.  SolarizeImage is\n\tdocumented to take a `threshold` argument, not `factor`.  Wave is\n\tdocumented to take `amplitude` and `wavelength` arguments.  Don't\n\ttransform colorspace to RGB when retrieving `pixel` color value.\n\tRelease memory acquired to store `length` pointer.  Picked up\n\tmemory leak fix related to `SV **reference_vector` variable from\n\tJohn Cristy's ImageMagick.\t\n\n\t* configure: Incorporate patch to handle inline better.\n\n\t* magick/utility.c (GetToken): Adjust code to avoid \"end-of-loop\n\tcode not reached\" warning.\n\n\t* magick/log.c (GetLogBlob): Eliminate warning regarding\n\tunreached code.\t\n\n\t* magick/command.c (AnimateImageCommand): Eliminate warning regarding\n\tunreached code.\t\n\t(ConvertImageCommand): Eliminate warning regarding\n\tunreached code.\t\n\t(ImportImageCommand): Eliminate warning regarding\n\tunreached code.\t\n\n\t* magick/type.c (GetTypeBlob): Eliminate warning regarding\n\tunreached code.\t\n\n\t* magick/blob.c (GetConfigureBlob): Eliminate warning regarding\n\tunreached code.\n\n\t* coders/meta.c (super_fgets): Eliminated warnings regarding\n\tcomparison and return of incompatible pointer types.\n\t(super_fgets_w): Eliminated warnings regarding\n\tcomparison and return of incompatible pointer types.\n\n\t* magick/command.c (ConvertImageCommand): Eliminate warnings\n\tnoticed when using Sun's compiler.\n\n2003-06-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* acinclude.m4: Add `#undef inline` in front of C++ tests.\n\n\t* coders/x.c (RegisterXImage): Only register the X coder if HasX11\n\tis defined.\n\n2003-06-07  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* magick/image.c (GetImageGeometry) Y was a function of width\n\tinstead of height when processing EastGravity or WestGravity\n\t(bug report from Cristy).\n\n2003-06-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/utility.c (LocaleNCompare): Documented that comparison is\n\tcase-insensitive.\n\t(LocaleCompare): Documented that comparison is case-insensitive.\n\n\t* magick/log.c (ParseEvents): LocaleNCompare already does\n\tcase-insensitive compare so lower-casing is not necessary.\n\n\t* Magick++: Updates to cause exceptions to be thrown if a bad\n\tgeometry specification is supplied.\n\n2003-06-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/log.c (ReadConfigureFile): Move event parsing to\n\tParseEvents funtion.\n\t(SetLogEventMask): Move event parsing to\n\tParseEvents funtion.\n\n\t* magick/utility.c (GetGeometry): Validate that the geometry\n\tstring only contains valid characters.\n\n\t* PerlMagick/t/subroutines.pl (testMontage): It seems that passing\n\tan empty set of options to the SetImage method corrupts the image\n\toptions (surely a PerlMagick bug), so don't invoke SetImage unless\n\tthere are options to set.\n\n2003-06-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/command.c (VersionCommand): Add build information to\n\tversion output.\n\n\t* configure.ac: Save configure/build parameters for later use in\n\tversion output.\n\n2003-06-04  William Radcliffe  <billr@corbis.com>\n\n\t* coders/meta.c: Added some casts to make things compile better.\n\n2003-06-03  William Radcliffe  <billr@corbis.com>\n\n\t* coders/meta.c: Was broken due to editing mistakes as well\n\tas inherent incompatability with MagickReallocMemory macro.\n\n2003-06-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/xpm.c (RegisterXPMImage): Module registration for PICON\n\tshould have been XPM.  Thanks to John Cristy for noticing this\n\tbug.\n\n\t* coders/psd.c (ReadPSDImage): Applied John Cristy's patch to fix\n\ta index calculation bug which is evident when QuantumDepth>8.\n\n2003-06-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/meta.c: Eliminated some compiler warnings.\n\n\t* magick/transform.c (ProfileImage): Eliminated some compiler\n\twarnings.\n\n\t* magick/static.c (RegisterStaticModules): Invoke\n\tRegisterXTRNImage if _VISUALC_ is defined.\n\n2003-06-02  William Radcliffe  <billr@corbis.com>\n\n\t* utilities/gm.c: made -format work again but had to add off flag\n\tto MagickCommand to maintain backward compatability with previous\n\tversions of GM.\n\n\t* magick/command.c: Added flag to tell MagickCommand whether GM is\n\texpected to process metadata requests. The COM object *always* does.\n\n\t* magick/transform.c: Added error handling, memory leak avoidance\n\tand performanc enhancment.\n\n2003-06-01  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* NEWS: Added Bug Fixes item with info about the JNG encoder fix.\n\n2003-06-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* NEWS: Listed significant changes (thus far) in version 1.1.\n\n\t* version.sh: Updated LIBRARY_CURRENT and LIBRARY_REVISION since\n\tsome command.c interfaces have changed, and a new interface has\n\tbeen added. The only user of these interfaces should be `gm` but\n\tit always pays to be careful.\n\n\t* utilities/gm.c (main): Use MagickCommand.\n\n\t* magick/command.c (MagickCommand): New function to provide\n\tAPI-level command access to the command functions provided by the\n\tGM utility with an interface similar to ConvertImageCommand.\n\t(AnimateImageCommand): Changed function arguments to match\n\tConvertImageCommand.\n\t(ConjureImageCommand): Changed function arguments to match\n\tConvertImageCommand.\n\t(DisplayImageCommand): Changed function arguments to match\n\tConvertImageCommand.\n\t(ImportImageCommand): Changed function arguments to match\n\tConvertImageCommand.\n\n\t* libxml/libxml2.def: Remove LIBRARY line since Visual C++ 6.0\n\tdoesn't like that the build library doesn't match the name\n\tspecified by LIBRARY.\n\n2003-05-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/magick.c (GetMagickInfoArray): Resolve thread-safety\n\tissue by accessing magick_list directly under the protection of a\n\tlock rather than using the pointer returned by GetMagickInfo.\n\tAdded error handling for insufficient memory.\n\n\t* coders/tile.c (RegisterTILEImage): Added a usage note in formats\n\tlisting.\n\n\t* coders/viff.c (RegisterVIFFImage): Module definition for \"XV\"\n\twas missing.\n\n\t* coders/ps2.c (RegisterPS2Image): Module definition for \"PS2\" was\n\tmissing.\n\n\t* coders/wmf.c (RegisterWMFImage): Added usage note in formats\n\tlisting.\n\n\t* coders/xpm.c (RegisterXPMImage): Hide PM alias for XPM in the\n\tformats listing.\n\n\t* coders/logo.c (RegisterLOGOImage): Hide registrations for\n\tGRANITE, LOGO, and NETSCAPE in the formats listing.\n\n\t* coders/jpeg.c (RegisterJPEGImage): Module definition for \"JPEG\"\n\twas missing.\n\n\t* coders/html.c (RegisterHTMLImage): Module definition for \"HTML\"\n\twas missing.\n\n\t* coders/bmp.c (RegisterBMPImage): Module names for \"BMP2\" and\n\t\"BMP3\" should be \"BMP\".\n\n2003-05-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/magick.c (GetMagickInfoArray): New function to return\n\tMagickInfo array.\n\t(ListMagickInfo): Updated to use GetMagickInfoArray.\n\t(ListModuleMap): New function to list module map to a file.\n\n\t* utilities/gm.c: Centered the file header and made note of this\n\tstupendously significant accomplishment.\n\n\t* magick/command.c: Added a `-list modulemap` option. Added plural\n\tforms of other list options for people who are are not limited to\n\tthe singular.  Also `-list font` and `-list fonts` now work for\n\tpeople who think in terms of fonts rather than type.\n\n2003-05-30  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* MNG encoder failed to set the JNG bit in the simplicity profile.\n\n\t* MNG encoder failed to write FRAM chunks when all images were JNG.\n\n\t* JNG encoder wrote the wrong alpha_sample_depth for opaque images. \n\n2003-05-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/magic.c (ReadConfigureFile): Removed bogus embedded magic\n\tdata and ensured that errors with loading magic.mgk propogate to\n\tthe top.\n\n\t* magick/constitute.c (ReadImage): When building delegate error\n\treport, handle the case where the filename is empty (such as for\n\t\"LOGO:\").\n\n\t* coders/png.c (WritePNGImage): Ensure that most severe exception\n\tis reported via exception argument.\n\t(ReadMNGImage): Ensure that most severe exception is reported via\n\texception argument.\n\n\t* magick/command.c (ConvertImageCommand): Ensure that most severe\n\texception is reported via exception argument.\n\t(CompositeImageList): Ensure that most severe exception is\n\treported via exception argument.\n\t(CompositeImageCommand): Ensure that most severe exception is\n\treported via exception argument.\n\n\t* magick/constitute.c (WriteImages): Ensure that most severe\n\texception is reported via exception argument.\n\n\t* utilities/gm.c: Centered file header because I didn't like it.\n\n\t* locale/C.mgk: Removed some defunct messages.\n\n\t* magick/blob.c (PingBlob): Report useful error message.\n\t(BlobToImage): Report sensible error message for null blob.\n\n\t* magick/utility.c (AcquireString): Change UnableToAquireString to\n\tUnableToAllocateString.\n\n\t* coders/xwd.c (ReadXWDImage): Report CorruptImage rather than\n\tCorruptXWDImage.\n\n\t* coders/xpm.c (ReadXPMImage): Report CorruptImage rather than\n\tCorruptXPMImage.\n\n\t* coders/xcf.c (load_level): Report CorruptImage rather than\n\tCorruptXCFImage.\n\n\t* coders/wbmp.c (ReadWBMPImage): Report CorruptImage rather than\n\tCorruptWBMPImage.\n\n\t* coders/pcd.c: Report CorruptImage rather than CorruptPCDImage.\n\n\t* coders/otb.c (ReadOTBImage): Report CorruptImage rather than\n\tCorruptOTBImage.\n\n\t* magick/constitute.c (ReadInlineImage): Report CorruptImage\n\trather than CorruptInlineImage.\n\n\t* coders/pdb.c (ReadPDBImage): Incorporated undocumented fix from\n\tImageMagick which obtains the image depth from the image depth\n\tattribute, and increases the packet memory allocation. Report\n\tCorruptImage rather than CorruptPDBImageFile.\n\n2003-05-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* VisualMagick/bin/modules.mgk: Add mapping from SVGZ to SVG.\n\n\t* coders/modules.mgk: Add mapping from SVGZ to SVG.\n\n\t* coders/svg.c (RegisterSVGImage): Add registration for SVGZ\n\tformat.\n\n\t* PerlMagick/t/zlib/read.t: Added test to check reading a file\n\twith .gz extension. The blob portion of the test currently fails.\n\n\t* coders/wpg.c (ReadWPGImage): Fix reading WPGs with embedded\n\tPostscript. Ensure that scene numbers are sane. Bugs remain.\n\n\t* magick/blob.c (OpenBlob): Recognize the .svgz extension as a\n\tgzipped format.  Not required in order to read .svgz files since\n\tthe blob file magic detects gzip files.\n\n\t* magick/command.c (MontageImageCommand): Wrong exception\n\tmacro was being invoked.  Steps have been taken to ensure that\n\tthis doesn't happen again.\n\t(ImportUsage): Fix spelling of `type`.\n\n\t* magick/magick.c (DestroyMagick): Decided that initialization\n\tstate should be tracked via an enum so that DestroyMagick will\n\ttake effect even if InitializeMagick has never been called.\n\n2003-05-27  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* coders/png.c: png.c would dump core when writing a grayscale\n\timage in png24 or png32 format.\n\n2003-05-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/ept.c (WriteEPTImage): Fixed writing EPT preview image and\n\tadded logging.\n\n\t* magick/enhance.c (NegateImage): If image is in CMYK colorspace,\n\tthen negate the `K` channel as well.\n\n\t* PerlMagick/Magick.xs: Fix spelling of `elevation` argument to\n\tShade method.\n\n\t* magick/image.h (ImageInfo): Added more documenting comments.\n\n\t* magick/image.c (CloneImage): Don't clone huffman ascii85\n\tencoding support structure since it is not useful outside of the\n\tcurrent image context. Cloning a structure via pointer assignment\n\tcauses a memory leak.\n\n2003-05-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/shear.c: Incorporate math tweaks obtained from\n\tImageMagick which are purported to improve accuracy when rotating\n\tand shearing using small angles. Also avoid unneccessarily\n\ttransforming CMYK images into RGB images.\n\n\t* magick/paint.c (ColorFloodfillImage): Fix hang while\n\tfloodfilling using a pattern image with color similar to the\n\tborder color.\n\n\t* coders/modules.mgk: Add missing mappings for PNG8,\n\tPNG24, and PNG32.\n\n\t* VisualMagick/bin/modules.mgk: Add missing mappings for PNG8,\n\tPNG24, and PNG32.\n\n2003-05-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/log.c (GetLogBlob): Return an error if log.mgk can not\n\tbe accessed.\n\n\t* locale/C.mgk: Added UnableToAccessLogFile.\n\n\t* magick/blob.c (GetConfigureBlob): Only return result of\n\tNTResourceToBlob if it is non-NULL.\n\n\t* magick/type.c (GetTypeBlob): Search $MAGICK_HOME for\n\ttype.mgk. Only return result of NTResourceToBlob if it is\n\tnon-NULL.\n\n\t* magick/magick.c (GetMagickInfo): Return an error if GetModuleInfo\n\treports an error.\n\n\t* magick/module.c (GetModuleInfo): Return an error if modules.txt\n\tfails to load.\n\n\t* utility.c (SubstituteString): Fixed a bug which was introduced\n\twhile updating the code to use the memory allocation macros.\n\n2003-05-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/GraphicsMagick-config.in (usage): Added example\n\tusage to the help output.\n\n\t* magick/magick.c (InitializeMagick): Added a static flag to\n\tensure that the Magick library is initialized only one time.\n\t(DestroyMagick): Ensure that Magick library resources are only\n\tdestroyed if it has previously been initialized.\n\n\t* magick/nt_base.c (DllMain): Fix contributed by Achim Domma. For\n\ta DLL build, update PATH during Magick DLL initialization to\n\tinclude the directory where the Magick core DLL resides. This\n\tallows the loadable modules to find the core DLLs, even if the\n\tcore DLLs are not already in the PATH.\n\n\t* magick/image.c (TextureImage): Incorporate new implementation\n\tauthored by John Cristy of ImageMagick Studio.  This\n\timplementation is a full 7X (run-time) or 14X (user-time) faster\n\tthan the original ImageMagick implementation, and is about 2X\n\tfaster than the speeded-up version I commited on the 19th.\n\n2003-05-20  William Radcliffe  <billr@corbis.com>\n\n\t* VisualMagick\\configure : Fixed bug with add on (plug-ins) not\n\tbuilding automatically in DLL mode.\n\n2003-05-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.c (TextureImage): Creation of tiled image textures\n\tis speeded up by 3.7X.\n\n\t* coders/tile.c (ReadTILEImage): Use TextureImage.\n\n\t* VisualMagick/bin/modules.mgk: Map \"PATTERN\" to \"LOGO\".\n\n\t* coders/modules.mgk: Map \"PATTERN\" to \"LOGO\".\n\n\t* coders/logo.c (ReadLOGOImage): Add \"PATTERN\" tiling support in\n\torder to be compatible with ImageMagick.\n\n\t* magick/image.c (SetImageInfo): Map \"MAGICK\" magick to \"IMAGE\" in\n\torder to be compatible with ImageMagick.\n\n2003-05-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* www/Copyright.html: Try to fix formatting of XFig entry.\n\n\t* www/windows.html: Update file names for 1.0.1 release.\n\n\t* index.html: Mention 1.0.1 release as latest release.\n\n\t* magick/magick_config_api.h.in: Add define for HasX11\n\tso that it is possible to use functions in the installed\n\txwindow.h\n\n\t* */*.c: Updated to use MagickAllocateMemory macro.\n\n2003-05-17  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* coders/png.c: stifled compiler warnings about uninitialized\n\tchunk and blob variables.\n\n2003-05-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/utility.h (MagickAllocateMemory): New macro to allocate\n\tmemory.\n\t(MagickFreeMemory): New macro to free memory.\n\t(MagickReallocMemory): New macro to reallocate memory.\n\n\t* */*.c,*/*.h: Updated to use MagickFreeMemory and\n\tMagickReallocMemory. Eliminated warnings when compiling with\n\tGCC 3.3 using -Wall.\n\n\t* images: The logo image was determined to have a copyright\n\tproblem so replace with blank image until a replacement is\n\tavailable.\n\n2003-05-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* VisualMagick/magick/magick_config.h.in (HAVE_SYS_TYPES_H): \n\tMoved this define back from nt_base.h since removing it was\n\tcausing some problems for Magick++.\n\n2003-05-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.c: (SetMagickInfo): Don't mask failure to\n\tread magic.mgk.\n\n\t* magick/constitute.c (ReadImage): Don't overwrite specific\n\texception info.\n\n\t* magick/nt_base.c (NTResourceToBlob): Add logging similar\n\tto that used in IsAccessible() in order to make operation\n\tmore clear.\n\n\t* magick/module.c (FindMagickModule): Removed extraneous\n\t\"Searching for module file\" log event.\n\t(GetModuleBlob): Under Windows, don't clear or overwrite\n\tan existing exception.\n\n\t* magick/nt_base.h: Imported some obscure defines from\n\tmagick\\magick_config.h.\n\n\t* VisualMagick/magick/magick_config.h.in: Improved description\n\ttext and formatting.  Moved some obscure defines to\n\tmagick/nt_base.h.\n\n\t* locale/C.mgk: Added a \"RegistryKeyLookupFailed\" error message.\n\n\t* magick/type.c (GetTypeBlob): Report registry key lookup\n\tfailures. Also ensure correct return value when an error is\n\treported.\n\n\t* magick/log.c (GetLogBlob): Report registry key lookup failures.\n\n\t* magick/delegate.c (ReadConfigureFile): Report registry key\n\tlookup failures.\t\n\n\t* magick/blob.c (GetConfigureBlob): Report registry key lookup\n\tfailures. Also ensure correct return value when an error is\n\treported.\t\n\n\t* magick/module.c (FindMagickModule): Report registry key lookup\n\tfailures. Also ensure correct return value when an error is\n\treported.\n\n\t* magick/nt_base.c (NTRegistryKeyLookup): Simplify base key lookup\n\tcode, and improve coding style.\t\n\n\t* coders/logo.c, Copyright.txt, www/Copyright.html: Acknowledge\n\tand respect the XFig copyright.\n\n\t* VisualMagick/installer/inc/files-documentation.isx: QuickStart.txt\n\tis no longer distributed so it is removed.\n\n2003-05-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.h (RoundToQuantum): New macro to round positive\n\tdouble to Quantum.\n\n\t* magick/xwindow.c, magick/xwindow.h, magick/studio.h: Use FreeBSD\n\tportability fixes from FreeBSD ports collection.\n\n\t* configure.ac: Test for <machine/param.h> as used by some *BSD systems.\n\n\t* QuickStart.txt, www/QuickStart.html: Don't distribute QuickStart.txt or\n\twww/QuickStart.html since the content doesn't currently apply to\n\tGraphicsMagick.\n\n2003-05-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* README.txt: Added text regarding where to obtain dcraw, a simple\n\tbut useful decoder for the proprietary raw file formats produced\n\tby digital cameras (58 supported cameras!).\n\n\t* configure.ac: Added support for finding dcraw.\n\n\t* VisualMagick/bin/delegates.mgk: Added support for dcraw.\n\n\t* coders/delegates.mgk.in: Added support for dcraw.\n\n\t* version.sh (PACKAGE_RELEASE_DATE): Extract the most recent\n\tupdate date from the ChangeLog file using awk.\n\n2003-05-12  William Radcliffe  <billr@corbis.com>\n\n\t* modules.mgk, magic.mgk : Sync up both of these for UNIX\n\tas well as VisualMagick builds. Includes changes for the\n\tmeta.c code.\n\n2003-05-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* www/formats.html: Documented embedded gray intensity images.\n\n\t* coders/logo.c: Added the embedded dithered gray intensity images\n\tgray0, gray5, ..., through gray100 to support bilevel filling and\n\tpainting with an intensity resolution of 5%.\n\n\t* www/formats.html: Added description of images available via\n\t\"IMAGE:\" format tag, as well as providing a tiled preview.\n\n\t* coders/logo.c: Renamed \"transparent\" image to \"checkerboard\"\n\tsince it is a better description.  Added a set of tiny bilevel\n\timages (accessed via IMAGE:) for use when tiling, filling, or for\n\tuse as a texture image.  The complete set of image names available\n\tvia the IMAGE: coder are now BRICKS, CIRCLES, CROSSHATCH,\n\tCROSSHATCH30, CROSSHATCH45, FISHSCALES, GRANITE, HEXAGONS,\n\tHORIZONTAL, HORIZONTALSAW, HS_BDIAGONAL, HS_CROSS, HS_DIAGCROSS,\n\tHS_FDIAGONAL, HS_HORIZONTAL, HS_VERTICAL, LEFT30, LEFT45,\n\tLEFTSHINGLE, LOGO, NETSCAPE, OCTAGONS, RIGHT30, RIGHT45,\n\tRIGHTSHINGLE, ROSE, SMALLFISHSCALES, CHECKERBOARD, VERTICAL,\n\tVERTICALBRICKS, VERTICALLEFTSHINGLE, VERTICALRIGHTSHINGLE, &\n\tVERTICALSAW.  The HS_* variants are similar to the standard\n\tpattern images provided with the Windows GDI.\n\n\t* coders/msl.c (MSLStartElement): Don't reset gravity if the user\n\tprovides an x,y coordinate. Passing coodinates was loosing the\n\tgravity setting.\n\n2003-05-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/modules.mgk: Support the IMAGE: format via the LOGO\n\tmodule.\n\t* win2k/IMDisplay/IMDisplayView.cpp (DoDisplayImage):\n\tTransparent tile is created by reading \"tile:image:transparent\".\n\t* coders/logo.c (ReadLOGOImage): Add IMAGE: format to front for\n\tembedded images so that adding new images doesn't proliferate coder\n\tregistrations. Legacy logo magick names (GRANITE, LOGO, NETSCAPE,\n\tand ROSE) are still supported, but they are also available in the\n\tIMAGE file space (e.g. IMAGE:ROSE).\n\n2003-05-09  William Radcliffe  <billr@corbis.com>\n\n\t* VisualMagick\\configure : Further refinements that support both\n\tthe new \"big\" library and the normal dynamic DLL buidling styles.\n\n2003-05-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/logo.c (ReadLOGOImage): Added a \"TRANSPARENT\" pattern\n\timage which can be tiled to form the background of transparent\n\timages.\n\n\t* win32/IMDisplay/IMDisplayView.cpp: When displaying images which\n\tinclude an opacity channel, use a checker-board pattern as the\n\timage background so non-opaque pixels become evident.\n\n2003-05-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/meta.c : Add or fix commenting of DebugString so that\n\tmodule does not require Windows.\n\n\t* lcms: Updated to release 1.10.\n\n2003-05-07  William Radcliffe  <billr@corbis.com>\n\n\t* VisualMagick\\bin : Brought the MGK files back into sync with\n\tthe rest of the package and added types for meta.c.\n\n\t* VisualMagick\\bin\\win32\\ATL : removed config files in order to\n\tprevent very old ATL project from being picked up in the config\n\n2003-05-06  William Radcliffe  <billr@corbis.com>\n\n\t* VisualMagick\\lcms\\LIBRARY.txt : a define to prevent popup message\n\tbox behaviour.\n\n\t* VisualMagick\\configure\\ : New feature - -t consolidates all the\n\tcoders into on library for the static build in order to make the\n\tbuild process tolerable.\n\n\t* coders\\xtrn.c : new support for BSTR - wdie character data\n\n\t* coders\\svg.c : put back logic that allows the -size parameter to\n\tcontrol the pixel dimensions of the output image.\n\n\t* coders\\meta.c : added support for wide character parsing of iptc\n\tand 8BIM formats.\n\n2003-05-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* version.sh : Update to reflect development status.\n\n2003-05-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* GraphicsMagick 1.0 Released.\n\n\t* version.sh (LIBRARY_REVISION): Updated for the 1.0 release.\n\n\t* magick/studio.h: Add fix to avoid problems caused by zlib\n\tunder AIX.\n\n\t* magick/cache.h: Parameterized prototypes to make them easier\n\tto follow.\n\n\t* filters/analyze.c: Replace C++ comments with C comments.\n\n\t* magick/command.c: For the composite, convert, identify, mogrify,\n\tand montage commands, make sure a usage error is returned if a\n\tusage message is printed. This is useful for ImageMagickObject\n\tusers who won't see the usage message if stdio is not supported.\n\n\t* locale/C.mgk: Added \"UsageError\" error.  Added missing closure\n\tto <Corrupt> tag which caused most/many message lookups to fail.\n\n\t* magick/nt_base.h: Fixed a compile problem caused by masking\n\tinternals in delegate.h\n\n\t* magick/ImageMagick.rc: Added missing .mgk files.\n\n2003-05-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/nt_base.c (lt_dlerror): Defining lt_dlerror to be\n\tNTGetLastError was not a correct implementation since the\n\tinterface is defined to return a const pointer to a string, but\n\tNTGetLastError returns an allocated string, causing a memory leak\n\tif NTGetLastError is used in the place of lt_dlerror.  A new\n\tlt_dlerror function is added to fix this.\n\t(lt_dlsetsearchpath): lt_dlsetsearchpath should return an int\n\tand accept a const char *.\n\t(lt_dlsym): lt_dlsym is supposed to take a const char *.\n\n\t* magick/nt_base.h: lt_dlclose should return an `int`.\n\n\t* magick/nt_base.c (lt_dlclose): Return status from lt_dlclose.\n\n\t* magick/module.c (lt_dlclose): lt_dlclose is supposed to return\n\tan `int`, not `void`. A return value of zero indicates success.\n\n\t* VisualMagick/tests/run_constitute.bat: Add batch script to\n\trun constitute tests.\n\n\t* magick/module.c: Added a ltdl_initialized static flag to track\n\tif libltdl has been initialized by lt_dlinit().\n\t(TagToFunctionName): Use a stack buffer for the string rather than\n\tallocating heap data.\n\t(UnregisterModule): Report errors via exception info as the\n\tinterface suggests.\n\t(UnloadModule): Report errors via exception info as the interface\n\tsuggests.\n\t(DestroyModuleInfo): Only invoke lt_dlexit() if lt_dlinit() has\n\tpreviously been invoked.\n\n\t* locale/C.mgk: Added FailedToCloseModule module error.\n\n\t* magick/module.c (UnloadModule): Report exception via exception\n\tparameter rather than simply printing out an error message and\n\texiting.\n\n\t* magick/Makefile.am (noinst_HEADERS): integral_types.h had to be\n\tlisted *somewhere* in order to make it into the distribution.\n\n\t* Magick++/lib/Magick++/Image.h: InitializeMagick must be DLL\n\texported.\n\n2003-05-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.am (magick-version): Perform version.isx substitutions\n\tvia Makefile.am rather than configure.\n\n\t* magick/magick_config_api.h.in: Added template header for\n\tthe installed magick_config.h.\n\n\t* magick/magick.c (InitializeMagick): Improved the signal handling\n\tand registration method. Signal handlers are only registered for a\n\tsignal if the current signal handling disposition for that signal\n\tis set to the default (SIG_DFL). When a signal is caught,\n\tDestroyMagick is invoked, the handling for the signal is set back\n\tto SIG_DFL, and then the signal is re-raised to trigger the\n\tdefault handler for that signal. This causes the process to behave\n\tas closely to the default as possible (e.g. generating a core\n\tfile) while ensuring that DestroyMagick is executed. This also\n\tensures that signal handlers registered by API users are not\n\toverridden by invoking InitializeMagick.\n\n\t* configure.ac: Added tests for sigemptyset and\n\tsigaction.\n\tAdd a check for the return type of signal handlers.\n\tTest for the `raise` function.\n\n\t* www/formats.html: Add an entry for CUR, Microsoft\n\tCursor Icon format.\n\n2003-05-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/semaphore.c (struct SemaphoreInfo): Added\n\t`locked` and `thread_id` members. These are used to record\n\tif the semaphore is locked, and to validate the thread\n\tID of the unlocker.\n\n\t* www/links.html: Added link to Nathan Day's MagickDocs\n\t\"ImageMagick and GraphicsMagick documentation project\"\n\tsite.\n\tAdded a link to an on-line article regarding the PHP front-end\n\tto ImageMagick.\n\n\t* coders/icon.c (ReadIconImage): Add support for Windows\n\t.CUR format based on advice from Jean Piquemal.\n\n\t* magick/image.c (SetImageInfo): Added missing CloseBlob\n\tin error path for failure to allocate temporary file.\n\n\t* coders/pcx.c (ReadPCXImage): Added support for reading\n\tuncompressed PCX images based on code from Jean Piquemal.\n\n2003-05-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/effect.c (AddNoiseImage): For gray images, wrong\n\tpointer was being used to evaluate intensity, leading to a\n\tblack image with noise.\n\t* magick/image.c (ChannelImage): Return the channel\n\timage in RGBColorspace. Also properly support extracting\n\tthe opacity channel for images which are not CMYK.\n\n2003-04-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/Makefile.am (install-data-local): Install\n\tmagick_config_api.h rather than magick_config.h.\n\n\t* magick/api.h: Removed inclusion of integral_types.h from\n\tmagick/api.h.  It is included by magick/studio.h.\n\n\t* magick/delegate.h: Mapped out a block of private implementation\n\tcode.\n\n\t* configure.ac: Perform substitutions on magick_config_api.h.\n\n\t* magick/magick_config_api.h.in: New header file template to\n\tuse for installed magick_config.h.\n\n\t* magick/studio.h (MAGICK_IMPLEMENTATION): Added the define\n\tMAGICK_IMPLEMENTATION used to enable private types, includes, and\n\tdefines in the headers. This supports hiding implementation stuff\n\tthat API users shouldn't see in the headers.\n\n\t* utilities/Makefile.am (check): Cleaned up the utilities\n\ttest/demo a bit as well as using the undocumented \"tmp:\" prefix to\n\tcause GraphicsMagick to remove temporary input files once they\n\thave been read.  This leaves just the final output file\n\t\"demo.miff\" when the test completes.\n\n\t* coders/jpeg.c (WriteJPEGImage): If the image resolution is\n\toverwritten with 72DPI, make sure that the resolution units are\n\tset to PixelsPerInchResolution.\t\n\n\t* coders/jpeg.c (WriteJPEGImage): Don't overwrite the image\n\tresolution if it is valid.\n\n\t* magick/command.c (MogrifyImageCommand): Added -resample\n\toption to match documentation.\n\n\t* VisualMagick/configure: Added rpcrt4.lib to project settings\n\tfor Visual C++ 6.0 so that configure links.  The code which\n\tneeds these interfaces is to support Visual C++ 7.0 XML-style\n\tproject files.\n\n2003-04-30  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* utilities/Makefile.am (check) Change % to %% in -label parameter.\n\n\t* www/gm.html, utilities/gm.1, etc. Documented use of %% to convey\n\tthe % sign in -format, -comment, -label strings.\n\n2003-04-30  William Radcliffe <billr@corbis.com>\n\n\t* magick/command.c: Changes from 2003-04-19 to free the arg\n\tlist when it was still pointed to by the option arg and accessed\n\ton an exception. This caused gm to crash on any erroneous command\n\tline argument.\n\n2003-04-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* www/windows.html: Updated to match current installer.\n\n\t* VisualMagick/installer/inc/tasks-install-devel.isx (Name): \n\tAdded an installation checkbox so the user can select to install\n\tdevelopment headers and libraries for C & C++.\n\n\t* VisualMagick/installer/inc/files-perlmagick.isx (Source):\n\tOnly install PerlMagick PPD files if the user selects to install\n\tPerlMagick.\t\n\n\t* VisualMagick/installer/inc/files-com.isx (Source): Only\n\tinstall ImageMagickObject files if the user selects to install\n\tImageMagickObject.\n\n\t* magick/version.h.in: Added some documentation for the\n\tfunctioning of MagickLibVersion and MagickLibVersionNumber.\n\n\t* configure.ac: Perform substutions to create\n\tVisualMagick/installer/inc/version.isx from\n\tVisualMagick/installer/inc/version.isx.in. This allows Windows\n\tversioning info to be updated from info in version.sh.\n\n\t* Makefile.am (magick-version): For a VPATH build, update\n\tVisualMagick/installer/inc/version.isx in the source directory if\n\tit is out of date.\n\n2003-04-28  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* magick/cache.c: CloneImagePixels(): applied Cristy's bugfix\n\tfrom IM-5.5.7.\n\n2003-04-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* www/api.html: The demo program on the ImageMagick API page is\n\tusually intended to be an exercise for the reader.  It rarely\n\tcompiles or works.  Sure enough the demo code was not even close\n\tto compiling, didn't run, and did something totally different than\n\tdescribed. This is not a good way to treat new users.  Now the\n\tdemo program compiles and runs, and its description is correct.\n\n\t* www/magick.css, www/smile.c: Remove \"Pair\" advertisement which\n\twas discovered appended at the end of these files.\n\n\t* coders/jpeg.c (ReadJPEGImage): Check for failure of\n\tAllocateImage.  Close blob prior to error return.\n\n\t* configure.ac: Perform substitutions on magick/version.h\n\n\t* magick/version.h.in: New file to provide base for configured\n\tmagick/version.h\n\n\t* version.sh (PACKAGE_RELEASE_DATE): Support setting a package\n\trelease date.\n\n\t* configure.ac: Perform substitutions on PerlMagick/Magick.pm.in to\n\tcreate PerlMagick/Magick.pm.in.\n\n\t* PerlMagick/Magick.pm.in: @PACKAGE_VERSION@ is substituted while\n\tconfiguring PerlMagick/Magick.pm.\n\n\t* magick/magic.mgk, VisualMagick/bin/magic.mgk: Removed risky\n\tentry for PICT which has been demonstrated to lead to a false\n\tmatch in the real-world.\n\n\t* coders/pict.c (ReadPICTImage): Ensure that PICT decoder don't\n\tloop forever with an EOF condition if none of the PICT op-codes\n\tencountered result in a condition which terminates the input loop.\n\tIf EOF is dectected while in the input loop a \"corrupt image\"\n\t\"unexpected end of file\" error is reported.\n\n\t* VisualMagick/installer: Updated installer.\n\n2003-04-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/magick.c, magick/blob.c, magick/studio.h: Added\n\tCompilation fixes recommended by Harold Bien for for Borland C++.\n\n\t* www/contribute.html: Added text regarding contributing to\n\tGraphicsMagick.\n\n\t* www/api/types.html: Documentation for GraphicsMagick API types\n\tmoved from www/api/types/*.html into this one file.  Types\n\tdocumentation is still very much under development.\n\n\t* README.txt: Added note regarding the download location for free\n\tWindows fonts which are kindly made available by Microsoft.\n\n\t* VisualMagick/installer/gm-dynamic-full-*.iss: Install\n\tnt_base.h and nt_feature.h.\n\n2003-04-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* www/windows.html: Updated for GraphicsMagick 1.0 and to\n\tlink to ImageMagickObject.html.\n\n\t* www/programming.html: Added link to ImageMagickObject.html.\n\n\t* www/ImageMagickObject.html: New file to provide some\n\tdocumentation for ImageMagickObject.\n\n\t* www: Found and fixed broken URL links.\n\n2003-04-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* FlashPIX: Applied patches from FreeBSD.  Bumped package\n\tversion to version to 1.2.0.8.\n\n\t* www/api.html: Updated to reflect GraphicsMagick\n\n\t* www/*.html: Updated with format_c_api_docs script.\n\n\t* Makefile.am (format_c_api_docs): Add a target to update\n\tthe C API documentation.\n\n\t* scripts/format_c_api_docs: Add script which extracts and\n\tformats the C API documentation into HTML files in the www/api\n\tsubdirectory.\n\n2003-04-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* version.sh (PACKAGE_VERSION): Update release version ID.\n\n\t* magick/version.h (MagickReleaseDate): Update release date.\n\n\t* magick/constitute.c (ConstituteImage): Fixed problems with\n\treading intensity (gray) pixel arrays.\n\n\t* magick/image.c (GrayscalePseudoClassImage): Use\n\tScaleQuantumToIndex rather than ScaleQuantumToMap.\n\n\t* magick/constitute.c (ConstituteImage): Use ScaleQuantumToIndex\n\tmacro to scale integral intensity values to colormap range.\n\n\t* magick/image.h (ScaleQuantumToIndex): New macro to scale a\n\tquantum to the maximum range of a colormap index.  Useful when\n\twriting to PsuedoClass grayscale images.\n\n\t* VisualMagick/tests/run_constitute.bat: Batch script to run\n\tconstitute tests.\n\n\t* VisualMagick/installer/*.iss: Updated for Beta1 release.\n\n2003-04-22  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* utilities/Makefile.am (check) fixed typos (RM -> RMDelegate\n\tand removed stray \"gm\"), added -random-threshold, ordered-dither.\n\n\t* magick/effect.c: Random-threshold was not treating non-gray\n\tPseudoColor images correctly.\n\n2003-04-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* utilities/Makefile.am (check): Added code to put logo on demo\n\toutput.\n\n\t* magick/command.c (MontageImageCommand): Pass exception rather\n\tthan &image->exception because image may be null, and it is\n\tpointless to store the exception where it will not be reported to\n\tthe user anyway.\n\n\t* utilities/Makefile.am (check): Ported Glenn Randers-Pehrson's\n\tutilities demo script into the Makefile to serve as a check\n\ttarget.\n\t(check): Add definition to find Generic.ttf.\n\n\t* locale/C.mgk: Fixed syntax error in <Option><FatalError>\n\tsection.\n\n\t* www/development.html: New file to describe development\n\tprocess.\n\n\t* index.html, www/*.html: Added link to development.html\n\tand improved formatting a bit.\n\n2003-04-21  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* Fixed bug with compiling png.c with libpng versions\n\tolder than libpng-0.95.\n\n2003-04-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* www/programming.html: Added links to Delphi and Scheme\n\tprogramming interfaces.\n\n\t* configure.ac : Removed outdated test for jp2conf.h.\n\n2003-04-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/command.c: Add argument expansion and deallocation code\n\tto command functions which lacked this functionality.\n\tReplace calls to Exit with a return to the invoking function.\n\n\t* utilities/gm.c: Expect each subcommand to expand and deallocate\n\tits own argument list.  Treat subcommands more similarly.\n\n\t* magick/magick.c (InitializeMagick): Seed the random number\n\tgenerator.\n\n\t* magick/utility.c (ExpandFilenames): Handle tilde expansion\n\tproperly. Handle relative glob specifications. Skip over \"*\"\n\targument to +profile properly. Don't expand VID: specifications\n\tsince the VID: coder will execute ExpandFilenames() later. Apply\n\tformat specifier prefix to globbed file names. Fix double frees\n\tand rationalize memory management by always copying to a new\n\tvector.\n\n2003-04-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/magick.c (InitializeMagick): Decided to\n\tmove clean-up signal-handler registration from gm.c\n\tto magick.c in order to ensure that resources are\n\tcleaned up for all library users. This means that\n\tif a user program wants to do something special for\n\tsignals registered to be caught by InitializeMagick\n\t(SIGHUP, SIGINT, SIGQUIT, SIGABRT, SIGTERM, SIGXCPU,\n\t& SIGXFSZ) then the user program should register its\n\town signal handlers after invoking InitializeMagick.\n\tThe user is then responsible for making sure that\n\tDestroyMagick is invoked if an unexpected signal is\n\tcaught.\n\n\t* tests/Makefile.am (check-constitute): Added\n\tconstitute tests.\n\n\t* magick/constitute.c: New test program to ensure\n\tthat ConstituteImage and DispatchImage are working\n\tcorrectly.\n\n2003-04-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* www/download.html: Added links to directories\n\tat ftp.graphicsmagick.org.\n\n\t* index.html: Add notice regarding 1.0 Beta0\n\tavailability.\n\n\t* www/cvs.html: Updated CVS checkout information to\n\tinclude the GraphicsMagick-1_0 branch.\n\n\t* coders/psd.c (ReadPSDImage): Applied patch\n\t(SourceForge patch ID 722849) from Derry Bryson to\n\tfix a memory leak. An image was being leaked.\n\n\t* magick/constitute.c (DispatchImage): Applied patch\n\t(SourceForge patch ID 722655) from Derry Bryson to\n\tcorrectly use the switch_map array rather than the\n\tmap array.  Without this patch, DispatchImage does\n\tnot work at all.\n\n\t* GraphicsMagick 1.0.0-beta0 release.\n\n\t* version.sh: Updated for beta0 release.\n\n\t* *.c magick/*.h: Update header inclusion to include\n\t\"magick/\" prefix in order to ensure that there is no\n\tconfusion with headers from another package.\n\n2003-04-16  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* magick/effect.c: 4x4 ordered dither threshold was\n\tincorrect.\n\n2003-04-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/resource.c (InitializeMagickResources):\n\tAdded the ability to obtain the amount of physical\n\tmemory by executing an external command.\n\n\t* configure.ac: Check for getpagesize().\n\t(MAGICK_PHYSICAL_MEMORY_COMMAND): Added a test for\n\tan external command which (quickly) returns the\n\tamount of physical memory installed on the machine.\n\tCurrently only activated for FreeBSD.\n\t(MAGICK_PHYSICAL_MEMORY_COMMAND): Use sysctl to\n\tdetermine total physical memory for Darwin.\n\n\t* magick/delegate.c (ListDelegateInfo): If COLUMNS\n\tenvironment variable is set, then use it to obtain\n\tthe screen width.  Some shells dynamically update\n\tCOLUMNS, but COLUMNS may need to be explicitly\n\texported in order for it to be seen by subordinate\n\tprograms (such as gm).\n\n\t* magick/effect.c (AddNoiseImage): Use IsGrayImage()\n\tto check if the image is gray.  Add missing columns\n\tloop for intensity case (oops!).\n\n\t* magick/command.c (DisplayImageCommand): Fix\n\t-dispose option processing bug reported by \n\tFelix Heimbrecht.\n\n\t* coders/fpx.c: Check status from FPX_InitSystem().\n\n2003-04-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Define PERLMAINCC to be the C compiler\n\tif there are no C++ dependencies, or the C++ compiler\n\tif there are C++ dependencies.\n\n\t* PerlMagick/Makefile.PL.in: Use PERLMAINCC to compile\n\tand link perlmain.c.  This allows using the C++ compiler\n\tto link, which is useful when the build depends on C++\n\tlibraries like libfpx.\n\n\t* ltmain.sh: Updated to libtool 1.5 release.\n\n\t* Makefile.am ($(PERLMAGICK)/$(PERLSTATICNAME)): Add\n\trules to make sure that static PerlMagick is linked\n\tagainst the current GraphicsMagick library.\n\n\t* coders/miff.c (ReadMIFFImage): Properly scale\n\tcolormap entries.\n\n\t* magick/image.c (TransformRGBImage): Eliminate 32-bit\n\tinteger overflow condition for Q:32 build while\n\ttransforming CMYK pixels.\n\n2003-04-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* PerlMagick/t/ttf/read.t: Updated signatures and\n\treference image for FreeType 2.1.4.\n\n\t* (PerlMagick/t/write.t, PerlMagick/t/montage.t,\n\tPerlMagick/t/rad/read.t, PerlMagick/t/rad/write.t):\n\tFix signatures which were thrown off by previous\n\tchange to how signatures are specified to functions\n\tin subroutines.pl.\n\n\t* PerlMagick/t/cgm/read.t: Updated to use reference\n\timage.\n\n\t* PerlMagick/Makefile.PL.in: Perform substitutions\n\ton generated Makefile to ensure that the proper\n\t-lGraphicsMagick is used for a static build.\n\n\t* ttf: Updated to FreeType 2.1.4.  Now stored in\n\tCVS as delegates/freetype2 rather than delegates/ttf\n\tso be sure to re-checkout the ttf directory so that\n\tthe correct files are used.\n\n\t* wmf/incude/libwmf/api.h: Updating FreeType caused\n\ta problem since it introduced a copy of zlib and\n\tapi.h included zlib.h.  Fixed problem by adding\n\ta typedef for gzFile and not including zlib.h.\n\n\t* utilities/gm.c: Fixed minor compilation problem\n\tunder Windows caused by a typo in the signal\n\thandler registration code.\n\n2003-04-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.am: When building a static PerlMagick,\n\tbuild PerlMagick as part of the `all` target and\n\tdon't do a `make clean` of PerlMagick at install\n\ttime.\n\n\t* configure.ac (LIB_DPS): Add check to see if -lXt\n\tis required by -ldps.  XFree86 -ldps requires -lXt.\n\n\t* FlashPIX: FlashPIX library now compiles under\n\tFreeBSD 5.0.\n\n\t* magick/deprecate.c (ValidateColormapIndex): Remove\n\tnon-interface deprecated function.\n\n\t* magick/tempfile.c (AcquireTemporaryFileDescriptor):\n\tPriortize use of mkstemp() over tempname() since *BSD\n\tcompilers whine about tempname() (although we do use\n\ttempname() safely).\n\n\t* magick/color.c (ConstrainColormapIndex): Removed\n\tfunction since it is no longer used.\n\n\t* magick/utility.c (TemporaryFilename): Removed\n\tTemporaryFilename utility function since it is\n\tno longer used and it makes *BSD compilers\n\tcomplain.\n\n\t* magick/studio.h: Don't define _ISOC99_SOURCE,\n\t_POSIX_C_SOURCE, or _XOPEN_SOURCE when compiling\n\tunder FreeBSD since this maps out a `ushort`\n\tdefinition required by /usr/include/sys/ipc.h.\n\n2003-04-11  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* coders/png.c: Some grayscale PNG images and the\n\tJNG alpha channel were decoded improperly at Q:32.\n\n\t* magick/constitute.c (PopImagePixels): Changed many\n\tinstances of (Quantum) typecast to (unsigned char).\n\n2003-04-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* PerlMagick/t/tiff/read.t: Added signature for 12-bit\n\tTIFF test and a Q:32 build.\n\n\t* PerlMagick/t/subroutines.pl: Extended routines\n\twhich are signature based to accept signatures for\n\tQ:32 as well.\n\n\t* PerlMagick/t/wmf/read.t: Relax error values slightly\n\tto pass at Q:32.\n\n\t* coders/miff.c (PushImageRLEPixels): Fix reading\n\tRLE MIFF at Q:32.  A fragment of old code was being\n\tused to obtain the length.\n\t(WriteRunlengthPacket): Fix writing RLE MIFF at Q:32.\n\tIn most cases the wrong scaling macro was being used.\n\n\t* tests/Makefile.am (check-miff): Added MIFF tests\n\tfor supported compression options.\n\n2003-04-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/color.c (QueryColorDatabase): Extended to\n\tsupport parsing Q:32 hex color specification strings.\n\tAlso add error reporting for failure to parse the\n\tcolor specification. This resolves a bug that drawing\n\tvia the draw.c APIs was not working for Q:32 builds.\n\n\t* utilities/gm.c (main): Add signal handlers to\n\tmake sure that program cleans-up on exit by invoking\n\tDestroyMagick.\n\n\t* magick/draw.c (DrawSetFillColor): Quote color\n\tspecification.\n\t(DrawSetStrokeColor): Quote color specification.\n\t(DrawSetTextUnderColor): Quote color specification.\n\n\t* ltmain.sh: Update to latest CVS libtool.\n\n2003-04-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/enhance.c (NormalizeImage): Only normalize the opacity\n\tchannel if image->matte is true. This results in some (15%)\n\tspeedup. While it can be argued that the `K` in CMYK should be\n\tnormalized, it can also be argued that this is senseless since `K`\n\tis not a \"linear\" measure like C, M, & Y are, and there may not be\n\tany any value to normalizing CMY at all.\n\t(EqualizeImage): Only equalize the opacity channel if image->matte\n\tis true.  This results in a 23% speedup.\n\t(GammaImage): Minor loop optimization.\n\t(LevelImage): Don't level the opacity channel.  Doing so doesn't\n\tmake any sense.\n\t(LevelImageChannel): Put loops inside switch statement rather than\n\taround it.\n\n\t* PerlMagick/t/tiff/read.t: Added grayscale 12-bit and 16-bit TIFF\n\tread tests.\n\n2003-04-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/tiff.c (ReadTIFFImage): Add support for reading\n\t12-bit grayscale TIFFs. Fix reading 16-bit grayscale TIFFs\n\twhen QuantumDepth=8.\n\n\t* VisualMagick/installer/gm-dynamic-full-8.iss,\n\tVisualMagick/installer/gm-dynamic-full-16.iss: Many C header\n\tfiles were not being included in the distribution.  Oops!\n\n2003-04-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* (index.html, www/*.html): Update to new web page style.\n\n\t* scripts/txt2html: Update to output new web page style.\n\n\t* ltmain.sh: Updated to latest CVS libtool.\n\n\t* magick/tempfile.c (DestroyTemporaryFiles): Function was\n\tcrashing if it was executed twice.\n\n2003-04-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/delegates.mgk.in: Ralcgm was appending \".ps\" to the\n\tprovided output file name, so change cgm delegate command so that\n\tthe input file is delivered via standard input, output is\n\tre-directed to a file, and anything printed to stderr (such as\n\tthe Ralcgm program name and version) is sent to /dev/null.\n\n\t* INSTALL-unix.txt: Added/corrected/improved documentation\n\tregarding --disable-installed, --enable-shared, and\n\t--with-modules.\n\n\t* VisualMagick/magick/magick_config.h.in: Add more documentation\n\tand explanatory notes in order to lessen confusion.\n\n\t* Many files: Replaced \"UseInstalledImageMagick\" with\n\t\"UseInstalledMagick\" for obvious reasons.\n\n2003-04-04  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* magick/command.c, utilities/gm.c: Print \"help\" screen for a\n\ttool when user types \"gm tool\" or \"gm tool -help\"\n\n\t* magick/command.c, magick/effect.c: add -ordered-dither option.\n\n2003-04-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* locale/C.mgk: Fixed message associated with\n\t\"UnableToCreateTemporaryFile\".\n\n\t* magick/tempfile.c (AcquireTemporaryFileDescriptor): Decided\n\tto return a pathname (if possible), even on failure, for use\n\tin error reports.  The function return status should be used\n\tto determine if the function has succeeded.\n\n\t* locale/locale.mgk: Updated copyright header.\n\n\t* (magick/annotate.c, magick/attribute.c, magick/blob.c,\n\tmagick/cache.c, magick/constitute.c, magick/delegate.c,\n\tmagick/display.c, magick/image.c, magick/locale.c\n\tmagick/tempfile.c, magick/tempfile.h, magick/utility.c,\n\tmagick/xwindow.c, coders/dcm.c, coders/ept.c,\n\tcoders/histogram.c, coders/mpeg.c, coders/pdf.c,\n\tcoders/pict.c, coders/preview.c, coders/ps2.c,\n\tcoders/ps3.c, coders/ps.c, coders/pwp.c, coders/sfw.c,\n\tcoders/svg.c, coders/tiff.c, coders/url.c, coders/wpg.c):\n\tEnsure that failure to allocate/create temporary file is\n\tproperly detected and reported.\n\n2003-04-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/type.c (GetTypeBlob): Prioritize hard-coded path\n\tover Windows registry values.\n\n\t* magick/log.c (GetLogBlob): Prioritize hard-coded path\n\tover Windows registry values.\n\n\t* magick/blob.c (GetConfigureBlob): Prioritize hard-coded path\n\tover Windows registry values.\n\n\t* magick/delegate.c (ReadConfigureFile): Perform substitutions\n\tfor \"@GMDelegate@\", \"@GMDisplayDelegate@\", \"@MPEGDecodeDelegate@\",\n\t\"@MPEGEncodeDelegate@\", and \"@HPGLDecodeDelegate@\" while reading\n\tdelegates.mgk under windows.\n\t(ListDelegateInfo): Format delegate command line to multiple\n\tlines if necessary rather than truncating.\n\n\t* configure.ac (MagickBinPathDefine): Added support for\n\ta MagickBinPath definition.\n\n\t* configure.ac (GSVersion): Added test to obtain version\n\tof installed Ghostcript.\n\n\t* magick/tempfile.c (AcquireTemporaryFileDescriptor): Open\n\tflag should have been O_RDWR, not O_WRONLY!\n\n2003-04-03  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* magick/utility.c: Simplified skipping over the \"*\" in\n\tthe +profile \"*\" option when expanding filenames.\n\n2003-04-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* VisualMagick/bin/delegates.mgk: Update similarly to\n\tcoders/delegates.mgk.in.\n\n\t* coders/delegates.mgk.in: Replaced `mpeg-decode` delegate\n\tspecification with `mpeg` delegate specification.\n\n\t* PerlMagick/t/mpeg/read.t: Since -r option is no longer\n\tsupplied to mpeg2decode, the signatures must be updated.\n\n\t* magick/utility.c (ExpandFilenames): Skip over no-argument\n\tcommands properly.\n\n\t* coders/mpeg.c: Removed ReadMPEGImage since this is handled\n\tentirely by delegate now.\n\n\t* magick/command.c: Add convert -temporary option for use\n\twhen input files are temporary files which should be\n\tautomatically removed.\n\n\t* magick/delegate.c (InvokeDelegate): Ensure that temporary\n\tfile access is secure.\n\n\t* coders/ept.c (ReadEPTImage): Ensure that temporary file\n\tspecified by image_info->filename is liberated before\n\tallocating a new temporary file name.\n\n\t* coders/ps.c (ReadPSImage): Ensure that temporary file\n\tspecified by image_info->filename is liberated before\n\tallocating a new temporary file name.\n\n\t* coders/pdf.c (ReadPDFImage): Change TemporaryFilename\n\tto AcquireTemporaryFileName.\n\n\t* magick/tempfile.c (LiberateTemporaryFile): Now takes\n\ta `char *` argument rather than `const char *`, and\n\terases the provided filename if it is the name of a valid\n\ttemporary file. This helps avoid errors. The return\n\tstatus may be used to determine if a file was removed.\n\t(AcquireTemporaryFileDescriptor): Decided that adding a\n\t.tmp extension to temporary file names is unnecessary.\n\n\t* coders/jp2.c (WriteJP2Image): Destroy pixel matrix\n\tafter encoding image.  Cristy says that there is memory\n\tcorruption otherwise.\n\n2003-04-01  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* coders/png.c: Use new temporary file manager for JNG components.\n\tMerge with IM 5.5.7 (mostly cosmetic changes).\n\n2003-03-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/cache.c (OpenCache): Add some Windows-specific\n\topen options.\n\n\t* magick/resource.c (InitializeMagickResources): Increase\n\tthe number of \"lowio\" file handles available for use under\n\tWindows.\n\n\t* ltdl/ltdl.c: Incorporate more Darwin fixes from CVS libtool.\n\n\t* coders/pcx.c (ReadPCXImage): Incorporate bugfix from\n\tImageMagick -- Not enough memory allocated for reading PCX\n\t(bug report by Trevor Willis).\n\n\t* magick/magick.c (InitializeMagick): Only invoke\n\tSetLogEventMask() to set debug options based on\n\tgetenv(\"MAGICK_DEBUG\") if the environment variable is set.\n\n2003-03-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/tempfile.c: Include tempfile.h rather than temporary.h\n\n\t* magick/magick.c: Include tempfile.h rather than temporary.h\n\n\t* coders/dcm.c, coders/ept.c, coders/histogram.c, coders/mpeg.c,\n\tcoders/pdf.c, coders/pict.c, coders/preview.c, coders/ps.c,\n\tcoders/ps2.c, coders/ps3.c, coders/pwp.c, coders/sfw.c,\n\tcoders/svg.c, coders/tiff.c, coders/url.c, coders/wpg.c,\n\tmagick/annotate.c, magick/attribute.c, magick/blob.c,\n\tmagick/cache.c, magick/constitute.c, magick/delegate.c,\n\tmagick/display.c, magick/image.c, magick/magick.c,\n\tmagick/utility.c, magick/xwindow.c: Updated to use new temporary\n\tfile allocation APIs.\n\n\t* magick/tempfile.c: New temporary file allocation subsystem for\n\tallocating, tracking, and deallocating temporary files.  Use of\n\tthis subsystem should reduce the likelyhood that temporary\n\tfiles will be left behind once the process exits.\n\tIf the environment variable MAGICK_TMPDIR is set, then its\n\tvalue is used as the location to place temporary files.\n\n\t* magick/utility.c (IsAccessibleAndNotEmpty): New function\n\tfor testing for file exists, is a regular file, and is not empty.\n\tUsed to test if a temporary file has been updated by a delegate.\n\n\t* magick/log.c (SetLogEventMask): Add support for setting\n\tTemporaryFileEvent.\n\n\t* PerlMagick/Magick.xs: Added TemporaryFile log event type.\n\n\t* magick/log.h (LogEventType): Add TemporaryFileEvent event\n\tclassification.\n\n2003-03-29  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* magick/resize.c (SampleImage) and magick/render.c (DrawAffineImage():\n\tApplied Cristy fix for bug that offset images to the top and left.\n\n\t* magick/resize.c (ScaleImage): Fixed bug that caused intensity\n\tlevels to be one unit too high.\n\n\t* coders/png.c: make JNG support depend on HasJPEG. Remove temp files.\n\n2003-03-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/resize.c (ResizeImage): Applied fix authored by John\n\tCristy for distortion when using the bessel filter.\n\n\t* magick/display.c: Applied fix authored by John Cristy which\n\teliminates bogging down when using the magnifier window on\n\tlarge images.\n\n\t* Several files: A few files included multiple copies of the\n\tcopyright header text due to either pilot error, or equipment\n\tfailure.\n\n2003-03-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tests/Makefile.am : Removed some debug code which was\n\taccidentally committed to CVS.\n\n\t* Copyright.txt: Add copyright statements to all the files,\n\tincluding some apparently missing copyrights.\n\n2003-03-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\t* magick/Makefile.am: Added temporary.c and temporary.h. These\n\tare not finished yet.\n\n\t* magick/cache.c: Transferred optimization from ImageMagick\n\tto read/write all requested pixel cache rows in one system\n\tcall when accessing the cache using file I/O, and the\n\trequested columns equals the image columns.\n\n\t* magick/resource.c: (ResourceInfo): Use type `double` rather\n\tthan `long double`. For many systems, the range of `long double`\n\tis the same as `double`.  On others, use of `long double` incurs\n\tthe cost of function calls since there is no hardware support.\n\n2003-03-22  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* magick/effect.h, effect.c, command.c: Revised -random-dither\n\tto require parameters: channel LOWxHIGH.  Channel can presently\n\tbe \"intensity\", \"opacity\", or \"all\".\n\n2003-03-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* ltdl/ltdl.c: Updated to latest CVS version.  Claimed to\n\tsupport loading modules under MacOS-X.\n\n\t* magick/resource.c (InitializeMagickResources): Enable code\n\tunder Windows which queries system limits.\n\n\t* magick/cache.c (S_MODE): Fixed portability problems with\n\tdefinition.\n\n\t* VisualMagick/bin/delegates.mgk: Fix typo in \"mpeg-decode\"\n\tdecode rule.\n\n\t* libtool: Update to latest CVS version.\n\n\t* configure.ac: Test zlib for gzseek and gztell.\n\n\t* magick/effect.c (ChannelThresholdImage): The is_grayscale flag\n\twas not be evaluated correctly.\n\n2003-03-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.h (RoundSignedToQuantum): Added handy\n\tRoundSignedToQuantum macro for munging doubles into Quantums.\n\n\t* magick/effect.c (ThresholdImage): Added optimizations for\n\tthresholding all pixels to white or black. Threshold using an\n\tintegral value rather than a double so compares are faster.\n\t(ChannelThresholdImage): Threshold against integral values since\n\tcompares are faster. Invoke ThresholdImage for simple thresholding\n\tacross all channels since it is faster.\n\n2003-03-19  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* coders/meta.c: #ifdef'ed out some dead code.\n\n\t* magick/annotate.c: #ifdef'ed out some code that is only\n\tused when HasTTF is defined.\n\n\t* Added RandomThresholdImage() method and -random-threshold\n\tcommandline option.\n\n2003-03-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac (LIB_TIFF): Check for TIFFReadRGBATile and TIFFReadRGBAStrip\n\tin libtiff before deciding to use it.\n\n\t* magick/blob.c (WriteBlob): Move pointer increment into\n\tparanthesis.\n\t(ReadBlob): Move pointer increment into paranthesis.\n\n\t* magick/gem.c (HSLTransform): Removed inline statement.\n\t(TransformHSL): Removed inline statement.\n\n\t* magick/random.[c|h]: Removed files from CVS.\n\n\t* magick/command.c: Don't include random.h.\n\n\t* PerlMagick/t/reference/jng: Update reference files to current output.\n\n2003-03-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Added tests for pread and pwrite functions.\n\n\t* magick/image.c (GrayscalePseudoClassImage): Properly invoke\n\tSyncImagePixels.\n\n\t* magick/cache.c (SyncCacheNexus): Add back in is_monochrome and\n\tis_grayscale flag resetting which was lost by copying over\n\tImageMagick's cache.c.\n\t(FilePositionRead): Inline wrapper for reading a chunk of data at\n\tan offset.\n\tCleans up some messy code, and makes it easy to use pread().\n\t(FilePositionWrite): Inline wrapper for writing a chunk of data at\n\tan offset.\n\tCleans up some messy code, and makes it easy to use pwrite().\n\tCache now uses pread() and pwrite() to access the cache if these\n\tcalls are available.\n\n\t* magick/resource.c (InitializeMagickResources): Support setting\n\tresource limits via the environment variables MAGICK_LIMIT_DISK,\n\tMAGICK_LIMIT_FILES, MAGICK_LIMIT_MEMORY, and MAGICK_LIMIT_MAP.\n\n2003-03-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/stream.c (AcquirePixelStream): Store total pixels in\n\t64-bit type.\n\t(SetPixelStream): Store total pixels in 64-bit type.\n\n\t* coders/tiff.c (WriteTIFFImage): CoderError should be\n\tMissingDelegateError.\n\n\t* coders/ps3.c (Huffman2DEncodeImage): CoderError should be\n\tMissingDelegateError.\n\t(WritePS3Image): CoderError should be MissingDelegateError.\n\n\t* coders/ps2.c (Huffman2DEncodeImage): CoderError should be\n\tMissingDelegateError.\n\n\t* coders/pdf.c (Huffman2DEncodeImage): CoderError should be\n\tMissingDelegateError.\n\n\t* coders/fpx.c (ReadFPXImage): CoderError should be\n\tMissingDelegateError.\n\t(WriteFPXImage): CoderError should be MissingDelegateError.\n\n\t* coders/dps.c (ReadDPSImage): CoderError should be\n\tMissingDelegateError.\n\n\t* magick/image.c (AnimateImages): DelegateError should be\n\tMissingDelegateError.\n\n\t* magick/annotate.c (RenderX11): DelegateError should be\n\tMissingDelegateError.\n\n\t* magick/image.c (DisplayImages): DelegateError should be\n\tMissingDelegateError.\n\n2003-03-17  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* magick/image.c Relocated misplaced break in ChannelImage()\n\tand sped up SetImageOpacity by avoiding blend operation when\n\tsetting the image fully opaque.\n\n2003-03-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/cache.c: Snarfed cache.c updates from ImageMagick.\n\n\t* magick/command.c: Added -list resource support.\n\n2003-03-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/Makefile.am (random.c): Removed building, packaging,\n\tand intialization of random.c functions since it is not actually\n\tused.\n\n\t* magick/semaphore.c (InitializeSemaphore): Only initialize\n\tcritical section if active_semaphore is not already true.\n\n\t* magick/resource.c: Snarf resource.c updates from ImageMagick.\n\n\t* PerlMagick/Magick.xs: Added missing log event types.\n\n\t* magick/log.h (enum): Added ResourceEvent enumeration.\n\n\t* magick/log.c (LogMagickEvent): fflush(stdout) at the end of\n\teach log.  Otherwise output may not be seen for a long time.\n\t(SetLogEventMask): Add support for \"-debug resource\".\n\n\t* coders/tiff.c (RegisterTIFFImage): Don't register encode and\n\tdecode handlers for TIFF if TIFF library is not available.\n\n\t* magick/constitute.c (WriteImage): Fix cut-n-paste error\n\tin log message (\"decoder\" --> \"encoder\").\n\n2003-03-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* index.html: Added a link to the GraphicsMagick mailing lists.\n\n\t* Magick++/demo/zoom.cpp: Added dashed option support, including\n\ta -resample option for image resampling.\n\n2003-03-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.am (DIST_SUBDIRS): Filters subdirectory needs to\n\tbe distributed.\n\n2003-03-14  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* magick/render.c Ported Cristy's bugfix to DrawAffineImage().\n\n2003-03-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.c (DestroyImage): Comment out new assertions until\n\twe are certain that there are no ill effects.\n\n\t* coders/mat.c (ReadMATImage): Set image->depth to valid values.\n\n\t* PerlMagick/Magick.xs: Update so that new DestroyImage assertions\n \taren't asserted.\n\n\t* magick/list.c (DestroyImageList): Update so that new DestroyImage\n\tassertions aren't asserted.\n\n\t* coders/wpg.c (ReadWPGImage): Don't leave dangling pointer when\n\ttrimming list. Don't set image->depth to invalid values.\n\n2003-03-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.c (DestroyImage): Add assertions to verify\n\tthat destroyed image is not currently referenced by another\n\timage.  This should help prevent accidental continued use\n\tof a destroyed image.\n\t(DestroyImage): Added assertions to enforce that images\n\tshould not continue to reference the destroyed image.\n\n\t* coders/wpg.c: Incorporated fixes from Jaroslav Fojtik.\n\n\t* version.sh (PACKAGE_VERSION_ADDENDUM): Construct a package\n\tsnapshot version based on the ChangeLog modification time.\n\tThis requires GNU find to work propery since the -printf\n\toption is used.\n\n\t* configure.ac (LIB_GS): Do not test for the Ghostscript\n\tlibrary by default due to the issue of its embedded libjpeg\n\tconflicting with libjpeg.\n\n\t* coders/ept.c (ReadEPTImage): \"PostscriptDelegateFailed\" should\n\tbe classified as a DelegateError type.\n\n2003-03-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/blob.c (BlobToFile): Truncate while opening file.\n\t(ImageToFile): Truncate while opening file.\n\n\t* magick/annotate.c (RenderFreetype): Missing freetype library\n\tshould result in a MissingDelegateError type rather than a\n\tDelegateError type.\n\n\t* INSTALL-windows.txt: Added a note regarding a workaround for\n\tinternal compiler errors while compiling image.c when using\n\tVisual C++ 7.0.\n\n\t* coders/jpeg.c (ReadICCProfile): Incorporate ImageMagick fix\n\tto handle short JPEG ICC profiles.\n\n\t* magick/integral_types.h: Ignore SIZEOF_LONG_LONG and\n\tSIZEOF_UNSIGNED_LONG_LONG defines if _VISUALC_ is defined.\n\n2003-03-11  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* www/gm.html, utilities/gm.1, guide/gm.tex: Expanded description\n\tof the -affine option.\n\n2003-03-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.c (GetImageDepth): Re-implemented using a single-pass\n\talgorithm and 1/2 the code. Previous implementation didn't return\n\tcorrect results for Q:32 build.  Now it does.\n\n\t* magick/command.c (IdentifyImageCommand): For identify, when\n\t%q format specifier is present, image must be read rather than\n\tpinged.  If not, either the value 8 is returned, or there is a\n\tcrash due to reading an uninitialized image.\n\n2003-03-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/mat.c: Incorporate fixes from Jaroslav Fojtik.  Close\n\tBlob before rotating image.\n\n\t* PerlMagick/README.txt: Update to reflect that PerlMagick is\n\tpart of GraphicsMagick.\n\n\t* PerlMagick/t/input.mat: Added test image for Matlab format.\n\n\t* PerlMagick/t/input.wpg: Added test image for WordPerfect Graphics Format.\n\n\t* utilities/Makefile.am (ALLMANPAGES): Install gm.1 rather than\n\told utility manual pages.\n\n2003-03-09  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* www/gm.html, utilities/gm.1, guide/gm.tex: First cut at\n\tmanpage for gm, to replace individual utility manpages.\n\n2003-03-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/blob.c: Fix some erroneous log printf specifications.\n\tImproved blob log messages a bit. \n\n\t* magick/log.c (IsEventLogging): Use  InitializeLogInfo().\n\t(InitializeLogInfo): New function to intelligently initialize\n\tlogging subsystem.  Only locks when initialization may be required,\n\tand only locks long enough to determine if initialization is required.\n\tThis approach should avoid deadlocking while logging from functions\n\tused to initialize logging.\n\t(IsLogAccessible): No longer need this duplicate of IsAccessible().\n\t(SetLogEventMask): Use  InitializeLogInfo().\n\n\t* coders/fpx.c (ReadFPXImage): FlashPIX library does not support\n\tBLOB I/O so don't use OpenBlob/CloseBlob.  Opening the blob caused\n\ta conflict when the FlashPIX library attempted to open the file.\n\n2003-03-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Test for libtiff functions (TIFFClientOpen &\n\tTIFFIsByteSwapped), which are required by GraphicsMagick, but\n\tnot found in older libtiff versions.\n\n\t* magick/blob.c: Added logging for Blob open/close and memory\n\tmapping operations.\n\n2003-03-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tests/rwblob.c (main): DestroyImage asserts on NULL so only\n\tcall it for non-null image.\n\n\t* tests/rwfile.c (main): DestroyImage asserts on NULL so only\n\tcall it for non-null image.\n\n2003-03-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tests/rwblob.c (main): Add -pause option to require keypress to\n\texit program. Clean-up to avoid any appearance of leaks.\n\n\t* tests/rwfile.c (main): Add -pause option to require keypress to\n\texit program. Clean-up to avoid any appearance of leaks.\n\n\t* magick/static.c (ExecuteStaticModuleProcess): Don't bind in\n\tprocess filter functions for Visual C++ since the build environment\n\tdoesn't support it yet.\n\n\t* magick/log.c (GetLogBlob) Code wasn't actually testing current\n\tdirectory for log.mgk, now it does.\n\n\t* magick/log.c (IsEventLogging): Eliminate accidental recursive, or\n\trepeated, initialization of the logging system.\n\n2003-03-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/jp2.c (WriteJP2Image): Improved -quality rate estimation\n\tfor very small files.\n\n2003-03-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/jp2.c (WriteJP2Image): Add additional logging support.\n\n\t* tests/rwblob.c: Added BLOB read/write logging.\n\n\t* tests/rwfile.c: Added file read/write logging.\n\n\t* magick/module.c (FindMagickModule): Minor code cleanup and limit\n\tdirectory and file name lengths to sensible values.\n\n\t* magick/utility.c (IsAccessible): Log test failures along with\n\ttest failure reason [strerror(errno)]. Also log test success.\n\n\t* VisualMagick/bin/delegates.mgk: -DSAFER does not work with\n\tGhostscript 8.0.\n\n\t* magick/module.c: Needed to conditionally include nt_feature.h.\n\n2003-03-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/module.c (ExecuteModuleProcess): Updated to support locating\n\tfilter modules based on search rules.\n\t(CoderInfo): Declare only in module.c since use is private to this\n\tmodule.\n\t(GetCoderInfo): Made static and commented out since currently unused.\n\t(FindMagickModule): New function to search for a module.\n\t(GetModuleBlob): Moved from blob.c, made static, and re-implemented\n\tbased on FindMagickModule.\n\n\t* magick/blob.c: Moved GetTypeBlob() to type.c and made it static.\n\tMoved GetModuleBlob() to module.c and made it static.\n\n2003-03-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/Makefile.am: MIFF module does not depend on -ljpeg, but\n\tPNG module does (for JNG).\n\n\t* filters/analyze.c (AnalyzeImage): Bugfix, image should be passed\n\tas Image** rather than Image*.\n\n\t* magick/utility.c (IsAccessible): Don't log errno if errno==0.\n\n2003-03-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/Makefile.am: Link with libFilters convenience library.\n\n\t* VisualMagick/magick/magick_config.h.in: Change MagickModulesPath\n\tto MagickCoderModulesPath and add a MagickFilterModulesPath to\n\tlocate filter modules.\n\n\t* filters/Makefile.am: New makefile to build filter modules.\n\n\t* configure.ac: Configure magick/GraphicsMagick.pc and\n\tMagick++/lib/GraphicsMagick++.pc.\n\t(MagickModulesSubdir): Add quantum depth to modules path to ensure\n\tthat modules with the correct depth are loaded.  The modules path\n\tis now\n\t${libdir}/GraphicsMagick-${PACKAGE_VERSION}/modules-Q${QuantumDepth}/coders.\n\t(MagickCoderModulesPath): Rename MagickModulesPath to\n\tMagickCoderModulesPath.\n\t(MagickFilterModulesPath): Define to location of filter modules.\n\n\t* magick/Makefile.am: Added rules to install GraphicsMagick.pc.\n\n\t* magick/GraphicsMagick.pc.in: Added pkgconfig file for\n\t-lGraphicsMagick.\n\n2003-02-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/jp2.c (WriteJP2Image): Quality factor calculation had\n\taccidentally been removed.  The calculation is back, but has been\n\tbiased up slightly so that a quality factor of 75 results in a\n\tmore reasonable 16:1 compression. Past a quality factor of 99.5,\n\tthe compression is set to 1:1 (non-lossy).\n\n2003-02-27  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* Fixed bug with reading interlaced PNG images, introduced\n\tyesterday.\n\n\t* Fixed bug with skipping MNG subimages, also introduced\n\tyesterday.\n\n2003-02-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.am (EXTRA_DIST): Forgot to distribute version.sh\n\n\t* configure.ac: Use definitions from version.sh to drive\n\tpackage versioning and naming. These definitions support\n\tlibtool's recommended approach to library versioning.\n\n\t* version.sh: New file for managing release versioning.\n\tEdit this file to change the release number, etc.\n\n\t* PerlMagick/t/tiff/read.t: Added read tests for stripped,\n\tplanar contiguous, and planar seperated TIFFs.\n\n\t* coders/tiff.c (ReadTIFFImage): Transferred stripped-TIFF\n\treading code from ImageMagick.\n\tEnumerated reading methods to make the logic more clear.\n\n2003-02-27  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* JNG alpha sample depth was sometimes inconsistent.\n\n\t* Bring only one line at a time into memory during PNG\n\tread/write (Merge with Cristy's 5.5.6 update).\n\n2003-02-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* PerlMagick/Makefile.PL.in (LIBS): Put MAGICKLIB first to\n\tdecrease the probability that the wrong libMagick is used\n\twhen linking static PerlMagick.\n\n\t* configure.ac (PerlMagick): Fix linker search path for\n\t-lGraphicsMagick when linking a static PerlMagick.  It seems\n\tthat libtool changed the location where it places static\n\tlibraries.\n\n\t* PerlMagick/t/tiff/read.t: Added test for reading tiled TIFF.\n\n\t* coders/tiff.c (ReadTIFFImage): Add optimized support for\n\treading tiled TIFFs.\n\t(ReadTIFFImage): Optimize loops for reading tiled TIFFs as well.\n\t(ReadTIFFImage): Eliminate compiler warning.\n\t(ReadTIFFImage): Add some missing error handling for tiled TIFF.\n\n2003-02-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/tiff.c (ReadTIFFImage): Optimize RGBA transfer loop.\n\n2003-02-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/render.c (DrawPrimitive): Return DrawPolygonPrimitive\n\tstatus (edit transferred from ImageMagick).\n\n\t* magick/utility.c (GetMagickGeometry): Scaling to an area now\n\tpreserves the image aspect ratio.\n\n2003-02-24  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* png.c: Added missing parentheses in typecast (cristy noticed\n\tthe bug that I introduced on 2/18).\n\n2003-02-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.am: Add rules to produce www/README.html,\n\twww/INSTALL-mac.html, www/INSTALL-unix.html, www/INSTALL-vms.html,\n\tand www/INSTALL-windows.html\n\n\t* www/README.html: New file produced from README.txt\n\n\t* www/INSTALL-mac.html: New file produced from INSTALL-mac.txt.\n\n\t* www/INSTALL-unix.html: New file produced from INSTALL-unix.txt.\n\n\t* www/INSTALL-vms.html: New file produced from INSTALL-vms.txt.\n\n\t* www/INSTALL-windows.html: New file produced from INSTALL-windows.txt.\n\n\t* NEWS: Added news for GraphicsMagick 1.0.0.\n\n\t* magick/locale.c: Added error messages to support JP2.\n\n\t* locale/C.mgk: Added error messages to support JP2.\n\n\t* locale/locale.mgk: Update to GraphicsMagick copyright.\n\n\t* coders/jp2.c: Updated to use Jasper 1.700.1 interface\n\tconventions. Jasper 1.700.1 is required now. Support\n\treading arbitrary quantum sizes up to 16-bits.  Return\n\tgrayscale images as PseudoClass.\n\n\t* jp2/: Updated Jasper sources to version 1.700.1.\n\n2003-02-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/jp2.c (ReadJP2Image): Obtain channel indexes by\n\tID rather than assuming index value.  Validate that channel\n\tgeometry and encoding is supported.\n\n\t* magick/effect.c (ThresholdImage): Additional performance\n\toptimization. Work faster if image is already gray.\n\n2003-02-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/jp2.c (WriteJP2Image): Port to Jasper 1.7.\n\tFor Q:32, don't write 32-bit pixels rather than the\n\t16-bit pixels we told Jasper we would write.\n\t(WriteJP2Image): Back-port to Jasper 1.6.\n\n2003-02-18  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* coders/modules.mgk: Added JNG entry.\n\n2003-02-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/jp2.c (RegisterJP2Image): Added registration for\n\t\"PGX\" magick tag.\n\n\t* magick/magic.mgk: Added entry for JPEG V2's PGX format.\n\n\t* PerlMagick/t/jp2/read.t: Added JPEG Version 2 read tests.\n\n\t* coders/modules.mgk: Added JPC and PGX magick types to\n\tsupport JPEG V2.\n\n\t* magick/color.c (IsMonochromeImage): Re-arranged test logic\n\tto short-circuit test using ORs.\n\t(IsGrayImage): Re-arranged test logic to short-circuit test\n\tusing ORs.\n\n\t* magick/constitute.c (PopImagePixels): Speed GrayQuantum\n\tand GrayAlphaQuantum cases if is_grayscale is True.\n\n\t* magick/quantize.c (AssignImageColors): Sync image to\n\tupdate DirectClass pixels to new colormap.\n\n\t* coders/fpx.c (RegisterFPXImage): FlashPIX does not\n\tprovide direct BLOB I/O support.\n\n\t* magick/blob.c (BlobToImage): Add logging.\n\t(BlobToFile): Add logging.\n\n2003-02-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/fpx.c (ReadFPXImage): Removing the input file is\n\tantisocial.\n\n\t* PerlMagick/t/fpx/*.fpx: Replaced with new copies.  Files\n\tseemed to be corrupt.\n\n\t* PerlMagick/t/cgm/read.t: Specify file magick so that CGM\n\tread test passes for BLOB case.\n\n\t* PerlMagick/t/rad/read.t: Specify file magick so that RAD\n\tread test passes for BLOB case.\n\n\t* PerlMagick/t/jng/read.t: Add read tests for JNG.\n\n\t* PerlMagick/t/jng/write.t: Add read/write tests for JNG.\n\n\t* configure.ac (DELEGATES): Added `jng` to the DELEGATES list\n\tso that JNG can be included in the PerlMagick tests.\n\n2003-02-18  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* coders/png.c: Write proper JNG image_interlace_method.\n\n\t* coders/png.c: Read and write proper MNG and JNG sRGB intent.\n\n\t* PerlMagick/t/jng: Add twelve test files in JNG format.\n\n\t* coders/png.c: Write proper progressive JNG output when\n\ttransparency is present.\n\n2003-02-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/version.c (GetMagickWebSite): New function.\n\n2003-02-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/wmf.c (ipa_device_begin): Use MagickWebSite definition.\n\n\t* www/Copyright.html: Updated to match Copyright.txt\n\n\t* www/perl: Updated to reflect GraphicsMagick vs ImageMagick.\n\n\t* magick/xwindow.c (XMakeImageMSBFirst): Minor loop optimizations.\n\n\t* magick/constitute.c (ConstituteImage): Check for grayscale\n\tand monochrome image if image is PseudoClass.\n\n2003-02-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/enhance.c (ContrastImage): Preserve is_grayscale flag.\n\t(EqualizeImage): Preserve is_grayscale flag.\n\t(ModulateImage): Preserve is_grayscale flag.\n\t(NegateImage): Preserve is_grayscale flag.\n\t(NormalizeImage): Preserve is_grayscale flag.\n\n\t* magick/fx.c (ColorizeImage): Evaluate is_grayscale status.\n\t(ConvolveImage): Preserve is_grayscale flag.\n\t(ImplodeImage): Preserve is_grayscale flag.\n\t(SolarizeImage): Preserve is_grayscale flag.\n\t(OilPaintImage): Preserve is_grayscale flag.\n\t(SwirlImage): Preserve is_grayscale flag.\n\t(WaveImage): Preserve is_grayscale flag.\n\n\t* magick/resize.c (MagnifyImage): Preserve is_grayscale flag.\n\t(MinifyImage): Preserve is_grayscale flag.\n\t(ResizeImage): Preserve is_grayscale flag.\n\n\t* magick/decorate.c (FrameImage): Evaluate is_grayscale status.\n\t(RaiseImage): Preserve is_grayscale.\n\n\t* magick/shear.c (IntegralRotateImage): Preserve is_grayscale.\n\tflag.\n\t(XShearImage): Evaluate is_grayscale status.\n\t(YShearImage): Evaluate is_grayscale status.\n\n\t* magick/transform.c (ChopImage): Preserve is_grayscale flag.\n\t(CropImage): Preserve is_grayscale flag.\n\t(FlipImage): Preserve is_grayscale flag.\n\t(FlopImage): Preserve is_grayscale flag.\n\t(RollImage): Preserve is_grayscale flag.\n\n\t* magick/effect.c (AddNoiseImage): If image colorspace is\n\tGRAYColorspace, then add intensity noise, and transfer\n\timage is_grayscale flag to output image.\n\t(BlurImage): Preserve is_grayscale flag.\n\t(DespeckleImage): Preserve is_grayscale flag.\n\t(EdgeImage): Preserve is_grayscale flag.\n\t(EmbossImage): Preserve is_grayscale flag.\n\t(GaussianBlurImage): Preserve is_grayscale flag.\n\t(MotionBlurImage): Preserve is_grayscale flag.\n\t(ShadeImage): Preserve is_grayscale flag.\n\t(SharpenImage): Preserve is_grayscale flag.\n\t(UnsharpMaskImage): Preserve is_grayscale flag.\n\n\t* magick/quantize.c (QuantizeImage): Pre-reduce gray images\n\tto PseudoClass in order to quickly determine the number of\n\tcolors, and provide the expected PseudoClass output. Also\n\tskip slow color quantization if there are already fewer\n\tcolors than requested.\n\n\t* magick/image.c (GrayscalePseudoClassImage): New function\n\tto quickly reduce an image to PseudoClass grayscale.  This\n\tis a fast way to determine the number of intensities in a\n\tgrayscale image. Either a compact sorted colormap or a faster,\n\tcontiguous linear colormap is created, depending on the\n\toptimize_colormap flag. If the image is already PseudoClass,\n\tand the optimize_colormap flag is True, then the existing\n\tcolormap is sorted and reduced.\n\t(SyncImage): Preserve is_grayscale flag.\n\t(ChannelImage): Result is grayscale.\n\t(CycleColormapImage): Preserve is_grayscale and is_monochrome flags.\n\t(SetImage): Evaluate is_grayscale flag.\n\t(SetImageDepth): Preserve is_grayscale flag.\n\t(SetImageOpacity): Preserve is_grayscale flag.\n\t(SortColormapByIntensity): Preserve is_grayscale flag.\n\t(TransformRGBImage): Evaluate is_grayscale flag.\n\n2003-02-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/resize.c (SampleImage): Preserve grayscale and\n\tmonochrome flags.\n\n\t* magick/quantize.c (AssignImageColors): Set image monochrome\n\tflag to True when quantizing to two colors in GrayColorspace.\n\n\t* magick/effect.c (SpreadImage): Preserve grayscale and\n\tmonochrome flags.\n\t(AdaptiveThresholdImage): Short-circuit algorithm if image\n\tflags indicate it is already monochrome. Set monochrome and\n\tgrayscale flags once algorithm completes.\n\t(ThresholdImage): Short-circuit algorithm if image\n\tflags indicate it is already monochrome. Set monochrome and\n\tgrayscale flags once algorithm completes.\n\t(ChannelThresholdImage): Short-circuit algorithm if image\n\tflags indicate it is already monochrome. Set monochrome and\n\tgrayscale flags once algorithm completes.\n\t(ShadeImage): If grayscale shading is done, then set image\n\tgrayscale flag to True.\n\n\t* magick/color.c (IsGrayImage): If the image is_grayscale\n\tflag is True, then short-circuit the test. Update the flag\n\tif the test is performed.\n\t(IsMonochromeImage): If the image is_monochrome flag is True\n\tthen short-circuit the test. Update the flag if the test is\n\tperformed.\n\n\t* magick/image.c (CloneImage): Copy image is_grayscale and\n\tis_monochrome members.\n\n\t* magick/cache.c (SyncCacheNexus): If image pixels are updated\n\tthen set image is_grayscale and is_monochrome members to False.\n\tAlgorithms which want to preserve the values of these members\n\tshould save their original values before processing the image\n\tand restore them when processing is complete, or transfer them\n\tfrom the input image to the output image.\n\n\t* magick/constitute.c (ReadImage): If the returned image is\n\tPseudoClass then invoke IsGrayImage() and IsMonochromeImage()\n\tand cache the result in image is_grayscale and is_monochrome\n\tmembers for later use.\n\n\t* magick/image.h (Image): Added is_grayscale and is_monochrome\n\tmembers to remember if image is grayscale or monochrome.\n\n2003-02-14  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* www/archives.html: commented out sites not mirroring GM yet.\n\tChanged \"ftp.simplesystems.org\" to \"ftp.graphicsmagick.org\".\n\tAdded link to graphicsmagick.sf.net.\n\n2003-02-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/utility.c (FormatString): Check for the availability of\n\tvsprintf.\n\n\t* magick/log.c (LogMagickEvent): Check for the availability of\n\tvsprintf.\n\n\t* configure.ac: Test for vsprintf.\n\n2003-02-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/annotate.c (RenderFreetype): Used smarter code to prepare\n\tthe beta argument for AlphaComposite.\n\n2003-02-12  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* coders/logo.c: updated logo.c to produce the GraphicsMagick logo.\n\n2003-02-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* INSTALL-unix.txt: Document that default quantum depth is now 8.\n\n\t* VisualMagick/magick/magick_config.h.in: Default quantum depth is now 8.\n\n\t* configure.ac: Default quantum depth is now 8.\n\n\t* tests/Makefile.am: Test format types that require a size\n\tseperately since always specifying the size caused some formats\n\t(e.g. PCD) to improperly fail.\n\n2003-02-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* www/NEWS.html: New HTML file for project news.\n\n\t* scripts/txt2html: New script for formatting text into HTML.\n\n\t* Makefile.am: Automated the generation of www/Changelog.html and\n\twww/NEWS.html.\n\n\t* coders/xpm.c (WritePICONImage): Close blob using correct image.\n\n\t* tests/Makefile.am (CHECK_SIZED_FILES): Added files to tests\n\tsubdirectory so that tests don't need to use files from\n\tPerlMagick.\n\n\t* magick/image.c (TransformColorspace): New function to\n\tsimplify/centralize colorspace transform requests.  Replaced calls\n\tto RGBTransformImage and TransformRGBImage throughout the code\n\twith calls to TransformColorspace.\n\n\t* IMDisplay: Disable save function since it is not implemented yet.\n\n2003-02-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* PerlMagick/Magick.xs (SetAttribute): Support changing back to\n\tRGB or Transparent colorspace.\n\n2003-02-10  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* Brought MNG handling of final delay into compliance with MNG spec.\n\n2003-02-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/bmp.c (WriteBMPImage): Added support for\n\tbits_per_pixel==4.\n\t(WriteBMPImage): Convert PseudoClass images with more than 256\n\tcolors to DirectClass.\n\t(WriteBMPImage): Do not require 2-color images to pass the\n\tIsMonochromeImage() test before writing them as one-bit-per-pixel\n\tBMPs.  Decided to allow this after four readers (including Windows\n\tXP) displayed the image using the proper colormap.\n\t(WriteBMPImage): BMP2 encoder was writing colormap using wrong format.\n\n\t* images: Updated logo images to GraphicsMagick\n\n\t* Added PDF Sages to web page as a sponsor.\n\n2003-02-08  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* www/GraphicsMagick.html: add \"gm \" prefix to examples.\n\n2003-02-07  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* index.html: Update to distinguish between ImageMagick and\n\tGraphicsMagick, and to explain \"gm\" prefix of commandline utilities.\n\n2003-02-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/nt_feature.c (CropImageToHBITMAP): Remove useless\n\tautocrop support which was transferred from CropImage when\n\tcreating CropImageToHBITMAP.\n\n2003-02-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/miff.c (ReadMIFFImage): RLE packet size was not\n\tcalculated correctly, causing RLE-compressed MIFF images with\n\tdepth>8 to not be read.\n\n2003-02-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/paint.c (ColorFloodfillImage): Transfered fix from\n\tImageMagick for the problem that floodfill using a tiled image\n\tfailed if the target color happened to match the current fill\n\tcolor.\n\n2003-02-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/command.c: Fixed preview error message.\n\n\t* coders/preview.c: Previous update had broken noiseimage demo.\n\tAlso some cleanups.\n\n\t* magick/display.c (XMagickCommand): No longer uses\n\tMogrifyImage.\n\n\t* coders/preview.c (WritePreviewImage): Re-wrote so that\n\tMogrifyImage is no longer used. Resize image outside of the loop\n\tto improve performance.\n\n2003-02-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/effect.c (ShadeImage): Use PixelIntensityToDouble macro.\n\n\t* magick/image.h (PixelIntensityToDouble): Added\n\tPixelIntensityToDouble macro to handle the case where pixel\n\tintensity is used for floating arithmetic.\n\n2003-01-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.am: Distribute files ChangeLog, INSTALL-mac.txt,\n\tINSTALL-unix.txt, INSTALL-vms.txt INSTALL-windows.txt, and NEWS.\n\n2003-01-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/svg.c (SVGStartElement): Applied fix from ImageMagick to\n\tcompute SVG +> MVG viewbox correctly.\n\n\t* magick/image.c (CloneImage): Applied fix from ImageMagick which\n\tis purported to solve the problem that \"negative (x,y) page offsets\n\tdid not clone properly\".\n\n\t* magick/gem.c (TransformHWB): Replace implementation with\n\tImageMagick's new version which is supposed to fix a rounding\n\terror problem.  Hard to say since implementation is totally\n\tdifferent.\n\n\t* coders/msl.c (MSLStartElement): Applied fix for missing break\n\tfrom ImageMagick.\n\n\t* magick/integral_types.h: New header to include the integral\n\ttypes typedefs.  Needed new header in order to include in both\n\tstudio.h and api.h at the right point.\n\n\t* magick/studio.h: Move nt_feature.h inclusion to the few modules\n\twhich actually use functions from it.\n\n\t* magick/api.h: Added typedefs gm_int16_t, gm_uint16_t,\n\tgm_int32_t, gm_uint32_t, gm_int64_t, gm_uint64_t to support\n\tspecifically sized types.\n\n\t* configure.ac: Test for size of `short`, `unsigned short`, `int`,\n\t`unsigned int`, `long`, `unsigned long`, `long long`, `unsigned\n\tlong long` assigning the result to the defines SIZEOF_SHORT,\n\tSIZEOF_UNSIGNED_SHORT, SIZEOF_INT, SIZEOF_UNSIGNED_INT,\n\tSIZEOF_LONG, SIZEOF_UNSIGNED_LONG, SIZEOF_LONG_LONG, and\n\tSIZEOF_UNSIGNED_LONG_LONG respectively.\n\n2003-01-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/fx.c (OilPaintImage): Compute histogram using 8-bit quantums\n\tfor more sensible performance with Q:16 and Q:32 builds.\n\n\t* magick/image.h (PixelIntensityToQuantum): Compute using integral\n\tarithmetic for Q:8 and Q:16.  Much faster than floating point!\n\t(PixelIntensity): Compute using integral arithmetic for Q:8 and\n\tQ:16. Much faster than floating point!\n\n2003-01-28  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* Fixed bug in png.c, introduced in IM-5.5.1.  A pair of\n\t{ } brackets were omitted when logging was added, which lets\n\told versions of libpng write a zero-length iCCP chunk.\n\n2003-01-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/effect.c (DespeckleImage): Put loops inside of case\n\tstatement rather than outside.\n\t(SpreadImage): Improved algorithm so that -spread is 12X faster.\n\n\t* magick/nt_feature.c (CropImageToHBITMAP): New function to return\n\ta region of the image as a HBITMAP.\n\n2003-01-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Fixed Copyright statement on all source files.\n\n\t* magick/effect.c (ThresholdImage): Optimized loop.\n\n\t* coders/tiff.c (ReadTIFFImage): Read bits more efficiently for\n\tbits_per_sample=1.\n\n\t* magick/command.c (MogrifyImage): Set image->dither to\n\timage_info->dither prior to invoking SetImageType.\n\n\t* magick/constitute.c (WriteImage): Set image->dither to\n\timage_info->dither.\n\n\t* magick/image.c (SetImageType): For case BilevelType, normalize\n\timage, and threshold 50% if dithering is disabled.  This is at\n\tleast 10X faster than quantizing with dither.\n\t(AllocateImage): Initialize image->dither.\n\t(CloneImage): Copy image->dither.\n\n\t* magick/image.h: Added dither member to Image.\n\n2003-01-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* PerlMagick/t/tiff/read.t: Added a test for reading 16-bit TIFF\n\timages.\n\n\t* coders/tiff.c (ReadTIFFImage): Support reading 16-bit TIFF images\n\twith a Q:8 build.\n\n\t* magick/color.c (ConstrainColormapIndex): Use VerifyColormapIndex.\n\n\t* coders/pnm.c (ReadPNMImage): Use VerifyColormapIndex.\n\n\t* coders/gif.c (DecodeImage): Use VerifyColormapIndex.\n\n\t* magick/image.c (SyncImage): Use VerifyColormapIndex.\n\n2003-01-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/blob.c (ReadBlobByte): Use getc when reading from FILE stream.\n\n\t* configure.ac: Added tests for getc_unlocked and putc_unlocked.\n\n\t* magick/blob.c (ReadBlobByte): Optimized reading from BlobStream.\n\t(ReadBlobLSBLong): Optimized reading from BlobStream.\n\t(ReadBlobLSBShort): Optimized reading from BlobStream.\n\t(ReadBlobMSBLong): Optimized reading from BlobStream.\n\t(ReadBlobMSBShort): Optimized reading from BlobStream.\n\t(ReadBlobStream): New static inline function to read from BlobStream.\n\t(WriteBlob): \"Manually\" copy data rather than using memcpy() for\n\tvery small copy sizes.\n\t(WriteBlobByte): Use putc() when writing to a FILE stream.\n\n2003-01-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/gem.c (Hull): Count down loops.  Might help.\n\t(InterpolateColor): Pre-compute common sub-expressions to improve\n\tperformance.\n\n\t* magick/segment.c (Classify): Implemented idea from Glenn\n\tRanders-Pehrson to avoid use of pow() when WeightingExponent is\n\t2.0 (which it is).  This makes image segmentation much faster\n\t(e.g. 8X).\n\n\t* magick/annotate.c (RenderFreetype): For images with\n\tmatte==False, simply set the opacity of the pixel to be updated to\n\tOpaqueOpacity before alpha-compositing the pixel rather than using\n\tSetImageType(TrueColorMatteType) to initialize the opacity of the\n\tentire image.  This is much faster and scales to large images.\n\n\t* magick/image.c (SetImageType): Eliminated unnecessary conditionals.\n\n2003-01-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/effect.c (InsertMedianList): Assign computed quantum\n\tindexes to variables to avoid extra computations for\n\tQuantumDepth>8.\n\n\t* magick/composite.c (AlphaComposite): Pre-compute common\n\texpressions in order to improve performance.\n\n\t* magick/fx.c (ConvolveImage): Optimized loops.\n\n\t* magick/paint.c (TransparentImage): Optimize for case fuzz == 0.\n\n\t* magick/color.c (FuzzyColorMatch): Minor cleanup and optimization.\n\n\t* magick/locale.c: Added error messages for convolve option.\n\n\t* coders/locale.c: Picked up recent changes from ImageMagick version.\n\n\t* locale/C.mgk: Added error messages for convolve option.\n\n\t* magick/command.c (MogrifyImage): Added support for convolve option.\n\n\t* coders/xcf.c (ReadXCFImage): Recognize latest GIMP XCF header.\n\n\t* coders/dcm.c: Transferred the apparent salient fixes from\n\tImageMagick for a bug described as \"Some DCM grayscale images did\n\tnot display correctly.\".\n\n\t* coders/miff.c (ReadMIFFImage): Reading RLE-compressed MIFFs is\n\tnow about 4X faster.\n\n\t* magick/blob.c (OpenBlob): Use setvbuf() to increase stdio buffer\n\tsize to 16K.  Solaris default is 1K.  This should minimize system\n\tcall overhead for accessing large files.\n\t(ReadBlob): \"Manually\" copy data rather than using memcpy() for\n\tvery small copy sizes.\n\t(ReadBlobZC): New method, similar to ReadBlob, but provides the\n\topportunity for zero copy on read.\n\n\t* magick/constitute.c (PushImagePixels): CMYKA case for\n\timage->depth=16 was comparing with 8 instead.\n\n2003-01-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/utility.c (GetMagickGeometry): Removed support for `~`\n\tand disabled centering code until we learn where it should go (if\n\tanywhere).\n\n\t* magick/command.c : Add HWB colorspace transform support.\n\n\t* PerlMagick/Magick.xs: Add HWB colorspace transform support.\n\n\t* magick/image.c (RGBTransformImage): Add HWB colorspace transform\n\tsupport.\n\t(TransformRGBImage): Add HWB colorspace transform support.\n\n2003-01-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/utility.c (GetMagickGeometry): Add support for new new\n\t`~` geometry string flag.  This also fixes a montage bug in which\n\tthumbnails were mis-sized if the geometry specification incuded x\n\tor y offsets.\n\n\t* magick/image.h (GeometryFlags): Added CenterValue enumeration to\n\tcorrespond with new `~` geometry string flag.  Taking\n\tImageMagick's lead on this.\n\n\t* magick/render.c: Transferred fixes from ImageMagick for an\n\tartifact which occured at the 360 degree point when rendering\n\tcircles, ellipses, and arcs.  Bug reported by io219@attbi.com.\n\n\t* PerlMagick/Magick.xs: Add HSL colorspace transform support.\n\n\t* magick/command.c: Add HSL colorspace transform support.\n\n\t* magick/image.c (RGBTransformImage): Add HSL colorspace transform\n\tsupport.\n\t(TransformRGBImage): Add HSL colorspace transform support.\n\n2003-01-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Updated copyright statement on source files to reflect\n\tthe GraphicsMagick Group rather than ImageMagick Studio.\n\n\t* magick/constitute.c (ConstituteImage): Simplified the switch\n\tstatement for inner loops by creating a simplified map in advance.\n\t(DispatchImage): Simplified the switch statement for inner loops\n\tby creating a simplified map in advance.\n\n\t* magick/compress.c (HuffmanEncodeImage): Test and cache the\n\treturn value of LocaleCompare(image_info->magick,\"FAX\") so that\n\tLocaleCompare is not executed repeatedly in the output loop.\n\n\t* magick/color.c (IsGrayImage): Optimized loops.\n\t(IsMonochromeImage): Optimized loops.\n\t(IsOpaqueImage): Optimized loop.\n\n\t* magick/delegate.c (InvokePostscriptDelegate): When using the\n\tGhostscript library, identify the library as \"[ghostscript library]\"\n\trather then \"gsdll32\" so that -verbose prints something useful for\n\tboth Windows and Unix.\n\n2003-01-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* NEWS: New file.\n\n\t* magick/montage.c (MontageImages): Use ThumbnailImage() rather\n\tthan ZoomImage() to resize montage thumbnails provided that the\n\tuser has not specified an image filter, and the montage thumbnail\n\tis smaller than the image. This should provide faster montages\n\tfor large images.\n\n\t* magick/resize.c (ResizeImage): Added logging support.\n\t(MagnifyImage): Added logging support.\n\t(MinifyImage): Added logging support.\n\t(SampleImage): Added logging support.\n\t(ScaleImage): Added logging support.\n\n2003-01-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/transform.c (ProfileImage): Duplicate ImageMagick changes\n\tto image colorspace handling.  Avoids using\n\tSetImageType(image,ColorSeparationMatteType).\n\n\t* magick/fx.c (OilPaintImage): Replaced with ImageMagick version\n\tsince ImageMagick version has been updated to not penalize Q:8.\n\tOptimized loops.\n\n\t* magick/display.c (XDisplayImage): Display to 100% of\n\tthe screen size rather than 90% of the screen size.\n\n\t* magick/enhance.c (ModulateImage): Ensure that arguments\n\tare always positive values.  Optimized loops.\n\t(ContrastImage): Optimized loops.\n\n\t* magick/gem.c (HSLTransform): Optimized performance by\n\teliminating redundant intermediate calculations. This\n\tmakes `gm convert -contrast` 21% faster.\n\t(HSLTransform): Set to inline within the gem.c module.\n\t(TransformHSL): Set to inline within the gem.c module.\n\t(Contrast): Moved to bottom of gem.c module so HSLTransform\n\tand TransformHSL can be inlined. Simplified conditionals.\n\t(Modulate): Moved to bottom of gem.c module so HSLTransform\n\tand TransformHSL can be inlined. No longer check/correct\n\tnegative values.\n\n2003-01-14 William Radcliffe <billr@corbis.com>\n\n\t* magick/blob.c\n\n\t* magick/blob.h\n\tAdded new stream type flag and support to match with the one\n\tadded to ImageMagick.\n\n2003-01-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.c (RGBTransformImage): Fixed bug (thanks to\n\tBill for finding it) and finished optimizing XYZ table\n\tcreation.\n\t(AverageImages): Optimized loops.\n\t(ChannelImage): Optimized loops.  3X speed-up for SPARC.\n\n\t* magick/enhance.c: Optimized NegateImage().\n\n2003-01-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Set some common API structures to 0xbf prior to deallocation\n\tto make accidental continued use more obvious.\n\n2003-01-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/constitute.c: Minor optimizations to PopImagePixels()\n\n\t* coders/dpx.c: Reading the DPX header was off by 4 bytes.\n\n\t* coders/(art.c,avs.c,bmp.c,cmyk.c,dcm.c,dib.c,dpx.c,fax.c,\n\tfits.c,gray.c,icon.c,map.c,miff.c,mono.c,mpc.c,mtv.c,otb.c,\n\tpcx.c,pdb.c,pict.c,pix.c,pnm.c,pwp.c,rgb.c,rla.c,rle.c,sct.c,\n\tsgi.c,sun.c,tga.c,tim.c,uyvy.c,vicar.c,viff.c,wbmp.c,xwd.c,\n\tyuv.c): Ensure that blob is closed on unexpected EOF.\n\n\t* magick/image.c: Optimized SetImageOpacity().\n\tOptimized SetImage() for intializing non-opaque images.  The\n\topacity channel was being intialized twice.\n\n2003-01-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/constitute.c: Log entry and exit from coders so that\n\tcoders don't need to.\n\n\t* Finished re-writing PushImagePixels() using coding practices\n\twhich may result in faster code.\n\n\t* PerlMagick is changed from Image::Magick to Graphics::Magick\n\tin order to avoid conflicts with the ImageMagick version.  This\n\tmeans that any Perl scripts based on the ImageMagick version need\n\tto do a global replace of Image::Magick to Graphics::Magick.\n\n\t* PerlMagick/reference/filter/Raise.miff: Replaced with new version.\n\n2003-01-08 William Radcliffe <billr@corbis.com>\n\n\t* magick/nt_feature.c\n\tMake ImageToHBITMAP function in nt_feature.c compile under Visual\n\tC++ again.\n\n2003-01-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* coders/delegates.mgk.in: Fix cgm entry.  How did it become so\n\tterribly broken?\n\n\t* coders/dps.c: Adding logging support.\n\n\t* PerlMagick/t/read.t: Changed file read tests to use image\n\tcompares with a reference image rather than comparing with a\n\tsignature.\n\n\t* PerlMagick/t/wmf/read.t: Ditto.\n\tmagick/shear.c: Fixed documentation for RotateImage.\n\n2003-01-08  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n\t* magick/magick.c, magick/magick.h: Add \"note\" member of magick_info.\n\n\t* coders/art.c, coders/fax.c, coders/dcm.c, coders/png.c: add notes\n\tto format registrations.\n\n\t* fx.c: changed default \"colorize\" behaviour to preserve image opacity.\n\n2003-01-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/svg.c: Allow the user to specify the initial background\n\tcolor via the -background option.  This is only useful if the SVG\n\tdoesn't draw its own background rectangle.\n\n2003-01-06  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* ltdl/Makefile.am, ltdl/ltdl.c: Fix compilation problem\n\tunder Tru64 UNIX 5.1.  The GraphicsMagick random.h was being\n\tincluded when the system random.h was needed.\n\n\t* configure.ac: Improve robustness of POSIX thread API tests\n\tby including pthread.h when building the test program.\n\n2003-01-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* magick/image.c: In IsImagesEqual() only use type `long double`\n\tfor error summation if QuantumDepth > 16 and `long double` has\n\tmore range than `double`.\n\n\t* magick/quantize.c: In QuantizeImage() only use type `long\n\tdouble` for error summation if QuantumDepth > 16 and `long\n\tdouble` has more range than `double`.\n\n\t* Replaced redundant code with macros.\n\n\t* Optimize mapping to monochrome.\n\n\t* utilities/conjure.c: Had missed removing this file earlier.\n\n2003-01-04  Derry Bryson  <dbryson@techass.com>\n\n\t* magick/decorate.c: Use the ShadowFactor rather than ShadowModule\n\tdefine in RaiseImage() (bug-fix).\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/config/ltmain.sh": "#! /bin/sh\n## DO NOT EDIT - This file generated from ./build-aux/ltmain.in\n##               by inline-source v2014-01-03.01\n\n# libtool (GNU libtool) 2.4.6\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n\n# Copyright (C) 1996-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\nPROGRAM=libtool\nPACKAGE=libtool\nVERSION=2.4.6\npackage_revision=2.4.6\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# Run './libtool --help' for help with using this script from the\n# command line.\n\n\n## ------------------------------- ##\n## User overridable command paths. ##\n## ------------------------------- ##\n\n# After configure completes, it has a better idea of some of the\n# shell tools we need than the defaults used by the functions shared\n# with bootstrap, so set those here where they can still be over-\n# ridden by the user, but otherwise take precedence.\n\n: ${AUTOCONF=\"autoconf\"}\n: ${AUTOMAKE=\"automake\"}\n\n\n## -------------------------- ##\n## Source external libraries. ##\n## -------------------------- ##\n\n# Much of our low-level functionality needs to be sourced from external\n# libraries, which are installed to $pkgauxdir.\n\n# Set a version string for this script.\nscriptversion=2015-01-20.17; # UTC\n\n# General shell script boiler plate, and helper functions.\n# Written by Gary V. Vaughan, 2004\n\n# Copyright (C) 2004-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n\n# As a special exception to the GNU General Public License, if you distribute\n# this file as part of a program or library that is built using GNU Libtool,\n# you may include this file under the same distribution terms that you use\n# for the rest of that program.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNES FOR A PARTICULAR PURPOSE. See the GNU\n# General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program. If not, see <http://www.gnu.org/licenses/>.\n\n# Please report bugs or propose patches to gary@gnu.org.\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# Evaluate this file near the top of your script to gain access to\n# the functions and variables defined here:\n#\n#   . `echo \"$0\" | ${SED-sed} 's|[^/]*$||'`/build-aux/funclib.sh\n#\n# If you need to override any of the default environment variable\n# settings, do that before evaluating this file.\n\n\n## -------------------- ##\n## Shell normalisation. ##\n## -------------------- ##\n\n# Some shells need a little help to be as Bourne compatible as possible.\n# Before doing anything else, make sure all that help has been provided!\n\nDUALCASE=1; export DUALCASE # for MKS sh\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in *posix*) set -o posix ;; esac\nfi\n\n# NLS nuisances: We save the old values in case they are required later.\n_G_user_locale=\n_G_safe_locale=\nfor _G_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\ndo\n  eval \"if test set = \\\"\\${$_G_var+set}\\\"; then\n          save_$_G_var=\\$$_G_var\n          $_G_var=C\n\t  export $_G_var\n\t  _G_user_locale=\\\"$_G_var=\\\\\\$save_\\$_G_var; \\$_G_user_locale\\\"\n\t  _G_safe_locale=\\\"$_G_var=C; \\$_G_safe_locale\\\"\n\tfi\"\ndone\n\n# CDPATH.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n# Make sure IFS has a sensible default\nsp=' '\nnl='\n'\nIFS=\"$sp\t$nl\"\n\n# There are apparently some retarded systems that use ';' as a PATH separator!\nif test \"${PATH_SEPARATOR+set}\" != set; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n\n## ------------------------- ##\n## Locate command utilities. ##\n## ------------------------- ##\n\n\n# func_executable_p FILE\n# ----------------------\n# Check that FILE is an executable regular file.\nfunc_executable_p ()\n{\n    test -f \"$1\" && test -x \"$1\"\n}\n\n\n# func_path_progs PROGS_LIST CHECK_FUNC [PATH]\n# --------------------------------------------\n# Search for either a program that responds to --version with output\n# containing \"GNU\", or else returned by CHECK_FUNC otherwise, by\n# trying all the directories in PATH with each of the elements of\n# PROGS_LIST.\n#\n# CHECK_FUNC should accept the path to a candidate program, and\n# set $func_check_prog_result if it truncates its output less than\n# $_G_path_prog_max characters.\nfunc_path_progs ()\n{\n    _G_progs_list=$1\n    _G_check_func=$2\n    _G_PATH=${3-\"$PATH\"}\n\n    _G_path_prog_max=0\n    _G_path_prog_found=false\n    _G_save_IFS=$IFS; IFS=${PATH_SEPARATOR-:}\n    for _G_dir in $_G_PATH; do\n      IFS=$_G_save_IFS\n      test -z \"$_G_dir\" && _G_dir=.\n      for _G_prog_name in $_G_progs_list; do\n        for _exeext in '' .EXE; do\n          _G_path_prog=$_G_dir/$_G_prog_name$_exeext\n          func_executable_p \"$_G_path_prog\" || continue\n          case `\"$_G_path_prog\" --version 2>&1` in\n            *GNU*) func_path_progs_result=$_G_path_prog _G_path_prog_found=: ;;\n            *)     $_G_check_func $_G_path_prog\n\t\t   func_path_progs_result=$func_check_prog_result\n\t\t   ;;\n          esac\n          $_G_path_prog_found && break 3\n        done\n      done\n    done\n    IFS=$_G_save_IFS\n    test -z \"$func_path_progs_result\" && {\n      echo \"no acceptable sed could be found in \\$PATH\" >&2\n      exit 1\n    }\n}\n\n\n# We want to be able to use the functions in this file before configure\n# has figured out where the best binaries are kept, which means we have\n# to search for them ourselves - except when the results are already set\n# where we skip the searches.\n\n# Unless the user overrides by setting SED, search the path for either GNU\n# sed, or the sed that truncates its output the least.\ntest -z \"$SED\" && {\n  _G_sed_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/\n  for _G_i in 1 2 3 4 5 6 7; do\n    _G_sed_script=$_G_sed_script$nl$_G_sed_script\n  done\n  echo \"$_G_sed_script\" 2>/dev/null | sed 99q >conftest.sed\n  _G_sed_script=\n\n  func_check_prog_sed ()\n  {\n    _G_path_prog=$1\n\n    _G_count=0\n    printf 0123456789 >conftest.in\n    while :\n    do\n      cat conftest.in conftest.in >conftest.tmp\n      mv conftest.tmp conftest.in\n      cp conftest.in conftest.nl\n      echo '' >> conftest.nl\n      \"$_G_path_prog\" -f conftest.sed <conftest.nl >conftest.out 2>/dev/null || break\n      diff conftest.out conftest.nl >/dev/null 2>&1 || break\n      _G_count=`expr $_G_count + 1`\n      if test \"$_G_count\" -gt \"$_G_path_prog_max\"; then\n        # Best one so far, save it but keep looking for a better one\n        func_check_prog_result=$_G_path_prog\n        _G_path_prog_max=$_G_count\n      fi\n      # 10*(2^10) chars as input seems more than enough\n      test 10 -lt \"$_G_count\" && break\n    done\n    rm -f conftest.in conftest.tmp conftest.nl conftest.out\n  }\n\n  func_path_progs \"sed gsed\" func_check_prog_sed $PATH:/usr/xpg4/bin\n  rm -f conftest.sed\n  SED=$func_path_progs_result\n}\n\n\n# Unless the user overrides by setting GREP, search the path for either GNU\n# grep, or the grep that truncates its output the least.\ntest -z \"$GREP\" && {\n  func_check_prog_grep ()\n  {\n    _G_path_prog=$1\n\n    _G_count=0\n    _G_path_prog_max=0\n    printf 0123456789 >conftest.in\n    while :\n    do\n      cat conftest.in conftest.in >conftest.tmp\n      mv conftest.tmp conftest.in\n      cp conftest.in conftest.nl\n      echo 'GREP' >> conftest.nl\n      \"$_G_path_prog\" -e 'GREP$' -e '-(cannot match)-' <conftest.nl >conftest.out 2>/dev/null || break\n      diff conftest.out conftest.nl >/dev/null 2>&1 || break\n      _G_count=`expr $_G_count + 1`\n      if test \"$_G_count\" -gt \"$_G_path_prog_max\"; then\n        # Best one so far, save it but keep looking for a better one\n        func_check_prog_result=$_G_path_prog\n        _G_path_prog_max=$_G_count\n      fi\n      # 10*(2^10) chars as input seems more than enough\n      test 10 -lt \"$_G_count\" && break\n    done\n    rm -f conftest.in conftest.tmp conftest.nl conftest.out\n  }\n\n  func_path_progs \"grep ggrep\" func_check_prog_grep $PATH:/usr/xpg4/bin\n  GREP=$func_path_progs_result\n}\n\n\n## ------------------------------- ##\n## User overridable command paths. ##\n## ------------------------------- ##\n\n# All uppercase variable names are used for environment variables.  These\n# variables can be overridden by the user before calling a script that\n# uses them if a suitable command of that name is not already available\n# in the command search PATH.\n\n: ${CP=\"cp -f\"}\n: ${ECHO=\"printf %s\\n\"}\n: ${EGREP=\"$GREP -E\"}\n: ${FGREP=\"$GREP -F\"}\n: ${LN_S=\"ln -s\"}\n: ${MAKE=\"make\"}\n: ${MKDIR=\"mkdir\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n: ${SHELL=\"${CONFIG_SHELL-/bin/sh}\"}\n\n\n## -------------------- ##\n## Useful sed snippets. ##\n## -------------------- ##\n\nsed_dirname='s|/[^/]*$||'\nsed_basename='s|^.*/||'\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='s|\\([`\"$\\\\]\\)|\\\\\\1|g'\n\n# Same as above, but do not quote variable references.\nsed_double_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n\n# Sed substitution that turns a string into a regex matching for the\n# string literally.\nsed_make_literal_regex='s|[].[^$\\\\*\\/]|\\\\&|g'\n\n# Sed substitution that converts a w32 file name or path\n# that contains forward slashes, into one that contains\n# (escaped) backslashes.  A very naive implementation.\nsed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n\n# Re-'\\' parameter expansions in output of sed_double_quote_subst that\n# were '\\'-ed in input to the same.  If an odd number of '\\' preceded a\n# '$' in input to sed_double_quote_subst, that '$' was protected from\n# expansion.  Since each input '\\' is now two '\\'s, look for any number\n# of runs of four '\\'s followed by two '\\'s and then a '$'.  '\\' that '$'.\n_G_bs='\\\\'\n_G_bs2='\\\\\\\\'\n_G_bs4='\\\\\\\\\\\\\\\\'\n_G_dollar='\\$'\nsed_double_backslash=\"\\\n  s/$_G_bs4/&\\\\\n/g\n  s/^$_G_bs2$_G_dollar/$_G_bs&/\n  s/\\\\([^$_G_bs]\\\\)$_G_bs2$_G_dollar/\\\\1$_G_bs2$_G_bs$_G_dollar/g\n  s/\\n//g\"\n\n\n## ----------------- ##\n## Global variables. ##\n## ----------------- ##\n\n# Except for the global variables explicitly listed below, the following\n# functions in the '^func_' namespace, and the '^require_' namespace\n# variables initialised in the 'Resource management' section, sourcing\n# this file will not pollute your global namespace with anything\n# else. There's no portable way to scope variables in Bourne shell\n# though, so actually running these functions will sometimes place\n# results into a variable named after the function, and often use\n# temporary variables in the '^_G_' namespace. If you are careful to\n# avoid using those namespaces casually in your sourcing script, things\n# should continue to work as you expect. And, of course, you can freely\n# overwrite any of the functions or variables defined here before\n# calling anything to customize them.\n\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\nEXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.\nEXIT_SKIP=77\t  # $? = 77 is used to indicate a skipped test to automake.\n\n# Allow overriding, eg assuming that you follow the convention of\n# putting '$debug_cmd' at the start of all your functions, you can get\n# bash to show function call trace with:\n#\n#    debug_cmd='eval echo \"${FUNCNAME[0]} $*\" >&2' bash your-script-name\ndebug_cmd=${debug_cmd-\":\"}\nexit_cmd=:\n\n# By convention, finish your script with:\n#\n#    exit $exit_status\n#\n# so that you can set exit_status to non-zero if you want to indicate\n# something went wrong during execution without actually bailing out at\n# the point of failure.\nexit_status=$EXIT_SUCCESS\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=$0\n\n# The name of this program.\nprogname=`$ECHO \"$progpath\" |$SED \"$sed_basename\"`\n\n# Make sure we have an absolute progpath for reexecution:\ncase $progpath in\n  [\\\\/]*|[A-Za-z]:\\\\*) ;;\n  *[\\\\/]*)\n     progdir=`$ECHO \"$progpath\" |$SED \"$sed_dirname\"`\n     progdir=`cd \"$progdir\" && pwd`\n     progpath=$progdir/$progname\n     ;;\n  *)\n     _G_IFS=$IFS\n     IFS=${PATH_SEPARATOR-:}\n     for progdir in $PATH; do\n       IFS=$_G_IFS\n       test -x \"$progdir/$progname\" && break\n     done\n     IFS=$_G_IFS\n     test -n \"$progdir\" || progdir=`pwd`\n     progpath=$progdir/$progname\n     ;;\nesac\n\n\n## ----------------- ##\n## Standard options. ##\n## ----------------- ##\n\n# The following options affect the operation of the functions defined\n# below, and should be set appropriately depending on run-time para-\n# meters passed on the command line.\n\nopt_dry_run=false\nopt_quiet=false\nopt_verbose=false\n\n# Categories 'all' and 'none' are always available.  Append any others\n# you will pass as the first argument to func_warning from your own\n# code.\nwarning_categories=\n\n# By default, display warnings according to 'opt_warning_types'.  Set\n# 'warning_func'  to ':' to elide all warnings, or func_fatal_error to\n# treat the next displayed warning as a fatal error.\nwarning_func=func_warn_and_continue\n\n# Set to 'all' to display all warnings, 'none' to suppress all\n# warnings, or a space delimited list of some subset of\n# 'warning_categories' to display only the listed warnings.\nopt_warning_types=all\n\n\n## -------------------- ##\n## Resource management. ##\n## -------------------- ##\n\n# This section contains definitions for functions that each ensure a\n# particular resource (a file, or a non-empty configuration variable for\n# example) is available, and if appropriate to extract default values\n# from pertinent package files. Call them using their associated\n# 'require_*' variable to ensure that they are executed, at most, once.\n#\n# It's entirely deliberate that calling these functions can set\n# variables that don't obey the namespace limitations obeyed by the rest\n# of this file, in order that that they be as useful as possible to\n# callers.\n\n\n# require_term_colors\n# -------------------\n# Allow display of bold text on terminals that support it.\nrequire_term_colors=func_require_term_colors\nfunc_require_term_colors ()\n{\n    $debug_cmd\n\n    test -t 1 && {\n      # COLORTERM and USE_ANSI_COLORS environment variables take\n      # precedence, because most terminfo databases neglect to describe\n      # whether color sequences are supported.\n      test -n \"${COLORTERM+set}\" && : ${USE_ANSI_COLORS=\"1\"}\n\n      if test 1 = \"$USE_ANSI_COLORS\"; then\n        # Standard ANSI escape sequences\n        tc_reset='\u001b[0m'\n        tc_bold='\u001b[1m';   tc_standout='\u001b[7m'\n        tc_red='\u001b[31m';   tc_green='\u001b[32m'\n        tc_blue='\u001b[34m';  tc_cyan='\u001b[36m'\n      else\n        # Otherwise trust the terminfo database after all.\n        test -n \"`tput sgr0 2>/dev/null`\" && {\n          tc_reset=`tput sgr0`\n          test -n \"`tput bold 2>/dev/null`\" && tc_bold=`tput bold`\n          tc_standout=$tc_bold\n          test -n \"`tput smso 2>/dev/null`\" && tc_standout=`tput smso`\n          test -n \"`tput setaf 1 2>/dev/null`\" && tc_red=`tput setaf 1`\n          test -n \"`tput setaf 2 2>/dev/null`\" && tc_green=`tput setaf 2`\n          test -n \"`tput setaf 4 2>/dev/null`\" && tc_blue=`tput setaf 4`\n          test -n \"`tput setaf 5 2>/dev/null`\" && tc_cyan=`tput setaf 5`\n        }\n      fi\n    }\n\n    require_term_colors=:\n}\n\n\n## ----------------- ##\n## Function library. ##\n## ----------------- ##\n\n# This section contains a variety of useful functions to call in your\n# scripts. Take note of the portable wrappers for features provided by\n# some modern shells, which will fall back to slower equivalents on\n# less featureful shells.\n\n\n# func_append VAR VALUE\n# ---------------------\n# Append VALUE onto the existing contents of VAR.\n\n  # We should try to minimise forks, especially on Windows where they are\n  # unreasonably slow, so skip the feature probes when bash or zsh are\n  # being used:\n  if test set = \"${BASH_VERSION+set}${ZSH_VERSION+set}\"; then\n    : ${_G_HAVE_ARITH_OP=\"yes\"}\n    : ${_G_HAVE_XSI_OPS=\"yes\"}\n    # The += operator was introduced in bash 3.1\n    case $BASH_VERSION in\n      [12].* | 3.0 | 3.0*) ;;\n      *)\n        : ${_G_HAVE_PLUSEQ_OP=\"yes\"}\n        ;;\n    esac\n  fi\n\n  # _G_HAVE_PLUSEQ_OP\n  # Can be empty, in which case the shell is probed, \"yes\" if += is\n  # useable or anything else if it does not work.\n  test -z \"$_G_HAVE_PLUSEQ_OP\" \\\n    && (eval 'x=a; x+=\" b\"; test \"a b\" = \"$x\"') 2>/dev/null \\\n    && _G_HAVE_PLUSEQ_OP=yes\n\nif test yes = \"$_G_HAVE_PLUSEQ_OP\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_append ()\n  {\n    $debug_cmd\n\n    eval \"$1+=\\$2\"\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_append ()\n  {\n    $debug_cmd\n\n    eval \"$1=\\$$1\\$2\"\n  }\nfi\n\n\n# func_append_quoted VAR VALUE\n# ----------------------------\n# Quote VALUE and append to the end of shell variable VAR, separated\n# by a space.\nif test yes = \"$_G_HAVE_PLUSEQ_OP\"; then\n  eval 'func_append_quoted ()\n  {\n    $debug_cmd\n\n    func_quote_for_eval \"$2\"\n    eval \"$1+=\\\\ \\$func_quote_for_eval_result\"\n  }'\nelse\n  func_append_quoted ()\n  {\n    $debug_cmd\n\n    func_quote_for_eval \"$2\"\n    eval \"$1=\\$$1\\\\ \\$func_quote_for_eval_result\"\n  }\nfi\n\n\n# func_append_uniq VAR VALUE\n# --------------------------\n# Append unique VALUE onto the existing contents of VAR, assuming\n# entries are delimited by the first character of VALUE.  For example:\n#\n#   func_append_uniq options \" --another-option option-argument\"\n#\n# will only append to $options if \" --another-option option-argument \"\n# is not already present somewhere in $options already (note spaces at\n# each end implied by leading space in second argument).\nfunc_append_uniq ()\n{\n    $debug_cmd\n\n    eval _G_current_value='`$ECHO $'$1'`'\n    _G_delim=`expr \"$2\" : '\\(.\\)'`\n\n    case $_G_delim$_G_current_value$_G_delim in\n      *\"$2$_G_delim\"*) ;;\n      *) func_append \"$@\" ;;\n    esac\n}\n\n\n# func_arith TERM...\n# ------------------\n# Set func_arith_result to the result of evaluating TERMs.\n  test -z \"$_G_HAVE_ARITH_OP\" \\\n    && (eval 'test 2 = $(( 1 + 1 ))') 2>/dev/null \\\n    && _G_HAVE_ARITH_OP=yes\n\nif test yes = \"$_G_HAVE_ARITH_OP\"; then\n  eval 'func_arith ()\n  {\n    $debug_cmd\n\n    func_arith_result=$(( $* ))\n  }'\nelse\n  func_arith ()\n  {\n    $debug_cmd\n\n    func_arith_result=`expr \"$@\"`\n  }\nfi\n\n\n# func_basename FILE\n# ------------------\n# Set func_basename_result to FILE with everything up to and including\n# the last / stripped.\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  # If this shell supports suffix pattern removal, then use it to avoid\n  # forking. Hide the definitions single quotes in case the shell chokes\n  # on unsupported syntax...\n  _b='func_basename_result=${1##*/}'\n  _d='case $1 in\n        */*) func_dirname_result=${1%/*}$2 ;;\n        *  ) func_dirname_result=$3        ;;\n      esac'\n\nelse\n  # ...otherwise fall back to using sed.\n  _b='func_basename_result=`$ECHO \"$1\" |$SED \"$sed_basename\"`'\n  _d='func_dirname_result=`$ECHO \"$1\"  |$SED \"$sed_dirname\"`\n      if test \"X$func_dirname_result\" = \"X$1\"; then\n        func_dirname_result=$3\n      else\n        func_append func_dirname_result \"$2\"\n      fi'\nfi\n\neval 'func_basename ()\n{\n    $debug_cmd\n\n    '\"$_b\"'\n}'\n\n\n# func_dirname FILE APPEND NONDIR_REPLACEMENT\n# -------------------------------------------\n# Compute the dirname of FILE.  If nonempty, add APPEND to the result,\n# otherwise set result to NONDIR_REPLACEMENT.\neval 'func_dirname ()\n{\n    $debug_cmd\n\n    '\"$_d\"'\n}'\n\n\n# func_dirname_and_basename FILE APPEND NONDIR_REPLACEMENT\n# --------------------------------------------------------\n# Perform func_basename and func_dirname in a single function\n# call:\n#   dirname:  Compute the dirname of FILE.  If nonempty,\n#             add APPEND to the result, otherwise set result\n#             to NONDIR_REPLACEMENT.\n#             value returned in \"$func_dirname_result\"\n#   basename: Compute filename of FILE.\n#             value retuned in \"$func_basename_result\"\n# For efficiency, we do not delegate to the functions above but instead\n# duplicate the functionality here.\neval 'func_dirname_and_basename ()\n{\n    $debug_cmd\n\n    '\"$_b\"'\n    '\"$_d\"'\n}'\n\n\n# func_echo ARG...\n# ----------------\n# Echo program name prefixed message.\nfunc_echo ()\n{\n    $debug_cmd\n\n    _G_message=$*\n\n    func_echo_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_IFS\n      $ECHO \"$progname: $_G_line\"\n    done\n    IFS=$func_echo_IFS\n}\n\n\n# func_echo_all ARG...\n# --------------------\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\n\n# func_echo_infix_1 INFIX ARG...\n# ------------------------------\n# Echo program name, followed by INFIX on the first line, with any\n# additional lines not showing INFIX.\nfunc_echo_infix_1 ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    _G_infix=$1; shift\n    _G_indent=$_G_infix\n    _G_prefix=\"$progname: $_G_infix: \"\n    _G_message=$*\n\n    # Strip color escape sequences before counting printable length\n    for _G_tc in \"$tc_reset\" \"$tc_bold\" \"$tc_standout\" \"$tc_red\" \"$tc_green\" \"$tc_blue\" \"$tc_cyan\"\n    do\n      test -n \"$_G_tc\" && {\n        _G_esc_tc=`$ECHO \"$_G_tc\" | $SED \"$sed_make_literal_regex\"`\n        _G_indent=`$ECHO \"$_G_indent\" | $SED \"s|$_G_esc_tc||g\"`\n      }\n    done\n    _G_indent=\"$progname: \"`echo \"$_G_indent\" | $SED 's|.| |g'`\"  \" ## exclude from sc_prohibit_nested_quotes\n\n    func_echo_infix_1_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_infix_1_IFS\n      $ECHO \"$_G_prefix$tc_bold$_G_line$tc_reset\" >&2\n      _G_prefix=$_G_indent\n    done\n    IFS=$func_echo_infix_1_IFS\n}\n\n\n# func_error ARG...\n# -----------------\n# Echo program name prefixed message to standard error.\nfunc_error ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    func_echo_infix_1 \"  $tc_standout${tc_red}error$tc_reset\" \"$*\" >&2\n}\n\n\n# func_fatal_error ARG...\n# -----------------------\n# Echo program name prefixed message to standard error, and exit.\nfunc_fatal_error ()\n{\n    $debug_cmd\n\n    func_error \"$*\"\n    exit $EXIT_FAILURE\n}\n\n\n# func_grep EXPRESSION FILENAME\n# -----------------------------\n# Check whether EXPRESSION matches any line of FILENAME, without output.\nfunc_grep ()\n{\n    $debug_cmd\n\n    $GREP \"$1\" \"$2\" >/dev/null 2>&1\n}\n\n\n# func_len STRING\n# ---------------\n# Set func_len_result to the length of STRING. STRING may not\n# start with a hyphen.\n  test -z \"$_G_HAVE_XSI_OPS\" \\\n    && (eval 'x=a/b/c;\n      test 5aa/bb/cc = \"${#x}${x%%/*}${x%/*}${x#*/}${x##*/}\"') 2>/dev/null \\\n    && _G_HAVE_XSI_OPS=yes\n\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_len ()\n  {\n    $debug_cmd\n\n    func_len_result=${#1}\n  }'\nelse\n  func_len ()\n  {\n    $debug_cmd\n\n    func_len_result=`expr \"$1\" : \".*\" 2>/dev/null || echo $max_cmd_len`\n  }\nfi\n\n\n# func_mkdir_p DIRECTORY-PATH\n# ---------------------------\n# Make sure the entire path to DIRECTORY-PATH is available.\nfunc_mkdir_p ()\n{\n    $debug_cmd\n\n    _G_directory_path=$1\n    _G_dir_list=\n\n    if test -n \"$_G_directory_path\" && test : != \"$opt_dry_run\"; then\n\n      # Protect directory names starting with '-'\n      case $_G_directory_path in\n        -*) _G_directory_path=./$_G_directory_path ;;\n      esac\n\n      # While some portion of DIR does not yet exist...\n      while test ! -d \"$_G_directory_path\"; do\n        # ...make a list in topmost first order.  Use a colon delimited\n\t# list incase some portion of path contains whitespace.\n        _G_dir_list=$_G_directory_path:$_G_dir_list\n\n        # If the last portion added has no slash in it, the list is done\n        case $_G_directory_path in */*) ;; *) break ;; esac\n\n        # ...otherwise throw away the child directory and loop\n        _G_directory_path=`$ECHO \"$_G_directory_path\" | $SED -e \"$sed_dirname\"`\n      done\n      _G_dir_list=`$ECHO \"$_G_dir_list\" | $SED 's|:*$||'`\n\n      func_mkdir_p_IFS=$IFS; IFS=:\n      for _G_dir in $_G_dir_list; do\n\tIFS=$func_mkdir_p_IFS\n        # mkdir can fail with a 'File exist' error if two processes\n        # try to create one of the directories concurrently.  Don't\n        # stop in that case!\n        $MKDIR \"$_G_dir\" 2>/dev/null || :\n      done\n      IFS=$func_mkdir_p_IFS\n\n      # Bail out if we (or some other process) failed to create a directory.\n      test -d \"$_G_directory_path\" || \\\n        func_fatal_error \"Failed to create '$1'\"\n    fi\n}\n\n\n# func_mktempdir [BASENAME]\n# -------------------------\n# Make a temporary directory that won't clash with other running\n# libtool processes, and avoids race conditions if possible.  If\n# given, BASENAME is the basename for that directory.\nfunc_mktempdir ()\n{\n    $debug_cmd\n\n    _G_template=${TMPDIR-/tmp}/${1-$progname}\n\n    if test : = \"$opt_dry_run\"; then\n      # Return a directory name, but don't create it in dry-run mode\n      _G_tmpdir=$_G_template-$$\n    else\n\n      # If mktemp works, use that first and foremost\n      _G_tmpdir=`mktemp -d \"$_G_template-XXXXXXXX\" 2>/dev/null`\n\n      if test ! -d \"$_G_tmpdir\"; then\n        # Failing that, at least try and use $RANDOM to avoid a race\n        _G_tmpdir=$_G_template-${RANDOM-0}$$\n\n        func_mktempdir_umask=`umask`\n        umask 0077\n        $MKDIR \"$_G_tmpdir\"\n        umask $func_mktempdir_umask\n      fi\n\n      # If we're not in dry-run mode, bomb out on failure\n      test -d \"$_G_tmpdir\" || \\\n        func_fatal_error \"cannot create temporary directory '$_G_tmpdir'\"\n    fi\n\n    $ECHO \"$_G_tmpdir\"\n}\n\n\n# func_normal_abspath PATH\n# ------------------------\n# Remove doubled-up and trailing slashes, \".\" path components,\n# and cancel out any \"..\" path components in PATH after making\n# it an absolute path.\nfunc_normal_abspath ()\n{\n    $debug_cmd\n\n    # These SED scripts presuppose an absolute path with a trailing slash.\n    _G_pathcar='s|^/\\([^/]*\\).*$|\\1|'\n    _G_pathcdr='s|^/[^/]*||'\n    _G_removedotparts=':dotsl\n\t\ts|/\\./|/|g\n\t\tt dotsl\n\t\ts|/\\.$|/|'\n    _G_collapseslashes='s|/\\{1,\\}|/|g'\n    _G_finalslash='s|/*$|/|'\n\n    # Start from root dir and reassemble the path.\n    func_normal_abspath_result=\n    func_normal_abspath_tpath=$1\n    func_normal_abspath_altnamespace=\n    case $func_normal_abspath_tpath in\n      \"\")\n        # Empty path, that just means $cwd.\n        func_stripname '' '/' \"`pwd`\"\n        func_normal_abspath_result=$func_stripname_result\n        return\n        ;;\n      # The next three entries are used to spot a run of precisely\n      # two leading slashes without using negated character classes;\n      # we take advantage of case's first-match behaviour.\n      ///*)\n        # Unusual form of absolute path, do nothing.\n        ;;\n      //*)\n        # Not necessarily an ordinary path; POSIX reserves leading '//'\n        # and for example Cygwin uses it to access remote file shares\n        # over CIFS/SMB, so we conserve a leading double slash if found.\n        func_normal_abspath_altnamespace=/\n        ;;\n      /*)\n        # Absolute path, do nothing.\n        ;;\n      *)\n        # Relative path, prepend $cwd.\n        func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath\n        ;;\n    esac\n\n    # Cancel out all the simple stuff to save iterations.  We also want\n    # the path to end with a slash for ease of parsing, so make sure\n    # there is one (and only one) here.\n    func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_removedotparts\" -e \"$_G_collapseslashes\" -e \"$_G_finalslash\"`\n    while :; do\n      # Processed it all yet?\n      if test / = \"$func_normal_abspath_tpath\"; then\n        # If we ascended to the root using \"..\" the result may be empty now.\n        if test -z \"$func_normal_abspath_result\"; then\n          func_normal_abspath_result=/\n        fi\n        break\n      fi\n      func_normal_abspath_tcomponent=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_pathcar\"`\n      func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_pathcdr\"`\n      # Figure out what to do with it\n      case $func_normal_abspath_tcomponent in\n        \"\")\n          # Trailing empty path component, ignore it.\n          ;;\n        ..)\n          # Parent dir; strip last assembled component from result.\n          func_dirname \"$func_normal_abspath_result\"\n          func_normal_abspath_result=$func_dirname_result\n          ;;\n        *)\n          # Actual path component, append it.\n          func_append func_normal_abspath_result \"/$func_normal_abspath_tcomponent\"\n          ;;\n      esac\n    done\n    # Restore leading double-slash if one was found on entry.\n    func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result\n}\n\n\n# func_notquiet ARG...\n# --------------------\n# Echo program name prefixed message only when not in quiet mode.\nfunc_notquiet ()\n{\n    $debug_cmd\n\n    $opt_quiet || func_echo ${1+\"$@\"}\n\n    # A bug in bash halts the script if the last line of a function\n    # fails when set -e is in force, so we need another command to\n    # work around that:\n    :\n}\n\n\n# func_relative_path SRCDIR DSTDIR\n# --------------------------------\n# Set func_relative_path_result to the relative path from SRCDIR to DSTDIR.\nfunc_relative_path ()\n{\n    $debug_cmd\n\n    func_relative_path_result=\n    func_normal_abspath \"$1\"\n    func_relative_path_tlibdir=$func_normal_abspath_result\n    func_normal_abspath \"$2\"\n    func_relative_path_tbindir=$func_normal_abspath_result\n\n    # Ascend the tree starting from libdir\n    while :; do\n      # check if we have found a prefix of bindir\n      case $func_relative_path_tbindir in\n        $func_relative_path_tlibdir)\n          # found an exact match\n          func_relative_path_tcancelled=\n          break\n          ;;\n        $func_relative_path_tlibdir*)\n          # found a matching prefix\n          func_stripname \"$func_relative_path_tlibdir\" '' \"$func_relative_path_tbindir\"\n          func_relative_path_tcancelled=$func_stripname_result\n          if test -z \"$func_relative_path_result\"; then\n            func_relative_path_result=.\n          fi\n          break\n          ;;\n        *)\n          func_dirname $func_relative_path_tlibdir\n          func_relative_path_tlibdir=$func_dirname_result\n          if test -z \"$func_relative_path_tlibdir\"; then\n            # Have to descend all the way to the root!\n            func_relative_path_result=../$func_relative_path_result\n            func_relative_path_tcancelled=$func_relative_path_tbindir\n            break\n          fi\n          func_relative_path_result=../$func_relative_path_result\n          ;;\n      esac\n    done\n\n    # Now calculate path; take care to avoid doubling-up slashes.\n    func_stripname '' '/' \"$func_relative_path_result\"\n    func_relative_path_result=$func_stripname_result\n    func_stripname '/' '/' \"$func_relative_path_tcancelled\"\n    if test -n \"$func_stripname_result\"; then\n      func_append func_relative_path_result \"/$func_stripname_result\"\n    fi\n\n    # Normalisation. If bindir is libdir, return '.' else relative path.\n    if test -n \"$func_relative_path_result\"; then\n      func_stripname './' '' \"$func_relative_path_result\"\n      func_relative_path_result=$func_stripname_result\n    fi\n\n    test -n \"$func_relative_path_result\" || func_relative_path_result=.\n\n    :\n}\n\n\n# func_quote_for_eval ARG...\n# --------------------------\n# Aesthetically quote ARGs to be evaled later.\n# This function returns two values:\n#   i) func_quote_for_eval_result\n#      double-quoted, suitable for a subsequent eval\n#  ii) func_quote_for_eval_unquoted_result\n#      has all characters that are still active within double\n#      quotes backslashified.\nfunc_quote_for_eval ()\n{\n    $debug_cmd\n\n    func_quote_for_eval_unquoted_result=\n    func_quote_for_eval_result=\n    while test 0 -lt $#; do\n      case $1 in\n        *[\\\\\\`\\\"\\$]*)\n\t  _G_unquoted_arg=`printf '%s\\n' \"$1\" |$SED \"$sed_quote_subst\"` ;;\n        *)\n          _G_unquoted_arg=$1 ;;\n      esac\n      if test -n \"$func_quote_for_eval_unquoted_result\"; then\n\tfunc_append func_quote_for_eval_unquoted_result \" $_G_unquoted_arg\"\n      else\n        func_append func_quote_for_eval_unquoted_result \"$_G_unquoted_arg\"\n      fi\n\n      case $_G_unquoted_arg in\n        # Double-quote args containing shell metacharacters to delay\n        # word splitting, command substitution and variable expansion\n        # for a subsequent eval.\n        # Many Bourne shells cannot handle close brackets correctly\n        # in scan sets, so we specify it separately.\n        *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n          _G_quoted_arg=\\\"$_G_unquoted_arg\\\"\n          ;;\n        *)\n          _G_quoted_arg=$_G_unquoted_arg\n\t  ;;\n      esac\n\n      if test -n \"$func_quote_for_eval_result\"; then\n\tfunc_append func_quote_for_eval_result \" $_G_quoted_arg\"\n      else\n        func_append func_quote_for_eval_result \"$_G_quoted_arg\"\n      fi\n      shift\n    done\n}\n\n\n# func_quote_for_expand ARG\n# -------------------------\n# Aesthetically quote ARG to be evaled later; same as above,\n# but do not quote variable references.\nfunc_quote_for_expand ()\n{\n    $debug_cmd\n\n    case $1 in\n      *[\\\\\\`\\\"]*)\n\t_G_arg=`$ECHO \"$1\" | $SED \\\n\t    -e \"$sed_double_quote_subst\" -e \"$sed_double_backslash\"` ;;\n      *)\n        _G_arg=$1 ;;\n    esac\n\n    case $_G_arg in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting and command substitution for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        _G_arg=\\\"$_G_arg\\\"\n        ;;\n    esac\n\n    func_quote_for_expand_result=$_G_arg\n}\n\n\n# func_stripname PREFIX SUFFIX NAME\n# ---------------------------------\n# strip PREFIX and SUFFIX from NAME, and store in func_stripname_result.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_stripname ()\n  {\n    $debug_cmd\n\n    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\n    # positional parameters, so assign one to ordinary variable first.\n    func_stripname_result=$3\n    func_stripname_result=${func_stripname_result#\"$1\"}\n    func_stripname_result=${func_stripname_result%\"$2\"}\n  }'\nelse\n  func_stripname ()\n  {\n    $debug_cmd\n\n    case $2 in\n      .*) func_stripname_result=`$ECHO \"$3\" | $SED -e \"s%^$1%%\" -e \"s%\\\\\\\\$2\\$%%\"`;;\n      *)  func_stripname_result=`$ECHO \"$3\" | $SED -e \"s%^$1%%\" -e \"s%$2\\$%%\"`;;\n    esac\n  }\nfi\n\n\n# func_show_eval CMD [FAIL_EXP]\n# -----------------------------\n# Unless opt_quiet is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.\nfunc_show_eval ()\n{\n    $debug_cmd\n\n    _G_cmd=$1\n    _G_fail_exp=${2-':'}\n\n    func_quote_for_expand \"$_G_cmd\"\n    eval \"func_notquiet $func_quote_for_expand_result\"\n\n    $opt_dry_run || {\n      eval \"$_G_cmd\"\n      _G_status=$?\n      if test 0 -ne \"$_G_status\"; then\n\teval \"(exit $_G_status); $_G_fail_exp\"\n      fi\n    }\n}\n\n\n# func_show_eval_locale CMD [FAIL_EXP]\n# ------------------------------------\n# Unless opt_quiet is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.  Use the saved locale for evaluation.\nfunc_show_eval_locale ()\n{\n    $debug_cmd\n\n    _G_cmd=$1\n    _G_fail_exp=${2-':'}\n\n    $opt_quiet || {\n      func_quote_for_expand \"$_G_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    $opt_dry_run || {\n      eval \"$_G_user_locale\n\t    $_G_cmd\"\n      _G_status=$?\n      eval \"$_G_safe_locale\"\n      if test 0 -ne \"$_G_status\"; then\n\teval \"(exit $_G_status); $_G_fail_exp\"\n      fi\n    }\n}\n\n\n# func_tr_sh\n# ----------\n# Turn $1 into a string suitable for a shell variable name.\n# Result is stored in $func_tr_sh_result.  All characters\n# not in the set a-zA-Z0-9_ are replaced with '_'. Further,\n# if $1 begins with a digit, a '_' is prepended as well.\nfunc_tr_sh ()\n{\n    $debug_cmd\n\n    case $1 in\n    [0-9]* | *[!a-zA-Z0-9_]*)\n      func_tr_sh_result=`$ECHO \"$1\" | $SED -e 's/^\\([0-9]\\)/_\\1/' -e 's/[^a-zA-Z0-9_]/_/g'`\n      ;;\n    * )\n      func_tr_sh_result=$1\n      ;;\n    esac\n}\n\n\n# func_verbose ARG...\n# -------------------\n# Echo program name prefixed message in verbose mode only.\nfunc_verbose ()\n{\n    $debug_cmd\n\n    $opt_verbose && func_echo \"$*\"\n\n    :\n}\n\n\n# func_warn_and_continue ARG...\n# -----------------------------\n# Echo program name prefixed warning message to standard error.\nfunc_warn_and_continue ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    func_echo_infix_1 \"${tc_red}warning$tc_reset\" \"$*\" >&2\n}\n\n\n# func_warning CATEGORY ARG...\n# ----------------------------\n# Echo program name prefixed warning message to standard error. Warning\n# messages can be filtered according to CATEGORY, where this function\n# elides messages where CATEGORY is not listed in the global variable\n# 'opt_warning_types'.\nfunc_warning ()\n{\n    $debug_cmd\n\n    # CATEGORY must be in the warning_categories list!\n    case \" $warning_categories \" in\n      *\" $1 \"*) ;;\n      *) func_internal_error \"invalid warning category '$1'\" ;;\n    esac\n\n    _G_category=$1\n    shift\n\n    case \" $opt_warning_types \" in\n      *\" $_G_category \"*) $warning_func ${1+\"$@\"} ;;\n    esac\n}\n\n\n# func_sort_ver VER1 VER2\n# -----------------------\n# 'sort -V' is not generally available.\n# Note this deviates from the version comparison in automake\n# in that it treats 1.5 < 1.5.0, and treats 1.4.4a < 1.4-p3a\n# but this should suffice as we won't be specifying old\n# version formats or redundant trailing .0 in bootstrap.conf.\n# If we did want full compatibility then we should probably\n# use m4_version_compare from autoconf.\nfunc_sort_ver ()\n{\n    $debug_cmd\n\n    printf '%s\\n%s\\n' \"$1\" \"$2\" \\\n      | sort -t. -k 1,1n -k 2,2n -k 3,3n -k 4,4n -k 5,5n -k 6,6n -k 7,7n -k 8,8n -k 9,9n\n}\n\n# func_lt_ver PREV CURR\n# ---------------------\n# Return true if PREV and CURR are in the correct order according to\n# func_sort_ver, otherwise false.  Use it like this:\n#\n#  func_lt_ver \"$prev_ver\" \"$proposed_ver\" || func_fatal_error \"...\"\nfunc_lt_ver ()\n{\n    $debug_cmd\n\n    test \"x$1\" = x`func_sort_ver \"$1\" \"$2\" | $SED 1q`\n}\n\n\n# Local variables:\n# mode: shell-script\n# sh-indentation: 2\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-pattern: \"10/scriptversion=%:y-%02m-%02d.%02H; # UTC\"\n# time-stamp-time-zone: \"UTC\"\n# End:\n#! /bin/sh\n\n# Set a version string for this script.\nscriptversion=2014-01-07.03; # UTC\n\n# A portable, pluggable option parser for Bourne shell.\n# Written by Gary V. Vaughan, 2010\n\n# Copyright (C) 2010-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n# Please report bugs or propose patches to gary@gnu.org.\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# This file is a library for parsing options in your shell scripts along\n# with assorted other useful supporting features that you can make use\n# of too.\n#\n# For the simplest scripts you might need only:\n#\n#   #!/bin/sh\n#   . relative/path/to/funclib.sh\n#   . relative/path/to/options-parser\n#   scriptversion=1.0\n#   func_options ${1+\"$@\"}\n#   eval set dummy \"$func_options_result\"; shift\n#   ...rest of your script...\n#\n# In order for the '--version' option to work, you will need to have a\n# suitably formatted comment like the one at the top of this file\n# starting with '# Written by ' and ending with '# warranty; '.\n#\n# For '-h' and '--help' to work, you will also need a one line\n# description of your script's purpose in a comment directly above the\n# '# Written by ' line, like the one at the top of this file.\n#\n# The default options also support '--debug', which will turn on shell\n# execution tracing (see the comment above debug_cmd below for another\n# use), and '--verbose' and the func_verbose function to allow your script\n# to display verbose messages only when your user has specified\n# '--verbose'.\n#\n# After sourcing this file, you can plug processing for additional\n# options by amending the variables from the 'Configuration' section\n# below, and following the instructions in the 'Option parsing'\n# section further down.\n\n## -------------- ##\n## Configuration. ##\n## -------------- ##\n\n# You should override these variables in your script after sourcing this\n# file so that they reflect the customisations you have added to the\n# option parser.\n\n# The usage line for option parsing errors and the start of '-h' and\n# '--help' output messages. You can embed shell variables for delayed\n# expansion at the time the message is displayed, but you will need to\n# quote other shell meta-characters carefully to prevent them being\n# expanded when the contents are evaled.\nusage='$progpath [OPTION]...'\n\n# Short help message in response to '-h' and '--help'.  Add to this or\n# override it after sourcing this library to reflect the full set of\n# options your script accepts.\nusage_message=\"\\\n       --debug        enable verbose shell tracing\n   -W, --warnings=CATEGORY\n                      report the warnings falling in CATEGORY [all]\n   -v, --verbose      verbosely report processing\n       --version      print version information and exit\n   -h, --help         print short or long help message and exit\n\"\n\n# Additional text appended to 'usage_message' in response to '--help'.\nlong_help_message=\"\nWarning categories include:\n       'all'          show all warnings\n       'none'         turn off all the warnings\n       'error'        warnings are treated as fatal errors\"\n\n# Help message printed before fatal option parsing errors.\nfatal_help=\"Try '\\$progname --help' for more information.\"\n\n\n\n## ------------------------- ##\n## Hook function management. ##\n## ------------------------- ##\n\n# This section contains functions for adding, removing, and running hooks\n# to the main code.  A hook is just a named list of of function, that can\n# be run in order later on.\n\n# func_hookable FUNC_NAME\n# -----------------------\n# Declare that FUNC_NAME will run hooks added with\n# 'func_add_hook FUNC_NAME ...'.\nfunc_hookable ()\n{\n    $debug_cmd\n\n    func_append hookable_fns \" $1\"\n}\n\n\n# func_add_hook FUNC_NAME HOOK_FUNC\n# ---------------------------------\n# Request that FUNC_NAME call HOOK_FUNC before it returns.  FUNC_NAME must\n# first have been declared \"hookable\" by a call to 'func_hookable'.\nfunc_add_hook ()\n{\n    $debug_cmd\n\n    case \" $hookable_fns \" in\n      *\" $1 \"*) ;;\n      *) func_fatal_error \"'$1' does not accept hook functions.\" ;;\n    esac\n\n    eval func_append ${1}_hooks '\" $2\"'\n}\n\n\n# func_remove_hook FUNC_NAME HOOK_FUNC\n# ------------------------------------\n# Remove HOOK_FUNC from the list of functions called by FUNC_NAME.\nfunc_remove_hook ()\n{\n    $debug_cmd\n\n    eval ${1}_hooks='`$ECHO \"\\$'$1'_hooks\" |$SED \"s| '$2'||\"`'\n}\n\n\n# func_run_hooks FUNC_NAME [ARG]...\n# ---------------------------------\n# Run all hook functions registered to FUNC_NAME.\n# It is assumed that the list of hook functions contains nothing more\n# than a whitespace-delimited list of legal shell function names, and\n# no effort is wasted trying to catch shell meta-characters or preserve\n# whitespace.\nfunc_run_hooks ()\n{\n    $debug_cmd\n\n    case \" $hookable_fns \" in\n      *\" $1 \"*) ;;\n      *) func_fatal_error \"'$1' does not support hook funcions.n\" ;;\n    esac\n\n    eval _G_hook_fns=\\$$1_hooks; shift\n\n    for _G_hook in $_G_hook_fns; do\n      eval $_G_hook '\"$@\"'\n\n      # store returned options list back into positional\n      # parameters for next 'cmd' execution.\n      eval _G_hook_result=\\$${_G_hook}_result\n      eval set dummy \"$_G_hook_result\"; shift\n    done\n\n    func_quote_for_eval ${1+\"$@\"}\n    func_run_hooks_result=$func_quote_for_eval_result\n}\n\n\n\n## --------------- ##\n## Option parsing. ##\n## --------------- ##\n\n# In order to add your own option parsing hooks, you must accept the\n# full positional parameter list in your hook function, remove any\n# options that you action, and then pass back the remaining unprocessed\n# options in '<hooked_function_name>_result', escaped suitably for\n# 'eval'.  Like this:\n#\n#    my_options_prep ()\n#    {\n#        $debug_cmd\n#\n#        # Extend the existing usage message.\n#        usage_message=$usage_message'\n#      -s, --silent       don'\\''t print informational messages\n#    '\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_options_prep_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_options_prep my_options_prep\n#\n#\n#    my_silent_option ()\n#    {\n#        $debug_cmd\n#\n#        # Note that for efficiency, we parse as many options as we can\n#        # recognise in a loop before passing the remainder back to the\n#        # caller on the first unrecognised argument we encounter.\n#        while test $# -gt 0; do\n#          opt=$1; shift\n#          case $opt in\n#            --silent|-s) opt_silent=: ;;\n#            # Separate non-argument short options:\n#            -s*)         func_split_short_opt \"$_G_opt\"\n#                         set dummy \"$func_split_short_opt_name\" \\\n#                             \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n#                         shift\n#                         ;;\n#            *)            set dummy \"$_G_opt\" \"$*\"; shift; break ;;\n#          esac\n#        done\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_silent_option_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_parse_options my_silent_option\n#\n#\n#    my_option_validation ()\n#    {\n#        $debug_cmd\n#\n#        $opt_silent && $opt_verbose && func_fatal_help \"\\\n#    '--silent' and '--verbose' options are mutually exclusive.\"\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_option_validation_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_validate_options my_option_validation\n#\n# You'll alse need to manually amend $usage_message to reflect the extra\n# options you parse.  It's preferable to append if you can, so that\n# multiple option parsing hooks can be added safely.\n\n\n# func_options [ARG]...\n# ---------------------\n# All the functions called inside func_options are hookable. See the\n# individual implementations for details.\nfunc_hookable func_options\nfunc_options ()\n{\n    $debug_cmd\n\n    func_options_prep ${1+\"$@\"}\n    eval func_parse_options \\\n        ${func_options_prep_result+\"$func_options_prep_result\"}\n    eval func_validate_options \\\n        ${func_parse_options_result+\"$func_parse_options_result\"}\n\n    eval func_run_hooks func_options \\\n        ${func_validate_options_result+\"$func_validate_options_result\"}\n\n    # save modified positional parameters for caller\n    func_options_result=$func_run_hooks_result\n}\n\n\n# func_options_prep [ARG]...\n# --------------------------\n# All initialisations required before starting the option parse loop.\n# Note that when calling hook functions, we pass through the list of\n# positional parameters.  If a hook function modifies that list, and\n# needs to propogate that back to rest of this script, then the complete\n# modified list must be put in 'func_run_hooks_result' before\n# returning.\nfunc_hookable func_options_prep\nfunc_options_prep ()\n{\n    $debug_cmd\n\n    # Option defaults:\n    opt_verbose=false\n    opt_warning_types=\n\n    func_run_hooks func_options_prep ${1+\"$@\"}\n\n    # save modified positional parameters for caller\n    func_options_prep_result=$func_run_hooks_result\n}\n\n\n# func_parse_options [ARG]...\n# ---------------------------\n# The main option parsing loop.\nfunc_hookable func_parse_options\nfunc_parse_options ()\n{\n    $debug_cmd\n\n    func_parse_options_result=\n\n    # this just eases exit handling\n    while test $# -gt 0; do\n      # Defer to hook functions for initial option parsing, so they\n      # get priority in the event of reusing an option name.\n      func_run_hooks func_parse_options ${1+\"$@\"}\n\n      # Adjust func_parse_options positional parameters to match\n      eval set dummy \"$func_run_hooks_result\"; shift\n\n      # Break out of the loop if we already parsed every option.\n      test $# -gt 0 || break\n\n      _G_opt=$1\n      shift\n      case $_G_opt in\n        --debug|-x)   debug_cmd='set -x'\n                      func_echo \"enabling shell trace mode\"\n                      $debug_cmd\n                      ;;\n\n        --no-warnings|--no-warning|--no-warn)\n                      set dummy --warnings none ${1+\"$@\"}\n                      shift\n\t\t      ;;\n\n        --warnings|--warning|-W)\n                      test $# = 0 && func_missing_arg $_G_opt && break\n                      case \" $warning_categories $1\" in\n                        *\" $1 \"*)\n                          # trailing space prevents matching last $1 above\n                          func_append_uniq opt_warning_types \" $1\"\n                          ;;\n                        *all)\n                          opt_warning_types=$warning_categories\n                          ;;\n                        *none)\n                          opt_warning_types=none\n                          warning_func=:\n                          ;;\n                        *error)\n                          opt_warning_types=$warning_categories\n                          warning_func=func_fatal_error\n                          ;;\n                        *)\n                          func_fatal_error \\\n                             \"unsupported warning category: '$1'\"\n                          ;;\n                      esac\n                      shift\n                      ;;\n\n        --verbose|-v) opt_verbose=: ;;\n        --version)    func_version ;;\n        -\\?|-h)       func_usage ;;\n        --help)       func_help ;;\n\n\t# Separate optargs to long options (plugins may need this):\n\t--*=*)        func_split_equals \"$_G_opt\"\n\t              set dummy \"$func_split_equals_lhs\" \\\n                          \"$func_split_equals_rhs\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n       # Separate optargs to short options:\n        -W*)\n                      func_split_short_opt \"$_G_opt\"\n                      set dummy \"$func_split_short_opt_name\" \\\n                          \"$func_split_short_opt_arg\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n        # Separate non-argument short options:\n        -\\?*|-h*|-v*|-x*)\n                      func_split_short_opt \"$_G_opt\"\n                      set dummy \"$func_split_short_opt_name\" \\\n                          \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n        --)           break ;;\n        -*)           func_fatal_help \"unrecognised option: '$_G_opt'\" ;;\n        *)            set dummy \"$_G_opt\" ${1+\"$@\"}; shift; break ;;\n      esac\n    done\n\n    # save modified positional parameters for caller\n    func_quote_for_eval ${1+\"$@\"}\n    func_parse_options_result=$func_quote_for_eval_result\n}\n\n\n# func_validate_options [ARG]...\n# ------------------------------\n# Perform any sanity checks on option settings and/or unconsumed\n# arguments.\nfunc_hookable func_validate_options\nfunc_validate_options ()\n{\n    $debug_cmd\n\n    # Display all warnings if -W was not given.\n    test -n \"$opt_warning_types\" || opt_warning_types=\" $warning_categories\"\n\n    func_run_hooks func_validate_options ${1+\"$@\"}\n\n    # Bail if the options were screwed!\n    $exit_cmd $EXIT_FAILURE\n\n    # save modified positional parameters for caller\n    func_validate_options_result=$func_run_hooks_result\n}\n\n\n\n## ----------------- ##\n## Helper functions. ##\n## ----------------- ##\n\n# This section contains the helper functions used by the rest of the\n# hookable option parser framework in ascii-betical order.\n\n\n# func_fatal_help ARG...\n# ----------------------\n# Echo program name prefixed message to standard error, followed by\n# a help hint, and exit.\nfunc_fatal_help ()\n{\n    $debug_cmd\n\n    eval \\$ECHO \\\"\"Usage: $usage\"\\\"\n    eval \\$ECHO \\\"\"$fatal_help\"\\\"\n    func_error ${1+\"$@\"}\n    exit $EXIT_FAILURE\n}\n\n\n# func_help\n# ---------\n# Echo long help message to standard output and exit.\nfunc_help ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"$long_help_message\"\n    exit 0\n}\n\n\n# func_missing_arg ARGNAME\n# ------------------------\n# Echo program name prefixed message to standard error and set global\n# exit_cmd.\nfunc_missing_arg ()\n{\n    $debug_cmd\n\n    func_error \"Missing argument for '$1'.\"\n    exit_cmd=exit\n}\n\n\n# func_split_equals STRING\n# ------------------------\n# Set func_split_equals_lhs and func_split_equals_rhs shell variables after\n# splitting STRING at the '=' sign.\ntest -z \"$_G_HAVE_XSI_OPS\" \\\n    && (eval 'x=a/b/c;\n      test 5aa/bb/cc = \"${#x}${x%%/*}${x%/*}${x#*/}${x##*/}\"') 2>/dev/null \\\n    && _G_HAVE_XSI_OPS=yes\n\nif test yes = \"$_G_HAVE_XSI_OPS\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_split_equals ()\n  {\n      $debug_cmd\n\n      func_split_equals_lhs=${1%%=*}\n      func_split_equals_rhs=${1#*=}\n      test \"x$func_split_equals_lhs\" = \"x$1\" \\\n        && func_split_equals_rhs=\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_split_equals ()\n  {\n      $debug_cmd\n\n      func_split_equals_lhs=`expr \"x$1\" : 'x\\([^=]*\\)'`\n      func_split_equals_rhs=\n      test \"x$func_split_equals_lhs\" = \"x$1\" \\\n        || func_split_equals_rhs=`expr \"x$1\" : 'x[^=]*=\\(.*\\)$'`\n  }\nfi #func_split_equals\n\n\n# func_split_short_opt SHORTOPT\n# -----------------------------\n# Set func_split_short_opt_name and func_split_short_opt_arg shell\n# variables after splitting SHORTOPT after the 2nd character.\nif test yes = \"$_G_HAVE_XSI_OPS\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_split_short_opt ()\n  {\n      $debug_cmd\n\n      func_split_short_opt_arg=${1#??}\n      func_split_short_opt_name=${1%\"$func_split_short_opt_arg\"}\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_split_short_opt ()\n  {\n      $debug_cmd\n\n      func_split_short_opt_name=`expr \"x$1\" : 'x-\\(.\\)'`\n      func_split_short_opt_arg=`expr \"x$1\" : 'x-.\\(.*\\)$'`\n  }\nfi #func_split_short_opt\n\n\n# func_usage\n# ----------\n# Echo short help message to standard output and exit.\nfunc_usage ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"Run '$progname --help |${PAGER-more}' for full usage\"\n    exit 0\n}\n\n\n# func_usage_message\n# ------------------\n# Echo short help message to standard output.\nfunc_usage_message ()\n{\n    $debug_cmd\n\n    eval \\$ECHO \\\"\"Usage: $usage\"\\\"\n    echo\n    $SED -n 's|^# ||\n        /^Written by/{\n          x;p;x\n        }\n\th\n\t/^Written by/q' < \"$progpath\"\n    echo\n    eval \\$ECHO \\\"\"$usage_message\"\\\"\n}\n\n\n# func_version\n# ------------\n# Echo version message to standard output and exit.\nfunc_version ()\n{\n    $debug_cmd\n\n    printf '%s\\n' \"$progname $scriptversion\"\n    $SED -n '\n        /(C)/!b go\n        :more\n        /\\./!{\n          N\n          s|\\n# | |\n          b more\n        }\n        :go\n        /^# Written by /,/# warranty; / {\n          s|^# ||\n          s|^# *$||\n          s|\\((C)\\)[ 0-9,-]*[ ,-]\\([1-9][0-9]* \\)|\\1 \\2|\n          p\n        }\n        /^# Written by / {\n          s|^# ||\n          p\n        }\n        /^warranty; /q' < \"$progpath\"\n\n    exit $?\n}\n\n\n# Local variables:\n# mode: shell-script\n# sh-indentation: 2\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-pattern: \"10/scriptversion=%:y-%02m-%02d.%02H; # UTC\"\n# time-stamp-time-zone: \"UTC\"\n# End:\n\n# Set a version string.\nscriptversion='(GNU libtool) 2.4.6'\n\n\n# func_echo ARG...\n# ----------------\n# Libtool also displays the current mode in messages, so override\n# funclib.sh func_echo with this custom definition.\nfunc_echo ()\n{\n    $debug_cmd\n\n    _G_message=$*\n\n    func_echo_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_IFS\n      $ECHO \"$progname${opt_mode+: $opt_mode}: $_G_line\"\n    done\n    IFS=$func_echo_IFS\n}\n\n\n# func_warning ARG...\n# -------------------\n# Libtool warnings are not categorized, so override funclib.sh\n# func_warning with this simpler definition.\nfunc_warning ()\n{\n    $debug_cmd\n\n    $warning_func ${1+\"$@\"}\n}\n\n\n## ---------------- ##\n## Options parsing. ##\n## ---------------- ##\n\n# Hook in the functions to make sure our own options are parsed during\n# the option parsing loop.\n\nusage='$progpath [OPTION]... [MODE-ARG]...'\n\n# Short help message in response to '-h'.\nusage_message=\"Options:\n       --config             show all configuration variables\n       --debug              enable verbose shell tracing\n   -n, --dry-run            display commands without modifying any files\n       --features           display basic configuration information and exit\n       --mode=MODE          use operation mode MODE\n       --no-warnings        equivalent to '-Wnone'\n       --preserve-dup-deps  don't remove duplicate dependency libraries\n       --quiet, --silent    don't print informational messages\n       --tag=TAG            use configuration variables from tag TAG\n   -v, --verbose            print more informational messages than default\n       --version            print version information\n   -W, --warnings=CATEGORY  report the warnings falling in CATEGORY [all]\n   -h, --help, --help-all   print short, long, or detailed help message\n\"\n\n# Additional text appended to 'usage_message' in response to '--help'.\nfunc_help ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"$long_help_message\n\nMODE must be one of the following:\n\n       clean           remove files from the build directory\n       compile         compile a source file into a libtool object\n       execute         automatically set library path, then run a program\n       finish          complete the installation of libtool libraries\n       install         install libraries or executables\n       link            create a library or an executable\n       uninstall       remove libraries from an installed directory\n\nMODE-ARGS vary depending on the MODE.  When passed as first option,\n'--mode=MODE' may be abbreviated as 'MODE' or a unique abbreviation of that.\nTry '$progname --help --mode=MODE' for a more detailed description of MODE.\n\nWhen reporting a bug, please describe a test case to reproduce it and\ninclude the following information:\n\n       host-triplet:   $host\n       shell:          $SHELL\n       compiler:       $LTCC\n       compiler flags: $LTCFLAGS\n       linker:         $LD (gnu? $with_gnu_ld)\n       version:        $progname (GNU libtool) 2.4.6\n       automake:       `($AUTOMAKE --version) 2>/dev/null |$SED 1q`\n       autoconf:       `($AUTOCONF --version) 2>/dev/null |$SED 1q`\n\nReport bugs to <bug-libtool@gnu.org>.\nGNU libtool home page: <http://www.gnu.org/software/libtool/>.\nGeneral help using GNU software: <http://www.gnu.org/gethelp/>.\"\n    exit 0\n}\n\n\n# func_lo2o OBJECT-NAME\n# ---------------------\n# Transform OBJECT-NAME from a '.lo' suffix to the platform specific\n# object suffix.\n\nlo2o=s/\\\\.lo\\$/.$objext/\no2lo=s/\\\\.$objext\\$/.lo/\n\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_lo2o ()\n  {\n    case $1 in\n      *.lo) func_lo2o_result=${1%.lo}.$objext ;;\n      *   ) func_lo2o_result=$1               ;;\n    esac\n  }'\n\n  # func_xform LIBOBJ-OR-SOURCE\n  # ---------------------------\n  # Transform LIBOBJ-OR-SOURCE from a '.o' or '.c' (or otherwise)\n  # suffix to a '.lo' libtool-object suffix.\n  eval 'func_xform ()\n  {\n    func_xform_result=${1%.*}.lo\n  }'\nelse\n  # ...otherwise fall back to using sed.\n  func_lo2o ()\n  {\n    func_lo2o_result=`$ECHO \"$1\" | $SED \"$lo2o\"`\n  }\n\n  func_xform ()\n  {\n    func_xform_result=`$ECHO \"$1\" | $SED 's|\\.[^.]*$|.lo|'`\n  }\nfi\n\n\n# func_fatal_configuration ARG...\n# -------------------------------\n# Echo program name prefixed message to standard error, followed by\n# a configuration failure hint, and exit.\nfunc_fatal_configuration ()\n{\n    func__fatal_error ${1+\"$@\"} \\\n      \"See the $PACKAGE documentation for more information.\" \\\n      \"Fatal configuration error.\"\n}\n\n\n# func_config\n# -----------\n# Display the configuration for all the tags in this script.\nfunc_config ()\n{\n    re_begincf='^# ### BEGIN LIBTOOL'\n    re_endcf='^# ### END LIBTOOL'\n\n    # Default configuration.\n    $SED \"1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\\$d\" < \"$progpath\"\n\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      $SED -n \"/$re_begincf TAG CONFIG: $tagname\\$/,/$re_endcf TAG CONFIG: $tagname\\$/p\" < \"$progpath\"\n    done\n\n    exit $?\n}\n\n\n# func_features\n# -------------\n# Display the features supported by this script.\nfunc_features ()\n{\n    echo \"host: $host\"\n    if test yes = \"$build_libtool_libs\"; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test yes = \"$build_old_libs\"; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n\n    exit $?\n}\n\n\n# func_enable_tag TAGNAME\n# -----------------------\n# Verify that TAGNAME is valid, and either flag an error and exit, or\n# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist\n# variable here.\nfunc_enable_tag ()\n{\n    # Global variable:\n    tagname=$1\n\n    re_begincf=\"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\\$\"\n    re_endcf=\"^# ### END LIBTOOL TAG CONFIG: $tagname\\$\"\n    sed_extractcf=/$re_begincf/,/$re_endcf/p\n\n    # Validate tagname.\n    case $tagname in\n      *[!-_A-Za-z0-9,/]*)\n        func_fatal_error \"invalid tag name: $tagname\"\n        ;;\n    esac\n\n    # Don't test for the \"default\" C tag, as we know it's\n    # there but not specially marked.\n    case $tagname in\n        CC) ;;\n    *)\n        if $GREP \"$re_begincf\" \"$progpath\" >/dev/null 2>&1; then\n\t  taglist=\"$taglist $tagname\"\n\n\t  # Evaluate the configuration.  Be careful to quote the path\n\t  # and the sed script, to avoid splitting on whitespace, but\n\t  # also don't use non-portable quotes within backquotes within\n\t  # quotes we have to do it in 2 steps:\n\t  extractedcf=`$SED -n -e \"$sed_extractcf\" < \"$progpath\"`\n\t  eval \"$extractedcf\"\n        else\n\t  func_error \"ignoring unknown tag $tagname\"\n        fi\n        ;;\n    esac\n}\n\n\n# func_check_version_match\n# ------------------------\n# Ensure that we are using m4 macros, and libtool script from the same\n# release of libtool.\nfunc_check_version_match ()\n{\n    if test \"$package_revision\" != \"$macro_revision\"; then\n      if test \"$VERSION\" != \"$macro_version\"; then\n        if test -z \"$macro_version\"; then\n          cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from an older release.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n        else\n          cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n        fi\n      else\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,\n$progname: but the definition of this LT_INIT comes from revision $macro_revision.\n$progname: You should recreate aclocal.m4 with macros from revision $package_revision\n$progname: of $PACKAGE $VERSION and run autoconf again.\n_LT_EOF\n      fi\n\n      exit $EXIT_MISMATCH\n    fi\n}\n\n\n# libtool_options_prep [ARG]...\n# -----------------------------\n# Preparation for options parsed by libtool.\nlibtool_options_prep ()\n{\n    $debug_mode\n\n    # Option defaults:\n    opt_config=false\n    opt_dlopen=\n    opt_dry_run=false\n    opt_help=false\n    opt_mode=\n    opt_preserve_dup_deps=false\n    opt_quiet=false\n\n    nonopt=\n    preserve_args=\n\n    # Shorthand for --mode=foo, only valid as the first argument\n    case $1 in\n    clean|clea|cle|cl)\n      shift; set dummy --mode clean ${1+\"$@\"}; shift\n      ;;\n    compile|compil|compi|comp|com|co|c)\n      shift; set dummy --mode compile ${1+\"$@\"}; shift\n      ;;\n    execute|execut|execu|exec|exe|ex|e)\n      shift; set dummy --mode execute ${1+\"$@\"}; shift\n      ;;\n    finish|finis|fini|fin|fi|f)\n      shift; set dummy --mode finish ${1+\"$@\"}; shift\n      ;;\n    install|instal|insta|inst|ins|in|i)\n      shift; set dummy --mode install ${1+\"$@\"}; shift\n      ;;\n    link|lin|li|l)\n      shift; set dummy --mode link ${1+\"$@\"}; shift\n      ;;\n    uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)\n      shift; set dummy --mode uninstall ${1+\"$@\"}; shift\n      ;;\n    esac\n\n    # Pass back the list of options.\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_options_prep_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_options_prep libtool_options_prep\n\n\n# libtool_parse_options [ARG]...\n# ---------------------------------\n# Provide handling for libtool specific options.\nlibtool_parse_options ()\n{\n    $debug_cmd\n\n    # Perform our own loop to consume as many options as possible in\n    # each iteration.\n    while test $# -gt 0; do\n      _G_opt=$1\n      shift\n      case $_G_opt in\n        --dry-run|--dryrun|-n)\n                        opt_dry_run=:\n                        ;;\n\n        --config)       func_config ;;\n\n        --dlopen|-dlopen)\n                        opt_dlopen=\"${opt_dlopen+$opt_dlopen\n}$1\"\n                        shift\n                        ;;\n\n        --preserve-dup-deps)\n                        opt_preserve_dup_deps=: ;;\n\n        --features)     func_features ;;\n\n        --finish)       set dummy --mode finish ${1+\"$@\"}; shift ;;\n\n        --help)         opt_help=: ;;\n\n        --help-all)     opt_help=': help-all' ;;\n\n        --mode)         test $# = 0 && func_missing_arg $_G_opt && break\n                        opt_mode=$1\n                        case $1 in\n                          # Valid mode arguments:\n                          clean|compile|execute|finish|install|link|relink|uninstall) ;;\n\n                          # Catch anything else as an error\n                          *) func_error \"invalid argument for $_G_opt\"\n                             exit_cmd=exit\n                             break\n                             ;;\n                        esac\n                        shift\n                        ;;\n\n        --no-silent|--no-quiet)\n                        opt_quiet=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --no-warnings|--no-warning|--no-warn)\n                        opt_warning=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --no-verbose)\n                        opt_verbose=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --silent|--quiet)\n                        opt_quiet=:\n                        opt_verbose=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --tag)          test $# = 0 && func_missing_arg $_G_opt && break\n                        opt_tag=$1\n                        func_append preserve_args \" $_G_opt $1\"\n                        func_enable_tag \"$1\"\n                        shift\n                        ;;\n\n        --verbose|-v)   opt_quiet=false\n                        opt_verbose=:\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n\t# An option not handled by this hook function:\n        *)\t\tset dummy \"$_G_opt\" ${1+\"$@\"};\tshift; break  ;;\n      esac\n    done\n\n\n    # save modified positional parameters for caller\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_parse_options_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_parse_options libtool_parse_options\n\n\n\n# libtool_validate_options [ARG]...\n# ---------------------------------\n# Perform any sanity checks on option settings and/or unconsumed\n# arguments.\nlibtool_validate_options ()\n{\n    # save first non-option argument\n    if test 0 -lt $#; then\n      nonopt=$1\n      shift\n    fi\n\n    # preserve --debug\n    test : = \"$debug_cmd\" || func_append preserve_args \" --debug\"\n\n    case $host in\n      # Solaris2 added to fix http://debbugs.gnu.org/cgi/bugreport.cgi?bug=16452\n      # see also: http://gcc.gnu.org/bugzilla/show_bug.cgi?id=59788\n      *cygwin* | *mingw* | *pw32* | *cegcc* | *solaris2* | *os2*)\n        # don't eliminate duplications in $postdeps and $predeps\n        opt_duplicate_compiler_generated_deps=:\n        ;;\n      *)\n        opt_duplicate_compiler_generated_deps=$opt_preserve_dup_deps\n        ;;\n    esac\n\n    $opt_help || {\n      # Sanity checks first:\n      func_check_version_match\n\n      test yes != \"$build_libtool_libs\" \\\n        && test yes != \"$build_old_libs\" \\\n        && func_fatal_configuration \"not configured to build any kind of library\"\n\n      # Darwin sucks\n      eval std_shrext=\\\"$shrext_cmds\\\"\n\n      # Only execute mode is allowed to have -dlopen flags.\n      if test -n \"$opt_dlopen\" && test execute != \"$opt_mode\"; then\n        func_error \"unrecognized option '-dlopen'\"\n        $ECHO \"$help\" 1>&2\n        exit $EXIT_FAILURE\n      fi\n\n      # Change the help message to a mode-specific one.\n      generic_help=$help\n      help=\"Try '$progname --help --mode=$opt_mode' for more information.\"\n    }\n\n    # Pass back the unparsed argument list\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_validate_options_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_validate_options libtool_validate_options\n\n\n# Process options as early as possible so that --help and --version\n# can return quickly.\nfunc_options ${1+\"$@\"}\neval set dummy \"$func_options_result\"; shift\n\n\n\n## ----------- ##\n##    Main.    ##\n## ----------- ##\n\nmagic='%%%MAGIC variable%%%'\nmagic_exe='%%%MAGIC EXE variable%%%'\n\n# Global variables.\nextracted_archives=\nextracted_serial=0\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n}\n\n# func_generated_by_libtool\n# True iff stdin has been generated by Libtool. This function is only\n# a basic sanity check; it will hardly flush out determined imposters.\nfunc_generated_by_libtool_p ()\n{\n  $GREP \"^# Generated by .*$PACKAGE\" > /dev/null 2>&1\n}\n\n# func_lalib_p file\n# True iff FILE is a libtool '.la' library or '.lo' object file.\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_lalib_p ()\n{\n    test -f \"$1\" &&\n      $SED -e 4q \"$1\" 2>/dev/null | func_generated_by_libtool_p\n}\n\n# func_lalib_unsafe_p file\n# True iff FILE is a libtool '.la' library or '.lo' object file.\n# This function implements the same check as func_lalib_p without\n# resorting to external programs.  To this end, it redirects stdin and\n# closes it afterwards, without saving the original file descriptor.\n# As a safety measure, use it only where a negative result would be\n# fatal anyway.  Works if 'file' does not exist.\nfunc_lalib_unsafe_p ()\n{\n    lalib_p=no\n    if test -f \"$1\" && test -r \"$1\" && exec 5<&0 <\"$1\"; then\n\tfor lalib_p_l in 1 2 3 4\n\tdo\n\t    read lalib_p_line\n\t    case $lalib_p_line in\n\t\t\\#\\ Generated\\ by\\ *$PACKAGE* ) lalib_p=yes; break;;\n\t    esac\n\tdone\n\texec 0<&5 5<&-\n    fi\n    test yes = \"$lalib_p\"\n}\n\n# func_ltwrapper_script_p file\n# True iff FILE is a libtool wrapper script\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_script_p ()\n{\n    test -f \"$1\" &&\n      $lt_truncate_bin < \"$1\" 2>/dev/null | func_generated_by_libtool_p\n}\n\n# func_ltwrapper_executable_p file\n# True iff FILE is a libtool wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_executable_p ()\n{\n    func_ltwrapper_exec_suffix=\n    case $1 in\n    *.exe) ;;\n    *) func_ltwrapper_exec_suffix=.exe ;;\n    esac\n    $GREP \"$magic_exe\" \"$1$func_ltwrapper_exec_suffix\" >/dev/null 2>&1\n}\n\n# func_ltwrapper_scriptname file\n# Assumes file is an ltwrapper_executable\n# uses $file to determine the appropriate filename for a\n# temporary ltwrapper_script.\nfunc_ltwrapper_scriptname ()\n{\n    func_dirname_and_basename \"$1\" \"\" \".\"\n    func_stripname '' '.exe' \"$func_basename_result\"\n    func_ltwrapper_scriptname_result=$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper\n}\n\n# func_ltwrapper_p file\n# True iff FILE is a libtool wrapper script or wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_p ()\n{\n    func_ltwrapper_script_p \"$1\" || func_ltwrapper_executable_p \"$1\"\n}\n\n\n# func_execute_cmds commands fail_cmd\n# Execute tilde-delimited COMMANDS.\n# If FAIL_CMD is given, eval that upon failure.\n# FAIL_CMD may read-access the current command in variable CMD!\nfunc_execute_cmds ()\n{\n    $debug_cmd\n\n    save_ifs=$IFS; IFS='~'\n    for cmd in $1; do\n      IFS=$sp$nl\n      eval cmd=\\\"$cmd\\\"\n      IFS=$save_ifs\n      func_show_eval \"$cmd\" \"${2-:}\"\n    done\n    IFS=$save_ifs\n}\n\n\n# func_source file\n# Source FILE, adding directory component if necessary.\n# Note that it is not necessary on cygwin/mingw to append a dot to\n# FILE even if both FILE and FILE.exe exist: automatic-append-.exe\n# behavior happens only for exec(3), not for open(2)!  Also, sourcing\n# 'FILE.' does not work on cygwin managed mounts.\nfunc_source ()\n{\n    $debug_cmd\n\n    case $1 in\n    */* | *\\\\*)\t. \"$1\" ;;\n    *)\t\t. \"./$1\" ;;\n    esac\n}\n\n\n# func_resolve_sysroot PATH\n# Replace a leading = in PATH with a sysroot.  Store the result into\n# func_resolve_sysroot_result\nfunc_resolve_sysroot ()\n{\n  func_resolve_sysroot_result=$1\n  case $func_resolve_sysroot_result in\n  =*)\n    func_stripname '=' '' \"$func_resolve_sysroot_result\"\n    func_resolve_sysroot_result=$lt_sysroot$func_stripname_result\n    ;;\n  esac\n}\n\n# func_replace_sysroot PATH\n# If PATH begins with the sysroot, replace it with = and\n# store the result into func_replace_sysroot_result.\nfunc_replace_sysroot ()\n{\n  case $lt_sysroot:$1 in\n  ?*:\"$lt_sysroot\"*)\n    func_stripname \"$lt_sysroot\" '' \"$1\"\n    func_replace_sysroot_result='='$func_stripname_result\n    ;;\n  *)\n    # Including no sysroot.\n    func_replace_sysroot_result=$1\n    ;;\n  esac\n}\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    $debug_cmd\n\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n\tfunc_append_quoted CC_quoted \"$arg\"\n      done\n      CC_expanded=`func_echo_all $CC`\n      CC_quoted_expanded=`func_echo_all $CC_quoted`\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n      \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if $GREP \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`$SED -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t      # Double-quote args containing other shell metacharacters.\n\t      func_append_quoted CC_quoted \"$arg\"\n\t    done\n\t    CC_expanded=`func_echo_all $CC`\n\t    CC_quoted_expanded=`func_echo_all $CC_quoted`\n\t    case \"$@ \" in\n\t    \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n\t    \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  func_echo \"unable to infer tagged configuration\"\n\t  func_fatal_error \"specify a tag with '--tag'\"\n#\telse\n#\t  func_verbose \"using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n\n# func_write_libtool_object output_name pic_name nonpic_name\n# Create a libtool object file (analogous to a \".la\" file),\n# but don't create it if we're doing a dry run.\nfunc_write_libtool_object ()\n{\n    write_libobj=$1\n    if test yes = \"$build_libtool_libs\"; then\n      write_lobj=\\'$2\\'\n    else\n      write_lobj=none\n    fi\n\n    if test yes = \"$build_old_libs\"; then\n      write_oldobj=\\'$3\\'\n    else\n      write_oldobj=none\n    fi\n\n    $opt_dry_run || {\n      cat >${write_libobj}T <<EOF\n# $write_libobj - a libtool object file\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=$write_lobj\n\n# Name of the non-PIC object\nnon_pic_object=$write_oldobj\n\nEOF\n      $MV \"${write_libobj}T\" \"$write_libobj\"\n    }\n}\n\n\n##################################################\n# FILE NAME AND PATH CONVERSION HELPER FUNCTIONS #\n##################################################\n\n# func_convert_core_file_wine_to_w32 ARG\n# Helper function used by file name conversion functions when $build is *nix,\n# and $host is mingw, cygwin, or some other w32 environment. Relies on a\n# correctly configured wine environment available, with the winepath program\n# in $build's $PATH.\n#\n# ARG is the $build file name to be converted to w32 format.\n# Result is available in $func_convert_core_file_wine_to_w32_result, and will\n# be empty on error (or when ARG is empty)\nfunc_convert_core_file_wine_to_w32 ()\n{\n  $debug_cmd\n\n  func_convert_core_file_wine_to_w32_result=$1\n  if test -n \"$1\"; then\n    # Unfortunately, winepath does not exit with a non-zero error code, so we\n    # are forced to check the contents of stdout. On the other hand, if the\n    # command is not found, the shell will set an exit code of 127 and print\n    # *an error message* to stdout. So we must check for both error code of\n    # zero AND non-empty stdout, which explains the odd construction:\n    func_convert_core_file_wine_to_w32_tmp=`winepath -w \"$1\" 2>/dev/null`\n    if test \"$?\" -eq 0 && test -n \"$func_convert_core_file_wine_to_w32_tmp\"; then\n      func_convert_core_file_wine_to_w32_result=`$ECHO \"$func_convert_core_file_wine_to_w32_tmp\" |\n        $SED -e \"$sed_naive_backslashify\"`\n    else\n      func_convert_core_file_wine_to_w32_result=\n    fi\n  fi\n}\n# end: func_convert_core_file_wine_to_w32\n\n\n# func_convert_core_path_wine_to_w32 ARG\n# Helper function used by path conversion functions when $build is *nix, and\n# $host is mingw, cygwin, or some other w32 environment. Relies on a correctly\n# configured wine environment available, with the winepath program in $build's\n# $PATH. Assumes ARG has no leading or trailing path separator characters.\n#\n# ARG is path to be converted from $build format to win32.\n# Result is available in $func_convert_core_path_wine_to_w32_result.\n# Unconvertible file (directory) names in ARG are skipped; if no directory names\n# are convertible, then the result may be empty.\nfunc_convert_core_path_wine_to_w32 ()\n{\n  $debug_cmd\n\n  # unfortunately, winepath doesn't convert paths, only file names\n  func_convert_core_path_wine_to_w32_result=\n  if test -n \"$1\"; then\n    oldIFS=$IFS\n    IFS=:\n    for func_convert_core_path_wine_to_w32_f in $1; do\n      IFS=$oldIFS\n      func_convert_core_file_wine_to_w32 \"$func_convert_core_path_wine_to_w32_f\"\n      if test -n \"$func_convert_core_file_wine_to_w32_result\"; then\n        if test -z \"$func_convert_core_path_wine_to_w32_result\"; then\n          func_convert_core_path_wine_to_w32_result=$func_convert_core_file_wine_to_w32_result\n        else\n          func_append func_convert_core_path_wine_to_w32_result \";$func_convert_core_file_wine_to_w32_result\"\n        fi\n      fi\n    done\n    IFS=$oldIFS\n  fi\n}\n# end: func_convert_core_path_wine_to_w32\n\n\n# func_cygpath ARGS...\n# Wrapper around calling the cygpath program via LT_CYGPATH. This is used when\n# when (1) $build is *nix and Cygwin is hosted via a wine environment; or (2)\n# $build is MSYS and $host is Cygwin, or (3) $build is Cygwin. In case (1) or\n# (2), returns the Cygwin file name or path in func_cygpath_result (input\n# file name or path is assumed to be in w32 format, as previously converted\n# from $build's *nix or MSYS format). In case (3), returns the w32 file name\n# or path in func_cygpath_result (input file name or path is assumed to be in\n# Cygwin format). Returns an empty string on error.\n#\n# ARGS are passed to cygpath, with the last one being the file name or path to\n# be converted.\n#\n# Specify the absolute *nix (or w32) name to cygpath in the LT_CYGPATH\n# environment variable; do not put it in $PATH.\nfunc_cygpath ()\n{\n  $debug_cmd\n\n  if test -n \"$LT_CYGPATH\" && test -f \"$LT_CYGPATH\"; then\n    func_cygpath_result=`$LT_CYGPATH \"$@\" 2>/dev/null`\n    if test \"$?\" -ne 0; then\n      # on failure, ensure result is empty\n      func_cygpath_result=\n    fi\n  else\n    func_cygpath_result=\n    func_error \"LT_CYGPATH is empty or specifies non-existent file: '$LT_CYGPATH'\"\n  fi\n}\n#end: func_cygpath\n\n\n# func_convert_core_msys_to_w32 ARG\n# Convert file name or path ARG from MSYS format to w32 format.  Return\n# result in func_convert_core_msys_to_w32_result.\nfunc_convert_core_msys_to_w32 ()\n{\n  $debug_cmd\n\n  # awkward: cmd appends spaces to result\n  func_convert_core_msys_to_w32_result=`( cmd //c echo \"$1\" ) 2>/dev/null |\n    $SED -e 's/[ ]*$//' -e \"$sed_naive_backslashify\"`\n}\n#end: func_convert_core_msys_to_w32\n\n\n# func_convert_file_check ARG1 ARG2\n# Verify that ARG1 (a file name in $build format) was converted to $host\n# format in ARG2. Otherwise, emit an error message, but continue (resetting\n# func_to_host_file_result to ARG1).\nfunc_convert_file_check ()\n{\n  $debug_cmd\n\n  if test -z \"$2\" && test -n \"$1\"; then\n    func_error \"Could not determine host file name corresponding to\"\n    func_error \"  '$1'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback:\n    func_to_host_file_result=$1\n  fi\n}\n# end func_convert_file_check\n\n\n# func_convert_path_check FROM_PATHSEP TO_PATHSEP FROM_PATH TO_PATH\n# Verify that FROM_PATH (a path in $build format) was converted to $host\n# format in TO_PATH. Otherwise, emit an error message, but continue, resetting\n# func_to_host_file_result to a simplistic fallback value (see below).\nfunc_convert_path_check ()\n{\n  $debug_cmd\n\n  if test -z \"$4\" && test -n \"$3\"; then\n    func_error \"Could not determine the host path corresponding to\"\n    func_error \"  '$3'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback.  This is a deliberately simplistic \"conversion\" and\n    # should not be \"improved\".  See libtool.info.\n    if test \"x$1\" != \"x$2\"; then\n      lt_replace_pathsep_chars=\"s|$1|$2|g\"\n      func_to_host_path_result=`echo \"$3\" |\n        $SED -e \"$lt_replace_pathsep_chars\"`\n    else\n      func_to_host_path_result=$3\n    fi\n  fi\n}\n# end func_convert_path_check\n\n\n# func_convert_path_front_back_pathsep FRONTPAT BACKPAT REPL ORIG\n# Modifies func_to_host_path_result by prepending REPL if ORIG matches FRONTPAT\n# and appending REPL if ORIG matches BACKPAT.\nfunc_convert_path_front_back_pathsep ()\n{\n  $debug_cmd\n\n  case $4 in\n  $1 ) func_to_host_path_result=$3$func_to_host_path_result\n    ;;\n  esac\n  case $4 in\n  $2 ) func_append func_to_host_path_result \"$3\"\n    ;;\n  esac\n}\n# end func_convert_path_front_back_pathsep\n\n\n##################################################\n# $build to $host FILE NAME CONVERSION FUNCTIONS #\n##################################################\n# invoked via '$to_host_file_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# Result will be available in $func_to_host_file_result.\n\n\n# func_to_host_file ARG\n# Converts the file name ARG from $build format to $host format. Return result\n# in func_to_host_file_result.\nfunc_to_host_file ()\n{\n  $debug_cmd\n\n  $to_host_file_cmd \"$1\"\n}\n# end func_to_host_file\n\n\n# func_to_tool_file ARG LAZY\n# converts the file name ARG from $build format to toolchain format. Return\n# result in func_to_tool_file_result.  If the conversion in use is listed\n# in (the comma separated) LAZY, no conversion takes place.\nfunc_to_tool_file ()\n{\n  $debug_cmd\n\n  case ,$2, in\n    *,\"$to_tool_file_cmd\",*)\n      func_to_tool_file_result=$1\n      ;;\n    *)\n      $to_tool_file_cmd \"$1\"\n      func_to_tool_file_result=$func_to_host_file_result\n      ;;\n  esac\n}\n# end func_to_tool_file\n\n\n# func_convert_file_noop ARG\n# Copy ARG to func_to_host_file_result.\nfunc_convert_file_noop ()\n{\n  func_to_host_file_result=$1\n}\n# end func_convert_file_noop\n\n\n# func_convert_file_msys_to_w32 ARG\n# Convert file name ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_msys_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_to_host_file_result=$func_convert_core_msys_to_w32_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_w32\n\n\n# func_convert_file_cygwin_to_w32 ARG\n# Convert file name ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_cygwin_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    # because $build is cygwin, we call \"the\" cygpath in $PATH; no need to use\n    # LT_CYGPATH in this case.\n    func_to_host_file_result=`cygpath -m \"$1\"`\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_cygwin_to_w32\n\n\n# func_convert_file_nix_to_w32 ARG\n# Convert file name ARG from *nix to w32 format.  Requires a wine environment\n# and a working winepath. Returns result in func_to_host_file_result.\nfunc_convert_file_nix_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_to_host_file_result=$func_convert_core_file_wine_to_w32_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_w32\n\n\n# func_convert_file_msys_to_cygwin ARG\n# Convert file name ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_file_msys_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_file_result=$func_cygpath_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_cygwin\n\n\n# func_convert_file_nix_to_cygwin ARG\n# Convert file name ARG from *nix to Cygwin format.  Requires Cygwin installed\n# in a wine environment, working winepath, and LT_CYGPATH set.  Returns result\n# in func_to_host_file_result.\nfunc_convert_file_nix_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    # convert from *nix to w32, then use cygpath to convert from w32 to cygwin.\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_file_wine_to_w32_result\"\n    func_to_host_file_result=$func_cygpath_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_cygwin\n\n\n#############################################\n# $build to $host PATH CONVERSION FUNCTIONS #\n#############################################\n# invoked via '$to_host_path_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# The result will be available in $func_to_host_path_result.\n#\n# Path separators are also converted from $build format to $host format.  If\n# ARG begins or ends with a path separator character, it is preserved (but\n# converted to $host format) on output.\n#\n# All path conversion functions are named using the following convention:\n#   file name conversion function    : func_convert_file_X_to_Y ()\n#   path conversion function         : func_convert_path_X_to_Y ()\n# where, for any given $build/$host combination the 'X_to_Y' value is the\n# same.  If conversion functions are added for new $build/$host combinations,\n# the two new functions must follow this pattern, or func_init_to_host_path_cmd\n# will break.\n\n\n# func_init_to_host_path_cmd\n# Ensures that function \"pointer\" variable $to_host_path_cmd is set to the\n# appropriate value, based on the value of $to_host_file_cmd.\nto_host_path_cmd=\nfunc_init_to_host_path_cmd ()\n{\n  $debug_cmd\n\n  if test -z \"$to_host_path_cmd\"; then\n    func_stripname 'func_convert_file_' '' \"$to_host_file_cmd\"\n    to_host_path_cmd=func_convert_path_$func_stripname_result\n  fi\n}\n\n\n# func_to_host_path ARG\n# Converts the path ARG from $build format to $host format. Return result\n# in func_to_host_path_result.\nfunc_to_host_path ()\n{\n  $debug_cmd\n\n  func_init_to_host_path_cmd\n  $to_host_path_cmd \"$1\"\n}\n# end func_to_host_path\n\n\n# func_convert_path_noop ARG\n# Copy ARG to func_to_host_path_result.\nfunc_convert_path_noop ()\n{\n  func_to_host_path_result=$1\n}\n# end func_convert_path_noop\n\n\n# func_convert_path_msys_to_w32 ARG\n# Convert path ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_path_result.\nfunc_convert_path_msys_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from ARG.  MSYS\n    # behavior is inconsistent here; cygpath turns them into '.;' and ';.';\n    # and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=$func_convert_core_msys_to_w32_result\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_w32\n\n\n# func_convert_path_cygwin_to_w32 ARG\n# Convert path ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_cygwin_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_to_host_path_result=`cygpath -m -p \"$func_to_host_path_tmp1\"`\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_cygwin_to_w32\n\n\n# func_convert_path_nix_to_w32 ARG\n# Convert path ARG from *nix to w32 format.  Requires a wine environment and\n# a working winepath.  Returns result in func_to_host_file_result.\nfunc_convert_path_nix_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=$func_convert_core_path_wine_to_w32_result\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_w32\n\n\n# func_convert_path_msys_to_cygwin ARG\n# Convert path ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_path_msys_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_path_result=$func_cygpath_result\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_cygwin\n\n\n# func_convert_path_nix_to_cygwin ARG\n# Convert path ARG from *nix to Cygwin format.  Requires Cygwin installed in a\n# a wine environment, working winepath, and LT_CYGPATH set.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_nix_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from\n    # ARG. msys behavior is inconsistent here, cygpath turns them\n    # into '.;' and ';.', and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_path_wine_to_w32_result\"\n    func_to_host_path_result=$func_cygpath_result\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_cygwin\n\n\n# func_dll_def_p FILE\n# True iff FILE is a Windows DLL '.def' file.\n# Keep in sync with _LT_DLL_DEF_P in libtool.m4\nfunc_dll_def_p ()\n{\n  $debug_cmd\n\n  func_dll_def_p_tmp=`$SED -n \\\n    -e 's/^[\t ]*//' \\\n    -e '/^\\(;.*\\)*$/d' \\\n    -e 's/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p' \\\n    -e q \\\n    \"$1\"`\n  test DEF = \"$func_dll_def_p_tmp\"\n}\n\n\n# func_mode_compile arg...\nfunc_mode_compile ()\n{\n    $debug_cmd\n\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=$nonopt  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n    pie_flag=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=$arg\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=$arg\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  test -n \"$libobj\" && \\\n\t    func_fatal_error \"you cannot specify '-o' more than once\"\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-pie | -fpie | -fPIE)\n          func_append pie_flag \" $arg\"\n\t  continue\n\t  ;;\n\n\t-shared | -static | -prefer-pic | -prefer-non-pic)\n\t  func_append later \" $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  func_stripname '-Wc,' '' \"$arg\"\n\t  args=$func_stripname_result\n\t  lastarg=\n\t  save_ifs=$IFS; IFS=,\n\t  for arg in $args; do\n\t    IFS=$save_ifs\n\t    func_append_quoted lastarg \"$arg\"\n\t  done\n\t  IFS=$save_ifs\n\t  func_stripname ' ' '' \"$lastarg\"\n\t  lastarg=$func_stripname_result\n\n\t  # Add the arguments to base_compile.\n\t  func_append base_compile \" $lastarg\"\n\t  continue\n\t  ;;\n\n\t*)\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=$srcfile\n\t  srcfile=$arg\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      func_append_quoted base_compile \"$lastarg\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      func_fatal_error \"you must specify an argument for -Xcompile\"\n      ;;\n    target)\n      func_fatal_error \"you must specify a target with '-o'\"\n      ;;\n    *)\n      # Get the name of the library object.\n      test -z \"$libobj\" && {\n\tfunc_basename \"$srcfile\"\n\tlibobj=$func_basename_result\n      }\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    case $libobj in\n    *.[cCFSifmso] | \\\n    *.ada | *.adb | *.ads | *.asm | \\\n    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \\\n    *.[fF][09]? | *.for | *.java | *.go | *.obj | *.sx | *.cu | *.cup)\n      func_xform \"$libobj\"\n      libobj=$func_xform_result\n      ;;\n    esac\n\n    case $libobj in\n    *.lo) func_lo2o \"$libobj\"; obj=$func_lo2o_result ;;\n    *)\n      func_fatal_error \"cannot determine name of library object from '$libobj'\"\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -shared)\n\ttest yes = \"$build_libtool_libs\" \\\n\t  || func_fatal_configuration \"cannot build a shared library\"\n\tbuild_old_libs=no\n\tcontinue\n\t;;\n\n      -static)\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    func_quote_for_eval \"$libobj\"\n    test \"X$libobj\" != \"X$func_quote_for_eval_result\" \\\n      && $ECHO \"X$libobj\" | $GREP '[]~#^*{};<>?\"'\"'\"'\t &()|`$[]' \\\n      && func_warning \"libobj name '$libobj' may not contain shell special characters.\"\n    func_dirname_and_basename \"$obj\" \"/\" \"\"\n    objname=$func_basename_result\n    xdir=$func_dirname_result\n    lobj=$xdir$objdir/$objname\n\n    test -z \"$base_compile\" && \\\n      func_fatal_help \"you must specify a compilation command\"\n\n    # Delete any leftover library objects.\n    if test yes = \"$build_old_libs\"; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2* | cegcc*)\n      pic_mode=default\n      ;;\n    esac\n    if test no = \"$pic_mode\" && test pass_all != \"$deplibs_check_method\"; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test no = \"$compiler_c_o\"; then\n      output_obj=`$ECHO \"$srcfile\" | $SED 's%^.*/%%; s%\\.[^.]*$%%'`.$objext\n      lockfile=$output_obj.lock\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test yes = \"$need_locks\"; then\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test warn = \"$need_locks\"; then\n      if test -f \"$lockfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n      func_append removelist \" $output_obj\"\n      $ECHO \"$srcfile\" > \"$lockfile\"\n    fi\n\n    $opt_dry_run || $RM $removelist\n    func_append removelist \" $lockfile\"\n    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15\n\n    func_to_tool_file \"$srcfile\" func_convert_file_msys_to_w32\n    srcfile=$func_to_tool_file_result\n    func_quote_for_eval \"$srcfile\"\n    qsrcfile=$func_quote_for_eval_result\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test yes = \"$build_libtool_libs\"; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test no != \"$pic_mode\"; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      func_mkdir_p \"$xdir$objdir\"\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tfunc_append command \" -o $lobj\"\n      fi\n\n      func_show_eval_locale \"$command\"\t\\\n          'test -n \"$output_obj\" && $RM $removelist; exit $EXIT_FAILURE'\n\n      if test warn = \"$need_locks\" &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$lobj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n\n      # Allow error messages only from the first compilation.\n      if test yes = \"$suppress_opt\"; then\n\tsuppress_output=' >/dev/null 2>&1'\n      fi\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test yes = \"$build_old_libs\"; then\n      if test yes != \"$pic_mode\"; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile$pie_flag\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test yes = \"$compiler_c_o\"; then\n\tfunc_append command \" -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      func_append command \"$suppress_output\"\n      func_show_eval_locale \"$command\" \\\n        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'\n\n      if test warn = \"$need_locks\" &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$obj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n    fi\n\n    $opt_dry_run || {\n      func_write_libtool_object \"$libobj\" \"$objdir/$objname\" \"$objname\"\n\n      # Unlock the critical section if it was locked\n      if test no != \"$need_locks\"; then\n\tremovelist=$lockfile\n        $RM \"$lockfile\"\n      fi\n    }\n\n    exit $EXIT_SUCCESS\n}\n\n$opt_help || {\n  test compile = \"$opt_mode\" && func_mode_compile ${1+\"$@\"}\n}\n\nfunc_mode_help ()\n{\n    # We need to display help for each of the modes.\n    case $opt_mode in\n      \"\")\n        # Generic help is extracted from the usage comments\n        # at the start of this file.\n        func_help\n        ;;\n\n      clean)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      compile)\n      $ECHO \\\n\"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -no-suppress      do not suppress compiler output for multiple passes\n  -prefer-pic       try to build PIC objects only\n  -prefer-non-pic   try to build non-PIC objects only\n  -shared           do not build a '.o' file suitable for static linking\n  -static           only build a '.o' file suitable for static linking\n  -Wc,FLAG          pass FLAG directly to the compiler\n\nCOMPILE-COMMAND is a command to be used in creating a 'standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix '.c' with the\nlibrary object suffix, '.lo'.\"\n        ;;\n\n      execute)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to '-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n        ;;\n\n      finish)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe '--dry-run' option if you just want to see what would be executed.\"\n        ;;\n\n      install)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the 'install' or 'cp' program.\n\nThe following components of INSTALL-COMMAND are treated specially:\n\n  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n        ;;\n\n      link)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -bindir BINDIR    specify path to binaries directory (for systems where\n                    libraries must be found in the PATH setting at runtime)\n  -dlopen FILE      '-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n                    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n                    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  use a list of object files found in FILE to specify objects\n  -os2dllname NAME  force a short DLL name on OS/2 (no effect on other OSes)\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -shared           only do dynamic linking of libtool libraries\n  -shrext SUFFIX    override the standard shared library file extension\n  -static           do not do any dynamic linking of uninstalled libtool libraries\n  -static-libtool-libs\n                    do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n                    specify library version info [each variable defaults to 0]\n  -weak LIBNAME     declare that the target provides the LIBNAME interface\n  -Wc,FLAG\n  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler\n  -Wl,FLAG\n  -Xlinker FLAG     pass linker-specific FLAG directly to the linker\n  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)\n\nAll other options (arguments beginning with '-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in '.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in '.la', then a libtool library is created,\nonly library objects ('.lo' files) may be specified, and '-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in '.a' or '.lib', then a standard library is created\nusing 'ar' and 'ranlib', or on Windows using 'lib'.\n\nIf OUTPUT-FILE ends in '.lo' or '.$objext', then a reloadable object file\nis created, otherwise an executable program is created.\"\n        ;;\n\n      uninstall)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      *)\n        func_fatal_help \"invalid operation mode '$opt_mode'\"\n        ;;\n    esac\n\n    echo\n    $ECHO \"Try '$progname --help' for more information about other modes.\"\n}\n\n# Now that we've collected a possible --mode arg, show help if necessary\nif $opt_help; then\n  if test : = \"$opt_help\"; then\n    func_mode_help\n  else\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\tfunc_mode_help\n      done\n    } | $SED -n '1p; 2,$s/^Usage:/  or: /p'\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\techo\n\tfunc_mode_help\n      done\n    } |\n    $SED '1d\n      /^When reporting/,/^Report/{\n\tH\n\td\n      }\n      $x\n      /information about other modes/d\n      /more detailed .*MODE/d\n      s/^Usage:.*--mode=\\([^ ]*\\) .*/Description of \\1 mode:/'\n  fi\n  exit $?\nfi\n\n\n# func_mode_execute arg...\nfunc_mode_execute ()\n{\n    $debug_cmd\n\n    # The first argument is the command name.\n    cmd=$nonopt\n    test -z \"$cmd\" && \\\n      func_fatal_help \"you must specify a COMMAND\"\n\n    # Handle -dlopen flags immediately.\n    for file in $opt_dlopen; do\n      test -f \"$file\" \\\n\t|| func_fatal_help \"'$file' is not a file\"\n\n      dir=\n      case $file in\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"'$lib' is not a valid libtool archive\"\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\tfunc_source \"$file\"\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && \\\n\t    func_warning \"'$file' was not linked with '-export-dynamic'\"\n\t  continue\n\tfi\n\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=$func_dirname_result\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  func_append dir \"/$objdir\"\n\telse\n\t  if test ! -f \"$dir/$dlname\"; then\n\t    func_fatal_error \"cannot find '$dlname' in '$dir' or '$dir/$objdir'\"\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=$func_dirname_result\n\t;;\n\n      *)\n\tfunc_warning \"'-dlopen' is ignored for non-libtool libraries and objects\"\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=$absdir\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=$magic\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -* | *.la | *.lo ) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif func_ltwrapper_script_p \"$file\"; then\n\t  func_source \"$file\"\n\t  # Transform arg to wrapped name.\n\t  file=$progdir/$program\n\telif func_ltwrapper_executable_p \"$file\"; then\n\t  func_ltwrapper_scriptname \"$file\"\n\t  func_source \"$func_ltwrapper_scriptname_result\"\n\t  # Transform arg to wrapped name.\n\t  file=$progdir/$program\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      func_append_quoted args \"$file\"\n    done\n\n    if $opt_dry_run; then\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$ECHO \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\techo \"export $shlibpath_var\"\n      fi\n      $ECHO \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    else\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\n      do\n\teval \"if test \\\"\\${save_$lt_var+set}\\\" = set; then\n                $lt_var=\\$save_$lt_var; export $lt_var\n\t      else\n\t\t$lt_unset $lt_var\n\t      fi\"\n      done\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\\$cmd$args\n    fi\n}\n\ntest execute = \"$opt_mode\" && func_mode_execute ${1+\"$@\"}\n\n\n# func_mode_finish arg...\nfunc_mode_finish ()\n{\n    $debug_cmd\n\n    libs=\n    libdirs=\n    admincmds=\n\n    for opt in \"$nonopt\" ${1+\"$@\"}\n    do\n      if test -d \"$opt\"; then\n\tfunc_append libdirs \" $opt\"\n\n      elif test -f \"$opt\"; then\n\tif func_lalib_unsafe_p \"$opt\"; then\n\t  func_append libs \" $opt\"\n\telse\n\t  func_warning \"'$opt' is not a valid libtool archive\"\n\tfi\n\n      else\n\tfunc_fatal_error \"invalid argument '$opt'\"\n      fi\n    done\n\n    if test -n \"$libs\"; then\n      if test -n \"$lt_sysroot\"; then\n        sysroot_regex=`$ECHO \"$lt_sysroot\" | $SED \"$sed_make_literal_regex\"`\n        sysroot_cmd=\"s/\\([ ']\\)$sysroot_regex/\\1/g;\"\n      else\n        sysroot_cmd=\n      fi\n\n      # Remove sysroot references\n      if $opt_dry_run; then\n        for lib in $libs; do\n          echo \"removing references to $lt_sysroot and '=' prefixes from $lib\"\n        done\n      else\n        tmpdir=`func_mktempdir`\n        for lib in $libs; do\n\t  $SED -e \"$sysroot_cmd s/\\([ ']-[LR]\\)=/\\1/g; s/\\([ ']\\)=/\\1/g\" $lib \\\n\t    > $tmpdir/tmp-la\n\t  mv -f $tmpdir/tmp-la $lib\n\tdone\n        ${RM}r \"$tmpdir\"\n      fi\n    fi\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  func_execute_cmds \"$finish_cmds\" 'admincmds=\"$admincmds\n'\"$cmd\"'\"'\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $opt_dry_run || eval \"$cmds\" || func_append admincmds \"\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    $opt_quiet && exit $EXIT_SUCCESS\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      echo \"----------------------------------------------------------------------\"\n      echo \"Libraries have been installed in:\"\n      for libdir in $libdirs; do\n\t$ECHO \"   $libdir\"\n      done\n      echo\n      echo \"If you ever happen to want to link against installed libraries\"\n      echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n      echo \"specify the full pathname of the library, or use the '-LLIBDIR'\"\n      echo \"flag during linking and do at least one of the following:\"\n      if test -n \"$shlibpath_var\"; then\n\techo \"   - add LIBDIR to the '$shlibpath_var' environment variable\"\n\techo \"     during execution\"\n      fi\n      if test -n \"$runpath_var\"; then\n\techo \"   - add LIBDIR to the '$runpath_var' environment variable\"\n\techo \"     during linking\"\n      fi\n      if test -n \"$hardcode_libdir_flag_spec\"; then\n\tlibdir=LIBDIR\n\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n\t$ECHO \"   - use the '$flag' linker flag\"\n      fi\n      if test -n \"$admincmds\"; then\n\t$ECHO \"   - have your system administrator run these commands:$admincmds\"\n      fi\n      if test -f /etc/ld.so.conf; then\n\techo \"   - have your system administrator add LIBDIR to '/etc/ld.so.conf'\"\n      fi\n      echo\n\n      echo \"See any operating system documentation about shared libraries for\"\n      case $host in\n\tsolaris2.[6789]|solaris2.1[0-9])\n\t  echo \"more information, such as the ld(1), crle(1) and ld.so(8) manual\"\n\t  echo \"pages.\"\n\t  ;;\n\t*)\n\t  echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n\t  ;;\n      esac\n      echo \"----------------------------------------------------------------------\"\n    fi\n    exit $EXIT_SUCCESS\n}\n\ntest finish = \"$opt_mode\" && func_mode_finish ${1+\"$@\"}\n\n\n# func_mode_install arg...\nfunc_mode_install ()\n{\n    $debug_cmd\n\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$SHELL\" = \"$nonopt\" || test /bin/sh = \"$nonopt\" ||\n       # Allow the use of GNU shtool's install command.\n       case $nonopt in *shtool*) :;; *) false;; esac\n    then\n      # Aesthetically quote it.\n      func_quote_for_eval \"$nonopt\"\n      install_prog=\"$func_quote_for_eval_result \"\n      arg=$1\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    func_quote_for_eval \"$arg\"\n    func_append install_prog \"$func_quote_for_eval_result\"\n    install_shared_prog=$install_prog\n    case \" $install_prog \" in\n      *[\\\\\\ /]cp\\ *) install_cp=: ;;\n      *) install_cp=false ;;\n    esac\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=false\n    stripme=\n    no_mode=:\n    for arg\n    do\n      arg2=\n      if test -n \"$dest\"; then\n\tfunc_append files \" $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=: ;;\n      -f)\n\tif $install_cp; then :; else\n\t  prev=$arg\n\tfi\n\t;;\n      -g | -m | -o)\n\tprev=$arg\n\t;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  if test X-m = \"X$prev\" && test -n \"$install_override_mode\"; then\n\t    arg2=$install_override_mode\n\t    no_mode=false\n\t  fi\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      func_quote_for_eval \"$arg\"\n      func_append install_prog \" $func_quote_for_eval_result\"\n      if test -n \"$arg2\"; then\n\tfunc_quote_for_eval \"$arg2\"\n      fi\n      func_append install_shared_prog \" $func_quote_for_eval_result\"\n    done\n\n    test -z \"$install_prog\" && \\\n      func_fatal_help \"you must specify an install program\"\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the '$prev' option requires an argument\"\n\n    if test -n \"$install_override_mode\" && $no_mode; then\n      if $install_cp; then :; else\n\tfunc_quote_for_eval \"$install_override_mode\"\n\tfunc_append install_shared_prog \" -m $func_quote_for_eval_result\"\n      fi\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\tfunc_fatal_help \"no file or destination specified\"\n      else\n\tfunc_fatal_help \"you must specify a destination\"\n      fi\n    fi\n\n    # Strip any trailing slash from the destination.\n    func_stripname '' '/' \"$dest\"\n    dest=$func_stripname_result\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=:\n    if $isdir; then\n      destdir=$dest\n      destname=\n    else\n      func_dirname_and_basename \"$dest\" \"\" \".\"\n      destdir=$func_dirname_result\n      destname=$func_basename_result\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files; shift\n      test \"$#\" -gt 1 && \\\n\tfunc_fatal_help \"'$dest' is not a directory\"\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  func_fatal_help \"'$destdir' must be an absolute directory name\"\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=$magic\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tfunc_append staticlibs \" $file\"\n\t;;\n\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"'$file' is not a valid libtool archive\"\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\tfunc_source \"$file\"\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append current_libdirs \" $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append future_libdirs \" $libdir\" ;;\n\t  esac\n\tfi\n\n\tfunc_dirname \"$file\" \"/\" \"\"\n\tdir=$func_dirname_result\n\tfunc_append dir \"$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$ECHO \"$destdir\" | $SED -e \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  test \"$inst_prefix_dir\" = \"$destdir\" && \\\n\t    func_fatal_error \"error: cannot install '$file' to a directory not ending in $libdir\"\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  func_warning \"relinking '$file'\"\n\t  func_show_eval \"$relink_command\" \\\n\t    'func_fatal_error \"error: relink '\\''$file'\\'' with the above command before installing it\"'\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names; shift\n\tif test -n \"$1\"; then\n\t  realname=$1\n\t  shift\n\n\t  srcname=$realname\n\t  test -n \"$relink_command\" && srcname=${realname}T\n\n\t  # Install the shared library and build the symlinks.\n\t  func_show_eval \"$install_shared_prog $dir/$srcname $destdir/$realname\" \\\n\t      'exit $?'\n\t  tstripme=$stripme\n\t  case $host_os in\n\t  cygwin* | mingw* | pw32* | cegcc*)\n\t    case $realname in\n\t    *.dll.a)\n\t      tstripme=\n\t      ;;\n\t    esac\n\t    ;;\n\t  os2*)\n\t    case $realname in\n\t    *_dll.a)\n\t      tstripme=\n\t      ;;\n\t    esac\n\t    ;;\n\t  esac\n\t  if test -n \"$tstripme\" && test -n \"$striplib\"; then\n\t    func_show_eval \"$striplib $destdir/$realname\" 'exit $?'\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try 'ln -sf' first, because the 'ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      test \"$linkname\" != \"$realname\" \\\n\t\t&& func_show_eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })\"\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=$destdir/$realname\n\t  func_execute_cmds \"$postinstall_cmds\" 'exit $?'\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tfunc_basename \"$file\"\n\tname=$func_basename_result\n\tinstname=$dir/${name}i\n\tfunc_show_eval \"$install_prog $instname $destdir/$name\" 'exit $?'\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && func_append staticlibs \" $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=$destdir/$destname\n\telse\n\t  func_basename \"$file\"\n\t  destfile=$func_basename_result\n\t  destfile=$destdir/$destfile\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  func_lo2o \"$destfile\"\n\t  staticdest=$func_lo2o_result\n\t  ;;\n\t*.$objext)\n\t  staticdest=$destfile\n\t  destfile=\n\t  ;;\n\t*)\n\t  func_fatal_help \"cannot copy a libtool object to '$destfile'\"\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\ttest -n \"$destfile\" && \\\n\t  func_show_eval \"$install_prog $file $destfile\" 'exit $?'\n\n\t# Install the old object if enabled.\n\tif test yes = \"$build_old_libs\"; then\n\t  # Deduce the name of the old-style object file.\n\t  func_lo2o \"$file\"\n\t  staticobj=$func_lo2o_result\n\t  func_show_eval \"$install_prog \\$staticobj \\$staticdest\" 'exit $?'\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=$destdir/$destname\n\telse\n\t  func_basename \"$file\"\n\t  destfile=$func_basename_result\n\t  destfile=$destdir/$destfile\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      func_stripname '' '.exe' \"$file\"\n\t      file=$func_stripname_result\n\t      stripped_ext=.exe\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin* | *mingw*)\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      wrapper=$func_ltwrapper_scriptname_result\n\t    else\n\t      func_stripname '' '.exe' \"$file\"\n\t      wrapper=$func_stripname_result\n\t    fi\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif func_ltwrapper_script_p \"$wrapper\"; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  func_source \"$wrapper\"\n\n\t  # Check the variables that should have been set.\n\t  test -z \"$generated_by_libtool_version\" && \\\n\t    func_fatal_error \"invalid libtool wrapper script '$wrapper'\"\n\n\t  finalize=:\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      func_source \"$lib\"\n\t    fi\n\t    libfile=$libdir/`$ECHO \"$lib\" | $SED 's%^.*/%%g'`\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      func_warning \"'$lib' has not been installed in '$libdir'\"\n\t      finalize=false\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  func_source \"$wrapper\"\n\n\t  outputname=\n\t  if test no = \"$fast_install\" && test -n \"$relink_command\"; then\n\t    $opt_dry_run || {\n\t      if $finalize; then\n\t        tmpdir=`func_mktempdir`\n\t\tfunc_basename \"$file$stripped_ext\"\n\t\tfile=$func_basename_result\n\t        outputname=$tmpdir/$file\n\t        # Replace the output file specification.\n\t        relink_command=`$ECHO \"$relink_command\" | $SED 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t        $opt_quiet || {\n\t          func_quote_for_expand \"$relink_command\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t        }\n\t        if eval \"$relink_command\"; then :\n\t          else\n\t\t  func_error \"error: relink '$file' with the above command before installing it\"\n\t\t  $opt_dry_run || ${RM}r \"$tmpdir\"\n\t\t  continue\n\t        fi\n\t        file=$outputname\n\t      else\n\t        func_warning \"cannot relink '$file'\"\n\t      fi\n\t    }\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$ECHO \"$file$stripped_ext\" | $SED \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    func_stripname '' '.exe' \"$destfile\"\n\t    destfile=$func_stripname_result\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tfunc_show_eval \"$install_prog\\$stripme \\$file \\$destfile\" 'exit $?'\n\t$opt_dry_run || if test -n \"$outputname\"; then\n\t  ${RM}r \"$tmpdir\"\n\tfi\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      func_basename \"$file\"\n      name=$func_basename_result\n\n      # Set up the ranlib parameters.\n      oldlib=$destdir/$name\n      func_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n      tool_oldlib=$func_to_tool_file_result\n\n      func_show_eval \"$install_prog \\$file \\$oldlib\" 'exit $?'\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\tfunc_show_eval \"$old_striplib $tool_oldlib\" 'exit $?'\n      fi\n\n      # Do each command in the postinstall commands.\n      func_execute_cmds \"$old_postinstall_cmds\" 'exit $?'\n    done\n\n    test -n \"$future_libdirs\" && \\\n      func_warning \"remember to run '$progname --finish$future_libdirs'\"\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      $opt_dry_run && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL \"$progpath\" $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest install = \"$opt_mode\" && func_mode_install ${1+\"$@\"}\n\n\n# func_generate_dlsyms outputname originator pic_p\n# Extract symbols from dlprefiles and create ${outputname}S.o with\n# a dlpreopen symbol table.\nfunc_generate_dlsyms ()\n{\n    $debug_cmd\n\n    my_outputname=$1\n    my_originator=$2\n    my_pic_p=${3-false}\n    my_prefix=`$ECHO \"$my_originator\" | $SED 's%[^a-zA-Z0-9]%_%g'`\n    my_dlsyms=\n\n    if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n      if test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\tmy_dlsyms=${my_outputname}S.c\n      else\n\tfunc_error \"not configured to extract global symbols from dlpreopened files\"\n      fi\n    fi\n\n    if test -n \"$my_dlsyms\"; then\n      case $my_dlsyms in\n      \"\") ;;\n      *.c)\n\t# Discover the nlist of each of the dlfiles.\n\tnlist=$output_objdir/$my_outputname.nm\n\n\tfunc_show_eval \"$RM $nlist ${nlist}S ${nlist}T\"\n\n\t# Parse the name list into a source file.\n\tfunc_verbose \"creating $output_objdir/$my_dlsyms\"\n\n\t$opt_dry_run || $ECHO > \"$output_objdir/$my_dlsyms\" \"\\\n/* $my_dlsyms - symbol resolution table for '$my_outputname' dlsym emulation. */\n/* Generated by $PROGRAM (GNU $PACKAGE) $VERSION */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n#if defined __GNUC__ && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))\n#pragma GCC diagnostic ignored \\\"-Wstrict-prototypes\\\"\n#endif\n\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\tif test yes = \"$dlself\"; then\n\t  func_verbose \"generating symbol list for '$output'\"\n\n\t  $opt_dry_run || echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t  # Add our own program objects to the symbol list.\n\t  progfiles=`$ECHO \"$objs$old_deplibs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\t  for progfile in $progfiles; do\n\t    func_to_tool_file \"$progfile\" func_convert_file_msys_to_w32\n\t    func_verbose \"extracting global C symbols from '$func_to_tool_file_result'\"\n\t    $opt_dry_run || eval \"$NM $func_to_tool_file_result | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  if test -n \"$export_symbols_regex\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  # Prepare the list of exported symbols\n\t  if test -z \"$export_symbols\"; then\n\t    export_symbols=$output_objdir/$outputname.exp\n\t    $opt_dry_run || {\n\t      $RM $export_symbols\n\t      eval \"$SED -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n\t      case $host in\n\t      *cygwin* | *mingw* | *cegcc* )\n                eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n                eval 'cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"'\n\t        ;;\n\t      esac\n\t    }\n\t  else\n\t    $opt_dry_run || {\n\t      eval \"$SED -e 's/\\([].[*^$]\\)/\\\\\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"'\n\t      eval '$GREP -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t      case $host in\n\t        *cygwin* | *mingw* | *cegcc* )\n\t          eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t          eval 'cat \"$nlist\" >> \"$output_objdir/$outputname.def\"'\n\t          ;;\n\t      esac\n\t    }\n\t  fi\n\tfi\n\n\tfor dlprefile in $dlprefiles; do\n\t  func_verbose \"extracting global C symbols from '$dlprefile'\"\n\t  func_basename \"$dlprefile\"\n\t  name=$func_basename_result\n          case $host in\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # if an import library, we need to obtain dlname\n\t      if func_win32_import_lib_p \"$dlprefile\"; then\n\t        func_tr_sh \"$dlprefile\"\n\t        eval \"curr_lafile=\\$libfile_$func_tr_sh_result\"\n\t        dlprefile_dlbasename=\n\t        if test -n \"$curr_lafile\" && func_lalib_p \"$curr_lafile\"; then\n\t          # Use subshell, to avoid clobbering current variable values\n\t          dlprefile_dlname=`source \"$curr_lafile\" && echo \"$dlname\"`\n\t          if test -n \"$dlprefile_dlname\"; then\n\t            func_basename \"$dlprefile_dlname\"\n\t            dlprefile_dlbasename=$func_basename_result\n\t          else\n\t            # no lafile. user explicitly requested -dlpreopen <import library>.\n\t            $sharedlib_from_linklib_cmd \"$dlprefile\"\n\t            dlprefile_dlbasename=$sharedlib_from_linklib_result\n\t          fi\n\t        fi\n\t        $opt_dry_run || {\n\t          if test -n \"$dlprefile_dlbasename\"; then\n\t            eval '$ECHO \": $dlprefile_dlbasename\" >> \"$nlist\"'\n\t          else\n\t            func_warning \"Could not compute DLL name from $name\"\n\t            eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          fi\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe |\n\t            $SED -e '/I __imp/d' -e 's/I __nm_/D /;s/_nm__//' >> '$nlist'\"\n\t        }\n\t      else # not an import lib\n\t        $opt_dry_run || {\n\t          eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t        }\n\t      fi\n\t    ;;\n\t    *)\n\t      $opt_dry_run || {\n\t        eval '$ECHO \": $name \" >> \"$nlist\"'\n\t        func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t        eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t      }\n\t    ;;\n          esac\n\tdone\n\n\t$opt_dry_run || {\n\t  # Make sure we have at least an empty file.\n\t  test -f \"$nlist\" || : > \"$nlist\"\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t    $MV \"$nlist\"T \"$nlist\"\n\t  fi\n\n\t  # Try sorting and uniquifying the output.\n\t  if $GREP -v \"^: \" < \"$nlist\" |\n\t      if sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\tsort -k 3\n\t      else\n\t\tsort +2\n\t      fi |\n\t      uniq > \"$nlist\"S; then\n\t    :\n\t  else\n\t    $GREP -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t  fi\n\n\t  if test -f \"$nlist\"S; then\n\t    eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$my_dlsyms\"'\n\t  else\n\t    echo '/* NONE */' >> \"$output_objdir/$my_dlsyms\"\n\t  fi\n\n\t  func_show_eval '$RM \"${nlist}I\"'\n\t  if test -n \"$global_symbol_to_import\"; then\n\t    eval \"$global_symbol_to_import\"' < \"$nlist\"S > \"$nlist\"I'\n\t  fi\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n\n/* The mapping between symbol names and symbols.  */\ntypedef struct {\n  const char *name;\n  void *address;\n} lt_dlsymlist;\nextern LT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[];\\\n\"\n\n\t  if test -s \"$nlist\"I; then\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\nstatic void lt_syminit(void)\n{\n  LT_DLSYM_CONST lt_dlsymlist *symbol = lt_${my_prefix}_LTX_preloaded_symbols;\n  for (; symbol->name; ++symbol)\n    {\"\n\t    $SED 's/.*/      if (STREQ (symbol->name, \\\"&\\\")) symbol->address = (void *) \\&&;/' < \"$nlist\"I >> \"$output_objdir/$my_dlsyms\"\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n    }\n}\"\n\t  fi\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\nLT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[] =\n{ {\\\"$my_originator\\\", (void *) 0},\"\n\n\t  if test -s \"$nlist\"I; then\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {\\\"@INIT@\\\", (void *) &lt_syminit},\"\n\t  fi\n\n\t  case $need_lib_prefix in\n\t  no)\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  *)\n\t    eval \"$global_symbol_to_c_name_address_lib_prefix\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  esac\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_${my_prefix}_LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t} # !$opt_dry_run\n\n\tpic_flag_for_symtable=\n\tcase \"$compile_command \" in\n\t*\" -static \"*) ;;\n\t*)\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2.*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\" ;;\n\t  *-*-hpux*)\n\t    pic_flag_for_symtable=\" $pic_flag\"  ;;\n\t  *)\n\t    $my_pic_p && pic_flag_for_symtable=\" $pic_flag\"\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tsymtab_cflags=\n\tfor arg in $LTCFLAGS; do\n\t  case $arg in\n\t  -pie | -fpie | -fPIE) ;;\n\t  *) func_append symtab_cflags \" $arg\" ;;\n\t  esac\n\tdone\n\n\t# Now compile the dynamic symbol file.\n\tfunc_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable \"$my_dlsyms\")' 'exit $?'\n\n\t# Clean up the generated files.\n\tfunc_show_eval '$RM \"$output_objdir/$my_dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\" \"${nlist}I\"'\n\n\t# Transform the symbol file into the correct name.\n\tsymfileobj=$output_objdir/${my_outputname}S.$objext\n\tcase $host in\n\t*cygwin* | *mingw* | *cegcc* )\n\t  if test -f \"$output_objdir/$my_outputname.def\"; then\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t  else\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  fi\n\t  ;;\n\t*)\n\t  compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  ;;\n\tesac\n\t;;\n      *)\n\tfunc_fatal_error \"unknown suffix for '$my_dlsyms'\"\n\t;;\n      esac\n    else\n      # We keep going just in case the user didn't refer to\n      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n      # really was required.\n\n      # Nullify the symbol file.\n      compile_command=`$ECHO \"$compile_command\" | $SED \"s% @SYMFILE@%%\"`\n      finalize_command=`$ECHO \"$finalize_command\" | $SED \"s% @SYMFILE@%%\"`\n    fi\n}\n\n# func_cygming_gnu_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is a GNU/binutils-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_gnu_implib_p ()\n{\n  $debug_cmd\n\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_gnu_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $EGREP ' (_head_[A-Za-z0-9_]+_[ad]l*|[A-Za-z0-9_]+_[ad]l*_iname)$'`\n  test -n \"$func_cygming_gnu_implib_tmp\"\n}\n\n# func_cygming_ms_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is an MS-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_ms_implib_p ()\n{\n  $debug_cmd\n\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_ms_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $GREP '_NULL_IMPORT_DESCRIPTOR'`\n  test -n \"$func_cygming_ms_implib_tmp\"\n}\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\n# Despite the name, also deal with 64 bit binaries.\nfunc_win32_libid ()\n{\n  $debug_cmd\n\n  win32_libid_type=unknown\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    # Keep the egrep pattern in sync with the one in _LT_CHECK_MAGIC_METHOD.\n    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |\n       $EGREP 'file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then\n      case $nm_interface in\n      \"MS dumpbin\")\n\tif func_cygming_ms_implib_p \"$1\" ||\n\t   func_cygming_gnu_implib_p \"$1\"\n\tthen\n\t  win32_nmres=import\n\telse\n\t  win32_nmres=\n\tfi\n\t;;\n      *)\n\tfunc_to_tool_file \"$1\" func_convert_file_msys_to_w32\n\twin32_nmres=`eval $NM -f posix -A \\\"$func_to_tool_file_result\\\" |\n\t  $SED -n -e '\n\t    1,100{\n\t\t/ I /{\n\t\t    s|.*|import|\n\t\t    p\n\t\t    q\n\t\t}\n\t    }'`\n\t;;\n      esac\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $ECHO \"$win32_libid_type\"\n}\n\n# func_cygming_dll_for_implib ARG\n#\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib ()\n{\n  $debug_cmd\n\n  sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify \"$1\"`\n}\n\n# func_cygming_dll_for_implib_fallback_core SECTION_NAME LIBNAMEs\n#\n# The is the core of a fallback implementation of a\n# platform-specific function to extract the name of the\n# DLL associated with the specified import library LIBNAME.\n#\n# SECTION_NAME is either .idata$6 or .idata$7, depending\n# on the platform and compiler that created the implib.\n#\n# Echos the name of the DLL associated with the\n# specified import library.\nfunc_cygming_dll_for_implib_fallback_core ()\n{\n  $debug_cmd\n\n  match_literal=`$ECHO \"$1\" | $SED \"$sed_make_literal_regex\"`\n  $OBJDUMP -s --section \"$1\" \"$2\" 2>/dev/null |\n    $SED '/^Contents of section '\"$match_literal\"':/{\n      # Place marker at beginning of archive member dllname section\n      s/.*/====MARK====/\n      p\n      d\n    }\n    # These lines can sometimes be longer than 43 characters, but\n    # are always uninteresting\n    /:[\t ]*file format pe[i]\\{,1\\}-/d\n    /^In archive [^:]*:/d\n    # Ensure marker is printed\n    /^====MARK====/p\n    # Remove all lines with less than 43 characters\n    /^.\\{43\\}/!d\n    # From remaining lines, remove first 43 characters\n    s/^.\\{43\\}//' |\n    $SED -n '\n      # Join marker and all lines until next marker into a single line\n      /^====MARK====/ b para\n      H\n      $ b para\n      b\n      :para\n      x\n      s/\\n//g\n      # Remove the marker\n      s/^====MARK====//\n      # Remove trailing dots and whitespace\n      s/[\\. \\t]*$//\n      # Print\n      /./p' |\n    # we now have a list, one entry per line, of the stringified\n    # contents of the appropriate section of all members of the\n    # archive that possess that section. Heuristic: eliminate\n    # all those that have a first or second character that is\n    # a '.' (that is, objdump's representation of an unprintable\n    # character.) This should work for all archives with less than\n    # 0x302f exports -- but will fail for DLLs whose name actually\n    # begins with a literal '.' or a single character followed by\n    # a '.'.\n    #\n    # Of those that remain, print the first one.\n    $SED -e '/^\\./d;/^.\\./d;q'\n}\n\n# func_cygming_dll_for_implib_fallback ARG\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n#\n# This fallback implementation is for use when $DLLTOOL\n# does not support the --identify-strict option.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib_fallback ()\n{\n  $debug_cmd\n\n  if func_cygming_gnu_implib_p \"$1\"; then\n    # binutils import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' \"$1\"`\n  elif func_cygming_ms_implib_p \"$1\"; then\n    # ms-generated import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' \"$1\"`\n  else\n    # unknown\n    sharedlib_from_linklib_result=\n  fi\n}\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    $debug_cmd\n\n    f_ex_an_ar_dir=$1; shift\n    f_ex_an_ar_oldlib=$1\n    if test yes = \"$lock_old_archive_extraction\"; then\n      lockfile=$f_ex_an_ar_oldlib.lock\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    fi\n    func_show_eval \"(cd \\$f_ex_an_ar_dir && $AR x \\\"\\$f_ex_an_ar_oldlib\\\")\" \\\n\t\t   'stat=$?; rm -f \"$lockfile\"; exit $stat'\n    if test yes = \"$lock_old_archive_extraction\"; then\n      $opt_dry_run || rm -f \"$lockfile\"\n    fi\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      func_fatal_error \"object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\"\n    fi\n}\n\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    $debug_cmd\n\n    my_gentop=$1; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\n    my_xlib=\n    my_xabs=\n    my_xdir=\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=$my_xlib ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      func_basename \"$my_xlib\"\n      my_xlib=$func_basename_result\n      my_xlib_u=$my_xlib\n      while :; do\n        case \" $extracted_archives \" in\n\t*\" $my_xlib_u \"*)\n\t  func_arith $extracted_serial + 1\n\t  extracted_serial=$func_arith_result\n\t  my_xlib_u=lt$extracted_serial-$my_xlib ;;\n\t*) break ;;\n\tesac\n      done\n      extracted_archives=\"$extracted_archives $my_xlib_u\"\n      my_xdir=$my_gentop/$my_xlib_u\n\n      func_mkdir_p \"$my_xdir\"\n\n      case $host in\n      *-darwin*)\n\tfunc_verbose \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\t$opt_dry_run || {\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  func_basename \"$darwin_archive\"\n\t  darwin_base_archive=$func_basename_result\n\t  darwin_arches=`$LIPO -info \"$darwin_archive\" 2>/dev/null | $GREP Architectures 2>/dev/null || true`\n\t  if test -n \"$darwin_arches\"; then\n\t    darwin_arches=`$ECHO \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    func_verbose \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches; do\n\t      func_mkdir_p \"unfat-$$/$darwin_base_archive-$darwin_arch\"\n\t      $LIPO -thin $darwin_arch -output \"unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive\" \"$darwin_archive\"\n\t      cd \"unfat-$$/$darwin_base_archive-$darwin_arch\"\n\t      func_extract_an_archive \"`pwd`\" \"$darwin_base_archive\"\n\t      cd \"$darwin_curdir\"\n\t      $RM \"unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive\"\n\t    done # $darwin_arches\n            ## Okay now we've a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print | $SED -e \"$sed_basename\" | sort -u`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n\t      $LIPO -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    $RM -rf unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd $darwin_orig_dir\n\t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\t} # !$opt_dry_run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n    done\n\n    func_extract_archives_result=$my_oldobjs\n}\n\n\n# func_emit_wrapper [arg=no]\n#\n# Emit a libtool wrapper script on stdout.\n# Don't directly open a file because we may want to\n# incorporate the script contents within a cygwin/mingw\n# wrapper executable.  Must ONLY be called from within\n# func_mode_link because it depends on a number of variables\n# set therein.\n#\n# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\n# variable will take.  If 'yes', then the emitted script\n# will assume that the directory where it is stored is\n# the $objdir directory.  This is a cygwin/mingw-specific\n# behavior.\nfunc_emit_wrapper ()\n{\n\tfunc_emit_wrapper_arg1=${1-no}\n\n\t$ECHO \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='$sed_quote_subst'\n\n# Be Bourne compatible\nif test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variables:\n  generated_by_libtool_version='$macro_version'\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$ECHO are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    file=\\\"\\$0\\\"\"\n\n    qECHO=`$ECHO \"$ECHO\" | $SED \"$sed_quote_subst\"`\n    $ECHO \"\\\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n    ECHO=\\\"$qECHO\\\"\n  fi\n\n# Very basic option parsing. These options are (a) specific to\n# the libtool wrapper, (b) are identical between the wrapper\n# /script/ and the wrapper /executable/ that is used only on\n# windows platforms, and (c) all begin with the string \"--lt-\"\n# (application programs are unlikely to have options that match\n# this pattern).\n#\n# There are only two supported options: --lt-debug and\n# --lt-dump-script. There is, deliberately, no --lt-help.\n#\n# The first argument to this parsing function should be the\n# script's $0 value, followed by \"$@\".\nlt_option_debug=\nfunc_parse_lt_options ()\n{\n  lt_script_arg0=\\$0\n  shift\n  for lt_opt\n  do\n    case \\\"\\$lt_opt\\\" in\n    --lt-debug) lt_option_debug=1 ;;\n    --lt-dump-script)\n        lt_dump_D=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%/[^/]*$%%'\\`\n        test \\\"X\\$lt_dump_D\\\" = \\\"X\\$lt_script_arg0\\\" && lt_dump_D=.\n        lt_dump_F=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%^.*/%%'\\`\n        cat \\\"\\$lt_dump_D/\\$lt_dump_F\\\"\n        exit 0\n      ;;\n    --lt-*)\n        \\$ECHO \\\"Unrecognized --lt- option: '\\$lt_opt'\\\" 1>&2\n        exit 1\n      ;;\n    esac\n  done\n\n  # Print the debug banner immediately:\n  if test -n \\\"\\$lt_option_debug\\\"; then\n    echo \\\"$outputname:$output:\\$LINENO: libtool wrapper (GNU $PACKAGE) $VERSION\\\" 1>&2\n  fi\n}\n\n# Used when --lt-debug. Prints its arguments to stdout\n# (redirection is the responsibility of the caller)\nfunc_lt_dump_args ()\n{\n  lt_dump_args_N=1;\n  for lt_arg\n  do\n    \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[\\$lt_dump_args_N]: \\$lt_arg\\\"\n    lt_dump_args_N=\\`expr \\$lt_dump_args_N + 1\\`\n  done\n}\n\n# Core function for launching the target application\nfunc_exec_program_core ()\n{\n\"\n  case $host in\n  # Backslashes separate directories on plain windows\n  *-*-mingw | *-*-os2* | *-cegcc*)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[0]: \\$progdir\\\\\\\\\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n\n  *)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[0]: \\$progdir/\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n  esac\n  $ECHO \"\\\n      \\$ECHO \\\"\\$0: cannot exec \\$program \\$*\\\" 1>&2\n      exit 1\n}\n\n# A function to encapsulate launching the target application\n# Strips options in the --lt-* namespace from \\$@ and\n# launches target application with the remaining arguments.\nfunc_exec_program ()\n{\n  case \\\" \\$* \\\" in\n  *\\\\ --lt-*)\n    for lt_wr_arg\n    do\n      case \\$lt_wr_arg in\n      --lt-*) ;;\n      *) set x \\\"\\$@\\\" \\\"\\$lt_wr_arg\\\"; shift;;\n      esac\n      shift\n    done ;;\n  esac\n  func_exec_program_core \\${1+\\\"\\$@\\\"}\n}\n\n  # Parse options\n  func_parse_lt_options \\\"\\$0\\\" \\${1+\\\"\\$@\\\"}\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  done\n\n  # Usually 'no', except on cygwin/mingw when embedded into\n  # the cwrapper.\n  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1\n  if test \\\"\\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\\\" = \\\"yes\\\"; then\n    # special case for '.'\n    if test \\\"\\$thisdir\\\" = \\\".\\\"; then\n      thisdir=\\`pwd\\`\n    fi\n    # remove .libs from thisdir\n    case \\\"\\$thisdir\\\" in\n    *[\\\\\\\\/]$objdir ) thisdir=\\`\\$ECHO \\\"\\$thisdir\\\" | $SED 's%[\\\\\\\\/][^\\\\\\\\/]*$%%'\\` ;;\n    $objdir )   thisdir=. ;;\n    esac\n  fi\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test yes = \"$fast_install\"; then\n\t  $ECHO \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" ||\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | $SED 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $MKDIR \\\"\\$progdir\\\"\n    else\n      $RM \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $ECHO \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\$relink_command 2>&1\\`; then :\n      else\n\t\\$ECHO \\\"\\$relink_command_output\\\" >&2\n\t$RM \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $RM \\\"\\$progdir/\\$program\\\";\n      $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $RM \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $ECHO \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$ECHO \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# fixup the dll searchpath if we need to.\n\t#\n\t# Fix the DLL searchpath if we need to.  Do this before prepending\n\t# to shlibpath, because on Windows, both are PATH and uninstalled\n\t# libraries must come first.\n\tif test -n \"$dllsearchpath\"; then\n\t  $ECHO \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t# Export our shlibpath_var if we have one.\n\tif test yes = \"$shlibpath_overrides_runpath\" && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $ECHO \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" | $SED 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t$ECHO \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n      func_exec_program \\${1+\\\"\\$@\\\"}\n    fi\n  else\n    # The program doesn't exist.\n    \\$ECHO \\\"\\$0: error: '\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$ECHO \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    \\$ECHO \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n}\n\n\n# func_emit_cwrapperexe_src\n# emit the source code for a wrapper executable on stdout\n# Must ONLY be called from within func_mode_link because\n# it depends on a number of variable set therein.\nfunc_emit_cwrapperexe_src ()\n{\n\tcat <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n*/\nEOF\n\t    cat <<\"EOF\"\n#ifdef _MSC_VER\n# define _CRT_SECURE_NO_DEPRECATE 1\n#endif\n#include <stdio.h>\n#include <stdlib.h>\n#ifdef _MSC_VER\n# include <direct.h>\n# include <process.h>\n# include <io.h>\n#else\n# include <unistd.h>\n# include <stdint.h>\n# ifdef __CYGWIN__\n#  include <io.h>\n# endif\n#endif\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <sys/stat.h>\n\n#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)\n\n/* declarations of non-ANSI functions */\n#if defined __MINGW32__\n# ifdef __STRICT_ANSI__\nint _putenv (const char *);\n# endif\n#elif defined __CYGWIN__\n# ifdef __STRICT_ANSI__\nchar *realpath (const char *, char *);\nint putenv (char *);\nint setenv (const char *, const char *, int);\n# endif\n/* #elif defined other_platform || defined ... */\n#endif\n\n/* portability defines, excluding path handling macros */\n#if defined _MSC_VER\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n# define S_IXUSR _S_IEXEC\n#elif defined __MINGW32__\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n#elif defined __CYGWIN__\n# define HAVE_SETENV\n# define FOPEN_WB \"wb\"\n/* #elif defined other platforms ... */\n#endif\n\n#if defined PATH_MAX\n# define LT_PATHMAX PATH_MAX\n#elif defined MAXPATHLEN\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef S_IXOTH\n# define S_IXOTH 0\n#endif\n#ifndef S_IXGRP\n# define S_IXGRP 0\n#endif\n\n/* path handling portability macros */\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined _WIN32 || defined __MSDOS__ || defined __DJGPP__ || \\\n  defined __OS2__\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# define FOPEN_WB \"wb\"\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#ifndef FOPEN_WB\n# define FOPEN_WB \"w\"\n#endif\n#ifndef _O_BINARY\n# define _O_BINARY 0\n#endif\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free (stale); stale = 0; } \\\n} while (0)\n\n#if defined LT_DEBUGWRAPPER\nstatic int lt_debug = 1;\n#else\nstatic int lt_debug = 0;\n#endif\n\nconst char *program_name = \"libtool-wrapper\"; /* in case xstrdup fails */\n\nvoid *xmalloc (size_t num);\nchar *xstrdup (const char *string);\nconst char *base_name (const char *name);\nchar *find_executable (const char *wrapper);\nchar *chase_symlinks (const char *pathspec);\nint make_executable (const char *path);\nint check_executable (const char *path);\nchar *strendzap (char *str, const char *pat);\nvoid lt_debugprintf (const char *file, int line, const char *fmt, ...);\nvoid lt_fatal (const char *file, int line, const char *message, ...);\nstatic const char *nonnull (const char *s);\nstatic const char *nonempty (const char *s);\nvoid lt_setenv (const char *name, const char *value);\nchar *lt_extend_str (const char *orig_value, const char *add, int to_end);\nvoid lt_update_exe_path (const char *name, const char *value);\nvoid lt_update_lib_path (const char *name, const char *value);\nchar **prepare_spawn (char **argv);\nvoid lt_dump_script (FILE *f);\nEOF\n\n\t    cat <<EOF\n#if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 5)\n# define externally_visible volatile\n#else\n# define externally_visible __attribute__((externally_visible)) volatile\n#endif\nexternally_visible const char * MAGIC_EXE = \"$magic_exe\";\nconst char * LIB_PATH_VARNAME = \"$shlibpath_var\";\nEOF\n\n\t    if test yes = \"$shlibpath_overrides_runpath\" && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n              func_to_host_path \"$temp_rpath\"\n\t      cat <<EOF\nconst char * LIB_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * LIB_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test -n \"$dllsearchpath\"; then\n              func_to_host_path \"$dllsearchpath:\"\n\t      cat <<EOF\nconst char * EXE_PATH_VARNAME = \"PATH\";\nconst char * EXE_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * EXE_PATH_VARNAME = \"\";\nconst char * EXE_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test yes = \"$fast_install\"; then\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"lt-$outputname\"; /* hopefully, no .exe */\nEOF\n\t    else\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"$outputname\"; /* hopefully, no .exe */\nEOF\n\t    fi\n\n\n\t    cat <<\"EOF\"\n\n#define LTWRAPPER_OPTION_PREFIX         \"--lt-\"\n\nstatic const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;\nstatic const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX \"dump-script\";\nstatic const char *debug_opt            = LTWRAPPER_OPTION_PREFIX \"debug\";\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int  newargc;\n  char *tmp_pathspec;\n  char *actual_cwrapper_path;\n  char *actual_cwrapper_name;\n  char *target_name;\n  char *lt_argv_zero;\n  int rval = 127;\n\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  newargz = XMALLOC (char *, (size_t) argc + 1);\n\n  /* very simple arg parsing; don't want to rely on getopt\n   * also, copy all non cwrapper options to newargz, except\n   * argz[0], which is handled differently\n   */\n  newargc=0;\n  for (i = 1; i < argc; i++)\n    {\n      if (STREQ (argv[i], dumpscript_opt))\n\t{\nEOF\n\t    case $host in\n\t      *mingw* | *cygwin* )\n\t\t# make stdout use \"unix\" line endings\n\t\techo \"          setmode(1,_O_BINARY);\"\n\t\t;;\n\t      esac\n\n\t    cat <<\"EOF\"\n\t  lt_dump_script (stdout);\n\t  return 0;\n\t}\n      if (STREQ (argv[i], debug_opt))\n\t{\n          lt_debug = 1;\n          continue;\n\t}\n      if (STREQ (argv[i], ltwrapper_option_prefix))\n        {\n          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX\n             namespace, but it is not one of the ones we know about and\n             have already dealt with, above (inluding dump-script), then\n             report an error. Otherwise, targets might begin to believe\n             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX\n             namespace. The first time any user complains about this, we'll\n             need to make LTWRAPPER_OPTION_PREFIX a configure-time option\n             or a configure.ac-settable value.\n           */\n          lt_fatal (__FILE__, __LINE__,\n\t\t    \"unrecognized %s option: '%s'\",\n                    ltwrapper_option_prefix, argv[i]);\n        }\n      /* otherwise ... */\n      newargz[++newargc] = xstrdup (argv[i]);\n    }\n  newargz[++newargc] = NULL;\n\nEOF\n\t    cat <<EOF\n  /* The GNU banner must be the first non-error debug message */\n  lt_debugprintf (__FILE__, __LINE__, \"libtool wrapper (GNU $PACKAGE) $VERSION\\n\");\nEOF\n\t    cat <<\"EOF\"\n  lt_debugprintf (__FILE__, __LINE__, \"(main) argv[0]: %s\\n\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__, \"(main) program_name: %s\\n\", program_name);\n\n  tmp_pathspec = find_executable (argv[0]);\n  if (tmp_pathspec == NULL)\n    lt_fatal (__FILE__, __LINE__, \"couldn't find %s\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (before symlink chase) at: %s\\n\",\n\t\t  tmp_pathspec);\n\n  actual_cwrapper_path = chase_symlinks (tmp_pathspec);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (after symlink chase) at: %s\\n\",\n\t\t  actual_cwrapper_path);\n  XFREE (tmp_pathspec);\n\n  actual_cwrapper_name = xstrdup (base_name (actual_cwrapper_path));\n  strendzap (actual_cwrapper_path, actual_cwrapper_name);\n\n  /* wrapper name transforms */\n  strendzap (actual_cwrapper_name, \".exe\");\n  tmp_pathspec = lt_extend_str (actual_cwrapper_name, \".exe\", 1);\n  XFREE (actual_cwrapper_name);\n  actual_cwrapper_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  /* target_name transforms -- use actual target program name; might have lt- prefix */\n  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));\n  strendzap (target_name, \".exe\");\n  tmp_pathspec = lt_extend_str (target_name, \".exe\", 1);\n  XFREE (target_name);\n  target_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(main) libtool target name: %s\\n\",\n\t\t  target_name);\nEOF\n\n\t    cat <<EOF\n  newargz[0] =\n    XMALLOC (char, (strlen (actual_cwrapper_path) +\n\t\t    strlen (\"$objdir\") + 1 + strlen (actual_cwrapper_name) + 1));\n  strcpy (newargz[0], actual_cwrapper_path);\n  strcat (newargz[0], \"$objdir\");\n  strcat (newargz[0], \"/\");\nEOF\n\n\t    cat <<\"EOF\"\n  /* stop here, and copy so we don't have to do this twice */\n  tmp_pathspec = xstrdup (newargz[0]);\n\n  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */\n  strcat (newargz[0], actual_cwrapper_name);\n\n  /* DO want the lt- prefix here if it exists, so use target_name */\n  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);\n  XFREE (tmp_pathspec);\n  tmp_pathspec = NULL;\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t    cat <<\"EOF\"\n  {\n    char* p;\n    while ((p = strchr (newargz[0], '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n    while ((p = strchr (lt_argv_zero, '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n  }\nEOF\n\t    ;;\n\t    esac\n\n\t    cat <<\"EOF\"\n  XFREE (target_name);\n  XFREE (actual_cwrapper_path);\n  XFREE (actual_cwrapper_name);\n\n  lt_setenv (\"BIN_SH\", \"xpg4\"); /* for Tru64 */\n  lt_setenv (\"DUALCASE\", \"1\");  /* for MSK sh */\n  /* Update the DLL searchpath.  EXE_PATH_VALUE ($dllsearchpath) must\n     be prepended before (that is, appear after) LIB_PATH_VALUE ($temp_rpath)\n     because on Windows, both *_VARNAMEs are PATH but uninstalled\n     libraries must come first. */\n  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);\n  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);\n\n  lt_debugprintf (__FILE__, __LINE__, \"(main) lt_argv_zero: %s\\n\",\n\t\t  nonnull (lt_argv_zero));\n  for (i = 0; i < newargc; i++)\n    {\n      lt_debugprintf (__FILE__, __LINE__, \"(main) newargz[%d]: %s\\n\",\n\t\t      i, nonnull (newargz[i]));\n    }\n\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n  /* execv doesn't actually work on mingw as expected on unix */\n  newargz = prepare_spawn (newargz);\n  rval = (int) _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);\n  if (rval == -1)\n    {\n      /* failed to start process */\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"(main) failed to launch target \\\"%s\\\": %s\\n\",\n\t\t      lt_argv_zero, nonnull (strerror (errno)));\n      return 127;\n    }\n  return rval;\nEOF\n\t\t;;\n\t      *)\n\t\tcat <<\"EOF\"\n  execv (lt_argv_zero, newargz);\n  return rval; /* =127, but avoids unused variable warning */\nEOF\n\t\t;;\n\t    esac\n\n\t    cat <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void *p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (__FILE__, __LINE__, \"memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),\n\t\t\t  string) : NULL;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char) name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable (const char *path)\n{\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(check_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0)\n      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))\n    return 1;\n  else\n    return 0;\n}\n\nint\nmake_executable (const char *path)\n{\n  int rval = 0;\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(make_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if (stat (path, &st) >= 0)\n    {\n      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);\n    }\n  return rval;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise\n   Does not chase symlinks, even on platforms that support them.\n*/\nchar *\nfind_executable (const char *wrapper)\n{\n  int has_slash = 0;\n  const char *p;\n  const char *p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  size_t tmp_len;\n  char *concat_name;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(find_executable): %s\\n\",\n                  nonempty (wrapper));\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable (concat_name))\n\treturn concat_name;\n      XFREE (concat_name);\n    }\n  else\n    {\n#endif\n      if (IS_DIR_SEPARATOR (wrapper[0]))\n\t{\n\t  concat_name = xstrdup (wrapper);\n\t  if (check_executable (concat_name))\n\t    return concat_name;\n\t  XFREE (concat_name);\n\t}\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n    }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n      {\n\thas_slash = 1;\n\tbreak;\n      }\n  if (!has_slash)\n    {\n      /* no slashes; search PATH */\n      const char *path = getenv (\"PATH\");\n      if (path != NULL)\n\t{\n\t  for (p = path; *p; p = p_next)\n\t    {\n\t      const char *q;\n\t      size_t p_len;\n\t      for (q = p; *q; q++)\n\t\tif (IS_PATH_SEPARATOR (*q))\n\t\t  break;\n\t      p_len = (size_t) (q - p);\n\t      p_next = (*q == '\\0' ? q : q + 1);\n\t      if (p_len == 0)\n\t\t{\n\t\t  /* empty path: current directory */\n\t\t  if (getcwd (tmp, LT_PATHMAX) == NULL)\n\t\t    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n                              nonnull (strerror (errno)));\n\t\t  tmp_len = strlen (tmp);\n\t\t  concat_name =\n\t\t    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, tmp, tmp_len);\n\t\t  concat_name[tmp_len] = '/';\n\t\t  strcpy (concat_name + tmp_len + 1, wrapper);\n\t\t}\n\t      else\n\t\t{\n\t\t  concat_name =\n\t\t    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, p, p_len);\n\t\t  concat_name[p_len] = '/';\n\t\t  strcpy (concat_name + p_len + 1, wrapper);\n\t\t}\n\t      if (check_executable (concat_name))\n\t\treturn concat_name;\n\t      XFREE (concat_name);\n\t    }\n\t}\n      /* not found in PATH; assume curdir */\n    }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n              nonnull (strerror (errno)));\n  tmp_len = strlen (tmp);\n  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable (concat_name))\n    return concat_name;\n  XFREE (concat_name);\n  return NULL;\n}\n\nchar *\nchase_symlinks (const char *pathspec)\n{\n#ifndef S_ISLNK\n  return xstrdup (pathspec);\n#else\n  char buf[LT_PATHMAX];\n  struct stat s;\n  char *tmp_pathspec = xstrdup (pathspec);\n  char *p;\n  int has_symlinks = 0;\n  while (strlen (tmp_pathspec) && !has_symlinks)\n    {\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"checking path component for symlinks: %s\\n\",\n\t\t      tmp_pathspec);\n      if (lstat (tmp_pathspec, &s) == 0)\n\t{\n\t  if (S_ISLNK (s.st_mode) != 0)\n\t    {\n\t      has_symlinks = 1;\n\t      break;\n\t    }\n\n\t  /* search backwards for last DIR_SEPARATOR */\n\t  p = tmp_pathspec + strlen (tmp_pathspec) - 1;\n\t  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    p--;\n\t  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    {\n\t      /* no more DIR_SEPARATORS left */\n\t      break;\n\t    }\n\t  *p = '\\0';\n\t}\n      else\n\t{\n\t  lt_fatal (__FILE__, __LINE__,\n\t\t    \"error accessing file \\\"%s\\\": %s\",\n\t\t    tmp_pathspec, nonnull (strerror (errno)));\n\t}\n    }\n  XFREE (tmp_pathspec);\n\n  if (!has_symlinks)\n    {\n      return xstrdup (pathspec);\n    }\n\n  tmp_pathspec = realpath (pathspec, buf);\n  if (tmp_pathspec == 0)\n    {\n      lt_fatal (__FILE__, __LINE__,\n\t\t\"could not follow symlinks for %s\", pathspec);\n    }\n  return xstrdup (tmp_pathspec);\n#endif\n}\n\nchar *\nstrendzap (char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert (str != NULL);\n  assert (pat != NULL);\n\n  len = strlen (str);\n  patlen = strlen (pat);\n\n  if (patlen <= len)\n    {\n      str += len - patlen;\n      if (STREQ (str, pat))\n\t*str = '\\0';\n    }\n  return str;\n}\n\nvoid\nlt_debugprintf (const char *file, int line, const char *fmt, ...)\n{\n  va_list args;\n  if (lt_debug)\n    {\n      (void) fprintf (stderr, \"%s:%s:%d: \", program_name, file, line);\n      va_start (args, fmt);\n      (void) vfprintf (stderr, fmt, args);\n      va_end (args);\n    }\n}\n\nstatic void\nlt_error_core (int exit_status, const char *file,\n\t       int line, const char *mode,\n\t       const char *message, va_list ap)\n{\n  fprintf (stderr, \"%s:%s:%d: %s: \", program_name, file, line, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *file, int line, const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, file, line, \"FATAL\", message, ap);\n  va_end (ap);\n}\n\nstatic const char *\nnonnull (const char *s)\n{\n  return s ? s : \"(null)\";\n}\n\nstatic const char *\nnonempty (const char *s)\n{\n  return (s && !*s) ? \"(empty)\" : nonnull (s);\n}\n\nvoid\nlt_setenv (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_setenv) setting '%s' to '%s'\\n\",\n                  nonnull (name), nonnull (value));\n  {\n#ifdef HAVE_SETENV\n    /* always make a copy, for consistency with !HAVE_SETENV */\n    char *str = xstrdup (value);\n    setenv (name, str, 1);\n#else\n    size_t len = strlen (name) + 1 + strlen (value) + 1;\n    char *str = XMALLOC (char, len);\n    sprintf (str, \"%s=%s\", name, value);\n    if (putenv (str) != EXIT_SUCCESS)\n      {\n        XFREE (str);\n      }\n#endif\n  }\n}\n\nchar *\nlt_extend_str (const char *orig_value, const char *add, int to_end)\n{\n  char *new_value;\n  if (orig_value && *orig_value)\n    {\n      size_t orig_value_len = strlen (orig_value);\n      size_t add_len = strlen (add);\n      new_value = XMALLOC (char, add_len + orig_value_len + 1);\n      if (to_end)\n        {\n          strcpy (new_value, orig_value);\n          strcpy (new_value + orig_value_len, add);\n        }\n      else\n        {\n          strcpy (new_value, add);\n          strcpy (new_value + add_len, orig_value);\n        }\n    }\n  else\n    {\n      new_value = xstrdup (add);\n    }\n  return new_value;\n}\n\nvoid\nlt_update_exe_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_exe_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      /* some systems can't cope with a ':'-terminated path #' */\n      size_t len = strlen (new_value);\n      while ((len > 0) && IS_PATH_SEPARATOR (new_value[len-1]))\n        {\n          new_value[--len] = '\\0';\n        }\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nvoid\nlt_update_lib_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_lib_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nEOF\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n\n/* Prepares an argument vector before calling spawn().\n   Note that spawn() does not by itself call the command interpreter\n     (getenv (\"COMSPEC\") != NULL ? getenv (\"COMSPEC\") :\n      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n         GetVersionEx(&v);\n         v.dwPlatformId == VER_PLATFORM_WIN32_NT;\n      }) ? \"cmd.exe\" : \"command.com\").\n   Instead it simply concatenates the arguments, separated by ' ', and calls\n   CreateProcess().  We must quote the arguments since Win32 CreateProcess()\n   interprets characters like ' ', '\\t', '\\\\', '\"' (but not '<' and '>') in a\n   special way:\n   - Space and tab are interpreted as delimiters. They are not treated as\n     delimiters if they are surrounded by double quotes: \"...\".\n   - Unescaped double quotes are removed from the input. Their only effect is\n     that within double quotes, space and tab are treated like normal\n     characters.\n   - Backslashes not followed by double quotes are not special.\n   - But 2*n+1 backslashes followed by a double quote become\n     n backslashes followed by a double quote (n >= 0):\n       \\\" -> \"\n       \\\\\\\" -> \\\"\n       \\\\\\\\\\\" -> \\\\\"\n */\n#define SHELL_SPECIAL_CHARS \"\\\"\\\\ \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\n#define SHELL_SPACE_CHARS \" \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\nchar **\nprepare_spawn (char **argv)\n{\n  size_t argc;\n  char **new_argv;\n  size_t i;\n\n  /* Count number of arguments.  */\n  for (argc = 0; argv[argc] != NULL; argc++)\n    ;\n\n  /* Allocate new argument vector.  */\n  new_argv = XMALLOC (char *, argc + 1);\n\n  /* Put quoted arguments into the new argument vector.  */\n  for (i = 0; i < argc; i++)\n    {\n      const char *string = argv[i];\n\n      if (string[0] == '\\0')\n\tnew_argv[i] = xstrdup (\"\\\"\\\"\");\n      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)\n\t{\n\t  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);\n\t  size_t length;\n\t  unsigned int backslashes;\n\t  const char *s;\n\t  char *quoted_string;\n\t  char *p;\n\n\t  length = 0;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    length++;\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\tlength += backslashes + 1;\n\t      length++;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    length += backslashes + 1;\n\n\t  quoted_string = XMALLOC (char, length + 1);\n\n\t  p = quoted_string;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    *p++ = '\"';\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\t{\n\t\t  unsigned int j;\n\t\t  for (j = backslashes + 1; j > 0; j--)\n\t\t    *p++ = '\\\\';\n\t\t}\n\t      *p++ = c;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    {\n\t      unsigned int j;\n\t      for (j = backslashes; j > 0; j--)\n\t\t*p++ = '\\\\';\n\t      *p++ = '\"';\n\t    }\n\t  *p = '\\0';\n\n\t  new_argv[i] = quoted_string;\n\t}\n      else\n\tnew_argv[i] = (char *) string;\n    }\n  new_argv[argc] = NULL;\n\n  return new_argv;\n}\nEOF\n\t\t;;\n\t    esac\n\n            cat <<\"EOF\"\nvoid lt_dump_script (FILE* f)\n{\nEOF\n\t    func_emit_wrapper yes |\n\t      $SED -n -e '\ns/^\\(.\\{79\\}\\)\\(..*\\)/\\1\\\n\\2/\nh\ns/\\([\\\\\"]\\)/\\\\\\1/g\ns/$/\\\\n/\ns/\\([^\\n]*\\).*/  fputs (\"\\1\", f);/p\ng\nD'\n            cat <<\"EOF\"\n}\nEOF\n}\n# end: func_emit_cwrapperexe_src\n\n# func_win32_import_lib_p ARG\n# True if ARG is an import lib, as indicated by $file_magic_cmd\nfunc_win32_import_lib_p ()\n{\n    $debug_cmd\n\n    case `eval $file_magic_cmd \\\"\\$1\\\" 2>/dev/null | $SED -e 10q` in\n    *import*) : ;;\n    *) false ;;\n    esac\n}\n\n# func_suncc_cstd_abi\n# !!ONLY CALL THIS FOR SUN CC AFTER $compile_command IS FULLY EXPANDED!!\n# Several compiler flags select an ABI that is incompatible with the\n# Cstd library. Avoid specifying it if any are in CXXFLAGS.\nfunc_suncc_cstd_abi ()\n{\n    $debug_cmd\n\n    case \" $compile_command \" in\n    *\" -compat=g \"*|*\\ -std=c++[0-9][0-9]\\ *|*\" -library=stdcxx4 \"*|*\" -library=stlport4 \"*)\n      suncc_use_cstd_abi=no\n      ;;\n    *)\n      suncc_use_cstd_abi=yes\n      ;;\n    esac\n}\n\n# func_mode_link arg...\nfunc_mode_link ()\n{\n    $debug_cmd\n\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # what system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll that has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=$nonopt\n    base_compile=\"$nonopt $@\"\n    compile_command=$nonopt\n    finalize_command=$nonopt\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n    new_inherited_linker_flags=\n\n    avoid_version=no\n    bindir=\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    os2dllname=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=false\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n    weak_libs=\n    single_module=$wl-single_module\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -shared)\n\ttest yes != \"$build_libtool_libs\" \\\n\t  && func_fatal_configuration \"cannot build a shared library\"\n\tbuild_old_libs=no\n\tbreak\n\t;;\n      -all-static | -static | -static-libtool-libs)\n\tcase $arg in\n\t-all-static)\n\t  if test yes = \"$build_libtool_libs\" && test -z \"$link_static_flag\"; then\n\t    func_warning \"complete static linking is impossible in this configuration\"\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\t-static)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\t  ;;\n\t-static-libtool-libs)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\tesac\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=$1\n      shift\n      func_quote_for_eval \"$arg\"\n      qarg=$func_quote_for_eval_unquoted_result\n      func_append libtool_args \" $func_quote_for_eval_result\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  func_append compile_command \" @OUTPUT@\"\n\t  func_append finalize_command \" @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tbindir)\n\t  bindir=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tdlfiles|dlprefiles)\n\t  $preload || {\n\t    # Add the symbol object into the linking commands.\n\t    func_append compile_command \" @SYMFILE@\"\n\t    func_append finalize_command \" @SYMFILE@\"\n\t    preload=:\n\t  }\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test no = \"$dlself\"; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test dlprefiles = \"$prev\"; then\n\t      dlself=yes\n\t    elif test dlfiles = \"$prev\" && test yes != \"$dlopen_self\"; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test dlfiles = \"$prev\"; then\n\t      func_append dlfiles \" $arg\"\n\t    else\n\t      func_append dlprefiles \" $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=$arg\n\t  test -f \"$arg\" \\\n\t    || func_fatal_error \"symbol file '$arg' does not exist\"\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tframework)\n\t  case $host in\n\t    *-*-darwin*)\n\t      case \"$deplibs \" in\n\t\t*\" $qarg.ltframework \"*) ;;\n\t\t*) func_append deplibs \" $qarg.ltframework\" # this is fixed later\n\t\t   ;;\n\t      esac\n\t      ;;\n\t  esac\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tmllvm)\n\t  # Clang does not use LLVM to link, so we can simply discard any\n\t  # '-mllvm $arg' options when doing the link step.\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat \"$save_arg\"`\n\t    do\n#\t      func_append moreargs \" $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if func_lalib_unsafe_p \"$arg\"; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\tfunc_source \"$arg\"\n\n\t\tif test -z \"$pic_object\" ||\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test none = \"$pic_object\" &&\n\t\t   test none = \"$non_pic_object\"; then\n\t\t  func_fatal_error \"cannot find name of object for '$arg'\"\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\tfunc_dirname \"$arg\" \"/\" \"\"\n\t\txdir=$func_dirname_result\n\n\t\tif test none != \"$pic_object\"; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=$xdir$pic_object\n\n\t\t  if test dlfiles = \"$prev\"; then\n\t\t    if test yes = \"$build_libtool_libs\" && test yes = \"$dlopen_support\"; then\n\t\t      func_append dlfiles \" $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test dlprefiles = \"$prev\"; then\n\t\t    # Preload the old-style object.\n\t\t    func_append dlprefiles \" $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  arg=$pic_object\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test none != \"$non_pic_object\"; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=$xdir$non_pic_object\n\n\t\t  # A standard non-PIC object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test none = \"$pic_object\"; then\n\t\t    arg=$non_pic_object\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=$pic_object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif $opt_dry_run; then\n\t\t  # Extract subdirectory from the argument.\n\t\t  func_dirname \"$arg\" \"/\" \"\"\n\t\t  xdir=$func_dirname_result\n\n\t\t  func_lo2o \"$arg\"\n\t\t  pic_object=$xdir$objdir/$func_lo2o_result\n\t\t  non_pic_object=$xdir$func_lo2o_result\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t        else\n\t\t  func_fatal_error \"'$arg' is not a valid libtool object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    func_fatal_error \"link input file '$arg' does not exist\"\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\tos2dllname)\n\t  os2dllname=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=-$arg\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    func_fatal_error \"only absolute run-paths are allowed\"\n\t    ;;\n\t  esac\n\t  if test rpath = \"$prev\"; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append rpath \" $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append xrpath \" $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\tshrext)\n\t  shrext_cmds=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tweak)\n\t  func_append weak_libs \" $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\txcclinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txcompiler)\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $wl$qarg\"\n\t  prev=\n\t  func_append compile_command \" $wl$qarg\"\n\t  func_append finalize_command \" $wl$qarg\"\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=$arg\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  # See comment for -static flag below, for more details.\n\t  func_append compile_command \" $link_static_flag\"\n\t  func_append finalize_command \" $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\tfunc_fatal_error \"'-allow-undefined' must not be used because it is the default\"\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -bindir)\n\tprev=bindir\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  func_fatal_error \"more than one -exported-symbols argument is not allowed\"\n\tfi\n\tif test X-export-symbols = \"X$arg\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n\tprev=framework\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tfunc_stripname \"-L\" '' \"$arg\"\n\tif test -z \"$func_stripname_result\"; then\n\t  if test \"$#\" -gt 0; then\n\t    func_fatal_error \"require no space between '-L' and '$1'\"\n\t  else\n\t    func_fatal_error \"need path for '-L' option\"\n\t  fi\n\tfi\n\tfunc_resolve_sysroot \"$func_stripname_result\"\n\tdir=$func_resolve_sysroot_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  test -z \"$absdir\" && \\\n\t    func_fatal_error \"cannot determine absolute directory name of '$dir'\"\n\t  dir=$absdir\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"* | *\" $arg \"*)\n\t  # Will only happen for absolute or sysroot arguments\n\t  ;;\n\t*)\n\t  # Preserve sysroot, but never include relative directories\n\t  case $dir in\n\t    [\\\\/]* | [A-Za-z]:[\\\\/]* | =*) func_append deplibs \" $arg\" ;;\n\t    *) func_append deplibs \" -L$dir\" ;;\n\t  esac\n\t  func_append lib_search_path \" $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$dir\" | $SED 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  ::) dllsearchpath=$dir;;\n\t  *) func_append dllsearchpath \":$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test X-lc = \"X$arg\" || test X-lm = \"X$arg\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  esac\n\telif test X-lc_r = \"X$arg\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tfunc_append deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      -mllvm)\n\tprev=mllvm\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      # Darwin uses the -arch flag to determine output architecture.\n      -model|-arch|-isysroot|--sysroot)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n      |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tcase \"$new_inherited_linker_flags \" in\n\t    *\" $arg \"*) ;;\n\t    * ) func_append new_inherited_linker_flags \" $arg\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -multi_module)\n\tsingle_module=$wl-multi_module\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # and Darwin in order for the loader to find any dlls it needs.\n\t  func_warning \"'-no-install' is ignored for $host\"\n\t  func_warning \"assuming '-no-fast-install' instead\"\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -os2dllname)\n\tprev=os2dllname\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tfunc_stripname '-R' '' \"$arg\"\n\tdir=$func_stripname_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t=*)\n\t  func_stripname '=' '' \"$dir\"\n\t  dir=$lt_sysroot$func_stripname_result\n\t  ;;\n\t*)\n\t  func_fatal_error \"only absolute run-paths are allowed\"\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) func_append xrpath \" $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -shared)\n\t# The effects of -shared are defined in a previous loop.\n\tcontinue\n\t;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -static | -static-libtool-libs)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -weak)\n        prev=weak\n\tcontinue\n\t;;\n\n      -Wc,*)\n\tfunc_stripname '-Wc,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=$IFS; IFS=,\n\tfor flag in $args; do\n\t  IFS=$save_ifs\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=$save_ifs\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Wl,*)\n\tfunc_stripname '-Wl,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=$IFS; IFS=,\n\tfor flag in $args; do\n\t  IFS=$save_ifs\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $wl$func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $wl$func_quote_for_eval_result\"\n\t  func_append linker_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=$save_ifs\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # -msg_* for osf cc\n      -msg_*)\n\tfunc_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n\n      # Flags to be passed through unchanged, with rationale:\n      # -64, -mips[0-9]      enable 64-bit mode for the SGI compiler\n      # -r[0-9][0-9]*        specify processor for the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode for the Sun compiler\n      # +DA*, +DD*           enable 64-bit mode for the HP compiler\n      # -q*                  compiler args for the IBM compiler\n      # -m*, -t[45]*, -txscale* architecture-specific flags for GCC\n      # -F/path              path to uninstalled frameworks, gcc on darwin\n      # -p, -pg, --coverage, -fprofile-*  profiling flags for GCC\n      # -fstack-protector*   stack protector flags for GCC\n      # @file                GCC response files\n      # -tp=*                Portland pgcc target processor selection\n      # --sysroot=*          for sysroot support\n      # -O*, -g*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization\n      # -stdlib=*            select c++ std lib with clang\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \\\n      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \\\n      -O*|-g*|-flto*|-fwhopr*|-fuse-linker-plugin|-fstack-protector*|-stdlib=*)\n        func_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n        func_append compile_command \" $arg\"\n        func_append finalize_command \" $arg\"\n        func_append compiler_flags \" $arg\"\n        continue\n        ;;\n\n      -Z*)\n        if test os2 = \"`expr $host : '.*\\(os2\\)'`\"; then\n          # OS/2 uses -Zxxx to specify OS/2-specific options\n\t  compiler_flags=\"$compiler_flags $arg\"\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  case $arg in\n\t  -Zlinker | -Zstack)\n\t    prev=xcompiler\n\t    ;;\n\t  esac\n\t  continue\n        else\n\t  # Otherwise treat like 'Some other compiler flag' below\n\t  func_quote_for_eval \"$arg\"\n\t  arg=$func_quote_for_eval_result\n        fi\n\t;;\n\n      # Some other compiler flag.\n      -* | +*)\n        func_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tfunc_append objs \" $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif func_lalib_unsafe_p \"$arg\"; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  func_source \"$arg\"\n\n\t  if test -z \"$pic_object\" ||\n\t     test -z \"$non_pic_object\" ||\n\t     test none = \"$pic_object\" &&\n\t     test none = \"$non_pic_object\"; then\n\t    func_fatal_error \"cannot find name of object for '$arg'\"\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  func_dirname \"$arg\" \"/\" \"\"\n\t  xdir=$func_dirname_result\n\n\t  test none = \"$pic_object\" || {\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=$xdir$pic_object\n\n\t    if test dlfiles = \"$prev\"; then\n\t      if test yes = \"$build_libtool_libs\" && test yes = \"$dlopen_support\"; then\n\t\tfunc_append dlfiles \" $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test dlprefiles = \"$prev\"; then\n\t      # Preload the old-style object.\n\t      func_append dlprefiles \" $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    func_append libobjs \" $pic_object\"\n\t    arg=$pic_object\n\t  }\n\n\t  # Non-PIC object.\n\t  if test none != \"$non_pic_object\"; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=$xdir$non_pic_object\n\n\t    # A standard non-PIC object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t    if test -z \"$pic_object\" || test none = \"$pic_object\"; then\n\t      arg=$non_pic_object\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=$pic_object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if $opt_dry_run; then\n\t    # Extract subdirectory from the argument.\n\t    func_dirname \"$arg\" \"/\" \"\"\n\t    xdir=$func_dirname_result\n\n\t    func_lo2o \"$arg\"\n\t    pic_object=$xdir$objdir/$func_lo2o_result\n\t    non_pic_object=$xdir$func_lo2o_result\n\t    func_append libobjs \" $pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  else\n\t    func_fatal_error \"'$arg' is not a valid libtool object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tfunc_append deplibs \" $arg\"\n\tfunc_append old_deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tfunc_resolve_sysroot \"$arg\"\n\tif test dlfiles = \"$prev\"; then\n\t  # This library was specified with -dlopen.\n\t  func_append dlfiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telif test dlprefiles = \"$prev\"; then\n\t  # The library was specified with -dlpreopen.\n\t  func_append dlprefiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telse\n\t  func_append deplibs \" $func_resolve_sysroot_result\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\tfunc_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n      fi\n    done # argument parsing loop\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the '$prevarg' option requires an argument\"\n\n    if test yes = \"$export_dynamic\" && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      func_append compile_command \" $arg\"\n      func_append finalize_command \" $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    func_basename \"$output\"\n    outputname=$func_basename_result\n    libobjs_save=$libobjs\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" \\| \\$SED \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n\n    # Definition is injected by LT_CONFIG during libtool generation.\n    func_munge_path_list sys_lib_dlsearch_path \"$LT_SYS_LIBRARY_PATH\"\n\n    func_dirname \"$output\" \"/\" \"\"\n    output_objdir=$func_dirname_result$objdir\n    func_to_tool_file \"$output_objdir/\"\n    tool_output_objdir=$func_to_tool_file_result\n    # Create the object directory.\n    func_mkdir_p \"$output_objdir\"\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      func_fatal_help \"you must specify an output file\"\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if $opt_preserve_dup_deps; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\tesac\n      fi\n      func_append libs \" $deplib\"\n    done\n\n    if test lib = \"$linkmode\"; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if $opt_duplicate_compiler_generated_deps; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) func_append specialdeplibs \" $pre_post_deps\" ;;\n\t  esac\n\t  func_append pre_post_deps \" $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n\n    case $linkmode in\n    lib)\n\tpasses=\"conv dlpreopen link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    func_fatal_help \"libraries can '-dlopen' only libtool libraries: $file\"\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=false\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n\n    for pass in $passes; do\n      # The preopen pass in lib mode reverses $deplibs; put it back here\n      # so that -L comes before libs that need it for instance...\n      if test lib,link = \"$linkmode,$pass\"; then\n\t## FIXME: Find the place where the list is rebuilt in the wrong\n\t##        order, and fix it there properly\n        tmp_deplibs=\n\tfor deplib in $deplibs; do\n\t  tmp_deplibs=\"$deplib $tmp_deplibs\"\n\tdone\n\tdeplibs=$tmp_deplibs\n      fi\n\n      if test lib,link = \"$linkmode,$pass\" ||\n\t test prog,scan = \"$linkmode,$pass\"; then\n\tlibs=$deplibs\n\tdeplibs=\n      fi\n      if test prog = \"$linkmode\"; then\n\tcase $pass in\n\tdlopen) libs=$dlfiles ;;\n\tdlpreopen) libs=$dlprefiles ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test lib,dlpreopen = \"$linkmode,$pass\"; then\n\t# Collect and forward deplibs of preopened libtool libs\n\tfor lib in $dlprefiles; do\n\t  # Ignore non-libtool-libs\n\t  dependency_libs=\n\t  func_resolve_sysroot \"$lib\"\n\t  case $lib in\n\t  *.la)\tfunc_source \"$func_resolve_sysroot_result\" ;;\n\t  esac\n\n\t  # Collect preopened libtool deplibs, except any this library\n\t  # has declared as weak libs\n\t  for deplib in $dependency_libs; do\n\t    func_basename \"$deplib\"\n            deplib_base=$func_basename_result\n\t    case \" $weak_libs \" in\n\t    *\" $deplib_base \"*) ;;\n\t    *) func_append deplibs \" $deplib\" ;;\n\t    esac\n\t  done\n\tdone\n\tlibs=$dlprefiles\n      fi\n      if test dlopen = \"$pass\"; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=$deplibs\n\tdeplibs=\n      fi\n\n      for deplib in $libs; do\n\tlib=\n\tfound=false\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n        |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\t  if test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    func_append compiler_flags \" $deplib\"\n\t    if test lib = \"$linkmode\"; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test lib != \"$linkmode\" && test prog != \"$linkmode\"; then\n\t    func_warning \"'-l' is ignored for archives/objects\"\n\t    continue\n\t  fi\n\t  func_stripname '-l' '' \"$deplib\"\n\t  name=$func_stripname_result\n\t  if test lib = \"$linkmode\"; then\n\t    searchdirs=\"$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path\"\n\t  else\n\t    searchdirs=\"$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path\"\n\t  fi\n\t  for searchdir in $searchdirs; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=$searchdir/lib$name$search_ext\n\t      if test -f \"$lib\"; then\n\t\tif test .la = \"$search_ext\"; then\n\t\t  found=:\n\t\telse\n\t\t  found=false\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if $found; then\n\t    # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif func_lalib_p \"$lib\"; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  func_source \"$lib\"\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=$l\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\"; then # only static version available\n\t\t    found=false\n\t\t    func_dirname \"$lib\" \"\" \".\"\n\t\t    ladir=$func_dirname_result\n\t\t    lib=$ladir/$old_library\n\t\t    if test prog,link = \"$linkmode,$pass\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test lib = \"$linkmode\" && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  else\n\t    # deplib doesn't seem to be a libtool library\n\t    if test prog,link = \"$linkmode,$pass\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test lib = \"$linkmode\" && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  fi\n\t  ;; # -l\n\t*.ltframework)\n\t  if test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$deplib $deplibs\"\n\t    if test lib = \"$linkmode\"; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test conv = \"$pass\" && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  prog)\n\t    if test conv = \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test scan = \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  *)\n\t    func_warning \"'-L' is ignored for archives/objects\"\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test link = \"$pass\"; then\n\t    func_stripname '-R' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    dir=$func_resolve_sysroot_result\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append xrpath \" $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la)\n\t  func_resolve_sysroot \"$deplib\"\n\t  lib=$func_resolve_sysroot_result\n\t  ;;\n\t*.$libext)\n\t  if test conv = \"$pass\"; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    # Linking convenience modules into shared libraries is allowed,\n\t    # but linking other static libraries is non-portable.\n\t    case \" $dlpreconveniencelibs \" in\n\t    *\" $deplib \"*) ;;\n\t    *)\n\t      valid_a_lib=false\n\t      case $deplibs_check_method in\n\t\tmatch_pattern*)\n\t\t  set dummy $deplibs_check_method; shift\n\t\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t\t  if eval \"\\$ECHO \\\"$deplib\\\"\" 2>/dev/null | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t    valid_a_lib=:\n\t\t  fi\n\t\t;;\n\t\tpass_all)\n\t\t  valid_a_lib=:\n\t\t;;\n\t      esac\n\t      if $valid_a_lib; then\n\t\techo\n\t\t$ECHO \"*** Warning: Linking the shared library $output against the\"\n\t\t$ECHO \"*** static library $deplib is not portable!\"\n\t\tdeplibs=\"$deplib $deplibs\"\n\t      else\n\t\techo\n\t\t$ECHO \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t\techo \"*** that it is just a static archive that I should not use here.\"\n\t      fi\n\t      ;;\n\t    esac\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test link != \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test conv = \"$pass\"; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test prog = \"$linkmode\"; then\n\t    if test dlpreopen = \"$pass\" || test yes != \"$dlopen_support\" || test no = \"$build_libtool_libs\"; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      func_append newdlprefiles \" $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      func_append newdlfiles \" $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=:\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\n\t$found || test -f \"$lib\" \\\n\t  || func_fatal_error \"cannot find the library '$lib' or unhandled argument '$deplib'\"\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$lib\" \\\n\t  || func_fatal_error \"'$lib' is not a valid libtool archive\"\n\n\tfunc_dirname \"$lib\" \"\" \".\"\n\tladir=$func_dirname_result\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\tinherited_linker_flags=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tfunc_source \"$lib\"\n\n\t# Convert \"-framework foo\" to \"foo.ltframework\"\n\tif test -n \"$inherited_linker_flags\"; then\n\t  tmp_inherited_linker_flags=`$ECHO \"$inherited_linker_flags\" | $SED 's/-framework \\([^ $]*\\)/\\1.ltframework/g'`\n\t  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do\n\t    case \" $new_inherited_linker_flags \" in\n\t      *\" $tmp_inherited_linker_flag \"*) ;;\n\t      *) func_append new_inherited_linker_flags \" $tmp_inherited_linker_flag\";;\n\t    esac\n\t  done\n\tfi\n\tdependency_libs=`$ECHO \" $dependency_libs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tif test lib,link = \"$linkmode,$pass\" ||\n\t   test prog,scan = \"$linkmode,$pass\" ||\n\t   { test prog != \"$linkmode\" && test lib != \"$linkmode\"; }; then\n\t  test -n \"$dlopen\" && func_append dlfiles \" $dlopen\"\n\t  test -n \"$dlpreopen\" && func_append dlprefiles \" $dlpreopen\"\n\tfi\n\n\tif test conv = \"$pass\"; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      func_fatal_error \"cannot find name of link library for '$lib'\"\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    func_append convenience \" $ladir/$objdir/$old_library\"\n\t    func_append old_convenience \" $ladir/$objdir/$old_library\"\n\t  elif test prog != \"$linkmode\" && test lib != \"$linkmode\"; then\n\t    func_fatal_error \"'$lib' is not a convenience library\"\n\t  fi\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    deplibs=\"$deplib $deplibs\"\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tif test -n \"$old_library\" &&\n\t   { test yes = \"$prefer_static_libs\" ||\n\t     test built,no = \"$prefer_static_libs,$installed\"; }; then\n\t  linklib=$old_library\n\telse\n\t  for l in $old_library $library_names; do\n\t    linklib=$l\n\t  done\n\tfi\n\tif test -z \"$linklib\"; then\n\t  func_fatal_error \"cannot find name of link library for '$lib'\"\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test dlopen = \"$pass\"; then\n\t  test -z \"$libdir\" \\\n\t    && func_fatal_error \"cannot -dlopen a convenience library: '$lib'\"\n\t  if test -z \"$dlname\" ||\n\t     test yes != \"$dlopen_support\" ||\n\t     test no = \"$build_libtool_libs\"\n\t  then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    func_append dlprefiles \" $lib $dependency_libs\"\n\t  else\n\t    func_append newdlfiles \" $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=$ladir ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    func_warning \"cannot determine absolute directory name of '$ladir'\"\n\t    func_warning \"passing it literally to the linker, although it might fail\"\n\t    abs_ladir=$ladir\n\t  fi\n\t  ;;\n\tesac\n\tfunc_basename \"$lib\"\n\tlaname=$func_basename_result\n\n\t# Find the relevant object directory and library name.\n\tif test yes = \"$installed\"; then\n\t  if test ! -f \"$lt_sysroot$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    func_warning \"library '$lib' was moved.\"\n\t    dir=$ladir\n\t    absdir=$abs_ladir\n\t    libdir=$abs_ladir\n\t  else\n\t    dir=$lt_sysroot$libdir\n\t    absdir=$lt_sysroot$libdir\n\t  fi\n\t  test yes = \"$hardcode_automatic\" && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=$ladir\n\t    absdir=$abs_ladir\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  else\n\t    dir=$ladir/$objdir\n\t    absdir=$abs_ladir/$objdir\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tfunc_stripname 'lib' '.la' \"$laname\"\n\tname=$func_stripname_result\n\n\t# This library was specified with -dlpreopen.\n\tif test dlpreopen = \"$pass\"; then\n\t  if test -z \"$libdir\" && test prog = \"$linkmode\"; then\n\t    func_fatal_error \"only libraries may -dlpreopen a convenience library: '$lib'\"\n\t  fi\n\t  case $host in\n\t    # special handling for platforms with PE-DLLs.\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # Linker will automatically link against shared library if both\n\t      # static and shared are present.  Therefore, ensure we extract\n\t      # symbols from the import library if a shared library is present\n\t      # (otherwise, the dlopen module name will be incorrect).  We do\n\t      # this by putting the import library name into $newdlprefiles.\n\t      # We recover the dlopen module name by 'saving' the la file\n\t      # name in a special purpose variable, and (later) extracting the\n\t      # dlname from the la file.\n\t      if test -n \"$dlname\"; then\n\t        func_tr_sh \"$dir/$linklib\"\n\t        eval \"libfile_$func_tr_sh_result=\\$abs_ladir/\\$laname\"\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      fi\n\t    ;;\n\t    * )\n\t      # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t      # are required to link).\n\t      if test -n \"$old_library\"; then\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t      elif test -n \"$dlname\"; then\n\t        func_append newdlprefiles \" $dir/$dlname\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      fi\n\t    ;;\n\t  esac\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test lib = \"$linkmode\"; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test prog = \"$linkmode\" && test link != \"$pass\"; then\n\t  func_append newlib_search_path \" $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=false\n\t  if test no != \"$link_all_deplibs\" || test -z \"$library_names\" ||\n\t     test no = \"$build_libtool_libs\"; then\n\t    linkalldeplibs=:\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) func_stripname '-L' '' \"$deplib\"\n\t         func_resolve_sysroot \"$func_stripname_result\"\n\t         func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t\t ;;\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if $linkalldeplibs; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test prog,link = \"$linkmode,$pass\"; then\n\t  if test -n \"$library_names\" &&\n\t     { { test no = \"$prefer_static_libs\" ||\n\t         test built,yes = \"$prefer_static_libs,$installed\"; } ||\n\t       test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\"; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case $temp_rpath: in\n\t      *\"$absdir:\"*) ;;\n\t      *) func_append temp_rpath \"$absdir:\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if $alldeplibs &&\n\t     { test pass_all = \"$deplibs_check_method\" ||\n\t       { test yes = \"$build_libtool_libs\" &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test built = \"$use_static_libs\" && test yes = \"$installed\"; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test no = \"$use_static_libs\" || test -z \"$old_library\"; }; then\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc* | *os2*)\n\t      # No point in relinking DLLs because paths are not encoded\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=no\n\t    ;;\n\t  *)\n\t    if test no = \"$installed\"; then\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=yes\n\t    fi\n\t    ;;\n\t  esac\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on some\n\t  # systems (darwin).  Don't bleat about dlopened modules though!\n\t  dlopenmodule=\n\t  for dlpremoduletest in $dlprefiles; do\n\t    if test \"X$dlpremoduletest\" = \"X$lib\"; then\n\t      dlopenmodule=$dlpremoduletest\n\t      break\n\t    fi\n\t  done\n\t  if test -z \"$dlopenmodule\" && test yes = \"$shouldnotlink\" && test link = \"$pass\"; then\n\t    echo\n\t    if test prog = \"$linkmode\"; then\n\t      $ECHO \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $ECHO \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $ECHO \"*** $linklib is not portable!\"\n\t  fi\n\t  if test lib = \"$linkmode\" &&\n\t     test yes = \"$hardcode_into_libs\"; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    shift\n\t    realname=$1\n\t    shift\n\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=$dlname\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw* | *cegcc* | *os2*)\n\t        func_arith $current - $age\n\t\tmajor=$func_arith_result\n\t\tversuffix=-$major\n\t\t;;\n\t      esac\n\t      eval soname=\\\"$soname_spec\\\"\n\t    else\n\t      soname=$realname\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=$soname\n\t    func_basename \"$soroot\"\n\t    soname=$func_basename_result\n\t    func_stripname 'lib' '.dll' \"$soname\"\n\t    newlib=libimp-$func_stripname_result.a\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      func_verbose \"extracting exported symbol list from '$soname'\"\n\t      func_execute_cmds \"$extract_expsyms_cmds\" 'exit $?'\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      func_verbose \"generating import library for '$soname'\"\n\t      func_execute_cmds \"$old_archive_from_expsyms_cmds\" 'exit $?'\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test prog = \"$linkmode\" || test relink != \"$opt_mode\"; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test no = \"$hardcode_direct\"; then\n\t\tadd=$dir/$linklib\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=-L$dir ;;\n\t\t  *-*-sysv4*uw2*) add_dir=-L$dir ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=-L$dir ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a (non-dlopened) module then we cannot\n\t\t    # link against it, someone is ignoring the earlier warnings\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n\t\t\t $GREP \": [^:]* bundle\" >/dev/null; then\n\t\t      if test \"X$dlopenmodule\" != \"X$lib\"; then\n\t\t\t$ECHO \"*** Warning: lib $linklib is a module, not a shared library\"\n\t\t\tif test -z \"$old_library\"; then\n\t\t\t  echo\n\t\t\t  echo \"*** And there doesn't seem to be a static archive available\"\n\t\t\t  echo \"*** The link will probably fail, sorry\"\n\t\t\telse\n\t\t\t  add=$dir/$old_library\n\t\t\tfi\n\t\t      elif test -n \"$old_library\"; then\n\t\t\tadd=$dir/$old_library\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test no = \"$hardcode_minus_L\"; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=$dir ;;\n\t\tesac\n\t\tadd_dir=-L$dir\n\t\tadd=-l$name\n\t      elif test no = \"$hardcode_shlibpath_var\"; then\n\t\tadd_shlibpath=$dir\n\t\tadd=-l$name\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test yes = \"$hardcode_direct\" &&\n\t         test no = \"$hardcode_direct_absolute\"; then\n\t\tadd=$dir/$linklib\n\t      elif test yes = \"$hardcode_minus_L\"; then\n\t\tadd_dir=-L$absdir\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=-l$name\n\t      elif test yes = \"$hardcode_shlibpath_var\"; then\n\t\tadd_shlibpath=$dir\n\t\tadd=-l$name\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test yes != \"$lib_linked\"; then\n\t      func_fatal_configuration \"unsupported hardcode properties\"\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) func_append compile_shlibpath \"$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test prog = \"$linkmode\"; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test yes != \"$hardcode_direct\" &&\n\t\t test yes != \"$hardcode_minus_L\" &&\n\t\t test yes = \"$hardcode_shlibpath_var\"; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) func_append finalize_shlibpath \"$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test prog = \"$linkmode\" || test relink = \"$opt_mode\"; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test yes = \"$hardcode_direct\" &&\n\t       test no = \"$hardcode_direct_absolute\"; then\n\t      add=$libdir/$linklib\n\t    elif test yes = \"$hardcode_minus_L\"; then\n\t      add_dir=-L$libdir\n\t      add=-l$name\n\t    elif test yes = \"$hardcode_shlibpath_var\"; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) func_append finalize_shlibpath \"$libdir:\" ;;\n\t      esac\n\t      add=-l$name\n\t    elif test yes = \"$hardcode_automatic\"; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\"; then\n\t\tadd=$inst_prefix_dir$libdir/$linklib\n\t      else\n\t\tadd=$libdir/$linklib\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=-L$libdir\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=-l$name\n\t    fi\n\n\t    if test prog = \"$linkmode\"; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test prog = \"$linkmode\"; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test unsupported != \"$hardcode_direct\"; then\n\t    test -n \"$old_library\" && linklib=$old_library\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test yes = \"$build_libtool_libs\"; then\n\t  # Not a shared library\n\t  if test pass_all != \"$deplibs_check_method\"; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    echo\n\t    $ECHO \"*** Warning: This system cannot link to static lib archive $lib.\"\n\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test yes = \"$module\"; then\n\t      echo \"*** But as you try to build a module library, libtool will still create \"\n\t      echo \"*** a static module, that should work as long as the dlopening application\"\n\t      echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\techo\n\t\techo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\techo \"*** lists from a program, using 'nm' or equivalent, but libtool could\"\n\t\techo \"*** not find such a program.  So, this module is probably useless.\"\n\t\techo \"*** 'nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test no = \"$build_old_libs\"; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test lib = \"$linkmode\"; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test yes != \"$hardcode_into_libs\" ||\n\t       test yes = \"$build_old_libs\" ||\n\t       test yes = \"$link_static\"; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) func_stripname '-R' '' \"$libdir\"\n\t           temp_xrpath=$func_stripname_result\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) func_append xrpath \" $temp_xrpath\";;\n\t\t   esac;;\n\t      *) func_append temp_deplibs \" $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=$temp_deplibs\n\t  fi\n\n\t  func_append newlib_search_path \" $absdir\"\n\t  # Link against this library\n\t  test no = \"$link_static\" && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    case $deplib in\n              -L*) func_stripname '-L' '' \"$deplib\"\n                   func_resolve_sysroot \"$func_stripname_result\";;\n              *) func_resolve_sysroot \"$deplib\" ;;\n            esac\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $func_resolve_sysroot_result \"*)\n                func_append specialdeplibs \" $func_resolve_sysroot_result\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $func_resolve_sysroot_result\"\n\t  done\n\n\t  if test no != \"$link_all_deplibs\"; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      path=\n\t      case $deplib in\n\t      -L*) path=$deplib ;;\n\t      *.la)\n\t        func_resolve_sysroot \"$deplib\"\n\t        deplib=$func_resolve_sysroot_result\n\t        func_dirname \"$deplib\" \"\" \".\"\n\t\tdir=$func_dirname_result\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=$dir ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    func_warning \"cannot determine absolute directory name of '$dir'\"\n\t\t    absdir=$dir\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif $GREP \"^installed=no\" $deplib > /dev/null; then\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  depdepl=\n\t\t  eval deplibrary_names=`$SED -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\"; then\n\t\t    for tmp in $deplibrary_names; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$absdir/$objdir/$depdepl\"; then\n\t\t      depdepl=$absdir/$objdir/$depdepl\n\t\t      darwin_install_name=`$OTOOL -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`\n                      if test -z \"$darwin_install_name\"; then\n                          darwin_install_name=`$OTOOL64 -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`\n                      fi\n\t\t      func_append compiler_flags \" $wl-dylib_file $wl$darwin_install_name:$depdepl\"\n\t\t      func_append linker_flags \" -dylib_file $darwin_install_name:$depdepl\"\n\t\t      path=\n\t\t    fi\n\t\t  fi\n\t\t  ;;\n\t\t*)\n\t\t  path=-L$absdir/$objdir\n\t\t  ;;\n\t\tesac\n\t\telse\n\t\t  eval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  test -z \"$libdir\" && \\\n\t\t    func_fatal_error \"'$deplib' is not a valid libtool archive\"\n\t\t  test \"$absdir\" != \"$libdir\" && \\\n\t\t    func_warning \"'$deplib' seems to be moved\"\n\n\t\t  path=-L$absdir\n\t\tfi\n\t\t;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      if test link = \"$pass\"; then\n\tif test prog = \"$linkmode\"; then\n\t  compile_deplibs=\"$new_inherited_linker_flags $compile_deplibs\"\n\t  finalize_deplibs=\"$new_inherited_linker_flags $finalize_deplibs\"\n\telse\n\t  compiler_flags=\"$compiler_flags \"`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfi\n      fi\n      dependency_libs=$newdependency_libs\n      if test dlpreopen = \"$pass\"; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test dlopen != \"$pass\"; then\n\ttest conv = \"$pass\" || {\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append lib_search_path \" $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\t}\n\n\tif test prog,link = \"$linkmode,$pass\"; then\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\telse\n\t  vars=deplibs\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\\"\\$$var\\\"\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) func_append tmp_libs \" $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) func_append tmp_libs \" $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\\"$tmp_libs\\\"\n\tdone # for var\n      fi\n\n      # Add Sun CC postdeps if required:\n      test CXX = \"$tagname\" && {\n        case $host_os in\n        linux*)\n          case `$CC -V 2>&1 | sed 5q` in\n          *Sun\\ C*) # Sun C++ 5.9\n            func_suncc_cstd_abi\n\n            if test no != \"$suncc_use_cstd_abi\"; then\n              func_append postdeps ' -library=Cstd -library=Crun'\n            fi\n            ;;\n          esac\n          ;;\n\n        solaris*)\n          func_cc_basename \"$CC\"\n          case $func_cc_basename_result in\n          CC* | sunCC*)\n            func_suncc_cstd_abi\n\n            if test no != \"$suncc_use_cstd_abi\"; then\n              func_append postdeps ' -library=Cstd -library=Crun'\n            fi\n            ;;\n          esac\n          ;;\n        esac\n      }\n\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\n\t  ;;\n\tesac\n\tif test -n \"$i\"; then\n\t  func_append tmp_libs \" $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test prog = \"$linkmode\"; then\n      dlfiles=$newdlfiles\n    fi\n    if test prog = \"$linkmode\" || test lib = \"$linkmode\"; then\n      dlprefiles=$newdlprefiles\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n\tfunc_warning \"'-dlopen' is ignored for archives\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"'-l' and '-L' are ignored for archives\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"'-rpath' is ignored for archives\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"'-R' is ignored for archives\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info/-version-number' is ignored for archives\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for archives\"\n\n      test -n \"$export_symbols$export_symbols_regex\" && \\\n\tfunc_warning \"'-export-symbols' is ignored for archives\"\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=$output\n      func_append objs \"$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form 'libNAME.la'.\n      case $outputname in\n      lib*)\n\tfunc_stripname 'lib' '.la' \"$outputname\"\n\tname=$func_stripname_result\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\ttest no = \"$module\" \\\n\t  && func_fatal_help \"libtool library '$output' must begin with 'lib'\"\n\n\tif test no != \"$need_lib_prefix\"; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  func_stripname '' '.la' \"$outputname\"\n\t  name=$func_stripname_result\n\t  eval shared_ext=\\\"$shrext_cmds\\\"\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  func_stripname '' '.la' \"$outputname\"\n\t  libname=$func_stripname_result\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test pass_all != \"$deplibs_check_method\"; then\n\t  func_fatal_error \"cannot build libtool library '$output' from non-libtool objects on this host:$objs\"\n\telse\n\t  echo\n\t  $ECHO \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $ECHO \"*** objects $objs is not portable!\"\n\t  func_append libobjs \" $objs\"\n\tfi\n      fi\n\n      test no = \"$dlself\" \\\n\t|| func_warning \"'-dlopen self' is ignored for libtool libraries\"\n\n      set dummy $rpath\n      shift\n      test 1 -lt \"$#\" \\\n\t&& func_warning \"ignoring multiple '-rpath's for a libtool library\"\n\n      install_libdir=$1\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test yes = \"$build_libtool_libs\"; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a '.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\ttest -n \"$vinfo\" && \\\n\t  func_warning \"'-version-info/-version-number' is ignored for convenience libraries\"\n\n\ttest -n \"$release\" && \\\n\t  func_warning \"'-release' is ignored for convenience libraries\"\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=$IFS; IFS=:\n\tset dummy $vinfo 0 0 0\n\tshift\n\tIFS=$save_ifs\n\n\ttest -n \"$7\" && \\\n\t  func_fatal_help \"too many parameters to '-version-info'\"\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=$1\n\t  number_minor=$2\n\t  number_revision=$3\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # that has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  # correct linux to gnu/linux during the next big refactor\n\t  darwin|freebsd-elf|linux|osf|windows|none)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=$number_minor\n\t    revision=$number_revision\n\t    ;;\n\t  freebsd-aout|qnx|sunos)\n\t    current=$number_major\n\t    revision=$number_minor\n\t    age=0\n\t    ;;\n\t  irix|nonstopux)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=$number_minor\n\t    revision=$number_minor\n\t    lt_irix_increment=no\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=$1\n\t  revision=$2\n\t  age=$3\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"CURRENT '$current' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"REVISION '$revision' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"AGE '$age' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  func_error \"AGE '$age' is greater than the current interface number '$current'\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  # Darwin ld doesn't like 0 for these options...\n\t  func_arith $current + 1\n\t  minor_current=$func_arith_result\n\t  xlcverstring=\"$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision\"\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n          # On Darwin other compilers\n          case $CC in\n              nagfor*)\n                  verstring=\"$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision\"\n                  ;;\n              *)\n                  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n                  ;;\n          esac\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=.$current\n\t  versuffix=.$current.$revision\n\t  ;;\n\n\tfreebsd-elf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  ;;\n\n\tirix | nonstopux)\n\t  if test no = \"$lt_irix_increment\"; then\n\t    func_arith $current - $age\n\t  else\n\t    func_arith $current - $age + 1\n\t  fi\n\t  major=$func_arith_result\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=$verstring_prefix$major.$revision\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test 0 -ne \"$loop\"; do\n\t    func_arith $revision - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=$verstring_prefix$major.$iface:$verstring\n\t  done\n\n\t  # Before this point, $major must not contain '.'.\n\t  major=.$major\n\t  versuffix=$major.$revision\n\t  ;;\n\n\tlinux) # correct to gnu/linux during the next big refactor\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  ;;\n\n\tosf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=.$current.$age.$revision\n\t  verstring=$current.$age.$revision\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test 0 -ne \"$loop\"; do\n\t    func_arith $current - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=$verstring:$iface.0\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  func_append verstring \":$current.0\"\n\t  ;;\n\n\tqnx)\n\t  major=.$current\n\t  versuffix=.$current\n\t  ;;\n\n\tsco)\n\t  major=.$current\n\t  versuffix=.$current\n\t  ;;\n\n\tsunos)\n\t  major=.$current\n\t  versuffix=.$current.$revision\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 file systems.\n\t  func_arith $current - $age\n\t  major=$func_arith_result\n\t  versuffix=-$major\n\t  ;;\n\n\t*)\n\t  func_fatal_configuration \"unknown library version type '$version_type'\"\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=0.0\n\t    ;;\n\t  esac\n\t  if test no = \"$need_version\"; then\n\t    versuffix=\n\t  else\n\t    versuffix=.0.0\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test yes,no = \"$avoid_version,$need_version\"; then\n\t  major=\n\t  versuffix=\n\t  verstring=\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test yes = \"$allow_undefined\"; then\n\t  if test unsupported = \"$allow_undefined_flag\"; then\n\t    if test yes = \"$build_old_libs\"; then\n\t      func_warning \"undefined symbols not allowed in $host shared libraries; building static only\"\n\t      build_libtool_libs=no\n\t    else\n\t      func_fatal_error \"can't build $host shared library unless -no-undefined is specified\"\n\t    fi\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=$no_undefined_flag\n\tfi\n\n      fi\n\n      func_generate_dlsyms \"$libname\" \"$libname\" :\n      func_append libobjs \" $symfileobj\"\n      test \" \" = \"$libobjs\" && libobjs=\n\n      if test relink != \"$opt_mode\"; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$ECHO \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext | *.gcno)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/$libname$release.*)\n\t       if test -n \"$precious_files_regex\"; then\n\t\t if $ECHO \"$p\" | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t\t then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       func_append removelist \" $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\ttest -n \"$removelist\" && \\\n\t  func_show_eval \"${RM}r \\$removelist\"\n      fi\n\n      # Now set the variables for building old libraries.\n      if test yes = \"$build_old_libs\" && test convenience != \"$build_libtool_libs\"; then\n\tfunc_append oldlibs \" $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.$libext$/d; $lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      #for path in $notinst_path; do\n      #\tlib_search_path=`$ECHO \"$lib_search_path \" | $SED \"s% $path % %g\"`\n      #\tdeplibs=`$ECHO \"$deplibs \" | $SED \"s% -L$path % %g\"`\n      #\tdependency_libs=`$ECHO \"$dependency_libs \" | $SED \"s% -L$path % %g\"`\n      #done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  func_replace_sysroot \"$libdir\"\n\t  func_append temp_xrpath \" -R$func_replace_sysroot_result\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n\tif test yes != \"$hardcode_into_libs\" || test yes = \"$build_old_libs\"; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=$dlfiles\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlfiles \" $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=$dlprefiles\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlprefiles \" $lib\" ;;\n\tesac\n      done\n\n      if test yes = \"$build_libtool_libs\"; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n\t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test yes = \"$build_libtool_need_lc\"; then\n\t      func_append deplibs \" -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\n\tversuffix=\n\tmajor=\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $opt_dry_run || $RM conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $opt_dry_run || $RM conftest\n\t  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\tif test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    func_append newdeplibs \" $i\"\n\t\t    i=\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t\tif test -n \"$i\"; then\n\t\t  libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t  deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t  set dummy $deplib_matches; shift\n\t\t  deplib_match=$1\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0; then\n\t\t    func_append newdeplibs \" $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\t$opt_dry_run || $RM conftest\n\t\tif $LTCC $LTCFLAGS -o conftest conftest.c $i; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      func_append newdeplibs \" $i\"\n\t\t      i=\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\"; then\n\t\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t    deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t    set dummy $deplib_matches; shift\n\t\t    deplib_match=$1\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0; then\n\t\t      func_append newdeplibs \" $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      echo\n\t\t      $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  $ECHO \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"*** make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method; shift\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tif test -n \"$file_magic_glob\"; then\n\t\t  libnameglob=`func_echo_all \"$libname\" | $SED -e $file_magic_glob`\n\t\telse\n\t\t  libnameglob=$libname\n\t\tfi\n\t\ttest yes = \"$want_nocaseglob\" && nocaseglob=`shopt -p nocaseglob`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  if test yes = \"$want_nocaseglob\"; then\n\t\t    shopt -s nocaseglob\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t    $nocaseglob\n\t\t  else\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t  fi\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null |\n\t\t\t $GREP \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=$potent_lib\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | $SED 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=$potliblink;;\n\t\t\t*) potlib=`$ECHO \"$potlib\" | $SED 's|[^/]*$||'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null |\n\t\t\t $SED -e 10q |\n\t\t\t $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tfunc_append newdeplibs \" $a_deplib\"\n\t\t\ta_deplib=\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\"; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method; shift\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=$potent_lib # see symlink-check above in file_magic test\n\t\t    if eval \"\\$ECHO \\\"$potent_lib\\\"\" 2>/dev/null | $SED 10q | \\\n\t\t       $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      func_append newdeplibs \" $a_deplib\"\n\t\t      a_deplib=\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\"; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\n\t  tmp_deplibs=`$ECHO \" $deplibs\" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`\n\t  if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t    for i in $predeps $postdeps; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$ECHO \" $tmp_deplibs\" | $SED \"s|$i||\"`\n\t    done\n\t  fi\n\t  case $tmp_deplibs in\n\t  *[!\\\t\\ ]*)\n\t    echo\n\t    if test none = \"$deplibs_check_method\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library with the System framework\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t  ;;\n\tesac\n\n\tif test yes = \"$droppeddeps\"; then\n\t  if test yes = \"$module\"; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $ECHO \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using 'nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** 'nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test no = \"$build_old_libs\"; then\n\t      oldlibs=$output_objdir/$libname.$libext\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\n\t    if test no = \"$allow_undefined\"; then\n\t      echo\n\t      echo \"*** Since this library must not contain undefined symbols,\"\n\t      echo \"*** because either the platform does not support them or\"\n\t      echo \"*** it was explicitly requested with -no-undefined,\"\n\t      echo \"*** libtool will only create a static version of it.\"\n\t      if test no = \"$build_old_libs\"; then\n\t\toldlibs=$output_objdir/$libname.$libext\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n      # Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n      case $host in\n\t*-*-darwin*)\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  new_inherited_linker_flags=`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  deplibs=`$ECHO \" $deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  ;;\n      esac\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      deplibs=$new_libs\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test yes = \"$build_libtool_libs\"; then\n\t# Remove $wl instances when linking with ld.\n\t# FIXME: should test the right _cmds variable.\n\tcase $archive_cmds in\n\t  *\\$LD\\ *) wl= ;;\n        esac\n\tif test yes = \"$hardcode_into_libs\"; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=$finalize_rpath\n\t  test relink = \"$opt_mode\" || rpath=$compile_rpath$rpath\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tfunc_replace_sysroot \"$libdir\"\n\t\tlibdir=$func_replace_sysroot_result\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=$libdir\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    func_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t\tfunc_append dep_rpath \" $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append perm_rpath \" $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=$hardcode_libdirs\n\t    eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      func_append rpath \"$dir:\"\n\t    done\n\t    eval \"$runpath_var='$rpath\\$$runpath_var'; export $runpath_var\"\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=$finalize_shlibpath\n\ttest relink = \"$opt_mode\" || shlibpath=$compile_shlibpath$shlibpath\n\tif test -n \"$shlibpath\"; then\n\t  eval \"$shlibpath_var='$shlibpath\\$$shlibpath_var'; export $shlibpath_var\"\n\tfi\n\n\t# Get the real and link names of the library.\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\tshift\n\trealname=$1\n\tshift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=$realname\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=$output_objdir/$realname\n\tlinknames=\n\tfor link\n\tdo\n\t  func_append linknames \" $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$ECHO \"$libobjs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\ttest \"X$libobjs\" = \"X \" && libobjs=\n\n\tdelfiles=\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $opt_dry_run || cp \"$export_symbols\" \"$output_objdir/$libname.uexp\"\n\t  export_symbols=$output_objdir/$libname.uexp\n\t  func_append delfiles \" $export_symbols\"\n\tfi\n\n\torig_export_symbols=\n\tcase $host_os in\n\tcygwin* | mingw* | cegcc*)\n\t  if test -n \"$export_symbols\" && test -z \"$export_symbols_regex\"; then\n\t    # exporting using user supplied symfile\n\t    func_dll_def_p \"$export_symbols\" || {\n\t      # and it's NOT already a .def file. Must figure out\n\t      # which of the given symbols are data symbols and tag\n\t      # them as such. So, trigger use of export_symbols_cmds.\n\t      # export_symbols gets reassigned inside the \"prepare\n\t      # the list of exported symbols\" if statement, so the\n\t      # include_expsyms logic still works.\n\t      orig_export_symbols=$export_symbols\n\t      export_symbols=\n\t      always_export_symbols=yes\n\t    }\n\t  fi\n\t  ;;\n\tesac\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test yes = \"$always_export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t    func_verbose \"generating symbol list for '$libname.la'\"\n\t    export_symbols=$output_objdir/$libname.exp\n\t    $opt_dry_run || $RM $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=$IFS; IFS='~'\n\t    for cmd1 in $cmds; do\n\t      IFS=$save_ifs\n\t      # Take the normal branch if the nm_file_list_spec branch\n\t      # doesn't work or if tool conversion is not needed.\n\t      case $nm_file_list_spec~$to_tool_file_cmd in\n\t\t*~func_convert_file_noop | *~func_convert_file_msys_to_w32 | ~*)\n\t\t  try_normal_branch=yes\n\t\t  eval cmd=\\\"$cmd1\\\"\n\t\t  func_len \" $cmd\"\n\t\t  len=$func_len_result\n\t\t  ;;\n\t\t*)\n\t\t  try_normal_branch=no\n\t\t  ;;\n\t      esac\n\t      if test yes = \"$try_normal_branch\" \\\n\t\t && { test \"$len\" -lt \"$max_cmd_len\" \\\n\t\t      || test \"$max_cmd_len\" -le -1; }\n\t      then\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\tskipped_export=false\n\t      elif test -n \"$nm_file_list_spec\"; then\n\t\tfunc_basename \"$output\"\n\t\toutput_la=$func_basename_result\n\t\tsave_libobjs=$libobjs\n\t\tsave_output=$output\n\t\toutput=$output_objdir/$output_la.nm\n\t\tfunc_to_tool_file \"$output\"\n\t\tlibobjs=$nm_file_list_spec$func_to_tool_file_result\n\t\tfunc_append delfiles \" $output\"\n\t\tfunc_verbose \"creating $NM input file list: $output\"\n\t\tfor obj in $save_libobjs; do\n\t\t  func_to_tool_file \"$obj\"\n\t\t  $ECHO \"$func_to_tool_file_result\"\n\t\tdone > \"$output\"\n\t\teval cmd=\\\"$cmd1\\\"\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\toutput=$save_output\n\t\tlibobjs=$save_libobjs\n\t\tskipped_export=false\n\t      else\n\t\t# The command line is too long to execute in one step.\n\t\tfunc_verbose \"using reloadable object file for export list...\"\n\t\tskipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=$save_ifs\n\t    if test -n \"$export_symbols_regex\" && test : != \"$skipped_export\"; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  tmp_export_symbols=$export_symbols\n\t  test -n \"$orig_export_symbols\" && tmp_export_symbols=$orig_export_symbols\n\t  $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\tfi\n\n\tif test : != \"$skipped_export\" && test -n \"$orig_export_symbols\"; then\n\t  # The given exports_symbols file has to be filtered, so filter it.\n\t  func_verbose \"filter symbol list for '$libname.la' to tag DATA exports\"\n\t  # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t  # 's' commands, which not all seds can handle. GNU sed should be fine\n\t  # though. Also, the filter scales superlinearly with the number of\n\t  # global variables. join(1) would be nice here, but unfortunately\n\t  # isn't a blessed tool.\n\t  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t  func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t  export_symbols=$output_objdir/$libname.def\n\t  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t  case \" $convenience \" in\n\t  *\" $test_deplib \"*) ;;\n\t  *)\n\t    func_append tmp_deplibs \" $test_deplib\"\n\t    ;;\n\t  esac\n\tdone\n\tdeplibs=$tmp_deplibs\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\" &&\n\t    test yes = \"$compiler_needs_object\" &&\n\t    test -z \"$libobjs\"; then\n\t    # extract the archives, so we have objects to list.\n\t    # TODO: could optimize this to just extract one archive.\n\t    whole_archive_flag_spec=\n\t  fi\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  else\n\t    gentop=$output_objdir/${outputname}x\n\t    func_append generated \" $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    func_append libobjs \" $func_extract_archives_result\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\tfi\n\n\tif test yes = \"$thread_safe\" && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  func_append linker_flags \" $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test relink = \"$opt_mode\"; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U)' || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test yes = \"$module\" && test -n \"$module_cmds\"; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$module_expsym_cmds\\\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$module_cmds\\\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$archive_expsym_cmds\\\"\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$archive_cmds\\\"\n\t    cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test : != \"$skipped_export\" &&\n\t   func_len \" $test_cmds\" &&\n\t   len=$func_len_result &&\n\t   test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise\n\t  # or, if using GNU ld and skipped_export is not :, use a linker\n\t  # script.\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  func_basename \"$output\"\n\t  output_la=$func_basename_result\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  last_robj=\n\t  k=1\n\n\t  if test -n \"$save_libobjs\" && test : != \"$skipped_export\" && test yes = \"$with_gnu_ld\"; then\n\t    output=$output_objdir/$output_la.lnkscript\n\t    func_verbose \"creating GNU ld script: $output\"\n\t    echo 'INPUT (' > $output\n\t    for obj in $save_libobjs\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    echo ')' >> $output\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$func_to_tool_file_result\n\t  elif test -n \"$save_libobjs\" && test : != \"$skipped_export\" && test -n \"$file_list_spec\"; then\n\t    output=$output_objdir/$output_la.lnk\n\t    func_verbose \"creating linker input file list: $output\"\n\t    : > $output\n\t    set x $save_libobjs\n\t    shift\n\t    firstobj=\n\t    if test yes = \"$compiler_needs_object\"; then\n\t      firstobj=\"$1 \"\n\t      shift\n\t    fi\n\t    for obj\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$firstobj\\\"$file_list_spec$func_to_tool_file_result\\\"\n\t  else\n\t    if test -n \"$save_libobjs\"; then\n\t      func_verbose \"creating reloadable object files...\"\n\t      output=$output_objdir/$output_la-$k.$objext\n\t      eval test_cmds=\\\"$reload_cmds\\\"\n\t      func_len \" $test_cmds\"\n\t      len0=$func_len_result\n\t      len=$len0\n\n\t      # Loop over the list of objects to be linked.\n\t      for obj in $save_libobjs\n\t      do\n\t\tfunc_len \" $obj\"\n\t\tfunc_arith $len + $func_len_result\n\t\tlen=$func_arith_result\n\t\tif test -z \"$objlist\" ||\n\t\t   test \"$len\" -lt \"$max_cmd_len\"; then\n\t\t  func_append objlist \" $obj\"\n\t\telse\n\t\t  # The command $test_cmds is almost too long, add a\n\t\t  # command to the queue.\n\t\t  if test 1 -eq \"$k\"; then\n\t\t    # The first file doesn't have a previous command to add.\n\t\t    reload_objs=$objlist\n\t\t    eval concat_cmds=\\\"$reload_cmds\\\"\n\t\t  else\n\t\t    # All subsequent reloadable object files will link in\n\t\t    # the last one created.\n\t\t    reload_objs=\"$objlist $last_robj\"\n\t\t    eval concat_cmds=\\\"\\$concat_cmds~$reload_cmds~\\$RM $last_robj\\\"\n\t\t  fi\n\t\t  last_robj=$output_objdir/$output_la-$k.$objext\n\t\t  func_arith $k + 1\n\t\t  k=$func_arith_result\n\t\t  output=$output_objdir/$output_la-$k.$objext\n\t\t  objlist=\" $obj\"\n\t\t  func_len \" $last_robj\"\n\t\t  func_arith $len0 + $func_len_result\n\t\t  len=$func_arith_result\n\t\tfi\n\t      done\n\t      # Handle the remaining objects by creating one last\n\t      # reloadable object file.  All subsequent reloadable object\n\t      # files will link in the last one created.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      reload_objs=\"$objlist $last_robj\"\n\t      eval concat_cmds=\\\"\\$concat_cmds$reload_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t        eval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t      func_append delfiles \" $output\"\n\n\t    else\n\t      output=\n\t    fi\n\n\t    ${skipped_export-false} && {\n\t      func_verbose \"generating symbol list for '$libname.la'\"\n\t      export_symbols=$output_objdir/$libname.exp\n\t      $opt_dry_run || $RM $export_symbols\n\t      libobjs=$output\n\t      # Append the command to create the export file.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$export_symbols_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t\teval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t    }\n\n\t    test -n \"$save_libobjs\" &&\n\t      func_verbose \"creating a temporary reloadable object file: $output\"\n\n\t    # Loop through the commands generated above and execute them.\n\t    save_ifs=$IFS; IFS='~'\n\t    for cmd in $concat_cmds; do\n\t      IFS=$save_ifs\n\t      $opt_quiet || {\n\t\t  func_quote_for_expand \"$cmd\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t      }\n\t      $opt_dry_run || eval \"$cmd\" || {\n\t\tlt_exit=$?\n\n\t\t# Restore the uninstalled library and exit\n\t\tif test relink = \"$opt_mode\"; then\n\t\t  ( cd \"$output_objdir\" && \\\n\t\t    $RM \"${realname}T\" && \\\n\t\t    $MV \"${realname}U\" \"$realname\" )\n\t\tfi\n\n\t\texit $lt_exit\n\t      }\n\t    done\n\t    IFS=$save_ifs\n\n\t    if test -n \"$export_symbols_regex\" && ${skipped_export-false}; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\n          ${skipped_export-false} && {\n\t    if test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t      tmp_export_symbols=$export_symbols\n\t      test -n \"$orig_export_symbols\" && tmp_export_symbols=$orig_export_symbols\n\t      $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\t    fi\n\n\t    if test -n \"$orig_export_symbols\"; then\n\t      # The given exports_symbols file has to be filtered, so filter it.\n\t      func_verbose \"filter symbol list for '$libname.la' to tag DATA exports\"\n\t      # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t      # 's' commands, which not all seds can handle. GNU sed should be fine\n\t      # though. Also, the filter scales superlinearly with the number of\n\t      # global variables. join(1) would be nice here, but unfortunately\n\t      # isn't a blessed tool.\n\t      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t      func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t      export_symbols=$output_objdir/$libname.def\n\t      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\t    fi\n\t  }\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test yes = \"$module\" && test -n \"$module_cmds\"; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t    if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t      cmds=$archive_expsym_cmds\n\t    else\n\t      cmds=$archive_cmds\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$delfiles\"; then\n\t  # Append the command to remove temporary files to $cmds.\n\t  eval cmds=\\\"\\$cmds~\\$RM $delfiles\\\"\n\tfi\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append libobjs \" $func_extract_archives_result\"\n\t  test \"X$libobjs\" = \"X \" && libobjs=\n\tfi\n\n\tsave_ifs=$IFS; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=$sp$nl\n\t  eval cmd=\\\"$cmd\\\"\n\t  IFS=$save_ifs\n\t  $opt_quiet || {\n\t    func_quote_for_expand \"$cmd\"\n\t    eval \"func_echo $func_quote_for_expand_result\"\n\t  }\n\t  $opt_dry_run || eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test relink = \"$opt_mode\"; then\n\t      ( cd \"$output_objdir\" && \\\n\t        $RM \"${realname}T\" && \\\n\t\t$MV \"${realname}U\" \"$realname\" )\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=$save_ifs\n\n\t# Restore the uninstalled library and exit\n\tif test relink = \"$opt_mode\"; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname)' || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      func_show_eval '${RM}r \"$gentop\"'\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    func_show_eval '(cd \"$output_objdir\" && $RM \"$linkname\" && $LN_S \"$realname\" \"$linkname\")' 'exit $?'\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test yes = \"$module\" || test yes = \"$export_dynamic\"; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=$soname\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n\tfunc_warning \"'-dlopen' is ignored for objects\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"'-l' and '-L' are ignored for objects\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"'-rpath' is ignored for objects\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"'-R' is ignored for objects\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info' is ignored for objects\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for objects\"\n\n      case $output in\n      *.lo)\n\ttest -n \"$objs$old_deplibs\" && \\\n\t  func_fatal_error \"cannot build library object '$output' from non-libtool objects\"\n\n\tlibobj=$output\n\tfunc_lo2o \"$libobj\"\n\tobj=$func_lo2o_result\n\t;;\n      *)\n\tlibobj=\n\tobj=$output\n\t;;\n      esac\n\n      # Delete the old objects.\n      $opt_dry_run || $RM $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # if reload_cmds runs $LD directly, get rid of -Wl from\n      # whole_archive_flag_spec and hope we can get by with turning comma\n      # into space.\n      case $reload_cmds in\n        *\\$LD[\\ \\$]*) wl= ;;\n      esac\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval tmp_whole_archive_flags=\\\"$whole_archive_flag_spec\\\"\n\t  test -n \"$wl\" || tmp_whole_archive_flags=`$ECHO \"$tmp_whole_archive_flags\" | $SED 's|,| |g'`\n\t  reload_conv_objs=$reload_objs\\ $tmp_whole_archive_flags\n\telse\n\t  gentop=$output_objdir/${obj}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # If we're not building shared, we need to use non_pic_objs\n      test yes = \"$build_libtool_libs\" || libobjs=$non_pic_objects\n\n      # Create the old-style object.\n      reload_objs=$objs$old_deplibs' '`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.$libext$/d; /\\.lib$/d; $lo2o\" | $NL2SP`' '$reload_conv_objs\n\n      output=$obj\n      func_execute_cmds \"$reload_cmds\" 'exit $?'\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      test yes = \"$build_libtool_libs\" || {\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $opt_dry_run || eval \"echo timestamp > $libobj\" || exit $?\n\texit $EXIT_SUCCESS\n      }\n\n      if test -n \"$pic_flag\" || test default != \"$pic_mode\"; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=$libobj\n\tfunc_execute_cmds \"$reload_cmds\" 'exit $?'\n      fi\n\n      if test -n \"$gentop\"; then\n\tfunc_show_eval '${RM}r \"$gentop\"'\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) func_stripname '' '.exe' \"$output\"\n\t          output=$func_stripname_result.exe;;\n      esac\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info' is ignored for programs\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for programs\"\n\n      $preload \\\n\t&& test unknown,unknown,unknown = \"$dlopen_support,$dlopen_self,$dlopen_self_static\" \\\n\t&& func_warning \"'LT_INIT([dlopen])' not used. Assuming no dlopen support.\"\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t;;\n      esac\n\n      case $host in\n      *-*-darwin*)\n\t# Don't allow lazy linking, it breaks C++ global constructors\n\t# But is supposedly fixed on 10.4 or later (yay!).\n\tif test CXX = \"$tagname\"; then\n\t  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in\n\t    10.[0123])\n\t      func_append compile_command \" $wl-bind_at_load\"\n\t      func_append finalize_command \" $wl-bind_at_load\"\n\t    ;;\n\t  esac\n\tfi\n\t# Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=$new_libs\n\n\n      func_append compile_command \" $compile_deplibs\"\n      func_append finalize_command \" $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=$libdir\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$libdir\" | $SED -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  ::) dllsearchpath=$libdir;;\n\t  *) func_append dllsearchpath \":$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=$hardcode_libdirs\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=$rpath\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=$libdir\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=$hardcode_libdirs\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=$rpath\n\n      if test -n \"$libobjs\" && test yes = \"$build_old_libs\"; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$ECHO \"$compile_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$ECHO \"$finalize_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n      fi\n\n      func_generate_dlsyms \"$outputname\" \"@PROGRAM@\" false\n\n      # template prelinking step\n      if test -n \"$prelink_cmds\"; then\n\tfunc_execute_cmds \"$prelink_cmds\" 'exit $?'\n      fi\n\n      wrappers_required=:\n      case $host in\n      *cegcc* | *mingw32ce*)\n        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.\n        wrappers_required=false\n        ;;\n      *cygwin* | *mingw* )\n        test yes = \"$build_libtool_libs\" || wrappers_required=false\n        ;;\n      *)\n        if test no = \"$need_relink\" || test yes != \"$build_libtool_libs\"; then\n          wrappers_required=false\n        fi\n        ;;\n      esac\n      $wrappers_required || {\n\t# Replace the output file specification.\n\tcompile_command=`$ECHO \"$compile_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=$compile_command$compile_rpath\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\texit_status=0\n\tfunc_show_eval \"$link_command\" 'exit_status=$?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\t# Delete the generated files.\n\tif test -f \"$output_objdir/${outputname}S.$objext\"; then\n\t  func_show_eval '$RM \"$output_objdir/${outputname}S.$objext\"'\n\tfi\n\n\texit $exit_status\n      }\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test yes = \"$no_install\"; then\n\t# We don't need to create a wrapper script.\n\tlink_command=$compile_var$compile_command$compile_rpath\n\t# Replace the output file specification.\n\tlink_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$opt_dry_run || $RM $output\n\t# Link the executable and exit\n\tfunc_show_eval \"$link_command\" 'exit $?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      case $hardcode_action,$fast_install in\n        relink,*)\n\t  # Fast installation is not supported\n\t  link_command=$compile_var$compile_command$compile_rpath\n\t  relink_command=$finalize_var$finalize_command$finalize_rpath\n\n\t  func_warning \"this platform does not like uninstalled shared libraries\"\n\t  func_warning \"'$output' will be relinked during installation\"\n\t  ;;\n        *,yes)\n\t  link_command=$finalize_var$compile_command$finalize_rpath\n\t  relink_command=`$ECHO \"$compile_var$compile_command$compile_rpath\" | $SED 's%@OUTPUT@%\\$progdir/\\$file%g'`\n          ;;\n\t*,no)\n\t  link_command=$compile_var$compile_command$compile_rpath\n\t  relink_command=$finalize_var$finalize_command$finalize_rpath\n          ;;\n\t*,needless)\n\t  link_command=$finalize_var$compile_command$finalize_rpath\n\t  relink_command=\n          ;;\n      esac\n\n      # Replace the output file specification.\n      link_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      func_show_eval \"$link_command\" 'exit $?'\n\n      if test -n \"$postlink_cmds\"; then\n\tfunc_to_tool_file \"$output_objdir/$outputname\"\n\tpostlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\tfunc_execute_cmds \"$postlink_cmds\" 'exit $?'\n      fi\n\n      # Now create the wrapper script.\n      func_verbose \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    func_quote_for_eval \"$var_value\"\n\t    relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if not in dry run mode.\n      $opt_dry_run || {\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) func_stripname '' '.exe' \"$output\"\n\t         output=$func_stripname_result ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    func_stripname '' '.exe' \"$outputname\"\n\t    outputname=$func_stripname_result ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    func_dirname_and_basename \"$output\" \"\" \".\"\n\t    output_name=$func_basename_result\n\t    output_path=$func_dirname_result\n\t    cwrappersource=$output_path/$objdir/lt-$output_name.c\n\t    cwrapper=$output_path/$output_name.exe\n\t    $RM $cwrappersource $cwrapper\n\t    trap \"$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_cwrapperexe_src > $cwrappersource\n\n\t    # The wrapper executable is built using the $host compiler,\n\t    # because it contains $host paths and files. If cross-\n\t    # compiling, it, like the target executable, must be\n\t    # executed on the $host or under an emulation environment.\n\t    $opt_dry_run || {\n\t      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource\n\t      $STRIP $cwrapper\n\t    }\n\n\t    # Now, create the wrapper script for func_source use:\n\t    func_ltwrapper_scriptname $cwrapper\n\t    $RM $func_ltwrapper_scriptname_result\n\t    trap \"$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE\" 1 2 15\n\t    $opt_dry_run || {\n\t      # note: this script will not be executed, so do not chmod.\n\t      if test \"x$build\" = \"x$host\"; then\n\t\t$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result\n\t      else\n\t\tfunc_emit_wrapper no > $func_ltwrapper_scriptname_result\n\t      fi\n\t    }\n\t  ;;\n\t  * )\n\t    $RM $output\n\t    trap \"$RM $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_wrapper no > $output\n\t    chmod +x $output\n\t  ;;\n\tesac\n      }\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      case $build_libtool_libs in\n        convenience)\n\t  oldobjs=\"$libobjs_save $symfileobj\"\n\t  addlibs=$convenience\n\t  build_libtool_libs=no\n\t  ;;\n\tmodule)\n\t  oldobjs=$libobjs_save\n\t  addlibs=$old_convenience\n\t  build_libtool_libs=no\n          ;;\n\t*)\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\t  $preload && test -f \"$symfileobj\" \\\n\t    && func_append oldobjs \" $symfileobj\"\n\t  addlibs=$old_convenience\n\t  ;;\n      esac\n\n      if test -n \"$addlibs\"; then\n\tgentop=$output_objdir/${outputname}x\n\tfunc_append generated \" $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\tfunc_append oldobjs \" $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test yes = \"$build_libtool_libs\"; then\n\tcmds=$old_archive_from_new_cmds\n      else\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append oldobjs \" $func_extract_archives_result\"\n\tfi\n\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      func_basename \"$obj\"\n\t      $ECHO \"$func_basename_result\"\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  echo \"copying selected object files to avoid basename conflicts...\"\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\t  func_mkdir_p \"$gentop\"\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_basename \"$obj\"\n\t    objbase=$func_basename_result\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tfunc_arith $counter + 1\n\t\tcounter=$func_arith_result\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      func_show_eval \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      func_append oldobjs \" $gentop/$newobj\"\n\t      ;;\n\t    *) func_append oldobjs \" $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\tfunc_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n\ttool_oldlib=$func_to_tool_file_result\n\teval cmds=\\\"$old_archive_cmds\\\"\n\n\tfunc_len \" $cmds\"\n\tlen=$func_len_result\n\tif test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telif test -n \"$archiver_list_spec\"; then\n\t  func_verbose \"using command file archive linking...\"\n\t  for obj in $oldobjs\n\t  do\n\t    func_to_tool_file \"$obj\"\n\t    $ECHO \"$func_to_tool_file_result\"\n\t  done > $output_objdir/$libname.libcmd\n\t  func_to_tool_file \"$output_objdir/$libname.libcmd\"\n\t  oldobjs=\" $archiver_list_spec$func_to_tool_file_result\"\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  func_verbose \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  eval test_cmds=\\\"$old_archive_cmds\\\"\n\t  func_len \" $test_cmds\"\n\t  len0=$func_len_result\n\t  len=$len0\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_len \" $obj\"\n\t    func_arith $len + $func_len_result\n\t    len=$func_arith_result\n\t    func_append objlist \" $obj\"\n\t    if test \"$len\" -lt \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\"; then\n\t\tRANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$old_archive_cmds\\\"\n\t      objlist=\n\t      len=$len0\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test -z \"$oldobjs\"; then\n\t    eval cmds=\\\"\\$concat_cmds\\\"\n\t  else\n\t    eval cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\n\t  fi\n\tfi\n      fi\n      func_execute_cmds \"$cmds\" 'exit $?'\n    done\n\n    test -n \"$generated\" && \\\n      func_show_eval \"${RM}r$generated\"\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test yes = \"$build_old_libs\" && old_library=$libname.$libext\n      func_verbose \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  func_quote_for_eval \"$var_value\"\n\t  relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL \\\"$progpath\\\" $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      if test yes = \"$hardcode_automatic\"; then\n\trelink_command=\n      fi\n\n      # Only create the output if not a dry run.\n      $opt_dry_run || {\n\tfor installed in no yes; do\n\t  if test yes = \"$installed\"; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=$output_objdir/${outputname}i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tfunc_basename \"$deplib\"\n\t\tname=$func_basename_result\n\t\tfunc_resolve_sysroot \"$deplib\"\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $func_resolve_sysroot_result`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$deplib' is not a valid libtool archive\"\n\t\tfunc_append newdependency_libs \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      -L*)\n\t\tfunc_stripname -L '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -L$func_replace_sysroot_result\"\n\t\t;;\n\t      -R*)\n\t\tfunc_stripname -R '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -R$func_replace_sysroot_result\"\n\t\t;;\n\t      *) func_append newdependency_libs \" $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=$newdependency_libs\n\t    newdlfiles=\n\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t      *.la)\n\t        func_basename \"$lib\"\n\t\tname=$func_basename_result\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlfiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      *) func_append newdlfiles \" $lib\" ;;\n\t      esac\n\t    done\n\t    dlfiles=$newdlfiles\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t      *.la)\n\t\t# Only pass preopened files to the pseudo-archive (for\n\t\t# eventual linking with the app. that links it) if we\n\t\t# didn't already link the preopened objects directly into\n\t\t# the library:\n\t\tfunc_basename \"$lib\"\n\t\tname=$func_basename_result\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlprefiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      esac\n\t    done\n\t    dlprefiles=$newdlprefiles\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=$lib ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlfiles \" $abs\"\n\t    done\n\t    dlfiles=$newdlfiles\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=$lib ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlprefiles \" $abs\"\n\t    done\n\t    dlprefiles=$newdlprefiles\n\t  fi\n\t  $RM $output\n\t  # place dlname in correct position for cygwin\n\t  # In fact, it would be nice if we could use this code for all target\n\t  # systems that can't hard-code library paths into their executables\n\t  # and that have no shared library path variable independent of PATH,\n\t  # but it turns out we can't easily determine that from inspecting\n\t  # libtool variables, so we have to hard-code the OSs to which it\n\t  # applies here; at the moment, that means platforms that use the PE\n\t  # object format with DLL files.  See the long comment at the top of\n\t  # tests/bindir.at for full details.\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)\n\t      # If a -bindir argument was supplied, place the dll there.\n\t      if test -n \"$bindir\"; then\n\t\tfunc_relative_path \"$install_libdir\" \"$bindir\"\n\t\ttdlname=$func_relative_path_result/$dlname\n\t      else\n\t\t# Otherwise fall back on heuristic.\n\t\ttdlname=../bin/$dlname\n\t      fi\n\t      ;;\n\t  esac\n\t  $ECHO > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Linker flags that cannot go in dependency_libs.\ninherited_linker_flags='$new_inherited_linker_flags'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Names of additional weak libraries provided by this library\nweak_library_names='$weak_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test no,yes = \"$installed,$need_relink\"; then\n\t    $ECHO >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      }\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      func_show_eval '( cd \"$output_objdir\" && $RM \"$outputname\" && $LN_S \"../$outputname\" \"$outputname\" )' 'exit $?'\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n}\n\nif test link = \"$opt_mode\" || test relink = \"$opt_mode\"; then\n  func_mode_link ${1+\"$@\"}\nfi\n\n\n# func_mode_uninstall arg...\nfunc_mode_uninstall ()\n{\n    $debug_cmd\n\n    RM=$nonopt\n    files=\n    rmforce=false\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=$magic\n\n    for arg\n    do\n      case $arg in\n      -f) func_append RM \" $arg\"; rmforce=: ;;\n      -*) func_append RM \" $arg\" ;;\n      *) func_append files \" $arg\" ;;\n      esac\n    done\n\n    test -z \"$RM\" && \\\n      func_fatal_help \"you must specify an RM program\"\n\n    rmdirs=\n\n    for file in $files; do\n      func_dirname \"$file\" \"\" \".\"\n      dir=$func_dirname_result\n      if test . = \"$dir\"; then\n\todir=$objdir\n      else\n\todir=$dir/$objdir\n      fi\n      func_basename \"$file\"\n      name=$func_basename_result\n      test uninstall = \"$opt_mode\" && odir=$dir\n\n      # Remember odir for removal later, being careful to avoid duplicates\n      if test clean = \"$opt_mode\"; then\n\tcase \" $rmdirs \" in\n\t  *\" $odir \"*) ;;\n\t  *) func_append rmdirs \" $odir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if { test -L \"$file\"; } >/dev/null 2>&1 ||\n\t { test -h \"$file\"; } >/dev/null 2>&1 ||\n\t test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif $rmforce; then\n\tcontinue\n      fi\n\n      rmfiles=$file\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif func_lalib_p \"$file\"; then\n\t  func_source $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    func_append rmfiles \" $odir/$n\"\n\t  done\n\t  test -n \"$old_library\" && func_append rmfiles \" $odir/$old_library\"\n\n\t  case $opt_mode in\n\t  clean)\n\t    case \" $library_names \" in\n\t    *\" $dlname \"*) ;;\n\t    *) test -n \"$dlname\" && func_append rmfiles \" $odir/$dlname\" ;;\n\t    esac\n\t    test -n \"$libdir\" && func_append rmfiles \" $odir/$name $odir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      func_execute_cmds \"$postuninstall_cmds\" '$rmforce || exit_status=1'\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      func_execute_cmds \"$old_postuninstall_cmds\" '$rmforce || exit_status=1'\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif func_lalib_p \"$file\"; then\n\n\t  # Read the .lo file\n\t  func_source $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" && test none != \"$pic_object\"; then\n\t    func_append rmfiles \" $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" && test none != \"$non_pic_object\"; then\n\t    func_append rmfiles \" $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test clean = \"$opt_mode\"; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    func_stripname '' '.exe' \"$file\"\n\t    file=$func_stripname_result\n\t    func_stripname '' '.exe' \"$name\"\n\t    noexename=$func_stripname_result\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    func_append rmfiles \" $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if func_ltwrapper_p \"$file\"; then\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      relink_command=\n\t      func_source $func_ltwrapper_scriptname_result\n\t      func_append rmfiles \" $func_ltwrapper_scriptname_result\"\n\t    else\n\t      relink_command=\n\t      func_source $dir/$noexename\n\t    fi\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    func_append rmfiles \" $odir/$name $odir/${name}S.$objext\"\n\t    if test yes = \"$fast_install\" && test -n \"$relink_command\"; then\n\t      func_append rmfiles \" $odir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\"; then\n\t      func_append rmfiles \" $odir/lt-$noexename.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      func_show_eval \"$RM $rmfiles\" 'exit_status=1'\n    done\n\n    # Try to remove the $objdir's in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\tfunc_show_eval \"rmdir $dir >/dev/null 2>&1\"\n      fi\n    done\n\n    exit $exit_status\n}\n\nif test uninstall = \"$opt_mode\" || test clean = \"$opt_mode\"; then\n  func_mode_uninstall ${1+\"$@\"}\nfi\n\ntest -z \"$opt_mode\" && {\n  help=$generic_help\n  func_fatal_help \"you must specify a MODE\"\n}\n\ntest -z \"$exec_cmd\" && \\\n  func_fatal_help \"invalid operation mode '$opt_mode'\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec \"$exec_cmd\"\n  exit $EXIT_FAILURE\nfi\n\nexit $exit_status\n\n\n# The TAGs below are defined such that we never get into a situation\n# where we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/m4/libtool.m4": "# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n#\n#   Copyright (C) 1996-2001, 2003-2015 Free Software Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\nm4_define([_LT_COPYING], [dnl\n# Copyright (C) 2014 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program or library that is built\n# using GNU Libtool, you may include this file under the  same\n# distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n])\n\n# serial 58 LT_INIT\n\n\n# LT_PREREQ(VERSION)\n# ------------------\n# Complain and exit if this libtool version is less that VERSION.\nm4_defun([LT_PREREQ],\n[m4_if(m4_version_compare(m4_defn([LT_PACKAGE_VERSION]), [$1]), -1,\n       [m4_default([$3],\n\t\t   [m4_fatal([Libtool version $1 or higher is required],\n\t\t             63)])],\n       [$2])])\n\n\n# _LT_CHECK_BUILDDIR\n# ------------------\n# Complain if the absolute build directory name contains unusual characters\nm4_defun([_LT_CHECK_BUILDDIR],\n[case `pwd` in\n  *\\ * | *\\\t*)\n    AC_MSG_WARN([Libtool does not cope well with whitespace in `pwd`]) ;;\nesac\n])\n\n\n# LT_INIT([OPTIONS])\n# ------------------\nAC_DEFUN([LT_INIT],\n[AC_PREREQ([2.62])dnl We use AC_PATH_PROGS_FEATURE_CHECK\nAC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\nAC_BEFORE([$0], [LT_LANG])dnl\nAC_BEFORE([$0], [LT_OUTPUT])dnl\nAC_BEFORE([$0], [LTDL_INIT])dnl\nm4_require([_LT_CHECK_BUILDDIR])dnl\n\ndnl Autoconf doesn't catch unexpanded LT_ macros by default:\nm4_pattern_forbid([^_?LT_[A-Z_]+$])dnl\nm4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl\ndnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4\ndnl unless we require an AC_DEFUNed macro:\nAC_REQUIRE([LTOPTIONS_VERSION])dnl\nAC_REQUIRE([LTSUGAR_VERSION])dnl\nAC_REQUIRE([LTVERSION_VERSION])dnl\nAC_REQUIRE([LTOBSOLETE_VERSION])dnl\nm4_require([_LT_PROG_LTMAIN])dnl\n\n_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])\n\ndnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=$ltmain\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n_LT_SETUP\n\n# Only expand once:\nm4_define([LT_INIT])\n])# LT_INIT\n\n# Old names:\nAU_ALIAS([AC_PROG_LIBTOOL], [LT_INIT])\nAU_ALIAS([AM_PROG_LIBTOOL], [LT_INIT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PROG_LIBTOOL], [])\ndnl AC_DEFUN([AM_PROG_LIBTOOL], [])\n\n\n# _LT_PREPARE_CC_BASENAME\n# -----------------------\nm4_defun([_LT_PREPARE_CC_BASENAME], [\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nfunc_cc_basename ()\n{\n    for cc_temp in @S|@*\"\"; do\n      case $cc_temp in\n        compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n        distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n        \\-*) ;;\n        *) break;;\n      esac\n    done\n    func_cc_basename_result=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n}\n])# _LT_PREPARE_CC_BASENAME\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# It would be clearer to call AC_REQUIREs from _LT_PREPARE_CC_BASENAME,\n# but that macro is also expanded into generated libtool script, which\n# arranges for $SED and $ECHO to be set by different means.\nm4_defun([_LT_CC_BASENAME],\n[m4_require([_LT_PREPARE_CC_BASENAME])dnl\nAC_REQUIRE([_LT_DECL_SED])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\nfunc_cc_basename $1\ncc_basename=$func_cc_basename_result\n])\n\n\n# _LT_FILEUTILS_DEFAULTS\n# ----------------------\n# It is okay to use these file commands and assume they have been set\n# sensibly after 'm4_require([_LT_FILEUTILS_DEFAULTS])'.\nm4_defun([_LT_FILEUTILS_DEFAULTS],\n[: ${CP=\"cp -f\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n])# _LT_FILEUTILS_DEFAULTS\n\n\n# _LT_SETUP\n# ---------\nm4_defun([_LT_SETUP],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([_LT_PREPARE_SED_QUOTE_VARS])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\n\n_LT_DECL([], [PATH_SEPARATOR], [1], [The PATH separator for the build system])dnl\ndnl\n_LT_DECL([], [host_alias], [0], [The host system])dnl\n_LT_DECL([], [host], [0])dnl\n_LT_DECL([], [host_os], [0])dnl\ndnl\n_LT_DECL([], [build_alias], [0], [The build system])dnl\n_LT_DECL([], [build], [0])dnl\n_LT_DECL([], [build_os], [0])dnl\ndnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\ndnl\nAC_REQUIRE([AC_PROG_LN_S])dnl\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\n_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl\ndnl\nAC_REQUIRE([LT_CMD_MAX_LEN])dnl\n_LT_DECL([objext], [ac_objext], [0], [Object file suffix (normally \"o\")])dnl\n_LT_DECL([], [exeext], [0], [Executable file suffix (normally \"\")])dnl\ndnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PATH_CONVERSION_FUNCTIONS])dnl\nm4_require([_LT_CMD_RELOAD])dnl\nm4_require([_LT_CHECK_MAGIC_METHOD])dnl\nm4_require([_LT_CHECK_SHAREDLIB_FROM_LINKLIB])dnl\nm4_require([_LT_CMD_OLD_ARCHIVE])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_WITH_SYSROOT])dnl\nm4_require([_LT_CMD_TRUNCATE])dnl\n\n_LT_CONFIG_LIBTOOL_INIT([\n# See if we are running on zsh, and set the options that allow our\n# commands through without removal of \\ escapes INIT.\nif test -n \"\\${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n])\nif test -n \"${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n\n_LT_CHECK_OBJDIR\n\nm4_require([_LT_TAG_COMPILER])dnl\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test set != \"${COLLECT_NAMES+set}\"; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Global variables:\nofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a '.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\n\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n\nold_CC=$CC\nold_CFLAGS=$CFLAGS\n\n# Set sane defaults for various variables\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$LD\" && LD=ld\ntest -z \"$ac_objext\" && ac_objext=o\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    _LT_PATH_MAGIC\n  fi\n  ;;\nesac\n\n# Use C for the default configuration in the libtool script\nLT_SUPPORTED_TAG([CC])\n_LT_LANG_C_CONFIG\n_LT_LANG_DEFAULT_CONFIG\n_LT_CONFIG_COMMANDS\n])# _LT_SETUP\n\n\n# _LT_PREPARE_SED_QUOTE_VARS\n# --------------------------\n# Define a few sed substitution that help us do robust quoting.\nm4_defun([_LT_PREPARE_SED_QUOTE_VARS],\n[# Backslashify metacharacters that are still active within\n# double-quoted strings.\nsed_quote_subst='s/\\([[\"`$\\\\]]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([[\"`\\\\]]\\)/\\\\\\1/g'\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to delay expansion of an escaped single quote.\ndelay_single_quote_subst='s/'\\''/'\\'\\\\\\\\\\\\\\'\\''/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n])\n\n# _LT_PROG_LTMAIN\n# ---------------\n# Note that this code is called both from 'configure', and 'config.status'\n# now that we use AC_CONFIG_COMMANDS to generate libtool.  Notably,\n# 'config.status' has no value for ac_aux_dir unless we are using Automake,\n# so we pass a copy along to make sure it has a sensible value anyway.\nm4_defun([_LT_PROG_LTMAIN],\n[m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([ltmain.sh])])dnl\n_LT_CONFIG_LIBTOOL_INIT([ac_aux_dir='$ac_aux_dir'])\nltmain=$ac_aux_dir/ltmain.sh\n])# _LT_PROG_LTMAIN\n\n\n## ------------------------------------- ##\n## Accumulate code for creating libtool. ##\n## ------------------------------------- ##\n\n# So that we can recreate a full libtool script including additional\n# tags, we accumulate the chunks of code to send to AC_CONFIG_COMMANDS\n# in macros and then make a single call at the end using the 'libtool'\n# label.\n\n\n# _LT_CONFIG_LIBTOOL_INIT([INIT-COMMANDS])\n# ----------------------------------------\n# Register INIT-COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL_INIT],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_INIT],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_INIT])\n\n\n# _LT_CONFIG_LIBTOOL([COMMANDS])\n# ------------------------------\n# Register COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_COMMANDS],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])\n\n\n# _LT_CONFIG_SAVE_COMMANDS([COMMANDS], [INIT_COMMANDS])\n# -----------------------------------------------------\nm4_defun([_LT_CONFIG_SAVE_COMMANDS],\n[_LT_CONFIG_LIBTOOL([$1])\n_LT_CONFIG_LIBTOOL_INIT([$2])\n])\n\n\n# _LT_FORMAT_COMMENT([COMMENT])\n# -----------------------------\n# Add leading comment marks to the start of each line, and a trailing\n# full-stop to the whole comment if one is not present already.\nm4_define([_LT_FORMAT_COMMENT],\n[m4_ifval([$1], [\nm4_bpatsubst([m4_bpatsubst([$1], [^ *], [# ])],\n              [['`$\\]], [\\\\\\&])]m4_bmatch([$1], [[!?.]$], [], [.])\n)])\n\n\n\n## ------------------------ ##\n## FIXME: Eliminate VARNAME ##\n## ------------------------ ##\n\n\n# _LT_DECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION], [IS-TAGGED?])\n# -------------------------------------------------------------------\n# CONFIGNAME is the name given to the value in the libtool script.\n# VARNAME is the (base) name used in the configure script.\n# VALUE may be 0, 1 or 2 for a computed quote escaped value based on\n# VARNAME.  Any other value will be used directly.\nm4_define([_LT_DECL],\n[lt_if_append_uniq([lt_decl_varnames], [$2], [, ],\n    [lt_dict_add_subkey([lt_decl_dict], [$2], [libtool_name],\n\t[m4_ifval([$1], [$1], [$2])])\n    lt_dict_add_subkey([lt_decl_dict], [$2], [value], [$3])\n    m4_ifval([$4],\n\t[lt_dict_add_subkey([lt_decl_dict], [$2], [description], [$4])])\n    lt_dict_add_subkey([lt_decl_dict], [$2],\n\t[tagged?], [m4_ifval([$5], [yes], [no])])])\n])\n\n\n# _LT_TAGDECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION])\n# --------------------------------------------------------\nm4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])\n\n\n# lt_decl_tag_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_tag_varnames],\n[_lt_decl_filter([tagged?], [yes], $@)])\n\n\n# _lt_decl_filter(SUBKEY, VALUE, [SEPARATOR], [VARNAME1..])\n# ---------------------------------------------------------\nm4_define([_lt_decl_filter],\n[m4_case([$#],\n  [0], [m4_fatal([$0: too few arguments: $#])],\n  [1], [m4_fatal([$0: too few arguments: $#: $1])],\n  [2], [lt_dict_filter([lt_decl_dict], [$1], [$2], [], lt_decl_varnames)],\n  [3], [lt_dict_filter([lt_decl_dict], [$1], [$2], [$3], lt_decl_varnames)],\n  [lt_dict_filter([lt_decl_dict], $@)])[]dnl\n])\n\n\n# lt_decl_quote_varnames([SEPARATOR], [VARNAME1...])\n# --------------------------------------------------\nm4_define([lt_decl_quote_varnames],\n[_lt_decl_filter([value], [1], $@)])\n\n\n# lt_decl_dquote_varnames([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_dquote_varnames],\n[_lt_decl_filter([value], [2], $@)])\n\n\n# lt_decl_varnames_tagged([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_varnames_tagged],\n[m4_assert([$# <= 2])dnl\n_$0(m4_quote(m4_default([$1], [[, ]])),\n    m4_ifval([$2], [[$2]], [m4_dquote(lt_decl_tag_varnames)]),\n    m4_split(m4_normalize(m4_quote(_LT_TAGS)), [ ]))])\nm4_define([_lt_decl_varnames_tagged],\n[m4_ifval([$3], [lt_combine([$1], [$2], [_], $3)])])\n\n\n# lt_decl_all_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_all_varnames],\n[_$0(m4_quote(m4_default([$1], [[, ]])),\n     m4_if([$2], [],\n\t   m4_quote(lt_decl_varnames),\n\tm4_quote(m4_shift($@))))[]dnl\n])\nm4_define([_lt_decl_all_varnames],\n[lt_join($@, lt_decl_varnames_tagged([$1],\n\t\t\tlt_decl_tag_varnames([[, ]], m4_shift($@))))dnl\n])\n\n\n# _LT_CONFIG_STATUS_DECLARE([VARNAME])\n# ------------------------------------\n# Quote a variable value, and forward it to 'config.status' so that its\n# declaration there will have the same value as in 'configure'.  VARNAME\n# must have a single quote delimited value for this to work.\nm4_define([_LT_CONFIG_STATUS_DECLARE],\n[$1='`$ECHO \"$][$1\" | $SED \"$delay_single_quote_subst\"`'])\n\n\n# _LT_CONFIG_STATUS_DECLARATIONS\n# ------------------------------\n# We delimit libtool config variables with single quotes, so when\n# we write them to config.status, we have to be sure to quote all\n# embedded single quotes properly.  In configure, this macro expands\n# each variable declared with _LT_DECL (and _LT_TAGDECL) into:\n#\n#    <var>='`$ECHO \"$<var>\" | $SED \"$delay_single_quote_subst\"`'\nm4_defun([_LT_CONFIG_STATUS_DECLARATIONS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_all_varnames),\n    [m4_n([_LT_CONFIG_STATUS_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAGS\n# ----------------\n# Output comment and list of tags supported by the script\nm4_defun([_LT_LIBTOOL_TAGS],\n[_LT_FORMAT_COMMENT([The names of the tagged configurations supported by this script])dnl\navailable_tags='_LT_TAGS'dnl\n])\n\n\n# _LT_LIBTOOL_DECLARE(VARNAME, [TAG])\n# -----------------------------------\n# Extract the dictionary values for VARNAME (optionally with TAG) and\n# expand to a commented shell variable setting:\n#\n#    # Some comment about what VAR is for.\n#    visible_name=$lt_internal_name\nm4_define([_LT_LIBTOOL_DECLARE],\n[_LT_FORMAT_COMMENT(m4_quote(lt_dict_fetch([lt_decl_dict], [$1],\n\t\t\t\t\t   [description])))[]dnl\nm4_pushdef([_libtool_name],\n    m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [libtool_name])))[]dnl\nm4_case(m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [value])),\n    [0], [_libtool_name=[$]$1],\n    [1], [_libtool_name=$lt_[]$1],\n    [2], [_libtool_name=$lt_[]$1],\n    [_libtool_name=lt_dict_fetch([lt_decl_dict], [$1], [value])])[]dnl\nm4_ifval([$2], [_$2])[]m4_popdef([_libtool_name])[]dnl\n])\n\n\n# _LT_LIBTOOL_CONFIG_VARS\n# -----------------------\n# Produce commented declarations of non-tagged libtool config variables\n# suitable for insertion in the LIBTOOL CONFIG section of the 'libtool'\n# script.  Tagged libtool config variables (even for the LIBTOOL CONFIG\n# section) are produced by _LT_LIBTOOL_TAG_VARS.\nm4_defun([_LT_LIBTOOL_CONFIG_VARS],\n[m4_foreach([_lt_var],\n    m4_quote(_lt_decl_filter([tagged?], [no], [], lt_decl_varnames)),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAG_VARS(TAG)\n# -------------------------\nm4_define([_LT_LIBTOOL_TAG_VARS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_tag_varnames),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var, [$1])])])])\n\n\n# _LT_TAGVAR(VARNAME, [TAGNAME])\n# ------------------------------\nm4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])\n\n\n# _LT_CONFIG_COMMANDS\n# -------------------\n# Send accumulated output to $CONFIG_STATUS.  Thanks to the lists of\n# variables for single and double quote escaping we saved from calls\n# to _LT_DECL, we can put quote escaped variables declarations\n# into 'config.status', and then the shell code to quote escape them in\n# for loops in 'config.status'.  Finally, any additional code accumulated\n# from calls to _LT_CONFIG_LIBTOOL_INIT is expanded.\nm4_defun([_LT_CONFIG_COMMANDS],\n[AC_PROVIDE_IFELSE([LT_OUTPUT],\n\tdnl If the libtool generation code has been placed in $CONFIG_LT,\n\tdnl instead of duplicating it all over again into config.status,\n\tdnl then we will have config.status run $CONFIG_LT later, so it\n\tdnl needs to know what name is stored there:\n        [AC_CONFIG_COMMANDS([libtool],\n            [$SHELL $CONFIG_LT || AS_EXIT(1)], [CONFIG_LT='$CONFIG_LT'])],\n    dnl If the libtool generation code is destined for config.status,\n    dnl expand the accumulated commands and init code now:\n    [AC_CONFIG_COMMANDS([libtool],\n        [_LT_OUTPUT_LIBTOOL_COMMANDS], [_LT_OUTPUT_LIBTOOL_COMMANDS_INIT])])\n])#_LT_CONFIG_COMMANDS\n\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],\n[\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nsed_quote_subst='$sed_quote_subst'\ndouble_quote_subst='$double_quote_subst'\ndelay_variable_subst='$delay_variable_subst'\n_LT_CONFIG_STATUS_DECLARATIONS\nLTCC='$LTCC'\nLTCFLAGS='$LTCFLAGS'\ncompiler='$compiler_DEFAULT'\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$[]1\n_LTECHO_EOF'\n}\n\n# Quote evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_quote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED \\\\\"\\\\\\$sed_quote_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n# Double-quote double-evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_dquote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED -e \\\\\"\\\\\\$double_quote_subst\\\\\" -e \\\\\"\\\\\\$sed_quote_subst\\\\\" -e \\\\\"\\\\\\$delay_variable_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n_LT_OUTPUT_LIBTOOL_INIT\n])\n\n# _LT_GENERATED_FILE_INIT(FILE, [COMMENT])\n# ------------------------------------\n# Generate a child script FILE with all initialization necessary to\n# reuse the environment learned by the parent script, and make the\n# file executable.  If COMMENT is supplied, it is inserted after the\n# '#!' sequence but before initialization text begins.  After this\n# macro, additional text can be appended to FILE to form the body of\n# the child script.  The macro ends with non-zero status if the\n# file could not be fully written (such as if the disk is full).\nm4_ifdef([AS_INIT_GENERATED],\n[m4_defun([_LT_GENERATED_FILE_INIT],[AS_INIT_GENERATED($@)])],\n[m4_defun([_LT_GENERATED_FILE_INIT],\n[m4_require([AS_PREPARE])]dnl\n[m4_pushdef([AS_MESSAGE_LOG_FD])]dnl\n[lt_write_fail=0\ncat >$1 <<_ASEOF || lt_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n$2\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$1 <<\\_ASEOF || lt_write_fail=1\nAS_SHELL_SANITIZE\n_AS_PREPARE\nexec AS_MESSAGE_FD>&1\n_ASEOF\ntest 0 = \"$lt_write_fail\" && chmod +x $1[]dnl\nm4_popdef([AS_MESSAGE_LOG_FD])])])# _LT_GENERATED_FILE_INIT\n\n# LT_OUTPUT\n# ---------\n# This macro allows early generation of the libtool script (before\n# AC_OUTPUT is called), incase it is used in configure for compilation\n# tests.\nAC_DEFUN([LT_OUTPUT],\n[: ${CONFIG_LT=./config.lt}\nAC_MSG_NOTICE([creating $CONFIG_LT])\n_LT_GENERATED_FILE_INIT([\"$CONFIG_LT\"],\n[# Run this file to recreate a libtool stub with the current configuration.])\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nlt_cl_silent=false\nexec AS_MESSAGE_LOG_FD>>config.log\n{\n  echo\n  AS_BOX([Running $as_me.])\n} >&AS_MESSAGE_LOG_FD\n\nlt_cl_help=\"\\\n'$as_me' creates a local libtool stub from the current configuration,\nfor use in further configure time tests before the real libtool is\ngenerated.\n\nUsage: $[0] [[OPTIONS]]\n\n  -h, --help      print this help, then exit\n  -V, --version   print version number, then exit\n  -q, --quiet     do not print progress messages\n  -d, --debug     don't remove temporary files\n\nReport bugs to <bug-libtool@gnu.org>.\"\n\nlt_cl_version=\"\\\nm4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl\nm4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])\nconfigured by $[0], generated by m4_PACKAGE_STRING.\n\nCopyright (C) 2011 Free Software Foundation, Inc.\nThis config.lt script is free software; the Free Software Foundation\ngives unlimited permision to copy, distribute and modify it.\"\n\nwhile test 0 != $[#]\ndo\n  case $[1] in\n    --version | --v* | -V )\n      echo \"$lt_cl_version\"; exit 0 ;;\n    --help | --h* | -h )\n      echo \"$lt_cl_help\"; exit 0 ;;\n    --debug | --d* | -d )\n      debug=: ;;\n    --quiet | --q* | --silent | --s* | -q )\n      lt_cl_silent=: ;;\n\n    -*) AC_MSG_ERROR([unrecognized option: $[1]\nTry '$[0] --help' for more information.]) ;;\n\n    *) AC_MSG_ERROR([unrecognized argument: $[1]\nTry '$[0] --help' for more information.]) ;;\n  esac\n  shift\ndone\n\nif $lt_cl_silent; then\n  exec AS_MESSAGE_FD>/dev/null\nfi\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<_LTEOF\n_LT_OUTPUT_LIBTOOL_COMMANDS_INIT\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nAC_MSG_NOTICE([creating $ofile])\n_LT_OUTPUT_LIBTOOL_COMMANDS\nAS_EXIT(0)\n_LTEOF\nchmod +x \"$CONFIG_LT\"\n\n# configure is writing to config.log, but config.lt does its own redirection,\n# appending to config.log, which fails on DOS, as config.log is still kept\n# open by configure.  Here we exec the FD to /dev/null, effectively closing\n# config.log, so it can be properly (re)opened and appended to by config.lt.\nlt_cl_success=:\ntest yes = \"$silent\" &&\n  lt_config_lt_args=\"$lt_config_lt_args --quiet\"\nexec AS_MESSAGE_LOG_FD>/dev/null\n$SHELL \"$CONFIG_LT\" $lt_config_lt_args || lt_cl_success=false\nexec AS_MESSAGE_LOG_FD>>config.log\n$lt_cl_success || AS_EXIT(1)\n])# LT_OUTPUT\n\n\n# _LT_CONFIG(TAG)\n# ---------------\n# If TAG is the built-in tag, create an initial libtool script with a\n# default configuration from the untagged config vars.  Otherwise add code\n# to config.status for appending the configuration named by TAG from the\n# matching tagged config vars.\nm4_defun([_LT_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_CONFIG_SAVE_COMMANDS([\n  m4_define([_LT_TAG], m4_if([$1], [], [C], [$1]))dnl\n  m4_if(_LT_TAG, [C], [\n    # See if we are running on zsh, and set the options that allow our\n    # commands through without removal of \\ escapes.\n    if test -n \"${ZSH_VERSION+set}\"; then\n      setopt NO_GLOB_SUBST\n    fi\n\n    cfgfile=${ofile}T\n    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n    $RM \"$cfgfile\"\n\n    cat <<_LT_EOF >> \"$cfgfile\"\n#! $SHELL\n# Generated automatically by $as_me ($PACKAGE) $VERSION\n# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit, 1996\n\n_LT_COPYING\n_LT_LIBTOOL_TAGS\n\n# Configured defaults for sys_lib_dlsearch_path munging.\n: \\${LT_SYS_LIBRARY_PATH=\"$configure_time_lt_sys_library_path\"}\n\n# ### BEGIN LIBTOOL CONFIG\n_LT_LIBTOOL_CONFIG_VARS\n_LT_LIBTOOL_TAG_VARS\n# ### END LIBTOOL CONFIG\n\n_LT_EOF\n\n    cat <<'_LT_EOF' >> \"$cfgfile\"\n\n# ### BEGIN FUNCTIONS SHARED WITH CONFIGURE\n\n_LT_PREPARE_MUNGE_PATH_LIST\n_LT_PREPARE_CC_BASENAME\n\n# ### END FUNCTIONS SHARED WITH CONFIGURE\n\n_LT_EOF\n\n  case $host_os in\n  aix3*)\n    cat <<\\_LT_EOF >> \"$cfgfile\"\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test set != \"${COLLECT_NAMES+set}\"; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\n_LT_EOF\n    ;;\n  esac\n\n  _LT_PROG_LTMAIN\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" \\\n     || (rm -f \"$cfgfile\"; exit 1)\n\n   mv -f \"$cfgfile\" \"$ofile\" ||\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n],\n[cat <<_LT_EOF >> \"$ofile\"\n\ndnl Unfortunately we have to use $1 here, since _LT_TAG is not expanded\ndnl in a comment (ie after a #).\n# ### BEGIN LIBTOOL TAG CONFIG: $1\n_LT_LIBTOOL_TAG_VARS(_LT_TAG)\n# ### END LIBTOOL TAG CONFIG: $1\n_LT_EOF\n])dnl /m4_if\n],\n[m4_if([$1], [], [\n    PACKAGE='$PACKAGE'\n    VERSION='$VERSION'\n    RM='$RM'\n    ofile='$ofile'], [])\n])dnl /_LT_CONFIG_SAVE_COMMANDS\n])# _LT_CONFIG\n\n\n# LT_SUPPORTED_TAG(TAG)\n# ---------------------\n# Trace this macro to discover what tags are supported by the libtool\n# --tag option, using:\n#    autoconf --trace 'LT_SUPPORTED_TAG:$1'\nAC_DEFUN([LT_SUPPORTED_TAG], [])\n\n\n# C support is built-in for now\nm4_define([_LT_LANG_C_enabled], [])\nm4_define([_LT_TAGS], [])\n\n\n# LT_LANG(LANG)\n# -------------\n# Enable libtool support for the given language if not already enabled.\nAC_DEFUN([LT_LANG],\n[AC_BEFORE([$0], [LT_OUTPUT])dnl\nm4_case([$1],\n  [C],\t\t\t[_LT_LANG(C)],\n  [C++],\t\t[_LT_LANG(CXX)],\n  [Go],\t\t\t[_LT_LANG(GO)],\n  [Java],\t\t[_LT_LANG(GCJ)],\n  [Fortran 77],\t\t[_LT_LANG(F77)],\n  [Fortran],\t\t[_LT_LANG(FC)],\n  [Windows Resource],\t[_LT_LANG(RC)],\n  [m4_ifdef([_LT_LANG_]$1[_CONFIG],\n    [_LT_LANG($1)],\n    [m4_fatal([$0: unsupported language: \"$1\"])])])dnl\n])# LT_LANG\n\n\n# _LT_LANG(LANGNAME)\n# ------------------\nm4_defun([_LT_LANG],\n[m4_ifdef([_LT_LANG_]$1[_enabled], [],\n  [LT_SUPPORTED_TAG([$1])dnl\n  m4_append([_LT_TAGS], [$1 ])dnl\n  m4_define([_LT_LANG_]$1[_enabled], [])dnl\n  _LT_LANG_$1_CONFIG($1)])dnl\n])# _LT_LANG\n\n\nm4_ifndef([AC_PROG_GO], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_GO.  When it is available in    #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\nm4_defun([AC_PROG_GO],\n[AC_LANG_PUSH(Go)dnl\nAC_ARG_VAR([GOC],     [Go compiler command])dnl\nAC_ARG_VAR([GOFLAGS], [Go compiler flags])dnl\n_AC_ARG_VAR_LDFLAGS()dnl\nAC_CHECK_TOOL(GOC, gccgo)\nif test -z \"$GOC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    AC_CHECK_PROG(GOC, [${ac_tool_prefix}gccgo], [${ac_tool_prefix}gccgo])\n  fi\nfi\nif test -z \"$GOC\"; then\n  AC_CHECK_PROG(GOC, gccgo, gccgo, false)\nfi\n])#m4_defun\n])#m4_ifndef\n\n\n# _LT_LANG_DEFAULT_CONFIG\n# -----------------------\nm4_defun([_LT_LANG_DEFAULT_CONFIG],\n[AC_PROVIDE_IFELSE([AC_PROG_CXX],\n  [LT_LANG(CXX)],\n  [m4_define([AC_PROG_CXX], defn([AC_PROG_CXX])[LT_LANG(CXX)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_F77],\n  [LT_LANG(F77)],\n  [m4_define([AC_PROG_F77], defn([AC_PROG_F77])[LT_LANG(F77)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_FC],\n  [LT_LANG(FC)],\n  [m4_define([AC_PROG_FC], defn([AC_PROG_FC])[LT_LANG(FC)])])\n\ndnl The call to [A][M_PROG_GCJ] is quoted like that to stop aclocal\ndnl pulling things in needlessly.\nAC_PROVIDE_IFELSE([AC_PROG_GCJ],\n  [LT_LANG(GCJ)],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n    [LT_LANG(GCJ)],\n    [AC_PROVIDE_IFELSE([LT_PROG_GCJ],\n      [LT_LANG(GCJ)],\n      [m4_ifdef([AC_PROG_GCJ],\n\t[m4_define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([A][M_PROG_GCJ],\n\t[m4_define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([LT_PROG_GCJ],\n\t[m4_define([LT_PROG_GCJ], defn([LT_PROG_GCJ])[LT_LANG(GCJ)])])])])])\n\nAC_PROVIDE_IFELSE([AC_PROG_GO],\n  [LT_LANG(GO)],\n  [m4_define([AC_PROG_GO], defn([AC_PROG_GO])[LT_LANG(GO)])])\n\nAC_PROVIDE_IFELSE([LT_PROG_RC],\n  [LT_LANG(RC)],\n  [m4_define([LT_PROG_RC], defn([LT_PROG_RC])[LT_LANG(RC)])])\n])# _LT_LANG_DEFAULT_CONFIG\n\n# Obsolete macros:\nAU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])\nAU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])\nAU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])\nAU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])\nAU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_CXX], [])\ndnl AC_DEFUN([AC_LIBTOOL_F77], [])\ndnl AC_DEFUN([AC_LIBTOOL_FC], [])\ndnl AC_DEFUN([AC_LIBTOOL_GCJ], [])\ndnl AC_DEFUN([AC_LIBTOOL_RC], [])\n\n\n# _LT_TAG_COMPILER\n# ----------------\nm4_defun([_LT_TAG_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n_LT_DECL([LTCC], [CC], [1], [A C compiler])dnl\n_LT_DECL([LTCFLAGS], [CFLAGS], [1], [LTCC compiler flags])dnl\n_LT_TAGDECL([CC], [compiler], [1], [A language specific compiler])dnl\n_LT_TAGDECL([with_gcc], [GCC], [0], [Is the compiler the GNU compiler?])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_TAG_COMPILER\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nm4_defun([_LT_COMPILER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nm4_defun([_LT_LINKER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n])# _LT_LINKER_BOILERPLATE\n\n# _LT_REQUIRED_DARWIN_CHECKS\n# -------------------------\nm4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[\n  case $host_os in\n    rhapsody* | darwin*)\n    AC_CHECK_TOOL([DSYMUTIL], [dsymutil], [:])\n    AC_CHECK_TOOL([NMEDIT], [nmedit], [:])\n    AC_CHECK_TOOL([LIPO], [lipo], [:])\n    AC_CHECK_TOOL([OTOOL], [otool], [:])\n    AC_CHECK_TOOL([OTOOL64], [otool64], [:])\n    _LT_DECL([], [DSYMUTIL], [1],\n      [Tool to manipulate archived DWARF debug symbol files on Mac OS X])\n    _LT_DECL([], [NMEDIT], [1],\n      [Tool to change global to local symbols on Mac OS X])\n    _LT_DECL([], [LIPO], [1],\n      [Tool to manipulate fat objects and archives on Mac OS X])\n    _LT_DECL([], [OTOOL], [1],\n      [ldd/readelf like tool for Mach-O binaries on Mac OS X])\n    _LT_DECL([], [OTOOL64], [1],\n      [ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4])\n\n    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],\n      [lt_cv_apple_cc_single_mod=no\n      if test -z \"$LT_MULTI_MODULE\"; then\n\t# By default we will add the -single_module flag. You can override\n\t# by either setting the environment variable LT_MULTI_MODULE\n\t# non-empty at configure time, or by adding -multi_module to the\n\t# link flags.\n\trm -rf libconftest.dylib*\n\techo \"int foo(void){return 1;}\" > conftest.c\n\techo \"$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n-dynamiclib -Wl,-single_module conftest.c\" >&AS_MESSAGE_LOG_FD\n\t$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n\t  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err\n        _lt_result=$?\n\t# If there is a non-empty error log, and \"single_module\"\n\t# appears in it, assume the flag caused a linker warning\n        if test -s conftest.err && $GREP single_module conftest.err; then\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\t# Otherwise, if the output was created with a 0 exit code from\n\t# the compiler, it worked.\n\telif test -f libconftest.dylib && test 0 = \"$_lt_result\"; then\n\t  lt_cv_apple_cc_single_mod=yes\n\telse\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\tfi\n\trm -rf libconftest.dylib*\n\trm -f conftest.*\n      fi])\n\n    AC_CACHE_CHECK([for -exported_symbols_list linker flag],\n      [lt_cv_ld_exported_symbols_list],\n      [lt_cv_ld_exported_symbols_list=no\n      save_LDFLAGS=$LDFLAGS\n      echo \"_main\" > conftest.sym\n      LDFLAGS=\"$LDFLAGS -Wl,-exported_symbols_list,conftest.sym\"\n      AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n\t[lt_cv_ld_exported_symbols_list=yes],\n\t[lt_cv_ld_exported_symbols_list=no])\n\tLDFLAGS=$save_LDFLAGS\n    ])\n\n    AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],\n      [lt_cv_ld_force_load=no\n      cat > conftest.c << _LT_EOF\nint forced_loaded() { return 2;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS -c -o conftest.o conftest.c\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&AS_MESSAGE_LOG_FD\n      echo \"$AR cru libconftest.a conftest.o\" >&AS_MESSAGE_LOG_FD\n      $AR cru libconftest.a conftest.o 2>&AS_MESSAGE_LOG_FD\n      echo \"$RANLIB libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $RANLIB libconftest.a 2>&AS_MESSAGE_LOG_FD\n      cat > conftest.c << _LT_EOF\nint main() { return 0;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err\n      _lt_result=$?\n      if test -s conftest.err && $GREP force_load conftest.err; then\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      elif test -f conftest && test 0 = \"$_lt_result\" && $GREP forced_load conftest >/dev/null 2>&1; then\n\tlt_cv_ld_force_load=yes\n      else\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      fi\n        rm -f conftest.err libconftest.a conftest conftest.c\n        rm -rf conftest.dSYM\n    ])\n    case $host_os in\n    rhapsody* | darwin1.[[012]])\n      _lt_dar_allow_undefined='$wl-undefined ${wl}suppress' ;;\n    darwin1.*)\n      _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n    darwin*) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don't you love it?\n      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n\t10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n\t10.[[012]][[,.]]*)\n\t  _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n\t10.*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n      esac\n    ;;\n  esac\n    if test yes = \"$lt_cv_apple_cc_single_mod\"; then\n      _lt_dar_single_mod='$single_module'\n    fi\n    if test yes = \"$lt_cv_ld_exported_symbols_list\"; then\n      _lt_dar_export_syms=' $wl-exported_symbols_list,$output_objdir/$libname-symbols.expsym'\n    else\n      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/$libname-symbols.expsym $lib'\n    fi\n    if test : != \"$DSYMUTIL\" && test no = \"$lt_cv_ld_force_load\"; then\n      _lt_dsymutil='~$DSYMUTIL $lib || :'\n    else\n      _lt_dsymutil=\n    fi\n    ;;\n  esac\n])\n\n\n# _LT_DARWIN_LINKER_FEATURES([TAG])\n# ---------------------------------\n# Checks for linker and compiler features on darwin\nm4_defun([_LT_DARWIN_LINKER_FEATURES],\n[\n  m4_require([_LT_REQUIRED_DARWIN_CHECKS])\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_automatic, $1)=yes\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  if test yes = \"$lt_cv_ld_force_load\"; then\n    _LT_TAGVAR(whole_archive_flag_spec, $1)='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience $wl-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n    m4_case([$1], [F77], [_LT_TAGVAR(compiler_needs_object, $1)=yes],\n                  [FC],  [_LT_TAGVAR(compiler_needs_object, $1)=yes])\n  else\n    _LT_TAGVAR(whole_archive_flag_spec, $1)=''\n  fi\n  _LT_TAGVAR(link_all_deplibs, $1)=yes\n  _LT_TAGVAR(allow_undefined_flag, $1)=$_lt_dar_allow_undefined\n  case $cc_basename in\n     ifort*|nagfor*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test yes = \"$_lt_dar_can_shared\"; then\n    output_verbose_link_cmd=func_echo_all\n    _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dsymutil\"\n    _LT_TAGVAR(module_cmds, $1)=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dsymutil\"\n    _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dar_export_syms$_lt_dsymutil\"\n    _LT_TAGVAR(module_expsym_cmds, $1)=\"sed -e 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dar_export_syms$_lt_dsymutil\"\n    m4_if([$1], [CXX],\n[   if test yes != \"$lt_cv_apple_cc_single_mod\"; then\n      _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dsymutil\"\n      _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dar_export_syms$_lt_dsymutil\"\n    fi\n],[])\n  else\n  _LT_TAGVAR(ld_shlibs, $1)=no\n  fi\n])\n\n# _LT_SYS_MODULE_PATH_AIX([TAGNAME])\n# ----------------------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\n# Store the results from the different compilers for each TAGNAME.\n# Allow to override them for all tags through lt_cv_aix_libpath.\nm4_defun([_LT_SYS_MODULE_PATH_AIX],\n[m4_require([_LT_DECL_SED])dnl\nif test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  AC_CACHE_VAL([_LT_TAGVAR([lt_cv_aix_libpath_], [$1])],\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM],[\n  lt_aix_libpath_sed='[\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }]'\n  _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi],[])\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=/usr/lib:/lib\n  fi\n  ])\n  aix_libpath=$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\nfi\n])# _LT_SYS_MODULE_PATH_AIX\n\n\n# _LT_SHELL_INIT(ARG)\n# -------------------\nm4_define([_LT_SHELL_INIT],\n[m4_divert_text([M4SH-INIT], [$1\n])])# _LT_SHELL_INIT\n\n\n\n# _LT_PROG_ECHO_BACKSLASH\n# -----------------------\n# Find how we can fake an echo command that does not interpret backslash.\n# In particular, with Autoconf 2.60 or later we add some code to the start\n# of the generated configure script that will find a shell with a builtin\n# printf (that we can use as an echo command).\nm4_defun([_LT_PROG_ECHO_BACKSLASH],\n[ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n\nAC_MSG_CHECKING([how to print strings])\n# Test print first, because it will be a builtin if present.\nif test \"X`( print -r -- -n ) 2>/dev/null`\" = X-n && \\\n   test \"X`print -r -- $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='print -r --'\nelif test \"X`printf %s $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='printf %s\\n'\nelse\n  # Use this function as a fallback that always works.\n  func_fallback_echo ()\n  {\n    eval 'cat <<_LTECHO_EOF\n$[]1\n_LTECHO_EOF'\n  }\n  ECHO='func_fallback_echo'\nfi\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\ncase $ECHO in\n  printf*) AC_MSG_RESULT([printf]) ;;\n  print*) AC_MSG_RESULT([print -r]) ;;\n  *) AC_MSG_RESULT([cat]) ;;\nesac\n\nm4_ifdef([_AS_DETECT_SUGGESTED],\n[_AS_DETECT_SUGGESTED([\n  test -n \"${ZSH_VERSION+set}${BASH_VERSION+set}\" || (\n    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n    PATH=/empty FPATH=/empty; export PATH FPATH\n    test \"X`printf %s $ECHO`\" = \"X$ECHO\" \\\n      || test \"X`print -r -- $ECHO`\" = \"X$ECHO\" )])])\n\n_LT_DECL([], [SHELL], [1], [Shell to use when invoking shell scripts])\n_LT_DECL([], [ECHO], [1], [An echo program that protects backslashes])\n])# _LT_PROG_ECHO_BACKSLASH\n\n\n# _LT_WITH_SYSROOT\n# ----------------\nAC_DEFUN([_LT_WITH_SYSROOT],\n[AC_MSG_CHECKING([for sysroot])\nAC_ARG_WITH([sysroot],\n[AS_HELP_STRING([--with-sysroot@<:@=DIR@:>@],\n  [Search for dependent libraries within DIR (or the compiler's sysroot\n   if not specified).])],\n[], [with_sysroot=no])\n\ndnl lt_sysroot will always be passed unquoted.  We quote it here\ndnl in case the user passed a directory name.\nlt_sysroot=\ncase $with_sysroot in #(\n yes)\n   if test yes = \"$GCC\"; then\n     lt_sysroot=`$CC --print-sysroot 2>/dev/null`\n   fi\n   ;; #(\n /*)\n   lt_sysroot=`echo \"$with_sysroot\" | sed -e \"$sed_quote_subst\"`\n   ;; #(\n no|'')\n   ;; #(\n *)\n   AC_MSG_RESULT([$with_sysroot])\n   AC_MSG_ERROR([The sysroot must be an absolute path.])\n   ;;\nesac\n\n AC_MSG_RESULT([${lt_sysroot:-no}])\n_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl\n[dependent libraries, and where our libraries should be installed.])])\n\n# _LT_ENABLE_LOCK\n# ---------------\nm4_defun([_LT_ENABLE_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n  [AS_HELP_STRING([--disable-libtool-lock],\n    [avoid locking (might break parallel builds)])])\ntest no = \"$enable_libtool_lock\" || enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out what ABI is being produced by ac_compile, and set mode\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n      *ELF-32*)\n\tHPUX_IA64_MODE=32\n\t;;\n      *ELF-64*)\n\tHPUX_IA64_MODE=64\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    if test yes = \"$lt_cv_prog_gnu_ld\"; then\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -melf32bsmip\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -melf32bmipn32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -melf64bmip\"\n\t;;\n      esac\n    else\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -32\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -n32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -64\"\n\t  ;;\n      esac\n    fi\n  fi\n  rm -rf conftest*\n  ;;\n\nmips64*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    emul=elf\n    case `/usr/bin/file conftest.$ac_objext` in\n      *32-bit*)\n\temul=\"${emul}32\"\n\t;;\n      *64-bit*)\n\temul=\"${emul}64\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *MSB*)\n\temul=\"${emul}btsmip\"\n\t;;\n      *LSB*)\n\temul=\"${emul}ltsmip\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *N32*)\n\temul=\"${emul}n32\"\n\t;;\n    esac\n    LD=\"${LD-ld} -m $emul\"\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*| \\\ns390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.  Note that the listed cases only cover the\n  # situations where additional linker options are needed (such as when\n  # doing 32-bit compilation for a host where ld defaults to 64-bit, or\n  # vice versa); the common cases where no linker options are needed do\n  # not appear in the list.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n      *32-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    case `/usr/bin/file conftest.o` in\n\t      *x86-64*)\n\t\tLD=\"${LD-ld} -m elf32_x86_64\"\n\t\t;;\n\t      *)\n\t\tLD=\"${LD-ld} -m elf_i386\"\n\t\t;;\n\t    esac\n\t    ;;\n\t  powerpc64le-*linux*)\n\t    LD=\"${LD-ld} -m elf32lppclinux\"\n\t    ;;\n\t  powerpc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32ppclinux\"\n\t    ;;\n\t  s390x-*linux*)\n\t    LD=\"${LD-ld} -m elf_s390\"\n\t    ;;\n\t  sparc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32_sparc\"\n\t    ;;\n\tesac\n\t;;\n      *64-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_x86_64_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_x86_64\"\n\t    ;;\n\t  powerpcle-*linux*)\n\t    LD=\"${LD-ld} -m elf64lppc\"\n\t    ;;\n\t  powerpc-*linux*)\n\t    LD=\"${LD-ld} -m elf64ppc\"\n\t    ;;\n\t  s390*-*linux*|s390*-*tpf*)\n\t    LD=\"${LD-ld} -m elf64_s390\"\n\t    ;;\n\t  sparc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64_sparc\"\n\t    ;;\n\tesac\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=$CFLAGS\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test yes != \"$lt_cv_cc_needs_belf\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=$SAVE_CFLAGS\n  fi\n  ;;\n*-*solaris*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*)\n        case $host in\n        i?86-*-solaris*|x86_64-*-solaris*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        sparc*-*-solaris*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n        esac\n        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n          LD=${LD-ld}_sol2\n        fi\n        ;;\n      *)\n\tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n\t  LD=\"${LD-ld} -64\"\n\tfi\n\t;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\nesac\n\nneed_locks=$enable_libtool_lock\n])# _LT_ENABLE_LOCK\n\n\n# _LT_PROG_AR\n# -----------\nm4_defun([_LT_PROG_AR],\n[AC_CHECK_TOOLS(AR, [ar], false)\n: ${AR=ar}\n: ${AR_FLAGS=cru}\n_LT_DECL([], [AR], [1], [The archiver])\n_LT_DECL([], [AR_FLAGS], [1], [Flags to create an archive])\n\nAC_CACHE_CHECK([for archiver @FILE support], [lt_cv_ar_at_file],\n  [lt_cv_ar_at_file=no\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM],\n     [echo conftest.$ac_objext > conftest.lst\n      lt_ar_try='$AR $AR_FLAGS libconftest.a @conftest.lst >&AS_MESSAGE_LOG_FD'\n      AC_TRY_EVAL([lt_ar_try])\n      if test 0 -eq \"$ac_status\"; then\n\t# Ensure the archiver fails upon bogus file names.\n\trm -f conftest.$ac_objext libconftest.a\n\tAC_TRY_EVAL([lt_ar_try])\n\tif test 0 -ne \"$ac_status\"; then\n          lt_cv_ar_at_file=@\n        fi\n      fi\n      rm -f conftest.* libconftest.a\n     ])\n  ])\n\nif test no = \"$lt_cv_ar_at_file\"; then\n  archiver_list_spec=\nelse\n  archiver_list_spec=$lt_cv_ar_at_file\nfi\n_LT_DECL([], [archiver_list_spec], [1],\n  [How to feed a file listing to the archiver])\n])# _LT_PROG_AR\n\n\n# _LT_CMD_OLD_ARCHIVE\n# -------------------\nm4_defun([_LT_CMD_OLD_ARCHIVE],\n[_LT_PROG_AR\n\nAC_CHECK_TOOL(STRIP, strip, :)\ntest -z \"$STRIP\" && STRIP=:\n_LT_DECL([], [STRIP], [1], [A symbol stripping program])\n\nAC_CHECK_TOOL(RANLIB, ranlib, :)\ntest -z \"$RANLIB\" && RANLIB=:\n_LT_DECL([], [RANLIB], [1],\n    [Commands used to install an old-style archive])\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  bitrig* | openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$tool_oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$tool_oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$tool_oldlib\"\nfi\n\ncase $host_os in\n  darwin*)\n    lock_old_archive_extraction=yes ;;\n  *)\n    lock_old_archive_extraction=no ;;\nesac\n_LT_DECL([], [old_postinstall_cmds], [2])\n_LT_DECL([], [old_postuninstall_cmds], [2])\n_LT_TAGDECL([], [old_archive_cmds], [2],\n    [Commands used to build an old-style archive])\n_LT_DECL([], [lock_old_archive_extraction], [0],\n    [Whether to use a lock for old archive extraction])\n])# _LT_CMD_OLD_ARCHIVE\n\n\n# _LT_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([_LT_COMPILER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"  ## exclude from sc_useless_quotes_in_assignment\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $RM conftest*\n])\n\nif test yes = \"[$]$2\"; then\n    m4_if([$5], , :, [$5])\nelse\n    m4_if([$6], , :, [$6])\nfi\n])# _LT_COMPILER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_COMPILER_OPTION], [_LT_COMPILER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [])\n\n\n# _LT_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                  [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------\n# Check whether the given linker option works\nAC_DEFUN([_LT_LINKER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS $3\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=$save_LDFLAGS\n])\n\nif test yes = \"[$]$2\"; then\n    m4_if([$4], , :, [$4])\nelse\n    m4_if([$5], , :, [$5])\nfi\n])# _LT_LINKER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_LINKER_OPTION], [_LT_LINKER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [])\n\n\n# LT_CMD_MAX_LEN\n#---------------\nAC_DEFUN([LT_CMD_MAX_LEN],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=ABCD\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw* | cegcc*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  mint*)\n    # On MiNT this can take a long time and run out of memory.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  os2*)\n    # The test takes a long time on OS/2.\n    lt_cv_sys_max_cmd_len=8192\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[\t ]]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`\n    if test -n \"$lt_cv_sys_max_cmd_len\" && \\\n       test undefined != \"$lt_cv_sys_max_cmd_len\"; then\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    else\n      # Make teststring a little bigger before we do anything with it.\n      # a 1K string should be a reasonable start.\n      for i in 1 2 3 4 5 6 7 8; do\n        teststring=$teststring$teststring\n      done\n      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n      # If test is not a shell built-in, we'll probably end up computing a\n      # maximum length that is only half of the actual maximum length, but\n      # we can't tell.\n      while { test X`env echo \"$teststring$teststring\" 2>/dev/null` \\\n\t         = \"X$teststring$teststring\"; } >/dev/null 2>&1 &&\n\t      test 17 != \"$i\" # 1/2 MB should be enough\n      do\n        i=`expr $i + 1`\n        teststring=$teststring$teststring\n      done\n      # Only check the string length outside the loop.\n      lt_cv_sys_max_cmd_len=`expr \"X$teststring\" : \".*\" 2>&1`\n      teststring=\n      # Add a significant safety factor because C++ compilers can tack on\n      # massive amounts of additional arguments before passing them to the\n      # linker.  It appears as though 1/2 is a usable value.\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    fi\n    ;;\n  esac\n])\nif test -n \"$lt_cv_sys_max_cmd_len\"; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n_LT_DECL([], [max_cmd_len], [0],\n    [What is the maximum length of a command?])\n])# LT_CMD_MAX_LEN\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_SYS_MAX_CMD_LEN], [LT_CMD_MAX_LEN])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [])\n\n\n# _LT_HEADER_DLFCN\n# ----------------\nm4_defun([_LT_HEADER_DLFCN],\n[AC_CHECK_HEADERS([dlfcn.h], [], [], [AC_INCLUDES_DEFAULT])dnl\n])# _LT_HEADER_DLFCN\n\n\n# _LT_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                      ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ----------------------------------------------------------------\nm4_defun([_LT_TRY_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test yes = \"$cross_compiling\"; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n[#line $LINENO \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisibility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\n\nint fnord () { return 42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}]\n_LT_EOF\n  if AC_TRY_EVAL(ac_link) && test -s \"conftest$ac_exeext\" 2>/dev/null; then\n    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_dlunknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_TRY_DLOPEN_SELF\n\n\n# LT_SYS_DLOPEN_SELF\n# ------------------\nAC_DEFUN([LT_SYS_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test yes != \"$enable_dlopen\"; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=load_add_on\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32* | cegcc*)\n    lt_cv_dlopen=LoadLibrary\n    lt_cv_dlopen_libs=\n    ;;\n\n  cygwin*)\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    ;;\n\n  darwin*)\n    # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],[\n    lt_cv_dlopen=dyld\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n    ;;\n\n  tpf*)\n    # Don't try to run any link tests for TPF.  We know it's impossible\n    # because TPF is a cross-compiler, and we know how we open DSOs.\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=no\n    ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=shl_load],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=dlopen],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test no = \"$lt_cv_dlopen\"; then\n    enable_dlopen=no\n  else\n    enable_dlopen=yes\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=$CPPFLAGS\n    test yes = \"$ac_cv_header_dlfcn_h\" && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=$LDFLAGS\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=$LIBS\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test yes = \"$lt_cv_dlopen_self\"; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n\t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=$save_CPPFLAGS\n    LDFLAGS=$save_LDFLAGS\n    LIBS=$save_LIBS\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n_LT_DECL([dlopen_support], [enable_dlopen], [0],\n\t [Whether dlopen is supported])\n_LT_DECL([dlopen_self], [enable_dlopen_self], [0],\n\t [Whether dlopen of programs is supported])\n_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],\n\t [Whether dlopen of statically linked programs is supported])\n])# LT_SYS_DLOPEN_SELF\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [])\n\n\n# _LT_COMPILER_C_O([TAGNAME])\n# ---------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler.\n# This macro does not hard code the compiler like AC_PROG_CC_C_O.\nm4_defun([_LT_COMPILER_C_O],\n[m4_require([_LT_DECL_SED])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w . 2>&AS_MESSAGE_LOG_FD\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n])\n_LT_TAGDECL([compiler_c_o], [lt_cv_prog_compiler_c_o], [1],\n\t[Does compiler simultaneously support -c and -o options?])\n])# _LT_COMPILER_C_O\n\n\n# _LT_COMPILER_FILE_LOCKS([TAGNAME])\n# ----------------------------------\n# Check to see if we can do hard links to lock some files if needed\nm4_defun([_LT_COMPILER_FILE_LOCKS],\n[m4_require([_LT_ENABLE_LOCK])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_COMPILER_C_O([$1])\n\nhard_links=nottested\nif test no = \"$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" && test no != \"$need_locks\"; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test no = \"$hard_links\"; then\n    AC_MSG_WARN(['$CC' does not support '-c -o', so 'make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n_LT_DECL([], [need_locks], [1], [Must we lock files when doing compilation?])\n])# _LT_COMPILER_FILE_LOCKS\n\n\n# _LT_CHECK_OBJDIR\n# ----------------\nm4_defun([_LT_CHECK_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n_LT_DECL([], [objdir], [0],\n         [The name of the directory that contains temporary libtool files])dnl\nm4_pattern_allow([LT_OBJDIR])dnl\nAC_DEFINE_UNQUOTED([LT_OBJDIR], \"$lt_cv_objdir/\",\n  [Define to the sub-directory where libtool stores uninstalled libraries.])\n])# _LT_CHECK_OBJDIR\n\n\n# _LT_LINKER_HARDCODE_LIBPATH([TAGNAME])\n# --------------------------------------\n# Check hardcoding attributes.\nm4_defun([_LT_LINKER_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\" ||\n   test -n \"$_LT_TAGVAR(runpath_var, $1)\" ||\n   test yes = \"$_LT_TAGVAR(hardcode_automatic, $1)\"; then\n\n  # We can hardcode non-existent directories.\n  if test no != \"$_LT_TAGVAR(hardcode_direct, $1)\" &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test no != \"$_LT_TAGVAR(hardcode_shlibpath_var, $1)\" &&\n     test no != \"$_LT_TAGVAR(hardcode_minus_L, $1)\"; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, $1)])\n\nif test relink = \"$_LT_TAGVAR(hardcode_action, $1)\" ||\n   test yes = \"$_LT_TAGVAR(inherit_rpath, $1)\"; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test yes = \"$shlibpath_overrides_runpath\" ||\n     test no = \"$enable_shared\"; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n_LT_TAGDECL([], [hardcode_action], [0],\n    [How to hardcode a shared library path into an executable])\n])# _LT_LINKER_HARDCODE_LIBPATH\n\n\n# _LT_CMD_STRIPLIB\n# ----------------\nm4_defun([_LT_CMD_STRIPLIB],\n[m4_require([_LT_DECL_EGREP])\nstriplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | $GREP \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  AC_MSG_RESULT([yes])\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n  darwin*)\n    if test -n \"$STRIP\"; then\n      striplib=\"$STRIP -x\"\n      old_striplib=\"$STRIP -S\"\n      AC_MSG_RESULT([yes])\n    else\n      AC_MSG_RESULT([no])\n    fi\n    ;;\n  *)\n    AC_MSG_RESULT([no])\n    ;;\n  esac\nfi\n_LT_DECL([], [old_striplib], [1], [Commands to strip libraries])\n_LT_DECL([], [striplib], [1])\n])# _LT_CMD_STRIPLIB\n\n\n# _LT_PREPARE_MUNGE_PATH_LIST\n# ---------------------------\n# Make sure func_munge_path_list() is defined correctly.\nm4_defun([_LT_PREPARE_MUNGE_PATH_LIST],\n[[# func_munge_path_list VARIABLE PATH\n# -----------------------------------\n# VARIABLE is name of variable containing _space_ separated list of\n# directories to be munged by the contents of PATH, which is string\n# having a format:\n# \"DIR[:DIR]:\"\n#       string \"DIR[ DIR]\" will be prepended to VARIABLE\n# \":DIR[:DIR]\"\n#       string \"DIR[ DIR]\" will be appended to VARIABLE\n# \"DIRP[:DIRP]::[DIRA:]DIRA\"\n#       string \"DIRP[ DIRP]\" will be prepended to VARIABLE and string\n#       \"DIRA[ DIRA]\" will be appended to VARIABLE\n# \"DIR[:DIR]\"\n#       VARIABLE will be replaced by \"DIR[ DIR]\"\nfunc_munge_path_list ()\n{\n    case x@S|@2 in\n    x)\n        ;;\n    *:)\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED 's/:/ /g'` \\@S|@@S|@1\\\"\n        ;;\n    x:*)\n        eval @S|@1=\\\"\\@S|@@S|@1 `$ECHO @S|@2 | $SED 's/:/ /g'`\\\"\n        ;;\n    *::*)\n        eval @S|@1=\\\"\\@S|@@S|@1\\ `$ECHO @S|@2 | $SED -e 's/.*:://' -e 's/:/ /g'`\\\"\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED -e 's/::.*//' -e 's/:/ /g'`\\ \\@S|@@S|@1\\\"\n        ;;\n    *)\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED 's/:/ /g'`\\\"\n        ;;\n    esac\n}\n]])# _LT_PREPARE_PATH_LIST\n\n\n# _LT_SYS_DYNAMIC_LINKER([TAG])\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nm4_defun([_LT_SYS_DYNAMIC_LINKER],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_OBJDUMP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PREPARE_MUNGE_PATH_LIST])dnl\nAC_MSG_CHECKING([dynamic linker characteristics])\nm4_if([$1],\n\t[], [\nif test yes = \"$GCC\"; then\n  case $host_os in\n    darwin*) lt_awk_arg='/^libraries:/,/LR/' ;;\n    *) lt_awk_arg='/^libraries:/' ;;\n  esac\n  case $host_os in\n    mingw* | cegcc*) lt_sed_strip_eq='s|=\\([[A-Za-z]]:\\)|\\1|g' ;;\n    *) lt_sed_strip_eq='s|=/|/|g' ;;\n  esac\n  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e \"s/^libraries://\" -e $lt_sed_strip_eq`\n  case $lt_search_path_spec in\n  *\\;*)\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED 's/;/ /g'`\n    ;;\n  *)\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED \"s/$PATH_SEPARATOR/ /g\"`\n    ;;\n  esac\n  # Ok, now we have the path, separated by spaces, we can step through it\n  # and add multilib dir if necessary...\n  lt_tmp_lt_search_path_spec=\n  lt_multi_os_dir=/`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`\n  # ...but if some path component already ends with the multilib dir we assume\n  # that all is fine and trust -print-search-dirs as is (GCC 4.2? or newer).\n  case \"$lt_multi_os_dir; $lt_search_path_spec \" in\n  \"/; \"* | \"/.; \"* | \"/./; \"* | *\"$lt_multi_os_dir \"* | *\"$lt_multi_os_dir/ \"*)\n    lt_multi_os_dir=\n    ;;\n  esac\n  for lt_sys_path in $lt_search_path_spec; do\n    if test -d \"$lt_sys_path$lt_multi_os_dir\"; then\n      lt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path$lt_multi_os_dir\"\n    elif test -n \"$lt_multi_os_dir\"; then\n      test -d \"$lt_sys_path\" && \\\n\tlt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path\"\n    fi\n  done\n  lt_search_path_spec=`$ECHO \"$lt_tmp_lt_search_path_spec\" | awk '\nBEGIN {RS = \" \"; FS = \"/|\\n\";} {\n  lt_foo = \"\";\n  lt_count = 0;\n  for (lt_i = NF; lt_i > 0; lt_i--) {\n    if ($lt_i != \"\" && $lt_i != \".\") {\n      if ($lt_i == \"..\") {\n        lt_count++;\n      } else {\n        if (lt_count == 0) {\n          lt_foo = \"/\" $lt_i lt_foo;\n        } else {\n          lt_count--;\n        }\n      }\n    }\n  }\n  if (lt_foo != \"\") { lt_freq[[lt_foo]]++; }\n  if (lt_freq[[lt_foo]] == 1) { print lt_foo; }\n}'`\n  # AWK program above erroneously prepends '/' to C:/dos/paths\n  # for these hosts.\n  case $host_os in\n    mingw* | cegcc*) lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" |\\\n      $SED 's|/\\([[A-Za-z]]:\\)|\\1|g'` ;;\n  esac\n  sys_lib_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $lt_NL2SP`\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=.so\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\nAC_ARG_VAR([LT_SYS_LIBRARY_PATH],\n[User-defined run-time library search path.])\n\ncase $host_os in\naix3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='$libname$release$shared_ext$major'\n  ;;\n\naix[[4-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test ia64 = \"$host_cpu\"; then\n    # AIX 5 supports IA64\n    library_names_spec='$libname$release$shared_ext$major $libname$release$shared_ext$versuffix $libname$shared_ext'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line '#! .'.  This would cause the generated library to\n    # depend on '.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | $CC -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # Using Import Files as archive members, it is possible to support\n    # filename-based versioning of shared library archives on AIX. While\n    # this would work for both with and without runtime linking, it will\n    # prevent static linking of such archives. So we do filename-based\n    # shared library versioning with .so extension only, which is used\n    # when both runtime linking and shared linking is enabled.\n    # Unfortunately, runtime linking may impact performance, so we do\n    # not want this to be the default eventually. Also, we use the\n    # versioned .so libs for executables only if there is the -brtl\n    # linker flag in LDFLAGS as well, or --with-aix-soname=svr4 only.\n    # To allow for filename-based versioning support, we need to create\n    # libNAME.so.V as an archive file, containing:\n    # *) an Import File, referring to the versioned filename of the\n    #    archive as well as the shared archive member, telling the\n    #    bitwidth (32 or 64) of that shared object, and providing the\n    #    list of exported symbols of that shared object, eventually\n    #    decorated with the 'weak' keyword\n    # *) the shared object with the F_LOADONLY flag set, to really avoid\n    #    it being seen by the linker.\n    # At run time we better use the real file rather than another symlink,\n    # but for link time we create the symlink libNAME.so -> libNAME.so.V\n\n    case $with_aix_soname,$aix_use_runtimelinking in\n    # AIX (on Power*) has no versioning support, so currently we cannot hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    aix,yes) # traditional libtool\n      dynamic_linker='AIX unversionable lib.so'\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      ;;\n    aix,no) # traditional AIX only\n      dynamic_linker='AIX lib.a[(]lib.so.V[)]'\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      ;;\n    svr4,*) # full svr4 only\n      dynamic_linker=\"AIX lib.so.V[(]$shared_archive_member_spec.o[)]\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,yes) # both, prefer svr4\n      dynamic_linker=\"AIX lib.so.V[(]$shared_archive_member_spec.o[)], lib.a[(]lib.so.V[)]\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # unpreferred sharedlib libNAME.a needs extra handling\n      postinstall_cmds='test -n \"$linkname\" || linkname=\"$realname\"~func_stripname \"\" \".so\" \"$linkname\"~$install_shared_prog \"$dir/$func_stripname_result.$libext\" \"$destdir/$func_stripname_result.$libext\"~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib \"$destdir/$func_stripname_result.$libext\"'\n      postuninstall_cmds='for n in $library_names $old_library; do :; done~func_stripname \"\" \".so\" \"$n\"~test \"$func_stripname_result\" = \"$n\" || func_append rmfiles \" $odir/$func_stripname_result.$libext\"'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,no) # both, prefer aix\n      dynamic_linker=\"AIX lib.a[(]lib.so.V[)], lib.so.V[(]$shared_archive_member_spec.o[)]\"\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      # unpreferred sharedlib libNAME.so.V and symlink libNAME.so need extra handling\n      postinstall_cmds='test -z \"$dlname\" || $install_shared_prog $dir/$dlname $destdir/$dlname~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib $destdir/$dlname~test -n \"$linkname\" || linkname=$realname~func_stripname \"\" \".a\" \"$linkname\"~(cd \"$destdir\" && $LN_S -f $dlname $func_stripname_result.so)'\n      postuninstall_cmds='test -z \"$dlname\" || func_append rmfiles \" $odir/$dlname\"~for n in $old_library $library_names; do :; done~func_stripname \"\" \".a\" \"$n\"~func_append rmfiles \" $odir/$func_stripname_result.so\"'\n      ;;\n    esac\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='$libname$shared_ext'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$cc_basename in\n  yes,*)\n    # gcc\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo $libname | sed -e 's/^lib/cyg/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\nm4_if([$1], [],[\n      sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/lib/w32api\"])\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo $libname | sed -e 's/^lib/pw/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n      ;;\n    esac\n    dynamic_linker='Win32 ld.exe'\n    ;;\n\n  *,cl*)\n    # Native MSVC\n    libname_spec='$name'\n    soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n    library_names_spec='$libname.dll.lib'\n\n    case $build_os in\n    mingw*)\n      sys_lib_search_path_spec=\n      lt_save_ifs=$IFS\n      IFS=';'\n      for lt_path in $LIB\n      do\n        IFS=$lt_save_ifs\n        # Let DOS variable expansion print the short 8.3 style file name.\n        lt_path=`cd \"$lt_path\" 2>/dev/null && cmd //C \"for %i in (\".\") do @echo %~si\"`\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec $lt_path\"\n      done\n      IFS=$lt_save_ifs\n      # Convert to MSYS style.\n      sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | sed -e 's|\\\\\\\\|/|g' -e 's| \\\\([[a-zA-Z]]\\\\):| /\\\\1|g' -e 's|^ ||'`\n      ;;\n    cygwin*)\n      # Convert to unix form, then to dos form, then back to unix form\n      # but this time dos style (no spaces!) so that the unix form looks\n      # like /cygdrive/c/PROGRA~1:/cygdr...\n      sys_lib_search_path_spec=`cygpath --path --unix \"$LIB\"`\n      sys_lib_search_path_spec=`cygpath --path --dos \"$sys_lib_search_path_spec\" 2>/dev/null`\n      sys_lib_search_path_spec=`cygpath --path --unix \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      ;;\n    *)\n      sys_lib_search_path_spec=$LIB\n      if $ECHO \"$sys_lib_search_path_spec\" | [$GREP ';[c-zC-Z]:/' >/dev/null]; then\n        # It is most probably a Windows format PATH.\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      # FIXME: find the short name or the path components, as spaces are\n      # common. (e.g. \"Program Files\" -> \"PROGRA~1\")\n      ;;\n    esac\n\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n    dynamic_linker='Win32 link.exe'\n    ;;\n\n  *)\n    # Assume MSVC wrapper\n    library_names_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext $libname.lib'\n    dynamic_linker='Win32 ld.exe'\n    ;;\n  esac\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$major$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\nm4_if([$1], [],[\n  sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/local/lib\"])\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[[23]].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      soname_spec='$libname$release$shared_ext$major'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \\\n  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\nhaiku*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    if test 32 = \"$HPUX_IA64_MODE\"; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux32\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux64\n    fi\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[[3-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test yes = \"$lt_cv_prog_gnu_ld\"; then\n\t\tversion_type=linux # correct to gnu/linux during the next big refactor\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$release$shared_ext $libname$shared_ext'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib$libsuff /lib$libsuff /usr/local/lib$libsuff\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib$libsuff /lib$libsuff\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\nlinux*android*)\n  version_type=none # Android doesn't support versioned libraries.\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext'\n  soname_spec='$libname$release$shared_ext'\n  finish_cmds=\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  dynamic_linker='Android linker'\n  # Don't embed -rpath directories since the linker doesn't support them.\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  AC_CACHE_VAL([lt_cv_shlibpath_overrides_runpath],\n    [lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$_LT_TAGVAR(lt_prog_compiler_wl, $1)\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\\\"\"\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n      [AS_IF([ ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null],\n\t [lt_cv_shlibpath_overrides_runpath=yes])])\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n    ])\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Ideally, we could use ldconfig to report *all* directores which are\n  # searched for libraries, however this is still not possible.  Aside from not\n  # being certain /sbin/ldconfig is available, command\n  # 'ldconfig -N -X -v | grep ^/' on 64bit Fedora does not report /usr/lib64,\n  # even though it is searched at run-time.  Try to do the best guess by\n  # appending ld.so.conf contents (and includes) to the search path.\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd* | bitrig*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=/usr/lib\n  need_lib_prefix=no\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    need_version=no\n  else\n    need_version=yes\n  fi\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nos2*)\n  libname_spec='$name'\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n  # OS/2 can only load a DLL with a base name of 8 characters or less.\n  soname_spec='`test -n \"$os2dllname\" && libname=\"$os2dllname\";\n    v=$($ECHO $release$versuffix | tr -d .-);\n    n=$($ECHO $libname | cut -b -$((8 - ${#v})) | tr . _);\n    $ECHO $n$v`$shared_ext'\n  library_names_spec='${libname}_dll.$libext'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=BEGINLIBPATH\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  postinstall_cmds='base_file=`basename \\$file`~\n    dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; $ECHO \\$dlname'\\''`~\n    dldir=$destdir/`dirname \\$dlpath`~\n    test -d \\$dldir || mkdir -p \\$dldir~\n    $install_prog $dir/$dlname \\$dldir/$dlname~\n    chmod a+x \\$dldir/$dlname~\n    if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n      eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n    fi'\n  postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; $ECHO \\$dlname'\\''`~\n    dlpath=$dir/\\$dldll~\n    $RM \\$dlpath'\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test yes = \"$with_gnu_ld\"; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec; then\n    version_type=linux # correct to gnu/linux during the next big refactor\n    library_names_spec='$libname$shared_ext.$versuffix $libname$shared_ext.$major $libname$shared_ext'\n    soname_spec='$libname$shared_ext.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=sco\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test yes = \"$with_gnu_ld\"; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest no = \"$dynamic_linker\" && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test yes = \"$GCC\"; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test set = \"${lt_cv_sys_lib_search_path_spec+set}\"; then\n  sys_lib_search_path_spec=$lt_cv_sys_lib_search_path_spec\nfi\n\nif test set = \"${lt_cv_sys_lib_dlsearch_path_spec+set}\"; then\n  sys_lib_dlsearch_path_spec=$lt_cv_sys_lib_dlsearch_path_spec\nfi\n\n# remember unaugmented sys_lib_dlsearch_path content for libtool script decls...\nconfigure_time_dlsearch_path=$sys_lib_dlsearch_path_spec\n\n# ... but it needs LT_SYS_LIBRARY_PATH munging for other configure-time code\nfunc_munge_path_list sys_lib_dlsearch_path_spec \"$LT_SYS_LIBRARY_PATH\"\n\n# to be used as default LT_SYS_LIBRARY_PATH value in generated libtool\nconfigure_time_lt_sys_library_path=$LT_SYS_LIBRARY_PATH\n\n_LT_DECL([], [variables_saved_for_relink], [1],\n    [Variables whose values should be saved in libtool wrapper scripts and\n    restored at link time])\n_LT_DECL([], [need_lib_prefix], [0],\n    [Do we need the \"lib\" prefix for modules?])\n_LT_DECL([], [need_version], [0], [Do we need a version for libraries?])\n_LT_DECL([], [version_type], [0], [Library versioning type])\n_LT_DECL([], [runpath_var], [0],  [Shared library runtime path variable])\n_LT_DECL([], [shlibpath_var], [0],[Shared library path variable])\n_LT_DECL([], [shlibpath_overrides_runpath], [0],\n    [Is shlibpath searched before the hard-coded library search path?])\n_LT_DECL([], [libname_spec], [1], [Format of library name prefix])\n_LT_DECL([], [library_names_spec], [1],\n    [[List of archive names.  First name is the real one, the rest are links.\n    The last name is the one that the linker finds with -lNAME]])\n_LT_DECL([], [soname_spec], [1],\n    [[The coded name of the library, if different from the real name]])\n_LT_DECL([], [install_override_mode], [1],\n    [Permission mode override for installation of shared libraries])\n_LT_DECL([], [postinstall_cmds], [2],\n    [Command to use after installation of a shared archive])\n_LT_DECL([], [postuninstall_cmds], [2],\n    [Command to use after uninstallation of a shared archive])\n_LT_DECL([], [finish_cmds], [2],\n    [Commands used to finish a libtool library installation in a directory])\n_LT_DECL([], [finish_eval], [1],\n    [[As \"finish_cmds\", except a single script fragment to be evaled but\n    not shown]])\n_LT_DECL([], [hardcode_into_libs], [0],\n    [Whether we should hardcode library paths into libraries])\n_LT_DECL([], [sys_lib_search_path_spec], [2],\n    [Compile-time system search path for libraries])\n_LT_DECL([sys_lib_dlsearch_path_spec], [configure_time_dlsearch_path], [2],\n    [Detected run-time system search path for libraries])\n_LT_DECL([], [configure_time_lt_sys_library_path], [2],\n    [Explicit LT_SYS_LIBRARY_PATH set during ./configure time])\n])# _LT_SYS_DYNAMIC_LINKER\n\n\n# _LT_PATH_TOOL_PREFIX(TOOL)\n# --------------------------\n# find a file program that can recognize shared library\nAC_DEFUN([_LT_PATH_TOOL_PREFIX],\n[m4_require([_LT_DECL_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=$MAGIC_CMD\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"m4_if([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$1\"; then\n      lt_cv_path_MAGIC_CMD=$ac_dir/\"$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=$lt_cv_path_MAGIC_CMD\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=$lt_save_ifs\n  MAGIC_CMD=$lt_save_MAGIC_CMD\n  ;;\nesac])\nMAGIC_CMD=$lt_cv_path_MAGIC_CMD\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n_LT_DECL([], [MAGIC_CMD], [0],\n\t [Used to examine libraries when file_magic_cmd begins with \"file\"])dnl\n])# _LT_PATH_TOOL_PREFIX\n\n# Old name:\nAU_ALIAS([AC_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PATH_TOOL_PREFIX], [])\n\n\n# _LT_PATH_MAGIC\n# --------------\n# find a file program that can recognize a shared library\nm4_defun([_LT_PATH_MAGIC],\n[_LT_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    _LT_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# _LT_PATH_MAGIC\n\n\n# LT_PATH_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([LT_PATH_LD],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PROG_ECHO_BACKSLASH])dnl\n\nAC_ARG_WITH([gnu-ld],\n    [AS_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test no = \"$withval\" || with_gnu_ld=yes],\n    [with_gnu_ld=no])dnl\n\nac_prog=ld\nif test yes = \"$GCC\"; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return, which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=$ac_prog\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test yes = \"$with_gnu_ld\"; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=$ac_dir/$ac_prog\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest no != \"$with_gnu_ld\" && break\n\t;;\n      *)\n\ttest yes != \"$with_gnu_ld\" && break\n\t;;\n      esac\n    fi\n  done\n  IFS=$lt_save_ifs\nelse\n  lt_cv_path_LD=$LD # Let the user override the test with a path.\nfi])\nLD=$lt_cv_path_LD\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n_LT_PATH_LD_GNU\nAC_SUBST([LD])\n\n_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])\n])# LT_PATH_LD\n\n# Old names:\nAU_ALIAS([AM_PROG_LD], [LT_PATH_LD])\nAU_ALIAS([AC_PROG_LD], [LT_PATH_LD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_LD], [])\ndnl AC_DEFUN([AC_PROG_LD], [])\n\n\n# _LT_PATH_LD_GNU\n#- --------------\nm4_defun([_LT_PATH_LD_GNU],\n[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# _LT_PATH_LD_GNU\n\n\n# _LT_CMD_RELOAD\n# --------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nm4_defun([_LT_CMD_RELOAD],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    if test yes != \"$GCC\"; then\n      reload_cmds=false\n    fi\n    ;;\n  darwin*)\n    if test yes = \"$GCC\"; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib $wl-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n_LT_TAGDECL([], [reload_flag], [1], [How to create reloadable object files])dnl\n_LT_TAGDECL([], [reload_cmds], [2])dnl\n])# _LT_CMD_RELOAD\n\n\n# _LT_PATH_DD\n# -----------\n# find a working dd\nm4_defun([_LT_PATH_DD],\n[AC_CACHE_CHECK([for a working dd], [ac_cv_path_lt_DD],\n[printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\n: ${lt_DD:=$DD}\nAC_PATH_PROGS_FEATURE_CHECK([lt_DD], [dd],\n[if \"$ac_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && ac_cv_path_lt_DD=\"$ac_path_lt_DD\" ac_path_lt_DD_found=:\nfi])\nrm -f conftest.i conftest2.i conftest.out])\n])# _LT_PATH_DD\n\n\n# _LT_CMD_TRUNCATE\n# ----------------\n# find command to truncate a binary pipe\nm4_defun([_LT_CMD_TRUNCATE],\n[m4_require([_LT_PATH_DD])\nAC_CACHE_CHECK([how to truncate binary pipes], [lt_cv_truncate_bin],\n[printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\nlt_cv_truncate_bin=\nif \"$ac_cv_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && lt_cv_truncate_bin=\"$ac_cv_path_lt_DD bs=4096 count=1\"\nfi\nrm -f conftest.i conftest2.i conftest.out\ntest -z \"$lt_cv_truncate_bin\" && lt_cv_truncate_bin=\"$SED -e 4q\"])\n_LT_DECL([lt_truncate_bin], [lt_cv_truncate_bin], [1],\n  [Command to truncate a binary pipe])\n])# _LT_CMD_TRUNCATE\n\n\n# _LT_CHECK_MAGIC_METHOD\n# ----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_MAGIC_METHOD],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nAC_CACHE_CHECK([how to recognize dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# 'unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# that responds to the $file_magic_cmd with a given extended regex.\n# If you have 'file' or equivalent on your system and you're not sure\n# whether 'pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix[[4-9]]*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump',\n  # unless we find 'file', for example because we are cross-compiling.\n  if ( file / ) >/dev/null 2>&1; then\n    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n    lt_cv_file_magic_cmd='func_win32_libid'\n  else\n    # Keep this pattern in sync with the one in func_win32_libid.\n    lt_cv_deplibs_check_method='file_magic file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)'\n    lt_cv_file_magic_cmd='$OBJDUMP -f'\n  fi\n  ;;\n\ncegcc*)\n  # use the weaker test based on 'objdump'. See mingw*.\n  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | dragonfly*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\nhaiku*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\\.[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]]\\.[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix[[3-9]]*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\n*nto* | *qnx*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nopenbsd* | bitrig*)\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nrdos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\ntpf*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nos2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\n\nfile_magic_glob=\nwant_nocaseglob=no\nif test \"$build\" = \"$host\"; then\n  case $host_os in\n  mingw* | pw32*)\n    if ( shopt | grep nocaseglob ) >/dev/null 2>&1; then\n      want_nocaseglob=yes\n    else\n      file_magic_glob=`echo aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ | $SED -e \"s/\\(..\\)/s\\/[[\\1]]\\/[[\\1]]\\/g;/g\"`\n    fi\n    ;;\n  esac\nfi\n\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n\n_LT_DECL([], [deplibs_check_method], [1],\n    [Method to check whether dependent libraries are shared objects])\n_LT_DECL([], [file_magic_cmd], [1],\n    [Command to use when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [file_magic_glob], [1],\n    [How to find potential files when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [want_nocaseglob], [1],\n    [Find potential files using nocaseglob when deplibs_check_method = \"file_magic\"])\n])# _LT_CHECK_MAGIC_METHOD\n\n\n# LT_PATH_NM\n# ----------\n# find the pathname to a BSD- or MS-compatible name lister\nAC_DEFUN([LT_PATH_NM],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=$NM\nelse\n  lt_nm_to_check=${ac_tool_prefix}nm\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then\n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=$lt_save_ifs\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=$ac_dir/$lt_tmp_nm\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\"; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the 'sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\t# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty\n\tcase $build_os in\n\tmingw*) lt_bad_file=conftest.nm/nofile ;;\n\t*) lt_bad_file=/dev/null ;;\n\tesac\n\tcase `\"$tmp_nm\" -B $lt_bad_file 2>&1 | sed '1q'` in\n\t*$lt_bad_file* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break 2\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break 2\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=$lt_save_ifs\n  done\n  : ${lt_cv_path_NM=no}\nfi])\nif test no != \"$lt_cv_path_NM\"; then\n  NM=$lt_cv_path_NM\nelse\n  # Didn't find any BSD compatible name lister, look for dumpbin.\n  if test -n \"$DUMPBIN\"; then :\n    # Let the user override the test.\n  else\n    AC_CHECK_TOOLS(DUMPBIN, [dumpbin \"link -dump\"], :)\n    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | sed '1q'` in\n    *COFF*)\n      DUMPBIN=\"$DUMPBIN -symbols -headers\"\n      ;;\n    *)\n      DUMPBIN=:\n      ;;\n    esac\n  fi\n  AC_SUBST([DUMPBIN])\n  if test : != \"$DUMPBIN\"; then\n    NM=$DUMPBIN\n  fi\nfi\ntest -z \"$NM\" && NM=nm\nAC_SUBST([NM])\n_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl\n\nAC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],\n  [lt_cv_nm_interface=\"BSD nm\"\n  echo \"int some_variable = 0;\" > conftest.$ac_ext\n  (eval echo \"\\\"\\$as_me:$LINENO: $ac_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$ac_compile\" 2>conftest.err)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: output\\\"\" >&AS_MESSAGE_LOG_FD)\n  cat conftest.out >&AS_MESSAGE_LOG_FD\n  if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n    lt_cv_nm_interface=\"MS dumpbin\"\n  fi\n  rm -f conftest*])\n])# LT_PATH_NM\n\n# Old names:\nAU_ALIAS([AM_PROG_NM], [LT_PATH_NM])\nAU_ALIAS([AC_PROG_NM], [LT_PATH_NM])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_NM], [])\ndnl AC_DEFUN([AC_PROG_NM], [])\n\n# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n# --------------------------------\n# how to determine the name of the shared library\n# associated with a specific link library.\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_SHAREDLIB_FROM_LINKLIB],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nm4_require([_LT_DECL_DLLTOOL])\nAC_CACHE_CHECK([how to associate runtime and link libraries],\nlt_cv_sharedlib_from_linklib_cmd,\n[lt_cv_sharedlib_from_linklib_cmd='unknown'\n\ncase $host_os in\ncygwin* | mingw* | pw32* | cegcc*)\n  # two different shell functions defined in ltmain.sh;\n  # decide which one to use based on capabilities of $DLLTOOL\n  case `$DLLTOOL --help 2>&1` in\n  *--identify-strict*)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib\n    ;;\n  *)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback\n    ;;\n  esac\n  ;;\n*)\n  # fallback: assume linklib IS sharedlib\n  lt_cv_sharedlib_from_linklib_cmd=$ECHO\n  ;;\nesac\n])\nsharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd\ntest -z \"$sharedlib_from_linklib_cmd\" && sharedlib_from_linklib_cmd=$ECHO\n\n_LT_DECL([], [sharedlib_from_linklib_cmd], [1],\n    [Command to associate shared and link libraries])\n])# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n\n\n# _LT_PATH_MANIFEST_TOOL\n# ----------------------\n# locate the manifest tool\nm4_defun([_LT_PATH_MANIFEST_TOOL],\n[AC_CHECK_TOOL(MANIFEST_TOOL, mt, :)\ntest -z \"$MANIFEST_TOOL\" && MANIFEST_TOOL=mt\nAC_CACHE_CHECK([if $MANIFEST_TOOL is a manifest tool], [lt_cv_path_mainfest_tool],\n  [lt_cv_path_mainfest_tool=no\n  echo \"$as_me:$LINENO: $MANIFEST_TOOL '-?'\" >&AS_MESSAGE_LOG_FD\n  $MANIFEST_TOOL '-?' 2>conftest.err > conftest.out\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  if $GREP 'Manifest Tool' conftest.out > /dev/null; then\n    lt_cv_path_mainfest_tool=yes\n  fi\n  rm -f conftest*])\nif test yes != \"$lt_cv_path_mainfest_tool\"; then\n  MANIFEST_TOOL=:\nfi\n_LT_DECL([], [MANIFEST_TOOL], [1], [Manifest tool])dnl\n])# _LT_PATH_MANIFEST_TOOL\n\n\n# _LT_DLL_DEF_P([FILE])\n# ---------------------\n# True iff FILE is a Windows DLL '.def' file.\n# Keep in sync with func_dll_def_p in the libtool script\nAC_DEFUN([_LT_DLL_DEF_P],\n[dnl\n  test DEF = \"`$SED -n dnl\n    -e '\\''s/^[[\t ]]*//'\\'' dnl Strip leading whitespace\n    -e '\\''/^\\(;.*\\)*$/d'\\'' dnl      Delete empty lines and comments\n    -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([[\t ]].*\\)*$/DEF/p'\\'' dnl\n    -e q dnl                          Only consider the first \"real\" line\n    $1`\" dnl\n])# _LT_DLL_DEF_P\n\n\n# LT_LIB_M\n# --------\n# check for math library\nAC_DEFUN([LT_LIB_M],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=-lmw)\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=-lm)\n  ;;\nesac\nAC_SUBST([LIBM])\n])# LT_LIB_M\n\n# Old name:\nAU_ALIAS([AC_CHECK_LIBM], [LT_LIB_M])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_CHECK_LIBM], [])\n\n\n# _LT_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------\nm4_defun([_LT_COMPILER_NO_RTTI],\n[m4_require([_LT_TAG_COMPILER])dnl\n\n_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test yes = \"$GCC\"; then\n  case $cc_basename in\n  nvcc*)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -Xcompiler -fno-builtin' ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin' ;;\n  esac\n\n  _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n_LT_TAGDECL([no_builtin_flag], [lt_prog_compiler_no_builtin_flag], [1],\n\t[Compiler flag to turn off builtin functions])\n])# _LT_COMPILER_NO_RTTI\n\n\n# _LT_CMD_GLOBAL_SYMBOLS\n# ----------------------\nm4_defun([_LT_CMD_GLOBAL_SYMBOLS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_TAG_COMPILER])dnl\n\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32* | cegcc*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*)\n  if test ia64 = \"$host_cpu\"; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris*)\n  symcode='[[BDRT]]'\n  ;;\nsco3.2v5*)\n  symcode='[[DT]]'\n  ;;\nsysv4.2uw2*)\n  symcode='[[DT]]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[[ABDT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  # Gets list of data symbols to import.\n  lt_cv_sys_global_symbol_to_import=\"sed -n -e 's/^I .* \\(.*\\)$/\\1/p'\"\n  # Adjust the below global symbol transforms to fixup imported variables.\n  lt_cdecl_hook=\" -e 's/^I .* \\(.*\\)$/extern __declspec(dllimport) char \\1;/p'\"\n  lt_c_name_hook=\" -e 's/^I .* \\(.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\"\n  lt_c_name_lib_hook=\"\\\n  -e 's/^I .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\\\n  -e 's/^I .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) 0},/p'\"\nelse\n  # Disable hooks by default.\n  lt_cv_sys_global_symbol_to_import=\n  lt_cdecl_hook=\n  lt_c_name_hook=\n  lt_c_name_lib_hook=\nfi\n\n# Transform an extracted symbol line into a proper C declaration.\n# Some systems (esp. on ia64) link data and code symbols differently,\n# so use this general approach.\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n\"\\\n$lt_cdecl_hook\\\n\" -e 's/^T .* \\(.*\\)$/extern int \\1();/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n\"\\\n$lt_c_name_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\n\n# Transform an extracted symbol line into symbol name with lib prefix and\n# symbol address.\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix=\"sed -n\"\\\n$lt_c_name_lib_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) \\&\\1},/p'\"\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`$ECHO 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# Try without a prefix underscore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  if test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n    # Fake it for dumpbin and say T for any non-static function,\n    # D for any global variable and I for any imported variable.\n    # Also find C++ and __fastcall symbols from MSVC++,\n    # which start with @ or ?.\n    lt_cv_sys_global_symbol_pipe=\"$AWK ['\"\\\n\"     {last_section=section; section=\\$ 3};\"\\\n\"     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};\"\\\n\"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};\"\\\n\"     /^ *Symbol name *: /{split(\\$ 0,sn,\\\":\\\"); si=substr(sn[2],2)};\"\\\n\"     /^ *Type *: code/{print \\\"T\\\",si,substr(si,length(prfx))};\"\\\n\"     /^ *Type *: data/{print \\\"I\\\",si,substr(si,length(prfx))};\"\\\n\"     \\$ 0!~/External *\\|/{next};\"\\\n\"     / 0+ UNDEF /{next}; / UNDEF \\([^|]\\)*()/{next};\"\\\n\"     {if(hide[section]) next};\"\\\n\"     {f=\\\"D\\\"}; \\$ 0~/\\(\\).*\\|/{f=\\\"T\\\"};\"\\\n\"     {split(\\$ 0,a,/\\||\\r/); split(a[2],s)};\"\\\n\"     s[1]~/^[@?]/{print f,s[1],s[1]; next};\"\\\n\"     s[1]~prfx {split(s[1],t,\\\"@\\\"); print f,t[1],substr(t[1],length(prfx))}\"\\\n\"     ' prfx=^$ac_symprfx]\"\n  else\n    lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[\t ]]\\($symcode$symcode*\\)[[\t ]][[\t ]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n  fi\n  lt_cv_sys_global_symbol_pipe=\"$lt_cv_sys_global_symbol_pipe | sed '/ __gnu_lto/d'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<_LT_EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(void);\nvoid nm_test_func(void){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\n_LT_EOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| \"$lt_cv_sys_global_symbol_pipe\" \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if $GREP ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif $GREP ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<_LT_EOF > conftest.$ac_ext\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT@&t@_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT@&t@_DLSYM_CONST\n#else\n# define LT@&t@_DLSYM_CONST const\n#endif\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n_LT_EOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | $GREP -v main >> conftest.$ac_ext'\n\n\t  cat <<_LT_EOF >> conftest.$ac_ext\n\n/* The mapping between symbol names and symbols.  */\nLT@&t@_DLSYM_CONST struct {\n  const char *name;\n  void       *address;\n}\nlt__PROGRAM__LTX_preloaded_symbols[[]] =\n{\n  { \"@PROGRAM@\", (void *) 0 },\n_LT_EOF\n\t  $SED \"s/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/\" < \"$nlist\" | $GREP -v main >> conftest.$ac_ext\n\t  cat <<\\_LT_EOF >> conftest.$ac_ext\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt__PROGRAM__LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n_LT_EOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_globsym_save_LIBS=$LIBS\n\t  lt_globsym_save_CFLAGS=$CFLAGS\n\t  LIBS=conftstm.$ac_objext\n\t  CFLAGS=\"$CFLAGS$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest$ac_exeext; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=$lt_globsym_save_LIBS\n\t  CFLAGS=$lt_globsym_save_CFLAGS\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -rf conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test yes = \"$pipe_works\"; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n\n# Response file support.\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  nm_file_list_spec='@'\nelif $NM --help 2>/dev/null | grep '[[@]]FILE' >/dev/null; then\n  nm_file_list_spec='@'\nfi\n\n_LT_DECL([global_symbol_pipe], [lt_cv_sys_global_symbol_pipe], [1],\n    [Take the output of nm and produce a listing of raw symbols and C names])\n_LT_DECL([global_symbol_to_cdecl], [lt_cv_sys_global_symbol_to_cdecl], [1],\n    [Transform the output of nm in a proper C declaration])\n_LT_DECL([global_symbol_to_import], [lt_cv_sys_global_symbol_to_import], [1],\n    [Transform the output of nm into a list of symbols to manually relocate])\n_LT_DECL([global_symbol_to_c_name_address],\n    [lt_cv_sys_global_symbol_to_c_name_address], [1],\n    [Transform the output of nm in a C name address pair])\n_LT_DECL([global_symbol_to_c_name_address_lib_prefix],\n    [lt_cv_sys_global_symbol_to_c_name_address_lib_prefix], [1],\n    [Transform the output of nm in a C name address pair when lib prefix is needed])\n_LT_DECL([nm_interface], [lt_cv_nm_interface], [1],\n    [The name lister interface])\n_LT_DECL([], [nm_file_list_spec], [1],\n    [Specify filename containing input files for $NM])\n]) # _LT_CMD_GLOBAL_SYMBOLS\n\n\n# _LT_COMPILER_PIC([TAGNAME])\n# ---------------------------\nm4_defun([_LT_COMPILER_PIC],\n[m4_require([_LT_TAG_COMPILER])dnl\n_LT_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_TAGVAR(lt_prog_compiler_static, $1)=\n\nm4_if([$1], [CXX], [\n  # C++ specific cases for pic, static, wl, etc.\n  if test yes = \"$GXX\"; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | cygwin* | os2* | pw32* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *qnx* | *nto*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix[[4-9]]*)\n\t# All AIX code is PIC.\n\tif test ia64 = \"$host_cpu\"; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n      mingw* | cygwin* | os2* | pw32* | cegcc*)\n\t# This hack is so that the source file can tell whether it is being\n\t# built for inclusion in a dll (and should export symbols for example).\n\tm4_if([$1], [GCJ], [],\n\t  [_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n\t;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n\t    if test ia64 != \"$host_cpu\"; then\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  ecpc* )\n\t    # old Intel C++ for x86_64, which still supported -KPIC.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  icpc* )\n\t    # Intel C++, used to be incompatible with GCC.\n\t    # ICC 10 doesn't accept -KPIC any more.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC* | pgcpp*)\n\t    # Portland Group C++ compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  xlc* | xlC* | bgxl[[cC]]* | mpixl[[cC]]*)\n\t    # IBM XL 8.0, 9.0 on PPC and BlueGene\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd*)\n\t;;\n      *qnx* | *nto*)\n        # QNX uses GNU C++, but need to define -shared option too, otherwise\n        # it will coredump.\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n        ;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test yes = \"$GCC\"; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n\n    case $cc_basename in\n    nvcc*) # Cuda Compiler Driver 2.2\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Xlinker '\n      if test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"-Xcompiler $_LT_TAGVAR(lt_prog_compiler_pic, $1)\"\n      fi\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      case $cc_basename in\n      nagfor*)\n        # NAG Fortran compiler\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      esac\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n      case $cc_basename in\n      # old Intel for x86_64, which still supported -KPIC.\n      ecc*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # Lahey Fortran 8.1.\n      lf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='--shared'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='--static'\n\t;;\n      nagfor*)\n\t# NAG Fortran compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t;;\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t;;\n      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      ccc*)\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      xl* | bgxl* | bgf* | mpixl*)\n\t# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t;;\n      *)\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ Ceres\\ Fortran* | *Sun*Fortran*\\ [[1-7]].* | *Sun*Fortran*\\ 8.[[0-3]]*)\n\t  # Sun Fortran 8.3 passes all unrecognized flags to the linker\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)=''\n\t  ;;\n\t*Sun\\ F* | *Sun*Fortran*)\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t  ;;\n\t*Sun\\ C*)\n\t  # Sun C 5.9\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  ;;\n        *Intel*\\ [[CF]]*Compiler*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t  ;;\n\t*Portland\\ Group*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  ;;\n\tesac\n\t;;\n      esac\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    rdos*)\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95* | sunf77* | sunf90* | sunf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    unicos*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\ncase $host_os in\n  # For platforms that do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\n\nAC_CACHE_CHECK([for $compiler option to produce PIC],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_prog_compiler_pic, $1)])\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, $1) works],\n    [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, $1)],\n    [$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\n_LT_TAGDECL([pic_flag], [lt_prog_compiler_pic], [1],\n\t[Additional compiler flags for building library objects])\n\n_LT_TAGDECL([wl], [lt_prog_compiler_wl], [1],\n\t[How to pass a linker flag through the compiler])\n#\n# Check to make sure the static flag actually works.\n#\nwl=$_LT_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\\\"$_LT_TAGVAR(lt_prog_compiler_static, $1)\\\"\n_LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],\n  _LT_TAGVAR(lt_cv_prog_compiler_static_works, $1),\n  $lt_tmp_static_flag,\n  [],\n  [_LT_TAGVAR(lt_prog_compiler_static, $1)=])\n_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],\n\t[Compiler flag to prevent dynamic linking])\n])# _LT_COMPILER_PIC\n\n\n# _LT_LINKER_SHLIBS([TAGNAME])\n# ----------------------------\n# See if the linker supports building shared libraries.\nm4_defun([_LT_LINKER_SHLIBS],\n[AC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nm4_if([$1], [CXX], [\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  case $host_os in\n  aix[[4-9]]*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to GNU nm, but means don't demangle to AIX nm.\n    # Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n    # weak defined symbols like other global defined symbols, whereas\n    # GNU nm marks them as \"W\".\n    # While the 'weak' keyword is ignored in the Export File, we need\n    # it in the Import File for the 'aix-soname' feature, so we have\n    # to replace the \"-B\" option with \"-P\" for AIX nm.\n    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\\''s/B\\([[^B]]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && ([substr](\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_TAGVAR(export_symbols_cmds, $1)=$ltdll_cmds\n    ;;\n  cygwin* | mingw* | cegcc*)\n    case $cc_basename in\n    cl*)\n      _LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n      ;;\n    *)\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n      ;;\n    esac\n    ;;\n  *)\n    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n    ;;\n  esac\n], [\n  runpath_var=\n  _LT_TAGVAR(allow_undefined_flag, $1)=\n  _LT_TAGVAR(always_export_symbols, $1)=no\n  _LT_TAGVAR(archive_cmds, $1)=\n  _LT_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_TAGVAR(compiler_needs_object, $1)=no\n  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(hardcode_automatic, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_TAGVAR(inherit_rpath, $1)=no\n  _LT_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_TAGVAR(module_cmds, $1)=\n  _LT_TAGVAR(module_expsym_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_new_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ' (' and ')$', so one must not match beginning or\n  # end of line.  Example: 'a|bc|.*d.*' will exclude the symbols 'a' and 'bc',\n  # as well as any symbol that contains 'd'.\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  # Exclude shared library initialization/finalization symbols.\ndnl Note also adjust exclude_expsyms for C++ above.\n  extract_expsyms_cmds=\n\n  case $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test yes != \"$GCC\"; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd* | bitrig*)\n    with_gnu_ld=no\n    ;;\n  esac\n\n  _LT_TAGVAR(ld_shlibs, $1)=yes\n\n  # On some targets, GNU ld is compatible enough with the native linker\n  # that we're better off using the native interface for both.\n  lt_use_gnu_ld_interface=no\n  if test yes = \"$with_gnu_ld\"; then\n    case $host_os in\n      aix*)\n\t# The AIX port of GNU ld has always aspired to compatibility\n\t# with the native linker.  However, as the warning in the GNU ld\n\t# block says, versions before 2.19.5* couldn't really create working\n\t# shared libraries, regardless of the interface used.\n\tcase `$LD -v 2>&1` in\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.19.5*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.[[2-9]]*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ [[3-9]]*) ;;\n\t  *)\n\t    lt_use_gnu_ld_interface=yes\n\t    ;;\n\tesac\n\t;;\n      *)\n\tlt_use_gnu_ld_interface=yes\n\t;;\n    esac\n  fi\n\n  if test yes = \"$lt_use_gnu_ld_interface\"; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='$wl'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n    else\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v | $SED -e 's/([^)]\\+)\\s\\+//' 2>&1` in\n      *GNU\\ gold*) supports_anon_versioning=yes ;;\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix[[3-9]]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test ia64 != \"$host_cpu\"; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.19, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to install binutils\n*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.\n*** You will then need to restart the configuration process.\n\n_LT_EOF\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=no\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n\n      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file, use it as\n\t# is; otherwise, prepend EXPORTS...\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n          cp $export_symbols $output_objdir/$soname.def;\n        else\n          echo EXPORTS > $output_objdir/$soname.def;\n          cat $export_symbols >> $output_objdir/$soname.def;\n        fi~\n        $CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    haiku*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      shrext_cmds=.dll\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    interix[[3-9]]*)\n      _LT_TAGVAR(hardcode_direct, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)\n      tmp_diet=no\n      if test linux-dietlibc = \"$host_os\"; then\n\tcase $cc_basename in\n\t  diet\\ *) tmp_diet=yes;;\t# linux-dietlibc with static linking (!diet-dyn)\n\tesac\n      fi\n      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n\t && test no = \"$tmp_diet\"\n      then\n\ttmp_addflag=' $pic_flag'\n\ttmp_sharedflag='-shared'\n\tcase $cc_basename,$host_cpu in\n        pgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95* | pgfortran*)\n\t\t\t\t\t# Portland Group f77 and f90 compilers\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tlf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n\t  tmp_sharedflag='--shared' ;;\n        nagfor*)                        # NAGFOR 5.3\n          tmp_sharedflag='-Wl,-shared' ;;\n\txl[[cC]]* | bgxl[[cC]]* | mpixl[[cC]]*) # IBM XL C 8.0 on PPC (deal with xlf below)\n\t  tmp_sharedflag='-qmkshrobj'\n\t  tmp_addflag= ;;\n\tnvcc*)\t# Cuda Compiler Driver 2.2\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  ;;\n\tesac\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ C*)\t\t\t# Sun C 5.9\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  tmp_sharedflag='-G' ;;\n\t*Sun\\ F*)\t\t\t# Sun Fortran 8.3\n\t  tmp_sharedflag='-G' ;;\n\tesac\n\t_LT_TAGVAR(archive_cmds, $1)='$CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\n        if test yes = \"$supports_anon_versioning\"; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n            cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n            echo \"local: *; };\" >> $output_objdir/$libname.ver~\n            $CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n        fi\n\n\tcase $cc_basename in\n\ttcc*)\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='-rdynamic'\n\t  ;;\n\txlf* | bgf* | bgxlf* | mpixlf*)\n\t  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='--whole-archive$convenience --no-whole-archive'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'\n\t  if test yes = \"$supports_anon_versioning\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n              cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n              echo \"local: *; };\" >> $output_objdir/$libname.ver~\n              $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'\n\t  fi\n\t  ;;\n\tesac\n      else\n        _LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | $GREP 'BFD 2\\.8' > /dev/null; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.1[[0-5]].*)\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 cannot\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  # For security reasons, it is highly recommended that you always\n\t  # use absolute paths for naming shared libraries, and exclude the\n\t  # DT_RUNPATH tag from executables and libraries.  But doing so\n\t  # requires that you compile everything twice, which is a pain.\n\t  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test no = \"$_LT_TAGVAR(ld_shlibs, $1)\"; then\n      runpath_var=\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      if test yes = \"$GCC\" && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix[[4-9]]*)\n      if test ia64 = \"$host_cpu\"; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to GNU nm, but means don't demangle to AIX nm.\n\t# Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n\t# weak defined symbols like other global defined symbols, whereas\n\t# GNU nm marks them as \"W\".\n\t# While the 'weak' keyword is ignored in the Export File, we need\n\t# it in the Import File for the 'aix-soname' feature, so we have\n\t# to replace the \"-B\" option with \"-P\" for AIX nm.\n\tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\\''s/B\\([[^B]]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && ([substr](\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# have runtime linking enabled, and use it for executables.\n\t# For shared libraries, we enable/disable runtime linking\n\t# depending on the kind of the shared library created -\n\t# when \"with_aix_soname,aix_use_runtimelinking\" is:\n\t# \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\t# \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n\t#            lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a(lib.so.V) shared, rtl:no\n\t# \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t  for ld_flag in $LDFLAGS; do\n\t  if (test x-brtl = \"x$ld_flag\" || test x-Wl,-brtl = \"x$ld_flag\"); then\n\t    aix_use_runtimelinking=yes\n\t    break\n\t  fi\n\t  done\n\t  if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t    # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t    # so we don't have lib.a shared libs to link our executables.\n\t    # We have to force runtime linking in this case.\n\t    aix_use_runtimelinking=yes\n\t    LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t  fi\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_TAGVAR(archive_cmds, $1)=''\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(file_list_spec, $1)='$wl-f,'\n      case $with_aix_soname,$aix_use_runtimelinking in\n      aix,*) ;; # traditional, no import file\n      svr4,* | *,yes) # use import file\n\t# The Import File defines what to hardcode.\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n\t;;\n      esac\n\n      if test yes = \"$GCC\"; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t   strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t  # We have reworked collect2\n\t  :\n\t  else\n\t  # We have old collect2\n\t  _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test yes = \"$aix_use_runtimelinking\"; then\n\t  shared_flag=\"$shared_flag \"'$wl-G'\n\tfi\n\t# Need to ensure runtime linking is disabled for the traditional\n\t# shared library, or the linker may eventually find shared libraries\n\t# /with/ Import File - we do not want to mix them.\n\tshared_flag_aix='-shared'\n\tshared_flag_svr4='-shared $wl-G'\n      else\n\t# not using gcc\n\tif test ia64 = \"$host_cpu\"; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag='$wl-G'\n\t  else\n\t    shared_flag='$wl-bM:SRE'\n\t  fi\n\t  shared_flag_aix='$wl-bM:SRE'\n\t  shared_flag_svr4='$wl-G'\n\tfi\n      fi\n\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      if test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n        # Determine the default libpath from the value encoded in an\n        # empty executable.\n        _LT_SYS_MODULE_PATH_AIX([$1])\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n      else\n\tif test ia64 = \"$host_cpu\"; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an\n\t # empty executable.\n\t _LT_SYS_MODULE_PATH_AIX([$1])\n\t _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'\n\t  if test yes = \"$with_gnu_ld\"; then\n\t    # We only use this code for GNU lds that support --whole-archive.\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t  else\n\t    # Exported symbols can be pulled into shared objects from archives\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t  fi\n\t  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t  # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t  compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([[, ]]\\\\)%-berok\\\\1%g\"`'\n\t  if test svr4 != \"$with_aix_soname\"; then\n\t    # This is similar to how AIX traditionally builds its shared libraries.\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t  fi\n\t  if test aix != \"$with_aix_soname\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t  else\n\t    # used by -dlpreopen to get the symbols\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t  fi\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$RM -r $output_objdir/$realname.d'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    bsdi[[45]]*)\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      case $cc_basename in\n      cl*)\n\t# Native MSVC\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t_LT_TAGVAR(always_export_symbols, $1)=yes\n\t_LT_TAGVAR(file_list_spec, $1)='@'\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n            cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n            echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n          else\n            $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n          fi~\n          $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n          linknames='\n\t# The linker will not automatically build a static lib if we build a DLL.\n\t# _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t_LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n\t_LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1,DATA/'\\'' | $SED -e '\\''/^[[AITW]][[ ]]/s/.*[[ ]]//'\\'' | sort | uniq > $export_symbols'\n\t# Don't use ranlib\n\t_LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t_LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n          lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n          case $lt_outputfile in\n            *.exe|*.EXE) ;;\n            *)\n              lt_outputfile=$lt_outputfile.exe\n              lt_tool_outputfile=$lt_tool_outputfile.exe\n              ;;\n          esac~\n          if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n            $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n            $RM \"$lt_outputfile.manifest\";\n          fi'\n\t;;\n      *)\n\t# Assume MSVC wrapper\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all \"$deplibs\" | $SED '\\''s/ -lc$//'\\''` -link -dll~linknames='\n\t# The linker will automatically build a .lib file if we build a DLL.\n\t_LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t# FIXME: Should let the user specify the lib program.\n\t_LT_TAGVAR(old_archive_cmds, $1)='lib -OUT:$oldlib$oldobjs$old_deplibs'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      _LT_DARWIN_LINKER_FEATURES($1)\n      ;;\n\n    dgux*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2.*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | dragonfly*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n      ;;\n\n    hpux10*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\tm4_if($1, [], [\n\t  # Older versions of the 11.00 compiler do not understand -b yet\n\t  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)\n\t  _LT_LINKER_OPTION([if $CC understands -b],\n\t    _LT_TAGVAR(lt_cv_prog_compiler__b, $1), [-b],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],\n\t  [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'])\n\t  ;;\n\tesac\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t# Try to use the -exported_symbol ld option, if it does not\n\t# work, assume that -exports_file does not work either and\n\t# implicitly export all symbols.\n\t# This should be the same for all languages, so no per-tag cache variable.\n\tAC_CACHE_CHECK([whether the $host_os linker accepts -exported_symbol],\n\t  [lt_cv_irix_exported_symbol],\n\t  [save_LDFLAGS=$LDFLAGS\n\t   LDFLAGS=\"$LDFLAGS -shared $wl-exported_symbol ${wl}foo $wl-update_registry $wl/dev/null\"\n\t   AC_LINK_IFELSE(\n\t     [AC_LANG_SOURCE(\n\t        [AC_LANG_CASE([C], [[int foo (void) { return 0; }]],\n\t\t\t      [C++], [[int foo (void) { return 0; }]],\n\t\t\t      [Fortran 77], [[\n      subroutine foo\n      end]],\n\t\t\t      [Fortran], [[\n      subroutine foo\n      end]])])],\n\t      [lt_cv_irix_exported_symbol=yes],\n\t      [lt_cv_irix_exported_symbol=no])\n           LDFLAGS=$save_LDFLAGS])\n\tif test yes = \"$lt_cv_irix_exported_symbol\"; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations $wl-exports_file $wl$export_symbols -o $lib'\n\tfi\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -exports_file $export_symbols -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(inherit_rpath, $1)=yes\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    linux*)\n      case $cc_basename in\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n      esac\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *nto* | *qnx*)\n      ;;\n\n    openbsd* | bitrig*)\n      if test -f /usr/libexec/ld.so; then\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\tif test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags $wl-retain-symbols-file,$export_symbols'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\telse\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\tfi\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      shrext_cmds=.dll\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    osf3*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $pic_flag $libobjs $deplibs $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; printf \"%s\\\\n\" \"-hidden\">> $lib.exp~\n          $CC -shared$allow_undefined_flag $wl-input $wl$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~$RM $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(no_undefined_flag, $1)=' -z defs'\n      if test yes = \"$GCC\"; then\n\twlarc='$wl'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl-z ${wl}text $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n          $CC -shared $pic_flag $wl-z ${wl}text $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n      else\n\tcase `$CC -V 2>&1` in\n\t*\"Compilers 5.0\"*)\n\t  wlarc=''\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $LD -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'\n\t  ;;\n\t*)\n\t  wlarc='$wl'\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $CC -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n\t  ;;\n\tesac\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n\t# The compiler driver will combine and reorder linker options,\n\t# but understands '-z linker_flag'.  GCC discards it without '$wl',\n\t# but is careful enough not to reorder.\n\t# Supported since Solaris 2.6 (maybe 2.5.1?)\n\tif test yes = \"$GCC\"; then\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\telse\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\tfi\n\t;;\n      esac\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test sequent = \"$host_vendor\"; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We CANNOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n\n    if test sni = \"$host_vendor\"; then\n      case $host in\n      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Blargedynsym'\n\t;;\n      esac\n    fi\n  fi\n])\nAC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\ntest no = \"$_LT_TAGVAR(ld_shlibs, $1)\" && can_build_shared=no\n\n_LT_TAGVAR(with_gnu_ld, $1)=$with_gnu_ld\n\n_LT_DECL([], [libext], [0], [Old archive suffix (normally \"a\")])dnl\n_LT_DECL([], [shrext_cmds], [1], [Shared library suffix (normally \".so\")])dnl\n_LT_DECL([], [extract_expsyms_cmds], [2],\n    [The commands to extract the exported symbol list from a shared archive])\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test yes,yes = \"$GCC,$enable_shared\"; then\n    case $_LT_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_CACHE_CHECK([whether -lc should be explicitly linked in],\n\t[lt_cv_]_LT_TAGVAR(archive_cmds_need_lc, $1),\n\t[$RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$_LT_TAGVAR(lt_prog_compiler_wl, $1)\n\t  pic_flag=$_LT_TAGVAR(lt_prog_compiler_pic, $1)\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$_LT_TAGVAR(allow_undefined_flag, $1)\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\n\t  if AC_TRY_EVAL(_LT_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n\t  then\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t  else\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  fi\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\t])\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=$lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n_LT_TAGDECL([build_libtool_need_lc], [archive_cmds_need_lc], [0],\n    [Whether or not to add -lc for building shared libraries])\n_LT_TAGDECL([allow_libtool_libs_with_static_runtimes],\n    [enable_shared_with_static_runtimes], [0],\n    [Whether or not to disallow shared libs when runtime libs are static])\n_LT_TAGDECL([], [export_dynamic_flag_spec], [1],\n    [Compiler flag to allow reflexive dlopens])\n_LT_TAGDECL([], [whole_archive_flag_spec], [1],\n    [Compiler flag to generate shared objects directly from archives])\n_LT_TAGDECL([], [compiler_needs_object], [1],\n    [Whether the compiler copes with passing no objects directly])\n_LT_TAGDECL([], [old_archive_from_new_cmds], [2],\n    [Create an old-style archive from a shared archive])\n_LT_TAGDECL([], [old_archive_from_expsyms_cmds], [2],\n    [Create a temporary old-style archive to link instead of a shared archive])\n_LT_TAGDECL([], [archive_cmds], [2], [Commands used to build a shared archive])\n_LT_TAGDECL([], [archive_expsym_cmds], [2])\n_LT_TAGDECL([], [module_cmds], [2],\n    [Commands used to build a loadable module if different from building\n    a shared archive.])\n_LT_TAGDECL([], [module_expsym_cmds], [2])\n_LT_TAGDECL([], [with_gnu_ld], [1],\n    [Whether we are building with GNU ld or not])\n_LT_TAGDECL([], [allow_undefined_flag], [1],\n    [Flag that allows shared libraries with undefined symbols to be built])\n_LT_TAGDECL([], [no_undefined_flag], [1],\n    [Flag that enforces no undefined symbols])\n_LT_TAGDECL([], [hardcode_libdir_flag_spec], [1],\n    [Flag to hardcode $libdir into a binary during linking.\n    This must work even if $libdir does not exist])\n_LT_TAGDECL([], [hardcode_libdir_separator], [1],\n    [Whether we need a single \"-rpath\" flag with a separated argument])\n_LT_TAGDECL([], [hardcode_direct], [0],\n    [Set to \"yes\" if using DIR/libNAME$shared_ext during linking hardcodes\n    DIR into the resulting binary])\n_LT_TAGDECL([], [hardcode_direct_absolute], [0],\n    [Set to \"yes\" if using DIR/libNAME$shared_ext during linking hardcodes\n    DIR into the resulting binary and the resulting library dependency is\n    \"absolute\", i.e impossible to change by setting $shlibpath_var if the\n    library is relocated])\n_LT_TAGDECL([], [hardcode_minus_L], [0],\n    [Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_shlibpath_var], [0],\n    [Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_automatic], [0],\n    [Set to \"yes\" if building a shared library automatically hardcodes DIR\n    into the library and all subsequent libraries and executables linked\n    against it])\n_LT_TAGDECL([], [inherit_rpath], [0],\n    [Set to yes if linker adds runtime paths of dependent libraries\n    to runtime path list])\n_LT_TAGDECL([], [link_all_deplibs], [0],\n    [Whether libtool must link a program against all its dependency libraries])\n_LT_TAGDECL([], [always_export_symbols], [0],\n    [Set to \"yes\" if exported symbols are required])\n_LT_TAGDECL([], [export_symbols_cmds], [2],\n    [The commands to list exported symbols])\n_LT_TAGDECL([], [exclude_expsyms], [1],\n    [Symbols that should not be listed in the preloaded symbols])\n_LT_TAGDECL([], [include_expsyms], [1],\n    [Symbols that must always be exported])\n_LT_TAGDECL([], [prelink_cmds], [2],\n    [Commands necessary for linking programs (against libraries) with templates])\n_LT_TAGDECL([], [postlink_cmds], [2],\n    [Commands necessary for finishing linking programs])\n_LT_TAGDECL([], [file_list_spec], [1],\n    [Specify filename containing input files])\ndnl FIXME: Not yet implemented\ndnl _LT_TAGDECL([], [thread_safe_flag_spec], [1],\ndnl    [Compiler flag to generate thread safe objects])\n])# _LT_LINKER_SHLIBS\n\n\n# _LT_LANG_C_CONFIG([TAG])\n# ------------------------\n# Ensure that the configuration variables for a C compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_C_CONFIG],\n[m4_require([_LT_DECL_EGREP])dnl\nlt_save_CC=$CC\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}'\n\n_LT_TAG_COMPILER\n# Save the default compiler, since it gets overwritten when the other\n# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.\ncompiler_DEFAULT=$CC\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_SYS_DYNAMIC_LINKER($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n  LT_SYS_DLOPEN_SELF\n  _LT_CMD_STRIPLIB\n\n  # Report what library types will actually be built\n  AC_MSG_CHECKING([if libtool supports shared libraries])\n  AC_MSG_RESULT([$can_build_shared])\n\n  AC_MSG_CHECKING([whether to build shared libraries])\n  test no = \"$can_build_shared\" && enable_shared=no\n\n  # On AIX, shared libraries and static libraries use the same namespace, and\n  # are all built from PIC.\n  case $host_os in\n  aix3*)\n    test yes = \"$enable_shared\" && enable_static=no\n    if test -n \"$RANLIB\"; then\n      archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n      postinstall_cmds='$RANLIB $lib'\n    fi\n    ;;\n\n  aix[[4-9]]*)\n    if test ia64 != \"$host_cpu\"; then\n      case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n      yes,aix,yes) ;;\t\t\t# shared object as lib.so file only\n      yes,svr4,*) ;;\t\t\t# shared object as lib.so archive member only\n      yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n      esac\n    fi\n    ;;\n  esac\n  AC_MSG_RESULT([$enable_shared])\n\n  AC_MSG_CHECKING([whether to build static libraries])\n  # Make sure either enable_shared or enable_static is yes.\n  test yes = \"$enable_shared\" || enable_static=yes\n  AC_MSG_RESULT([$enable_static])\n\n  _LT_CONFIG($1)\nfi\nAC_LANG_POP\nCC=$lt_save_CC\n])# _LT_LANG_C_CONFIG\n\n\n# _LT_LANG_CXX_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a C++ compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_CXX_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nif test -n \"$CXX\" && ( test no != \"$CXX\" &&\n    ( (test g++ = \"$CXX\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test g++ != \"$CXX\"))); then\n  AC_PROG_CXXCPP\nelse\n  _lt_caught_CXX_error=yes\nfi\n\nAC_LANG_PUSH(C++)\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(compiler_needs_object, $1)=no\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the CXX compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_caught_CXX_error\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"int some_variable = 0;\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_CFLAGS=$CFLAGS\n  lt_save_LD=$LD\n  lt_save_GCC=$GCC\n  GCC=$GXX\n  lt_save_with_gnu_ld=$with_gnu_ld\n  lt_save_path_LD=$lt_cv_path_LD\n  if test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\n  else\n    $as_unset lt_cv_prog_gnu_ld\n  fi\n  if test -n \"${lt_cv_path_LDCXX+set}\"; then\n    lt_cv_path_LD=$lt_cv_path_LDCXX\n  else\n    $as_unset lt_cv_path_LD\n  fi\n  test -z \"${LDCXX+set}\" || LD=$LDCXX\n  CC=${CXX-\"c++\"}\n  CFLAGS=$CXXFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    # We don't want -fno-exception when compiling C++ code, so set the\n    # no_builtin_flag separately\n    if test yes = \"$GXX\"; then\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n    else\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n    fi\n\n    if test yes = \"$GXX\"; then\n      # Set up default GNU C++ configuration\n\n      LT_PATH_LD\n\n      # Check if GNU C++ uses GNU ld as the underlying linker, since the\n      # archiving commands below assume that GNU ld is being used.\n      if test yes = \"$with_gnu_ld\"; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\n        # If archive_cmds runs LD, not CC, wlarc should be empty\n        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n        #     investigate it a little bit more. (MM)\n        wlarc='$wl'\n\n        # ancient GNU ld didn't support --whole-archive et. al.\n        if eval \"`$CC -print-prog-name=ld` --help 2>&1\" |\n\t  $GREP 'no-whole-archive' > /dev/null; then\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n        else\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\n        fi\n      else\n        with_gnu_ld=no\n        wlarc=\n\n        # A generic and very simple default shared library creation\n        # command for GNU C++ for the case where it uses the native\n        # linker, instead of GNU ld.  If possible, this setting should\n        # overridden to take advantage of the native linker features on\n        # the platform it is being used on.\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n      fi\n\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n    else\n      GXX=no\n      with_gnu_ld=no\n      wlarc=\n    fi\n\n    # PORTME: fill in a description of your system's C++ link characteristics\n    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n    _LT_TAGVAR(ld_shlibs, $1)=yes\n    case $host_os in\n      aix3*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n      aix[[4-9]]*)\n        if test ia64 = \"$host_cpu\"; then\n          # On IA64, the linker does run time linking by default, so we don't\n          # have to do anything special.\n          aix_use_runtimelinking=no\n          exp_sym_flag='-Bexport'\n          no_entry_flag=\n        else\n          aix_use_runtimelinking=no\n\n          # Test if we are trying to use run time linking or normal\n          # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n          # have runtime linking enabled, and use it for executables.\n          # For shared libraries, we enable/disable runtime linking\n          # depending on the kind of the shared library created -\n          # when \"with_aix_soname,aix_use_runtimelinking\" is:\n          # \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n          #            lib.a           static archive\n          # \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n          #            lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a(lib.so.V) shared, rtl:no\n          # \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a           static archive\n          case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t    for ld_flag in $LDFLAGS; do\n\t      case $ld_flag in\n\t      *-brtl*)\n\t        aix_use_runtimelinking=yes\n\t        break\n\t        ;;\n\t      esac\n\t    done\n\t    if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t      # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t      # so we don't have lib.a shared libs to link our executables.\n\t      # We have to force runtime linking in this case.\n\t      aix_use_runtimelinking=yes\n\t      LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t    fi\n\t    ;;\n          esac\n\n          exp_sym_flag='-bexport'\n          no_entry_flag='-bnoentry'\n        fi\n\n        # When large executables or shared objects are built, AIX ld can\n        # have problems creating the table of contents.  If linking a library\n        # or program results in \"error TOC overflow\" add -mminimal-toc to\n        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n        _LT_TAGVAR(archive_cmds, $1)=''\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        _LT_TAGVAR(file_list_spec, $1)='$wl-f,'\n        case $with_aix_soname,$aix_use_runtimelinking in\n        aix,*) ;;\t# no import file\n        svr4,* | *,yes) # use import file\n          # The Import File defines what to hardcode.\n          _LT_TAGVAR(hardcode_direct, $1)=no\n          _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n          ;;\n        esac\n\n        if test yes = \"$GXX\"; then\n          case $host_os in aix4.[[012]]|aix4.[[012]].*)\n          # We only want to do this on AIX 4.2 and lower, the check\n          # below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t     strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t    # We have reworked collect2\n\t    :\n\t  else\n\t    # We have old collect2\n\t    _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t    # It fails to find uninstalled libraries when the uninstalled\n\t    # path is not listed in the libpath.  Setting hardcode_minus_L\n\t    # to unsupported forces relinking\n\t    _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n          esac\n          shared_flag='-shared'\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag=$shared_flag' $wl-G'\n\t  fi\n\t  # Need to ensure runtime linking is disabled for the traditional\n\t  # shared library, or the linker may eventually find shared libraries\n\t  # /with/ Import File - we do not want to mix them.\n\t  shared_flag_aix='-shared'\n\t  shared_flag_svr4='-shared $wl-G'\n        else\n          # not using gcc\n          if test ia64 = \"$host_cpu\"; then\n\t  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t  # chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n          else\n\t    if test yes = \"$aix_use_runtimelinking\"; then\n\t      shared_flag='$wl-G'\n\t    else\n\t      shared_flag='$wl-bM:SRE'\n\t    fi\n\t    shared_flag_aix='$wl-bM:SRE'\n\t    shared_flag_svr4='$wl-G'\n          fi\n        fi\n\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'\n        # It seems that -bexpall does not export symbols beginning with\n        # underscore (_), so it is better to generate a list of symbols to\n\t# export.\n        _LT_TAGVAR(always_export_symbols, $1)=yes\n\tif test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n          # Warning - without using the other runtime loading flags (-brtl),\n          # -berok will link without error, but may produce a broken library.\n          # The \"-G\" linker flag allows undefined symbols.\n          _LT_TAGVAR(no_undefined_flag, $1)='-bernotok'\n          # Determine the default libpath from the value encoded in an empty\n          # executable.\n          _LT_SYS_MODULE_PATH_AIX([$1])\n          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n        else\n          if test ia64 = \"$host_cpu\"; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n          else\n\t    # Determine the default libpath from the value encoded in an\n\t    # empty executable.\n\t    _LT_SYS_MODULE_PATH_AIX([$1])\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t    # Warning - without using the other run time loading flags,\n\t    # -berok will link without error, but may produce a broken library.\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'\n\t    if test yes = \"$with_gnu_ld\"; then\n\t      # We only use this code for GNU lds that support --whole-archive.\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    else\n\t      # Exported symbols can be pulled into shared objects from archives\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t    fi\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t    # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t    compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([[, ]]\\\\)%-berok\\\\1%g\"`'\n\t    if test svr4 != \"$with_aix_soname\"; then\n\t      # This is similar to how AIX traditionally builds its shared\n\t      # libraries. Need -bnortl late, we may have -brtl in LDFLAGS.\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t    fi\n\t    if test aix != \"$with_aix_soname\"; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t    else\n\t      # used by -dlpreopen to get the symbols\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t    fi\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$RM -r $output_objdir/$realname.d'\n          fi\n        fi\n        ;;\n\n      beos*)\n\tif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t  # support --undefined.  This deserves some investigation.  FIXME\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      chorus*)\n        case $cc_basename in\n          *)\n\t  # FIXME: insert proper C++ library support\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\t  ;;\n        esac\n        ;;\n\n      cygwin* | mingw* | pw32* | cegcc*)\n\tcase $GXX,$cc_basename in\n\t,cl* | no,cl*)\n\t  # Native MSVC\n\t  # hardcode_libdir_flag_spec is actually meaningless, as there is\n\t  # no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=yes\n\t  _LT_TAGVAR(file_list_spec, $1)='@'\n\t  # Tell ltmain to make .lib files, not .a files.\n\t  libext=lib\n\t  # Tell ltmain to make .dll files, not .so files.\n\t  shrext_cmds=.dll\n\t  # FIXME: Setting linknames here is a bad hack.\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n              cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n              echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n            else\n              $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n            fi~\n            $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n            linknames='\n\t  # The linker will not automatically build a static lib if we build a DLL.\n\t  # _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t  # Don't use ranlib\n\t  _LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t  _LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n            lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n            case $lt_outputfile in\n              *.exe|*.EXE) ;;\n              *)\n                lt_outputfile=$lt_outputfile.exe\n                lt_tool_outputfile=$lt_tool_outputfile.exe\n                ;;\n            esac~\n            func_to_tool_file \"$lt_outputfile\"~\n            if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n              $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n              $RM \"$lt_outputfile.manifest\";\n            fi'\n\t  ;;\n\t*)\n\t  # g++\n\t  # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n\t  # as there is no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=no\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n\t  if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t    # If the export-symbols file already is a .def file, use it as\n\t    # is; otherwise, prepend EXPORTS...\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n              cp $export_symbols $output_objdir/$soname.def;\n            else\n              echo EXPORTS > $output_objdir/$soname.def;\n              cat $export_symbols >> $output_objdir/$soname.def;\n            fi~\n            $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t  ;;\n\tesac\n\t;;\n      darwin* | rhapsody*)\n        _LT_DARWIN_LINKER_FEATURES($1)\n\t;;\n\n      os2*)\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\tshrext_cmds=.dll\n\t_LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  emxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  prefix_cmds=\"$SED\"~\n\t  if test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t    prefix_cmds=\"$prefix_cmds -e 1d\";\n\t  fi~\n\t  prefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\t  cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\t_LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n\n      dgux*)\n        case $cc_basename in\n          ec++*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          ghcx*)\n\t    # Green Hills C++ Compiler\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      freebsd2.*)\n        # C++ shared libraries reported to be fairly broken before\n\t# switch to ELF\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      freebsd-elf*)\n        _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n        ;;\n\n      freebsd* | dragonfly*)\n        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n        # conventions\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n        ;;\n\n      haiku*)\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        ;;\n\n      hpux9*)\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t             # but as the default\n\t\t\t\t             # location of the library.\n\n        case $cc_basename in\n          CC*)\n            # FIXME: insert proper C++ library support\n            _LT_TAGVAR(ld_shlibs, $1)=no\n            ;;\n          aCC*)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            # Commands to make compiler produce verbose output that lists\n            # what \"hidden\" libraries, object files and flags are used when\n            # linking a shared library.\n            #\n            # There doesn't appear to be a way to prevent this compiler from\n            # explicitly linking system object files so we need to strip them\n            # from the output so that they don't get included in the library\n            # dependencies.\n            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP \"\\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n            ;;\n          *)\n            if test yes = \"$GXX\"; then\n              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            else\n              # FIXME: insert proper C++ library support\n              _LT_TAGVAR(ld_shlibs, $1)=no\n            fi\n            ;;\n        esac\n        ;;\n\n      hpux10*|hpux11*)\n        if test no = \"$with_gnu_ld\"; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n          case $host_cpu in\n            hppa*64*|ia64*)\n              ;;\n            *)\n\t      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n              ;;\n          esac\n        fi\n        case $host_cpu in\n          hppa*64*|ia64*)\n            _LT_TAGVAR(hardcode_direct, $1)=no\n            _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n            ;;\n          *)\n            _LT_TAGVAR(hardcode_direct, $1)=yes\n            _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t         # but as the default\n\t\t\t\t\t         # location of the library.\n            ;;\n        esac\n\n        case $cc_basename in\n          CC*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          aCC*)\n\t    case $host_cpu in\n\t      hppa*64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      ia64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      *)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t    esac\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP \"\\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        case $host_cpu in\n\t          hppa*64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          ia64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          *)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t        esac\n\t      fi\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      interix[[3-9]]*)\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n\t# Instead, shared libraries are loaded at an image base (0x10000000 by\n\t# default) and relocated if they conflict, which is a slow very memory\n\t# consuming and fragmenting process.  To avoid this, we pick a random,\n\t# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n\t# time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t;;\n      irix5* | irix6*)\n        case $cc_basename in\n          CC*)\n\t    # SGI C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t      else\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` -o $lib'\n\t      fi\n\t    fi\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\t    ;;\n        esac\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(inherit_rpath, $1)=yes\n        ;;\n\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib $wl-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP \"ld\"`; rm -f libconftest$shared_ext; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t    ;;\n\t  icpc* | ecpc* )\n\t    # Intel C++\n\t    with_gnu_ld=yes\n\t    # version 8.0 and above of icpc choke on multiply defined symbols\n\t    # if we add $predep_objects and $postdep_objects, however 7.1 and\n\t    # earlier do not add the objects themselves.\n\t    case `$CC -V 2>&1` in\n\t      *\"Version 7.\"*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t      *)  # Version 8.0 or newer\n\t        tmp_idyn=\n\t        case $host_cpu in\n\t\t  ia64*) tmp_idyn=' -i_dynamic';;\n\t\tesac\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t    esac\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    ;;\n          pgCC* | pgcpp*)\n            # Portland Group C++ compiler\n\t    case `$CC -V` in\n\t    *pgCC\\ [[1-5]].* | *pgcpp\\ [[1-5]].*)\n\t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n               rm -rf $tpldir~\n               $CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n               compile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n\t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n                $AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n                $RANLIB $oldlib'\n\t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    *) # Version 6 and above use weak symbols\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl--rpath $wl$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n            ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname  -o $lib $wl-retain-symbols-file $wl$export_symbols'\n\n\t    runpath_var=LD_RUN_PATH\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"X$list\" | $Xsed'\n\t    ;;\n\t  xl* | mpixl* | bgxl*)\n\t    # IBM XL 8.0 on PPC, with GNU ld\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    if test yes = \"$supports_anon_versioning\"; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n                cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n                echo \"local: *; };\" >> $output_objdir/$libname.ver~\n                $CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n\t    fi\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file $wl$export_symbols'\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t      _LT_TAGVAR(compiler_needs_object, $1)=yes\n\n\t      # Not sure whether something based on\n\t      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1\n\t      # would be better.\n\t      output_verbose_link_cmd='func_echo_all'\n\n\t      # Archives containing C++ object files must be created using\n\t      # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t      # necessary to make sure instantiated templates are included\n\t      # in the archive.\n\t      _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n\n      lynxos*)\n        # FIXME: insert proper C++ library support\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      m88k*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      mvs*)\n        case $cc_basename in\n          cxx*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\t  *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\tesac\n\t;;\n\n      netbsd*)\n        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n\t  wlarc=\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tfi\n\t# Workaround some broken pre-1.5 toolchains\n\toutput_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n\t;;\n\n      *nto* | *qnx*)\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n\t;;\n\n      openbsd* | bitrig*)\n\tif test -f /usr/libexec/ld.so; then\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file,$export_symbols -o $lib'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n\t  fi\n\t  output_verbose_link_cmd=func_echo_all\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      osf3* | osf4* | osf5*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo \"$lib\" | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Archives containing C++ object files must be created using\n\t    # the KAI C++ compiler.\n\t    case $host in\n\t      osf3*) _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs' ;;\n\t      *) _LT_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs' ;;\n\t    esac\n\t    ;;\n          RCC*)\n\t    # Rational C++ 2.4.1\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          cxx*)\n\t    case $host in\n\t      osf3*)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t\t;;\n\t      *)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n                  echo \"-hidden\">> $lib.exp~\n                  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname $wl-input $wl$lib.exp  `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~\n                  $RM $lib.exp'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t\t;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\" | $GREP -v \"ld:\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n\t  *)\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t      case $host in\n\t        osf3*)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t        *)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t      esac\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t      # Commands to make compiler produce verbose output that lists\n\t      # what \"hidden\" libraries, object files and flags are used when\n\t      # linking a shared library.\n\t      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      psos*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      sunos4*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.x\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          lcc*)\n\t    # Lucid\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      solaris*)\n        case $cc_basename in\n          CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n            _LT_TAGVAR(archive_cmds_need_lc,$1)=yes\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n              $CC -G$allow_undefined_flag $wl-M $wl$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t    _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t    case $host_os in\n\t      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t      *)\n\t\t# The compiler driver will combine and reorder linker options,\n\t\t# but understands '-z linker_flag'.\n\t        # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t\t_LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\t        ;;\n\t    esac\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\n\t    output_verbose_link_cmd='func_echo_all'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t    ;;\n          gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\n\t    # The C++ compiler must be used to create the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    # GNU C++ compiler with Solaris linker\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' $wl-z ${wl}defs'\n\t      if $CC --version | $GREP -v '^2\\.7' > /dev/null; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -shared $pic_flag -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      else\n\t        # g++ 2.7 appears to require '-G' NOT '-shared' on this\n\t        # platform.\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -G -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      fi\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $wl$libdir'\n\t      case $host_os in\n\t\tsolaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t\t*)\n\t\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\t\t  ;;\n\t      esac\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      case $cc_basename in\n        CC*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n      esac\n      ;;\n\n      sysv5* | sco3.2v5* | sco5v6*)\n\t# Note: We CANNOT use -z defs as we might desire, because we do not\n\t# link with -lc, and that would cause any symbols used from libc to\n\t# always be unresolved, which means just about no library would\n\t# ever link correctly.  If we're not using GNU ld we use -z text\n\t# though, which does catch some bad symbols but isn't as heavy-handed\n\t# as -z defs.\n\t_LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n\t_LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'\n\t_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n\t_LT_TAGVAR(link_all_deplibs, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'\n\trunpath_var='LD_RUN_PATH'\n\n\tcase $cc_basename in\n          CC*)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~\n              '\"$_LT_TAGVAR(old_archive_cmds, $1)\"\n\t    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~\n              '\"$_LT_TAGVAR(reload_cmds, $1)\"\n\t    ;;\n\t  *)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    ;;\n\tesac\n      ;;\n\n      tandem*)\n        case $cc_basename in\n          NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      vxworks*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      *)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n    esac\n\n    AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\n    test no = \"$_LT_TAGVAR(ld_shlibs, $1)\" && can_build_shared=no\n\n    _LT_TAGVAR(GCC, $1)=$GXX\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\n  LDCXX=$LD\n  LD=$lt_save_LD\n  GCC=$lt_save_GCC\n  with_gnu_ld=$lt_save_with_gnu_ld\n  lt_cv_path_LDCXX=$lt_cv_path_LD\n  lt_cv_path_LD=$lt_save_path_LD\n  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\n  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\nfi # test yes != \"$_lt_caught_CXX_error\"\n\nAC_LANG_POP\n])# _LT_LANG_CXX_CONFIG\n\n\n# _LT_FUNC_STRIPNAME_CNF\n# ----------------------\n# func_stripname_cnf prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n#\n# This function is identical to the (non-XSI) version of func_stripname,\n# except this one can be used by m4 code that may be executed by configure,\n# rather than the libtool script.\nm4_defun([_LT_FUNC_STRIPNAME_CNF],[dnl\nAC_REQUIRE([_LT_DECL_SED])\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])\nfunc_stripname_cnf ()\n{\n  case @S|@2 in\n  .*) func_stripname_result=`$ECHO \"@S|@3\" | $SED \"s%^@S|@1%%; s%\\\\\\\\@S|@2\\$%%\"`;;\n  *)  func_stripname_result=`$ECHO \"@S|@3\" | $SED \"s%^@S|@1%%; s%@S|@2\\$%%\"`;;\n  esac\n} # func_stripname_cnf\n])# _LT_FUNC_STRIPNAME_CNF\n\n\n# _LT_SYS_HIDDEN_LIBDEPS([TAGNAME])\n# ---------------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nm4_defun([_LT_SYS_HIDDEN_LIBDEPS],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nAC_REQUIRE([_LT_FUNC_STRIPNAME_CNF])dnl\n# Dependencies to place before and after the object being linked:\n_LT_TAGVAR(predep_objects, $1)=\n_LT_TAGVAR(postdep_objects, $1)=\n_LT_TAGVAR(predeps, $1)=\n_LT_TAGVAR(postdeps, $1)=\n_LT_TAGVAR(compiler_lib_search_path, $1)=\n\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nm4_if([$1], [], [cat > conftest.$ac_ext <<_LT_EOF\nint a;\nvoid foo (void) { a = 0; }\n_LT_EOF\n], [$1], [CXX], [cat > conftest.$ac_ext <<_LT_EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\n_LT_EOF\n], [$1], [F77], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [FC], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [GCJ], [cat > conftest.$ac_ext <<_LT_EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\n_LT_EOF\n], [$1], [GO], [cat > conftest.$ac_ext <<_LT_EOF\npackage foo\nfunc foo() {\n}\n_LT_EOF\n])\n\n_lt_libdeps_save_CFLAGS=$CFLAGS\ncase \"$CC $CFLAGS \" in #(\n*\\ -flto*\\ *) CFLAGS=\"$CFLAGS -fno-lto\" ;;\n*\\ -fwhopr*\\ *) CFLAGS=\"$CFLAGS -fno-whopr\" ;;\n*\\ -fuse-linker-plugin*\\ *) CFLAGS=\"$CFLAGS -fno-use-linker-plugin\" ;;\nesac\n\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  for p in `eval \"$output_verbose_link_cmd\"`; do\n    case $prev$p in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test x-L = \"$p\" ||\n          test x-R = \"$p\"; then\n\t prev=$p\n\t continue\n       fi\n\n       # Expand the sysroot to ease extracting the directories later.\n       if test -z \"$prev\"; then\n         case $p in\n         -L*) func_stripname_cnf '-L' '' \"$p\"; prev=-L; p=$func_stripname_result ;;\n         -R*) func_stripname_cnf '-R' '' \"$p\"; prev=-R; p=$func_stripname_result ;;\n         -l*) func_stripname_cnf '-l' '' \"$p\"; prev=-l; p=$func_stripname_result ;;\n         esac\n       fi\n       case $p in\n       =*) func_stripname_cnf '=' '' \"$p\"; p=$lt_sysroot$func_stripname_result ;;\n       esac\n       if test no = \"$pre_test_object_deps_done\"; then\n\t case $prev in\n\t -L | -R)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=$prev$p\n\t   else\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_TAGVAR(compiler_lib_search_path, $1)} $prev$p\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_TAGVAR(postdeps, $1)\"; then\n\t   _LT_TAGVAR(postdeps, $1)=$prev$p\n\t else\n\t   _LT_TAGVAR(postdeps, $1)=\"${_LT_TAGVAR(postdeps, $1)} $prev$p\"\n\t fi\n       fi\n       prev=\n       ;;\n\n    *.lto.$objext) ;; # Ignore GCC LTO objects\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test no = \"$pre_test_object_deps_done\"; then\n\t if test -z \"$_LT_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_TAGVAR(predep_objects, $1)=$p\n\t else\n\t   _LT_TAGVAR(predep_objects, $1)=\"$_LT_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_TAGVAR(postdep_objects, $1)=$p\n\t else\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$_LT_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$RM -f confest.$objext\nCFLAGS=$_lt_libdeps_save_CFLAGS\n\n# PORTME: override above test on systems where it is broken\nm4_if([$1], [CXX],\n[case $host_os in\ninterix[[3-9]]*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  _LT_TAGVAR(predep_objects,$1)=\n  _LT_TAGVAR(postdep_objects,$1)=\n  _LT_TAGVAR(postdeps,$1)=\n  ;;\nesac\n])\n\ncase \" $_LT_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=\nif test -n \"${_LT_TAGVAR(compiler_lib_search_path, $1)}\"; then\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo \" ${_LT_TAGVAR(compiler_lib_search_path, $1)}\" | $SED -e 's! -L! !g' -e 's!^ !!'`\nfi\n_LT_TAGDECL([], [compiler_lib_search_dirs], [1],\n    [The directories searched by this compiler when creating a shared library])\n_LT_TAGDECL([], [predep_objects], [1],\n    [Dependencies to place before and after the objects being linked to\n    create a shared library])\n_LT_TAGDECL([], [postdep_objects], [1])\n_LT_TAGDECL([], [predeps], [1])\n_LT_TAGDECL([], [postdeps], [1])\n_LT_TAGDECL([], [compiler_lib_search_path], [1],\n    [The library search path used internally by the compiler when linking\n    a shared library])\n])# _LT_SYS_HIDDEN_LIBDEPS\n\n\n# _LT_LANG_F77_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a Fortran 77 compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_F77_CONFIG],\n[AC_LANG_PUSH(Fortran 77)\nif test -z \"$F77\" || test no = \"$F77\"; then\n  _lt_disable_F77=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the F77 compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_disable_F77\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${F77-\"f77\"}\n  CFLAGS=$FFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n  GCC=$G77\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test no = \"$can_build_shared\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test yes = \"$enable_shared\" && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test ia64 != \"$host_cpu\"; then\n\t  case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n\t  yes,aix,yes) ;;\t\t# shared object as lib.so file only\n\t  yes,svr4,*) ;;\t\t# shared object as lib.so archive member only\n\t  yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n\t  esac\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test yes = \"$enable_shared\" || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=$G77\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test yes != \"$_lt_disable_F77\"\n\nAC_LANG_POP\n])# _LT_LANG_F77_CONFIG\n\n\n# _LT_LANG_FC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for a Fortran compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_FC_CONFIG],\n[AC_LANG_PUSH(Fortran)\n\nif test -z \"$FC\" || test no = \"$FC\"; then\n  _lt_disable_FC=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for fc test sources.\nac_ext=${ac_fc_srcext-f}\n\n# Object file extension for compiled fc test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the FC compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_disable_FC\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${FC-\"f95\"}\n  CFLAGS=$FCFLAGS\n  compiler=$CC\n  GCC=$ac_cv_fc_compiler_gnu\n\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test no = \"$can_build_shared\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test yes = \"$enable_shared\" && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test ia64 != \"$host_cpu\"; then\n\t  case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n\t  yes,aix,yes) ;;\t\t# shared object as lib.so file only\n\t  yes,svr4,*) ;;\t\t# shared object as lib.so archive member only\n\t  yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n\t  esac\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test yes = \"$enable_shared\" || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=$ac_cv_fc_compiler_gnu\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test yes != \"$_lt_disable_FC\"\n\nAC_LANG_POP\n])# _LT_LANG_FC_CONFIG\n\n\n# _LT_LANG_GCJ_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Java Compiler compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_GCJ_CONFIG],\n[AC_REQUIRE([LT_PROG_GCJ])dnl\nAC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GCJ-\"gcj\"}\nCFLAGS=$GCJFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=$LD\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GCJ_CONFIG\n\n\n# _LT_LANG_GO_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Go compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_GO_CONFIG],\n[AC_REQUIRE([LT_PROG_GO])dnl\nAC_LANG_SAVE\n\n# Source file extension for Go test sources.\nac_ext=go\n\n# Object file extension for compiled Go test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"package main; func main() { }\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='package main; func main() { }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GOC-\"gccgo\"}\nCFLAGS=$GOFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=$LD\n_LT_CC_BASENAME([$compiler])\n\n# Go did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GO_CONFIG\n\n\n# _LT_LANG_RC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for the Windows resource compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_RC_CONFIG],\n[AC_REQUIRE([LT_PROG_RC])dnl\nAC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=$lt_simple_compile_test_code\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=\nCC=${RC-\"windres\"}\nCFLAGS=\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nif test -n \"$compiler\"; then\n  :\n  _LT_CONFIG($1)\nfi\n\nGCC=$lt_save_GCC\nAC_LANG_RESTORE\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_RC_CONFIG\n\n\n# LT_PROG_GCJ\n# -----------\nAC_DEFUN([LT_PROG_GCJ],\n[m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],\n  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],\n    [AC_CHECK_TOOL(GCJ, gcj,)\n      test set = \"${GCJFLAGS+set}\" || GCJFLAGS=\"-g -O2\"\n      AC_SUBST(GCJFLAGS)])])[]dnl\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_GCJ], [LT_PROG_GCJ])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_GCJ], [])\n\n\n# LT_PROG_GO\n# ----------\nAC_DEFUN([LT_PROG_GO],\n[AC_CHECK_TOOL(GOC, gccgo,)\n])\n\n\n# LT_PROG_RC\n# ----------\nAC_DEFUN([LT_PROG_RC],\n[AC_CHECK_TOOL(RC, windres,)\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_RC], [LT_PROG_RC])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_RC], [])\n\n\n# _LT_DECL_EGREP\n# --------------\n# If we don't have a new enough Autoconf to choose the best grep\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_EGREP],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_REQUIRE([AC_PROG_FGREP])dnl\ntest -z \"$GREP\" && GREP=grep\n_LT_DECL([], [GREP], [1], [A grep program that handles long lines])\n_LT_DECL([], [EGREP], [1], [An ERE matcher])\n_LT_DECL([], [FGREP], [1], [A literal string matcher])\ndnl Non-bleeding-edge autoconf doesn't subst GREP, so do it here too\nAC_SUBST([GREP])\n])\n\n\n# _LT_DECL_OBJDUMP\n# --------------\n# If we don't have a new enough Autoconf to choose the best objdump\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_OBJDUMP],\n[AC_CHECK_TOOL(OBJDUMP, objdump, false)\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [An object symbol dumper])\nAC_SUBST([OBJDUMP])\n])\n\n# _LT_DECL_DLLTOOL\n# ----------------\n# Ensure DLLTOOL variable is set.\nm4_defun([_LT_DECL_DLLTOOL],\n[AC_CHECK_TOOL(DLLTOOL, dlltool, false)\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])\nAC_SUBST([DLLTOOL])\n])\n\n# _LT_DECL_SED\n# ------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nm4_defun([_LT_DECL_SED],\n[AC_PROG_SED\ntest -z \"$SED\" && SED=sed\nXsed=\"$SED -e 1s/^X//\"\n_LT_DECL([], [SED], [1], [A sed program that does not truncate output])\n_LT_DECL([], [Xsed], [\"\\$SED -e 1s/^X//\"],\n    [Sed that helps us avoid accidentally triggering echo(1) options like -n])\n])# _LT_DECL_SED\n\nm4_ifndef([AC_PROG_SED], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\n\nm4_defun([AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nIFS=$as_save_IFS\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f \"$lt_ac_sed\" && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test 10 -lt \"$lt_ac_count\" && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test \"$lt_ac_count\" -gt \"$lt_ac_max\"; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_SUBST([SED])\nAC_MSG_RESULT([$SED])\n])#AC_PROG_SED\n])#m4_ifndef\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_SED], [AC_PROG_SED])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_SED], [])\n\n\n# _LT_CHECK_SHELL_FEATURES\n# ------------------------\n# Find out whether the shell is Bourne or XSI compatible,\n# or has some other useful features.\nm4_defun([_LT_CHECK_SHELL_FEATURES],\n[if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then\n  lt_unset=unset\nelse\n  lt_unset=false\nfi\n_LT_DECL([], [lt_unset], [0], [whether the shell understands \"unset\"])dnl\n\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  lt_SP2NL='tr \\040 \\012'\n  lt_NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  lt_SP2NL='tr \\100 \\n'\n  lt_NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n_LT_DECL([SP2NL], [lt_SP2NL], [1], [turn spaces into newlines])dnl\n_LT_DECL([NL2SP], [lt_NL2SP], [1], [turn newlines into spaces])dnl\n])# _LT_CHECK_SHELL_FEATURES\n\n\n# _LT_PATH_CONVERSION_FUNCTIONS\n# -----------------------------\n# Determine what file name conversion functions should be used by\n# func_to_host_file (and, implicitly, by func_to_host_path).  These are needed\n# for certain cross-compile configurations and native mingw.\nm4_defun([_LT_PATH_CONVERSION_FUNCTIONS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_MSG_CHECKING([how to convert $build file names to $host format])\nAC_CACHE_VAL(lt_cv_to_host_file_cmd,\n[case $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_w32\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_w32\n        ;;\n    esac\n    ;;\n  *-*-cygwin* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_cygwin\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_noop\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_cygwin\n        ;;\n    esac\n    ;;\n  * ) # unhandled hosts (and \"normal\" native builds)\n    lt_cv_to_host_file_cmd=func_convert_file_noop\n    ;;\nesac\n])\nto_host_file_cmd=$lt_cv_to_host_file_cmd\nAC_MSG_RESULT([$lt_cv_to_host_file_cmd])\n_LT_DECL([to_host_file_cmd], [lt_cv_to_host_file_cmd],\n         [0], [convert $build file names to $host format])dnl\n\nAC_MSG_CHECKING([how to convert $build file names to toolchain format])\nAC_CACHE_VAL(lt_cv_to_tool_file_cmd,\n[#assume ordinary cross tools, or native build.\nlt_cv_to_tool_file_cmd=func_convert_file_noop\ncase $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_tool_file_cmd=func_convert_file_msys_to_w32\n        ;;\n    esac\n    ;;\nesac\n])\nto_tool_file_cmd=$lt_cv_to_tool_file_cmd\nAC_MSG_RESULT([$lt_cv_to_tool_file_cmd])\n_LT_DECL([to_tool_file_cmd], [lt_cv_to_tool_file_cmd],\n         [0], [convert $build files to toolchain format])dnl\n])# _LT_PATH_CONVERSION_FUNCTIONS\n",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/unix/config/ltmain.sh": "\n# libtool (GNU libtool) 2.4.2\n# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006,\n# 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n# Usage: $progname [OPTION]... [MODE-ARG]...\n#\n# Provide generalized library-building support services.\n#\n#       --config             show all configuration variables\n#       --debug              enable verbose shell tracing\n#   -n, --dry-run            display commands without modifying any files\n#       --features           display basic configuration information and exit\n#       --mode=MODE          use operation mode MODE\n#       --preserve-dup-deps  don't remove duplicate dependency libraries\n#       --quiet, --silent    don't print informational messages\n#       --no-quiet, --no-silent\n#                            print informational messages (default)\n#       --no-warn            don't display warning messages\n#       --tag=TAG            use configuration variables from tag TAG\n#   -v, --verbose            print more informational messages than default\n#       --no-verbose         don't print the extra informational messages\n#       --version            print version information\n#   -h, --help, --help-all   print short, long, or detailed help message\n#\n# MODE must be one of the following:\n#\n#         clean              remove files from the build directory\n#         compile            compile a source file into a libtool object\n#         execute            automatically set library path, then run a program\n#         finish             complete the installation of libtool libraries\n#         install            install libraries or executables\n#         link               create a library or an executable\n#         uninstall          remove libraries from an installed directory\n#\n# MODE-ARGS vary depending on the MODE.  When passed as first option,\n# `--mode=MODE' may be abbreviated as `MODE' or a unique abbreviation of that.\n# Try `$progname --help --mode=MODE' for a more detailed description of MODE.\n#\n# When reporting a bug, please describe a test case to reproduce it and\n# include the following information:\n#\n#         host-triplet:\t$host\n#         shell:\t\t$SHELL\n#         compiler:\t\t$LTCC\n#         compiler flags:\t\t$LTCFLAGS\n#         linker:\t\t$LD (gnu? $with_gnu_ld)\n#         $progname:\t(GNU libtool) 2.4.2\n#         automake:\t$automake_version\n#         autoconf:\t$autoconf_version\n#\n# Report bugs to <bug-libtool@gnu.org>.\n# GNU libtool home page: <http://www.gnu.org/software/libtool/>.\n# General help using GNU software: <http://www.gnu.org/gethelp/>.\n\nPROGRAM=libtool\nPACKAGE=libtool\nVERSION=2.4.2\nTIMESTAMP=\"\"\npackage_revision=1.3337\n\n# Be Bourne compatible\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n}\n\n# NLS nuisances: We save the old values to restore during execute mode.\nlt_user_locale=\nlt_safe_locale=\nfor lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\ndo\n  eval \"if test \\\"\\${$lt_var+set}\\\" = set; then\n          save_$lt_var=\\$$lt_var\n          $lt_var=C\n\t  export $lt_var\n\t  lt_user_locale=\\\"$lt_var=\\\\\\$save_\\$lt_var; \\$lt_user_locale\\\"\n\t  lt_safe_locale=\\\"$lt_var=C; \\$lt_safe_locale\\\"\n\tfi\"\ndone\nLC_ALL=C\nLANGUAGE=C\nexport LANGUAGE LC_ALL\n\n$lt_unset CDPATH\n\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=\"$0\"\n\n\n\n: ${CP=\"cp -f\"}\ntest \"${ECHO+set}\" = set || ECHO=${as_echo-'printf %s\\n'}\n: ${MAKE=\"make\"}\n: ${MKDIR=\"mkdir\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n: ${SHELL=\"${CONFIG_SHELL-/bin/sh}\"}\n: ${Xsed=\"$SED -e 1s/^X//\"}\n\n# Global variables:\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\nEXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.\nEXIT_SKIP=77\t  # $? = 77 is used to indicate a skipped test to automake.\n\nexit_status=$EXIT_SUCCESS\n\n# Make sure IFS has a sensible default\nlt_nl='\n'\nIFS=\" \t$lt_nl\"\n\ndirname=\"s,/[^/]*$,,\"\nbasename=\"s,^.*/,,\"\n\n# func_dirname file append nondir_replacement\n# Compute the dirname of FILE.  If nonempty, add APPEND to the result,\n# otherwise set result to NONDIR_REPLACEMENT.\nfunc_dirname ()\n{\n    func_dirname_result=`$ECHO \"${1}\" | $SED \"$dirname\"`\n    if test \"X$func_dirname_result\" = \"X${1}\"; then\n      func_dirname_result=\"${3}\"\n    else\n      func_dirname_result=\"$func_dirname_result${2}\"\n    fi\n} # func_dirname may be replaced by extended shell implementation\n\n\n# func_basename file\nfunc_basename ()\n{\n    func_basename_result=`$ECHO \"${1}\" | $SED \"$basename\"`\n} # func_basename may be replaced by extended shell implementation\n\n\n# func_dirname_and_basename file append nondir_replacement\n# perform func_basename and func_dirname in a single function\n# call:\n#   dirname:  Compute the dirname of FILE.  If nonempty,\n#             add APPEND to the result, otherwise set result\n#             to NONDIR_REPLACEMENT.\n#             value returned in \"$func_dirname_result\"\n#   basename: Compute filename of FILE.\n#             value retuned in \"$func_basename_result\"\n# Implementation must be kept synchronized with func_dirname\n# and func_basename. For efficiency, we do not delegate to\n# those functions but instead duplicate the functionality here.\nfunc_dirname_and_basename ()\n{\n    # Extract subdirectory from the argument.\n    func_dirname_result=`$ECHO \"${1}\" | $SED -e \"$dirname\"`\n    if test \"X$func_dirname_result\" = \"X${1}\"; then\n      func_dirname_result=\"${3}\"\n    else\n      func_dirname_result=\"$func_dirname_result${2}\"\n    fi\n    func_basename_result=`$ECHO \"${1}\" | $SED -e \"$basename\"`\n} # func_dirname_and_basename may be replaced by extended shell implementation\n\n\n# func_stripname prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n# func_strip_suffix prefix name\nfunc_stripname ()\n{\n    case ${2} in\n      .*) func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%\\\\\\\\${2}\\$%%\"`;;\n      *)  func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%${2}\\$%%\"`;;\n    esac\n} # func_stripname may be replaced by extended shell implementation\n\n\n# These SED scripts presuppose an absolute path with a trailing slash.\npathcar='s,^/\\([^/]*\\).*$,\\1,'\npathcdr='s,^/[^/]*,,'\nremovedotparts=':dotsl\n\t\ts@/\\./@/@g\n\t\tt dotsl\n\t\ts,/\\.$,/,'\ncollapseslashes='s@/\\{1,\\}@/@g'\nfinalslash='s,/*$,/,'\n\n# func_normal_abspath PATH\n# Remove doubled-up and trailing slashes, \".\" path components,\n# and cancel out any \"..\" path components in PATH after making\n# it an absolute path.\n#             value returned in \"$func_normal_abspath_result\"\nfunc_normal_abspath ()\n{\n  # Start from root dir and reassemble the path.\n  func_normal_abspath_result=\n  func_normal_abspath_tpath=$1\n  func_normal_abspath_altnamespace=\n  case $func_normal_abspath_tpath in\n    \"\")\n      # Empty path, that just means $cwd.\n      func_stripname '' '/' \"`pwd`\"\n      func_normal_abspath_result=$func_stripname_result\n      return\n    ;;\n    # The next three entries are used to spot a run of precisely\n    # two leading slashes without using negated character classes;\n    # we take advantage of case's first-match behaviour.\n    ///*)\n      # Unusual form of absolute path, do nothing.\n    ;;\n    //*)\n      # Not necessarily an ordinary path; POSIX reserves leading '//'\n      # and for example Cygwin uses it to access remote file shares\n      # over CIFS/SMB, so we conserve a leading double slash if found.\n      func_normal_abspath_altnamespace=/\n    ;;\n    /*)\n      # Absolute path, do nothing.\n    ;;\n    *)\n      # Relative path, prepend $cwd.\n      func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath\n    ;;\n  esac\n  # Cancel out all the simple stuff to save iterations.  We also want\n  # the path to end with a slash for ease of parsing, so make sure\n  # there is one (and only one) here.\n  func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$removedotparts\" -e \"$collapseslashes\" -e \"$finalslash\"`\n  while :; do\n    # Processed it all yet?\n    if test \"$func_normal_abspath_tpath\" = / ; then\n      # If we ascended to the root using \"..\" the result may be empty now.\n      if test -z \"$func_normal_abspath_result\" ; then\n        func_normal_abspath_result=/\n      fi\n      break\n    fi\n    func_normal_abspath_tcomponent=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$pathcar\"`\n    func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$pathcdr\"`\n    # Figure out what to do with it\n    case $func_normal_abspath_tcomponent in\n      \"\")\n        # Trailing empty path component, ignore it.\n      ;;\n      ..)\n        # Parent dir; strip last assembled component from result.\n        func_dirname \"$func_normal_abspath_result\"\n        func_normal_abspath_result=$func_dirname_result\n      ;;\n      *)\n        # Actual path component, append it.\n        func_normal_abspath_result=$func_normal_abspath_result/$func_normal_abspath_tcomponent\n      ;;\n    esac\n  done\n  # Restore leading double-slash if one was found on entry.\n  func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result\n}\n\n# func_relative_path SRCDIR DSTDIR\n# generates a relative path from SRCDIR to DSTDIR, with a trailing\n# slash if non-empty, suitable for immediately appending a filename\n# without needing to append a separator.\n#             value returned in \"$func_relative_path_result\"\nfunc_relative_path ()\n{\n  func_relative_path_result=\n  func_normal_abspath \"$1\"\n  func_relative_path_tlibdir=$func_normal_abspath_result\n  func_normal_abspath \"$2\"\n  func_relative_path_tbindir=$func_normal_abspath_result\n\n  # Ascend the tree starting from libdir\n  while :; do\n    # check if we have found a prefix of bindir\n    case $func_relative_path_tbindir in\n      $func_relative_path_tlibdir)\n        # found an exact match\n        func_relative_path_tcancelled=\n        break\n        ;;\n      $func_relative_path_tlibdir*)\n        # found a matching prefix\n        func_stripname \"$func_relative_path_tlibdir\" '' \"$func_relative_path_tbindir\"\n        func_relative_path_tcancelled=$func_stripname_result\n        if test -z \"$func_relative_path_result\"; then\n          func_relative_path_result=.\n        fi\n        break\n        ;;\n      *)\n        func_dirname $func_relative_path_tlibdir\n        func_relative_path_tlibdir=${func_dirname_result}\n        if test \"x$func_relative_path_tlibdir\" = x ; then\n          # Have to descend all the way to the root!\n          func_relative_path_result=../$func_relative_path_result\n          func_relative_path_tcancelled=$func_relative_path_tbindir\n          break\n        fi\n        func_relative_path_result=../$func_relative_path_result\n        ;;\n    esac\n  done\n\n  # Now calculate path; take care to avoid doubling-up slashes.\n  func_stripname '' '/' \"$func_relative_path_result\"\n  func_relative_path_result=$func_stripname_result\n  func_stripname '/' '/' \"$func_relative_path_tcancelled\"\n  if test \"x$func_stripname_result\" != x ; then\n    func_relative_path_result=${func_relative_path_result}/${func_stripname_result}\n  fi\n\n  # Normalisation. If bindir is libdir, return empty string,\n  # else relative path ending with a slash; either way, target\n  # file name can be directly appended.\n  if test ! -z \"$func_relative_path_result\"; then\n    func_stripname './' '' \"$func_relative_path_result/\"\n    func_relative_path_result=$func_stripname_result\n  fi\n}\n\n# The name of this program:\nfunc_dirname_and_basename \"$progpath\"\nprogname=$func_basename_result\n\n# Make sure we have an absolute path for reexecution:\ncase $progpath in\n  [\\\\/]*|[A-Za-z]:\\\\*) ;;\n  *[\\\\/]*)\n     progdir=$func_dirname_result\n     progdir=`cd \"$progdir\" && pwd`\n     progpath=\"$progdir/$progname\"\n     ;;\n  *)\n     save_IFS=\"$IFS\"\n     IFS=${PATH_SEPARATOR-:}\n     for progdir in $PATH; do\n       IFS=\"$save_IFS\"\n       test -x \"$progdir/$progname\" && break\n     done\n     IFS=\"$save_IFS\"\n     test -n \"$progdir\" || progdir=`pwd`\n     progpath=\"$progdir/$progname\"\n     ;;\nesac\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed=\"${SED}\"' -e 1s/^X//'\nsed_quote_subst='s/\\([`\"$\\\\]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n\n# Sed substitution that turns a string into a regex matching for the\n# string literally.\nsed_make_literal_regex='s,[].[^$\\\\*\\/],\\\\&,g'\n\n# Sed substitution that converts a w32 file name or path\n# which contains forward slashes, into one that contains\n# (escaped) backslashes.  A very naive implementation.\nlt_sed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n\n# Re-`\\' parameter expansions in output of double_quote_subst that were\n# `\\'-ed in input to the same.  If an odd number of `\\' preceded a '$'\n# in input to double_quote_subst, that '$' was protected from expansion.\n# Since each input `\\' is now two `\\'s, look for any number of runs of\n# four `\\'s followed by two `\\'s and then a '$'.  `\\' that '$'.\nbs='\\\\'\nbs2='\\\\\\\\'\nbs4='\\\\\\\\\\\\\\\\'\ndollar='\\$'\nsed_double_backslash=\"\\\n  s/$bs4/&\\\\\n/g\n  s/^$bs2$dollar/$bs&/\n  s/\\\\([^$bs]\\\\)$bs2$dollar/\\\\1$bs2$bs$dollar/g\n  s/\\n//g\"\n\n# Standard options:\nopt_dry_run=false\nopt_help=false\nopt_quiet=false\nopt_verbose=false\nopt_warning=:\n\n# func_echo arg...\n# Echo program name prefixed message, along with the current mode\n# name if it has been set yet.\nfunc_echo ()\n{\n    $ECHO \"$progname: ${opt_mode+$opt_mode: }$*\"\n}\n\n# func_verbose arg...\n# Echo program name prefixed message in verbose mode only.\nfunc_verbose ()\n{\n    $opt_verbose && func_echo ${1+\"$@\"}\n\n    # A bug in bash halts the script if the last line of a function\n    # fails when set -e is in force, so we need another command to\n    # work around that:\n    :\n}\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\n# func_error arg...\n# Echo program name prefixed message to standard error.\nfunc_error ()\n{\n    $ECHO \"$progname: ${opt_mode+$opt_mode: }\"${1+\"$@\"} 1>&2\n}\n\n# func_warning arg...\n# Echo program name prefixed warning message to standard error.\nfunc_warning ()\n{\n    $opt_warning && $ECHO \"$progname: ${opt_mode+$opt_mode: }warning: \"${1+\"$@\"} 1>&2\n\n    # bash bug again:\n    :\n}\n\n# func_fatal_error arg...\n# Echo program name prefixed message to standard error, and exit.\nfunc_fatal_error ()\n{\n    func_error ${1+\"$@\"}\n    exit $EXIT_FAILURE\n}\n\n# func_fatal_help arg...\n# Echo program name prefixed message to standard error, followed by\n# a help hint, and exit.\nfunc_fatal_help ()\n{\n    func_error ${1+\"$@\"}\n    func_fatal_error \"$help\"\n}\nhelp=\"Try \\`$progname --help' for more information.\"  ## default\n\n\n# func_grep expression filename\n# Check whether EXPRESSION matches any line of FILENAME, without output.\nfunc_grep ()\n{\n    $GREP \"$1\" \"$2\" >/dev/null 2>&1\n}\n\n\n# func_mkdir_p directory-path\n# Make sure the entire path to DIRECTORY-PATH is available.\nfunc_mkdir_p ()\n{\n    my_directory_path=\"$1\"\n    my_dir_list=\n\n    if test -n \"$my_directory_path\" && test \"$opt_dry_run\" != \":\"; then\n\n      # Protect directory names starting with `-'\n      case $my_directory_path in\n        -*) my_directory_path=\"./$my_directory_path\" ;;\n      esac\n\n      # While some portion of DIR does not yet exist...\n      while test ! -d \"$my_directory_path\"; do\n        # ...make a list in topmost first order.  Use a colon delimited\n\t# list incase some portion of path contains whitespace.\n        my_dir_list=\"$my_directory_path:$my_dir_list\"\n\n        # If the last portion added has no slash in it, the list is done\n        case $my_directory_path in */*) ;; *) break ;; esac\n\n        # ...otherwise throw away the child directory and loop\n        my_directory_path=`$ECHO \"$my_directory_path\" | $SED -e \"$dirname\"`\n      done\n      my_dir_list=`$ECHO \"$my_dir_list\" | $SED 's,:*$,,'`\n\n      save_mkdir_p_IFS=\"$IFS\"; IFS=':'\n      for my_dir in $my_dir_list; do\n\tIFS=\"$save_mkdir_p_IFS\"\n        # mkdir can fail with a `File exist' error if two processes\n        # try to create one of the directories concurrently.  Don't\n        # stop in that case!\n        $MKDIR \"$my_dir\" 2>/dev/null || :\n      done\n      IFS=\"$save_mkdir_p_IFS\"\n\n      # Bail out if we (or some other process) failed to create a directory.\n      test -d \"$my_directory_path\" || \\\n        func_fatal_error \"Failed to create \\`$1'\"\n    fi\n}\n\n\n# func_mktempdir [string]\n# Make a temporary directory that won't clash with other running\n# libtool processes, and avoids race conditions if possible.  If\n# given, STRING is the basename for that directory.\nfunc_mktempdir ()\n{\n    my_template=\"${TMPDIR-/tmp}/${1-$progname}\"\n\n    if test \"$opt_dry_run\" = \":\"; then\n      # Return a directory name, but don't create it in dry-run mode\n      my_tmpdir=\"${my_template}-$$\"\n    else\n\n      # If mktemp works, use that first and foremost\n      my_tmpdir=`mktemp -d \"${my_template}-XXXXXXXX\" 2>/dev/null`\n\n      if test ! -d \"$my_tmpdir\"; then\n        # Failing that, at least try and use $RANDOM to avoid a race\n        my_tmpdir=\"${my_template}-${RANDOM-0}$$\"\n\n        save_mktempdir_umask=`umask`\n        umask 0077\n        $MKDIR \"$my_tmpdir\"\n        umask $save_mktempdir_umask\n      fi\n\n      # If we're not in dry-run mode, bomb out on failure\n      test -d \"$my_tmpdir\" || \\\n        func_fatal_error \"cannot create temporary directory \\`$my_tmpdir'\"\n    fi\n\n    $ECHO \"$my_tmpdir\"\n}\n\n\n# func_quote_for_eval arg\n# Aesthetically quote ARG to be evaled later.\n# This function returns two values: FUNC_QUOTE_FOR_EVAL_RESULT\n# is double-quoted, suitable for a subsequent eval, whereas\n# FUNC_QUOTE_FOR_EVAL_UNQUOTED_RESULT has merely all characters\n# which are still active within double quotes backslashified.\nfunc_quote_for_eval ()\n{\n    case $1 in\n      *[\\\\\\`\\\"\\$]*)\n\tfunc_quote_for_eval_unquoted_result=`$ECHO \"$1\" | $SED \"$sed_quote_subst\"` ;;\n      *)\n        func_quote_for_eval_unquoted_result=\"$1\" ;;\n    esac\n\n    case $func_quote_for_eval_unquoted_result in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting, command substitution and and variable\n      # expansion for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        func_quote_for_eval_result=\"\\\"$func_quote_for_eval_unquoted_result\\\"\"\n        ;;\n      *)\n        func_quote_for_eval_result=\"$func_quote_for_eval_unquoted_result\"\n    esac\n}\n\n\n# func_quote_for_expand arg\n# Aesthetically quote ARG to be evaled later; same as above,\n# but do not quote variable references.\nfunc_quote_for_expand ()\n{\n    case $1 in\n      *[\\\\\\`\\\"]*)\n\tmy_arg=`$ECHO \"$1\" | $SED \\\n\t    -e \"$double_quote_subst\" -e \"$sed_double_backslash\"` ;;\n      *)\n        my_arg=\"$1\" ;;\n    esac\n\n    case $my_arg in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting and command substitution for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        my_arg=\"\\\"$my_arg\\\"\"\n        ;;\n    esac\n\n    func_quote_for_expand_result=\"$my_arg\"\n}\n\n\n# func_show_eval cmd [fail_exp]\n# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.\nfunc_show_eval ()\n{\n    my_cmd=\"$1\"\n    my_fail_exp=\"${2-:}\"\n\n    ${opt_silent-false} || {\n      func_quote_for_expand \"$my_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    if ${opt_dry_run-false}; then :; else\n      eval \"$my_cmd\"\n      my_status=$?\n      if test \"$my_status\" -eq 0; then :; else\n\teval \"(exit $my_status); $my_fail_exp\"\n      fi\n    fi\n}\n\n\n# func_show_eval_locale cmd [fail_exp]\n# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.  Use the saved locale for evaluation.\nfunc_show_eval_locale ()\n{\n    my_cmd=\"$1\"\n    my_fail_exp=\"${2-:}\"\n\n    ${opt_silent-false} || {\n      func_quote_for_expand \"$my_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    if ${opt_dry_run-false}; then :; else\n      eval \"$lt_user_locale\n\t    $my_cmd\"\n      my_status=$?\n      eval \"$lt_safe_locale\"\n      if test \"$my_status\" -eq 0; then :; else\n\teval \"(exit $my_status); $my_fail_exp\"\n      fi\n    fi\n}\n\n# func_tr_sh\n# Turn $1 into a string suitable for a shell variable name.\n# Result is stored in $func_tr_sh_result.  All characters\n# not in the set a-zA-Z0-9_ are replaced with '_'. Further,\n# if $1 begins with a digit, a '_' is prepended as well.\nfunc_tr_sh ()\n{\n  case $1 in\n  [0-9]* | *[!a-zA-Z0-9_]*)\n    func_tr_sh_result=`$ECHO \"$1\" | $SED 's/^\\([0-9]\\)/_\\1/; s/[^a-zA-Z0-9_]/_/g'`\n    ;;\n  * )\n    func_tr_sh_result=$1\n    ;;\n  esac\n}\n\n\n# func_version\n# Echo version message to standard output and exit.\nfunc_version ()\n{\n    $opt_debug\n\n    $SED -n '/(C)/!b go\n\t:more\n\t/\\./!{\n\t  N\n\t  s/\\n# / /\n\t  b more\n\t}\n\t:go\n\t/^# '$PROGRAM' (GNU /,/# warranty; / {\n        s/^# //\n\ts/^# *$//\n        s/\\((C)\\)[ 0-9,-]*\\( [1-9][0-9]*\\)/\\1\\2/\n        p\n     }' < \"$progpath\"\n     exit $?\n}\n\n# func_usage\n# Echo short help message to standard output and exit.\nfunc_usage ()\n{\n    $opt_debug\n\n    $SED -n '/^# Usage:/,/^#  *.*--help/ {\n        s/^# //\n\ts/^# *$//\n\ts/\\$progname/'$progname'/\n\tp\n    }' < \"$progpath\"\n    echo\n    $ECHO \"run \\`$progname --help | more' for full usage\"\n    exit $?\n}\n\n# func_help [NOEXIT]\n# Echo long help message to standard output and exit,\n# unless 'noexit' is passed as argument.\nfunc_help ()\n{\n    $opt_debug\n\n    $SED -n '/^# Usage:/,/# Report bugs to/ {\n\t:print\n        s/^# //\n\ts/^# *$//\n\ts*\\$progname*'$progname'*\n\ts*\\$host*'\"$host\"'*\n\ts*\\$SHELL*'\"$SHELL\"'*\n\ts*\\$LTCC*'\"$LTCC\"'*\n\ts*\\$LTCFLAGS*'\"$LTCFLAGS\"'*\n\ts*\\$LD*'\"$LD\"'*\n\ts/\\$with_gnu_ld/'\"$with_gnu_ld\"'/\n\ts/\\$automake_version/'\"`(${AUTOMAKE-automake} --version) 2>/dev/null |$SED 1q`\"'/\n\ts/\\$autoconf_version/'\"`(${AUTOCONF-autoconf} --version) 2>/dev/null |$SED 1q`\"'/\n\tp\n\td\n     }\n     /^# .* home page:/b print\n     /^# General help using/b print\n     ' < \"$progpath\"\n    ret=$?\n    if test -z \"$1\"; then\n      exit $ret\n    fi\n}\n\n# func_missing_arg argname\n# Echo program name prefixed message to standard error and set global\n# exit_cmd.\nfunc_missing_arg ()\n{\n    $opt_debug\n\n    func_error \"missing argument for $1.\"\n    exit_cmd=exit\n}\n\n\n# func_split_short_opt shortopt\n# Set func_split_short_opt_name and func_split_short_opt_arg shell\n# variables after splitting SHORTOPT after the 2nd character.\nfunc_split_short_opt ()\n{\n    my_sed_short_opt='1s/^\\(..\\).*$/\\1/;q'\n    my_sed_short_rest='1s/^..\\(.*\\)$/\\1/;q'\n\n    func_split_short_opt_name=`$ECHO \"$1\" | $SED \"$my_sed_short_opt\"`\n    func_split_short_opt_arg=`$ECHO \"$1\" | $SED \"$my_sed_short_rest\"`\n} # func_split_short_opt may be replaced by extended shell implementation\n\n\n# func_split_long_opt longopt\n# Set func_split_long_opt_name and func_split_long_opt_arg shell\n# variables after splitting LONGOPT at the `=' sign.\nfunc_split_long_opt ()\n{\n    my_sed_long_opt='1s/^\\(--[^=]*\\)=.*/\\1/;q'\n    my_sed_long_arg='1s/^--[^=]*=//'\n\n    func_split_long_opt_name=`$ECHO \"$1\" | $SED \"$my_sed_long_opt\"`\n    func_split_long_opt_arg=`$ECHO \"$1\" | $SED \"$my_sed_long_arg\"`\n} # func_split_long_opt may be replaced by extended shell implementation\n\nexit_cmd=:\n\n\n\n\n\nmagic=\"%%%MAGIC variable%%%\"\nmagic_exe=\"%%%MAGIC EXE variable%%%\"\n\n# Global variables.\nnonopt=\npreserve_args=\nlo2o=\"s/\\\\.lo\\$/.${objext}/\"\no2lo=\"s/\\\\.${objext}\\$/.lo/\"\nextracted_archives=\nextracted_serial=0\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\n# func_append var value\n# Append VALUE to the end of shell variable VAR.\nfunc_append ()\n{\n    eval \"${1}=\\$${1}\\${2}\"\n} # func_append may be replaced by extended shell implementation\n\n# func_append_quoted var value\n# Quote VALUE and append to the end of shell variable VAR, separated\n# by a space.\nfunc_append_quoted ()\n{\n    func_quote_for_eval \"${2}\"\n    eval \"${1}=\\$${1}\\\\ \\$func_quote_for_eval_result\"\n} # func_append_quoted may be replaced by extended shell implementation\n\n\n# func_arith arithmetic-term...\nfunc_arith ()\n{\n    func_arith_result=`expr \"${@}\"`\n} # func_arith may be replaced by extended shell implementation\n\n\n# func_len string\n# STRING may not start with a hyphen.\nfunc_len ()\n{\n    func_len_result=`expr \"${1}\" : \".*\" 2>/dev/null || echo $max_cmd_len`\n} # func_len may be replaced by extended shell implementation\n\n\n# func_lo2o object\nfunc_lo2o ()\n{\n    func_lo2o_result=`$ECHO \"${1}\" | $SED \"$lo2o\"`\n} # func_lo2o may be replaced by extended shell implementation\n\n\n# func_xform libobj-or-source\nfunc_xform ()\n{\n    func_xform_result=`$ECHO \"${1}\" | $SED 's/\\.[^.]*$/.lo/'`\n} # func_xform may be replaced by extended shell implementation\n\n\n# func_fatal_configuration arg...\n# Echo program name prefixed message to standard error, followed by\n# a configuration failure hint, and exit.\nfunc_fatal_configuration ()\n{\n    func_error ${1+\"$@\"}\n    func_error \"See the $PACKAGE documentation for more information.\"\n    func_fatal_error \"Fatal configuration error.\"\n}\n\n\n# func_config\n# Display the configuration for all the tags in this script.\nfunc_config ()\n{\n    re_begincf='^# ### BEGIN LIBTOOL'\n    re_endcf='^# ### END LIBTOOL'\n\n    # Default configuration.\n    $SED \"1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\\$d\" < \"$progpath\"\n\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      $SED -n \"/$re_begincf TAG CONFIG: $tagname\\$/,/$re_endcf TAG CONFIG: $tagname\\$/p\" < \"$progpath\"\n    done\n\n    exit $?\n}\n\n# func_features\n# Display the features supported by this script.\nfunc_features ()\n{\n    echo \"host: $host\"\n    if test \"$build_libtool_libs\" = yes; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test \"$build_old_libs\" = yes; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n\n    exit $?\n}\n\n# func_enable_tag tagname\n# Verify that TAGNAME is valid, and either flag an error and exit, or\n# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist\n# variable here.\nfunc_enable_tag ()\n{\n  # Global variable:\n  tagname=\"$1\"\n\n  re_begincf=\"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\\$\"\n  re_endcf=\"^# ### END LIBTOOL TAG CONFIG: $tagname\\$\"\n  sed_extractcf=\"/$re_begincf/,/$re_endcf/p\"\n\n  # Validate tagname.\n  case $tagname in\n    *[!-_A-Za-z0-9,/]*)\n      func_fatal_error \"invalid tag name: $tagname\"\n      ;;\n  esac\n\n  # Don't test for the \"default\" C tag, as we know it's\n  # there but not specially marked.\n  case $tagname in\n    CC) ;;\n    *)\n      if $GREP \"$re_begincf\" \"$progpath\" >/dev/null 2>&1; then\n\ttaglist=\"$taglist $tagname\"\n\n\t# Evaluate the configuration.  Be careful to quote the path\n\t# and the sed script, to avoid splitting on whitespace, but\n\t# also don't use non-portable quotes within backquotes within\n\t# quotes we have to do it in 2 steps:\n\textractedcf=`$SED -n -e \"$sed_extractcf\" < \"$progpath\"`\n\teval \"$extractedcf\"\n      else\n\tfunc_error \"ignoring unknown tag $tagname\"\n      fi\n      ;;\n  esac\n}\n\n# func_check_version_match\n# Ensure that we are using m4 macros, and libtool script from the same\n# release of libtool.\nfunc_check_version_match ()\n{\n  if test \"$package_revision\" != \"$macro_revision\"; then\n    if test \"$VERSION\" != \"$macro_version\"; then\n      if test -z \"$macro_version\"; then\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from an older release.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n      else\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n      fi\n    else\n      cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,\n$progname: but the definition of this LT_INIT comes from revision $macro_revision.\n$progname: You should recreate aclocal.m4 with macros from revision $package_revision\n$progname: of $PACKAGE $VERSION and run autoconf again.\n_LT_EOF\n    fi\n\n    exit $EXIT_MISMATCH\n  fi\n}\n\n\n# Shorthand for --mode=foo, only valid as the first argument\ncase $1 in\nclean|clea|cle|cl)\n  shift; set dummy --mode clean ${1+\"$@\"}; shift\n  ;;\ncompile|compil|compi|comp|com|co|c)\n  shift; set dummy --mode compile ${1+\"$@\"}; shift\n  ;;\nexecute|execut|execu|exec|exe|ex|e)\n  shift; set dummy --mode execute ${1+\"$@\"}; shift\n  ;;\nfinish|finis|fini|fin|fi|f)\n  shift; set dummy --mode finish ${1+\"$@\"}; shift\n  ;;\ninstall|instal|insta|inst|ins|in|i)\n  shift; set dummy --mode install ${1+\"$@\"}; shift\n  ;;\nlink|lin|li|l)\n  shift; set dummy --mode link ${1+\"$@\"}; shift\n  ;;\nuninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)\n  shift; set dummy --mode uninstall ${1+\"$@\"}; shift\n  ;;\nesac\n\n\n\n# Option defaults:\nopt_debug=:\nopt_dry_run=false\nopt_config=false\nopt_preserve_dup_deps=false\nopt_features=false\nopt_finish=false\nopt_help=false\nopt_help_all=false\nopt_silent=:\nopt_warning=:\nopt_verbose=:\nopt_silent=false\nopt_verbose=false\n\n\n# Parse options once, thoroughly.  This comes as soon as possible in the\n# script to make things like `--version' happen as quickly as we can.\n{\n  # this just eases exit handling\n  while test $# -gt 0; do\n    opt=\"$1\"\n    shift\n    case $opt in\n      --debug|-x)\topt_debug='set -x'\n\t\t\tfunc_echo \"enabling shell trace mode\"\n\t\t\t$opt_debug\n\t\t\t;;\n      --dry-run|--dryrun|-n)\n\t\t\topt_dry_run=:\n\t\t\t;;\n      --config)\n\t\t\topt_config=:\nfunc_config\n\t\t\t;;\n      --dlopen|-dlopen)\n\t\t\toptarg=\"$1\"\n\t\t\topt_dlopen=\"${opt_dlopen+$opt_dlopen\n}$optarg\"\n\t\t\tshift\n\t\t\t;;\n      --preserve-dup-deps)\n\t\t\topt_preserve_dup_deps=:\n\t\t\t;;\n      --features)\n\t\t\topt_features=:\nfunc_features\n\t\t\t;;\n      --finish)\n\t\t\topt_finish=:\nset dummy --mode finish ${1+\"$@\"}; shift\n\t\t\t;;\n      --help)\n\t\t\topt_help=:\n\t\t\t;;\n      --help-all)\n\t\t\topt_help_all=:\nopt_help=': help-all'\n\t\t\t;;\n      --mode)\n\t\t\ttest $# = 0 && func_missing_arg $opt && break\n\t\t\toptarg=\"$1\"\n\t\t\topt_mode=\"$optarg\"\ncase $optarg in\n  # Valid mode arguments:\n  clean|compile|execute|finish|install|link|relink|uninstall) ;;\n\n  # Catch anything else as an error\n  *) func_error \"invalid argument for $opt\"\n     exit_cmd=exit\n     break\n     ;;\nesac\n\t\t\tshift\n\t\t\t;;\n      --no-silent|--no-quiet)\n\t\t\topt_silent=false\nfunc_append preserve_args \" $opt\"\n\t\t\t;;\n      --no-warning|--no-warn)\n\t\t\topt_warning=false\nfunc_append preserve_args \" $opt\"\n\t\t\t;;\n      --no-verbose)\n\t\t\topt_verbose=false\nfunc_append preserve_args \" $opt\"\n\t\t\t;;\n      --silent|--quiet)\n\t\t\topt_silent=:\nfunc_append preserve_args \" $opt\"\n        opt_verbose=false\n\t\t\t;;\n      --verbose|-v)\n\t\t\topt_verbose=:\nfunc_append preserve_args \" $opt\"\nopt_silent=false\n\t\t\t;;\n      --tag)\n\t\t\ttest $# = 0 && func_missing_arg $opt && break\n\t\t\toptarg=\"$1\"\n\t\t\topt_tag=\"$optarg\"\nfunc_append preserve_args \" $opt $optarg\"\nfunc_enable_tag \"$optarg\"\n\t\t\tshift\n\t\t\t;;\n\n      -\\?|-h)\t\tfunc_usage\t\t\t\t;;\n      --help)\t\tfunc_help\t\t\t\t;;\n      --version)\tfunc_version\t\t\t\t;;\n\n      # Separate optargs to long options:\n      --*=*)\n\t\t\tfunc_split_long_opt \"$opt\"\n\t\t\tset dummy \"$func_split_long_opt_name\" \"$func_split_long_opt_arg\" ${1+\"$@\"}\n\t\t\tshift\n\t\t\t;;\n\n      # Separate non-argument short options:\n      -\\?*|-h*|-n*|-v*)\n\t\t\tfunc_split_short_opt \"$opt\"\n\t\t\tset dummy \"$func_split_short_opt_name\" \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n\t\t\tshift\n\t\t\t;;\n\n      --)\t\tbreak\t\t\t\t\t;;\n      -*)\t\tfunc_fatal_help \"unrecognized option \\`$opt'\" ;;\n      *)\t\tset dummy \"$opt\" ${1+\"$@\"};\tshift; break  ;;\n    esac\n  done\n\n  # Validate options:\n\n  # save first non-option argument\n  if test \"$#\" -gt 0; then\n    nonopt=\"$opt\"\n    shift\n  fi\n\n  # preserve --debug\n  test \"$opt_debug\" = : || func_append preserve_args \" --debug\"\n\n  case $host in\n    *cygwin* | *mingw* | *pw32* | *cegcc*)\n      # don't eliminate duplications in $postdeps and $predeps\n      opt_duplicate_compiler_generated_deps=:\n      ;;\n    *)\n      opt_duplicate_compiler_generated_deps=$opt_preserve_dup_deps\n      ;;\n  esac\n\n  $opt_help || {\n    # Sanity checks first:\n    func_check_version_match\n\n    if test \"$build_libtool_libs\" != yes && test \"$build_old_libs\" != yes; then\n      func_fatal_configuration \"not configured to build any kind of library\"\n    fi\n\n    # Darwin sucks\n    eval std_shrext=\\\"$shrext_cmds\\\"\n\n    # Only execute mode is allowed to have -dlopen flags.\n    if test -n \"$opt_dlopen\" && test \"$opt_mode\" != execute; then\n      func_error \"unrecognized option \\`-dlopen'\"\n      $ECHO \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    # Change the help message to a mode-specific one.\n    generic_help=\"$help\"\n    help=\"Try \\`$progname --help --mode=$opt_mode' for more information.\"\n  }\n\n\n  # Bail if the options were screwed\n  $exit_cmd $EXIT_FAILURE\n}\n\n\n\n\n## ----------- ##\n##    Main.    ##\n## ----------- ##\n\n# func_lalib_p file\n# True iff FILE is a libtool `.la' library or `.lo' object file.\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_lalib_p ()\n{\n    test -f \"$1\" &&\n      $SED -e 4q \"$1\" 2>/dev/null \\\n        | $GREP \"^# Generated by .*$PACKAGE\" > /dev/null 2>&1\n}\n\n# func_lalib_unsafe_p file\n# True iff FILE is a libtool `.la' library or `.lo' object file.\n# This function implements the same check as func_lalib_p without\n# resorting to external programs.  To this end, it redirects stdin and\n# closes it afterwards, without saving the original file descriptor.\n# As a safety measure, use it only where a negative result would be\n# fatal anyway.  Works if `file' does not exist.\nfunc_lalib_unsafe_p ()\n{\n    lalib_p=no\n    if test -f \"$1\" && test -r \"$1\" && exec 5<&0 <\"$1\"; then\n\tfor lalib_p_l in 1 2 3 4\n\tdo\n\t    read lalib_p_line\n\t    case \"$lalib_p_line\" in\n\t\t\\#\\ Generated\\ by\\ *$PACKAGE* ) lalib_p=yes; break;;\n\t    esac\n\tdone\n\texec 0<&5 5<&-\n    fi\n    test \"$lalib_p\" = yes\n}\n\n# func_ltwrapper_script_p file\n# True iff FILE is a libtool wrapper script\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_script_p ()\n{\n    func_lalib_p \"$1\"\n}\n\n# func_ltwrapper_executable_p file\n# True iff FILE is a libtool wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_executable_p ()\n{\n    func_ltwrapper_exec_suffix=\n    case $1 in\n    *.exe) ;;\n    *) func_ltwrapper_exec_suffix=.exe ;;\n    esac\n    $GREP \"$magic_exe\" \"$1$func_ltwrapper_exec_suffix\" >/dev/null 2>&1\n}\n\n# func_ltwrapper_scriptname file\n# Assumes file is an ltwrapper_executable\n# uses $file to determine the appropriate filename for a\n# temporary ltwrapper_script.\nfunc_ltwrapper_scriptname ()\n{\n    func_dirname_and_basename \"$1\" \"\" \".\"\n    func_stripname '' '.exe' \"$func_basename_result\"\n    func_ltwrapper_scriptname_result=\"$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper\"\n}\n\n# func_ltwrapper_p file\n# True iff FILE is a libtool wrapper script or wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_p ()\n{\n    func_ltwrapper_script_p \"$1\" || func_ltwrapper_executable_p \"$1\"\n}\n\n\n# func_execute_cmds commands fail_cmd\n# Execute tilde-delimited COMMANDS.\n# If FAIL_CMD is given, eval that upon failure.\n# FAIL_CMD may read-access the current command in variable CMD!\nfunc_execute_cmds ()\n{\n    $opt_debug\n    save_ifs=$IFS; IFS='~'\n    for cmd in $1; do\n      IFS=$save_ifs\n      eval cmd=\\\"$cmd\\\"\n      func_show_eval \"$cmd\" \"${2-:}\"\n    done\n    IFS=$save_ifs\n}\n\n\n# func_source file\n# Source FILE, adding directory component if necessary.\n# Note that it is not necessary on cygwin/mingw to append a dot to\n# FILE even if both FILE and FILE.exe exist: automatic-append-.exe\n# behavior happens only for exec(3), not for open(2)!  Also, sourcing\n# `FILE.' does not work on cygwin managed mounts.\nfunc_source ()\n{\n    $opt_debug\n    case $1 in\n    */* | *\\\\*)\t. \"$1\" ;;\n    *)\t\t. \"./$1\" ;;\n    esac\n}\n\n\n# func_resolve_sysroot PATH\n# Replace a leading = in PATH with a sysroot.  Store the result into\n# func_resolve_sysroot_result\nfunc_resolve_sysroot ()\n{\n  func_resolve_sysroot_result=$1\n  case $func_resolve_sysroot_result in\n  =*)\n    func_stripname '=' '' \"$func_resolve_sysroot_result\"\n    func_resolve_sysroot_result=$lt_sysroot$func_stripname_result\n    ;;\n  esac\n}\n\n# func_replace_sysroot PATH\n# If PATH begins with the sysroot, replace it with = and\n# store the result into func_replace_sysroot_result.\nfunc_replace_sysroot ()\n{\n  case \"$lt_sysroot:$1\" in\n  ?*:\"$lt_sysroot\"*)\n    func_stripname \"$lt_sysroot\" '' \"$1\"\n    func_replace_sysroot_result=\"=$func_stripname_result\"\n    ;;\n  *)\n    # Including no sysroot.\n    func_replace_sysroot_result=$1\n    ;;\n  esac\n}\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    $opt_debug\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n\tfunc_append_quoted CC_quoted \"$arg\"\n      done\n      CC_expanded=`func_echo_all $CC`\n      CC_quoted_expanded=`func_echo_all $CC_quoted`\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n      \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if $GREP \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t      # Double-quote args containing other shell metacharacters.\n\t      func_append_quoted CC_quoted \"$arg\"\n\t    done\n\t    CC_expanded=`func_echo_all $CC`\n\t    CC_quoted_expanded=`func_echo_all $CC_quoted`\n\t    case \"$@ \" in\n\t    \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n\t    \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  func_echo \"unable to infer tagged configuration\"\n\t  func_fatal_error \"specify a tag with \\`--tag'\"\n#\telse\n#\t  func_verbose \"using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n\n# func_write_libtool_object output_name pic_name nonpic_name\n# Create a libtool object file (analogous to a \".la\" file),\n# but don't create it if we're doing a dry run.\nfunc_write_libtool_object ()\n{\n    write_libobj=${1}\n    if test \"$build_libtool_libs\" = yes; then\n      write_lobj=\\'${2}\\'\n    else\n      write_lobj=none\n    fi\n\n    if test \"$build_old_libs\" = yes; then\n      write_oldobj=\\'${3}\\'\n    else\n      write_oldobj=none\n    fi\n\n    $opt_dry_run || {\n      cat >${write_libobj}T <<EOF\n# $write_libobj - a libtool object file\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=$write_lobj\n\n# Name of the non-PIC object\nnon_pic_object=$write_oldobj\n\nEOF\n      $MV \"${write_libobj}T\" \"${write_libobj}\"\n    }\n}\n\n\n##################################################\n# FILE NAME AND PATH CONVERSION HELPER FUNCTIONS #\n##################################################\n\n# func_convert_core_file_wine_to_w32 ARG\n# Helper function used by file name conversion functions when $build is *nix,\n# and $host is mingw, cygwin, or some other w32 environment. Relies on a\n# correctly configured wine environment available, with the winepath program\n# in $build's $PATH.\n#\n# ARG is the $build file name to be converted to w32 format.\n# Result is available in $func_convert_core_file_wine_to_w32_result, and will\n# be empty on error (or when ARG is empty)\nfunc_convert_core_file_wine_to_w32 ()\n{\n  $opt_debug\n  func_convert_core_file_wine_to_w32_result=\"$1\"\n  if test -n \"$1\"; then\n    # Unfortunately, winepath does not exit with a non-zero error code, so we\n    # are forced to check the contents of stdout. On the other hand, if the\n    # command is not found, the shell will set an exit code of 127 and print\n    # *an error message* to stdout. So we must check for both error code of\n    # zero AND non-empty stdout, which explains the odd construction:\n    func_convert_core_file_wine_to_w32_tmp=`winepath -w \"$1\" 2>/dev/null`\n    if test \"$?\" -eq 0 && test -n \"${func_convert_core_file_wine_to_w32_tmp}\"; then\n      func_convert_core_file_wine_to_w32_result=`$ECHO \"$func_convert_core_file_wine_to_w32_tmp\" |\n        $SED -e \"$lt_sed_naive_backslashify\"`\n    else\n      func_convert_core_file_wine_to_w32_result=\n    fi\n  fi\n}\n# end: func_convert_core_file_wine_to_w32\n\n\n# func_convert_core_path_wine_to_w32 ARG\n# Helper function used by path conversion functions when $build is *nix, and\n# $host is mingw, cygwin, or some other w32 environment. Relies on a correctly\n# configured wine environment available, with the winepath program in $build's\n# $PATH. Assumes ARG has no leading or trailing path separator characters.\n#\n# ARG is path to be converted from $build format to win32.\n# Result is available in $func_convert_core_path_wine_to_w32_result.\n# Unconvertible file (directory) names in ARG are skipped; if no directory names\n# are convertible, then the result may be empty.\nfunc_convert_core_path_wine_to_w32 ()\n{\n  $opt_debug\n  # unfortunately, winepath doesn't convert paths, only file names\n  func_convert_core_path_wine_to_w32_result=\"\"\n  if test -n \"$1\"; then\n    oldIFS=$IFS\n    IFS=:\n    for func_convert_core_path_wine_to_w32_f in $1; do\n      IFS=$oldIFS\n      func_convert_core_file_wine_to_w32 \"$func_convert_core_path_wine_to_w32_f\"\n      if test -n \"$func_convert_core_file_wine_to_w32_result\" ; then\n        if test -z \"$func_convert_core_path_wine_to_w32_result\"; then\n          func_convert_core_path_wine_to_w32_result=\"$func_convert_core_file_wine_to_w32_result\"\n        else\n          func_append func_convert_core_path_wine_to_w32_result \";$func_convert_core_file_wine_to_w32_result\"\n        fi\n      fi\n    done\n    IFS=$oldIFS\n  fi\n}\n# end: func_convert_core_path_wine_to_w32\n\n\n# func_cygpath ARGS...\n# Wrapper around calling the cygpath program via LT_CYGPATH. This is used when\n# when (1) $build is *nix and Cygwin is hosted via a wine environment; or (2)\n# $build is MSYS and $host is Cygwin, or (3) $build is Cygwin. In case (1) or\n# (2), returns the Cygwin file name or path in func_cygpath_result (input\n# file name or path is assumed to be in w32 format, as previously converted\n# from $build's *nix or MSYS format). In case (3), returns the w32 file name\n# or path in func_cygpath_result (input file name or path is assumed to be in\n# Cygwin format). Returns an empty string on error.\n#\n# ARGS are passed to cygpath, with the last one being the file name or path to\n# be converted.\n#\n# Specify the absolute *nix (or w32) name to cygpath in the LT_CYGPATH\n# environment variable; do not put it in $PATH.\nfunc_cygpath ()\n{\n  $opt_debug\n  if test -n \"$LT_CYGPATH\" && test -f \"$LT_CYGPATH\"; then\n    func_cygpath_result=`$LT_CYGPATH \"$@\" 2>/dev/null`\n    if test \"$?\" -ne 0; then\n      # on failure, ensure result is empty\n      func_cygpath_result=\n    fi\n  else\n    func_cygpath_result=\n    func_error \"LT_CYGPATH is empty or specifies non-existent file: \\`$LT_CYGPATH'\"\n  fi\n}\n#end: func_cygpath\n\n\n# func_convert_core_msys_to_w32 ARG\n# Convert file name or path ARG from MSYS format to w32 format.  Return\n# result in func_convert_core_msys_to_w32_result.\nfunc_convert_core_msys_to_w32 ()\n{\n  $opt_debug\n  # awkward: cmd appends spaces to result\n  func_convert_core_msys_to_w32_result=`( cmd //c echo \"$1\" ) 2>/dev/null |\n    $SED -e 's/[ ]*$//' -e \"$lt_sed_naive_backslashify\"`\n}\n#end: func_convert_core_msys_to_w32\n\n\n# func_convert_file_check ARG1 ARG2\n# Verify that ARG1 (a file name in $build format) was converted to $host\n# format in ARG2. Otherwise, emit an error message, but continue (resetting\n# func_to_host_file_result to ARG1).\nfunc_convert_file_check ()\n{\n  $opt_debug\n  if test -z \"$2\" && test -n \"$1\" ; then\n    func_error \"Could not determine host file name corresponding to\"\n    func_error \"  \\`$1'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback:\n    func_to_host_file_result=\"$1\"\n  fi\n}\n# end func_convert_file_check\n\n\n# func_convert_path_check FROM_PATHSEP TO_PATHSEP FROM_PATH TO_PATH\n# Verify that FROM_PATH (a path in $build format) was converted to $host\n# format in TO_PATH. Otherwise, emit an error message, but continue, resetting\n# func_to_host_file_result to a simplistic fallback value (see below).\nfunc_convert_path_check ()\n{\n  $opt_debug\n  if test -z \"$4\" && test -n \"$3\"; then\n    func_error \"Could not determine the host path corresponding to\"\n    func_error \"  \\`$3'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback.  This is a deliberately simplistic \"conversion\" and\n    # should not be \"improved\".  See libtool.info.\n    if test \"x$1\" != \"x$2\"; then\n      lt_replace_pathsep_chars=\"s|$1|$2|g\"\n      func_to_host_path_result=`echo \"$3\" |\n        $SED -e \"$lt_replace_pathsep_chars\"`\n    else\n      func_to_host_path_result=\"$3\"\n    fi\n  fi\n}\n# end func_convert_path_check\n\n\n# func_convert_path_front_back_pathsep FRONTPAT BACKPAT REPL ORIG\n# Modifies func_to_host_path_result by prepending REPL if ORIG matches FRONTPAT\n# and appending REPL if ORIG matches BACKPAT.\nfunc_convert_path_front_back_pathsep ()\n{\n  $opt_debug\n  case $4 in\n  $1 ) func_to_host_path_result=\"$3$func_to_host_path_result\"\n    ;;\n  esac\n  case $4 in\n  $2 ) func_append func_to_host_path_result \"$3\"\n    ;;\n  esac\n}\n# end func_convert_path_front_back_pathsep\n\n\n##################################################\n# $build to $host FILE NAME CONVERSION FUNCTIONS #\n##################################################\n# invoked via `$to_host_file_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# Result will be available in $func_to_host_file_result.\n\n\n# func_to_host_file ARG\n# Converts the file name ARG from $build format to $host format. Return result\n# in func_to_host_file_result.\nfunc_to_host_file ()\n{\n  $opt_debug\n  $to_host_file_cmd \"$1\"\n}\n# end func_to_host_file\n\n\n# func_to_tool_file ARG LAZY\n# converts the file name ARG from $build format to toolchain format. Return\n# result in func_to_tool_file_result.  If the conversion in use is listed\n# in (the comma separated) LAZY, no conversion takes place.\nfunc_to_tool_file ()\n{\n  $opt_debug\n  case ,$2, in\n    *,\"$to_tool_file_cmd\",*)\n      func_to_tool_file_result=$1\n      ;;\n    *)\n      $to_tool_file_cmd \"$1\"\n      func_to_tool_file_result=$func_to_host_file_result\n      ;;\n  esac\n}\n# end func_to_tool_file\n\n\n# func_convert_file_noop ARG\n# Copy ARG to func_to_host_file_result.\nfunc_convert_file_noop ()\n{\n  func_to_host_file_result=\"$1\"\n}\n# end func_convert_file_noop\n\n\n# func_convert_file_msys_to_w32 ARG\n# Convert file name ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_msys_to_w32 ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_to_host_file_result=\"$func_convert_core_msys_to_w32_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_w32\n\n\n# func_convert_file_cygwin_to_w32 ARG\n# Convert file name ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_cygwin_to_w32 ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    # because $build is cygwin, we call \"the\" cygpath in $PATH; no need to use\n    # LT_CYGPATH in this case.\n    func_to_host_file_result=`cygpath -m \"$1\"`\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_cygwin_to_w32\n\n\n# func_convert_file_nix_to_w32 ARG\n# Convert file name ARG from *nix to w32 format.  Requires a wine environment\n# and a working winepath. Returns result in func_to_host_file_result.\nfunc_convert_file_nix_to_w32 ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_to_host_file_result=\"$func_convert_core_file_wine_to_w32_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_w32\n\n\n# func_convert_file_msys_to_cygwin ARG\n# Convert file name ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_file_msys_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_file_result=\"$func_cygpath_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_cygwin\n\n\n# func_convert_file_nix_to_cygwin ARG\n# Convert file name ARG from *nix to Cygwin format.  Requires Cygwin installed\n# in a wine environment, working winepath, and LT_CYGPATH set.  Returns result\n# in func_to_host_file_result.\nfunc_convert_file_nix_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    # convert from *nix to w32, then use cygpath to convert from w32 to cygwin.\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_file_wine_to_w32_result\"\n    func_to_host_file_result=\"$func_cygpath_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_cygwin\n\n\n#############################################\n# $build to $host PATH CONVERSION FUNCTIONS #\n#############################################\n# invoked via `$to_host_path_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# The result will be available in $func_to_host_path_result.\n#\n# Path separators are also converted from $build format to $host format.  If\n# ARG begins or ends with a path separator character, it is preserved (but\n# converted to $host format) on output.\n#\n# All path conversion functions are named using the following convention:\n#   file name conversion function    : func_convert_file_X_to_Y ()\n#   path conversion function         : func_convert_path_X_to_Y ()\n# where, for any given $build/$host combination the 'X_to_Y' value is the\n# same.  If conversion functions are added for new $build/$host combinations,\n# the two new functions must follow this pattern, or func_init_to_host_path_cmd\n# will break.\n\n\n# func_init_to_host_path_cmd\n# Ensures that function \"pointer\" variable $to_host_path_cmd is set to the\n# appropriate value, based on the value of $to_host_file_cmd.\nto_host_path_cmd=\nfunc_init_to_host_path_cmd ()\n{\n  $opt_debug\n  if test -z \"$to_host_path_cmd\"; then\n    func_stripname 'func_convert_file_' '' \"$to_host_file_cmd\"\n    to_host_path_cmd=\"func_convert_path_${func_stripname_result}\"\n  fi\n}\n\n\n# func_to_host_path ARG\n# Converts the path ARG from $build format to $host format. Return result\n# in func_to_host_path_result.\nfunc_to_host_path ()\n{\n  $opt_debug\n  func_init_to_host_path_cmd\n  $to_host_path_cmd \"$1\"\n}\n# end func_to_host_path\n\n\n# func_convert_path_noop ARG\n# Copy ARG to func_to_host_path_result.\nfunc_convert_path_noop ()\n{\n  func_to_host_path_result=\"$1\"\n}\n# end func_convert_path_noop\n\n\n# func_convert_path_msys_to_w32 ARG\n# Convert path ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_path_result.\nfunc_convert_path_msys_to_w32 ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from ARG.  MSYS\n    # behavior is inconsistent here; cygpath turns them into '.;' and ';.';\n    # and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=\"$func_convert_core_msys_to_w32_result\"\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_w32\n\n\n# func_convert_path_cygwin_to_w32 ARG\n# Convert path ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_cygwin_to_w32 ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_to_host_path_result=`cygpath -m -p \"$func_to_host_path_tmp1\"`\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_cygwin_to_w32\n\n\n# func_convert_path_nix_to_w32 ARG\n# Convert path ARG from *nix to w32 format.  Requires a wine environment and\n# a working winepath.  Returns result in func_to_host_file_result.\nfunc_convert_path_nix_to_w32 ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=\"$func_convert_core_path_wine_to_w32_result\"\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_w32\n\n\n# func_convert_path_msys_to_cygwin ARG\n# Convert path ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_path_msys_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_path_result=\"$func_cygpath_result\"\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_cygwin\n\n\n# func_convert_path_nix_to_cygwin ARG\n# Convert path ARG from *nix to Cygwin format.  Requires Cygwin installed in a\n# a wine environment, working winepath, and LT_CYGPATH set.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_nix_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from\n    # ARG. msys behavior is inconsistent here, cygpath turns them\n    # into '.;' and ';.', and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_path_wine_to_w32_result\"\n    func_to_host_path_result=\"$func_cygpath_result\"\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_cygwin\n\n\n# func_mode_compile arg...\nfunc_mode_compile ()\n{\n    $opt_debug\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=\"$nonopt\"  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n    pie_flag=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=\"$arg\"\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=\"$arg\"\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  test -n \"$libobj\" && \\\n\t    func_fatal_error \"you cannot specify \\`-o' more than once\"\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-pie | -fpie | -fPIE)\n          func_append pie_flag \" $arg\"\n\t  continue\n\t  ;;\n\n\t-shared | -static | -prefer-pic | -prefer-non-pic)\n\t  func_append later \" $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  func_stripname '-Wc,' '' \"$arg\"\n\t  args=$func_stripname_result\n\t  lastarg=\n\t  save_ifs=\"$IFS\"; IFS=','\n\t  for arg in $args; do\n\t    IFS=\"$save_ifs\"\n\t    func_append_quoted lastarg \"$arg\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\t  func_stripname ' ' '' \"$lastarg\"\n\t  lastarg=$func_stripname_result\n\n\t  # Add the arguments to base_compile.\n\t  func_append base_compile \" $lastarg\"\n\t  continue\n\t  ;;\n\n\t*)\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=\"$srcfile\"\n\t  srcfile=\"$arg\"\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      func_append_quoted base_compile \"$lastarg\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      func_fatal_error \"you must specify an argument for -Xcompile\"\n      ;;\n    target)\n      func_fatal_error \"you must specify a target with \\`-o'\"\n      ;;\n    *)\n      # Get the name of the library object.\n      test -z \"$libobj\" && {\n\tfunc_basename \"$srcfile\"\n\tlibobj=\"$func_basename_result\"\n      }\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    case $libobj in\n    *.[cCFSifmso] | \\\n    *.ada | *.adb | *.ads | *.asm | \\\n    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \\\n    *.[fF][09]? | *.for | *.java | *.go | *.obj | *.sx | *.cu | *.cup)\n      func_xform \"$libobj\"\n      libobj=$func_xform_result\n      ;;\n    esac\n\n    case $libobj in\n    *.lo) func_lo2o \"$libobj\"; obj=$func_lo2o_result ;;\n    *)\n      func_fatal_error \"cannot determine name of library object from \\`$libobj'\"\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -shared)\n\ttest \"$build_libtool_libs\" != yes && \\\n\t  func_fatal_configuration \"can not build a shared library\"\n\tbuild_old_libs=no\n\tcontinue\n\t;;\n\n      -static)\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    func_quote_for_eval \"$libobj\"\n    test \"X$libobj\" != \"X$func_quote_for_eval_result\" \\\n      && $ECHO \"X$libobj\" | $GREP '[]~#^*{};<>?\"'\"'\"'\t &()|`$[]' \\\n      && func_warning \"libobj name \\`$libobj' may not contain shell special characters.\"\n    func_dirname_and_basename \"$obj\" \"/\" \"\"\n    objname=\"$func_basename_result\"\n    xdir=\"$func_dirname_result\"\n    lobj=${xdir}$objdir/$objname\n\n    test -z \"$base_compile\" && \\\n      func_fatal_help \"you must specify a compilation command\"\n\n    # Delete any leftover library objects.\n    if test \"$build_old_libs\" = yes; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2* | cegcc*)\n      pic_mode=default\n      ;;\n    esac\n    if test \"$pic_mode\" = no && test \"$deplibs_check_method\" != pass_all; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test \"$compiler_c_o\" = no; then\n      output_obj=`$ECHO \"$srcfile\" | $SED 's%^.*/%%; s%\\.[^.]*$%%'`.${objext}\n      lockfile=\"$output_obj.lock\"\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test \"$need_locks\" = yes; then\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test \"$need_locks\" = warn; then\n      if test -f \"$lockfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n      func_append removelist \" $output_obj\"\n      $ECHO \"$srcfile\" > \"$lockfile\"\n    fi\n\n    $opt_dry_run || $RM $removelist\n    func_append removelist \" $lockfile\"\n    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15\n\n    func_to_tool_file \"$srcfile\" func_convert_file_msys_to_w32\n    srcfile=$func_to_tool_file_result\n    func_quote_for_eval \"$srcfile\"\n    qsrcfile=$func_quote_for_eval_result\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test \"$build_libtool_libs\" = yes; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test \"$pic_mode\" != no; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      func_mkdir_p \"$xdir$objdir\"\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tfunc_append command \" -o $lobj\"\n      fi\n\n      func_show_eval_locale \"$command\"\t\\\n          'test -n \"$output_obj\" && $RM $removelist; exit $EXIT_FAILURE'\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$lobj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n\n      # Allow error messages only from the first compilation.\n      if test \"$suppress_opt\" = yes; then\n\tsuppress_output=' >/dev/null 2>&1'\n      fi\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test \"$build_old_libs\" = yes; then\n      if test \"$pic_mode\" != yes; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile$pie_flag\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test \"$compiler_c_o\" = yes; then\n\tfunc_append command \" -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      func_append command \"$suppress_output\"\n      func_show_eval_locale \"$command\" \\\n        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$obj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n    fi\n\n    $opt_dry_run || {\n      func_write_libtool_object \"$libobj\" \"$objdir/$objname\" \"$objname\"\n\n      # Unlock the critical section if it was locked\n      if test \"$need_locks\" != no; then\n\tremovelist=$lockfile\n        $RM \"$lockfile\"\n      fi\n    }\n\n    exit $EXIT_SUCCESS\n}\n\n$opt_help || {\n  test \"$opt_mode\" = compile && func_mode_compile ${1+\"$@\"}\n}\n\nfunc_mode_help ()\n{\n    # We need to display help for each of the modes.\n    case $opt_mode in\n      \"\")\n        # Generic help is extracted from the usage comments\n        # at the start of this file.\n        func_help\n        ;;\n\n      clean)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      compile)\n      $ECHO \\\n\"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -no-suppress      do not suppress compiler output for multiple passes\n  -prefer-pic       try to build PIC objects only\n  -prefer-non-pic   try to build non-PIC objects only\n  -shared           do not build a \\`.o' file suitable for static linking\n  -static           only build a \\`.o' file suitable for static linking\n  -Wc,FLAG          pass FLAG directly to the compiler\n\nCOMPILE-COMMAND is a command to be used in creating a \\`standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix \\`.c' with the\nlibrary object suffix, \\`.lo'.\"\n        ;;\n\n      execute)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to \\`-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n        ;;\n\n      finish)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe \\`--dry-run' option if you just want to see what would be executed.\"\n        ;;\n\n      install)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the \\`install' or \\`cp' program.\n\nThe following components of INSTALL-COMMAND are treated specially:\n\n  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n        ;;\n\n      link)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -bindir BINDIR    specify path to binaries directory (for systems where\n                    libraries must be found in the PATH setting at runtime)\n  -dlopen FILE      \\`-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n                    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n                    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  Use a list of object files found in FILE to specify objects\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -shared           only do dynamic linking of libtool libraries\n  -shrext SUFFIX    override the standard shared library file extension\n  -static           do not do any dynamic linking of uninstalled libtool libraries\n  -static-libtool-libs\n                    do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n                    specify library version info [each variable defaults to 0]\n  -weak LIBNAME     declare that the target provides the LIBNAME interface\n  -Wc,FLAG\n  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler\n  -Wl,FLAG\n  -Xlinker FLAG     pass linker-specific FLAG directly to the linker\n  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)\n\nAll other options (arguments beginning with \\`-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in \\`.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in \\`.la', then a libtool library is created,\nonly library objects (\\`.lo' files) may be specified, and \\`-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in \\`.a' or \\`.lib', then a standard library is created\nusing \\`ar' and \\`ranlib', or on Windows using \\`lib'.\n\nIf OUTPUT-FILE ends in \\`.lo' or \\`.${objext}', then a reloadable object file\nis created, otherwise an executable program is created.\"\n        ;;\n\n      uninstall)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      *)\n        func_fatal_help \"invalid operation mode \\`$opt_mode'\"\n        ;;\n    esac\n\n    echo\n    $ECHO \"Try \\`$progname --help' for more information about other modes.\"\n}\n\n# Now that we've collected a possible --mode arg, show help if necessary\nif $opt_help; then\n  if test \"$opt_help\" = :; then\n    func_mode_help\n  else\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\tfunc_mode_help\n      done\n    } | sed -n '1p; 2,$s/^Usage:/  or: /p'\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\techo\n\tfunc_mode_help\n      done\n    } |\n    sed '1d\n      /^When reporting/,/^Report/{\n\tH\n\td\n      }\n      $x\n      /information about other modes/d\n      /more detailed .*MODE/d\n      s/^Usage:.*--mode=\\([^ ]*\\) .*/Description of \\1 mode:/'\n  fi\n  exit $?\nfi\n\n\n# func_mode_execute arg...\nfunc_mode_execute ()\n{\n    $opt_debug\n    # The first argument is the command name.\n    cmd=\"$nonopt\"\n    test -z \"$cmd\" && \\\n      func_fatal_help \"you must specify a COMMAND\"\n\n    # Handle -dlopen flags immediately.\n    for file in $opt_dlopen; do\n      test -f \"$file\" \\\n\t|| func_fatal_help \"\\`$file' is not a file\"\n\n      dir=\n      case $file in\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"\\`$lib' is not a valid libtool archive\"\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\tfunc_source \"$file\"\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && \\\n\t    func_warning \"\\`$file' was not linked with \\`-export-dynamic'\"\n\t  continue\n\tfi\n\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=\"$func_dirname_result\"\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  func_append dir \"/$objdir\"\n\telse\n\t  if test ! -f \"$dir/$dlname\"; then\n\t    func_fatal_error \"cannot find \\`$dlname' in \\`$dir' or \\`$dir/$objdir'\"\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=\"$func_dirname_result\"\n\t;;\n\n      *)\n\tfunc_warning \"\\`-dlopen' is ignored for non-libtool libraries and objects\"\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=\"$absdir\"\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=\"$magic\"\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -* | *.la | *.lo ) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif func_ltwrapper_script_p \"$file\"; then\n\t  func_source \"$file\"\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\telif func_ltwrapper_executable_p \"$file\"; then\n\t  func_ltwrapper_scriptname \"$file\"\n\t  func_source \"$func_ltwrapper_scriptname_result\"\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      func_append_quoted args \"$file\"\n    done\n\n    if test \"X$opt_dry_run\" = Xfalse; then\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\n      do\n\teval \"if test \\\"\\${save_$lt_var+set}\\\" = set; then\n                $lt_var=\\$save_$lt_var; export $lt_var\n\t      else\n\t\t$lt_unset $lt_var\n\t      fi\"\n      done\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\"\\$cmd$args\"\n    else\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$ECHO \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\techo \"export $shlibpath_var\"\n      fi\n      $ECHO \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest \"$opt_mode\" = execute && func_mode_execute ${1+\"$@\"}\n\n\n# func_mode_finish arg...\nfunc_mode_finish ()\n{\n    $opt_debug\n    libs=\n    libdirs=\n    admincmds=\n\n    for opt in \"$nonopt\" ${1+\"$@\"}\n    do\n      if test -d \"$opt\"; then\n\tfunc_append libdirs \" $opt\"\n\n      elif test -f \"$opt\"; then\n\tif func_lalib_unsafe_p \"$opt\"; then\n\t  func_append libs \" $opt\"\n\telse\n\t  func_warning \"\\`$opt' is not a valid libtool archive\"\n\tfi\n\n      else\n\tfunc_fatal_error \"invalid argument \\`$opt'\"\n      fi\n    done\n\n    if test -n \"$libs\"; then\n      if test -n \"$lt_sysroot\"; then\n        sysroot_regex=`$ECHO \"$lt_sysroot\" | $SED \"$sed_make_literal_regex\"`\n        sysroot_cmd=\"s/\\([ ']\\)$sysroot_regex/\\1/g;\"\n      else\n        sysroot_cmd=\n      fi\n\n      # Remove sysroot references\n      if $opt_dry_run; then\n        for lib in $libs; do\n          echo \"removing references to $lt_sysroot and \\`=' prefixes from $lib\"\n        done\n      else\n        tmpdir=`func_mktempdir`\n        for lib in $libs; do\n\t  sed -e \"${sysroot_cmd} s/\\([ ']-[LR]\\)=/\\1/g; s/\\([ ']\\)=/\\1/g\" $lib \\\n\t    > $tmpdir/tmp-la\n\t  mv -f $tmpdir/tmp-la $lib\n\tdone\n        ${RM}r \"$tmpdir\"\n      fi\n    fi\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  func_execute_cmds \"$finish_cmds\" 'admincmds=\"$admincmds\n'\"$cmd\"'\"'\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $opt_dry_run || eval \"$cmds\" || func_append admincmds \"\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    $opt_silent && exit $EXIT_SUCCESS\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      echo \"----------------------------------------------------------------------\"\n      echo \"Libraries have been installed in:\"\n      for libdir in $libdirs; do\n\t$ECHO \"   $libdir\"\n      done\n      echo\n      echo \"If you ever happen to want to link against installed libraries\"\n      echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n      echo \"specify the full pathname of the library, or use the \\`-LLIBDIR'\"\n      echo \"flag during linking and do at least one of the following:\"\n      if test -n \"$shlibpath_var\"; then\n\techo \"   - add LIBDIR to the \\`$shlibpath_var' environment variable\"\n\techo \"     during execution\"\n      fi\n      if test -n \"$runpath_var\"; then\n\techo \"   - add LIBDIR to the \\`$runpath_var' environment variable\"\n\techo \"     during linking\"\n      fi\n      if test -n \"$hardcode_libdir_flag_spec\"; then\n\tlibdir=LIBDIR\n\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n\t$ECHO \"   - use the \\`$flag' linker flag\"\n      fi\n      if test -n \"$admincmds\"; then\n\t$ECHO \"   - have your system administrator run these commands:$admincmds\"\n      fi\n      if test -f /etc/ld.so.conf; then\n\techo \"   - have your system administrator add LIBDIR to \\`/etc/ld.so.conf'\"\n      fi\n      echo\n\n      echo \"See any operating system documentation about shared libraries for\"\n      case $host in\n\tsolaris2.[6789]|solaris2.1[0-9])\n\t  echo \"more information, such as the ld(1), crle(1) and ld.so(8) manual\"\n\t  echo \"pages.\"\n\t  ;;\n\t*)\n\t  echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n\t  ;;\n      esac\n      echo \"----------------------------------------------------------------------\"\n    fi\n    exit $EXIT_SUCCESS\n}\n\ntest \"$opt_mode\" = finish && func_mode_finish ${1+\"$@\"}\n\n\n# func_mode_install arg...\nfunc_mode_install ()\n{\n    $opt_debug\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$nonopt\" = \"$SHELL\" || test \"$nonopt\" = /bin/sh ||\n       # Allow the use of GNU shtool's install command.\n       case $nonopt in *shtool*) :;; *) false;; esac; then\n      # Aesthetically quote it.\n      func_quote_for_eval \"$nonopt\"\n      install_prog=\"$func_quote_for_eval_result \"\n      arg=$1\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    func_quote_for_eval \"$arg\"\n    func_append install_prog \"$func_quote_for_eval_result\"\n    install_shared_prog=$install_prog\n    case \" $install_prog \" in\n      *[\\\\\\ /]cp\\ *) install_cp=: ;;\n      *) install_cp=false ;;\n    esac\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=no\n    stripme=\n    no_mode=:\n    for arg\n    do\n      arg2=\n      if test -n \"$dest\"; then\n\tfunc_append files \" $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=yes ;;\n      -f)\n\tif $install_cp; then :; else\n\t  prev=$arg\n\tfi\n\t;;\n      -g | -m | -o)\n\tprev=$arg\n\t;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  if test \"x$prev\" = x-m && test -n \"$install_override_mode\"; then\n\t    arg2=$install_override_mode\n\t    no_mode=false\n\t  fi\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      func_quote_for_eval \"$arg\"\n      func_append install_prog \" $func_quote_for_eval_result\"\n      if test -n \"$arg2\"; then\n\tfunc_quote_for_eval \"$arg2\"\n      fi\n      func_append install_shared_prog \" $func_quote_for_eval_result\"\n    done\n\n    test -z \"$install_prog\" && \\\n      func_fatal_help \"you must specify an install program\"\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the \\`$prev' option requires an argument\"\n\n    if test -n \"$install_override_mode\" && $no_mode; then\n      if $install_cp; then :; else\n\tfunc_quote_for_eval \"$install_override_mode\"\n\tfunc_append install_shared_prog \" -m $func_quote_for_eval_result\"\n      fi\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\tfunc_fatal_help \"no file or destination specified\"\n      else\n\tfunc_fatal_help \"you must specify a destination\"\n      fi\n    fi\n\n    # Strip any trailing slash from the destination.\n    func_stripname '' '/' \"$dest\"\n    dest=$func_stripname_result\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=yes\n    if test \"$isdir\" = yes; then\n      destdir=\"$dest\"\n      destname=\n    else\n      func_dirname_and_basename \"$dest\" \"\" \".\"\n      destdir=\"$func_dirname_result\"\n      destname=\"$func_basename_result\"\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files; shift\n      test \"$#\" -gt 1 && \\\n\tfunc_fatal_help \"\\`$dest' is not a directory\"\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  func_fatal_help \"\\`$destdir' must be an absolute directory name\"\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tfunc_append staticlibs \" $file\"\n\t;;\n\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"\\`$file' is not a valid libtool archive\"\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\tfunc_source \"$file\"\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append current_libdirs \" $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append future_libdirs \" $libdir\" ;;\n\t  esac\n\tfi\n\n\tfunc_dirname \"$file\" \"/\" \"\"\n\tdir=\"$func_dirname_result\"\n\tfunc_append dir \"$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$ECHO \"$destdir\" | $SED -e \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  test \"$inst_prefix_dir\" = \"$destdir\" && \\\n\t    func_fatal_error \"error: cannot install \\`$file' to a directory not ending in $libdir\"\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  func_warning \"relinking \\`$file'\"\n\t  func_show_eval \"$relink_command\" \\\n\t    'func_fatal_error \"error: relink \\`$file'\\'' with the above command before installing it\"'\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names; shift\n\tif test -n \"$1\"; then\n\t  realname=\"$1\"\n\t  shift\n\n\t  srcname=\"$realname\"\n\t  test -n \"$relink_command\" && srcname=\"$realname\"T\n\n\t  # Install the shared library and build the symlinks.\n\t  func_show_eval \"$install_shared_prog $dir/$srcname $destdir/$realname\" \\\n\t      'exit $?'\n\t  tstripme=\"$stripme\"\n\t  case $host_os in\n\t  cygwin* | mingw* | pw32* | cegcc*)\n\t    case $realname in\n\t    *.dll.a)\n\t      tstripme=\"\"\n\t      ;;\n\t    esac\n\t    ;;\n\t  esac\n\t  if test -n \"$tstripme\" && test -n \"$striplib\"; then\n\t    func_show_eval \"$striplib $destdir/$realname\" 'exit $?'\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try `ln -sf' first, because the `ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      test \"$linkname\" != \"$realname\" \\\n\t\t&& func_show_eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })\"\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=\"$destdir/$realname\"\n\t  func_execute_cmds \"$postinstall_cmds\" 'exit $?'\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tfunc_basename \"$file\"\n\tname=\"$func_basename_result\"\n\tinstname=\"$dir/$name\"i\n\tfunc_show_eval \"$install_prog $instname $destdir/$name\" 'exit $?'\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && func_append staticlibs \" $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  func_basename \"$file\"\n\t  destfile=\"$func_basename_result\"\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  func_lo2o \"$destfile\"\n\t  staticdest=$func_lo2o_result\n\t  ;;\n\t*.$objext)\n\t  staticdest=\"$destfile\"\n\t  destfile=\n\t  ;;\n\t*)\n\t  func_fatal_help \"cannot copy a libtool object to \\`$destfile'\"\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\ttest -n \"$destfile\" && \\\n\t  func_show_eval \"$install_prog $file $destfile\" 'exit $?'\n\n\t# Install the old object if enabled.\n\tif test \"$build_old_libs\" = yes; then\n\t  # Deduce the name of the old-style object file.\n\t  func_lo2o \"$file\"\n\t  staticobj=$func_lo2o_result\n\t  func_show_eval \"$install_prog \\$staticobj \\$staticdest\" 'exit $?'\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  func_basename \"$file\"\n\t  destfile=\"$func_basename_result\"\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\"\"\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      func_stripname '' '.exe' \"$file\"\n\t      file=$func_stripname_result\n\t      stripped_ext=\".exe\"\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin* | *mingw*)\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      wrapper=$func_ltwrapper_scriptname_result\n\t    else\n\t      func_stripname '' '.exe' \"$file\"\n\t      wrapper=$func_stripname_result\n\t    fi\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif func_ltwrapper_script_p \"$wrapper\"; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  func_source \"$wrapper\"\n\n\t  # Check the variables that should have been set.\n\t  test -z \"$generated_by_libtool_version\" && \\\n\t    func_fatal_error \"invalid libtool wrapper script \\`$wrapper'\"\n\n\t  finalize=yes\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      func_source \"$lib\"\n\t    fi\n\t    libfile=\"$libdir/\"`$ECHO \"$lib\" | $SED 's%^.*/%%g'` ### testsuite: skip nested quoting test\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      func_warning \"\\`$lib' has not been installed in \\`$libdir'\"\n\t      finalize=no\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  func_source \"$wrapper\"\n\n\t  outputname=\n\t  if test \"$fast_install\" = no && test -n \"$relink_command\"; then\n\t    $opt_dry_run || {\n\t      if test \"$finalize\" = yes; then\n\t        tmpdir=`func_mktempdir`\n\t\tfunc_basename \"$file$stripped_ext\"\n\t\tfile=\"$func_basename_result\"\n\t        outputname=\"$tmpdir/$file\"\n\t        # Replace the output file specification.\n\t        relink_command=`$ECHO \"$relink_command\" | $SED 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t        $opt_silent || {\n\t          func_quote_for_expand \"$relink_command\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t        }\n\t        if eval \"$relink_command\"; then :\n\t          else\n\t\t  func_error \"error: relink \\`$file' with the above command before installing it\"\n\t\t  $opt_dry_run || ${RM}r \"$tmpdir\"\n\t\t  continue\n\t        fi\n\t        file=\"$outputname\"\n\t      else\n\t        func_warning \"cannot relink \\`$file'\"\n\t      fi\n\t    }\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$ECHO \"$file$stripped_ext\" | $SED \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    func_stripname '' '.exe' \"$destfile\"\n\t    destfile=$func_stripname_result\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tfunc_show_eval \"$install_prog\\$stripme \\$file \\$destfile\" 'exit $?'\n\t$opt_dry_run || if test -n \"$outputname\"; then\n\t  ${RM}r \"$tmpdir\"\n\tfi\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      func_basename \"$file\"\n      name=\"$func_basename_result\"\n\n      # Set up the ranlib parameters.\n      oldlib=\"$destdir/$name\"\n      func_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n      tool_oldlib=$func_to_tool_file_result\n\n      func_show_eval \"$install_prog \\$file \\$oldlib\" 'exit $?'\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\tfunc_show_eval \"$old_striplib $tool_oldlib\" 'exit $?'\n      fi\n\n      # Do each command in the postinstall commands.\n      func_execute_cmds \"$old_postinstall_cmds\" 'exit $?'\n    done\n\n    test -n \"$future_libdirs\" && \\\n      func_warning \"remember to run \\`$progname --finish$future_libdirs'\"\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      $opt_dry_run && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest \"$opt_mode\" = install && func_mode_install ${1+\"$@\"}\n\n\n# func_generate_dlsyms outputname originator pic_p\n# Extract symbols from dlprefiles and create ${outputname}S.o with\n# a dlpreopen symbol table.\nfunc_generate_dlsyms ()\n{\n    $opt_debug\n    my_outputname=\"$1\"\n    my_originator=\"$2\"\n    my_pic_p=\"${3-no}\"\n    my_prefix=`$ECHO \"$my_originator\" | sed 's%[^a-zA-Z0-9]%_%g'`\n    my_dlsyms=\n\n    if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n      if test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\tmy_dlsyms=\"${my_outputname}S.c\"\n      else\n\tfunc_error \"not configured to extract global symbols from dlpreopened files\"\n      fi\n    fi\n\n    if test -n \"$my_dlsyms\"; then\n      case $my_dlsyms in\n      \"\") ;;\n      *.c)\n\t# Discover the nlist of each of the dlfiles.\n\tnlist=\"$output_objdir/${my_outputname}.nm\"\n\n\tfunc_show_eval \"$RM $nlist ${nlist}S ${nlist}T\"\n\n\t# Parse the name list into a source file.\n\tfunc_verbose \"creating $output_objdir/$my_dlsyms\"\n\n\t$opt_dry_run || $ECHO > \"$output_objdir/$my_dlsyms\" \"\\\n/* $my_dlsyms - symbol resolution table for \\`$my_outputname' dlsym emulation. */\n/* Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n#if defined(__GNUC__) && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))\n#pragma GCC diagnostic ignored \\\"-Wstrict-prototypes\\\"\n#endif\n\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined(_WIN32) || defined(__CYGWIN__) || defined(_WIN32_WCE)\n/* DATA imports from DLLs on WIN32 con't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined(__osf__)\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\tif test \"$dlself\" = yes; then\n\t  func_verbose \"generating symbol list for \\`$output'\"\n\n\t  $opt_dry_run || echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t  # Add our own program objects to the symbol list.\n\t  progfiles=`$ECHO \"$objs$old_deplibs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\t  for progfile in $progfiles; do\n\t    func_to_tool_file \"$progfile\" func_convert_file_msys_to_w32\n\t    func_verbose \"extracting global C symbols from \\`$func_to_tool_file_result'\"\n\t    $opt_dry_run || eval \"$NM $func_to_tool_file_result | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  if test -n \"$export_symbols_regex\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  # Prepare the list of exported symbols\n\t  if test -z \"$export_symbols\"; then\n\t    export_symbols=\"$output_objdir/$outputname.exp\"\n\t    $opt_dry_run || {\n\t      $RM $export_symbols\n\t      eval \"${SED} -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n\t      case $host in\n\t      *cygwin* | *mingw* | *cegcc* )\n                eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n                eval 'cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"'\n\t        ;;\n\t      esac\n\t    }\n\t  else\n\t    $opt_dry_run || {\n\t      eval \"${SED} -e 's/\\([].[*^$]\\)/\\\\\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"'\n\t      eval '$GREP -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t      case $host in\n\t        *cygwin* | *mingw* | *cegcc* )\n\t          eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t          eval 'cat \"$nlist\" >> \"$output_objdir/$outputname.def\"'\n\t          ;;\n\t      esac\n\t    }\n\t  fi\n\tfi\n\n\tfor dlprefile in $dlprefiles; do\n\t  func_verbose \"extracting global C symbols from \\`$dlprefile'\"\n\t  func_basename \"$dlprefile\"\n\t  name=\"$func_basename_result\"\n          case $host in\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # if an import library, we need to obtain dlname\n\t      if func_win32_import_lib_p \"$dlprefile\"; then\n\t        func_tr_sh \"$dlprefile\"\n\t        eval \"curr_lafile=\\$libfile_$func_tr_sh_result\"\n\t        dlprefile_dlbasename=\"\"\n\t        if test -n \"$curr_lafile\" && func_lalib_p \"$curr_lafile\"; then\n\t          # Use subshell, to avoid clobbering current variable values\n\t          dlprefile_dlname=`source \"$curr_lafile\" && echo \"$dlname\"`\n\t          if test -n \"$dlprefile_dlname\" ; then\n\t            func_basename \"$dlprefile_dlname\"\n\t            dlprefile_dlbasename=\"$func_basename_result\"\n\t          else\n\t            # no lafile. user explicitly requested -dlpreopen <import library>.\n\t            $sharedlib_from_linklib_cmd \"$dlprefile\"\n\t            dlprefile_dlbasename=$sharedlib_from_linklib_result\n\t          fi\n\t        fi\n\t        $opt_dry_run || {\n\t          if test -n \"$dlprefile_dlbasename\" ; then\n\t            eval '$ECHO \": $dlprefile_dlbasename\" >> \"$nlist\"'\n\t          else\n\t            func_warning \"Could not compute DLL name from $name\"\n\t            eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          fi\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe |\n\t            $SED -e '/I __imp/d' -e 's/I __nm_/D /;s/_nm__//' >> '$nlist'\"\n\t        }\n\t      else # not an import lib\n\t        $opt_dry_run || {\n\t          eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t        }\n\t      fi\n\t    ;;\n\t    *)\n\t      $opt_dry_run || {\n\t        eval '$ECHO \": $name \" >> \"$nlist\"'\n\t        func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t        eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t      }\n\t    ;;\n          esac\n\tdone\n\n\t$opt_dry_run || {\n\t  # Make sure we have at least an empty file.\n\t  test -f \"$nlist\" || : > \"$nlist\"\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t    $MV \"$nlist\"T \"$nlist\"\n\t  fi\n\n\t  # Try sorting and uniquifying the output.\n\t  if $GREP -v \"^: \" < \"$nlist\" |\n\t      if sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\tsort -k 3\n\t      else\n\t\tsort +2\n\t      fi |\n\t      uniq > \"$nlist\"S; then\n\t    :\n\t  else\n\t    $GREP -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t  fi\n\n\t  if test -f \"$nlist\"S; then\n\t    eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$my_dlsyms\"'\n\t  else\n\t    echo '/* NONE */' >> \"$output_objdir/$my_dlsyms\"\n\t  fi\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n\n/* The mapping between symbol names and symbols.  */\ntypedef struct {\n  const char *name;\n  void *address;\n} lt_dlsymlist;\nextern LT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[];\nLT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[] =\n{\\\n  { \\\"$my_originator\\\", (void *) 0 },\"\n\n\t  case $need_lib_prefix in\n\t  no)\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  *)\n\t    eval \"$global_symbol_to_c_name_address_lib_prefix\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  esac\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_${my_prefix}_LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t} # !$opt_dry_run\n\n\tpic_flag_for_symtable=\n\tcase \"$compile_command \" in\n\t*\" -static \"*) ;;\n\t*)\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2.*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\" ;;\n\t  *-*-hpux*)\n\t    pic_flag_for_symtable=\" $pic_flag\"  ;;\n\t  *)\n\t    if test \"X$my_pic_p\" != Xno; then\n\t      pic_flag_for_symtable=\" $pic_flag\"\n\t    fi\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tsymtab_cflags=\n\tfor arg in $LTCFLAGS; do\n\t  case $arg in\n\t  -pie | -fpie | -fPIE) ;;\n\t  *) func_append symtab_cflags \" $arg\" ;;\n\t  esac\n\tdone\n\n\t# Now compile the dynamic symbol file.\n\tfunc_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable \"$my_dlsyms\")' 'exit $?'\n\n\t# Clean up the generated files.\n\tfunc_show_eval '$RM \"$output_objdir/$my_dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\"'\n\n\t# Transform the symbol file into the correct name.\n\tsymfileobj=\"$output_objdir/${my_outputname}S.$objext\"\n\tcase $host in\n\t*cygwin* | *mingw* | *cegcc* )\n\t  if test -f \"$output_objdir/$my_outputname.def\"; then\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t  else\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  fi\n\t  ;;\n\t*)\n\t  compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  ;;\n\tesac\n\t;;\n      *)\n\tfunc_fatal_error \"unknown suffix for \\`$my_dlsyms'\"\n\t;;\n      esac\n    else\n      # We keep going just in case the user didn't refer to\n      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n      # really was required.\n\n      # Nullify the symbol file.\n      compile_command=`$ECHO \"$compile_command\" | $SED \"s% @SYMFILE@%%\"`\n      finalize_command=`$ECHO \"$finalize_command\" | $SED \"s% @SYMFILE@%%\"`\n    fi\n}\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\n# Despite the name, also deal with 64 bit binaries.\nfunc_win32_libid ()\n{\n  $opt_debug\n  win32_libid_type=\"unknown\"\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    # Keep the egrep pattern in sync with the one in _LT_CHECK_MAGIC_METHOD.\n    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |\n       $EGREP 'file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then\n      func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n      win32_nmres=`eval $NM -f posix -A \\\"$func_to_tool_file_result\\\" |\n\t$SED -n -e '\n\t    1,100{\n\t\t/ I /{\n\t\t    s,.*,import,\n\t\t    p\n\t\t    q\n\t\t}\n\t    }'`\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $ECHO \"$win32_libid_type\"\n}\n\n# func_cygming_dll_for_implib ARG\n#\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib ()\n{\n  $opt_debug\n  sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify \"$1\"`\n}\n\n# func_cygming_dll_for_implib_fallback_core SECTION_NAME LIBNAMEs\n#\n# The is the core of a fallback implementation of a\n# platform-specific function to extract the name of the\n# DLL associated with the specified import library LIBNAME.\n#\n# SECTION_NAME is either .idata$6 or .idata$7, depending\n# on the platform and compiler that created the implib.\n#\n# Echos the name of the DLL associated with the\n# specified import library.\nfunc_cygming_dll_for_implib_fallback_core ()\n{\n  $opt_debug\n  match_literal=`$ECHO \"$1\" | $SED \"$sed_make_literal_regex\"`\n  $OBJDUMP -s --section \"$1\" \"$2\" 2>/dev/null |\n    $SED '/^Contents of section '\"$match_literal\"':/{\n      # Place marker at beginning of archive member dllname section\n      s/.*/====MARK====/\n      p\n      d\n    }\n    # These lines can sometimes be longer than 43 characters, but\n    # are always uninteresting\n    /:[\t ]*file format pe[i]\\{,1\\}-/d\n    /^In archive [^:]*:/d\n    # Ensure marker is printed\n    /^====MARK====/p\n    # Remove all lines with less than 43 characters\n    /^.\\{43\\}/!d\n    # From remaining lines, remove first 43 characters\n    s/^.\\{43\\}//' |\n    $SED -n '\n      # Join marker and all lines until next marker into a single line\n      /^====MARK====/ b para\n      H\n      $ b para\n      b\n      :para\n      x\n      s/\\n//g\n      # Remove the marker\n      s/^====MARK====//\n      # Remove trailing dots and whitespace\n      s/[\\. \\t]*$//\n      # Print\n      /./p' |\n    # we now have a list, one entry per line, of the stringified\n    # contents of the appropriate section of all members of the\n    # archive which possess that section. Heuristic: eliminate\n    # all those which have a first or second character that is\n    # a '.' (that is, objdump's representation of an unprintable\n    # character.) This should work for all archives with less than\n    # 0x302f exports -- but will fail for DLLs whose name actually\n    # begins with a literal '.' or a single character followed by\n    # a '.'.\n    #\n    # Of those that remain, print the first one.\n    $SED -e '/^\\./d;/^.\\./d;q'\n}\n\n# func_cygming_gnu_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is a GNU/binutils-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_gnu_implib_p ()\n{\n  $opt_debug\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_gnu_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $EGREP ' (_head_[A-Za-z0-9_]+_[ad]l*|[A-Za-z0-9_]+_[ad]l*_iname)$'`\n  test -n \"$func_cygming_gnu_implib_tmp\"\n}\n\n# func_cygming_ms_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is an MS-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_ms_implib_p ()\n{\n  $opt_debug\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_ms_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $GREP '_NULL_IMPORT_DESCRIPTOR'`\n  test -n \"$func_cygming_ms_implib_tmp\"\n}\n\n# func_cygming_dll_for_implib_fallback ARG\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n#\n# This fallback implementation is for use when $DLLTOOL\n# does not support the --identify-strict option.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib_fallback ()\n{\n  $opt_debug\n  if func_cygming_gnu_implib_p \"$1\" ; then\n    # binutils import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' \"$1\"`\n  elif func_cygming_ms_implib_p \"$1\" ; then\n    # ms-generated import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' \"$1\"`\n  else\n    # unknown\n    sharedlib_from_linklib_result=\"\"\n  fi\n}\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    $opt_debug\n    f_ex_an_ar_dir=\"$1\"; shift\n    f_ex_an_ar_oldlib=\"$1\"\n    if test \"$lock_old_archive_extraction\" = yes; then\n      lockfile=$f_ex_an_ar_oldlib.lock\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    fi\n    func_show_eval \"(cd \\$f_ex_an_ar_dir && $AR x \\\"\\$f_ex_an_ar_oldlib\\\")\" \\\n\t\t   'stat=$?; rm -f \"$lockfile\"; exit $stat'\n    if test \"$lock_old_archive_extraction\" = yes; then\n      $opt_dry_run || rm -f \"$lockfile\"\n    fi\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      func_fatal_error \"object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\"\n    fi\n}\n\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    $opt_debug\n    my_gentop=\"$1\"; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\"\"\n    my_xlib=\"\"\n    my_xabs=\"\"\n    my_xdir=\"\"\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=\"$my_xlib\" ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      func_basename \"$my_xlib\"\n      my_xlib=\"$func_basename_result\"\n      my_xlib_u=$my_xlib\n      while :; do\n        case \" $extracted_archives \" in\n\t*\" $my_xlib_u \"*)\n\t  func_arith $extracted_serial + 1\n\t  extracted_serial=$func_arith_result\n\t  my_xlib_u=lt$extracted_serial-$my_xlib ;;\n\t*) break ;;\n\tesac\n      done\n      extracted_archives=\"$extracted_archives $my_xlib_u\"\n      my_xdir=\"$my_gentop/$my_xlib_u\"\n\n      func_mkdir_p \"$my_xdir\"\n\n      case $host in\n      *-darwin*)\n\tfunc_verbose \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\t$opt_dry_run || {\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  darwin_base_archive=`basename \"$darwin_archive\"`\n\t  darwin_arches=`$LIPO -info \"$darwin_archive\" 2>/dev/null | $GREP Architectures 2>/dev/null || true`\n\t  if test -n \"$darwin_arches\"; then\n\t    darwin_arches=`$ECHO \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    func_verbose \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches ; do\n\t      func_mkdir_p \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      $LIPO -thin $darwin_arch -output \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\" \"${darwin_archive}\"\n\t      cd \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      func_extract_an_archive \"`pwd`\" \"${darwin_base_archive}\"\n\t      cd \"$darwin_curdir\"\n\t      $RM \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\"\n\t    done # $darwin_arches\n            ## Okay now we've a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print | $SED -e \"$basename\" | sort -u`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n\t      $LIPO -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    $RM -rf unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd $darwin_orig_dir\n\t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\t} # !$opt_dry_run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n    done\n\n    func_extract_archives_result=\"$my_oldobjs\"\n}\n\n\n# func_emit_wrapper [arg=no]\n#\n# Emit a libtool wrapper script on stdout.\n# Don't directly open a file because we may want to\n# incorporate the script contents within a cygwin/mingw\n# wrapper executable.  Must ONLY be called from within\n# func_mode_link because it depends on a number of variables\n# set therein.\n#\n# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\n# variable will take.  If 'yes', then the emitted script\n# will assume that the directory in which it is stored is\n# the $objdir directory.  This is a cygwin/mingw-specific\n# behavior.\nfunc_emit_wrapper ()\n{\n\tfunc_emit_wrapper_arg1=${1-no}\n\n\t$ECHO \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='$sed_quote_subst'\n\n# Be Bourne compatible\nif test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variables:\n  generated_by_libtool_version='$macro_version'\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$ECHO are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    file=\\\"\\$0\\\"\"\n\n    qECHO=`$ECHO \"$ECHO\" | $SED \"$sed_quote_subst\"`\n    $ECHO \"\\\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n    ECHO=\\\"$qECHO\\\"\n  fi\n\n# Very basic option parsing. These options are (a) specific to\n# the libtool wrapper, (b) are identical between the wrapper\n# /script/ and the wrapper /executable/ which is used only on\n# windows platforms, and (c) all begin with the string \"--lt-\"\n# (application programs are unlikely to have options which match\n# this pattern).\n#\n# There are only two supported options: --lt-debug and\n# --lt-dump-script. There is, deliberately, no --lt-help.\n#\n# The first argument to this parsing function should be the\n# script's $0 value, followed by \"$@\".\nlt_option_debug=\nfunc_parse_lt_options ()\n{\n  lt_script_arg0=\\$0\n  shift\n  for lt_opt\n  do\n    case \\\"\\$lt_opt\\\" in\n    --lt-debug) lt_option_debug=1 ;;\n    --lt-dump-script)\n        lt_dump_D=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%/[^/]*$%%'\\`\n        test \\\"X\\$lt_dump_D\\\" = \\\"X\\$lt_script_arg0\\\" && lt_dump_D=.\n        lt_dump_F=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%^.*/%%'\\`\n        cat \\\"\\$lt_dump_D/\\$lt_dump_F\\\"\n        exit 0\n      ;;\n    --lt-*)\n        \\$ECHO \\\"Unrecognized --lt- option: '\\$lt_opt'\\\" 1>&2\n        exit 1\n      ;;\n    esac\n  done\n\n  # Print the debug banner immediately:\n  if test -n \\\"\\$lt_option_debug\\\"; then\n    echo \\\"${outputname}:${output}:\\${LINENO}: libtool wrapper (GNU $PACKAGE$TIMESTAMP) $VERSION\\\" 1>&2\n  fi\n}\n\n# Used when --lt-debug. Prints its arguments to stdout\n# (redirection is the responsibility of the caller)\nfunc_lt_dump_args ()\n{\n  lt_dump_args_N=1;\n  for lt_arg\n  do\n    \\$ECHO \\\"${outputname}:${output}:\\${LINENO}: newargv[\\$lt_dump_args_N]: \\$lt_arg\\\"\n    lt_dump_args_N=\\`expr \\$lt_dump_args_N + 1\\`\n  done\n}\n\n# Core function for launching the target application\nfunc_exec_program_core ()\n{\n\"\n  case $host in\n  # Backslashes separate directories on plain windows\n  *-*-mingw | *-*-os2* | *-cegcc*)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"${outputname}:${output}:\\${LINENO}: newargv[0]: \\$progdir\\\\\\\\\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n\n  *)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"${outputname}:${output}:\\${LINENO}: newargv[0]: \\$progdir/\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n  esac\n  $ECHO \"\\\n      \\$ECHO \\\"\\$0: cannot exec \\$program \\$*\\\" 1>&2\n      exit 1\n}\n\n# A function to encapsulate launching the target application\n# Strips options in the --lt-* namespace from \\$@ and\n# launches target application with the remaining arguments.\nfunc_exec_program ()\n{\n  case \\\" \\$* \\\" in\n  *\\\\ --lt-*)\n    for lt_wr_arg\n    do\n      case \\$lt_wr_arg in\n      --lt-*) ;;\n      *) set x \\\"\\$@\\\" \\\"\\$lt_wr_arg\\\"; shift;;\n      esac\n      shift\n    done ;;\n  esac\n  func_exec_program_core \\${1+\\\"\\$@\\\"}\n}\n\n  # Parse options\n  func_parse_lt_options \\\"\\$0\\\" \\${1+\\\"\\$@\\\"}\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  done\n\n  # Usually 'no', except on cygwin/mingw when embedded into\n  # the cwrapper.\n  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1\n  if test \\\"\\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\\\" = \\\"yes\\\"; then\n    # special case for '.'\n    if test \\\"\\$thisdir\\\" = \\\".\\\"; then\n      thisdir=\\`pwd\\`\n    fi\n    # remove .libs from thisdir\n    case \\\"\\$thisdir\\\" in\n    *[\\\\\\\\/]$objdir ) thisdir=\\`\\$ECHO \\\"\\$thisdir\\\" | $SED 's%[\\\\\\\\/][^\\\\\\\\/]*$%%'\\` ;;\n    $objdir )   thisdir=. ;;\n    esac\n  fi\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test \"$fast_install\" = yes; then\n\t  $ECHO \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" ||\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | ${SED} 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $MKDIR \\\"\\$progdir\\\"\n    else\n      $RM \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $ECHO \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\$relink_command 2>&1\\`; then :\n      else\n\t$ECHO \\\"\\$relink_command_output\\\" >&2\n\t$RM \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $RM \\\"\\$progdir/\\$program\\\";\n      $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $RM \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $ECHO \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$ECHO \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# fixup the dll searchpath if we need to.\n\t#\n\t# Fix the DLL searchpath if we need to.  Do this before prepending\n\t# to shlibpath, because on Windows, both are PATH and uninstalled\n\t# libraries must come first.\n\tif test -n \"$dllsearchpath\"; then\n\t  $ECHO \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t# Export our shlibpath_var if we have one.\n\tif test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $ECHO \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" | $SED 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t$ECHO \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n      func_exec_program \\${1+\\\"\\$@\\\"}\n    fi\n  else\n    # The program doesn't exist.\n    \\$ECHO \\\"\\$0: error: \\\\\\`\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$ECHO \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    \\$ECHO \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n}\n\n\n# func_emit_cwrapperexe_src\n# emit the source code for a wrapper executable on stdout\n# Must ONLY be called from within func_mode_link because\n# it depends on a number of variable set therein.\nfunc_emit_cwrapperexe_src ()\n{\n\tcat <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n*/\nEOF\n\t    cat <<\"EOF\"\n#ifdef _MSC_VER\n# define _CRT_SECURE_NO_DEPRECATE 1\n#endif\n#include <stdio.h>\n#include <stdlib.h>\n#ifdef _MSC_VER\n# include <direct.h>\n# include <process.h>\n# include <io.h>\n#else\n# include <unistd.h>\n# include <stdint.h>\n# ifdef __CYGWIN__\n#  include <io.h>\n# endif\n#endif\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <sys/stat.h>\n\n/* declarations of non-ANSI functions */\n#if defined(__MINGW32__)\n# ifdef __STRICT_ANSI__\nint _putenv (const char *);\n# endif\n#elif defined(__CYGWIN__)\n# ifdef __STRICT_ANSI__\nchar *realpath (const char *, char *);\nint putenv (char *);\nint setenv (const char *, const char *, int);\n# endif\n/* #elif defined (other platforms) ... */\n#endif\n\n/* portability defines, excluding path handling macros */\n#if defined(_MSC_VER)\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n# define S_IXUSR _S_IEXEC\n# ifndef _INTPTR_T_DEFINED\n#  define _INTPTR_T_DEFINED\n#  define intptr_t int\n# endif\n#elif defined(__MINGW32__)\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n#elif defined(__CYGWIN__)\n# define HAVE_SETENV\n# define FOPEN_WB \"wb\"\n/* #elif defined (other platforms) ... */\n#endif\n\n#if defined(PATH_MAX)\n# define LT_PATHMAX PATH_MAX\n#elif defined(MAXPATHLEN)\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef S_IXOTH\n# define S_IXOTH 0\n#endif\n#ifndef S_IXGRP\n# define S_IXGRP 0\n#endif\n\n/* path handling portability macros */\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \\\n  defined (__OS2__)\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# define FOPEN_WB \"wb\"\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#ifndef FOPEN_WB\n# define FOPEN_WB \"w\"\n#endif\n#ifndef _O_BINARY\n# define _O_BINARY 0\n#endif\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free ((void *) stale); stale = 0; } \\\n} while (0)\n\n#if defined(LT_DEBUGWRAPPER)\nstatic int lt_debug = 1;\n#else\nstatic int lt_debug = 0;\n#endif\n\nconst char *program_name = \"libtool-wrapper\"; /* in case xstrdup fails */\n\nvoid *xmalloc (size_t num);\nchar *xstrdup (const char *string);\nconst char *base_name (const char *name);\nchar *find_executable (const char *wrapper);\nchar *chase_symlinks (const char *pathspec);\nint make_executable (const char *path);\nint check_executable (const char *path);\nchar *strendzap (char *str, const char *pat);\nvoid lt_debugprintf (const char *file, int line, const char *fmt, ...);\nvoid lt_fatal (const char *file, int line, const char *message, ...);\nstatic const char *nonnull (const char *s);\nstatic const char *nonempty (const char *s);\nvoid lt_setenv (const char *name, const char *value);\nchar *lt_extend_str (const char *orig_value, const char *add, int to_end);\nvoid lt_update_exe_path (const char *name, const char *value);\nvoid lt_update_lib_path (const char *name, const char *value);\nchar **prepare_spawn (char **argv);\nvoid lt_dump_script (FILE *f);\nEOF\n\n\t    cat <<EOF\nvolatile const char * MAGIC_EXE = \"$magic_exe\";\nconst char * LIB_PATH_VARNAME = \"$shlibpath_var\";\nEOF\n\n\t    if test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n              func_to_host_path \"$temp_rpath\"\n\t      cat <<EOF\nconst char * LIB_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * LIB_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test -n \"$dllsearchpath\"; then\n              func_to_host_path \"$dllsearchpath:\"\n\t      cat <<EOF\nconst char * EXE_PATH_VARNAME = \"PATH\";\nconst char * EXE_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * EXE_PATH_VARNAME = \"\";\nconst char * EXE_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test \"$fast_install\" = yes; then\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"lt-$outputname\"; /* hopefully, no .exe */\nEOF\n\t    else\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"$outputname\"; /* hopefully, no .exe */\nEOF\n\t    fi\n\n\n\t    cat <<\"EOF\"\n\n#define LTWRAPPER_OPTION_PREFIX         \"--lt-\"\n\nstatic const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;\nstatic const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX \"dump-script\";\nstatic const char *debug_opt            = LTWRAPPER_OPTION_PREFIX \"debug\";\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int  newargc;\n  char *tmp_pathspec;\n  char *actual_cwrapper_path;\n  char *actual_cwrapper_name;\n  char *target_name;\n  char *lt_argv_zero;\n  intptr_t rval = 127;\n\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  newargz = XMALLOC (char *, argc + 1);\n\n  /* very simple arg parsing; don't want to rely on getopt\n   * also, copy all non cwrapper options to newargz, except\n   * argz[0], which is handled differently\n   */\n  newargc=0;\n  for (i = 1; i < argc; i++)\n    {\n      if (strcmp (argv[i], dumpscript_opt) == 0)\n\t{\nEOF\n\t    case \"$host\" in\n\t      *mingw* | *cygwin* )\n\t\t# make stdout use \"unix\" line endings\n\t\techo \"          setmode(1,_O_BINARY);\"\n\t\t;;\n\t      esac\n\n\t    cat <<\"EOF\"\n\t  lt_dump_script (stdout);\n\t  return 0;\n\t}\n      if (strcmp (argv[i], debug_opt) == 0)\n\t{\n          lt_debug = 1;\n          continue;\n\t}\n      if (strcmp (argv[i], ltwrapper_option_prefix) == 0)\n        {\n          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX\n             namespace, but it is not one of the ones we know about and\n             have already dealt with, above (inluding dump-script), then\n             report an error. Otherwise, targets might begin to believe\n             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX\n             namespace. The first time any user complains about this, we'll\n             need to make LTWRAPPER_OPTION_PREFIX a configure-time option\n             or a configure.ac-settable value.\n           */\n          lt_fatal (__FILE__, __LINE__,\n\t\t    \"unrecognized %s option: '%s'\",\n                    ltwrapper_option_prefix, argv[i]);\n        }\n      /* otherwise ... */\n      newargz[++newargc] = xstrdup (argv[i]);\n    }\n  newargz[++newargc] = NULL;\n\nEOF\n\t    cat <<EOF\n  /* The GNU banner must be the first non-error debug message */\n  lt_debugprintf (__FILE__, __LINE__, \"libtool wrapper (GNU $PACKAGE$TIMESTAMP) $VERSION\\n\");\nEOF\n\t    cat <<\"EOF\"\n  lt_debugprintf (__FILE__, __LINE__, \"(main) argv[0]: %s\\n\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__, \"(main) program_name: %s\\n\", program_name);\n\n  tmp_pathspec = find_executable (argv[0]);\n  if (tmp_pathspec == NULL)\n    lt_fatal (__FILE__, __LINE__, \"couldn't find %s\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (before symlink chase) at: %s\\n\",\n\t\t  tmp_pathspec);\n\n  actual_cwrapper_path = chase_symlinks (tmp_pathspec);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (after symlink chase) at: %s\\n\",\n\t\t  actual_cwrapper_path);\n  XFREE (tmp_pathspec);\n\n  actual_cwrapper_name = xstrdup (base_name (actual_cwrapper_path));\n  strendzap (actual_cwrapper_path, actual_cwrapper_name);\n\n  /* wrapper name transforms */\n  strendzap (actual_cwrapper_name, \".exe\");\n  tmp_pathspec = lt_extend_str (actual_cwrapper_name, \".exe\", 1);\n  XFREE (actual_cwrapper_name);\n  actual_cwrapper_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  /* target_name transforms -- use actual target program name; might have lt- prefix */\n  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));\n  strendzap (target_name, \".exe\");\n  tmp_pathspec = lt_extend_str (target_name, \".exe\", 1);\n  XFREE (target_name);\n  target_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(main) libtool target name: %s\\n\",\n\t\t  target_name);\nEOF\n\n\t    cat <<EOF\n  newargz[0] =\n    XMALLOC (char, (strlen (actual_cwrapper_path) +\n\t\t    strlen (\"$objdir\") + 1 + strlen (actual_cwrapper_name) + 1));\n  strcpy (newargz[0], actual_cwrapper_path);\n  strcat (newargz[0], \"$objdir\");\n  strcat (newargz[0], \"/\");\nEOF\n\n\t    cat <<\"EOF\"\n  /* stop here, and copy so we don't have to do this twice */\n  tmp_pathspec = xstrdup (newargz[0]);\n\n  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */\n  strcat (newargz[0], actual_cwrapper_name);\n\n  /* DO want the lt- prefix here if it exists, so use target_name */\n  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);\n  XFREE (tmp_pathspec);\n  tmp_pathspec = NULL;\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t    cat <<\"EOF\"\n  {\n    char* p;\n    while ((p = strchr (newargz[0], '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n    while ((p = strchr (lt_argv_zero, '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n  }\nEOF\n\t    ;;\n\t    esac\n\n\t    cat <<\"EOF\"\n  XFREE (target_name);\n  XFREE (actual_cwrapper_path);\n  XFREE (actual_cwrapper_name);\n\n  lt_setenv (\"BIN_SH\", \"xpg4\"); /* for Tru64 */\n  lt_setenv (\"DUALCASE\", \"1\");  /* for MSK sh */\n  /* Update the DLL searchpath.  EXE_PATH_VALUE ($dllsearchpath) must\n     be prepended before (that is, appear after) LIB_PATH_VALUE ($temp_rpath)\n     because on Windows, both *_VARNAMEs are PATH but uninstalled\n     libraries must come first. */\n  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);\n  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);\n\n  lt_debugprintf (__FILE__, __LINE__, \"(main) lt_argv_zero: %s\\n\",\n\t\t  nonnull (lt_argv_zero));\n  for (i = 0; i < newargc; i++)\n    {\n      lt_debugprintf (__FILE__, __LINE__, \"(main) newargz[%d]: %s\\n\",\n\t\t      i, nonnull (newargz[i]));\n    }\n\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n  /* execv doesn't actually work on mingw as expected on unix */\n  newargz = prepare_spawn (newargz);\n  rval = _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);\n  if (rval == -1)\n    {\n      /* failed to start process */\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"(main) failed to launch target \\\"%s\\\": %s\\n\",\n\t\t      lt_argv_zero, nonnull (strerror (errno)));\n      return 127;\n    }\n  return rval;\nEOF\n\t\t;;\n\t      *)\n\t\tcat <<\"EOF\"\n  execv (lt_argv_zero, newargz);\n  return rval; /* =127, but avoids unused variable warning */\nEOF\n\t\t;;\n\t    esac\n\n\t    cat <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void *p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (__FILE__, __LINE__, \"memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),\n\t\t\t  string) : NULL;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char) name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable (const char *path)\n{\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(check_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0)\n      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))\n    return 1;\n  else\n    return 0;\n}\n\nint\nmake_executable (const char *path)\n{\n  int rval = 0;\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(make_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if (stat (path, &st) >= 0)\n    {\n      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);\n    }\n  return rval;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise\n   Does not chase symlinks, even on platforms that support them.\n*/\nchar *\nfind_executable (const char *wrapper)\n{\n  int has_slash = 0;\n  const char *p;\n  const char *p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  int tmp_len;\n  char *concat_name;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(find_executable): %s\\n\",\n                  nonempty (wrapper));\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable (concat_name))\n\treturn concat_name;\n      XFREE (concat_name);\n    }\n  else\n    {\n#endif\n      if (IS_DIR_SEPARATOR (wrapper[0]))\n\t{\n\t  concat_name = xstrdup (wrapper);\n\t  if (check_executable (concat_name))\n\t    return concat_name;\n\t  XFREE (concat_name);\n\t}\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n    }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n      {\n\thas_slash = 1;\n\tbreak;\n      }\n  if (!has_slash)\n    {\n      /* no slashes; search PATH */\n      const char *path = getenv (\"PATH\");\n      if (path != NULL)\n\t{\n\t  for (p = path; *p; p = p_next)\n\t    {\n\t      const char *q;\n\t      size_t p_len;\n\t      for (q = p; *q; q++)\n\t\tif (IS_PATH_SEPARATOR (*q))\n\t\t  break;\n\t      p_len = q - p;\n\t      p_next = (*q == '\\0' ? q : q + 1);\n\t      if (p_len == 0)\n\t\t{\n\t\t  /* empty path: current directory */\n\t\t  if (getcwd (tmp, LT_PATHMAX) == NULL)\n\t\t    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n                              nonnull (strerror (errno)));\n\t\t  tmp_len = strlen (tmp);\n\t\t  concat_name =\n\t\t    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, tmp, tmp_len);\n\t\t  concat_name[tmp_len] = '/';\n\t\t  strcpy (concat_name + tmp_len + 1, wrapper);\n\t\t}\n\t      else\n\t\t{\n\t\t  concat_name =\n\t\t    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, p, p_len);\n\t\t  concat_name[p_len] = '/';\n\t\t  strcpy (concat_name + p_len + 1, wrapper);\n\t\t}\n\t      if (check_executable (concat_name))\n\t\treturn concat_name;\n\t      XFREE (concat_name);\n\t    }\n\t}\n      /* not found in PATH; assume curdir */\n    }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n              nonnull (strerror (errno)));\n  tmp_len = strlen (tmp);\n  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable (concat_name))\n    return concat_name;\n  XFREE (concat_name);\n  return NULL;\n}\n\nchar *\nchase_symlinks (const char *pathspec)\n{\n#ifndef S_ISLNK\n  return xstrdup (pathspec);\n#else\n  char buf[LT_PATHMAX];\n  struct stat s;\n  char *tmp_pathspec = xstrdup (pathspec);\n  char *p;\n  int has_symlinks = 0;\n  while (strlen (tmp_pathspec) && !has_symlinks)\n    {\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"checking path component for symlinks: %s\\n\",\n\t\t      tmp_pathspec);\n      if (lstat (tmp_pathspec, &s) == 0)\n\t{\n\t  if (S_ISLNK (s.st_mode) != 0)\n\t    {\n\t      has_symlinks = 1;\n\t      break;\n\t    }\n\n\t  /* search backwards for last DIR_SEPARATOR */\n\t  p = tmp_pathspec + strlen (tmp_pathspec) - 1;\n\t  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    p--;\n\t  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    {\n\t      /* no more DIR_SEPARATORS left */\n\t      break;\n\t    }\n\t  *p = '\\0';\n\t}\n      else\n\t{\n\t  lt_fatal (__FILE__, __LINE__,\n\t\t    \"error accessing file \\\"%s\\\": %s\",\n\t\t    tmp_pathspec, nonnull (strerror (errno)));\n\t}\n    }\n  XFREE (tmp_pathspec);\n\n  if (!has_symlinks)\n    {\n      return xstrdup (pathspec);\n    }\n\n  tmp_pathspec = realpath (pathspec, buf);\n  if (tmp_pathspec == 0)\n    {\n      lt_fatal (__FILE__, __LINE__,\n\t\t\"could not follow symlinks for %s\", pathspec);\n    }\n  return xstrdup (tmp_pathspec);\n#endif\n}\n\nchar *\nstrendzap (char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert (str != NULL);\n  assert (pat != NULL);\n\n  len = strlen (str);\n  patlen = strlen (pat);\n\n  if (patlen <= len)\n    {\n      str += len - patlen;\n      if (strcmp (str, pat) == 0)\n\t*str = '\\0';\n    }\n  return str;\n}\n\nvoid\nlt_debugprintf (const char *file, int line, const char *fmt, ...)\n{\n  va_list args;\n  if (lt_debug)\n    {\n      (void) fprintf (stderr, \"%s:%s:%d: \", program_name, file, line);\n      va_start (args, fmt);\n      (void) vfprintf (stderr, fmt, args);\n      va_end (args);\n    }\n}\n\nstatic void\nlt_error_core (int exit_status, const char *file,\n\t       int line, const char *mode,\n\t       const char *message, va_list ap)\n{\n  fprintf (stderr, \"%s:%s:%d: %s: \", program_name, file, line, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *file, int line, const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, file, line, \"FATAL\", message, ap);\n  va_end (ap);\n}\n\nstatic const char *\nnonnull (const char *s)\n{\n  return s ? s : \"(null)\";\n}\n\nstatic const char *\nnonempty (const char *s)\n{\n  return (s && !*s) ? \"(empty)\" : nonnull (s);\n}\n\nvoid\nlt_setenv (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_setenv) setting '%s' to '%s'\\n\",\n                  nonnull (name), nonnull (value));\n  {\n#ifdef HAVE_SETENV\n    /* always make a copy, for consistency with !HAVE_SETENV */\n    char *str = xstrdup (value);\n    setenv (name, str, 1);\n#else\n    int len = strlen (name) + 1 + strlen (value) + 1;\n    char *str = XMALLOC (char, len);\n    sprintf (str, \"%s=%s\", name, value);\n    if (putenv (str) != EXIT_SUCCESS)\n      {\n        XFREE (str);\n      }\n#endif\n  }\n}\n\nchar *\nlt_extend_str (const char *orig_value, const char *add, int to_end)\n{\n  char *new_value;\n  if (orig_value && *orig_value)\n    {\n      int orig_value_len = strlen (orig_value);\n      int add_len = strlen (add);\n      new_value = XMALLOC (char, add_len + orig_value_len + 1);\n      if (to_end)\n        {\n          strcpy (new_value, orig_value);\n          strcpy (new_value + orig_value_len, add);\n        }\n      else\n        {\n          strcpy (new_value, add);\n          strcpy (new_value + add_len, orig_value);\n        }\n    }\n  else\n    {\n      new_value = xstrdup (add);\n    }\n  return new_value;\n}\n\nvoid\nlt_update_exe_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_exe_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      /* some systems can't cope with a ':'-terminated path #' */\n      int len = strlen (new_value);\n      while (((len = strlen (new_value)) > 0) && IS_PATH_SEPARATOR (new_value[len-1]))\n        {\n          new_value[len-1] = '\\0';\n        }\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nvoid\nlt_update_lib_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_lib_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nEOF\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n\n/* Prepares an argument vector before calling spawn().\n   Note that spawn() does not by itself call the command interpreter\n     (getenv (\"COMSPEC\") != NULL ? getenv (\"COMSPEC\") :\n      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n         GetVersionEx(&v);\n         v.dwPlatformId == VER_PLATFORM_WIN32_NT;\n      }) ? \"cmd.exe\" : \"command.com\").\n   Instead it simply concatenates the arguments, separated by ' ', and calls\n   CreateProcess().  We must quote the arguments since Win32 CreateProcess()\n   interprets characters like ' ', '\\t', '\\\\', '\"' (but not '<' and '>') in a\n   special way:\n   - Space and tab are interpreted as delimiters. They are not treated as\n     delimiters if they are surrounded by double quotes: \"...\".\n   - Unescaped double quotes are removed from the input. Their only effect is\n     that within double quotes, space and tab are treated like normal\n     characters.\n   - Backslashes not followed by double quotes are not special.\n   - But 2*n+1 backslashes followed by a double quote become\n     n backslashes followed by a double quote (n >= 0):\n       \\\" -> \"\n       \\\\\\\" -> \\\"\n       \\\\\\\\\\\" -> \\\\\"\n */\n#define SHELL_SPECIAL_CHARS \"\\\"\\\\ \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\n#define SHELL_SPACE_CHARS \" \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\nchar **\nprepare_spawn (char **argv)\n{\n  size_t argc;\n  char **new_argv;\n  size_t i;\n\n  /* Count number of arguments.  */\n  for (argc = 0; argv[argc] != NULL; argc++)\n    ;\n\n  /* Allocate new argument vector.  */\n  new_argv = XMALLOC (char *, argc + 1);\n\n  /* Put quoted arguments into the new argument vector.  */\n  for (i = 0; i < argc; i++)\n    {\n      const char *string = argv[i];\n\n      if (string[0] == '\\0')\n\tnew_argv[i] = xstrdup (\"\\\"\\\"\");\n      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)\n\t{\n\t  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);\n\t  size_t length;\n\t  unsigned int backslashes;\n\t  const char *s;\n\t  char *quoted_string;\n\t  char *p;\n\n\t  length = 0;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    length++;\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\tlength += backslashes + 1;\n\t      length++;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    length += backslashes + 1;\n\n\t  quoted_string = XMALLOC (char, length + 1);\n\n\t  p = quoted_string;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    *p++ = '\"';\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\t{\n\t\t  unsigned int j;\n\t\t  for (j = backslashes + 1; j > 0; j--)\n\t\t    *p++ = '\\\\';\n\t\t}\n\t      *p++ = c;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    {\n\t      unsigned int j;\n\t      for (j = backslashes; j > 0; j--)\n\t\t*p++ = '\\\\';\n\t      *p++ = '\"';\n\t    }\n\t  *p = '\\0';\n\n\t  new_argv[i] = quoted_string;\n\t}\n      else\n\tnew_argv[i] = (char *) string;\n    }\n  new_argv[argc] = NULL;\n\n  return new_argv;\n}\nEOF\n\t\t;;\n\t    esac\n\n            cat <<\"EOF\"\nvoid lt_dump_script (FILE* f)\n{\nEOF\n\t    func_emit_wrapper yes |\n\t      $SED -n -e '\ns/^\\(.\\{79\\}\\)\\(..*\\)/\\1\\\n\\2/\nh\ns/\\([\\\\\"]\\)/\\\\\\1/g\ns/$/\\\\n/\ns/\\([^\\n]*\\).*/  fputs (\"\\1\", f);/p\ng\nD'\n            cat <<\"EOF\"\n}\nEOF\n}\n# end: func_emit_cwrapperexe_src\n\n# func_win32_import_lib_p ARG\n# True if ARG is an import lib, as indicated by $file_magic_cmd\nfunc_win32_import_lib_p ()\n{\n    $opt_debug\n    case `eval $file_magic_cmd \\\"\\$1\\\" 2>/dev/null | $SED -e 10q` in\n    *import*) : ;;\n    *) false ;;\n    esac\n}\n\n# func_mode_link arg...\nfunc_mode_link ()\n{\n    $opt_debug\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # which system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll which has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=$nonopt\n    base_compile=\"$nonopt $@\"\n    compile_command=$nonopt\n    finalize_command=$nonopt\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n    new_inherited_linker_flags=\n\n    avoid_version=no\n    bindir=\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=no\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n    weak_libs=\n    single_module=\"${wl}-single_module\"\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -shared)\n\ttest \"$build_libtool_libs\" != yes && \\\n\t  func_fatal_configuration \"can not build a shared library\"\n\tbuild_old_libs=no\n\tbreak\n\t;;\n      -all-static | -static | -static-libtool-libs)\n\tcase $arg in\n\t-all-static)\n\t  if test \"$build_libtool_libs\" = yes && test -z \"$link_static_flag\"; then\n\t    func_warning \"complete static linking is impossible in this configuration\"\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\t-static)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\t  ;;\n\t-static-libtool-libs)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\tesac\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=\"$1\"\n      shift\n      func_quote_for_eval \"$arg\"\n      qarg=$func_quote_for_eval_unquoted_result\n      func_append libtool_args \" $func_quote_for_eval_result\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  func_append compile_command \" @OUTPUT@\"\n\t  func_append finalize_command \" @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tbindir)\n\t  bindir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tdlfiles|dlprefiles)\n\t  if test \"$preload\" = no; then\n\t    # Add the symbol object into the linking commands.\n\t    func_append compile_command \" @SYMFILE@\"\n\t    func_append finalize_command \" @SYMFILE@\"\n\t    preload=yes\n\t  fi\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test \"$dlself\" = no; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test \"$prev\" = dlprefiles; then\n\t      dlself=yes\n\t    elif test \"$prev\" = dlfiles && test \"$dlopen_self\" != yes; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test \"$prev\" = dlfiles; then\n\t      func_append dlfiles \" $arg\"\n\t    else\n\t      func_append dlprefiles \" $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=\"$arg\"\n\t  test -f \"$arg\" \\\n\t    || func_fatal_error \"symbol file \\`$arg' does not exist\"\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tframework)\n\t  case $host in\n\t    *-*-darwin*)\n\t      case \"$deplibs \" in\n\t\t*\" $qarg.ltframework \"*) ;;\n\t\t*) func_append deplibs \" $qarg.ltframework\" # this is fixed later\n\t\t   ;;\n\t      esac\n\t      ;;\n\t  esac\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat \"$save_arg\"`\n\t    do\n#\t      func_append moreargs \" $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if func_lalib_unsafe_p \"$arg\"; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\tfunc_source \"$arg\"\n\n\t\tif test -z \"$pic_object\" ||\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test \"$pic_object\" = none &&\n\t\t   test \"$non_pic_object\" = none; then\n\t\t  func_fatal_error \"cannot find name of object for \\`$arg'\"\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\tfunc_dirname \"$arg\" \"/\" \"\"\n\t\txdir=\"$func_dirname_result\"\n\n\t\tif test \"$pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=\"$xdir$pic_object\"\n\n\t\t  if test \"$prev\" = dlfiles; then\n\t\t    if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\t      func_append dlfiles \" $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test \"$prev\" = dlprefiles; then\n\t\t    # Preload the old-style object.\n\t\t    func_append dlprefiles \" $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  arg=\"$pic_object\"\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test \"$non_pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=\"$xdir$non_pic_object\"\n\n\t\t  # A standard non-PIC object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t\t    arg=\"$non_pic_object\"\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=\"$pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif $opt_dry_run; then\n\t\t  # Extract subdirectory from the argument.\n\t\t  func_dirname \"$arg\" \"/\" \"\"\n\t\t  xdir=\"$func_dirname_result\"\n\n\t\t  func_lo2o \"$arg\"\n\t\t  pic_object=$xdir$objdir/$func_lo2o_result\n\t\t  non_pic_object=$xdir$func_lo2o_result\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t        else\n\t\t  func_fatal_error \"\\`$arg' is not a valid libtool object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    func_fatal_error \"link input file \\`$arg' does not exist\"\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=\"-$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    func_fatal_error \"only absolute run-paths are allowed\"\n\t    ;;\n\t  esac\n\t  if test \"$prev\" = rpath; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append rpath \" $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append xrpath \" $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\tshrext)\n\t  shrext_cmds=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tweak)\n\t  func_append weak_libs \" $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\txcclinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txcompiler)\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $wl$qarg\"\n\t  prev=\n\t  func_append compile_command \" $wl$qarg\"\n\t  func_append finalize_command \" $wl$qarg\"\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=\"$arg\"\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  # See comment for -static flag below, for more details.\n\t  func_append compile_command \" $link_static_flag\"\n\t  func_append finalize_command \" $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\tfunc_fatal_error \"\\`-allow-undefined' must not be used because it is the default\"\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -bindir)\n\tprev=bindir\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  func_fatal_error \"more than one -exported-symbols argument is not allowed\"\n\tfi\n\tif test \"X$arg\" = \"X-export-symbols\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n\tprev=framework\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tfunc_stripname \"-L\" '' \"$arg\"\n\tif test -z \"$func_stripname_result\"; then\n\t  if test \"$#\" -gt 0; then\n\t    func_fatal_error \"require no space between \\`-L' and \\`$1'\"\n\t  else\n\t    func_fatal_error \"need path for \\`-L' option\"\n\t  fi\n\tfi\n\tfunc_resolve_sysroot \"$func_stripname_result\"\n\tdir=$func_resolve_sysroot_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  test -z \"$absdir\" && \\\n\t    func_fatal_error \"cannot determine absolute directory name of \\`$dir'\"\n\t  dir=\"$absdir\"\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"* | *\" $arg \"*)\n\t  # Will only happen for absolute or sysroot arguments\n\t  ;;\n\t*)\n\t  # Preserve sysroot, but never include relative directories\n\t  case $dir in\n\t    [\\\\/]* | [A-Za-z]:[\\\\/]* | =*) func_append deplibs \" $arg\" ;;\n\t    *) func_append deplibs \" -L$dir\" ;;\n\t  esac\n\t  func_append lib_search_path \" $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$dir\" | $SED 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  ::) dllsearchpath=$dir;;\n\t  *) func_append dllsearchpath \":$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test \"X$arg\" = \"X-lc\" || test \"X$arg\" = \"X-lm\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  esac\n\telif test \"X$arg\" = \"X-lc_r\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tfunc_append deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      # Darwin uses the -arch flag to determine output architecture.\n      -model|-arch|-isysroot|--sysroot)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n      |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tcase \"$new_inherited_linker_flags \" in\n\t    *\" $arg \"*) ;;\n\t    * ) func_append new_inherited_linker_flags \" $arg\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -multi_module)\n\tsingle_module=\"${wl}-multi_module\"\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # and Darwin in order for the loader to find any dlls it needs.\n\t  func_warning \"\\`-no-install' is ignored for $host\"\n\t  func_warning \"assuming \\`-no-fast-install' instead\"\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tfunc_stripname '-R' '' \"$arg\"\n\tdir=$func_stripname_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t=*)\n\t  func_stripname '=' '' \"$dir\"\n\t  dir=$lt_sysroot$func_stripname_result\n\t  ;;\n\t*)\n\t  func_fatal_error \"only absolute run-paths are allowed\"\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) func_append xrpath \" $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -shared)\n\t# The effects of -shared are defined in a previous loop.\n\tcontinue\n\t;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -static | -static-libtool-libs)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -weak)\n        prev=weak\n\tcontinue\n\t;;\n\n      -Wc,*)\n\tfunc_stripname '-Wc,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=\"$save_ifs\"\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Wl,*)\n\tfunc_stripname '-Wl,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $wl$func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $wl$func_quote_for_eval_result\"\n\t  func_append linker_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=\"$save_ifs\"\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # -msg_* for osf cc\n      -msg_*)\n\tfunc_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n\n      # Flags to be passed through unchanged, with rationale:\n      # -64, -mips[0-9]      enable 64-bit mode for the SGI compiler\n      # -r[0-9][0-9]*        specify processor for the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode for the Sun compiler\n      # +DA*, +DD*           enable 64-bit mode for the HP compiler\n      # -q*                  compiler args for the IBM compiler\n      # -m*, -t[45]*, -txscale* architecture-specific flags for GCC\n      # -F/path              path to uninstalled frameworks, gcc on darwin\n      # -p, -pg, --coverage, -fprofile-*  profiling flags for GCC\n      # @file                GCC response files\n      # -tp=*                Portland pgcc target processor selection\n      # --sysroot=*          for sysroot support\n      # -O*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \\\n      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \\\n      -O*|-flto*|-fwhopr*|-fuse-linker-plugin)\n        func_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n        func_append compile_command \" $arg\"\n        func_append finalize_command \" $arg\"\n        func_append compiler_flags \" $arg\"\n        continue\n        ;;\n\n      # Some other compiler flag.\n      -* | +*)\n        func_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tfunc_append objs \" $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif func_lalib_unsafe_p \"$arg\"; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  func_source \"$arg\"\n\n\t  if test -z \"$pic_object\" ||\n\t     test -z \"$non_pic_object\" ||\n\t     test \"$pic_object\" = none &&\n\t     test \"$non_pic_object\" = none; then\n\t    func_fatal_error \"cannot find name of object for \\`$arg'\"\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  func_dirname \"$arg\" \"/\" \"\"\n\t  xdir=\"$func_dirname_result\"\n\n\t  if test \"$pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=\"$xdir$pic_object\"\n\n\t    if test \"$prev\" = dlfiles; then\n\t      if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\tfunc_append dlfiles \" $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test \"$prev\" = dlprefiles; then\n\t      # Preload the old-style object.\n\t      func_append dlprefiles \" $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    func_append libobjs \" $pic_object\"\n\t    arg=\"$pic_object\"\n\t  fi\n\n\t  # Non-PIC object.\n\t  if test \"$non_pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=\"$xdir$non_pic_object\"\n\n\t    # A standard non-PIC object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t    if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t      arg=\"$non_pic_object\"\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=\"$pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if $opt_dry_run; then\n\t    # Extract subdirectory from the argument.\n\t    func_dirname \"$arg\" \"/\" \"\"\n\t    xdir=\"$func_dirname_result\"\n\n\t    func_lo2o \"$arg\"\n\t    pic_object=$xdir$objdir/$func_lo2o_result\n\t    non_pic_object=$xdir$func_lo2o_result\n\t    func_append libobjs \" $pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  else\n\t    func_fatal_error \"\\`$arg' is not a valid libtool object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tfunc_append deplibs \" $arg\"\n\tfunc_append old_deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tfunc_resolve_sysroot \"$arg\"\n\tif test \"$prev\" = dlfiles; then\n\t  # This library was specified with -dlopen.\n\t  func_append dlfiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telif test \"$prev\" = dlprefiles; then\n\t  # The library was specified with -dlpreopen.\n\t  func_append dlprefiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telse\n\t  func_append deplibs \" $func_resolve_sysroot_result\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\tfunc_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n      fi\n    done # argument parsing loop\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the \\`$prevarg' option requires an argument\"\n\n    if test \"$export_dynamic\" = yes && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      func_append compile_command \" $arg\"\n      func_append finalize_command \" $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    func_basename \"$output\"\n    outputname=\"$func_basename_result\"\n    libobjs_save=\"$libobjs\"\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$ECHO \\\"\\${$shlibpath_var}\\\" \\| \\$SED \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n\n    func_dirname \"$output\" \"/\" \"\"\n    output_objdir=\"$func_dirname_result$objdir\"\n    func_to_tool_file \"$output_objdir/\"\n    tool_output_objdir=$func_to_tool_file_result\n    # Create the object directory.\n    func_mkdir_p \"$output_objdir\"\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      func_fatal_help \"you must specify an output file\"\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if $opt_preserve_dup_deps ; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\tesac\n      fi\n      func_append libs \" $deplib\"\n    done\n\n    if test \"$linkmode\" = lib; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if $opt_duplicate_compiler_generated_deps; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) func_append specialdeplibs \" $pre_post_deps\" ;;\n\t  esac\n\t  func_append pre_post_deps \" $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n\n    case $linkmode in\n    lib)\n\tpasses=\"conv dlpreopen link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    func_fatal_help \"libraries can \\`-dlopen' only libtool libraries: $file\"\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=no\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n\n    for pass in $passes; do\n      # The preopen pass in lib mode reverses $deplibs; put it back here\n      # so that -L comes before libs that need it for instance...\n      if test \"$linkmode,$pass\" = \"lib,link\"; then\n\t## FIXME: Find the place where the list is rebuilt in the wrong\n\t##        order, and fix it there properly\n        tmp_deplibs=\n\tfor deplib in $deplibs; do\n\t  tmp_deplibs=\"$deplib $tmp_deplibs\"\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n      fi\n\n      if test \"$linkmode,$pass\" = \"lib,link\" ||\n\t test \"$linkmode,$pass\" = \"prog,scan\"; then\n\tlibs=\"$deplibs\"\n\tdeplibs=\n      fi\n      if test \"$linkmode\" = prog; then\n\tcase $pass in\n\tdlopen) libs=\"$dlfiles\" ;;\n\tdlpreopen) libs=\"$dlprefiles\" ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test \"$linkmode,$pass\" = \"lib,dlpreopen\"; then\n\t# Collect and forward deplibs of preopened libtool libs\n\tfor lib in $dlprefiles; do\n\t  # Ignore non-libtool-libs\n\t  dependency_libs=\n\t  func_resolve_sysroot \"$lib\"\n\t  case $lib in\n\t  *.la)\tfunc_source \"$func_resolve_sysroot_result\" ;;\n\t  esac\n\n\t  # Collect preopened libtool deplibs, except any this library\n\t  # has declared as weak libs\n\t  for deplib in $dependency_libs; do\n\t    func_basename \"$deplib\"\n            deplib_base=$func_basename_result\n\t    case \" $weak_libs \" in\n\t    *\" $deplib_base \"*) ;;\n\t    *) func_append deplibs \" $deplib\" ;;\n\t    esac\n\t  done\n\tdone\n\tlibs=\"$dlprefiles\"\n      fi\n      if test \"$pass\" = dlopen; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=\"$deplibs\"\n\tdeplibs=\n      fi\n\n      for deplib in $libs; do\n\tlib=\n\tfound=no\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n        |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    func_append compiler_flags \" $deplib\"\n\t    if test \"$linkmode\" = lib ; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test \"$linkmode\" != lib && test \"$linkmode\" != prog; then\n\t    func_warning \"\\`-l' is ignored for archives/objects\"\n\t    continue\n\t  fi\n\t  func_stripname '-l' '' \"$deplib\"\n\t  name=$func_stripname_result\n\t  if test \"$linkmode\" = lib; then\n\t    searchdirs=\"$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path\"\n\t  else\n\t    searchdirs=\"$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path\"\n\t  fi\n\t  for searchdir in $searchdirs; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=\"$searchdir/lib${name}${search_ext}\"\n\t      if test -f \"$lib\"; then\n\t\tif test \"$search_ext\" = \".la\"; then\n\t\t  found=yes\n\t\telse\n\t\t  found=no\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if test \"$found\" != yes; then\n\t    # deplib doesn't seem to be a libtool library\n\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  else # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif func_lalib_p \"$lib\"; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  func_source \"$lib\"\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=\"$l\"\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\" ; then # only static version available\n\t\t    found=no\n\t\t    func_dirname \"$lib\" \"\" \".\"\n\t\t    ladir=\"$func_dirname_result\"\n\t\t    lib=$ladir/$old_library\n\t\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  fi\n\t  ;; # -l\n\t*.ltframework)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$deplib $deplibs\"\n\t    if test \"$linkmode\" = lib ; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test \"$pass\" = conv && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" = conv; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test \"$pass\" = scan; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  *)\n\t    func_warning \"\\`-L' is ignored for archives/objects\"\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test \"$pass\" = link; then\n\t    func_stripname '-R' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    dir=$func_resolve_sysroot_result\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append xrpath \" $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la)\n\t  func_resolve_sysroot \"$deplib\"\n\t  lib=$func_resolve_sysroot_result\n\t  ;;\n\t*.$libext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    # Linking convenience modules into shared libraries is allowed,\n\t    # but linking other static libraries is non-portable.\n\t    case \" $dlpreconveniencelibs \" in\n\t    *\" $deplib \"*) ;;\n\t    *)\n\t      valid_a_lib=no\n\t      case $deplibs_check_method in\n\t\tmatch_pattern*)\n\t\t  set dummy $deplibs_check_method; shift\n\t\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t\t  if eval \"\\$ECHO \\\"$deplib\\\"\" 2>/dev/null | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t    valid_a_lib=yes\n\t\t  fi\n\t\t;;\n\t\tpass_all)\n\t\t  valid_a_lib=yes\n\t\t;;\n\t      esac\n\t      if test \"$valid_a_lib\" != yes; then\n\t\techo\n\t\t$ECHO \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t\techo \"*** that it is just a static archive that I should not use here.\"\n\t      else\n\t\techo\n\t\t$ECHO \"*** Warning: Linking the shared library $output against the\"\n\t\t$ECHO \"*** static library $deplib is not portable!\"\n\t\tdeplibs=\"$deplib $deplibs\"\n\t      fi\n\t      ;;\n\t    esac\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" != link; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test \"$linkmode\" = prog; then\n\t    if test \"$pass\" = dlpreopen || test \"$dlopen_support\" != yes || test \"$build_libtool_libs\" = no; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      func_append newdlprefiles \" $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      func_append newdlfiles \" $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=yes\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\n\tif test \"$found\" = yes || test -f \"$lib\"; then :\n\telse\n\t  func_fatal_error \"cannot find the library \\`$lib' or unhandled argument \\`$deplib'\"\n\tfi\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$lib\" \\\n\t  || func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\n\tfunc_dirname \"$lib\" \"\" \".\"\n\tladir=\"$func_dirname_result\"\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\tinherited_linker_flags=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tfunc_source \"$lib\"\n\n\t# Convert \"-framework foo\" to \"foo.ltframework\"\n\tif test -n \"$inherited_linker_flags\"; then\n\t  tmp_inherited_linker_flags=`$ECHO \"$inherited_linker_flags\" | $SED 's/-framework \\([^ $]*\\)/\\1.ltframework/g'`\n\t  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do\n\t    case \" $new_inherited_linker_flags \" in\n\t      *\" $tmp_inherited_linker_flag \"*) ;;\n\t      *) func_append new_inherited_linker_flags \" $tmp_inherited_linker_flag\";;\n\t    esac\n\t  done\n\tfi\n\tdependency_libs=`$ECHO \" $dependency_libs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tif test \"$linkmode,$pass\" = \"lib,link\" ||\n\t   test \"$linkmode,$pass\" = \"prog,scan\" ||\n\t   { test \"$linkmode\" != prog && test \"$linkmode\" != lib; }; then\n\t  test -n \"$dlopen\" && func_append dlfiles \" $dlopen\"\n\t  test -n \"$dlpreopen\" && func_append dlprefiles \" $dlpreopen\"\n\tfi\n\n\tif test \"$pass\" = conv; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      func_fatal_error \"cannot find name of link library for \\`$lib'\"\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    func_append convenience \" $ladir/$objdir/$old_library\"\n\t    func_append old_convenience \" $ladir/$objdir/$old_library\"\n\t  elif test \"$linkmode\" != prog && test \"$linkmode\" != lib; then\n\t    func_fatal_error \"\\`$lib' is not a convenience library\"\n\t  fi\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    deplibs=\"$deplib $deplibs\"\n\t    if $opt_preserve_dup_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tif test -n \"$old_library\" &&\n\t   { test \"$prefer_static_libs\" = yes ||\n\t     test \"$prefer_static_libs,$installed\" = \"built,no\"; }; then\n\t  linklib=$old_library\n\telse\n\t  for l in $old_library $library_names; do\n\t    linklib=\"$l\"\n\t  done\n\tfi\n\tif test -z \"$linklib\"; then\n\t  func_fatal_error \"cannot find name of link library for \\`$lib'\"\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test \"$pass\" = dlopen; then\n\t  if test -z \"$libdir\"; then\n\t    func_fatal_error \"cannot -dlopen a convenience library: \\`$lib'\"\n\t  fi\n\t  if test -z \"$dlname\" ||\n\t     test \"$dlopen_support\" != yes ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    func_append dlprefiles \" $lib $dependency_libs\"\n\t  else\n\t    func_append newdlfiles \" $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=\"$ladir\" ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    func_warning \"cannot determine absolute directory name of \\`$ladir'\"\n\t    func_warning \"passing it literally to the linker, although it might fail\"\n\t    abs_ladir=\"$ladir\"\n\t  fi\n\t  ;;\n\tesac\n\tfunc_basename \"$lib\"\n\tlaname=\"$func_basename_result\"\n\n\t# Find the relevant object directory and library name.\n\tif test \"X$installed\" = Xyes; then\n\t  if test ! -f \"$lt_sysroot$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    func_warning \"library \\`$lib' was moved.\"\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    libdir=\"$abs_ladir\"\n\t  else\n\t    dir=\"$lt_sysroot$libdir\"\n\t    absdir=\"$lt_sysroot$libdir\"\n\t  fi\n\t  test \"X$hardcode_automatic\" = Xyes && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  else\n\t    dir=\"$ladir/$objdir\"\n\t    absdir=\"$abs_ladir/$objdir\"\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tfunc_stripname 'lib' '.la' \"$laname\"\n\tname=$func_stripname_result\n\n\t# This library was specified with -dlpreopen.\n\tif test \"$pass\" = dlpreopen; then\n\t  if test -z \"$libdir\" && test \"$linkmode\" = prog; then\n\t    func_fatal_error \"only libraries may -dlpreopen a convenience library: \\`$lib'\"\n\t  fi\n\t  case \"$host\" in\n\t    # special handling for platforms with PE-DLLs.\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # Linker will automatically link against shared library if both\n\t      # static and shared are present.  Therefore, ensure we extract\n\t      # symbols from the import library if a shared library is present\n\t      # (otherwise, the dlopen module name will be incorrect).  We do\n\t      # this by putting the import library name into $newdlprefiles.\n\t      # We recover the dlopen module name by 'saving' the la file\n\t      # name in a special purpose variable, and (later) extracting the\n\t      # dlname from the la file.\n\t      if test -n \"$dlname\"; then\n\t        func_tr_sh \"$dir/$linklib\"\n\t        eval \"libfile_$func_tr_sh_result=\\$abs_ladir/\\$laname\"\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      fi\n\t    ;;\n\t    * )\n\t      # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t      # are required to link).\n\t      if test -n \"$old_library\"; then\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t      elif test -n \"$dlname\"; then\n\t        func_append newdlprefiles \" $dir/$dlname\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      fi\n\t    ;;\n\t  esac\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test \"$linkmode\" = lib; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test \"$linkmode\" = prog && test \"$pass\" != link; then\n\t  func_append newlib_search_path \" $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=no\n\t  if test \"$link_all_deplibs\" != no || test -z \"$library_names\" ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    linkalldeplibs=yes\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) func_stripname '-L' '' \"$deplib\"\n\t         func_resolve_sysroot \"$func_stripname_result\"\n\t         func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t\t ;;\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if test \"$linkalldeplibs\" = yes; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if $opt_preserve_dup_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t  if test -n \"$library_names\" &&\n\t     { { test \"$prefer_static_libs\" = no ||\n\t         test \"$prefer_static_libs,$installed\" = \"built,yes\"; } ||\n\t       test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\" ; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case \"$temp_rpath:\" in\n\t      *\"$absdir:\"*) ;;\n\t      *) func_append temp_rpath \"$absdir:\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if test \"$alldeplibs\" = yes &&\n\t     { test \"$deplibs_check_method\" = pass_all ||\n\t       { test \"$build_libtool_libs\" = yes &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test \"$use_static_libs\" = built && test \"$installed\" = yes; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test \"$use_static_libs\" = no || test -z \"$old_library\"; }; then\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc*)\n\t      # No point in relinking DLLs because paths are not encoded\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=no\n\t    ;;\n\t  *)\n\t    if test \"$installed\" = no; then\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=yes\n\t    fi\n\t    ;;\n\t  esac\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on some\n\t  # systems (darwin).  Don't bleat about dlopened modules though!\n\t  dlopenmodule=\"\"\n\t  for dlpremoduletest in $dlprefiles; do\n\t    if test \"X$dlpremoduletest\" = \"X$lib\"; then\n\t      dlopenmodule=\"$dlpremoduletest\"\n\t      break\n\t    fi\n\t  done\n\t  if test -z \"$dlopenmodule\" && test \"$shouldnotlink\" = yes && test \"$pass\" = link; then\n\t    echo\n\t    if test \"$linkmode\" = prog; then\n\t      $ECHO \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $ECHO \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $ECHO \"*** $linklib is not portable!\"\n\t  fi\n\t  if test \"$linkmode\" = lib &&\n\t     test \"$hardcode_into_libs\" = yes; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    shift\n\t    realname=\"$1\"\n\t    shift\n\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=\"$dlname\"\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw* | *cegcc*)\n\t        func_arith $current - $age\n\t\tmajor=$func_arith_result\n\t\tversuffix=\"-$major\"\n\t\t;;\n\t      esac\n\t      eval soname=\\\"$soname_spec\\\"\n\t    else\n\t      soname=\"$realname\"\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=\"$soname\"\n\t    func_basename \"$soroot\"\n\t    soname=\"$func_basename_result\"\n\t    func_stripname 'lib' '.dll' \"$soname\"\n\t    newlib=libimp-$func_stripname_result.a\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      func_verbose \"extracting exported symbol list from \\`$soname'\"\n\t      func_execute_cmds \"$extract_expsyms_cmds\" 'exit $?'\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      func_verbose \"generating import library for \\`$soname'\"\n\t      func_execute_cmds \"$old_archive_from_expsyms_cmds\" 'exit $?'\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test \"$linkmode\" = prog || test \"$opt_mode\" != relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test \"$hardcode_direct\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv4*uw2*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a (non-dlopened) module then we can not\n\t\t    # link against it, someone is ignoring the earlier warnings\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n\t\t\t $GREP \": [^:]* bundle\" >/dev/null ; then\n\t\t      if test \"X$dlopenmodule\" != \"X$lib\"; then\n\t\t\t$ECHO \"*** Warning: lib $linklib is a module, not a shared library\"\n\t\t\tif test -z \"$old_library\" ; then\n\t\t\t  echo\n\t\t\t  echo \"*** And there doesn't seem to be a static archive available\"\n\t\t\t  echo \"*** The link will probably fail, sorry\"\n\t\t\telse\n\t\t\t  add=\"$dir/$old_library\"\n\t\t\tfi\n\t\t      elif test -n \"$old_library\"; then\n\t\t\tadd=\"$dir/$old_library\"\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test \"$hardcode_minus_L\" = no; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=\"$dir\" ;;\n\t\tesac\n\t\tadd_dir=\"-L$dir\"\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = no; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test \"$hardcode_direct\" = yes &&\n\t         test \"$hardcode_direct_absolute\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t      elif test \"$hardcode_minus_L\" = yes; then\n\t\tadd_dir=\"-L$absdir\"\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = yes; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test \"$lib_linked\" != yes; then\n\t      func_fatal_configuration \"unsupported hardcode properties\"\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) func_append compile_shlibpath \"$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test \"$hardcode_direct\" != yes &&\n\t\t test \"$hardcode_minus_L\" != yes &&\n\t\t test \"$hardcode_shlibpath_var\" = yes; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) func_append finalize_shlibpath \"$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test \"$linkmode\" = prog || test \"$opt_mode\" = relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test \"$hardcode_direct\" = yes &&\n\t       test \"$hardcode_direct_absolute\" = no; then\n\t      add=\"$libdir/$linklib\"\n\t    elif test \"$hardcode_minus_L\" = yes; then\n\t      add_dir=\"-L$libdir\"\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_shlibpath_var\" = yes; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) func_append finalize_shlibpath \"$libdir:\" ;;\n\t      esac\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_automatic\" = yes; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\" ; then\n\t\tadd=\"$inst_prefix_dir$libdir/$linklib\"\n\t      else\n\t\tadd=\"$libdir/$linklib\"\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=\"-L$libdir\"\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=\"-l$name\"\n\t    fi\n\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test \"$linkmode\" = prog; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test \"$hardcode_direct\" != unsupported; then\n\t    test -n \"$old_library\" && linklib=\"$old_library\"\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test \"$build_libtool_libs\" = yes; then\n\t  # Not a shared library\n\t  if test \"$deplibs_check_method\" != pass_all; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    echo\n\t    $ECHO \"*** Warning: This system can not link to static lib archive $lib.\"\n\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test \"$module\" = yes; then\n\t      echo \"*** But as you try to build a module library, libtool will still create \"\n\t      echo \"*** a static module, that should work as long as the dlopening application\"\n\t      echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\techo\n\t\techo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\techo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t\techo \"*** not find such a program.  So, this module is probably useless.\"\n\t\techo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test \"$build_old_libs\" = no; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test \"$linkmode\" = lib; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test \"$hardcode_into_libs\" != yes ||\n\t       test \"$build_old_libs\" = yes ||\n\t       test \"$link_static\" = yes; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) func_stripname '-R' '' \"$libdir\"\n\t           temp_xrpath=$func_stripname_result\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) func_append xrpath \" $temp_xrpath\";;\n\t\t   esac;;\n\t      *) func_append temp_deplibs \" $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=\"$temp_deplibs\"\n\t  fi\n\n\t  func_append newlib_search_path \" $absdir\"\n\t  # Link against this library\n\t  test \"$link_static\" = no && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    case $deplib in\n              -L*) func_stripname '-L' '' \"$deplib\"\n                   func_resolve_sysroot \"$func_stripname_result\";;\n              *) func_resolve_sysroot \"$deplib\" ;;\n            esac\n\t    if $opt_preserve_dup_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $func_resolve_sysroot_result \"*)\n                func_append specialdeplibs \" $func_resolve_sysroot_result\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $func_resolve_sysroot_result\"\n\t  done\n\n\t  if test \"$link_all_deplibs\" != no; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      path=\n\t      case $deplib in\n\t      -L*) path=\"$deplib\" ;;\n\t      *.la)\n\t        func_resolve_sysroot \"$deplib\"\n\t        deplib=$func_resolve_sysroot_result\n\t        func_dirname \"$deplib\" \"\" \".\"\n\t\tdir=$func_dirname_result\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=\"$dir\" ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    func_warning \"cannot determine absolute directory name of \\`$dir'\"\n\t\t    absdir=\"$dir\"\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif $GREP \"^installed=no\" $deplib > /dev/null; then\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  depdepl=\n\t\t  eval deplibrary_names=`${SED} -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\" ; then\n\t\t    for tmp in $deplibrary_names ; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$absdir/$objdir/$depdepl\" ; then\n\t\t      depdepl=\"$absdir/$objdir/$depdepl\"\n\t\t      darwin_install_name=`${OTOOL} -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`\n                      if test -z \"$darwin_install_name\"; then\n                          darwin_install_name=`${OTOOL64} -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`\n                      fi\n\t\t      func_append compiler_flags \" ${wl}-dylib_file ${wl}${darwin_install_name}:${depdepl}\"\n\t\t      func_append linker_flags \" -dylib_file ${darwin_install_name}:${depdepl}\"\n\t\t      path=\n\t\t    fi\n\t\t  fi\n\t\t  ;;\n\t\t*)\n\t\t  path=\"-L$absdir/$objdir\"\n\t\t  ;;\n\t\tesac\n\t\telse\n\t\t  eval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  test -z \"$libdir\" && \\\n\t\t    func_fatal_error \"\\`$deplib' is not a valid libtool archive\"\n\t\t  test \"$absdir\" != \"$libdir\" && \\\n\t\t    func_warning \"\\`$deplib' seems to be moved\"\n\n\t\t  path=\"-L$absdir\"\n\t\tfi\n\t\t;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      if test \"$pass\" = link; then\n\tif test \"$linkmode\" = \"prog\"; then\n\t  compile_deplibs=\"$new_inherited_linker_flags $compile_deplibs\"\n\t  finalize_deplibs=\"$new_inherited_linker_flags $finalize_deplibs\"\n\telse\n\t  compiler_flags=\"$compiler_flags \"`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfi\n      fi\n      dependency_libs=\"$newdependency_libs\"\n      if test \"$pass\" = dlpreopen; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test \"$pass\" != dlopen; then\n\tif test \"$pass\" != conv; then\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append lib_search_path \" $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\tfi\n\n\tif test \"$linkmode,$pass\" != \"prog,link\"; then\n\t  vars=\"deplibs\"\n\telse\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\\"\\$$var\\\"\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) func_append tmp_libs \" $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) func_append tmp_libs \" $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\\"$tmp_libs\\\"\n\tdone # for var\n      fi\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs ; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\"\"\n\t  ;;\n\tesac\n\tif test -n \"$i\" ; then\n\t  func_append tmp_libs \" $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test \"$linkmode\" = prog; then\n      dlfiles=\"$newdlfiles\"\n    fi\n    if test \"$linkmode\" = prog || test \"$linkmode\" = lib; then\n      dlprefiles=\"$newdlprefiles\"\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tfunc_warning \"\\`-dlopen' is ignored for archives\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"\\`-l' and \\`-L' are ignored for archives\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"\\`-rpath' is ignored for archives\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"\\`-R' is ignored for archives\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info/-version-number' is ignored for archives\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for archives\"\n\n      test -n \"$export_symbols$export_symbols_regex\" && \\\n\tfunc_warning \"\\`-export-symbols' is ignored for archives\"\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=\"$output\"\n      func_append objs \"$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form `libNAME.la'.\n      case $outputname in\n      lib*)\n\tfunc_stripname 'lib' '.la' \"$outputname\"\n\tname=$func_stripname_result\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\ttest \"$module\" = no && \\\n\t  func_fatal_help \"libtool library \\`$output' must begin with \\`lib'\"\n\n\tif test \"$need_lib_prefix\" != no; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  func_stripname '' '.la' \"$outputname\"\n\t  name=$func_stripname_result\n\t  eval shared_ext=\\\"$shrext_cmds\\\"\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  func_stripname '' '.la' \"$outputname\"\n\t  libname=$func_stripname_result\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test \"$deplibs_check_method\" != pass_all; then\n\t  func_fatal_error \"cannot build libtool library \\`$output' from non-libtool objects on this host:$objs\"\n\telse\n\t  echo\n\t  $ECHO \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $ECHO \"*** objects $objs is not portable!\"\n\t  func_append libobjs \" $objs\"\n\tfi\n      fi\n\n      test \"$dlself\" != no && \\\n\tfunc_warning \"\\`-dlopen self' is ignored for libtool libraries\"\n\n      set dummy $rpath\n      shift\n      test \"$#\" -gt 1 && \\\n\tfunc_warning \"ignoring multiple \\`-rpath's for a libtool library\"\n\n      install_libdir=\"$1\"\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test \"$build_libtool_libs\" = yes; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a `.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\ttest -n \"$vinfo\" && \\\n\t  func_warning \"\\`-version-info/-version-number' is ignored for convenience libraries\"\n\n\ttest -n \"$release\" && \\\n\t  func_warning \"\\`-release' is ignored for convenience libraries\"\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=\"$IFS\"; IFS=':'\n\tset dummy $vinfo 0 0 0\n\tshift\n\tIFS=\"$save_ifs\"\n\n\ttest -n \"$7\" && \\\n\t  func_fatal_help \"too many parameters to \\`-version-info'\"\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=\"$1\"\n\t  number_minor=\"$2\"\n\t  number_revision=\"$3\"\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # which has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  # correct linux to gnu/linux during the next big refactor\n\t  darwin|linux|osf|windows|none)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=\"$number_minor\"\n\t    revision=\"$number_revision\"\n\t    ;;\n\t  freebsd-aout|freebsd-elf|qnx|sunos)\n\t    current=\"$number_major\"\n\t    revision=\"$number_minor\"\n\t    age=\"0\"\n\t    ;;\n\t  irix|nonstopux)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=\"$number_minor\"\n\t    revision=\"$number_minor\"\n\t    lt_irix_increment=no\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=\"$1\"\n\t  revision=\"$2\"\n\t  age=\"$3\"\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"CURRENT \\`$current' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"REVISION \\`$revision' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"AGE \\`$age' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  func_error \"AGE \\`$age' is greater than the current interface number \\`$current'\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\"$major.$age.$revision\"\n\t  # Darwin ld doesn't like 0 for these options...\n\t  func_arith $current + 1\n\t  minor_current=$func_arith_result\n\t  xlcverstring=\"${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision\"\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\";\n\t  ;;\n\n\tfreebsd-elf)\n\t  major=\".$current\"\n\t  versuffix=\".$current\"\n\t  ;;\n\n\tirix | nonstopux)\n\t  if test \"X$lt_irix_increment\" = \"Xno\"; then\n\t    func_arith $current - $age\n\t  else\n\t    func_arith $current - $age + 1\n\t  fi\n\t  major=$func_arith_result\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=\"$verstring_prefix$major.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test \"$loop\" -ne 0; do\n\t    func_arith $revision - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=\"$verstring_prefix$major.$iface:$verstring\"\n\t  done\n\n\t  # Before this point, $major must not contain `.'.\n\t  major=.$major\n\t  versuffix=\"$major.$revision\"\n\t  ;;\n\n\tlinux) # correct to gnu/linux during the next big refactor\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\"$major.$age.$revision\"\n\t  ;;\n\n\tosf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\".$current.$age.$revision\"\n\t  verstring=\"$current.$age.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test \"$loop\" -ne 0; do\n\t    func_arith $current - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=\"$verstring:${iface}.0\"\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  func_append verstring \":${current}.0\"\n\t  ;;\n\n\tqnx)\n\t  major=\".$current\"\n\t  versuffix=\".$current\"\n\t  ;;\n\n\tsunos)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\"\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 filesystems.\n\t  func_arith $current - $age\n\t  major=$func_arith_result\n\t  versuffix=\"-$major\"\n\t  ;;\n\n\t*)\n\t  func_fatal_configuration \"unknown library version type \\`$version_type'\"\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=\"0.0\"\n\t    ;;\n\t  esac\n\t  if test \"$need_version\" = no; then\n\t    versuffix=\n\t  else\n\t    versuffix=\".0.0\"\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test \"$avoid_version\" = yes && test \"$need_version\" = no; then\n\t  major=\n\t  versuffix=\n\t  verstring=\"\"\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test \"$allow_undefined\" = yes; then\n\t  if test \"$allow_undefined_flag\" = unsupported; then\n\t    func_warning \"undefined symbols not allowed in $host shared libraries\"\n\t    build_libtool_libs=no\n\t    build_old_libs=yes\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=\"$no_undefined_flag\"\n\tfi\n\n      fi\n\n      func_generate_dlsyms \"$libname\" \"$libname\" \"yes\"\n      func_append libobjs \" $symfileobj\"\n      test \"X$libobjs\" = \"X \" && libobjs=\n\n      if test \"$opt_mode\" != relink; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$ECHO \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext | *.gcno)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)\n\t       if test \"X$precious_files_regex\" != \"X\"; then\n\t\t if $ECHO \"$p\" | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t\t then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       func_append removelist \" $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\ttest -n \"$removelist\" && \\\n\t  func_show_eval \"${RM}r \\$removelist\"\n      fi\n\n      # Now set the variables for building old libraries.\n      if test \"$build_old_libs\" = yes && test \"$build_libtool_libs\" != convenience ; then\n\tfunc_append oldlibs \" $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.${libext}$/d; $lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      #for path in $notinst_path; do\n      #\tlib_search_path=`$ECHO \"$lib_search_path \" | $SED \"s% $path % %g\"`\n      #\tdeplibs=`$ECHO \"$deplibs \" | $SED \"s% -L$path % %g\"`\n      #\tdependency_libs=`$ECHO \"$dependency_libs \" | $SED \"s% -L$path % %g\"`\n      #done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  func_replace_sysroot \"$libdir\"\n\t  func_append temp_xrpath \" -R$func_replace_sysroot_result\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n\tif test \"$hardcode_into_libs\" != yes || test \"$build_old_libs\" = yes; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=\"$dlfiles\"\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlfiles \" $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=\"$dlprefiles\"\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlprefiles \" $lib\" ;;\n\tesac\n      done\n\n      if test \"$build_libtool_libs\" = yes; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n\t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test \"$build_libtool_need_lc\" = \"yes\"; then\n\t      func_append deplibs \" -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\"\"\n\tversuffix=\"\"\n\tmajor=\"\"\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $opt_dry_run || $RM conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $opt_dry_run || $RM conftest\n\t  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\tif test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    func_append newdeplibs \" $i\"\n\t\t    i=\"\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t\tif test -n \"$i\" ; then\n\t\t  libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t  deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t  set dummy $deplib_matches; shift\n\t\t  deplib_match=$1\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t    func_append newdeplibs \" $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\t$opt_dry_run || $RM conftest\n\t\tif $LTCC $LTCFLAGS -o conftest conftest.c $i; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      func_append newdeplibs \" $i\"\n\t\t      i=\"\"\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\" ; then\n\t\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t    deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t    set dummy $deplib_matches; shift\n\t\t    deplib_match=$1\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t      func_append newdeplibs \" $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      echo\n\t\t      $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  $ECHO \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"*** make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method; shift\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tif test -n \"$file_magic_glob\"; then\n\t\t  libnameglob=`func_echo_all \"$libname\" | $SED -e $file_magic_glob`\n\t\telse\n\t\t  libnameglob=$libname\n\t\tfi\n\t\ttest \"$want_nocaseglob\" = yes && nocaseglob=`shopt -p nocaseglob`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  if test \"$want_nocaseglob\" = yes; then\n\t\t    shopt -s nocaseglob\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t    $nocaseglob\n\t\t  else\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t  fi\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null |\n\t\t\t $GREP \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=\"$potent_lib\"\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=\"$potliblink\";;\n\t\t\t*) potlib=`$ECHO \"$potlib\" | $SED 's,[^/]*$,,'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null |\n\t\t\t $SED -e 10q |\n\t\t\t $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tfunc_append newdeplibs \" $a_deplib\"\n\t\t\ta_deplib=\"\"\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method; shift\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=\"$potent_lib\" # see symlink-check above in file_magic test\n\t\t    if eval \"\\$ECHO \\\"$potent_lib\\\"\" 2>/dev/null | $SED 10q | \\\n\t\t       $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      func_append newdeplibs \" $a_deplib\"\n\t\t      a_deplib=\"\"\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\"\"\n\t  tmp_deplibs=`$ECHO \" $deplibs\" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`\n\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t    for i in $predeps $postdeps ; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$ECHO \" $tmp_deplibs\" | $SED \"s,$i,,\"`\n\t    done\n\t  fi\n\t  case $tmp_deplibs in\n\t  *[!\\\t\\ ]*)\n\t    echo\n\t    if test \"X$deplibs_check_method\" = \"Xnone\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library with the System framework\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t  ;;\n\tesac\n\n\tif test \"$droppeddeps\" = yes; then\n\t  if test \"$module\" = yes; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $ECHO \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test \"$build_old_libs\" = no; then\n\t      oldlibs=\"$output_objdir/$libname.$libext\"\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\n\t    if test \"$allow_undefined\" = no; then\n\t      echo\n\t      echo \"*** Since this library must not contain undefined symbols,\"\n\t      echo \"*** because either the platform does not support them or\"\n\t      echo \"*** it was explicitly requested with -no-undefined,\"\n\t      echo \"*** libtool will only create a static version of it.\"\n\t      if test \"$build_old_libs\" = no; then\n\t\toldlibs=\"$output_objdir/$libname.$libext\"\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n      # Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n      case $host in\n\t*-*-darwin*)\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  new_inherited_linker_flags=`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  deplibs=`$ECHO \" $deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  ;;\n      esac\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      deplibs=\"$new_libs\"\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test \"$build_libtool_libs\" = yes; then\n\t# Remove ${wl} instances when linking with ld.\n\t# FIXME: should test the right _cmds variable.\n\tcase $archive_cmds in\n\t  *\\$LD\\ *) wl= ;;\n        esac\n\tif test \"$hardcode_into_libs\" = yes; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=\"$finalize_rpath\"\n\t  test \"$opt_mode\" != relink && rpath=\"$compile_rpath$rpath\"\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tfunc_replace_sysroot \"$libdir\"\n\t\tlibdir=$func_replace_sysroot_result\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=\"$libdir\"\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    func_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t\tfunc_append dep_rpath \" $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append perm_rpath \" $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=\"$hardcode_libdirs\"\n\t    eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      func_append rpath \"$dir:\"\n\t    done\n\t    eval \"$runpath_var='$rpath\\$$runpath_var'; export $runpath_var\"\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=\"$finalize_shlibpath\"\n\ttest \"$opt_mode\" != relink && shlibpath=\"$compile_shlibpath$shlibpath\"\n\tif test -n \"$shlibpath\"; then\n\t  eval \"$shlibpath_var='$shlibpath\\$$shlibpath_var'; export $shlibpath_var\"\n\tfi\n\n\t# Get the real and link names of the library.\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\tshift\n\trealname=\"$1\"\n\tshift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=\"$realname\"\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=\"$output_objdir/$realname\"\n\tlinknames=\n\tfor link\n\tdo\n\t  func_append linknames \" $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$ECHO \"$libobjs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\ttest \"X$libobjs\" = \"X \" && libobjs=\n\n\tdelfiles=\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $opt_dry_run || cp \"$export_symbols\" \"$output_objdir/$libname.uexp\"\n\t  export_symbols=\"$output_objdir/$libname.uexp\"\n\t  func_append delfiles \" $export_symbols\"\n\tfi\n\n\torig_export_symbols=\n\tcase $host_os in\n\tcygwin* | mingw* | cegcc*)\n\t  if test -n \"$export_symbols\" && test -z \"$export_symbols_regex\"; then\n\t    # exporting using user supplied symfile\n\t    if test \"x`$SED 1q $export_symbols`\" != xEXPORTS; then\n\t      # and it's NOT already a .def file. Must figure out\n\t      # which of the given symbols are data symbols and tag\n\t      # them as such. So, trigger use of export_symbols_cmds.\n\t      # export_symbols gets reassigned inside the \"prepare\n\t      # the list of exported symbols\" if statement, so the\n\t      # include_expsyms logic still works.\n\t      orig_export_symbols=\"$export_symbols\"\n\t      export_symbols=\n\t      always_export_symbols=yes\n\t    fi\n\t  fi\n\t  ;;\n\tesac\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test \"$always_export_symbols\" = yes || test -n \"$export_symbols_regex\"; then\n\t    func_verbose \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $opt_dry_run || $RM $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd1 in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      # Take the normal branch if the nm_file_list_spec branch\n\t      # doesn't work or if tool conversion is not needed.\n\t      case $nm_file_list_spec~$to_tool_file_cmd in\n\t\t*~func_convert_file_noop | *~func_convert_file_msys_to_w32 | ~*)\n\t\t  try_normal_branch=yes\n\t\t  eval cmd=\\\"$cmd1\\\"\n\t\t  func_len \" $cmd\"\n\t\t  len=$func_len_result\n\t\t  ;;\n\t\t*)\n\t\t  try_normal_branch=no\n\t\t  ;;\n\t      esac\n\t      if test \"$try_normal_branch\" = yes \\\n\t\t && { test \"$len\" -lt \"$max_cmd_len\" \\\n\t\t      || test \"$max_cmd_len\" -le -1; }\n\t      then\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\tskipped_export=false\n\t      elif test -n \"$nm_file_list_spec\"; then\n\t\tfunc_basename \"$output\"\n\t\toutput_la=$func_basename_result\n\t\tsave_libobjs=$libobjs\n\t\tsave_output=$output\n\t\toutput=${output_objdir}/${output_la}.nm\n\t\tfunc_to_tool_file \"$output\"\n\t\tlibobjs=$nm_file_list_spec$func_to_tool_file_result\n\t\tfunc_append delfiles \" $output\"\n\t\tfunc_verbose \"creating $NM input file list: $output\"\n\t\tfor obj in $save_libobjs; do\n\t\t  func_to_tool_file \"$obj\"\n\t\t  $ECHO \"$func_to_tool_file_result\"\n\t\tdone > \"$output\"\n\t\teval cmd=\\\"$cmd1\\\"\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\toutput=$save_output\n\t\tlibobjs=$save_libobjs\n\t\tskipped_export=false\n\t      else\n\t\t# The command line is too long to execute in one step.\n\t\tfunc_verbose \"using reloadable object file for export list...\"\n\t\tskipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=\"$save_ifs\"\n\t    if test -n \"$export_symbols_regex\" && test \"X$skipped_export\" != \"X:\"; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  tmp_export_symbols=\"$export_symbols\"\n\t  test -n \"$orig_export_symbols\" && tmp_export_symbols=\"$orig_export_symbols\"\n\t  $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" && test -n \"$orig_export_symbols\"; then\n\t  # The given exports_symbols file has to be filtered, so filter it.\n\t  func_verbose \"filter symbol list for \\`$libname.la' to tag DATA exports\"\n\t  # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t  # 's' commands which not all seds can handle. GNU sed should be fine\n\t  # though. Also, the filter scales superlinearly with the number of\n\t  # global variables. join(1) would be nice here, but unfortunately\n\t  # isn't a blessed tool.\n\t  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t  func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t  export_symbols=$output_objdir/$libname.def\n\t  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t  case \" $convenience \" in\n\t  *\" $test_deplib \"*) ;;\n\t  *)\n\t    func_append tmp_deplibs \" $test_deplib\"\n\t    ;;\n\t  esac\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\" &&\n\t    test \"$compiler_needs_object\" = yes &&\n\t    test -z \"$libobjs\"; then\n\t    # extract the archives, so we have objects to list.\n\t    # TODO: could optimize this to just extract one archive.\n\t    whole_archive_flag_spec=\n\t  fi\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  else\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    func_append generated \" $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    func_append libobjs \" $func_extract_archives_result\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\tfi\n\n\tif test \"$thread_safe\" = yes && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  func_append linker_flags \" $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test \"$opt_mode\" = relink; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U)' || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$module_expsym_cmds\\\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$module_cmds\\\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$archive_expsym_cmds\\\"\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$archive_cmds\\\"\n\t    cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" &&\n\t   func_len \" $test_cmds\" &&\n\t   len=$func_len_result &&\n\t   test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise\n\t  # or, if using GNU ld and skipped_export is not :, use a linker\n\t  # script.\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  func_basename \"$output\"\n\t  output_la=$func_basename_result\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  last_robj=\n\t  k=1\n\n\t  if test -n \"$save_libobjs\" && test \"X$skipped_export\" != \"X:\" && test \"$with_gnu_ld\" = yes; then\n\t    output=${output_objdir}/${output_la}.lnkscript\n\t    func_verbose \"creating GNU ld script: $output\"\n\t    echo 'INPUT (' > $output\n\t    for obj in $save_libobjs\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    echo ')' >> $output\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$func_to_tool_file_result\n\t  elif test -n \"$save_libobjs\" && test \"X$skipped_export\" != \"X:\" && test \"X$file_list_spec\" != X; then\n\t    output=${output_objdir}/${output_la}.lnk\n\t    func_verbose \"creating linker input file list: $output\"\n\t    : > $output\n\t    set x $save_libobjs\n\t    shift\n\t    firstobj=\n\t    if test \"$compiler_needs_object\" = yes; then\n\t      firstobj=\"$1 \"\n\t      shift\n\t    fi\n\t    for obj\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$firstobj\\\"$file_list_spec$func_to_tool_file_result\\\"\n\t  else\n\t    if test -n \"$save_libobjs\"; then\n\t      func_verbose \"creating reloadable object files...\"\n\t      output=$output_objdir/$output_la-${k}.$objext\n\t      eval test_cmds=\\\"$reload_cmds\\\"\n\t      func_len \" $test_cmds\"\n\t      len0=$func_len_result\n\t      len=$len0\n\n\t      # Loop over the list of objects to be linked.\n\t      for obj in $save_libobjs\n\t      do\n\t\tfunc_len \" $obj\"\n\t\tfunc_arith $len + $func_len_result\n\t\tlen=$func_arith_result\n\t\tif test \"X$objlist\" = X ||\n\t\t   test \"$len\" -lt \"$max_cmd_len\"; then\n\t\t  func_append objlist \" $obj\"\n\t\telse\n\t\t  # The command $test_cmds is almost too long, add a\n\t\t  # command to the queue.\n\t\t  if test \"$k\" -eq 1 ; then\n\t\t    # The first file doesn't have a previous command to add.\n\t\t    reload_objs=$objlist\n\t\t    eval concat_cmds=\\\"$reload_cmds\\\"\n\t\t  else\n\t\t    # All subsequent reloadable object files will link in\n\t\t    # the last one created.\n\t\t    reload_objs=\"$objlist $last_robj\"\n\t\t    eval concat_cmds=\\\"\\$concat_cmds~$reload_cmds~\\$RM $last_robj\\\"\n\t\t  fi\n\t\t  last_robj=$output_objdir/$output_la-${k}.$objext\n\t\t  func_arith $k + 1\n\t\t  k=$func_arith_result\n\t\t  output=$output_objdir/$output_la-${k}.$objext\n\t\t  objlist=\" $obj\"\n\t\t  func_len \" $last_robj\"\n\t\t  func_arith $len0 + $func_len_result\n\t\t  len=$func_arith_result\n\t\tfi\n\t      done\n\t      # Handle the remaining objects by creating one last\n\t      # reloadable object file.  All subsequent reloadable object\n\t      # files will link in the last one created.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      reload_objs=\"$objlist $last_robj\"\n\t      eval concat_cmds=\\\"\\${concat_cmds}$reload_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t        eval concat_cmds=\\\"\\${concat_cmds}~\\$RM $last_robj\\\"\n\t      fi\n\t      func_append delfiles \" $output\"\n\n\t    else\n\t      output=\n\t    fi\n\n\t    if ${skipped_export-false}; then\n\t      func_verbose \"generating symbol list for \\`$libname.la'\"\n\t      export_symbols=\"$output_objdir/$libname.exp\"\n\t      $opt_dry_run || $RM $export_symbols\n\t      libobjs=$output\n\t      # Append the command to create the export file.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$export_symbols_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t\teval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t    fi\n\n\t    test -n \"$save_libobjs\" &&\n\t      func_verbose \"creating a temporary reloadable object file: $output\"\n\n\t    # Loop through the commands generated above and execute them.\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $concat_cmds; do\n\t      IFS=\"$save_ifs\"\n\t      $opt_silent || {\n\t\t  func_quote_for_expand \"$cmd\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t      }\n\t      $opt_dry_run || eval \"$cmd\" || {\n\t\tlt_exit=$?\n\n\t\t# Restore the uninstalled library and exit\n\t\tif test \"$opt_mode\" = relink; then\n\t\t  ( cd \"$output_objdir\" && \\\n\t\t    $RM \"${realname}T\" && \\\n\t\t    $MV \"${realname}U\" \"$realname\" )\n\t\tfi\n\n\t\texit $lt_exit\n\t      }\n\t    done\n\t    IFS=\"$save_ifs\"\n\n\t    if test -n \"$export_symbols_regex\" && ${skipped_export-false}; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\n          if ${skipped_export-false}; then\n\t    if test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t      tmp_export_symbols=\"$export_symbols\"\n\t      test -n \"$orig_export_symbols\" && tmp_export_symbols=\"$orig_export_symbols\"\n\t      $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\t    fi\n\n\t    if test -n \"$orig_export_symbols\"; then\n\t      # The given exports_symbols file has to be filtered, so filter it.\n\t      func_verbose \"filter symbol list for \\`$libname.la' to tag DATA exports\"\n\t      # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t      # 's' commands which not all seds can handle. GNU sed should be fine\n\t      # though. Also, the filter scales superlinearly with the number of\n\t      # global variables. join(1) would be nice here, but unfortunately\n\t      # isn't a blessed tool.\n\t      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t      func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t      export_symbols=$output_objdir/$libname.def\n\t      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\t    fi\n\t  fi\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t    if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t      cmds=$archive_expsym_cmds\n\t    else\n\t      cmds=$archive_cmds\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$delfiles\"; then\n\t  # Append the command to remove temporary files to $cmds.\n\t  eval cmds=\\\"\\$cmds~\\$RM $delfiles\\\"\n\tfi\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append libobjs \" $func_extract_archives_result\"\n\t  test \"X$libobjs\" = \"X \" && libobjs=\n\tfi\n\n\tsave_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  eval cmd=\\\"$cmd\\\"\n\t  $opt_silent || {\n\t    func_quote_for_expand \"$cmd\"\n\t    eval \"func_echo $func_quote_for_expand_result\"\n\t  }\n\t  $opt_dry_run || eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test \"$opt_mode\" = relink; then\n\t      ( cd \"$output_objdir\" && \\\n\t        $RM \"${realname}T\" && \\\n\t\t$MV \"${realname}U\" \"$realname\" )\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=\"$save_ifs\"\n\n\t# Restore the uninstalled library and exit\n\tif test \"$opt_mode\" = relink; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname)' || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      func_show_eval '${RM}r \"$gentop\"'\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    func_show_eval '(cd \"$output_objdir\" && $RM \"$linkname\" && $LN_S \"$realname\" \"$linkname\")' 'exit $?'\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test \"$module\" = yes || test \"$export_dynamic\" = yes; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=\"$soname\"\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tfunc_warning \"\\`-dlopen' is ignored for objects\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"\\`-l' and \\`-L' are ignored for objects\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"\\`-rpath' is ignored for objects\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"\\`-R' is ignored for objects\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info' is ignored for objects\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for objects\"\n\n      case $output in\n      *.lo)\n\ttest -n \"$objs$old_deplibs\" && \\\n\t  func_fatal_error \"cannot build library object \\`$output' from non-libtool objects\"\n\n\tlibobj=$output\n\tfunc_lo2o \"$libobj\"\n\tobj=$func_lo2o_result\n\t;;\n      *)\n\tlibobj=\n\tobj=\"$output\"\n\t;;\n      esac\n\n      # Delete the old objects.\n      $opt_dry_run || $RM $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # reload_cmds runs $LD directly, so let us get rid of\n      # -Wl from whole_archive_flag_spec and hope we can get by with\n      # turning comma into space..\n      wl=\n\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval tmp_whole_archive_flags=\\\"$whole_archive_flag_spec\\\"\n\t  reload_conv_objs=$reload_objs\\ `$ECHO \"$tmp_whole_archive_flags\" | $SED 's|,| |g'`\n\telse\n\t  gentop=\"$output_objdir/${obj}x\"\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # If we're not building shared, we need to use non_pic_objs\n      test \"$build_libtool_libs\" != yes && libobjs=\"$non_pic_objects\"\n\n      # Create the old-style object.\n      reload_objs=\"$objs$old_deplibs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.${libext}$/d; /\\.lib$/d; $lo2o\" | $NL2SP`\" $reload_conv_objs\" ### testsuite: skip nested quoting test\n\n      output=\"$obj\"\n      func_execute_cmds \"$reload_cmds\" 'exit $?'\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$build_libtool_libs\" != yes; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $opt_dry_run || eval \"echo timestamp > $libobj\" || exit $?\n\texit $EXIT_SUCCESS\n      fi\n\n      if test -n \"$pic_flag\" || test \"$pic_mode\" != default; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=\"$libobj\"\n\tfunc_execute_cmds \"$reload_cmds\" 'exit $?'\n      fi\n\n      if test -n \"$gentop\"; then\n\tfunc_show_eval '${RM}r \"$gentop\"'\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) func_stripname '' '.exe' \"$output\"\n\t          output=$func_stripname_result.exe;;\n      esac\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info' is ignored for programs\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for programs\"\n\n      test \"$preload\" = yes \\\n        && test \"$dlopen_support\" = unknown \\\n\t&& test \"$dlopen_self\" = unknown \\\n\t&& test \"$dlopen_self_static\" = unknown && \\\n\t  func_warning \"\\`LT_INIT([dlopen])' not used. Assuming no dlopen support.\"\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t;;\n      esac\n\n      case $host in\n      *-*-darwin*)\n\t# Don't allow lazy linking, it breaks C++ global constructors\n\t# But is supposedly fixed on 10.4 or later (yay!).\n\tif test \"$tagname\" = CXX ; then\n\t  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in\n\t    10.[0123])\n\t      func_append compile_command \" ${wl}-bind_at_load\"\n\t      func_append finalize_command \" ${wl}-bind_at_load\"\n\t    ;;\n\t  esac\n\tfi\n\t# Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=\"$new_libs\"\n\n\n      func_append compile_command \" $compile_deplibs\"\n      func_append finalize_command \" $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`${ECHO} \"$libdir\" | ${SED} -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  ::) dllsearchpath=$libdir;;\n\t  *) func_append dllsearchpath \":$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=\"$rpath\"\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=\"$rpath\"\n\n      if test -n \"$libobjs\" && test \"$build_old_libs\" = yes; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$ECHO \"$compile_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$ECHO \"$finalize_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n      fi\n\n      func_generate_dlsyms \"$outputname\" \"@PROGRAM@\" \"no\"\n\n      # template prelinking step\n      if test -n \"$prelink_cmds\"; then\n\tfunc_execute_cmds \"$prelink_cmds\" 'exit $?'\n      fi\n\n      wrappers_required=yes\n      case $host in\n      *cegcc* | *mingw32ce*)\n        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.\n        wrappers_required=no\n        ;;\n      *cygwin* | *mingw* )\n        if test \"$build_libtool_libs\" != yes; then\n          wrappers_required=no\n        fi\n        ;;\n      *)\n        if test \"$need_relink\" = no || test \"$build_libtool_libs\" != yes; then\n          wrappers_required=no\n        fi\n        ;;\n      esac\n      if test \"$wrappers_required\" = no; then\n\t# Replace the output file specification.\n\tcompile_command=`$ECHO \"$compile_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=\"$compile_command$compile_rpath\"\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\texit_status=0\n\tfunc_show_eval \"$link_command\" 'exit_status=$?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\t# Delete the generated files.\n\tif test -f \"$output_objdir/${outputname}S.${objext}\"; then\n\t  func_show_eval '$RM \"$output_objdir/${outputname}S.${objext}\"'\n\tfi\n\n\texit $exit_status\n      fi\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test \"$no_install\" = yes; then\n\t# We don't need to create a wrapper script.\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\t# Replace the output file specification.\n\tlink_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$opt_dry_run || $RM $output\n\t# Link the executable and exit\n\tfunc_show_eval \"$link_command\" 'exit $?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$hardcode_action\" = relink; then\n\t# Fast installation is not supported\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\trelink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\n\tfunc_warning \"this platform does not like uninstalled shared libraries\"\n\tfunc_warning \"\\`$output' will be relinked during installation\"\n      else\n\tif test \"$fast_install\" != no; then\n\t  link_command=\"$finalize_var$compile_command$finalize_rpath\"\n\t  if test \"$fast_install\" = yes; then\n\t    relink_command=`$ECHO \"$compile_var$compile_command$compile_rpath\" | $SED 's%@OUTPUT@%\\$progdir/\\$file%g'`\n\t  else\n\t    # fast_install is set to needless\n\t    relink_command=\n\t  fi\n\telse\n\t  link_command=\"$compile_var$compile_command$compile_rpath\"\n\t  relink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\tfi\n      fi\n\n      # Replace the output file specification.\n      link_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      func_show_eval \"$link_command\" 'exit $?'\n\n      if test -n \"$postlink_cmds\"; then\n\tfunc_to_tool_file \"$output_objdir/$outputname\"\n\tpostlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\tfunc_execute_cmds \"$postlink_cmds\" 'exit $?'\n      fi\n\n      # Now create the wrapper script.\n      func_verbose \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    func_quote_for_eval \"$var_value\"\n\t    relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if not in dry run mode.\n      $opt_dry_run || {\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) func_stripname '' '.exe' \"$output\"\n\t         output=$func_stripname_result ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    func_stripname '' '.exe' \"$outputname\"\n\t    outputname=$func_stripname_result ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    func_dirname_and_basename \"$output\" \"\" \".\"\n\t    output_name=$func_basename_result\n\t    output_path=$func_dirname_result\n\t    cwrappersource=\"$output_path/$objdir/lt-$output_name.c\"\n\t    cwrapper=\"$output_path/$output_name.exe\"\n\t    $RM $cwrappersource $cwrapper\n\t    trap \"$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_cwrapperexe_src > $cwrappersource\n\n\t    # The wrapper executable is built using the $host compiler,\n\t    # because it contains $host paths and files. If cross-\n\t    # compiling, it, like the target executable, must be\n\t    # executed on the $host or under an emulation environment.\n\t    $opt_dry_run || {\n\t      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource\n\t      $STRIP $cwrapper\n\t    }\n\n\t    # Now, create the wrapper script for func_source use:\n\t    func_ltwrapper_scriptname $cwrapper\n\t    $RM $func_ltwrapper_scriptname_result\n\t    trap \"$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE\" 1 2 15\n\t    $opt_dry_run || {\n\t      # note: this script will not be executed, so do not chmod.\n\t      if test \"x$build\" = \"x$host\" ; then\n\t\t$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result\n\t      else\n\t\tfunc_emit_wrapper no > $func_ltwrapper_scriptname_result\n\t      fi\n\t    }\n\t  ;;\n\t  * )\n\t    $RM $output\n\t    trap \"$RM $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_wrapper no > $output\n\t    chmod +x $output\n\t  ;;\n\tesac\n      }\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      if test \"$build_libtool_libs\" = convenience; then\n\toldobjs=\"$libobjs_save $symfileobj\"\n\taddlibs=\"$convenience\"\n\tbuild_libtool_libs=no\n      else\n\tif test \"$build_libtool_libs\" = module; then\n\t  oldobjs=\"$libobjs_save\"\n\t  build_libtool_libs=no\n\telse\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\t  if test \"$preload\" = yes && test -f \"$symfileobj\"; then\n\t    func_append oldobjs \" $symfileobj\"\n\t  fi\n\tfi\n\taddlibs=\"$old_convenience\"\n      fi\n\n      if test -n \"$addlibs\"; then\n\tgentop=\"$output_objdir/${outputname}x\"\n\tfunc_append generated \" $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\tfunc_append oldobjs \" $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test \"$build_libtool_libs\" = yes; then\n\tcmds=$old_archive_from_new_cmds\n      else\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append oldobjs \" $func_extract_archives_result\"\n\tfi\n\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      func_basename \"$obj\"\n\t      $ECHO \"$func_basename_result\"\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  echo \"copying selected object files to avoid basename conflicts...\"\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  func_append generated \" $gentop\"\n\t  func_mkdir_p \"$gentop\"\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_basename \"$obj\"\n\t    objbase=\"$func_basename_result\"\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tfunc_arith $counter + 1\n\t\tcounter=$func_arith_result\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      func_show_eval \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      func_append oldobjs \" $gentop/$newobj\"\n\t      ;;\n\t    *) func_append oldobjs \" $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\tfunc_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n\ttool_oldlib=$func_to_tool_file_result\n\teval cmds=\\\"$old_archive_cmds\\\"\n\n\tfunc_len \" $cmds\"\n\tlen=$func_len_result\n\tif test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telif test -n \"$archiver_list_spec\"; then\n\t  func_verbose \"using command file archive linking...\"\n\t  for obj in $oldobjs\n\t  do\n\t    func_to_tool_file \"$obj\"\n\t    $ECHO \"$func_to_tool_file_result\"\n\t  done > $output_objdir/$libname.libcmd\n\t  func_to_tool_file \"$output_objdir/$libname.libcmd\"\n\t  oldobjs=\" $archiver_list_spec$func_to_tool_file_result\"\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  func_verbose \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  eval test_cmds=\\\"$old_archive_cmds\\\"\n\t  func_len \" $test_cmds\"\n\t  len0=$func_len_result\n\t  len=$len0\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_len \" $obj\"\n\t    func_arith $len + $func_len_result\n\t    len=$func_arith_result\n\t    func_append objlist \" $obj\"\n\t    if test \"$len\" -lt \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\" ; then\n\t\tRANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\${concat_cmds}$old_archive_cmds\\\"\n\t      objlist=\n\t      len=$len0\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test \"X$oldobjs\" = \"X\" ; then\n\t    eval cmds=\\\"\\$concat_cmds\\\"\n\t  else\n\t    eval cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\n\t  fi\n\tfi\n      fi\n      func_execute_cmds \"$cmds\" 'exit $?'\n    done\n\n    test -n \"$generated\" && \\\n      func_show_eval \"${RM}r$generated\"\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test \"$build_old_libs\" = yes && old_library=\"$libname.$libext\"\n      func_verbose \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  func_quote_for_eval \"$var_value\"\n\t  relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      if test \"$hardcode_automatic\" = yes ; then\n\trelink_command=\n      fi\n\n      # Only create the output if not a dry run.\n      $opt_dry_run || {\n\tfor installed in no yes; do\n\t  if test \"$installed\" = yes; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=\"$output_objdir/$outputname\"i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tfunc_basename \"$deplib\"\n\t\tname=\"$func_basename_result\"\n\t\tfunc_resolve_sysroot \"$deplib\"\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $func_resolve_sysroot_result`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$deplib' is not a valid libtool archive\"\n\t\tfunc_append newdependency_libs \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      -L*)\n\t\tfunc_stripname -L '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -L$func_replace_sysroot_result\"\n\t\t;;\n\t      -R*)\n\t\tfunc_stripname -R '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -R$func_replace_sysroot_result\"\n\t\t;;\n\t      *) func_append newdependency_libs \" $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=\"$newdependency_libs\"\n\t    newdlfiles=\n\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t      *.la)\n\t        func_basename \"$lib\"\n\t\tname=\"$func_basename_result\"\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlfiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      *) func_append newdlfiles \" $lib\" ;;\n\t      esac\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t      *.la)\n\t\t# Only pass preopened files to the pseudo-archive (for\n\t\t# eventual linking with the app. that links it) if we\n\t\t# didn't already link the preopened objects directly into\n\t\t# the library:\n\t\tfunc_basename \"$lib\"\n\t\tname=\"$func_basename_result\"\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlprefiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      esac\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlfiles \" $abs\"\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlprefiles \" $abs\"\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  fi\n\t  $RM $output\n\t  # place dlname in correct position for cygwin\n\t  # In fact, it would be nice if we could use this code for all target\n\t  # systems that can't hard-code library paths into their executables\n\t  # and that have no shared library path variable independent of PATH,\n\t  # but it turns out we can't easily determine that from inspecting\n\t  # libtool variables, so we have to hard-code the OSs to which it\n\t  # applies here; at the moment, that means platforms that use the PE\n\t  # object format with DLL files.  See the long comment at the top of\n\t  # tests/bindir.at for full details.\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)\n\t      # If a -bindir argument was supplied, place the dll there.\n\t      if test \"x$bindir\" != x ;\n\t      then\n\t\tfunc_relative_path \"$install_libdir\" \"$bindir\"\n\t\ttdlname=$func_relative_path_result$dlname\n\t      else\n\t\t# Otherwise fall back on heuristic.\n\t\ttdlname=../bin/$dlname\n\t      fi\n\t      ;;\n\t  esac\n\t  $ECHO > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Linker flags that can not go in dependency_libs.\ninherited_linker_flags='$new_inherited_linker_flags'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Names of additional weak libraries provided by this library\nweak_library_names='$weak_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test \"$installed\" = no && test \"$need_relink\" = yes; then\n\t    $ECHO >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      }\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      func_show_eval '( cd \"$output_objdir\" && $RM \"$outputname\" && $LN_S \"../$outputname\" \"$outputname\" )' 'exit $?'\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n}\n\n{ test \"$opt_mode\" = link || test \"$opt_mode\" = relink; } &&\n    func_mode_link ${1+\"$@\"}\n\n\n# func_mode_uninstall arg...\nfunc_mode_uninstall ()\n{\n    $opt_debug\n    RM=\"$nonopt\"\n    files=\n    rmforce=\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    for arg\n    do\n      case $arg in\n      -f) func_append RM \" $arg\"; rmforce=yes ;;\n      -*) func_append RM \" $arg\" ;;\n      *) func_append files \" $arg\" ;;\n      esac\n    done\n\n    test -z \"$RM\" && \\\n      func_fatal_help \"you must specify an RM program\"\n\n    rmdirs=\n\n    for file in $files; do\n      func_dirname \"$file\" \"\" \".\"\n      dir=\"$func_dirname_result\"\n      if test \"X$dir\" = X.; then\n\todir=\"$objdir\"\n      else\n\todir=\"$dir/$objdir\"\n      fi\n      func_basename \"$file\"\n      name=\"$func_basename_result\"\n      test \"$opt_mode\" = uninstall && odir=\"$dir\"\n\n      # Remember odir for removal later, being careful to avoid duplicates\n      if test \"$opt_mode\" = clean; then\n\tcase \" $rmdirs \" in\n\t  *\" $odir \"*) ;;\n\t  *) func_append rmdirs \" $odir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if { test -L \"$file\"; } >/dev/null 2>&1 ||\n\t { test -h \"$file\"; } >/dev/null 2>&1 ||\n\t test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif test \"$rmforce\" = yes; then\n\tcontinue\n      fi\n\n      rmfiles=\"$file\"\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif func_lalib_p \"$file\"; then\n\t  func_source $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    func_append rmfiles \" $odir/$n\"\n\t  done\n\t  test -n \"$old_library\" && func_append rmfiles \" $odir/$old_library\"\n\n\t  case \"$opt_mode\" in\n\t  clean)\n\t    case \" $library_names \" in\n\t    *\" $dlname \"*) ;;\n\t    *) test -n \"$dlname\" && func_append rmfiles \" $odir/$dlname\" ;;\n\t    esac\n\t    test -n \"$libdir\" && func_append rmfiles \" $odir/$name $odir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      func_execute_cmds \"$postuninstall_cmds\" 'test \"$rmforce\" = yes || exit_status=1'\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      func_execute_cmds \"$old_postuninstall_cmds\" 'test \"$rmforce\" = yes || exit_status=1'\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif func_lalib_p \"$file\"; then\n\n\t  # Read the .lo file\n\t  func_source $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" &&\n\t     test \"$pic_object\" != none; then\n\t    func_append rmfiles \" $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" &&\n\t     test \"$non_pic_object\" != none; then\n\t    func_append rmfiles \" $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test \"$opt_mode\" = clean ; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    func_stripname '' '.exe' \"$file\"\n\t    file=$func_stripname_result\n\t    func_stripname '' '.exe' \"$name\"\n\t    noexename=$func_stripname_result\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    func_append rmfiles \" $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if func_ltwrapper_p \"$file\"; then\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      relink_command=\n\t      func_source $func_ltwrapper_scriptname_result\n\t      func_append rmfiles \" $func_ltwrapper_scriptname_result\"\n\t    else\n\t      relink_command=\n\t      func_source $dir/$noexename\n\t    fi\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    func_append rmfiles \" $odir/$name $odir/${name}S.${objext}\"\n\t    if test \"$fast_install\" = yes && test -n \"$relink_command\"; then\n\t      func_append rmfiles \" $odir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\" ; then\n\t      func_append rmfiles \" $odir/lt-${noexename}.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      func_show_eval \"$RM $rmfiles\" 'exit_status=1'\n    done\n\n    # Try to remove the ${objdir}s in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\tfunc_show_eval \"rmdir $dir >/dev/null 2>&1\"\n      fi\n    done\n\n    exit $exit_status\n}\n\n{ test \"$opt_mode\" = uninstall || test \"$opt_mode\" = clean; } &&\n    func_mode_uninstall ${1+\"$@\"}\n\ntest -z \"$opt_mode\" && {\n  help=\"$generic_help\"\n  func_fatal_help \"you must specify a MODE\"\n}\n\ntest -z \"$exec_cmd\" && \\\n  func_fatal_help \"invalid operation mode \\`$opt_mode'\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec \"$exec_cmd\"\n  exit $EXIT_FAILURE\nfi\n\nexit $exit_status\n\n\n# The TAGs below are defined such that we never get into a situation\n# in which we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n# vi:sw=2\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/unix/m4/libtool.m4": "# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n#\n#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,\n#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n#                 Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\nm4_define([_LT_COPYING], [dnl\n#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,\n#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n#                 Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from http://www.gnu.org/licenses/gpl.html, or\n# obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n])\n\n# serial 57 LT_INIT\n\n\n# LT_PREREQ(VERSION)\n# ------------------\n# Complain and exit if this libtool version is less that VERSION.\nm4_defun([LT_PREREQ],\n[m4_if(m4_version_compare(m4_defn([LT_PACKAGE_VERSION]), [$1]), -1,\n       [m4_default([$3],\n\t\t   [m4_fatal([Libtool version $1 or higher is required],\n\t\t             63)])],\n       [$2])])\n\n\n# _LT_CHECK_BUILDDIR\n# ------------------\n# Complain if the absolute build directory name contains unusual characters\nm4_defun([_LT_CHECK_BUILDDIR],\n[case `pwd` in\n  *\\ * | *\\\t*)\n    AC_MSG_WARN([Libtool does not cope well with whitespace in `pwd`]) ;;\nesac\n])\n\n\n# LT_INIT([OPTIONS])\n# ------------------\nAC_DEFUN([LT_INIT],\n[AC_PREREQ([2.58])dnl We use AC_INCLUDES_DEFAULT\nAC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\nAC_BEFORE([$0], [LT_LANG])dnl\nAC_BEFORE([$0], [LT_OUTPUT])dnl\nAC_BEFORE([$0], [LTDL_INIT])dnl\nm4_require([_LT_CHECK_BUILDDIR])dnl\n\ndnl Autoconf doesn't catch unexpanded LT_ macros by default:\nm4_pattern_forbid([^_?LT_[A-Z_]+$])dnl\nm4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl\ndnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4\ndnl unless we require an AC_DEFUNed macro:\nAC_REQUIRE([LTOPTIONS_VERSION])dnl\nAC_REQUIRE([LTSUGAR_VERSION])dnl\nAC_REQUIRE([LTVERSION_VERSION])dnl\nAC_REQUIRE([LTOBSOLETE_VERSION])dnl\nm4_require([_LT_PROG_LTMAIN])dnl\n\n_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])\n\ndnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=\"$ltmain\"\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n_LT_SETUP\n\n# Only expand once:\nm4_define([LT_INIT])\n])# LT_INIT\n\n# Old names:\nAU_ALIAS([AC_PROG_LIBTOOL], [LT_INIT])\nAU_ALIAS([AM_PROG_LIBTOOL], [LT_INIT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PROG_LIBTOOL], [])\ndnl AC_DEFUN([AM_PROG_LIBTOOL], [])\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nm4_defun([_LT_CC_BASENAME],\n[for cc_temp in $1\"\"; do\n  case $cc_temp in\n    compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n    distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n    \\-*) ;;\n    *) break;;\n  esac\ndone\ncc_basename=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n])\n\n\n# _LT_FILEUTILS_DEFAULTS\n# ----------------------\n# It is okay to use these file commands and assume they have been set\n# sensibly after `m4_require([_LT_FILEUTILS_DEFAULTS])'.\nm4_defun([_LT_FILEUTILS_DEFAULTS],\n[: ${CP=\"cp -f\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n])# _LT_FILEUTILS_DEFAULTS\n\n\n# _LT_SETUP\n# ---------\nm4_defun([_LT_SETUP],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([_LT_PREPARE_SED_QUOTE_VARS])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\n\n_LT_DECL([], [PATH_SEPARATOR], [1], [The PATH separator for the build system])dnl\ndnl\n_LT_DECL([], [host_alias], [0], [The host system])dnl\n_LT_DECL([], [host], [0])dnl\n_LT_DECL([], [host_os], [0])dnl\ndnl\n_LT_DECL([], [build_alias], [0], [The build system])dnl\n_LT_DECL([], [build], [0])dnl\n_LT_DECL([], [build_os], [0])dnl\ndnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\ndnl\nAC_REQUIRE([AC_PROG_LN_S])dnl\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\n_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl\ndnl\nAC_REQUIRE([LT_CMD_MAX_LEN])dnl\n_LT_DECL([objext], [ac_objext], [0], [Object file suffix (normally \"o\")])dnl\n_LT_DECL([], [exeext], [0], [Executable file suffix (normally \"\")])dnl\ndnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PATH_CONVERSION_FUNCTIONS])dnl\nm4_require([_LT_CMD_RELOAD])dnl\nm4_require([_LT_CHECK_MAGIC_METHOD])dnl\nm4_require([_LT_CHECK_SHAREDLIB_FROM_LINKLIB])dnl\nm4_require([_LT_CMD_OLD_ARCHIVE])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_WITH_SYSROOT])dnl\n\n_LT_CONFIG_LIBTOOL_INIT([\n# See if we are running on zsh, and set the options which allow our\n# commands through without removal of \\ escapes INIT.\nif test -n \"\\${ZSH_VERSION+set}\" ; then\n   setopt NO_GLOB_SUBST\nfi\n])\nif test -n \"${ZSH_VERSION+set}\" ; then\n   setopt NO_GLOB_SUBST\nfi\n\n_LT_CHECK_OBJDIR\n\nm4_require([_LT_TAG_COMPILER])dnl\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test \"X${COLLECT_NAMES+set}\" != Xset; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Global variables:\nofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a `.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\n\nwith_gnu_ld=\"$lt_cv_prog_gnu_ld\"\n\nold_CC=\"$CC\"\nold_CFLAGS=\"$CFLAGS\"\n\n# Set sane defaults for various variables\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$LD\" && LD=ld\ntest -z \"$ac_objext\" && ac_objext=o\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    _LT_PATH_MAGIC\n  fi\n  ;;\nesac\n\n# Use C for the default configuration in the libtool script\nLT_SUPPORTED_TAG([CC])\n_LT_LANG_C_CONFIG\n_LT_LANG_DEFAULT_CONFIG\n_LT_CONFIG_COMMANDS\n])# _LT_SETUP\n\n\n# _LT_PREPARE_SED_QUOTE_VARS\n# --------------------------\n# Define a few sed substitution that help us do robust quoting.\nm4_defun([_LT_PREPARE_SED_QUOTE_VARS],\n[# Backslashify metacharacters that are still active within\n# double-quoted strings.\nsed_quote_subst='s/\\([[\"`$\\\\]]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([[\"`\\\\]]\\)/\\\\\\1/g'\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to delay expansion of an escaped single quote.\ndelay_single_quote_subst='s/'\\''/'\\'\\\\\\\\\\\\\\'\\''/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n])\n\n# _LT_PROG_LTMAIN\n# ---------------\n# Note that this code is called both from `configure', and `config.status'\n# now that we use AC_CONFIG_COMMANDS to generate libtool.  Notably,\n# `config.status' has no value for ac_aux_dir unless we are using Automake,\n# so we pass a copy along to make sure it has a sensible value anyway.\nm4_defun([_LT_PROG_LTMAIN],\n[m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([ltmain.sh])])dnl\n_LT_CONFIG_LIBTOOL_INIT([ac_aux_dir='$ac_aux_dir'])\nltmain=\"$ac_aux_dir/ltmain.sh\"\n])# _LT_PROG_LTMAIN\n\n\n## ------------------------------------- ##\n## Accumulate code for creating libtool. ##\n## ------------------------------------- ##\n\n# So that we can recreate a full libtool script including additional\n# tags, we accumulate the chunks of code to send to AC_CONFIG_COMMANDS\n# in macros and then make a single call at the end using the `libtool'\n# label.\n\n\n# _LT_CONFIG_LIBTOOL_INIT([INIT-COMMANDS])\n# ----------------------------------------\n# Register INIT-COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL_INIT],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_INIT],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_INIT])\n\n\n# _LT_CONFIG_LIBTOOL([COMMANDS])\n# ------------------------------\n# Register COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_COMMANDS],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])\n\n\n# _LT_CONFIG_SAVE_COMMANDS([COMMANDS], [INIT_COMMANDS])\n# -----------------------------------------------------\nm4_defun([_LT_CONFIG_SAVE_COMMANDS],\n[_LT_CONFIG_LIBTOOL([$1])\n_LT_CONFIG_LIBTOOL_INIT([$2])\n])\n\n\n# _LT_FORMAT_COMMENT([COMMENT])\n# -----------------------------\n# Add leading comment marks to the start of each line, and a trailing\n# full-stop to the whole comment if one is not present already.\nm4_define([_LT_FORMAT_COMMENT],\n[m4_ifval([$1], [\nm4_bpatsubst([m4_bpatsubst([$1], [^ *], [# ])],\n              [['`$\\]], [\\\\\\&])]m4_bmatch([$1], [[!?.]$], [], [.])\n)])\n\n\n\n## ------------------------ ##\n## FIXME: Eliminate VARNAME ##\n## ------------------------ ##\n\n\n# _LT_DECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION], [IS-TAGGED?])\n# -------------------------------------------------------------------\n# CONFIGNAME is the name given to the value in the libtool script.\n# VARNAME is the (base) name used in the configure script.\n# VALUE may be 0, 1 or 2 for a computed quote escaped value based on\n# VARNAME.  Any other value will be used directly.\nm4_define([_LT_DECL],\n[lt_if_append_uniq([lt_decl_varnames], [$2], [, ],\n    [lt_dict_add_subkey([lt_decl_dict], [$2], [libtool_name],\n\t[m4_ifval([$1], [$1], [$2])])\n    lt_dict_add_subkey([lt_decl_dict], [$2], [value], [$3])\n    m4_ifval([$4],\n\t[lt_dict_add_subkey([lt_decl_dict], [$2], [description], [$4])])\n    lt_dict_add_subkey([lt_decl_dict], [$2],\n\t[tagged?], [m4_ifval([$5], [yes], [no])])])\n])\n\n\n# _LT_TAGDECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION])\n# --------------------------------------------------------\nm4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])\n\n\n# lt_decl_tag_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_tag_varnames],\n[_lt_decl_filter([tagged?], [yes], $@)])\n\n\n# _lt_decl_filter(SUBKEY, VALUE, [SEPARATOR], [VARNAME1..])\n# ---------------------------------------------------------\nm4_define([_lt_decl_filter],\n[m4_case([$#],\n  [0], [m4_fatal([$0: too few arguments: $#])],\n  [1], [m4_fatal([$0: too few arguments: $#: $1])],\n  [2], [lt_dict_filter([lt_decl_dict], [$1], [$2], [], lt_decl_varnames)],\n  [3], [lt_dict_filter([lt_decl_dict], [$1], [$2], [$3], lt_decl_varnames)],\n  [lt_dict_filter([lt_decl_dict], $@)])[]dnl\n])\n\n\n# lt_decl_quote_varnames([SEPARATOR], [VARNAME1...])\n# --------------------------------------------------\nm4_define([lt_decl_quote_varnames],\n[_lt_decl_filter([value], [1], $@)])\n\n\n# lt_decl_dquote_varnames([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_dquote_varnames],\n[_lt_decl_filter([value], [2], $@)])\n\n\n# lt_decl_varnames_tagged([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_varnames_tagged],\n[m4_assert([$# <= 2])dnl\n_$0(m4_quote(m4_default([$1], [[, ]])),\n    m4_ifval([$2], [[$2]], [m4_dquote(lt_decl_tag_varnames)]),\n    m4_split(m4_normalize(m4_quote(_LT_TAGS)), [ ]))])\nm4_define([_lt_decl_varnames_tagged],\n[m4_ifval([$3], [lt_combine([$1], [$2], [_], $3)])])\n\n\n# lt_decl_all_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_all_varnames],\n[_$0(m4_quote(m4_default([$1], [[, ]])),\n     m4_if([$2], [],\n\t   m4_quote(lt_decl_varnames),\n\tm4_quote(m4_shift($@))))[]dnl\n])\nm4_define([_lt_decl_all_varnames],\n[lt_join($@, lt_decl_varnames_tagged([$1],\n\t\t\tlt_decl_tag_varnames([[, ]], m4_shift($@))))dnl\n])\n\n\n# _LT_CONFIG_STATUS_DECLARE([VARNAME])\n# ------------------------------------\n# Quote a variable value, and forward it to `config.status' so that its\n# declaration there will have the same value as in `configure'.  VARNAME\n# must have a single quote delimited value for this to work.\nm4_define([_LT_CONFIG_STATUS_DECLARE],\n[$1='`$ECHO \"$][$1\" | $SED \"$delay_single_quote_subst\"`'])\n\n\n# _LT_CONFIG_STATUS_DECLARATIONS\n# ------------------------------\n# We delimit libtool config variables with single quotes, so when\n# we write them to config.status, we have to be sure to quote all\n# embedded single quotes properly.  In configure, this macro expands\n# each variable declared with _LT_DECL (and _LT_TAGDECL) into:\n#\n#    <var>='`$ECHO \"$<var>\" | $SED \"$delay_single_quote_subst\"`'\nm4_defun([_LT_CONFIG_STATUS_DECLARATIONS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_all_varnames),\n    [m4_n([_LT_CONFIG_STATUS_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAGS\n# ----------------\n# Output comment and list of tags supported by the script\nm4_defun([_LT_LIBTOOL_TAGS],\n[_LT_FORMAT_COMMENT([The names of the tagged configurations supported by this script])dnl\navailable_tags=\"_LT_TAGS\"dnl\n])\n\n\n# _LT_LIBTOOL_DECLARE(VARNAME, [TAG])\n# -----------------------------------\n# Extract the dictionary values for VARNAME (optionally with TAG) and\n# expand to a commented shell variable setting:\n#\n#    # Some comment about what VAR is for.\n#    visible_name=$lt_internal_name\nm4_define([_LT_LIBTOOL_DECLARE],\n[_LT_FORMAT_COMMENT(m4_quote(lt_dict_fetch([lt_decl_dict], [$1],\n\t\t\t\t\t   [description])))[]dnl\nm4_pushdef([_libtool_name],\n    m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [libtool_name])))[]dnl\nm4_case(m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [value])),\n    [0], [_libtool_name=[$]$1],\n    [1], [_libtool_name=$lt_[]$1],\n    [2], [_libtool_name=$lt_[]$1],\n    [_libtool_name=lt_dict_fetch([lt_decl_dict], [$1], [value])])[]dnl\nm4_ifval([$2], [_$2])[]m4_popdef([_libtool_name])[]dnl\n])\n\n\n# _LT_LIBTOOL_CONFIG_VARS\n# -----------------------\n# Produce commented declarations of non-tagged libtool config variables\n# suitable for insertion in the LIBTOOL CONFIG section of the `libtool'\n# script.  Tagged libtool config variables (even for the LIBTOOL CONFIG\n# section) are produced by _LT_LIBTOOL_TAG_VARS.\nm4_defun([_LT_LIBTOOL_CONFIG_VARS],\n[m4_foreach([_lt_var],\n    m4_quote(_lt_decl_filter([tagged?], [no], [], lt_decl_varnames)),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAG_VARS(TAG)\n# -------------------------\nm4_define([_LT_LIBTOOL_TAG_VARS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_tag_varnames),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var, [$1])])])])\n\n\n# _LT_TAGVAR(VARNAME, [TAGNAME])\n# ------------------------------\nm4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])\n\n\n# _LT_CONFIG_COMMANDS\n# -------------------\n# Send accumulated output to $CONFIG_STATUS.  Thanks to the lists of\n# variables for single and double quote escaping we saved from calls\n# to _LT_DECL, we can put quote escaped variables declarations\n# into `config.status', and then the shell code to quote escape them in\n# for loops in `config.status'.  Finally, any additional code accumulated\n# from calls to _LT_CONFIG_LIBTOOL_INIT is expanded.\nm4_defun([_LT_CONFIG_COMMANDS],\n[AC_PROVIDE_IFELSE([LT_OUTPUT],\n\tdnl If the libtool generation code has been placed in $CONFIG_LT,\n\tdnl instead of duplicating it all over again into config.status,\n\tdnl then we will have config.status run $CONFIG_LT later, so it\n\tdnl needs to know what name is stored there:\n        [AC_CONFIG_COMMANDS([libtool],\n            [$SHELL $CONFIG_LT || AS_EXIT(1)], [CONFIG_LT='$CONFIG_LT'])],\n    dnl If the libtool generation code is destined for config.status,\n    dnl expand the accumulated commands and init code now:\n    [AC_CONFIG_COMMANDS([libtool],\n        [_LT_OUTPUT_LIBTOOL_COMMANDS], [_LT_OUTPUT_LIBTOOL_COMMANDS_INIT])])\n])#_LT_CONFIG_COMMANDS\n\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],\n[\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nsed_quote_subst='$sed_quote_subst'\ndouble_quote_subst='$double_quote_subst'\ndelay_variable_subst='$delay_variable_subst'\n_LT_CONFIG_STATUS_DECLARATIONS\nLTCC='$LTCC'\nLTCFLAGS='$LTCFLAGS'\ncompiler='$compiler_DEFAULT'\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$[]1\n_LTECHO_EOF'\n}\n\n# Quote evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_quote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED \\\\\"\\\\\\$sed_quote_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\"\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n# Double-quote double-evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_dquote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED -e \\\\\"\\\\\\$double_quote_subst\\\\\" -e \\\\\"\\\\\\$sed_quote_subst\\\\\" -e \\\\\"\\\\\\$delay_variable_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\"\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n_LT_OUTPUT_LIBTOOL_INIT\n])\n\n# _LT_GENERATED_FILE_INIT(FILE, [COMMENT])\n# ------------------------------------\n# Generate a child script FILE with all initialization necessary to\n# reuse the environment learned by the parent script, and make the\n# file executable.  If COMMENT is supplied, it is inserted after the\n# `#!' sequence but before initialization text begins.  After this\n# macro, additional text can be appended to FILE to form the body of\n# the child script.  The macro ends with non-zero status if the\n# file could not be fully written (such as if the disk is full).\nm4_ifdef([AS_INIT_GENERATED],\n[m4_defun([_LT_GENERATED_FILE_INIT],[AS_INIT_GENERATED($@)])],\n[m4_defun([_LT_GENERATED_FILE_INIT],\n[m4_require([AS_PREPARE])]dnl\n[m4_pushdef([AS_MESSAGE_LOG_FD])]dnl\n[lt_write_fail=0\ncat >$1 <<_ASEOF || lt_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n$2\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$1 <<\\_ASEOF || lt_write_fail=1\nAS_SHELL_SANITIZE\n_AS_PREPARE\nexec AS_MESSAGE_FD>&1\n_ASEOF\ntest $lt_write_fail = 0 && chmod +x $1[]dnl\nm4_popdef([AS_MESSAGE_LOG_FD])])])# _LT_GENERATED_FILE_INIT\n\n# LT_OUTPUT\n# ---------\n# This macro allows early generation of the libtool script (before\n# AC_OUTPUT is called), incase it is used in configure for compilation\n# tests.\nAC_DEFUN([LT_OUTPUT],\n[: ${CONFIG_LT=./config.lt}\nAC_MSG_NOTICE([creating $CONFIG_LT])\n_LT_GENERATED_FILE_INIT([\"$CONFIG_LT\"],\n[# Run this file to recreate a libtool stub with the current configuration.])\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nlt_cl_silent=false\nexec AS_MESSAGE_LOG_FD>>config.log\n{\n  echo\n  AS_BOX([Running $as_me.])\n} >&AS_MESSAGE_LOG_FD\n\nlt_cl_help=\"\\\n\\`$as_me' creates a local libtool stub from the current configuration,\nfor use in further configure time tests before the real libtool is\ngenerated.\n\nUsage: $[0] [[OPTIONS]]\n\n  -h, --help      print this help, then exit\n  -V, --version   print version number, then exit\n  -q, --quiet     do not print progress messages\n  -d, --debug     don't remove temporary files\n\nReport bugs to <bug-libtool@gnu.org>.\"\n\nlt_cl_version=\"\\\nm4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl\nm4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])\nconfigured by $[0], generated by m4_PACKAGE_STRING.\n\nCopyright (C) 2011 Free Software Foundation, Inc.\nThis config.lt script is free software; the Free Software Foundation\ngives unlimited permision to copy, distribute and modify it.\"\n\nwhile test $[#] != 0\ndo\n  case $[1] in\n    --version | --v* | -V )\n      echo \"$lt_cl_version\"; exit 0 ;;\n    --help | --h* | -h )\n      echo \"$lt_cl_help\"; exit 0 ;;\n    --debug | --d* | -d )\n      debug=: ;;\n    --quiet | --q* | --silent | --s* | -q )\n      lt_cl_silent=: ;;\n\n    -*) AC_MSG_ERROR([unrecognized option: $[1]\nTry \\`$[0] --help' for more information.]) ;;\n\n    *) AC_MSG_ERROR([unrecognized argument: $[1]\nTry \\`$[0] --help' for more information.]) ;;\n  esac\n  shift\ndone\n\nif $lt_cl_silent; then\n  exec AS_MESSAGE_FD>/dev/null\nfi\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<_LTEOF\n_LT_OUTPUT_LIBTOOL_COMMANDS_INIT\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nAC_MSG_NOTICE([creating $ofile])\n_LT_OUTPUT_LIBTOOL_COMMANDS\nAS_EXIT(0)\n_LTEOF\nchmod +x \"$CONFIG_LT\"\n\n# configure is writing to config.log, but config.lt does its own redirection,\n# appending to config.log, which fails on DOS, as config.log is still kept\n# open by configure.  Here we exec the FD to /dev/null, effectively closing\n# config.log, so it can be properly (re)opened and appended to by config.lt.\nlt_cl_success=:\ntest \"$silent\" = yes &&\n  lt_config_lt_args=\"$lt_config_lt_args --quiet\"\nexec AS_MESSAGE_LOG_FD>/dev/null\n$SHELL \"$CONFIG_LT\" $lt_config_lt_args || lt_cl_success=false\nexec AS_MESSAGE_LOG_FD>>config.log\n$lt_cl_success || AS_EXIT(1)\n])# LT_OUTPUT\n\n\n# _LT_CONFIG(TAG)\n# ---------------\n# If TAG is the built-in tag, create an initial libtool script with a\n# default configuration from the untagged config vars.  Otherwise add code\n# to config.status for appending the configuration named by TAG from the\n# matching tagged config vars.\nm4_defun([_LT_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_CONFIG_SAVE_COMMANDS([\n  m4_define([_LT_TAG], m4_if([$1], [], [C], [$1]))dnl\n  m4_if(_LT_TAG, [C], [\n    # See if we are running on zsh, and set the options which allow our\n    # commands through without removal of \\ escapes.\n    if test -n \"${ZSH_VERSION+set}\" ; then\n      setopt NO_GLOB_SUBST\n    fi\n\n    cfgfile=\"${ofile}T\"\n    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n    $RM \"$cfgfile\"\n\n    cat <<_LT_EOF >> \"$cfgfile\"\n#! $SHELL\n\n# `$ECHO \"$ofile\" | sed 's%^.*/%%'` - Provide generalized library-building support services.\n# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION\n# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n#\n_LT_COPYING\n_LT_LIBTOOL_TAGS\n\n# ### BEGIN LIBTOOL CONFIG\n_LT_LIBTOOL_CONFIG_VARS\n_LT_LIBTOOL_TAG_VARS\n# ### END LIBTOOL CONFIG\n\n_LT_EOF\n\n  case $host_os in\n  aix3*)\n    cat <<\\_LT_EOF >> \"$cfgfile\"\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test \"X${COLLECT_NAMES+set}\" != Xset; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\n_LT_EOF\n    ;;\n  esac\n\n  _LT_PROG_LTMAIN\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" \\\n     || (rm -f \"$cfgfile\"; exit 1)\n\n  _LT_PROG_REPLACE_SHELLFNS\n\n   mv -f \"$cfgfile\" \"$ofile\" ||\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n],\n[cat <<_LT_EOF >> \"$ofile\"\n\ndnl Unfortunately we have to use $1 here, since _LT_TAG is not expanded\ndnl in a comment (ie after a #).\n# ### BEGIN LIBTOOL TAG CONFIG: $1\n_LT_LIBTOOL_TAG_VARS(_LT_TAG)\n# ### END LIBTOOL TAG CONFIG: $1\n_LT_EOF\n])dnl /m4_if\n],\n[m4_if([$1], [], [\n    PACKAGE='$PACKAGE'\n    VERSION='$VERSION'\n    TIMESTAMP='$TIMESTAMP'\n    RM='$RM'\n    ofile='$ofile'], [])\n])dnl /_LT_CONFIG_SAVE_COMMANDS\n])# _LT_CONFIG\n\n\n# LT_SUPPORTED_TAG(TAG)\n# ---------------------\n# Trace this macro to discover what tags are supported by the libtool\n# --tag option, using:\n#    autoconf --trace 'LT_SUPPORTED_TAG:$1'\nAC_DEFUN([LT_SUPPORTED_TAG], [])\n\n\n# C support is built-in for now\nm4_define([_LT_LANG_C_enabled], [])\nm4_define([_LT_TAGS], [])\n\n\n# LT_LANG(LANG)\n# -------------\n# Enable libtool support for the given language if not already enabled.\nAC_DEFUN([LT_LANG],\n[AC_BEFORE([$0], [LT_OUTPUT])dnl\nm4_case([$1],\n  [C],\t\t\t[_LT_LANG(C)],\n  [C++],\t\t[_LT_LANG(CXX)],\n  [Go],\t\t\t[_LT_LANG(GO)],\n  [Java],\t\t[_LT_LANG(GCJ)],\n  [Fortran 77],\t\t[_LT_LANG(F77)],\n  [Fortran],\t\t[_LT_LANG(FC)],\n  [Windows Resource],\t[_LT_LANG(RC)],\n  [m4_ifdef([_LT_LANG_]$1[_CONFIG],\n    [_LT_LANG($1)],\n    [m4_fatal([$0: unsupported language: \"$1\"])])])dnl\n])# LT_LANG\n\n\n# _LT_LANG(LANGNAME)\n# ------------------\nm4_defun([_LT_LANG],\n[m4_ifdef([_LT_LANG_]$1[_enabled], [],\n  [LT_SUPPORTED_TAG([$1])dnl\n  m4_append([_LT_TAGS], [$1 ])dnl\n  m4_define([_LT_LANG_]$1[_enabled], [])dnl\n  _LT_LANG_$1_CONFIG($1)])dnl\n])# _LT_LANG\n\n\nm4_ifndef([AC_PROG_GO], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_GO.  When it is available in    #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\nm4_defun([AC_PROG_GO],\n[AC_LANG_PUSH(Go)dnl\nAC_ARG_VAR([GOC],     [Go compiler command])dnl\nAC_ARG_VAR([GOFLAGS], [Go compiler flags])dnl\n_AC_ARG_VAR_LDFLAGS()dnl\nAC_CHECK_TOOL(GOC, gccgo)\nif test -z \"$GOC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    AC_CHECK_PROG(GOC, [${ac_tool_prefix}gccgo], [${ac_tool_prefix}gccgo])\n  fi\nfi\nif test -z \"$GOC\"; then\n  AC_CHECK_PROG(GOC, gccgo, gccgo, false)\nfi\n])#m4_defun\n])#m4_ifndef\n\n\n# _LT_LANG_DEFAULT_CONFIG\n# -----------------------\nm4_defun([_LT_LANG_DEFAULT_CONFIG],\n[AC_PROVIDE_IFELSE([AC_PROG_CXX],\n  [LT_LANG(CXX)],\n  [m4_define([AC_PROG_CXX], defn([AC_PROG_CXX])[LT_LANG(CXX)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_F77],\n  [LT_LANG(F77)],\n  [m4_define([AC_PROG_F77], defn([AC_PROG_F77])[LT_LANG(F77)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_FC],\n  [LT_LANG(FC)],\n  [m4_define([AC_PROG_FC], defn([AC_PROG_FC])[LT_LANG(FC)])])\n\ndnl The call to [A][M_PROG_GCJ] is quoted like that to stop aclocal\ndnl pulling things in needlessly.\nAC_PROVIDE_IFELSE([AC_PROG_GCJ],\n  [LT_LANG(GCJ)],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n    [LT_LANG(GCJ)],\n    [AC_PROVIDE_IFELSE([LT_PROG_GCJ],\n      [LT_LANG(GCJ)],\n      [m4_ifdef([AC_PROG_GCJ],\n\t[m4_define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([A][M_PROG_GCJ],\n\t[m4_define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([LT_PROG_GCJ],\n\t[m4_define([LT_PROG_GCJ], defn([LT_PROG_GCJ])[LT_LANG(GCJ)])])])])])\n\nAC_PROVIDE_IFELSE([AC_PROG_GO],\n  [LT_LANG(GO)],\n  [m4_define([AC_PROG_GO], defn([AC_PROG_GO])[LT_LANG(GO)])])\n\nAC_PROVIDE_IFELSE([LT_PROG_RC],\n  [LT_LANG(RC)],\n  [m4_define([LT_PROG_RC], defn([LT_PROG_RC])[LT_LANG(RC)])])\n])# _LT_LANG_DEFAULT_CONFIG\n\n# Obsolete macros:\nAU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])\nAU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])\nAU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])\nAU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])\nAU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_CXX], [])\ndnl AC_DEFUN([AC_LIBTOOL_F77], [])\ndnl AC_DEFUN([AC_LIBTOOL_FC], [])\ndnl AC_DEFUN([AC_LIBTOOL_GCJ], [])\ndnl AC_DEFUN([AC_LIBTOOL_RC], [])\n\n\n# _LT_TAG_COMPILER\n# ----------------\nm4_defun([_LT_TAG_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n_LT_DECL([LTCC], [CC], [1], [A C compiler])dnl\n_LT_DECL([LTCFLAGS], [CFLAGS], [1], [LTCC compiler flags])dnl\n_LT_TAGDECL([CC], [compiler], [1], [A language specific compiler])dnl\n_LT_TAGDECL([with_gcc], [GCC], [0], [Is the compiler the GNU compiler?])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_TAG_COMPILER\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nm4_defun([_LT_COMPILER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nm4_defun([_LT_LINKER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n])# _LT_LINKER_BOILERPLATE\n\n# _LT_REQUIRED_DARWIN_CHECKS\n# -------------------------\nm4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[\n  case $host_os in\n    rhapsody* | darwin*)\n    AC_CHECK_TOOL([DSYMUTIL], [dsymutil], [:])\n    AC_CHECK_TOOL([NMEDIT], [nmedit], [:])\n    AC_CHECK_TOOL([LIPO], [lipo], [:])\n    AC_CHECK_TOOL([OTOOL], [otool], [:])\n    AC_CHECK_TOOL([OTOOL64], [otool64], [:])\n    _LT_DECL([], [DSYMUTIL], [1],\n      [Tool to manipulate archived DWARF debug symbol files on Mac OS X])\n    _LT_DECL([], [NMEDIT], [1],\n      [Tool to change global to local symbols on Mac OS X])\n    _LT_DECL([], [LIPO], [1],\n      [Tool to manipulate fat objects and archives on Mac OS X])\n    _LT_DECL([], [OTOOL], [1],\n      [ldd/readelf like tool for Mach-O binaries on Mac OS X])\n    _LT_DECL([], [OTOOL64], [1],\n      [ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4])\n\n    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],\n      [lt_cv_apple_cc_single_mod=no\n      if test -z \"${LT_MULTI_MODULE}\"; then\n\t# By default we will add the -single_module flag. You can override\n\t# by either setting the environment variable LT_MULTI_MODULE\n\t# non-empty at configure time, or by adding -multi_module to the\n\t# link flags.\n\trm -rf libconftest.dylib*\n\techo \"int foo(void){return 1;}\" > conftest.c\n\techo \"$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n-dynamiclib -Wl,-single_module conftest.c\" >&AS_MESSAGE_LOG_FD\n\t$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n\t  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err\n        _lt_result=$?\n\t# If there is a non-empty error log, and \"single_module\"\n\t# appears in it, assume the flag caused a linker warning\n        if test -s conftest.err && $GREP single_module conftest.err; then\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\t# Otherwise, if the output was created with a 0 exit code from\n\t# the compiler, it worked.\n\telif test -f libconftest.dylib && test $_lt_result -eq 0; then\n\t  lt_cv_apple_cc_single_mod=yes\n\telse\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\tfi\n\trm -rf libconftest.dylib*\n\trm -f conftest.*\n      fi])\n\n    AC_CACHE_CHECK([for -exported_symbols_list linker flag],\n      [lt_cv_ld_exported_symbols_list],\n      [lt_cv_ld_exported_symbols_list=no\n      save_LDFLAGS=$LDFLAGS\n      echo \"_main\" > conftest.sym\n      LDFLAGS=\"$LDFLAGS -Wl,-exported_symbols_list,conftest.sym\"\n      AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n\t[lt_cv_ld_exported_symbols_list=yes],\n\t[lt_cv_ld_exported_symbols_list=no])\n\tLDFLAGS=\"$save_LDFLAGS\"\n    ])\n\n    AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],\n      [lt_cv_ld_force_load=no\n      cat > conftest.c << _LT_EOF\nint forced_loaded() { return 2;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS -c -o conftest.o conftest.c\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&AS_MESSAGE_LOG_FD\n      echo \"$AR cru libconftest.a conftest.o\" >&AS_MESSAGE_LOG_FD\n      $AR cru libconftest.a conftest.o 2>&AS_MESSAGE_LOG_FD\n      echo \"$RANLIB libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $RANLIB libconftest.a 2>&AS_MESSAGE_LOG_FD\n      cat > conftest.c << _LT_EOF\nint main() { return 0;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err\n      _lt_result=$?\n      if test -s conftest.err && $GREP force_load conftest.err; then\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      elif test -f conftest && test $_lt_result -eq 0 && $GREP forced_load conftest >/dev/null 2>&1 ; then\n\tlt_cv_ld_force_load=yes\n      else\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      fi\n        rm -f conftest.err libconftest.a conftest conftest.c\n        rm -rf conftest.dSYM\n    ])\n    case $host_os in\n    rhapsody* | darwin1.[[012]])\n      _lt_dar_allow_undefined='${wl}-undefined ${wl}suppress' ;;\n    darwin1.*)\n      _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;\n    darwin*) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don't you love it?\n      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n\t10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)\n\t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n\t10.[[012]]*)\n\t  _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;\n\t10.*)\n\t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n      esac\n    ;;\n  esac\n    if test \"$lt_cv_apple_cc_single_mod\" = \"yes\"; then\n      _lt_dar_single_mod='$single_module'\n    fi\n    if test \"$lt_cv_ld_exported_symbols_list\" = \"yes\"; then\n      _lt_dar_export_syms=' ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'\n    else\n      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/${libname}-symbols.expsym ${lib}'\n    fi\n    if test \"$DSYMUTIL\" != \":\" && test \"$lt_cv_ld_force_load\" = \"no\"; then\n      _lt_dsymutil='~$DSYMUTIL $lib || :'\n    else\n      _lt_dsymutil=\n    fi\n    ;;\n  esac\n])\n\n\n# _LT_DARWIN_LINKER_FEATURES([TAG])\n# ---------------------------------\n# Checks for linker and compiler features on darwin\nm4_defun([_LT_DARWIN_LINKER_FEATURES],\n[\n  m4_require([_LT_REQUIRED_DARWIN_CHECKS])\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_automatic, $1)=yes\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  if test \"$lt_cv_ld_force_load\" = \"yes\"; then\n    _LT_TAGVAR(whole_archive_flag_spec, $1)='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience ${wl}-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n    m4_case([$1], [F77], [_LT_TAGVAR(compiler_needs_object, $1)=yes],\n                  [FC],  [_LT_TAGVAR(compiler_needs_object, $1)=yes])\n  else\n    _LT_TAGVAR(whole_archive_flag_spec, $1)=''\n  fi\n  _LT_TAGVAR(link_all_deplibs, $1)=yes\n  _LT_TAGVAR(allow_undefined_flag, $1)=\"$_lt_dar_allow_undefined\"\n  case $cc_basename in\n     ifort*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test \"$_lt_dar_can_shared\" = \"yes\"; then\n    output_verbose_link_cmd=func_echo_all\n    _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod${_lt_dsymutil}\"\n    _LT_TAGVAR(module_cmds, $1)=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags${_lt_dsymutil}\"\n    _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring ${_lt_dar_single_mod}${_lt_dar_export_syms}${_lt_dsymutil}\"\n    _LT_TAGVAR(module_expsym_cmds, $1)=\"sed -e 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags${_lt_dar_export_syms}${_lt_dsymutil}\"\n    m4_if([$1], [CXX],\n[   if test \"$lt_cv_apple_cc_single_mod\" != \"yes\"; then\n      _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -r -keep_private_externs -nostdlib -o \\${lib}-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\${lib}-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring${_lt_dsymutil}\"\n      _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC -r -keep_private_externs -nostdlib -o \\${lib}-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\${lib}-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring${_lt_dar_export_syms}${_lt_dsymutil}\"\n    fi\n],[])\n  else\n  _LT_TAGVAR(ld_shlibs, $1)=no\n  fi\n])\n\n# _LT_SYS_MODULE_PATH_AIX([TAGNAME])\n# ----------------------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\n# Store the results from the different compilers for each TAGNAME.\n# Allow to override them for all tags through lt_cv_aix_libpath.\nm4_defun([_LT_SYS_MODULE_PATH_AIX],\n[m4_require([_LT_DECL_SED])dnl\nif test \"${lt_cv_aix_libpath+set}\" = set; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  AC_CACHE_VAL([_LT_TAGVAR([lt_cv_aix_libpath_], [$1])],\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM],[\n  lt_aix_libpath_sed='[\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }]'\n  _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi],[])\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=\"/usr/lib:/lib\"\n  fi\n  ])\n  aix_libpath=$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\nfi\n])# _LT_SYS_MODULE_PATH_AIX\n\n\n# _LT_SHELL_INIT(ARG)\n# -------------------\nm4_define([_LT_SHELL_INIT],\n[m4_divert_text([M4SH-INIT], [$1\n])])# _LT_SHELL_INIT\n\n\n\n# _LT_PROG_ECHO_BACKSLASH\n# -----------------------\n# Find how we can fake an echo command that does not interpret backslash.\n# In particular, with Autoconf 2.60 or later we add some code to the start\n# of the generated configure script which will find a shell with a builtin\n# printf (which we can use as an echo command).\nm4_defun([_LT_PROG_ECHO_BACKSLASH],\n[ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n\nAC_MSG_CHECKING([how to print strings])\n# Test print first, because it will be a builtin if present.\nif test \"X`( print -r -- -n ) 2>/dev/null`\" = X-n && \\\n   test \"X`print -r -- $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='print -r --'\nelif test \"X`printf %s $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='printf %s\\n'\nelse\n  # Use this function as a fallback that always works.\n  func_fallback_echo ()\n  {\n    eval 'cat <<_LTECHO_EOF\n$[]1\n_LTECHO_EOF'\n  }\n  ECHO='func_fallback_echo'\nfi\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\" \n}\n\ncase \"$ECHO\" in\n  printf*) AC_MSG_RESULT([printf]) ;;\n  print*) AC_MSG_RESULT([print -r]) ;;\n  *) AC_MSG_RESULT([cat]) ;;\nesac\n\nm4_ifdef([_AS_DETECT_SUGGESTED],\n[_AS_DETECT_SUGGESTED([\n  test -n \"${ZSH_VERSION+set}${BASH_VERSION+set}\" || (\n    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n    PATH=/empty FPATH=/empty; export PATH FPATH\n    test \"X`printf %s $ECHO`\" = \"X$ECHO\" \\\n      || test \"X`print -r -- $ECHO`\" = \"X$ECHO\" )])])\n\n_LT_DECL([], [SHELL], [1], [Shell to use when invoking shell scripts])\n_LT_DECL([], [ECHO], [1], [An echo program that protects backslashes])\n])# _LT_PROG_ECHO_BACKSLASH\n\n\n# _LT_WITH_SYSROOT\n# ----------------\nAC_DEFUN([_LT_WITH_SYSROOT],\n[AC_MSG_CHECKING([for sysroot])\nAC_ARG_WITH([sysroot],\n[  --with-sysroot[=DIR] Search for dependent libraries within DIR\n                        (or the compiler's sysroot if not specified).],\n[], [with_sysroot=no])\n\ndnl lt_sysroot will always be passed unquoted.  We quote it here\ndnl in case the user passed a directory name.\nlt_sysroot=\ncase ${with_sysroot} in #(\n yes)\n   if test \"$GCC\" = yes; then\n     lt_sysroot=`$CC --print-sysroot 2>/dev/null`\n   fi\n   ;; #(\n /*)\n   lt_sysroot=`echo \"$with_sysroot\" | sed -e \"$sed_quote_subst\"`\n   ;; #(\n no|'')\n   ;; #(\n *)\n   AC_MSG_RESULT([${with_sysroot}])\n   AC_MSG_ERROR([The sysroot must be an absolute path.])\n   ;;\nesac\n\n AC_MSG_RESULT([${lt_sysroot:-no}])\n_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl\n[dependent libraries, and in which our libraries should be installed.])])\n\n# _LT_ENABLE_LOCK\n# ---------------\nm4_defun([_LT_ENABLE_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n  [AS_HELP_STRING([--disable-libtool-lock],\n    [avoid locking (might break parallel builds)])])\ntest \"x$enable_libtool_lock\" != xno && enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n      *ELF-32*)\n\tHPUX_IA64_MODE=\"32\"\n\t;;\n      *ELF-64*)\n\tHPUX_IA64_MODE=\"64\"\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out which ABI we are using.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    if test \"$lt_cv_prog_gnu_ld\" = yes; then\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -melf32bsmip\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -melf32bmipn32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -melf64bmip\"\n\t;;\n      esac\n    else\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -32\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -n32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -64\"\n\t  ;;\n      esac\n    fi\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*kfreebsd*-gnu|x86_64-*linux*|ppc*-*linux*|powerpc*-*linux*| \\\ns390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n      *32-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_i386\"\n\t    ;;\n\t  ppc64-*linux*|powerpc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32ppclinux\"\n\t    ;;\n\t  s390x-*linux*)\n\t    LD=\"${LD-ld} -m elf_s390\"\n\t    ;;\n\t  sparc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32_sparc\"\n\t    ;;\n\tesac\n\t;;\n      *64-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_x86_64_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_x86_64\"\n\t    ;;\n\t  ppc*-*linux*|powerpc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64ppc\"\n\t    ;;\n\t  s390*-*linux*|s390*-*tpf*)\n\t    LD=\"${LD-ld} -m elf64_s390\"\n\t    ;;\n\t  sparc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64_sparc\"\n\t    ;;\n\tesac\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test x\"$lt_cv_cc_needs_belf\" != x\"yes\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=\"$SAVE_CFLAGS\"\n  fi\n  ;;\n*-*solaris*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*)\n        case $host in\n        i?86-*-solaris*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        sparc*-*-solaris*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n        esac\n        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n          LD=\"${LD-ld}_sol2\"\n        fi\n        ;;\n      *)\n\tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n\t  LD=\"${LD-ld} -64\"\n\tfi\n\t;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\nesac\n\nneed_locks=\"$enable_libtool_lock\"\n])# _LT_ENABLE_LOCK\n\n\n# _LT_PROG_AR\n# -----------\nm4_defun([_LT_PROG_AR],\n[AC_CHECK_TOOLS(AR, [ar], false)\n: ${AR=ar}\n: ${AR_FLAGS=cru}\n_LT_DECL([], [AR], [1], [The archiver])\n_LT_DECL([], [AR_FLAGS], [1], [Flags to create an archive])\n\nAC_CACHE_CHECK([for archiver @FILE support], [lt_cv_ar_at_file],\n  [lt_cv_ar_at_file=no\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM],\n     [echo conftest.$ac_objext > conftest.lst\n      lt_ar_try='$AR $AR_FLAGS libconftest.a @conftest.lst >&AS_MESSAGE_LOG_FD'\n      AC_TRY_EVAL([lt_ar_try])\n      if test \"$ac_status\" -eq 0; then\n\t# Ensure the archiver fails upon bogus file names.\n\trm -f conftest.$ac_objext libconftest.a\n\tAC_TRY_EVAL([lt_ar_try])\n\tif test \"$ac_status\" -ne 0; then\n          lt_cv_ar_at_file=@\n        fi\n      fi\n      rm -f conftest.* libconftest.a\n     ])\n  ])\n\nif test \"x$lt_cv_ar_at_file\" = xno; then\n  archiver_list_spec=\nelse\n  archiver_list_spec=$lt_cv_ar_at_file\nfi\n_LT_DECL([], [archiver_list_spec], [1],\n  [How to feed a file listing to the archiver])\n])# _LT_PROG_AR\n\n\n# _LT_CMD_OLD_ARCHIVE\n# -------------------\nm4_defun([_LT_CMD_OLD_ARCHIVE],\n[_LT_PROG_AR\n\nAC_CHECK_TOOL(STRIP, strip, :)\ntest -z \"$STRIP\" && STRIP=:\n_LT_DECL([], [STRIP], [1], [A symbol stripping program])\n\nAC_CHECK_TOOL(RANLIB, ranlib, :)\ntest -z \"$RANLIB\" && RANLIB=:\n_LT_DECL([], [RANLIB], [1],\n    [Commands used to install an old-style archive])\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$tool_oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$tool_oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$tool_oldlib\"\nfi\n\ncase $host_os in\n  darwin*)\n    lock_old_archive_extraction=yes ;;\n  *)\n    lock_old_archive_extraction=no ;;\nesac\n_LT_DECL([], [old_postinstall_cmds], [2])\n_LT_DECL([], [old_postuninstall_cmds], [2])\n_LT_TAGDECL([], [old_archive_cmds], [2],\n    [Commands used to build an old-style archive])\n_LT_DECL([], [lock_old_archive_extraction], [0],\n    [Whether to use a lock for old archive extraction])\n])# _LT_CMD_OLD_ARCHIVE\n\n\n# _LT_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([_LT_COMPILER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $RM conftest*\n])\n\nif test x\"[$]$2\" = xyes; then\n    m4_if([$5], , :, [$5])\nelse\n    m4_if([$6], , :, [$6])\nfi\n])# _LT_COMPILER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_COMPILER_OPTION], [_LT_COMPILER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [])\n\n\n# _LT_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                  [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------\n# Check whether the given linker option works\nAC_DEFUN([_LT_LINKER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=\"$LDFLAGS\"\n   LDFLAGS=\"$LDFLAGS $3\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=\"$save_LDFLAGS\"\n])\n\nif test x\"[$]$2\" = xyes; then\n    m4_if([$4], , :, [$4])\nelse\n    m4_if([$5], , :, [$5])\nfi\n])# _LT_LINKER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_LINKER_OPTION], [_LT_LINKER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [])\n\n\n# LT_CMD_MAX_LEN\n#---------------\nAC_DEFUN([LT_CMD_MAX_LEN],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=\"ABCD\"\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw* | cegcc*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  mint*)\n    # On MiNT this can take a long time and run out of memory.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  os2*)\n    # The test takes a long time on OS/2.\n    lt_cv_sys_max_cmd_len=8192\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[\t ]]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`\n    if test -n \"$lt_cv_sys_max_cmd_len\"; then\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    else\n      # Make teststring a little bigger before we do anything with it.\n      # a 1K string should be a reasonable start.\n      for i in 1 2 3 4 5 6 7 8 ; do\n        teststring=$teststring$teststring\n      done\n      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n      # If test is not a shell built-in, we'll probably end up computing a\n      # maximum length that is only half of the actual maximum length, but\n      # we can't tell.\n      while { test \"X\"`env echo \"$teststring$teststring\" 2>/dev/null` \\\n\t         = \"X$teststring$teststring\"; } >/dev/null 2>&1 &&\n\t      test $i != 17 # 1/2 MB should be enough\n      do\n        i=`expr $i + 1`\n        teststring=$teststring$teststring\n      done\n      # Only check the string length outside the loop.\n      lt_cv_sys_max_cmd_len=`expr \"X$teststring\" : \".*\" 2>&1`\n      teststring=\n      # Add a significant safety factor because C++ compilers can tack on\n      # massive amounts of additional arguments before passing them to the\n      # linker.  It appears as though 1/2 is a usable value.\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    fi\n    ;;\n  esac\n])\nif test -n $lt_cv_sys_max_cmd_len ; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n_LT_DECL([], [max_cmd_len], [0],\n    [What is the maximum length of a command?])\n])# LT_CMD_MAX_LEN\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_SYS_MAX_CMD_LEN], [LT_CMD_MAX_LEN])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [])\n\n\n# _LT_HEADER_DLFCN\n# ----------------\nm4_defun([_LT_HEADER_DLFCN],\n[AC_CHECK_HEADERS([dlfcn.h], [], [], [AC_INCLUDES_DEFAULT])dnl\n])# _LT_HEADER_DLFCN\n\n\n# _LT_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                      ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ----------------------------------------------------------------\nm4_defun([_LT_TRY_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test \"$cross_compiling\" = yes; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n[#line $LINENO \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisbility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined(__GNUC__) && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\n\nint fnord () { return 42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}]\n_LT_EOF\n  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext} 2>/dev/null; then\n    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_dlunknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_TRY_DLOPEN_SELF\n\n\n# LT_SYS_DLOPEN_SELF\n# ------------------\nAC_DEFUN([LT_SYS_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test \"x$enable_dlopen\" != xyes; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=\"load_add_on\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32* | cegcc*)\n    lt_cv_dlopen=\"LoadLibrary\"\n    lt_cv_dlopen_libs=\n    ;;\n\n  cygwin*)\n    lt_cv_dlopen=\"dlopen\"\n    lt_cv_dlopen_libs=\n    ;;\n\n  darwin*)\n  # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],[\n    lt_cv_dlopen=\"dyld\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n    ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=\"shl_load\"],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=\"shl_load\" lt_cv_dlopen_libs=\"-ldld\"],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=\"dlopen\"],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-lsvld\"],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=\"dld_link\" lt_cv_dlopen_libs=\"-ldld\"])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test \"x$lt_cv_dlopen\" != xno; then\n    enable_dlopen=yes\n  else\n    enable_dlopen=no\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=\"$CPPFLAGS\"\n    test \"x$ac_cv_header_dlfcn_h\" = xyes && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=\"$LDFLAGS\"\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=\"$LIBS\"\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test \"x$lt_cv_dlopen_self\" = xyes; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n\t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=\"$save_CPPFLAGS\"\n    LDFLAGS=\"$save_LDFLAGS\"\n    LIBS=\"$save_LIBS\"\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n_LT_DECL([dlopen_support], [enable_dlopen], [0],\n\t [Whether dlopen is supported])\n_LT_DECL([dlopen_self], [enable_dlopen_self], [0],\n\t [Whether dlopen of programs is supported])\n_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],\n\t [Whether dlopen of statically linked programs is supported])\n])# LT_SYS_DLOPEN_SELF\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [])\n\n\n# _LT_COMPILER_C_O([TAGNAME])\n# ---------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler.\n# This macro does not hard code the compiler like AC_PROG_CC_C_O.\nm4_defun([_LT_COMPILER_C_O],\n[m4_require([_LT_DECL_SED])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w . 2>&AS_MESSAGE_LOG_FD\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n])\n_LT_TAGDECL([compiler_c_o], [lt_cv_prog_compiler_c_o], [1],\n\t[Does compiler simultaneously support -c and -o options?])\n])# _LT_COMPILER_C_O\n\n\n# _LT_COMPILER_FILE_LOCKS([TAGNAME])\n# ----------------------------------\n# Check to see if we can do hard links to lock some files if needed\nm4_defun([_LT_COMPILER_FILE_LOCKS],\n[m4_require([_LT_ENABLE_LOCK])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_COMPILER_C_O([$1])\n\nhard_links=\"nottested\"\nif test \"$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" = no && test \"$need_locks\" != no; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test \"$hard_links\" = no; then\n    AC_MSG_WARN([`$CC' does not support `-c -o', so `make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n_LT_DECL([], [need_locks], [1], [Must we lock files when doing compilation?])\n])# _LT_COMPILER_FILE_LOCKS\n\n\n# _LT_CHECK_OBJDIR\n# ----------------\nm4_defun([_LT_CHECK_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n_LT_DECL([], [objdir], [0],\n         [The name of the directory that contains temporary libtool files])dnl\nm4_pattern_allow([LT_OBJDIR])dnl\nAC_DEFINE_UNQUOTED(LT_OBJDIR, \"$lt_cv_objdir/\",\n  [Define to the sub-directory in which libtool stores uninstalled libraries.])\n])# _LT_CHECK_OBJDIR\n\n\n# _LT_LINKER_HARDCODE_LIBPATH([TAGNAME])\n# --------------------------------------\n# Check hardcoding attributes.\nm4_defun([_LT_LINKER_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\" ||\n   test -n \"$_LT_TAGVAR(runpath_var, $1)\" ||\n   test \"X$_LT_TAGVAR(hardcode_automatic, $1)\" = \"Xyes\" ; then\n\n  # We can hardcode non-existent directories.\n  if test \"$_LT_TAGVAR(hardcode_direct, $1)\" != no &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test \"$_LT_TAGVAR(hardcode_shlibpath_var, $1)\" != no &&\n     test \"$_LT_TAGVAR(hardcode_minus_L, $1)\" != no; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, $1)])\n\nif test \"$_LT_TAGVAR(hardcode_action, $1)\" = relink ||\n   test \"$_LT_TAGVAR(inherit_rpath, $1)\" = yes; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test \"$shlibpath_overrides_runpath\" = yes ||\n     test \"$enable_shared\" = no; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n_LT_TAGDECL([], [hardcode_action], [0],\n    [How to hardcode a shared library path into an executable])\n])# _LT_LINKER_HARDCODE_LIBPATH\n\n\n# _LT_CMD_STRIPLIB\n# ----------------\nm4_defun([_LT_CMD_STRIPLIB],\n[m4_require([_LT_DECL_EGREP])\nstriplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | $GREP \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  AC_MSG_RESULT([yes])\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n  darwin*)\n    if test -n \"$STRIP\" ; then\n      striplib=\"$STRIP -x\"\n      old_striplib=\"$STRIP -S\"\n      AC_MSG_RESULT([yes])\n    else\n      AC_MSG_RESULT([no])\n    fi\n    ;;\n  *)\n    AC_MSG_RESULT([no])\n    ;;\n  esac\nfi\n_LT_DECL([], [old_striplib], [1], [Commands to strip libraries])\n_LT_DECL([], [striplib], [1])\n])# _LT_CMD_STRIPLIB\n\n\n# _LT_SYS_DYNAMIC_LINKER([TAG])\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nm4_defun([_LT_SYS_DYNAMIC_LINKER],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_OBJDUMP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nAC_MSG_CHECKING([dynamic linker characteristics])\nm4_if([$1],\n\t[], [\nif test \"$GCC\" = yes; then\n  case $host_os in\n    darwin*) lt_awk_arg=\"/^libraries:/,/LR/\" ;;\n    *) lt_awk_arg=\"/^libraries:/\" ;;\n  esac\n  case $host_os in\n    mingw* | cegcc*) lt_sed_strip_eq=\"s,=\\([[A-Za-z]]:\\),\\1,g\" ;;\n    *) lt_sed_strip_eq=\"s,=/,/,g\" ;;\n  esac\n  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e \"s/^libraries://\" -e $lt_sed_strip_eq`\n  case $lt_search_path_spec in\n  *\\;*)\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED 's/;/ /g'`\n    ;;\n  *)\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED \"s/$PATH_SEPARATOR/ /g\"`\n    ;;\n  esac\n  # Ok, now we have the path, separated by spaces, we can step through it\n  # and add multilib dir if necessary.\n  lt_tmp_lt_search_path_spec=\n  lt_multi_os_dir=`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`\n  for lt_sys_path in $lt_search_path_spec; do\n    if test -d \"$lt_sys_path/$lt_multi_os_dir\"; then\n      lt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path/$lt_multi_os_dir\"\n    else\n      test -d \"$lt_sys_path\" && \\\n\tlt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path\"\n    fi\n  done\n  lt_search_path_spec=`$ECHO \"$lt_tmp_lt_search_path_spec\" | awk '\nBEGIN {RS=\" \"; FS=\"/|\\n\";} {\n  lt_foo=\"\";\n  lt_count=0;\n  for (lt_i = NF; lt_i > 0; lt_i--) {\n    if ($lt_i != \"\" && $lt_i != \".\") {\n      if ($lt_i == \"..\") {\n        lt_count++;\n      } else {\n        if (lt_count == 0) {\n          lt_foo=\"/\" $lt_i lt_foo;\n        } else {\n          lt_count--;\n        }\n      }\n    }\n  }\n  if (lt_foo != \"\") { lt_freq[[lt_foo]]++; }\n  if (lt_freq[[lt_foo]] == 1) { print lt_foo; }\n}'`\n  # AWK program above erroneously prepends '/' to C:/dos/paths\n  # for these hosts.\n  case $host_os in\n    mingw* | cegcc*) lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" |\\\n      $SED 's,/\\([[A-Za-z]]:\\),\\1,g'` ;;\n  esac\n  sys_lib_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $lt_NL2SP`\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=\".so\"\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\ncase $host_os in\naix3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='${libname}${release}${shared_ext}$major'\n  ;;\n\naix[[4-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test \"$host_cpu\" = ia64; then\n    # AIX 5 supports IA64\n    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line `#! .'.  This would cause the generated library to\n    # depend on `.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | ${CC} -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    if test \"$aix_use_runtimelinking\" = yes; then\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    else\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='${libname}${release}.a $libname.a'\n      soname_spec='${libname}${release}${shared_ext}$major'\n    fi\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; test $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='${libname}${shared_ext}'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=\".dll\"\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$cc_basename in\n  yes,*)\n    # gcc\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\${file}`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\${base_file}'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\nm4_if([$1], [],[\n      sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/lib/w32api\"])\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      ;;\n    esac\n    dynamic_linker='Win32 ld.exe'\n    ;;\n\n  *,cl*)\n    # Native MSVC\n    libname_spec='$name'\n    soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n    library_names_spec='${libname}.dll.lib'\n\n    case $build_os in\n    mingw*)\n      sys_lib_search_path_spec=\n      lt_save_ifs=$IFS\n      IFS=';'\n      for lt_path in $LIB\n      do\n        IFS=$lt_save_ifs\n        # Let DOS variable expansion print the short 8.3 style file name.\n        lt_path=`cd \"$lt_path\" 2>/dev/null && cmd //C \"for %i in (\".\") do @echo %~si\"`\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec $lt_path\"\n      done\n      IFS=$lt_save_ifs\n      # Convert to MSYS style.\n      sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | sed -e 's|\\\\\\\\|/|g' -e 's| \\\\([[a-zA-Z]]\\\\):| /\\\\1|g' -e 's|^ ||'`\n      ;;\n    cygwin*)\n      # Convert to unix form, then to dos form, then back to unix form\n      # but this time dos style (no spaces!) so that the unix form looks\n      # like /cygdrive/c/PROGRA~1:/cygdr...\n      sys_lib_search_path_spec=`cygpath --path --unix \"$LIB\"`\n      sys_lib_search_path_spec=`cygpath --path --dos \"$sys_lib_search_path_spec\" 2>/dev/null`\n      sys_lib_search_path_spec=`cygpath --path --unix \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      ;;\n    *)\n      sys_lib_search_path_spec=\"$LIB\"\n      if $ECHO \"$sys_lib_search_path_spec\" | [$GREP ';[c-zC-Z]:/' >/dev/null]; then\n        # It is most probably a Windows format PATH.\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      # FIXME: find the short name or the path components, as spaces are\n      # common. (e.g. \"Program Files\" -> \"PROGRA~1\")\n      ;;\n    esac\n\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\${file}`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\${base_file}'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n    dynamic_linker='Win32 link.exe'\n    ;;\n\n  *)\n    # Assume MSVC wrapper\n    library_names_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext} $libname.lib'\n    dynamic_linker='Win32 ld.exe'\n    ;;\n  esac\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${major}$shared_ext ${libname}$shared_ext'\n  soname_spec='${libname}${release}${major}$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\nm4_if([$1], [],[\n  sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/local/lib\"])\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[[23]].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \\\n  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\ngnu*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nhaiku*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    if test \"X$HPUX_IA64_MODE\" = X32; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n    fi\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[[3-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test \"$lt_cv_prog_gnu_ld\" = yes; then\n\t\tversion_type=linux # correct to gnu/linux during the next big refactor\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib${libsuff} /lib${libsuff}\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  AC_CACHE_VAL([lt_cv_shlibpath_overrides_runpath],\n    [lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$_LT_TAGVAR(lt_prog_compiler_wl, $1)\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\\\"\"\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n      [AS_IF([ ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null],\n\t [lt_cv_shlibpath_overrides_runpath=yes])])\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n    ])\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Append ld.so.conf contents to the search path\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=\"/usr/lib\"\n  need_lib_prefix=no\n  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.\n  case $host_os in\n    openbsd3.3 | openbsd3.3.*)\tneed_version=yes ;;\n    *)\t\t\t\tneed_version=no  ;;\n  esac\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    case $host_os in\n      openbsd2.[[89]] | openbsd2.[[89]].*)\n\tshlibpath_overrides_runpath=no\n\t;;\n      *)\n\tshlibpath_overrides_runpath=yes\n\t;;\n      esac\n  else\n    shlibpath_overrides_runpath=yes\n  fi\n  ;;\n\nos2*)\n  libname_spec='$name'\n  shrext_cmds=\".dll\"\n  need_lib_prefix=no\n  library_names_spec='$libname${shared_ext} $libname.a'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=LIBPATH\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=\"$sys_lib_search_path_spec\"\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test \"$with_gnu_ld\" = yes; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec ;then\n    version_type=linux # correct to gnu/linux during the next big refactor\n    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'\n    soname_spec='$libname${shared_ext}.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=freebsd-elf\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test \"$with_gnu_ld\" = yes; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest \"$dynamic_linker\" = no && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test \"$GCC\" = yes; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test \"${lt_cv_sys_lib_search_path_spec+set}\" = set; then\n  sys_lib_search_path_spec=\"$lt_cv_sys_lib_search_path_spec\"\nfi\nif test \"${lt_cv_sys_lib_dlsearch_path_spec+set}\" = set; then\n  sys_lib_dlsearch_path_spec=\"$lt_cv_sys_lib_dlsearch_path_spec\"\nfi\n\n_LT_DECL([], [variables_saved_for_relink], [1],\n    [Variables whose values should be saved in libtool wrapper scripts and\n    restored at link time])\n_LT_DECL([], [need_lib_prefix], [0],\n    [Do we need the \"lib\" prefix for modules?])\n_LT_DECL([], [need_version], [0], [Do we need a version for libraries?])\n_LT_DECL([], [version_type], [0], [Library versioning type])\n_LT_DECL([], [runpath_var], [0],  [Shared library runtime path variable])\n_LT_DECL([], [shlibpath_var], [0],[Shared library path variable])\n_LT_DECL([], [shlibpath_overrides_runpath], [0],\n    [Is shlibpath searched before the hard-coded library search path?])\n_LT_DECL([], [libname_spec], [1], [Format of library name prefix])\n_LT_DECL([], [library_names_spec], [1],\n    [[List of archive names.  First name is the real one, the rest are links.\n    The last name is the one that the linker finds with -lNAME]])\n_LT_DECL([], [soname_spec], [1],\n    [[The coded name of the library, if different from the real name]])\n_LT_DECL([], [install_override_mode], [1],\n    [Permission mode override for installation of shared libraries])\n_LT_DECL([], [postinstall_cmds], [2],\n    [Command to use after installation of a shared archive])\n_LT_DECL([], [postuninstall_cmds], [2],\n    [Command to use after uninstallation of a shared archive])\n_LT_DECL([], [finish_cmds], [2],\n    [Commands used to finish a libtool library installation in a directory])\n_LT_DECL([], [finish_eval], [1],\n    [[As \"finish_cmds\", except a single script fragment to be evaled but\n    not shown]])\n_LT_DECL([], [hardcode_into_libs], [0],\n    [Whether we should hardcode library paths into libraries])\n_LT_DECL([], [sys_lib_search_path_spec], [2],\n    [Compile-time system search path for libraries])\n_LT_DECL([], [sys_lib_dlsearch_path_spec], [2],\n    [Run-time system search path for libraries])\n])# _LT_SYS_DYNAMIC_LINKER\n\n\n# _LT_PATH_TOOL_PREFIX(TOOL)\n# --------------------------\n# find a file program which can recognize shared library\nAC_DEFUN([_LT_PATH_TOOL_PREFIX],\n[m4_require([_LT_DECL_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=\"$MAGIC_CMD\" # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=\"$MAGIC_CMD\"\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"m4_if([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f $ac_dir/$1; then\n      lt_cv_path_MAGIC_CMD=\"$ac_dir/$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n  MAGIC_CMD=\"$lt_save_MAGIC_CMD\"\n  ;;\nesac])\nMAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n_LT_DECL([], [MAGIC_CMD], [0],\n\t [Used to examine libraries when file_magic_cmd begins with \"file\"])dnl\n])# _LT_PATH_TOOL_PREFIX\n\n# Old name:\nAU_ALIAS([AC_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PATH_TOOL_PREFIX], [])\n\n\n# _LT_PATH_MAGIC\n# --------------\n# find a file program which can recognize a shared library\nm4_defun([_LT_PATH_MAGIC],\n[_LT_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    _LT_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# _LT_PATH_MAGIC\n\n\n# LT_PATH_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([LT_PATH_LD],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PROG_ECHO_BACKSLASH])dnl\n\nAC_ARG_WITH([gnu-ld],\n    [AS_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test \"$withval\" = no || with_gnu_ld=yes],\n    [with_gnu_ld=no])dnl\n\nac_prog=ld\nif test \"$GCC\" = yes; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=\"$ac_prog\"\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test \"$with_gnu_ld\" = yes; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=\"$ac_dir/$ac_prog\"\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest \"$with_gnu_ld\" != no && break\n\t;;\n      *)\n\ttest \"$with_gnu_ld\" != yes && break\n\t;;\n      esac\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\nelse\n  lt_cv_path_LD=\"$LD\" # Let the user override the test with a path.\nfi])\nLD=\"$lt_cv_path_LD\"\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n_LT_PATH_LD_GNU\nAC_SUBST([LD])\n\n_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])\n])# LT_PATH_LD\n\n# Old names:\nAU_ALIAS([AM_PROG_LD], [LT_PATH_LD])\nAU_ALIAS([AC_PROG_LD], [LT_PATH_LD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_LD], [])\ndnl AC_DEFUN([AC_PROG_LD], [])\n\n\n# _LT_PATH_LD_GNU\n#- --------------\nm4_defun([_LT_PATH_LD_GNU],\n[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# _LT_PATH_LD_GNU\n\n\n# _LT_CMD_RELOAD\n# --------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nm4_defun([_LT_CMD_RELOAD],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    if test \"$GCC\" != yes; then\n      reload_cmds=false\n    fi\n    ;;\n  darwin*)\n    if test \"$GCC\" = yes; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n_LT_TAGDECL([], [reload_flag], [1], [How to create reloadable object files])dnl\n_LT_TAGDECL([], [reload_cmds], [2])dnl\n])# _LT_CMD_RELOAD\n\n\n# _LT_CHECK_MAGIC_METHOD\n# ----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_MAGIC_METHOD],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nAC_CACHE_CHECK([how to recognize dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# `unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# which responds to the $file_magic_cmd with a given extended regex.\n# If you have `file' or equivalent on your system and you're not sure\n# whether `pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix[[4-9]]*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump',\n  # unless we find 'file', for example because we are cross-compiling.\n  # func_win32_libid assumes BSD nm, so disallow it if using MS dumpbin.\n  if ( test \"$lt_cv_nm_interface\" = \"BSD nm\" && file / ) >/dev/null 2>&1; then\n    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n    lt_cv_file_magic_cmd='func_win32_libid'\n  else\n    # Keep this pattern in sync with the one in func_win32_libid.\n    lt_cv_deplibs_check_method='file_magic file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)'\n    lt_cv_file_magic_cmd='$OBJDUMP -f'\n  fi\n  ;;\n\ncegcc*)\n  # use the weaker test based on 'objdump'. See mingw*.\n  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | dragonfly*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\ngnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhaiku*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\\.[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]]\\.[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix[[3-9]]*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\n*nto* | *qnx*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nopenbsd*)\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nrdos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\ntpf*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\n\nfile_magic_glob=\nwant_nocaseglob=no\nif test \"$build\" = \"$host\"; then\n  case $host_os in\n  mingw* | pw32*)\n    if ( shopt | grep nocaseglob ) >/dev/null 2>&1; then\n      want_nocaseglob=yes\n    else\n      file_magic_glob=`echo aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ | $SED -e \"s/\\(..\\)/s\\/[[\\1]]\\/[[\\1]]\\/g;/g\"`\n    fi\n    ;;\n  esac\nfi\n\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n\n_LT_DECL([], [deplibs_check_method], [1],\n    [Method to check whether dependent libraries are shared objects])\n_LT_DECL([], [file_magic_cmd], [1],\n    [Command to use when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [file_magic_glob], [1],\n    [How to find potential files when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [want_nocaseglob], [1],\n    [Find potential files using nocaseglob when deplibs_check_method = \"file_magic\"])\n])# _LT_CHECK_MAGIC_METHOD\n\n\n# LT_PATH_NM\n# ----------\n# find the pathname to a BSD- or MS-compatible name lister\nAC_DEFUN([LT_PATH_NM],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=\"$NM\"\nelse\n  lt_nm_to_check=\"${ac_tool_prefix}nm\"\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then\n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=\"$lt_save_ifs\"\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=\"$ac_dir/$lt_tmp_nm\"\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\" ; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the `sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\tcase `\"$tmp_nm\" -B /dev/null 2>&1 | sed '1q'` in\n\t*/dev/null* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=\"$lt_save_ifs\"\n  done\n  : ${lt_cv_path_NM=no}\nfi])\nif test \"$lt_cv_path_NM\" != \"no\"; then\n  NM=\"$lt_cv_path_NM\"\nelse\n  # Didn't find any BSD compatible name lister, look for dumpbin.\n  if test -n \"$DUMPBIN\"; then :\n    # Let the user override the test.\n  else\n    AC_CHECK_TOOLS(DUMPBIN, [dumpbin \"link -dump\"], :)\n    case `$DUMPBIN -symbols /dev/null 2>&1 | sed '1q'` in\n    *COFF*)\n      DUMPBIN=\"$DUMPBIN -symbols\"\n      ;;\n    *)\n      DUMPBIN=:\n      ;;\n    esac\n  fi\n  AC_SUBST([DUMPBIN])\n  if test \"$DUMPBIN\" != \":\"; then\n    NM=\"$DUMPBIN\"\n  fi\nfi\ntest -z \"$NM\" && NM=nm\nAC_SUBST([NM])\n_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl\n\nAC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],\n  [lt_cv_nm_interface=\"BSD nm\"\n  echo \"int some_variable = 0;\" > conftest.$ac_ext\n  (eval echo \"\\\"\\$as_me:$LINENO: $ac_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$ac_compile\" 2>conftest.err)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: output\\\"\" >&AS_MESSAGE_LOG_FD)\n  cat conftest.out >&AS_MESSAGE_LOG_FD\n  if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n    lt_cv_nm_interface=\"MS dumpbin\"\n  fi\n  rm -f conftest*])\n])# LT_PATH_NM\n\n# Old names:\nAU_ALIAS([AM_PROG_NM], [LT_PATH_NM])\nAU_ALIAS([AC_PROG_NM], [LT_PATH_NM])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_NM], [])\ndnl AC_DEFUN([AC_PROG_NM], [])\n\n# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n# --------------------------------\n# how to determine the name of the shared library\n# associated with a specific link library.\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_SHAREDLIB_FROM_LINKLIB],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nm4_require([_LT_DECL_DLLTOOL])\nAC_CACHE_CHECK([how to associate runtime and link libraries],\nlt_cv_sharedlib_from_linklib_cmd,\n[lt_cv_sharedlib_from_linklib_cmd='unknown'\n\ncase $host_os in\ncygwin* | mingw* | pw32* | cegcc*)\n  # two different shell functions defined in ltmain.sh\n  # decide which to use based on capabilities of $DLLTOOL\n  case `$DLLTOOL --help 2>&1` in\n  *--identify-strict*)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib\n    ;;\n  *)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback\n    ;;\n  esac\n  ;;\n*)\n  # fallback: assume linklib IS sharedlib\n  lt_cv_sharedlib_from_linklib_cmd=\"$ECHO\"\n  ;;\nesac\n])\nsharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd\ntest -z \"$sharedlib_from_linklib_cmd\" && sharedlib_from_linklib_cmd=$ECHO\n\n_LT_DECL([], [sharedlib_from_linklib_cmd], [1],\n    [Command to associate shared and link libraries])\n])# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n\n\n# _LT_PATH_MANIFEST_TOOL\n# ----------------------\n# locate the manifest tool\nm4_defun([_LT_PATH_MANIFEST_TOOL],\n[AC_CHECK_TOOL(MANIFEST_TOOL, mt, :)\ntest -z \"$MANIFEST_TOOL\" && MANIFEST_TOOL=mt\nAC_CACHE_CHECK([if $MANIFEST_TOOL is a manifest tool], [lt_cv_path_mainfest_tool],\n  [lt_cv_path_mainfest_tool=no\n  echo \"$as_me:$LINENO: $MANIFEST_TOOL '-?'\" >&AS_MESSAGE_LOG_FD\n  $MANIFEST_TOOL '-?' 2>conftest.err > conftest.out\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  if $GREP 'Manifest Tool' conftest.out > /dev/null; then\n    lt_cv_path_mainfest_tool=yes\n  fi\n  rm -f conftest*])\nif test \"x$lt_cv_path_mainfest_tool\" != xyes; then\n  MANIFEST_TOOL=:\nfi\n_LT_DECL([], [MANIFEST_TOOL], [1], [Manifest tool])dnl\n])# _LT_PATH_MANIFEST_TOOL\n\n\n# LT_LIB_M\n# --------\n# check for math library\nAC_DEFUN([LT_LIB_M],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=\"-lmw\")\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=\"-lm\")\n  ;;\nesac\nAC_SUBST([LIBM])\n])# LT_LIB_M\n\n# Old name:\nAU_ALIAS([AC_CHECK_LIBM], [LT_LIB_M])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_CHECK_LIBM], [])\n\n\n# _LT_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------\nm4_defun([_LT_COMPILER_NO_RTTI],\n[m4_require([_LT_TAG_COMPILER])dnl\n\n_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test \"$GCC\" = yes; then\n  case $cc_basename in\n  nvcc*)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -Xcompiler -fno-builtin' ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin' ;;\n  esac\n\n  _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n_LT_TAGDECL([no_builtin_flag], [lt_prog_compiler_no_builtin_flag], [1],\n\t[Compiler flag to turn off builtin functions])\n])# _LT_COMPILER_NO_RTTI\n\n\n# _LT_CMD_GLOBAL_SYMBOLS\n# ----------------------\nm4_defun([_LT_CMD_GLOBAL_SYMBOLS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_TAG_COMPILER])dnl\n\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32* | cegcc*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*)\n  if test \"$host_cpu\" = ia64; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris*)\n  symcode='[[BDRT]]'\n  ;;\nsco3.2v5*)\n  symcode='[[DT]]'\n  ;;\nsysv4.2uw2*)\n  symcode='[[DT]]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[[ABDT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\n# Transform an extracted symbol line into a proper C declaration.\n# Some systems (esp. on ia64) link data and code symbols differently,\n# so use this general approach.\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n -e 's/^T .* \\(.*\\)$/extern int \\1();/p' -e 's/^$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n -e 's/^: \\([[^ ]]*\\)[[ ]]*$/  {\\\\\\\"\\1\\\\\\\", (void *) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/p'\"\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix=\"sed -n -e 's/^: \\([[^ ]]*\\)[[ ]]*$/  {\\\\\\\"\\1\\\\\\\", (void *) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\(lib[[^ ]]*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"lib\\2\\\", (void *) \\&\\2},/p'\"\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`$ECHO 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# Try without a prefix underscore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  if test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n    # Fake it for dumpbin and say T for any non-static function\n    # and D for any global variable.\n    # Also find C++ and __fastcall symbols from MSVC++,\n    # which start with @ or ?.\n    lt_cv_sys_global_symbol_pipe=\"$AWK ['\"\\\n\"     {last_section=section; section=\\$ 3};\"\\\n\"     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};\"\\\n\"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};\"\\\n\"     \\$ 0!~/External *\\|/{next};\"\\\n\"     / 0+ UNDEF /{next}; / UNDEF \\([^|]\\)*()/{next};\"\\\n\"     {if(hide[section]) next};\"\\\n\"     {f=0}; \\$ 0~/\\(\\).*\\|/{f=1}; {printf f ? \\\"T \\\" : \\\"D \\\"};\"\\\n\"     {split(\\$ 0, a, /\\||\\r/); split(a[2], s)};\"\\\n\"     s[1]~/^[@?]/{print s[1], s[1]; next};\"\\\n\"     s[1]~prfx {split(s[1],t,\\\"@\\\"); print t[1], substr(t[1],length(prfx))}\"\\\n\"     ' prfx=^$ac_symprfx]\"\n  else\n    lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[\t ]]\\($symcode$symcode*\\)[[\t ]][[\t ]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n  fi\n  lt_cv_sys_global_symbol_pipe=\"$lt_cv_sys_global_symbol_pipe | sed '/ __gnu_lto/d'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<_LT_EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(void);\nvoid nm_test_func(void){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\n_LT_EOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| \"$lt_cv_sys_global_symbol_pipe\" \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if $GREP ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif $GREP ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<_LT_EOF > conftest.$ac_ext\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined(_WIN32) || defined(__CYGWIN__) || defined(_WIN32_WCE)\n/* DATA imports from DLLs on WIN32 con't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT@&t@_DLSYM_CONST\n#elif defined(__osf__)\n/* This system does not cope well with relocations in const data.  */\n# define LT@&t@_DLSYM_CONST\n#else\n# define LT@&t@_DLSYM_CONST const\n#endif\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n_LT_EOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | $GREP -v main >> conftest.$ac_ext'\n\n\t  cat <<_LT_EOF >> conftest.$ac_ext\n\n/* The mapping between symbol names and symbols.  */\nLT@&t@_DLSYM_CONST struct {\n  const char *name;\n  void       *address;\n}\nlt__PROGRAM__LTX_preloaded_symbols[[]] =\n{\n  { \"@PROGRAM@\", (void *) 0 },\n_LT_EOF\n\t  $SED \"s/^$symcode$symcode* \\(.*\\) \\(.*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/\" < \"$nlist\" | $GREP -v main >> conftest.$ac_ext\n\t  cat <<\\_LT_EOF >> conftest.$ac_ext\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt__PROGRAM__LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n_LT_EOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_globsym_save_LIBS=$LIBS\n\t  lt_globsym_save_CFLAGS=$CFLAGS\n\t  LIBS=\"conftstm.$ac_objext\"\n\t  CFLAGS=\"$CFLAGS$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext}; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=$lt_globsym_save_LIBS\n\t  CFLAGS=$lt_globsym_save_CFLAGS\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -rf conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test \"$pipe_works\" = yes; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n\n# Response file support.\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  nm_file_list_spec='@'\nelif $NM --help 2>/dev/null | grep '[[@]]FILE' >/dev/null; then\n  nm_file_list_spec='@'\nfi\n\n_LT_DECL([global_symbol_pipe], [lt_cv_sys_global_symbol_pipe], [1],\n    [Take the output of nm and produce a listing of raw symbols and C names])\n_LT_DECL([global_symbol_to_cdecl], [lt_cv_sys_global_symbol_to_cdecl], [1],\n    [Transform the output of nm in a proper C declaration])\n_LT_DECL([global_symbol_to_c_name_address],\n    [lt_cv_sys_global_symbol_to_c_name_address], [1],\n    [Transform the output of nm in a C name address pair])\n_LT_DECL([global_symbol_to_c_name_address_lib_prefix],\n    [lt_cv_sys_global_symbol_to_c_name_address_lib_prefix], [1],\n    [Transform the output of nm in a C name address pair when lib prefix is needed])\n_LT_DECL([], [nm_file_list_spec], [1],\n    [Specify filename containing input files for $NM])\n]) # _LT_CMD_GLOBAL_SYMBOLS\n\n\n# _LT_COMPILER_PIC([TAGNAME])\n# ---------------------------\nm4_defun([_LT_COMPILER_PIC],\n[m4_require([_LT_TAG_COMPILER])dnl\n_LT_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_TAGVAR(lt_prog_compiler_static, $1)=\n\nm4_if([$1], [CXX], [\n  # C++ specific cases for pic, static, wl, etc.\n  if test \"$GXX\" = yes; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the `-m68020' flag to GCC prevents building anything better,\n            # like `-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | cygwin* | os2* | pw32* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *qnx* | *nto*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix[[4-9]]*)\n\t# All AIX code is PIC.\n\tif test \"$host_cpu\" = ia64; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n      mingw* | cygwin* | os2* | pw32* | cegcc*)\n\t# This hack is so that the source file can tell whether it is being\n\t# built for inclusion in a dll (and should export symbols for example).\n\tm4_if([$1], [GCJ], [],\n\t  [_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n\t;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n\t    if test \"$host_cpu\" != ia64; then\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux* | k*bsd*-gnu | kopensolaris*-gnu)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  ecpc* )\n\t    # old Intel C++ for x86_64 which still supported -KPIC.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  icpc* )\n\t    # Intel C++, used to be incompatible with GCC.\n\t    # ICC 10 doesn't accept -KPIC any more.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC* | pgcpp*)\n\t    # Portland Group C++ compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  xlc* | xlC* | bgxl[[cC]]* | mpixl[[cC]]*)\n\t    # IBM XL 8.0, 9.0 on PPC and BlueGene\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd*)\n\t;;\n      *qnx* | *nto*)\n        # QNX uses GNU C++, but need to define -shared option too, otherwise\n        # it will coredump.\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n        ;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test \"$GCC\" = yes; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the `-m68020' flag to GCC prevents building anything better,\n            # like `-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n\n    case $cc_basename in\n    nvcc*) # Cuda Compiler Driver 2.2\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Xlinker '\n      if test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"-Xcompiler $_LT_TAGVAR(lt_prog_compiler_pic, $1)\"\n      fi\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    linux* | k*bsd*-gnu | kopensolaris*-gnu)\n      case $cc_basename in\n      # old Intel for x86_64 which still supported -KPIC.\n      ecc*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # Lahey Fortran 8.1.\n      lf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='--shared'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='--static'\n\t;;\n      nagfor*)\n\t# NAG Fortran compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t;;\n      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      ccc*)\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      xl* | bgxl* | bgf* | mpixl*)\n\t# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t;;\n      *)\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ Ceres\\ Fortran* | *Sun*Fortran*\\ [[1-7]].* | *Sun*Fortran*\\ 8.[[0-3]]*)\n\t  # Sun Fortran 8.3 passes all unrecognized flags to the linker\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)=''\n\t  ;;\n\t*Sun\\ F* | *Sun*Fortran*)\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t  ;;\n\t*Sun\\ C*)\n\t  # Sun C 5.9\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  ;;\n        *Intel*\\ [[CF]]*Compiler*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t  ;;\n\t*Portland\\ Group*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  ;;\n\tesac\n\t;;\n      esac\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    rdos*)\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95* | sunf77* | sunf90* | sunf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec ;then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    unicos*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\ncase $host_os in\n  # For platforms which do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\n\nAC_CACHE_CHECK([for $compiler option to produce PIC],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_prog_compiler_pic, $1)])\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, $1) works],\n    [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, $1)],\n    [$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\n_LT_TAGDECL([pic_flag], [lt_prog_compiler_pic], [1],\n\t[Additional compiler flags for building library objects])\n\n_LT_TAGDECL([wl], [lt_prog_compiler_wl], [1],\n\t[How to pass a linker flag through the compiler])\n#\n# Check to make sure the static flag actually works.\n#\nwl=$_LT_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\\\"$_LT_TAGVAR(lt_prog_compiler_static, $1)\\\"\n_LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],\n  _LT_TAGVAR(lt_cv_prog_compiler_static_works, $1),\n  $lt_tmp_static_flag,\n  [],\n  [_LT_TAGVAR(lt_prog_compiler_static, $1)=])\n_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],\n\t[Compiler flag to prevent dynamic linking])\n])# _LT_COMPILER_PIC\n\n\n# _LT_LINKER_SHLIBS([TAGNAME])\n# ----------------------------\n# See if the linker supports building shared libraries.\nm4_defun([_LT_LINKER_SHLIBS],\n[AC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nm4_if([$1], [CXX], [\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  case $host_os in\n  aix[[4-9]]*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to AIX nm, but means don't demangle with GNU nm\n    # Also, AIX nm treats weak defined symbols like other global defined\n    # symbols, whereas GNU nm marks them as \"W\".\n    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_TAGVAR(export_symbols_cmds, $1)=\"$ltdll_cmds\"\n    ;;\n  cygwin* | mingw* | cegcc*)\n    case $cc_basename in\n    cl*)\n      _LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n      ;;\n    *)\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n      ;;\n    esac\n    ;;\n  *)\n    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n    ;;\n  esac\n], [\n  runpath_var=\n  _LT_TAGVAR(allow_undefined_flag, $1)=\n  _LT_TAGVAR(always_export_symbols, $1)=no\n  _LT_TAGVAR(archive_cmds, $1)=\n  _LT_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_TAGVAR(compiler_needs_object, $1)=no\n  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(hardcode_automatic, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_TAGVAR(inherit_rpath, $1)=no\n  _LT_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_TAGVAR(module_cmds, $1)=\n  _LT_TAGVAR(module_expsym_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_new_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ` (' and `)$', so one must not match beginning or\n  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',\n  # as well as any symbol that contains `d'.\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  # Exclude shared library initialization/finalization symbols.\ndnl Note also adjust exclude_expsyms for C++ above.\n  extract_expsyms_cmds=\n\n  case $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test \"$GCC\" != yes; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd*)\n    with_gnu_ld=no\n    ;;\n  esac\n\n  _LT_TAGVAR(ld_shlibs, $1)=yes\n\n  # On some targets, GNU ld is compatible enough with the native linker\n  # that we're better off using the native interface for both.\n  lt_use_gnu_ld_interface=no\n  if test \"$with_gnu_ld\" = yes; then\n    case $host_os in\n      aix*)\n\t# The AIX port of GNU ld has always aspired to compatibility\n\t# with the native linker.  However, as the warning in the GNU ld\n\t# block says, versions before 2.19.5* couldn't really create working\n\t# shared libraries, regardless of the interface used.\n\tcase `$LD -v 2>&1` in\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.19.5*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.[[2-9]]*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ [[3-9]]*) ;;\n\t  *)\n\t    lt_use_gnu_ld_interface=yes\n\t    ;;\n\tesac\n\t;;\n      *)\n\tlt_use_gnu_ld_interface=yes\n\t;;\n    esac\n  fi\n\n  if test \"$lt_use_gnu_ld_interface\" = yes; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='${wl}'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n    else\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v 2>&1` in\n      *GNU\\ gold*) supports_anon_versioning=yes ;;\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix[[3-9]]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test \"$host_cpu\" != ia64; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.19, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to install binutils\n*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.\n*** You will then need to restart the configuration process.\n\n_LT_EOF\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-all-symbols'\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=no\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n\n      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file (1st line\n\t# is EXPORTS), use it as is; otherwise, prepend...\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t  cp $export_symbols $output_objdir/$soname.def;\n\telse\n\t  echo EXPORTS > $output_objdir/$soname.def;\n\t  cat $export_symbols >> $output_objdir/$soname.def;\n\tfi~\n\t$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    haiku*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    interix[[3-9]]*)\n      _LT_TAGVAR(hardcode_direct, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s,^,_,\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)\n      tmp_diet=no\n      if test \"$host_os\" = linux-dietlibc; then\n\tcase $cc_basename in\n\t  diet\\ *) tmp_diet=yes;;\t# linux-dietlibc with static linking (!diet-dyn)\n\tesac\n      fi\n      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n\t && test \"$tmp_diet\" = no\n      then\n\ttmp_addflag=' $pic_flag'\n\ttmp_sharedflag='-shared'\n\tcase $cc_basename,$host_cpu in\n        pgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95* | pgfortran*)\n\t\t\t\t\t# Portland Group f77 and f90 compilers\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tlf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n\t  tmp_sharedflag='--shared' ;;\n\txl[[cC]]* | bgxl[[cC]]* | mpixl[[cC]]*) # IBM XL C 8.0 on PPC (deal with xlf below)\n\t  tmp_sharedflag='-qmkshrobj'\n\t  tmp_addflag= ;;\n\tnvcc*)\t# Cuda Compiler Driver 2.2\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  ;;\n\tesac\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ C*)\t\t\t# Sun C 5.9\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  tmp_sharedflag='-G' ;;\n\t*Sun\\ F*)\t\t\t# Sun Fortran 8.3\n\t  tmp_sharedflag='-G' ;;\n\tesac\n\t_LT_TAGVAR(archive_cmds, $1)='$CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\n        if test \"x$supports_anon_versioning\" = xyes; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t    cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t    echo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t    $CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'\n        fi\n\n\tcase $cc_basename in\n\txlf* | bgf* | bgxlf* | mpixlf*)\n\t  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='--whole-archive$convenience --no-whole-archive'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'\n\t  if test \"x$supports_anon_versioning\" = xyes; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t      cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t      echo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t      $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'\n\t  fi\n\t  ;;\n\tesac\n      else\n        _LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | $GREP 'BFD 2\\.8' > /dev/null; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.1[[0-5]].*)\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  # For security reasons, it is highly recommended that you always\n\t  # use absolute paths for naming shared libraries, and exclude the\n\t  # DT_RUNPATH tag from executables and libraries.  But doing so\n\t  # requires that you compile everything twice, which is a pain.\n\t  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test \"$_LT_TAGVAR(ld_shlibs, $1)\" = no; then\n      runpath_var=\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      if test \"$GCC\" = yes && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix[[4-9]]*)\n      if test \"$host_cpu\" = ia64; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\"\"\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to AIX nm, but means don't demangle with GNU nm\n\t# Also, AIX nm treats weak defined symbols like other global\n\t# defined symbols, whereas GNU nm marks them as \"W\".\n\tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# need to do runtime linking.\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t  for ld_flag in $LDFLAGS; do\n\t  if (test $ld_flag = \"-brtl\" || test $ld_flag = \"-Wl,-brtl\"); then\n\t    aix_use_runtimelinking=yes\n\t    break\n\t  fi\n\t  done\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_TAGVAR(archive_cmds, $1)=''\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(file_list_spec, $1)='${wl}-f,'\n\n      if test \"$GCC\" = yes; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`${CC} -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t   strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t  # We have reworked collect2\n\t  :\n\t  else\n\t  # We have old collect2\n\t  _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test \"$aix_use_runtimelinking\" = yes; then\n\t  shared_flag=\"$shared_flag \"'${wl}-G'\n\tfi\n      else\n\t# not using gcc\n\tif test \"$host_cpu\" = ia64; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test \"$aix_use_runtimelinking\" = yes; then\n\t    shared_flag='${wl}-G'\n\t  else\n\t    shared_flag='${wl}-bM:SRE'\n\t  fi\n\tfi\n      fi\n\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-bexpall'\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      if test \"$aix_use_runtimelinking\" = yes; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n        # Determine the default libpath from the value encoded in an\n        # empty executable.\n        _LT_SYS_MODULE_PATH_AIX([$1])\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then func_echo_all \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n      else\n\tif test \"$host_cpu\" = ia64; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an\n\t # empty executable.\n\t _LT_SYS_MODULE_PATH_AIX([$1])\n\t _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t  if test \"$with_gnu_ld\" = yes; then\n\t    # We only use this code for GNU lds that support --whole-archive.\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t  else\n\t    # Exported symbols can be pulled into shared objects from archives\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t  fi\n\t  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  # This is similar to how AIX traditionally builds its shared libraries.\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    bsdi[[45]]*)\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      case $cc_basename in\n      cl*)\n\t# Native MSVC\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t_LT_TAGVAR(always_export_symbols, $1)=yes\n\t_LT_TAGVAR(file_list_spec, $1)='@'\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=\".dll\"\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t    sed -n -e 's/\\\\\\\\\\\\\\(.*\\\\\\\\\\\\\\)/-link\\\\\\ -EXPORT:\\\\\\\\\\\\\\1/' -e '1\\\\\\!p' < $export_symbols > $output_objdir/$soname.exp;\n\t  else\n\t    sed -e 's/\\\\\\\\\\\\\\(.*\\\\\\\\\\\\\\)/-link\\\\\\ -EXPORT:\\\\\\\\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;\n\t  fi~\n\t  $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n\t  linknames='\n\t# The linker will not automatically build a static lib if we build a DLL.\n\t# _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t_LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n\t_LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1,DATA/'\\'' | $SED -e '\\''/^[[AITW]][[ ]]/s/.*[[ ]]//'\\'' | sort | uniq > $export_symbols'\n\t# Don't use ranlib\n\t_LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t_LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n\t  lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n\t  case $lt_outputfile in\n\t    *.exe|*.EXE) ;;\n\t    *)\n\t      lt_outputfile=\"$lt_outputfile.exe\"\n\t      lt_tool_outputfile=\"$lt_tool_outputfile.exe\"\n\t      ;;\n\t  esac~\n\t  if test \"$MANIFEST_TOOL\" != \":\" && test -f \"$lt_outputfile.manifest\"; then\n\t    $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n\t    $RM \"$lt_outputfile.manifest\";\n\t  fi'\n\t;;\n      *)\n\t# Assume MSVC wrapper\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=\".dll\"\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all \"$deplibs\" | $SED '\\''s/ -lc$//'\\''` -link -dll~linknames='\n\t# The linker will automatically build a .lib file if we build a DLL.\n\t_LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t# FIXME: Should let the user specify the lib program.\n\t_LT_TAGVAR(old_archive_cmds, $1)='lib -OUT:$oldlib$oldobjs$old_deplibs'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      _LT_DARWIN_LINKER_FEATURES($1)\n      ;;\n\n    dgux*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2.*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | dragonfly*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared $pic_flag ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      ;;\n\n    hpux10*)\n      if test \"$GCC\" = yes && test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test \"$GCC\" = yes && test \"$with_gnu_ld\" = no; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\tm4_if($1, [], [\n\t  # Older versions of the 11.00 compiler do not understand -b yet\n\t  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)\n\t  _LT_LINKER_OPTION([if $CC understands -b],\n\t    _LT_TAGVAR(lt_cv_prog_compiler__b, $1), [-b],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],\n\t  [_LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'])\n\t  ;;\n\tesac\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t# Try to use the -exported_symbol ld option, if it does not\n\t# work, assume that -exports_file does not work either and\n\t# implicitly export all symbols.\n\t# This should be the same for all languages, so no per-tag cache variable.\n\tAC_CACHE_CHECK([whether the $host_os linker accepts -exported_symbol],\n\t  [lt_cv_irix_exported_symbol],\n\t  [save_LDFLAGS=\"$LDFLAGS\"\n\t   LDFLAGS=\"$LDFLAGS -shared ${wl}-exported_symbol ${wl}foo ${wl}-update_registry ${wl}/dev/null\"\n\t   AC_LINK_IFELSE(\n\t     [AC_LANG_SOURCE(\n\t        [AC_LANG_CASE([C], [[int foo (void) { return 0; }]],\n\t\t\t      [C++], [[int foo (void) { return 0; }]],\n\t\t\t      [Fortran 77], [[\n      subroutine foo\n      end]],\n\t\t\t      [Fortran], [[\n      subroutine foo\n      end]])])],\n\t      [lt_cv_irix_exported_symbol=yes],\n\t      [lt_cv_irix_exported_symbol=no])\n           LDFLAGS=\"$save_LDFLAGS\"])\n\tif test \"$lt_cv_irix_exported_symbol\" = yes; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations ${wl}-exports_file ${wl}$export_symbols -o $lib'\n\tfi\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -exports_file $export_symbols -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(inherit_rpath, $1)=yes\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *nto* | *qnx*)\n      ;;\n\n    openbsd*)\n      if test -f /usr/libexec/ld.so; then\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\tif test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\telse\n\t  case $host_os in\n\t   openbsd[[01]].* | openbsd2.[[0-7]] | openbsd2.[[0-7]].*)\n\t     _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n\t     _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t     ;;\n\t   *)\n\t     _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t     _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t     ;;\n\t  esac\n\tfi\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY $libname INITINSTANCE\" > $output_objdir/$libname.def~$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~echo DATA >> $output_objdir/$libname.def~echo \" SINGLE NONSHARED\" >> $output_objdir/$libname.def~echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_from_new_cmds, $1)='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'\n      ;;\n\n    osf3*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $pic_flag $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; printf \"%s\\\\n\" \"-hidden\">> $lib.exp~\n\t$CC -shared${allow_undefined_flag} ${wl}-input ${wl}$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib~$RM $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(no_undefined_flag, $1)=' -z defs'\n      if test \"$GCC\" = yes; then\n\twlarc='${wl}'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}-z ${wl}text ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $CC -shared $pic_flag ${wl}-z ${wl}text ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n      else\n\tcase `$CC -V 2>&1` in\n\t*\"Compilers 5.0\"*)\n\t  wlarc=''\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'\n\t  ;;\n\t*)\n\t  wlarc='${wl}'\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $CC -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n\t  ;;\n\tesac\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n\t# The compiler driver will combine and reorder linker options,\n\t# but understands `-z linker_flag'.  GCC discards it without `$wl',\n\t# but is careful enough not to reorder.\n\t# Supported since Solaris 2.6 (maybe 2.5.1?)\n\tif test \"$GCC\" = yes; then\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'\n\telse\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\tfi\n\t;;\n      esac\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test \"x$host_vendor\" = xsequent; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We can NOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R,$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n\n    if test x$host_vendor = xsni; then\n      case $host in\n      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Blargedynsym'\n\t;;\n      esac\n    fi\n  fi\n])\nAC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\ntest \"$_LT_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n_LT_TAGVAR(with_gnu_ld, $1)=$with_gnu_ld\n\n_LT_DECL([], [libext], [0], [Old archive suffix (normally \"a\")])dnl\n_LT_DECL([], [shrext_cmds], [1], [Shared library suffix (normally \".so\")])dnl\n_LT_DECL([], [extract_expsyms_cmds], [2],\n    [The commands to extract the exported symbol list from a shared archive])\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test \"$enable_shared\" = yes && test \"$GCC\" = yes; then\n    case $_LT_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_CACHE_CHECK([whether -lc should be explicitly linked in],\n\t[lt_cv_]_LT_TAGVAR(archive_cmds_need_lc, $1),\n\t[$RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$_LT_TAGVAR(lt_prog_compiler_wl, $1)\n\t  pic_flag=$_LT_TAGVAR(lt_prog_compiler_pic, $1)\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$_LT_TAGVAR(allow_undefined_flag, $1)\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\n\t  if AC_TRY_EVAL(_LT_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n\t  then\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t  else\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  fi\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\t])\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=$lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n_LT_TAGDECL([build_libtool_need_lc], [archive_cmds_need_lc], [0],\n    [Whether or not to add -lc for building shared libraries])\n_LT_TAGDECL([allow_libtool_libs_with_static_runtimes],\n    [enable_shared_with_static_runtimes], [0],\n    [Whether or not to disallow shared libs when runtime libs are static])\n_LT_TAGDECL([], [export_dynamic_flag_spec], [1],\n    [Compiler flag to allow reflexive dlopens])\n_LT_TAGDECL([], [whole_archive_flag_spec], [1],\n    [Compiler flag to generate shared objects directly from archives])\n_LT_TAGDECL([], [compiler_needs_object], [1],\n    [Whether the compiler copes with passing no objects directly])\n_LT_TAGDECL([], [old_archive_from_new_cmds], [2],\n    [Create an old-style archive from a shared archive])\n_LT_TAGDECL([], [old_archive_from_expsyms_cmds], [2],\n    [Create a temporary old-style archive to link instead of a shared archive])\n_LT_TAGDECL([], [archive_cmds], [2], [Commands used to build a shared archive])\n_LT_TAGDECL([], [archive_expsym_cmds], [2])\n_LT_TAGDECL([], [module_cmds], [2],\n    [Commands used to build a loadable module if different from building\n    a shared archive.])\n_LT_TAGDECL([], [module_expsym_cmds], [2])\n_LT_TAGDECL([], [with_gnu_ld], [1],\n    [Whether we are building with GNU ld or not])\n_LT_TAGDECL([], [allow_undefined_flag], [1],\n    [Flag that allows shared libraries with undefined symbols to be built])\n_LT_TAGDECL([], [no_undefined_flag], [1],\n    [Flag that enforces no undefined symbols])\n_LT_TAGDECL([], [hardcode_libdir_flag_spec], [1],\n    [Flag to hardcode $libdir into a binary during linking.\n    This must work even if $libdir does not exist])\n_LT_TAGDECL([], [hardcode_libdir_separator], [1],\n    [Whether we need a single \"-rpath\" flag with a separated argument])\n_LT_TAGDECL([], [hardcode_direct], [0],\n    [Set to \"yes\" if using DIR/libNAME${shared_ext} during linking hardcodes\n    DIR into the resulting binary])\n_LT_TAGDECL([], [hardcode_direct_absolute], [0],\n    [Set to \"yes\" if using DIR/libNAME${shared_ext} during linking hardcodes\n    DIR into the resulting binary and the resulting library dependency is\n    \"absolute\", i.e impossible to change by setting ${shlibpath_var} if the\n    library is relocated])\n_LT_TAGDECL([], [hardcode_minus_L], [0],\n    [Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_shlibpath_var], [0],\n    [Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_automatic], [0],\n    [Set to \"yes\" if building a shared library automatically hardcodes DIR\n    into the library and all subsequent libraries and executables linked\n    against it])\n_LT_TAGDECL([], [inherit_rpath], [0],\n    [Set to yes if linker adds runtime paths of dependent libraries\n    to runtime path list])\n_LT_TAGDECL([], [link_all_deplibs], [0],\n    [Whether libtool must link a program against all its dependency libraries])\n_LT_TAGDECL([], [always_export_symbols], [0],\n    [Set to \"yes\" if exported symbols are required])\n_LT_TAGDECL([], [export_symbols_cmds], [2],\n    [The commands to list exported symbols])\n_LT_TAGDECL([], [exclude_expsyms], [1],\n    [Symbols that should not be listed in the preloaded symbols])\n_LT_TAGDECL([], [include_expsyms], [1],\n    [Symbols that must always be exported])\n_LT_TAGDECL([], [prelink_cmds], [2],\n    [Commands necessary for linking programs (against libraries) with templates])\n_LT_TAGDECL([], [postlink_cmds], [2],\n    [Commands necessary for finishing linking programs])\n_LT_TAGDECL([], [file_list_spec], [1],\n    [Specify filename containing input files])\ndnl FIXME: Not yet implemented\ndnl _LT_TAGDECL([], [thread_safe_flag_spec], [1],\ndnl    [Compiler flag to generate thread safe objects])\n])# _LT_LINKER_SHLIBS\n\n\n# _LT_LANG_C_CONFIG([TAG])\n# ------------------------\n# Ensure that the configuration variables for a C compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_C_CONFIG],\n[m4_require([_LT_DECL_EGREP])dnl\nlt_save_CC=\"$CC\"\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}'\n\n_LT_TAG_COMPILER\n# Save the default compiler, since it gets overwritten when the other\n# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.\ncompiler_DEFAULT=$CC\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_SYS_DYNAMIC_LINKER($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n  LT_SYS_DLOPEN_SELF\n  _LT_CMD_STRIPLIB\n\n  # Report which library types will actually be built\n  AC_MSG_CHECKING([if libtool supports shared libraries])\n  AC_MSG_RESULT([$can_build_shared])\n\n  AC_MSG_CHECKING([whether to build shared libraries])\n  test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n  # On AIX, shared libraries and static libraries use the same namespace, and\n  # are all built from PIC.\n  case $host_os in\n  aix3*)\n    test \"$enable_shared\" = yes && enable_static=no\n    if test -n \"$RANLIB\"; then\n      archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n      postinstall_cmds='$RANLIB $lib'\n    fi\n    ;;\n\n  aix[[4-9]]*)\n    if test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n      test \"$enable_shared\" = yes && enable_static=no\n    fi\n    ;;\n  esac\n  AC_MSG_RESULT([$enable_shared])\n\n  AC_MSG_CHECKING([whether to build static libraries])\n  # Make sure either enable_shared or enable_static is yes.\n  test \"$enable_shared\" = yes || enable_static=yes\n  AC_MSG_RESULT([$enable_static])\n\n  _LT_CONFIG($1)\nfi\nAC_LANG_POP\nCC=\"$lt_save_CC\"\n])# _LT_LANG_C_CONFIG\n\n\n# _LT_LANG_CXX_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a C++ compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_CXX_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nif test -n \"$CXX\" && ( test \"X$CXX\" != \"Xno\" &&\n    ( (test \"X$CXX\" = \"Xg++\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test \"X$CXX\" != \"Xg++\"))) ; then\n  AC_PROG_CXXCPP\nelse\n  _lt_caught_CXX_error=yes\nfi\n\nAC_LANG_PUSH(C++)\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(compiler_needs_object, $1)=no\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the CXX compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_caught_CXX_error\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"int some_variable = 0;\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_CFLAGS=$CFLAGS\n  lt_save_LD=$LD\n  lt_save_GCC=$GCC\n  GCC=$GXX\n  lt_save_with_gnu_ld=$with_gnu_ld\n  lt_save_path_LD=$lt_cv_path_LD\n  if test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\n  else\n    $as_unset lt_cv_prog_gnu_ld\n  fi\n  if test -n \"${lt_cv_path_LDCXX+set}\"; then\n    lt_cv_path_LD=$lt_cv_path_LDCXX\n  else\n    $as_unset lt_cv_path_LD\n  fi\n  test -z \"${LDCXX+set}\" || LD=$LDCXX\n  CC=${CXX-\"c++\"}\n  CFLAGS=$CXXFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    # We don't want -fno-exception when compiling C++ code, so set the\n    # no_builtin_flag separately\n    if test \"$GXX\" = yes; then\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n    else\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n    fi\n\n    if test \"$GXX\" = yes; then\n      # Set up default GNU C++ configuration\n\n      LT_PATH_LD\n\n      # Check if GNU C++ uses GNU ld as the underlying linker, since the\n      # archiving commands below assume that GNU ld is being used.\n      if test \"$with_gnu_ld\" = yes; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n        # If archive_cmds runs LD, not CC, wlarc should be empty\n        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n        #     investigate it a little bit more. (MM)\n        wlarc='${wl}'\n\n        # ancient GNU ld didn't support --whole-archive et. al.\n        if eval \"`$CC -print-prog-name=ld` --help 2>&1\" |\n\t  $GREP 'no-whole-archive' > /dev/null; then\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n        else\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\n        fi\n      else\n        with_gnu_ld=no\n        wlarc=\n\n        # A generic and very simple default shared library creation\n        # command for GNU C++ for the case where it uses the native\n        # linker, instead of GNU ld.  If possible, this setting should\n        # overridden to take advantage of the native linker features on\n        # the platform it is being used on.\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n      fi\n\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n    else\n      GXX=no\n      with_gnu_ld=no\n      wlarc=\n    fi\n\n    # PORTME: fill in a description of your system's C++ link characteristics\n    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n    _LT_TAGVAR(ld_shlibs, $1)=yes\n    case $host_os in\n      aix3*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n      aix[[4-9]]*)\n        if test \"$host_cpu\" = ia64; then\n          # On IA64, the linker does run time linking by default, so we don't\n          # have to do anything special.\n          aix_use_runtimelinking=no\n          exp_sym_flag='-Bexport'\n          no_entry_flag=\"\"\n        else\n          aix_use_runtimelinking=no\n\n          # Test if we are trying to use run time linking or normal\n          # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n          # need to do runtime linking.\n          case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t    for ld_flag in $LDFLAGS; do\n\t      case $ld_flag in\n\t      *-brtl*)\n\t        aix_use_runtimelinking=yes\n\t        break\n\t        ;;\n\t      esac\n\t    done\n\t    ;;\n          esac\n\n          exp_sym_flag='-bexport'\n          no_entry_flag='-bnoentry'\n        fi\n\n        # When large executables or shared objects are built, AIX ld can\n        # have problems creating the table of contents.  If linking a library\n        # or program results in \"error TOC overflow\" add -mminimal-toc to\n        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n        _LT_TAGVAR(archive_cmds, $1)=''\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        _LT_TAGVAR(file_list_spec, $1)='${wl}-f,'\n\n        if test \"$GXX\" = yes; then\n          case $host_os in aix4.[[012]]|aix4.[[012]].*)\n          # We only want to do this on AIX 4.2 and lower, the check\n          # below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`${CC} -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t     strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t    # We have reworked collect2\n\t    :\n\t  else\n\t    # We have old collect2\n\t    _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t    # It fails to find uninstalled libraries when the uninstalled\n\t    # path is not listed in the libpath.  Setting hardcode_minus_L\n\t    # to unsupported forces relinking\n\t    _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n          esac\n          shared_flag='-shared'\n\t  if test \"$aix_use_runtimelinking\" = yes; then\n\t    shared_flag=\"$shared_flag \"'${wl}-G'\n\t  fi\n        else\n          # not using gcc\n          if test \"$host_cpu\" = ia64; then\n\t  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t  # chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n          else\n\t    if test \"$aix_use_runtimelinking\" = yes; then\n\t      shared_flag='${wl}-G'\n\t    else\n\t      shared_flag='${wl}-bM:SRE'\n\t    fi\n          fi\n        fi\n\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-bexpall'\n        # It seems that -bexpall does not export symbols beginning with\n        # underscore (_), so it is better to generate a list of symbols to\n\t# export.\n        _LT_TAGVAR(always_export_symbols, $1)=yes\n        if test \"$aix_use_runtimelinking\" = yes; then\n          # Warning - without using the other runtime loading flags (-brtl),\n          # -berok will link without error, but may produce a broken library.\n          _LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n          # Determine the default libpath from the value encoded in an empty\n          # executable.\n          _LT_SYS_MODULE_PATH_AIX([$1])\n          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then func_echo_all \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n        else\n          if test \"$host_cpu\" = ia64; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$exp_sym_flag:\\$export_symbols\"\n          else\n\t    # Determine the default libpath from the value encoded in an\n\t    # empty executable.\n\t    _LT_SYS_MODULE_PATH_AIX([$1])\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t    # Warning - without using the other run time loading flags,\n\t    # -berok will link without error, but may produce a broken library.\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t    if test \"$with_gnu_ld\" = yes; then\n\t      # We only use this code for GNU lds that support --whole-archive.\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t    else\n\t      # Exported symbols can be pulled into shared objects from archives\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t    fi\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t    # This is similar to how AIX traditionally builds its shared\n\t    # libraries.\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n          fi\n        fi\n        ;;\n\n      beos*)\n\tif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t  # support --undefined.  This deserves some investigation.  FIXME\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      chorus*)\n        case $cc_basename in\n          *)\n\t  # FIXME: insert proper C++ library support\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\t  ;;\n        esac\n        ;;\n\n      cygwin* | mingw* | pw32* | cegcc*)\n\tcase $GXX,$cc_basename in\n\t,cl* | no,cl*)\n\t  # Native MSVC\n\t  # hardcode_libdir_flag_spec is actually meaningless, as there is\n\t  # no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=yes\n\t  _LT_TAGVAR(file_list_spec, $1)='@'\n\t  # Tell ltmain to make .lib files, not .a files.\n\t  libext=lib\n\t  # Tell ltmain to make .dll files, not .so files.\n\t  shrext_cmds=\".dll\"\n\t  # FIXME: Setting linknames here is a bad hack.\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t      $SED -n -e 's/\\\\\\\\\\\\\\(.*\\\\\\\\\\\\\\)/-link\\\\\\ -EXPORT:\\\\\\\\\\\\\\1/' -e '1\\\\\\!p' < $export_symbols > $output_objdir/$soname.exp;\n\t    else\n\t      $SED -e 's/\\\\\\\\\\\\\\(.*\\\\\\\\\\\\\\)/-link\\\\\\ -EXPORT:\\\\\\\\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;\n\t    fi~\n\t    $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n\t    linknames='\n\t  # The linker will not automatically build a static lib if we build a DLL.\n\t  # _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t  # Don't use ranlib\n\t  _LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t  _LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n\t    lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n\t    case $lt_outputfile in\n\t      *.exe|*.EXE) ;;\n\t      *)\n\t\tlt_outputfile=\"$lt_outputfile.exe\"\n\t\tlt_tool_outputfile=\"$lt_tool_outputfile.exe\"\n\t\t;;\n\t    esac~\n\t    func_to_tool_file \"$lt_outputfile\"~\n\t    if test \"$MANIFEST_TOOL\" != \":\" && test -f \"$lt_outputfile.manifest\"; then\n\t      $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n\t      $RM \"$lt_outputfile.manifest\";\n\t    fi'\n\t  ;;\n\t*)\n\t  # g++\n\t  # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n\t  # as there is no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-all-symbols'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=no\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n\t  if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t    # If the export-symbols file already is a .def file (1st line\n\t    # is EXPORTS), use it as is; otherwise, prepend...\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t      cp $export_symbols $output_objdir/$soname.def;\n\t    else\n\t      echo EXPORTS > $output_objdir/$soname.def;\n\t      cat $export_symbols >> $output_objdir/$soname.def;\n\t    fi~\n\t    $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t  ;;\n\tesac\n\t;;\n      darwin* | rhapsody*)\n        _LT_DARWIN_LINKER_FEATURES($1)\n\t;;\n\n      dgux*)\n        case $cc_basename in\n          ec++*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          ghcx*)\n\t    # Green Hills C++ Compiler\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      freebsd2.*)\n        # C++ shared libraries reported to be fairly broken before\n\t# switch to ELF\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      freebsd-elf*)\n        _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n        ;;\n\n      freebsd* | dragonfly*)\n        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n        # conventions\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n        ;;\n\n      gnu*)\n        ;;\n\n      haiku*)\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        ;;\n\n      hpux9*)\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t             # but as the default\n\t\t\t\t             # location of the library.\n\n        case $cc_basename in\n          CC*)\n            # FIXME: insert proper C++ library support\n            _LT_TAGVAR(ld_shlibs, $1)=no\n            ;;\n          aCC*)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n            # Commands to make compiler produce verbose output that lists\n            # what \"hidden\" libraries, object files and flags are used when\n            # linking a shared library.\n            #\n            # There doesn't appear to be a way to prevent this compiler from\n            # explicitly linking system object files so we need to strip them\n            # from the output so that they don't get included in the library\n            # dependencies.\n            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP \"\\-L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n            ;;\n          *)\n            if test \"$GXX\" = yes; then\n              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib $pic_flag ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n            else\n              # FIXME: insert proper C++ library support\n              _LT_TAGVAR(ld_shlibs, $1)=no\n            fi\n            ;;\n        esac\n        ;;\n\n      hpux10*|hpux11*)\n        if test $with_gnu_ld = no; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n          case $host_cpu in\n            hppa*64*|ia64*)\n              ;;\n            *)\n\t      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n              ;;\n          esac\n        fi\n        case $host_cpu in\n          hppa*64*|ia64*)\n            _LT_TAGVAR(hardcode_direct, $1)=no\n            _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n            ;;\n          *)\n            _LT_TAGVAR(hardcode_direct, $1)=yes\n            _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t         # but as the default\n\t\t\t\t\t         # location of the library.\n            ;;\n        esac\n\n        case $cc_basename in\n          CC*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          aCC*)\n\t    case $host_cpu in\n\t      hppa*64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      ia64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      *)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t    esac\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP \"\\-L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n          *)\n\t    if test \"$GXX\" = yes; then\n\t      if test $with_gnu_ld = no; then\n\t        case $host_cpu in\n\t          hppa*64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          ia64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          *)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t        esac\n\t      fi\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      interix[[3-9]]*)\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n\t# Instead, shared libraries are loaded at an image base (0x10000000 by\n\t# default) and relocated if they conflict, which is a slow very memory\n\t# consuming and fragmenting process.  To avoid this, we pick a random,\n\t# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n\t# time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s,^,_,\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t;;\n      irix5* | irix6*)\n        case $cc_basename in\n          CC*)\n\t    # SGI C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    if test \"$GXX\" = yes; then\n\t      if test \"$with_gnu_ld\" = no; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t      else\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` -o $lib'\n\t      fi\n\t    fi\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\t    ;;\n        esac\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(inherit_rpath, $1)=yes\n        ;;\n\n      linux* | k*bsd*-gnu | kopensolaris*-gnu)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib ${wl}-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP \"ld\"`; rm -f libconftest$shared_ext; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t    ;;\n\t  icpc* | ecpc* )\n\t    # Intel C++\n\t    with_gnu_ld=yes\n\t    # version 8.0 and above of icpc choke on multiply defined symbols\n\t    # if we add $predep_objects and $postdep_objects, however 7.1 and\n\t    # earlier do not add the objects themselves.\n\t    case `$CC -V 2>&1` in\n\t      *\"Version 7.\"*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t      *)  # Version 8.0 or newer\n\t        tmp_idyn=\n\t        case $host_cpu in\n\t\t  ia64*) tmp_idyn=' -i_dynamic';;\n\t\tesac\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t    esac\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t    ;;\n          pgCC* | pgcpp*)\n            # Portland Group C++ compiler\n\t    case `$CC -V` in\n\t    *pgCC\\ [[1-5]].* | *pgcpp\\ [[1-5]].*)\n\t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n\t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n\t\t$RANLIB $oldlib'\n\t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n\t      ;;\n\t    *) # Version 6 and above use weak symbols\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n\t      ;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n            ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname  -o $lib ${wl}-retain-symbols-file $wl$export_symbols'\n\n\t    runpath_var=LD_RUN_PATH\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"X$list\" | $Xsed'\n\t    ;;\n\t  xl* | mpixl* | bgxl*)\n\t    # IBM XL 8.0 on PPC, with GNU ld\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    if test \"x$supports_anon_versioning\" = xyes; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t\tcat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t\techo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t\t$CC -qmkshrobj $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'\n\t    fi\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G${allow_undefined_flag} -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file ${wl}$export_symbols'\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t      _LT_TAGVAR(compiler_needs_object, $1)=yes\n\n\t      # Not sure whether something based on\n\t      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1\n\t      # would be better.\n\t      output_verbose_link_cmd='func_echo_all'\n\n\t      # Archives containing C++ object files must be created using\n\t      # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t      # necessary to make sure instantiated templates are included\n\t      # in the archive.\n\t      _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n\n      lynxos*)\n        # FIXME: insert proper C++ library support\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      m88k*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      mvs*)\n        case $cc_basename in\n          cxx*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\t  *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\tesac\n\t;;\n\n      netbsd*)\n        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n\t  wlarc=\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tfi\n\t# Workaround some broken pre-1.5 toolchains\n\toutput_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n\t;;\n\n      *nto* | *qnx*)\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n\t;;\n\n      openbsd2*)\n        # C++ shared libraries are fairly broken\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      openbsd*)\n\tif test -f /usr/libexec/ld.so; then\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file,$export_symbols -o $lib'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n\t  fi\n\t  output_verbose_link_cmd=func_echo_all\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      osf3* | osf4* | osf5*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo \"$lib\" | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Archives containing C++ object files must be created using\n\t    # the KAI C++ compiler.\n\t    case $host in\n\t      osf3*) _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs' ;;\n\t      *) _LT_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs' ;;\n\t    esac\n\t    ;;\n          RCC*)\n\t    # Rational C++ 2.4.1\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          cxx*)\n\t    case $host in\n\t      osf3*)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t\t;;\n\t      *)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n\t          echo \"-hidden\">> $lib.exp~\n\t          $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname ${wl}-input ${wl}$lib.exp  `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib~\n\t          $RM $lib.exp'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t\t;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\" | $GREP -v \"ld:\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n\t  *)\n\t    if test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t      _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t      case $host in\n\t        osf3*)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t\t  ;;\n\t        *)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t\t  ;;\n\t      esac\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t      # Commands to make compiler produce verbose output that lists\n\t      # what \"hidden\" libraries, object files and flags are used when\n\t      # linking a shared library.\n\t      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      psos*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      sunos4*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.x\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          lcc*)\n\t    # Lucid\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      solaris*)\n        case $cc_basename in\n          CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n            _LT_TAGVAR(archive_cmds_need_lc,$1)=yes\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag}  -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t      $CC -G${allow_undefined_flag} ${wl}-M ${wl}$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t    _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t    case $host_os in\n\t      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t      *)\n\t\t# The compiler driver will combine and reorder linker options,\n\t\t# but understands `-z linker_flag'.\n\t        # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t\t_LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\t        ;;\n\t    esac\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\n\t    output_verbose_link_cmd='func_echo_all'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t    ;;\n          gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\n\t    # The C++ compiler must be used to create the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    # GNU C++ compiler with Solaris linker\n\t    if test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-z ${wl}defs'\n\t      if $CC --version | $GREP -v '^2\\.7' > /dev/null; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t\t  $CC -shared $pic_flag -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      else\n\t        # g++ 2.7 appears to require `-G' NOT `-shared' on this\n\t        # platform.\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t\t  $CC -G -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      fi\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $wl$libdir'\n\t      case $host_os in\n\t\tsolaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t\t*)\n\t\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'\n\t\t  ;;\n\t      esac\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      case $cc_basename in\n        CC*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n      esac\n      ;;\n\n      sysv5* | sco3.2v5* | sco5v6*)\n\t# Note: We can NOT use -z defs as we might desire, because we do not\n\t# link with -lc, and that would cause any symbols used from libc to\n\t# always be unresolved, which means just about no library would\n\t# ever link correctly.  If we're not using GNU ld we use -z text\n\t# though, which does catch some bad symbols but isn't as heavy-handed\n\t# as -z defs.\n\t_LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n\t_LT_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'\n\t_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R,$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n\t_LT_TAGVAR(link_all_deplibs, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n\trunpath_var='LD_RUN_PATH'\n\n\tcase $cc_basename in\n          CC*)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~\n\t      '\"$_LT_TAGVAR(old_archive_cmds, $1)\"\n\t    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~\n\t      '\"$_LT_TAGVAR(reload_cmds, $1)\"\n\t    ;;\n\t  *)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    ;;\n\tesac\n      ;;\n\n      tandem*)\n        case $cc_basename in\n          NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      vxworks*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      *)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n    esac\n\n    AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\n    test \"$_LT_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n    _LT_TAGVAR(GCC, $1)=\"$GXX\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\n  LDCXX=$LD\n  LD=$lt_save_LD\n  GCC=$lt_save_GCC\n  with_gnu_ld=$lt_save_with_gnu_ld\n  lt_cv_path_LDCXX=$lt_cv_path_LD\n  lt_cv_path_LD=$lt_save_path_LD\n  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\n  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\nfi # test \"$_lt_caught_CXX_error\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_CXX_CONFIG\n\n\n# _LT_FUNC_STRIPNAME_CNF\n# ----------------------\n# func_stripname_cnf prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n#\n# This function is identical to the (non-XSI) version of func_stripname,\n# except this one can be used by m4 code that may be executed by configure,\n# rather than the libtool script.\nm4_defun([_LT_FUNC_STRIPNAME_CNF],[dnl\nAC_REQUIRE([_LT_DECL_SED])\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])\nfunc_stripname_cnf ()\n{\n  case ${2} in\n  .*) func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%\\\\\\\\${2}\\$%%\"`;;\n  *)  func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%${2}\\$%%\"`;;\n  esac\n} # func_stripname_cnf\n])# _LT_FUNC_STRIPNAME_CNF\n\n# _LT_SYS_HIDDEN_LIBDEPS([TAGNAME])\n# ---------------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nm4_defun([_LT_SYS_HIDDEN_LIBDEPS],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nAC_REQUIRE([_LT_FUNC_STRIPNAME_CNF])dnl\n# Dependencies to place before and after the object being linked:\n_LT_TAGVAR(predep_objects, $1)=\n_LT_TAGVAR(postdep_objects, $1)=\n_LT_TAGVAR(predeps, $1)=\n_LT_TAGVAR(postdeps, $1)=\n_LT_TAGVAR(compiler_lib_search_path, $1)=\n\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nm4_if([$1], [], [cat > conftest.$ac_ext <<_LT_EOF\nint a;\nvoid foo (void) { a = 0; }\n_LT_EOF\n], [$1], [CXX], [cat > conftest.$ac_ext <<_LT_EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\n_LT_EOF\n], [$1], [F77], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [FC], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [GCJ], [cat > conftest.$ac_ext <<_LT_EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\n_LT_EOF\n], [$1], [GO], [cat > conftest.$ac_ext <<_LT_EOF\npackage foo\nfunc foo() {\n}\n_LT_EOF\n])\n\n_lt_libdeps_save_CFLAGS=$CFLAGS\ncase \"$CC $CFLAGS \" in #(\n*\\ -flto*\\ *) CFLAGS=\"$CFLAGS -fno-lto\" ;;\n*\\ -fwhopr*\\ *) CFLAGS=\"$CFLAGS -fno-whopr\" ;;\n*\\ -fuse-linker-plugin*\\ *) CFLAGS=\"$CFLAGS -fno-use-linker-plugin\" ;;\nesac\n\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  for p in `eval \"$output_verbose_link_cmd\"`; do\n    case ${prev}${p} in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test $p = \"-L\" ||\n          test $p = \"-R\"; then\n\t prev=$p\n\t continue\n       fi\n\n       # Expand the sysroot to ease extracting the directories later.\n       if test -z \"$prev\"; then\n         case $p in\n         -L*) func_stripname_cnf '-L' '' \"$p\"; prev=-L; p=$func_stripname_result ;;\n         -R*) func_stripname_cnf '-R' '' \"$p\"; prev=-R; p=$func_stripname_result ;;\n         -l*) func_stripname_cnf '-l' '' \"$p\"; prev=-l; p=$func_stripname_result ;;\n         esac\n       fi\n       case $p in\n       =*) func_stripname_cnf '=' '' \"$p\"; p=$lt_sysroot$func_stripname_result ;;\n       esac\n       if test \"$pre_test_object_deps_done\" = no; then\n\t case ${prev} in\n\t -L | -R)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${prev}${p}\"\n\t   else\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_TAGVAR(compiler_lib_search_path, $1)} ${prev}${p}\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_TAGVAR(postdeps, $1)\"; then\n\t   _LT_TAGVAR(postdeps, $1)=\"${prev}${p}\"\n\t else\n\t   _LT_TAGVAR(postdeps, $1)=\"${_LT_TAGVAR(postdeps, $1)} ${prev}${p}\"\n\t fi\n       fi\n       prev=\n       ;;\n\n    *.lto.$objext) ;; # Ignore GCC LTO objects\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test \"$pre_test_object_deps_done\" = no; then\n\t if test -z \"$_LT_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_TAGVAR(predep_objects, $1)=\"$p\"\n\t else\n\t   _LT_TAGVAR(predep_objects, $1)=\"$_LT_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$p\"\n\t else\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$_LT_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$RM -f confest.$objext\nCFLAGS=$_lt_libdeps_save_CFLAGS\n\n# PORTME: override above test on systems where it is broken\nm4_if([$1], [CXX],\n[case $host_os in\ninterix[[3-9]]*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  _LT_TAGVAR(predep_objects,$1)=\n  _LT_TAGVAR(postdep_objects,$1)=\n  _LT_TAGVAR(postdeps,$1)=\n  ;;\n\nlinux*)\n  case `$CC -V 2>&1 | sed 5q` in\n  *Sun\\ C*)\n    # Sun C++ 5.9\n\n    # The more standards-conforming stlport4 library is\n    # incompatible with the Cstd library. Avoid specifying\n    # it if it's in CXXFLAGS. Ignore libCrun as\n    # -library=stlport4 depends on it.\n    case \" $CXX $CXXFLAGS \" in\n    *\" -library=stlport4 \"*)\n      solaris_use_stlport4=yes\n      ;;\n    esac\n\n    if test \"$solaris_use_stlport4\" != yes; then\n      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'\n    fi\n    ;;\n  esac\n  ;;\n\nsolaris*)\n  case $cc_basename in\n  CC* | sunCC*)\n    # The more standards-conforming stlport4 library is\n    # incompatible with the Cstd library. Avoid specifying\n    # it if it's in CXXFLAGS. Ignore libCrun as\n    # -library=stlport4 depends on it.\n    case \" $CXX $CXXFLAGS \" in\n    *\" -library=stlport4 \"*)\n      solaris_use_stlport4=yes\n      ;;\n    esac\n\n    # Adding this requires a known-good setup of shared libraries for\n    # Sun compiler versions before 5.6, else PIC objects from an old\n    # archive will be linked into the output, leading to subtle bugs.\n    if test \"$solaris_use_stlport4\" != yes; then\n      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'\n    fi\n    ;;\n  esac\n  ;;\nesac\n])\n\ncase \" $_LT_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=\nif test -n \"${_LT_TAGVAR(compiler_lib_search_path, $1)}\"; then\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo \" ${_LT_TAGVAR(compiler_lib_search_path, $1)}\" | ${SED} -e 's! -L! !g' -e 's!^ !!'`\nfi\n_LT_TAGDECL([], [compiler_lib_search_dirs], [1],\n    [The directories searched by this compiler when creating a shared library])\n_LT_TAGDECL([], [predep_objects], [1],\n    [Dependencies to place before and after the objects being linked to\n    create a shared library])\n_LT_TAGDECL([], [postdep_objects], [1])\n_LT_TAGDECL([], [predeps], [1])\n_LT_TAGDECL([], [postdeps], [1])\n_LT_TAGDECL([], [compiler_lib_search_path], [1],\n    [The library search path used internally by the compiler when linking\n    a shared library])\n])# _LT_SYS_HIDDEN_LIBDEPS\n\n\n# _LT_LANG_F77_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a Fortran 77 compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_F77_CONFIG],\n[AC_LANG_PUSH(Fortran 77)\nif test -z \"$F77\" || test \"X$F77\" = \"Xno\"; then\n  _lt_disable_F77=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the F77 compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_disable_F77\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=\"$CC\"\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${F77-\"f77\"}\n  CFLAGS=$FFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n  GCC=$G77\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test \"$enable_shared\" = yes && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n\t  test \"$enable_shared\" = yes && enable_static=no\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test \"$enable_shared\" = yes || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=\"$G77\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=\"$lt_save_CC\"\n  CFLAGS=\"$lt_save_CFLAGS\"\nfi # test \"$_lt_disable_F77\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_F77_CONFIG\n\n\n# _LT_LANG_FC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for a Fortran compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_FC_CONFIG],\n[AC_LANG_PUSH(Fortran)\n\nif test -z \"$FC\" || test \"X$FC\" = \"Xno\"; then\n  _lt_disable_FC=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for fc test sources.\nac_ext=${ac_fc_srcext-f}\n\n# Object file extension for compiled fc test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the FC compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_disable_FC\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=\"$CC\"\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${FC-\"f95\"}\n  CFLAGS=$FCFLAGS\n  compiler=$CC\n  GCC=$ac_cv_fc_compiler_gnu\n\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test \"$enable_shared\" = yes && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n\t  test \"$enable_shared\" = yes && enable_static=no\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test \"$enable_shared\" = yes || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=\"$ac_cv_fc_compiler_gnu\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test \"$_lt_disable_FC\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_FC_CONFIG\n\n\n# _LT_LANG_GCJ_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Java Compiler compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_GCJ_CONFIG],\n[AC_REQUIRE([LT_PROG_GCJ])dnl\nAC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GCJ-\"gcj\"}\nCFLAGS=$GCJFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=\"$LD\"\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GCJ_CONFIG\n\n\n# _LT_LANG_GO_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Go compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_GO_CONFIG],\n[AC_REQUIRE([LT_PROG_GO])dnl\nAC_LANG_SAVE\n\n# Source file extension for Go test sources.\nac_ext=go\n\n# Object file extension for compiled Go test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"package main; func main() { }\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='package main; func main() { }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GOC-\"gccgo\"}\nCFLAGS=$GOFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=\"$LD\"\n_LT_CC_BASENAME([$compiler])\n\n# Go did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GO_CONFIG\n\n\n# _LT_LANG_RC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for the Windows resource compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_RC_CONFIG],\n[AC_REQUIRE([LT_PROG_RC])dnl\nAC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=\"$lt_simple_compile_test_code\"\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=\nCC=${RC-\"windres\"}\nCFLAGS=\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nif test -n \"$compiler\"; then\n  :\n  _LT_CONFIG($1)\nfi\n\nGCC=$lt_save_GCC\nAC_LANG_RESTORE\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_RC_CONFIG\n\n\n# LT_PROG_GCJ\n# -----------\nAC_DEFUN([LT_PROG_GCJ],\n[m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],\n  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],\n    [AC_CHECK_TOOL(GCJ, gcj,)\n      test \"x${GCJFLAGS+set}\" = xset || GCJFLAGS=\"-g -O2\"\n      AC_SUBST(GCJFLAGS)])])[]dnl\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_GCJ], [LT_PROG_GCJ])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_GCJ], [])\n\n\n# LT_PROG_GO\n# ----------\nAC_DEFUN([LT_PROG_GO],\n[AC_CHECK_TOOL(GOC, gccgo,)\n])\n\n\n# LT_PROG_RC\n# ----------\nAC_DEFUN([LT_PROG_RC],\n[AC_CHECK_TOOL(RC, windres,)\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_RC], [LT_PROG_RC])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_RC], [])\n\n\n# _LT_DECL_EGREP\n# --------------\n# If we don't have a new enough Autoconf to choose the best grep\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_EGREP],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_REQUIRE([AC_PROG_FGREP])dnl\ntest -z \"$GREP\" && GREP=grep\n_LT_DECL([], [GREP], [1], [A grep program that handles long lines])\n_LT_DECL([], [EGREP], [1], [An ERE matcher])\n_LT_DECL([], [FGREP], [1], [A literal string matcher])\ndnl Non-bleeding-edge autoconf doesn't subst GREP, so do it here too\nAC_SUBST([GREP])\n])\n\n\n# _LT_DECL_OBJDUMP\n# --------------\n# If we don't have a new enough Autoconf to choose the best objdump\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_OBJDUMP],\n[AC_CHECK_TOOL(OBJDUMP, objdump, false)\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [An object symbol dumper])\nAC_SUBST([OBJDUMP])\n])\n\n# _LT_DECL_DLLTOOL\n# ----------------\n# Ensure DLLTOOL variable is set.\nm4_defun([_LT_DECL_DLLTOOL],\n[AC_CHECK_TOOL(DLLTOOL, dlltool, false)\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])\nAC_SUBST([DLLTOOL])\n])\n\n# _LT_DECL_SED\n# ------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nm4_defun([_LT_DECL_SED],\n[AC_PROG_SED\ntest -z \"$SED\" && SED=sed\nXsed=\"$SED -e 1s/^X//\"\n_LT_DECL([], [SED], [1], [A sed program that does not truncate output])\n_LT_DECL([], [Xsed], [\"\\$SED -e 1s/^X//\"],\n    [Sed that helps us avoid accidentally triggering echo(1) options like -n])\n])# _LT_DECL_SED\n\nm4_ifndef([AC_PROG_SED], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\n\nm4_defun([AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nIFS=$as_save_IFS\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f $lt_ac_sed && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test $lt_ac_count -gt 10 && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test $lt_ac_count -gt $lt_ac_max; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_SUBST([SED])\nAC_MSG_RESULT([$SED])\n])#AC_PROG_SED\n])#m4_ifndef\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_SED], [AC_PROG_SED])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_SED], [])\n\n\n# _LT_CHECK_SHELL_FEATURES\n# ------------------------\n# Find out whether the shell is Bourne or XSI compatible,\n# or has some other useful features.\nm4_defun([_LT_CHECK_SHELL_FEATURES],\n[AC_MSG_CHECKING([whether the shell understands some XSI constructs])\n# Try some XSI features\nxsi_shell=no\n( _lt_dummy=\"a/b/c\"\n  test \"${_lt_dummy##*/},${_lt_dummy%/*},${_lt_dummy#??}\"${_lt_dummy%\"$_lt_dummy\"}, \\\n      = c,a/b,b/c, \\\n    && eval 'test $(( 1 + 1 )) -eq 2 \\\n    && test \"${#_lt_dummy}\" -eq 5' ) >/dev/null 2>&1 \\\n  && xsi_shell=yes\nAC_MSG_RESULT([$xsi_shell])\n_LT_CONFIG_LIBTOOL_INIT([xsi_shell='$xsi_shell'])\n\nAC_MSG_CHECKING([whether the shell understands \"+=\"])\nlt_shell_append=no\n( foo=bar; set foo baz; eval \"$[1]+=\\$[2]\" && test \"$foo\" = barbaz ) \\\n    >/dev/null 2>&1 \\\n  && lt_shell_append=yes\nAC_MSG_RESULT([$lt_shell_append])\n_LT_CONFIG_LIBTOOL_INIT([lt_shell_append='$lt_shell_append'])\n\nif ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then\n  lt_unset=unset\nelse\n  lt_unset=false\nfi\n_LT_DECL([], [lt_unset], [0], [whether the shell understands \"unset\"])dnl\n\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  lt_SP2NL='tr \\040 \\012'\n  lt_NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  lt_SP2NL='tr \\100 \\n'\n  lt_NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n_LT_DECL([SP2NL], [lt_SP2NL], [1], [turn spaces into newlines])dnl\n_LT_DECL([NL2SP], [lt_NL2SP], [1], [turn newlines into spaces])dnl\n])# _LT_CHECK_SHELL_FEATURES\n\n\n# _LT_PROG_FUNCTION_REPLACE (FUNCNAME, REPLACEMENT-BODY)\n# ------------------------------------------------------\n# In `$cfgfile', look for function FUNCNAME delimited by `^FUNCNAME ()$' and\n# '^} FUNCNAME ', and replace its body with REPLACEMENT-BODY.\nm4_defun([_LT_PROG_FUNCTION_REPLACE],\n[dnl {\nsed -e '/^$1 ()$/,/^} # $1 /c\\\n$1 ()\\\n{\\\nm4_bpatsubsts([$2], [$], [\\\\], [^\\([\t ]\\)], [\\\\\\1])\n} # Extended-shell $1 implementation' \"$cfgfile\" > $cfgfile.tmp \\\n  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\ntest 0 -eq $? || _lt_function_replace_fail=:\n])\n\n\n# _LT_PROG_REPLACE_SHELLFNS\n# -------------------------\n# Replace existing portable implementations of several shell functions with\n# equivalent extended shell implementations where those features are available..\nm4_defun([_LT_PROG_REPLACE_SHELLFNS],\n[if test x\"$xsi_shell\" = xyes; then\n  _LT_PROG_FUNCTION_REPLACE([func_dirname], [dnl\n    case ${1} in\n      */*) func_dirname_result=\"${1%/*}${2}\" ;;\n      *  ) func_dirname_result=\"${3}\" ;;\n    esac])\n\n  _LT_PROG_FUNCTION_REPLACE([func_basename], [dnl\n    func_basename_result=\"${1##*/}\"])\n\n  _LT_PROG_FUNCTION_REPLACE([func_dirname_and_basename], [dnl\n    case ${1} in\n      */*) func_dirname_result=\"${1%/*}${2}\" ;;\n      *  ) func_dirname_result=\"${3}\" ;;\n    esac\n    func_basename_result=\"${1##*/}\"])\n\n  _LT_PROG_FUNCTION_REPLACE([func_stripname], [dnl\n    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\n    # positional parameters, so assign one to ordinary parameter first.\n    func_stripname_result=${3}\n    func_stripname_result=${func_stripname_result#\"${1}\"}\n    func_stripname_result=${func_stripname_result%\"${2}\"}])\n\n  _LT_PROG_FUNCTION_REPLACE([func_split_long_opt], [dnl\n    func_split_long_opt_name=${1%%=*}\n    func_split_long_opt_arg=${1#*=}])\n\n  _LT_PROG_FUNCTION_REPLACE([func_split_short_opt], [dnl\n    func_split_short_opt_arg=${1#??}\n    func_split_short_opt_name=${1%\"$func_split_short_opt_arg\"}])\n\n  _LT_PROG_FUNCTION_REPLACE([func_lo2o], [dnl\n    case ${1} in\n      *.lo) func_lo2o_result=${1%.lo}.${objext} ;;\n      *)    func_lo2o_result=${1} ;;\n    esac])\n\n  _LT_PROG_FUNCTION_REPLACE([func_xform], [    func_xform_result=${1%.*}.lo])\n\n  _LT_PROG_FUNCTION_REPLACE([func_arith], [    func_arith_result=$(( $[*] ))])\n\n  _LT_PROG_FUNCTION_REPLACE([func_len], [    func_len_result=${#1}])\nfi\n\nif test x\"$lt_shell_append\" = xyes; then\n  _LT_PROG_FUNCTION_REPLACE([func_append], [    eval \"${1}+=\\\\${2}\"])\n\n  _LT_PROG_FUNCTION_REPLACE([func_append_quoted], [dnl\n    func_quote_for_eval \"${2}\"\ndnl m4 expansion turns \\\\\\\\ into \\\\, and then the shell eval turns that into \\\n    eval \"${1}+=\\\\\\\\ \\\\$func_quote_for_eval_result\"])\n\n  # Save a `func_append' function call where possible by direct use of '+='\n  sed -e 's%func_append \\([[a-zA-Z_]]\\{1,\\}\\) \"%\\1+=\"%g' $cfgfile > $cfgfile.tmp \\\n    && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n      || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n  test 0 -eq $? || _lt_function_replace_fail=:\nelse\n  # Save a `func_append' function call even when '+=' is not available\n  sed -e 's%func_append \\([[a-zA-Z_]]\\{1,\\}\\) \"%\\1=\"$\\1%g' $cfgfile > $cfgfile.tmp \\\n    && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n      || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n  test 0 -eq $? || _lt_function_replace_fail=:\nfi\n\nif test x\"$_lt_function_replace_fail\" = x\":\"; then\n  AC_MSG_WARN([Unable to substitute extended shell functions in $ofile])\nfi\n])\n\n# _LT_PATH_CONVERSION_FUNCTIONS\n# -----------------------------\n# Determine which file name conversion functions should be used by\n# func_to_host_file (and, implicitly, by func_to_host_path).  These are needed\n# for certain cross-compile configurations and native mingw.\nm4_defun([_LT_PATH_CONVERSION_FUNCTIONS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_MSG_CHECKING([how to convert $build file names to $host format])\nAC_CACHE_VAL(lt_cv_to_host_file_cmd,\n[case $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_w32\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_w32\n        ;;\n    esac\n    ;;\n  *-*-cygwin* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_cygwin\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_noop\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_cygwin\n        ;;\n    esac\n    ;;\n  * ) # unhandled hosts (and \"normal\" native builds)\n    lt_cv_to_host_file_cmd=func_convert_file_noop\n    ;;\nesac\n])\nto_host_file_cmd=$lt_cv_to_host_file_cmd\nAC_MSG_RESULT([$lt_cv_to_host_file_cmd])\n_LT_DECL([to_host_file_cmd], [lt_cv_to_host_file_cmd],\n         [0], [convert $build file names to $host format])dnl\n\nAC_MSG_CHECKING([how to convert $build file names to toolchain format])\nAC_CACHE_VAL(lt_cv_to_tool_file_cmd,\n[#assume ordinary cross tools, or native build.\nlt_cv_to_tool_file_cmd=func_convert_file_noop\ncase $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_tool_file_cmd=func_convert_file_msys_to_w32\n        ;;\n    esac\n    ;;\nesac\n])\nto_tool_file_cmd=$lt_cv_to_tool_file_cmd\nAC_MSG_RESULT([$lt_cv_to_tool_file_cmd])\n_LT_DECL([to_tool_file_cmd], [lt_cv_to_tool_file_cmd],\n         [0], [convert $build files to toolchain format])dnl\n])# _LT_PATH_CONVERSION_FUNCTIONS\n",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/ChangeLog-2003.html": "<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta name=\"generator\" content=\"Docutils 0.13.1: http://docutils.sourceforge.net/\" />\n<title></title>\n<link rel=\"stylesheet\" href=\"docutils-articles.css\" type=\"text/css\" />\n</head>\n<body>\n\n<div class=\"banner\">\n<img src=\"images/gm-107x76.png\" alt=\"GraphicMagick logo\" width=\"107\" height=\"76\" />\n<span class=\"title\">GraphicsMagick</span>\n<form action=\"http://www.google.com/search\">\n\t<input type=\"hidden\" name=\"domains\" value=\"www.graphicsmagick.org\" />\n\t<input type=\"hidden\" name=\"sitesearch\" value=\"www.graphicsmagick.org\" />\n    <span class=\"nowrap\"><input type=\"text\" name=\"q\" size=\"25\" maxlength=\"255\" />&nbsp;<input type=\"submit\" name=\"sa\" value=\"Search\" /></span>\n</form>\n</div>\n\n<div class=\"navmenu\">\n<ul>\n<li><a href=\"index.html\">Home</a></li>\n<li><a href=\"project.html\">Project</a></li>\n<li><a href=\"download.html\">Download</a></li>\n<li><a href=\"README.html\">Install</a></li>\n<li><a href=\"Hg.html\">Source</a></li>\n<li><a href=\"NEWS.html\">News</a> </li>\n<li><a href=\"utilities.html\">Utilities</a></li>\n<li><a href=\"programming.html\">Programming</a></li>\n<li><a href=\"reference.html\">Reference</a></li>\n</ul>\n</div>\n<div class=\"document\">\n\n\n<p>2003-12-28  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/annotate.c (RenderFreetype): Ensure that image storage\nclass is set to DirectClass. Text rendering was not working\nproperly on top of PseudoClass images.</li>\n<li>magick/map.c (MagickMapRemoveEntry): Logic didn't properly\nhandle removing entry in list.</li>\n<li>configure.ac: Added --enable-efence option to enable memory\ndebugging using Electric Fence.</li>\n</ul>\n</blockquote>\n<p>2003-12-27  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>tests/maptest.c (main): Extended test to add an entry to the\nlist after an entry has already been removed.</li>\n<li>magick/image.c (ColorspaceTypeToString): Add support for LAB\ncolorspace.</li>\n<li>magick/map.c: Added signature members to all structures and\nadded assertions to ensure that the signature == MagickSignature\nprior to use. MagickMapAllocateObject now initializes the object\nreference count to one, and MagickMapDestroyObject decrements it\nin order to be more correct even though the object reference count\nis not actually used yet.\n(MagickMapCopyString): Preserve a null argument, and use\nAcquireString since it doesn't enlarge the string storage.\n(MagickMapCopyBlob): Preserve null blobs.</li>\n<li>configure.ac: Search for the shmctl() function.  Under current\nCygwin, this is hiding in -lcygipc.</li>\n</ul>\n</blockquote>\n<p>2003-12-26  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/composite.c: Fixed the composite operator list in the\nCompositeImage documentation.</li>\n<li>www/api/types.html: Corrected list of composition\noperators. Sometime prior to the creation of GraphicsMagick, the\n&quot;Replace&quot; composite operators were renamed to be &quot;Copy&quot; composite\noperators.  Thanks to David Relson for bringing this problem to\nour attention.</li>\n<li>PerlMagick/Magick.xs: Added &quot;LAB&quot; to colorspace types.</li>\n<li>magick/image.h (enum ColorSpace): Add LABColorspace enumeration.</li>\n<li>wand/magick_wand.h : Add some compatibility definitions to\ntranslate from ImageMagick enumerations to existing GraphicsMagick\nenumerations.</li>\n</ul>\n</blockquote>\n<p>2003-12-25  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/annotate.c: Use header synonyms defined by FreeType's\nftheader.h (included via &lt;ft2build.h&gt;) to include FreeType headers.\nThis will presumably be more portable in the future.</li>\n<li>configure.ac: &lt;ft2build.h&gt; is an optional prerequisite for\n&lt;freetype/freetype.h&gt; and &lt;libwmf/ipa.h&gt; so include it when\ntesting for these headers.</li>\n<li>magick/annotate.c: Include &lt;ft2build.h&gt; if it is available.</li>\n</ul>\n</blockquote>\n<p>2003-12-21  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>wand/wandtest.c: Ported from latest ImageMagick version.</li>\n<li>wand/drawing_wand.c: Adapted to be compatible with latest\nImageMagick version.</li>\n<li>wand/pixel_wand.c: Adapted to be compatible with latest\nImageMagick version.</li>\n<li>wand/magick_wand.c: Ported from latest ImageMagick version.</li>\n<li>magick/image.h (Image): Members color_profile, iptc_profile,\ngeneric_profile, and generic_profiles are now deprecated and\nprivate although they continue to work as before. Please migrate\nexisting code to use the GetImageProfile and SetImageProfile\nfunctions since these members will eventually be removed.</li>\n<li>magick/image.c (GetImageProfile): New function to retrieve an\nimage profile. Return value differs from similarly named\nImageMagick method since the ImageMagick approach assumes a\nparticular storage method.\n(SetImageProfile): New function to add (or remove) an image\nprofile. Does not execute CMS color profiles.</li>\n<li>magick/cache.c (SetImageVirtualPixelMethod): Return unsigned int to\nmake the Wand implementation happy.</li>\n<li>magick/image.c (TransformColorspace): Return unsigned int to\nmake the Wand implementation happy.\n(SetImageType): Return unsigned int to make the Wand\nimplementation happy.</li>\n<li>magick/draw.h, magick/draw.c: Substitute <cite>unsigned long</cite> in\nplace of <cite>size_t</cite> in interfaces so that the draw API is not\nsensitive to the definition of _LP64.</li>\n<li>locale/C.mgk: Added new messages required by Wand library.</li>\n<li>magick/error.c (ExceptionSeverityToTag): Add tag translations\nfor the WandWarning, WandError, &amp; WandFatalError enumerations</li>\n<li>magick/error.h (enum ExceptionType): Add WandWarning, WandError,\n&amp; WandFatalError enumerations to ExceptionType for ImageMagick\nAPI compatibility.</li>\n<li>magick/image.h (enum ChannelType): Add an <cite>AllChannels</cite>\nenumeration to the ChannelType enumeration for ImageMagick\nAPI compatibility.</li>\n</ul>\n</blockquote>\n<p>2003-12-17  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>PerlMagick, tests: Adjusted allowed error values for tests based\non new error computation arithmatic.  Some tests were left failing\nsince the operation they test provides results which are\nunreasonably inaccurate, or obviously broken.</li>\n</ul>\n</blockquote>\n<p>2003-12-17  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/jpeg.c: Changed &quot;JPEG:preserve-settings from a key/value\npair to a simple flag.  Save and restore attributes when\n&quot;-define JPEG:preserve-settings&quot; appears on the commandline.  Use\n&quot;+define JPEG:preserve-settings&quot; to unset the flag.</li>\n</ul>\n</blockquote>\n<p>2003-12-16  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/wmf.c: Include &lt;ft2build.h&gt; if it is available since some\nlibwmf installs don't work unless it is included before the libwmf\nAPI headers.</li>\n<li>configure.ac: Check for &lt;ft2build.h&gt;.</li>\n</ul>\n</blockquote>\n<p>2003-12-16  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/jpeg.c: Changed stored jpeg quality attribute from\n[jpeg-quality] to JPEG-Quality.  Added attributes JPEG-Colorspace\nand JPEG-Sampling-factors.  Added code to save and restore\nthese attributes when &quot;-define JPEG:preserve-settings=yes&quot; is\npresent in the comandline.  Quality is restored if the input\nwas a JPEG and the quality was preserved.  Sampling factors\nare restored if the input was a JPEG, sampling factors were\npreserved, and the colorspace for the output file is the same\nas that of the input file.</li>\n</ul>\n</blockquote>\n<p>2003-12-15  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>TclMagick/source/configure.ac: Add an initial TclMagick\nconfigure-based build environment based on a template and macros\nfrom the Tcl project.  I recall that while the extension does build,\nit is possible that it is not properly registered as a module to Tcl.</li>\n</ul>\n</blockquote>\n<p>2003-12-14  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c (IsImagesEqual): Properly compute error distance\nvectors. Math was missing the necessary sqrt call.  Also,\npre-normalize the error differences to 1.0 in order to reduce the\nstorage size required to store the summation of error values.</li>\n<li>PerlMagick/t/composite.t: Update Minus and Xor reference images.</li>\n<li>magick/composite.c (CompositeImage): Incorporated fixes from\nImageMagick for XorCompositeOp, PlusCompositeOp, and\nMinusCompositeOp.  Thanks to John Cristy for bringing the need for\nthese fixes to our attention.</li>\n<li>magick/image.h (RoundToQuantum): Added missing parenthesis.</li>\n</ul>\n</blockquote>\n<p>2003-12-10  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>doc/environment.imdoc: Document MAGICK_CODER_MODULE_PATH and\nMAGICK_FILTER_MODULE_PATH.</li>\n<li>rungm.sh.in: Pass MAGICK_CODER_MODULE_PATH and\nMAGICK_FILTER_MODULE_PATH in the environment so modules build may\nbe tested without first being installed.</li>\n<li>magick/module.c (FindMagickModule): Use the\nMAGICK_CODER_MODULE_PATH environment variable to specify a search\npath for coder modules.  Use MAGICK_FILTER_MODULE_PATH to specify\na search path for filter modules.</li>\n<li>Makefile.am: Updated to Automake 1.8.\n(install-exec-perl): Fixes which achieve a successful\n<cite>make distcheck</cite> for the first time in *Magick history.</li>\n<li>configure.ac: Set scripts to executable.</li>\n</ul>\n</blockquote>\n<p>2003-12-09  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Makefile.am (uninstall-data-html): Pathnames were computed\nincorrectly so documentation directories were being left behind.</li>\n<li>configure.ac: --without-frozenpaths is now the default.  This\nhelps <cite>make distcheck</cite> work and makes the package more portable.\nPath to gm was being incorrectly frozen when --without-frozenpaths\nwas specified.</li>\n<li>magick/delegate.c (ReadConfigureFile): Validate delegate paths\nprior to substitution.</li>\n<li>rungm.sh.in (top_builddir): Use a more reliable scheme for\ncomputing location of source and build directories.</li>\n<li>magick/Makefile.am: Improve include directory computation logic.</li>\n<li>configure.ac: Don't override includedir.  Pass user-supplied LIBS\nto the linker.</li>\n</ul>\n</blockquote>\n<p>2003-12-08  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/jpeg.c: store JPEG quality as &quot;[jpeg_quality]&quot; attribute.</li>\n</ul>\n</blockquote>\n<p>2003-12-07  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>rungm.sh.in: New script to support executing uninstalled\nexecutables.</li>\n<li>magick/blob.c (GetConfigureBlob): New MAGICK_CONFIGURE_PATH\nenvironment variable allows the user to specify the search path\nfor configuration (.mgk) files.</li>\n</ul>\n</blockquote>\n<p>2003-12-06  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>index.html: Added a table showing current stable release and\ndevelopment version.</li>\n</ul>\n</blockquote>\n<p>2003-12-05  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>doc/options.imdoc (use): Describe the syntax of the -process\nargument.</li>\n<li>acinclude.m4 (AC_CHECK_CC_OPT): Add quoting in AC_CHECK_CC_OPT\ndefinition.  Change suggested by Patrick Welche</li>\n</ul>\n</blockquote>\n<p>2003-12-04  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/magick.c (GetMagickInfo): Fix preprocessing logic error\nwhich caused moby shared library build to not register static\nmodules.</li>\n</ul>\n</blockquote>\n<p>2003-12-03  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/module.c (ExecuteModuleProcess): Add some logging.</li>\n<li>magick/static.c (ExecuteStaticModuleProcess): Add some logging.</li>\n</ul>\n</blockquote>\n<p>2003-11-30  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>VisualMagick/installer: Add optional build support for LZW.</li>\n<li>wand/Makefile.am: Add AUTOMAKE_OPTIONS.</li>\n<li>configure.ac: Update to Autoconf 2.59.</li>\n</ul>\n</blockquote>\n<p>2003-11-29  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>VisualMagick/installer/inc/tasks-install-perlmagick.isx: Update\nto reflect that the next release will use ActivePerl 5.8.1 Build\n807.</li>\n<li>VisualMagick/installer/inc/files-configs.isx: Updated the source\nlocations for the .mgk files.  Install modules.mgk into the config\ndirectory rather than the modules directory.</li>\n<li>configure.ac: Fixes to work with latest CVS libtool.</li>\n<li>libtool.m4: Update to latest CVS libtool.</li>\n<li>magick/modules.c, magick/static.c (ExecuteStaticModuleProcess):\nFix conditional compilation logic so that &quot;moby&quot; shared library\nbuild works again.</li>\n<li>magick/compress.c, magick/mac.c: Use existing SaveImageText and\nLoadImageText global constants rather than separate defines.</li>\n</ul>\n</blockquote>\n<p>2003-11-17  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>configure.ac: Update to Autoconf 2.58.</li>\n<li>Makefile.am: Update to Automake 1.7.9.</li>\n</ul>\n</blockquote>\n<p>2003-11-14  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/draw.c (DrawComposite): Base64-encoded image was not\nbeing deallocated. Bad memory leak.</li>\n</ul>\n</blockquote>\n<p>2003-11-03  Mike Chiarappa  &lt;<a class=\"reference external\" href=\"mailto:mikechiarappa&#37;&#52;&#48;libero&#46;it\">mikechiarappa<span>&#64;</span>libero<span>&#46;</span>it</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>BCBMagick: Updated installation procedure. Please read\nBCBMagick/readme.txt for details.</li>\n</ul>\n</blockquote>\n<p>2003-11-03  Mike Chiarappa  &lt;<a class=\"reference external\" href=\"mailto:mikechiarappa&#37;&#52;&#48;libero&#46;it\">mikechiarappa<span>&#64;</span>libero<span>&#46;</span>it</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>BCBMagick: Released DLL Version. Please read BCBMagick/readme.txt\nfor details about installation and/or use.</li>\n</ul>\n</blockquote>\n<p>2003-11-03  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/utility.c (GetPathComponent): Added x, X, and +\ncharacters to list of legal characters in subimage\nspecifications. Required by raw RGB image reader which accepts the\nsyntax &quot;image.rgb[100x100+50+50]&quot;. Thanks to John Cristy for\ncatching that one.</li>\n</ul>\n</blockquote>\n<p>2003-11-02  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/locale.c (GetLocaleMessageFromID): Fix ID range checking\nlogic.</li>\n</ul>\n</blockquote>\n<p>2003-10-30  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/jpeg.c: changed to not write gray CMYK images as\ngrayscales. That would not be a valid optimization.</li>\n<li>magick/color.c (IsGrayImage, IsMonochromeImage): Changed to\nnever return true for CMYK images. Separated images get wrong\ncolors when optimized to grayscales based on what these two\nfunctions return. Gray and CMYK are two different color spaces.</li>\n<li>magick/nt_feature.c (NTIsMagickConflict): changed to accept\ncolon as part of the magick string, consistent with the way the\nfunction is used.</li>\n<li>magick/utility.c, magick/utility.h (ExpandFilenames,\nGetPathComponent): Fixed filename glob expansion. Added handling\nof filename prefix-magick and sub-image specification to\nGetPathComponent. Sub-image specification takes precedence over\nany filename patterns.</li>\n</ul>\n</blockquote>\n<p>2003-10-22  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/static.c (ExecuteModuleProcess): Renamed from\nExecuteStaticModuleProcess. Only compiled if SupportMagickModules\nis not defined.</li>\n<li>magick/type.c (GetTypeBlob): Eliminated function.\n(ReadTypeConfigureFile): Use GetConfigureBlob() rather than\nGetTypeBlob().</li>\n<li>magick/module.c (GetModuleBlob): Eliminate this function since\nmodules.mgk is now installed under\n${prefix}/share/GraphicsMagick-version/config so\nGetConfigureBlob() may be used.\n(lt_dlexit, etc.) Eliminate fake libltdl function wrappers used\nfor the static build.\n(DestroyMagickModules): Added a new destroy function (simply\ninvokes DestroyModuleInfo()).\n(GetModuleList): Learn where modules live by using\nFindMagickModule() to locate the LOGO module rather than by using\nthe location of modules.mgk.  This is necessary since now\nmodules.mgk may be seperate from the modules.\n(GetModuleBlob): Eliminated function.\n(InitializeMagickModules): New function to safely initialize the\nmodule loader.\n(OpenModule): Added logging messages.\n(OpenModules): Added logging messages.\n(ReadModuleConfigureFile): Use GetConfigureBlob() rather than\nGetModuleBlob().\nTotally eliminated the rat's-nest of conditional code dependent on\nSupportMagickModules.  Now all the code in module.c is dependent\non #if defined(SupportMagickModules).</li>\n<li>magick/magick.c (DestroyMagick): Invoke DestroyMagickModules().\n(GetMagickInfo): #ifdef chunks of code which exist to support the\nmodules-build rather than forcing the module loader to pretend\nthat modules are being used when they are not. Pass module loading\nexceptions back to the user rather than discarding them.\n(GetMagickInfoArray): Don't inspect the exception status since may\nshort-circuits the operation.  Use best-effort instead.\n(ListMagickInfo): Don't inspect the current exception status so\nthat all the modules which did load successfully will be\nrepresented.\n(InitializeMagick): Invoke InitializeMagickModules().</li>\n<li>magick/log.c: (GetLogBlob): Eliminated function.\nGetConfigureBlob() is safe to use now when configuring logging.\n(LogToBlob): Simplified function.  Only exists since FileToBlob()\nmay throw exceptions (which are logged, causing deadlock).\n(ReadLogConfigureFile): Use GetConfigureBlob().</li>\n<li>magick/blob.c (GetConfigureBlob): Re-written to use the\nMagickMap interface and to support the new <cite>lib</cite> and <cite>share</cite>\nconfig directories.  The directory\n${prefix}/lib/GraphicsMagick-version/config is scanned before\n${prefix}/share/GraphicsMagick-version/config.\n(FileToBlob): Simplified implementation.</li>\n<li>config/Makefile.am: New makefile to install .mgk files.</li>\n<li>magick/magick_config.h.in: Added MagickLibConfigPath and\nMagickShareConfigPath defines.</li>\n<li>configure.ac: Install configuration files (.mgk files) in\n${prefix}/lib/GraphicsMagick-version/config and\n${prefix}/share/GraphicsMagick-version/config.  Architecture\nindependent files to under &quot;share&quot; while architecture dependnet\nfiles go under &quot;lib&quot;.</li>\n<li>Makefile.am: Added <cite>config</cite> subdirectory to distribution.  All\n.mgk files are moved from <cite>coders</cite> &amp; <cite>magick</cite> into this single\ndirectory.</li>\n</ul>\n</blockquote>\n<p>2003-10-21  Mike Chiarappa  &lt;<a class=\"reference external\" href=\"mailto:mikechiarappa&#37;&#52;&#48;libero&#46;it\">mikechiarappa<span>&#64;</span>libero<span>&#46;</span>it</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/studio.h: small modifications to achieve DLL\ncompilation of library with Borland C++ Builder.</li>\n<li>coders/ps3.c (ZLIBEncode2Image): Fixed bug. Compilation\nfail when HasZLIB is undefined because parameters 5 and 6,\nare undefined.</li>\n</ul>\n</blockquote>\n<p>2003-10-16  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>libtool.m4: Updated libtool again to CVS latest version.\nLibtool required some fixes for building DLLs under MinGW.</li>\n<li>magick/resource.c (InitializeMagickResources): Some code is\nconditional based on HAVE_POPEN.</li>\n<li>magick/utility.c (SystemCommand): Improved conditional\ncompilation logic.</li>\n<li>magick/blob.c (OpenBlob): Code depending on popen() is\nconditionally compiled based on HAVE_POPEN.  Code depending on\npclose() is conditionally compiled based on HAVE_PCLOSE.</li>\n<li>configure.ac: Add test for _pclose(), pclose(), _popen(), and\npopen().</li>\n<li>magick/locale.c (GetLocaleMessage): Add missing MagickExport.\n(GetLocaleMessageFromID): Add missing MagickExport.</li>\n<li>VisualMagick/installer/inc/files-development.isx (Source):\nInclude all of the headers from the magick directory in the\ndevelopment package.  Including them individually is too error\nprone.</li>\n</ul>\n</blockquote>\n<p>2003-10-15  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>VisualMagick/magick/magick_config.h.in: Added\nPREFIX_MAGICK_SYMBOLS as a configuration option.</li>\n<li>magick/module.c (_CoderInfo): Added register_function and\nunregister_function members to record the module's register and\nunregister function addresses.\n(OpenModule): Locate the module's register and unregister\nfunctions and save their address to the module's CoderInfo record.\n(UnloadModule): Invoke the module unregister function using the\naddress recorded by OpenModule().\n(TagToFunctionName): If PREFIX_MAGICK_SYMBOLS is defined, then add\na &quot;Gm&quot; prefix to the register and unregister function names.</li>\n<li>libtool: Updated libtool files to the latest CVS version.</li>\n<li>configure.ac: Changed define name from MAGICK_SYMBOL_PREFIX to\nPREFIX_MAGICK_SYMBOLS since support is not available for\nspecifying an arbitrary prefix.</li>\n</ul>\n</blockquote>\n<p>2003-10-14  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>configure.ac: Added --enable-symbol-prefix configure option\nwhich prepends &quot;Gm&quot; to all GraphicsMagick library symbols using\nthe C pre-processor.  In the future, this may change to support\nspecifying an arbitrary prefix, depending on experience.</li>\n<li>magick/studio.h: Include magick/symbols.h.</li>\n<li>magick/api.h: Include magick/symbols.h.</li>\n<li>magick/symbols.h: New header to support optionally remapping\nlibrary symbols.  If MAGICK_SYMBOL_PREFIX is defined, then\nlibrary symbols are remapped.</li>\n</ul>\n</blockquote>\n<p>2003-10-13  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/api.h: Removed inclusion of &lt;magick/semaphore.h&gt; since it\nis an implementation header.</li>\n</ul>\n</blockquote>\n<p>2003-10-13  Lars Skyum  &lt;<a class=\"reference external\" href=\"mailto:lrs&#37;&#52;&#48;stibo&#46;dk\">lrs<span>&#64;</span>stibo<span>&#46;</span>dk</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>www/GraphicsMagick.html, www/animate.html, www/composite.html,\nwww/conjure.html, www/convert.html, www/display.html, www/gm.html,\nwww/identify.html, www/import.html, www/mogrify.html,\nwww/montage.html: added documentation for &quot;-define&quot; command line\noption.</li>\n<li>doc/brief_options.imdoc, doc/options.imdoc: Added documentation\nfor &quot;-define&quot; command line option.</li>\n<li>doc/gmdocselect, doc/imdocselect: Changed &quot;skipform&quot; label in\nsed scripts to just &quot;skipf&quot;. Solaris sed had problems with the\nlong(?) &quot;skipform&quot; label.</li>\n</ul>\n</blockquote>\n<p>2003-10-12  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>doc/composite.imdoc, doc/options.imdoc, doc/GraphicsMagick.imdoc:\nAttempted to clarify the meaning of the compose arguments and how\ncomposition works, as well as eliminating use of hard-coded values like\n255.</li>\n<li>www/links.html: Added a link to Michael Still's article\n&quot;Graphics from the command line&quot;.</li>\n</ul>\n</blockquote>\n<p>2003-10-11  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/*.c: Updated module descriptions so that they accurately\ndescribe the module rather than saying &quot;Read/Write GraphicsMagick\nImage Format&quot;.</li>\n<li>coders/cineon.c: Fix source module description.  Contrary to\nopinion, ImageMagick did not invent the Cineon X image format so\ndescription is now &quot;Read/Write Cineon X Image Format.&quot;</li>\n<li>magick/magic.mgk: Added a CINEON entry for the Cineon X image\nformat.</li>\n<li>magick/static.c (RegisterStaticModules): Invoke\nRegisterCINEONImage().</li>\n<li>coders/modules.mgk: Map &quot;CIN&quot; magick to CINEON module.</li>\n</ul>\n</blockquote>\n<p>2003-10-10  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>locale/C.mgk: Added message for &quot;UnrecognizedCommand&quot;.</li>\n<li>magick/command.c (MagickCommand): No error was reported when a\nsubcommand failed to be matched so <cite>gm foo</cite> would silently return.\nNow an error message is properly reported.</li>\n</ul>\n</blockquote>\n<p>2003-10-09  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Makefile.am: Updated to Automake 1.7.8.</li>\n<li>various: Edits to eliminate minor issues detected by SGI C compiler.</li>\n<li>coders/ps3.c (WritePS3Image): Variable <cite>value</cite> was set but never\nused so it is removed.</li>\n<li>magick/image.c (RGBTransformPacket): Removed inline request\nsince this function is too big to inline.</li>\n<li>magick/animate.c (XAnimateBackgroundImage): Fixed a GCC 3.X\n&quot;type pinning&quot; warning.</li>\n<li>magick/display.c (XDisplayBackgroundImage): Fixed a GCC 3.X\n&quot;type pinning&quot; warning.</li>\n<li>magick/render.c (GetPixelOpacity): Removed inline directive.  No\none in their right mind could ever imagine this function inlining\nsuccessfully.</li>\n<li>magick/cache.c (IsNexusInCore): Adjusted so function inlines as\nrequested.</li>\n<li>coders/tiff.c (ReadTIFFImage): Improved logging information.\n(WriteTIFFImage): Changed the way the bilevel/grayscale logic\nworks.  Now bilevel images are treated similar to any other\ngrayscale image unless CCITT FAX3 or FAX4 compression is requested\n(which selects the MINISWHITE photometric).  The default is now to\nwrite uncompressed bilevel images with MINISBLACK photometric.</li>\n<li>PerlMagick/t/composite.t: Use some reasonable error values.</li>\n<li>magick/image.c (GetImageDepth): Added special cases for\ncolormapped images and monochrome images in order to improve\nperformance.</li>\n</ul>\n</blockquote>\n<p>2003-10-09  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>NEWS: added info about color scaling, sampling-factor, and\nchanged a reference to &quot;-coder-options&quot; to &quot;-define&quot;.</li>\n</ul>\n</blockquote>\n<p>2003-10-09  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>VisualMagick/bin/modules.mgk: added EPS3 mapping to PS3 module.</li>\n<li>coders/ps3.c, coders/tiff.c, magick/command.c, magick/image.c,\nmagick/image.h, magick/utility.c: Changed -coder-options option to\n-define. Also renamed functions {Add,Remove,Access}CoderOption(s)\nto {Add,Remove,Access}Definition(s). Changed ps coder-specific\noption ps:image=imagemask to just ps:imagemask.</li>\n</ul>\n</blockquote>\n<p>2003-10-08  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/cineon.c: Imported and adapted Cineon image format coder\nwritten by Kelly Bergougnoux &lt;<a class=\"reference external\" href=\"mailto:three3&#37;&#52;&#48;users&#46;sourceforge&#46;net\">three3<span>&#64;</span>users<span>&#46;</span>sourceforge<span>&#46;</span>net</a>&gt; with\nassistance from John Cristy.</li>\n</ul>\n</blockquote>\n<p>2003-10-08  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/jpeg.c: Extended -sampling-factor option to allow\nuser to supply full set of sampling factors.  If the full\nset is not supplied, omitted ones are 1x1 by default, similar\nto the behavior of &quot;cjpeg -sample&quot;.</li>\n<li>magick/command.c: Accept multiple pairs of sampling factors.</li>\n</ul>\n</blockquote>\n<p>2003-10-07  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/tiff.c (WriteTIFFImage): Re-arranged logging for improved\noutput.  Cleaned up evaluation of SAMPLESPERPIXEL and\nBITSPERSAMPLE.  Provided support for the TIFF coder options\ntiff:samples-per-pixel and tiff:bits-per-sample for power users.\n(ReadTIFFImage): Colormap generation for PHOTOMETRIC_MINISBLACK\nand PHOTOMETRIC_MINISWHITE was inaccurate.  Seems to be accurate\nnow.</li>\n<li>PerlMagick/t/reference/read/input.miff: Updated due to Glenn's\nchange to scale macros.</li>\n<li>PerlMagick/t/tiff/input_gray_12bit.tiff: Replaced 12 bit image\nwith a different one which is written by GraphicsMagick.</li>\n<li>coders/ps3.c (WritePS3Image): Use AccessCoderOption().</li>\n<li>magick/image.c (AccessCoderOption): Added a function to use for\naccessing coder-specific options.</li>\n</ul>\n</blockquote>\n<p>2003-10-08  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/attribute.c (TraceSVGClippingPath): optimized for speed\nand precision in clipping mask generation by using lines to\nconnect Bezier curve anchor points where applicable.</li>\n</ul>\n</blockquote>\n<p>2003-10-07  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Revised ScaleColor5to8 and ScaleColor6to8 macros again, to\nfill the low bits correctly.</li>\n</ul>\n</blockquote>\n<p>2003-10-06  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>PerlMagick/t/tiff/read.t: Added 16-color and 256 color\ncolormapped tests with a matte channel.</li>\n<li>PerlMagick/t/tiff/write.t: Added 16-color and 256 color\ncolormapped tests with a matte channel.</li>\n<li>coders/tiff.c (WriteTIFFImage): When using LZW compression,\napply the horizontal differencing predictor to RGB truecolor and\ndeep gray images since the TIFF spec says that LZW compression is\nusually improved by using horizontal differencing with continuous\ntone images.\nRe-implemented grayscale and colormapped scanline preparation to\nuse the new bit-stream interface.  This is a bit slower, but very\nflexible, and the implementation is very compact.  Writing of a\nmatte (transparency) channel is now believed to be correct for all\ndepths.</li>\n<li>magick/command.c (MogrifyImage): Only transform the colorspace\nif it has been set (i.e. is not UndefinedColorspace).</li>\n</ul>\n</blockquote>\n<p>2003-10-06  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/png.c (ReadOnePNGImage): PNG decoder would exit too\nearly when reading image.png[0].</li>\n</ul>\n</blockquote>\n<p>2003-10-05  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>PerlMagick/t/tiff/write.t: Added TIFF write tests for 4\nbits-per-sample TIFF images, both with and without a transparency\nchannel.</li>\n<li>magick/image.c (DescribeImage): Added -verbose support for\ndisplaying individual channel depths.</li>\n</ul>\n</blockquote>\n<p>2003-10-06  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c (SetImageInfo): cleaned up parsing of subimage\nspecification (image.psd[0]). It would fail sometimes due to\nincorrect reuse of variables. It's a bit strange the code accepts\nmore range syntax-variations than can be stored in ImageInfo.</li>\n</ul>\n</blockquote>\n<p>2003-10-05  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c (ChannelImage): The OpacityChannel, MatteChannel,\nand BlackChannel operations set the matte channel to opaque, so\nset image-&gt;matte to False for those operations.\n(RGBTransformImage): Add an assertion to prevent passing the\ncolorspace argument <cite>UndefinedColorspace</cite>.\n(TransformRGBImage): Add an assertion to prevent passing an image\nwith colorspace set to <cite>UndefinedColorspace</cite>.</li>\n</ul>\n</blockquote>\n<p>2003-10-04  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/log.c (LogToBlob): Since MagickSeek(file,0,SEEK_END) is\nused to obtain the Blob size, MagickSeek(file,0,SEEK_SET) must be\nused to restore the seek position.  Thanks to John Cristy for\nbringing this to our attention.</li>\n</ul>\n</blockquote>\n<p>2003-10-03  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/bit_stream.h: Added a bit-stream writer function.</li>\n<li>PerlMagick/t/reference/read/input_tim.miff: Reference image\nwas defective.</li>\n</ul>\n</blockquote>\n<p>2003-10-03  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c, magick/image.h: Updated AddCoderOptions to\naccept &quot;flag&quot; keys that have no values. They are placed in the\ncoder options map with an empty, zero length string value. Option\nargument syntax is now: &quot;key1[=[value1]],key2[=[value2]],...&quot;</li>\n</ul>\n</blockquote>\n<p>2003-10-03  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/command.c: Updated +coder-options option to not clear the\nentire map of coder options, but accept a list of names to remove\nfrom the map. Use option argument &quot;*&quot; to clear the entire map of\ncoder options.</li>\n<li>magick/image.c, magick/image.h: Added function\nRemoveCoderOptions. Added cast of signed char to unsigned char and\nint in calls to isspace and isprint.</li>\n<li>magick/utility.c: Added cast of signed char to unsigned char and\nint in calls to isspace and isprint. Added special handling of\n+coder-options option in ExpandFilenames function.</li>\n</ul>\n</blockquote>\n<p>2003-10-01  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>PerlMagick/t/reference/read/input_tim.miff: The TIM read results\nchanged somewhat due to Glenn's ScaleColor5to8 fix.</li>\n</ul>\n</blockquote>\n<p>2003-10-01  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Revised ScaleColor5to8 and ScaleColor6to8 macros to fill in the\nlow bytes.</li>\n<li>coders/bmp.c (ReadBMPImage): scaling of 8-8-8-8-bit images was\nalso slightly incorrect.</li>\n</ul>\n</blockquote>\n<p>2003-09-30  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/bmp.c (ReadBMPImage): scaling of 5-5-5-bit and 5-6-5-bit\nimages was slightly incorrect.</li>\n</ul>\n</blockquote>\n<p>2003-09-30  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/tiff.c (ReadTIFFImage): When using the generic bit-stream\nmarshaller to read colormapped/gray images, the slight performance\nimprovement from creating a special case for matte images did not\njustify almost doubling the amount of code.  Therefore, the two\nloops are combined back into one.</li>\n</ul>\n</blockquote>\n<p>2003-09-29  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/tiff.c (ReadTIFFImage): Fixed reading grayscale TIFFs\nthat have a transparency channel. Now uses a generic bit-stream\nmarshaller to allow reading any grayscale or colormapped TIFF with\nany bits per sample in the range of 1 to 16.</li>\n<li>magick/bit_stream.h: Added a generic implementation for\nmarshalling from a bit-stream into a quantum.  Still needs\nre-writing for best performance.</li>\n<li>PerlMagick/t/tiff/read.t: Added a test case for reading 8-bit\ngrayscale TIFF with matte.  Corrected grayscale 12-bit read\nsignatures.  Added 16 color PseudoClass read test.  Added 4-bit\ngrayscale read test.</li>\n</ul>\n</blockquote>\n<p>2003-09-26  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/tiff.c (WriteTIFFImage): Add support for writing\nDirectClass grayscale images at 4 bits per sample, including those\nwith an opacity channel.  This allows writing smaller files\n(half the size) when the image has 16 (or less) levels of gray.\nUse &quot;gm convert inimage.tiff -depth 4 outimage.tiff&quot; to quickly\ncreate grayscale TIFF file with 16 (or less) levels of gray.</li>\n</ul>\n</blockquote>\n<p>2003-09-25  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>NEWS: Updated NEWS file with changes since last update.</li>\n<li>index.html: Added a link to the www/AUTHORS.html file, as well\nas text stating that GraphicsMagick is originally derived from\nImageMagick 5.5.2, with a link to the ImageMagick site.</li>\n<li>Makefile.am: Add rules to generate www/AUTHORS.html.</li>\n<li>www/AUTHORS.html: New HTML file based on the AUTHORS file in the\nsource package.  GraphicsMagick has many authors.</li>\n</ul>\n</blockquote>\n<dl class=\"docutils\">\n<dt>2003-09-25  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</dt>\n<dd><ul class=\"first last simple\">\n<li>magick/image.c: Updated DescribeImage to cleanup EXIF data display\nbased on work by Cristy in ImageMagick.</li>\n</ul>\n</dd>\n</dl>\n<p>2003-09-24  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/tiff.c (WriteTIFFImage): Add support for writing\ncolormapped TIFF images with 1, 2, &amp; 4 bits per colormap index.\nThis allows writing smaller files.</li>\n</ul>\n</blockquote>\n<p>2003-09-24  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/ps3.c: Now creates a correct %%BoundingBox for images\nwith resolution stored as pixels per centimeter. Renamed serialize\nfunctions. Added comment headers where they were\nmissing. Reformatted code to be in alignment with GraphicsMagick\nstandard formatting.</li>\n<li>magick/map.c: Fixed semaphore double locking problem in\nMagickMapCloneMap.</li>\n</ul>\n</blockquote>\n<p>2003-09-23  Mike Chiarappa  &lt;<a class=\"reference external\" href=\"mailto:mikechiarappa&#37;&#52;&#48;libero&#46;it\">mikechiarappa<span>&#64;</span>libero<span>&#46;</span>it</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>BCBMagick/readme.txt : Updated compilation instructions.</li>\n<li>BCBMagick/magick/libMagick.bpr : Updated project, now include map.c.</li>\n<li>BCBMagick/lcms/Projects/BCB6/lcms.bpr : Updated project, now\ninclude cmscam02.c and cmsvirt.c.  Much thanks to Alex Dvoretsky\nfor bringing this problem to my attention.</li>\n</ul>\n</blockquote>\n<p>2003-09-23  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.h (Image): Moved private members to bottom of\nstructure.\n(_ImageInfo): Moved private members to bottom of\nstructure.</li>\n<li>magick/Makefile.am (pkginclude_HEADERS): Don't install\nsemaphore.h.\n(noinst_HEADERS): Distribute map.h and semaphore.h.</li>\n<li>magick/image.h (ImageInfo): Change coder_options member from\ntype <cite>MagickMap</cite> to type <cite>void *</cite>.</li>\n<li>coders/png.c: include magick/semaphore.h.</li>\n<li>magick/blob.c: include magick/semaphore.h.</li>\n<li>magick/color.c: include magick/semaphore.h.</li>\n<li>magick/constitute.c: include magick/semaphore.h.</li>\n<li>magick/delegate.c: include magick/semaphore.h.</li>\n<li>magick/log.c: include magick/semaphore.h.</li>\n<li>magick/magic.c: include magick/semaphore.h.</li>\n<li>magick/magick.c: include magick/semaphore.h.</li>\n<li>magick/module.c: include magick/semaphore.h.</li>\n<li>magick/semaphore.c: include magick/semaphore.h.</li>\n<li>magick/stream.c: include magick/semaphore.h.</li>\n<li>magick/tempfile.c: include magick/semaphore.h.</li>\n<li>magick/type.c: include magick/semaphore.h.</li>\n<li>magick/blob.h (_BlobInfo): Changed <cite>Semaphore *</cite> to <cite>void *</cite>.</li>\n<li>magick/cache.h (_CacheInfo): Changed <cite>Semaphore *</cite> to <cite>void *</cite>.</li>\n<li>magick/image.h (_Image): Changed <cite>Semaphore *</cite> to <cite>void *</cite>.</li>\n<li>magick/command.c: Updated each invokation of MagickMapAddEntry()\nto add an exception argument.</li>\n<li>tests/maptest.c: Updated to pass an exception argument to\nMagickMapAddEntry.</li>\n<li>magick/image.c (AddCoderOptions): Added exception argument\nand some more error handling.</li>\n<li>magick/map.c: Added formal documentation for methods.\n(MagickMapCloneMap): Added exception argument.\n(MagickMapAddEntry): Added exception argument and status.</li>\n</ul>\n</blockquote>\n<p>2003-09-22  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/emf.c: Changed NotAnEMFFile to ImproperImageHeader.</li>\n<li>magick/map.h: Changed all size parmeters from type <cite>unsigned\nlong</cite> to <cite>size_t</cite>.</li>\n<li>magick/map.c (MagickMapCopyBlob): Add new function to support\ncopying a Blob in a MagickMap.\n(MagickMapDeallocateBlob): Add new function to support\ndeallocating a Blob in MagickMap.</li>\n</ul>\n</blockquote>\n<p>2003-09-23  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/ps3.c: Fixed handling the case when no -coder-options are\nprovided to the PS3 coder.</li>\n</ul>\n</blockquote>\n<p>2003-09-22  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/ps3.c: Changed %%Creator version to use\nMagickLibVersionText, increased precision in HiResBoundingBox,\nadded a coder specific option for rendering bilevel images with\nthe PS imagemask operator indstead of the image operator.</li>\n<li>magick/command.c: Added &quot;-coder-options&quot; command line argument\nto all relevant command line utilities. Option argument to\n-coder-options is a list of comma separated key-value pairs that\nare saved in a MagickMap in ImageInfo for (de-)coders to use. See\nPS3 coder for an example that checks for: -coder-options\n&quot;ps:image=imagemask&quot;</li>\n<li>magick/image.c, magick/image.h: Added function AddCoderOptions().</li>\n<li>magick/map.c, magick/map.h: removed MS-DOS line terminators.</li>\n</ul>\n</blockquote>\n<p>2003-09-22  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>tests/maptest.c (main): Test/demo program for key,value map API.</li>\n<li>magick/map.c, magick/map.h: Implementation of a key,value map\nAPI for internal use.</li>\n</ul>\n</blockquote>\n<p>2003-09-19  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>lcms/include/icc34.h lcms.h: Added back the icc34.h header and\nchanges to make lcms compile on Win32&quot; icc34.h lcms.h.</li>\n</ul>\n</blockquote>\n<p>2003-09-19  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/ps3.c: Fixed warnings from Solaris compiler.</li>\n</ul>\n</blockquote>\n<p>2003-09-18  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>locale/C.mgk: Eliminated the many &quot;NotA&quot; messages since they may\nall be considered forms of &quot;ImproperImageHeader&quot;.  It is useful to\nprovide the origin of such messages in case the wrong coder has\nbeen invoked, however, this is expensive to do via the message\ndatabase since it explodes the number of messages.  The exception\nlogging can help here.  Once the exception reports include the\nreporting entity, it will be more clear when the software\nmisbehaves.</li>\n<li>magick/error.h (ThrowReaderException2): Remove since no longer\nused.\n(ThrowReaderException): Simplified implementation so that\nThrowException is not expanded twice.</li>\n<li>magick/error.h (ThrowReaderException3): Remove since never used.</li>\n<li>coders/xtrn.c (ReadXTRNImage): Use ThrowReaderException rather\nthan ThrowReaderException2.</li>\n<li>locale/C.mgk (MissingArgument) Updated to include %s so that the\ndescription field appears earlier in the message.</li>\n<li>magick/error.c (DefaultErrorHandler): Added a hack to allow the\n<cite>reason</cite> member to include a %s so that it may specify the\nformating of the message.  Care should be taken to not over-use\nthis hack.</li>\n</ul>\n</blockquote>\n<p>2003-09-18  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/ps3.c: Major update of the PS3 coder. Now ascii85 encodes\nall binary data. Many printer spoolers don't like the binary\ndata. The coder now creates much smaller files for bilevel, gray,\nand colormapped images. Compression and image type is now\nseparated so they may be combined independently. Any alpha channel\nis separated into a separate mask so it's possible to mask\nbilevel, gray, colormapped, rgb, and CKYK images. You may also\nmask a JPEG compressed PS file for instance. Clipping masks\ncreated from a photoshop clipping path with -clip option is\nconverted to a corresponding postscript clipping path.  New\nfunctions need comment headers.</li>\n<li>magick/attribute.c: Added TracePSClippingPath for creating a\npostscript clipping path from a photoshop clipping path.</li>\n<li>magick/compress.c, magick/compress.h: Added write-hook based\ninterface to compression functions. Required for ascii encoding\ncompressed, binary data. The interface between blob write\nfunctions, compression functions, and encoding functions could\nbenefit from more of this work.</li>\n<li>magick/image.c: ClipPathImage now stores the name of the\nclipping path in the mask image filename so that it is remembered\nand may be used for creating a postscript clipping path for\npostscript output.</li>\n<li>coders/modules.mgk: Added EPS3 mapping to module PS3.</li>\n</ul>\n</blockquote>\n<p>2003-09-17  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/command.c: Coalesced various &quot;Missing&quot; error reports into\none &quot;MissingArgument&quot; error report in order to reduce the number\nof messages to be maintained.</li>\n<li>locale/C.mgk: Removed almost all &quot;Missing&quot; messages.</li>\n<li>magick/gm_messages.mc: Added Microsoft message compiler source\nfile to CVS until which time it may be generated automatically\nduring the build.</li>\n</ul>\n</blockquote>\n<p>2003-09-16  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>locale/Makefile: Added ability to generate gm_messages.mc\n(for Windows message compiler) as well as adding <cite>clean</cite> and\n<cite>install</cite> targets.</li>\n<li>magick/delegate.h: Visual Studio .NET 2003 doesn't like\nthe chaining of GhostscriptVector members which share a\ncommon return type. Splitting the definitions solves this\nproblem.</li>\n</ul>\n</blockquote>\n<p>2003-09-15  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/deprecate.h (MagickSignedType): Compatibility definition\nto handle ImageMagick API change.\n(MagickUnsignedType): Compatibility definition to handle\nImageMagick API change. The new names are just as useless as the\nold names, but at least they are shorter.</li>\n<li>magick/command.c: Linux's sscanf has the terrible bug that it\nimproperly handles pulling out the first floating value from the\nstring &quot;0x1&quot;.  Instead of retrieving the value 0 and returning 1,\nit returns 0, probably because it rejects the string as a hex\nconstant. As a result, all options which used sscanf to validate\nthis input are now converted to use IsGeometry().</li>\n</ul>\n</blockquote>\n<p>2003-09-14  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>ltdl/ltdl.c: Update to libltdl current as of today.</li>\n<li>ltmain.sh: Update to libtool current as of today.</li>\n<li>configure.ac: For HPUX C++ compiler, add -AA to CXXFLAGS rather\nthan CXX.</li>\n</ul>\n</blockquote>\n<p>2003-09-12  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>configure.ac: Decided that the standards conformance\ndefines create more problems than they solve so they are\nremoved.\nMove the large-file tests to before the libtool configuration\nsince the libtool configuration was causing stdlib.h to be\nincluded prior to the large file defines, and this causes\nheader failure with C++ under AIX.</li>\n<li>www/api/types.html: Update description of MonitorHandler.</li>\n</ul>\n</blockquote>\n<p>2003-09-11  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>configure.ac: Set CXX to PTHREAD_CXX if necessary (and warn).</li>\n<li>acinclude.m4 (ACX_PTHREAD): Add check to see if xlC_r should be\nused for AIX.</li>\n</ul>\n</blockquote>\n<p>2003-09-10  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/render.c: Fixed handling of arc primitive (see IM-5.5.8).</li>\n</ul>\n</blockquote>\n<p>2003-09-10  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/log.h: It seems that test programs are using\nGetMagickModule so make it visible by default.</li>\n<li>configure.ac: Use GM_FUNC_MMAP_FILEIO macro to test mmap.</li>\n<li>acinclude.m4 (GM_FUNC_MMAP_FILEIO): New macro to test mmap's\ncapability to do coherent file I/O.  The AC_FUNC_MMAP macro\nwas not testing the mmap features that GraphicsMagick uses, and\nwas failing on a number of systems.</li>\n<li>magick/blob.c (BlobMapModeToString): Only include this static\nfunction if HAVE_MMAP is defined.</li>\n<li>coders/locale.c (WriteLOCALEImage): Fix FormatString argument\ntype inconsistencies.</li>\n<li>wand/magick_compat.h: Change MagickExport to WandExport.</li>\n<li>coders/jpeg.c, coders/locale.c, coders/meta.c, coders/miff.c,\ncoders/palm.c, coders/pict.c, coders/svg.c, coders/tiff.c,\ncoders/topol.c, magick/cache.c, magick/display.c, magick/image.c,\nmagick/widget.c: Removed unused values, changed storage types, or\nadded explicit casts, in order to reduce the number of &quot;REMARK&quot;s\nwhen using the SGI IRIX compiler.</li>\n<li>magick/render.c (DrawClipPath): Fix memory leak of\nclone_info-&gt;clip_path.  Problem reported by Vladimir\n&lt;<a class=\"reference external\" href=\"mailto:lvm&#37;&#52;&#48;integrum&#46;ru\">lvm<span>&#64;</span>integrum<span>&#46;</span>ru</a>&gt;.\n(DestroyDrawInfo): Remove unnecessary checks for non-null prior to\ninvoking MagickFreeMemory. MagickFreeMemory already checks for\nnon-null.</li>\n<li>magick/log.h (GetCurrentFunction): Apparently Visual C++ 6.0\ndoes not support __FUNCTION__.  Problem reported by Vladimir\n&lt;<a class=\"reference external\" href=\"mailto:lvm&#37;&#52;&#48;integrum&#46;ru\">lvm<span>&#64;</span>integrum<span>&#46;</span>ru</a>&gt;.</li>\n<li>wand/magick_compat.c: All functions in magick_compat.c must use\nWandExport rather than MagickExport. Fix recommended by Vladimir\n&lt;<a class=\"reference external\" href=\"mailto:lvm&#37;&#52;&#48;integrum&#46;ru\">lvm<span>&#64;</span>integrum<span>&#46;</span>ru</a>&gt;.</li>\n<li>magick/constitute.c (PushImagePixels): number_pixels was always\ncast to a long during use, so change to store value in a long\ninstead.\n(PopImagePixels): number_pixels was always\ncast to a long during use, so change to store value in a long\ninstead.</li>\n</ul>\n</blockquote>\n<p>2003-09-09  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/psd.c: Eliminated warning regarding unused initialized\nvariable.</li>\n<li>magick/log.c: Eliminate type warnings regarding enum assignment.</li>\n<li>coders/locale.c (WriteLOCALEImage): Use UndefinedException\nrather than 0 in severity_list terminating entry in order to avoid\na type conversion warning.</li>\n<li>magick/image.c (SetImageChannelDepth): Depth parameter was being\nreturned rather than status.  Oops!</li>\n<li>magick/effect.c (BlurScanline): Due to automatic casting\nconventions, computation was being done (at least with SGI\ncompiler) as type <cite>unsigned long</cite> rather than <cite>long</cite> as it should\nhave been.</li>\n<li>coders/jpeg.c, coders/meta.c, coders/miff.c, coders/msl.c,\ncoders/palm.c, coders/pcd.c, coders/psd.c, coders/svg.c,\ncoders/tiff.c, coders/xcf.c, magick/render.c, : Quench many SGI\ncompiler warnings regarding variables which are initialized but\nnever used.</li>\n<li>magick/xwindow.h: Undef gravity defines so that enumerated type\nis used instead.</li>\n</ul>\n</blockquote>\n<p>2003-09-08  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/log.c (LogMagickEvent): Windows system logging\nfunctionality is not currently ported to work with Cygwin so\ndisable when compiling under Cygwin.</li>\n<li>magick/log.c (Win32EventlogOutput): Remove spurious comma in enum.</li>\n<li>wand/drawing_wand.h: Remove junk comment marker that I forgot to\nremove.</li>\n<li>magick/studio.h: Provide prototypes for strlcpy and vsnprintf if\nthe system doesn't provide them in the requested compilation\nenvironment.</li>\n<li>configure.ac: Add necessary standards compilance definitions to\nmagick_config.h.\nCheck for strlcpy and vsnprintf prototypes.</li>\n<li>Makefile.am (DOCDIRS): www/api/types does not exist anymore.</li>\n</ul>\n</blockquote>\n<p>2003-09-06  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>configure.ac: Move multithread tests prior to libtool\nconfiguration in case value of CC is changed.  Otherwise libtool\ngets confused and refuses to run.</li>\n<li>acinclude.m4 (ACX_PTHREAD): If using AIX CC <cite>xlc</cite> use <cite>xlc_r</cite>\nfor multithread compiler.</li>\n<li>coders/jpeg.c: Undef HAVE_STDLIB_H before including the\njpeg headers or else we get an already defined error/warning.</li>\n</ul>\n</blockquote>\n<p>2003-09-04  Mike Chiarappa  &lt;<a class=\"reference external\" href=\"mailto:mikechiarappa&#37;&#52;&#48;libero&#46;it\">mikechiarappa<span>&#64;</span>libero<span>&#46;</span>it</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>BCBMagick : Updated whole directory tree to achieve correct\ncompilation with Borland C++ Buider 6.0.</li>\n</ul>\n</blockquote>\n<p>2003-09-04  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c (ClipPathImage): Remove MS-DOS line terminations\n(actually, extra carriage returns) which somehow crept into\nClipPathImage.</li>\n<li>locale/C.mgk: Added message for &quot;PNG library is too old&quot;.</li>\n</ul>\n</blockquote>\n<p>2003-09-04  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/transform.c (ProfileImage): Bugfix: conditional\ncompilation based on LCMS being present or not now works as\nexpected. An exception is thrown if LCMS is not present and\nprofile conversion is used.</li>\n</ul>\n</blockquote>\n<p>2003-09-04  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/txt.c (ReadTXTImage): Fix strlen() pointer type warning.</li>\n<li>magick/image.c (TextureImage): Fixed return with no value warning.</li>\n<li>magick/color.c (GetColorInfoArray): Decided that the const\nreturn value was a bad idea.  Therefore, the return type has been\nmade non-const.</li>\n<li>magick/magick.c (GetMagickInfoArray): Decided that the const\nreturn value was a bad idea.  Therefore, the return type has been\nmade non-const.</li>\n<li>tests/constitute.c, tests/rwblob.c, tests/rwfile.c : Define\nMAGICK_IMPLEMENTATION since these test programs using some internal\nextensions.</li>\n<li>configure.ac: Test C++ compiler for __func__ support.</li>\n<li>magick/log.h: Added GetCurrentFunction() macro to handle\n__func__ support determination.  Re-wrote GetMagickModule() macro\nto use GetCurrentFunction().  Changes should allow compilation of\nMagick++ when the C compiler supports __func__ but the C++\ncompiler does not.</li>\n<li>configure.ac: Changed from using HAS___func__ define to\nHAS_C__func__ since this feature may be language sensitive.</li>\n<li>locale/C.mgk: Added missing JNGCompressionNotSupported message.</li>\n</ul>\n</blockquote>\n<p>2003-09-02  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/attribute.c (Generate8BIMAttribute): Fix sscanf argument\ntype mis-match.</li>\n<li>coders/ps3.c (ZLIBEncodeImage): Fix mis-classified\nZipLibraryIsNotAvailable error report.</li>\n<li>coders/url.c (RegisterURLImage): Only register URL format\nsupport if libxml2 is available.</li>\n<li>coders/msl.c (RegisterMSLImage): Only register MSL format\nsupport if libxml2 is available.</li>\n</ul>\n</blockquote>\n<p>2003-09-01  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/histogram.c (WriteHISTOGRAMImage): Remove a useless loop.</li>\n<li>coders/wpg.c: Applied patch from Fojtik Jaroslav to support\nreading WPGs which use the EXT token.</li>\n</ul>\n</blockquote>\n<p>2003-08-31  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/color.c (HistogramToFile): Renamed static method\n<cite>Histogram</cite> to <cite>HistogramToFile</cite> to make it more clear what this\nfunction does.\n(GetColorHistogram): Added new function to support retrieving a\ncolor histogram of the image.  A color histogram contains a count\nof how many times each color occurs in the image.</li>\n<li>magick/image.c (GetImageChannelDepth): Return an <cite>unsigned int</cite>\nrather than <cite>long</cite>.</li>\n</ul>\n</blockquote>\n<p>2003-08-29  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>PerlMagick/Magick.xs: Add support for CopyCyan, CopyMagenta,\nCopyYellow, and CopyBlack, composition operators.</li>\n<li>magick/composite.c (CompositeImage): Added support for\nCopyCyanCompositeOp, CopyMagentaCompositeOp,\nCopyYellowCompositeOp, and CopyBlackCompositeOp, composition\noperators.</li>\n</ul>\n</blockquote>\n<p>2003-08-28  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>wand/*: Updated to current ImageMagick Wand API (minus a few\nunimplemented functions).</li>\n<li>magick/image.c (TextureImage): Add status return because Wand API\nwants it.  Inherit is_grayscale status from texture image.</li>\n<li>magick/fx.c (SolarizeImage): Add status return because Wand API\nwants it.</li>\n<li>magick/resource.c (SetMagickResourceLimit): Add status return\nbecause Wand API wants it.</li>\n<li>magick/draw.c (DrawPeekGraphicContext): Now returns a\ncopy of the current DrawInfo context rather than returning\na pointer into the context stack. The user must destroy\nthis copy using DestroyDrawInfo() once it is no longer\nneeded.</li>\n</ul>\n</blockquote>\n<p>2003-08-25  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>VisualMagick/filters/LIBRARY.txt: This file is necessary to\nincorporate analyze.c into the static build.  Without it the\nbuild fails.</li>\n</ul>\n</blockquote>\n<p>2003-08-23  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/transform.c: ProfileImage updated to handle alpha\nchannels and grayscale images. Also optimized color profiling of\ncolor mapped images and fixed a few bugs in profiling of CMYK\nimages.</li>\n<li>magic/locale_c.h: added MagickExport to prototype declaration of\nGetLocaleMessageFromID in WriteLOCALEImage again. Please update\nyour locale coder.</li>\n</ul>\n</blockquote>\n<p>2003-08-23  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/wpg.c: Applied patch from Fojtik Jaroslav to use the\nGetMagicInfo() function to obtain the format of embedded images,\nand to provide a default WPG palette if the WPG file does not\nsupply a palette.</li>\n</ul>\n</blockquote>\n<p>2003-08-22  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magickgm_messages.bin locale_c.h transform.c: Fixed missing\nmessage problem and added support for new lcms error handler.</li>\n</ul>\n</blockquote>\n<p>2003-08-21  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/attribute.c, magick/image.c, magick/command.c: Added\n&quot;clippath&quot; option for clipping named Photoshop clipping paths,\nincreased precision in clipping path knots, added comments, and\nfixed a few bugs resulting from moving TraceClippingPath function\nfrom ImageMagick to GraphicsMagick. Still need to update some of\nthe documentation.</li>\n<li>magick/locale_c.h, magick/studio.h: added MagickExport to\ndeclaration of GetLocaleMessageFromID and moved include of\nmagick/locale_c.h after declaration of MagickExport. This fixes a\nlink error in dynamic, DLL version.</li>\n<li>coders/locale.h: added MagickExport to prototype declaration of\nGetLocaleMessageFromID in WriteLOCALEImage.</li>\n</ul>\n</blockquote>\n<p>2003-08-21  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>PerlMagick/t/subroutines.pl (testRead): Ignore useless TIFF\nwarning so that 12-bit TIFF test passes.</li>\n<li>magick/constitute.c (ReadImage): Ensure that the reported image\nmagic string is that of the user-specified input file rather than\na temporary file prepared by an external delegate program.</li>\n<li>magick/command.c (ImportImageCommand): Since\nDestroyExceptionInfo() now sets the destroyed exception signature\nto an invalid value, GetExceptionInfo(exception) must be invoked\nwhen the intention is to simply purge the exception.  This fix\nresolves an abort when executing <cite>gm import</cite>.</li>\n</ul>\n</blockquote>\n<p>2003-08-18  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magickgm_messages.bin locale_c.h transform.c: Updates that\nadd latest enhancments by Lars to color management code in\nProfileImage.</li>\n</ul>\n</blockquote>\n<p>2003-08-19  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/wpg.c: Incorporated patch from Fojtik Jaroslav to support\nrendering embedded WMFs.</li>\n</ul>\n</blockquote>\n<p>2003-08-18  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c (SetImageChannelDepth): New function to transform\nthe specified channel so it fits the specified modulus depth.</li>\n<li>magick/blob.c (BlobToImage): Skip calling SetImageInfo() if\nmagick is already set.</li>\n</ul>\n</blockquote>\n<p>2003-08-18  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>PerlMagick/Magick.xs: Some fixes to get PerlMagick compiling\nagain due to new ID based error macros.</li>\n</ul>\n</blockquote>\n<p>2003-08-17  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/error.h (enum): Remove spurious comma.</li>\n</ul>\n</blockquote>\n<p>2003-08-17  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coderspng.c: Had to modify a few exception calls to work with\nnewest macros.</li>\n</ul>\n</blockquote>\n<p>2003-08-17  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coderslocale.c magick/error.h locale.c locale_c.h studio.h:\nThe LOCALEH header file generator now adds an MGK_ prefiix to\nall the ID defines as part of a fix to support the new error\nand exception macros cross platform.</li>\n</ul>\n</blockquote>\n<p>2003-08-16  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>wandmagick_wand.c pixel_wand.c: The wand api code was totally\nleft out of the large macro conversion below as an oversight.</li>\n</ul>\n</blockquote>\n<p>2003-08-15  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>.coders art.c avi.c avs.c bmp.c caption.c clipboard.c cmyk.c\ncut.c dcm.c dib.c dps.c dpx.c emf.c ept.c fax.c fits.c fpx.c gif.c\ngradient.c gray.c hdf.c histogram.c html.c icon.c jbig.c jp2.c\njpeg.c label.c locale.c logo.c map.c mat.c matte.c meta.c miff.c\nmono.c mpc.c mpeg.c msl.c mtv.c mvg.c null.c otb.c palm.c pcd.c\npcl.c pcx.c pdb.c pdf.c pict.c pix.c png.c pnm.c preview.c ps.c\nps2.c ps3.c psd.c pwp.c rgb.c rla.c rle.c sct.c sfw.c sgi.c\nstegano.c sun.c svg.c tga.c tiff.c tile.c tim.c topol.c ttf.c txt.c\nuil.c url.c uyvy.c vicar.c vid.c viff.c wbmp.c wmf.c wpg.c x.c xbm.c\nxc.c xcf.c xpm.c xtrn.c xwd.c yuv.c .magickanimate.c annotate.c\nblob.c cache.c cache_view.c color.c color.h command.c compress.c\nconstitute.c decorate.c delegate.c display.c draw.c effect.c\nenhance.c error.c error.h fx.c gm_messages.bin image.c list.c\nlocale.c locale_c.h log.c mac.c magic.c magick.c module.c montage.c\nnt_feature.c paint.c quantize.c registry.c render.c resize.c\nsegment.c semaphore.c shear.c signature.c static.c static.h\nstream.c studio.h tempfile.h transform.c type.c utility.c widget.c\nxwindow.c : Changes to support ID based message access and checking\nall message usages. The main thing that was done was to remove all\nthe quotes around the &quot;tags&quot; used to lookup messages defined in\nthe localeC.XML file. Macros were added to error.h to allow the\ncode to be compiled for either string based access or binary ID\nbased access. Using binary ID's will cause the code to fail to\ncompile if a message does not exist in C.XML, since no ID will be\ncreated for a missing message. This change then allowed us to\neasily track down all the messages that were &quot;missing&quot; or not\nbeing accessed properly. The problems were massive and took many\ndays to resolve. I have left the code compiling in ID mode to keep\nthings in sync going forward and also because it makes message\nlookup instantaneous. An ID is just an index into and array of\nchar *'s. There is still a lot of cleanup work remaining, but this\nis a very good start.</li>\n</ul>\n</blockquote>\n<p>2003-08-14  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/error.c (GetLocaleExceptionMessage): Add check to avoid\nduplicating severity prefix.</li>\n<li>magick/log.c (LogMagickEvent): Incorporated fix from Bill\nRadcliffe to enable logging control flags to work properly again.</li>\n<li>NEWS: Updated news.</li>\n<li>magick/blob.c (OpenBlob): Rewind file descriptor so that first\nread is at zero offset. This fixes reading GIFs via a\nuser-provided file handle.</li>\n</ul>\n</blockquote>\n<p>2003-08-13  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c (GetImageDepth): Extend so that the actual\nminimum depth required to represent the image is\nreturned. Previously only the values 8, 16, and 32 were\nreturned. This means that a value of one is returned for a\nmonochrome image. Also fixed a bug in that the pixels were\nincremented while the depth was incremented, resulting in the\nfirst image pixels not being properly evaluated for depth.\n(SetImageDepth): Extend to support converting the image to\narbitrary modulus depths.\n(GetImageChannelDepth): New function to obtain the modulus depth\nfor a specified image channel.</li>\n</ul>\n</blockquote>\n<p>2003-08-12  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/draw.c (MvgAutoWrapPrintf): StreamError reported when\nDrawError was intended.</li>\n<li>coders/logo.c (ReadLOGOImage): Report FileOpenError rather than\nBlobError if requested image does not exist.</li>\n</ul>\n</blockquote>\n<p>2003-08-10  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/cache.c (PersistCache): If HAVE_SYSCONF and _SC_PAGE_SIZE\nare defined, then assume that sysconf works and don't use legacy\ngetpagesize() function.</li>\n<li>magick/studio.h (_XOPEN_SOURCE): Should be defined as 600 in\norder to match _POSIX_C_SOURCE=200112L according to the Single\nUNIX Specification v3.  This is necessary for the vsnprintf\nprototype to be visible.</li>\n<li>magick/attribute.c (ReadByte): Fix compilation warnings due to\ncasting <cite>unsigned char *</cite> to <cite>char *</cite> by changing function\ndefinition to accept <cite>unsigned char *</cite> instead.</li>\n<li>magick/error.h (UndefinedException): UndefinedException should\nbe ExceptionType, not ExceptionBaseType.</li>\n<li>magick/magick.c (IsValidFilesystemPath): Eliminate warning about\nunused function when UseInstalledMagick is defined.</li>\n<li>magick/error.c (ThrowLoggedException): Fix improper parameters\npassed to LogMagickEvent() when reason is not available.</li>\n</ul>\n</blockquote>\n<p>003-08-07  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/log.c, log.h: Added ability to log by either severity\nor by category of event. Made the defualt on windows to log all\nfatal errors, errors, and warnings to the event log. This will\ninclude anything generated by exceptions currently, but not any\nnormal &quot;informational&quot; logging.</li>\n</ul>\n</blockquote>\n<p>2003-08-07  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/log.c, log.h: Translation of event codes to mask vals\nwas not working. Code was left out of last update. It is now in.</li>\n</ul>\n</blockquote>\n<p>2003-08-07  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/error.c: Protect against NULL string passed into the\nmessage lookup function.</li>\n</ul>\n</blockquote>\n<p>2003-08-07  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/locale.c: Switched use of IsAccessible to nonloggging\nversion to prevent recursive problems.</li>\n</ul>\n</blockquote>\n<p>2003-08-06  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/Makefile.am (noinst_HEADERS): Distribute locale_c.h.</li>\n<li>locale/Makefile: Output locale_c.h.</li>\n<li>utilities/gm.c (main): Fix typo in Unix InitializeMagick\ninvocation.</li>\n<li>configure.ac: Use ACX_PTHREAD pthreads test macro.</li>\n<li>magick/(semaphore.c,spinlock.h,studio.h): Change HasPTHREADS\nconditional define to HAVE_PTHREAD.</li>\n<li>magick/Makefile.am (noinst_HEADERS): Include spinlock.h in\ndistribution.</li>\n</ul>\n</blockquote>\n<p>2003-08-06  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>contribwin32ATL7ImageMagickObject/ImageMagickObject.cpp,\nImageMagickObject_.h, ImageMagickObject.def, ImageMagickObject.rc\ngm.rc: Changes to get things compiling again since all windows\nspecific logging support has been eliminated. The special build\nscript BuildImageMagickObject.cmd now compiles the message file\nfor resource based messages. The result is in gm_messages.bin.\nThe script also generates a special version of gm.exe that uses\nthe COM dll as a regular DLL and links to it. This is the long\ndesired Moby DLL build idea.</li>\n<li>magick/error.c, magick/error.h, magick/log.c, magick/log.h:\nUpgrade of logging system to take over previous special logging\ncode for windows in nt_base.c. The new logic provides logging of\nevents to the debug api and the windows event log and also\nprovides a generic text file logging method.</li>\n<li>magick/gm_messages.bin, magick/ImageMagick.rc: New compiled\nmessage file based on data in localeC.mgk. RC file modified to\ninclude this as a resource.</li>\n<li>magick/locale.c, magick/locale_c.h: locale_c.h is generated by\nthe LOCALEH format of the locale coder. The logic in locale.c uses\nthe tables in the header lookup messages. On windows, all the\nmessages are stored as resources, while on UNIX they remain in a\nstring table.</li>\n<li>locale/C.mgk: Removed duplicate messages and added some new\ndefault messages that help to create a complete set of severity\nstrings.</li>\n<li>magick/command.c, magick/magick.c: Get rid compiler warnings.</li>\n</ul>\n</blockquote>\n<p>2003-08-05  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/command.c, magick/gm.c: Application level changes to\nimplement the client name - filename changes. The client name can\nnow be anything that the application wants and has nothing to do\nwith the saved filename of the application.</li>\n<li>magick/nt_base.c, magick/nt_base.h, magick/magick.c: Ripped out\nold nt specific debugging and logging logic. Moving to the\nstandard logging. New and major revisions to InitializeMagick to\nmake the code more maintainable, reliable, and reaable. It should\nbe functionally identical, but implements the new split client\nname and filename methododology.</li>\n<li>magick/utility.c, magick/utility.h: Added a couple of new\nroutines to support splitting the overloaded use of the client\nname and client filename.</li>\n<li>coders/xtrn.c: Minor code cleanup</li>\n</ul>\n</blockquote>\n<p>2003-08-05  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Copyright.txt: Added missing copyright notice which is required\ndue to copying the rlecomp manual page into ImageMagick.</li>\n<li>doc/config_files.imdoc: Started documentation for configuration\nfiles.</li>\n<li>magick/xwindow.c (XSignalHandler): Ensure that segment_info is\nnon-null before attempting to use it.  Much thanks to John Cristy\nfor bringing this problem to our attention.</li>\n</ul>\n</blockquote>\n<p>2003-08-05  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/locale.c: Added several new formats to this coder to\ngenerate windows message resource format messages and also to\ngenerates a new header file format that will support a table based\nversion of the other magick/locale.c.</li>\n<li>coders/xtrn.c: Minor code cleanup</li>\n</ul>\n</blockquote>\n<p>2003-08-03  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>configure.ac: Only configure C and C++ libtool tags.</li>\n<li>PerlMagick/t/reference/composite/*.miff: Added some composition\ntest reference images.  These reference images will serve as\nplaceholders until better composition tests can be figured out.\nIt is not clear from the documentation what some of the\ncomposition operators are supposed to do.</li>\n</ul>\n</blockquote>\n<p>2003-08-01  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>README.txt: Add documentation regarding using TRIO.</li>\n<li>configure.ac: Test for TRIO library if vsnprintf is not\navailable.</li>\n<li>magick/studio.h: Remap vsnprintf to trio_vsnprintf if TRIO is\navailable.</li>\n<li>coders/topol.c, coders/wmf.c, magick/magick.c, magick/nt_base.c,\nmagick/resource.c: Use traditional C comment form in C source\nfiles.</li>\n</ul>\n</blockquote>\n<p>2003-07-31  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/log.h (LogEventType::AllEvents): Increase the value of\nAllEvents so that it spans the complete positive range of a signed\ninteger.</li>\n<li>magick/xwindow.c, magick/xwindow.h: Incorporate patch from John\nCristy's ImageMagick to eliminate conditional dependence of\nmagick/xwindow.h on &lt;X11/extensions/XShm.h&gt;.</li>\n<li>magick/magick_config_api.h.in: HasSharedMemory define no longer\nneeded.</li>\n</ul>\n</blockquote>\n<p>2003-07-30  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>www/programming.html: Update Rmagick URL.</li>\n<li>GraphicsMagick.spec.in : Update according to instructions from\nTroy Edwards.</li>\n</ul>\n</blockquote>\n<p>2003-07-29  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>GraphicsMagick.spec.in: Replaced GraphicsMagick.spec with\nGraphicsMagick.spec.in, which is configured to produce\nGraphicsMagick.spec.</li>\n<li>configure.ac: Configure GraphicsMagick.spec.</li>\n</ul>\n</blockquote>\n<p>2003-07-29  Troy Edwards  &lt;<a class=\"reference external\" href=\"mailto:vallimar&#37;&#52;&#48;sexorcisto&#46;net\">vallimar<span>&#64;</span>sexorcisto<span>&#46;</span>net</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>GraphicsMagick.spec: Updated to CVS build. Added the\nGraphicsMagickWand files to the spec.  Only try to remove the\nunneeded perl package files if we are using PerlMagick.</li>\n</ul>\n</blockquote>\n<p>2003-07-28  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>GraphicsMagick.spec: Added RPM spec file authored by Troy\nEdwards &lt;<a class=\"reference external\" href=\"mailto:vallimar&#37;&#52;&#48;sexorcisto&#46;net\">vallimar<span>&#64;</span>sexorcisto<span>&#46;</span>net</a>&gt;.</li>\n<li>NEWS: Add note regarding EXIF fix.</li>\n<li>magick/attribute.c (GenerateEXIFAttribute): Look for the profile\nname &quot;EXIF&quot; rather than &quot;APP1&quot;.</li>\n</ul>\n</blockquote>\n<p>2003-07-26  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/magick_config_api.h.in: XWindowInfo structure in\nxwindow.h needs HasSharedMemory define.</li>\n<li>magick/xwindow.c, magick/xwindow.h: Move inclusion of\n&lt;X11/extensions/shape.h&gt; to xwindow.c.</li>\n<li>coders/dps.c, magick/xwindow.h: Move DPS includes to\ncoders/dps.c</li>\n<li>coders/Makefile.am: Substituted values are also set as\nmake variables, so use variables rather than substitutions.</li>\n<li>magick/log.c (GetLogBlob): MAGICK_HOME needs to take\nprecedence over the client path for the uninstalled build.</li>\n<li>magick/type.c (GetTypeBlob): MAGICK_HOME needs to take\nprecedence over the client path for the uninstalled build.</li>\n<li>magick/blob.c (GetConfigureBlob): MAGICK_HOME needs to take\nprecedence over the client path for the uninstalled build.</li>\n<li>magick/module.c (FindMagickModule): MAGICK_HOME needs to take\nprecedence over the client path for the uninstalled build.</li>\n</ul>\n</blockquote>\n<p>2003-07-24  Lars Ruben Skyum  &lt;<a class=\"reference external\" href=\"mailto:lars&#46;skyum&#37;&#52;&#48;stibo&#46;com\">lars<span>&#46;</span>skyum<span>&#64;</span>stibo<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/attribute.c (TraceClippingPath): Improvements to clipping\npath parsing.</li>\n</ul>\n</blockquote>\n<p>2003-07-17  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/cache.c: Disable the Windows open() extensions when\ncompiling using Borland C++.</li>\n<li>magick/log.c (LogMagickEvent): Unlock semaphore before\nreturning.</li>\n<li>ltdl/ltdl.h: Updated to latest CVS version.</li>\n<li>ltdl/ltdl.c: Updated to latest CVS version.</li>\n<li>Libtool: Updated to use latest CVS libtool.</li>\n</ul>\n</blockquote>\n<p>2003-07-17  Mike Chiarappa  &lt;<a class=\"reference external\" href=\"mailto:mikechiarappa&#37;&#52;&#48;libero&#46;it\">mikechiarappa<span>&#64;</span>libero<span>&#46;</span>it</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>BCBMagick: Contributed initial Borland C++ Builder 6.0 build\nenvironment.</li>\n</ul>\n</blockquote>\n<p>2003-07-13  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/color.c (GetColorInfoArray): Added a function to access\nthe color definition list as an array.\n(GetColorList): Added access locks to ensure that list is not\nre-ordered while it is being traversed.</li>\n<li>www/Magick++/Image.html: Add some more information regarding raw\npixel access.</li>\n</ul>\n</blockquote>\n<p>2003-07-12  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>wand/GraphicsMagickWand.pc.in (Cflags): Remove LFS_CPPFLAGS.</li>\n<li>wand/GraphicsMagickWand-config.in: Remove LFS_CPPFLAGS.</li>\n<li>magick/GraphicsMagick.pc.in (Cflags): Remove LFS_CPPFLAGS.</li>\n<li>magick/GraphicsMagick-config.in: Remove LFS_CPPFLAGS.</li>\n<li>configure.ac: Logic for setting LFS_CPPFLAGS was incomplete.</li>\n<li>coders/topol.c: Updated topol coder contributed by Jaroslav\nFojtik.  Topol is coming to life!</li>\n</ul>\n</blockquote>\n<p>2003-07-10  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/nt_base.h: Add a typedef for ssize_t</li>\n<li>magick/deprecate.h: ExtendedSignedIntegralType and\nExtendedUnsignedIntegralType are now deprecated types so they are\nmoved to deprecate.h. Existing code which uses these types should\ncontinue to work.</li>\n<li>magick/blob.c (MapBlob): Change <cite>offset</cite> parameter from type\noff_t to magick_off_t so that it is not LFS dependent.</li>\n<li>magick/cache.c (GetPixelCacheArea): Return magick_off_t.\n(PersistCache): Change <cite>offset</cite> parameter to type magick_off_t.</li>\n<li>magick/cache.h (NexusInfo): Change <cite>length</cite> type from\nExtendedSignedIntegralType to magick_off_t.\n(CacheInfo): Change <cite>offset</cite> and <cite>length</cite> types from\nExtendedSignedIntegralType to magick_off_t.</li>\n<li>magick/blob.c (BlobToFile): Use ssize_t rather than\nExtendedSignedIntegralType for count.\n(TellBlob): Return magick_off_t rather than\nExtendedSignedIntegralType.</li>\n<li>configure.ac: Check for a ssize_t type.</li>\n<li>magick/blob.h (_BlobInfo): Change <cite>offset</cite> and <cite>size</cite> members\nfrom ExtendedSignedIntegralType to magick_off_t.</li>\n<li>magick/blob.c (GetBlobSize): Return magick_off_t rather than\nExtendedSignedIntegralType.\n(SeekBlob): Accept and return magick_off_t rather than\nExtendedSignedIntegralType.</li>\n</ul>\n</blockquote>\n<p>2003-07-09  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/monitor.c (MagickMonitor): Change <cite>quantum</cite> argument from\ntype ExtendedSignedIntegralType to magick_int64_t. Change <cite>span</cite>\nargument from ExtendedUnsignedIntegralType to magick_uint64_t.</li>\n<li>magick/xwindow.c (XMagickMonitor): Change <cite>quantum</cite> argument from\ntype ExtendedSignedIntegralType to magick_int64_t. Change <cite>span</cite>\nargument from ExtendedUnsignedIntegralType to magick_uint64_t.</li>\n<li>magick/widget.c (XMonitorWidget): Change <cite>quantum</cite> argument from\ntype ExtendedSignedIntegralType to magick_int64_t. Change <cite>span</cite>\nargument from ExtendedUnsignedIntegralType to magick_uint64_t.</li>\n<li>magick/studio.h (QuantumTick): Change typecast from\nExtendedSignedIntegralType to magick_int64_t.</li>\n<li>magick/resource.c (AcquireMagickResource): Change <cite>size</cite>\nargument type from ExtendedSignedIntegralType to magick_int64_t.\n(LiberateMagickResource): Change <cite>size</cite> argument type from\nExtendedSignedIntegralType to magick_int64_t.</li>\n<li>magick/utility.c (FormatSize): Change <cite>size</cite> argument type from\nExtendedSignedIntegralType to magick_int64_t.</li>\n<li>magick/nt_base.c: Change MagickOffset to magick_off_t.</li>\n<li>magick/studio.h (magick_off_t): Change MagickOffset to magick_off_t.</li>\n<li>coders/topol.c: Insert dummy member into palettRAS structure\nsince Visual C++ doesn`t seem to handle empty structures.</li>\n<li>wand/GraphicsMagickWand.pc.in (prefix): Pass LFS CPPFLAGS.</li>\n<li>wand/GraphicsMagickWand-config.in: Pass LFS CPPFLAGS.</li>\n<li>wand/Makefile.am: Fix include path.</li>\n<li>magick/GraphicsMagick.pc.in (prefix): Pass LFS CPPFLAGS.</li>\n<li>magick/magick_config_api.h.in: Pass LFS configuration options\nuntil the API is fixed so that it is not LFS sensitive anymore.</li>\n<li>magick/GraphicsMagick-config.in: Pass LFS CPPFLAGS.</li>\n<li>PerlMagick/Makefile.PL.in: Pass LFS CPPFLAGS.</li>\n<li>magick/Makefile.am: Install magick_types.h.</li>\n<li>magick/api.h: Include magick_types.h.</li>\n<li>magick/studio.h: Include magick_types.h rather than integral_types.h.</li>\n<li>VisualMagick/magick/magick_types.h.in: New header file (replacing\nintegral_types.h) to contain CPU and system-dependent primitive\ntypedefs.</li>\n<li>magick/magick_types.h.in: New header file (replacing\nintegral_types.h) to contain CPU and system-dependent primitive\ntypedefs.</li>\n<li>configure.ac: Use AC_SYS_LARGEFILE to test for large file\noptions. Update to determine integral typedefs for current CPU and\ncompiler options. Configure magick_types.h.</li>\n<li>magick/attribute.c (TraceClippingPath): Apply patch from Lars\nRuben Skyum which fixes clipping path parsing for paths generated\nby Adobe software which pre-dates the Photoshop file format\nspecification.</li>\n</ul>\n</blockquote>\n<p>2003-07-08  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/semaphore.c: Modified the way the system handles the\ninitialization of Win32 critical sections to use a spin lock\non WIn32 to bootstrap the initialization of all other crtical\nsections. This is not an issue on UNIX since static init is used.</li>\n<li>magick/magic.c module.c magick.c log.c resource.c constitute.c\ncolor.c cache.c delegate.c registry.c type.c: Small modifications\nwere made to eliminate the side effect of unlocking semaphores\nas part of the releasing procedure. This also eliminated the\napparent bug of the system double locking certain semaphores.\nThe locked flag should now not be needed, but remains in place\nfor the time being as an added safegaurd.</li>\n</ul>\n</blockquote>\n<p>2003-07-04  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>png.c: added missing #ifdef JNG_SUPPORTED/#endif directives.</li>\n</ul>\n</blockquote>\n<p>2003-07-04  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>NEWS: Updated news to include fixes and enhancements since the\n1.0 release.</li>\n</ul>\n</blockquote>\n<p>2003-07-03  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/semaphore.c (UnlockSemaphoreInfo): Bugfix, modify\nthe <cite>locked</cite> flag while still under protection of the lock.\nThis fix is necessary for thread-safety.</li>\n</ul>\n</blockquote>\n<p>2003-07-02  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/jpeg.c (ReadJPEGImage): Conditionally copy exception.</li>\n<li>wand/Makefile.am (noinst_HEADERS): Need to distribute\nmagick_compat.h.\n(EXTRA_DIST): Need to distribute GraphicsMagickWand-config.1.</li>\n<li>coders/wmf.c (ipa_bmp_draw): Use CopyException.\n(ipa_device_begin): Use CopyException.\n(lite_font_map): Use CopyException.</li>\n<li>coders/jpeg.c (ReadJPEGImage): Use CopyException.</li>\n<li>magick/image.c (GetImageException): Use CopyException.</li>\n<li>magick/constitute.c (WriteImages): Use CopyException.</li>\n<li>Makefile.am (DIST_SUBDIRS): wand needs to be included in\ndistribution.</li>\n</ul>\n</blockquote>\n<p>2003-06-30  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/static.c (RegisterStaticModules): Invoke\nRegisterTOPOLImage.</li>\n<li>magick/magick.h (MagickInfo): Add member usage comments.</li>\n<li>magick/error.c (CatchException): Restore saved errno from\nexception-&gt;error_number.\n(CopyException): Copy error_number.\n(DestroyExceptionInfo): Reset error_number to zero.\n(GetExceptionInfo): Initialize error_number to zero.\n(ThrowException): Save errno to exception-&gt; error_number.\n(ThrowLoggedException): Save errno to exception-&gt; error_number.</li>\n<li>magick/error.h (ExceptionInfo): Borrow John Cristy's idea and\nadd a error_number member to ExceptionInfo to save the current\nerrno value. Otherwise CatchException may use some random errno.</li>\n<li>coders/Makefile.am: Build topol.c.</li>\n<li>coders/topol.c: Added initial TOPOL X image coder which is under\ndevelopment by Jaroslav Fojtik. Not working yet.</li>\n</ul>\n</blockquote>\n<p>2003-06-29  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/pwp.c (ReadPWPImage): Ensure that image is initialized\nbefore invoking ThrowReaderException.</li>\n<li>magick/image.c (CloneImage): Use CopyException.</li>\n<li>magick/error.c (CopyException): Add function to support copying\nExceptionInfo structures.</li>\n<li>magick/error.h (ExceptionInfo): Replaced recently-added <cite>whence</cite>\nmember with module, function, and line members in order to keep\nthe information seperate, and match the parameters used by the\nlogging system.\n(ThrowException): Log thrown exceptions.</li>\n<li>magick/error.c (ThrowLoggedException): New function used to\nthrow an exception, while recording and logging the location\nwhere the exception is thrown.</li>\n<li>doc/options.imdoc (operation): Document TemporaryFile and\nException events.</li>\n<li>magick/log.c (LogMagickEvent): Support logging ExceptionEvent.</li>\n<li>PerlMagick/Magick.xs: Added &quot;Exception&quot; event type.</li>\n<li>magick/log.h (LogEventType): Added ExceptionEvent.</li>\n</ul>\n</blockquote>\n<p>2003-06-26  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/error.c (ThrowException): Handle <cite>whence</cite>\nmember. MagickFreeMemory already checks for null pointer so don't\ncheck again.\n(DestroyExceptionInfo): Handle <cite>whence</cite> member. MagickFreeMemory\nalready checks for null pointer so don't check again.</li>\n<li>magick/error.h (ExceptionInfo): Add a <cite>whence</cite> member to support\nthe ability to record where the exception is was thrown.</li>\n<li>VisualMagick/installer: Install Wand files.</li>\n</ul>\n</blockquote>\n<p>2003-06-25  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/blob.c (GetConfigureBlob): GetConfigureBlob should always\nreturn a value.</li>\n<li>magick/type.c (GetTypeBlob): GetTypeBlob should always return a\nvalue.</li>\n<li>magick/log.c (GetLogBlob): GetLogBlob should always return\na value.</li>\n<li>magick/magick.c (GetMagickInfoArray): Fixed array memory\nallocation and clearing bug. Eliminate warnings.</li>\n</ul>\n</blockquote>\n<p>2003-06-24  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>VisualMagick/installer/inc/files-configs.isx: For a static\nbuild, install the configuration files directly into the\napplication directory.</li>\n<li>VisualMagick/installer/inc/uninstallrun-unregister-com.isx\n(Filename): Change ImageMagickObject.dll path.</li>\n<li>VisualMagick/installer/inc/run-register-com.isx (Filename):\nChange ImageMagickObject.dll path.</li>\n<li>VisualMagick/installer/inc/files-com.isx (Source): Install\nImageMagickObject.dll and MagickCMD.exe in the application\ndirectory alongside gm.exe and the CORE DLLs.</li>\n<li>INSTALL-unix.txt: Add additional information regarding LZW.</li>\n<li>VisualMagick/magick/magick_config.h.in: Add additional notes\nregarding UNISYS LZW patent.</li>\n<li>PerlMagick/Magick.xs: Applied Dissolve composite operator fix\nobtained from from John Cristy's ImageMagick which ensures that an\nunused matte channel is set to Opaque, and uses this knowledge to\nsimplify the math.</li>\n<li>VisualMagick/configure/configure.cpp: The <cite>wand</cite> library has a\nlinkage dependency on the <cite>magick</cite> library. Also don't include\nthe magick subdirectory so that headers must be included like\n&lt;magick/api.h&gt; for safety.</li>\n<li>coders/xtrn.c: Fix magick header inclusion.</li>\n<li>lcmssrccmserr.c: Fix magick header inclusion.</li>\n</ul>\n</blockquote>\n<p>2003-06-23  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>doc/options.imdoc: Fix to formatting. Fix spelling of origin.</li>\n<li>PerlMagick/t/bzlib/read.t: Add test for reading BZipped file.</li>\n<li>PerlMagick/t/subroutines.pl (testRead): Skip testing reads\nof compressed BLOBs because reading compressed BLOBs is not\nsupported yet.</li>\n<li>coders/bmp.c (ReadBMPImage): Only validate the file size value\nfor compressed BMPs.</li>\n<li>VisualMagick/wand, wand: First stab at building the Wand API\nunder Visual C++.  Still does not build as a DLL.</li>\n</ul>\n</blockquote>\n<p>2003-06-22  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/static.h: Add prototypes for RegisterXTRNImage and\nUnregisterXTRNImage.</li>\n<li>Makefile.am (DISTDIRS): Don't distribute the <cite>guide</cite>\nsubdirectory. It is available for checkout from CVS.</li>\n<li>www: Utilities documentation is updated from &lt;imdoc&gt; masters.\nFormatting could be improved, but the content seems ok.</li>\n<li>doc/environment.imdoc: New file to describe environment\nvariables.</li>\n<li>coders/cut.c (ReadCUTImage): Use MagickAllocateMemory and\nMagickFreeMemory rather than malloc and free.</li>\n<li>doc/gmdoc2html: Add GraphicsMagick styling to utility web pages.</li>\n<li>doc/Makefile: Additional documentation Makefile enhancements.</li>\n<li>AUTHORS: New file to acknowledge significant contributors\nto the software. If an author is not listed here, please let\nus know.</li>\n<li>configure.ac: test -a is not POSIX compliant.</li>\n</ul>\n</blockquote>\n<p>2003-06-17  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>doc: Source documentation for <cite>gm</cite> is now available via a <cite>doc</cite>\nCVS module. A Makefile is provided which formats the\ndocumentation and installs it into the <cite>www</cite> and <cite>utilities</cite>\nsubdirectories.</li>\n</ul>\n</blockquote>\n<p>2003-06-15  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>wand: Added Magick Wand library available via\n-lGraphicsMagickWand and &lt;wand/wand_api.h&gt;. Use\nGraphicsMagickWand-config or GraphicsMagickWand.pc to obtain the\ncompilation options required to use the library. Magick Wand is\nauthored by John Cristy. Magick Wand is provided as a separate\nlibrary from -lGraphicsMagick in order to assure the stability of\nthe core GraphicsMagick library while allowing Magick Wand to\nto evolve.</li>\n<li>images: Replace existing logo images with cleaner ones.</li>\n<li>www: Update links to point to updated logo images.</li>\n<li>logos: New CVS directory to contain master logos.</li>\n<li>scripts/txt2html: Updated inline logo image link.</li>\n<li>scripts/format_c_api_docs: Updated inline logo image link.</li>\n<li>version.sh: Support versioning all libraries independently.</li>\n<li>coders/meta.c: Prefix include paths for safety.</li>\n<li>magick/image.h: (TransmitType) Removed unused enumeration.\n(ProfileType) Removed unused enumeration.\n(QuantumType) Moved enumeration to constitute.h\n(StorageType) Moved enumeration to constitute.h</li>\n<li>magick/draw.c (DrawPeekGraphicContext): Added function to peek\nat head of drawing context stack (function added for ImageMagick\ncompatability).</li>\n<li>magick/image.c (CycleColormapImage): Change return type from\n<cite>void</cite> to <cite>unsigned int</cite> so that error status is returned to user.\n(DescribeImage): Change return type from\n<cite>void</cite> to <cite>unsigned int</cite> so that error status is returned to user.</li>\n<li>magick/list.c (ReplaceImageInList): Incorporated function from\nJohn Cristy's ImageMagick to replace current image in the list.</li>\n<li>coders/sgi.c (ReadSGIImage): Applied patch from John Cristy's\nImageMagick to save the compression type for SGI images.</li>\n</ul>\n</blockquote>\n<p>2003-06-12  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/txt.c (WriteTXTImage): Apply patch from John Cristy's\nImageMagick to observe image depth while writing pixel colors.\nThis patch is not applied to the 1.0 branch because it represents\nan output format change which could break a dependent application.\n(IsTXT): Recognize files written by the TXT coder.\n(ReadTXTImage): Reject files written by the TXT coder until support\nfor reading these files is implemented.\n(IsTXT): Ensure that sscanf doesn't read outside of provided data\nby using a fixed size buffer.</li>\n</ul>\n</blockquote>\n<p>2003-06-10  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>configure.ac: Don't add -lfpx to LIBS while configuring\nbecause the C compiler may fail to link with it in later\ntests.</li>\n</ul>\n</blockquote>\n<p>2003-06-07  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>PerlMagick/Magick.xs: RotateImage is documented to take\n<cite>degrees</cite> argument, not <cite>degree</cite>.  SwirlImage is documented to\ntake <cite>degrees</cite> argument, not <cite>degree</cite>.  SolarizeImage is\ndocumented to take a <cite>threshold</cite> argument, not <cite>factor</cite>.  Wave is\ndocumented to take <cite>amplitude</cite> and <cite>wavelength</cite> arguments.  Don't\ntransform colorspace to RGB when retrieving <cite>pixel</cite> color value.\nRelease memory acquired to store <cite>length</cite> pointer.  Picked up\nmemory leak fix related to <cite>SV **reference_vector</cite> variable from\nJohn Cristy's ImageMagick.</li>\n<li>configure: Incorporate patch to handle inline better.</li>\n<li>magick/utility.c (GetToken): Adjust code to avoid &quot;end-of-loop\ncode not reached&quot; warning.</li>\n<li>magick/log.c (GetLogBlob): Eliminate warning regarding\nunreached code.</li>\n<li>magick/command.c (AnimateImageCommand): Eliminate warning regarding\nunreached code.\n(ConvertImageCommand): Eliminate warning regarding\nunreached code.\n(ImportImageCommand): Eliminate warning regarding\nunreached code.</li>\n<li>magick/type.c (GetTypeBlob): Eliminate warning regarding\nunreached code.</li>\n<li>magick/blob.c (GetConfigureBlob): Eliminate warning regarding\nunreached code.</li>\n<li>coders/meta.c (super_fgets): Eliminated warnings regarding\ncomparison and return of incompatible pointer types.\n(super_fgets_w): Eliminated warnings regarding\ncomparison and return of incompatible pointer types.</li>\n<li>magick/command.c (ConvertImageCommand): Eliminate warnings\nnoticed when using Sun's compiler.</li>\n</ul>\n</blockquote>\n<p>2003-06-06  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>acinclude.m4: Add <cite>#undef inline</cite> in front of C++ tests.</li>\n<li>coders/x.c (RegisterXImage): Only register the X coder if HasX11\nis defined.</li>\n</ul>\n</blockquote>\n<p>2003-06-07  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c (GetImageGeometry) Y was a function of width\ninstead of height when processing EastGravity or WestGravity\n(bug report from Cristy).</li>\n</ul>\n</blockquote>\n<p>2003-06-06  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/utility.c (LocaleNCompare): Documented that comparison is\ncase-insensitive.\n(LocaleCompare): Documented that comparison is case-insensitive.</li>\n<li>magick/log.c (ParseEvents): LocaleNCompare already does\ncase-insensitive compare so lower-casing is not necessary.</li>\n<li>Magick++: Updates to cause exceptions to be thrown if a bad\ngeometry specification is supplied.</li>\n</ul>\n</blockquote>\n<p>2003-06-05  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/log.c (ReadConfigureFile): Move event parsing to\nParseEvents funtion.\n(SetLogEventMask): Move event parsing to\nParseEvents funtion.</li>\n<li>magick/utility.c (GetGeometry): Validate that the geometry\nstring only contains valid characters.</li>\n<li>PerlMagick/t/subroutines.pl (testMontage): It seems that passing\nan empty set of options to the SetImage method corrupts the image\noptions (surely a PerlMagick bug), so don't invoke SetImage unless\nthere are options to set.</li>\n</ul>\n</blockquote>\n<p>2003-06-04  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/command.c (VersionCommand): Add build information to\nversion output.</li>\n<li>configure.ac: Save configure/build parameters for later use in\nversion output.</li>\n</ul>\n</blockquote>\n<p>2003-06-04  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/meta.c: Added some casts to make things compile better.</li>\n</ul>\n</blockquote>\n<p>2003-06-03  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/meta.c: Was broken due to editing mistakes as well\nas inherent incompatability with MagickReallocMemory macro.</li>\n</ul>\n</blockquote>\n<p>2003-06-03  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/xpm.c (RegisterXPMImage): Module registration for PICON\nshould have been XPM.  Thanks to John Cristy for noticing this\nbug.</li>\n<li>coders/psd.c (ReadPSDImage): Applied John Cristy's patch to fix\na index calculation bug which is evident when QuantumDepth&gt;8.</li>\n</ul>\n</blockquote>\n<p>2003-06-02  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/meta.c: Eliminated some compiler warnings.</li>\n<li>magick/transform.c (ProfileImage): Eliminated some compiler\nwarnings.</li>\n<li>magick/static.c (RegisterStaticModules): Invoke\nRegisterXTRNImage if _VISUALC_ is defined.</li>\n</ul>\n</blockquote>\n<p>2003-06-02  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>utilities/gm.c: made -format work again but had to add off flag\nto MagickCommand to maintain backward compatability with previous\nversions of GM.</li>\n<li>magick/command.c: Added flag to tell MagickCommand whether GM is\nexpected to process metadata requests. The COM object *always* does.</li>\n<li>magick/transform.c: Added error handling, memory leak avoidance\nand performanc enhancment.</li>\n</ul>\n</blockquote>\n<p>2003-06-01  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>NEWS: Added Bug Fixes item with info about the JNG encoder fix.</li>\n</ul>\n</blockquote>\n<p>2003-06-01  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>NEWS: Listed significant changes (thus far) in version 1.1.</li>\n<li>version.sh: Updated LIBRARY_CURRENT and LIBRARY_REVISION since\nsome command.c interfaces have changed, and a new interface has\nbeen added. The only user of these interfaces should be <cite>gm</cite> but\nit always pays to be careful.</li>\n<li>utilities/gm.c (main): Use MagickCommand.</li>\n<li>magick/command.c (MagickCommand): New function to provide\nAPI-level command access to the command functions provided by the\nGM utility with an interface similar to ConvertImageCommand.\n(AnimateImageCommand): Changed function arguments to match\nConvertImageCommand.\n(ConjureImageCommand): Changed function arguments to match\nConvertImageCommand.\n(DisplayImageCommand): Changed function arguments to match\nConvertImageCommand.\n(ImportImageCommand): Changed function arguments to match\nConvertImageCommand.</li>\n<li>libxml/libxml2.def: Remove LIBRARY line since Visual C++ 6.0\ndoesn't like that the build library doesn't match the name\nspecified by LIBRARY.</li>\n</ul>\n</blockquote>\n<p>2003-05-31  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/magick.c (GetMagickInfoArray): Resolve thread-safety\nissue by accessing magick_list directly under the protection of a\nlock rather than using the pointer returned by GetMagickInfo.\nAdded error handling for insufficient memory.</li>\n<li>coders/tile.c (RegisterTILEImage): Added a usage note in formats\nlisting.</li>\n<li>coders/viff.c (RegisterVIFFImage): Module definition for &quot;XV&quot;\nwas missing.</li>\n<li>coders/ps2.c (RegisterPS2Image): Module definition for &quot;PS2&quot; was\nmissing.</li>\n<li>coders/wmf.c (RegisterWMFImage): Added usage note in formats\nlisting.</li>\n<li>coders/xpm.c (RegisterXPMImage): Hide PM alias for XPM in the\nformats listing.</li>\n<li>coders/logo.c (RegisterLOGOImage): Hide registrations for\nGRANITE, LOGO, and NETSCAPE in the formats listing.</li>\n<li>coders/jpeg.c (RegisterJPEGImage): Module definition for &quot;JPEG&quot;\nwas missing.</li>\n<li>coders/html.c (RegisterHTMLImage): Module definition for &quot;HTML&quot;\nwas missing.</li>\n<li>coders/bmp.c (RegisterBMPImage): Module names for &quot;BMP2&quot; and\n&quot;BMP3&quot; should be &quot;BMP&quot;.</li>\n</ul>\n</blockquote>\n<p>2003-05-30  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/magick.c (GetMagickInfoArray): New function to return\nMagickInfo array.\n(ListMagickInfo): Updated to use GetMagickInfoArray.\n(ListModuleMap): New function to list module map to a file.</li>\n<li>utilities/gm.c: Centered the file header and made note of this\nstupendously significant accomplishment.</li>\n<li>magick/command.c: Added a <cite>-list modulemap</cite> option. Added plural\nforms of other list options for people who are are not limited to\nthe singular.  Also <cite>-list font</cite> and <cite>-list fonts</cite> now work for\npeople who think in terms of fonts rather than type.</li>\n</ul>\n</blockquote>\n<p>2003-05-30  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>MNG encoder failed to set the JNG bit in the simplicity profile.</li>\n<li>MNG encoder failed to write FRAM chunks when all images were JNG.</li>\n<li>JNG encoder wrote the wrong alpha_sample_depth for opaque images.</li>\n</ul>\n</blockquote>\n<p>2003-05-29  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/magic.c (ReadConfigureFile): Removed bogus embedded magic\ndata and ensured that errors with loading magic.mgk propogate to\nthe top.</li>\n<li>magick/constitute.c (ReadImage): When building delegate error\nreport, handle the case where the filename is empty (such as for\n&quot;LOGO:&quot;).</li>\n<li>coders/png.c (WritePNGImage): Ensure that most severe exception\nis reported via exception argument.\n(ReadMNGImage): Ensure that most severe exception is reported via\nexception argument.</li>\n<li>magick/command.c (ConvertImageCommand): Ensure that most severe\nexception is reported via exception argument.\n(CompositeImageList): Ensure that most severe exception is\nreported via exception argument.\n(CompositeImageCommand): Ensure that most severe exception is\nreported via exception argument.</li>\n<li>magick/constitute.c (WriteImages): Ensure that most severe\nexception is reported via exception argument.</li>\n<li>utilities/gm.c: Centered file header because I didn't like it.</li>\n<li>locale/C.mgk: Removed some defunct messages.</li>\n<li>magick/blob.c (PingBlob): Report useful error message.\n(BlobToImage): Report sensible error message for null blob.</li>\n<li>magick/utility.c (AcquireString): Change UnableToAquireString to\nUnableToAllocateString.</li>\n<li>coders/xwd.c (ReadXWDImage): Report CorruptImage rather than\nCorruptXWDImage.</li>\n<li>coders/xpm.c (ReadXPMImage): Report CorruptImage rather than\nCorruptXPMImage.</li>\n<li>coders/xcf.c (load_level): Report CorruptImage rather than\nCorruptXCFImage.</li>\n<li>coders/wbmp.c (ReadWBMPImage): Report CorruptImage rather than\nCorruptWBMPImage.</li>\n<li>coders/pcd.c: Report CorruptImage rather than CorruptPCDImage.</li>\n<li>coders/otb.c (ReadOTBImage): Report CorruptImage rather than\nCorruptOTBImage.</li>\n<li>magick/constitute.c (ReadInlineImage): Report CorruptImage\nrather than CorruptInlineImage.</li>\n<li>coders/pdb.c (ReadPDBImage): Incorporated undocumented fix from\nImageMagick which obtains the image depth from the image depth\nattribute, and increases the packet memory allocation. Report\nCorruptImage rather than CorruptPDBImageFile.</li>\n</ul>\n</blockquote>\n<p>2003-05-28  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>VisualMagick/bin/modules.mgk: Add mapping from SVGZ to SVG.</li>\n<li>coders/modules.mgk: Add mapping from SVGZ to SVG.</li>\n<li>coders/svg.c (RegisterSVGImage): Add registration for SVGZ\nformat.</li>\n<li>PerlMagick/t/zlib/read.t: Added test to check reading a file\nwith .gz extension. The blob portion of the test currently fails.</li>\n<li>coders/wpg.c (ReadWPGImage): Fix reading WPGs with embedded\nPostscript. Ensure that scene numbers are sane. Bugs remain.</li>\n<li>magick/blob.c (OpenBlob): Recognize the .svgz extension as a\ngzipped format.  Not required in order to read .svgz files since\nthe blob file magic detects gzip files.</li>\n<li>magick/command.c (MontageImageCommand): Wrong exception\nmacro was being invoked.  Steps have been taken to ensure that\nthis doesn't happen again.\n(ImportUsage): Fix spelling of <cite>type</cite>.</li>\n<li>magick/magick.c (DestroyMagick): Decided that initialization\nstate should be tracked via an enum so that DestroyMagick will\ntake effect even if InitializeMagick has never been called.</li>\n</ul>\n</blockquote>\n<p>2003-05-27  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/png.c: png.c would dump core when writing a grayscale\nimage in png24 or png32 format.</li>\n</ul>\n</blockquote>\n<p>2003-05-26  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/ept.c (WriteEPTImage): Fixed writing EPT preview image and\nadded logging.</li>\n<li>magick/enhance.c (NegateImage): If image is in CMYK colorspace,\nthen negate the <cite>K</cite> channel as well.</li>\n<li>PerlMagick/Magick.xs: Fix spelling of <cite>elevation</cite> argument to\nShade method.</li>\n<li>magick/image.h (ImageInfo): Added more documenting comments.</li>\n<li>magick/image.c (CloneImage): Don't clone huffman ascii85\nencoding support structure since it is not useful outside of the\ncurrent image context. Cloning a structure via pointer assignment\ncauses a memory leak.</li>\n</ul>\n</blockquote>\n<p>2003-05-25  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/shear.c: Incorporate math tweaks obtained from\nImageMagick which are purported to improve accuracy when rotating\nand shearing using small angles. Also avoid unneccessarily\ntransforming CMYK images into RGB images.</li>\n<li>magick/paint.c (ColorFloodfillImage): Fix hang while\nfloodfilling using a pattern image with color similar to the\nborder color.</li>\n<li>coders/modules.mgk: Add missing mappings for PNG8,\nPNG24, and PNG32.</li>\n<li>VisualMagick/bin/modules.mgk: Add missing mappings for PNG8,\nPNG24, and PNG32.</li>\n</ul>\n</blockquote>\n<p>2003-05-23  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/log.c (GetLogBlob): Return an error if log.mgk can not\nbe accessed.</li>\n<li>locale/C.mgk: Added UnableToAccessLogFile.</li>\n<li>magick/blob.c (GetConfigureBlob): Only return result of\nNTResourceToBlob if it is non-NULL.</li>\n<li>magick/type.c (GetTypeBlob): Search $MAGICK_HOME for\ntype.mgk. Only return result of NTResourceToBlob if it is\nnon-NULL.</li>\n<li>magick/magick.c (GetMagickInfo): Return an error if GetModuleInfo\nreports an error.</li>\n<li>magick/module.c (GetModuleInfo): Return an error if modules.txt\nfails to load.</li>\n<li>utility.c (SubstituteString): Fixed a bug which was introduced\nwhile updating the code to use the memory allocation macros.</li>\n</ul>\n</blockquote>\n<p>2003-05-22  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/GraphicsMagick-config.in (usage): Added example\nusage to the help output.</li>\n<li>magick/magick.c (InitializeMagick): Added a static flag to\nensure that the Magick library is initialized only one time.\n(DestroyMagick): Ensure that Magick library resources are only\ndestroyed if it has previously been initialized.</li>\n<li>magick/nt_base.c (DllMain): Fix contributed by Achim Domma. For\na DLL build, update PATH during Magick DLL initialization to\ninclude the directory where the Magick core DLL resides. This\nallows the loadable modules to find the core DLLs, even if the\ncore DLLs are not already in the PATH.</li>\n<li>magick/image.c (TextureImage): Incorporate new implementation\nauthored by John Cristy of ImageMagick Studio.  This\nimplementation is a full 7X (run-time) or 14X (user-time) faster\nthan the original ImageMagick implementation, and is about 2X\nfaster than the speeded-up version I commited on the 19th.</li>\n</ul>\n</blockquote>\n<p>2003-05-20  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>VisualMagickconfigure : Fixed bug with add on (plug-ins) not\nbuilding automatically in DLL mode.</li>\n</ul>\n</blockquote>\n<p>2003-05-19  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c (TextureImage): Creation of tiled image textures\nis speeded up by 3.7X.</li>\n<li>coders/tile.c (ReadTILEImage): Use TextureImage.</li>\n<li>VisualMagick/bin/modules.mgk: Map &quot;PATTERN&quot; to &quot;LOGO&quot;.</li>\n<li>coders/modules.mgk: Map &quot;PATTERN&quot; to &quot;LOGO&quot;.</li>\n<li>coders/logo.c (ReadLOGOImage): Add &quot;PATTERN&quot; tiling support in\norder to be compatible with ImageMagick.</li>\n<li>magick/image.c (SetImageInfo): Map &quot;MAGICK&quot; magick to &quot;IMAGE&quot; in\norder to be compatible with ImageMagick.</li>\n</ul>\n</blockquote>\n<p>2003-05-18  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>www/Copyright.html: Try to fix formatting of XFig entry.</li>\n<li>www/windows.html: Update file names for 1.0.1 release.</li>\n<li>index.html: Mention 1.0.1 release as latest release.</li>\n<li>magick/magick_config_api.h.in: Add define for HasX11\nso that it is possible to use functions in the installed\nxwindow.h</li>\n<li>*/*.c: Updated to use MagickAllocateMemory macro.</li>\n</ul>\n</blockquote>\n<p>2003-05-17  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/png.c: stifled compiler warnings about uninitialized\nchunk and blob variables.</li>\n</ul>\n</blockquote>\n<p>2003-05-17  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/utility.h (MagickAllocateMemory): New macro to allocate\nmemory.\n(MagickFreeMemory): New macro to free memory.\n(MagickReallocMemory): New macro to reallocate memory.</li>\n<li>*/*.c,*/*.h: Updated to use MagickFreeMemory and\nMagickReallocMemory. Eliminated warnings when compiling with\nGCC 3.3 using -Wall.</li>\n<li>images: The logo image was determined to have a copyright\nproblem so replace with blank image until a replacement is\navailable.</li>\n</ul>\n</blockquote>\n<p>2003-05-16  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>VisualMagick/magick/magick_config.h.in (HAVE_SYS_TYPES_H):\nMoved this define back from nt_base.h since removing it was\ncausing some problems for Magick++.</li>\n</ul>\n</blockquote>\n<p>2003-05-14  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c: (SetMagickInfo): Don't mask failure to\nread magic.mgk.</li>\n<li>magick/constitute.c (ReadImage): Don't overwrite specific\nexception info.</li>\n<li>magick/nt_base.c (NTResourceToBlob): Add logging similar\nto that used in IsAccessible() in order to make operation\nmore clear.</li>\n<li>magick/module.c (FindMagickModule): Removed extraneous\n&quot;Searching for module file&quot; log event.\n(GetModuleBlob): Under Windows, don't clear or overwrite\nan existing exception.</li>\n<li>magick/nt_base.h: Imported some obscure defines from\nmagickmagick_config.h.</li>\n<li>VisualMagick/magick/magick_config.h.in: Improved description\ntext and formatting.  Moved some obscure defines to\nmagick/nt_base.h.</li>\n<li>locale/C.mgk: Added a &quot;RegistryKeyLookupFailed&quot; error message.</li>\n<li>magick/type.c (GetTypeBlob): Report registry key lookup\nfailures. Also ensure correct return value when an error is\nreported.</li>\n<li>magick/log.c (GetLogBlob): Report registry key lookup failures.</li>\n<li>magick/delegate.c (ReadConfigureFile): Report registry key\nlookup failures.</li>\n<li>magick/blob.c (GetConfigureBlob): Report registry key lookup\nfailures. Also ensure correct return value when an error is\nreported.</li>\n<li>magick/module.c (FindMagickModule): Report registry key lookup\nfailures. Also ensure correct return value when an error is\nreported.</li>\n<li>magick/nt_base.c (NTRegistryKeyLookup): Simplify base key lookup\ncode, and improve coding style.</li>\n<li>coders/logo.c, Copyright.txt, www/Copyright.html: Acknowledge\nand respect the XFig copyright.</li>\n<li>VisualMagick/installer/inc/files-documentation.isx: QuickStart.txt\nis no longer distributed so it is removed.</li>\n</ul>\n</blockquote>\n<p>2003-05-13  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.h (RoundToQuantum): New macro to round positive\ndouble to Quantum.</li>\n<li>magick/xwindow.c, magick/xwindow.h, magick/studio.h: Use FreeBSD\nportability fixes from FreeBSD ports collection.</li>\n<li>configure.ac: Test for &lt;machine/param.h&gt; as used by some *BSD systems.</li>\n<li>QuickStart.txt, www/QuickStart.html: Don't distribute QuickStart.txt or\nwww/QuickStart.html since the content doesn't currently apply to\nGraphicsMagick.</li>\n</ul>\n</blockquote>\n<p>2003-05-12  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>README.txt: Added text regarding where to obtain dcraw, a simple\nbut useful decoder for the proprietary raw file formats produced\nby digital cameras (58 supported cameras!).</li>\n<li>configure.ac: Added support for finding dcraw.</li>\n<li>VisualMagick/bin/delegates.mgk: Added support for dcraw.</li>\n<li>coders/delegates.mgk.in: Added support for dcraw.</li>\n<li>version.sh (PACKAGE_RELEASE_DATE): Extract the most recent\nupdate date from the ChangeLog file using awk.</li>\n</ul>\n</blockquote>\n<p>2003-05-12  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>modules.mgk, magic.mgk : Sync up both of these for UNIX\nas well as VisualMagick builds. Includes changes for the\nmeta.c code.</li>\n</ul>\n</blockquote>\n<p>2003-05-11  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>www/formats.html: Documented embedded gray intensity images.</li>\n<li>coders/logo.c: Added the embedded dithered gray intensity images\ngray0, gray5, ..., through gray100 to support bilevel filling and\npainting with an intensity resolution of 5%.</li>\n<li>www/formats.html: Added description of images available via\n&quot;IMAGE:&quot; format tag, as well as providing a tiled preview.</li>\n<li>coders/logo.c: Renamed &quot;transparent&quot; image to &quot;checkerboard&quot;\nsince it is a better description.  Added a set of tiny bilevel\nimages (accessed via IMAGE:) for use when tiling, filling, or for\nuse as a texture image.  The complete set of image names available\nvia the IMAGE: coder are now BRICKS, CIRCLES, CROSSHATCH,\nCROSSHATCH30, CROSSHATCH45, FISHSCALES, GRANITE, HEXAGONS,\nHORIZONTAL, HORIZONTALSAW, HS_BDIAGONAL, HS_CROSS, HS_DIAGCROSS,\nHS_FDIAGONAL, HS_HORIZONTAL, HS_VERTICAL, LEFT30, LEFT45,\nLEFTSHINGLE, LOGO, NETSCAPE, OCTAGONS, RIGHT30, RIGHT45,\nRIGHTSHINGLE, ROSE, SMALLFISHSCALES, CHECKERBOARD, VERTICAL,\nVERTICALBRICKS, VERTICALLEFTSHINGLE, VERTICALRIGHTSHINGLE, &amp;\nVERTICALSAW.  The HS_* variants are similar to the standard\npattern images provided with the Windows GDI.</li>\n<li>coders/msl.c (MSLStartElement): Don't reset gravity if the user\nprovides an x,y coordinate. Passing coodinates was loosing the\ngravity setting.</li>\n</ul>\n</blockquote>\n<p>2003-05-10  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/modules.mgk: Support the IMAGE: format via the LOGO\nmodule.</li>\n<li>win2k/IMDisplay/IMDisplayView.cpp (DoDisplayImage):\nTransparent tile is created by reading &quot;tile:image:transparent&quot;.</li>\n<li>coders/logo.c (ReadLOGOImage): Add IMAGE: format to front for\nembedded images so that adding new images doesn't proliferate coder\nregistrations. Legacy logo magick names (GRANITE, LOGO, NETSCAPE,\nand ROSE) are still supported, but they are also available in the\nIMAGE file space (e.g. IMAGE:ROSE).</li>\n</ul>\n</blockquote>\n<p>2003-05-09  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>VisualMagickconfigure : Further refinements that support both\nthe new &quot;big&quot; library and the normal dynamic DLL buidling styles.</li>\n</ul>\n</blockquote>\n<p>2003-05-09  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/logo.c (ReadLOGOImage): Added a &quot;TRANSPARENT&quot; pattern\nimage which can be tiled to form the background of transparent\nimages.</li>\n<li>win32/IMDisplay/IMDisplayView.cpp: When displaying images which\ninclude an opacity channel, use a checker-board pattern as the\nimage background so non-opaque pixels become evident.</li>\n</ul>\n</blockquote>\n<p>2003-05-07  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/meta.c : Add or fix commenting of DebugString so that\nmodule does not require Windows.</li>\n<li>lcms: Updated to release 1.10.</li>\n</ul>\n</blockquote>\n<p>2003-05-07  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>VisualMagickbin : Brought the MGK files back into sync with\nthe rest of the package and added types for meta.c.</li>\n<li>VisualMagickbinwin32ATL : removed config files in order to\nprevent very old ATL project from being picked up in the config</li>\n</ul>\n</blockquote>\n<p>2003-05-06  William Radcliffe  &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>VisualMagicklcmsLIBRARY.txt : a define to prevent popup message\nbox behaviour.</li>\n<li>VisualMagickconfigure: New feature - -t consolidates all the\ncoders into on library for the static build in order to make the\nbuild process tolerable.</li>\n<li>codersxtrn.c : new support for BSTR - wdie character data</li>\n<li>coderssvg.c : put back logic that allows the -size parameter to\ncontrol the pixel dimensions of the output image.</li>\n<li>codersmeta.c : added support for wide character parsing of iptc\nand 8BIM formats.</li>\n</ul>\n</blockquote>\n<p>2003-05-06  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>version.sh : Update to reflect development status.</li>\n</ul>\n</blockquote>\n<p>2003-05-05  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>GraphicsMagick 1.0 Released.</li>\n<li>version.sh (LIBRARY_REVISION): Updated for the 1.0 release.</li>\n<li>magick/studio.h: Add fix to avoid problems caused by zlib\nunder AIX.</li>\n<li>magick/cache.h: Parameterized prototypes to make them easier\nto follow.</li>\n<li>filters/analyze.c: Replace C++ comments with C comments.</li>\n<li>magick/command.c: For the composite, convert, identify, mogrify,\nand montage commands, make sure a usage error is returned if a\nusage message is printed. This is useful for ImageMagickObject\nusers who won't see the usage message if stdio is not supported.</li>\n<li>locale/C.mgk: Added &quot;UsageError&quot; error.  Added missing closure\nto &lt;Corrupt&gt; tag which caused most/many message lookups to fail.</li>\n<li>magick/nt_base.h: Fixed a compile problem caused by masking\ninternals in delegate.h</li>\n<li>magick/ImageMagick.rc: Added missing .mgk files.</li>\n</ul>\n</blockquote>\n<p>2003-05-04  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/nt_base.c (lt_dlerror): Defining lt_dlerror to be\nNTGetLastError was not a correct implementation since the\ninterface is defined to return a const pointer to a string, but\nNTGetLastError returns an allocated string, causing a memory leak\nif NTGetLastError is used in the place of lt_dlerror.  A new\nlt_dlerror function is added to fix this.\n(lt_dlsetsearchpath): lt_dlsetsearchpath should return an int\nand accept a const char *.\n(lt_dlsym): lt_dlsym is supposed to take a const char *.</li>\n<li>magick/nt_base.h: lt_dlclose should return an <cite>int</cite>.</li>\n<li>magick/nt_base.c (lt_dlclose): Return status from lt_dlclose.</li>\n<li>magick/module.c (lt_dlclose): lt_dlclose is supposed to return\nan <cite>int</cite>, not <cite>void</cite>. A return value of zero indicates success.</li>\n<li>VisualMagick/tests/run_constitute.bat: Add batch script to\nrun constitute tests.</li>\n<li>magick/module.c: Added a ltdl_initialized static flag to track\nif libltdl has been initialized by lt_dlinit().\n(TagToFunctionName): Use a stack buffer for the string rather than\nallocating heap data.\n(UnregisterModule): Report errors via exception info as the\ninterface suggests.\n(UnloadModule): Report errors via exception info as the interface\nsuggests.\n(DestroyModuleInfo): Only invoke lt_dlexit() if lt_dlinit() has\npreviously been invoked.</li>\n<li>locale/C.mgk: Added FailedToCloseModule module error.</li>\n<li>magick/module.c (UnloadModule): Report exception via exception\nparameter rather than simply printing out an error message and\nexiting.</li>\n<li>magick/Makefile.am (noinst_HEADERS): integral_types.h had to be\nlisted *somewhere* in order to make it into the distribution.</li>\n<li>Magick++/lib/Magick++/Image.h: InitializeMagick must be DLL\nexported.</li>\n</ul>\n</blockquote>\n<p>2003-05-03  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Makefile.am (magick-version): Perform version.isx substitutions\nvia Makefile.am rather than configure.</li>\n<li>magick/magick_config_api.h.in: Added template header for\nthe installed magick_config.h.</li>\n<li>magick/magick.c (InitializeMagick): Improved the signal handling\nand registration method. Signal handlers are only registered for a\nsignal if the current signal handling disposition for that signal\nis set to the default (SIG_DFL). When a signal is caught,\nDestroyMagick is invoked, the handling for the signal is set back\nto SIG_DFL, and then the signal is re-raised to trigger the\ndefault handler for that signal. This causes the process to behave\nas closely to the default as possible (e.g. generating a core\nfile) while ensuring that DestroyMagick is executed. This also\nensures that signal handlers registered by API users are not\noverridden by invoking InitializeMagick.</li>\n<li>configure.ac: Added tests for sigemptyset and\nsigaction.\nAdd a check for the return type of signal handlers.\nTest for the <cite>raise</cite> function.</li>\n<li>www/formats.html: Add an entry for CUR, Microsoft\nCursor Icon format.</li>\n</ul>\n</blockquote>\n<p>2003-05-02  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/semaphore.c (struct SemaphoreInfo): Added\n<cite>locked</cite> and <cite>thread_id</cite> members. These are used to record\nif the semaphore is locked, and to validate the thread\nID of the unlocker.</li>\n<li>www/links.html: Added link to Nathan Day's MagickDocs\n&quot;ImageMagick and GraphicsMagick documentation project&quot;\nsite.\nAdded a link to an on-line article regarding the PHP front-end\nto ImageMagick.</li>\n<li>coders/icon.c (ReadIconImage): Add support for Windows\n.CUR format based on advice from Jean Piquemal.</li>\n<li>magick/image.c (SetImageInfo): Added missing CloseBlob\nin error path for failure to allocate temporary file.</li>\n<li>coders/pcx.c (ReadPCXImage): Added support for reading\nuncompressed PCX images based on code from Jean Piquemal.</li>\n</ul>\n</blockquote>\n<p>2003-05-01  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/effect.c (AddNoiseImage): For gray images, wrong\npointer was being used to evaluate intensity, leading to a\nblack image with noise.</li>\n<li>magick/image.c (ChannelImage): Return the channel\nimage in RGBColorspace. Also properly support extracting\nthe opacity channel for images which are not CMYK.</li>\n</ul>\n</blockquote>\n<p>2003-04-30  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/Makefile.am (install-data-local): Install\nmagick_config_api.h rather than magick_config.h.</li>\n<li>magick/api.h: Removed inclusion of integral_types.h from\nmagick/api.h.  It is included by magick/studio.h.</li>\n<li>magick/delegate.h: Mapped out a block of private implementation\ncode.</li>\n<li>configure.ac: Perform substitutions on magick_config_api.h.</li>\n<li>magick/magick_config_api.h.in: New header file template to\nuse for installed magick_config.h.</li>\n<li>magick/studio.h (MAGICK_IMPLEMENTATION): Added the define\nMAGICK_IMPLEMENTATION used to enable private types, includes, and\ndefines in the headers. This supports hiding implementation stuff\nthat API users shouldn't see in the headers.</li>\n<li>utilities/Makefile.am (check): Cleaned up the utilities\ntest/demo a bit as well as using the undocumented &quot;tmp:&quot; prefix to\ncause GraphicsMagick to remove temporary input files once they\nhave been read.  This leaves just the final output file\n&quot;demo.miff&quot; when the test completes.</li>\n<li>coders/jpeg.c (WriteJPEGImage): If the image resolution is\noverwritten with 72DPI, make sure that the resolution units are\nset to PixelsPerInchResolution.</li>\n<li>coders/jpeg.c (WriteJPEGImage): Don't overwrite the image\nresolution if it is valid.</li>\n<li>magick/command.c (MogrifyImageCommand): Added -resample\noption to match documentation.</li>\n<li>VisualMagick/configure: Added rpcrt4.lib to project settings\nfor Visual C++ 6.0 so that configure links.  The code which\nneeds these interfaces is to support Visual C++ 7.0 XML-style\nproject files.</li>\n</ul>\n</blockquote>\n<p>2003-04-30  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>utilities/Makefile.am (check) Change % to %% in -label parameter.</li>\n<li>www/gm.html, utilities/gm.1, etc. Documented use of %% to convey\nthe % sign in -format, -comment, -label strings.</li>\n</ul>\n</blockquote>\n<p>2003-04-30  William Radcliffe &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/command.c: Changes from 2003-04-19 to free the arg\nlist when it was still pointed to by the option arg and accessed\non an exception. This caused gm to crash on any erroneous command\nline argument.</li>\n</ul>\n</blockquote>\n<p>2003-04-29  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>www/windows.html: Updated to match current installer.</li>\n<li>VisualMagick/installer/inc/tasks-install-devel.isx (Name):\nAdded an installation checkbox so the user can select to install\ndevelopment headers and libraries for C &amp; C++.</li>\n<li>VisualMagick/installer/inc/files-perlmagick.isx (Source):\nOnly install PerlMagick PPD files if the user selects to install\nPerlMagick.</li>\n<li>VisualMagick/installer/inc/files-com.isx (Source): Only\ninstall ImageMagickObject files if the user selects to install\nImageMagickObject.</li>\n<li>magick/version.h.in: Added some documentation for the\nfunctioning of MagickLibVersion and MagickLibVersionNumber.</li>\n<li>configure.ac: Perform substutions to create\nVisualMagick/installer/inc/version.isx from\nVisualMagick/installer/inc/version.isx.in. This allows Windows\nversioning info to be updated from info in version.sh.</li>\n<li>Makefile.am (magick-version): For a VPATH build, update\nVisualMagick/installer/inc/version.isx in the source directory if\nit is out of date.</li>\n</ul>\n</blockquote>\n<p>2003-04-28  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/cache.c: CloneImagePixels(): applied Cristy's bugfix\nfrom IM-5.5.7.</li>\n</ul>\n</blockquote>\n<p>2003-04-28  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>www/api.html: The demo program on the ImageMagick API page is\nusually intended to be an exercise for the reader.  It rarely\ncompiles or works.  Sure enough the demo code was not even close\nto compiling, didn't run, and did something totally different than\ndescribed. This is not a good way to treat new users.  Now the\ndemo program compiles and runs, and its description is correct.</li>\n<li>www/magick.css, www/smile.c: Remove &quot;Pair&quot; advertisement which\nwas discovered appended at the end of these files.</li>\n<li>coders/jpeg.c (ReadJPEGImage): Check for failure of\nAllocateImage.  Close blob prior to error return.</li>\n<li>configure.ac: Perform substitutions on magick/version.h</li>\n<li>magick/version.h.in: New file to provide base for configured\nmagick/version.h</li>\n<li>version.sh (PACKAGE_RELEASE_DATE): Support setting a package\nrelease date.</li>\n<li>configure.ac: Perform substitutions on PerlMagick/Magick.pm.in to\ncreate PerlMagick/Magick.pm.in.</li>\n<li>PerlMagick/Magick.pm.in: &#64;PACKAGE_VERSION&#64; is substituted while\nconfiguring PerlMagick/Magick.pm.</li>\n<li>magick/magic.mgk, VisualMagick/bin/magic.mgk: Removed risky\nentry for PICT which has been demonstrated to lead to a false\nmatch in the real-world.</li>\n<li>coders/pict.c (ReadPICTImage): Ensure that PICT decoder don't\nloop forever with an EOF condition if none of the PICT op-codes\nencountered result in a condition which terminates the input loop.\nIf EOF is dectected while in the input loop a &quot;corrupt image&quot;\n&quot;unexpected end of file&quot; error is reported.</li>\n<li>VisualMagick/installer: Updated installer.</li>\n</ul>\n</blockquote>\n<p>2003-04-26  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/magick.c, magick/blob.c, magick/studio.h: Added\nCompilation fixes recommended by Harold Bien for for Borland C++.</li>\n<li>www/contribute.html: Added text regarding contributing to\nGraphicsMagick.</li>\n<li>www/api/types.html: Documentation for GraphicsMagick API types\nmoved from www/api/types/*.html into this one file.  Types\ndocumentation is still very much under development.</li>\n<li>README.txt: Added note regarding the download location for free\nWindows fonts which are kindly made available by Microsoft.</li>\n<li>VisualMagick/installer/gm-dynamic-full-*.iss: Install\nnt_base.h and nt_feature.h.</li>\n</ul>\n</blockquote>\n<p>2003-04-24  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>www/windows.html: Updated for GraphicsMagick 1.0 and to\nlink to ImageMagickObject.html.</li>\n<li>www/programming.html: Added link to ImageMagickObject.html.</li>\n<li>www/ImageMagickObject.html: New file to provide some\ndocumentation for ImageMagickObject.</li>\n<li>www: Found and fixed broken URL links.</li>\n</ul>\n</blockquote>\n<p>2003-04-23  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>FlashPIX: Applied patches from FreeBSD.  Bumped package\nversion to version to 1.2.0.8.</li>\n<li>www/api.html: Updated to reflect GraphicsMagick</li>\n<li>www/*.html: Updated with format_c_api_docs script.</li>\n<li>Makefile.am (format_c_api_docs): Add a target to update\nthe C API documentation.</li>\n<li>scripts/format_c_api_docs: Add script which extracts and\nformats the C API documentation into HTML files in the www/api\nsubdirectory.</li>\n</ul>\n</blockquote>\n<p>2003-04-22  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>version.sh (PACKAGE_VERSION): Update release version ID.</li>\n<li>magick/version.h (MagickReleaseDate): Update release date.</li>\n<li>magick/constitute.c (ConstituteImage): Fixed problems with\nreading intensity (gray) pixel arrays.</li>\n<li>magick/image.c (GrayscalePseudoClassImage): Use\nScaleQuantumToIndex rather than ScaleQuantumToMap.</li>\n<li>magick/constitute.c (ConstituteImage): Use ScaleQuantumToIndex\nmacro to scale integral intensity values to colormap range.</li>\n<li>magick/image.h (ScaleQuantumToIndex): New macro to scale a\nquantum to the maximum range of a colormap index.  Useful when\nwriting to PsuedoClass grayscale images.</li>\n<li>VisualMagick/tests/run_constitute.bat: Batch script to run\nconstitute tests.</li>\n<li>VisualMagick/installer/*.iss: Updated for Beta1 release.</li>\n</ul>\n</blockquote>\n<p>2003-04-22  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>utilities/Makefile.am (check) fixed typos (RM -&gt; RMDelegate\nand removed stray &quot;gm&quot;), added -random-threshold, ordered-dither.</li>\n<li>magick/effect.c: Random-threshold was not treating non-gray\nPseudoColor images correctly.</li>\n</ul>\n</blockquote>\n<p>2003-04-21  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>utilities/Makefile.am (check): Added code to put logo on demo\noutput.</li>\n<li>magick/command.c (MontageImageCommand): Pass exception rather\nthan &amp;image-&gt;exception because image may be null, and it is\npointless to store the exception where it will not be reported to\nthe user anyway.</li>\n<li>utilities/Makefile.am (check): Ported Glenn Randers-Pehrson's\nutilities demo script into the Makefile to serve as a check\ntarget.\n(check): Add definition to find Generic.ttf.</li>\n<li>locale/C.mgk: Fixed syntax error in &lt;Option&gt;&lt;FatalError&gt;\nsection.</li>\n<li>www/development.html: New file to describe development\nprocess.</li>\n<li>index.html, www/*.html: Added link to development.html\nand improved formatting a bit.</li>\n</ul>\n</blockquote>\n<p>2003-04-21  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Fixed bug with compiling png.c with libpng versions\nolder than libpng-0.95.</li>\n</ul>\n</blockquote>\n<p>2003-04-20  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>www/programming.html: Added links to Delphi and Scheme\nprogramming interfaces.</li>\n<li>configure.ac : Removed outdated test for jp2conf.h.</li>\n</ul>\n</blockquote>\n<p>2003-04-19  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/command.c: Add argument expansion and deallocation code\nto command functions which lacked this functionality.\nReplace calls to Exit with a return to the invoking function.</li>\n<li>utilities/gm.c: Expect each subcommand to expand and deallocate\nits own argument list.  Treat subcommands more similarly.</li>\n<li>magick/magick.c (InitializeMagick): Seed the random number\ngenerator.</li>\n<li>magick/utility.c (ExpandFilenames): Handle tilde expansion\nproperly. Handle relative glob specifications. Skip over &quot;*&quot;\nargument to +profile properly. Don't expand VID: specifications\nsince the VID: coder will execute ExpandFilenames() later. Apply\nformat specifier prefix to globbed file names. Fix double frees\nand rationalize memory management by always copying to a new\nvector.</li>\n</ul>\n</blockquote>\n<p>2003-04-17  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/magick.c (InitializeMagick): Decided to\nmove clean-up signal-handler registration from gm.c\nto magick.c in order to ensure that resources are\ncleaned up for all library users. This means that\nif a user program wants to do something special for\nsignals registered to be caught by InitializeMagick\n(SIGHUP, SIGINT, SIGQUIT, SIGABRT, SIGTERM, SIGXCPU,\n&amp; SIGXFSZ) then the user program should register its\nown signal handlers after invoking InitializeMagick.\nThe user is then responsible for making sure that\nDestroyMagick is invoked if an unexpected signal is\ncaught.</li>\n<li>tests/Makefile.am (check-constitute): Added\nconstitute tests.</li>\n<li>magick/constitute.c: New test program to ensure\nthat ConstituteImage and DispatchImage are working\ncorrectly.</li>\n</ul>\n</blockquote>\n<p>2003-04-16  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>www/download.html: Added links to directories\nat ftp.graphicsmagick.org.</li>\n<li>index.html: Add notice regarding 1.0 Beta0\navailability.</li>\n<li>www/cvs.html: Updated CVS checkout information to\ninclude the GraphicsMagick-1_0 branch.</li>\n<li>coders/psd.c (ReadPSDImage): Applied patch\n(SourceForge patch ID 722849) from Derry Bryson to\nfix a memory leak. An image was being leaked.</li>\n<li>magick/constitute.c (DispatchImage): Applied patch\n(SourceForge patch ID 722655) from Derry Bryson to\ncorrectly use the switch_map array rather than the\nmap array.  Without this patch, DispatchImage does\nnot work at all.</li>\n<li>GraphicsMagick 1.0.0-beta0 release.</li>\n<li>version.sh: Updated for beta0 release.</li>\n<li>*.c magick/*.h: Update header inclusion to include\n&quot;magick/&quot; prefix in order to ensure that there is no\nconfusion with headers from another package.</li>\n</ul>\n</blockquote>\n<p>2003-04-16  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/effect.c: 4x4 ordered dither threshold was\nincorrect.</li>\n</ul>\n</blockquote>\n<p>2003-04-15  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/resource.c (InitializeMagickResources):\nAdded the ability to obtain the amount of physical\nmemory by executing an external command.</li>\n<li>configure.ac: Check for getpagesize().\n(MAGICK_PHYSICAL_MEMORY_COMMAND): Added a test for\nan external command which (quickly) returns the\namount of physical memory installed on the machine.\nCurrently only activated for FreeBSD.\n(MAGICK_PHYSICAL_MEMORY_COMMAND): Use sysctl to\ndetermine total physical memory for Darwin.</li>\n<li>magick/delegate.c (ListDelegateInfo): If COLUMNS\nenvironment variable is set, then use it to obtain\nthe screen width.  Some shells dynamically update\nCOLUMNS, but COLUMNS may need to be explicitly\nexported in order for it to be seen by subordinate\nprograms (such as gm).</li>\n<li>magick/effect.c (AddNoiseImage): Use IsGrayImage()\nto check if the image is gray.  Add missing columns\nloop for intensity case (oops!).</li>\n<li>magick/command.c (DisplayImageCommand): Fix\n-dispose option processing bug reported by\nFelix Heimbrecht.</li>\n<li>coders/fpx.c: Check status from FPX_InitSystem().</li>\n</ul>\n</blockquote>\n<p>2003-04-14  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>configure.ac: Define PERLMAINCC to be the C compiler\nif there are no C++ dependencies, or the C++ compiler\nif there are C++ dependencies.</li>\n<li>PerlMagick/Makefile.PL.in: Use PERLMAINCC to compile\nand link perlmain.c.  This allows using the C++ compiler\nto link, which is useful when the build depends on C++\nlibraries like libfpx.</li>\n<li>ltmain.sh: Updated to libtool 1.5 release.</li>\n<li>Makefile.am ($(PERLMAGICK)/$(PERLSTATICNAME)): Add\nrules to make sure that static PerlMagick is linked\nagainst the current GraphicsMagick library.</li>\n<li>coders/miff.c (ReadMIFFImage): Properly scale\ncolormap entries.</li>\n<li>magick/image.c (TransformRGBImage): Eliminate 32-bit\ninteger overflow condition for Q:32 build while\ntransforming CMYK pixels.</li>\n</ul>\n</blockquote>\n<p>2003-04-13  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>PerlMagick/t/ttf/read.t: Updated signatures and\nreference image for FreeType 2.1.4.</li>\n<li>(PerlMagick/t/write.t, PerlMagick/t/montage.t,\nPerlMagick/t/rad/read.t, PerlMagick/t/rad/write.t):\nFix signatures which were thrown off by previous\nchange to how signatures are specified to functions\nin subroutines.pl.</li>\n<li>PerlMagick/t/cgm/read.t: Updated to use reference\nimage.</li>\n<li>PerlMagick/Makefile.PL.in: Perform substitutions\non generated Makefile to ensure that the proper\n-lGraphicsMagick is used for a static build.</li>\n<li>ttf: Updated to FreeType 2.1.4.  Now stored in\nCVS as delegates/freetype2 rather than delegates/ttf\nso be sure to re-checkout the ttf directory so that\nthe correct files are used.</li>\n<li>wmf/incude/libwmf/api.h: Updating FreeType caused\na problem since it introduced a copy of zlib and\napi.h included zlib.h.  Fixed problem by adding\na typedef for gzFile and not including zlib.h.</li>\n<li>utilities/gm.c: Fixed minor compilation problem\nunder Windows caused by a typo in the signal\nhandler registration code.</li>\n</ul>\n</blockquote>\n<p>2003-04-12  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Makefile.am: When building a static PerlMagick,\nbuild PerlMagick as part of the <cite>all</cite> target and\ndon't do a <cite>make clean</cite> of PerlMagick at install\ntime.</li>\n<li>configure.ac (LIB_DPS): Add check to see if -lXt\nis required by -ldps.  XFree86 -ldps requires -lXt.</li>\n<li>FlashPIX: FlashPIX library now compiles under\nFreeBSD 5.0.</li>\n<li>magick/deprecate.c (ValidateColormapIndex): Remove\nnon-interface deprecated function.</li>\n<li>magick/tempfile.c (AcquireTemporaryFileDescriptor):\nPriortize use of mkstemp() over tempname() since *BSD\ncompilers whine about tempname() (although we do use\ntempname() safely).</li>\n<li>magick/color.c (ConstrainColormapIndex): Removed\nfunction since it is no longer used.</li>\n<li>magick/utility.c (TemporaryFilename): Removed\nTemporaryFilename utility function since it is\nno longer used and it makes *BSD compilers\ncomplain.</li>\n<li>magick/studio.h: Don't define _ISOC99_SOURCE,\n_POSIX_C_SOURCE, or _XOPEN_SOURCE when compiling\nunder FreeBSD since this maps out a <cite>ushort</cite>\ndefinition required by /usr/include/sys/ipc.h.</li>\n</ul>\n</blockquote>\n<p>2003-04-11  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/png.c: Some grayscale PNG images and the\nJNG alpha channel were decoded improperly at Q:32.</li>\n<li>magick/constitute.c (PopImagePixels): Changed many\ninstances of (Quantum) typecast to (unsigned char).</li>\n</ul>\n</blockquote>\n<p>2003-04-10  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>PerlMagick/t/tiff/read.t: Added signature for 12-bit\nTIFF test and a Q:32 build.</li>\n<li>PerlMagick/t/subroutines.pl: Extended routines\nwhich are signature based to accept signatures for\nQ:32 as well.</li>\n<li>PerlMagick/t/wmf/read.t: Relax error values slightly\nto pass at Q:32.</li>\n<li>coders/miff.c (PushImageRLEPixels): Fix reading\nRLE MIFF at Q:32.  A fragment of old code was being\nused to obtain the length.\n(WriteRunlengthPacket): Fix writing RLE MIFF at Q:32.\nIn most cases the wrong scaling macro was being used.</li>\n<li>tests/Makefile.am (check-miff): Added MIFF tests\nfor supported compression options.</li>\n</ul>\n</blockquote>\n<p>2003-04-09  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/color.c (QueryColorDatabase): Extended to\nsupport parsing Q:32 hex color specification strings.\nAlso add error reporting for failure to parse the\ncolor specification. This resolves a bug that drawing\nvia the draw.c APIs was not working for Q:32 builds.</li>\n<li>utilities/gm.c (main): Add signal handlers to\nmake sure that program cleans-up on exit by invoking\nDestroyMagick.</li>\n<li>magick/draw.c (DrawSetFillColor): Quote color\nspecification.\n(DrawSetStrokeColor): Quote color specification.\n(DrawSetTextUnderColor): Quote color specification.</li>\n<li>ltmain.sh: Update to latest CVS libtool.</li>\n</ul>\n</blockquote>\n<p>2003-04-08  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/enhance.c (NormalizeImage): Only normalize the opacity\nchannel if image-&gt;matte is true. This results in some (15%)\nspeedup. While it can be argued that the <cite>K</cite> in CMYK should be\nnormalized, it can also be argued that this is senseless since <cite>K</cite>\nis not a &quot;linear&quot; measure like C, M, &amp; Y are, and there may not be\nany any value to normalizing CMY at all.\n(EqualizeImage): Only equalize the opacity channel if image-&gt;matte\nis true.  This results in a 23% speedup.\n(GammaImage): Minor loop optimization.\n(LevelImage): Don't level the opacity channel.  Doing so doesn't\nmake any sense.\n(LevelImageChannel): Put loops inside switch statement rather than\naround it.</li>\n<li>PerlMagick/t/tiff/read.t: Added grayscale 12-bit and 16-bit TIFF\nread tests.</li>\n</ul>\n</blockquote>\n<p>2003-04-07  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/tiff.c (ReadTIFFImage): Add support for reading\n12-bit grayscale TIFFs. Fix reading 16-bit grayscale TIFFs\nwhen QuantumDepth=8.</li>\n<li>VisualMagick/installer/gm-dynamic-full-8.iss,\nVisualMagick/installer/gm-dynamic-full-16.iss: Many C header\nfiles were not being included in the distribution.  Oops!</li>\n</ul>\n</blockquote>\n<p>2003-04-06  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>(index.html, www/*.html): Update to new web page style.</li>\n<li>scripts/txt2html: Update to output new web page style.</li>\n<li>ltmain.sh: Updated to latest CVS libtool.</li>\n<li>magick/tempfile.c (DestroyTemporaryFiles): Function was\ncrashing if it was executed twice.</li>\n</ul>\n</blockquote>\n<p>2003-04-05  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/delegates.mgk.in: Ralcgm was appending &quot;.ps&quot; to the\nprovided output file name, so change cgm delegate command so that\nthe input file is delivered via standard input, output is\nre-directed to a file, and anything printed to stderr (such as\nthe Ralcgm program name and version) is sent to /dev/null.</li>\n<li>INSTALL-unix.txt: Added/corrected/improved documentation\nregarding --disable-installed, --enable-shared, and\n--with-modules.</li>\n<li>VisualMagick/magick/magick_config.h.in: Add more documentation\nand explanatory notes in order to lessen confusion.</li>\n<li>Many files: Replaced &quot;UseInstalledImageMagick&quot; with\n&quot;UseInstalledMagick&quot; for obvious reasons.</li>\n</ul>\n</blockquote>\n<p>2003-04-04  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/command.c, utilities/gm.c: Print &quot;help&quot; screen for a\ntool when user types &quot;gm tool&quot; or &quot;gm tool -help&quot;</li>\n<li>magick/command.c, magick/effect.c: add -ordered-dither option.</li>\n</ul>\n</blockquote>\n<p>2003-04-04  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>locale/C.mgk: Fixed message associated with\n&quot;UnableToCreateTemporaryFile&quot;.</li>\n<li>magick/tempfile.c (AcquireTemporaryFileDescriptor): Decided\nto return a pathname (if possible), even on failure, for use\nin error reports.  The function return status should be used\nto determine if the function has succeeded.</li>\n<li>locale/locale.mgk: Updated copyright header.</li>\n<li>(magick/annotate.c, magick/attribute.c, magick/blob.c,\nmagick/cache.c, magick/constitute.c, magick/delegate.c,\nmagick/display.c, magick/image.c, magick/locale.c\nmagick/tempfile.c, magick/tempfile.h, magick/utility.c,\nmagick/xwindow.c, coders/dcm.c, coders/ept.c,\ncoders/histogram.c, coders/mpeg.c, coders/pdf.c,\ncoders/pict.c, coders/preview.c, coders/ps2.c,\ncoders/ps3.c, coders/ps.c, coders/pwp.c, coders/sfw.c,\ncoders/svg.c, coders/tiff.c, coders/url.c, coders/wpg.c):\nEnsure that failure to allocate/create temporary file is\nproperly detected and reported.</li>\n</ul>\n</blockquote>\n<p>2003-04-03  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/type.c (GetTypeBlob): Prioritize hard-coded path\nover Windows registry values.</li>\n<li>magick/log.c (GetLogBlob): Prioritize hard-coded path\nover Windows registry values.</li>\n<li>magick/blob.c (GetConfigureBlob): Prioritize hard-coded path\nover Windows registry values.</li>\n<li>magick/delegate.c (ReadConfigureFile): Perform substitutions\nfor &quot;&#64;GMDelegate&#64;&quot;, &quot;&#64;GMDisplayDelegate&#64;&quot;, &quot;&#64;MPEGDecodeDelegate&#64;&quot;,\n&quot;&#64;MPEGEncodeDelegate&#64;&quot;, and &quot;&#64;HPGLDecodeDelegate&#64;&quot; while reading\ndelegates.mgk under windows.\n(ListDelegateInfo): Format delegate command line to multiple\nlines if necessary rather than truncating.</li>\n<li>configure.ac (MagickBinPathDefine): Added support for\na MagickBinPath definition.</li>\n<li>configure.ac (GSVersion): Added test to obtain version\nof installed Ghostcript.</li>\n<li>magick/tempfile.c (AcquireTemporaryFileDescriptor): Open\nflag should have been O_RDWR, not O_WRONLY!</li>\n</ul>\n</blockquote>\n<p>2003-04-03  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/utility.c: Simplified skipping over the &quot;*&quot; in\nthe +profile &quot;*&quot; option when expanding filenames.</li>\n</ul>\n</blockquote>\n<p>2003-04-02  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>VisualMagick/bin/delegates.mgk: Update similarly to\ncoders/delegates.mgk.in.</li>\n<li>coders/delegates.mgk.in: Replaced <cite>mpeg-decode</cite> delegate\nspecification with <cite>mpeg</cite> delegate specification.</li>\n<li>PerlMagick/t/mpeg/read.t: Since -r option is no longer\nsupplied to mpeg2decode, the signatures must be updated.</li>\n<li>magick/utility.c (ExpandFilenames): Skip over no-argument\ncommands properly.</li>\n<li>coders/mpeg.c: Removed ReadMPEGImage since this is handled\nentirely by delegate now.</li>\n<li>magick/command.c: Add convert -temporary option for use\nwhen input files are temporary files which should be\nautomatically removed.</li>\n<li>magick/delegate.c (InvokeDelegate): Ensure that temporary\nfile access is secure.</li>\n<li>coders/ept.c (ReadEPTImage): Ensure that temporary file\nspecified by image_info-&gt;filename is liberated before\nallocating a new temporary file name.</li>\n<li>coders/ps.c (ReadPSImage): Ensure that temporary file\nspecified by image_info-&gt;filename is liberated before\nallocating a new temporary file name.</li>\n<li>coders/pdf.c (ReadPDFImage): Change TemporaryFilename\nto AcquireTemporaryFileName.</li>\n<li>magick/tempfile.c (LiberateTemporaryFile): Now takes\na <cite>char *</cite> argument rather than <cite>const char *</cite>, and\nerases the provided filename if it is the name of a valid\ntemporary file. This helps avoid errors. The return\nstatus may be used to determine if a file was removed.\n(AcquireTemporaryFileDescriptor): Decided that adding a\n.tmp extension to temporary file names is unnecessary.</li>\n<li>coders/jp2.c (WriteJP2Image): Destroy pixel matrix\nafter encoding image.  Cristy says that there is memory\ncorruption otherwise.</li>\n</ul>\n</blockquote>\n<p>2003-04-01  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/png.c: Use new temporary file manager for JNG components.\nMerge with IM 5.5.7 (mostly cosmetic changes).</li>\n</ul>\n</blockquote>\n<p>2003-03-30  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/cache.c (OpenCache): Add some Windows-specific\nopen options.</li>\n<li>magick/resource.c (InitializeMagickResources): Increase\nthe number of &quot;lowio&quot; file handles available for use under\nWindows.</li>\n<li>ltdl/ltdl.c: Incorporate more Darwin fixes from CVS libtool.</li>\n<li>coders/pcx.c (ReadPCXImage): Incorporate bugfix from\nImageMagick -- Not enough memory allocated for reading PCX\n(bug report by Trevor Willis).</li>\n<li>magick/magick.c (InitializeMagick): Only invoke\nSetLogEventMask() to set debug options based on\ngetenv(&quot;MAGICK_DEBUG&quot;) if the environment variable is set.</li>\n</ul>\n</blockquote>\n<p>2003-03-29  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/tempfile.c: Include tempfile.h rather than temporary.h</li>\n<li>magick/magick.c: Include tempfile.h rather than temporary.h</li>\n<li>coders/dcm.c, coders/ept.c, coders/histogram.c, coders/mpeg.c,\ncoders/pdf.c, coders/pict.c, coders/preview.c, coders/ps.c,\ncoders/ps2.c, coders/ps3.c, coders/pwp.c, coders/sfw.c,\ncoders/svg.c, coders/tiff.c, coders/url.c, coders/wpg.c,\nmagick/annotate.c, magick/attribute.c, magick/blob.c,\nmagick/cache.c, magick/constitute.c, magick/delegate.c,\nmagick/display.c, magick/image.c, magick/magick.c,\nmagick/utility.c, magick/xwindow.c: Updated to use new temporary\nfile allocation APIs.</li>\n<li>magick/tempfile.c: New temporary file allocation subsystem for\nallocating, tracking, and deallocating temporary files.  Use of\nthis subsystem should reduce the likelyhood that temporary\nfiles will be left behind once the process exits.\nIf the environment variable MAGICK_TMPDIR is set, then its\nvalue is used as the location to place temporary files.</li>\n<li>magick/utility.c (IsAccessibleAndNotEmpty): New function\nfor testing for file exists, is a regular file, and is not empty.\nUsed to test if a temporary file has been updated by a delegate.</li>\n<li>magick/log.c (SetLogEventMask): Add support for setting\nTemporaryFileEvent.</li>\n<li>PerlMagick/Magick.xs: Added TemporaryFile log event type.</li>\n<li>magick/log.h (LogEventType): Add TemporaryFileEvent event\nclassification.</li>\n</ul>\n</blockquote>\n<p>2003-03-29  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/resize.c (SampleImage) and magick/render.c (DrawAffineImage():\nApplied Cristy fix for bug that offset images to the top and left.</li>\n<li>magick/resize.c (ScaleImage): Fixed bug that caused intensity\nlevels to be one unit too high.</li>\n<li>coders/png.c: make JNG support depend on HasJPEG. Remove temp files.</li>\n</ul>\n</blockquote>\n<p>2003-03-27  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/resize.c (ResizeImage): Applied fix authored by John\nCristy for distortion when using the bessel filter.</li>\n<li>magick/display.c: Applied fix authored by John Cristy which\neliminates bogging down when using the magnifier window on\nlarge images.</li>\n<li>Several files: A few files included multiple copies of the\ncopyright header text due to either pilot error, or equipment\nfailure.</li>\n</ul>\n</blockquote>\n<p>2003-03-26  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>tests/Makefile.am : Removed some debug code which was\naccidentally committed to CVS.</li>\n<li>Copyright.txt: Add copyright statements to all the files,\nincluding some apparently missing copyrights.</li>\n</ul>\n</blockquote>\n<dl class=\"docutils\">\n<dt>2003-03-25  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</dt>\n<dd><ul class=\"first last simple\">\n<li>magick/Makefile.am: Added temporary.c and temporary.h. These\nare not finished yet.</li>\n<li>magick/cache.c: Transferred optimization from ImageMagick\nto read/write all requested pixel cache rows in one system\ncall when accessing the cache using file I/O, and the\nrequested columns equals the image columns.</li>\n<li>magick/resource.c: (ResourceInfo): Use type <cite>double</cite> rather\nthan <cite>long double</cite>. For many systems, the range of <cite>long double</cite>\nis the same as <cite>double</cite>.  On others, use of <cite>long double</cite> incurs\nthe cost of function calls since there is no hardware support.</li>\n</ul>\n</dd>\n</dl>\n<p>2003-03-22  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/effect.h, effect.c, command.c: Revised -random-dither\nto require parameters: channel LOWxHIGH.  Channel can presently\nbe &quot;intensity&quot;, &quot;opacity&quot;, or &quot;all&quot;.</li>\n</ul>\n</blockquote>\n<p>2003-03-20  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>ltdl/ltdl.c: Updated to latest CVS version.  Claimed to\nsupport loading modules under MacOS-X.</li>\n<li>magick/resource.c (InitializeMagickResources): Enable code\nunder Windows which queries system limits.</li>\n<li>magick/cache.c (S_MODE): Fixed portability problems with\ndefinition.</li>\n<li>VisualMagick/bin/delegates.mgk: Fix typo in &quot;mpeg-decode&quot;\ndecode rule.</li>\n<li>libtool: Update to latest CVS version.</li>\n<li>configure.ac: Test zlib for gzseek and gztell.</li>\n<li>magick/effect.c (ChannelThresholdImage): The is_grayscale flag\nwas not be evaluated correctly.</li>\n</ul>\n</blockquote>\n<p>2003-03-19  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.h (RoundSignedToQuantum): Added handy\nRoundSignedToQuantum macro for munging doubles into Quantums.</li>\n<li>magick/effect.c (ThresholdImage): Added optimizations for\nthresholding all pixels to white or black. Threshold using an\nintegral value rather than a double so compares are faster.\n(ChannelThresholdImage): Threshold against integral values since\ncompares are faster. Invoke ThresholdImage for simple thresholding\nacross all channels since it is faster.</li>\n</ul>\n</blockquote>\n<p>2003-03-19  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/meta.c: #ifdef'ed out some dead code.</li>\n<li>magick/annotate.c: #ifdef'ed out some code that is only\nused when HasTTF is defined.</li>\n<li>Added RandomThresholdImage() method and -random-threshold\ncommandline option.</li>\n</ul>\n</blockquote>\n<p>2003-03-19  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>configure.ac (LIB_TIFF): Check for TIFFReadRGBATile and TIFFReadRGBAStrip\nin libtiff before deciding to use it.</li>\n<li>magick/blob.c (WriteBlob): Move pointer increment into\nparanthesis.\n(ReadBlob): Move pointer increment into paranthesis.</li>\n<li>magick/gem.c (HSLTransform): Removed inline statement.\n(TransformHSL): Removed inline statement.</li>\n<li>magick/random.[c|h]: Removed files from CVS.</li>\n<li>magick/command.c: Don't include random.h.</li>\n<li>PerlMagick/t/reference/jng: Update reference files to current output.</li>\n</ul>\n</blockquote>\n<p>2003-03-18  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>configure.ac: Added tests for pread and pwrite functions.</li>\n<li>magick/image.c (GrayscalePseudoClassImage): Properly invoke\nSyncImagePixels.</li>\n<li>magick/cache.c (SyncCacheNexus): Add back in is_monochrome and\nis_grayscale flag resetting which was lost by copying over\nImageMagick's cache.c.\n(FilePositionRead): Inline wrapper for reading a chunk of data at\nan offset.\nCleans up some messy code, and makes it easy to use pread().\n(FilePositionWrite): Inline wrapper for writing a chunk of data at\nan offset.\nCleans up some messy code, and makes it easy to use pwrite().\nCache now uses pread() and pwrite() to access the cache if these\ncalls are available.</li>\n<li>magick/resource.c (InitializeMagickResources): Support setting\nresource limits via the environment variables MAGICK_LIMIT_DISK,\nMAGICK_LIMIT_FILES, MAGICK_LIMIT_MEMORY, and MAGICK_LIMIT_MAP.</li>\n</ul>\n</blockquote>\n<p>2003-03-17  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/stream.c (AcquirePixelStream): Store total pixels in\n64-bit type.\n(SetPixelStream): Store total pixels in 64-bit type.</li>\n<li>coders/tiff.c (WriteTIFFImage): CoderError should be\nMissingDelegateError.</li>\n<li>coders/ps3.c (Huffman2DEncodeImage): CoderError should be\nMissingDelegateError.\n(WritePS3Image): CoderError should be MissingDelegateError.</li>\n<li>coders/ps2.c (Huffman2DEncodeImage): CoderError should be\nMissingDelegateError.</li>\n<li>coders/pdf.c (Huffman2DEncodeImage): CoderError should be\nMissingDelegateError.</li>\n<li>coders/fpx.c (ReadFPXImage): CoderError should be\nMissingDelegateError.\n(WriteFPXImage): CoderError should be MissingDelegateError.</li>\n<li>coders/dps.c (ReadDPSImage): CoderError should be\nMissingDelegateError.</li>\n<li>magick/image.c (AnimateImages): DelegateError should be\nMissingDelegateError.</li>\n<li>magick/annotate.c (RenderX11): DelegateError should be\nMissingDelegateError.</li>\n<li>magick/image.c (DisplayImages): DelegateError should be\nMissingDelegateError.</li>\n</ul>\n</blockquote>\n<p>2003-03-17  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c Relocated misplaced break in ChannelImage()\nand sped up SetImageOpacity by avoiding blend operation when\nsetting the image fully opaque.</li>\n</ul>\n</blockquote>\n<p>2003-03-17  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/cache.c: Snarfed cache.c updates from ImageMagick.</li>\n<li>magick/command.c: Added -list resource support.</li>\n</ul>\n</blockquote>\n<p>2003-03-16  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/Makefile.am (random.c): Removed building, packaging,\nand intialization of random.c functions since it is not actually\nused.</li>\n<li>magick/semaphore.c (InitializeSemaphore): Only initialize\ncritical section if active_semaphore is not already true.</li>\n<li>magick/resource.c: Snarf resource.c updates from ImageMagick.</li>\n<li>PerlMagick/Magick.xs: Added missing log event types.</li>\n<li>magick/log.h (enum): Added ResourceEvent enumeration.</li>\n<li>magick/log.c (LogMagickEvent): fflush(stdout) at the end of\neach log.  Otherwise output may not be seen for a long time.\n(SetLogEventMask): Add support for &quot;-debug resource&quot;.</li>\n<li>coders/tiff.c (RegisterTIFFImage): Don't register encode and\ndecode handlers for TIFF if TIFF library is not available.</li>\n<li>magick/constitute.c (WriteImage): Fix cut-n-paste error\nin log message (&quot;decoder&quot; --&gt; &quot;encoder&quot;).</li>\n</ul>\n</blockquote>\n<p>2003-03-15  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>index.html: Added a link to the GraphicsMagick mailing lists.</li>\n<li>Magick++/demo/zoom.cpp: Added dashed option support, including\na -resample option for image resampling.</li>\n</ul>\n</blockquote>\n<p>2003-03-14  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Makefile.am (DIST_SUBDIRS): Filters subdirectory needs to\nbe distributed.</li>\n</ul>\n</blockquote>\n<p>2003-03-14  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/render.c Ported Cristy's bugfix to DrawAffineImage().</li>\n</ul>\n</blockquote>\n<p>2003-03-14  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c (DestroyImage): Comment out new assertions until\nwe are certain that there are no ill effects.</li>\n<li>coders/mat.c (ReadMATImage): Set image-&gt;depth to valid values.</li>\n<li><dl class=\"first docutils\">\n<dt>PerlMagick/Magick.xs: Update so that new DestroyImage assertions</dt>\n<dd>aren't asserted.</dd>\n</dl>\n</li>\n<li>magick/list.c (DestroyImageList): Update so that new DestroyImage\nassertions aren't asserted.</li>\n<li>coders/wpg.c (ReadWPGImage): Don't leave dangling pointer when\ntrimming list. Don't set image-&gt;depth to invalid values.</li>\n</ul>\n</blockquote>\n<p>2003-03-13  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c (DestroyImage): Add assertions to verify\nthat destroyed image is not currently referenced by another\nimage.  This should help prevent accidental continued use\nof a destroyed image.\n(DestroyImage): Added assertions to enforce that images\nshould not continue to reference the destroyed image.</li>\n<li>coders/wpg.c: Incorporated fixes from Jaroslav Fojtik.</li>\n<li>version.sh (PACKAGE_VERSION_ADDENDUM): Construct a package\nsnapshot version based on the ChangeLog modification time.\nThis requires GNU find to work propery since the -printf\noption is used.</li>\n<li>configure.ac (LIB_GS): Do not test for the Ghostscript\nlibrary by default due to the issue of its embedded libjpeg\nconflicting with libjpeg.</li>\n<li>coders/ept.c (ReadEPTImage): &quot;PostscriptDelegateFailed&quot; should\nbe classified as a DelegateError type.</li>\n</ul>\n</blockquote>\n<p>2003-03-12  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/blob.c (BlobToFile): Truncate while opening file.\n(ImageToFile): Truncate while opening file.</li>\n<li>magick/annotate.c (RenderFreetype): Missing freetype library\nshould result in a MissingDelegateError type rather than a\nDelegateError type.</li>\n<li>INSTALL-windows.txt: Added a note regarding a workaround for\ninternal compiler errors while compiling image.c when using\nVisual C++ 7.0.</li>\n<li>coders/jpeg.c (ReadICCProfile): Incorporate ImageMagick fix\nto handle short JPEG ICC profiles.</li>\n<li>magick/integral_types.h: Ignore SIZEOF_LONG_LONG and\nSIZEOF_UNSIGNED_LONG_LONG defines if _VISUALC_ is defined.</li>\n</ul>\n</blockquote>\n<p>2003-03-11  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>www/gm.html, utilities/gm.1, guide/gm.tex: Expanded description\nof the -affine option.</li>\n</ul>\n</blockquote>\n<p>2003-03-11  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c (GetImageDepth): Re-implemented using a single-pass\nalgorithm and 1/2 the code. Previous implementation didn't return\ncorrect results for Q:32 build.  Now it does.</li>\n<li>magick/command.c (IdentifyImageCommand): For identify, when\n%q format specifier is present, image must be read rather than\npinged.  If not, either the value 8 is returned, or there is a\ncrash due to reading an uninitialized image.</li>\n</ul>\n</blockquote>\n<p>2003-03-10  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/mat.c: Incorporate fixes from Jaroslav Fojtik.  Close\nBlob before rotating image.</li>\n<li>PerlMagick/README.txt: Update to reflect that PerlMagick is\npart of GraphicsMagick.</li>\n<li>PerlMagick/t/input.mat: Added test image for Matlab format.</li>\n<li>PerlMagick/t/input.wpg: Added test image for WordPerfect Graphics Format.</li>\n<li>utilities/Makefile.am (ALLMANPAGES): Install gm.1 rather than\nold utility manual pages.</li>\n</ul>\n</blockquote>\n<p>2003-03-09  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>www/gm.html, utilities/gm.1, guide/gm.tex: First cut at\nmanpage for gm, to replace individual utility manpages.</li>\n</ul>\n</blockquote>\n<p>2003-03-09  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/blob.c: Fix some erroneous log printf specifications.\nImproved blob log messages a bit.</li>\n<li>magick/log.c (IsEventLogging): Use  InitializeLogInfo().\n(InitializeLogInfo): New function to intelligently initialize\nlogging subsystem.  Only locks when initialization may be required,\nand only locks long enough to determine if initialization is required.\nThis approach should avoid deadlocking while logging from functions\nused to initialize logging.\n(IsLogAccessible): No longer need this duplicate of IsAccessible().\n(SetLogEventMask): Use  InitializeLogInfo().</li>\n<li>coders/fpx.c (ReadFPXImage): FlashPIX library does not support\nBLOB I/O so don't use OpenBlob/CloseBlob.  Opening the blob caused\na conflict when the FlashPIX library attempted to open the file.</li>\n</ul>\n</blockquote>\n<p>2003-03-08  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>configure.ac: Test for libtiff functions (TIFFClientOpen &amp;\nTIFFIsByteSwapped), which are required by GraphicsMagick, but\nnot found in older libtiff versions.</li>\n<li>magick/blob.c: Added logging for Blob open/close and memory\nmapping operations.</li>\n</ul>\n</blockquote>\n<p>2003-03-07  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>tests/rwblob.c (main): DestroyImage asserts on NULL so only\ncall it for non-null image.</li>\n<li>tests/rwfile.c (main): DestroyImage asserts on NULL so only\ncall it for non-null image.</li>\n</ul>\n</blockquote>\n<p>2003-03-06  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>tests/rwblob.c (main): Add -pause option to require keypress to\nexit program. Clean-up to avoid any appearance of leaks.</li>\n<li>tests/rwfile.c (main): Add -pause option to require keypress to\nexit program. Clean-up to avoid any appearance of leaks.</li>\n<li>magick/static.c (ExecuteStaticModuleProcess): Don't bind in\nprocess filter functions for Visual C++ since the build environment\ndoesn't support it yet.</li>\n<li>magick/log.c (GetLogBlob) Code wasn't actually testing current\ndirectory for log.mgk, now it does.</li>\n<li>magick/log.c (IsEventLogging): Eliminate accidental recursive, or\nrepeated, initialization of the logging system.</li>\n</ul>\n</blockquote>\n<p>2003-03-05  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/jp2.c (WriteJP2Image): Improved -quality rate estimation\nfor very small files.</li>\n</ul>\n</blockquote>\n<p>2003-03-04  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/jp2.c (WriteJP2Image): Add additional logging support.</li>\n<li>tests/rwblob.c: Added BLOB read/write logging.</li>\n<li>tests/rwfile.c: Added file read/write logging.</li>\n<li>magick/module.c (FindMagickModule): Minor code cleanup and limit\ndirectory and file name lengths to sensible values.</li>\n<li>magick/utility.c (IsAccessible): Log test failures along with\ntest failure reason [strerror(errno)]. Also log test success.</li>\n<li>VisualMagick/bin/delegates.mgk: -DSAFER does not work with\nGhostscript 8.0.</li>\n<li>magick/module.c: Needed to conditionally include nt_feature.h.</li>\n</ul>\n</blockquote>\n<p>2003-03-03  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/module.c (ExecuteModuleProcess): Updated to support locating\nfilter modules based on search rules.\n(CoderInfo): Declare only in module.c since use is private to this\nmodule.\n(GetCoderInfo): Made static and commented out since currently unused.\n(FindMagickModule): New function to search for a module.\n(GetModuleBlob): Moved from blob.c, made static, and re-implemented\nbased on FindMagickModule.</li>\n<li>magick/blob.c: Moved GetTypeBlob() to type.c and made it static.\nMoved GetModuleBlob() to module.c and made it static.</li>\n</ul>\n</blockquote>\n<p>2003-03-02  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/Makefile.am: MIFF module does not depend on -ljpeg, but\nPNG module does (for JNG).</li>\n<li>filters/analyze.c (AnalyzeImage): Bugfix, image should be passed\nas Image** rather than Image*.</li>\n<li>magick/utility.c (IsAccessible): Don't log errno if errno==0.</li>\n</ul>\n</blockquote>\n<p>2003-03-01  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/Makefile.am: Link with libFilters convenience library.</li>\n<li>VisualMagick/magick/magick_config.h.in: Change MagickModulesPath\nto MagickCoderModulesPath and add a MagickFilterModulesPath to\nlocate filter modules.</li>\n<li>filters/Makefile.am: New makefile to build filter modules.</li>\n<li>configure.ac: Configure magick/GraphicsMagick.pc and\nMagick++/lib/GraphicsMagick++.pc.\n(MagickModulesSubdir): Add quantum depth to modules path to ensure\nthat modules with the correct depth are loaded.  The modules path\nis now\n${libdir}/GraphicsMagick-${PACKAGE_VERSION}/modules-Q${QuantumDepth}/coders.\n(MagickCoderModulesPath): Rename MagickModulesPath to\nMagickCoderModulesPath.\n(MagickFilterModulesPath): Define to location of filter modules.</li>\n<li>magick/Makefile.am: Added rules to install GraphicsMagick.pc.</li>\n<li>magick/GraphicsMagick.pc.in: Added pkgconfig file for\n-lGraphicsMagick.</li>\n</ul>\n</blockquote>\n<p>2003-02-28  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/jp2.c (WriteJP2Image): Quality factor calculation had\naccidentally been removed.  The calculation is back, but has been\nbiased up slightly so that a quality factor of 75 results in a\nmore reasonable 16:1 compression. Past a quality factor of 99.5,\nthe compression is set to 1:1 (non-lossy).</li>\n</ul>\n</blockquote>\n<p>2003-02-27  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Fixed bug with reading interlaced PNG images, introduced\nyesterday.</li>\n<li>Fixed bug with skipping MNG subimages, also introduced\nyesterday.</li>\n</ul>\n</blockquote>\n<p>2003-02-27  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Makefile.am (EXTRA_DIST): Forgot to distribute version.sh</li>\n<li>configure.ac: Use definitions from version.sh to drive\npackage versioning and naming. These definitions support\nlibtool's recommended approach to library versioning.</li>\n<li>version.sh: New file for managing release versioning.\nEdit this file to change the release number, etc.</li>\n<li>PerlMagick/t/tiff/read.t: Added read tests for stripped,\nplanar contiguous, and planar seperated TIFFs.</li>\n<li>coders/tiff.c (ReadTIFFImage): Transferred stripped-TIFF\nreading code from ImageMagick.\nEnumerated reading methods to make the logic more clear.</li>\n</ul>\n</blockquote>\n<p>2003-02-27  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>JNG alpha sample depth was sometimes inconsistent.</li>\n<li>Bring only one line at a time into memory during PNG\nread/write (Merge with Cristy's 5.5.6 update).</li>\n</ul>\n</blockquote>\n<p>2003-02-26  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>PerlMagick/Makefile.PL.in (LIBS): Put MAGICKLIB first to\ndecrease the probability that the wrong libMagick is used\nwhen linking static PerlMagick.</li>\n<li>configure.ac (PerlMagick): Fix linker search path for\n-lGraphicsMagick when linking a static PerlMagick.  It seems\nthat libtool changed the location where it places static\nlibraries.</li>\n<li>PerlMagick/t/tiff/read.t: Added test for reading tiled TIFF.</li>\n<li>coders/tiff.c (ReadTIFFImage): Add optimized support for\nreading tiled TIFFs.\n(ReadTIFFImage): Optimize loops for reading tiled TIFFs as well.\n(ReadTIFFImage): Eliminate compiler warning.\n(ReadTIFFImage): Add some missing error handling for tiled TIFF.</li>\n</ul>\n</blockquote>\n<p>2003-02-25  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/tiff.c (ReadTIFFImage): Optimize RGBA transfer loop.</li>\n</ul>\n</blockquote>\n<p>2003-02-24  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/render.c (DrawPrimitive): Return DrawPolygonPrimitive\nstatus (edit transferred from ImageMagick).</li>\n<li>magick/utility.c (GetMagickGeometry): Scaling to an area now\npreserves the image aspect ratio.</li>\n</ul>\n</blockquote>\n<p>2003-02-24  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>png.c: Added missing parentheses in typecast (cristy noticed\nthe bug that I introduced on 2/18).</li>\n</ul>\n</blockquote>\n<p>2003-02-23  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Makefile.am: Add rules to produce www/README.html,\nwww/INSTALL-mac.html, www/INSTALL-unix.html, www/INSTALL-vms.html,\nand www/INSTALL-windows.html</li>\n<li>www/README.html: New file produced from README.txt</li>\n<li>www/INSTALL-mac.html: New file produced from INSTALL-mac.txt.</li>\n<li>www/INSTALL-unix.html: New file produced from INSTALL-unix.txt.</li>\n<li>www/INSTALL-vms.html: New file produced from INSTALL-vms.txt.</li>\n<li>www/INSTALL-windows.html: New file produced from INSTALL-windows.txt.</li>\n<li>NEWS: Added news for GraphicsMagick 1.0.0.</li>\n<li>magick/locale.c: Added error messages to support JP2.</li>\n<li>locale/C.mgk: Added error messages to support JP2.</li>\n<li>locale/locale.mgk: Update to GraphicsMagick copyright.</li>\n<li>coders/jp2.c: Updated to use Jasper 1.700.1 interface\nconventions. Jasper 1.700.1 is required now. Support\nreading arbitrary quantum sizes up to 16-bits.  Return\ngrayscale images as PseudoClass.</li>\n<li>jp2/: Updated Jasper sources to version 1.700.1.</li>\n</ul>\n</blockquote>\n<p>2003-02-22  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/jp2.c (ReadJP2Image): Obtain channel indexes by\nID rather than assuming index value.  Validate that channel\ngeometry and encoding is supported.</li>\n<li>magick/effect.c (ThresholdImage): Additional performance\noptimization. Work faster if image is already gray.</li>\n</ul>\n</blockquote>\n<p>2003-02-21  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/jp2.c (WriteJP2Image): Port to Jasper 1.7.\nFor Q:32, don't write 32-bit pixels rather than the\n16-bit pixels we told Jasper we would write.\n(WriteJP2Image): Back-port to Jasper 1.6.</li>\n</ul>\n</blockquote>\n<p>2003-02-18  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/modules.mgk: Added JNG entry.</li>\n</ul>\n</blockquote>\n<p>2003-02-19  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/jp2.c (RegisterJP2Image): Added registration for\n&quot;PGX&quot; magick tag.</li>\n<li>magick/magic.mgk: Added entry for JPEG V2's PGX format.</li>\n<li>PerlMagick/t/jp2/read.t: Added JPEG Version 2 read tests.</li>\n<li>coders/modules.mgk: Added JPC and PGX magick types to\nsupport JPEG V2.</li>\n<li>magick/color.c (IsMonochromeImage): Re-arranged test logic\nto short-circuit test using ORs.\n(IsGrayImage): Re-arranged test logic to short-circuit test\nusing ORs.</li>\n<li>magick/constitute.c (PopImagePixels): Speed GrayQuantum\nand GrayAlphaQuantum cases if is_grayscale is True.</li>\n<li>magick/quantize.c (AssignImageColors): Sync image to\nupdate DirectClass pixels to new colormap.</li>\n<li>coders/fpx.c (RegisterFPXImage): FlashPIX does not\nprovide direct BLOB I/O support.</li>\n<li>magick/blob.c (BlobToImage): Add logging.\n(BlobToFile): Add logging.</li>\n</ul>\n</blockquote>\n<p>2003-02-18  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/fpx.c (ReadFPXImage): Removing the input file is\nantisocial.</li>\n<li>PerlMagick/t/fpx/*.fpx: Replaced with new copies.  Files\nseemed to be corrupt.</li>\n<li>PerlMagick/t/cgm/read.t: Specify file magick so that CGM\nread test passes for BLOB case.</li>\n<li>PerlMagick/t/rad/read.t: Specify file magick so that RAD\nread test passes for BLOB case.</li>\n<li>PerlMagick/t/jng/read.t: Add read tests for JNG.</li>\n<li>PerlMagick/t/jng/write.t: Add read/write tests for JNG.</li>\n<li>configure.ac (DELEGATES): Added <cite>jng</cite> to the DELEGATES list\nso that JNG can be included in the PerlMagick tests.</li>\n</ul>\n</blockquote>\n<p>2003-02-18  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/png.c: Write proper JNG image_interlace_method.</li>\n<li>coders/png.c: Read and write proper MNG and JNG sRGB intent.</li>\n<li>PerlMagick/t/jng: Add twelve test files in JNG format.</li>\n<li>coders/png.c: Write proper progressive JNG output when\ntransparency is present.</li>\n</ul>\n</blockquote>\n<p>2003-02-18  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/version.c (GetMagickWebSite): New function.</li>\n</ul>\n</blockquote>\n<p>2003-02-17  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/wmf.c (ipa_device_begin): Use MagickWebSite definition.</li>\n<li>www/Copyright.html: Updated to match Copyright.txt</li>\n<li>www/perl: Updated to reflect GraphicsMagick vs ImageMagick.</li>\n<li>magick/xwindow.c (XMakeImageMSBFirst): Minor loop optimizations.</li>\n<li>magick/constitute.c (ConstituteImage): Check for grayscale\nand monochrome image if image is PseudoClass.</li>\n</ul>\n</blockquote>\n<p>2003-02-16  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/enhance.c (ContrastImage): Preserve is_grayscale flag.\n(EqualizeImage): Preserve is_grayscale flag.\n(ModulateImage): Preserve is_grayscale flag.\n(NegateImage): Preserve is_grayscale flag.\n(NormalizeImage): Preserve is_grayscale flag.</li>\n<li>magick/fx.c (ColorizeImage): Evaluate is_grayscale status.\n(ConvolveImage): Preserve is_grayscale flag.\n(ImplodeImage): Preserve is_grayscale flag.\n(SolarizeImage): Preserve is_grayscale flag.\n(OilPaintImage): Preserve is_grayscale flag.\n(SwirlImage): Preserve is_grayscale flag.\n(WaveImage): Preserve is_grayscale flag.</li>\n<li>magick/resize.c (MagnifyImage): Preserve is_grayscale flag.\n(MinifyImage): Preserve is_grayscale flag.\n(ResizeImage): Preserve is_grayscale flag.</li>\n<li>magick/decorate.c (FrameImage): Evaluate is_grayscale status.\n(RaiseImage): Preserve is_grayscale.</li>\n<li>magick/shear.c (IntegralRotateImage): Preserve is_grayscale.\nflag.\n(XShearImage): Evaluate is_grayscale status.\n(YShearImage): Evaluate is_grayscale status.</li>\n<li>magick/transform.c (ChopImage): Preserve is_grayscale flag.\n(CropImage): Preserve is_grayscale flag.\n(FlipImage): Preserve is_grayscale flag.\n(FlopImage): Preserve is_grayscale flag.\n(RollImage): Preserve is_grayscale flag.</li>\n<li>magick/effect.c (AddNoiseImage): If image colorspace is\nGRAYColorspace, then add intensity noise, and transfer\nimage is_grayscale flag to output image.\n(BlurImage): Preserve is_grayscale flag.\n(DespeckleImage): Preserve is_grayscale flag.\n(EdgeImage): Preserve is_grayscale flag.\n(EmbossImage): Preserve is_grayscale flag.\n(GaussianBlurImage): Preserve is_grayscale flag.\n(MotionBlurImage): Preserve is_grayscale flag.\n(ShadeImage): Preserve is_grayscale flag.\n(SharpenImage): Preserve is_grayscale flag.\n(UnsharpMaskImage): Preserve is_grayscale flag.</li>\n<li>magick/quantize.c (QuantizeImage): Pre-reduce gray images\nto PseudoClass in order to quickly determine the number of\ncolors, and provide the expected PseudoClass output. Also\nskip slow color quantization if there are already fewer\ncolors than requested.</li>\n<li>magick/image.c (GrayscalePseudoClassImage): New function\nto quickly reduce an image to PseudoClass grayscale.  This\nis a fast way to determine the number of intensities in a\ngrayscale image. Either a compact sorted colormap or a faster,\ncontiguous linear colormap is created, depending on the\noptimize_colormap flag. If the image is already PseudoClass,\nand the optimize_colormap flag is True, then the existing\ncolormap is sorted and reduced.\n(SyncImage): Preserve is_grayscale flag.\n(ChannelImage): Result is grayscale.\n(CycleColormapImage): Preserve is_grayscale and is_monochrome flags.\n(SetImage): Evaluate is_grayscale flag.\n(SetImageDepth): Preserve is_grayscale flag.\n(SetImageOpacity): Preserve is_grayscale flag.\n(SortColormapByIntensity): Preserve is_grayscale flag.\n(TransformRGBImage): Evaluate is_grayscale flag.</li>\n</ul>\n</blockquote>\n<p>2003-02-15  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/resize.c (SampleImage): Preserve grayscale and\nmonochrome flags.</li>\n<li>magick/quantize.c (AssignImageColors): Set image monochrome\nflag to True when quantizing to two colors in GrayColorspace.</li>\n<li>magick/effect.c (SpreadImage): Preserve grayscale and\nmonochrome flags.\n(AdaptiveThresholdImage): Short-circuit algorithm if image\nflags indicate it is already monochrome. Set monochrome and\ngrayscale flags once algorithm completes.\n(ThresholdImage): Short-circuit algorithm if image\nflags indicate it is already monochrome. Set monochrome and\ngrayscale flags once algorithm completes.\n(ChannelThresholdImage): Short-circuit algorithm if image\nflags indicate it is already monochrome. Set monochrome and\ngrayscale flags once algorithm completes.\n(ShadeImage): If grayscale shading is done, then set image\ngrayscale flag to True.</li>\n<li>magick/color.c (IsGrayImage): If the image is_grayscale\nflag is True, then short-circuit the test. Update the flag\nif the test is performed.\n(IsMonochromeImage): If the image is_monochrome flag is True\nthen short-circuit the test. Update the flag if the test is\nperformed.</li>\n<li>magick/image.c (CloneImage): Copy image is_grayscale and\nis_monochrome members.</li>\n<li>magick/cache.c (SyncCacheNexus): If image pixels are updated\nthen set image is_grayscale and is_monochrome members to False.\nAlgorithms which want to preserve the values of these members\nshould save their original values before processing the image\nand restore them when processing is complete, or transfer them\nfrom the input image to the output image.</li>\n<li>magick/constitute.c (ReadImage): If the returned image is\nPseudoClass then invoke IsGrayImage() and IsMonochromeImage()\nand cache the result in image is_grayscale and is_monochrome\nmembers for later use.</li>\n<li>magick/image.h (Image): Added is_grayscale and is_monochrome\nmembers to remember if image is grayscale or monochrome.</li>\n</ul>\n</blockquote>\n<p>2003-02-14  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>www/archives.html: commented out sites not mirroring GM yet.\nChanged &quot;ftp.simplesystems.org&quot; to &quot;ftp.graphicsmagick.org&quot;.\nAdded link to graphicsmagick.sf.net.</li>\n</ul>\n</blockquote>\n<p>2003-02-13  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/utility.c (FormatString): Check for the availability of\nvsprintf.</li>\n<li>magick/log.c (LogMagickEvent): Check for the availability of\nvsprintf.</li>\n<li>configure.ac: Test for vsprintf.</li>\n</ul>\n</blockquote>\n<p>2003-02-12  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/annotate.c (RenderFreetype): Used smarter code to prepare\nthe beta argument for AlphaComposite.</li>\n</ul>\n</blockquote>\n<p>2003-02-12  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/logo.c: updated logo.c to produce the GraphicsMagick logo.</li>\n</ul>\n</blockquote>\n<p>2003-02-12  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>INSTALL-unix.txt: Document that default quantum depth is now 8.</li>\n<li>VisualMagick/magick/magick_config.h.in: Default quantum depth is now 8.</li>\n<li>configure.ac: Default quantum depth is now 8.</li>\n<li>tests/Makefile.am: Test format types that require a size\nseperately since always specifying the size caused some formats\n(e.g. PCD) to improperly fail.</li>\n</ul>\n</blockquote>\n<p>2003-02-11  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>www/NEWS.html: New HTML file for project news.</li>\n<li>scripts/txt2html: New script for formatting text into HTML.</li>\n<li>Makefile.am: Automated the generation of www/Changelog.html and\nwww/NEWS.html.</li>\n<li>coders/xpm.c (WritePICONImage): Close blob using correct image.</li>\n<li>tests/Makefile.am (CHECK_SIZED_FILES): Added files to tests\nsubdirectory so that tests don't need to use files from\nPerlMagick.</li>\n<li>magick/image.c (TransformColorspace): New function to\nsimplify/centralize colorspace transform requests.  Replaced calls\nto RGBTransformImage and TransformRGBImage throughout the code\nwith calls to TransformColorspace.</li>\n<li>IMDisplay: Disable save function since it is not implemented yet.</li>\n</ul>\n</blockquote>\n<p>2003-02-10  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>PerlMagick/Magick.xs (SetAttribute): Support changing back to\nRGB or Transparent colorspace.</li>\n</ul>\n</blockquote>\n<p>2003-02-10  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Brought MNG handling of final delay into compliance with MNG spec.</li>\n</ul>\n</blockquote>\n<p>2003-02-08  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/bmp.c (WriteBMPImage): Added support for\nbits_per_pixel==4.\n(WriteBMPImage): Convert PseudoClass images with more than 256\ncolors to DirectClass.\n(WriteBMPImage): Do not require 2-color images to pass the\nIsMonochromeImage() test before writing them as one-bit-per-pixel\nBMPs.  Decided to allow this after four readers (including Windows\nXP) displayed the image using the proper colormap.\n(WriteBMPImage): BMP2 encoder was writing colormap using wrong format.</li>\n<li>images: Updated logo images to GraphicsMagick</li>\n<li>Added PDF Sages to web page as a sponsor.</li>\n</ul>\n</blockquote>\n<p>2003-02-08  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>www/GraphicsMagick.html: add &quot;gm &quot; prefix to examples.</li>\n</ul>\n</blockquote>\n<p>2003-02-07  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>index.html: Update to distinguish between ImageMagick and\nGraphicsMagick, and to explain &quot;gm&quot; prefix of commandline utilities.</li>\n</ul>\n</blockquote>\n<p>2003-02-06  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/nt_feature.c (CropImageToHBITMAP): Remove useless\nautocrop support which was transferred from CropImage when\ncreating CropImageToHBITMAP.</li>\n</ul>\n</blockquote>\n<p>2003-02-04  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/miff.c (ReadMIFFImage): RLE packet size was not\ncalculated correctly, causing RLE-compressed MIFF images with\ndepth&gt;8 to not be read.</li>\n</ul>\n</blockquote>\n<p>2003-02-03  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/paint.c (ColorFloodfillImage): Transfered fix from\nImageMagick for the problem that floodfill using a tiled image\nfailed if the target color happened to match the current fill\ncolor.</li>\n</ul>\n</blockquote>\n<p>2003-02-02  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/command.c: Fixed preview error message.</li>\n<li>coders/preview.c: Previous update had broken noiseimage demo.\nAlso some cleanups.</li>\n<li>magick/display.c (XMagickCommand): No longer uses\nMogrifyImage.</li>\n<li>coders/preview.c (WritePreviewImage): Re-wrote so that\nMogrifyImage is no longer used. Resize image outside of the loop\nto improve performance.</li>\n</ul>\n</blockquote>\n<p>2003-02-01  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/effect.c (ShadeImage): Use PixelIntensityToDouble macro.</li>\n<li>magick/image.h (PixelIntensityToDouble): Added\nPixelIntensityToDouble macro to handle the case where pixel\nintensity is used for floating arithmetic.</li>\n</ul>\n</blockquote>\n<p>2003-01-30  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Makefile.am: Distribute files ChangeLog, INSTALL-mac.txt,\nINSTALL-unix.txt, INSTALL-vms.txt INSTALL-windows.txt, and NEWS.</li>\n</ul>\n</blockquote>\n<p>2003-01-29  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/svg.c (SVGStartElement): Applied fix from ImageMagick to\ncompute SVG +&gt; MVG viewbox correctly.</li>\n<li>magick/image.c (CloneImage): Applied fix from ImageMagick which\nis purported to solve the problem that &quot;negative (x,y) page offsets\ndid not clone properly&quot;.</li>\n<li>magick/gem.c (TransformHWB): Replace implementation with\nImageMagick's new version which is supposed to fix a rounding\nerror problem.  Hard to say since implementation is totally\ndifferent.</li>\n<li>coders/msl.c (MSLStartElement): Applied fix for missing break\nfrom ImageMagick.</li>\n<li>magick/integral_types.h: New header to include the integral\ntypes typedefs.  Needed new header in order to include in both\nstudio.h and api.h at the right point.</li>\n<li>magick/studio.h: Move nt_feature.h inclusion to the few modules\nwhich actually use functions from it.</li>\n<li>magick/api.h: Added typedefs gm_int16_t, gm_uint16_t,\ngm_int32_t, gm_uint32_t, gm_int64_t, gm_uint64_t to support\nspecifically sized types.</li>\n<li>configure.ac: Test for size of <cite>short</cite>, <cite>unsigned short</cite>, <cite>int</cite>,\n<cite>unsigned int</cite>, <cite>long</cite>, <cite>unsigned long</cite>, <cite>long long</cite>, <cite>unsigned\nlong long</cite> assigning the result to the defines SIZEOF_SHORT,\nSIZEOF_UNSIGNED_SHORT, SIZEOF_INT, SIZEOF_UNSIGNED_INT,\nSIZEOF_LONG, SIZEOF_UNSIGNED_LONG, SIZEOF_LONG_LONG, and\nSIZEOF_UNSIGNED_LONG_LONG respectively.</li>\n</ul>\n</blockquote>\n<p>2003-01-28  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/fx.c (OilPaintImage): Compute histogram using 8-bit quantums\nfor more sensible performance with Q:16 and Q:32 builds.</li>\n<li>magick/image.h (PixelIntensityToQuantum): Compute using integral\narithmetic for Q:8 and Q:16.  Much faster than floating point!\n(PixelIntensity): Compute using integral arithmetic for Q:8 and\nQ:16. Much faster than floating point!</li>\n</ul>\n</blockquote>\n<p>2003-01-28  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Fixed bug in png.c, introduced in IM-5.5.1.  A pair of\n{ } brackets were omitted when logging was added, which lets\nold versions of libpng write a zero-length iCCP chunk.</li>\n</ul>\n</blockquote>\n<p>2003-01-27  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/effect.c (DespeckleImage): Put loops inside of case\nstatement rather than outside.\n(SpreadImage): Improved algorithm so that -spread is 12X faster.</li>\n<li>magick/nt_feature.c (CropImageToHBITMAP): New function to return\na region of the image as a HBITMAP.</li>\n</ul>\n</blockquote>\n<p>2003-01-26  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Fixed Copyright statement on all source files.</li>\n<li>magick/effect.c (ThresholdImage): Optimized loop.</li>\n<li>coders/tiff.c (ReadTIFFImage): Read bits more efficiently for\nbits_per_sample=1.</li>\n<li>magick/command.c (MogrifyImage): Set image-&gt;dither to\nimage_info-&gt;dither prior to invoking SetImageType.</li>\n<li>magick/constitute.c (WriteImage): Set image-&gt;dither to\nimage_info-&gt;dither.</li>\n<li>magick/image.c (SetImageType): For case BilevelType, normalize\nimage, and threshold 50% if dithering is disabled.  This is at\nleast 10X faster than quantizing with dither.\n(AllocateImage): Initialize image-&gt;dither.\n(CloneImage): Copy image-&gt;dither.</li>\n<li>magick/image.h: Added dither member to Image.</li>\n</ul>\n</blockquote>\n<p>2003-01-24  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>PerlMagick/t/tiff/read.t: Added a test for reading 16-bit TIFF\nimages.</li>\n<li>coders/tiff.c (ReadTIFFImage): Support reading 16-bit TIFF images\nwith a Q:8 build.</li>\n<li>magick/color.c (ConstrainColormapIndex): Use VerifyColormapIndex.</li>\n<li>coders/pnm.c (ReadPNMImage): Use VerifyColormapIndex.</li>\n<li>coders/gif.c (DecodeImage): Use VerifyColormapIndex.</li>\n<li>magick/image.c (SyncImage): Use VerifyColormapIndex.</li>\n</ul>\n</blockquote>\n<p>2003-01-23  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/blob.c (ReadBlobByte): Use getc when reading from FILE stream.</li>\n<li>configure.ac: Added tests for getc_unlocked and putc_unlocked.</li>\n<li>magick/blob.c (ReadBlobByte): Optimized reading from BlobStream.\n(ReadBlobLSBLong): Optimized reading from BlobStream.\n(ReadBlobLSBShort): Optimized reading from BlobStream.\n(ReadBlobMSBLong): Optimized reading from BlobStream.\n(ReadBlobMSBShort): Optimized reading from BlobStream.\n(ReadBlobStream): New static inline function to read from BlobStream.\n(WriteBlob): &quot;Manually&quot; copy data rather than using memcpy() for\nvery small copy sizes.\n(WriteBlobByte): Use putc() when writing to a FILE stream.</li>\n</ul>\n</blockquote>\n<p>2003-01-22  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/gem.c (Hull): Count down loops.  Might help.\n(InterpolateColor): Pre-compute common sub-expressions to improve\nperformance.</li>\n<li>magick/segment.c (Classify): Implemented idea from Glenn\nRanders-Pehrson to avoid use of pow() when WeightingExponent is\n2.0 (which it is).  This makes image segmentation much faster\n(e.g. 8X).</li>\n<li>magick/annotate.c (RenderFreetype): For images with\nmatte==False, simply set the opacity of the pixel to be updated to\nOpaqueOpacity before alpha-compositing the pixel rather than using\nSetImageType(TrueColorMatteType) to initialize the opacity of the\nentire image.  This is much faster and scales to large images.</li>\n<li>magick/image.c (SetImageType): Eliminated unnecessary conditionals.</li>\n</ul>\n</blockquote>\n<p>2003-01-21  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/effect.c (InsertMedianList): Assign computed quantum\nindexes to variables to avoid extra computations for\nQuantumDepth&gt;8.</li>\n<li>magick/composite.c (AlphaComposite): Pre-compute common\nexpressions in order to improve performance.</li>\n<li>magick/fx.c (ConvolveImage): Optimized loops.</li>\n<li>magick/paint.c (TransparentImage): Optimize for case fuzz == 0.</li>\n<li>magick/color.c (FuzzyColorMatch): Minor cleanup and optimization.</li>\n<li>magick/locale.c: Added error messages for convolve option.</li>\n<li>coders/locale.c: Picked up recent changes from ImageMagick version.</li>\n<li>locale/C.mgk: Added error messages for convolve option.</li>\n<li>magick/command.c (MogrifyImage): Added support for convolve option.</li>\n<li>coders/xcf.c (ReadXCFImage): Recognize latest GIMP XCF header.</li>\n<li>coders/dcm.c: Transferred the apparent salient fixes from\nImageMagick for a bug described as &quot;Some DCM grayscale images did\nnot display correctly.&quot;.</li>\n<li>coders/miff.c (ReadMIFFImage): Reading RLE-compressed MIFFs is\nnow about 4X faster.</li>\n<li>magick/blob.c (OpenBlob): Use setvbuf() to increase stdio buffer\nsize to 16K.  Solaris default is 1K.  This should minimize system\ncall overhead for accessing large files.\n(ReadBlob): &quot;Manually&quot; copy data rather than using memcpy() for\nvery small copy sizes.\n(ReadBlobZC): New method, similar to ReadBlob, but provides the\nopportunity for zero copy on read.</li>\n<li>magick/constitute.c (PushImagePixels): CMYKA case for\nimage-&gt;depth=16 was comparing with 8 instead.</li>\n</ul>\n</blockquote>\n<p>2003-01-18  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/utility.c (GetMagickGeometry): Removed support for <cite>~</cite>\nand disabled centering code until we learn where it should go (if\nanywhere).</li>\n<li>magick/command.c : Add HWB colorspace transform support.</li>\n<li>PerlMagick/Magick.xs: Add HWB colorspace transform support.</li>\n<li>magick/image.c (RGBTransformImage): Add HWB colorspace transform\nsupport.\n(TransformRGBImage): Add HWB colorspace transform support.</li>\n</ul>\n</blockquote>\n<p>2003-01-17  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/utility.c (GetMagickGeometry): Add support for new new\n<cite>~</cite> geometry string flag.  This also fixes a montage bug in which\nthumbnails were mis-sized if the geometry specification incuded x\nor y offsets.</li>\n<li>magick/image.h (GeometryFlags): Added CenterValue enumeration to\ncorrespond with new <cite>~</cite> geometry string flag.  Taking\nImageMagick's lead on this.</li>\n<li>magick/render.c: Transferred fixes from ImageMagick for an\nartifact which occured at the 360 degree point when rendering\ncircles, ellipses, and arcs.  Bug reported by <a class=\"reference external\" href=\"mailto:io219&#37;&#52;&#48;attbi&#46;com\">io219<span>&#64;</span>attbi<span>&#46;</span>com</a>.</li>\n<li>PerlMagick/Magick.xs: Add HSL colorspace transform support.</li>\n<li>magick/command.c: Add HSL colorspace transform support.</li>\n<li>magick/image.c (RGBTransformImage): Add HSL colorspace transform\nsupport.\n(TransformRGBImage): Add HSL colorspace transform support.</li>\n</ul>\n</blockquote>\n<p>2003-01-16  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Updated copyright statement on source files to reflect\nthe GraphicsMagick Group rather than ImageMagick Studio.</li>\n<li>magick/constitute.c (ConstituteImage): Simplified the switch\nstatement for inner loops by creating a simplified map in advance.\n(DispatchImage): Simplified the switch statement for inner loops\nby creating a simplified map in advance.</li>\n<li>magick/compress.c (HuffmanEncodeImage): Test and cache the\nreturn value of LocaleCompare(image_info-&gt;magick,&quot;FAX&quot;) so that\nLocaleCompare is not executed repeatedly in the output loop.</li>\n<li>magick/color.c (IsGrayImage): Optimized loops.\n(IsMonochromeImage): Optimized loops.\n(IsOpaqueImage): Optimized loop.</li>\n<li>magick/delegate.c (InvokePostscriptDelegate): When using the\nGhostscript library, identify the library as &quot;[ghostscript library]&quot;\nrather then &quot;gsdll32&quot; so that -verbose prints something useful for\nboth Windows and Unix.</li>\n</ul>\n</blockquote>\n<p>2003-01-15  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>NEWS: New file.</li>\n<li>magick/montage.c (MontageImages): Use ThumbnailImage() rather\nthan ZoomImage() to resize montage thumbnails provided that the\nuser has not specified an image filter, and the montage thumbnail\nis smaller than the image. This should provide faster montages\nfor large images.</li>\n<li>magick/resize.c (ResizeImage): Added logging support.\n(MagnifyImage): Added logging support.\n(MinifyImage): Added logging support.\n(SampleImage): Added logging support.\n(ScaleImage): Added logging support.</li>\n</ul>\n</blockquote>\n<p>2003-01-14  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/transform.c (ProfileImage): Duplicate ImageMagick changes\nto image colorspace handling.  Avoids using\nSetImageType(image,ColorSeparationMatteType).</li>\n<li>magick/fx.c (OilPaintImage): Replaced with ImageMagick version\nsince ImageMagick version has been updated to not penalize Q:8.\nOptimized loops.</li>\n<li>magick/display.c (XDisplayImage): Display to 100% of\nthe screen size rather than 90% of the screen size.</li>\n<li>magick/enhance.c (ModulateImage): Ensure that arguments\nare always positive values.  Optimized loops.\n(ContrastImage): Optimized loops.</li>\n<li>magick/gem.c (HSLTransform): Optimized performance by\neliminating redundant intermediate calculations. This\nmakes <cite>gm convert -contrast</cite> 21% faster.\n(HSLTransform): Set to inline within the gem.c module.\n(TransformHSL): Set to inline within the gem.c module.\n(Contrast): Moved to bottom of gem.c module so HSLTransform\nand TransformHSL can be inlined. Simplified conditionals.\n(Modulate): Moved to bottom of gem.c module so HSLTransform\nand TransformHSL can be inlined. No longer check/correct\nnegative values.</li>\n</ul>\n</blockquote>\n<p>2003-01-14 William Radcliffe &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/blob.c</li>\n<li>magick/blob.h\nAdded new stream type flag and support to match with the one\nadded to ImageMagick.</li>\n</ul>\n</blockquote>\n<p>2003-01-13  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c (RGBTransformImage): Fixed bug (thanks to\nBill for finding it) and finished optimizing XYZ table\ncreation.\n(AverageImages): Optimized loops.\n(ChannelImage): Optimized loops.  3X speed-up for SPARC.</li>\n<li>magick/enhance.c: Optimized NegateImage().</li>\n</ul>\n</blockquote>\n<p>2003-01-12  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Set some common API structures to 0xbf prior to deallocation\nto make accidental continued use more obvious.</li>\n</ul>\n</blockquote>\n<p>2003-01-11  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/constitute.c: Minor optimizations to PopImagePixels()</li>\n<li>coders/dpx.c: Reading the DPX header was off by 4 bytes.</li>\n<li>coders/(art.c,avs.c,bmp.c,cmyk.c,dcm.c,dib.c,dpx.c,fax.c,\nfits.c,gray.c,icon.c,map.c,miff.c,mono.c,mpc.c,mtv.c,otb.c,\npcx.c,pdb.c,pict.c,pix.c,pnm.c,pwp.c,rgb.c,rla.c,rle.c,sct.c,\nsgi.c,sun.c,tga.c,tim.c,uyvy.c,vicar.c,viff.c,wbmp.c,xwd.c,\nyuv.c): Ensure that blob is closed on unexpected EOF.</li>\n<li>magick/image.c: Optimized SetImageOpacity().\nOptimized SetImage() for intializing non-opaque images.  The\nopacity channel was being intialized twice.</li>\n</ul>\n</blockquote>\n<p>2003-01-10  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/constitute.c: Log entry and exit from coders so that\ncoders don't need to.</li>\n<li>Finished re-writing PushImagePixels() using coding practices\nwhich may result in faster code.</li>\n<li>PerlMagick is changed from Image::Magick to Graphics::Magick\nin order to avoid conflicts with the ImageMagick version.  This\nmeans that any Perl scripts based on the ImageMagick version need\nto do a global replace of Image::Magick to Graphics::Magick.</li>\n<li>PerlMagick/reference/filter/Raise.miff: Replaced with new version.</li>\n</ul>\n</blockquote>\n<p>2003-01-08 William Radcliffe &lt;<a class=\"reference external\" href=\"mailto:billr&#37;&#52;&#48;corbis&#46;com\">billr<span>&#64;</span>corbis<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/nt_feature.c\nMake ImageToHBITMAP function in nt_feature.c compile under Visual\nC++ again.</li>\n</ul>\n</blockquote>\n<p>2003-01-08  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>coders/delegates.mgk.in: Fix cgm entry.  How did it become so\nterribly broken?</li>\n<li>coders/dps.c: Adding logging support.</li>\n<li>PerlMagick/t/read.t: Changed file read tests to use image\ncompares with a reference image rather than comparing with a\nsignature.</li>\n<li>PerlMagick/t/wmf/read.t: Ditto.\nmagick/shear.c: Fixed documentation for RotateImage.</li>\n</ul>\n</blockquote>\n<p>2003-01-08  Glenn Randers-Pehrson &lt;<a class=\"reference external\" href=\"mailto:randeg&#37;&#52;&#48;alum&#46;rpi&#46;edu\">randeg<span>&#64;</span>alum<span>&#46;</span>rpi<span>&#46;</span>edu</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/magick.c, magick/magick.h: Add &quot;note&quot; member of magick_info.</li>\n<li>coders/art.c, coders/fax.c, coders/dcm.c, coders/png.c: add notes\nto format registrations.</li>\n<li>fx.c: changed default &quot;colorize&quot; behaviour to preserve image opacity.</li>\n</ul>\n</blockquote>\n<p>2003-01-07  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/svg.c: Allow the user to specify the initial background\ncolor via the -background option.  This is only useful if the SVG\ndoesn't draw its own background rectangle.</li>\n</ul>\n</blockquote>\n<p>2003-01-06  Albert Chin-A-Young  &lt;<a class=\"reference external\" href=\"mailto:china&#37;&#52;&#48;thewrittenword&#46;com\">china<span>&#64;</span>thewrittenword<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>ltdl/Makefile.am, ltdl/ltdl.c: Fix compilation problem\nunder Tru64 UNIX 5.1.  The GraphicsMagick random.h was being\nincluded when the system random.h was needed.</li>\n<li>configure.ac: Improve robustness of POSIX thread API tests\nby including pthread.h when building the test program.</li>\n</ul>\n</blockquote>\n<p>2003-01-06  Bob Friesenhahn  &lt;<a class=\"reference external\" href=\"mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us\">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/image.c: In IsImagesEqual() only use type <cite>long double</cite>\nfor error summation if QuantumDepth &gt; 16 and <cite>long double</cite> has\nmore range than <cite>double</cite>.</li>\n<li>magick/quantize.c: In QuantizeImage() only use type <cite>long\ndouble</cite> for error summation if QuantumDepth &gt; 16 and <cite>long\ndouble</cite> has more range than <cite>double</cite>.</li>\n<li>Replaced redundant code with macros.</li>\n<li>Optimize mapping to monochrome.</li>\n<li>utilities/conjure.c: Had missed removing this file earlier.</li>\n</ul>\n</blockquote>\n<p>2003-01-04  Derry Bryson  &lt;<a class=\"reference external\" href=\"mailto:dbryson&#37;&#52;&#48;techass&#46;com\">dbryson<span>&#64;</span>techass<span>&#46;</span>com</a>&gt;</p>\n<blockquote>\n<ul class=\"simple\">\n<li>magick/decorate.c: Use the ShadowFactor rather than ShadowModule\ndefine in RaiseImage() (bug-fix).</li>\n</ul>\n</blockquote>\n</div>\n</body>\n</html>\n",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/ChangeLog-2003.rst": "2003-12-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/annotate.c (RenderFreetype): Ensure that image storage\n    class is set to DirectClass. Text rendering was not working\n    properly on top of PseudoClass images.\n\n  - magick/map.c (MagickMapRemoveEntry): Logic didn't properly\n    handle removing entry in list.\n\n  - configure.ac: Added --enable-efence option to enable memory\n    debugging using Electric Fence.\n\n2003-12-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - tests/maptest.c (main): Extended test to add an entry to the\n    list after an entry has already been removed.\n\n  - magick/image.c (ColorspaceTypeToString): Add support for LAB\n    colorspace.\n\n  - magick/map.c: Added signature members to all structures and\n    added assertions to ensure that the signature == MagickSignature\n    prior to use. MagickMapAllocateObject now initializes the object\n    reference count to one, and MagickMapDestroyObject decrements it\n    in order to be more correct even though the object reference count\n    is not actually used yet.\n    (MagickMapCopyString): Preserve a null argument, and use\n    AcquireString since it doesn't enlarge the string storage.\n    (MagickMapCopyBlob): Preserve null blobs.\n\n  - configure.ac: Search for the shmctl() function.  Under current\n    Cygwin, this is hiding in -lcygipc.\n\n2003-12-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/composite.c: Fixed the composite operator list in the\n    CompositeImage documentation.\n\n  - www/api/types.html: Corrected list of composition\n    operators. Sometime prior to the creation of GraphicsMagick, the\n    \"Replace\" composite operators were renamed to be \"Copy\" composite\n    operators.  Thanks to David Relson for bringing this problem to\n    our attention.\n\n  - PerlMagick/Magick.xs: Added \"LAB\" to colorspace types.\n\n  - magick/image.h (enum ColorSpace): Add LABColorspace enumeration.\n\n  - wand/magick\\_wand.h : Add some compatibility definitions to\n    translate from ImageMagick enumerations to existing GraphicsMagick\n    enumerations.\n\n2003-12-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/annotate.c: Use header synonyms defined by FreeType's\n    ftheader.h (included via <ft2build.h>) to include FreeType headers.\n    This will presumably be more portable in the future.\n\n  - configure.ac: <ft2build.h> is an optional prerequisite for\n    <freetype/freetype.h> and <libwmf/ipa.h> so include it when\n    testing for these headers.\n\n  - magick/annotate.c: Include <ft2build.h> if it is available.\n\n2003-12-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - wand/wandtest.c: Ported from latest ImageMagick version.\n\n  - wand/drawing\\_wand.c: Adapted to be compatible with latest\n    ImageMagick version.\n\n  - wand/pixel\\_wand.c: Adapted to be compatible with latest\n    ImageMagick version.\n\n  - wand/magick\\_wand.c: Ported from latest ImageMagick version.\n\n  - magick/image.h (Image): Members color\\_profile, iptc\\_profile,\n    generic\\_profile, and generic\\_profiles are now deprecated and\n    private although they continue to work as before. Please migrate\n    existing code to use the GetImageProfile and SetImageProfile\n    functions since these members will eventually be removed.\n\n  - magick/image.c (GetImageProfile): New function to retrieve an\n    image profile. Return value differs from similarly named\n    ImageMagick method since the ImageMagick approach assumes a\n    particular storage method.\n    (SetImageProfile): New function to add (or remove) an image\n    profile. Does not execute CMS color profiles.\n\n  - magick/cache.c (SetImageVirtualPixelMethod): Return unsigned int to\n    make the Wand implementation happy.\n\n  - magick/image.c (TransformColorspace): Return unsigned int to\n    make the Wand implementation happy.\n    (SetImageType): Return unsigned int to make the Wand\n    implementation happy.\n\n  - magick/draw.h, magick/draw.c: Substitute `unsigned long` in\n    place of `size\\_t` in interfaces so that the draw API is not\n    sensitive to the definition of \\_LP64.\n\n  - locale/C.mgk: Added new messages required by Wand library.\n\n  - magick/error.c (ExceptionSeverityToTag): Add tag translations\n    for the WandWarning, WandError, & WandFatalError enumerations\n\n  - magick/error.h (enum ExceptionType): Add WandWarning, WandError,\n    & WandFatalError enumerations to ExceptionType for ImageMagick\n    API compatibility.\n\n  - magick/image.h (enum ChannelType): Add an `AllChannels`\n    enumeration to the ChannelType enumeration for ImageMagick\n    API compatibility.\n\n2003-12-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - PerlMagick, tests: Adjusted allowed error values for tests based\n    on new error computation arithmatic.  Some tests were left failing\n    since the operation they test provides results which are\n    unreasonably inaccurate, or obviously broken.\n\n2003-12-17  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - coders/jpeg.c: Changed \"JPEG:preserve-settings from a key/value\n    pair to a simple flag.  Save and restore attributes when\n    \"-define JPEG:preserve-settings\" appears on the commandline.  Use\n    \"+define JPEG:preserve-settings\" to unset the flag.\n\n2003-12-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/wmf.c: Include <ft2build.h> if it is available since some\n    libwmf installs don't work unless it is included before the libwmf\n    API headers.\n\n  - configure.ac: Check for <ft2build.h>.\n\n2003-12-16  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - coders/jpeg.c: Changed stored jpeg quality attribute from\n    [jpeg-quality] to JPEG-Quality.  Added attributes JPEG-Colorspace\n    and JPEG-Sampling-factors.  Added code to save and restore\n    these attributes when \"-define JPEG:preserve-settings=yes\" is\n    present in the comandline.  Quality is restored if the input\n    was a JPEG and the quality was preserved.  Sampling factors\n    are restored if the input was a JPEG, sampling factors were\n    preserved, and the colorspace for the output file is the same\n    as that of the input file.\n\n2003-12-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - TclMagick/source/configure.ac: Add an initial TclMagick\n    configure-based build environment based on a template and macros\n    from the Tcl project.  I recall that while the extension does build,\n    it is possible that it is not properly registered as a module to Tcl.\n\n2003-12-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.c (IsImagesEqual): Properly compute error distance\n    vectors. Math was missing the necessary sqrt call.  Also,\n    pre-normalize the error differences to 1.0 in order to reduce the\n    storage size required to store the summation of error values.\n\n  - PerlMagick/t/composite.t: Update Minus and Xor reference images.\n\n  - magick/composite.c (CompositeImage): Incorporated fixes from\n    ImageMagick for XorCompositeOp, PlusCompositeOp, and\n    MinusCompositeOp.  Thanks to John Cristy for bringing the need for\n    these fixes to our attention.\n\n  - magick/image.h (RoundToQuantum): Added missing parenthesis.\n\n2003-12-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - doc/environment.imdoc: Document MAGICK\\_CODER\\_MODULE\\_PATH and\n    MAGICK\\_FILTER\\_MODULE\\_PATH.\n\n  - rungm.sh.in: Pass MAGICK\\_CODER\\_MODULE\\_PATH and\n    MAGICK\\_FILTER\\_MODULE\\_PATH in the environment so modules build may\n    be tested without first being installed.\n\n  - magick/module.c (FindMagickModule): Use the\n    MAGICK\\_CODER\\_MODULE\\_PATH environment variable to specify a search\n    path for coder modules.  Use MAGICK\\_FILTER\\_MODULE\\_PATH to specify\n    a search path for filter modules.\n\n  - Makefile.am: Updated to Automake 1.8.\n    (install-exec-perl): Fixes which achieve a successful\n    `make distcheck` for the first time in \\*Magick history.\n\n  - configure.ac: Set scripts to executable.\n\n2003-12-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - Makefile.am (uninstall-data-html): Pathnames were computed\n    incorrectly so documentation directories were being left behind.\n\n  - configure.ac: --without-frozenpaths is now the default.  This\n    helps `make distcheck` work and makes the package more portable.\n    Path to gm was being incorrectly frozen when --without-frozenpaths\n    was specified.\n\n  - magick/delegate.c (ReadConfigureFile): Validate delegate paths\n    prior to substitution.\n\n  - rungm.sh.in (top\\_builddir): Use a more reliable scheme for\n    computing location of source and build directories.\n\n  - magick/Makefile.am: Improve include directory computation logic.\n\n  - configure.ac: Don't override includedir.  Pass user-supplied LIBS\n    to the linker.\n\n2003-12-08  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - coders/jpeg.c: store JPEG quality as \"[jpeg\\_quality]\" attribute.\n\n2003-12-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - rungm.sh.in: New script to support executing uninstalled\n    executables.\n\n  - magick/blob.c (GetConfigureBlob): New MAGICK\\_CONFIGURE\\_PATH\n    environment variable allows the user to specify the search path\n    for configuration (.mgk) files.\n\n2003-12-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - index.html: Added a table showing current stable release and\n    development version.\n\n2003-12-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - doc/options.imdoc (use): Describe the syntax of the -process\n    argument.\n\n  - acinclude.m4 (AC\\_CHECK\\_CC\\_OPT): Add quoting in AC\\_CHECK\\_CC\\_OPT\n    definition.  Change suggested by Patrick Welche\n\n2003-12-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/magick.c (GetMagickInfo): Fix preprocessing logic error\n    which caused moby shared library build to not register static\n    modules.\n\n2003-12-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/module.c (ExecuteModuleProcess): Add some logging.\n\n  - magick/static.c (ExecuteStaticModuleProcess): Add some logging.\n\n2003-11-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - VisualMagick/installer: Add optional build support for LZW.\n\n  - wand/Makefile.am: Add AUTOMAKE\\_OPTIONS.\n\n  - configure.ac: Update to Autoconf 2.59.\n\n2003-11-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - VisualMagick/installer/inc/tasks-install-perlmagick.isx: Update\n    to reflect that the next release will use ActivePerl 5.8.1 Build\n    807.\n\n  - VisualMagick/installer/inc/files-configs.isx: Updated the source\n    locations for the .mgk files.  Install modules.mgk into the config\n    directory rather than the modules directory.\n\n  - configure.ac: Fixes to work with latest CVS libtool.\n\n  - libtool.m4: Update to latest CVS libtool.\n\n  - magick/modules.c, magick/static.c (ExecuteStaticModuleProcess):\n    Fix conditional compilation logic so that \"moby\" shared library\n    build works again.\n\n  - magick/compress.c, magick/mac.c: Use existing SaveImageText and\n    LoadImageText global constants rather than separate defines.\n\n2003-11-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - configure.ac: Update to Autoconf 2.58.\n\n  - Makefile.am: Update to Automake 1.7.9.\n\n2003-11-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/draw.c (DrawComposite): Base64-encoded image was not\n    being deallocated. Bad memory leak.\n\n2003-11-03  Mike Chiarappa  <mikechiarappa@libero.it>\n\n  - BCBMagick: Updated installation procedure. Please read \n    BCBMagick/readme.txt for details.\n    \n2003-11-03  Mike Chiarappa  <mikechiarappa@libero.it>\n\n  - BCBMagick: Released DLL Version. Please read BCBMagick/readme.txt\n    for details about installation and/or use.\n\n2003-11-03  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - magick/utility.c (GetPathComponent): Added x, X, and +\n    characters to list of legal characters in subimage\n    specifications. Required by raw RGB image reader which accepts the\n    syntax \"image.rgb[100x100+50+50]\". Thanks to John Cristy for\n    catching that one.\n\n2003-11-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/locale.c (GetLocaleMessageFromID): Fix ID range checking\n    logic.\n\n2003-10-30  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - coders/jpeg.c: changed to not write gray CMYK images as\n    grayscales. That would not be a valid optimization.\n\n  - magick/color.c (IsGrayImage, IsMonochromeImage): Changed to\n    never return true for CMYK images. Separated images get wrong\n    colors when optimized to grayscales based on what these two\n    functions return. Gray and CMYK are two different color spaces.\n\n  - magick/nt\\_feature.c (NTIsMagickConflict): changed to accept\n    colon as part of the magick string, consistent with the way the\n    function is used.\n\n  - magick/utility.c, magick/utility.h (ExpandFilenames,\n    GetPathComponent): Fixed filename glob expansion. Added handling\n    of filename prefix-magick and sub-image specification to\n    GetPathComponent. Sub-image specification takes precedence over\n    any filename patterns.\n\n2003-10-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/static.c (ExecuteModuleProcess): Renamed from\n    ExecuteStaticModuleProcess. Only compiled if SupportMagickModules\n    is not defined.\n\n  - magick/type.c (GetTypeBlob): Eliminated function.\n    (ReadTypeConfigureFile): Use GetConfigureBlob() rather than\n    GetTypeBlob().\n\n  - magick/module.c (GetModuleBlob): Eliminate this function since\n    modules.mgk is now installed under\n    ${prefix}/share/GraphicsMagick-version/config so\n    GetConfigureBlob() may be used.\n    (lt\\_dlexit, etc.) Eliminate fake libltdl function wrappers used\n    for the static build.\n    (DestroyMagickModules): Added a new destroy function (simply\n    invokes DestroyModuleInfo()).\n    (GetModuleList): Learn where modules live by using\n    FindMagickModule() to locate the LOGO module rather than by using\n    the location of modules.mgk.  This is necessary since now\n    modules.mgk may be seperate from the modules.\n    (GetModuleBlob): Eliminated function.\n    (InitializeMagickModules): New function to safely initialize the\n    module loader.\n    (OpenModule): Added logging messages.\n    (OpenModules): Added logging messages.\n    (ReadModuleConfigureFile): Use GetConfigureBlob() rather than\n    GetModuleBlob().\n    Totally eliminated the rat's-nest of conditional code dependent on\n    SupportMagickModules.  Now all the code in module.c is dependent\n    on #if defined(SupportMagickModules).\n\n  - magick/magick.c (DestroyMagick): Invoke DestroyMagickModules().\n    (GetMagickInfo): #ifdef chunks of code which exist to support the\n    modules-build rather than forcing the module loader to pretend\n    that modules are being used when they are not. Pass module loading\n    exceptions back to the user rather than discarding them.\n    (GetMagickInfoArray): Don't inspect the exception status since may\n    short-circuits the operation.  Use best-effort instead.\n    (ListMagickInfo): Don't inspect the current exception status so\n    that all the modules which did load successfully will be\n    represented.\n    (InitializeMagick): Invoke InitializeMagickModules().\n\n  - magick/log.c: (GetLogBlob): Eliminated function.\n    GetConfigureBlob() is safe to use now when configuring logging.\n    (LogToBlob): Simplified function.  Only exists since FileToBlob()\n    may throw exceptions (which are logged, causing deadlock).\n    (ReadLogConfigureFile): Use GetConfigureBlob().\n\n  - magick/blob.c (GetConfigureBlob): Re-written to use the\n    MagickMap interface and to support the new `lib` and `share`\n    config directories.  The directory\n    ${prefix}/lib/GraphicsMagick-version/config is scanned before\n    ${prefix}/share/GraphicsMagick-version/config.\n    (FileToBlob): Simplified implementation.\n\n  - config/Makefile.am: New makefile to install .mgk files.\n\n  - magick/magick\\_config.h.in: Added MagickLibConfigPath and\n    MagickShareConfigPath defines.\n\n  - configure.ac: Install configuration files (.mgk files) in\n    ${prefix}/lib/GraphicsMagick-version/config and\n    ${prefix}/share/GraphicsMagick-version/config.  Architecture\n    independent files to under \"share\" while architecture dependnet\n    files go under \"lib\".\n\n  - Makefile.am: Added `config` subdirectory to distribution.  All\n    .mgk files are moved from `coders` & `magick` into this single\n    directory.\n\n2003-10-21  Mike Chiarappa  <mikechiarappa@libero.it>\n\n  - magick/studio.h: small modifications to achieve DLL\n    compilation of library with Borland C++ Builder.\n\n  - coders/ps3.c (ZLIBEncode2Image): Fixed bug. Compilation\n    fail when HasZLIB is undefined because parameters 5 and 6,\n    are undefined.\n    \n2003-10-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - libtool.m4: Updated libtool again to CVS latest version.\n    Libtool required some fixes for building DLLs under MinGW.\n\n  - magick/resource.c (InitializeMagickResources): Some code is\n    conditional based on HAVE\\_POPEN.\n\n  - magick/utility.c (SystemCommand): Improved conditional\n    compilation logic.\n\n  - magick/blob.c (OpenBlob): Code depending on popen() is\n    conditionally compiled based on HAVE\\_POPEN.  Code depending on\n    pclose() is conditionally compiled based on HAVE\\_PCLOSE.\n\n  - configure.ac: Add test for \\_pclose(), pclose(), \\_popen(), and\n    popen().\n\n  - magick/locale.c (GetLocaleMessage): Add missing MagickExport.\n    (GetLocaleMessageFromID): Add missing MagickExport.\n\n  - VisualMagick/installer/inc/files-development.isx (Source):\n    Include all of the headers from the magick directory in the\n    development package.  Including them individually is too error\n    prone.\n\n2003-10-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - VisualMagick/magick/magick\\_config.h.in: Added\n    PREFIX\\_MAGICK\\_SYMBOLS as a configuration option.\n\n  - magick/module.c (\\_CoderInfo): Added register\\_function and\n    unregister\\_function members to record the module's register and\n    unregister function addresses.\n    (OpenModule): Locate the module's register and unregister\n    functions and save their address to the module's CoderInfo record.\n    (UnloadModule): Invoke the module unregister function using the\n    address recorded by OpenModule().\n    (TagToFunctionName): If PREFIX\\_MAGICK\\_SYMBOLS is defined, then add\n    a \"Gm\" prefix to the register and unregister function names.\n\n  - libtool: Updated libtool files to the latest CVS version.\n\n  - configure.ac: Changed define name from MAGICK\\_SYMBOL\\_PREFIX to\n    PREFIX\\_MAGICK\\_SYMBOLS since support is not available for\n    specifying an arbitrary prefix.\n\n2003-10-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - configure.ac: Added --enable-symbol-prefix configure option\n    which prepends \"Gm\" to all GraphicsMagick library symbols using\n    the C pre-processor.  In the future, this may change to support\n    specifying an arbitrary prefix, depending on experience.\n\n  - magick/studio.h: Include magick/symbols.h.\n\n  - magick/api.h: Include magick/symbols.h.\n\n  - magick/symbols.h: New header to support optionally remapping\n    library symbols.  If MAGICK\\_SYMBOL\\_PREFIX is defined, then\n    library symbols are remapped.\n\n2003-10-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/api.h: Removed inclusion of <magick/semaphore.h> since it\n    is an implementation header.\n\n2003-10-13  Lars Skyum  <lrs@stibo.dk>\n\n  - www/GraphicsMagick.html, www/animate.html, www/composite.html,\n    www/conjure.html, www/convert.html, www/display.html, www/gm.html,\n    www/identify.html, www/import.html, www/mogrify.html,\n    www/montage.html: added documentation for \"-define\" command line\n    option.\t\n\n  - doc/brief\\_options.imdoc, doc/options.imdoc: Added documentation\n    for \"-define\" command line option.\n\n  - doc/gmdocselect, doc/imdocselect: Changed \"skipform\" label in\n    sed scripts to just \"skipf\". Solaris sed had problems with the\n    long(?) \"skipform\" label.\n\n2003-10-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - doc/composite.imdoc, doc/options.imdoc, doc/GraphicsMagick.imdoc:\n    Attempted to clarify the meaning of the compose arguments and how\n    composition works, as well as eliminating use of hard-coded values like\n    255.\n\n  - www/links.html: Added a link to Michael Still's article\n    \"Graphics from the command line\".\n\n2003-10-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/\\*.c: Updated module descriptions so that they accurately\n    describe the module rather than saying \"Read/Write GraphicsMagick\n    Image Format\".\n\n  - coders/cineon.c: Fix source module description.  Contrary to\n    opinion, ImageMagick did not invent the Cineon X image format so\n    description is now \"Read/Write Cineon X Image Format.\"\n\n  - magick/magic.mgk: Added a CINEON entry for the Cineon X image\n    format.\n\n  - magick/static.c (RegisterStaticModules): Invoke\n    RegisterCINEONImage().\n\n  - coders/modules.mgk: Map \"CIN\" magick to CINEON module.\n\n2003-10-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - locale/C.mgk: Added message for \"UnrecognizedCommand\".\n\n  - magick/command.c (MagickCommand): No error was reported when a\n    subcommand failed to be matched so `gm foo` would silently return.\n    Now an error message is properly reported.\n\n2003-10-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - Makefile.am: Updated to Automake 1.7.8.\n\n  - various: Edits to eliminate minor issues detected by SGI C compiler.\n\n  - coders/ps3.c (WritePS3Image): Variable `value` was set but never\n    used so it is removed.\n\n  - magick/image.c (RGBTransformPacket): Removed inline request\n    since this function is too big to inline.\n\n  - magick/animate.c (XAnimateBackgroundImage): Fixed a GCC 3.X\n    \"type pinning\" warning.\n\n  - magick/display.c (XDisplayBackgroundImage): Fixed a GCC 3.X\n    \"type pinning\" warning.\n\n  - magick/render.c (GetPixelOpacity): Removed inline directive.  No\n    one in their right mind could ever imagine this function inlining\n    successfully.\t\n\n  - magick/cache.c (IsNexusInCore): Adjusted so function inlines as\n    requested.\n\n  - coders/tiff.c (ReadTIFFImage): Improved logging information.\n    (WriteTIFFImage): Changed the way the bilevel/grayscale logic\n    works.  Now bilevel images are treated similar to any other\n    grayscale image unless CCITT FAX3 or FAX4 compression is requested\n    (which selects the MINISWHITE photometric).  The default is now to\n    write uncompressed bilevel images with MINISBLACK photometric.\n\n  - PerlMagick/t/composite.t: Use some reasonable error values.\n\n  - magick/image.c (GetImageDepth): Added special cases for\n    colormapped images and monochrome images in order to improve\n    performance.\n\n2003-10-09  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - NEWS: added info about color scaling, sampling-factor, and\n    changed a reference to \"-coder-options\" to \"-define\".\n\n2003-10-09  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - VisualMagick/bin/modules.mgk: added EPS3 mapping to PS3 module.\n\n  - coders/ps3.c, coders/tiff.c, magick/command.c, magick/image.c,\n    magick/image.h, magick/utility.c: Changed -coder-options option to\n    -define. Also renamed functions {Add,Remove,Access}CoderOption(s)\n    to {Add,Remove,Access}Definition(s). Changed ps coder-specific\n    option ps:image=imagemask to just ps:imagemask.\n\n2003-10-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/cineon.c: Imported and adapted Cineon image format coder\n    written by Kelly Bergougnoux <three3@users.sourceforge.net> with\n    assistance from John Cristy.\n\n2003-10-08  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - coders/jpeg.c: Extended -sampling-factor option to allow\n    user to supply full set of sampling factors.  If the full\n    set is not supplied, omitted ones are 1x1 by default, similar\n    to the behavior of \"cjpeg -sample\".\n\n  - magick/command.c: Accept multiple pairs of sampling factors.\n\n2003-10-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/tiff.c (WriteTIFFImage): Re-arranged logging for improved\n    output.  Cleaned up evaluation of SAMPLESPERPIXEL and\n    BITSPERSAMPLE.  Provided support for the TIFF coder options\n    tiff:samples-per-pixel and tiff:bits-per-sample for power users.\n    (ReadTIFFImage): Colormap generation for PHOTOMETRIC\\_MINISBLACK\n    and PHOTOMETRIC\\_MINISWHITE was inaccurate.  Seems to be accurate\n    now.\n\n  - PerlMagick/t/reference/read/input.miff: Updated due to Glenn's\n    change to scale macros.\n\n  - PerlMagick/t/tiff/input\\_gray\\_12bit.tiff: Replaced 12 bit image\n    with a different one which is written by GraphicsMagick.\n\n  - coders/ps3.c (WritePS3Image): Use AccessCoderOption().\n\n  - magick/image.c (AccessCoderOption): Added a function to use for\n    accessing coder-specific options.\n\n2003-10-08  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - magick/attribute.c (TraceSVGClippingPath): optimized for speed\n    and precision in clipping mask generation by using lines to\n    connect Bezier curve anchor points where applicable.\n\n2003-10-07  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - Revised ScaleColor5to8 and ScaleColor6to8 macros again, to\n    fill the low bits correctly.\n\n2003-10-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - PerlMagick/t/tiff/read.t: Added 16-color and 256 color\n    colormapped tests with a matte channel.\n\n  - PerlMagick/t/tiff/write.t: Added 16-color and 256 color\n    colormapped tests with a matte channel.\n\n  - coders/tiff.c (WriteTIFFImage): When using LZW compression,\n    apply the horizontal differencing predictor to RGB truecolor and\n    deep gray images since the TIFF spec says that LZW compression is\n    usually improved by using horizontal differencing with continuous\n    tone images.\n    Re-implemented grayscale and colormapped scanline preparation to\n    use the new bit-stream interface.  This is a bit slower, but very\n    flexible, and the implementation is very compact.  Writing of a\n    matte (transparency) channel is now believed to be correct for all\n    depths.\n\n  - magick/command.c (MogrifyImage): Only transform the colorspace\n    if it has been set (i.e. is not UndefinedColorspace).\n\n2003-10-06  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - coders/png.c (ReadOnePNGImage): PNG decoder would exit too\n    early when reading image.png[0].\n\n2003-10-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - PerlMagick/t/tiff/write.t: Added TIFF write tests for 4\n    bits-per-sample TIFF images, both with and without a transparency\n    channel.\n\n  - magick/image.c (DescribeImage): Added -verbose support for\n    displaying individual channel depths.\n\n2003-10-06  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - magick/image.c (SetImageInfo): cleaned up parsing of subimage\n    specification (image.psd[0]). It would fail sometimes due to\n    incorrect reuse of variables. It's a bit strange the code accepts\n    more range syntax-variations than can be stored in ImageInfo.\n\n2003-10-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.c (ChannelImage): The OpacityChannel, MatteChannel,\n    and BlackChannel operations set the matte channel to opaque, so\n    set image->matte to False for those operations.\n    (RGBTransformImage): Add an assertion to prevent passing the\n    colorspace argument `UndefinedColorspace`.\n    (TransformRGBImage): Add an assertion to prevent passing an image\n    with colorspace set to `UndefinedColorspace`.\n\n2003-10-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/log.c (LogToBlob): Since MagickSeek(file,0,SEEK\\_END) is\n    used to obtain the Blob size, MagickSeek(file,0,SEEK\\_SET) must be\n    used to restore the seek position.  Thanks to John Cristy for\n    bringing this to our attention.\n\n2003-10-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/bit\\_stream.h: Added a bit-stream writer function.\n\n  - PerlMagick/t/reference/read/input\\_tim.miff: Reference image\n    was defective.\n\n2003-10-03  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - magick/image.c, magick/image.h: Updated AddCoderOptions to\n    accept \"flag\" keys that have no values. They are placed in the\n    coder options map with an empty, zero length string value. Option\n    argument syntax is now: \"key1[=[value1]],key2[=[value2]],...\"\n\n2003-10-03  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - magick/command.c: Updated +coder-options option to not clear the\n    entire map of coder options, but accept a list of names to remove\n    from the map. Use option argument \"\\*\" to clear the entire map of\n    coder options.\n\n  - magick/image.c, magick/image.h: Added function\n    RemoveCoderOptions. Added cast of signed char to unsigned char and\n    int in calls to isspace and isprint.\n\n  - magick/utility.c: Added cast of signed char to unsigned char and\n    int in calls to isspace and isprint. Added special handling of\n    +coder-options option in ExpandFilenames function.\n\n2003-10-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - PerlMagick/t/reference/read/input\\_tim.miff: The TIM read results\n    changed somewhat due to Glenn's ScaleColor5to8 fix.\n\n2003-10-01  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - Revised ScaleColor5to8 and ScaleColor6to8 macros to fill in the\n    low bytes.\n\n  - coders/bmp.c (ReadBMPImage): scaling of 8-8-8-8-bit images was\n    also slightly incorrect.\n\n2003-09-30  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - coders/bmp.c (ReadBMPImage): scaling of 5-5-5-bit and 5-6-5-bit\n    images was slightly incorrect.\n\n2003-09-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/tiff.c (ReadTIFFImage): When using the generic bit-stream\n    marshaller to read colormapped/gray images, the slight performance\n    improvement from creating a special case for matte images did not\n    justify almost doubling the amount of code.  Therefore, the two\n    loops are combined back into one.\n\n2003-09-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/tiff.c (ReadTIFFImage): Fixed reading grayscale TIFFs\n    that have a transparency channel. Now uses a generic bit-stream\n    marshaller to allow reading any grayscale or colormapped TIFF with\n    any bits per sample in the range of 1 to 16.\n\n  - magick/bit\\_stream.h: Added a generic implementation for\n    marshalling from a bit-stream into a quantum.  Still needs\n    re-writing for best performance.\n\n  - PerlMagick/t/tiff/read.t: Added a test case for reading 8-bit\n    grayscale TIFF with matte.  Corrected grayscale 12-bit read\n    signatures.  Added 16 color PseudoClass read test.  Added 4-bit\n    grayscale read test.\n\n2003-09-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/tiff.c (WriteTIFFImage): Add support for writing\n    DirectClass grayscale images at 4 bits per sample, including those\n    with an opacity channel.  This allows writing smaller files\n    (half the size) when the image has 16 (or less) levels of gray.\n    Use \"gm convert inimage.tiff -depth 4 outimage.tiff\" to quickly\n    create grayscale TIFF file with 16 (or less) levels of gray.\n\n2003-09-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - NEWS: Updated NEWS file with changes since last update.\n\n  - index.html: Added a link to the www/AUTHORS.html file, as well\n    as text stating that GraphicsMagick is originally derived from\n    ImageMagick 5.5.2, with a link to the ImageMagick site.\n\n  - Makefile.am: Add rules to generate www/AUTHORS.html.\n\n  - www/AUTHORS.html: New HTML file based on the AUTHORS file in the\n    source package.  GraphicsMagick has many authors.\n\n2003-09-25  William Radcliffe  <billr@corbis.com>\n  - magick/image.c: Updated DescribeImage to cleanup EXIF data display\n    based on work by Cristy in ImageMagick.\n\n2003-09-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/tiff.c (WriteTIFFImage): Add support for writing\n    colormapped TIFF images with 1, 2, & 4 bits per colormap index.\n    This allows writing smaller files.\n\n2003-09-24  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - coders/ps3.c: Now creates a correct %%BoundingBox for images\n    with resolution stored as pixels per centimeter. Renamed serialize\n    functions. Added comment headers where they were\n    missing. Reformatted code to be in alignment with GraphicsMagick\n    standard formatting.\n\n  - magick/map.c: Fixed semaphore double locking problem in\n    MagickMapCloneMap.\n\n2003-09-23  Mike Chiarappa  <mikechiarappa@libero.it>\n\n  - BCBMagick/readme.txt : Updated compilation instructions.\n\n  - BCBMagick/magick/libMagick.bpr : Updated project, now include map.c.\n\n  - BCBMagick/lcms/Projects/BCB6/lcms.bpr : Updated project, now\n    include cmscam02.c and cmsvirt.c.  Much thanks to Alex Dvoretsky\n    for bringing this problem to my attention.\n    \n2003-09-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.h (Image): Moved private members to bottom of\n    structure.\n    (\\_ImageInfo): Moved private members to bottom of\n    structure.\n\n  - magick/Makefile.am (pkginclude\\_HEADERS): Don't install\n    semaphore.h.\n    (noinst\\_HEADERS): Distribute map.h and semaphore.h.\n\n  - magick/image.h (ImageInfo): Change coder\\_options member from\n    type `MagickMap` to type `void \\*`.\n\n  - coders/png.c: include magick/semaphore.h.\n\n  - magick/blob.c: include magick/semaphore.h.\n\n  - magick/color.c: include magick/semaphore.h.\n\n  - magick/constitute.c: include magick/semaphore.h.\n\n  - magick/delegate.c: include magick/semaphore.h.\n\n  - magick/log.c: include magick/semaphore.h.\n\n  - magick/magic.c: include magick/semaphore.h.\n\n  - magick/magick.c: include magick/semaphore.h.\n\n  - magick/module.c: include magick/semaphore.h.\n\n  - magick/semaphore.c: include magick/semaphore.h.\n\n  - magick/stream.c: include magick/semaphore.h.\n\n  - magick/tempfile.c: include magick/semaphore.h.\n\n  - magick/type.c: include magick/semaphore.h.\n\n  - magick/blob.h (\\_BlobInfo): Changed `Semaphore \\*` to `void \\*`.\n\n  - magick/cache.h (\\_CacheInfo): Changed `Semaphore \\*` to `void \\*`.\n\n  - magick/image.h (\\_Image): Changed `Semaphore \\*` to `void \\*`.\n\n  - magick/command.c: Updated each invokation of MagickMapAddEntry()\n    to add an exception argument.\n\n  - tests/maptest.c: Updated to pass an exception argument to\n    MagickMapAddEntry.\n\n  - magick/image.c (AddCoderOptions): Added exception argument\n    and some more error handling.\n\n  - magick/map.c: Added formal documentation for methods.\n    (MagickMapCloneMap): Added exception argument.\n    (MagickMapAddEntry): Added exception argument and status.\n\n2003-09-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/emf.c: Changed NotAnEMFFile to ImproperImageHeader.\n\n  - magick/map.h: Changed all size parmeters from type `unsigned\n    long` to `size\\_t`.\n\n  - magick/map.c (MagickMapCopyBlob): Add new function to support\n    copying a Blob in a MagickMap.\n    (MagickMapDeallocateBlob): Add new function to support\n    deallocating a Blob in MagickMap.\n\n2003-09-23  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - coders/ps3.c: Fixed handling the case when no -coder-options are\n    provided to the PS3 coder.\n\n2003-09-22  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - coders/ps3.c: Changed %%Creator version to use\n    MagickLibVersionText, increased precision in HiResBoundingBox,\n    added a coder specific option for rendering bilevel images with\n    the PS imagemask operator indstead of the image operator.  \n\n  - magick/command.c: Added \"-coder-options\" command line argument\n    to all relevant command line utilities. Option argument to\n    -coder-options is a list of comma separated key-value pairs that\n    are saved in a MagickMap in ImageInfo for (de-)coders to use. See\n    PS3 coder for an example that checks for: -coder-options\n    \"ps:image=imagemask\"\n\n  - magick/image.c, magick/image.h: Added function AddCoderOptions().\n\n  - magick/map.c, magick/map.h: removed MS-DOS line terminators.\n\n2003-09-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - tests/maptest.c (main): Test/demo program for key,value map API.\n\n  - magick/map.c, magick/map.h: Implementation of a key,value map\n    API for internal use.\n\n2003-09-19  William Radcliffe  <billr@corbis.com>\n\n  - lcms/include/icc34.h lcms.h: Added back the icc34.h header and\n    changes to make lcms compile on Win32\" icc34.h lcms.h.\n\n2003-09-19  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - coders/ps3.c: Fixed warnings from Solaris compiler.\n\n2003-09-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - locale/C.mgk: Eliminated the many \"NotA\" messages since they may\n    all be considered forms of \"ImproperImageHeader\".  It is useful to\n    provide the origin of such messages in case the wrong coder has\n    been invoked, however, this is expensive to do via the message\n    database since it explodes the number of messages.  The exception\n    logging can help here.  Once the exception reports include the\n    reporting entity, it will be more clear when the software\n    misbehaves.\n\n  - magick/error.h (ThrowReaderException2): Remove since no longer\n    used.\n    (ThrowReaderException): Simplified implementation so that\n    ThrowException is not expanded twice.\n\n  - magick/error.h (ThrowReaderException3): Remove since never used.\n\n  - coders/xtrn.c (ReadXTRNImage): Use ThrowReaderException rather\n    than ThrowReaderException2.\n\n  - locale/C.mgk (MissingArgument) Updated to include %s so that the\n    description field appears earlier in the message.\n\n  - magick/error.c (DefaultErrorHandler): Added a hack to allow the\n    `reason` member to include a %s so that it may specify the\n    formating of the message.  Care should be taken to not over-use\n    this hack.\n\n2003-09-18  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - coders/ps3.c: Major update of the PS3 coder. Now ascii85 encodes\n    all binary data. Many printer spoolers don't like the binary\n    data. The coder now creates much smaller files for bilevel, gray,\n    and colormapped images. Compression and image type is now\n    separated so they may be combined independently. Any alpha channel\n    is separated into a separate mask so it's possible to mask\n    bilevel, gray, colormapped, rgb, and CKYK images. You may also\n    mask a JPEG compressed PS file for instance. Clipping masks\n    created from a photoshop clipping path with -clip option is\n    converted to a corresponding postscript clipping path.  New\n    functions need comment headers.\n\n  - magick/attribute.c: Added TracePSClippingPath for creating a\n    postscript clipping path from a photoshop clipping path.\n\n  - magick/compress.c, magick/compress.h: Added write-hook based\n    interface to compression functions. Required for ascii encoding\n    compressed, binary data. The interface between blob write\n    functions, compression functions, and encoding functions could\n    benefit from more of this work.\n\n  - magick/image.c: ClipPathImage now stores the name of the\n    clipping path in the mask image filename so that it is remembered\n    and may be used for creating a postscript clipping path for\n    postscript output.\n\n  - coders/modules.mgk: Added EPS3 mapping to module PS3.\n\n2003-09-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/command.c: Coalesced various \"Missing\" error reports into\n    one \"MissingArgument\" error report in order to reduce the number\n    of messages to be maintained.\n\n  - locale/C.mgk: Removed almost all \"Missing\" messages.\n\n  - magick/gm\\_messages.mc: Added Microsoft message compiler source\n    file to CVS until which time it may be generated automatically\n    during the build.\n\n2003-09-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - locale/Makefile: Added ability to generate gm\\_messages.mc\n    (for Windows message compiler) as well as adding `clean` and\n    `install` targets.\n\n  - magick/delegate.h: Visual Studio .NET 2003 doesn't like\n    the chaining of GhostscriptVector members which share a\n    common return type. Splitting the definitions solves this\n    problem.\n\n2003-09-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/deprecate.h (MagickSignedType): Compatibility definition\n    to handle ImageMagick API change.\n    (MagickUnsignedType): Compatibility definition to handle\n    ImageMagick API change. The new names are just as useless as the\n    old names, but at least they are shorter.\n\n  - magick/command.c: Linux's sscanf has the terrible bug that it\n    improperly handles pulling out the first floating value from the\n    string \"0x1\".  Instead of retrieving the value 0 and returning 1,\n    it returns 0, probably because it rejects the string as a hex\n    constant. As a result, all options which used sscanf to validate\n    this input are now converted to use IsGeometry().\n\n2003-09-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - ltdl/ltdl.c: Update to libltdl current as of today.\n\n  - ltmain.sh: Update to libtool current as of today.\n\n  - configure.ac: For HPUX C++ compiler, add -AA to CXXFLAGS rather\n    than CXX.\n\n2003-09-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - configure.ac: Decided that the standards conformance\n    defines create more problems than they solve so they are\n    removed.\n    Move the large-file tests to before the libtool configuration\n    since the libtool configuration was causing stdlib.h to be\n    included prior to the large file defines, and this causes\n    header failure with C++ under AIX.\n\n  - www/api/types.html: Update description of MonitorHandler.\n\n2003-09-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - configure.ac: Set CXX to PTHREAD\\_CXX if necessary (and warn).\n\n  - acinclude.m4 (ACX\\_PTHREAD): Add check to see if xlC\\_r should be\n    used for AIX.\n\n2003-09-10  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - magick/render.c: Fixed handling of arc primitive (see IM-5.5.8).\n\n2003-09-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/log.h: It seems that test programs are using\n    GetMagickModule so make it visible by default.\n\n  - configure.ac: Use GM\\_FUNC\\_MMAP\\_FILEIO macro to test mmap.\n\n  - acinclude.m4 (GM\\_FUNC\\_MMAP\\_FILEIO): New macro to test mmap's\n    capability to do coherent file I/O.  The AC\\_FUNC\\_MMAP macro\n    was not testing the mmap features that GraphicsMagick uses, and\n    was failing on a number of systems.\n\n  - magick/blob.c (BlobMapModeToString): Only include this static\n    function if HAVE\\_MMAP is defined.\n\n  - coders/locale.c (WriteLOCALEImage): Fix FormatString argument\n    type inconsistencies.\n\n  - wand/magick\\_compat.h: Change MagickExport to WandExport.\n\n  - coders/jpeg.c, coders/locale.c, coders/meta.c, coders/miff.c,\n    coders/palm.c, coders/pict.c, coders/svg.c, coders/tiff.c,\n    coders/topol.c, magick/cache.c, magick/display.c, magick/image.c,\n    magick/widget.c: Removed unused values, changed storage types, or\n    added explicit casts, in order to reduce the number of \"REMARK\"s\n    when using the SGI IRIX compiler.\n\n  - magick/render.c (DrawClipPath): Fix memory leak of\n    clone\\_info->clip\\_path.  Problem reported by Vladimir\n    <lvm@integrum.ru>.\n    (DestroyDrawInfo): Remove unnecessary checks for non-null prior to\n    invoking MagickFreeMemory. MagickFreeMemory already checks for\n    non-null.\n\n  - magick/log.h (GetCurrentFunction): Apparently Visual C++ 6.0\n    does not support \\_\\_FUNCTION\\_\\_.  Problem reported by Vladimir\n    <lvm@integrum.ru>.\n\n  - wand/magick\\_compat.c: All functions in magick\\_compat.c must use\n    WandExport rather than MagickExport. Fix recommended by Vladimir\n    <lvm@integrum.ru>.\n\n  - magick/constitute.c (PushImagePixels): number\\_pixels was always\n    cast to a long during use, so change to store value in a long\n    instead.\n    (PopImagePixels): number\\_pixels was always\n    cast to a long during use, so change to store value in a long\n    instead.\n\n2003-09-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/psd.c: Eliminated warning regarding unused initialized\n    variable.\n\n  - magick/log.c: Eliminate type warnings regarding enum assignment.\n\n  - coders/locale.c (WriteLOCALEImage): Use UndefinedException\n    rather than 0 in severity\\_list terminating entry in order to avoid\n    a type conversion warning.\n\n  - magick/image.c (SetImageChannelDepth): Depth parameter was being\n    returned rather than status.  Oops!\n\n  - magick/effect.c (BlurScanline): Due to automatic casting\n    conventions, computation was being done (at least with SGI\n    compiler) as type `unsigned long` rather than `long` as it should\n    have been.\n\n  - coders/jpeg.c, coders/meta.c, coders/miff.c, coders/msl.c,\n    coders/palm.c, coders/pcd.c, coders/psd.c, coders/svg.c,\n    coders/tiff.c, coders/xcf.c, magick/render.c, : Quench many SGI\n    compiler warnings regarding variables which are initialized but\n    never used.\n\n  - magick/xwindow.h: Undef gravity defines so that enumerated type\n    is used instead.\n\n2003-09-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/log.c (LogMagickEvent): Windows system logging\n    functionality is not currently ported to work with Cygwin so\n    disable when compiling under Cygwin.\n\n  - magick/log.c (Win32EventlogOutput): Remove spurious comma in enum.\n\n  - wand/drawing\\_wand.h: Remove junk comment marker that I forgot to\n    remove.\n\n  - magick/studio.h: Provide prototypes for strlcpy and vsnprintf if\n    the system doesn't provide them in the requested compilation\n    environment.\n\n  - configure.ac: Add necessary standards compilance definitions to\n    magick\\_config.h.\n    Check for strlcpy and vsnprintf prototypes.\n\n  - Makefile.am (DOCDIRS): www/api/types does not exist anymore.\n\n2003-09-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - configure.ac: Move multithread tests prior to libtool\n    configuration in case value of CC is changed.  Otherwise libtool\n    gets confused and refuses to run.\n\n  - acinclude.m4 (ACX\\_PTHREAD): If using AIX CC `xlc` use `xlc\\_r`\n    for multithread compiler.\n\n  - coders/jpeg.c: Undef HAVE\\_STDLIB\\_H before including the\n    jpeg headers or else we get an already defined error/warning.\n\n2003-09-04  Mike Chiarappa  <mikechiarappa@libero.it>\n\n  - BCBMagick : Updated whole directory tree to achieve correct\n    compilation with Borland C++ Buider 6.0.\n\n2003-09-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.c (ClipPathImage): Remove MS-DOS line terminations\n    (actually, extra carriage returns) which somehow crept into\n    ClipPathImage.\n\n  - locale/C.mgk: Added message for \"PNG library is too old\".\n\n2003-09-04  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - magick/transform.c (ProfileImage): Bugfix: conditional\n    compilation based on LCMS being present or not now works as\n    expected. An exception is thrown if LCMS is not present and\n    profile conversion is used.\n\n2003-09-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/txt.c (ReadTXTImage): Fix strlen() pointer type warning.\n\n  - magick/image.c (TextureImage): Fixed return with no value warning.\n\n  - magick/color.c (GetColorInfoArray): Decided that the const\n    return value was a bad idea.  Therefore, the return type has been\n    made non-const.\n\n  - magick/magick.c (GetMagickInfoArray): Decided that the const\n    return value was a bad idea.  Therefore, the return type has been\n    made non-const.\t\n\n  - tests/constitute.c, tests/rwblob.c, tests/rwfile.c : Define\n    MAGICK\\_IMPLEMENTATION since these test programs using some internal\n    extensions.\n\n  - configure.ac: Test C++ compiler for \\_\\_func\\_\\_ support.\n\n  - magick/log.h: Added GetCurrentFunction() macro to handle\n    \\_\\_func\\_\\_ support determination.  Re-wrote GetMagickModule() macro\n    to use GetCurrentFunction().  Changes should allow compilation of\n    Magick++ when the C compiler supports \\_\\_func\\_\\_ but the C++\n    compiler does not.\n\n  - configure.ac: Changed from using HAS\\_\\_\\_func\\_\\_ define to\n    HAS\\_C\\_\\_func\\_\\_ since this feature may be language sensitive.\n\n  - locale/C.mgk: Added missing JNGCompressionNotSupported message.\n\n2003-09-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/attribute.c (Generate8BIMAttribute): Fix sscanf argument\n    type mis-match.\n\n  - coders/ps3.c (ZLIBEncodeImage): Fix mis-classified\n    ZipLibraryIsNotAvailable error report.\n\n  - coders/url.c (RegisterURLImage): Only register URL format\n    support if libxml2 is available.\n\n  - coders/msl.c (RegisterMSLImage): Only register MSL format\n    support if libxml2 is available.\n\n2003-09-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/histogram.c (WriteHISTOGRAMImage): Remove a useless loop.\n\n  - coders/wpg.c: Applied patch from Fojtik Jaroslav to support\n    reading WPGs which use the EXT token.\n\n2003-08-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/color.c (HistogramToFile): Renamed static method\n    `Histogram` to `HistogramToFile` to make it more clear what this\n    function does.\n    (GetColorHistogram): Added new function to support retrieving a\n    color histogram of the image.  A color histogram contains a count\n    of how many times each color occurs in the image.\n\n  - magick/image.c (GetImageChannelDepth): Return an `unsigned int`\n    rather than `long`.\n\n2003-08-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - PerlMagick/Magick.xs: Add support for CopyCyan, CopyMagenta,\n    CopyYellow, and CopyBlack, composition operators.\n\n  - magick/composite.c (CompositeImage): Added support for\n    CopyCyanCompositeOp, CopyMagentaCompositeOp,\n    CopyYellowCompositeOp, and CopyBlackCompositeOp, composition\n    operators.\n\n2003-08-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - wand/\\*: Updated to current ImageMagick Wand API (minus a few\n    unimplemented functions).\n\n  - magick/image.c (TextureImage): Add status return because Wand API\n    wants it.  Inherit is\\_grayscale status from texture image.\n\n  - magick/fx.c (SolarizeImage): Add status return because Wand API\n    wants it.\n\n  - magick/resource.c (SetMagickResourceLimit): Add status return\n    because Wand API wants it.\n\n  - magick/draw.c (DrawPeekGraphicContext): Now returns a\n    copy of the current DrawInfo context rather than returning\n    a pointer into the context stack. The user must destroy\n    this copy using DestroyDrawInfo() once it is no longer\n    needed.\n\n2003-08-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - VisualMagick/filters/LIBRARY.txt: This file is necessary to\n    incorporate analyze.c into the static build.  Without it the\n    build fails.\n\n2003-08-23  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - magick/transform.c: ProfileImage updated to handle alpha\n    channels and grayscale images. Also optimized color profiling of\n    color mapped images and fixed a few bugs in profiling of CMYK\n    images.\n\n  - magic/locale\\_c.h: added MagickExport to prototype declaration of\n    GetLocaleMessageFromID in WriteLOCALEImage again. Please update\n    your locale coder.\n    \n2003-08-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/wpg.c: Applied patch from Fojtik Jaroslav to use the\n    GetMagicInfo() function to obtain the format of embedded images,\n    and to provide a default WPG palette if the WPG file does not\n    supply a palette.\n\n2003-08-22  William Radcliffe  <billr@corbis.com>\n\n  - magick\\gm\\_messages.bin locale\\_c.h transform.c: Fixed missing\n    message problem and added support for new lcms error handler.\n\n2003-08-21  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - magick/attribute.c, magick/image.c, magick/command.c: Added\n    \"clippath\" option for clipping named Photoshop clipping paths,\n    increased precision in clipping path knots, added comments, and\n    fixed a few bugs resulting from moving TraceClippingPath function\n    from ImageMagick to GraphicsMagick. Still need to update some of\n    the documentation.\n\n  - magick/locale\\_c.h, magick/studio.h: added MagickExport to\n    declaration of GetLocaleMessageFromID and moved include of\n    magick/locale\\_c.h after declaration of MagickExport. This fixes a\n    link error in dynamic, DLL version.\n\n  - coders/locale.h: added MagickExport to prototype declaration of\n    GetLocaleMessageFromID in WriteLOCALEImage.\n\n2003-08-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - PerlMagick/t/subroutines.pl (testRead): Ignore useless TIFF\n    warning so that 12-bit TIFF test passes.\n\n  - magick/constitute.c (ReadImage): Ensure that the reported image\n    magic string is that of the user-specified input file rather than\n    a temporary file prepared by an external delegate program.\n\n  - magick/command.c (ImportImageCommand): Since\n    DestroyExceptionInfo() now sets the destroyed exception signature\n    to an invalid value, GetExceptionInfo(exception) must be invoked\n    when the intention is to simply purge the exception.  This fix\n    resolves an abort when executing `gm import`.\n\n2003-08-18  William Radcliffe  <billr@corbis.com>\n\n  - magick\\gm\\_messages.bin locale\\_c.h transform.c: Updates that\n    add latest enhancments by Lars to color management code in\n    ProfileImage.\n\n2003-08-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/wpg.c: Incorporated patch from Fojtik Jaroslav to support\n    rendering embedded WMFs.\n\n2003-08-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.c (SetImageChannelDepth): New function to transform\n    the specified channel so it fits the specified modulus depth.\n\n  - magick/blob.c (BlobToImage): Skip calling SetImageInfo() if\n    magick is already set.\n\n2003-08-18  William Radcliffe  <billr@corbis.com>\n\n  - PerlMagick/Magick.xs: Some fixes to get PerlMagick compiling\n    again due to new ID based error macros.\n\n2003-08-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/error.h (enum): Remove spurious comma.\n\n2003-08-17  William Radcliffe  <billr@corbis.com>\n\n  - coders\\png.c: Had to modify a few exception calls to work with\n    newest macros.\n\n2003-08-17  William Radcliffe  <billr@corbis.com>\n\n  - coders\\locale.c magick/error.h locale.c locale\\_c.h studio.h:\n    The LOCALEH header file generator now adds an MGK\\_ prefiix to\n    all the ID defines as part of a fix to support the new error\n    and exception macros cross platform.\n\n2003-08-16  William Radcliffe  <billr@corbis.com>\n\n  - wand\\magick\\_wand.c pixel\\_wand.c: The wand api code was totally\n    left out of the large macro conversion below as an oversight.\n\n2003-08-15  William Radcliffe  <billr@corbis.com>\n\n  - .\\coders art.c avi.c avs.c bmp.c caption.c clipboard.c cmyk.c\n    cut.c dcm.c dib.c dps.c dpx.c emf.c ept.c fax.c fits.c fpx.c gif.c\n    gradient.c gray.c hdf.c histogram.c html.c icon.c jbig.c jp2.c\n    jpeg.c label.c locale.c logo.c map.c mat.c matte.c meta.c miff.c\n    mono.c mpc.c mpeg.c msl.c mtv.c mvg.c null.c otb.c palm.c pcd.c\n    pcl.c pcx.c pdb.c pdf.c pict.c pix.c png.c pnm.c preview.c ps.c\n    ps2.c ps3.c psd.c pwp.c rgb.c rla.c rle.c sct.c sfw.c sgi.c\n    stegano.c sun.c svg.c tga.c tiff.c tile.c tim.c topol.c ttf.c txt.c\n    uil.c url.c uyvy.c vicar.c vid.c viff.c wbmp.c wmf.c wpg.c x.c xbm.c\n    xc.c xcf.c xpm.c xtrn.c xwd.c yuv.c .\\magick\\animate.c annotate.c\n    blob.c cache.c cache\\_view.c color.c color.h command.c compress.c\n    constitute.c decorate.c delegate.c display.c draw.c effect.c\n    enhance.c error.c error.h fx.c gm\\_messages.bin image.c list.c\n    locale.c locale\\_c.h log.c mac.c magic.c magick.c module.c montage.c\n    nt\\_feature.c paint.c quantize.c registry.c render.c resize.c\n    segment.c semaphore.c shear.c signature.c static.c static.h\n    stream.c studio.h tempfile.h transform.c type.c utility.c widget.c\n    xwindow.c : Changes to support ID based message access and checking\n    all message usages. The main thing that was done was to remove all\n    the quotes around the \"tags\" used to lookup messages defined in\n    the locale\\C.XML file. Macros were added to error.h to allow the\n    code to be compiled for either string based access or binary ID\n    based access. Using binary ID's will cause the code to fail to\n    compile if a message does not exist in C.XML, since no ID will be\n    created for a missing message. This change then allowed us to\n    easily track down all the messages that were \"missing\" or not\n    being accessed properly. The problems were massive and took many\n    days to resolve. I have left the code compiling in ID mode to keep\n    things in sync going forward and also because it makes message\n    lookup instantaneous. An ID is just an index into and array of\n    char \\*'s. There is still a lot of cleanup work remaining, but this\n    is a very good start. \n\n2003-08-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/error.c (GetLocaleExceptionMessage): Add check to avoid\n    duplicating severity prefix.\n\n  - magick/log.c (LogMagickEvent): Incorporated fix from Bill\n    Radcliffe to enable logging control flags to work properly again.\n\n  - NEWS: Updated news.\n\n  - magick/blob.c (OpenBlob): Rewind file descriptor so that first\n    read is at zero offset. This fixes reading GIFs via a\n    user-provided file handle.\n\n2003-08-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.c (GetImageDepth): Extend so that the actual\n    minimum depth required to represent the image is\n    returned. Previously only the values 8, 16, and 32 were\n    returned. This means that a value of one is returned for a\n    monochrome image. Also fixed a bug in that the pixels were\n    incremented while the depth was incremented, resulting in the\n    first image pixels not being properly evaluated for depth.\n    (SetImageDepth): Extend to support converting the image to\n    arbitrary modulus depths.\n    (GetImageChannelDepth): New function to obtain the modulus depth\n    for a specified image channel.\n\n2003-08-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/draw.c (MvgAutoWrapPrintf): StreamError reported when\n    DrawError was intended.\n\n  - coders/logo.c (ReadLOGOImage): Report FileOpenError rather than\n    BlobError if requested image does not exist.\n\n2003-08-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/cache.c (PersistCache): If HAVE\\_SYSCONF and \\_SC\\_PAGE\\_SIZE\n    are defined, then assume that sysconf works and don't use legacy\n    getpagesize() function.\n\n  - magick/studio.h (\\_XOPEN\\_SOURCE): Should be defined as 600 in\n    order to match \\_POSIX\\_C\\_SOURCE=200112L according to the Single\n    UNIX Specification v3.  This is necessary for the vsnprintf\n    prototype to be visible.\n\n  - magick/attribute.c (ReadByte): Fix compilation warnings due to\n    casting `unsigned char \\*` to `char \\*` by changing function\n    definition to accept `unsigned char \\*` instead.\n\n  - magick/error.h (UndefinedException): UndefinedException should\n    be ExceptionType, not ExceptionBaseType.\n\n  - magick/magick.c (IsValidFilesystemPath): Eliminate warning about\n    unused function when UseInstalledMagick is defined.\n\n  - magick/error.c (ThrowLoggedException): Fix improper parameters\n    passed to LogMagickEvent() when reason is not available.\n\n003-08-07  William Radcliffe  <billr@corbis.com>\n\n  - magick/log.c, log.h: Added ability to log by either severity\n    or by category of event. Made the defualt on windows to log all\n    fatal errors, errors, and warnings to the event log. This will\n    include anything generated by exceptions currently, but not any\n    normal \"informational\" logging.\n\n2003-08-07  William Radcliffe  <billr@corbis.com>\n\n  - magick/log.c, log.h: Translation of event codes to mask vals\n    was not working. Code was left out of last update. It is now in.\n\n2003-08-07  William Radcliffe  <billr@corbis.com>\n\n  - magick/error.c: Protect against NULL string passed into the\n    message lookup function.\n\n2003-08-07  William Radcliffe  <billr@corbis.com>\n\n  - magick/locale.c: Switched use of IsAccessible to nonloggging\n    version to prevent recursive problems.\n\n2003-08-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/Makefile.am (noinst\\_HEADERS): Distribute locale\\_c.h.\n\n  - locale/Makefile: Output locale\\_c.h.\n\n  - utilities/gm.c (main): Fix typo in Unix InitializeMagick\n    invocation.\n\n  - configure.ac: Use ACX\\_PTHREAD pthreads test macro.\n\n  - magick/(semaphore.c,spinlock.h,studio.h): Change HasPTHREADS\n    conditional define to HAVE\\_PTHREAD.\n\n  - magick/Makefile.am (noinst\\_HEADERS): Include spinlock.h in\n    distribution.\n\n2003-08-06  William Radcliffe  <billr@corbis.com>\n\n  - contrib\\win32\\ATL7\\ImageMagickObject/ImageMagickObject.cpp,\n    ImageMagickObject\\_.h, ImageMagickObject.def, ImageMagickObject.rc\n    gm.rc: Changes to get things compiling again since all windows\n    specific logging support has been eliminated. The special build\n    script BuildImageMagickObject.cmd now compiles the message file\n    for resource based messages. The result is in gm\\_messages.bin.\n    The script also generates a special version of gm.exe that uses\n    the COM dll as a regular DLL and links to it. This is the long\n    desired Moby DLL build idea.\n\n  - magick/error.c, magick/error.h, magick/log.c, magick/log.h:\n    Upgrade of logging system to take over previous special logging\n    code for windows in nt\\_base.c. The new logic provides logging of\n    events to the debug api and the windows event log and also\n    provides a generic text file logging method.\n\n  - magick/gm\\_messages.bin, magick/ImageMagick.rc: New compiled\n    message file based on data in locale\\C.mgk. RC file modified to\n    include this as a resource.\n\n  - magick/locale.c, magick/locale\\_c.h: locale\\_c.h is generated by\n    the LOCALEH format of the locale coder. The logic in locale.c uses\n    the tables in the header lookup messages. On windows, all the\n    messages are stored as resources, while on UNIX they remain in a\n    string table.\n\n  - locale/C.mgk: Removed duplicate messages and added some new\n    default messages that help to create a complete set of severity\n    strings.\n\n  - magick/command.c, magick/magick.c: Get rid compiler warnings.\n\n2003-08-05  William Radcliffe  <billr@corbis.com>\n\n  - magick/command.c, magick/gm.c: Application level changes to\n    implement the client name - filename changes. The client name can\n    now be anything that the application wants and has nothing to do\n    with the saved filename of the application.\n\n  - magick/nt\\_base.c, magick/nt\\_base.h, magick/magick.c: Ripped out\n    old nt specific debugging and logging logic. Moving to the\n    standard logging. New and major revisions to InitializeMagick to\n    make the code more maintainable, reliable, and reaable. It should\n    be functionally identical, but implements the new split client\n    name and filename methododology.\n\n  - magick/utility.c, magick/utility.h: Added a couple of new\n    routines to support splitting the overloaded use of the client\n    name and client filename.\n\n  - coders/xtrn.c: Minor code cleanup\n\n2003-08-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - Copyright.txt: Added missing copyright notice which is required\n    due to copying the rlecomp manual page into ImageMagick.\n\n  - doc/config\\_files.imdoc: Started documentation for configuration\n    files.\n\n  - magick/xwindow.c (XSignalHandler): Ensure that segment\\_info is\n    non-null before attempting to use it.  Much thanks to John Cristy\n    for bringing this problem to our attention.\n\n2003-08-05  William Radcliffe  <billr@corbis.com>\n\n  - coders/locale.c: Added several new formats to this coder to\n    generate windows message resource format messages and also to\n    generates a new header file format that will support a table based\n    version of the other magick/locale.c.\n\n  - coders/xtrn.c: Minor code cleanup\n\n2003-08-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - configure.ac: Only configure C and C++ libtool tags.\n\n  - PerlMagick/t/reference/composite/\\*.miff: Added some composition\n    test reference images.  These reference images will serve as\n    placeholders until better composition tests can be figured out.\n    It is not clear from the documentation what some of the\n    composition operators are supposed to do.\n\n2003-08-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - README.txt: Add documentation regarding using TRIO.\n\n  - configure.ac: Test for TRIO library if vsnprintf is not\n    available.\n\n  - magick/studio.h: Remap vsnprintf to trio\\_vsnprintf if TRIO is\n    available.\n\n  - coders/topol.c, coders/wmf.c, magick/magick.c, magick/nt\\_base.c,\n    magick/resource.c: Use traditional C comment form in C source\n    files.\n\n2003-07-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/log.h (LogEventType::AllEvents): Increase the value of\n    AllEvents so that it spans the complete positive range of a signed\n    integer.\n\n  - magick/xwindow.c, magick/xwindow.h: Incorporate patch from John\n    Cristy's ImageMagick to eliminate conditional dependence of\n    magick/xwindow.h on <X11/extensions/XShm.h>.\n\n  - magick/magick\\_config\\_api.h.in: HasSharedMemory define no longer\n    needed.\n\n2003-07-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - www/programming.html: Update Rmagick URL.\n\n  - GraphicsMagick.spec.in : Update according to instructions from\n    Troy Edwards.\n\n2003-07-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - GraphicsMagick.spec.in: Replaced GraphicsMagick.spec with\n    GraphicsMagick.spec.in, which is configured to produce\n    GraphicsMagick.spec.\n\n  - configure.ac: Configure GraphicsMagick.spec.\n\n2003-07-29  Troy Edwards  <vallimar@sexorcisto.net>\n\n  - GraphicsMagick.spec: Updated to CVS build. Added the\n    GraphicsMagickWand files to the spec.  Only try to remove the\n    unneeded perl package files if we are using PerlMagick.\n\n2003-07-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - GraphicsMagick.spec: Added RPM spec file authored by Troy\n    Edwards <vallimar@sexorcisto.net>.\n\n  - NEWS: Add note regarding EXIF fix.\n\n  - magick/attribute.c (GenerateEXIFAttribute): Look for the profile\n    name \"EXIF\" rather than \"APP1\".\n\n2003-07-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/magick\\_config\\_api.h.in: XWindowInfo structure in\n    xwindow.h needs HasSharedMemory define.\n\n  - magick/xwindow.c, magick/xwindow.h: Move inclusion of\n    <X11/extensions/shape.h> to xwindow.c.\n\n  - coders/dps.c, magick/xwindow.h: Move DPS includes to\n    coders/dps.c\n\n  - coders/Makefile.am: Substituted values are also set as\n    make variables, so use variables rather than substitutions.\n\n  - magick/log.c (GetLogBlob): MAGICK\\_HOME needs to take\n    precedence over the client path for the uninstalled build.\n\n  - magick/type.c (GetTypeBlob): MAGICK\\_HOME needs to take\n    precedence over the client path for the uninstalled build.\n\n  - magick/blob.c (GetConfigureBlob): MAGICK\\_HOME needs to take\n    precedence over the client path for the uninstalled build.\n\n  - magick/module.c (FindMagickModule): MAGICK\\_HOME needs to take\n    precedence over the client path for the uninstalled build.\n\n2003-07-24  Lars Ruben Skyum  <lars.skyum@stibo.com>\n\n  - magick/attribute.c (TraceClippingPath): Improvements to clipping\n    path parsing.\n\n2003-07-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/cache.c: Disable the Windows open() extensions when\n    compiling using Borland C++.\n\n  - magick/log.c (LogMagickEvent): Unlock semaphore before\n    returning.\n\n  - ltdl/ltdl.h: Updated to latest CVS version.\n\n  - ltdl/ltdl.c: Updated to latest CVS version.\n\n  - Libtool: Updated to use latest CVS libtool.\n\n2003-07-17  Mike Chiarappa  <mikechiarappa@libero.it>\n\n  - BCBMagick: Contributed initial Borland C++ Builder 6.0 build\n    environment.\n\n2003-07-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/color.c (GetColorInfoArray): Added a function to access\n    the color definition list as an array.\n    (GetColorList): Added access locks to ensure that list is not\n    re-ordered while it is being traversed.\n\n  - www/Magick++/Image.html: Add some more information regarding raw\n    pixel access.\n\n2003-07-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - wand/GraphicsMagickWand.pc.in (Cflags): Remove LFS\\_CPPFLAGS.\n\n  - wand/GraphicsMagickWand-config.in: Remove LFS\\_CPPFLAGS.\n\n  - magick/GraphicsMagick.pc.in (Cflags): Remove LFS\\_CPPFLAGS.\n\n  - magick/GraphicsMagick-config.in: Remove LFS\\_CPPFLAGS.\n\n  - configure.ac: Logic for setting LFS\\_CPPFLAGS was incomplete.\n\n  - coders/topol.c: Updated topol coder contributed by Jaroslav\n    Fojtik.  Topol is coming to life!\n\n2003-07-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/nt\\_base.h: Add a typedef for ssize\\_t\n\n  - magick/deprecate.h: ExtendedSignedIntegralType and\n    ExtendedUnsignedIntegralType are now deprecated types so they are\n    moved to deprecate.h. Existing code which uses these types should\n    continue to work.\n\n  - magick/blob.c (MapBlob): Change `offset` parameter from type\n    off\\_t to magick\\_off\\_t so that it is not LFS dependent.\n\n  - magick/cache.c (GetPixelCacheArea): Return magick\\_off\\_t.\n    (PersistCache): Change `offset` parameter to type magick\\_off\\_t.\n\n  - magick/cache.h (NexusInfo): Change `length` type from\n    ExtendedSignedIntegralType to magick\\_off\\_t.\n    (CacheInfo): Change `offset` and `length` types from\n    ExtendedSignedIntegralType to magick\\_off\\_t.\n\n  - magick/blob.c (BlobToFile): Use ssize\\_t rather than\n    ExtendedSignedIntegralType for count.\n    (TellBlob): Return magick\\_off\\_t rather than\n    ExtendedSignedIntegralType.\n\n  - configure.ac: Check for a ssize\\_t type.\n\n  - magick/blob.h (\\_BlobInfo): Change `offset` and `size` members\n    from ExtendedSignedIntegralType to magick\\_off\\_t.\n\n  - magick/blob.c (GetBlobSize): Return magick\\_off\\_t rather than\n    ExtendedSignedIntegralType.\n    (SeekBlob): Accept and return magick\\_off\\_t rather than\n    ExtendedSignedIntegralType.\n\n2003-07-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/monitor.c (MagickMonitor): Change `quantum` argument from\n    type ExtendedSignedIntegralType to magick\\_int64\\_t. Change `span`\n    argument from ExtendedUnsignedIntegralType to magick\\_uint64\\_t.\n\n  - magick/xwindow.c (XMagickMonitor): Change `quantum` argument from\n    type ExtendedSignedIntegralType to magick\\_int64\\_t. Change `span`\n    argument from ExtendedUnsignedIntegralType to magick\\_uint64\\_t.\n\n  - magick/widget.c (XMonitorWidget): Change `quantum` argument from\n    type ExtendedSignedIntegralType to magick\\_int64\\_t. Change `span`\n    argument from ExtendedUnsignedIntegralType to magick\\_uint64\\_t.\n\n  - magick/studio.h (QuantumTick): Change typecast from\n    ExtendedSignedIntegralType to magick\\_int64\\_t.\n\n  - magick/resource.c (AcquireMagickResource): Change `size`\n    argument type from ExtendedSignedIntegralType to magick\\_int64\\_t.\n    (LiberateMagickResource): Change `size` argument type from\n    ExtendedSignedIntegralType to magick\\_int64\\_t.\n\n  - magick/utility.c (FormatSize): Change `size` argument type from\n    ExtendedSignedIntegralType to magick\\_int64\\_t.\n\n  - magick/nt\\_base.c: Change MagickOffset to magick\\_off\\_t.\n\n  - magick/studio.h (magick\\_off\\_t): Change MagickOffset to magick\\_off\\_t.\n\n  - coders/topol.c: Insert dummy member into palettRAS structure\n    since Visual C++ doesn`t seem to handle empty structures.\n\n  - wand/GraphicsMagickWand.pc.in (prefix): Pass LFS CPPFLAGS.\n\n  - wand/GraphicsMagickWand-config.in: Pass LFS CPPFLAGS.\n\n  - wand/Makefile.am: Fix include path.\n\n  - magick/GraphicsMagick.pc.in (prefix): Pass LFS CPPFLAGS.\n\n  - magick/magick\\_config\\_api.h.in: Pass LFS configuration options\n    until the API is fixed so that it is not LFS sensitive anymore.\n\n  - magick/GraphicsMagick-config.in: Pass LFS CPPFLAGS.\n\n  - PerlMagick/Makefile.PL.in: Pass LFS CPPFLAGS.\n\n  - magick/Makefile.am: Install magick\\_types.h.\n\n  - magick/api.h: Include magick\\_types.h.\n\n  - magick/studio.h: Include magick\\_types.h rather than integral\\_types.h.\n  - VisualMagick/magick/magick\\_types.h.in: New header file (replacing\n    integral\\_types.h) to contain CPU and system-dependent primitive\n    typedefs.\n\n  - magick/magick\\_types.h.in: New header file (replacing\n    integral\\_types.h) to contain CPU and system-dependent primitive\n    typedefs.\n\n  - configure.ac: Use AC\\_SYS\\_LARGEFILE to test for large file\n    options. Update to determine integral typedefs for current CPU and\n    compiler options. Configure magick\\_types.h.\n\n  - magick/attribute.c (TraceClippingPath): Apply patch from Lars\n    Ruben Skyum which fixes clipping path parsing for paths generated\n    by Adobe software which pre-dates the Photoshop file format\n    specification.\n\n2003-07-08  William Radcliffe  <billr@corbis.com>\n\n  - magick/semaphore.c: Modified the way the system handles the\n    initialization of Win32 critical sections to use a spin lock\n    on WIn32 to bootstrap the initialization of all other crtical\n    sections. This is not an issue on UNIX since static init is used.\n\n  - magick/magic.c module.c magick.c log.c resource.c constitute.c\n    color.c cache.c delegate.c registry.c type.c: Small modifications\n    were made to eliminate the side effect of unlocking semaphores\n    as part of the releasing procedure. This also eliminated the\n    apparent bug of the system double locking certain semaphores.\n    The locked flag should now not be needed, but remains in place\n    for the time being as an added safegaurd.\n\n2003-07-04  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - png.c: added missing #ifdef JNG\\_SUPPORTED/#endif directives.\n\n2003-07-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - NEWS: Updated news to include fixes and enhancements since the\n    1.0 release.\n\n2003-07-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/semaphore.c (UnlockSemaphoreInfo): Bugfix, modify\n    the `locked` flag while still under protection of the lock.\n    This fix is necessary for thread-safety.\n\n2003-07-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/jpeg.c (ReadJPEGImage): Conditionally copy exception.\n\n  - wand/Makefile.am (noinst\\_HEADERS): Need to distribute\n    magick\\_compat.h.\n    (EXTRA\\_DIST): Need to distribute GraphicsMagickWand-config.1.\n\n  - coders/wmf.c (ipa\\_bmp\\_draw): Use CopyException.\n    (ipa\\_device\\_begin): Use CopyException.\n    (lite\\_font\\_map): Use CopyException.\n  - coders/jpeg.c (ReadJPEGImage): Use CopyException.\n  - magick/image.c (GetImageException): Use CopyException.\n  - magick/constitute.c (WriteImages): Use CopyException.\n  - Makefile.am (DIST\\_SUBDIRS): wand needs to be included in\n    distribution.\n\n2003-06-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/static.c (RegisterStaticModules): Invoke\n    RegisterTOPOLImage.\n\n  - magick/magick.h (MagickInfo): Add member usage comments.\n\n  - magick/error.c (CatchException): Restore saved errno from\n    exception->error\\_number.\n    (CopyException): Copy error\\_number.\n    (DestroyExceptionInfo): Reset error\\_number to zero.\n    (GetExceptionInfo): Initialize error\\_number to zero.\n    (ThrowException): Save errno to exception-> error\\_number.\n    (ThrowLoggedException): Save errno to exception-> error\\_number.\n\n  - magick/error.h (ExceptionInfo): Borrow John Cristy's idea and\n    add a error\\_number member to ExceptionInfo to save the current\n    errno value. Otherwise CatchException may use some random errno.\n\n  - coders/Makefile.am: Build topol.c.\n\n  - coders/topol.c: Added initial TOPOL X image coder which is under\n    development by Jaroslav Fojtik. Not working yet.\n\n2003-06-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/pwp.c (ReadPWPImage): Ensure that image is initialized\n    before invoking ThrowReaderException.\n\n  - magick/image.c (CloneImage): Use CopyException.\n\n  - magick/error.c (CopyException): Add function to support copying\n    ExceptionInfo structures.\n\n  - magick/error.h (ExceptionInfo): Replaced recently-added `whence`\n    member with module, function, and line members in order to keep\n    the information seperate, and match the parameters used by the\n    logging system.\n    (ThrowException): Log thrown exceptions.\n\n  - magick/error.c (ThrowLoggedException): New function used to\n    throw an exception, while recording and logging the location\n    where the exception is thrown.\n\n  - doc/options.imdoc (operation): Document TemporaryFile and\n    Exception events.\n\n  - magick/log.c (LogMagickEvent): Support logging ExceptionEvent.\n\n  - PerlMagick/Magick.xs: Added \"Exception\" event type.\n\n  - magick/log.h (LogEventType): Added ExceptionEvent.\n\n2003-06-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/error.c (ThrowException): Handle `whence`\n    member. MagickFreeMemory already checks for null pointer so don't\n    check again.\n    (DestroyExceptionInfo): Handle `whence` member. MagickFreeMemory\n    already checks for null pointer so don't check again.\n\n  - magick/error.h (ExceptionInfo): Add a `whence` member to support\n    the ability to record where the exception is was thrown.\n\n  - VisualMagick/installer: Install Wand files.\n\n2003-06-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/blob.c (GetConfigureBlob): GetConfigureBlob should always\n    return a value.\n\n  - magick/type.c (GetTypeBlob): GetTypeBlob should always return a\n    value.\n\n  - magick/log.c (GetLogBlob): GetLogBlob should always return\n    a value.\n\n  - magick/magick.c (GetMagickInfoArray): Fixed array memory\n    allocation and clearing bug. Eliminate warnings.\n\n2003-06-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - VisualMagick/installer/inc/files-configs.isx: For a static\n    build, install the configuration files directly into the\n    application directory.\n\n  - VisualMagick/installer/inc/uninstallrun-unregister-com.isx\n    (Filename): Change ImageMagickObject.dll path.\n\n  - VisualMagick/installer/inc/run-register-com.isx (Filename):\n    Change ImageMagickObject.dll path.\n\n  - VisualMagick/installer/inc/files-com.isx (Source): Install\n    ImageMagickObject.dll and MagickCMD.exe in the application\n    directory alongside gm.exe and the CORE DLLs.\n\n  - INSTALL-unix.txt: Add additional information regarding LZW.\n\n  - VisualMagick/magick/magick\\_config.h.in: Add additional notes\n    regarding UNISYS LZW patent.\n\n  - PerlMagick/Magick.xs: Applied Dissolve composite operator fix\n    obtained from from John Cristy's ImageMagick which ensures that an\n    unused matte channel is set to Opaque, and uses this knowledge to\n    simplify the math.\n\n  - VisualMagick/configure/configure.cpp: The `wand` library has a\n    linkage dependency on the `magick` library. Also don't include\n    the magick subdirectory so that headers must be included like\n    <magick/api.h> for safety.\n\n  - coders/xtrn.c: Fix magick header inclusion.\n\n  - lcms\\src\\cmserr.c: Fix magick header inclusion.\n\n2003-06-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - doc/options.imdoc: Fix to formatting. Fix spelling of origin.\n\n  - PerlMagick/t/bzlib/read.t: Add test for reading BZipped file.\n\n  - PerlMagick/t/subroutines.pl (testRead): Skip testing reads\n    of compressed BLOBs because reading compressed BLOBs is not\n    supported yet.\n\n  - coders/bmp.c (ReadBMPImage): Only validate the file size value\n    for compressed BMPs.\n\n  - VisualMagick/wand, wand: First stab at building the Wand API\n    under Visual C++.  Still does not build as a DLL.\n\n2003-06-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/static.h: Add prototypes for RegisterXTRNImage and\n    UnregisterXTRNImage.\t\n\n  - Makefile.am (DISTDIRS): Don't distribute the `guide`\n    subdirectory. It is available for checkout from CVS.\n\n  - www: Utilities documentation is updated from <imdoc> masters.\n    Formatting could be improved, but the content seems ok.\n\n  - doc/environment.imdoc: New file to describe environment\n    variables.\n\n  - coders/cut.c (ReadCUTImage): Use MagickAllocateMemory and\n    MagickFreeMemory rather than malloc and free.\n\n  - doc/gmdoc2html: Add GraphicsMagick styling to utility web pages.\n\n  - doc/Makefile: Additional documentation Makefile enhancements.\n\n  - AUTHORS: New file to acknowledge significant contributors\n    to the software. If an author is not listed here, please let\n    us know.\n\n  - configure.ac: test -a is not POSIX compliant.\n\n2003-06-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - doc: Source documentation for `gm` is now available via a `doc`\n    CVS module. A Makefile is provided which formats the\n    documentation and installs it into the `www` and `utilities`\n    subdirectories.\n\n2003-06-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - wand: Added Magick Wand library available via\n    -lGraphicsMagickWand and <wand/wand\\_api.h>. Use\n    GraphicsMagickWand-config or GraphicsMagickWand.pc to obtain the\n    compilation options required to use the library. Magick Wand is\n    authored by John Cristy. Magick Wand is provided as a separate\n    library from -lGraphicsMagick in order to assure the stability of\n    the core GraphicsMagick library while allowing Magick Wand to\n    to evolve.\n\n  - images: Replace existing logo images with cleaner ones.\n\n  - www: Update links to point to updated logo images.\n\n  - logos: New CVS directory to contain master logos.\n\n  - scripts/txt2html: Updated inline logo image link.\n\n  - scripts/format\\_c\\_api\\_docs: Updated inline logo image link.\n\n  - version.sh: Support versioning all libraries independently.\n\n  - coders/meta.c: Prefix include paths for safety.\n\n  - magick/image.h: (TransmitType) Removed unused enumeration.\n    (ProfileType) Removed unused enumeration.\n    (QuantumType) Moved enumeration to constitute.h\n    (StorageType) Moved enumeration to constitute.h\n\n  - magick/draw.c (DrawPeekGraphicContext): Added function to peek\n    at head of drawing context stack (function added for ImageMagick\n    compatability).\n\n  - magick/image.c (CycleColormapImage): Change return type from\n    `void` to `unsigned int` so that error status is returned to user.\n    (DescribeImage): Change return type from\n    `void` to `unsigned int` so that error status is returned to user.\n\n  - magick/list.c (ReplaceImageInList): Incorporated function from\n    John Cristy's ImageMagick to replace current image in the list.\n\n  - coders/sgi.c (ReadSGIImage): Applied patch from John Cristy's\n    ImageMagick to save the compression type for SGI images.\n\n2003-06-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/txt.c (WriteTXTImage): Apply patch from John Cristy's\n    ImageMagick to observe image depth while writing pixel colors.\n    This patch is not applied to the 1.0 branch because it represents\n    an output format change which could break a dependent application.\n    (IsTXT): Recognize files written by the TXT coder.\n    (ReadTXTImage): Reject files written by the TXT coder until support\n    for reading these files is implemented.\n    (IsTXT): Ensure that sscanf doesn't read outside of provided data\n    by using a fixed size buffer.\n\n2003-06-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - configure.ac: Don't add -lfpx to LIBS while configuring\n    because the C compiler may fail to link with it in later\n    tests.\n\n2003-06-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - PerlMagick/Magick.xs: RotateImage is documented to take\n    `degrees` argument, not `degree`.  SwirlImage is documented to\n    take `degrees` argument, not `degree`.  SolarizeImage is\n    documented to take a `threshold` argument, not `factor`.  Wave is\n    documented to take `amplitude` and `wavelength` arguments.  Don't\n    transform colorspace to RGB when retrieving `pixel` color value.\n    Release memory acquired to store `length` pointer.  Picked up\n    memory leak fix related to `SV \\*\\*reference\\_vector` variable from\n    John Cristy's ImageMagick.\t\n\n  - configure: Incorporate patch to handle inline better.\n\n  - magick/utility.c (GetToken): Adjust code to avoid \"end-of-loop\n    code not reached\" warning.\n\n  - magick/log.c (GetLogBlob): Eliminate warning regarding\n    unreached code.\t\n\n  - magick/command.c (AnimateImageCommand): Eliminate warning regarding\n    unreached code.\t\n    (ConvertImageCommand): Eliminate warning regarding\n    unreached code.\t\n    (ImportImageCommand): Eliminate warning regarding\n    unreached code.\t\n\n  - magick/type.c (GetTypeBlob): Eliminate warning regarding\n    unreached code.\t\n\n  - magick/blob.c (GetConfigureBlob): Eliminate warning regarding\n    unreached code.\n\n  - coders/meta.c (super\\_fgets): Eliminated warnings regarding\n    comparison and return of incompatible pointer types.\n    (super\\_fgets\\_w): Eliminated warnings regarding\n    comparison and return of incompatible pointer types.\n\n  - magick/command.c (ConvertImageCommand): Eliminate warnings\n    noticed when using Sun's compiler.\n\n2003-06-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - acinclude.m4: Add `#undef inline` in front of C++ tests.\n\n  - coders/x.c (RegisterXImage): Only register the X coder if HasX11\n    is defined.\n\n2003-06-07  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - magick/image.c (GetImageGeometry) Y was a function of width\n    instead of height when processing EastGravity or WestGravity\n    (bug report from Cristy).\n\n2003-06-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/utility.c (LocaleNCompare): Documented that comparison is\n    case-insensitive.\n    (LocaleCompare): Documented that comparison is case-insensitive.\n\n  - magick/log.c (ParseEvents): LocaleNCompare already does\n    case-insensitive compare so lower-casing is not necessary.\n\n  - Magick++: Updates to cause exceptions to be thrown if a bad\n    geometry specification is supplied.\n\n2003-06-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/log.c (ReadConfigureFile): Move event parsing to\n    ParseEvents funtion.\n    (SetLogEventMask): Move event parsing to\n    ParseEvents funtion.\n\n  - magick/utility.c (GetGeometry): Validate that the geometry\n    string only contains valid characters.\n\n  - PerlMagick/t/subroutines.pl (testMontage): It seems that passing\n    an empty set of options to the SetImage method corrupts the image\n    options (surely a PerlMagick bug), so don't invoke SetImage unless\n    there are options to set.\n\n2003-06-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/command.c (VersionCommand): Add build information to\n    version output.\n\n  - configure.ac: Save configure/build parameters for later use in\n    version output.\n\n2003-06-04  William Radcliffe  <billr@corbis.com>\n\n  - coders/meta.c: Added some casts to make things compile better.\n\n2003-06-03  William Radcliffe  <billr@corbis.com>\n\n  - coders/meta.c: Was broken due to editing mistakes as well\n    as inherent incompatability with MagickReallocMemory macro.\n\n2003-06-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/xpm.c (RegisterXPMImage): Module registration for PICON\n    should have been XPM.  Thanks to John Cristy for noticing this\n    bug.\n\n  - coders/psd.c (ReadPSDImage): Applied John Cristy's patch to fix\n    a index calculation bug which is evident when QuantumDepth>8.\n\n2003-06-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/meta.c: Eliminated some compiler warnings.\n\n  - magick/transform.c (ProfileImage): Eliminated some compiler\n    warnings.\n\n  - magick/static.c (RegisterStaticModules): Invoke\n    RegisterXTRNImage if \\_VISUALC\\_ is defined.\n\n2003-06-02  William Radcliffe  <billr@corbis.com>\n\n  - utilities/gm.c: made -format work again but had to add off flag\n    to MagickCommand to maintain backward compatability with previous\n    versions of GM.\n\n  - magick/command.c: Added flag to tell MagickCommand whether GM is\n    expected to process metadata requests. The COM object \\*always\\* does.\n\n  - magick/transform.c: Added error handling, memory leak avoidance\n    and performanc enhancment.\n\n2003-06-01  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - NEWS: Added Bug Fixes item with info about the JNG encoder fix.\n\n2003-06-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - NEWS: Listed significant changes (thus far) in version 1.1.\n\n  - version.sh: Updated LIBRARY\\_CURRENT and LIBRARY\\_REVISION since\n    some command.c interfaces have changed, and a new interface has\n    been added. The only user of these interfaces should be `gm` but\n    it always pays to be careful.\n\n  - utilities/gm.c (main): Use MagickCommand.\n\n  - magick/command.c (MagickCommand): New function to provide\n    API-level command access to the command functions provided by the\n    GM utility with an interface similar to ConvertImageCommand.\n    (AnimateImageCommand): Changed function arguments to match\n    ConvertImageCommand.\n    (ConjureImageCommand): Changed function arguments to match\n    ConvertImageCommand.\n    (DisplayImageCommand): Changed function arguments to match\n    ConvertImageCommand.\n    (ImportImageCommand): Changed function arguments to match\n    ConvertImageCommand.\n\n  - libxml/libxml2.def: Remove LIBRARY line since Visual C++ 6.0\n    doesn't like that the build library doesn't match the name\n    specified by LIBRARY.\n\n2003-05-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/magick.c (GetMagickInfoArray): Resolve thread-safety\n    issue by accessing magick\\_list directly under the protection of a\n    lock rather than using the pointer returned by GetMagickInfo.\n    Added error handling for insufficient memory.\n\n  - coders/tile.c (RegisterTILEImage): Added a usage note in formats\n    listing.\n\n  - coders/viff.c (RegisterVIFFImage): Module definition for \"XV\"\n    was missing.\n\n  - coders/ps2.c (RegisterPS2Image): Module definition for \"PS2\" was\n    missing.\n\n  - coders/wmf.c (RegisterWMFImage): Added usage note in formats\n    listing.\n\n  - coders/xpm.c (RegisterXPMImage): Hide PM alias for XPM in the\n    formats listing.\n\n  - coders/logo.c (RegisterLOGOImage): Hide registrations for\n    GRANITE, LOGO, and NETSCAPE in the formats listing.\n\n  - coders/jpeg.c (RegisterJPEGImage): Module definition for \"JPEG\"\n    was missing.\n\n  - coders/html.c (RegisterHTMLImage): Module definition for \"HTML\"\n    was missing.\n\n  - coders/bmp.c (RegisterBMPImage): Module names for \"BMP2\" and\n    \"BMP3\" should be \"BMP\".\n\n2003-05-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/magick.c (GetMagickInfoArray): New function to return\n    MagickInfo array.\n    (ListMagickInfo): Updated to use GetMagickInfoArray.\n    (ListModuleMap): New function to list module map to a file.\n\n  - utilities/gm.c: Centered the file header and made note of this\n    stupendously significant accomplishment.\n\n  - magick/command.c: Added a `-list modulemap` option. Added plural\n    forms of other list options for people who are are not limited to\n    the singular.  Also `-list font` and `-list fonts` now work for\n    people who think in terms of fonts rather than type.\n\n2003-05-30  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - MNG encoder failed to set the JNG bit in the simplicity profile.\n\n  - MNG encoder failed to write FRAM chunks when all images were JNG.\n\n  - JNG encoder wrote the wrong alpha\\_sample\\_depth for opaque images. \n\n2003-05-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/magic.c (ReadConfigureFile): Removed bogus embedded magic\n    data and ensured that errors with loading magic.mgk propogate to\n    the top.\n\n  - magick/constitute.c (ReadImage): When building delegate error\n    report, handle the case where the filename is empty (such as for\n    \"LOGO:\").\n\n  - coders/png.c (WritePNGImage): Ensure that most severe exception\n    is reported via exception argument.\n    (ReadMNGImage): Ensure that most severe exception is reported via\n    exception argument.\n\n  - magick/command.c (ConvertImageCommand): Ensure that most severe\n    exception is reported via exception argument.\n    (CompositeImageList): Ensure that most severe exception is\n    reported via exception argument.\n    (CompositeImageCommand): Ensure that most severe exception is\n    reported via exception argument.\n\n  - magick/constitute.c (WriteImages): Ensure that most severe\n    exception is reported via exception argument.\n\n  - utilities/gm.c: Centered file header because I didn't like it.\n\n  - locale/C.mgk: Removed some defunct messages.\n\n  - magick/blob.c (PingBlob): Report useful error message.\n    (BlobToImage): Report sensible error message for null blob.\n\n  - magick/utility.c (AcquireString): Change UnableToAquireString to\n    UnableToAllocateString.\n\n  - coders/xwd.c (ReadXWDImage): Report CorruptImage rather than\n    CorruptXWDImage.\n\n  - coders/xpm.c (ReadXPMImage): Report CorruptImage rather than\n    CorruptXPMImage.\n\n  - coders/xcf.c (load\\_level): Report CorruptImage rather than\n    CorruptXCFImage.\n\n  - coders/wbmp.c (ReadWBMPImage): Report CorruptImage rather than\n    CorruptWBMPImage.\n\n  - coders/pcd.c: Report CorruptImage rather than CorruptPCDImage.\n\n  - coders/otb.c (ReadOTBImage): Report CorruptImage rather than\n    CorruptOTBImage.\n\n  - magick/constitute.c (ReadInlineImage): Report CorruptImage\n    rather than CorruptInlineImage.\n\n  - coders/pdb.c (ReadPDBImage): Incorporated undocumented fix from\n    ImageMagick which obtains the image depth from the image depth\n    attribute, and increases the packet memory allocation. Report\n    CorruptImage rather than CorruptPDBImageFile.\n\n2003-05-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - VisualMagick/bin/modules.mgk: Add mapping from SVGZ to SVG.\n\n  - coders/modules.mgk: Add mapping from SVGZ to SVG.\n\n  - coders/svg.c (RegisterSVGImage): Add registration for SVGZ\n    format.\n\n  - PerlMagick/t/zlib/read.t: Added test to check reading a file\n    with .gz extension. The blob portion of the test currently fails.\n\n  - coders/wpg.c (ReadWPGImage): Fix reading WPGs with embedded\n    Postscript. Ensure that scene numbers are sane. Bugs remain.\n\n  - magick/blob.c (OpenBlob): Recognize the .svgz extension as a\n    gzipped format.  Not required in order to read .svgz files since\n    the blob file magic detects gzip files.\n\n  - magick/command.c (MontageImageCommand): Wrong exception\n    macro was being invoked.  Steps have been taken to ensure that\n    this doesn't happen again.\n    (ImportUsage): Fix spelling of `type`.\n\n  - magick/magick.c (DestroyMagick): Decided that initialization\n    state should be tracked via an enum so that DestroyMagick will\n    take effect even if InitializeMagick has never been called.\n\n2003-05-27  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - coders/png.c: png.c would dump core when writing a grayscale\n    image in png24 or png32 format.\n\n2003-05-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/ept.c (WriteEPTImage): Fixed writing EPT preview image and\n    added logging.\n\n  - magick/enhance.c (NegateImage): If image is in CMYK colorspace,\n    then negate the `K` channel as well.\n\n  - PerlMagick/Magick.xs: Fix spelling of `elevation` argument to\n    Shade method.\n\n  - magick/image.h (ImageInfo): Added more documenting comments.\n\n  - magick/image.c (CloneImage): Don't clone huffman ascii85\n    encoding support structure since it is not useful outside of the\n    current image context. Cloning a structure via pointer assignment\n    causes a memory leak.\n\n2003-05-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/shear.c: Incorporate math tweaks obtained from\n    ImageMagick which are purported to improve accuracy when rotating\n    and shearing using small angles. Also avoid unneccessarily\n    transforming CMYK images into RGB images.\n\n  - magick/paint.c (ColorFloodfillImage): Fix hang while\n    floodfilling using a pattern image with color similar to the\n    border color.\n\n  - coders/modules.mgk: Add missing mappings for PNG8,\n    PNG24, and PNG32.\n\n  - VisualMagick/bin/modules.mgk: Add missing mappings for PNG8,\n    PNG24, and PNG32.\n\n2003-05-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/log.c (GetLogBlob): Return an error if log.mgk can not\n    be accessed.\n\n  - locale/C.mgk: Added UnableToAccessLogFile.\n\n  - magick/blob.c (GetConfigureBlob): Only return result of\n    NTResourceToBlob if it is non-NULL.\n\n  - magick/type.c (GetTypeBlob): Search $MAGICK\\_HOME for\n    type.mgk. Only return result of NTResourceToBlob if it is\n    non-NULL.\n\n  - magick/magick.c (GetMagickInfo): Return an error if GetModuleInfo\n    reports an error.\n\n  - magick/module.c (GetModuleInfo): Return an error if modules.txt\n    fails to load.\n\n  - utility.c (SubstituteString): Fixed a bug which was introduced\n    while updating the code to use the memory allocation macros.\n\n2003-05-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/GraphicsMagick-config.in (usage): Added example\n    usage to the help output.\n\n  - magick/magick.c (InitializeMagick): Added a static flag to\n    ensure that the Magick library is initialized only one time.\n    (DestroyMagick): Ensure that Magick library resources are only\n    destroyed if it has previously been initialized.\n\n  - magick/nt\\_base.c (DllMain): Fix contributed by Achim Domma. For\n    a DLL build, update PATH during Magick DLL initialization to\n    include the directory where the Magick core DLL resides. This\n    allows the loadable modules to find the core DLLs, even if the\n    core DLLs are not already in the PATH.\n\n  - magick/image.c (TextureImage): Incorporate new implementation\n    authored by John Cristy of ImageMagick Studio.  This\n    implementation is a full 7X (run-time) or 14X (user-time) faster\n    than the original ImageMagick implementation, and is about 2X\n    faster than the speeded-up version I commited on the 19th.\n\n2003-05-20  William Radcliffe  <billr@corbis.com>\n\n  - VisualMagick\\configure : Fixed bug with add on (plug-ins) not\n    building automatically in DLL mode.\n\n2003-05-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.c (TextureImage): Creation of tiled image textures\n    is speeded up by 3.7X.\n\n  - coders/tile.c (ReadTILEImage): Use TextureImage.\n\n  - VisualMagick/bin/modules.mgk: Map \"PATTERN\" to \"LOGO\".\n\n  - coders/modules.mgk: Map \"PATTERN\" to \"LOGO\".\n\n  - coders/logo.c (ReadLOGOImage): Add \"PATTERN\" tiling support in\n    order to be compatible with ImageMagick.\n\n  - magick/image.c (SetImageInfo): Map \"MAGICK\" magick to \"IMAGE\" in\n    order to be compatible with ImageMagick.\n\n2003-05-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - www/Copyright.html: Try to fix formatting of XFig entry.\n\n  - www/windows.html: Update file names for 1.0.1 release.\n\n  - index.html: Mention 1.0.1 release as latest release.\n\n  - magick/magick\\_config\\_api.h.in: Add define for HasX11\n    so that it is possible to use functions in the installed\n    xwindow.h\n\n  - \\*/\\*.c: Updated to use MagickAllocateMemory macro.\n\n2003-05-17  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - coders/png.c: stifled compiler warnings about uninitialized\n    chunk and blob variables.\n\n2003-05-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/utility.h (MagickAllocateMemory): New macro to allocate\n    memory.\n    (MagickFreeMemory): New macro to free memory.\n    (MagickReallocMemory): New macro to reallocate memory.\n\n  - \\*/\\*.c,\\*/\\*.h: Updated to use MagickFreeMemory and\n    MagickReallocMemory. Eliminated warnings when compiling with\n    GCC 3.3 using -Wall.\n\n  - images: The logo image was determined to have a copyright\n    problem so replace with blank image until a replacement is\n    available.\n\n2003-05-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - VisualMagick/magick/magick\\_config.h.in (HAVE\\_SYS\\_TYPES\\_H): \n    Moved this define back from nt\\_base.h since removing it was\n    causing some problems for Magick++.\n\n2003-05-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.c: (SetMagickInfo): Don't mask failure to\n    read magic.mgk.\n\n  - magick/constitute.c (ReadImage): Don't overwrite specific\n    exception info.\n\n  - magick/nt\\_base.c (NTResourceToBlob): Add logging similar\n    to that used in IsAccessible() in order to make operation\n    more clear.\n\n  - magick/module.c (FindMagickModule): Removed extraneous\n    \"Searching for module file\" log event.\n    (GetModuleBlob): Under Windows, don't clear or overwrite\n    an existing exception.\n\n  - magick/nt\\_base.h: Imported some obscure defines from\n    magick\\magick\\_config.h.\n\n  - VisualMagick/magick/magick\\_config.h.in: Improved description\n    text and formatting.  Moved some obscure defines to\n    magick/nt\\_base.h.\n\n  - locale/C.mgk: Added a \"RegistryKeyLookupFailed\" error message.\n\n  - magick/type.c (GetTypeBlob): Report registry key lookup\n    failures. Also ensure correct return value when an error is\n    reported.\n\n  - magick/log.c (GetLogBlob): Report registry key lookup failures.\n\n  - magick/delegate.c (ReadConfigureFile): Report registry key\n    lookup failures.\t\n\n  - magick/blob.c (GetConfigureBlob): Report registry key lookup\n    failures. Also ensure correct return value when an error is\n    reported.\t\n\n  - magick/module.c (FindMagickModule): Report registry key lookup\n    failures. Also ensure correct return value when an error is\n    reported.\n\n  - magick/nt\\_base.c (NTRegistryKeyLookup): Simplify base key lookup\n    code, and improve coding style.\t\n\n  - coders/logo.c, Copyright.txt, www/Copyright.html: Acknowledge\n    and respect the XFig copyright.\n\n  - VisualMagick/installer/inc/files-documentation.isx: QuickStart.txt\n    is no longer distributed so it is removed.\n\n2003-05-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.h (RoundToQuantum): New macro to round positive\n    double to Quantum.\n\n  - magick/xwindow.c, magick/xwindow.h, magick/studio.h: Use FreeBSD\n    portability fixes from FreeBSD ports collection.\n\n  - configure.ac: Test for <machine/param.h> as used by some \\*BSD systems.\n\n  - QuickStart.txt, www/QuickStart.html: Don't distribute QuickStart.txt or\n    www/QuickStart.html since the content doesn't currently apply to\n    GraphicsMagick.\n\n2003-05-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - README.txt: Added text regarding where to obtain dcraw, a simple\n    but useful decoder for the proprietary raw file formats produced\n    by digital cameras (58 supported cameras!).\n\n  - configure.ac: Added support for finding dcraw.\n\n  - VisualMagick/bin/delegates.mgk: Added support for dcraw.\n\n  - coders/delegates.mgk.in: Added support for dcraw.\n\n  - version.sh (PACKAGE\\_RELEASE\\_DATE): Extract the most recent\n    update date from the ChangeLog file using awk.\n\n2003-05-12  William Radcliffe  <billr@corbis.com>\n\n  - modules.mgk, magic.mgk : Sync up both of these for UNIX\n    as well as VisualMagick builds. Includes changes for the\n    meta.c code.\n\n2003-05-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - www/formats.html: Documented embedded gray intensity images.\n\n  - coders/logo.c: Added the embedded dithered gray intensity images\n    gray0, gray5, ..., through gray100 to support bilevel filling and\n    painting with an intensity resolution of 5%.\n\n  - www/formats.html: Added description of images available via\n    \"IMAGE:\" format tag, as well as providing a tiled preview.\n\n  - coders/logo.c: Renamed \"transparent\" image to \"checkerboard\"\n    since it is a better description.  Added a set of tiny bilevel\n    images (accessed via IMAGE:) for use when tiling, filling, or for\n    use as a texture image.  The complete set of image names available\n    via the IMAGE: coder are now BRICKS, CIRCLES, CROSSHATCH,\n    CROSSHATCH30, CROSSHATCH45, FISHSCALES, GRANITE, HEXAGONS,\n    HORIZONTAL, HORIZONTALSAW, HS\\_BDIAGONAL, HS\\_CROSS, HS\\_DIAGCROSS,\n    HS\\_FDIAGONAL, HS\\_HORIZONTAL, HS\\_VERTICAL, LEFT30, LEFT45,\n    LEFTSHINGLE, LOGO, NETSCAPE, OCTAGONS, RIGHT30, RIGHT45,\n    RIGHTSHINGLE, ROSE, SMALLFISHSCALES, CHECKERBOARD, VERTICAL,\n    VERTICALBRICKS, VERTICALLEFTSHINGLE, VERTICALRIGHTSHINGLE, &\n    VERTICALSAW.  The HS\\_\\* variants are similar to the standard\n    pattern images provided with the Windows GDI.\n\n  - coders/msl.c (MSLStartElement): Don't reset gravity if the user\n    provides an x,y coordinate. Passing coodinates was loosing the\n    gravity setting.\n\n2003-05-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/modules.mgk: Support the IMAGE: format via the LOGO\n    module.\n  - win2k/IMDisplay/IMDisplayView.cpp (DoDisplayImage):\n    Transparent tile is created by reading \"tile:image:transparent\".\n  - coders/logo.c (ReadLOGOImage): Add IMAGE: format to front for\n    embedded images so that adding new images doesn't proliferate coder\n    registrations. Legacy logo magick names (GRANITE, LOGO, NETSCAPE,\n    and ROSE) are still supported, but they are also available in the\n    IMAGE file space (e.g. IMAGE:ROSE).\n\n2003-05-09  William Radcliffe  <billr@corbis.com>\n\n  - VisualMagick\\configure : Further refinements that support both\n    the new \"big\" library and the normal dynamic DLL buidling styles.\n\n2003-05-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/logo.c (ReadLOGOImage): Added a \"TRANSPARENT\" pattern\n    image which can be tiled to form the background of transparent\n    images.\n\n  - win32/IMDisplay/IMDisplayView.cpp: When displaying images which\n    include an opacity channel, use a checker-board pattern as the\n    image background so non-opaque pixels become evident.\n\n2003-05-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/meta.c : Add or fix commenting of DebugString so that\n    module does not require Windows.\n\n  - lcms: Updated to release 1.10.\n\n2003-05-07  William Radcliffe  <billr@corbis.com>\n\n  - VisualMagick\\bin : Brought the MGK files back into sync with\n    the rest of the package and added types for meta.c.\n\n  - VisualMagick\\bin\\win32\\ATL : removed config files in order to\n    prevent very old ATL project from being picked up in the config\n\n2003-05-06  William Radcliffe  <billr@corbis.com>\n\n  - VisualMagick\\lcms\\LIBRARY.txt : a define to prevent popup message\n    box behaviour.\n\n  - VisualMagick\\configure\\ : New feature - -t consolidates all the\n    coders into on library for the static build in order to make the\n    build process tolerable.\n\n  - coders\\xtrn.c : new support for BSTR - wdie character data\n\n  - coders\\svg.c : put back logic that allows the -size parameter to\n    control the pixel dimensions of the output image.\n\n  - coders\\meta.c : added support for wide character parsing of iptc\n    and 8BIM formats.\n\n2003-05-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - version.sh : Update to reflect development status.\n\n2003-05-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - GraphicsMagick 1.0 Released.\n\n  - version.sh (LIBRARY\\_REVISION): Updated for the 1.0 release.\n\n  - magick/studio.h: Add fix to avoid problems caused by zlib\n    under AIX.\n\n  - magick/cache.h: Parameterized prototypes to make them easier\n    to follow.\n\n  - filters/analyze.c: Replace C++ comments with C comments.\n\n  - magick/command.c: For the composite, convert, identify, mogrify,\n    and montage commands, make sure a usage error is returned if a\n    usage message is printed. This is useful for ImageMagickObject\n    users who won't see the usage message if stdio is not supported.\n\n  - locale/C.mgk: Added \"UsageError\" error.  Added missing closure\n    to <Corrupt> tag which caused most/many message lookups to fail.\n\n  - magick/nt\\_base.h: Fixed a compile problem caused by masking\n    internals in delegate.h\n\n  - magick/ImageMagick.rc: Added missing .mgk files.\n\n2003-05-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/nt\\_base.c (lt\\_dlerror): Defining lt\\_dlerror to be\n    NTGetLastError was not a correct implementation since the\n    interface is defined to return a const pointer to a string, but\n    NTGetLastError returns an allocated string, causing a memory leak\n    if NTGetLastError is used in the place of lt\\_dlerror.  A new\n    lt\\_dlerror function is added to fix this.\n    (lt\\_dlsetsearchpath): lt\\_dlsetsearchpath should return an int\n    and accept a const char \\*.\n    (lt\\_dlsym): lt\\_dlsym is supposed to take a const char \\*.\n\n  - magick/nt\\_base.h: lt\\_dlclose should return an `int`.\n\n  - magick/nt\\_base.c (lt\\_dlclose): Return status from lt\\_dlclose.\n\n  - magick/module.c (lt\\_dlclose): lt\\_dlclose is supposed to return\n    an `int`, not `void`. A return value of zero indicates success.\n\n  - VisualMagick/tests/run\\_constitute.bat: Add batch script to\n    run constitute tests.\n\n  - magick/module.c: Added a ltdl\\_initialized static flag to track\n    if libltdl has been initialized by lt\\_dlinit().\n    (TagToFunctionName): Use a stack buffer for the string rather than\n    allocating heap data.\n    (UnregisterModule): Report errors via exception info as the\n    interface suggests.\n    (UnloadModule): Report errors via exception info as the interface\n    suggests.\n    (DestroyModuleInfo): Only invoke lt\\_dlexit() if lt\\_dlinit() has\n    previously been invoked.\n\n  - locale/C.mgk: Added FailedToCloseModule module error.\n\n  - magick/module.c (UnloadModule): Report exception via exception\n    parameter rather than simply printing out an error message and\n    exiting.\n\n  - magick/Makefile.am (noinst\\_HEADERS): integral\\_types.h had to be\n    listed \\*somewhere\\* in order to make it into the distribution.\n\n  - Magick++/lib/Magick++/Image.h: InitializeMagick must be DLL\n    exported.\n\n2003-05-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - Makefile.am (magick-version): Perform version.isx substitutions\n    via Makefile.am rather than configure.\n\n  - magick/magick\\_config\\_api.h.in: Added template header for\n    the installed magick\\_config.h.\n\n  - magick/magick.c (InitializeMagick): Improved the signal handling\n    and registration method. Signal handlers are only registered for a\n    signal if the current signal handling disposition for that signal\n    is set to the default (SIG\\_DFL). When a signal is caught,\n    DestroyMagick is invoked, the handling for the signal is set back\n    to SIG\\_DFL, and then the signal is re-raised to trigger the\n    default handler for that signal. This causes the process to behave\n    as closely to the default as possible (e.g. generating a core\n    file) while ensuring that DestroyMagick is executed. This also\n    ensures that signal handlers registered by API users are not\n    overridden by invoking InitializeMagick.\n\n  - configure.ac: Added tests for sigemptyset and\n    sigaction.\n    Add a check for the return type of signal handlers.\n    Test for the `raise` function.\n\n  - www/formats.html: Add an entry for CUR, Microsoft\n    Cursor Icon format.\n\n2003-05-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/semaphore.c (struct SemaphoreInfo): Added\n    `locked` and `thread\\_id` members. These are used to record\n    if the semaphore is locked, and to validate the thread\n    ID of the unlocker.\n\n  - www/links.html: Added link to Nathan Day's MagickDocs\n    \"ImageMagick and GraphicsMagick documentation project\"\n    site.\n    Added a link to an on-line article regarding the PHP front-end\n    to ImageMagick.\n\n  - coders/icon.c (ReadIconImage): Add support for Windows\n    .CUR format based on advice from Jean Piquemal.\n\n  - magick/image.c (SetImageInfo): Added missing CloseBlob\n    in error path for failure to allocate temporary file.\n\n  - coders/pcx.c (ReadPCXImage): Added support for reading\n    uncompressed PCX images based on code from Jean Piquemal.\n\n2003-05-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/effect.c (AddNoiseImage): For gray images, wrong\n    pointer was being used to evaluate intensity, leading to a\n    black image with noise.\n  - magick/image.c (ChannelImage): Return the channel\n    image in RGBColorspace. Also properly support extracting\n    the opacity channel for images which are not CMYK.\n\n2003-04-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/Makefile.am (install-data-local): Install\n    magick\\_config\\_api.h rather than magick\\_config.h.\n\n  - magick/api.h: Removed inclusion of integral\\_types.h from\n    magick/api.h.  It is included by magick/studio.h.\n\n  - magick/delegate.h: Mapped out a block of private implementation\n    code.\n\n  - configure.ac: Perform substitutions on magick\\_config\\_api.h.\n\n  - magick/magick\\_config\\_api.h.in: New header file template to\n    use for installed magick\\_config.h.\n\n  - magick/studio.h (MAGICK\\_IMPLEMENTATION): Added the define\n    MAGICK\\_IMPLEMENTATION used to enable private types, includes, and\n    defines in the headers. This supports hiding implementation stuff\n    that API users shouldn't see in the headers.\n\n  - utilities/Makefile.am (check): Cleaned up the utilities\n    test/demo a bit as well as using the undocumented \"tmp:\" prefix to\n    cause GraphicsMagick to remove temporary input files once they\n    have been read.  This leaves just the final output file\n    \"demo.miff\" when the test completes.\n\n  - coders/jpeg.c (WriteJPEGImage): If the image resolution is\n    overwritten with 72DPI, make sure that the resolution units are\n    set to PixelsPerInchResolution.\t\n\n  - coders/jpeg.c (WriteJPEGImage): Don't overwrite the image\n    resolution if it is valid.\n\n  - magick/command.c (MogrifyImageCommand): Added -resample\n    option to match documentation.\n\n  - VisualMagick/configure: Added rpcrt4.lib to project settings\n    for Visual C++ 6.0 so that configure links.  The code which\n    needs these interfaces is to support Visual C++ 7.0 XML-style\n    project files.\n\n2003-04-30  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - utilities/Makefile.am (check) Change % to %% in -label parameter.\n\n  - www/gm.html, utilities/gm.1, etc. Documented use of %% to convey\n    the % sign in -format, -comment, -label strings.\n\n2003-04-30  William Radcliffe <billr@corbis.com>\n\n  - magick/command.c: Changes from 2003-04-19 to free the arg\n    list when it was still pointed to by the option arg and accessed\n    on an exception. This caused gm to crash on any erroneous command\n    line argument.\n\n2003-04-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - www/windows.html: Updated to match current installer.\n\n  - VisualMagick/installer/inc/tasks-install-devel.isx (Name): \n    Added an installation checkbox so the user can select to install\n    development headers and libraries for C & C++.\n\n  - VisualMagick/installer/inc/files-perlmagick.isx (Source):\n    Only install PerlMagick PPD files if the user selects to install\n    PerlMagick.\t\n\n  - VisualMagick/installer/inc/files-com.isx (Source): Only\n    install ImageMagickObject files if the user selects to install\n    ImageMagickObject.\n\n  - magick/version.h.in: Added some documentation for the\n    functioning of MagickLibVersion and MagickLibVersionNumber.\n\n  - configure.ac: Perform substutions to create\n    VisualMagick/installer/inc/version.isx from\n    VisualMagick/installer/inc/version.isx.in. This allows Windows\n    versioning info to be updated from info in version.sh.\n\n  - Makefile.am (magick-version): For a VPATH build, update\n    VisualMagick/installer/inc/version.isx in the source directory if\n    it is out of date.\n\n2003-04-28  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - magick/cache.c: CloneImagePixels(): applied Cristy's bugfix\n    from IM-5.5.7.\n\n2003-04-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - www/api.html: The demo program on the ImageMagick API page is\n    usually intended to be an exercise for the reader.  It rarely\n    compiles or works.  Sure enough the demo code was not even close\n    to compiling, didn't run, and did something totally different than\n    described. This is not a good way to treat new users.  Now the\n    demo program compiles and runs, and its description is correct.\n\n  - www/magick.css, www/smile.c: Remove \"Pair\" advertisement which\n    was discovered appended at the end of these files.\n\n  - coders/jpeg.c (ReadJPEGImage): Check for failure of\n    AllocateImage.  Close blob prior to error return.\n\n  - configure.ac: Perform substitutions on magick/version.h\n\n  - magick/version.h.in: New file to provide base for configured\n    magick/version.h\n\n  - version.sh (PACKAGE\\_RELEASE\\_DATE): Support setting a package\n    release date.\n\n  - configure.ac: Perform substitutions on PerlMagick/Magick.pm.in to\n    create PerlMagick/Magick.pm.in.\n\n  - PerlMagick/Magick.pm.in: @PACKAGE\\_VERSION@ is substituted while\n    configuring PerlMagick/Magick.pm.\n\n  - magick/magic.mgk, VisualMagick/bin/magic.mgk: Removed risky\n    entry for PICT which has been demonstrated to lead to a false\n    match in the real-world.\n\n  - coders/pict.c (ReadPICTImage): Ensure that PICT decoder don't\n    loop forever with an EOF condition if none of the PICT op-codes\n    encountered result in a condition which terminates the input loop.\n    If EOF is dectected while in the input loop a \"corrupt image\"\n    \"unexpected end of file\" error is reported.\n\n  - VisualMagick/installer: Updated installer.\n\n2003-04-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/magick.c, magick/blob.c, magick/studio.h: Added\n    Compilation fixes recommended by Harold Bien for for Borland C++.\n\n  - www/contribute.html: Added text regarding contributing to\n    GraphicsMagick.\n\n  - www/api/types.html: Documentation for GraphicsMagick API types\n    moved from www/api/types/\\*.html into this one file.  Types\n    documentation is still very much under development.\n\n  - README.txt: Added note regarding the download location for free\n    Windows fonts which are kindly made available by Microsoft.\n\n  - VisualMagick/installer/gm-dynamic-full-\\*.iss: Install\n    nt\\_base.h and nt\\_feature.h.\n\n2003-04-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - www/windows.html: Updated for GraphicsMagick 1.0 and to\n    link to ImageMagickObject.html.\n\n  - www/programming.html: Added link to ImageMagickObject.html.\n\n  - www/ImageMagickObject.html: New file to provide some\n    documentation for ImageMagickObject.\n\n  - www: Found and fixed broken URL links.\n\n2003-04-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - FlashPIX: Applied patches from FreeBSD.  Bumped package\n    version to version to 1.2.0.8.\n\n  - www/api.html: Updated to reflect GraphicsMagick\n\n  - www/\\*.html: Updated with format\\_c\\_api\\_docs script.\n\n  - Makefile.am (format\\_c\\_api\\_docs): Add a target to update\n    the C API documentation.\n\n  - scripts/format\\_c\\_api\\_docs: Add script which extracts and\n    formats the C API documentation into HTML files in the www/api\n    subdirectory.\n\n2003-04-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - version.sh (PACKAGE\\_VERSION): Update release version ID.\n\n  - magick/version.h (MagickReleaseDate): Update release date.\n\n  - magick/constitute.c (ConstituteImage): Fixed problems with\n    reading intensity (gray) pixel arrays.\n\n  - magick/image.c (GrayscalePseudoClassImage): Use\n    ScaleQuantumToIndex rather than ScaleQuantumToMap.\n\n  - magick/constitute.c (ConstituteImage): Use ScaleQuantumToIndex\n    macro to scale integral intensity values to colormap range.\n\n  - magick/image.h (ScaleQuantumToIndex): New macro to scale a\n    quantum to the maximum range of a colormap index.  Useful when\n    writing to PsuedoClass grayscale images.\n\n  - VisualMagick/tests/run\\_constitute.bat: Batch script to run\n    constitute tests.\n\n  - VisualMagick/installer/\\*.iss: Updated for Beta1 release.\n\n2003-04-22  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - utilities/Makefile.am (check) fixed typos (RM -> RMDelegate\n    and removed stray \"gm\"), added -random-threshold, ordered-dither.\n\n  - magick/effect.c: Random-threshold was not treating non-gray\n    PseudoColor images correctly.\n\n2003-04-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - utilities/Makefile.am (check): Added code to put logo on demo\n    output.\n\n  - magick/command.c (MontageImageCommand): Pass exception rather\n    than &image->exception because image may be null, and it is\n    pointless to store the exception where it will not be reported to\n    the user anyway.\n\n  - utilities/Makefile.am (check): Ported Glenn Randers-Pehrson's\n    utilities demo script into the Makefile to serve as a check\n    target.\n    (check): Add definition to find Generic.ttf.\n\n  - locale/C.mgk: Fixed syntax error in <Option><FatalError>\n    section.\n\n  - www/development.html: New file to describe development\n    process.\n\n  - index.html, www/\\*.html: Added link to development.html\n    and improved formatting a bit.\n\n2003-04-21  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - Fixed bug with compiling png.c with libpng versions\n    older than libpng-0.95.\n\n2003-04-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - www/programming.html: Added links to Delphi and Scheme\n    programming interfaces.\n\n  - configure.ac : Removed outdated test for jp2conf.h.\n\n2003-04-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/command.c: Add argument expansion and deallocation code\n    to command functions which lacked this functionality.\n    Replace calls to Exit with a return to the invoking function.\n\n  - utilities/gm.c: Expect each subcommand to expand and deallocate\n    its own argument list.  Treat subcommands more similarly.\n\n  - magick/magick.c (InitializeMagick): Seed the random number\n    generator.\n\n  - magick/utility.c (ExpandFilenames): Handle tilde expansion\n    properly. Handle relative glob specifications. Skip over \"\\*\"\n    argument to +profile properly. Don't expand VID: specifications\n    since the VID: coder will execute ExpandFilenames() later. Apply\n    format specifier prefix to globbed file names. Fix double frees\n    and rationalize memory management by always copying to a new\n    vector.\n\n2003-04-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/magick.c (InitializeMagick): Decided to\n    move clean-up signal-handler registration from gm.c\n    to magick.c in order to ensure that resources are\n    cleaned up for all library users. This means that\n    if a user program wants to do something special for\n    signals registered to be caught by InitializeMagick\n    (SIGHUP, SIGINT, SIGQUIT, SIGABRT, SIGTERM, SIGXCPU,\n    & SIGXFSZ) then the user program should register its\n    own signal handlers after invoking InitializeMagick.\n    The user is then responsible for making sure that\n    DestroyMagick is invoked if an unexpected signal is\n    caught.\n\n  - tests/Makefile.am (check-constitute): Added\n    constitute tests.\n\n  - magick/constitute.c: New test program to ensure\n    that ConstituteImage and DispatchImage are working\n    correctly.\n\n2003-04-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - www/download.html: Added links to directories\n    at ftp.graphicsmagick.org.\n\n  - index.html: Add notice regarding 1.0 Beta0\n    availability.\n\n  - www/cvs.html: Updated CVS checkout information to\n    include the GraphicsMagick-1\\_0 branch.\n\n  - coders/psd.c (ReadPSDImage): Applied patch\n    (SourceForge patch ID 722849) from Derry Bryson to\n    fix a memory leak. An image was being leaked.\n\n  - magick/constitute.c (DispatchImage): Applied patch\n    (SourceForge patch ID 722655) from Derry Bryson to\n    correctly use the switch\\_map array rather than the\n    map array.  Without this patch, DispatchImage does\n    not work at all.\n\n  - GraphicsMagick 1.0.0-beta0 release.\n\n  - version.sh: Updated for beta0 release.\n\n  - \\*.c magick/\\*.h: Update header inclusion to include\n    \"magick/\" prefix in order to ensure that there is no\n    confusion with headers from another package.\n\n2003-04-16  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - magick/effect.c: 4x4 ordered dither threshold was\n    incorrect.\n\n2003-04-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/resource.c (InitializeMagickResources):\n    Added the ability to obtain the amount of physical\n    memory by executing an external command.\n\n  - configure.ac: Check for getpagesize().\n    (MAGICK\\_PHYSICAL\\_MEMORY\\_COMMAND): Added a test for\n    an external command which (quickly) returns the\n    amount of physical memory installed on the machine.\n    Currently only activated for FreeBSD.\n    (MAGICK\\_PHYSICAL\\_MEMORY\\_COMMAND): Use sysctl to\n    determine total physical memory for Darwin.\n\n  - magick/delegate.c (ListDelegateInfo): If COLUMNS\n    environment variable is set, then use it to obtain\n    the screen width.  Some shells dynamically update\n    COLUMNS, but COLUMNS may need to be explicitly\n    exported in order for it to be seen by subordinate\n    programs (such as gm).\n\n  - magick/effect.c (AddNoiseImage): Use IsGrayImage()\n    to check if the image is gray.  Add missing columns\n    loop for intensity case (oops!).\n\n  - magick/command.c (DisplayImageCommand): Fix\n    -dispose option processing bug reported by \n    Felix Heimbrecht.\n\n  - coders/fpx.c: Check status from FPX\\_InitSystem().\n\n2003-04-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - configure.ac: Define PERLMAINCC to be the C compiler\n    if there are no C++ dependencies, or the C++ compiler\n    if there are C++ dependencies.\n\n  - PerlMagick/Makefile.PL.in: Use PERLMAINCC to compile\n    and link perlmain.c.  This allows using the C++ compiler\n    to link, which is useful when the build depends on C++\n    libraries like libfpx.\n\n  - ltmain.sh: Updated to libtool 1.5 release.\n\n  - Makefile.am ($(PERLMAGICK)/$(PERLSTATICNAME)): Add\n    rules to make sure that static PerlMagick is linked\n    against the current GraphicsMagick library.\n\n  - coders/miff.c (ReadMIFFImage): Properly scale\n    colormap entries.\n\n  - magick/image.c (TransformRGBImage): Eliminate 32-bit\n    integer overflow condition for Q:32 build while\n    transforming CMYK pixels.\n\n2003-04-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - PerlMagick/t/ttf/read.t: Updated signatures and\n    reference image for FreeType 2.1.4.\n\n  - (PerlMagick/t/write.t, PerlMagick/t/montage.t,\n    PerlMagick/t/rad/read.t, PerlMagick/t/rad/write.t):\n    Fix signatures which were thrown off by previous\n    change to how signatures are specified to functions\n    in subroutines.pl.\n\n  - PerlMagick/t/cgm/read.t: Updated to use reference\n    image.\n\n  - PerlMagick/Makefile.PL.in: Perform substitutions\n    on generated Makefile to ensure that the proper\n    -lGraphicsMagick is used for a static build.\n\n  - ttf: Updated to FreeType 2.1.4.  Now stored in\n    CVS as delegates/freetype2 rather than delegates/ttf\n    so be sure to re-checkout the ttf directory so that\n    the correct files are used.\n\n  - wmf/incude/libwmf/api.h: Updating FreeType caused\n    a problem since it introduced a copy of zlib and\n    api.h included zlib.h.  Fixed problem by adding\n    a typedef for gzFile and not including zlib.h.\n\n  - utilities/gm.c: Fixed minor compilation problem\n    under Windows caused by a typo in the signal\n    handler registration code.\n\n2003-04-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - Makefile.am: When building a static PerlMagick,\n    build PerlMagick as part of the `all` target and\n    don't do a `make clean` of PerlMagick at install\n    time.\n\n  - configure.ac (LIB\\_DPS): Add check to see if -lXt\n    is required by -ldps.  XFree86 -ldps requires -lXt.\n\n  - FlashPIX: FlashPIX library now compiles under\n    FreeBSD 5.0.\n\n  - magick/deprecate.c (ValidateColormapIndex): Remove\n    non-interface deprecated function.\n\n  - magick/tempfile.c (AcquireTemporaryFileDescriptor):\n    Priortize use of mkstemp() over tempname() since \\*BSD\n    compilers whine about tempname() (although we do use\n    tempname() safely).\n\n  - magick/color.c (ConstrainColormapIndex): Removed\n    function since it is no longer used.\n\n  - magick/utility.c (TemporaryFilename): Removed\n    TemporaryFilename utility function since it is\n    no longer used and it makes \\*BSD compilers\n    complain.\n\n  - magick/studio.h: Don't define \\_ISOC99\\_SOURCE,\n    \\_POSIX\\_C\\_SOURCE, or \\_XOPEN\\_SOURCE when compiling\n    under FreeBSD since this maps out a `ushort`\n    definition required by /usr/include/sys/ipc.h.\n\n2003-04-11  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - coders/png.c: Some grayscale PNG images and the\n    JNG alpha channel were decoded improperly at Q:32.\n\n  - magick/constitute.c (PopImagePixels): Changed many\n    instances of (Quantum) typecast to (unsigned char).\n\n2003-04-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - PerlMagick/t/tiff/read.t: Added signature for 12-bit\n    TIFF test and a Q:32 build.\n\n  - PerlMagick/t/subroutines.pl: Extended routines\n    which are signature based to accept signatures for\n    Q:32 as well.\n\n  - PerlMagick/t/wmf/read.t: Relax error values slightly\n    to pass at Q:32.\n\n  - coders/miff.c (PushImageRLEPixels): Fix reading\n    RLE MIFF at Q:32.  A fragment of old code was being\n    used to obtain the length.\n    (WriteRunlengthPacket): Fix writing RLE MIFF at Q:32.\n    In most cases the wrong scaling macro was being used.\n\n  - tests/Makefile.am (check-miff): Added MIFF tests\n    for supported compression options.\n\n2003-04-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/color.c (QueryColorDatabase): Extended to\n    support parsing Q:32 hex color specification strings.\n    Also add error reporting for failure to parse the\n    color specification. This resolves a bug that drawing\n    via the draw.c APIs was not working for Q:32 builds.\n\n  - utilities/gm.c (main): Add signal handlers to\n    make sure that program cleans-up on exit by invoking\n    DestroyMagick.\n\n  - magick/draw.c (DrawSetFillColor): Quote color\n    specification.\n    (DrawSetStrokeColor): Quote color specification.\n    (DrawSetTextUnderColor): Quote color specification.\n\n  - ltmain.sh: Update to latest CVS libtool.\n\n2003-04-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/enhance.c (NormalizeImage): Only normalize the opacity\n    channel if image->matte is true. This results in some (15%)\n    speedup. While it can be argued that the `K` in CMYK should be\n    normalized, it can also be argued that this is senseless since `K`\n    is not a \"linear\" measure like C, M, & Y are, and there may not be\n    any any value to normalizing CMY at all.\n    (EqualizeImage): Only equalize the opacity channel if image->matte\n    is true.  This results in a 23% speedup.\n    (GammaImage): Minor loop optimization.\n    (LevelImage): Don't level the opacity channel.  Doing so doesn't\n    make any sense.\n    (LevelImageChannel): Put loops inside switch statement rather than\n    around it.\n\n  - PerlMagick/t/tiff/read.t: Added grayscale 12-bit and 16-bit TIFF\n    read tests.\n\n2003-04-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/tiff.c (ReadTIFFImage): Add support for reading\n    12-bit grayscale TIFFs. Fix reading 16-bit grayscale TIFFs\n    when QuantumDepth=8.\n\n  - VisualMagick/installer/gm-dynamic-full-8.iss,\n    VisualMagick/installer/gm-dynamic-full-16.iss: Many C header\n    files were not being included in the distribution.  Oops!\n\n2003-04-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - (index.html, www/\\*.html): Update to new web page style.\n\n  - scripts/txt2html: Update to output new web page style.\n\n  - ltmain.sh: Updated to latest CVS libtool.\n\n  - magick/tempfile.c (DestroyTemporaryFiles): Function was\n    crashing if it was executed twice.\n\n2003-04-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/delegates.mgk.in: Ralcgm was appending \".ps\" to the\n    provided output file name, so change cgm delegate command so that\n    the input file is delivered via standard input, output is\n    re-directed to a file, and anything printed to stderr (such as\n    the Ralcgm program name and version) is sent to /dev/null.\n\n  - INSTALL-unix.txt: Added/corrected/improved documentation\n    regarding --disable-installed, --enable-shared, and\n    --with-modules.\n\n  - VisualMagick/magick/magick\\_config.h.in: Add more documentation\n    and explanatory notes in order to lessen confusion.\n\n  - Many files: Replaced \"UseInstalledImageMagick\" with\n    \"UseInstalledMagick\" for obvious reasons.\n\n2003-04-04  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - magick/command.c, utilities/gm.c: Print \"help\" screen for a\n    tool when user types \"gm tool\" or \"gm tool -help\"\n\n  - magick/command.c, magick/effect.c: add -ordered-dither option.\n\n2003-04-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - locale/C.mgk: Fixed message associated with\n    \"UnableToCreateTemporaryFile\".\n\n  - magick/tempfile.c (AcquireTemporaryFileDescriptor): Decided\n    to return a pathname (if possible), even on failure, for use\n    in error reports.  The function return status should be used\n    to determine if the function has succeeded.\n\n  - locale/locale.mgk: Updated copyright header.\n\n  - (magick/annotate.c, magick/attribute.c, magick/blob.c,\n    magick/cache.c, magick/constitute.c, magick/delegate.c,\n    magick/display.c, magick/image.c, magick/locale.c\n    magick/tempfile.c, magick/tempfile.h, magick/utility.c,\n    magick/xwindow.c, coders/dcm.c, coders/ept.c,\n    coders/histogram.c, coders/mpeg.c, coders/pdf.c,\n    coders/pict.c, coders/preview.c, coders/ps2.c,\n    coders/ps3.c, coders/ps.c, coders/pwp.c, coders/sfw.c,\n    coders/svg.c, coders/tiff.c, coders/url.c, coders/wpg.c):\n    Ensure that failure to allocate/create temporary file is\n    properly detected and reported.\n\n2003-04-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/type.c (GetTypeBlob): Prioritize hard-coded path\n    over Windows registry values.\n\n  - magick/log.c (GetLogBlob): Prioritize hard-coded path\n    over Windows registry values.\n\n  - magick/blob.c (GetConfigureBlob): Prioritize hard-coded path\n    over Windows registry values.\n\n  - magick/delegate.c (ReadConfigureFile): Perform substitutions\n    for \"@GMDelegate@\", \"@GMDisplayDelegate@\", \"@MPEGDecodeDelegate@\",\n    \"@MPEGEncodeDelegate@\", and \"@HPGLDecodeDelegate@\" while reading\n    delegates.mgk under windows.\n    (ListDelegateInfo): Format delegate command line to multiple\n    lines if necessary rather than truncating.\n\n  - configure.ac (MagickBinPathDefine): Added support for\n    a MagickBinPath definition.\n\n  - configure.ac (GSVersion): Added test to obtain version\n    of installed Ghostcript.\n\n  - magick/tempfile.c (AcquireTemporaryFileDescriptor): Open\n    flag should have been O\\_RDWR, not O\\_WRONLY!\n\n2003-04-03  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - magick/utility.c: Simplified skipping over the \"\\*\" in\n    the +profile \"\\*\" option when expanding filenames.\n\n2003-04-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - VisualMagick/bin/delegates.mgk: Update similarly to\n    coders/delegates.mgk.in.\n\n  - coders/delegates.mgk.in: Replaced `mpeg-decode` delegate\n    specification with `mpeg` delegate specification.\n\n  - PerlMagick/t/mpeg/read.t: Since -r option is no longer\n    supplied to mpeg2decode, the signatures must be updated.\n\n  - magick/utility.c (ExpandFilenames): Skip over no-argument\n    commands properly.\n\n  - coders/mpeg.c: Removed ReadMPEGImage since this is handled\n    entirely by delegate now.\n\n  - magick/command.c: Add convert -temporary option for use\n    when input files are temporary files which should be\n    automatically removed.\n\n  - magick/delegate.c (InvokeDelegate): Ensure that temporary\n    file access is secure.\n\n  - coders/ept.c (ReadEPTImage): Ensure that temporary file\n    specified by image\\_info->filename is liberated before\n    allocating a new temporary file name.\n\n  - coders/ps.c (ReadPSImage): Ensure that temporary file\n    specified by image\\_info->filename is liberated before\n    allocating a new temporary file name.\n\n  - coders/pdf.c (ReadPDFImage): Change TemporaryFilename\n    to AcquireTemporaryFileName.\n\n  - magick/tempfile.c (LiberateTemporaryFile): Now takes\n    a `char \\*` argument rather than `const char \\*`, and\n    erases the provided filename if it is the name of a valid\n    temporary file. This helps avoid errors. The return\n    status may be used to determine if a file was removed.\n    (AcquireTemporaryFileDescriptor): Decided that adding a\n    .tmp extension to temporary file names is unnecessary.\n\n  - coders/jp2.c (WriteJP2Image): Destroy pixel matrix\n    after encoding image.  Cristy says that there is memory\n    corruption otherwise.\n\n2003-04-01  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - coders/png.c: Use new temporary file manager for JNG components.\n    Merge with IM 5.5.7 (mostly cosmetic changes).\n\n2003-03-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/cache.c (OpenCache): Add some Windows-specific\n    open options.\n\n  - magick/resource.c (InitializeMagickResources): Increase\n    the number of \"lowio\" file handles available for use under\n    Windows.\n\n  - ltdl/ltdl.c: Incorporate more Darwin fixes from CVS libtool.\n\n  - coders/pcx.c (ReadPCXImage): Incorporate bugfix from\n    ImageMagick -- Not enough memory allocated for reading PCX\n    (bug report by Trevor Willis).\n\n  - magick/magick.c (InitializeMagick): Only invoke\n    SetLogEventMask() to set debug options based on\n    getenv(\"MAGICK\\_DEBUG\") if the environment variable is set.\n\n2003-03-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/tempfile.c: Include tempfile.h rather than temporary.h\n\n  - magick/magick.c: Include tempfile.h rather than temporary.h\n\n  - coders/dcm.c, coders/ept.c, coders/histogram.c, coders/mpeg.c,\n    coders/pdf.c, coders/pict.c, coders/preview.c, coders/ps.c,\n    coders/ps2.c, coders/ps3.c, coders/pwp.c, coders/sfw.c,\n    coders/svg.c, coders/tiff.c, coders/url.c, coders/wpg.c,\n    magick/annotate.c, magick/attribute.c, magick/blob.c,\n    magick/cache.c, magick/constitute.c, magick/delegate.c,\n    magick/display.c, magick/image.c, magick/magick.c,\n    magick/utility.c, magick/xwindow.c: Updated to use new temporary\n    file allocation APIs.\n\n  - magick/tempfile.c: New temporary file allocation subsystem for\n    allocating, tracking, and deallocating temporary files.  Use of\n    this subsystem should reduce the likelyhood that temporary\n    files will be left behind once the process exits.\n    If the environment variable MAGICK\\_TMPDIR is set, then its\n    value is used as the location to place temporary files.\n\n  - magick/utility.c (IsAccessibleAndNotEmpty): New function\n    for testing for file exists, is a regular file, and is not empty.\n    Used to test if a temporary file has been updated by a delegate.\n\n  - magick/log.c (SetLogEventMask): Add support for setting\n    TemporaryFileEvent.\n\n  - PerlMagick/Magick.xs: Added TemporaryFile log event type.\n\n  - magick/log.h (LogEventType): Add TemporaryFileEvent event\n    classification.\n\n2003-03-29  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - magick/resize.c (SampleImage) and magick/render.c (DrawAffineImage():\n    Applied Cristy fix for bug that offset images to the top and left.\n\n  - magick/resize.c (ScaleImage): Fixed bug that caused intensity\n    levels to be one unit too high.\n\n  - coders/png.c: make JNG support depend on HasJPEG. Remove temp files.\n\n2003-03-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/resize.c (ResizeImage): Applied fix authored by John\n    Cristy for distortion when using the bessel filter.\n\n  - magick/display.c: Applied fix authored by John Cristy which\n    eliminates bogging down when using the magnifier window on\n    large images.\n\n  - Several files: A few files included multiple copies of the\n    copyright header text due to either pilot error, or equipment\n    failure.\n\n2003-03-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - tests/Makefile.am : Removed some debug code which was\n    accidentally committed to CVS.\n\n  - Copyright.txt: Add copyright statements to all the files,\n    including some apparently missing copyrights.\n\n2003-03-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n  - magick/Makefile.am: Added temporary.c and temporary.h. These\n    are not finished yet.\n\n  - magick/cache.c: Transferred optimization from ImageMagick\n    to read/write all requested pixel cache rows in one system\n    call when accessing the cache using file I/O, and the\n    requested columns equals the image columns.\n\n  - magick/resource.c: (ResourceInfo): Use type `double` rather\n    than `long double`. For many systems, the range of `long double`\n    is the same as `double`.  On others, use of `long double` incurs\n    the cost of function calls since there is no hardware support.\n\n2003-03-22  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - magick/effect.h, effect.c, command.c: Revised -random-dither\n    to require parameters: channel LOWxHIGH.  Channel can presently\n    be \"intensity\", \"opacity\", or \"all\".\n\n2003-03-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - ltdl/ltdl.c: Updated to latest CVS version.  Claimed to\n    support loading modules under MacOS-X.\n\n  - magick/resource.c (InitializeMagickResources): Enable code\n    under Windows which queries system limits.\n\n  - magick/cache.c (S\\_MODE): Fixed portability problems with\n    definition.\n\n  - VisualMagick/bin/delegates.mgk: Fix typo in \"mpeg-decode\"\n    decode rule.\n\n  - libtool: Update to latest CVS version.\n\n  - configure.ac: Test zlib for gzseek and gztell.\n\n  - magick/effect.c (ChannelThresholdImage): The is\\_grayscale flag\n    was not be evaluated correctly.\n\n2003-03-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.h (RoundSignedToQuantum): Added handy\n    RoundSignedToQuantum macro for munging doubles into Quantums.\n\n  - magick/effect.c (ThresholdImage): Added optimizations for\n    thresholding all pixels to white or black. Threshold using an\n    integral value rather than a double so compares are faster.\n    (ChannelThresholdImage): Threshold against integral values since\n    compares are faster. Invoke ThresholdImage for simple thresholding\n    across all channels since it is faster.\n\n2003-03-19  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - coders/meta.c: #ifdef'ed out some dead code.\n\n  - magick/annotate.c: #ifdef'ed out some code that is only\n    used when HasTTF is defined.\n\n  - Added RandomThresholdImage() method and -random-threshold\n    commandline option.\n\n2003-03-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - configure.ac (LIB\\_TIFF): Check for TIFFReadRGBATile and TIFFReadRGBAStrip\n    in libtiff before deciding to use it.\n\n  - magick/blob.c (WriteBlob): Move pointer increment into\n    paranthesis.\n    (ReadBlob): Move pointer increment into paranthesis.\n\n  - magick/gem.c (HSLTransform): Removed inline statement.\n    (TransformHSL): Removed inline statement.\n\n  - magick/random.[c|h]: Removed files from CVS.\n\n  - magick/command.c: Don't include random.h.\n\n  - PerlMagick/t/reference/jng: Update reference files to current output.\n\n2003-03-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - configure.ac: Added tests for pread and pwrite functions.\n\n  - magick/image.c (GrayscalePseudoClassImage): Properly invoke\n    SyncImagePixels.\n\n  - magick/cache.c (SyncCacheNexus): Add back in is\\_monochrome and\n    is\\_grayscale flag resetting which was lost by copying over\n    ImageMagick's cache.c.\n    (FilePositionRead): Inline wrapper for reading a chunk of data at\n    an offset.\n    Cleans up some messy code, and makes it easy to use pread().\n    (FilePositionWrite): Inline wrapper for writing a chunk of data at\n    an offset.\n    Cleans up some messy code, and makes it easy to use pwrite().\n    Cache now uses pread() and pwrite() to access the cache if these\n    calls are available.\n\n  - magick/resource.c (InitializeMagickResources): Support setting\n    resource limits via the environment variables MAGICK\\_LIMIT\\_DISK,\n    MAGICK\\_LIMIT\\_FILES, MAGICK\\_LIMIT\\_MEMORY, and MAGICK\\_LIMIT\\_MAP.\n\n2003-03-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/stream.c (AcquirePixelStream): Store total pixels in\n    64-bit type.\n    (SetPixelStream): Store total pixels in 64-bit type.\n\n  - coders/tiff.c (WriteTIFFImage): CoderError should be\n    MissingDelegateError.\n\n  - coders/ps3.c (Huffman2DEncodeImage): CoderError should be\n    MissingDelegateError.\n    (WritePS3Image): CoderError should be MissingDelegateError.\n\n  - coders/ps2.c (Huffman2DEncodeImage): CoderError should be\n    MissingDelegateError.\n\n  - coders/pdf.c (Huffman2DEncodeImage): CoderError should be\n    MissingDelegateError.\n\n  - coders/fpx.c (ReadFPXImage): CoderError should be\n    MissingDelegateError.\n    (WriteFPXImage): CoderError should be MissingDelegateError.\n\n  - coders/dps.c (ReadDPSImage): CoderError should be\n    MissingDelegateError.\n\n  - magick/image.c (AnimateImages): DelegateError should be\n    MissingDelegateError.\n\n  - magick/annotate.c (RenderX11): DelegateError should be\n    MissingDelegateError.\n\n  - magick/image.c (DisplayImages): DelegateError should be\n    MissingDelegateError.\n\n2003-03-17  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - magick/image.c Relocated misplaced break in ChannelImage()\n    and sped up SetImageOpacity by avoiding blend operation when\n    setting the image fully opaque.\n\n2003-03-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/cache.c: Snarfed cache.c updates from ImageMagick.\n\n  - magick/command.c: Added -list resource support.\n\n2003-03-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/Makefile.am (random.c): Removed building, packaging,\n    and intialization of random.c functions since it is not actually\n    used.\n\n  - magick/semaphore.c (InitializeSemaphore): Only initialize\n    critical section if active\\_semaphore is not already true.\n\n  - magick/resource.c: Snarf resource.c updates from ImageMagick.\n\n  - PerlMagick/Magick.xs: Added missing log event types.\n\n  - magick/log.h (enum): Added ResourceEvent enumeration.\n\n  - magick/log.c (LogMagickEvent): fflush(stdout) at the end of\n    each log.  Otherwise output may not be seen for a long time.\n    (SetLogEventMask): Add support for \"-debug resource\".\n\n  - coders/tiff.c (RegisterTIFFImage): Don't register encode and\n    decode handlers for TIFF if TIFF library is not available.\n\n  - magick/constitute.c (WriteImage): Fix cut-n-paste error\n    in log message (\"decoder\" --> \"encoder\").\n\n2003-03-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - index.html: Added a link to the GraphicsMagick mailing lists.\n\n  - Magick++/demo/zoom.cpp: Added dashed option support, including\n    a -resample option for image resampling.\n\n2003-03-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - Makefile.am (DIST\\_SUBDIRS): Filters subdirectory needs to\n    be distributed.\n\n2003-03-14  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - magick/render.c Ported Cristy's bugfix to DrawAffineImage().\n\n2003-03-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.c (DestroyImage): Comment out new assertions until\n    we are certain that there are no ill effects.\n\n  - coders/mat.c (ReadMATImage): Set image->depth to valid values.\n\n  - PerlMagick/Magick.xs: Update so that new DestroyImage assertions\n     aren't asserted.\n\n  - magick/list.c (DestroyImageList): Update so that new DestroyImage\n    assertions aren't asserted.\n\n  - coders/wpg.c (ReadWPGImage): Don't leave dangling pointer when\n    trimming list. Don't set image->depth to invalid values.\n\n2003-03-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.c (DestroyImage): Add assertions to verify\n    that destroyed image is not currently referenced by another\n    image.  This should help prevent accidental continued use\n    of a destroyed image.\n    (DestroyImage): Added assertions to enforce that images\n    should not continue to reference the destroyed image.\n\n  - coders/wpg.c: Incorporated fixes from Jaroslav Fojtik.\n\n  - version.sh (PACKAGE\\_VERSION\\_ADDENDUM): Construct a package\n    snapshot version based on the ChangeLog modification time.\n    This requires GNU find to work propery since the -printf\n    option is used.\n\n  - configure.ac (LIB\\_GS): Do not test for the Ghostscript\n    library by default due to the issue of its embedded libjpeg\n    conflicting with libjpeg.\n\n  - coders/ept.c (ReadEPTImage): \"PostscriptDelegateFailed\" should\n    be classified as a DelegateError type.\n\n2003-03-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/blob.c (BlobToFile): Truncate while opening file.\n    (ImageToFile): Truncate while opening file.\n\n  - magick/annotate.c (RenderFreetype): Missing freetype library\n    should result in a MissingDelegateError type rather than a\n    DelegateError type.\n\n  - INSTALL-windows.txt: Added a note regarding a workaround for\n    internal compiler errors while compiling image.c when using\n    Visual C++ 7.0.\n\n  - coders/jpeg.c (ReadICCProfile): Incorporate ImageMagick fix\n    to handle short JPEG ICC profiles.\n\n  - magick/integral\\_types.h: Ignore SIZEOF\\_LONG\\_LONG and\n    SIZEOF\\_UNSIGNED\\_LONG\\_LONG defines if \\_VISUALC\\_ is defined.\n\n2003-03-11  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - www/gm.html, utilities/gm.1, guide/gm.tex: Expanded description\n    of the -affine option.\n\n2003-03-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.c (GetImageDepth): Re-implemented using a single-pass\n    algorithm and 1/2 the code. Previous implementation didn't return\n    correct results for Q:32 build.  Now it does.\n\n  - magick/command.c (IdentifyImageCommand): For identify, when\n    %q format specifier is present, image must be read rather than\n    pinged.  If not, either the value 8 is returned, or there is a\n    crash due to reading an uninitialized image.\n\n2003-03-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/mat.c: Incorporate fixes from Jaroslav Fojtik.  Close\n    Blob before rotating image.\n\n  - PerlMagick/README.txt: Update to reflect that PerlMagick is\n    part of GraphicsMagick.\n\n  - PerlMagick/t/input.mat: Added test image for Matlab format.\n\n  - PerlMagick/t/input.wpg: Added test image for WordPerfect Graphics Format.\n\n  - utilities/Makefile.am (ALLMANPAGES): Install gm.1 rather than\n    old utility manual pages.\n\n2003-03-09  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - www/gm.html, utilities/gm.1, guide/gm.tex: First cut at\n    manpage for gm, to replace individual utility manpages.\n\n2003-03-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/blob.c: Fix some erroneous log printf specifications.\n    Improved blob log messages a bit. \n\n  - magick/log.c (IsEventLogging): Use  InitializeLogInfo().\n    (InitializeLogInfo): New function to intelligently initialize\n    logging subsystem.  Only locks when initialization may be required,\n    and only locks long enough to determine if initialization is required.\n    This approach should avoid deadlocking while logging from functions\n    used to initialize logging.\n    (IsLogAccessible): No longer need this duplicate of IsAccessible().\n    (SetLogEventMask): Use  InitializeLogInfo().\n\n  - coders/fpx.c (ReadFPXImage): FlashPIX library does not support\n    BLOB I/O so don't use OpenBlob/CloseBlob.  Opening the blob caused\n    a conflict when the FlashPIX library attempted to open the file.\n\n2003-03-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - configure.ac: Test for libtiff functions (TIFFClientOpen &\n    TIFFIsByteSwapped), which are required by GraphicsMagick, but\n    not found in older libtiff versions.\n\n  - magick/blob.c: Added logging for Blob open/close and memory\n    mapping operations.\n\n2003-03-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - tests/rwblob.c (main): DestroyImage asserts on NULL so only\n    call it for non-null image.\n\n  - tests/rwfile.c (main): DestroyImage asserts on NULL so only\n    call it for non-null image.\n\n2003-03-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - tests/rwblob.c (main): Add -pause option to require keypress to\n    exit program. Clean-up to avoid any appearance of leaks.\n\n  - tests/rwfile.c (main): Add -pause option to require keypress to\n    exit program. Clean-up to avoid any appearance of leaks.\n\n  - magick/static.c (ExecuteStaticModuleProcess): Don't bind in\n    process filter functions for Visual C++ since the build environment\n    doesn't support it yet.\n\n  - magick/log.c (GetLogBlob) Code wasn't actually testing current\n    directory for log.mgk, now it does.\n\n  - magick/log.c (IsEventLogging): Eliminate accidental recursive, or\n    repeated, initialization of the logging system.\n\n2003-03-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/jp2.c (WriteJP2Image): Improved -quality rate estimation\n    for very small files.\n\n2003-03-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/jp2.c (WriteJP2Image): Add additional logging support.\n\n  - tests/rwblob.c: Added BLOB read/write logging.\n\n  - tests/rwfile.c: Added file read/write logging.\n\n  - magick/module.c (FindMagickModule): Minor code cleanup and limit\n    directory and file name lengths to sensible values.\n\n  - magick/utility.c (IsAccessible): Log test failures along with\n    test failure reason [strerror(errno)]. Also log test success.\n\n  - VisualMagick/bin/delegates.mgk: -DSAFER does not work with\n    Ghostscript 8.0.\n\n  - magick/module.c: Needed to conditionally include nt\\_feature.h.\n\n2003-03-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/module.c (ExecuteModuleProcess): Updated to support locating\n    filter modules based on search rules.\n    (CoderInfo): Declare only in module.c since use is private to this\n    module.\n    (GetCoderInfo): Made static and commented out since currently unused.\n    (FindMagickModule): New function to search for a module.\n    (GetModuleBlob): Moved from blob.c, made static, and re-implemented\n    based on FindMagickModule.\n\n  - magick/blob.c: Moved GetTypeBlob() to type.c and made it static.\n    Moved GetModuleBlob() to module.c and made it static.\n\n2003-03-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/Makefile.am: MIFF module does not depend on -ljpeg, but\n    PNG module does (for JNG).\n\n  - filters/analyze.c (AnalyzeImage): Bugfix, image should be passed\n    as Image\\*\\* rather than Image\\*.\n\n  - magick/utility.c (IsAccessible): Don't log errno if errno==0.\n\n2003-03-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/Makefile.am: Link with libFilters convenience library.\n\n  - VisualMagick/magick/magick\\_config.h.in: Change MagickModulesPath\n    to MagickCoderModulesPath and add a MagickFilterModulesPath to\n    locate filter modules.\n\n  - filters/Makefile.am: New makefile to build filter modules.\n\n  - configure.ac: Configure magick/GraphicsMagick.pc and\n    Magick++/lib/GraphicsMagick++.pc.\n    (MagickModulesSubdir): Add quantum depth to modules path to ensure\n    that modules with the correct depth are loaded.  The modules path\n    is now\n    ${libdir}/GraphicsMagick-${PACKAGE\\_VERSION}/modules-Q${QuantumDepth}/coders.\n    (MagickCoderModulesPath): Rename MagickModulesPath to\n    MagickCoderModulesPath.\n    (MagickFilterModulesPath): Define to location of filter modules.\n\n  - magick/Makefile.am: Added rules to install GraphicsMagick.pc.\n\n  - magick/GraphicsMagick.pc.in: Added pkgconfig file for\n    -lGraphicsMagick.\n\n2003-02-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/jp2.c (WriteJP2Image): Quality factor calculation had\n    accidentally been removed.  The calculation is back, but has been\n    biased up slightly so that a quality factor of 75 results in a\n    more reasonable 16:1 compression. Past a quality factor of 99.5,\n    the compression is set to 1:1 (non-lossy).\n\n2003-02-27  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - Fixed bug with reading interlaced PNG images, introduced\n    yesterday.\n\n  - Fixed bug with skipping MNG subimages, also introduced\n    yesterday.\n\n2003-02-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - Makefile.am (EXTRA\\_DIST): Forgot to distribute version.sh\n\n  - configure.ac: Use definitions from version.sh to drive\n    package versioning and naming. These definitions support\n    libtool's recommended approach to library versioning.\n\n  - version.sh: New file for managing release versioning.\n    Edit this file to change the release number, etc.\n\n  - PerlMagick/t/tiff/read.t: Added read tests for stripped,\n    planar contiguous, and planar seperated TIFFs.\n\n  - coders/tiff.c (ReadTIFFImage): Transferred stripped-TIFF\n    reading code from ImageMagick.\n    Enumerated reading methods to make the logic more clear.\n\n2003-02-27  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - JNG alpha sample depth was sometimes inconsistent.\n\n  - Bring only one line at a time into memory during PNG\n    read/write (Merge with Cristy's 5.5.6 update).\n\n2003-02-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - PerlMagick/Makefile.PL.in (LIBS): Put MAGICKLIB first to\n    decrease the probability that the wrong libMagick is used\n    when linking static PerlMagick.\n\n  - configure.ac (PerlMagick): Fix linker search path for\n    -lGraphicsMagick when linking a static PerlMagick.  It seems\n    that libtool changed the location where it places static\n    libraries.\n\n  - PerlMagick/t/tiff/read.t: Added test for reading tiled TIFF.\n\n  - coders/tiff.c (ReadTIFFImage): Add optimized support for\n    reading tiled TIFFs.\n    (ReadTIFFImage): Optimize loops for reading tiled TIFFs as well.\n    (ReadTIFFImage): Eliminate compiler warning.\n    (ReadTIFFImage): Add some missing error handling for tiled TIFF.\n\n2003-02-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/tiff.c (ReadTIFFImage): Optimize RGBA transfer loop.\n\n2003-02-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/render.c (DrawPrimitive): Return DrawPolygonPrimitive\n    status (edit transferred from ImageMagick).\n\n  - magick/utility.c (GetMagickGeometry): Scaling to an area now\n    preserves the image aspect ratio.\n\n2003-02-24  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - png.c: Added missing parentheses in typecast (cristy noticed\n    the bug that I introduced on 2/18).\n\n2003-02-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - Makefile.am: Add rules to produce www/README.html,\n    www/INSTALL-mac.html, www/INSTALL-unix.html, www/INSTALL-vms.html,\n    and www/INSTALL-windows.html\n\n  - www/README.html: New file produced from README.txt\n\n  - www/INSTALL-mac.html: New file produced from INSTALL-mac.txt.\n\n  - www/INSTALL-unix.html: New file produced from INSTALL-unix.txt.\n\n  - www/INSTALL-vms.html: New file produced from INSTALL-vms.txt.\n\n  - www/INSTALL-windows.html: New file produced from INSTALL-windows.txt.\n\n  - NEWS: Added news for GraphicsMagick 1.0.0.\n\n  - magick/locale.c: Added error messages to support JP2.\n\n  - locale/C.mgk: Added error messages to support JP2.\n\n  - locale/locale.mgk: Update to GraphicsMagick copyright.\n\n  - coders/jp2.c: Updated to use Jasper 1.700.1 interface\n    conventions. Jasper 1.700.1 is required now. Support\n    reading arbitrary quantum sizes up to 16-bits.  Return\n    grayscale images as PseudoClass.\n\n  - jp2/: Updated Jasper sources to version 1.700.1.\n\n2003-02-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/jp2.c (ReadJP2Image): Obtain channel indexes by\n    ID rather than assuming index value.  Validate that channel\n    geometry and encoding is supported.\n\n  - magick/effect.c (ThresholdImage): Additional performance\n    optimization. Work faster if image is already gray.\n\n2003-02-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/jp2.c (WriteJP2Image): Port to Jasper 1.7.\n    For Q:32, don't write 32-bit pixels rather than the\n    16-bit pixels we told Jasper we would write.\n    (WriteJP2Image): Back-port to Jasper 1.6.\n\n2003-02-18  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - coders/modules.mgk: Added JNG entry.\n\n2003-02-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/jp2.c (RegisterJP2Image): Added registration for\n    \"PGX\" magick tag.\n\n  - magick/magic.mgk: Added entry for JPEG V2's PGX format.\n\n  - PerlMagick/t/jp2/read.t: Added JPEG Version 2 read tests.\n\n  - coders/modules.mgk: Added JPC and PGX magick types to\n    support JPEG V2.\n\n  - magick/color.c (IsMonochromeImage): Re-arranged test logic\n    to short-circuit test using ORs.\n    (IsGrayImage): Re-arranged test logic to short-circuit test\n    using ORs.\n\n  - magick/constitute.c (PopImagePixels): Speed GrayQuantum\n    and GrayAlphaQuantum cases if is\\_grayscale is True.\n\n  - magick/quantize.c (AssignImageColors): Sync image to\n    update DirectClass pixels to new colormap.\n\n  - coders/fpx.c (RegisterFPXImage): FlashPIX does not\n    provide direct BLOB I/O support.\n\n  - magick/blob.c (BlobToImage): Add logging.\n    (BlobToFile): Add logging.\n\n2003-02-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/fpx.c (ReadFPXImage): Removing the input file is\n    antisocial.\n\n  - PerlMagick/t/fpx/\\*.fpx: Replaced with new copies.  Files\n    seemed to be corrupt.\n\n  - PerlMagick/t/cgm/read.t: Specify file magick so that CGM\n    read test passes for BLOB case.\n\n  - PerlMagick/t/rad/read.t: Specify file magick so that RAD\n    read test passes for BLOB case.\n\n  - PerlMagick/t/jng/read.t: Add read tests for JNG.\n\n  - PerlMagick/t/jng/write.t: Add read/write tests for JNG.\n\n  - configure.ac (DELEGATES): Added `jng` to the DELEGATES list\n    so that JNG can be included in the PerlMagick tests.\n\n2003-02-18  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - coders/png.c: Write proper JNG image\\_interlace\\_method.\n\n  - coders/png.c: Read and write proper MNG and JNG sRGB intent.\n\n  - PerlMagick/t/jng: Add twelve test files in JNG format.\n\n  - coders/png.c: Write proper progressive JNG output when\n    transparency is present.\n\n2003-02-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/version.c (GetMagickWebSite): New function.\n\n2003-02-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/wmf.c (ipa\\_device\\_begin): Use MagickWebSite definition.\n\n  - www/Copyright.html: Updated to match Copyright.txt\n\n  - www/perl: Updated to reflect GraphicsMagick vs ImageMagick.\n\n  - magick/xwindow.c (XMakeImageMSBFirst): Minor loop optimizations.\n\n  - magick/constitute.c (ConstituteImage): Check for grayscale\n    and monochrome image if image is PseudoClass.\n\n2003-02-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/enhance.c (ContrastImage): Preserve is\\_grayscale flag.\n    (EqualizeImage): Preserve is\\_grayscale flag.\n    (ModulateImage): Preserve is\\_grayscale flag.\n    (NegateImage): Preserve is\\_grayscale flag.\n    (NormalizeImage): Preserve is\\_grayscale flag.\n\n  - magick/fx.c (ColorizeImage): Evaluate is\\_grayscale status.\n    (ConvolveImage): Preserve is\\_grayscale flag.\n    (ImplodeImage): Preserve is\\_grayscale flag.\n    (SolarizeImage): Preserve is\\_grayscale flag.\n    (OilPaintImage): Preserve is\\_grayscale flag.\n    (SwirlImage): Preserve is\\_grayscale flag.\n    (WaveImage): Preserve is\\_grayscale flag.\n\n  - magick/resize.c (MagnifyImage): Preserve is\\_grayscale flag.\n    (MinifyImage): Preserve is\\_grayscale flag.\n    (ResizeImage): Preserve is\\_grayscale flag.\n\n  - magick/decorate.c (FrameImage): Evaluate is\\_grayscale status.\n    (RaiseImage): Preserve is\\_grayscale.\n\n  - magick/shear.c (IntegralRotateImage): Preserve is\\_grayscale.\n    flag.\n    (XShearImage): Evaluate is\\_grayscale status.\n    (YShearImage): Evaluate is\\_grayscale status.\n\n  - magick/transform.c (ChopImage): Preserve is\\_grayscale flag.\n    (CropImage): Preserve is\\_grayscale flag.\n    (FlipImage): Preserve is\\_grayscale flag.\n    (FlopImage): Preserve is\\_grayscale flag.\n    (RollImage): Preserve is\\_grayscale flag.\n\n  - magick/effect.c (AddNoiseImage): If image colorspace is\n    GRAYColorspace, then add intensity noise, and transfer\n    image is\\_grayscale flag to output image.\n    (BlurImage): Preserve is\\_grayscale flag.\n    (DespeckleImage): Preserve is\\_grayscale flag.\n    (EdgeImage): Preserve is\\_grayscale flag.\n    (EmbossImage): Preserve is\\_grayscale flag.\n    (GaussianBlurImage): Preserve is\\_grayscale flag.\n    (MotionBlurImage): Preserve is\\_grayscale flag.\n    (ShadeImage): Preserve is\\_grayscale flag.\n    (SharpenImage): Preserve is\\_grayscale flag.\n    (UnsharpMaskImage): Preserve is\\_grayscale flag.\n\n  - magick/quantize.c (QuantizeImage): Pre-reduce gray images\n    to PseudoClass in order to quickly determine the number of\n    colors, and provide the expected PseudoClass output. Also\n    skip slow color quantization if there are already fewer\n    colors than requested.\n\n  - magick/image.c (GrayscalePseudoClassImage): New function\n    to quickly reduce an image to PseudoClass grayscale.  This\n    is a fast way to determine the number of intensities in a\n    grayscale image. Either a compact sorted colormap or a faster,\n    contiguous linear colormap is created, depending on the\n    optimize\\_colormap flag. If the image is already PseudoClass,\n    and the optimize\\_colormap flag is True, then the existing\n    colormap is sorted and reduced.\n    (SyncImage): Preserve is\\_grayscale flag.\n    (ChannelImage): Result is grayscale.\n    (CycleColormapImage): Preserve is\\_grayscale and is\\_monochrome flags.\n    (SetImage): Evaluate is\\_grayscale flag.\n    (SetImageDepth): Preserve is\\_grayscale flag.\n    (SetImageOpacity): Preserve is\\_grayscale flag.\n    (SortColormapByIntensity): Preserve is\\_grayscale flag.\n    (TransformRGBImage): Evaluate is\\_grayscale flag.\n\n2003-02-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/resize.c (SampleImage): Preserve grayscale and\n    monochrome flags.\n\n  - magick/quantize.c (AssignImageColors): Set image monochrome\n    flag to True when quantizing to two colors in GrayColorspace.\n\n  - magick/effect.c (SpreadImage): Preserve grayscale and\n    monochrome flags.\n    (AdaptiveThresholdImage): Short-circuit algorithm if image\n    flags indicate it is already monochrome. Set monochrome and\n    grayscale flags once algorithm completes.\n    (ThresholdImage): Short-circuit algorithm if image\n    flags indicate it is already monochrome. Set monochrome and\n    grayscale flags once algorithm completes.\n    (ChannelThresholdImage): Short-circuit algorithm if image\n    flags indicate it is already monochrome. Set monochrome and\n    grayscale flags once algorithm completes.\n    (ShadeImage): If grayscale shading is done, then set image\n    grayscale flag to True.\n\n  - magick/color.c (IsGrayImage): If the image is\\_grayscale\n    flag is True, then short-circuit the test. Update the flag\n    if the test is performed.\n    (IsMonochromeImage): If the image is\\_monochrome flag is True\n    then short-circuit the test. Update the flag if the test is\n    performed.\n\n  - magick/image.c (CloneImage): Copy image is\\_grayscale and\n    is\\_monochrome members.\n\n  - magick/cache.c (SyncCacheNexus): If image pixels are updated\n    then set image is\\_grayscale and is\\_monochrome members to False.\n    Algorithms which want to preserve the values of these members\n    should save their original values before processing the image\n    and restore them when processing is complete, or transfer them\n    from the input image to the output image.\n\n  - magick/constitute.c (ReadImage): If the returned image is\n    PseudoClass then invoke IsGrayImage() and IsMonochromeImage()\n    and cache the result in image is\\_grayscale and is\\_monochrome\n    members for later use.\n\n  - magick/image.h (Image): Added is\\_grayscale and is\\_monochrome\n    members to remember if image is grayscale or monochrome.\n\n2003-02-14  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - www/archives.html: commented out sites not mirroring GM yet.\n    Changed \"ftp.simplesystems.org\" to \"ftp.graphicsmagick.org\".\n    Added link to graphicsmagick.sf.net.\n\n2003-02-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/utility.c (FormatString): Check for the availability of\n    vsprintf.\n\n  - magick/log.c (LogMagickEvent): Check for the availability of\n    vsprintf.\n\n  - configure.ac: Test for vsprintf.\n\n2003-02-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/annotate.c (RenderFreetype): Used smarter code to prepare\n    the beta argument for AlphaComposite.\n\n2003-02-12  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - coders/logo.c: updated logo.c to produce the GraphicsMagick logo.\n\n2003-02-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - INSTALL-unix.txt: Document that default quantum depth is now 8.\n\n  - VisualMagick/magick/magick\\_config.h.in: Default quantum depth is now 8.\n\n  - configure.ac: Default quantum depth is now 8.\n\n  - tests/Makefile.am: Test format types that require a size\n    seperately since always specifying the size caused some formats\n    (e.g. PCD) to improperly fail.\n\n2003-02-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - www/NEWS.html: New HTML file for project news.\n\n  - scripts/txt2html: New script for formatting text into HTML.\n\n  - Makefile.am: Automated the generation of www/Changelog.html and\n    www/NEWS.html.\n\n  - coders/xpm.c (WritePICONImage): Close blob using correct image.\n\n  - tests/Makefile.am (CHECK\\_SIZED\\_FILES): Added files to tests\n    subdirectory so that tests don't need to use files from\n    PerlMagick.\n\n  - magick/image.c (TransformColorspace): New function to\n    simplify/centralize colorspace transform requests.  Replaced calls\n    to RGBTransformImage and TransformRGBImage throughout the code\n    with calls to TransformColorspace.\n\n  - IMDisplay: Disable save function since it is not implemented yet.\n\n2003-02-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - PerlMagick/Magick.xs (SetAttribute): Support changing back to\n    RGB or Transparent colorspace.\n\n2003-02-10  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - Brought MNG handling of final delay into compliance with MNG spec.\n\n2003-02-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/bmp.c (WriteBMPImage): Added support for\n    bits\\_per\\_pixel==4.\n    (WriteBMPImage): Convert PseudoClass images with more than 256\n    colors to DirectClass.\n    (WriteBMPImage): Do not require 2-color images to pass the\n    IsMonochromeImage() test before writing them as one-bit-per-pixel\n    BMPs.  Decided to allow this after four readers (including Windows\n    XP) displayed the image using the proper colormap.\n    (WriteBMPImage): BMP2 encoder was writing colormap using wrong format.\n\n  - images: Updated logo images to GraphicsMagick\n\n  - Added PDF Sages to web page as a sponsor.\n\n2003-02-08  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - www/GraphicsMagick.html: add \"gm \" prefix to examples.\n\n2003-02-07  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - index.html: Update to distinguish between ImageMagick and\n    GraphicsMagick, and to explain \"gm\" prefix of commandline utilities.\n\n2003-02-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/nt\\_feature.c (CropImageToHBITMAP): Remove useless\n    autocrop support which was transferred from CropImage when\n    creating CropImageToHBITMAP.\n\n2003-02-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/miff.c (ReadMIFFImage): RLE packet size was not\n    calculated correctly, causing RLE-compressed MIFF images with\n    depth>8 to not be read.\n\n2003-02-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/paint.c (ColorFloodfillImage): Transfered fix from\n    ImageMagick for the problem that floodfill using a tiled image\n    failed if the target color happened to match the current fill\n    color.\n\n2003-02-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/command.c: Fixed preview error message.\n\n  - coders/preview.c: Previous update had broken noiseimage demo.\n    Also some cleanups.\n\n  - magick/display.c (XMagickCommand): No longer uses\n    MogrifyImage.\n\n  - coders/preview.c (WritePreviewImage): Re-wrote so that\n    MogrifyImage is no longer used. Resize image outside of the loop\n    to improve performance.\n\n2003-02-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/effect.c (ShadeImage): Use PixelIntensityToDouble macro.\n\n  - magick/image.h (PixelIntensityToDouble): Added\n    PixelIntensityToDouble macro to handle the case where pixel\n    intensity is used for floating arithmetic.\n\n2003-01-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - Makefile.am: Distribute files ChangeLog, INSTALL-mac.txt,\n    INSTALL-unix.txt, INSTALL-vms.txt INSTALL-windows.txt, and NEWS.\n\n2003-01-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/svg.c (SVGStartElement): Applied fix from ImageMagick to\n    compute SVG +> MVG viewbox correctly.\n\n  - magick/image.c (CloneImage): Applied fix from ImageMagick which\n    is purported to solve the problem that \"negative (x,y) page offsets\n    did not clone properly\".\n\n  - magick/gem.c (TransformHWB): Replace implementation with\n    ImageMagick's new version which is supposed to fix a rounding\n    error problem.  Hard to say since implementation is totally\n    different.\n\n  - coders/msl.c (MSLStartElement): Applied fix for missing break\n    from ImageMagick.\n\n  - magick/integral\\_types.h: New header to include the integral\n    types typedefs.  Needed new header in order to include in both\n    studio.h and api.h at the right point.\n\n  - magick/studio.h: Move nt\\_feature.h inclusion to the few modules\n    which actually use functions from it.\n\n  - magick/api.h: Added typedefs gm\\_int16\\_t, gm\\_uint16\\_t,\n    gm\\_int32\\_t, gm\\_uint32\\_t, gm\\_int64\\_t, gm\\_uint64\\_t to support\n    specifically sized types.\n\n  - configure.ac: Test for size of `short`, `unsigned short`, `int`,\n    `unsigned int`, `long`, `unsigned long`, `long long`, `unsigned\n    long long` assigning the result to the defines SIZEOF\\_SHORT,\n    SIZEOF\\_UNSIGNED\\_SHORT, SIZEOF\\_INT, SIZEOF\\_UNSIGNED\\_INT,\n    SIZEOF\\_LONG, SIZEOF\\_UNSIGNED\\_LONG, SIZEOF\\_LONG\\_LONG, and\n    SIZEOF\\_UNSIGNED\\_LONG\\_LONG respectively.\n\n2003-01-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/fx.c (OilPaintImage): Compute histogram using 8-bit quantums\n    for more sensible performance with Q:16 and Q:32 builds.\n\n  - magick/image.h (PixelIntensityToQuantum): Compute using integral\n    arithmetic for Q:8 and Q:16.  Much faster than floating point!\n    (PixelIntensity): Compute using integral arithmetic for Q:8 and\n    Q:16. Much faster than floating point!\n\n2003-01-28  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - Fixed bug in png.c, introduced in IM-5.5.1.  A pair of\n    { } brackets were omitted when logging was added, which lets\n    old versions of libpng write a zero-length iCCP chunk.\n\n2003-01-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/effect.c (DespeckleImage): Put loops inside of case\n    statement rather than outside.\n    (SpreadImage): Improved algorithm so that -spread is 12X faster.\n\n  - magick/nt\\_feature.c (CropImageToHBITMAP): New function to return\n    a region of the image as a HBITMAP.\n\n2003-01-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - Fixed Copyright statement on all source files.\n\n  - magick/effect.c (ThresholdImage): Optimized loop.\n\n  - coders/tiff.c (ReadTIFFImage): Read bits more efficiently for\n    bits\\_per\\_sample=1.\n\n  - magick/command.c (MogrifyImage): Set image->dither to\n    image\\_info->dither prior to invoking SetImageType.\n\n  - magick/constitute.c (WriteImage): Set image->dither to\n    image\\_info->dither.\n\n  - magick/image.c (SetImageType): For case BilevelType, normalize\n    image, and threshold 50% if dithering is disabled.  This is at\n    least 10X faster than quantizing with dither.\n    (AllocateImage): Initialize image->dither.\n    (CloneImage): Copy image->dither.\n\n  - magick/image.h: Added dither member to Image.\n\n2003-01-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - PerlMagick/t/tiff/read.t: Added a test for reading 16-bit TIFF\n    images.\n\n  - coders/tiff.c (ReadTIFFImage): Support reading 16-bit TIFF images\n    with a Q:8 build.\n\n  - magick/color.c (ConstrainColormapIndex): Use VerifyColormapIndex.\n\n  - coders/pnm.c (ReadPNMImage): Use VerifyColormapIndex.\n\n  - coders/gif.c (DecodeImage): Use VerifyColormapIndex.\n\n  - magick/image.c (SyncImage): Use VerifyColormapIndex.\n\n2003-01-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/blob.c (ReadBlobByte): Use getc when reading from FILE stream.\n\n  - configure.ac: Added tests for getc\\_unlocked and putc\\_unlocked.\n\n  - magick/blob.c (ReadBlobByte): Optimized reading from BlobStream.\n    (ReadBlobLSBLong): Optimized reading from BlobStream.\n    (ReadBlobLSBShort): Optimized reading from BlobStream.\n    (ReadBlobMSBLong): Optimized reading from BlobStream.\n    (ReadBlobMSBShort): Optimized reading from BlobStream.\n    (ReadBlobStream): New static inline function to read from BlobStream.\n    (WriteBlob): \"Manually\" copy data rather than using memcpy() for\n    very small copy sizes.\n    (WriteBlobByte): Use putc() when writing to a FILE stream.\n\n2003-01-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/gem.c (Hull): Count down loops.  Might help.\n    (InterpolateColor): Pre-compute common sub-expressions to improve\n    performance.\n\n  - magick/segment.c (Classify): Implemented idea from Glenn\n    Randers-Pehrson to avoid use of pow() when WeightingExponent is\n    2.0 (which it is).  This makes image segmentation much faster\n    (e.g. 8X).\n\n  - magick/annotate.c (RenderFreetype): For images with\n    matte==False, simply set the opacity of the pixel to be updated to\n    OpaqueOpacity before alpha-compositing the pixel rather than using\n    SetImageType(TrueColorMatteType) to initialize the opacity of the\n    entire image.  This is much faster and scales to large images.\n\n  - magick/image.c (SetImageType): Eliminated unnecessary conditionals.\n\n2003-01-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/effect.c (InsertMedianList): Assign computed quantum\n    indexes to variables to avoid extra computations for\n    QuantumDepth>8.\n\n  - magick/composite.c (AlphaComposite): Pre-compute common\n    expressions in order to improve performance.\n\n  - magick/fx.c (ConvolveImage): Optimized loops.\n\n  - magick/paint.c (TransparentImage): Optimize for case fuzz == 0.\n\n  - magick/color.c (FuzzyColorMatch): Minor cleanup and optimization.\n\n  - magick/locale.c: Added error messages for convolve option.\n\n  - coders/locale.c: Picked up recent changes from ImageMagick version.\n\n  - locale/C.mgk: Added error messages for convolve option.\n\n  - magick/command.c (MogrifyImage): Added support for convolve option.\n\n  - coders/xcf.c (ReadXCFImage): Recognize latest GIMP XCF header.\n\n  - coders/dcm.c: Transferred the apparent salient fixes from\n    ImageMagick for a bug described as \"Some DCM grayscale images did\n    not display correctly.\".\n\n  - coders/miff.c (ReadMIFFImage): Reading RLE-compressed MIFFs is\n    now about 4X faster.\n\n  - magick/blob.c (OpenBlob): Use setvbuf() to increase stdio buffer\n    size to 16K.  Solaris default is 1K.  This should minimize system\n    call overhead for accessing large files.\n    (ReadBlob): \"Manually\" copy data rather than using memcpy() for\n    very small copy sizes.\n    (ReadBlobZC): New method, similar to ReadBlob, but provides the\n    opportunity for zero copy on read.\n\n  - magick/constitute.c (PushImagePixels): CMYKA case for\n    image->depth=16 was comparing with 8 instead.\n\n2003-01-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/utility.c (GetMagickGeometry): Removed support for `~`\n    and disabled centering code until we learn where it should go (if\n    anywhere).\n\n  - magick/command.c : Add HWB colorspace transform support.\n\n  - PerlMagick/Magick.xs: Add HWB colorspace transform support.\n\n  - magick/image.c (RGBTransformImage): Add HWB colorspace transform\n    support.\n    (TransformRGBImage): Add HWB colorspace transform support.\n\n2003-01-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/utility.c (GetMagickGeometry): Add support for new new\n    `~` geometry string flag.  This also fixes a montage bug in which\n    thumbnails were mis-sized if the geometry specification incuded x\n    or y offsets.\n\n  - magick/image.h (GeometryFlags): Added CenterValue enumeration to\n    correspond with new `~` geometry string flag.  Taking\n    ImageMagick's lead on this.\n\n  - magick/render.c: Transferred fixes from ImageMagick for an\n    artifact which occured at the 360 degree point when rendering\n    circles, ellipses, and arcs.  Bug reported by io219@attbi.com.\n\n  - PerlMagick/Magick.xs: Add HSL colorspace transform support.\n\n  - magick/command.c: Add HSL colorspace transform support.\n\n  - magick/image.c (RGBTransformImage): Add HSL colorspace transform\n    support.\n    (TransformRGBImage): Add HSL colorspace transform support.\n\n2003-01-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - Updated copyright statement on source files to reflect\n    the GraphicsMagick Group rather than ImageMagick Studio.\n\n  - magick/constitute.c (ConstituteImage): Simplified the switch\n    statement for inner loops by creating a simplified map in advance.\n    (DispatchImage): Simplified the switch statement for inner loops\n    by creating a simplified map in advance.\n\n  - magick/compress.c (HuffmanEncodeImage): Test and cache the\n    return value of LocaleCompare(image\\_info->magick,\"FAX\") so that\n    LocaleCompare is not executed repeatedly in the output loop.\n\n  - magick/color.c (IsGrayImage): Optimized loops.\n    (IsMonochromeImage): Optimized loops.\n    (IsOpaqueImage): Optimized loop.\n\n  - magick/delegate.c (InvokePostscriptDelegate): When using the\n    Ghostscript library, identify the library as \"[ghostscript library]\"\n    rather then \"gsdll32\" so that -verbose prints something useful for\n    both Windows and Unix.\n\n2003-01-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - NEWS: New file.\n\n  - magick/montage.c (MontageImages): Use ThumbnailImage() rather\n    than ZoomImage() to resize montage thumbnails provided that the\n    user has not specified an image filter, and the montage thumbnail\n    is smaller than the image. This should provide faster montages\n    for large images.\n\n  - magick/resize.c (ResizeImage): Added logging support.\n    (MagnifyImage): Added logging support.\n    (MinifyImage): Added logging support.\n    (SampleImage): Added logging support.\n    (ScaleImage): Added logging support.\n\n2003-01-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/transform.c (ProfileImage): Duplicate ImageMagick changes\n    to image colorspace handling.  Avoids using\n    SetImageType(image,ColorSeparationMatteType).\n\n  - magick/fx.c (OilPaintImage): Replaced with ImageMagick version\n    since ImageMagick version has been updated to not penalize Q:8.\n    Optimized loops.\n\n  - magick/display.c (XDisplayImage): Display to 100% of\n    the screen size rather than 90% of the screen size.\n\n  - magick/enhance.c (ModulateImage): Ensure that arguments\n    are always positive values.  Optimized loops.\n    (ContrastImage): Optimized loops.\n\n  - magick/gem.c (HSLTransform): Optimized performance by\n    eliminating redundant intermediate calculations. This\n    makes `gm convert -contrast` 21% faster.\n    (HSLTransform): Set to inline within the gem.c module.\n    (TransformHSL): Set to inline within the gem.c module.\n    (Contrast): Moved to bottom of gem.c module so HSLTransform\n    and TransformHSL can be inlined. Simplified conditionals.\n    (Modulate): Moved to bottom of gem.c module so HSLTransform\n    and TransformHSL can be inlined. No longer check/correct\n    negative values.\n\n2003-01-14 William Radcliffe <billr@corbis.com>\n\n  - magick/blob.c\n\n  - magick/blob.h\n    Added new stream type flag and support to match with the one\n    added to ImageMagick.\n\n2003-01-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.c (RGBTransformImage): Fixed bug (thanks to\n    Bill for finding it) and finished optimizing XYZ table\n    creation.\n    (AverageImages): Optimized loops.\n    (ChannelImage): Optimized loops.  3X speed-up for SPARC.\n\n  - magick/enhance.c: Optimized NegateImage().\n\n2003-01-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - Set some common API structures to 0xbf prior to deallocation\n    to make accidental continued use more obvious.\n\n2003-01-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/constitute.c: Minor optimizations to PopImagePixels()\n\n  - coders/dpx.c: Reading the DPX header was off by 4 bytes.\n\n  - coders/(art.c,avs.c,bmp.c,cmyk.c,dcm.c,dib.c,dpx.c,fax.c,\n    fits.c,gray.c,icon.c,map.c,miff.c,mono.c,mpc.c,mtv.c,otb.c,\n    pcx.c,pdb.c,pict.c,pix.c,pnm.c,pwp.c,rgb.c,rla.c,rle.c,sct.c,\n    sgi.c,sun.c,tga.c,tim.c,uyvy.c,vicar.c,viff.c,wbmp.c,xwd.c,\n    yuv.c): Ensure that blob is closed on unexpected EOF.\n\n  - magick/image.c: Optimized SetImageOpacity().\n    Optimized SetImage() for intializing non-opaque images.  The\n    opacity channel was being intialized twice.\n\n2003-01-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/constitute.c: Log entry and exit from coders so that\n    coders don't need to.\n\n  - Finished re-writing PushImagePixels() using coding practices\n    which may result in faster code.\n\n  - PerlMagick is changed from Image::Magick to Graphics::Magick\n    in order to avoid conflicts with the ImageMagick version.  This\n    means that any Perl scripts based on the ImageMagick version need\n    to do a global replace of Image::Magick to Graphics::Magick.\n\n  - PerlMagick/reference/filter/Raise.miff: Replaced with new version.\n\n2003-01-08 William Radcliffe <billr@corbis.com>\n\n  - magick/nt\\_feature.c\n    Make ImageToHBITMAP function in nt\\_feature.c compile under Visual\n    C++ again.\n\n2003-01-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - coders/delegates.mgk.in: Fix cgm entry.  How did it become so\n    terribly broken?\n\n  - coders/dps.c: Adding logging support.\n\n  - PerlMagick/t/read.t: Changed file read tests to use image\n    compares with a reference image rather than comparing with a\n    signature.\n\n  - PerlMagick/t/wmf/read.t: Ditto.\n    magick/shear.c: Fixed documentation for RotateImage.\n\n2003-01-08  Glenn Randers-Pehrson <randeg@alum.rpi.edu>\n\n  - magick/magick.c, magick/magick.h: Add \"note\" member of magick\\_info.\n\n  - coders/art.c, coders/fax.c, coders/dcm.c, coders/png.c: add notes\n    to format registrations.\n\n  - fx.c: changed default \"colorize\" behaviour to preserve image opacity.\n\n2003-01-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/svg.c: Allow the user to specify the initial background\n    color via the -background option.  This is only useful if the SVG\n    doesn't draw its own background rectangle.\n\n2003-01-06  Albert Chin-A-Young  <china@thewrittenword.com>\n\n  - ltdl/Makefile.am, ltdl/ltdl.c: Fix compilation problem\n    under Tru64 UNIX 5.1.  The GraphicsMagick random.h was being\n    included when the system random.h was needed.\n\n  - configure.ac: Improve robustness of POSIX thread API tests\n    by including pthread.h when building the test program.\n\n2003-01-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n  - magick/image.c: In IsImagesEqual() only use type `long double`\n    for error summation if QuantumDepth > 16 and `long double` has\n    more range than `double`.\n\n  - magick/quantize.c: In QuantizeImage() only use type `long\n    double` for error summation if QuantumDepth > 16 and `long\n    double` has more range than `double`.\n\n  - Replaced redundant code with macros.\n\n  - Optimize mapping to monochrome.\n\n  - utilities/conjure.c: Had missed removing this file earlier.\n\n2003-01-04  Derry Bryson  <dbryson@techass.com>\n\n  - magick/decorate.c: Use the ShadowFactor rather than ShadowModule\n    define in RaiseImage() (bug-fix).\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/magick/nt_base.h": "/*\n  Copyright (C) 2003 - 2016 GraphicsMagick Group\n  Copyright (C) 2002 ImageMagick Studio\n\n  This program is covered by multiple licenses, which are described in\n  Copyright.txt. You should have received a copy of Copyright.txt with this\n  package; otherwise see http://www.graphicsmagick.org/www/Copyright.html.\n\n  Windows NT Utility Methods for GraphicsMagick.\n*/\n#ifndef _MAGICK_NTBASE_H\n#define _MAGICK_NTBASE_H\n\n#if defined(__cplusplus) || defined(c_plusplus)\nextern \"C\" {\n#endif\n\n#include \"magick/delegate.h\"\n\n#define WIN32_LEAN_AND_MEAN\n#define VC_EXTRALEAN\n#include <windows.h>\n#include <winuser.h>\n#include <wingdi.h>\n#include <io.h>\n#include <process.h>\n#include <errno.h>\n#include <malloc.h>\n#if defined(_DEBUG)\n#include <crtdbg.h>\n#endif\n\f\n/*\n  Define declarations.\n*/\n\n#define F_OK 0\n#define R_OK 4\n#define W_OK 2\n#define RW_OK 6\n#define HAVE_VSNPRINTF 1\n#define HAVE_RAISE 1\n#define HAVE_SPAWNVP 1\n#define HAVE_PROCESS_H 1\n\n#if defined(_VISUALC_)\n#  define HAVE_CRYPTGENRANDOM 1\n#  define HAVE_WINCRYPT_H 1\n#endif\n\n/*\n  POSIX definitions for standard file numbers for use with _read() or _write()\n*/\n#if !defined(STDIN_FILENO)\n#  define STDIN_FILENO 0\n#endif\n#if !defined(STDOUT_FILENO)\n#  define STDOUT_FILENO 1\n#endif\n#if !defined(STDERR_FILENO)\n#  define STDERR_FILENO 2\n#endif\n\n/*\n  Size type passed to read/write\n*/\n#define MAGICK_POSIX_IO_SIZE_T unsigned int\n\n/*\n  libtiff features.\n*/\n\n/* Define to 1 if you have the <tiffconf.h> header file. */\n#define HAVE_TIFFCONF_H 1\n\n/* Define to 1 if you have the `TIFFIsCODECConfigured' function. */\n#define HAVE_TIFFISCODECCONFIGURED 1\n\n/* Define to 1 if you have the `TIFFMergeFieldInfo' function. */\n#define HAVE_TIFFMERGEFIELDINFO 1\n\n/* Define to 1 if you have the `TIFFSetErrorHandlerExt' function. */\n#define HAVE_TIFFSETERRORHANDLEREXT 1\n\n/* Define to 1 if you have the `TIFFSetTagExtender' function. */\n#define HAVE_TIFFSETTAGEXTENDER 1\n\n/* Define to 1 if you have the `TIFFSetWarningHandlerExt' function. */\n#define HAVE_TIFFSETWARNINGHANDLEREXT 1\n\n/* Define to 1 if you have the `TIFFSwabArrayOfTriples' function. */\n#define HAVE_TIFFSWABARRAYOFTRIPLES 1\n\n/* Define to 1 if you have the <ft2build.h> header file. */\n#define HAVE_FT2BUILD_H 1\n\n// Define to support memory mapping files for improved performance\n#define HAVE_MMAP_FILEIO 1\n\n// Use Visual C++ C inline method extension to improve performance\n#if !defined(inline)\n#  define inline __inline\n#endif\n\n// Visual C++ does not usually seem to support the C'99 restrict keyword\n// Maybe it will be added in some version.\n#if defined(_VISUALC_)  /* && (_MSC_VER <= 1500) */\n#  define restrict /* nothing */\n#endif\n\n#if !defined(chsize)\n# if defined(__BORLANDC__)\n#   define chsize(file,length) chsize(file,length)\n# else\n#   define chsize(file,length) _chsize(file,length)\n# endif\n#endif\n\n#if !defined(hypot)\n#  define hypot  _hypot\n#endif\n\n// We do not yet know what CRT versions have these float functions or if\n// special-handling (e.g. mapping to underscore version) is needed.\n#if defined(_VISUALC_)\n\n/* Define to 1 if you have the `cosf' function. */\n#define HAVE_COSF 1\n\n/* Define to 1 if you have the `fabsf' function. */\n#define HAVE_FABSF 1\n\n/* Define to 1 if you have the `logf' function. */\n#define HAVE_LOGF 1\n\n/* Define to 1 if you have the `sinf' function. */\n#define HAVE_SINF 1\n\n/* Define to 1 if you have the `sqrtf' function. */\n#define HAVE_SQRTF 1\n\n#endif // defined(_VISUALC_)\n\n#if !defined(_MSC_VER) || (defined(_MSC_VER) && _MSC_VER < 1500)\n#define vsnprintf _vsnprintf\n#endif\n\n#if defined(_MT) && defined(MSWINDOWS)\n#define SAFE_GLOBAL __declspec(thread)\n#else\n#define SAFE_GLOBAL\n#endif\n\n/*\n  With Visual C++, Popen and pclose are available via _popen and _pclose.\n  These are documented to work for console applications only.\n*/\n#define HAVE_POPEN 1\n#define HAVE__POPEN 1\n#if !defined(popen)\n#  define popen(command,mode)  _popen(command,mode)\n#endif /* !defined(popen) */\n#define HAVE_PCLOSE 1\n#define HAVE__PCLOSE 1\n#if !defined(pclose)\n#  define pclose(stream)  _pclose(stream)\n#endif /* !defined(pclose) */\n\n/*\n  Visual C++ 7.0 supports GlobalMemoryStatusEx but MinGW headers and\n  Visual C++ 6.0 lack support for it.\n\n  _MSC_VER values:\n    1100 MSVC 5.0\n    1200 MSVC 6.0\n    1300 MSVC 7.0 Visual C++ .NET 2002\n    1310 Visual c++ .NET 2003\n    1400 Visual C++ 2005\n    1500 Visual C++ 2008\n    1600 Visual C++ 2010\n    1700 Visual C++ 2012\n    1800 Visual C++ 2013\n    1900 Visual C++ 2015\n\n  Should look at __CLR_VER (\"Defines the version of the common language\n  runtime used when the application was compiled.\") as well.\n*/\n#if defined(_VISUALC_) && (_MSC_VER >= 1310)\n#  define HAVE_GLOBALMEMORYSTATUSEX 1\n#endif\n\n/*\n  _aligned_malloc was introduced in Visual Studio .NET 2003.\n  The feature is is introduced in msvcr71.dll and is capable of\n  working on Windows '98 given that the correct run-time libraries\n  are installed.\n*/\n#if ((defined(_VISUALC_) && (_MSC_VER >= 1310)) ||              \\\n     (defined(__MINGW32__) && (__MSVCRT_VERSION__ >= 0x0700)))\n#  define HAVE__ALIGNED_MALLOC 1\n#endif\n\n/*\n  Windows provides Unix-style access() via _access()\n */\n#define HAVE_ACCESS 1\n#define access(path,mode) _access(path,mode)\n\n/*\n  Windows provides Unix-style mkdir() via _mkdir() but it does not\n  seem to accept a 'mode' argument.\n */\n#define mkdir(path,mode) _mkdir(path)\n\n/*\n  Windows provides _commit() as a substitute for fsync()\n*/\n#define fsync(fd) _commit(fd)\n\n#if !defined(isatty)\n#  define isatty(x) _isatty(x)\n#endif\n\n#if !defined(fileno)\n#  define fileno(x) _fileno(x)\n#endif\n\n#if !defined(unlink)\n#  define unlink(path) _unlink(path)\n#endif /* !defined(unlink) */\n\n\f\n/*\n  I/O defines.\n*/\n#if !defined(Windows95) && !defined(__BORLANDC__)\n  /* Windows '95 and Borland C do not support _lseeki64 */\n#  define MagickSeek(fildes,offset,whence)  _lseeki64(fildes,/* __int64 */ offset,whence)\n#  define MagickTell(fildes) /* __int64 */ _telli64(fildes)\n#else\n#  define MagickSeek(fildes,offset,whence)  lseek(fildes,offset,whence)\n#  define MagickTell(fildes) (MagickSeek(fildes,0,SEEK_CUR))\n#endif\n\n\n#if !defined(Windows95) && !defined(__BORLANDC__) && \\\n  !(defined(_MSC_VER) && _MSC_VER < 1400) && \\\n  !(defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ < 0x800)\n\n  /*\n    Windows '95 and Borland C do not support _lseeki64\n    Visual Studio does not support _fseeki64 and _ftelli64 until the 2005 release.\n    Without these interfaces, files over 2GB in size are not supported for Windows.\n  */\n#  define MagickFseek(stream,offset,whence) _fseeki64(stream,/* __int64 */ offset,whence)\n#  define MagickFstat(fildes,stat_buff) _fstati64(fildes,/* struct _stati64 */ stat_buff)\n#  define MagickFtell(stream) /* __int64 */ _ftelli64(stream)\n#  define MagickStatStruct_t struct _stati64\n#  define MagickStat(path,stat_buff) _stati64(path,/* struct _stati64 */ stat_buff)\n#else\n#  define MagickFseek(stream,offset,whence) fseek(stream,offset,whence)\n#  define MagickFstat(fildes,stat_buff) fstat(fildes,stat_buff)\n#  define MagickFtell(stream) ftell(stream)\n#  define MagickStatStruct_t struct stat\n#  define MagickStat(path,stat_buff) stat(path,stat_buff)\n#endif\n\n/*\n  The isnan() function was implemented starting in Visual Studio 2003\n  The function prototype for isnan() and _isnanf() comes from <math.h>\n  and the prototype for _isnan() comes from <float.h>.  The _isnanf()\n  function is only available in _WIN64 builds.\n\n  Some useful documentation was found at\n  https://msdn.microsoft.com/en-us/library/tzthab44.aspx.\n*/\n#if (defined(_MSC_VER) && _MSC_VER < 1700 && !defined(isnan))\n#  if defined(_WIN64)\n#    define isnan(f) _isnanf(f)\n#  else\n#    include <float.h> /* Needed for _isnan */\n#    if !defined(isnan)\n#      define isnan(f) _isnan(f)\n#    endif\n#  endif\n#endif\n\n\n/*\n  Typedef declarations.\n*/\ntypedef UINT (CALLBACK *LPFNDLLFUNC1)(DWORD,UINT);\n\n#if !defined(XS_VERSION) /* Not in Perl extension */\n\n/*\n  For POSIX, ssize_t is the type returned by _read and _write.\n  Recent MinGW compilers include this typedef by default.\n\n  Note that under WIN64 read/write appear to still return 'int' and use\n  'unsigned int' rather than 'size_t' to specify the I/O size.  This really\n  sucks!\n */\n#if !defined(ssize_t) && !defined(__MINGW32__) && !defined(__MINGW64__)\n#  if defined(WIN64)\n  typedef __int64 ssize_t;\n#  else\n  typedef int ssize_t;\n#  endif\n#endif /* !defined(ssize_t) && !defined(__MINGW32__) && !defined(__MINGW64__)*/\n\n#endif /* !defined(XS_VERSION) */\n\n/*\n  Bzlib is strange in that symbols from bzlib.h are DLL-exported by\n  default rather than imported.  This feels like a bug to me.\n*/\n#if defined(HasBZLIB)\n#  if defined(_WIN32)\n#    define BZ_IMPORT 1\n#  endif\n#endif /* defined(HasBZLIB) */\n\n\f\n/*\n  NT utilities routines.\n*/\n\nextern MagickExport char\n  *NTGetLastError(void);\n\n/*\n  Ghostscript DLL support.\n*/\nextern MagickExport int\n  NTGhostscriptDLL(char *path, int path_length),\n  NTGhostscriptEXE(char *path, int path_length),\n  NTGhostscriptFonts(char *path, int path_length),\n  NTGhostscriptLoadDLL(void),\n  NTGhostscriptUnLoadDLL(void);\n\n#if defined(MAGICK_IMPLEMENTATION)\nextern MagickExport const GhostscriptVectors\n  *NTGhostscriptDLLVectors( void );\n#endif /* defined(MAGICK_IMPLEMENTATION) */\n\n/*\n  Directory access functions\n*/\n#if !defined(HAVE_DIRENT_H) || defined(__MINGW32__) || defined(__MINGW64__)\nstruct dirent\n{\n  char\n    d_name[2048];\n\n  int\n    d_namlen;\n};\n\ntypedef struct _DIR\n{\n  HANDLE\n    hSearch;\n\n  WIN32_FIND_DATA\n    Win32FindData;\n\n  BOOL\n    firsttime;\n\n  struct dirent\n    file_info;\n} DIR;\n\nextern MagickExport long\n  NTtelldir(DIR *);\n\nextern MagickExport struct dirent\n  *NTreaddir(DIR *);\n\nextern MagickExport DIR\n  *NTopendir(const char *);\n\nextern MagickExport int\n  NTclosedir(DIR *);\n\nextern MagickExport void\n  NTseekdir(DIR *,long);\n\n#define closedir(dir) NTclosedir(dir)\n#define opendir(path) NTopendir(path)\n#define readdir(entry) NTreaddir(entry)\n#define seekdir(entry,position) NTseekdir(entry,position)\n#define telldir(entry) NTtelldir(entry)\n#endif /* !defined(HAVE_DIRENT_H) */\n\n/*\n  System functions.\n*/\nextern MagickExport int\n  NTSystemComman(const char *);\n\n#if !defined(XS_VERSION)  /* Not in Perl extension */\n\n/*\n  Precision timing functions.\n*/\nextern MagickExport double\n  NTElapsedTime(void),\n  NTUserTime(void);\n\n/*\n  Memory mapped file support.\n*/\n#define PROT_NONE       0x0  // pages can not be accessed\n#define PROT_READ       0x1  // pages can be read\n#define PROT_WRITE      0x2  // pages can be written\n#define MAP_SHARED      0x1  // share changes\n#define MAP_PRIVATE     0x2  // changes are private\n#define MAP_NORESERVE   0x4  // do not reserve paging space\n#define MAP_ANON        0x8  // anonymous mapping\n#if !defined(MAP_FAILED)\n#  define MAP_FAILED      ((void *) -1) // returned on error by mmap\n#endif\n#define MS_ASYNC        0x0  // asynchronous page sync\n#define MS_SYNC         0x1  // synchronous page sync\n\nextern MagickExport void\n  Exit(int) MAGICK_FUNC_NORETURN,\n  *NTmmap(char *address,size_t length,int protection,int access,int file,\n     magick_off_t offset);\n\nextern MagickExport int\n  NTftruncate(int filedes, off_t length),\n  NTmsync(void *addr, size_t len, int flags),\n  NTmunmap(void *addr, size_t len);\n\nextern MagickExport int\n  MagickGetFileAttributes(const char *filename, MagickStatStruct_t *statbuf);\n\nextern MagickExport int\n  MagickSetFileAttributes(const char *filename, const MagickStatStruct_t *statbuf);\n\n#define MagickMmap(address,length,protection,access,file,offset) \\\n  NTmmap(address,length,protection,access,file,offset)\n#define MagickMsync(addr,len,flags) NTmsync(addr,len,flags)\n#define MagickMunmap(addr,len) NTmunmap(addr,len)\n#define MagickFtruncate(filedes,length) NTftruncate(filedes,length)\n\n/*\n  libltdl-like module loader wrappers\n*/\n#if !defined(HasLTDL)\nextern MagickExport void\n  *NTdlopen(const char *filename),\n  *NTdlsym(void *handle, const char *name);\n\nextern MagickExport int\n  NTdlclose(void *handle),\n  NTdlexit(void),\n  NTdlinit(void),\n  NTdlsetsearchpath(const char *);\n\nextern MagickExport const char\n  *NTdlerror(void);\n\n#define lt_dlclose(handle) NTdlclose(handle)\n#define lt_dlerror() NTdlerror()\n#define lt_dlexit() NTdlexit()\n#define lt_dlinit() NTdlinit()\n#define lt_dlopen(filename) NTdlopen(filename)\n#define lt_dlsetsearchpath(path) NTdlsetsearchpath(path)\n#define lt_dlsym(handle,name) NTdlsym(handle,name)\n#endif /* !defined(HasLTDL) */\n\nextern MagickExport unsigned char\n  *NTResourceToBlob(const char *);\n\nextern MagickExport MagickPassFail\n  NTGetExecutionPath(char *path);\n\nextern MagickExport MagickBool\n  IsWindows95(),\n  NTKernelAPISupported(const char *name);\n\nextern MagickExport void\n  NTErrorHandler(const ExceptionType,const char *,const char *),\n  NTWarningHandler(const ExceptionType,const char *,const char *);\n\nextern MagickExport long\n  MagickGetMMUPageSize();\n\nextern MagickExport void\n  NTInitializeExceptionHandlers();\n\n#endif /* !XS_VERSION */\n\n#if defined(__cplusplus) || defined(c_plusplus)\n}\n#endif /* !C++ */\n\n#endif /* !_MAGICK_NTBASE_H */\n\n/*\n * Local Variables:\n * mode: c\n * c-basic-offset: 2\n * fill-column: 78\n * End:\n */\n",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/magick/module.c": "/*\n% Copyright (C) 2003 - 2017 GraphicsMagick Group\n% Copyright (C) 2002 ImageMagick Studio\n%\n% This program is covered by multiple licenses, which are described in\n% Copyright.txt. You should have received a copy of Copyright.txt with this\n% package; otherwise see http://www.graphicsmagick.org/www/Copyright.html.\n%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%                  M   M   OOO   DDDD   U   U  L      EEEEE                   %\n%                  MM MM  O   O  D   D  U   U  L      E                       %\n%                  M M M  O      D   D  U   U  L      EEE                     %\n%                  M   M  O   O  D   D  U   U  L      E                       %\n%                  M   M   OOO   DDDD    UUU   LLLLL  EEEEE                   %\n%                                                                             %\n%                                                                             %\n%                               Module Loader                                 %\n%                                                                             %\n%                                                                             %\n%                              Software Design                                %\n%                              Bob Friesenhahn                                %\n%                                March 2000                                   %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%\n%\n*/\n\f\n/*\n  Include declarations.\n*/\n#include \"magick/studio.h\"\n#if defined(SupportMagickModules)\n#if defined(MSWINDOWS) || defined(__CYGWIN__)\n# include \"magick/nt_feature.h\"\n#endif\n#include \"magick/blob.h\"\n#include \"magick/log.h\"\n#include \"magick/magic.h\"\n#include \"magick/magick.h\"\n#include \"magick/map.h\"\n#include \"magick/module.h\"\n#include \"magick/utility.h\"\n#if defined(HasLTDL)\n#  include \"ltdl.h\"\n   typedef lt_dlhandle ModuleHandle;\n#else\n   typedef void *ModuleHandle;\n#endif\n\f\n/*\n  Define declarations.\n*/\n#define MAX_MODULES 511 /* Maximum number of modules supported by build. */\n#define ModuleFilename  \"modules.mgk\"\n#if defined(HasLTDL)\n#  define ModuleGlobExpression \"*.la\"\n#else\n#  if defined(_DEBUG)\n#    define ModuleGlobExpression \"IM_MOD_DB_*.dll\"\n#  else\n#    define ModuleGlobExpression \"IM_MOD_RL_*.dll\"\n#  endif\n#endif\n\f\ntypedef enum\n{\n  MagickCoderModule,\n  MagickFilterModule\n} MagickModuleType;\n\n/*\n  Declare module map.\n*/\nstatic const char\n  *BuiltInPath=\"[Built In]\";\n\n#include \"magick/module_aliases.h\"\n\n/*\n  Coder module list\n  Maintains a loader handle corresponding to each module tag.\n  Used to support coder_list, which is initialized as coders are\n  loaded, and used to obtain the handle when the coder is unloaded.\n*/\ntypedef struct _CoderInfo\n{\n  /* Module ID tag */\n  char\n    *tag;\n\n  /* libltdl handle */\n  void\n    *handle;\n\n  /* Time that module was loaded */\n  time_t\n    load_time;\n\n  /* Address of module register function */\n  void (*register_function)(void);\n\n  /* Address of module unregister function */\n  void (*unregister_function)(void);\n\n  /* Structure validation signature */\n  unsigned long\n    signature;\n\n  struct _CoderInfo\n    *previous,\n    *next;\n} CoderInfo;\n\n\f\n/*\n  Global declarations.\n*/\nstatic CoderInfo\n  *coder_list = (CoderInfo *) NULL;\n\nstatic ModuleInfo\n  *module_list = (ModuleInfo *) NULL;\n\n/*\n  List of directories to search for coder modules\n*/\nstatic MagickMap\n  coder_path_map = (MagickMap) NULL;\n\n/*\n  List of directories to search for filter modules\n*/\nstatic MagickMap\n  filter_path_map = (MagickMap) NULL;\n\n/*\n  Set to True if libltdl has been initialized.\n*/\nstatic unsigned int\n  ltdl_initialized=False;\n\f\n/*\n  Forward declarations.\n*/\nstatic void\n  TagToCoderModuleName(const char *tag,char *module_name),\n  TagToFilterModuleName(const char *tag, char *module_name),\n  TagToFunctionName(const char *tag,const char *format,char *function);\n\nstatic unsigned int\n  FindMagickModule(const char *filename,MagickModuleType module_type,\n    char *path,ExceptionInfo *exception);\n\nstatic CoderInfo\n  *RegisterModule(CoderInfo *,ExceptionInfo *),\n  *SetCoderInfo(const char *);\n\n#if 0\nstatic const CoderInfo\n  *GetCoderInfo(const char *,ExceptionInfo *);\n#endif\n\nstatic unsigned int\n  InitializeModuleSearchPath(MagickModuleType module_type,ExceptionInfo *exception),\n  ReadModuleConfigureFile(const char *,const unsigned int,ExceptionInfo *),\n  UnloadModule(const CoderInfo *,ExceptionInfo *),\n  UnregisterModule(const char *,ExceptionInfo *);\n\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n+   D e s t r o y M a g i c k M o d u l e s                                   %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  DestroyMagickModules() destroys the modules environment.\n%\n%  The format of the DestroyMagickModules() method is:\n%\n%      DestroyMagickModules(void)\n%\n%\n*/\nvoid\nDestroyMagickModules(void)\n{\n  DestroyModuleInfo();\n\n  if (coder_path_map != (MagickMap) NULL)\n    {\n      MagickMapDeallocateMap(coder_path_map);\n      coder_path_map = (MagickMap) NULL;\n    }\n\n  if (filter_path_map != (MagickMap) NULL)\n    {\n      MagickMapDeallocateMap(filter_path_map);\n      filter_path_map = (MagickMap) NULL;\n    }\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   D e s t r o y M o d u l e I n f o                                         %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  DestroyModuleInfo() deallocates memory associated with the ModuleInfo list.\n%\n%  The format of the DestroyModuleInfo method is:\n%\n%      void DestroyModuleInfo(void)\n%\n*/\nstatic void\nDestroyModuleInfoEntry(ModuleInfo *entry)\n{\n  if (entry->previous)\n    entry->previous->next=entry->next;\n  if (entry->next)\n    entry->next->previous=entry->previous;\n  if (entry == module_list)\n    module_list=entry->next;\n  if ((entry->path[0] != BuiltInPath[0]) &&\n      (LocaleCompare(entry->path,BuiltInPath) != 0))\n    {\n      MagickFreeMemory(entry->path);\n      MagickFreeMemory(entry->magick);\n      MagickFreeMemory(entry->name);\n    }\n  MagickFreeMemory(entry);\n}\n\nvoid\nDestroyModuleInfo(void)\n{\n  CoderInfo\n    *coder_info;\n\n  ExceptionInfo\n    exception;\n\n  ModuleInfo\n    *module_info;\n\n  register CoderInfo\n    *p;\n\n  register ModuleInfo\n    *q;\n\n  GetExceptionInfo(&exception);\n  /*\n    Free coder list.\n  */\n  for (p=coder_list; p != (CoderInfo *) NULL; )\n  {\n    coder_info=p;\n    p=p->next;\n    if( UnregisterModule(coder_info->tag,&exception) == False)\n      CatchException(&exception);\n  }\n  DestroyExceptionInfo(&exception);\n  coder_list=(CoderInfo *) NULL;\n\n  /*\n    Free module alias list.\n  */\n  for (q=module_list; q != (ModuleInfo *) NULL; )\n  {\n    module_info=q;\n    q=q->next;\n    DestroyModuleInfoEntry(module_info);\n  }\n  module_list=(ModuleInfo *) NULL;\n  /*\n    Destroy the libltdl environment unless Jasper is used since Jasper\n    sometimes registers an atexit() handler to destroy itself and this\n    causes a crash if the Jasper library is already unloaded.\n  */\n  if (ltdl_initialized)\n    {\n#if !defined(HasJP2)\n      (void) lt_dlexit();\n#endif\n      ltdl_initialized=False;\n    }\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   E x e c u t e M o d u l e P r o c e s s                                   %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method ExecuteModuleProcess executes a dynamic modules.  It is passed the\n%  specified parameters and returns True on success otherwise False.\n%\n%  The format of the ExecuteModuleProcess method is:\n%\n%      unsigned int ExecuteModuleProcess(const char *tag,Image **image,\n%        const int argc,char **argv)\n%\n%  A description of each parameter follows:\n%\n%    o status: ExecuteModuleProcess() returns True if the dynamic module is\n%      loaded and returns successfully, otherwise False.\n%\n%    o tag: a character string that represents the name of the particular\n%      module.\n%\n%    o image: The image.\n%\n%    o argc: Specifies a pointer to an integer describing the number of\n%      elements in the argument vector.\n%\n%    o argv: Specifies a pointer to a text array containing the command line\n%      arguments.\n%\n*/\nMagickPassFail\nExecuteModuleProcess(const char *tag,Image **image,\n                     const int argc,char **argv)\n{\n  ModuleHandle\n    handle;\n\n  unsigned int\n    status;\n\n  assert(image != (Image **) NULL);\n  assert((*image)->signature == MagickSignature);\n  status=MagickFail;\n\n#if !defined(BuildMagickModules)\n  /*\n    Try to locate and execute a static module.\n  */\n  status=ExecuteStaticModuleProcess(tag,image,argc,argv);\n  if (status != MagickFail)\n    return (status);\n#endif\n\n  {\n    char\n      module_name[MaxTextExtent],\n      module_path[MaxTextExtent];\n\n    /* Find the module */\n    TagToFilterModuleName(tag,module_name);\n    if (!FindMagickModule(module_name,MagickFilterModule,module_path,\n      &(*image)->exception))\n      return(MagickFail);\n\n    /* Open the module */\n    handle=lt_dlopen(module_path);\n    if (handle == (ModuleHandle) NULL)\n      {\n        char\n          message[MaxTextExtent];\n\n        FormatString(message,\"\\\"%.256s: %.256s\\\"\",module_path,lt_dlerror());\n        ThrowException(&(*image)->exception,ModuleError,UnableToLoadModule,\n          message);\n        return(status);\n      }\n  }\n  {\n    char\n      method_name[MaxTextExtent];\n\n    unsigned int\n      (*method)(Image **,const int,char **);\n\n    /* Locate module method */\n#if defined(PREFIX_MAGICK_SYMBOLS)\n    FormatString(method_name,\"Gm%.64sImage\",tag);\n#else\n    FormatString(method_name,\"%.64sImage\",tag);\n#endif\n    method=(unsigned int (*)(Image **,const int,char **))\n      lt_dlsym(handle,method_name);\n\n    (void) LogMagickEvent(CoderEvent,GetMagickModule(),\n                          \"Invoking \\\"%.1024s\\\" filter module\",tag);\n\n    /* Execute module method */\n    if (method != (unsigned int (*)(Image **,const int,char **)) NULL)\n      status=(*method)(image,argc,argv);\n\n    (void) LogMagickEvent(CoderEvent,GetMagickModule(),\n      \"Returned from \\\"%.1024s\\\" filter module\",tag);\n\n  }\n  /* Close the module */\n  (void) lt_dlclose(handle);\n  return(status);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   G e t C o d e r I n f o                                                   %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  GetCoderInfo() returns a pointer to a CoderInfo structure that matches the\n%  specified tag.  If tag is NULL, the head of the module list is returned. If\n%  no modules are loaded, or the requested module is not found, NULL is\n%  returned.\n%\n%  The format of the GetCoderInfo method is:\n%\n%      const CoderInfo *GetCoderInfo(const char *tag,ExceptionInfo *exception)\n%\n%  A description of each parameter follows:\n%\n%    o coder_list: Method GetCoderInfo returns a pointer CoderInfo\n%      structure that matches the specified tag.\n%\n%    o tag: a character string that represents the image format we are\n%      looking for.\n%\n%    o exception: Return any errors or warnings in this structure.\n%\n%\n*/\n#if 0\nstatic const CoderInfo *\nGetCoderInfo(const char *tag, ExceptionInfo *exception)\n{\n  register CoderInfo\n    *p;\n\n  (void) InitializeMagicInfo(exception);\n  (void) GetModuleInfo(tag,exception);\n  if ((tag == (const char *) NULL) || (LocaleCompare(tag,\"*\") == 0))\n    return((const CoderInfo *) coder_list);\n  for (p=coder_list; p != (CoderInfo *) NULL; p=p->next)\n    if (LocaleCompare(p->tag,tag) == 0)\n      break;\n  if (p == (CoderInfo *) NULL)\n    ThrowException(exception,ModuleError,UnrecognizedModule,tag);\n  else\n    if (p != coder_list)\n      {\n        /*\n          Self-adjusting list.\n        */\n        if (p->previous != (CoderInfo *) NULL)\n          p->previous->next=p->next;\n        if (p->next != (CoderInfo *) NULL)\n          p->next->previous=p->previous;\n        p->previous=(CoderInfo *) NULL;\n        p->next=coder_list;\n        coder_list->previous=p;\n        coder_list=p;\n      }\n  return((const CoderInfo *) p);\n}\n#endif /* FUNCTION_UNUSED */\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%  F i n d M a g i c k M o d u l e                                            %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  FindMagickModule() finds a module with the specified module type and\n%  file name. The buffer pointed to by 'path' is updated with the file path\n%  if the file is found. MagickPass is returned if the module is found or\n%  MagickFail is returned if the module can not be located.\n%\n%  The format of the FindMagickModule method is:\n%\n%      MagickPassFail FindMagickModule(const char *filename,\n%        MagickModuleType module_type,char *path,ExceptionInfo *exception)\n%\n%  A description of each parameter follows:\n%\n%    o filename: The module file name.\n%\n%    o module_type: The module type (MagickCoderModule or MagickFilterModule)\n%\n%    o path: A pointer to the buffer to place the path to the module file. The\n%            buffer must be at least MaxTextExtent characters in size.\n%\n%    o exception: Return any errors or warnings in this structure.\n%\n%\n*/\n\nstatic MagickPassFail\nFindMagickModule(const char *filename,MagickModuleType module_type,\n                 char *path,ExceptionInfo *exception)\n{\n  MagickMap\n    path_map = (MagickMap) NULL;\n\n  MagickMapIterator\n    path_map_iterator = (MagickMapIterator) NULL;\n\n  const char\n    *key;\n\n  MagickPassFail\n    status=MagickFail;\n\n  assert(filename != (const char *) NULL);\n  assert(path != (char *) NULL);\n  assert(exception != (ExceptionInfo *) NULL);\n  (void) strlcpy(path,filename,MaxTextExtent);\n\n  if (InitializeModuleSearchPath(module_type,exception) == MagickFail)\n    return (status);\n\n  switch (module_type)\n    {\n    case MagickCoderModule:\n    default:\n      {\n        (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                              \"Searching for coder module file \\\"%s\\\" ...\",\n                              filename);\n        path_map=coder_path_map;\n        break;\n      }\n    case MagickFilterModule:\n      {\n        (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                              \"Searching for filter module file \\\"%s\\\" ...\",\n                              filename);\n        path_map=filter_path_map;\n        break;\n      }\n    }\n\n  path_map_iterator=MagickMapAllocateIterator(path_map);\n  if (path_map_iterator == (MagickMapIterator) NULL)\n    {\n      path[0]='\\0';\n      ThrowException(exception,ResourceLimitError,MemoryAllocationFailed,\n                     \"MagickMapAllocateIterator\");\n      return MagickFail;\n    }\n\n  if (IsEventLogging())\n    {\n      char\n        list_seperator[2],\n        *search_path=0;\n\n      list_seperator[0]=DirectoryListSeparator;\n      list_seperator[1]='\\0';\n      while(MagickMapIterateNext(path_map_iterator,&key))\n        {\n          if (search_path)\n            (void) ConcatenateString(&search_path,list_seperator);\n          (void) ConcatenateString(&search_path,\n                                   MagickMapDereferenceIterator(path_map_iterator,0));\n        }\n\n      (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                            \"Searching for module file \\\"%s\\\" in path \\\"%s\\\"\",\n                            filename,search_path);\n\n      MagickFreeMemory(search_path);\n      MagickMapIterateToFront(path_map_iterator);\n    }\n\n  while(MagickMapIterateNext(path_map_iterator,&key))\n    {\n      FormatString(path,\"%.1024s%.256s\",\n                   (const char *)MagickMapDereferenceIterator(path_map_iterator,0),\n                   filename);\n\n      if (IsAccessible(path))\n        {\n          status=MagickPass;\n          break;\n        }\n    }\n\n  if (status == MagickFail)\n    path[0]='\\0';\n\n  MagickMapDeallocateIterator(path_map_iterator);\n  return (status);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   G e t M o d u l e L i s t                                                 %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  GetModuleList() returns a list containing the names of modules which may be\n%  loaded.\n%\n%  The format of the GetModuleList function is:\n%\n%      char **GetModuleList(ExceptionInfo *exception)\n%\n%  A description of each parameter follows:\n%\n%    o module_list: Method GetModuleList returns a list of available modules.\n%      If an error occurs a NULL list is returned.\n%\n%    o exception: Return any errors or warnings in this structure.\n%\n*/\nstatic MagickPassFail\nGetModuleListForDirectory(const char *path,           /* Directory to scan. */\n                          char **list,                /* List to extend. */\n                          unsigned long *max_entries, /* Allocated list entries. */\n                          ExceptionInfo *exception )  /* Any exception. */\n{\n  char\n    module_tag[MaxTextExtent];\n\n  DIR\n    *directory;\n\n  register long\n    i,\n    j;\n\n  struct dirent\n    *entry;\n\n  assert( path != (char *) NULL );\n  assert( list != (char **) NULL );\n  assert( max_entries != (unsigned long *) NULL );\n  assert( exception != (ExceptionInfo *) NULL );\n\n  directory=opendir(path);\n  if (directory == (const DIR *) NULL)\n    return(MagickFail);\n\n  /*\n    Find number of entries in list.\n  */\n  for (i=0; list[i] != (char *) NULL; i++);\n\n  entry=readdir(directory);\n  while ((entry != (struct dirent *) NULL) && (i < (long) *max_entries))\n  {\n    if (!GlobExpression(entry->d_name,ModuleGlobExpression))\n      {\n        entry=readdir(directory);\n        continue;\n      }\n    /*\n      Determine module tag\n    */\n    module_tag[0]='\\0';\n    GetPathComponent(entry->d_name,BasePath,module_tag);\n    LocaleUpper(module_tag);\n    /*\n      Following is Windows VisualStudio build specific\n    */\n    if (LocaleNCompare(\"IM_MOD_\",module_tag,7) == 0)\n      {\n        size_t\n          l,\n          o;\n\n        o=10;\n        for (l=0;\n             (l+o < sizeof(module_tag)) && (module_tag[l+o] != '\\0');\n             l++)\n          module_tag[l] = module_tag[l+o];\n        module_tag[l]='\\0';\n        module_tag[strlen(module_tag)-1]='\\0';\n      }\n\n    /*\n      Add module tag to list if it is not already in list.\n    */\n    for (j=0; list[j] != (char *) NULL; j++)\n      {\n        if (LocaleCompare(module_tag,list[j]) == 0)\n          break;\n      }\n    if (list[j] == (char *) NULL)\n      {\n        list[i]=AllocateString(module_tag);\n        i++;\n        list[i]=(char *) NULL;\n      }\n\n    /*\n      Read next directory entry and continue\n    */\n    entry=readdir(directory);\n  }\n  (void) closedir(directory);\n  return(MagickPass);\n}\nstatic char **\nGetModuleList(ExceptionInfo *exception)\n{\n  MagickMap\n    path_map = (MagickMap) NULL;\n\n  MagickMapIterator\n    path_map_iterator = (MagickMapIterator) NULL;\n\n  const char\n    *key;\n\n  char\n    **modules;\n\n  unsigned long\n    max_entries;\n\n  max_entries=MAX_MODULES;\n  modules=MagickAllocateMemory(char **,(max_entries+1)*sizeof(char *));\n  if (modules == (char **) NULL)\n    return((char **) NULL);\n  modules[0]=(char *) NULL;\n\n  path_map=coder_path_map;\n  path_map_iterator=MagickMapAllocateIterator(path_map);\n\n  while(MagickMapIterateNext(path_map_iterator,&key))\n    {\n      const char\n        *path;\n\n      path=(const char *) MagickMapDereferenceIterator(path_map_iterator,0);\n      (void) GetModuleListForDirectory(path,modules,&max_entries,exception);\n    }\n\n  MagickMapDeallocateIterator(path_map_iterator);\n\n  return(modules);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n+   I n i t i a l i z e M a g i c k M o d u l e s                             %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  InitializeMagickModules() initializes the module loader.\n%\n%  The format of the InitializeMagickModules() method is:\n%\n%      InitializeMagickModules(void)\n%\n%\n*/\nvoid\nInitializeMagickModules(void)\n{\n  ExceptionInfo\n    exception;\n\n  GetExceptionInfo(&exception);\n\n  if (module_list == (const ModuleInfo *) NULL)\n    {\n      /*\n        Read module aliases file.\n      */\n      if (!ltdl_initialized)\n        {\n          if (lt_dlinit() != 0)\n            MagickFatalError(ModuleFatalError,\n              UnableToInitializeModuleLoader,lt_dlerror());\n          ltdl_initialized=True;\n        }\n      (void) ReadModuleConfigureFile(ModuleFilename,0,&exception);\n    }\n  (void) InitializeModuleSearchPath(MagickCoderModule,&exception);\n  (void) InitializeModuleSearchPath(MagickFilterModule,&exception);\n\n  DestroyExceptionInfo(&exception);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%  I n i t i a l i z e M o d u l e S e a r c h P a t h                        %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  InitializeModuleSearchPath() initializes the module search path for the\n%  specified type of module.\n%\n%  The format of the InitializeModuleSearchPath method is:\n%\n%    MagickPassFail InitializeModuleSearchPath(MagickModuleType module_type,\n%                                              ExceptionInfo *exception)\n%\n%  A description of each parameter follows:\n%\n%    o module_type: The module type (MagickCoderModule or MagickFilterModule)\n%\n%    o exception: Return any errors or warnings in this structure.\n%\n*/\nstatic void\nAddModulePath(MagickMap path_map, unsigned int *path_index,\n              const char *path,ExceptionInfo *exception)\n{\n  char\n    key[MaxTextExtent];\n\n  FormatString(key,\"%u\",*path_index);\n  (void) MagickMapAddEntry(path_map,key,(void *)path,0,exception);\n  (*path_index)++;\n}\n\n#if !defined(UseInstalledMagick) && defined(POSIX)\nstatic void\nChopPathComponents(char *path,const unsigned long components)\n{\n  long\n    count;\n\n  register char\n    *p;\n\n  if (*path == '\\0')\n    return;\n  p=path+strlen(path);\n  if (*p == *DirectorySeparator)\n    *p='\\0';\n  for (count=0; (count < (long) components) && (p > path); p--)\n    if (*p == *DirectorySeparator)\n      {\n        *p='\\0';\n        count++;\n      }\n}\n#endif /* !defined(UseInstalledMagick) && defined(POSIX) */\n\nMagickPassFail\nInitializeModuleSearchPath(MagickModuleType module_type,\n                           ExceptionInfo *exception)\n{\n  MagickMap\n    path_map = (MagickMap) NULL;\n\n  MagickPassFail\n    status=MagickPass;\n\n  unsigned int\n    path_index=0;\n\n#if !defined(UseInstalledMagick)\n  char\n    path[MaxTextExtent];\n#endif /* !defined(UseInstalledMagick) */\n\n  const char\n    *module_path = NULL;\n\n  assert(exception != (ExceptionInfo *) NULL);\n\n  switch (module_type)\n    {\n    case MagickCoderModule:\n    default:\n      {\n        if (coder_path_map != (MagickMap) NULL)\n          {\n            /*\n              Already initialized.\n            */\n            return (status);\n          }\n        coder_path_map=MagickMapAllocateMap(MagickMapCopyString,MagickMapDeallocateString);\n        path_map=coder_path_map;\n        module_path = getenv(\"MAGICK_CODER_MODULE_PATH\");\n        break;\n      }\n    case MagickFilterModule:\n      {\n        if (filter_path_map != (MagickMap) NULL)\n          {\n            /*\n              Already initialized.\n            */\n            return (status);\n          }\n        filter_path_map=MagickMapAllocateMap(MagickMapCopyString,MagickMapDeallocateString);\n        path_map=filter_path_map;\n        module_path = getenv(\"MAGICK_FILTER_MODULE_PATH\");\n        break;\n      }\n    }\n\n  /*\n    Allow the module search path to be explicitly specified.\n  */\n  if ( module_path )\n    {\n      const char\n        *end = NULL,\n        *start = module_path;\n\n      end=start+strlen(start);\n      while ( start < end )\n        {\n          char\n            buffer[MaxTextExtent];\n\n          const char\n            *seperator;\n\n          int\n            length;\n\n          MagickBool\n            skip=MagickFalse;\n\n          seperator = strchr(start,DirectoryListSeparator);\n          if (seperator)\n            length=seperator-start;\n          else\n            length=end-start;\n          if (length > MaxTextExtent-1)\n            length = MaxTextExtent-1;\n          (void) strncpy(buffer,start,length);\n          buffer[length]='\\0';\n#if HAVE_REALPATH\n          {\n            char\n              real_path[PATH_MAX+1];\n\n            if (realpath(buffer,real_path) != NULL)\n              {\n                length=strlcpy(buffer,real_path,sizeof(buffer));\n                if ((size_t) length >= sizeof(buffer))\n                  {\n                    /* Buffer overflow */\n                    (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                                          \"Module path: Buffer overflow of \"\n                                          \"component \\\"%s\\\"\",\n                                          real_path);\n                    length=0;\n                    skip=MagickTrue;\n                  }\n              }\n            else\n              {\n                /* Path does not exist */\n                (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                                      \"Module path: Skipping invalid path \"\n                                      \"component \\\"%s\\\" (%s)\",\n                                      buffer,strerror(errno));\n                skip=MagickTrue;\n              }\n          }\n#else /* !HAVE_REALPATH */\n          if (IsAccessibleNoLogging(buffer) != MagickTrue)\n            {\n              /* Path does not exist */\n              (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                                    \"Module path: Skipping invalid path \"\n                                    \"component \\\"%s\\\" (%s)\",\n                                    buffer,strerror(errno));\n              skip=MagickTrue;\n            }\n#endif\n          if (skip == MagickFalse)\n            {\n              if (buffer[length-1] != DirectorySeparator[0])\n                (void) strcat(buffer,DirectorySeparator);\n              AddModulePath(path_map,&path_index,buffer,exception);\n            }\n          start += length+1;\n        }\n    }\n\n#if defined(UseInstalledMagick)\n# if defined(MagickCoderModulesPath)\n  {\n    /*\n      Search hard coded paths.\n    */\n    char\n      *module_directory=NULL;\n\n    switch (module_type)\n      {\n      case MagickCoderModule:\n      default:\n        module_directory=MagickCoderModulesPath;\n        break;\n      case MagickFilterModule:\n        module_directory=MagickFilterModulesPath;\n        break;\n      }\n\n    AddModulePath(path_map,&path_index,module_directory,exception);\n    return (status);\n  }\n# else\n#  if defined(MSWINDOWS)\n  {\n    /*\n      Locate path via registry key.\n    */\n    char\n      *key=NULL,\n      *key_value;\n\n    switch (module_type)\n      {\n      case MagickCoderModule:\n      default:\n        key=\"CoderModulesPath\";\n        break;\n      case MagickFilterModule:\n        key=\"FilterModulesPath\";\n        break;\n      }\n\n    key_value=NTRegistryKeyLookup(key);\n    if (key_value == (char *) NULL)\n      {\n        ThrowException(exception,ConfigureError,RegistryKeyLookupFailed,key);\n        return (MagickFail);\n      }\n\n    FormatString(path,\"%.512s%s\",key_value,DirectorySeparator);\n    AddModulePath(path_map,&path_index,path,exception);\n    return (status);\n  }\n#  endif /* defined(MSWINDOWS) */\n# endif /* !defined(MagickCoderModulesPath) */\n# if !defined(MagickCoderModulesPath) && !defined(MSWINDOWS)\n#  error MagickCoderModulesPath or MSWINDOWS must be defined when UseInstalledMagick is defined\n# endif\n#else /* end defined(UseInstalledMagick) */\n  if (getenv(\"MAGICK_HOME\") != (char *) NULL)\n    {\n      /*\n        Search MAGICK_HOME.\n      */\n# if defined(POSIX)\n      char\n        *subdir=NULL;\n\n      switch (module_type)\n        {\n        case MagickCoderModule:\n        default:\n          subdir=MagickCoderModulesSubdir;\n          break;\n        case MagickFilterModule:\n          subdir=MagickFilterModulesSubdir;\n          break;\n        }\n\n      FormatString(path,\"%.512s/lib/%s/\",getenv(\"MAGICK_HOME\"),subdir);\n# else\n      FormatString(path,\"%.512s%s\",getenv(\"MAGICK_HOME\"),\n        DirectorySeparator);\n# endif /* !POSIX */\n      AddModulePath(path_map,&path_index,path,exception);\n    }\n  if (*SetClientPath((char *) NULL) != '\\0')\n    {\n      /*\n        Search based on executable directory if directory is known.\n      */\n# if defined(POSIX)\n      char\n        *module_subdir=NULL,\n        prefix[MaxTextExtent];\n\n      switch (module_type)\n        {\n        case MagickCoderModule:\n        default:\n          module_subdir=\"coders\";\n          break;\n        case MagickFilterModule:\n          module_subdir=\"filters\";\n          break;\n        }\n\n      (void) strlcpy(prefix,SetClientPath((char *) NULL),MaxTextExtent);\n      ChopPathComponents(prefix,1);\n      FormatString(path,\"%.512s/lib/%s/modules-Q%d/%s/\",prefix,\n        MagickLibSubdir,QuantumDepth,module_subdir);\n# else /* end defined(POSIX) */\n      FormatString(path,\"%.512s%s\",SetClientPath((char *) NULL),\n        DirectorySeparator);\n# endif /* !POSIX */\n      AddModulePath(path_map,&path_index,path,exception);\n    }\n  if (getenv(\"HOME\") != (char *) NULL)\n    {\n      /*\n        Search $HOME/.magick.\n      */\n      FormatString(path,\"%.512s%s%s\",getenv(\"HOME\"),\n        *getenv(\"HOME\") == '/' ? \"/.magick\" : \"\",DirectorySeparator);\n      AddModulePath(path_map,&path_index,path,exception);\n    }\n  /*\n    Search current directory.\n  */\n  strcpy(path,\"\");\n  AddModulePath(path_map,&path_index,path,exception);\n\n  return (status);\n#endif /* End defined(UseInstalledMagick) */\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   G e t M o d u l e I n f o                                                 %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  GetModuleInfo() returns a pointer to a ModuleInfo structure that matches\n%  the specified tag.  If tag is NULL or \"*\", the head of the module alias\n%  list is returned. If no modules are loaded, or the requested alias is not\n%  found, NULL is returned.\n%\n%  If GraphicsMagick has not been initialized via InitializeMagick()\n%  then this function will not work.\n%\n%  The format of the GetModuleInfo method is:\n%\n%      const ModuleInfo *GetModuleInfo(const char *name,\n%        ExceptionMagick *exception)\n%\n%  A description of each parameter follows:\n%\n%    o module_info: GetModuleInfo() returns a pointer to a ModuleInfo\n%      structure that matches the specified tag.\n%\n%    o name: a character string that represents the module alias we are\n%      looking for.\n%\n%    o exception: Return any errors or warnings in this structure.\n%\n%\n*/\nconst ModuleInfo *\nGetModuleInfo(const char *name,ExceptionInfo *exception)\n{\n  const ModuleInfo\n    *module_info=(const ModuleInfo *) NULL;\n\n  ARG_NOT_USED(exception);\n\n  if ((name == (const char *) NULL) || (LocaleCompare(name,\"*\") == 0))\n    {\n      module_info=module_list;\n    }\n  else\n    {\n      register ModuleInfo\n        *p;\n\n      for (p=module_list; p != (ModuleInfo *) NULL; p=p->next)\n        if (LocaleCompare(p->name,name) == 0)\n          break;\n\n      if (p != (ModuleInfo *) NULL)\n        {\n          module_info=p;\n          if (p != module_list)\n            {\n              /*\n                Self-adjusting list.\n              */\n              if (p->previous != (ModuleInfo *) NULL)\n                p->previous->next=p->next;\n              if (p->next != (ModuleInfo *) NULL)\n                p->next->previous=p->previous;\n              p->previous=(ModuleInfo *) NULL;\n              p->next=module_list;\n              module_list->previous=p;\n              module_list=p;\n            }\n        }\n    }\n  return (module_info);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%  L i s t M o d u l e I n f o                                                %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method ListModuleInfo lists the module info to a file.\n%\n%  The format of the ListModuleInfo method is:\n%\n%      unsigned int ListModuleInfo(FILE *file,ExceptionInfo *exception)\n%\n%  A description of each parameter follows.\n%\n%    o file:  An pointer to a FILE.\n%\n%    o exception: Return any errors or warnings in this structure.\n%\n%\n*/\nMagickExport unsigned int\nListModuleInfo(FILE *file,ExceptionInfo *exception)\n{\n  register const ModuleInfo\n    *p;\n\n  register long\n    i;\n\n  if (file == (const FILE *) NULL)\n    file=stdout;\n  (void) GetModuleInfo(\"*\",exception);\n  for (p=module_list; p != (ModuleInfo *) NULL; p=p->next)\n  {\n    if ((p->previous == (ModuleInfo *) NULL) ||\n        (LocaleCompare(p->path,p->previous->path) != 0))\n      {\n        if (p->previous != (ModuleInfo *) NULL)\n          (void) fprintf(file,\"\\n\");\n        if (p->path != (char *) NULL)\n          (void) fprintf(file,\"Path: %.1024s\\n\\n\",p->path);\n        (void) fprintf(file,\"Magick      Module\\n\");\n        (void) fprintf(file,\"-------------------------------------------------\"\n          \"------------------------------\\n\");\n      }\n    if (p->stealth)\n      continue;\n\n    (void) fprintf(file,\"%.1024s\",p->magick);\n    for (i=(long) strlen(p->magick); i <= 10; i++)\n      (void) fprintf(file,\" \");\n    (void) fprintf(file,\"%.1024s\",(p->name ? p->name : \"(null)\"));\n    (void) fprintf(file,\"\\n\");\n  }\n  (void) fflush(file);\n  return(True);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   O p e n M o d u l e                                                       %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  OpenModule() loads a module, and invokes its registration method.  It\n%  returns MagickPass on success, and MagickFail if there is an error.\n%\n%  The format of the OpenModule method is:\n%\n%      MagickPassFail OpenModule(const char *module,ExceptionInfo *exception)\n%\n%  A description of each parameter follows:\n%\n%    o status: Method OpenModule returns MagickPass if the specified module is\n%      loaded, otherwise MagickFail.\n%\n%    o module: a character string that indicates the module to load.\n%\n%    o exception: Return any errors or warnings in this structure.\n%\n%\n*/\nMagickPassFail\nOpenModule(const char *module,ExceptionInfo *exception)\n{\n  {\n    char\n      message[MaxTextExtent],\n      module_file[MaxTextExtent],\n      module_name[MaxTextExtent],\n      name[MaxTextExtent],\n      path[MaxTextExtent];\n\n    CoderInfo\n      *coder_info;\n\n    ModuleHandle\n      handle;\n\n    register ModuleInfo\n      *p;\n\n    /*\n      Assign module name from alias.\n    */\n    assert(module != (const char *) NULL);\n    (void) strlcpy(module_name,module,MaxTextExtent);\n    if (module_list != (ModuleInfo *) NULL)\n      for (p=module_list; p != (ModuleInfo *) NULL; p=p->next)\n        if (LocaleCompare(p->magick,module) == 0)\n          {\n            (void) strlcpy(module_name,p->name,MaxTextExtent);\n            break;\n          }\n\n    /*\n      Ignore already loaded modules.\n    */\n    for (coder_info=coder_list; coder_info != (CoderInfo *) NULL;\n         coder_info=coder_info->next)\n      if (LocaleCompare(coder_info->tag,module_name) == 0)\n        break;\n    if (coder_info != (CoderInfo *) NULL)\n      return MagickPass;\n\n    /*\n      Find module file.\n    */\n    handle=(ModuleHandle) NULL;\n    TagToCoderModuleName(module_name,module_file);\n\n    (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n      \"Searching for module \\\"%s\\\" using file name \\\"%s\\\"\",\n         module_name, module_file);\n\n    *path='\\0';\n#if 1\n    /*\n      FindMagickModule returns a ConfigureError if the module is not\n      found.\n    */\n  if (!FindMagickModule(module_file,MagickCoderModule,path,exception))\n    return(False);\n#else\n    if ((module_list != (ModuleInfo *) NULL) &&\n        (module_list->path != (char *) NULL))\n      GetPathComponent(module_list->path,HeadPath,path);\n    (void) strlcat(path,DirectorySeparator,MaxTextExtent);\n    (void) strlcat(path,module_file,MaxTextExtent);\n#endif\n    /*\n      Load module\n    */\n    (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n      \"Opening module at path \\\"%s\\\" ...\", path);\n\n    handle=lt_dlopen(path);\n    if (handle == (ModuleHandle) NULL)\n      {\n        FormatString(message,\"\\\"%.1024s: %.1024s\\\"\",path,lt_dlerror());\n        ThrowException(exception,ModuleError,UnableToLoadModule,message);\n        return(MagickFail);\n      }\n    /*\n      Add module to coder module list.\n    */\n    coder_info=SetCoderInfo(module_name);\n    if (coder_info == (CoderInfo*) NULL)\n      {\n        (void) lt_dlclose(handle);\n        return(MagickFail);\n      }\n    coder_info->handle=handle;\n    (void) time(&coder_info->load_time);\n    if (!RegisterModule(coder_info,exception))\n      return(False);\n    /*\n      Locate and record RegisterFORMATImage function\n    */\n    TagToFunctionName(module_name,\"Register%sImage\",name);\n    coder_info->register_function=(void (*)(void)) lt_dlsym(handle,name);\n    if (coder_info->register_function == (void (*)(void)) NULL)\n      {\n        FormatString(message,\"\\\"%.1024s: %.1024s\\\"\",module_name,lt_dlerror());\n        ThrowException(exception,ModuleError,UnableToRegisterImageFormat,\n          message);\n        return(MagickFail);\n      }\n\n    (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n      \"Function \\\"%s\\\" in module \\\"%s\\\" at address %p\", name,\n      module_name, coder_info->register_function);\n\n    /*\n      Locate and record UnregisterFORMATImage function\n    */\n    TagToFunctionName(module_name,\"Unregister%sImage\",name);\n    coder_info->unregister_function=(void (*)(void)) lt_dlsym(handle,name);\n    if (coder_info->unregister_function == (void (*)(void)) NULL)\n      {\n        FormatString(message,\"\\\"%.1024s: %.1024s\\\"\",module_name,lt_dlerror());\n        ThrowException(exception,ModuleError,UnableToRegisterImageFormat,\n          message);\n        return(MagickFail);\n      }\n\n    (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n      \"Function \\\"%s\\\" in module \\\"%s\\\" at address %p\", name,\n      module_name, coder_info->unregister_function);\n\n    /*\n      Execute RegisterFORMATImage function\n    */\n    coder_info->register_function();\n  }\n  return(MagickPass);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   O p e n M o d u l e s                                                     %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method OpenModules loads all available modules.\n%\n%  The format of the OpenModules method is:\n%\n%      MagickPassFail OpenModules(ExceptionInfo *exception)\n%\n%  A description of each parameter follows:\n%\n%    o status: Method OpenModules returns True if the modules are loaded,\n%      otherwise False.\n%\n%    o exception: Return any errors or warnings in this structure.\n%\n*/\nMagickPassFail\nOpenModules(ExceptionInfo *exception)\n{\n  (void) GetMagickInfo((char *) NULL,exception);\n  {\n    char\n      **modules;\n\n    register char\n      **p;\n\n    register long\n      i;\n\n    /*\n      Load all modules.\n    */\n    (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n      \"Loading all modules ...\");\n    modules=GetModuleList(exception);\n    if ((modules == (char **) NULL) || (*modules == NULL))\n      {\n        (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n          \"GetModuleList did not return any modules\");\n        MagickFreeMemory(modules);\n        return(False);\n      }\n    for (p=modules; *p != (char *) NULL; p++)\n      (void) OpenModule(*p,exception);\n    /*\n      Free resources.\n    */\n    for (i=0; modules[i]; i++)\n      MagickFreeMemory(modules[i]);\n    MagickFreeMemory(modules);\n  }\n  return(True);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n+   R e a d M o d u l e C o n f i g u r e F i l e                             %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method ReadModuleConfigureFile reads the module configuration file which\n%  maps format names to a module name.\n%\n%  The format of the ReadModuleConfigureFile method is:\n%\n%      MagickPassFail ReadModuleConfigureFile(const char *basename,\n%        const unsigned long depth,ExceptionInfo *exception)\n%\n%  A description of each parameter follows:\n%\n%    o status: ReadModuleConfigureFile() returns True if at least one\n%        mapping is defined otherwise False.\n%\n%    o basename:  The color configuration filename.\n%\n%    o depth: depth of <include /> statements.\n%\n%    o exception: Return any errors or warnings in this structure.\n%\n%\n*/\nstatic MagickPassFail\nReadModuleConfigureFile(const char *basename,\n                        const unsigned int depth,\n                        ExceptionInfo *exception)\n{\n  size_t\n    length;\n\n  char\n    path[MaxTextExtent],\n    *xml;\n\n  if (depth == 0)\n    {\n      size_t\n        i;\n\n      /*\n        Load default set of module aliases from the static aliases table.\n      */\n      for (i=0 ; i < sizeof(ModuleAliases)/sizeof(ModuleAliases[0]); i++)\n        {\n          ModuleInfo\n            *module_info;\n\n          module_info=MagickAllocateMemory(ModuleInfo *,sizeof(ModuleInfo));\n          if (module_info == (ModuleInfo *) NULL)\n            MagickFatalError3(ResourceLimitFatalError,MemoryAllocationFailed,\n                              UnableToAllocateModuleInfo);\n          module_info->path=(char *) BuiltInPath;\n          module_info->magick=(char *) ModuleAliases[i].magick;\n          module_info->name=(char *) ModuleAliases[i].name;\n          module_info->stealth=MagickFalse;\n          module_info->signature=MagickSignature;\n          module_info->previous=(ModuleInfo *) NULL;\n          module_info->next=(ModuleInfo *) NULL;\n          if (module_list == (ModuleInfo *) NULL)\n            {\n              module_list=module_info;\n              continue;\n            }\n          module_list->next=module_info;\n          module_info->previous=module_list;\n          module_list=module_list->next;\n        }\n    }\n\n  /*\n    Read the module configure file (if any).\n  */\n  (void) strlcpy(path,basename,sizeof(path));\n  if (depth == 0)\n    {\n      ExceptionInfo\n        exception_local;\n\n      GetExceptionInfo(&exception_local);\n      xml=(char *) GetConfigureBlob(basename,path,&length,&exception_local);\n      if (exception_local.severity != ConfigureError)\n        CopyException(exception,&exception_local);\n      DestroyExceptionInfo(&exception_local);\n    }\n  else\n    {\n      xml=(char *) FileToBlob(basename,&length,exception);\n    }\n  if (xml != (char *) NULL)\n    {\n      char\n        keyword[MaxTextExtent],\n        *q,\n        *token;\n\n      MagickBool\n        in_entry;\n\n      size_t\n        token_max_length;\n\n      token=AcquireString(xml);\n      token_max_length=strlen(token);\n      in_entry=MagickFalse;\n      for (q=xml; *q != '\\0'; )\n        {\n          /*\n            Interpret XML.\n          */\n          MagickGetToken(q,&q,token,token_max_length);\n          if (*token == '\\0')\n            break;\n          (void) strlcpy(keyword,token,sizeof(keyword));\n          if (LocaleNCompare(keyword,\"<!--\",4) == 0)\n            {\n              /*\n                Comment element.\n              */\n              while ((LocaleNCompare(q,\"->\",2) != 0) && (*q != '\\0'))\n                MagickGetToken(q,&q,token,token_max_length);\n              continue;\n            }\n          if (LocaleCompare(keyword,\"<include\") == 0)\n            {\n              /*\n                Include element.\n              */\n              while ((*token != '>') && (*q != '\\0'))\n                {\n                  (void) strlcpy(keyword,token,MaxTextExtent);\n                  MagickGetToken(q,&q,token,token_max_length);\n                  if (*token != '=')\n                    continue;\n                  MagickGetToken(q,&q,token,token_max_length);\n                  if (LocaleCompare(keyword,\"file\") == 0)\n                    {\n                      if (depth > 200)\n                        ThrowException(exception,ConfigureError,\n                                       IncludeElementNestedTooDeeply,path);\n                      else\n                        {\n                          char\n                            filename[MaxTextExtent];\n\n                          GetPathComponent(path,HeadPath,filename);\n                          if (*filename != '\\0')\n                            (void) strlcat(filename,DirectorySeparator,sizeof(filename));\n                          (void) strlcat(filename,token,sizeof(filename));\n                          (void) ReadModuleConfigureFile(filename,depth+1,exception);\n                        }\n                      if (module_list != (ModuleInfo *) NULL)\n                        while (module_list->next != (ModuleInfo *) NULL)\n                          module_list=module_list->next;\n                    }\n                }\n              continue;\n            }\n          if (LocaleCompare(keyword,\"<module\") == 0)\n            {\n              ModuleInfo\n                *module_info;\n\n              /*\n                Allocate memory for the module list.\n              */\n              in_entry=MagickTrue;\n              module_info=MagickAllocateMemory(ModuleInfo *,sizeof(ModuleInfo));\n              if (module_info == (ModuleInfo *) NULL)\n                MagickFatalError3(ResourceLimitFatalError,MemoryAllocationFailed,\n                                  UnableToAllocateModuleInfo);\n              (void) memset(module_info,0,sizeof(ModuleInfo));\n              module_info->path=AcquireString(path);\n              module_info->signature=MagickSignature;\n              if (module_list == (ModuleInfo *) NULL)\n                {\n                  module_list=module_info;\n                  continue;\n                }\n              module_list->next=module_info;\n              module_info->previous=module_list;\n              module_list=module_list->next;\n              continue;\n            }\n          if (LocaleCompare(keyword,\"/>\") == 0)\n            {\n              /*\n                Closing a module alias specification.\n              */\n              if (in_entry)\n                {\n                  /*\n                    Remove any existing entry with same name (last one wins).\n                  */\n                  {\n                    ModuleInfo\n                      *module_info;\n\n                    for (module_info=module_list->previous;\n                         module_info != (ModuleInfo *) NULL;\n                         module_info=module_info->previous)\n                      {\n                        if (LocaleCompare(module_list->magick,module_info->magick) == 0)\n                          {\n                            DestroyModuleInfoEntry(module_info);\n                            break;\n                          }\n                      }\n                  }\n                  in_entry=MagickFalse;\n                }\n            }\n          if (module_list == (ModuleInfo *) NULL)\n            continue;\n          MagickGetToken(q,(char **) NULL,token,token_max_length);\n          if (*token != '=')\n            continue;\n          MagickGetToken(q,&q,token,token_max_length);\n          MagickGetToken(q,&q,token,token_max_length);\n          switch (*keyword)\n            {\n            case 'M':\n            case 'm':\n              {\n                if (LocaleCompare((char *) keyword,\"magick\") == 0)\n                  {\n                    module_list->magick=AcquireString(token);\n                    break;\n                  }\n                break;\n              }\n            case 'N':\n            case 'n':\n              {\n                if (LocaleCompare((char *) keyword,\"name\") == 0)\n                  {\n                    module_list->name=AcquireString(token);\n                    break;\n                  }\n                break;\n              }\n            case 'S':\n            case 's':\n              {\n                if (LocaleCompare((char *) keyword,\"stealth\") == 0)\n                  {\n                    module_list->stealth=LocaleCompare(token,\"True\") == 0;\n                    break;\n                  }\n                break;\n              }\n            default:\n              break;\n            }\n        }\n      MagickFreeMemory(token);\n      MagickFreeMemory(xml);\n    }\n  if (module_list == (ModuleInfo *) NULL)\n    return(MagickFail);\n  while (module_list->previous != (ModuleInfo *) NULL)\n    module_list=module_list->previous;\n  return(MagickPass);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   R e g i s t e r M o d u l e                                               %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  RegisterModule() adds an entry to the module list.  It returns a pointer to\n%  the registered entry on success.\n%\n%  The format of the RegisterModule method is:\n%\n%      CoderInfo *RegisterModule(CoderInfo *entry,ExceptionInfo *exception)\n%\n%  A description of each parameter follows:\n%\n%    o info: a pointer to the registered entry is returned.\n%\n%    o entry: a pointer to the CoderInfo structure to register.\n%\n%    o exception: Return any errors or warnings in this structure.\n%\n%\n*/\nstatic CoderInfo *\nRegisterModule(CoderInfo *entry,ExceptionInfo *exception)\n{\n  register CoderInfo\n    *p;\n\n  ARG_NOT_USED(exception);\n\n  /*\n    Delete any existing tag.\n  */\n  assert(entry != (CoderInfo *) NULL);\n  assert(entry->signature == MagickSignature);\n  entry->previous=(CoderInfo *) NULL;\n  entry->next=(CoderInfo *) NULL;\n  if (coder_list == (CoderInfo *) NULL)\n    {\n      /*\n        Start module list.\n      */\n      coder_list=entry;\n      return(entry);\n    }\n  /*\n    Tag is added in lexographic order.\n  */\n  for (p=coder_list; p->next != (CoderInfo *) NULL; p=p->next)\n    if (LocaleCompare(p->tag,entry->tag) >= 0)\n      break;\n  if (LocaleCompare(p->tag,entry->tag) == 0)\n    {\n      /*\n        Module already registered.\n      */\n      return(entry);\n    }\n  if (LocaleCompare(p->tag,entry->tag) < 0)\n    {\n      /*\n        Add entry after target.\n      */\n      entry->next=p->next;\n      p->next=entry;\n      entry->previous=p;\n      if (entry->next != (CoderInfo *) NULL)\n        entry->next->previous=entry;\n      return(entry);\n    }\n  /*\n    Add entry before target.\n  */\n  entry->next=p;\n  entry->previous=p->previous;\n  p->previous=entry;\n  if (entry->previous != (CoderInfo *) NULL)\n    entry->previous->next=entry;\n  if (p == coder_list)\n    coder_list=entry;\n  return(entry);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   S e t C o d e r I n f o                                                   %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  SetCoderInfo() allocates a CoderInfo structure and initializes the members\n%  to default values.\n%\n%  The format of the SetCoderInfo method is:\n%\n%      CoderInfo *SetCoderInfo(const char *tag)\n%\n%  A description of each parameter follows:\n%\n%    o coder_list: SetCoderInfo() returns the allocated and initialized\n%      CoderInfo structure.\n%\n%    o tag: a character string that represents the image format associated\n%      with the CoderInfo structure.\n%\n%\n*/\nstatic CoderInfo *\nSetCoderInfo(const char *tag)\n{\n  CoderInfo\n    *entry;\n\n  assert(tag != (const char *) NULL);\n  entry=MagickAllocateMemory(CoderInfo *,sizeof(CoderInfo));\n  if (entry == (CoderInfo *) NULL)\n    MagickFatalError3(ResourceLimitFatalError,MemoryAllocationFailed,\n      UnableToAllocateModuleInfo);\n  (void) memset(entry,0,sizeof(CoderInfo));\n  entry->tag=AcquireString(tag);\n  entry->signature=MagickSignature;\n  return(entry);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%  T a g T o C o d e r M o d u l e N a m e                                    %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  TagToCoderModuleName() takes a module tag and obtains the filename of the\n%  corresponding coder module.\n%\n%  The format of the TagToCoderModuleName method is:\n%\n%      char *TagToCoderModuleName(const char *tag)\n%\n%  A description of each parameter follows:\n%\n%    o tag: a character string representing the module tag.\n%\n%    o module_name: A buffer to write the module name.  Should be at least\n%      MaxTextExtent long.\n%\n*/\nstatic void\nTagToCoderModuleName(const char *tag,char *module_name)\n{\n  assert(tag != (char *) NULL);\n  assert(module_name != (char *) NULL);\n#if defined(HasLTDL)\n  (void) FormatString(module_name,\"%.1024s.la\",tag);\n  (void) LocaleLower(module_name);\n#else\n#if defined(MSWINDOWS)\n  if (LocaleNCompare(\"IM_MOD_\",tag,7) == 0)\n    (void) strlcpy(module_name,tag,MaxTextExtent);\n  else\n    {\n#  if defined(_DEBUG)\n      FormatString(module_name,\"IM_MOD_DB_%.1024s_.dll\",tag);\n#  else\n      FormatString(module_name,\"IM_MOD_RL_%.1024s_.dll\",tag);\n#  endif /* defined(_DEBUG) */\n    }\n#endif  /* defined(MSWINDOWS) */\n#endif /* defined(HasLTDL) */\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%  T a g T o F i l t e r M o d u l e N a m e                                  %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  TagToFilterModuleName takes a module tag and returns the filename of the\n%  corresponding filter module.\n%\n%  The format of the TagToFilterModuleName method is:\n%\n%      void TagToFilterModuleName(const char *tag)\n%\n%  A description of each parameter follows:\n%\n%    o tag: a character string representing the module tag.\n%\n*/\nstatic void\nTagToFilterModuleName(const char *tag, char *module_name)\n{\n  assert(tag != (char *) NULL);\n  assert(module_name != (char *) NULL);\n#if defined(HasLTDL)\n  (void) FormatString(module_name,\"%.1024s.la\",tag);\n  (void) LocaleLower(module_name);\n#else\n  (void) FormatString(module_name,\"%.1024s.dll\",tag);\n#endif\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   T a g T o F u n c t i o n N a m e                                         %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  TagToFunctionName() formats the module tag name to a string using the\n%  upper-case tag name as the input string, and a user-provided format.\n%  This function is used to prepare the RegisterTAGImage and UnregisterTAGImage\n%  function names passed lt_dlsym.\n%\n%  The format of the TagToFunctionName method is:\n%\n%      TagToFunctionName(const char *tag, const char *format, char *function)\n%\n%  A description of each parameter follows:\n%\n%    o tag: the module tag.\n%\n%    o format: a sprintf-compatible format string containing %s where the\n%              upper-case tag name is to be inserted.\n%\n%    o function: pointer to a destination buffer for the formatted result.\n%\n*/\nstatic void\nTagToFunctionName(const char *tag,const char *format,char *function)\n{\n  char\n    extended_format[MaxTextExtent],\n    function_name[MaxTextExtent];\n\n  assert(tag != (const char *) NULL);\n  assert(format != (const char *) NULL);\n  assert(function != (char *) NULL);\n  (void) strlcpy(function_name,tag,MaxTextExtent);\n  LocaleUpper(function_name);\n\n#if defined(PREFIX_MAGICK_SYMBOLS)\n  (void) strlcpy(extended_format,\"Gm\",MaxTextExtent);\n  (void) strlcat(extended_format,format,MaxTextExtent);\n#else\n  (void) strlcpy(extended_format,format,MaxTextExtent);\n#endif\n  FormatString(function,extended_format,function_name);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   U n l o a d M o d u l e                                                   %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  UnloadModule() unloads a module, and invokes its de-registration method.\n%  Returns True on success, and False if there is an error.\n%\n%  The format of the UnloadModule method is:\n%\n%      unsigned int UnloadModule(const CoderInfo *coder_info,\n%        ExceptionInfo *exception)\n%\n%  A description of each parameter follows:\n%\n%    o coder_info: The coder info.\n%\n%    o exception: Return any errors or warnings in this structure.\n%\n%\n*/\nstatic unsigned int\nUnloadModule(const CoderInfo *coder_info,ExceptionInfo *exception)\n{\n  char\n    message[MaxTextExtent];\n\n  unsigned int\n    status=True;\n\n  assert(coder_info != (const CoderInfo *) NULL);\n  assert(exception != (ExceptionInfo *) NULL);\n\n  (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                        \"Unloading \\\"%s\\\" module ...\", coder_info->tag);\n\n  /*\n    Invoke module unregister (UnregisterFORMATImage) function\n  */\n  if (coder_info->unregister_function != (void (*)(void)) NULL)\n    coder_info->unregister_function();\n\n  /*\n    Close module.  Don't close JP2 module since it uses atexit().\n  */\n  if ( strcmp(\"JP2\",coder_info->tag) != 0 )\n    {\n      if (lt_dlclose((ModuleHandle) coder_info->handle))\n        {\n          FormatString(message,\"\\\"%.1024s: %.1024s\\\"\",coder_info->tag,\n                       lt_dlerror());\n          ThrowException(exception,ModuleError,FailedToCloseModule,message);\n          status=False;\n        }\n    }\n  return (status);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   U n r e g i s t e r M o d u l e                                           %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  UnregisterModule() removes a tag from the module info list.  It returns\n%  False if the tag does not exist in the list otherwise True.\n%\n%  The format of the UnregisterModule method is:\n%\n%      unsigned int UnregisterModule(const char *tag,ExceptionInfo *exception)\n%\n%  A description of each parameter follows:\n%\n%    o status: Method UnregisterModule returns False if the tag does not\n%      exist in the list otherwise it returns True.\n%\n%    o tag: a character string that represents the image format we are\n%      looking for.\n%\n%    o exception: Return any errors or warnings in this structure.\n%\n%\n*/\nstatic unsigned int\nUnregisterModule(const char *tag,ExceptionInfo *exception)\n{\n  CoderInfo\n    *coder_info;\n\n  register CoderInfo\n    *p;\n\n  unsigned int\n    status=False;\n\n  assert(tag != (const char *) NULL);\n  for (p=coder_list; p != (CoderInfo *) NULL; p=p->next)\n  {\n    if (LocaleCompare(p->tag,tag) != 0)\n      continue;\n    status=UnloadModule((CoderInfo *) p,exception);\n    MagickFreeMemory(p->tag);\n    if (p->previous != (CoderInfo *) NULL)\n      p->previous->next=p->next;\n    else\n      {\n        coder_list=p->next;\n        if (p->next != (CoderInfo *) NULL)\n          p->next->previous=(CoderInfo *) NULL;\n      }\n    if (p->next != (CoderInfo *) NULL)\n      p->next->previous=p->previous;\n    coder_info=p;\n    MagickFreeMemory(coder_info);\n    break;\n  }\n  return (status);\n}\n\n#endif /* defined(SupportMagickModules) */\n",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/magick/nt_base.c": "/*\n% Copyright (C) 2003 - 2019 GraphicsMagick Group\n% Copyright (C) 2002 ImageMagick Studio\n%\n% This program is covered by multiple licenses, which are described in\n% Copyright.txt. You should have received a copy of Copyright.txt with this\n% package; otherwise see http://www.graphicsmagick.org/www/Copyright.html.\n%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%                                 N   N  TTTTT                                %\n%                                 NN  N    T                                  %\n%                                 N N N    T                                  %\n%                                 N  NN    T                                  %\n%                                 N   N    T                                  %\n%                                                                             %\n%                                                                             %\n%                Windows NT Utility Methods for GraphicsMagick                %\n%                                                                             %\n%                                                                             %\n%                               Software Design                               %\n%                                 John Cristy                                 %\n%                                December 1996                                %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%\n*/\n\f\n#include \"magick/studio.h\"\n#if defined(MSWINDOWS)\n/*\n  Include declarations.\n*/\n#include <sys/types.h>\n#include <sys/utime.h>\n#include \"magick/log.h\"\n#include \"magick/magick.h\"\n#include \"magick/utility.h\"\n#include \"magick/version.h\"\n#if defined(HasLTDL)\n#  include \"ltdl.h\"\n#endif /* defined(HasLTDL) */\n#include \"magick/nt_base.h\"\n\f\n/*\n  Static declarations.\n*/\n#if !defined(HasLTDL)\nstatic char\n  *NTslsearchpath = (char *) NULL;\n#endif\nstatic void\n  *gs_dll_handle = (void *)NULL;\nstatic GhostscriptVectors\n    gs_vectors;\n\nstatic MagickPassFail NTstrerror_r(LONG errnum, char *strerrbuf, size_t  buflen);\n\f\n/*\n  External declarations.\n*/\n#if !defined(MSWINDOWS)\nextern \"C\" BOOL WINAPI\n  DllMain(HINSTANCE hinstDLL,DWORD fdwReason,LPVOID lpvReserved);\n#endif\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T c l o s e d i r                                                       %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTclosedir closes the named directory stream and frees the DIR\n%  structure.\n%\n%  The format of the NTclosedir method is:\n%\n%      void NTclosedir(DIR *entry)\n%\n%  A description of each parameter follows:\n%\n%    o entry: Specifies a pointer to a DIR structure.\n%\n%\n*/\nMagickExport int NTclosedir(DIR *entry)\n{\n  assert(entry != (DIR *) NULL);\n  FindClose(entry->hSearch);\n  MagickFreeMemory(entry);\n  return 0;\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   DllMain                                                                   %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method DllMain is an entry point to the DLL which is called when processes\n%  and threads are initialized and terminated, or upon calls to the\n%  Windows LoadLibrary and FreeLibrary functions.\n%\n%  The function returns TRUE of it succeeds, or FALSE if initialization fails.\n%\n%  The format of the DllMain method is:\n%\n%    BOOL WINAPI DllMain(HINSTANCE hinstDLL,DWORD fdwReason,LPVOID lpvReserved)\n%\n%  A description of each parameter follows:\n%\n%    o hinstDLL: handle to the DLL module\n%\n%    o fdwReason: reason for calling function.\n%\n%          May have values:\n%             DLL_PROCESS_ATTACH - DLL is being loaded into virtual address\n%                                  space of current process.\n%             DLL_THREAD_ATTACH - Indicates that the current process is\n%                                 creating a new thread.  Called under the\n%                                 context of the new thread.\n%             DLL_THREAD_DETACH - Indicates that the thread is exiting.\n%                                 Called under the context of the exiting\n%                                 thread.\n%             DLL_PROCESS_DETACH - Indicates that the DLL is being unloaded\n%                                  from the virtual address space of the\n%                                  current process.\n%\n%    o lpvReserved: Used for passing additional info during DLL_PROCESS_ATTACH\n%                   and DLL_PROCESS_DETACH.\n%\n*/\n#if defined(_DLL) && defined( ProvideDllMain )\nBOOL WINAPI DllMain(HINSTANCE hinstDLL,DWORD fdwReason,LPVOID lpvReserved)\n{\n  switch ( fdwReason )\n    {\n    case DLL_PROCESS_ATTACH:\n      {\n#define ENV_VAR_MAX 32767 /* environment variable max is 32,767 bytes */\n#define DLL_PATH_MAX 1024\n\n        char\n          dll_path[DLL_PATH_MAX],\n          current_path[ENV_VAR_MAX];\n\n        long count;\n\n        count = GetModuleFileName(hinstDLL,dll_path,DLL_PATH_MAX);\n        if (count) {\n          for ( ; count>0 ; --count)\n            {\n              if (dll_path[count]=='\\\\')\n                {\n                  dll_path[count+1]='\\0';\n                  break;\n                }\n            }\n          InitializeMagick(dll_path);\n          count = GetEnvironmentVariable(\"PATH\",current_path,ENV_VAR_MAX);\n          if (strstr(current_path,dll_path) == NULL)\n            {\n              if (strlen(dll_path)+count+1 < ENV_VAR_MAX-1)\n                {\n                  char\n                    new_path[ENV_VAR_MAX];\n\n                  FormatString(new_path,\"%.*s;%.*s\",DLL_PATH_MAX,dll_path,\n                               ENV_VAR_MAX-DLL_PATH_MAX-1,current_path);\n                  SetEnvironmentVariable(\"PATH\",new_path);\n                }\n            }\n          break;\n        }\n        /* If we get here, then GetModuleFileName must have failed */\n        return FALSE;\n        break;\n      }\n    case DLL_PROCESS_DETACH:\n      DestroyMagick();\n      break;\n    default:\n      {\n        /* Do nothing */\n      }\n    }\n  return TRUE;\n}\n#endif\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   E x i t                                                                   %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method Exit calls TerminateProcess for Win95.  Should quit the program\n%  and not return.\n%\n%  The format of the Exit method is:\n%\n%      void Exit(int status)\n%\n%  A description of each parameter follows:\n%\n%    o status: an integer value representing the status of the terminating\n%      process.\n%\n%\n*/\nMagickExport void Exit(int status)\n{\n  if (IsWindows95())\n    TerminateProcess(GetCurrentProcess(),(unsigned int) status);\n  exit(status);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   M a g i c k G e t M M U P a g e S i z e                                   %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  MagickGetMMUPageSize() returns the VM pagesize used by the MMU. The VM\n%  pagesize is the number of bytes retrieved due to one page fault.\n%\n%  The format of the MagickGetMMUPageSize method is:\n%\n%      long MagickGetMMUPageSize()\n%\n*/\nMagickExport long MagickGetMMUPageSize()\n{\n  return 4096;\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   M a g i c k G e t F i l e A t t r i b u t e s                             %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  MagickGetFileAttributes() returns the file attributes for a specified\n%  file in a structure of type MagickStatStruct_t.\n%\n%  The format of the MagickGetFileAttributes method is:\n%\n%      int MagickGetFileAttributes(const char *filename,\n%                                  MagickStatStruct_t *statbuf)\n%\n%  A description of each parameter follows:\n%\n%    o filename:  Path to the file\n%\n%    o statbuf: A structure of type MagickStatStruct_t to populate.\n%\n%\n*/\nMagickExport int MagickGetFileAttributes(const char *filename,\n                                         MagickStatStruct_t *statbuf)\n{\n  if (MagickStat(filename, statbuf) != 0)\n    return -1;\n\n  return 0;\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   M a g i c k S e t F i l e A t t r i b u t e s                             %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  MagickSetFileAttributes() sets the access and modification time file\n%  attributes based on values provided via in a structure of type\n%  MagickStatStruct_t.\n%\n%  The format of the MagickGetFileAttributes method is:\n%\n%      int MagickSetFileAttributes(const char *filename,\n%                                  const MagickStatStruct_t *statbuf)\n%\n%  A description of each parameter follows:\n%\n%    o filename:  Path to the file\n%\n%    o statbuf: A structure of type MagickStatStruct_t to populate.\n%\n%\n*/\nMagickExport int MagickSetFileAttributes(const char *filename,\n                                         const MagickStatStruct_t *statbuf)\n{\n  /*\n    Setting file timestamps on Windows is actually almost the same as on POSIX systems.\n    https://msdn.microsoft.com/en-us/library/4wacf567.aspx\n   */\n  struct _utimbuf\n    ut;\n\n  ut.actime = statbuf->st_atime;\n  ut.modtime = statbuf->st_mtime;\n\n  if (_utime(filename, &ut) == -1)\n    return -1;\n\n  return 0;\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   I s W i n d o w s 9 5                                                     %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method IsWindows95 returns true if the system is Windows 95.\n%\n%  The format of the IsWindows95 method is:\n%\n%      int IsWindows95()\n%\n%  A description of each parameter follows:\n%\n%    o status: an integer value representing the status of the terminating\n%      process.\n%\n%\n*/\nMagickExport MagickBool IsWindows95()\n{\n  OSVERSIONINFO\n    version_info;\n\n  version_info.dwOSVersionInfoSize=sizeof(version_info);\n  if (GetVersionEx(&version_info) &&\n      (version_info.dwPlatformId == VER_PLATFORM_WIN32_WINDOWS))\n    return(MagickTrue);\n  return(MagickFalse);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   InitializeWIN32ExceptionHandlers                                          %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method InitializeWIN32ExceptionHandlers registers a handler for WIN32\n%  exceptions (similar to POSIX signals but different).\n%\n%  The format of the InitializeWIN32ExceptionHandlers method is:\n%\n%      void InitializeWIN32ExceptionHandlers()\n%\n%\n*/\nstatic LONG WINAPI\nMagickUnhandledExceptionFilter(struct _EXCEPTION_POINTERS *info)\n{\n  /*\n    https://msdn.microsoft.com/en-us/library/windows/desktop/ms680634%28v=vs.85%29.aspx\n\n    http://www.codeproject.com/Articles/11132/Walking-the-callstack\n\n    http://www.microsoft.com/msj/0197/exception/exception.aspx\n\n    Return values:\n\n    EXCEPTION_EXECUTE_HANDLER (0x1)\n\n    Return from UnhandledExceptionFilter and execute the associated\n    exception handler. This usually results in process termination.\n\n    EXCEPTION_CONTINUE_EXECUTION (0xffffffff)\n\n    Return from UnhandledExceptionFilter and continue execution from\n    the point of the exception. Note that the filter function is\n    free to modify the continuation state by modifying the exception\n    information supplied through its LPEXCEPTION_POINTERS parameter.\n\n    EXCEPTION_CONTINUE_SEARCH (0x0)\n\n    Proceed with normal execution of UnhandledExceptionFilter. That\n    means obeying the SetErrorMode flags, or invoking the\n    Application Error pop-up message box.\n\n    The EXCEPTION_POINTERS structure has the definition:\n\n    https://msdn.microsoft.com/en-us/library/windows/desktop/aa363082%28v=vs.85%29.aspx\n    typedef struct _EXCEPTION_RECORD {\n    DWORD                    ExceptionCode;\n    DWORD                    ExceptionFlags;\n    struct _EXCEPTION_RECORD  *ExceptionRecord;\n    PVOID                    ExceptionAddress;\n    DWORD                    NumberParameters;\n    ULONG_PTR                ExceptionInformation[EXCEPTION_MAXIMUM_PARAMETERS];\n    } EXCEPTION_RECORD, *PEXCEPTION_RECORD;\n\n    https://msdn.microsoft.com/en-us/library/windows/desktop/ms679284%28v=vs.85%29.aspx\n    We don't care about PCONTEXT because it is processor-specific and includes low level\n    details such as register contents.\n\n    https://msdn.microsoft.com/en-us/library/windows/desktop/ms679331%28v=vs.85%29.aspx\n    typedef struct _EXCEPTION_POINTERS {\n    PEXCEPTION_RECORD ExceptionRecord;\n    PCONTEXT          ContextRecord;\n    } EXCEPTION_POINTERS, *PEXCEPTION_POINTERS;\n\n  */\n  static const struct {\n    DWORD  code;\n    const char *text;\n  }\n  except_descr[] =\n    {\n      /*\n        The thread tried to read from or write to a virtual address\n        for which it does not have the appropriate access.\n      */\n#if defined(EXCEPTION_ACCESS_VIOLATION)\n      { EXCEPTION_ACCESS_VIOLATION,  \"Access violation\" },\n#endif\n      /*\n        The thread tried to access an array element that is out of\n        bounds and the underlying hardware supports bounds checking.\n      */\n#if defined(EXCEPTION_ARRAY_BOUNDS_EXCEEDED)\n      { EXCEPTION_ARRAY_BOUNDS_EXCEEDED, \"Array bounds exceeded\" },\n#endif\n      /*\n        The thread tried to read or write data that is misaligned on\n        hardware that does not provide alignment. For example,\n        16-bit values must be aligned on 2-byte boundaries; 32-bit\n        values on 4-byte boundaries, and so on.\n      */\n#if defined(EXCEPTION_DATATYPE_MISALIGNMENT)\n      { EXCEPTION_DATATYPE_MISALIGNMENT, \"Datatype misalignment\" },\n#endif\n      /*\n        One of the operands in a floating-point operation is\n        denormal. A denormal value is one that is too small to\n        represent as a standard floating-point value.\n      */\n#if defined(EXCEPTION_FLT_DENORMAL_OPERAND)\n      { EXCEPTION_FLT_DENORMAL_OPERAND, \"Float - denormal operand\" },\n#endif\n      /*\n        The thread tried to divide a floating-point value by a\n        floating-point divisor of zero.\n      */\n#if defined(EXCEPTION_FLT_DIVIDE_BY_ZERO)\n      { EXCEPTION_FLT_DIVIDE_BY_ZERO, \"Float - divide by zero\" },\n#endif\n      /*\n        This exception represents any floating-point exception not\n        included in this list.\n      */\n#if defined(EXCEPTION_FLT_INVALID_OPERATION)\n      { EXCEPTION_FLT_INVALID_OPERATION, \"Float - invalid operation\" },\n#endif\n      /*\n        The exponent of a floating-point operation is greater than the\n        magnitude allowed by the corresponding type.\n      */\n#if defined(EXCEPTION_FLT_OVERFLOW)\n      { EXCEPTION_FLT_OVERFLOW, \"Float overflow\" },\n#endif\n      /*\n        The stack overflowed or underflowed as the result of a\n        floating-point operation.\n      */\n#if defined(EXCEPTION_FLT_STACK_CHECK)\n      { EXCEPTION_FLT_STACK_CHECK, \"Float - stack under/overflow\" },\n#endif\n      /*\n        The exponent of a floating-point operation is less than the\n        magnitude allowed by the corresponding type.\n      */\n#if defined(EXCEPTION_FLT_UNDERFLOW)\n      { EXCEPTION_FLT_UNDERFLOW, \"Float - underflow\" },\n#endif\n      /*\n        The thread tried to execute an invalid instruction.\n      */\n#if defined(EXCEPTION_ILLEGAL_INSTRUCTION)\n      { EXCEPTION_ILLEGAL_INSTRUCTION, \"Illegal instruction\" },\n#endif\n      /*\n        The thread tried to access a page that was not present, and\n        the system was unable to load the page. For example, this\n        exception might occur if a network connection is lost while\n        running a program over the network.\n      */\n#if defined(EXCEPTION_IN_PAGE_ERROR)\n      { EXCEPTION_IN_PAGE_ERROR, \"MMU page-in error\" },\n#endif\n      /*\n        The thread tried to divide an integer value by an integer\n        divisor of zero.\n      */\n#if defined(EXCEPTION_INT_DIVIDE_BY_ZERO)\n      { EXCEPTION_INT_DIVIDE_BY_ZERO, \"Integer divide by zero\" },\n#endif\n      /*\n        The result of an integer operation caused a carry out of the\n        most significant bit of the result.\n      */\n#if defined(EXCEPTION_INT_OVERFLOW)\n      { EXCEPTION_INT_OVERFLOW, \"Integer overflow\" },\n#endif\n      /*\n        The thread tried to execute an instruction whose operation is\n        not allowed in the current machine mode.\n      */\n#if defined(EXCEPTION_PRIV_INSTRUCTION)\n      { EXCEPTION_PRIV_INSTRUCTION, \"Privileged instruction\" },\n#endif\n      /*\n        The thread used up its stack.\n      */\n#if defined(EXCEPTION_STACK_OVERFLOW)\n      { EXCEPTION_STACK_OVERFLOW, \"Stack overflow\" }\n#endif\n    };\n\n  char\n    message[MaxTextExtent];\n\n  const char\n    *text = NULL;\n\n  size_t\n    i;\n\n  DWORD\n    code = info->ExceptionRecord->ExceptionCode;\n\n  /*\n    Linear search for explanation of error code.\n  */\n  for (i=0; i < sizeof(except_descr)/sizeof(except_descr[0]); i++)\n    if (except_descr[i].code == code)\n      {\n        text = except_descr[i].text;\n        break;\n      }\n\n  /*\n    If this is an exception we handle\n  */\n  if (text != NULL)\n    {\n      /*\n        Release persistent resources\n      */\n      PanicDestroyMagick();\n\n      /*\n        Output messages like:\n\n        gm.exe identify: caught exception 0xC0000005 \"Access violation\"...\n      */\n      FormatString(message,\n                   \"%s: caught exception 0x%08X \\\"%s\\\"...\",\n                   GetClientName(), (unsigned int) code, text);\n      if (write(STDERR_FILENO,message,\n                (MAGICK_POSIX_IO_SIZE_T) strlen(message)) == -1)\n        {\n          /* Exists to quench warning */\n        }\n\n      /*\n        Return from UnhandledExceptionFilter and execute the\n        associated exception handler. This usually results in process\n        termination.\n      */\n      return EXCEPTION_EXECUTE_HANDLER;\n    }\n\n  /*\n    Can also look at ExceptionFlags and check for EXCEPTION_NONCONTINUABLE.\n  */\n\n  /*\n    Proceed with normal execution of UnhandledExceptionFilter. That\n    means obeying the SetErrorMode flags, or invoking the Application\n    Error pop-up message box.\n  */\n  return EXCEPTION_CONTINUE_SEARCH;\n}\nMagickExport void\nNTInitializeExceptionHandlers()\n{\n\n  (void) SetErrorMode(SEM_FAILCRITICALERRORS | SEM_NOGPFAULTERRORBOX |\n                      SEM_NOOPENFILEERRORBOX);\n  (void) SetUnhandledExceptionFilter(MagickUnhandledExceptionFilter);\n}\n\f\n#if !defined(HasLTDL)\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T d l c l o s e                                                         %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTdlclose unloads the module associated with the passed handle.\n%   Zero is returned on success.\n%\n%  The format of the NTdlclose method is:\n%\n%      void NTdlclose(void *handle)\n%\n%  A description of each parameter follows:\n%\n%    o handle: Specifies a handle to a previously loaded dynamic module.\n%\n*/\nMagickExport int NTdlclose(void *handle)\n{\n  /* FreeLibrary returns zero for failure */\n  return (!(FreeLibrary(handle)));\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T d l e r r o r                                                         %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTdlerror returns a pointer to a string describing the last error\n%   associated with a NTdl* function. Note that this function is not thread\n%   safe so it should only be used under the protection of a lock.\n%\n%  The format of the NTdlerror method is:\n%\n%      const char * NTdlerror(void)\n%\n%  A description of each parameter follows:\n%\n*/\nMagickExport const char *NTdlerror(void)\n{\n  static char\n    last_error[MaxTextExtent];\n\n  char\n    *error;\n\n  last_error[0]='\\0';\n  error=NTGetLastError();\n  if (error)\n    strlcpy(last_error,error,MaxTextExtent);\n  MagickFreeMemory(error);\n  return (last_error);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T d l e x i t                                                           %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   NTdlexit() exits the dynamic module loading subsystem.\n%\n%  The format of the NTdlexit method is:\n%\n%      int NTdlexit(void)\n%\n*/\nMagickExport int NTdlexit(void)\n{\n  return(0);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T d l i n i t                                                         %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTdlinit initializes the dynamic module loading subsystem.\n%\n%  The format of the NTdlinit method is:\n%\n%      int NTdlinit(void)\n%\n*/\nMagickExport int NTdlinit(void)\n{\n  return(0);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T d l o p e n                                                           %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTdlopen loads a dynamic module into memory and returns a handle\n%   that can be used to access the various procedures in the module.\n%\n%  The format of the NTdlopen method is:\n%\n%      void *NTdlopen(const char *filename)\n%\n%  A description of each parameter follows:\n%\n%    o path: Specifies a pointer to string representing dynamic module that\n%            is to be loaded.\n%\n*/\nMagickExport void *NTdlopen(const char *filename)\n{\n#define MaxPathElements  31\n\n  char\n    buffer[MaxTextExtent];\n\n  int\n    index;\n\n  register char\n    *p,\n    *q;\n\n  register int\n    i;\n\n  void\n    *handle;\n\n  UINT\n    errorMode;\n\n  // Set error mode so that dialog box is not displayed on error.\n  errorMode=SetErrorMode(SEM_FAILCRITICALERRORS|SEM_NOOPENFILEERRORBOX);\n\n  // Load library via name\n  handle=(void *) LoadLibrary(filename);\n\n  // If library failed to load, but a search path is defined, then\n  // attempt to load library via search path.\n  if ((handle == (void *) NULL) && (NTslsearchpath != NULL))\n    {\n      p=NTslsearchpath;\n      index=0;\n      while (index < MaxPathElements)\n        {\n          q=strchr(p,DirectoryListSeparator);\n          if (q == (char *) NULL)\n            {\n              (void) strlcpy(buffer,p,MaxTextExtent);\n              (void) strlcat(buffer,\"\\\\\",MaxTextExtent);\n              (void) strlcat(buffer,filename,MaxTextExtent);\n              handle=(void *) LoadLibrary(buffer);\n              break;\n            }\n          i=q-p;\n          (void) strncpy(buffer,p,i);\n          buffer[i]='\\0';\n          (void) strlcat(buffer,\"\\\\\",MaxTextExtent);\n          (void) strlcat(buffer,filename,MaxTextExtent);\n          handle=(void *) LoadLibrary(buffer);\n          if (handle)\n            break;\n          p=q+1;\n        }\n    }\n\n  // Restore original error handling mode.\n  SetErrorMode(errorMode);\n\n  return(handle);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T d l s e t s e a r c h p a t h                                         %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTdlsetsearchpath sets the current locations that the subsystem\n%   should look at to find dynamically loadable modules.\n%\n%  The format of the NTdlsetsearchpath method is:\n%\n%      int NTdlsetsearchpath(char *path)\n%\n%  A description of each parameter follows:\n%\n%    o path: Specifies a pointer to string representing the search path\n%            for DLL's that can be dynamically loaded.\n%\n*/\nMagickExport int NTdlsetsearchpath(const char *path)\n{\n  if (NTslsearchpath)\n    {\n      MagickFreeMemory(NTslsearchpath);\n      NTslsearchpath=(char *) NULL;\n    }\n  if (path != (char *) NULL)\n    NTslsearchpath=AllocateString(path);\n  return (0);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T d l s y m                                                             %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTdlsym retrieve the procedure address of the procedure specified\n%   by the passed character string.\n%\n%  The format of the NTdlsym method is:\n%\n%      void *NTdlsym(void *handle,const char *name)\n%\n%  A description of each parameter follows:\n%\n%    o handle: Specifies a handle to the previously loaded dynamic module.\n%\n%    o name: Specifies the procedure entry point to be returned.\n%\n*/\nMagickExport void *NTdlsym(void *handle,const char *name)\n{\n  LPFNDLLFUNC1\n    lpfnDllFunc1;\n\n  lpfnDllFunc1=(LPFNDLLFUNC1) GetProcAddress(handle,name);\n  if (!lpfnDllFunc1)\n    return((void *) NULL);\n  return((void *) lpfnDllFunc1);\n}\n#endif /* !defined(HasLTDL) */\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n+  N T m u n m a p                                                            %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTmunmap emulates the POSIX munmap function.\n%\n%  The format of the NTmunmap method is:\n%\n%      int NTmunmap(void *map,size_t length)\n%\n%  A description of each parameter follows:\n%\n%    o status:  Method NTmunmap returns 0 on success; otherwise, it\n%      returns -1 and sets errno to indicate the error.\n%\n%    o map: The address of the binary large object.\n%\n%    o length: The length of the binary large object.\n%\n%\n*/\nMagickExport int NTmunmap(void *map,size_t length)\n{\n  ARG_NOT_USED(length);\n\n  if (!UnmapViewOfFile(map))\n    return(-1);\n  return(0);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T E l a p s e d T i m e                                                 %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTElapsedTime returns the elapsed time (in seconds) since the last\n%  call to StartTimer().\n%\n%  The format of the ElapsedTime method is:\n%\n%      double NTElapsedTime(void)\n%\n%\n*/\nMagickExport double NTElapsedTime(void)\n{\n  /*\n    See\n    https://msdn.microsoft.com/en-us/library/windows/desktop/ms644905%28v=vs.85%29.aspx\n    https://msdn.microsoft.com/en-us/library/windows/desktop/ms644904%28v=vs.85%29.aspx\n  */\n  static LARGE_INTEGER pFrequency = {0};\n  LARGE_INTEGER CurrentTime;\n\n  if (pFrequency.QuadPart == 0)\n    if (QueryPerformanceFrequency(&pFrequency) == 0)\n      pFrequency.QuadPart = 1;  /* Mark that the Performance counter is NOT supported. */\n\n  if (pFrequency.QuadPart > 1)\n    {\n      QueryPerformanceCounter(&CurrentTime);\n      return (double) CurrentTime.QuadPart / pFrequency.QuadPart;\n    }\n  else\n    {\n      union\n      {\n        FILETIME\n        filetime;\n\n        __int64\n        filetime64;\n      } elapsed_time;\n\n      SYSTEMTIME\n        system_time;\n\n      GetSystemTime(&system_time);\n      SystemTimeToFileTime(&system_time,&elapsed_time.filetime);\n      return((double) 1.0e-7*elapsed_time.filetime64);\n    }\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n+   N T E r r o r H a n d l e r                                               %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTErrorHandler displays an error reason and then terminates\n%  the program.\n%\n%  The format of the NTErrorHandler method is:\n%\n%      void NTErrorHandler(const ExceptionType error,const char *reason,\n%        const char *description)\n%\n%  A description of each parameter follows:\n%\n%    o error: Specifies the numeric error category.\n%\n%    o reason: Specifies the reason to display before terminating the\n%      program.\n%\n%    o description: Specifies any description to the reason.\n%\n%\n*/\nMagickExport void NTErrorHandler(const ExceptionType error,const char *reason,\n  const char *description)\n{\n  char\n    buffer[3*MaxTextExtent];\n\n  ARG_NOT_USED(error);\n\n  if (reason == (char *) NULL)\n    {\n      DestroyMagick();\n      Exit(0);\n    }\n  if ((description != (char *) NULL) && errno)\n    FormatString(buffer,\"%.1024s: %.1024s (%.1024s) [%.1024s].\\n\",\n      GetClientName(),reason,description,strerror(errno));\n  else\n    if (description != (char *) NULL)\n      FormatString(buffer,\"%.1024s: %.1024s (%.1024s).\\n\",\n        GetClientName(),reason,description);\n    else\n      if (errno)\n        FormatString(buffer,\"%.1024s: %.1024s [%.1024s].\\n\",\n          GetClientName(),reason,strerror(errno));\n      else\n        FormatString(buffer,\"%.1024s: %.1024s.\\n\",GetClientName(),\n          reason);\n  (void) MessageBox(NULL,buffer,\"GraphicsMagick Exception\",MB_OK | MB_TASKMODAL |\n    MB_SETFOREGROUND | MB_ICONEXCLAMATION);\n  DestroyMagick();\n  Exit(0);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T G e t E x e c u t i o n P a t h                                       %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTGetExecutionPath returns the execution path of a program.\n%\n%  The format of the GetExecutionPath method is:\n%\n%      unsigned int NTGetExecutionPath(char *path)\n%\n%\n*/\nMagickExport MagickPassFail NTGetExecutionPath(char *path)\n{\n  GetModuleFileName(0,path,MaxTextExtent);\n  return(MagickPass);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T G e t L a s t E r r o r                                               %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTGetLastError returns the last error that occurred.\n%\n%  The format of the NTGetLastError method is:\n%\n%      char *NTGetLastError(void)\n%\n%  A description of each parameter follows:\n%\n*/\nchar *NTGetLastError(void)\n{\n  char\n    *reason;\n\n  int\n    status;\n\n  LPVOID\n    buffer;\n\n  status=FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER |\n    FORMAT_MESSAGE_FROM_SYSTEM,NULL,GetLastError(),\n    MAKELANGID(LANG_NEUTRAL,SUBLANG_DEFAULT),(LPTSTR) &buffer,0,NULL);\n  if (!status)\n    reason=AllocateString(\"An unknown error occurred\");\n  else\n    {\n      reason=AllocateString((const char *)buffer);\n      LocalFree(buffer);\n    }\n  return(reason);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T G h o s t s c r i p t D L L                                           %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTGhostscriptDLL obtains the path to the latest Ghostscript DLL.\n%   The method returns False if a value is not obtained.\n%\n%  The format of the NTGhostscriptDLL method is:\n%\n%      int NTGhostscriptDLL(char *path, int path_length)\n%\n%  A description of each parameter follows:\n%\n%    o path: Pointer to buffer in which to return result.\n%\n%    o path_length: Length of buffer\n%\n*/\n/*\n  Get a named registry value.\n  Key = hkeyroot\\\\key, named value = name.\n */\nstatic int\nNTGetRegistryValue(HKEY hkeyroot, const char *key, const char *name,\n                   char *ptr, int *plen)\n{\n  HKEY\n    hkey;\n\n  DWORD\n    cbData,\n    keytype;\n\n  BYTE\n    b,\n    *bptr = (BYTE *)ptr;\n\n  LONG\n    rc;\n\n  if (RegOpenKeyExA(hkeyroot, key, 0, KEY_READ, &hkey)\n      == ERROR_SUCCESS)\n    {\n      keytype = REG_SZ;\n      cbData = *plen;\n      if (bptr == (BYTE *) NULL)\n        bptr = &b;  /* Registry API won't return ERROR_MORE_DATA */\n      /* if ptr is NULL */\n      rc = RegQueryValueExA(hkey, (char *)name, 0, &keytype, bptr, &cbData);\n      RegCloseKey(hkey);\n      if (rc == ERROR_SUCCESS)\n        {\n          *plen = cbData;\n          return 0;  /* found environment variable and copied it */\n        }\n      else\n        if (rc == ERROR_MORE_DATA)\n          {\n            /* buffer wasn't large enough */\n            *plen = cbData;\n            return -1;\n          }\n    }\n  return 1;  /* not found */\n}\n\n/*\n  Find the latest version of Ghostscript installed on the system (if\n  any).\n*/\nstatic MagickPassFail\nNTGhostscriptFind(const char **gs_productfamily,\n                  int *gs_major_version,\n                  int *gs_minor_version)\n{\n  /*\n    These are the Ghostscript product versions we will search for.\n  */\n  const char *products[4] =\n    {\n      \"GPL Ghostscript\",\n      \"GNU Ghostscript\",\n      \"AFPL Ghostscript\",\n      \"Aladdin Ghostscript\"\n    };\n\n  unsigned int\n    product_index;\n\n  MagickPassFail\n    status;\n\n  status=MagickFail;\n  *gs_productfamily=NULL;\n\n  (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                        \"Searching for Ghostscript...\");\n\n  /* Minimum version of Ghostscript is 5.50 */\n  *gs_major_version=5;\n  *gs_minor_version=49;\n  for (product_index=0; product_index < sizeof(products)/sizeof(products[0]);\n       ++product_index)\n    {\n      HKEY\n        hkey,\n        hkeyroot;\n\n      LONG\n        winstatus;\n\n      REGSAM\n        open_key_mode;\n\n      char\n        key[MaxTextExtent],\n        last_error_msg[MaxTextExtent];\n\n      (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                            \"  Searching for %s...\",\n                            products[product_index]);\n      FormatString(key,\"SOFTWARE\\\\%s\",products[product_index]);\n      hkeyroot = HKEY_LOCAL_MACHINE;\n      /*\n        long WINAPI RegOpenKeyEx(const HKEY hKey, const LPCTSTR\n        lpSubKey, const DWORD ulOptions, const REGSAM samDesired,\n        PHKEY phkResult)\n      */\n      open_key_mode=KEY_READ;\n      if ((winstatus=RegOpenKeyExA(hkeyroot, key, 0, open_key_mode, &hkey))\n          == ERROR_SUCCESS)\n        {\n          DWORD\n            cbData;\n\n          int\n            n;\n\n          (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                                \"    RegOpenKeyExA() opened \"\n                                \"\\\"HKEY_LOCAL_MACHINE\\\\%s\\\"\",\n                                key);\n          /* Now enumerate the keys */\n          cbData = sizeof(key) / sizeof(char);\n          n=0;\n          /*\n            LONG WINAPI RegEnumKeyEx(HKEY hKey, DWORD dwIndex, LPTSTR\n            lpName, LPDWORD lpcName, LPDWORD lpReserved, LPTSTR\n            lpClass, LPDWORD lpcClass, PFILETIME lpftLastWriteTime)\n\n            Enumerates the subkeys of the specified open registry key.\n\n            RegEnumKeyA is is provided only for compatibility with\n            16-bit versions of Windows.\n          */\n          while ((winstatus=RegEnumKeyA(hkey, n, key, cbData)) == ERROR_SUCCESS)\n            {\n              int\n                major_version,\n                minor_version;\n\n              (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                                    \"      RegEnumKeyA enumerated \\\"%s\\\"\",key);\n              n++;\n              major_version=0;\n              minor_version=0;\n              if (sscanf(key,\"%d.%d\",&major_version,&minor_version) != 2)\n                continue;\n\n              (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                                    \"      Found Ghostscript (%s) version %d.%02d\",\n                                    products[product_index],\n                                    major_version,\n                                    minor_version);\n\n              if ((major_version > *gs_major_version) ||\n                  ((major_version == *gs_major_version) &&\n                   (minor_version > *gs_minor_version)))\n                {\n                  *gs_productfamily=products[product_index];\n                  *gs_major_version=major_version;\n                  *gs_minor_version=minor_version;\n                  status=MagickPass;\n                }\n            }\n          if (winstatus != ERROR_NO_MORE_ITEMS)\n            {\n              (void) NTstrerror_r(winstatus,last_error_msg,sizeof(last_error_msg));\n              (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                                    \"      RegEnumKeyA (%s)\",\n                                    last_error_msg);\n            }\n          /*\n            LONG WINAPI RegCloseKey(HKEY hKey)\n\n            Close the registry key.\n          */\n          winstatus=RegCloseKey(hkey);\n        }\n      else\n        {\n          /*\n            If the function fails, the return value is a nonzero error\n            code defined in Winerror.h. You can use the FormatMessage\n            function with the FORMAT_MESSAGE_FROM_SYSTEM flag to get a\n            generic description of the error.\n           */\n          (void) NTstrerror_r(winstatus,last_error_msg,sizeof(last_error_msg));\n          (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                                \"    RegOpenKeyExA() failed to open \"\n                                \"\\\"HKEY_LOCAL_MACHINE\\\\%s\\\" (%s)\",\n                                key,last_error_msg);\n        }\n    }\n  if (status != MagickFail)\n    {\n      (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                            \"Selected Ghostscript (%s) version %d.%02d\",\n                            *gs_productfamily,*gs_major_version,\n                            *gs_minor_version);\n    }\n  else\n    {\n      (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                            \"Failed to find Ghostscript!\");\n      *gs_major_version=0;\n      *gs_minor_version=0;\n    }\n\n  return status;\n}\n\n\n/*\n  Obtain a string from the installed Ghostscript (if any).\n*/\nstatic MagickPassFail\nNTGhostscriptGetString(const char *name, char *ptr, const size_t len)\n{\n  static const char\n    *gs_productfamily=NULL;\n\n  static int\n    gs_major_version=0,\n    gs_minor_version=0;\n\n  struct\n  {\n    const HKEY hkey;\n    const char *name;\n  }\n  hkeys[2] =\n    {\n      { HKEY_CURRENT_USER,  \"HKEY_CURRENT_USER\"  },\n      { HKEY_LOCAL_MACHINE, \"HKEY_LOCAL_MACHINE\" }\n    };\n\n  unsigned int\n    i;\n\n  int\n    length;\n\n  char\n    key[MaxTextExtent];\n\n  ptr[0]='\\0';\n\n  if (NULL == gs_productfamily)\n    (void) NTGhostscriptFind(&gs_productfamily,&gs_major_version,\n                             &gs_minor_version);\n\n  if (NULL == gs_productfamily)\n    return MagickFail;\n\n  FormatString(key,\"SOFTWARE\\\\%s\\\\%d.%02d\",gs_productfamily,\n               gs_major_version, gs_minor_version);\n\n  for (i=0; i < sizeof(hkeys)/sizeof(hkeys[0]); ++i)\n    {\n      length = (int) len;\n      if (NTGetRegistryValue(hkeys[i].hkey, key, name, ptr, &length) == 0)\n        {\n          (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                                \"Registry: \\\"%s\\\\%s\\\\%s\\\"=\\\"%s\\\"\",\n                                hkeys[i].name,key,name,ptr);\n          return MagickPass;\n        }\n      else\n        {\n          (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                                \"Failed lookup: \\\"%s\\\\%s\\\\%s\\\"\",\n                                hkeys[i].name,key,name);\n        }\n    }\n\n  return MagickFail;\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T G h o s t s c r i p t D L L                                           %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTGhostscriptDLL obtains the path to the latest Ghostscript DLL.\n%   The method returns False if a value is not obtained.\n%\n%  The format of the NTGhostscriptDLL method is:\n%\n%      int NTGhostscriptDLL( char *path, int path_length)\n%\n%  A description of each parameter follows:\n%\n%    o path: Pointer to path buffer to update\n%\n%    o path_length: Allocation size of path buffer.\n%%\n*/\nMagickExport int NTGhostscriptDLL(char *path, int path_length)\n{\n  static char\n    cache[MaxTextExtent],\n    *result=NULL;\n\n  path[0]='\\0';\n\n  if (NULL == result)\n    {\n      const char\n        *directory;\n\n      directory=getenv(\"MAGICK_GHOSTSCRIPT_PATH\");\n      if (directory != (const char *) NULL)\n        {\n          FormatString(cache, \"%.1024s%sgsdll%u.dll\", directory,\n            DirectorySeparator, (unsigned int) sizeof(directory)*8);\n          if (IsAccessibleAndNotEmpty(cache))\n            result=cache;\n          else\n            (void) LogMagickEvent(ConfigureEvent, GetMagickModule(),\n              \"Unable to find ghostscript library: \\\"%s\\\"\", cache);\n        }\n      else if (NTGhostscriptGetString(\"GS_DLL\", cache, sizeof(cache)))\n        {\n          result=cache;\n        }\n    }\n\n  if (result)\n    {\n      (void) strlcpy(path, result, path_length);\n      return TRUE;\n    }\n\n  return FALSE;\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T G h o s t s c r i p t D L L V e c t o r s                             %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTGhostscriptDLLVectors returns a GhostscriptVectors structure\n%   containing function vectors to invoke Ghostscript DLL functions. A null\n%   pointer is returned if there is an error with loading the DLL or\n%   retrieving the function vectors.\n%\n%  The format of the NTGhostscriptDLLVectors method is:\n%\n%      const GhostscriptVectors *NTGhostscriptDLLVectors( void )\n%\n%%\n*/\nMagickExport const GhostscriptVectors *NTGhostscriptDLLVectors( void )\n{\n  if (NTGhostscriptLoadDLL())\n    return &gs_vectors;\n\n  return (GhostscriptVectors*) NULL;\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T G h o s t s c r i p t E X E                                           %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTGhostscriptEXE obtains the path to the latest Ghostscript\n%   executable.  The method returns TRUE if path is updated, otherwise\n%   FALSE.  When the full path value is not obtained, then the value\n%   \"gswin32c.exe\" or \"gswin64c.exe\" is used.\n%\n%  The format of the NTGhostscriptEXE method is:\n%\n%      int NTGhostscriptEXE(char *path, int path_length)\n%\n%  A description of each parameter follows:\n%\n%    o path: Pointer to buffer in which to return result.\n%\n%    o path_length: Length of buffer\n%\n*/\nMagickExport int NTGhostscriptEXE(char *path, int path_length)\n{\n  static char\n    cache[MaxTextExtent],\n    *result=NULL;\n\n  if (NULL == result)\n    {\n      char\n        gsexe[MaxTextExtent];\n\n      char\n        *p;\n\n      /* Ensure a suitable default. */\n      (void) FormatString(gsexe,\"gswin%uc.exe\",(unsigned int) sizeof(p)*8);\n      (void) strlcpy(cache,gsexe,sizeof(cache));\n\n      if (NTGhostscriptDLL(cache,sizeof(cache)))\n        {\n          p = strrchr(cache, '\\\\');\n          if (p) {\n            p++;\n            *p = 0;\n            (void) strlcat(cache,gsexe,sizeof(cache));\n          }\n        }\n      result=cache;\n    }\n\n  if (result)\n    {\n      (void) strlcpy(path,result, path_length);\n      return TRUE;\n    }\n\n  return FALSE;\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T G h o s t s c r i p t F o n t s                                       %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTGhostscriptFonts obtains the path to the Ghostscript fonts.\n%   The method returns False if a value is not obtained.\n%\n%  The format of the NTGhostscriptFonts method is:\n%\n%      int NTGhostscriptFonts(char *path, int path_length)\n%\n%  A description of each parameter follows:\n%\n%    o path: Pointer to buffer in which to return result.\n%\n%    o path_length: Length of buffer\n%\n*/\nMagickExport int NTGhostscriptFonts(char *path, int path_length)\n{\n  char\n    gs_lib_path[MaxTextExtent];\n\n  path[0]='\\0';\n\n  if (!NTGhostscriptGetString(\"GS_LIB\", gs_lib_path,sizeof(gs_lib_path)))\n    return FALSE;\n\n  /*\n    The format of the GS_LIB string is a path similar to\n\n    \"C:\\Program Files\\gs\\gs9.10\\bin;C:\\Program Files\\gs\\gs9.10\\lib;C:\\Program Files\\gs\\gs9.10\\fonts\"\n\n    Ghostscript 7.0X does not include the Resource entry.\n\n    Search path used by GPL Ghostscript 9.10 (2013-08-30):\n    C:\\Program Files\\gs\\gs9.10\\bin ; C:\\Program Files\\gs\\gs9.10\\lib ;\n    C:\\Program Files\\gs\\gs9.10\\fonts ; %rom%Resource/Init/ ; %rom%lib/ ;\n    c:/gs/gs9.10/Resource/Init ; c:/gs/gs9.10/lib ;\n    c:/gs/gs9.10/Resource/Font ; c:/gs/fonts\n\n  */\n  {\n#define URW_FONT_HELVETICA_FILE \"n019003l.pfb\"\n    const char\n      *end = NULL,\n      *start = gs_lib_path;\n\n    end = start+strlen(start);\n    while ( start < end )\n      {\n        char\n          font_dir_file[MaxTextExtent];\n\n        const char\n          *separator;\n\n        int\n          length;\n\n        separator = strchr(start,DirectoryListSeparator);\n        if (separator)\n          length=separator-start;\n        else\n          length=end-start;\n        length = Min(length+1,MaxTextExtent);\n\n        (void) strlcpy(font_dir_file,start,length);\n        (void) strlcat(font_dir_file,DirectorySeparator,MaxTextExtent);\n        (void) strlcat(font_dir_file,URW_FONT_HELVETICA_FILE,MaxTextExtent);\n        if (IsAccessible(font_dir_file))\n          {\n            (void) strlcpy(path, start, Min(length,path_length));\n            (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                                  \"Ghostscript fonts in directory \\\"%s\\\"\",\n                                  path);\n            return TRUE;\n          }\n        start += length;\n      }\n\n\n    // Second scan will try to get common fonts for all gs versions.\n    start = gs_lib_path;\n    end = start + strlen(start);\n    while ( start < end )\n      {\n        char\n          font_dir_file[MaxTextExtent];\n\n        const char\n          *separator, *gsdir;\n\n        int\n          length;\n\n        separator = strchr(start,DirectoryListSeparator);\n        gsdir = strstr(start,\"/gs/gs\");\n        if (gsdir==NULL) gsdir = strstr(start,\"\\\\gs\\\\gs\");\n        if (gsdir!=NULL && (separator==NULL || gsdir<separator))\n          {\n            length = Min((gsdir-start)+5,MaxTextExtent);\n            (void) strlcpy(font_dir_file,start,length);\n            (void) strlcat(font_dir_file,\"fonts\",MaxTextExtent);\n            (void) strlcat(font_dir_file,DirectorySeparator,MaxTextExtent);\n            (void) strlcat(font_dir_file,URW_FONT_HELVETICA_FILE,MaxTextExtent);\n            if (IsAccessible(font_dir_file))\n              {\n                (void) strlcpy(path,font_dir_file,Min(length+5,path_length));  // str size \"fonts\" is 5.\n                (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                                      \"Ghostscript common fonts in directory \\\"%s\\\"\",\n                                      path);\n                return TRUE;\n              }\n          }\n\n        if (separator==NULL) break;\n        start = separator + 1;\n      }\n  }\n\n  {\n    /*\n      Check \"c:/gs/fonts\" since Ghostscript also looks there.  This\n      may be a more convenient place to put fonts since it would be\n      used by every Ghostscript installation on the system.\n\n      This part of the path to check is hard-coded in the Ghostscript\n      binary via AROOTDIR=c:/gs in base/msvclib.mak and it is highly\n      unlikely that Windows users will use a Ghostscript built with a\n      different GS_LIB_DEFAULT (which includes AROOTDIR) definition.\n    */\n\n    const char\n      gs_font_dir[] = \"c:\\\\gs\\\\fonts\";\n\n    char\n      font_dir_file[MaxTextExtent];\n\n    (void) strlcpy(font_dir_file,gs_font_dir,MaxTextExtent);\n    (void) strlcat(font_dir_file,DirectorySeparator,MaxTextExtent);\n    (void) strlcat(font_dir_file,URW_FONT_HELVETICA_FILE,MaxTextExtent);\n    if (IsAccessible(font_dir_file))\n      {\n        (void) strlcpy(path,gs_font_dir,path_length);\n        (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n                              \"Ghostscript fonts in directory \\\"%s\\\"\",\n                              path);\n        return TRUE;\n      }\n  }\n\n  return FALSE;\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T G h o s t s c r i p t L o a d D L L                                   %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTGhostscriptLoadDLL attempts to load the Ghostscript DLL\n%   and returns True if it succeeds.\n%\n%  The format of the NTGhostscriptLoadDLL method is:\n%\n%      int NTGhostscriptLoadDLL(void)\n%\n%%\n*/\nMagickExport int NTGhostscriptLoadDLL(void)\n{\n  char\n    dll_path[MaxTextExtent];\n\n  if (gs_dll_handle != (void *) NULL)\n    return True;\n\n  if (!NTGhostscriptDLL(dll_path,sizeof(dll_path)))\n    return False;\n\n  gs_dll_handle = lt_dlopen(dll_path);\n  if (gs_dll_handle == (void *) NULL)\n    return False;\n\n  memset((void*)&gs_vectors, 0, sizeof(GhostscriptVectors));\n\n  gs_vectors.exit=(int (MagickDLLCall *)(gs_main_instance*))\n    lt_dlsym(gs_dll_handle,\"gsapi_exit\");\n  gs_vectors.init_with_args=(int (MagickDLLCall *)(gs_main_instance *, int, char **))\n    (lt_dlsym(gs_dll_handle,\"gsapi_init_with_args\"));\n  gs_vectors.new_instance=(int (MagickDLLCall *)(gs_main_instance **, void *))\n    (lt_dlsym(gs_dll_handle,\"gsapi_new_instance\"));\n  gs_vectors.run_string=(int (MagickDLLCall *)(gs_main_instance *, const char *, int, int *))\n    (lt_dlsym(gs_dll_handle,\"gsapi_run_string\"));\n  gs_vectors.delete_instance=(void (MagickDLLCall *)(gs_main_instance *))\n    (lt_dlsym(gs_dll_handle,\"gsapi_delete_instance\"));\n\n  if ((gs_vectors.exit==NULL) ||\n      (gs_vectors.init_with_args==NULL) ||\n      (gs_vectors.new_instance==NULL) ||\n      (gs_vectors.run_string==NULL) ||\n      (gs_vectors.delete_instance==NULL))\n    return False;\n\n  return True;\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T G h o s t s c r i p t U n L o a d D L L                               %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTGhostscriptUnLoadDLL unloads the Ghostscript DLL if it is loaded.\n%\n%  The format of the NTGhostscriptUnLoadDLL method is:\n%\n%      int NTGhostscriptUnLoadDLL(void)\n%\n%%\n*/\nMagickExport int NTGhostscriptUnLoadDLL(void)\n{\n  if (gs_dll_handle != (void *) NULL)\n    {\n      lt_dlclose(gs_dll_handle);\n      gs_dll_handle=(void *) NULL;\n      memset((void*)&gs_vectors, 0, sizeof(GhostscriptVectors));\n      return True;\n    }\n\n  return False;\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T K e r n e l A P I S u p p o r t e d                                   %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTKernelAPISupported tests to see if an API symbol is defined in\n%  kernel32.dll. If it is defined, then presumably the interface can safely\n%  be used without crashing.\n%\n%  The format of the NTKernelAPISupported method is:\n%\n%      MagickBool NTKernelAPISupported(const char *name)\n%\n%  A description of each parameter follows:\n%\n%    o return: MagickTrue if the symbol is defined, otherwise MagickFalse.\n%\n%    o name: Symbol name.\n%\n*/\nMagickExport MagickBool NTKernelAPISupported(const char *name)\n{\n  return (GetProcAddress(GetModuleHandle(\"kernel32.dll\"),name) == NULL ?\n          MagickFalse : MagickTrue);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T R e g i s t r y K e y L o o k u p                                     %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTRegistryKeyLookup returns package installation path settings\n%  stored in the Windows Registry. Path settings are specific to the\n%  installed package version so that multiple package installations may\n%  coexist.\n%\n%  Values are stored in the registry under a base path path similar to\n%  \"HKEY_LOCAL_MACHINE/SOFTWARE\\GraphicsMagick\\1.0\\Q:8\". The provided subkey\n%  is appended to this base path to form the full key.\n%\n%  The format of the NTRegistryKeyLookup method is:\n%\n%      char *NTRegistryKeyLookup(const char *subkey)\n%\n%  A description of each parameter follows:\n%\n%    o return: Returns an allocated string containing the value of the key.\n%           This allocation should be freed by the user once it is no longer\n%           needed.\n%\n%    o key: Specifies a string that identifies the registry object.\n%           Currently supported sub-keys include: \"BinPath\", \"ConfigurePath\",\n%           \"LibPath\", \"CoderModulesPath\", \"FilterModulesPath\", \"SharePath\".\n%\n*/\nMagickExport unsigned char *NTRegistryKeyLookup(const char *subkey)\n{\n  static HKEY\n    reg_key = (HKEY) INVALID_HANDLE_VALUE;\n\n  /*\n    Look-up base-key for first access only\n  */\n  if (reg_key == (HKEY) INVALID_HANDLE_VALUE)\n    {\n      char\n        package_key[MaxTextExtent];\n\n      LONG\n        res;\n\n      FormatString(package_key,\"SOFTWARE\\\\%s\\\\%s\\\\Q:%d\", MagickPackageName,\n                   MagickLibVersionText,QuantumDepth);\n\n      res = RegOpenKeyExA (HKEY_LOCAL_MACHINE, package_key, 0, KEY_READ,\n                           &reg_key);\n\n      if (res != ERROR_SUCCESS)\n        {\n          reg_key = (HKEY) INVALID_HANDLE_VALUE;\n          return 0;\n        }\n    }\n\n  /*\n    Look-up sub-key\n  */\n  {\n    unsigned char\n      *dest;\n\n    DWORD\n      size,\n      type;\n\n    LONG\n      res;\n\n    size = 32;\n    dest = MagickAllocateMemory(unsigned char *,size);\n\n    if (dest != (unsigned char *) NULL)\n      {\n        res = RegQueryValueExA (reg_key, subkey, 0, &type, dest, &size);\n        if (res == ERROR_MORE_DATA && type == REG_SZ)\n          {\n            MagickReallocMemory(unsigned char *,dest,size);\n            res = RegQueryValueExA (reg_key, subkey, 0, &type, dest, &size);\n          }\n\n        if (type != REG_SZ || res != ERROR_SUCCESS)\n          {\n            MagickFreeMemory(dest);\n          }\n      }\n\n    return dest;\n  }\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T R e s o u r c e T o B l o b                                           %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTResourceToBlob returns a blob containing the contents of the\n%  resource in the current executable specified by the id parameter. This\n%  is currently used to retrieve MGK files tha have been embedded into\n%  the various command line utilities.\n%\n%  The format of the telldir method is:\n%\n%      unsigned char *NTResourceToBlob(const char *id)\n%\n%  A description of each parameter follows:\n%\n%    o id: Specifies a string that identifies the resource.\n%\n%\n*/\nMagickExport unsigned char *NTResourceToBlob(const char *id)\n{\n  char\n    directory[MaxTextExtent];\n\n  DWORD\n    length;\n\n  HGLOBAL\n    global;\n\n  HMODULE\n    handle;\n\n  HRSRC\n    resource;\n\n  unsigned char\n    *blob,\n    *value;\n\n  assert(id != (const char *) NULL);\n#ifdef MagickLibName\n  handle=GetModuleHandle(MagickLibName);\n#else\n  FormatString(directory,\"%.1024s%.1024s%.1024s\",GetClientPath(),\n    DirectorySeparator,GetClientFilename());\n  if (IsAccessible(directory))\n    handle=GetModuleHandle(directory);\n  else\n    handle=GetModuleHandle(0);\n#endif\n  if (!handle)\n    return((unsigned char *) NULL);\n  /*\n    Locate a resource matching the specified type and name in the\n    specified module.\n  */\n  resource=FindResource(handle,id,\"IMAGEMAGICK\");\n  if (!resource)\n  {\n    (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n      \"Tried: windows resource \\\"%.1024s\\\"\",id);\n    return((unsigned char *) NULL);\n  }\n  (void) LogMagickEvent(ConfigureEvent,GetMagickModule(),\n    \"Found: windows resource \\\"%.1024s\\\"\",id);\n  /*\n    Load resource into global memory (in WIN32, resources are already\n    in memory).\n  */\n  global=LoadResource(handle,resource);\n  if (!global)\n    return((unsigned char *) NULL);\n  /*\n    Obtain the size (in bytes) of the specified resource.\n  */\n  length=SizeofResource(handle,resource);\n  /*\n    Lock the resource in memory (really just dereferences an object\n    permanently in memory).\n  */\n  value=(unsigned char *) LockResource(global);\n  if (!value)\n    {\n      return((unsigned char *) NULL);\n    }\n  blob=MagickAllocateMemory(unsigned char *,length+1);\n  if (blob != (unsigned char *) NULL)\n    {\n      (void) memcpy(blob,value,length);\n      blob[length]='\\0';\n    }\n  return(blob);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n+   N T s t r e r r o r _ r                                                   %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTstrerror_r formats a returned Windows error code into a\n%   message string in a thread-safe manner.  MagickFail is returned if a\n%   message could not be found corresponding to the error code, otherwise\n%   MagickPass is returned.\n%\n%  The format of the NTstrerror_r method is:\n%\n%      MagickPassFail NTstrerror_r(LONG errnum, char *strerrbuf, size_t  buflen)\n%\n%  A description of each parameter follows:\n%\n%    o errnum: Windows error number\n%\n%    o strerrbuf: A buffer in which to write the message.\n%\n%    o buflen: The allocation length of the buffer.\n%\n*/\nstatic MagickPassFail\nNTstrerror_r(LONG errnum, char *strerrbuf, size_t  buflen)\n{\n  MagickPassFail\n    status;\n\n  LPVOID\n    buffer;\n\n  status=MagickFail;\n  if (buflen > 0)\n    strerrbuf[0]='\\0';\n  if (FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER |\n                    FORMAT_MESSAGE_FROM_SYSTEM,NULL,errnum,\n                    MAKELANGID(LANG_NEUTRAL,SUBLANG_DEFAULT),\n                    (LPTSTR) &buffer,0,NULL))\n    {\n      if (strlcpy(strerrbuf,buffer,buflen) < buflen)\n        {\n          size_t\n            index;\n\n          for (index=0; strerrbuf[index] != 0; index++)\n            if (strerrbuf[index] == '\\015')\n              strerrbuf[index]='\\0';\n          status=MagickPass;\n        }\n      LocalFree(buffer);\n    }\n  return status;\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T S y s t e m C o m m a n d                                             %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTSystemComman executes the specified command and waits until it\n%   terminates.  The returned value is the exit status of the command.\n%\n%  The format of the NTSystemComman method is:\n%\n%      int NTSystemComman(const char *command)\n%\n%  A description of each parameter follows:\n%\n%    o command: This string is the command to execute.\n%\n%\n*/\nMagickExport int NTSystemComman(const char *command)\n{\n  char\n    local_command[MaxTextExtent];\n\n  DWORD\n    child_status;\n\n  int\n    status;\n\n  PROCESS_INFORMATION\n    process_info;\n\n  STARTUPINFO\n    startup_info;\n\n  unsigned int\n    background_process;\n\n  if (command == (char *) NULL)\n    return(-1);\n  GetStartupInfo(&startup_info);\n  startup_info.dwFlags=STARTF_USESHOWWINDOW;\n  startup_info.wShowWindow=SW_SHOWMINNOACTIVE;\n  (void) strlcpy(local_command,command,MaxTextExtent);\n  background_process=command[strlen(command)-1] == '&';\n  if (background_process)\n    local_command[strlen(command)-1]='\\0';\n  if (command[strlen(command)-1] == '|')\n     local_command[strlen(command)-1]='\\0';\n   else\n     startup_info.wShowWindow=SW_SHOWDEFAULT;\n  status=CreateProcess((LPCTSTR) NULL,local_command,\n    (LPSECURITY_ATTRIBUTES) NULL,(LPSECURITY_ATTRIBUTES) NULL,(BOOL) FALSE,\n    (DWORD) NORMAL_PRIORITY_CLASS,(LPVOID) NULL,(LPCSTR) NULL,&startup_info,\n    &process_info);\n  if (status == 0)\n    return(-1);\n  if (background_process)\n    return(status == 0);\n\n#if 1\n  // This code has been used for years, but supposedly may\n  // cause problems in GUIs.\n  status=WaitForSingleObject(process_info.hProcess,INFINITE);\n  if (status != WAIT_OBJECT_0)\n    return (status);\n#else\n  // Following code doesn't work correctly yet\n  while(1)\n  {\n    // Wait for state change or message received\n    DWORD result=MsgWaitForMultipleObjects(1, &process_info.hProcess, FALSE,\n      INFINITE, QS_ALLEVENTS);\n    // Loop if return was due to message received (which we don't care about).\n    if (result == (WAIT_OBJECT_0+1))\n      continue;\n    // If return was due to handle state change, then object is available.\n    if ((result - WAIT_OBJECT_0) == 0)\n      break;\n   }\n#endif\n\n  status=GetExitCodeProcess(process_info.hProcess,&child_status);\n  if (status == 0)\n    return(-1);\n  CloseHandle(process_info.hProcess);\n  CloseHandle(process_info.hThread);\n  return((int) child_status);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T U s e r T i m e                                                       %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTUserTime returns the total time the process has been scheduled (i\n%  seconds) since the last call to StartTimer().\n%\n%  The format of the UserTime method is:\n%\n%      double NTUserTime(void)\n%\n%\n*/\nMagickExport double NTUserTime(void)\n{\n  DWORD\n    status;\n\n  FILETIME\n    create_time,\n    exit_time;\n\n  OSVERSIONINFO\n    OsVersionInfo;\n\n  union\n  {\n    FILETIME\n      filetime;\n\n    __int64\n      filetime64;\n  } kernel_time;\n\n  union\n  {\n    FILETIME\n      filetime;\n\n    __int64\n      filetime64;\n  } user_time;\n\n  OsVersionInfo.dwOSVersionInfoSize=sizeof(OSVERSIONINFO);\n  GetVersionEx(&OsVersionInfo);\n  if (OsVersionInfo.dwPlatformId != VER_PLATFORM_WIN32_NT)\n    return(NTElapsedTime());\n  status=GetProcessTimes(GetCurrentProcess(),&create_time,&exit_time,\n    &kernel_time.filetime,&user_time.filetime);\n  if (status != TRUE)\n    return(0.0);\n  return((double) 1.0e-7*(kernel_time.filetime64+user_time.filetime64));\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T W a r n i n g H a n d l e r                                           %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTWarningHandler displays a warning reason.\n%\n%  The format of the NTWarningHandler method is:\n%\n%      void NTWarningHandler(const ExceptionType warning,const char *reason,\n%        const char *description)\n%\n%  A description of each parameter follows:\n%\n%    o warning: Specifies the numeric warning category.\n%\n%    o reason: Specifies the reason to display before terminating the\n%      program.\n%\n%    o description: Specifies any description to the reason.\n%\n%\n*/\nMagickExport void NTWarningHandler(const ExceptionType warning,\n  const char *reason,const char *description)\n{\n  char\n    buffer[2*MaxTextExtent];\n\n  ARG_NOT_USED(warning);\n\n  if (reason == (char *) NULL)\n    return;\n  if (description == (char *) NULL)\n    FormatString(buffer,\"%.1024s: %.1024s.\\n\",\n      GetClientName(),reason);\n  else\n    FormatString(buffer,\"%.1024s: %.1024s (%.1024s).\\n\",\n      GetClientName(),reason,description);\n  (void) MessageBox(NULL,buffer,\"GraphicsMagick Warning\",MB_OK | MB_TASKMODAL |\n    MB_SETFOREGROUND | MB_ICONINFORMATION);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T f t r u n c a t e                                                     %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTftruncate truncates a file to the specified size.  If the file is\n%  longer than the specified size, it is shortened to the specified size. If\n%  the file is shorter than the specified size, it is extended to the\n%  specified size by filling with zeros.\n%  This is a POSIX compatability function.\n%\n%  The format of the NTftruncate method is:\n%\n%      int NTftruncate(int filedes, off_t length)\n%\n%  A description of each parameter follows:\n%\n%    o status: Zero is returned on successful completion. Otherwise -1\n%        is returned and errno is set to indicate the error.\n%\n%    o filedes: File descriptor from the _open() call.\n%\n%    o length: Desired file length.\n%\n*/\nMagickExport int NTftruncate(int filedes, off_t length)\n{\n  int\n    status;\n\n  magick_off_t\n    current_pos;\n\n  status=0;\n  current_pos=MagickTell(filedes);\n\n  /*\n    Truncate file to size, filling any extension with nulls.\n    Notice that this interface is limited to 2GB due to its\n    use of a 'long' offset. Ftruncate also has this shortcoming\n    if off_t is a 'long'.\n\n    A way to support more than 2GB is to use SetFilePointerEx()\n    to set the file position followed by SetEndOfFile() to set\n    the file EOF to the current file position. This approach does\n    not ensure that bytes in the extended portion are null.\n\n    The CreateFileMapping() function may also be used to extend a\n    file's length. The filler byte values are not defined in the\n    documentation.\n  */\n  status=chsize(filedes,length);\n\n  /*\n    It is not documented if _chsize preserves the seek\n    position, so restore the seek position like ftruncate\n    does\n  */\n  if (!status)\n    status=MagickSeek(filedes,current_pos,SEEK_SET);\n  return(status);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n+  N T m m a p                                                                %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTmmap emulates POSIX mmap. Supports PROT_READ, PROT_WRITE\n%  protection options, and MAP_SHARED, MAP_PRIVATE, MAP_ANON flags.\n%  Passing a file descriptor of -1 along with the MAP_ANON flag option returns\n%  a memory allocation from the system page file with the specified allocated\n%  length.\n%\n%  The format of the NTmmap method is:\n%\n%    MagickExport void *NTmmap(char *address, size_t length, int protection,\n%      int flags, int file, magick_off_t offset)\n%\n%\n*/\nMagickExport void *NTmmap(char *address,size_t length,int protection,int flags,\n  int file,magick_off_t offset)\n{\n  void\n    *map;\n\n  HANDLE\n    file_handle,\n    shmem_handle;\n\n  DWORD\n    length_low,\n    length_high,\n    offset_low,\n    offset_high;\n\n  DWORD\n    access_mode=0,\n    protection_mode=0;\n\n  ARG_NOT_USED(address);\n\n  map=(void *) NULL;\n  shmem_handle=INVALID_HANDLE_VALUE;\n  file_handle=INVALID_HANDLE_VALUE;\n\n  offset_low=(DWORD) (offset & 0xFFFFFFFFUL);\n  offset_high=(DWORD) ((offset >> 32) & 0xFFFFFFFFUL);\n\n  length_low=(DWORD) (length & 0xFFFFFFFFUL);\n  length_high=(DWORD) ((((magick_off_t) length) >> 32) & 0xFFFFFFFFUL);\n\n  if (protection & PROT_WRITE)\n    {\n      access_mode=FILE_MAP_WRITE;\n      if (flags & MAP_PRIVATE)\n        {\n          // Copy on write (updates are private)\n          access_mode=FILE_MAP_COPY;\n          protection_mode=PAGE_WRITECOPY;\n        }\n      else\n        {\n          // Updates are shared\n          protection_mode=PAGE_READWRITE;\n        }\n    }\n  else if (protection & PROT_READ)\n    {\n      access_mode=FILE_MAP_READ;\n      protection_mode=PAGE_READONLY;\n    }\n\n  if ((file == -1) && (flags & MAP_ANON))\n    // Similar to using mmap on /dev/zero to allocate memory from paging area.\n    file_handle=INVALID_HANDLE_VALUE;\n  else\n    file_handle=(HANDLE) _get_osfhandle(file);\n\n  shmem_handle=CreateFileMapping(file_handle,0,protection_mode,length_high,\n                                 length_low,0);\n  if (shmem_handle)\n    {\n      map=(void *) MapViewOfFile(shmem_handle,access_mode,offset_high,\n                                 offset_low,length);\n      CloseHandle(shmem_handle);\n    }\n\n  if (map == (void *) NULL)\n    return((void *) MAP_FAILED);\n  return((void *) ((char *) map));\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n+  N T m s y n c                                                              %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTmsync emulates the Unix msync function except that the flags\n%  argument is ignored. Windows page sync behaves mostly like MS_SYNC\n%  except that if the file is accessed over a network, the updates are not\n%  fully synchronous unless a special flag is provided when the file is\n%  opened.  It is not clear if flushing a range invalidates copy pages\n%  like Unix msync does.\n%\n%  The format of the NTmsync method is:\n%\n%      int NTmsync(void *addr, size_t len, int flags)\n%\n%  A description of each parameter follows:\n%\n%    o status:  Method NTmsync returns 0 on success; otherwise, it\n%      returns -1 and sets errno to indicate the error.\n%\n%    o addr: The address of the binary large object.\n%\n%    o len: The length of the binary large object.\n%\n%    o flags: Option flags (ignored for Windows)\n%\n%\n*/\nMagickExport int NTmsync(void *addr, size_t len, int flags)\n{\n  ARG_NOT_USED(flags);\n  if (!FlushViewOfFile(addr,len))\n    return(-1);\n  return(0);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T o p e n d i r                                                         %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTopendir opens the directory named by filename and associates\n%  a directory stream with it.\n%\n%  The format of the opendir method is:\n%\n%      DIR *NTopendir(const char *path)\n%\n%  A description of each parameter follows:\n%\n%    o entry: Specifies a pointer to a DIR structure.\n%\n%\n*/\nMagickExport DIR *NTopendir(const char *path)\n{\n  char\n    file_specification[MaxTextExtent];\n\n  DIR\n    *entry;\n\n  assert(path != (char *) NULL);\n  if (strlcpy(file_specification,path,MaxTextExtent) >= MaxTextExtent)\n    return (DIR *) NULL;;\n  if (strlcat(file_specification,DirectorySeparator,MaxTextExtent) >= MaxTextExtent)\n    return (DIR *) NULL;;\n  entry=MagickAllocateMemory(DIR *,sizeof(DIR));\n  if (entry != (DIR *) NULL)\n    {\n      entry->firsttime=TRUE;\n      entry->hSearch=FindFirstFile(file_specification,&entry->Win32FindData);\n    }\n  if (entry->hSearch == INVALID_HANDLE_VALUE)\n    {\n      if (strlcat(file_specification,\"\\\\*.*\",MaxTextExtent) >= MaxTextExtent)\n        {\n          MagickFreeMemory(entry);\n          return (DIR *) NULL;\n        }\n      entry->hSearch=FindFirstFile(file_specification,&entry->Win32FindData);\n      if (entry->hSearch == INVALID_HANDLE_VALUE)\n        {\n          MagickFreeMemory(entry);\n          return (DIR *) NULL;\n        }\n    }\n  return(entry);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T r e a d d i r                                                         %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%  Method NTreaddir returns a pointer to a structure representing the\n%  directory entry at the current position in the directory stream to\n%  which entry refers.\n%\n%  The format of the readdir\n%\n%      NTreaddir(entry)\n%\n%  A description of each parameter follows:\n%\n%    o entry: Specifies a pointer to a DIR structure.\n%\n%\n*/\nMagickExport struct dirent *NTreaddir(DIR *entry)\n{\n  int\n    status;\n\n  if (entry == (DIR *) NULL)\n    return ((struct dirent *) NULL);\n  if (!entry->firsttime)\n    {\n      status=FindNextFile(entry->hSearch,&entry->Win32FindData);\n      if (status == 0)\n        return ((struct dirent *) NULL);\n    }\n  if (strlcpy(entry->file_info.d_name,entry->Win32FindData.cFileName,\n              sizeof(entry->file_info.d_name)) >=\n      sizeof(entry->file_info.d_name))\n    return ((struct dirent *) NULL);\n  entry->firsttime=FALSE;\n  entry->file_info.d_namlen=(int) strlen(entry->file_info.d_name);\n  return (&entry->file_info);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T s e e k d i r                                                         %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTseekdir sets the position of the next NTreaddir() operation\n%   on the directory stream.\n%\n%  The format of the NTseekdir method is:\n%\n%      void NTseekdir(DIR *entry,long position)\n%\n%  A description of each parameter follows:\n%\n%    o entry: Specifies a pointer to a DIR structure.\n%\n%    o position: specifies the position associated with the directory\n%      stream.\n%\n%\n%\n*/\nMagickExport void NTseekdir(DIR *entry,long position)\n{\n  ARG_NOT_USED(position);\n  assert(entry != (DIR *) NULL);\n}\n\f\n/*\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%   N T t e l l d i r                                                         %\n%                                                                             %\n%                                                                             %\n%                                                                             %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n%   Method NTtelldir returns the current location associated  with  the\n%   named directory stream.\n%\n%  The format of the NTtelldir method is:\n%\n%      long NTtelldir(DIR *entry)\n%\n%  A description of each parameter follows:\n%\n%    o entry: Specifies a pointer to a DIR structure.\n%\n%\n*/\nMagickExport long NTtelldir(DIR *entry)\n{\n  assert(entry != (DIR *) NULL);\n  return(0);\n}\n#endif\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/ChangeLog.2008",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/ChangeLog.2006",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/NEWS.txt",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/ChangeLog.2009",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/ChangeLog.2012",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/wand/input_bilevel.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/wand/magick_wand.c",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/wand/input_256c.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/wand/sequence.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/wand/input_truecolor.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/wand/input_gray.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/tests/input_pallette.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/tests/input_bilevel.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/tests/input_truecolor16.dpx",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/tests/input_truecolor12.dpx",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/tests/input_truecolor10.dpx",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/tests/input_truecolor_70x46.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/tests/input_truecolor.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/tests/input_gray.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/demo/pink_flower.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/demo/model.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/demo/red_flower.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/demo/model.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/demo/yellow_flower.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/demo/smile.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/demo/tile.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/demo/Generic.ttf",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.pcx",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/topol_1.mez",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.pict",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.im1",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/topol_5.ras",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.dcx",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.pam",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_888.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_msb_double.fits",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input2_TC1.wpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.psd",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_rgb_16bit.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input2_8.wpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.art",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_jnx.jnx",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_8888.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.p7",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.mac",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_lsb_16bit.mat",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_70x46.gray",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.tim",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_24.tga",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/topol_2.mez",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_565.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_rgb_08bit_scan.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.sgi",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.im8",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_16.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_p7.p7",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_lsb_double.fits",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_msb_16bit.fits",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_04bit.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/topol_4.ras",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.dib",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_lsb_float.mat",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_70x46.cmyk",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_msb_32bit.fits",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_32.pct",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.tga",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.viff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_4444.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_p4.pbm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_08bit.fits",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.wbmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_888flip.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/topol_3.mez",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_rgb_16bit_rle.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/topol_1.ras",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_32bit.fits",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/MasterImage_70x46.ppm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.im24",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_rgb_08bit_cmap.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.sct",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/palm_std_colormap.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_lsb_double.mat",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_rgb_16bit_scan.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_rgb_08bit_rle.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/topol_4.mez",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_70x46.rgb",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_04bit_rle.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_lsb_double_V4.mat",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_01bit_rle.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/topol_3.ras",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_rgb_08bit_trans.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray.cin",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/topol_7.mez",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.mtv",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_16bit.fits",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_p6.ppm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_16.tga",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_01bit.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input1_4.wpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.gif87",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray.rle",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.ico",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_msb_08bit.mat",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_1555.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_rgb_08bit.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/topol_4.pal",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_lsb_08bit.mat",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_01bit_scan.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_02bit.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_msb_float.fits",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_02bit_rle.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_rgb_16bit_trans.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/topol_2.ras",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.rle",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_rgb.rla",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_70x46.rgba",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_matte.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_32.tga",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/topol_7.ras",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_04bit_scan.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray.rla",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_16.pct",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input1_8_1.wpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input2_4.wpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_rgb_lsb_08bit.mat",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_70x46.uyvy",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_rgb.cin",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_complex_lsb_double_V4.mat",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.avs",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_lsb_32bit.mat",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_p5.pgm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/topol_2.pal",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.pxr",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_32rle.tga",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_16rle.tga",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.xwd",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_02bit_scan.palm",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_24rle.tga",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_70x46.yuv",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.bmp24",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input_gray_msb_64bit.fits",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/input.bie",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/bzlib/input.miff.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/bzlib/input.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/ttf/input.ttf",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/rad/input.rad",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/wmf/fulltest.wmf",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/wmf/ski.wmf",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/wmf/clock.wmf",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/wmf/wizard.wmf",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/wmf/fjftest.wmf",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jp2/input.pgx",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jp2/input.jp2",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jp2/input.jpc",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jpeg/input.sfw",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jpeg/input_plane.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jpeg/input.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jpeg/input.jnx",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/zlib/input.miff.gz",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/zlib/input.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/zlib/input_gray_lsb_08bit_zip.mat",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/fpx/input_truecolor.fpx",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/fpx/input_grayscale.fpx",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/fpx/input_jpeg.fpx",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/fpx/input_256.fpx",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/fpx/input_bw.fpx",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/mpeg/input.m2v",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/mpeg/input.mpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jng/input_gray.jng",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jng/input_prog.jng",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jng/input_prog_jdaa.jng",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jng/input_gray_jdaa.jng",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jng/input_jdaa.jng",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jng/input_prog_idat.jng",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jng/input_gray_idat.jng",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jng/input_rose.jng",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jng/input_gray_prog_idat.jng",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jng/input_idat.jng",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jng/input_gray_prog.jng",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jng/input_gray_prog_jdaa.jng",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/png/input.mng",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/png/input_mono.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/png/input_256.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/png/input_16.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/png/input_truecolor.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/png/input_bw.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/write/output_p7.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/ttf/annotate.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/ttf/read.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/ttf/label.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/wmf/clock.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/wmf/fjftest.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/wmf/wizard.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/wmf/ski.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jp2/read_jp2.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jp2/read_pgx.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jp2/read_jpc.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jpeg/read_non_interlaced.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jpeg/read_plane_interlaced.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jpeg/write_plane_interlaced.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jpeg/read_sfw.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jpeg/read_jnx.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jpeg/write_non_interlaced.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_rle.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_msb_08bit_mat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_cin.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_lsb_double_V4_mat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_mtv.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_mac.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_ppm_p3.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_msb_64bit_fits.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_wbmp.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_sgi.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/topol_3.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_tile.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/granite.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_dcx.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_im8.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_logical_lsb_08bit_mat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_msb_float_fits.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_bmp.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_uyvy.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_pgm_p5.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/topol_5.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_ico.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input2_TC1_wpg.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_rgb.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_p7.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_rgb_cin.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_pict.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_lsb_double_fits.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_rgb_lsb_08bit_mat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_rle.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_rgb_rla.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_psd.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_cmyk.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_msb_double_fits.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_16bit_fits.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_xwd.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_ppm_p6.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_viff.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_08bit_fits.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_lsb_double_mat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_lsb_16bit_mat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_rla.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_msb_32bit_fits.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input2_8_wpg.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_bmp24.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_32bit_fits.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_pbm_p1.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_lsb_32bit_mat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_xbm.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_lsb_08bit_mat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_pcx.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_im24.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gif.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_msb_16bit_fits.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/topol_2.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input1_8_1_wpg.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_pbm_p4.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input1_4_wpg.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_rgba.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_null_DarkOrange.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_im1.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/gradient.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/topol_1.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_null_white.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gif87.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/topol_7.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_pgm_p2.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_dib.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_xpm.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_avs.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_tim.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_tga.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_miff.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/topol_4.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_hrz.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/read/input_gray_lsb_float_mat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/cgm/read.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Negate.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Rotate0.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Roll.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Emboss.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/MatteFloodfill.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Chop.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/OilPaint.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Flip.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Colorize.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Equalize.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Edge.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Opaque.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Modulate.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Flop.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Shave.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Channel.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Rotate270.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Wave.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Solarize.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Frame.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Magnify.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Implode.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Contrast.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Despeckle.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Scale.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/MotionBlur.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Sample.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Border.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Rotate180.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Swirl.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/ColorFloodfill.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Shear.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Threshold.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Rotate90.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Minify.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/UnsharpMask.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Normalize.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Convolve.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Rotate10.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Sharpen.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Resize.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Quantize.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Blur.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Trim.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Gamma.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Shade.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/filter/Raise.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/CopyRed.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Difference.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/CopyGreen.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Divide.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Atop.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Clear.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/CopyBlue.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Multiply.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/In.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Add.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Xor.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Out.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Dissolve.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Minus.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Copy.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Plus.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Bumpmap.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Subtract.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/Over.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/composite/CopyOpacity.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/write_gray.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/read_gray.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/write_prog_idat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/read_gray_prog_jdaa.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/write_prog_jdaa.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/write_gray_prog_jdaa.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/read_gray_prog.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/read_jdaa.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/read_idat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/read_prog_idat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/write_gray_jdaa.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/read_prog.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/write_gray_idat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/read_gray_jdaa.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/write_prog.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/read_gray_prog_idat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/write_gray_prog_idat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/write_idat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/write_gray_prog.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/write_jdaa.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/read_gray_idat.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/reference/jng/read_prog_jdaa.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/ps/input.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/x/congrats.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_truecolor_08_stripped.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_gray_01bit_minwhite.cals",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_truecolor_08_tiled32x32.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_palette_256.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_truecolor_10.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_gray_08bit.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_gray_16bit.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_gray_04bit.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_gray_10bit.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_truecolor_08.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_truecolor_08_matte.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_gray_04bit_matte.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_truecolor_14.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_gray_32bit.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_gray_01bit_minwhite.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_gray_08bit_matte.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_gray_14bit.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_truecolor_16.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_gray_12bit.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_palette_256_planar_separate.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_truecolor_32.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_palette_256_planar_contig.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_palette_16.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_truecolor_08_planar.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_palette_256_matte.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_palette_16_matte.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/tiff/input_truecolor_12.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/jbig/input.jbig",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/hdf/input_256.hdf",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/PerlMagick/t/hdf/input_truecolor.hdf",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/utilities/tests/sunrise.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/utilities/tests/sunrise.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/utilities/tests/BetaRGB.icc",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/Magick++/demo/model.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/Magick++/demo/smile_anim.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/Magick++/demo/smile.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/Magick++/demo/tile.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/Magick++/tests/test_image.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/Magick++/tests/test_image_anim.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/images/tclmagick-big-diff.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/images/tclmagick.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/images/tclmagick-small.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/images/clippath.tif",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/images/tclmagick-small-copy.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/images/map6colors.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/images/pool.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/images/tclmagick-small.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/images/tclmagick-small-diff.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/images/sequence.miff",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/win/TkMagick.dsp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/win/TclMagick.dsw",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/win/TclMagick.dsp",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/TclMagick/doc/license.txt",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/ChangeLog-2006.rst",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/authors.rst",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/ChangeLog-2009.rst",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/favicon.ico",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/configure-target-setup.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/thanks.rst",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/ChangeLog-2012.rst",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/ChangeLog-2008.rst",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/right_triangle_option.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/ball.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/gm-107x76.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/right_triangle.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/gm-125x80t.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/banner_bg.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/gm-107x76.gif",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/left30.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/bricks.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/octagons.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/left45.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/fishscales.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/hs_cross.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/granite.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray30.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray40.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/verticalleftshingle.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray50.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/vertical.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/hs_bdiagonal.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/right30.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/hs_vertical.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/hexagons.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/rightshingle.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/circles.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray75.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/horizontalsaw.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/verticalsaw.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/horizontal.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray45.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray5.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray90.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray15.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/right45.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/verticalbricks.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray95.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray70.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/leftshingle.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray20.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/checkerboard.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray0.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray80.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray85.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/smallfishscales.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/rose.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray100.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray55.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray35.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/crosshatch.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/crosshatch30.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray25.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/verticalrightshingle.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/hs_horizontal.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray10.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/hs_fdiagonal.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/crosshatch45.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/hs_diagcross.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray60.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/images/patterns/gray65.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/Magick++/thumbnail-anatomy-framed.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/Magick++/thumbnail-sample-framed.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/Magick++/right_triangle.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/Magick++/montage-sample-framed.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/Magick++/thumbnail-anatomy-plain.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/Magick++/gm-188x120t.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/Magick++/Drawable_example_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/Magick++/thumbnail-sample-plain.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/Magick++/Cache.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/www/Magick++/Image.png",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/magick/cdl.h",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/magick/hclut.c",
        "/tmp/vanessa/spack-stage/spack-stage-graphicsmagick-1.3.33-ho6bjlbakar4upbalk4yeyxri72iq67z/spack-src/magick/cdl.c"
    ],
    "total_files": 1298
}