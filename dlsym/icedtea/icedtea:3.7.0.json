{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/patches/hotspot/aarch32/8181055-pr3394-rh1448880.patch": "# HG changeset patch\n# User zgu\n# Date 1499204074 -3600\n#      Tue Jul 04 22:34:34 2017 +0100\n# Node ID 13a04e8df5a3af73794146b930b32556c7cbc5b0\n# Parent  4dc64f3c3e2342970f091a1a73165a3e2a0c2f88\n8181055, PR3394, RH1448880: PPC64: \"mbind: Invalid argument\" still seen after 8175813\nSummary: Use numa_interleave_memory v2 api when available\nReviewed-by: dholmes, shade, gromero\n\ndiff -Nru openjdk.orig/hotspot/src/os/linux/vm/os_linux.cpp openjdk/hotspot/src/os/linux/vm/os_linux.cpp\n--- openjdk.orig/hotspot/src/os/linux/vm/os_linux.cpp\t2018-01-22 17:40:29.680271971 +0000\n+++ openjdk/hotspot/src/os/linux/vm/os_linux.cpp\t2018-01-22 17:41:32.607262105 +0000\n@@ -2827,11 +2827,8 @@\n extern \"C\" JNIEXPORT void numa_error(char *where) { }\n extern \"C\" JNIEXPORT int fork1() { return fork(); }\n \n-\n-// If we are running with libnuma version > 2, then we should\n-// be trying to use symbols with versions 1.1\n-// If we are running with earlier version, which did not have symbol versions,\n-// we should use the base version.\n+// Handle request to load libnuma symbol version 1.1 (API v1). If it fails\n+// load symbol from base version instead.\n void* os::Linux::libnuma_dlsym(void* handle, const char *name) {\n #ifndef __UCLIBC__\n   void *f = dlvsym(handle, name, \"libnuma_1.1\");\n@@ -2844,6 +2841,12 @@\n #endif\n }\n \n+// Handle request to load libnuma symbol version 1.2 (API v2) only.\n+// Return NULL if the symbol is not defined in this particular version.\n+void* os::Linux::libnuma_v2_dlsym(void* handle, const char* name) {\n+  return dlvsym(handle, name, \"libnuma_1.2\");\n+}\n+\n bool os::Linux::libnuma_init() {\n   // sched_getcpu() should be in libc.\n   set_sched_getcpu(CAST_TO_FN_PTR(sched_getcpu_func_t,\n@@ -2868,6 +2871,8 @@\n                                             libnuma_dlsym(handle, \"numa_tonode_memory\")));\n       set_numa_interleave_memory(CAST_TO_FN_PTR(numa_interleave_memory_func_t,\n                                                 libnuma_dlsym(handle, \"numa_interleave_memory\")));\n+      set_numa_interleave_memory_v2(CAST_TO_FN_PTR(numa_interleave_memory_v2_func_t,\n+                                                libnuma_v2_dlsym(handle, \"numa_interleave_memory\")));\n       set_numa_set_bind_policy(CAST_TO_FN_PTR(numa_set_bind_policy_func_t,\n                                               libnuma_dlsym(handle, \"numa_set_bind_policy\")));\n       set_numa_bitmask_isbitset(CAST_TO_FN_PTR(numa_bitmask_isbitset_func_t,\n@@ -2987,6 +2992,7 @@\n os::Linux::numa_available_func_t os::Linux::_numa_available;\n os::Linux::numa_tonode_memory_func_t os::Linux::_numa_tonode_memory;\n os::Linux::numa_interleave_memory_func_t os::Linux::_numa_interleave_memory;\n+os::Linux::numa_interleave_memory_v2_func_t os::Linux::_numa_interleave_memory_v2;\n os::Linux::numa_set_bind_policy_func_t os::Linux::_numa_set_bind_policy;\n os::Linux::numa_bitmask_isbitset_func_t os::Linux::_numa_bitmask_isbitset;\n os::Linux::numa_distance_func_t os::Linux::_numa_distance;\ndiff -Nru openjdk.orig/hotspot/src/os/linux/vm/os_linux.hpp openjdk/hotspot/src/os/linux/vm/os_linux.hpp\n--- openjdk.orig/hotspot/src/os/linux/vm/os_linux.hpp\t2018-01-22 17:40:29.448275695 +0000\n+++ openjdk/hotspot/src/os/linux/vm/os_linux.hpp\t2018-01-22 17:40:55.547856843 +0000\n@@ -192,6 +192,8 @@\n   static void libpthread_init();\n   static bool libnuma_init();\n   static void* libnuma_dlsym(void* handle, const char* name);\n+  // libnuma v2 (libnuma_1.2) symbols\n+  static void* libnuma_v2_dlsym(void* handle, const char* name);\n   // Minimum stack size a thread can be created with (allowing\n   // the VM to completely create the thread and enter user code)\n   static size_t min_stack_allowed;\n@@ -252,6 +254,8 @@\n   typedef int (*numa_available_func_t)(void);\n   typedef int (*numa_tonode_memory_func_t)(void *start, size_t size, int node);\n   typedef void (*numa_interleave_memory_func_t)(void *start, size_t size, unsigned long *nodemask);\n+  typedef void (*numa_interleave_memory_v2_func_t)(void *start, size_t size, struct bitmask* mask);\n+\n   typedef void (*numa_set_bind_policy_func_t)(int policy);\n   typedef int (*numa_bitmask_isbitset_func_t)(struct bitmask *bmp, unsigned int n);\n   typedef int (*numa_distance_func_t)(int node1, int node2);\n@@ -263,6 +267,7 @@\n   static numa_available_func_t _numa_available;\n   static numa_tonode_memory_func_t _numa_tonode_memory;\n   static numa_interleave_memory_func_t _numa_interleave_memory;\n+  static numa_interleave_memory_v2_func_t _numa_interleave_memory_v2;\n   static numa_set_bind_policy_func_t _numa_set_bind_policy;\n   static numa_bitmask_isbitset_func_t _numa_bitmask_isbitset;\n   static numa_distance_func_t _numa_distance;\n@@ -277,6 +282,7 @@\n   static void set_numa_available(numa_available_func_t func) { _numa_available = func; }\n   static void set_numa_tonode_memory(numa_tonode_memory_func_t func) { _numa_tonode_memory = func; }\n   static void set_numa_interleave_memory(numa_interleave_memory_func_t func) { _numa_interleave_memory = func; }\n+  static void set_numa_interleave_memory_v2(numa_interleave_memory_v2_func_t func) { _numa_interleave_memory_v2 = func; }\n   static void set_numa_set_bind_policy(numa_set_bind_policy_func_t func) { _numa_set_bind_policy = func; }\n   static void set_numa_bitmask_isbitset(numa_bitmask_isbitset_func_t func) { _numa_bitmask_isbitset = func; }\n   static void set_numa_distance(numa_distance_func_t func) { _numa_distance = func; }\n@@ -298,7 +304,10 @@\n     return _numa_tonode_memory != NULL ? _numa_tonode_memory(start, size, node) : -1;\n   }\n   static void numa_interleave_memory(void *start, size_t size) {\n-    if (_numa_interleave_memory != NULL && _numa_all_nodes != NULL) {\n+    // Use v2 api if available\n+    if (_numa_interleave_memory_v2 != NULL && _numa_all_nodes_ptr != NULL) {\n+      _numa_interleave_memory_v2(start, size, _numa_all_nodes_ptr);\n+    } else if (_numa_interleave_memory != NULL && _numa_all_nodes != NULL) {\n       _numa_interleave_memory(start, size, _numa_all_nodes);\n     }\n   }\n",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/patches/hotspot/shenandoah/8181055-pr3394-rh1448880.patch": "# HG changeset patch\n# User zgu\n# Date 1499204074 -3600\n#      Tue Jul 04 22:34:34 2017 +0100\n# Node ID 13a04e8df5a3af73794146b930b32556c7cbc5b0\n# Parent  4dc64f3c3e2342970f091a1a73165a3e2a0c2f88\n8181055, PR3394, RH1448880: PPC64: \"mbind: Invalid argument\" still seen after 8175813\nSummary: Use numa_interleave_memory v2 api when available\nReviewed-by: dholmes, shade, gromero\n\ndiff -r 4dc64f3c3e23 -r 13a04e8df5a3 src/os/linux/vm/os_linux.cpp\n--- openjdk/hotspot/src/os/linux/vm/os_linux.cpp\n+++ openjdk/hotspot/src/os/linux/vm/os_linux.cpp\n@@ -2830,11 +2830,8 @@\n extern \"C\" JNIEXPORT void numa_error(char *where) { }\n extern \"C\" JNIEXPORT int fork1() { return fork(); }\n \n-\n-// If we are running with libnuma version > 2, then we should\n-// be trying to use symbols with versions 1.1\n-// If we are running with earlier version, which did not have symbol versions,\n-// we should use the base version.\n+// Handle request to load libnuma symbol version 1.1 (API v1). If it fails\n+// load symbol from base version instead.\n void* os::Linux::libnuma_dlsym(void* handle, const char *name) {\n   void *f = dlvsym(handle, name, \"libnuma_1.1\");\n   if (f == NULL) {\n@@ -2843,6 +2840,12 @@\n   return f;\n }\n \n+// Handle request to load libnuma symbol version 1.2 (API v2) only.\n+// Return NULL if the symbol is not defined in this particular version.\n+void* os::Linux::libnuma_v2_dlsym(void* handle, const char* name) {\n+  return dlvsym(handle, name, \"libnuma_1.2\");\n+}\n+\n bool os::Linux::libnuma_init() {\n   // sched_getcpu() should be in libc.\n   set_sched_getcpu(CAST_TO_FN_PTR(sched_getcpu_func_t,\n@@ -2867,6 +2870,8 @@\n                                             libnuma_dlsym(handle, \"numa_tonode_memory\")));\n       set_numa_interleave_memory(CAST_TO_FN_PTR(numa_interleave_memory_func_t,\n                                                 libnuma_dlsym(handle, \"numa_interleave_memory\")));\n+      set_numa_interleave_memory_v2(CAST_TO_FN_PTR(numa_interleave_memory_v2_func_t,\n+                                                libnuma_v2_dlsym(handle, \"numa_interleave_memory\")));\n       set_numa_set_bind_policy(CAST_TO_FN_PTR(numa_set_bind_policy_func_t,\n                                               libnuma_dlsym(handle, \"numa_set_bind_policy\")));\n       set_numa_bitmask_isbitset(CAST_TO_FN_PTR(numa_bitmask_isbitset_func_t,\n@@ -2986,6 +2991,7 @@\n os::Linux::numa_available_func_t os::Linux::_numa_available;\n os::Linux::numa_tonode_memory_func_t os::Linux::_numa_tonode_memory;\n os::Linux::numa_interleave_memory_func_t os::Linux::_numa_interleave_memory;\n+os::Linux::numa_interleave_memory_v2_func_t os::Linux::_numa_interleave_memory_v2;\n os::Linux::numa_set_bind_policy_func_t os::Linux::_numa_set_bind_policy;\n os::Linux::numa_bitmask_isbitset_func_t os::Linux::_numa_bitmask_isbitset;\n os::Linux::numa_distance_func_t os::Linux::_numa_distance;\ndiff -r 4dc64f3c3e23 -r 13a04e8df5a3 src/os/linux/vm/os_linux.hpp\n--- openjdk/hotspot/src/os/linux/vm/os_linux.hpp\n+++ openjdk/hotspot/src/os/linux/vm/os_linux.hpp\n@@ -190,6 +190,8 @@\n   static void libpthread_init();\n   static bool libnuma_init();\n   static void* libnuma_dlsym(void* handle, const char* name);\n+  // libnuma v2 (libnuma_1.2) symbols\n+  static void* libnuma_v2_dlsym(void* handle, const char* name);\n   // Minimum stack size a thread can be created with (allowing\n   // the VM to completely create the thread and enter user code)\n   static size_t min_stack_allowed;\n@@ -250,6 +252,8 @@\n   typedef int (*numa_available_func_t)(void);\n   typedef int (*numa_tonode_memory_func_t)(void *start, size_t size, int node);\n   typedef void (*numa_interleave_memory_func_t)(void *start, size_t size, unsigned long *nodemask);\n+  typedef void (*numa_interleave_memory_v2_func_t)(void *start, size_t size, struct bitmask* mask);\n+\n   typedef void (*numa_set_bind_policy_func_t)(int policy);\n   typedef int (*numa_bitmask_isbitset_func_t)(struct bitmask *bmp, unsigned int n);\n   typedef int (*numa_distance_func_t)(int node1, int node2);\n@@ -261,6 +265,7 @@\n   static numa_available_func_t _numa_available;\n   static numa_tonode_memory_func_t _numa_tonode_memory;\n   static numa_interleave_memory_func_t _numa_interleave_memory;\n+  static numa_interleave_memory_v2_func_t _numa_interleave_memory_v2;\n   static numa_set_bind_policy_func_t _numa_set_bind_policy;\n   static numa_bitmask_isbitset_func_t _numa_bitmask_isbitset;\n   static numa_distance_func_t _numa_distance;\n@@ -275,6 +280,7 @@\n   static void set_numa_available(numa_available_func_t func) { _numa_available = func; }\n   static void set_numa_tonode_memory(numa_tonode_memory_func_t func) { _numa_tonode_memory = func; }\n   static void set_numa_interleave_memory(numa_interleave_memory_func_t func) { _numa_interleave_memory = func; }\n+  static void set_numa_interleave_memory_v2(numa_interleave_memory_v2_func_t func) { _numa_interleave_memory_v2 = func; }\n   static void set_numa_set_bind_policy(numa_set_bind_policy_func_t func) { _numa_set_bind_policy = func; }\n   static void set_numa_bitmask_isbitset(numa_bitmask_isbitset_func_t func) { _numa_bitmask_isbitset = func; }\n   static void set_numa_distance(numa_distance_func_t func) { _numa_distance = func; }\n@@ -296,7 +302,10 @@\n     return _numa_tonode_memory != NULL ? _numa_tonode_memory(start, size, node) : -1;\n   }\n   static void numa_interleave_memory(void *start, size_t size) {\n-    if (_numa_interleave_memory != NULL && _numa_all_nodes != NULL) {\n+    // Use v2 api if available\n+    if (_numa_interleave_memory_v2 != NULL && _numa_all_nodes_ptr != NULL) {\n+      _numa_interleave_memory_v2(start, size, _numa_all_nodes_ptr);\n+    } else if (_numa_interleave_memory != NULL && _numa_all_nodes != NULL) {\n       _numa_interleave_memory(start, size, _numa_all_nodes);\n     }\n   }\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/tool/i18n.properties",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/tool/images/jtlogo.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/tool/images/jticon.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/tool/images/splash.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/audit/images/dotdotdot.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/mrep/images/dotdotdot.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/mrep/images/Back16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/mrep/images/Home16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/mrep/images/Forward16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Preferences16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Help16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Up16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/SaveAs24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/UpDir.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/question.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/FindAgain24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/snooze.sm.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Pause24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Preferences24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Down16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Down24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Back24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/FastForward16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Help24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Play24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Last16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Dir.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Pause16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/stream.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Back16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Home16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Save24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/drop-down.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Forward16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/SaveAs16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Forward24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Find16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Edit24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/fullView.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/stdView.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Stop24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/magnify.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/FindAgain16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Save16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Play16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Find24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Print16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Print24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Stop16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Edit16.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Home24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/exec/images/Up24.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/javatest/agent/jticon.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/interview/wizard/back.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/interview/wizard/next.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/interview/wizard/done.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/interview/wizard/blank.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/interview/wizard/history.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/interview/wizard/find.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/interview/wizard/cancel.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/interview/wizard/arrow.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/interview/wizard/info.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/test/jtreg/com/sun/interview/wizard/check.gif",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/overlays/openjdk/jdk/test/closed/sun/security/rsa/keystore.bad",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/overlays/openjdk/jdk/test/closed/sun/security/rsa/keystore.good",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/overlays/openjdk/jdk/test/com/sun/media/sound/SoftSynthesizer/expresso.mid",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/overlays/openjdk/jdk/test/com/sun/media/sound/SoftSynthesizer/ding.sf2",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/overlays/openjdk/jdk/test/com/sun/media/sound/SF2SoundbankReader/ding.sf2",
        "/tmp/vanessa/spack-stage/spack-stage-icedtea-3.7.0-zuer35u6yvqcpve5jzighmegz4a26fpi/spack-src/overlays/openjdk/jdk/test/com/sun/media/sound/DLSSoundbankReader/ding.dls"
    ],
    "total_files": 781
}