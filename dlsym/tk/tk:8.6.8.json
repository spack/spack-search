{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/macosx/tkMacOSXInit.c": "/*\n * tkMacOSXInit.c --\n *\n *\tThis file contains Mac OS X -specific interpreter initialization\n *\tfunctions.\n *\n * Copyright (c) 1995-1997 Sun Microsystems, Inc.\n * Copyright 2001-2009, Apple Inc.\n * Copyright (c) 2005-2009 Daniel A. Steffen <das@users.sourceforge.net>\n * Copyright (c) 2017 Marc Culler\n *\n * See the file \"license.terms\" for information on usage and redistribution of\n * this file, and for a DISCLAIMER OF ALL WARRANTIES.\n */\n\n#include \"tkMacOSXPrivate.h\"\n\n#include <sys/stat.h>\n#include <sys/utsname.h>\n#include <dlfcn.h>\n#include <objc/objc-auto.h>\n\nstatic char tkLibPath[PATH_MAX + 1] = \"\";\n\n/*\n * If the App is in an App package, then we want to add the Scripts directory\n * to the auto_path.\n */\n\nstatic char scriptPath[PATH_MAX + 1] = \"\";\n\nlong tkMacOSXMacOSXVersion = 0;\n\n#pragma mark TKApplication(TKInit)\n\n@interface TKApplication(TKKeyboard)\n- (void) keyboardChanged: (NSNotification *) notification;\n@end\n\n#define TKApplication_NSApplicationDelegate <NSApplicationDelegate>\n@interface TKApplication(TKWindowEvent) TKApplication_NSApplicationDelegate\n- (void) _setupWindowNotifications;\n@end\n\n@interface TKApplication(TKMenus)\n- (void) _setupMenus;\n@end\n\n@implementation TKApplication\n@synthesize poolLock = _poolLock;\n@end\n\n/*\n * #define this to see a message on stderr whenever _resetAutoreleasePool is\n * called while the pool is locked.\n */\n#undef DEBUG_LOCK\n\n@implementation TKApplication(TKInit)\n- (void) _resetAutoreleasePool\n{\n    if([self poolLock] == 0) {\n\t[_mainPool drain];\n\t_mainPool = [NSAutoreleasePool new];\n    } else {\n#ifdef DEBUG_LOCK\n\tfprintf(stderr, \"Pool is locked with count %d!!!!\\n\", [self poolLock]);\n#endif\n    }\n}\n- (void) _lockAutoreleasePool\n{\n    [self setPoolLock:[self poolLock] + 1];\n}\n- (void) _unlockAutoreleasePool\n{\n    [self setPoolLock:[self poolLock] - 1];\n}\n#ifdef TK_MAC_DEBUG_NOTIFICATIONS\n- (void) _postedNotification: (NSNotification *) notification\n{\n    TKLog(@\"-[%@(%p) %s] %@\", [self class], self, _cmd, notification);\n}\n#endif\n\n- (void) _setupApplicationNotifications\n{\n    NSNotificationCenter *nc = [NSNotificationCenter defaultCenter];\n#define observe(n, s) \\\n\t[nc addObserver:self selector:@selector(s) name:(n) object:nil]\n    observe(NSApplicationDidBecomeActiveNotification, applicationActivate:);\n    observe(NSApplicationDidResignActiveNotification, applicationDeactivate:);\n    observe(NSApplicationDidUnhideNotification, applicationShowHide:);\n    observe(NSApplicationDidHideNotification, applicationShowHide:);\n    observe(NSApplicationDidChangeScreenParametersNotification, displayChanged:);\n    observe(NSTextInputContextKeyboardSelectionDidChangeNotification, keyboardChanged:);\n#undef observe\n}\n\n-(void)applicationWillFinishLaunching:(NSNotification *)aNotification\n{\n\n    /*\n     * Initialize notifications.\n     */\n#ifdef TK_MAC_DEBUG_NOTIFICATIONS\n    [[NSNotificationCenter defaultCenter] addObserver:self\n\t    selector:@selector(_postedNotification:) name:nil object:nil];\n#endif\n    [self _setupWindowNotifications];\n    [self _setupApplicationNotifications];\n\n    /*\n     * Construct the menu bar.\n     */\n    _defaultMainMenu = nil;\n    [self _setupMenus];\n\n\n    /*\n     * Initialize event processing.\n     */\n    TkMacOSXInitAppleEvents(_eventInterp);\n\n    /*\n     * Initialize the graphics context.\n     */\n    TkMacOSXUseAntialiasedText(_eventInterp, -1);\n    TkMacOSXInitCGDrawing(_eventInterp, TRUE, 0);\n}\n\n-(void)applicationDidFinishLaunching:(NSNotification *)notification\n{\n    /*\n     * It is not safe to force activation of the NSApp until this\n     * method is called.  Activating too early can cause the menu\n     * bar to be unresponsive.\n     */\n    [NSApp activateIgnoringOtherApps: YES];\n}\n\n- (void) _setup: (Tcl_Interp *) interp\n{\n    /*\n     * Remember our interpreter.\n     */\n    _eventInterp = interp;\n\n    /*\n     * Install the global autoreleasePool.\n     */\n    _mainPool = [NSAutoreleasePool new];\n    [NSApp setPoolLock:0];\n\n    /*\n     * Be our own delegate.\n     */\n    [self setDelegate:self];\n\n    /*\n     * Make sure we are allowed to open windows.\n     */\n    [NSApp setActivationPolicy:NSApplicationActivationPolicyRegular];\n\n    /*\n     * If no icon has been set from an Info.plist file, use the Wish icon from\n     * the Tk framework.\n     */\n    NSString *iconFile = [[NSBundle mainBundle] objectForInfoDictionaryKey:\n\t\t\t\t\t\t    @\"CFBundleIconFile\"];\n    if (!iconFile) {\n\tNSString *path = [NSApp tkFrameworkImagePath:@\"Tk.icns\"];\n\tif (path) {\n\t    NSImage *image = [[NSImage alloc] initWithContentsOfFile:path];\n\t    if (image) {\n\t\t[NSApp setApplicationIconImage:image];\n\t\t[image release];\n\t    }\n\t}\n    }\n}\n\n- (NSString *) tkFrameworkImagePath: (NSString *) image\n{\n    NSString *path = nil;\n    NSAutoreleasePool *pool = [NSAutoreleasePool new];\n    if (tkLibPath[0] != '\\0') {\n\tpath = [[NSBundle bundleWithPath:[[NSString stringWithUTF8String:\n\t\ttkLibPath] stringByAppendingString:@\"/../..\"]]\n\t\tpathForImageResource:image];\n    }\n    if (!path) {\n\tconst char *tk_library = Tcl_GetVar2(_eventInterp, \"tk_library\", NULL,\n\t\tTCL_GLOBAL_ONLY);\n\n\tif (tk_library) {\n\t    NSFileManager *fm = [NSFileManager defaultManager];\n\n\t    path = [[NSString stringWithUTF8String:tk_library]\n\t\t    stringByAppendingFormat:@\"/%@\", image];\n\t    if (![fm isReadableFileAtPath:path]) {\n\t\tpath = [[NSString stringWithUTF8String:tk_library]\n\t\t\tstringByAppendingFormat:@\"/../macosx/%@\", image];\n\t\tif (![fm isReadableFileAtPath:path]) {\n\t\t    path = nil;\n\t\t}\n\t    }\n\t}\n    }\n#ifdef TK_MAC_DEBUG\n    if (!path && getenv(\"TK_SRCROOT\")) {\n\tpath = [[NSString stringWithUTF8String:getenv(\"TK_SRCROOT\")]\n\t\tstringByAppendingFormat:@\"/macosx/%@\", image];\n\tif (![[NSFileManager defaultManager] isReadableFileAtPath:path]) {\n\t    path = nil;\n\t}\n    }\n#endif\n    [path retain];\n    [pool drain];\n    return path;\n}\n@end\n\n#pragma mark -\n\f\n/*\n *----------------------------------------------------------------------\n *\n * TkpInit --\n *\n *\tPerforms Mac-specific interpreter initialization related to the\n *\ttk_library variable.\n *\n * Results:\n *\tReturns a standard Tcl result. Leaves an error message or result in\n *\tthe interp's result.\n *\n * Side effects:\n *\tSets \"tk_library\" Tcl variable, runs \"tk.tcl\" script.\n *\n *----------------------------------------------------------------------\n */\n\nint\nTkpInit(\n    Tcl_Interp *interp)\n{\n    static int initialized = 0;\n\n    /*\n     * Since it is possible for TkInit to be called multiple times and we\n     * don't want to do the following initialization multiple times we protect\n     * against doing it more than once.\n     */\n\n    if (!initialized) {\n\tstruct utsname name;\n\tstruct stat st;\n\n\tinitialized = 1;\n\n\t/*\n\t * Initialize/check OS version variable for runtime checks.\n\t */\n\n#if MAC_OS_X_VERSION_MIN_REQUIRED < 1060\n#   error Mac OS X 10.6 required\n#endif\n\n\tif (!uname(&name)) {\n\t    tkMacOSXMacOSXVersion = (strtod(name.release, NULL) + 96) * 10;\n\t}\n       /*Check for new versioning scheme on Yosemite (10.10) and later.*/\n\tif (MAC_OS_X_VERSION_MIN_REQUIRED > 100000) {\n\t\ttkMacOSXMacOSXVersion = MAC_OS_X_VERSION_MIN_REQUIRED/100;\n\t    }\n\tif (tkMacOSXMacOSXVersion && MAC_OS_X_VERSION_MIN_REQUIRED < 100000 &&\n\t\ttkMacOSXMacOSXVersion/10 < MAC_OS_X_VERSION_MIN_REQUIRED/10) {\n\t    Tcl_Panic(\"Mac OS X 10.%d or later required !\",\n\t\t    (MAC_OS_X_VERSION_MIN_REQUIRED/10)-100);\n\t}\n\n\n#ifdef TK_FRAMEWORK\n\t/*\n\t * When Tk is in a framework, force tcl_findLibrary to look in the\n\t * framework scripts directory.\n\t * FIXME: Should we come up with a more generic way of doing this?\n\t */\n\n\tif (Tcl_MacOSXOpenVersionedBundleResources(interp,\n\t\t\"com.tcltk.tklibrary\", TK_FRAMEWORK_VERSION, 0, PATH_MAX,\n\t\ttkLibPath) != TCL_OK) {\n            # if 0 /* This is not really an error.  Wish still runs fine. */\n\t    TkMacOSXDbgMsg(\"Tcl_MacOSXOpenVersionedBundleResources failed\");\n\t    # endif\n\t}\n#endif\n\n\t/*\n\t * FIXME: Close stdin & stdout for remote debugging otherwise we will\n\t * fight with gdb for stdin & stdout\n\t */\n\n\tif (getenv(\"XCNOSTDIN\") != NULL) {\n\t    close(0);\n\t    close(1);\n\t}\n\n\t/*\n\t * Instantiate our NSApplication object. This needs to be\n\t * done before we check whether to open a console window.\n\t */\n\n\tNSAutoreleasePool *pool = [NSAutoreleasePool new];\n\t[[NSUserDefaults standardUserDefaults] registerDefaults:\n\t\t[NSDictionary dictionaryWithObjectsAndKeys:\n\t\t\t\t  [NSNumber numberWithBool:YES],\n\t\t\t      @\"_NSCanWrapButtonTitles\",\n\t\t\t\t   [NSNumber numberWithInt:-1],\n\t\t\t      @\"NSStringDrawingTypesetterBehavior\",\n\t\t\t      nil]];\n\t[TKApplication sharedApplication];\n\t[pool drain];\n\t[NSApp _setup:interp];\n\t[NSApp finishLaunching];\n\n\t/*\n\t * If we don't have a TTY and stdin is a special character file of\n\t * length 0, (e.g. /dev/null, which is what Finder sets when double\n\t * clicking Wish) then use the Tk based console interpreter.\n\t */\n\n\tif (getenv(\"TK_CONSOLE\") ||\n\t\t(!isatty(0) && (fstat(0, &st) ||\n\t\t(S_ISCHR(st.st_mode) && st.st_blocks == 0)))) {\n\t    Tk_InitConsoleChannels(interp);\n\t    Tcl_RegisterChannel(interp, Tcl_GetStdChannel(TCL_STDIN));\n\t    Tcl_RegisterChannel(interp, Tcl_GetStdChannel(TCL_STDOUT));\n\t    Tcl_RegisterChannel(interp, Tcl_GetStdChannel(TCL_STDERR));\n\n\t    /*\n\t     * Only show the console if we don't have a startup script\n\t     * and tcl_interactive hasn't been set already.\n\t     */\n\n\t    if (Tcl_GetStartupScript(NULL) == NULL) {\n\t\tconst char *intvar = Tcl_GetVar2(interp,\n\t\t\t\"tcl_interactive\", NULL, TCL_GLOBAL_ONLY);\n\n\t\tif (intvar == NULL) {\n\t\t    Tcl_SetVar2(interp, \"tcl_interactive\", NULL, \"1\",\n\t\t\t    TCL_GLOBAL_ONLY);\n\t\t}\n\t    }\n\t    if (Tk_CreateConsoleWindow(interp) == TCL_ERROR) {\n\t\treturn TCL_ERROR;\n\t    }\n\t}\n\n    }\n\n    Tk_MacOSXSetupTkNotifier();\n\n    if (tkLibPath[0] != '\\0') {\n\tTcl_SetVar2(interp, \"tk_library\", NULL, tkLibPath, TCL_GLOBAL_ONLY);\n    }\n\n    if (scriptPath[0] != '\\0') {\n\tTcl_SetVar2(interp, \"auto_path\", NULL, scriptPath,\n\t\tTCL_GLOBAL_ONLY|TCL_LIST_ELEMENT|TCL_APPEND_VALUE);\n    }\n\n    Tcl_CreateObjCommand(interp, \"::tk::mac::standardAboutPanel\",\n\t    TkMacOSXStandardAboutPanelObjCmd, NULL, NULL);\n    Tcl_CreateObjCommand(interp, \"::tk::mac::iconBitmap\",\n\t    TkMacOSXIconBitmapObjCmd, NULL, NULL);\n\n    return TCL_OK;\n}\n\f\n/*\n *----------------------------------------------------------------------\n *\n * TkpGetAppName --\n *\n *\tRetrieves the name of the current application from a platform specific\n *\tlocation. For Unix, the application name is the tail of the path\n *\tcontained in the tcl variable argv0.\n *\n * Results:\n *\tReturns the application name in the given Tcl_DString.\n *\n * Side effects:\n *\tNone.\n *\n *----------------------------------------------------------------------\n */\n\nvoid\nTkpGetAppName(\n    Tcl_Interp *interp,\n    Tcl_DString *namePtr)\t/* A previously initialized Tcl_DString. */\n{\n    const char *p, *name;\n\n    name = Tcl_GetVar2(interp, \"argv0\", NULL, TCL_GLOBAL_ONLY);\n    if ((name == NULL) || (*name == 0)) {\n\tname = \"tk\";\n    } else {\n\tp = strrchr(name, '/');\n\tif (p != NULL) {\n\t    name = p+1;\n\t}\n    }\n    Tcl_DStringAppend(namePtr, name, -1);\n}\n\f\n/*\n *----------------------------------------------------------------------\n *\n * TkpDisplayWarning --\n *\n *\tThis routines is called from Tk_Main to display warning messages that\n *\toccur during startup.\n *\n * Results:\n *\tNone.\n *\n * Side effects:\n *\tGenerates messages on stdout.\n *\n *----------------------------------------------------------------------\n */\n\nvoid\nTkpDisplayWarning(\n    const char *msg,\t\t/* Message to be displayed. */\n    const char *title)\t\t/* Title of warning. */\n{\n    Tcl_Channel errChannel = Tcl_GetStdChannel(TCL_STDERR);\n\n    if (errChannel) {\n\tTcl_WriteChars(errChannel, title, -1);\n\tTcl_WriteChars(errChannel, \": \", 2);\n\tTcl_WriteChars(errChannel, msg, -1);\n\tTcl_WriteChars(errChannel, \"\\n\", 1);\n    }\n}\n\f\n/*\n *----------------------------------------------------------------------\n *\n * TkMacOSXDefaultStartupScript --\n *\n *\tOn MacOS X, we look for a file in the Resources/Scripts directory\n *\tcalled AppMain.tcl and if found, we set argv[1] to that, so that the\n *\trest of the code will find it, and add the Scripts folder to the\n *\tauto_path. If we don't find the startup script, we just bag it,\n *\tassuming the user is starting up some other way.\n *\n * Results:\n *\tNone.\n *\n * Side effects:\n *\tTcl_SetStartupScript() called when AppMain.tcl found.\n *\n *----------------------------------------------------------------------\n */\n\nMODULE_SCOPE void\nTkMacOSXDefaultStartupScript(void)\n{\n    NSAutoreleasePool *pool = [NSAutoreleasePool new];\n    CFBundleRef bundleRef = CFBundleGetMainBundle();\n\n    if (bundleRef != NULL) {\n\tCFURLRef appMainURL = CFBundleCopyResourceURL(bundleRef,\n\t\tCFSTR(\"AppMain\"), CFSTR(\"tcl\"), CFSTR(\"Scripts\"));\n\n\tif (appMainURL != NULL) {\n\t    CFURLRef scriptFldrURL;\n\t    char startupScript[PATH_MAX + 1];\n\n\t    if (CFURLGetFileSystemRepresentation (appMainURL, true,\n\t\t    (unsigned char *) startupScript, PATH_MAX)) {\n\t\tTcl_SetStartupScript(Tcl_NewStringObj(startupScript,-1), NULL);\n\t\tscriptFldrURL = CFURLCreateCopyDeletingLastPathComponent(NULL,\n\t\t\tappMainURL);\n\t\tif (scriptFldrURL != NULL) {\n\t\t    CFURLGetFileSystemRepresentation(scriptFldrURL, true,\n\t\t\t    (unsigned char *) scriptPath, PATH_MAX);\n\t\t    CFRelease(scriptFldrURL);\n\t\t}\n\t    }\n\t    CFRelease(appMainURL);\n\t}\n    }\n    [pool drain];\n}\n\f\n/*\n *----------------------------------------------------------------------\n *\n * TkMacOSXGetNamedSymbol --\n *\n *\tDynamically acquire address of a named symbol from a loaded dynamic\n *\tlibrary, so that we can use API that may not be available on all OS\n *\tversions.\n *\n * Results:\n *\tAddress of given symbol or NULL if unavailable.\n *\n * Side effects:\n *\tNone.\n *\n *----------------------------------------------------------------------\n */\n\nMODULE_SCOPE void*\nTkMacOSXGetNamedSymbol(\n    const char* module,\n    const char* symbol)\n{\n    void *addr = dlsym(RTLD_NEXT, symbol);\n    if (!addr) {\n\t(void) dlerror(); /* Clear dlfcn error state */\n    }\n    return addr;\n}\n\f\n/*\n *----------------------------------------------------------------------\n *\n * TkMacOSXGetStringObjFromCFString --\n *\n *\tGet a string object from a CFString as efficiently as possible.\n *\n * Results:\n *\tNew string object or NULL if conversion failed.\n *\n * Side effects:\n *\tNone.\n *\n *----------------------------------------------------------------------\n */\n\nMODULE_SCOPE Tcl_Obj*\nTkMacOSXGetStringObjFromCFString(\n    CFStringRef str)\n{\n    Tcl_Obj *obj = NULL;\n    const char *c = CFStringGetCStringPtr(str, kCFStringEncodingUTF8);\n\n    if (c) {\n\tobj = Tcl_NewStringObj(c, -1);\n    } else {\n\tCFRange all = CFRangeMake(0, CFStringGetLength(str));\n\tCFIndex len;\n\n\tif (CFStringGetBytes(str, all, kCFStringEncodingUTF8, 0, false, NULL,\n\t\t0, &len) > 0 && len < INT_MAX) {\n\t    obj = Tcl_NewObj();\n\t    Tcl_SetObjLength(obj, len);\n\t    CFStringGetBytes(str, all, kCFStringEncodingUTF8, 0, false,\n\t\t    (UInt8*) obj->bytes, len, NULL);\n\t}\n    }\n    return obj;\n}\n\f\n/*\n * Local Variables:\n * mode: objc\n * c-basic-offset: 4\n * fill-column: 79\n * coding: utf-8\n * End:\n */\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/images/pwrdLogo100.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/images/logoMed.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/images/logo64.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/images/tai-ku.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/images/pwrdLogo175.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/images/pwrdLogo200.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/images/logoLarge.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/images/pwrdLogo150.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/images/logo100.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/images/pwrdLogo75.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/demos/images/teapot.ppm",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/demos/images/ouster.png",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/demos/images/earthris.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/demos/images/earth.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/demos/images/tcllogo.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/library/demos/images/earthmenu.png",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/tests/red.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/tests/corruptTruncated.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/tests/teapot.ppm",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/tests/corruptMangled.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/tests/corruptMangled4G.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/tests/earth.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/tests/pwrdLogo150.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/tests/iDOT.png",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor70.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor7c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/wish.ico",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor18.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor0c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor46.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor78.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor00.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor92.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor66.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor06.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor80.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor96.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor0a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor84.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor6c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor16.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor54.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor68.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor6a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/lamp.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor74.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor30.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor90.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor3c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor3a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor6e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/buttons.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/tk.ico",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor8e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor7e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor82.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor12.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor5a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor26.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor32.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor62.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor9a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor52.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor76.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor50.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor40.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor36.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor04.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor4c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor38.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor10.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor56.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor3e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor14.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor86.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor2c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor72.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor4a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor48.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor5e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor22.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor0e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor2a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor20.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor58.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor1a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor8c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor98.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor08.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor64.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor2e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor44.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor88.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor8a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor7a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor1e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor94.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor28.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor5c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor1c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor34.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor4e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor42.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor24.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor60.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/win/rc/cursor02.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/macosx/Tk.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.8-dtg7wamu3dvjrffnsoagjcr3y6h4tsdv/spack-src/macosx/Tk.icns"
    ],
    "total_files": 881
}