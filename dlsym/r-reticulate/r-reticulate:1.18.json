{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/src/libpython.cpp": "\n#define LIBPYTHON_CPP\n#include \"libpython.h\"\n\n#ifndef _WIN32\n#include <dlfcn.h>\n#else\n#define WIN32_LEAN_AND_MEAN 1\n#include <windows.h>\n#endif\n\n#include <string>\n#include <vector>\n#include <iostream>\n#include <sstream>\n\nnamespace libpython {\n\nnamespace {\n\nvoid lastDLErrorMessage(std::string* pError)\n{\n#ifdef _WIN32\n  LPVOID lpMsgBuf;\n  DWORD dw = ::GetLastError();\n\n  DWORD length = ::FormatMessage(\n    FORMAT_MESSAGE_ALLOCATE_BUFFER |\n      FORMAT_MESSAGE_FROM_SYSTEM |\n      FORMAT_MESSAGE_IGNORE_INSERTS,\n      NULL,\n      dw,\n      MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n      (LPTSTR) &lpMsgBuf,\n      0, NULL );\n\n  if (length != 0)\n  {\n    std::string msg((LPTSTR)lpMsgBuf);\n    LocalFree(lpMsgBuf);\n    pError->assign(msg);\n  }\n  else\n  {\n    pError->assign(\"(Unknown error)\");\n  }\n#else\n  const char* msg = ::dlerror();\n  if (msg != NULL)\n    pError->assign(msg);\n  else\n    pError->assign(\"(Unknown error)\");\n#endif\n}\n\nbool loadLibrary(const std::string& libPath, void** ppLib, std::string* pError)\n{\n  *ppLib = NULL;\n#ifdef _WIN32\n  *ppLib = (void*)::LoadLibraryEx(libPath.c_str(), NULL, 0);\n#else\n  *ppLib = ::dlopen(libPath.c_str(), RTLD_NOW|RTLD_GLOBAL);\n#endif\n  if (*ppLib == NULL)\n  {\n    lastDLErrorMessage(pError);\n    *pError = libPath + \" - \" + *pError;\n    return false;\n  }\n  else\n  {\n    return true;\n  }\n}\n\nbool loadSymbol(void* pLib, const std::string& name, void** ppSymbol, std::string* pError)\n{\n  *ppSymbol = NULL;\n#ifdef _WIN32\n  *ppSymbol = (void*)::GetProcAddress((HINSTANCE)pLib, name.c_str());\n#else\n  *ppSymbol = ::dlsym(pLib, name.c_str());\n#endif\n  if (*ppSymbol == NULL)\n  {\n    lastDLErrorMessage(pError);\n    *pError = name + \" - \" + *pError;\n    return false;\n  }\n  else\n  {\n    return true;\n  }\n}\n\nbool closeLibrary(void* pLib, std::string* pError)\n{\n#ifdef _WIN32\n  if (!::FreeLibrary((HMODULE)pLib))\n#else\n  if (::dlclose(pLib) != 0)\n#endif\n  {\n    lastDLErrorMessage(pError);\n    return false;\n  }\n  else\n  {\n    return true;\n  }\n}\n\n\nbool loadSymbol(void* pLib, const std::vector<std::string>& names, void** ppSymbol, std::string* pError) {\n\n  // search for a symbol with one of the specified names\n  for (size_t i = 0; i<names.size(); ++i) {\n    std::string name = names[i];\n    if (loadSymbol(pLib, name, ppSymbol, pError))\n      return true;\n  }\n\n  // return false if nonone found\n  return false;\n}\n\n} // anonymous namespace\n\n\n\nvoid initialize_type_objects(bool python3) {\n  Py_None = Py_BuildValue(\"z\", NULL);\n  Py_Unicode = Py_BuildValue(\"u\", L\"a\");\n  if (python3)\n    Py_String = Py_BuildValue(\"y\", \"a\");\n  else\n    Py_String = Py_BuildValue(\"s\", \"a\");\n  Py_Int = PyInt_FromLong(1024L);\n  Py_Long = PyLong_FromLong(1024L);\n  Py_Bool = PyBool_FromLong(1L);\n  Py_True = PyBool_FromLong(1L);\n  Py_False = PyBool_FromLong(0L);\n  Py_Dict = Py_BuildValue(\"{s:i}\", \"a\", 1024);\n  Py_Float = PyFloat_FromDouble(0.0);\n  Py_Tuple = Py_BuildValue(\"(i)\", 1024);\n  Py_List = Py_BuildValue(\"[i]\", 1024);\n  Py_Complex = PyComplex_FromDoubles(0.0, 0.0);\n  Py_ByteArray = PyByteArray_FromStringAndSize(\"a\", 1);\n}\n\n#define LOAD_PYTHON_SYMBOL_AS(name, as)             \\\nif (!loadSymbol(pLib_, #name, (void**)&as, pError)) \\\n  return false;\n\n#define LOAD_PYTHON_SYMBOL(name)                                \\\nif (!loadSymbol(pLib_, #name, (void**) &libpython::name, pError)) \\\n  return false;\n\nbool SharedLibrary::load(const std::string& libPath, bool python3, std::string* pError)\n{\n  if (!loadLibrary(libPath, &pLib_, pError))\n    return false;\n\n  return loadSymbols(python3, pError);\n}\n\n\nbool LibPython::loadSymbols(bool python3, std::string* pError)\n{\n  bool is64bit = sizeof(size_t) >= 8;\n\n  LOAD_PYTHON_SYMBOL(Py_Initialize)\n  LOAD_PYTHON_SYMBOL(Py_IsInitialized)\n  LOAD_PYTHON_SYMBOL(Py_AddPendingCall)\n  LOAD_PYTHON_SYMBOL(PyErr_SetInterrupt)\n  LOAD_PYTHON_SYMBOL(PyExc_KeyboardInterrupt)\n  LOAD_PYTHON_SYMBOL(Py_IncRef)\n  LOAD_PYTHON_SYMBOL(Py_DecRef)\n  LOAD_PYTHON_SYMBOL(PyObject_Size)\n  LOAD_PYTHON_SYMBOL(PyObject_GetAttr)\n  LOAD_PYTHON_SYMBOL(PyObject_HasAttr)\n  LOAD_PYTHON_SYMBOL(PyObject_SetAttr)\n  LOAD_PYTHON_SYMBOL(PyObject_GetAttrString)\n  LOAD_PYTHON_SYMBOL(PyObject_HasAttrString)\n  LOAD_PYTHON_SYMBOL(PyObject_SetAttrString)\n  LOAD_PYTHON_SYMBOL(PyObject_GetItem)\n  LOAD_PYTHON_SYMBOL(PyObject_SetItem)\n  LOAD_PYTHON_SYMBOL(PyObject_DelItem)\n  LOAD_PYTHON_SYMBOL(PyTuple_Size)\n  LOAD_PYTHON_SYMBOL(PyTuple_GetItem)\n  LOAD_PYTHON_SYMBOL(PyTuple_New)\n  LOAD_PYTHON_SYMBOL(PyTuple_SetItem)\n  LOAD_PYTHON_SYMBOL(PyTuple_GetSlice)\n  LOAD_PYTHON_SYMBOL(PyList_New)\n  LOAD_PYTHON_SYMBOL(PyList_Size)\n  LOAD_PYTHON_SYMBOL(PyList_GetItem)\n  LOAD_PYTHON_SYMBOL(PyList_SetItem)\n  LOAD_PYTHON_SYMBOL(PyErr_Clear)\n  LOAD_PYTHON_SYMBOL(PyErr_Fetch)\n  LOAD_PYTHON_SYMBOL(PyErr_Occurred)\n  LOAD_PYTHON_SYMBOL(PyErr_NormalizeException)\n  LOAD_PYTHON_SYMBOL(PyErr_ExceptionMatches)\n  LOAD_PYTHON_SYMBOL(PyErr_GivenExceptionMatches)\n  LOAD_PYTHON_SYMBOL(PyObject_Str)\n  LOAD_PYTHON_SYMBOL(PyObject_Dir)\n  LOAD_PYTHON_SYMBOL(PyByteArray_Size)\n  LOAD_PYTHON_SYMBOL(PyByteArray_FromStringAndSize)\n  LOAD_PYTHON_SYMBOL(PyByteArray_AsString)\n  LOAD_PYTHON_SYMBOL(PyCallable_Check)\n  LOAD_PYTHON_SYMBOL(PyRun_StringFlags)\n  LOAD_PYTHON_SYMBOL(PyEval_EvalCode)\n  LOAD_PYTHON_SYMBOL(PyModule_GetDict)\n  LOAD_PYTHON_SYMBOL(PyImport_AddModule)\n  LOAD_PYTHON_SYMBOL(PyImport_ImportModule)\n  LOAD_PYTHON_SYMBOL(PyImport_Import)\n  LOAD_PYTHON_SYMBOL(PyImport_GetModuleDict)\n  LOAD_PYTHON_SYMBOL(PyObject_GetIter)\n  LOAD_PYTHON_SYMBOL(PyIter_Next)\n  LOAD_PYTHON_SYMBOL(PyLong_AsLong)\n  LOAD_PYTHON_SYMBOL(PyLong_FromLong)\n  LOAD_PYTHON_SYMBOL(PyBool_FromLong)\n  LOAD_PYTHON_SYMBOL(PyDict_New)\n  LOAD_PYTHON_SYMBOL(PyDict_Contains)\n  LOAD_PYTHON_SYMBOL(PyDict_GetItem)\n  LOAD_PYTHON_SYMBOL(PyDict_SetItem)\n  LOAD_PYTHON_SYMBOL(PyDict_SetItemString)\n  LOAD_PYTHON_SYMBOL(PyDict_Next)\n  LOAD_PYTHON_SYMBOL(PyDict_Keys)\n  LOAD_PYTHON_SYMBOL(PyDict_Values)\n  LOAD_PYTHON_SYMBOL(PyDict_Size)\n  LOAD_PYTHON_SYMBOL(PyDict_Copy)\n  LOAD_PYTHON_SYMBOL(PyFloat_AsDouble)\n  LOAD_PYTHON_SYMBOL(PyFloat_FromDouble)\n  LOAD_PYTHON_SYMBOL(PyFunction_Type)\n  LOAD_PYTHON_SYMBOL(PyModule_Type)\n  LOAD_PYTHON_SYMBOL(PyType_Type)\n  LOAD_PYTHON_SYMBOL(PyComplex_FromDoubles)\n  LOAD_PYTHON_SYMBOL(PyComplex_RealAsDouble)\n  LOAD_PYTHON_SYMBOL(PyComplex_ImagAsDouble)\n  LOAD_PYTHON_SYMBOL(PyObject_IsInstance)\n  LOAD_PYTHON_SYMBOL(PyObject_RichCompareBool)\n  LOAD_PYTHON_SYMBOL(PyObject_Call)\n  LOAD_PYTHON_SYMBOL(PyObject_CallFunctionObjArgs)\n  LOAD_PYTHON_SYMBOL(PyType_IsSubtype)\n  LOAD_PYTHON_SYMBOL(PySys_WriteStderr)\n  LOAD_PYTHON_SYMBOL(PyEval_SetProfile)\n  LOAD_PYTHON_SYMBOL(PyGILState_GetThisThreadState)\n  LOAD_PYTHON_SYMBOL(PyGILState_Ensure)\n  LOAD_PYTHON_SYMBOL(PyGILState_Release)\n  LOAD_PYTHON_SYMBOL(PyThreadState_Next)\n  LOAD_PYTHON_SYMBOL(PyObject_CallMethod)\n  LOAD_PYTHON_SYMBOL(PySequence_GetItem)\n  LOAD_PYTHON_SYMBOL(PyObject_IsTrue)\n  LOAD_PYTHON_SYMBOL(PyCapsule_Import)\n  \n  // PyUnicode_AsEncodedString may have several different names depending on the Python\n  // version and the UCS build type\n  std::vector<std::string> names;\n  names.push_back(\"PyUnicode_AsEncodedString\");\n  names.push_back(\"PyUnicodeUCS2_AsEncodedString\");\n  names.push_back(\"PyUnicodeUCS4_AsEncodedString\");\n  if (!loadSymbol(pLib_, names, (void**)&PyUnicode_AsEncodedString, pError) )\n    return false;\n\n  if (python3) {\n\n    // Debug versions of Python will provide PyModule_Create2TraceRefs,\n    // while release versions will provide PyModule_Create\n#ifdef RETICULATE_PYTHON_DEBUG\n    LOAD_PYTHON_SYMBOL_AS(PyModule_Create2TraceRefs, PyModule_Create)\n#else\n    LOAD_PYTHON_SYMBOL_AS(PyModule_Create2, PyModule_Create)\n#endif\n\n    LOAD_PYTHON_SYMBOL(PyImport_AppendInittab)\n    LOAD_PYTHON_SYMBOL_AS(Py_SetProgramName, Py_SetProgramName_v3)\n    LOAD_PYTHON_SYMBOL_AS(Py_SetPythonHome, Py_SetPythonHome_v3)\n    LOAD_PYTHON_SYMBOL_AS(PySys_SetArgv, PySys_SetArgv_v3)\n    LOAD_PYTHON_SYMBOL(PyUnicode_EncodeLocale)\n#ifdef _WIN32\n    LOAD_PYTHON_SYMBOL(PyUnicode_AsMBCSString)\n#endif\n    LOAD_PYTHON_SYMBOL(PyBytes_AsStringAndSize)\n    LOAD_PYTHON_SYMBOL(PyBytes_FromStringAndSize)\n    LOAD_PYTHON_SYMBOL(PyUnicode_FromString)\n    LOAD_PYTHON_SYMBOL_AS(PyLong_AsLong, PyInt_AsLong)\n    LOAD_PYTHON_SYMBOL_AS(PyLong_FromLong, PyInt_FromLong)\n    LOAD_PYTHON_SYMBOL(Py_CompileStringExFlags)\n  } else {\n    if (is64bit) {\n      LOAD_PYTHON_SYMBOL_AS(Py_InitModule4_64, Py_InitModule4)\n    } else {\n      LOAD_PYTHON_SYMBOL(Py_InitModule4)\n    }\n    LOAD_PYTHON_SYMBOL(PyString_AsStringAndSize)\n    LOAD_PYTHON_SYMBOL(PyString_FromStringAndSize)\n    LOAD_PYTHON_SYMBOL(PyString_FromString)\n    LOAD_PYTHON_SYMBOL(Py_SetProgramName)\n    LOAD_PYTHON_SYMBOL(Py_SetPythonHome)\n    LOAD_PYTHON_SYMBOL(PySys_SetArgv)\n    LOAD_PYTHON_SYMBOL(PyInt_AsLong)\n    LOAD_PYTHON_SYMBOL(PyInt_FromLong)\n    LOAD_PYTHON_SYMBOL(PyCObject_AsVoidPtr)\n    LOAD_PYTHON_SYMBOL(Py_CompileString)\n  }\n  LOAD_PYTHON_SYMBOL(PyCapsule_New)\n  LOAD_PYTHON_SYMBOL(PyCapsule_GetPointer)\n  LOAD_PYTHON_SYMBOL(PyCapsule_SetContext)\n  LOAD_PYTHON_SYMBOL(PyCapsule_GetContext)\n  LOAD_PYTHON_SYMBOL(Py_BuildValue)\n  \n  return true;\n}\n\nbool SharedLibrary::unload(std::string* pError)\n{\n  if (pLib_ != NULL)\n    return closeLibrary(pLib_, pError);\n  else\n    return true;\n}\n\nbool import_numpy_api(bool python3, std::string* pError) {\n\n  PyObject* numpy = PyImport_ImportModule(\"numpy.core.multiarray\");\n  if (numpy == NULL) {\n    *pError = \"numpy.core.multiarray failed to import\";\n    PyErr_Clear();\n    return false;\n  }\n\n  PyObject* c_api = PyObject_GetAttrString(numpy, \"_ARRAY_API\");\n  Py_DecRef(numpy);\n  if (c_api == NULL) {\n    *pError = \"numpy.core.multiarray _ARRAY_API not found\";\n    return false;\n  }\n\n  // get api pointer\n  if (python3)\n    PyArray_API = (void **)PyCapsule_GetPointer(c_api, NULL);\n  else\n    PyArray_API = (void **)PyCObject_AsVoidPtr(c_api);\n\n  Py_DecRef(c_api);\n  if (PyArray_API == NULL) {\n    *pError = \"_ARRAY_API is NULL pointer\";\n    return false;\n  }\n\n  // check C API version\n  if (NPY_VERSION != PyArray_GetNDArrayCVersion()) {\n    std::ostringstream ostr;\n    ostr << \"incompatible NumPy binary version \" << (int) PyArray_GetNDArrayCVersion() << \" \"\n    \"(expecting version \" << (int) NPY_VERSION << \")\";\n    *pError = ostr.str();\n    return false;\n  }\n\n  // check feature version\n  if (NPY_1_6_API_VERSION > PyArray_GetNDArrayCFeatureVersion()) {\n    std::ostringstream ostr;\n    ostr << \"incompatible NumPy feature version \" << (int) PyArray_GetNDArrayCFeatureVersion() << \" \"\n    \"(expecting version \" << (int) NPY_1_6_API_VERSION << \" or greater)\";\n    *pError = ostr.str();\n    return false;\n  }\n\n  return true;\n}\n\n\n} // namespace libpython\n\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/build/vignette.rds",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/call.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/output.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__init__.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/call.cpython-38.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/generator.cpython-38.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/test.cpython-36.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/generator.cpython-37.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/__init__.cpython-38.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/thread.cpython-36.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/loader.cpython-38.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/test.cpython-37.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/thread.cpython-38.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/thread.cpython-37.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/output.cpython-36.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/generator.cpython-36.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/test.cpython-38.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/help.cpython-38.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/__init__.cpython-37.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/output.cpython-37.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/loader.cpython-37.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/help.cpython-36.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/output.cpython-38.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/__init__.cpython-36.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/call.cpython-36.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/inst/python/rpytools/__pycache__/call.cpython-37.pyc",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/vignettes/images/python_version.png",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/vignettes/images/r_from_python.png",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/vignettes/images/python_chunks.png",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/vignettes/images/rmarkdown_engine_zoomed.png",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/vignettes/images/reticulate_disable.png",
        "/tmp/vanessa/spack-stage/spack-stage-r-reticulate-1.18-k3lktwjssn7maliks6ld5j4gtwrildox/spack-src/vignettes/images/reticulate_enable.png"
    ],
    "total_files": 218
}