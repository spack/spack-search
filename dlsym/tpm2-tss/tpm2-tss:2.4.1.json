{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-tpm2-tss-2.4.1-pcbrn5ftkezadertd4khyzadqwby6xxk/spack-src/Makefile-test.am": "# SPDX-License-Identifier: BSD-2-Clause\n# Copyright (c) 2015 - 2018 Intel Corporation\n# Copyright (c) 2018 Fraunhofer SIT sponsored by Infineon Technologies AG\n# All rights reserved.\n\nTESTS_CFLAGS = $(AM_CFLAGS) $(LIBCRYPTO_CFLAGS) -I$(srcdir)/src/tss2-mu \\\n    -I$(srcdir)/src/tss2-sys -I$(srcdir)/src/tss2-esys  -I$(srcdir)/src/tss2-fapi \\\n    -Wno-unused-parameter -Wno-missing-field-initializers\nTESTS_LDADD = $(check_LTLIBRARIES) $(lib_LTLIBRARIES) \\\n    $(LIBCRYPTO_LIBS) $(libutil)\n\ncheck_LTLIBRARIES =\n# test harness configuration\nTEST_EXTENSIONS = .int\nif TESTPTPM\nINT_LOG_COMPILER = $(srcdir)/script/int-log-compiler-ptpm.sh\nINT_LOG_FLAGS = --ptpm=$(PTPM)\nelse\nINT_LOG_COMPILER = $(srcdir)/script/int-log-compiler.sh\nendif\nEXTRA_DIST += $(srcdir)/script/int-log-compiler.sh $(srcdir)/script/int-log-compiler-ptpm.sh \\\n              $(srcdir)/script/ekca/create_ca.sh  $(srcdir)/script/ekca/ek.cnf \\\n              $(srcdir)/script/ekca/intermed-ca.cnf $(srcdir)/script/ekca/root-ca.cnf\nAM_TESTS_ENVIRONMENT = PATH=\"$(PATH)\"\n\ncheck-programs: $(check_PROGRAMS)\n\ncheck_PROGRAMS = $(TESTS_UNIT) $(TESTS_INTEGRATION)\nTESTS = $(TESTS_UNIT) $(TESTS_INTEGRATION)\n\nif ENABLE_INTEGRATION\ncheck_PROGRAMS += test/helper/tpm_startup\ntest_helper_tpm_startup_CFLAGS = $(TESTS_CFLAGS) -I$(srcdir)/test/integration\ntest_helper_tpm_startup_LDFLAGS = $(TESTS_LDFLAGS)\ntest_helper_tpm_startup_LDADD = $(TESTS_LDADD)\n\ncheck_PROGRAMS += test/helper/tpm_transientempty\ntest_helper_tpm_transientempty_CFLAGS = $(TESTS_CFLAGS) -I$(srcdir)/test/integration\ntest_helper_tpm_transientempty_LDFLAGS = $(TESTS_LDFLAGS)\ntest_helper_tpm_transientempty_LDADD = $(TESTS_LDADD)\n\ncheck_PROGRAMS += test/helper/tpm_dumpstate\ntest_helper_tpm_dumpstate_CFLAGS = $(TESTS_CFLAGS) -I$(srcdir)/test/integration\ntest_helper_tpm_dumpstate_LDFLAGS = $(TESTS_LDFLAGS)\ntest_helper_tpm_dumpstate_LDADD = $(TESTS_LDADD)\n\ncheck_PROGRAMS += test/helper/tpm_getek\ntest_helper_tpm_getek_CFLAGS = $(TESTS_CFLAGS) -I$(srcdir)/test/integration\ntest_helper_tpm_getek_LDFLAGS = $(TESTS_LDFLAGS) -lcrypto\ntest_helper_tpm_getek_LDADD = $(TESTS_LDADD)\n\ncheck_PROGRAMS += test/helper/tpm_getek_ecc\ntest_helper_tpm_getek_ecc_CFLAGS = $(TESTS_CFLAGS) -I$(srcdir)/test/integration\ntest_helper_tpm_getek_ecc_LDFLAGS = $(TESTS_LDFLAGS) -lcrypto\ntest_helper_tpm_getek_ecc_LDADD = $(TESTS_LDADD)\n\n\ncheck_PROGRAMS += test/helper/tpm_writeekcert\ntest_helper_tpm_writeekcert_CFLAGS = $(TESTS_CFLAGS) -I$(srcdir)/test/integration\ntest_helper_tpm_writeekcert_LDFLAGS = $(TESTS_LDFLAGS)\ntest_helper_tpm_writeekcert_LDADD = $(TESTS_LDADD)\nendif #ENABLE_INTEGRATION\n\nif UNIT\nTESTS_UNIT  = \\\n    test/unit/CommonPreparePrologue \\\n    test/unit/CopyCommandHeader \\\n    test/unit/io \\\n    test/unit/key-value-parse \\\n    test/unit/log \\\n    test/unit/tcti-device \\\n    test/unit/tctildr \\\n    test/unit/tctildr-dl \\\n    test/unit/tctildr-nodl \\\n    test/unit/tctildr-tcti \\\n    test/unit/tctildr-getinfo \\\n    test/unit/UINT8-marshal \\\n    test/unit/UINT16-marshal \\\n    test/unit/UINT32-marshal \\\n    test/unit/UINT64-marshal \\\n    test/unit/TPMA-marshal \\\n    test/unit/TPM2B-marshal \\\n    test/unit/TPMS-marshal \\\n    test/unit/TPML-marshal \\\n    test/unit/TPMT-marshal \\\n    test/unit/TPMU-marshal \\\n    test/unit/sys-execute \\\n    test/unit/tss2_rc\nif ENABLE_TCTI_MSSIM\nTESTS_UNIT += test/unit/tcti-mssim\nendif\nif ESAPI\nTESTS_UNIT += \\\n    test/unit/esys-context-null \\\n    test/unit/esys-resubmissions \\\n    test/unit/esys-sequence-finish \\\n    test/unit/esys-tcti-rcs \\\n    test/unit/esys-tpm-rcs \\\n    test/unit/esys-getpollhandles \\\n    test/unit/esys-nulltcti \\\n    test/unit/esys-crypto\n\nendif ESAPI\nif FAPI\nfapiLDFLAGS = -ljson-c\nTESTS_UNIT += \\\n    test/unit/fapi-json\nendif FAPI\nendif #UNIT\n\nif ENABLE_INTEGRATION\ncheck_LTLIBRARIES += test/integration/libtest_utils.la\n\nTESTS_INTEGRATION =\nif !TESTPTPM\nTESTS_INTEGRATION += \\\n    test/integration/sapi-asymmetric-encrypt-decrypt.int \\\n    test/integration/sapi-nv-policy-locality.int \\\n    test/integration/sapi-nv-readwrite.int \\\n    test/integration/sapi-hmac-auth.int \\\n    test/integration/sapi-primary-rsa-2K-aes128cfb.int \\\n    test/integration/sapi-create-keyedhash-sha1-hmac.int \\\n    test/integration/sapi-encrypt-decrypt.int \\\n    test/integration/sapi-encrypt-decrypt-2.int \\\n    test/integration/sapi-evict-ctrl.int \\\n    test/integration/sapi-get-random.int \\\n    test/integration/sapi-stir-random.int \\\n    test/integration/sapi-hierarchy-change-auth.int \\\n    test/integration/sapi-abi-version.int \\\n    test/integration/sapi-pcr-extension.int \\\n    test/integration/sapi-self-test.int \\\n    test/integration/sapi-start-auth-session.int \\\n    test/integration/sapi-sys-initialize.int \\\n    test/integration/sapi-tpm-properties.int \\\n    test/integration/sapi-system-api.int \\\n    test/integration/sapi-policy-template.int \\\n    test/integration/sapi-create-loaded.int \\\n    test/integration/sapi-policy-authorizeNV.int \\\n    test/integration/sapi-command-cancel.int \\\n    test/integration/sapi-param-encrypt-decrypt.int \\\n    test/tpmclient/tpmclient.int\nendif # !TESTPTPM\n\nif ESAPI\nESYS_TESTS_INTEGRATION_DESTRUCTIVE = \\\n    test/integration/esys-change-eps.int \\\n    test/integration/esys-clear.int \\\n    test/integration/esys-tpm-clear-auth.int \\\n    test/integration/esys-clear-session.int \\\n    test/integration/esys-field-upgrade.int \\\n    test/integration/esys-firmware-read.int \\\n    test/integration/esys-lock.int \\\n    test/integration/esys-set-algorithm-set.int\n\nESYS_TESTS_INTEGRATION_MANDATORY = \\\n    test/integration/esys-certify-creation.int \\\n    test/integration/esys-certify.int \\\n    test/integration/esys-clear-control.int \\\n    test/integration/esys-clockset.int \\\n    test/integration/esys-commit.int \\\n    test/integration/esys-create-fail.int \\\n    test/integration/esys-create-password-auth.int \\\n    test/integration/esys-create-policy-auth.int \\\n    test/integration/esys-create-primary-ecc-hmac.int \\\n    test/integration/esys-create-primary-hmac.int \\\n    test/integration/esys-create-session-auth-bound.int \\\n    test/integration/esys-create-session-auth-ecc.int \\\n    test/integration/esys-create-session-auth.int \\\n    test/integration/esys-create-session-auth-xor.int \\\n    test/integration/esys-ecc-parameters.int \\\n    test/integration/esys-ecdh-zgen.int \\\n    test/integration/esys-event-sequence-complete.int \\\n    test/integration/esys-evict-control-serialization.int \\\n    test/integration/esys-get-capability.int \\\n    test/integration/esys-get-random.int \\\n    test/integration/esys-hash.int \\\n    test/integration/esys-hashsequencestart.int \\\n    test/integration/esys-hashsequencestart-session.int \\\n    test/integration/esys-hierarchychangeauth.int \\\n    test/integration/esys-hmac.int \\\n    test/integration/esys-hmacsequencestart.int \\\n    test/integration/esys-hmacsequencestart-session.int \\\n    test/integration/esys-import.int \\\n    test/integration/esys-make-credential.int \\\n    test/integration/esys-make-credential-session.int \\\n    test/integration/esys-nv-ram-counter.int \\\n    test/integration/esys-nv-ram-counter-session.int \\\n    test/integration/esys-nv-ram-extend-index.int \\\n    test/integration/esys-nv-ram-extend-index-session.int \\\n    test/integration/esys-nv-ram-ordinary-index-rlock.int \\\n    test/integration/esys-nv-ram-ordinary-index-rlock-session.int \\\n    test/integration/esys-nv-ram-ordinary-index-wlock.int \\\n    test/integration/esys-nv-ram-ordinary-index-wlock-session.int \\\n    test/integration/esys-nv-ram-set-bits.int \\\n    test/integration/esys-nv-ram-set-bits-session.int \\\n    test/integration/esys-object-changeauth.int \\\n    test/integration/esys-policy-authorize.int \\\n    test/integration/esys-policy-nv-changeauth.int \\\n    test/integration/esys-policy-nv-undefine-special.int \\\n    test/integration/esys-policy-password.int \\\n    test/integration/esys-policy-regression.int \\\n    test/integration/esys-quote.int \\\n    test/integration/esys-rsa-encrypt-decrypt.int \\\n    test/integration/esys-save-and-load-context.int \\\n    test/integration/esys-session-attributes.int \\\n    test/integration/esys-stir-random.int \\\n    test/integration/esys-testparms.int \\\n    test/integration/esys-tpm-tests.int \\\n    test/integration/esys-tr-fromTpmPublic-key.int \\\n    test/integration/esys-tr-fromTpmPublic-nv.int \\\n    test/integration/esys-tr-fromTpmPublic-session.int \\\n    test/integration/esys-tr-getName-hierarchy.int \\\n    test/integration/esys-tr-getTpmHandle-key.int \\\n    test/integration/esys-tr-getTpmHandle-nv.int \\\n    test/integration/esys-unseal-password-auth.int \\\n    test/integration/esys-verify-signature.int \\\n    test/integration/esys-ecdh-keygen.int \\\n    test/integration/esys-policy-ticket.int\n\nESYS_TESTS_INTEGRATION_OPTIONAL = \\\n    test/integration/esys-audit.int \\\n    test/integration/esys-createloaded.int \\\n    test/integration/esys-createloaded-session.int \\\n    test/integration/esys-duplicate.int \\\n    test/integration/esys-encrypt-decrypt.int \\\n    test/integration/esys-get-time.int \\\n    test/integration/esys-hierarchy-control.int \\\n    test/integration/esys-nv-certify.int \\\n    test/integration/esys-pcr-auth-value.int \\\n    test/integration/esys-pcr-basic.int \\\n    test/integration/esys-policy-authorize-nv-opt.int \\\n    test/integration/esys-policy-physical-presence-opt.int \\\n    test/integration/esys-policy-template-opt.int \\\n    test/integration/esys-pp-commands.int \\\n    test/integration/esys-zgen-2phase.int \\\n    test/integration/esys-auto-session-flags.int\n\nif TESTPTPM\n\nif PTPMMANDATORY\nTESTS_INTEGRATION +=  $(ESYS_TESTS_INTEGRATION_MANDATORY)\nendif\n\nif PTPMOPTIONAL\nTESTS_INTEGRATION +=  $(ESYS_TESTS_INTEGRATION_OPTIONAL)\nendif\n\nif PTPMDESTRUCTIVE\nTESTS_INTEGRATION += $(ESYS_TESTS_INTEGRATION_DESTRUCTIVE)\nendif\n\nelse # TESTPTPM\nTESTS_INTEGRATION += $(ESYS_TESTS_INTEGRATION_MANDATORY) $(ESYS_TESTS_INTEGRATION_OPTIONAL) $(ESYS_TESTS_INTEGRATION_DESTRUCTIVE)\n\nendif # TESTPTPM\n\nendif #ESAPI\n\nif FAPI\nTESTS_CFLAGS +=  -DTOP_SOURCEDIR\"=\\\"$(top_srcdir)\\\"\"\nFAPI_TESTS_INTEGRATION = \\\n    test/integration/fapi-data-crypt.int \\\n    test/integration/fapi-data-crypt-rsa.int \\\n    test/integration/fapi-duplicate.int \\\n    test/integration/fapi-ext-public-key.int \\\n    test/integration/fapi-get-random.int \\\n    test/integration/fapi-platform-certificates.int \\\n    test/integration/fapi-key-create-sign.int \\\n    test/integration/fapi-key-create-sign-password-provision.int \\\n    test/integration/fapi-key-create-sign-rsa.int \\\n    test/integration/fapi-key-create-policy-authorize-sign.int \\\n    test/integration/fapi-key-create-policy-authorize-sign-rsa.int \\\n    test/integration/fapi-key-create-policy-authorize-nv-sign.int \\\n    test/integration/fapi-key-create-policy-secret-nv-sign.int \\\n    test/integration/fapi-key-create-policy-pcr-sign.int \\\n    test/integration/fapi-key-create-policy-signed.int \\\n    test/integration/fapi-key-create-policy-signed-ecc.int \\\n    test/integration/fapi-key-create-policy-nv-sign.int \\\n    test/integration/fapi-key-create-policy-or-sign.int \\\n    test/integration/fapi-key-create-policy-password-sign.int \\\n    test/integration/fapi-key-create-policy-countertimer-sign.int \\\n    test/integration/fapi-key-create-policy-physical-presence-sign.int \\\n    test/integration/fapi-key-create-policy-locality-sign.int \\\n    test/integration/fapi-key-create-policy-command-code-sign.int \\\n    test/integration/fapi-key-create-policy-auth-value-sign.int \\\n    test/integration/fapi-key-create-ckda-sign.int \\\n    test/integration/fapi-key-change-auth.int \\\n    test/integration/fapi-key-create-sign-persistent.int \\\n    test/integration/fapi-key-create-sign-password.int \\\n    test/integration/fapi-key-create-ckda-sign-password.int \\\n    test/integration/fapi-key-create-sign-password-da.int \\\n    test/integration/fapi-key-create-ckda-sign-password-da.int \\\n    test/integration/fapi-nv-authorizenv-cphash.int \\\n    test/integration/fapi-nv-ordinary.int \\\n    test/integration/fapi-nv-written-policy.int \\\n    test/integration/fapi-nv-extend.int \\\n    test/integration/fapi-nv-increment.int \\\n    test/integration/fapi-nv-set-bits.int \\\n    test/integration/fapi-pcr-test.int \\\n    test/integration/fapi-quote.int \\\n    test/integration/fapi-quote-rsa.int \\\n    test/integration/fapi-info.int \\\n    test/integration/fapi-unseal.int\n\nif TESTPTPM\nif PTPMDESTRUCTIVE\nFAPI_TESTS_INTEGRATION += test/integration/fapi-key-create-sign-policy-provision.int\nendif #PTPMDESTRUCTIVE\nendif #TESTPTPM\n\nif !TESTPTPM\nFAPI_TESTS_INTEGRATION += \\\n    test/integration/fapi-key-create-sign-policy-provision.int \\\n    test/integration/fapi-provision-fingerprint.int \\\n    test/integration/fapi-provision-certificate.int \\\n    test/integration/fapi-provision-fingerprint_ecc.int \\\n    test/integration/fapi-provision-certificate_ecc.int\nendif #!TESTPTPM\n\nTESTS_INTEGRATION += $(FAPI_TESTS_INTEGRATION)\n\nendif #FAPI\n\nendif #ENABLE_INTEGRATION\n\nCLEANFILES += \\\n    test/integration/*.crt \\\n    test/integration/*.crl \\\n    test/integration/*.int_state* \\\n    test/integration/*.log \\\n    test/integration/*.int_ek* \\\n    test/integration/*.int_*-ca.pem \\\n    test/tpmclient/*.crt \\\n    test/tpmclient/*.crl \\\n    test/tpmclient/*.int_state* \\\n    test/tpmclient/*.log \\\n    test/tpmclient/*.int_ek* \\\n    test/tpmclient/*.int_*-ca.pem \\\n    test/unit/*.log\n\nif UNIT\ntest_unit_tcti_device_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_tcti_device_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu) $(libutil)\ntest_unit_tcti_device_LDFLAGS = -Wl,--wrap=read -Wl,--wrap=write, -Wl,--wrap=poll  \\\n        -Wl,--wrap=open\ntest_unit_tcti_device_SOURCES = test/unit/tcti-device.c \\\n    src/tss2-tcti/tcti-common.c \\\n    src/tss2-tcti/tcti-device.c src/tss2-tcti/tcti-device.h\n\nif ENABLE_TCTI_MSSIM\ntest_unit_tcti_mssim_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_tcti_mssim_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu) $(libutil)\ntest_unit_tcti_mssim_LDFLAGS = -Wl,--wrap=connect,--wrap=read,--wrap=select,--wrap=write\ntest_unit_tcti_mssim_SOURCES = test/unit/tcti-mssim.c \\\n    src/tss2-tcti/tcti-common.c \\\n    src/tss2-tcti/tcti-mssim.c src/tss2-tcti/tcti-mssim.h\nendif\n\ntest_unit_tctildr_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_tctildr_LDADD = $(CMOCKA_LIBS) $(libutil)\ntest_unit_tctildr_LDFLAGS = -Wl,--wrap=calloc,--wrap=free \\\n    -Wl,--wrap=tctildr_finalize_data,--wrap=tctildr_get_tcti \\\n    -Wl,--wrap=tctildr_get_info\ntest_unit_tctildr_SOURCES = test/unit/tctildr.c \\\n    src/tss2-tcti/tctildr.c\n\ntest_unit_tctildr_dl_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) \\\n        -UESYS_TCTI_DEFAULT_MODULE -UESYS_TCTI_DEFAUT_CONFIG\ntest_unit_tctildr_dl_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD)\ntest_unit_tctildr_dl_LDFLAGS = -Wl,--wrap=dlopen,--wrap=dlclose,--wrap=dlsym \\\n    -Wl,--wrap=tcti_from_init,--wrap=tcti_from_info,--wrap=dlerror\ntest_unit_tctildr_dl_SOURCES = test/unit/tctildr-dl.c \\\n        src/tss2-tcti/tctildr-dl.c\n\ntest_unit_tctildr_nodl_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) \\\n        -UESYS_TCTI_DEFAULT_MODULE -UESYS_TCTI_DEFAUT_CONFIG\ntest_unit_tctildr_nodl_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD)\ntest_unit_tctildr_nodl_LDFLAGS = -Wl,--wrap=Tss2_Tcti_Device_Init \\\n        -Wl,--wrap=Tss2_Tcti_Mssim_Init,--wrap=tcti_from_init\ntest_unit_tctildr_nodl_SOURCES = test/unit/tctildr-nodl.c \\\n        src/tss2-tcti/tctildr-nodl.c\n\ntest_unit_tctildr_tcti_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_tctildr_tcti_LDADD = $(CMOCKA_LIBS) $(libutil) \\\n    $(libtss2_tcti_device) $(libtss2_tcti_mssim)\ntest_unit_tctildr_tcti_LDFLAGS = -Wl,--wrap=tctildr_get_info \\\n    -Wl,--wrap=tctildr_get_tcti,--wrap=tctildr_finalize_data\ntest_unit_tctildr_tcti_SOURCES = test/unit/tctildr-tcti.c \\\n    src/tss2-tcti/tctildr.c\n\ntest_unit_tctildr_getinfo_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_tctildr_getinfo_LDADD = $(CMOCKA_LIBS) $(libutil) \\\n    $(libtss2_tcti_device) $(libtss2_tcti_mssim)\ntest_unit_tctildr_getinfo_LDFLAGS = -Wl,--wrap=strndup,--wrap=free \\\n    -Wl,--wrap=calloc,--wrap=tctildr_finalize_data \\\n    -Wl,--wrap=tctildr_get_info,--wrap=tctildr_get_tcti\ntest_unit_tctildr_getinfo_SOURCES = test/unit/tctildr-getinfo.c \\\n    src/tss2-tcti/tctildr.c\n\ntest_unit_io_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_io_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu) $(libutil)\ntest_unit_io_LDFLAGS = -Wl,--wrap=connect,--wrap=read,--wrap=socket,--wrap=write\n\ntest_unit_key_value_parse_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_key_value_parse_LDADD   = $(CMOCKA_LIBS) $(libutil)\n\ntest_unit_log_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_log_LDADD   = $(CMOCKA_LIBS) $(libutil)\n\ntest_unit_CommonPreparePrologue_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_CommonPreparePrologue_LDADD = $(CMOCKA_LIBS) $(libtss2_sys) $(libtss2_mu)\ntest_unit_CommonPreparePrologue_SOURCES = test/unit/CommonPreparePrologue.c \\\n    src/tss2-sys/sysapi_util.c\n\ntest_unit_CopyCommandHeader_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_CopyCommandHeader_LDADD = $(CMOCKA_LIBS) $(libtss2_sys) $(libtss2_mu)\ntest_unit_CopyCommandHeader_SOURCES = test/unit/CopyCommandHeader.c \\\n    src/tss2-sys/sysapi_util.c\n\ntest_unit_UINT8_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_UINT8_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_UINT16_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_UINT16_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_UINT32_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_UINT32_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_UINT64_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_UINT64_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_TPMA_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_TPMA_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_TPM2B_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_TPM2B_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_TPMS_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_TPMS_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_TPML_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_TPML_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_TPMT_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_TPMT_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_TPMU_marshal_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_TPMU_marshal_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu)\n\ntest_unit_sys_execute_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_sys_execute_LDADD   = $(CMOCKA_LIBS) $(libtss2_mu) $(libtss2_sys)\ntest_unit_sys_execute_SOURCES = test/unit/sys-execute.c \\\n                                src/tss2-tcti/tcti-common.c src/util/log.c\n\ntest_unit_tss2_rc_CFLAGS  = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_tss2_rc_LDADD   = $(CMOCKA_LIBS) $(libtss2_rc) $(libtss2_sys)\ntest_unit_tss2_rc_SOURCES = test/unit/test_tss2_rc.c\n\nif ESAPI\ntest_unit_esys_context_null_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_unit_esys_context_null_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD)\ntest_unit_esys_context_null_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS) -Wl,--wrap=tctildr_finalize_data,--wrap=tctildr_get_tcti\n\n\ntest_unit_esys_resubmissions_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_unit_esys_resubmissions_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD)\ntest_unit_esys_resubmissions_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_unit_esys_resubmissions_SOURCES = test/unit/esys-resubmissions.c \\\n                                       src/tss2-esys/esys_iutil.c \\\n                                       src/tss2-esys/esys_crypto.c \\\n                                       $(TSS2_ESYS_SRC_CRYPTO)\n\ntest_unit_esys_sequence_finish_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_esys_sequence_finish_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD)\ntest_unit_esys_sequence_finish_LDFLAGS = $(TESTS_LDFLAGS)\n\ntest_unit_esys_tcti_rcs_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_unit_esys_tcti_rcs_LDADD = $(CMOCKA_LIBS) $(TESTS_LDADD)\ntest_unit_esys_tcti_rcs_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_unit_esys_tcti_rcs_SOURCES = test/unit/esys-tcti-rcs.c \\\n                                  src/tss2-esys/esys_iutil.c \\\n                                  src/tss2-esys/esys_crypto.c \\\n                                  $(TSS2_ESYS_SRC_CRYPTO)\n\ntest_unit_esys_tpm_rcs_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_unit_esys_tpm_rcs_LDADD = $(CMOCKA_LIBS) $(TESTS_LDADD)\ntest_unit_esys_tpm_rcs_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_unit_esys_tpm_rcs_SOURCES = test/unit/esys-tpm-rcs.c \\\n                                 src/tss2-esys/esys_iutil.c \\\n                                 src/tss2-esys/esys_crypto.c \\\n                                 $(TSS2_ESYS_SRC_CRYPTO)\n\ntest_unit_esys_getpollhandles_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_esys_getpollhandles_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD)\ntest_unit_esys_getpollhandles_LDFLAGS = $(TESTS_LDFLAGS)\n\ntest_unit_esys_nulltcti_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_unit_esys_nulltcti_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD) $(LIBADD_DL)\ntest_unit_esys_nulltcti_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) \\\n    $(LIBDL_LDFLAGS) -Wl,--wrap=Tss2_TctiLdr_Initialize -Wl,--wrap=Tss2_TctiLdr_Finalize\ntest_unit_esys_nulltcti_SOURCES = test/unit/esys-nulltcti.c \\\n                                  src/tss2-esys/esys_context.c \\\n                                  src/tss2-esys/esys_iutil.c \\\n                                  src/tss2-esys/esys_crypto.c \\\n                                  $(TSS2_ESYS_SRC_CRYPTO)\n\ntest_unit_esys_crypto_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_unit_esys_crypto_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD) $(LIBADD_DL)\ntest_unit_esys_crypto_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_unit_esys_crypto_SOURCES = test/unit/esys-crypto.c \\\n                                src/tss2-esys/esys_context.c \\\n                                src/tss2-esys/esys_iutil.c \\\n                                src/tss2-tcti/tctildr.c \\\n                                src/tss2-tcti/tctildr-dl.c \\\n                                src/tss2-esys/esys_crypto.c \\\n                                $(TSS2_ESYS_SRC_CRYPTO)\nendif # ESAPI\n\nif FAPI\n\ntest_unit_fapi_json_CFLAGS = $(CMOCKA_CFLAGS) $(TESTS_CFLAGS)\ntest_unit_fapi_json_LDADD = $(CMOCKA_LIBS)  $(TESTS_LDADD)\ntest_unit_fapi_json_LDFLAGS = $(TESTS_LDFLAGS) -ljson-c\ntest_unit_fapi_json_SOURCES = test/unit/fapi-json.c \\\n                              src/tss2-fapi/ifapi_json_deserialize.c \\\n                              src/tss2-fapi/ifapi_json_serialize.c \\\n                              src/tss2-fapi/ifapi_policy_json_deserialize.c \\\n                              src/tss2-fapi/ifapi_policy_json_serialize.c \\\n                              src/tss2-fapi/tpm_json_deserialize.c \\\n                              src/tss2-fapi/tpm_json_serialize.c\n\nendif # FAPI\nendif # UNIT\n\nif ENABLE_INTEGRATION\ntest_tpmclient_tpmclient_int_CFLAGS   = $(AM_CFLAGS) -U_FORTIFY_SOURCE  $(TESTS_CFLAGS)\ntest_tpmclient_tpmclient_int_LDADD    = $(TESTS_LDADD)\ntest_tpmclient_tpmclient_int_SOURCES  = \\\n    test/tpmclient/tpmclient.int.c test/integration/main-sapi.c\n\ntest_integration_libtest_utils_la_CFLAGS = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_libtest_utils_la_SOURCES = \\\n    test/integration/sapi-context-util.c test/integration/context-util.h \\\n    test/integration/sapi-util.c    test/integration/sapi-util.h \\\n    test/integration/sapi-session-util.c test/integration/session-util.h \\\n    test/integration/sapi-test-options.c test/integration/test-options.h \\\n    test/integration/sapi-entity-util.c test/integration/test.h \\\n    src/util/log.c\n\ntest_integration_sapi_asymmetric_encrypt_decrypt_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_asymmetric_encrypt_decrypt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_asymmetric_encrypt_decrypt_int_SOURCES = \\\n    test/integration/sapi-asymmetric-encrypt-decrypt.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_nv_policy_locality_int_CFLAGS = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_nv_policy_locality_int_LDADD = $(TESTS_LDADD)\ntest_integration_sapi_nv_policy_locality_int_SOURCES = \\\n    test/integration/sapi-nv-policy-locality.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_nv_readwrite_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_nv_readwrite_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_nv_readwrite_int_SOURCES = \\\n    test/integration/sapi-nv-readwrite.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_hmac_auth_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_hmac_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_hmac_auth_int_SOURCES = \\\n    test/integration/sapi-hmac-auth.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_primary_rsa_2K_aes128cfb_int_CFLAGS = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_primary_rsa_2K_aes128cfb_int_LDADD  = $(TESTS_LDADD)\ntest_integration_sapi_primary_rsa_2K_aes128cfb_int_SOURCES = \\\n    test/integration/sapi-primary-rsa-2K-aes128cfb.int.c \\\n    test/integration/main-sapi.c\n\ntest_integration_sapi_create_keyedhash_sha1_hmac_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_create_keyedhash_sha1_hmac_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_create_keyedhash_sha1_hmac_int_SOURCES = \\\n    test/integration/sapi-create-keyedhash-sha1-hmac.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_encrypt_decrypt_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_encrypt_decrypt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_encrypt_decrypt_int_SOURCES = \\\n    test/integration/sapi-encrypt-decrypt.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_encrypt_decrypt_2_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_encrypt_decrypt_2_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_encrypt_decrypt_2_int_SOURCES = \\\n    test/integration/sapi-encrypt-decrypt-2.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_evict_ctrl_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_evict_ctrl_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_evict_ctrl_int_SOURCES = \\\n    test/integration/sapi-evict-ctrl.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_sys_initialize_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_sys_initialize_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_sys_initialize_int_SOURCES = test/integration/sapi-sys-initialize.int.c \\\n    test/integration/main-sapi.c\n\ntest_integration_sapi_stir_random_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_stir_random_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_stir_random_int_SOURCES = test/integration/sapi-stir-random.int.c \\\n    test/integration/main-sapi.c\n\ntest_integration_sapi_get_random_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_get_random_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_get_random_int_SOURCES = test/integration/sapi-get-random.int.c \\\n    test/integration/main-sapi.c\n\ntest_integration_sapi_abi_version_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_abi_version_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_abi_version_int_SOURCES = test/integration/sapi-abi-version.int.c \\\n    test/integration/main-sapi.c\n\ntest_integration_sapi_pcr_extension_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_pcr_extension_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_pcr_extension_int_SOURCES = test/integration/sapi-pcr-extension.int.c \\\n    test/integration/main-sapi.c\n\ntest_integration_sapi_self_test_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_self_test_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_self_test_int_SOURCES = test/integration/sapi-self-test.int.c \\\n    test/integration/main-sapi.c\n\ntest_integration_sapi_hierarchy_change_auth_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_hierarchy_change_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_hierarchy_change_auth_int_SOURCES = \\\n    test/integration/sapi-hierarchy-change-auth.int.c test/integration/main-sapi.c\n\ntest_integration_sapi_start_auth_session_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_start_auth_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_start_auth_session_int_SOURCES = test/integration/main-sapi.c \\\n    test/integration/sapi-start-auth-session.int.c\n\ntest_integration_sapi_tpm_properties_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_tpm_properties_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_tpm_properties_int_SOURCES = test/integration/main-sapi.c \\\n    test/integration/sapi-tpm-properties.int.c\n\ntest_integration_sapi_system_api_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_system_api_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_system_api_int_SOURCES = test/integration/main-sapi.c \\\n    test/integration/sapi-system-api.int.c\n\ntest_integration_sapi_aram_encrypt_decrypt_int_CFLAGS  = $(AM_CFLAGS) $(TESTS_CFLAGS)\ntest_integration_sapi_param_encrypt_decrypt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_param_encrypt_decrypt_int_SOURCES = \\\n    test/integration/sapi-param-encrypt-decrypt.int.c test/integration/main-sapi.c\n\nif ESAPI\nESYS_SRC_UTIL_CRYPTO_SRC = src/tss2-esys/esys_iutil.c \\\n                           src/tss2-esys/esys_crypto.c \\\n                           $(TSS2_ESYS_SRC_CRYPTO)\n\ntest_integration_esys_audit_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_audit_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_audit_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_audit_int_SOURCES = \\\n    test/integration/esys-audit.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_certify_creation_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_certify_creation_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_certify_creation_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_certify_creation_int_SOURCES = \\\n    test/integration/esys-certify-creation.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_certify_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_certify_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_certify_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_certify_int_SOURCES = \\\n    test/integration/esys-certify.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_change_eps_int_CFLAGS = $(TESTS_CFLAGS)\ntest_integration_esys_change_eps_int_LDADD = $(TESTS_LDADD)\ntest_integration_esys_change_eps_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_change_eps_int_SOURCES = \\\n    test/integration/esys-change-eps.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_clear_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_clear_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_clear_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_clear_int_SOURCES = \\\n    test/integration/esys-clear.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_clear_control_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_clear_control_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_clear_control_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_clear_control_int_SOURCES = \\\n    test/integration/esys-clear-control.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_clear_session_int_CFLAGS  = $(TESTS_CFLAGS) -DTEST_SESSION\ntest_integration_esys_clear_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_clear_session_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_clear_session_int_SOURCES = \\\n    test/integration/esys-clear.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_clockset_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_clockset_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_clockset_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_clockset_int_SOURCES = \\\n    test/integration/esys-clockset.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_commit_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_commit_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_commit_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_commit_int_SOURCES = \\\n    test/integration/esys-commit.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_fail_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_fail_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_fail_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_create_fail_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-fail.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_createloaded_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_createloaded_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_createloaded_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_createloaded_int_SOURCES = \\\n    test/integration/esys-createloaded.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_createloaded_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_SESSION\ntest_integration_esys_createloaded_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_createloaded_session_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_createloaded_session_int_SOURCES = \\\n    test/integration/esys-createloaded.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_password_auth_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_password_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_password_auth_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_create_password_auth_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-password-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_policy_auth_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_policy_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_policy_auth_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_create_policy_auth_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-policy-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_primary_ecc_hmac_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_primary_ecc_hmac_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_primary_ecc_hmac_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_create_primary_ecc_hmac_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-primary-hmac.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_primary_hmac_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_primary_hmac_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_primary_hmac_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_create_primary_hmac_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-primary-hmac.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_session_auth_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_AES_ENCRYPTION $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_session_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_session_auth_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_create_session_auth_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-session-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_session_auth_bound_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_AES_ENCRYPTION -DTEST_BOUND_SESSION $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_session_auth_bound_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_session_auth_bound_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_create_session_auth_bound_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-session-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_session_auth_ecc_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_AES_ENCRYPTION -DTEST_ECC $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_session_auth_ecc_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_session_auth_ecc_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_create_session_auth_ecc_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-session-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_create_session_auth_xor_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_XOR_OBFUSCATION $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_create_session_auth_xor_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_create_session_auth_xor_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_create_session_auth_xor_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-create-session-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_duplicate_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_duplicate_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_duplicate_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_duplicate_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-duplicate.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_ecc_parameters_int_CFLAGS = $(TESTS_CFLAGS)\ntest_integration_esys_ecc_parameters_int_LDADD = $(TESTS_LDADD)\ntest_integration_esys_ecc_parameters_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_ecc_parameters_int_SOURCES = \\\n    test/integration/esys-ecc-parameters.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_ecdh_keygen_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_ecdh_keygen_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_ecdh_keygen_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_ecdh_keygen_int_SOURCES = \\\n    test/integration/esys-ecdh-keygen.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_ecdh_zgen_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_ecdh_zgen_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_ecdh_zgen_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_ecdh_zgen_int_SOURCES = \\\n    test/integration/esys-ecdh-zgen.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_encrypt_decrypt_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_encrypt_decrypt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_encrypt_decrypt_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_encrypt_decrypt_int_SOURCES = \\\n    test/integration/esys-encrypt-decrypt.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_event_sequence_complete_int_CFLAGS = $(TESTS_CFLAGS)\ntest_integration_esys_event_sequence_complete_int_LDADD = $(TESTS_LDADD)\ntest_integration_esys_event_sequence_complete_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_event_sequence_complete_int_SOURCES = \\\n    test/integration/esys-event-sequence-complete.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_evict_control_serialization_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_evict_control_serialization_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_evict_control_serialization_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_evict_control_serialization_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-evict-control-serialization.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_field_upgrade_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_field_upgrade_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_field_upgrade_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_field_upgrade_int_SOURCES = \\\n    test/integration/esys-field-upgrade.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_firmware_read_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_firmware_read_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_firmware_read_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_firmware_read_int_SOURCES = \\\n    test/integration/esys-firmware-read.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_get_capability_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_get_capability_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_get_capability_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_get_capability_int_SOURCES = \\\n    test/integration/esys-get-capability.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_get_random_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_get_random_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_get_random_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_get_random_int_SOURCES = \\\n    test/integration/esys-get-random.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_get_time_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_get_time_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_get_time_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_get_time_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-get-time.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hash_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_hash_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hash_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hash_int_SOURCES = \\\n    test/integration/esys-hash.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hashsequencestart_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_hashsequencestart_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hashsequencestart_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hashsequencestart_int_SOURCES = \\\n    test/integration/esys-hashsequencestart.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hashsequencestart_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_SESSION\ntest_integration_esys_hashsequencestart_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hashsequencestart_session_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hashsequencestart_session_int_SOURCES = \\\n    test/integration/esys-hashsequencestart.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hierarchy_control_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_hierarchy_control_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hierarchy_control_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hierarchy_control_int_SOURCES = \\\n    test/integration/esys-hierarchy-control.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hmac_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_hmac_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hmac_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hmac_int_SOURCES = \\\n    test/integration/esys-hmac.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hmacsequencestart_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_hmacsequencestart_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hmacsequencestart_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hmacsequencestart_int_SOURCES = \\\n    test/integration/esys-hmacsequencestart.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hmacsequencestart_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_SESSION\ntest_integration_esys_hmacsequencestart_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hmacsequencestart_session_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hmacsequencestart_session_int_SOURCES = \\\n    test/integration/esys-hmacsequencestart.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_hierarchychangeauth_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_hierarchychangeauth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_hierarchychangeauth_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_hierarchychangeauth_int_SOURCES = \\\n    test/integration/esys-hierarchychangeauth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_import_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_import_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_import_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_import_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-import.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_lock_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_lock_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_lock_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_lock_int_SOURCES = \\\n    test/integration/esys-lock.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_make_credential_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_make_credential_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_make_credential_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_make_credential_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-make-credential.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_make_credential_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_SESSION $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_make_credential_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_make_credential_session_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_make_credential_session_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-make-credential.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_certify_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_nv_certify_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_certify_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_nv_certify_int_SOURCES = \\\n    test/integration/esys-nv-certify.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_counter_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_counter_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_counter_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_nv_ram_counter_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-counter.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_counter_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_SESSION $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_counter_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_counter_session_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_nv_ram_counter_session_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-counter.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_extend_index_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_extend_index_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_extend_index_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_nv_ram_extend_index_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-extend-index.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_extend_index_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_SESSION $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_extend_index_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_extend_index_session_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_nv_ram_extend_index_session_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-extend-index.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_ordinary_index_rlock_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -I. -I$(srcdir)/src/esapi/esapi -I$(srcdir)/include/esapi -I$(srcdir)/test/integration/ \\\n    -I$(srcdir)/src/esapi/esapi_util -DTEST_READ_LOCK $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_ordinary_index_rlock_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_ordinary_index_rlock_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_nv_ram_ordinary_index_rlock_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-ordinary-index.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_ordinary_index_rlock_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -I. -I$(srcdir)/src/esapi/esapi -I$(srcdir)/include/esapi -I$(srcdir)/include/esapi \\\n    -I$(srcdir)/src/esapi/esapi_util -DTEST_SESSION -DTEST_READ_LOCK $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_ordinary_index_rlock_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_ordinary_index_rlock_session_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_nv_ram_ordinary_index_rlock_session_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-ordinary-index.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_ordinary_index_wlock_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -I. -I$(srcdir)/src/esapi/esapi -I$(srcdir)/include/esapi -I$(srcdir)/include/esapi \\\n    -I$(srcdir)/src/esapi/esapi_util  -DTEST_WRITE_LOCK $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_ordinary_index_wlock_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_ordinary_index_wlock_int_LDFLAGS = $(TESTS_LDFLAGS) \\\n                                                                $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_nv_ram_ordinary_index_wlock_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-ordinary-index.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_ordinary_index_wlock_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -I. -I$(srcdir)/src/esapi/esapi -I$(srcdir)/include/esapi -I$(srcdir)/include/esapi \\\n    -I$(srcdir)/src/esapi/esapi_util -DTEST_SESSION -DTEST_WRITE_LOCK $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_ordinary_index_wlock_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_ordinary_index_wlock_session_int_LDFLAGS = $(TESTS_LDFLAGS) \\\n                                                                        $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_nv_ram_ordinary_index_wlock_session_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-ordinary-index.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_set_bits_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_set_bits_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_set_bits_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_nv_ram_set_bits_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-set-bits.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_nv_ram_set_bits_session_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_SESSION $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_nv_ram_set_bits_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_nv_ram_set_bits_session_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_nv_ram_set_bits_session_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-nv-ram-set-bits.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_object_changeauth_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_object_changeauth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_object_changeauth_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_object_changeauth_int_SOURCES = \\\n    test/integration/esys-object-changeauth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_authorize_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_policy_authorize_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_authorize_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_policy_authorize_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-policy-authorize.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_physical_presence_opt_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_policy_physical_presence_opt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_physical_presence_opt_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_policy_physical_presence_opt_int_SOURCES = \\\n    test/integration/esys-policy-physical-presence-opt.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_regression_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_policy_regression_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_regression_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_policy_regression_int_SOURCES = \\\n    test/integration/esys-policy-regression.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_authorize_nv_opt_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_policy_authorize_nv_opt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_authorize_nv_opt_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_policy_authorize_nv_opt_int_SOURCES = \\\n    test/integration/esys-policy-authorize-nv-opt.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_template_opt_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_policy_template_opt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_template_opt_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_policy_template_opt_int_SOURCES = \\\n    test/integration/esys-policy-template-opt.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_ticket_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_policy_ticket_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_ticket_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_policy_ticket_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-policy-ticket.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_nv_changeauth_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_policy_nv_changeauth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_nv_changeauth_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_policy_nv_changeauth_int_SOURCES = \\\n    test/integration/esys-policy-nv-changeauth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_nv_undefine_special_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_policy_nv_undefine_special_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_nv_undefine_special_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_policy_nv_undefine_special_int_SOURCES = \\\n    test/integration/esys-policy-nv-undefine-special.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_policy_password_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_policy_password_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_policy_password_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_policy_password_int_SOURCES = \\\n    test/integration/esys-policy-password.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_pcr_basic_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_pcr_basic_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_pcr_basic_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_pcr_basic_int_SOURCES = \\\n    test/integration/esys-pcr-basic.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_pcr_auth_value_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_pcr_auth_value_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_pcr_auth_value_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_pcr_auth_value_int_SOURCES = \\\n    test/integration/esys-pcr-auth-value.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_pp_commands_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_pp_commands_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_pp_commands_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_pp_commands_int_SOURCES = \\\n    test/integration/esys-pp-commands.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_quote_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_quote_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_quote_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_quote_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-quote.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_rsa_encrypt_decrypt_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_rsa_encrypt_decrypt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_rsa_encrypt_decrypt_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_rsa_encrypt_decrypt_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-rsa-encrypt-decrypt.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_save_and_load_context_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_save_and_load_context_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_save_and_load_context_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_save_and_load_context_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-save-and-load-context.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_session_attributes_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_session_attributes_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_session_attributes_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_session_attributes_int_SOURCES = \\\n    test/integration/esys-session-attributes.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_set_algorithm_set_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_set_algorithm_set_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_set_algorithm_set_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_set_algorithm_set_int_SOURCES = \\\n    test/integration/esys-set-algorithm-set.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_stir_random_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_stir_random_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_stir_random_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_stir_random_int_SOURCES = \\\n    test/integration/esys-stir-random.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_testparms_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_testparms_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_testparms_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_testparms_int_SOURCES = \\\n    test/integration/esys-testparms.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tpm_tests_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tpm_tests_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tpm_tests_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tpm_tests_int_SOURCES = \\\n    test/integration/esys-tpm-tests.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tr_fromTpmPublic_key_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tr_fromTpmPublic_key_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tr_fromTpmPublic_key_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tr_fromTpmPublic_key_int_SOURCES = \\\n    test/integration/esys-tr-fromTpmPublic-key.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tr_fromTpmPublic_nv_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tr_fromTpmPublic_nv_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tr_fromTpmPublic_nv_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tr_fromTpmPublic_nv_int_SOURCES = \\\n    test/integration/esys-tr-fromTpmPublic-nv.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tr_fromTpmPublic_session_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tr_fromTpmPublic_session_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tr_fromTpmPublic_session_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tr_fromTpmPublic_session_int_SOURCES = \\\n    test/integration/esys-tr-fromTpmPublic-session.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tr_getName_hierarchy_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tr_getName_hierarchy_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tr_getName_hierarchy_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tr_getName_hierarchy_int_SOURCES = \\\n    test/integration/esys-tr-getName-hierarchy.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tr_getTpmHandle_key_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tr_getTpmHandle_key_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tr_getTpmHandle_key_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tr_getTpmHandle_key_int_SOURCES = \\\n    test/integration/esys-tr-getTpmHandle-key.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tr_getTpmHandle_nv_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tr_getTpmHandle_nv_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tr_getTpmHandle_nv_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tr_getTpmHandle_nv_int_SOURCES = \\\n    test/integration/esys-tr-getTpmHandle-nv.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_unseal_password_auth_int_CFLAGS  = $(TESTS_CFLAGS) $(TSS2_ESYS_CFLAGS_CRYPTO)\ntest_integration_esys_unseal_password_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_unseal_password_auth_int_LDFLAGS = $(TESTS_LDFLAGS) $(TSS2_ESYS_LDFLAGS_CRYPTO) $(LIBDL_LDFLAGS)\ntest_integration_esys_unseal_password_auth_int_SOURCES = \\\n    $(ESYS_SRC_UTIL_CRYPTO_SRC) \\\n    test/integration/esys-unseal-password-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_verify_signature_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_verify_signature_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_verify_signature_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_verify_signature_int_SOURCES = \\\n    test/integration/esys-verify-signature.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_zgen_2phase_int_CFLAGS = $(TESTS_CFLAGS)\ntest_integration_esys_zgen_2phase_int_LDADD = $(TESTS_LDADD)\ntest_integration_esys_zgen_2phase_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_zgen_2phase_int_SOURCES = \\\n    test/integration/esys-zgen-2phase.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_auto_session_flags_int_CFLAGS = $(TESTS_CFLAGS)\ntest_integration_esys_auto_session_flags_int_LDADD = $(TESTS_LDADD)\ntest_integration_esys_auto_session_flags_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_auto_session_flags_int_SOURCES = \\\n    test/integration/esys-auto-session-flags.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\ntest_integration_esys_tpm_clear_auth_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_esys_tpm_clear_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_esys_tpm_clear_auth_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_esys_tpm_clear_auth_int_SOURCES = \\\n    test/integration/esys-tpm-clear-auth.int.c \\\n    test/integration/main-esapi.c test/integration/test-esapi.h\n\nendif #ESAPI\n\ntest_integration_sapi_policy_template_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_sapi_policy_template_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_policy_template_int_SOURCES = test/integration/main-sapi.c \\\n    test/integration/sapi-policy-template.int.c\n\ntest_integration_sapi_create_loaded_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_sapi_create_loaded_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_create_loaded_int_SOURCES = test/integration/main-sapi.c \\\n    test/integration/sapi-create-loaded.int.c\n\ntest_integration_sapi_policy_authorizeNV_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_sapi_policy_authorizeNV_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_policy_authorizeNV_int_SOURCES = test/integration/main-sapi.c \\\n    test/integration/sapi-policy-authorizeNV.int.c\n\ntest_integration_sapi_command_cancel_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_sapi_command_cancel_int_LDADD   = $(TESTS_LDADD)\ntest_integration_sapi_command_cancel_int_SOURCES = test/integration/main-sapi.c \\\n    test/integration/sapi-command-cancel.int.c src/util/log.c\n\nif FAPI\ntest_integration_fapi_get_random_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_get_random_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_get_random_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_get_random_int_SOURCES = \\\n    test/integration/fapi-get-random.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_platform_certificates_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_platform_certificates_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_platform_certificates_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_platform_certificates_int_SOURCES = \\\n    test/integration/fapi-platform-certificates.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_create_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_password_provision_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_create_sign_password_provision_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_password_provision_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_password_provision_int_SOURCES = \\\n    test/integration/fapi-key-create-sign-password-provision.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_policy_provision_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PROFILE=\\\"P_RSA_sh_policy\\\" -DFAPI_TEST_EK_CERT_LESS\ntest_integration_fapi_key_create_sign_policy_provision_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_policy_provision_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_policy_provision_int_SOURCES = \\\n    test/integration/fapi-key-create-sign-policy-provision.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_rsa_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_key_create_sign_rsa_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_rsa_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_rsa_int_SOURCES = \\\n    test/integration/fapi-key-create-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_password_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PASSWORD\ntest_integration_fapi_key_create_sign_password_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_password_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_password_int_SOURCES = \\\n    test/integration/fapi-key-create-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_password_da_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PASSWORD -DFAPI_DA\ntest_integration_fapi_key_create_sign_password_da_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_password_da_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_password_da_int_SOURCES = \\\n    test/integration/fapi-key-create-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_sign_persistent_int_CFLAGS  = $(TESTS_CFLAGS) \\\n   -DFAPI_PROFILE=\\\"P_RSA_EK_persistent\\\" -DFAPI_TEST_EK_CERT_LESS\ntest_integration_fapi_key_create_sign_persistent_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_sign_persistent_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_sign_persistent_int_SOURCES = \\\n    test/integration/fapi-key-create-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_authorize_sign_int_CFLAGS  = $(TESTS_CFLAGS) -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_key_create_policy_authorize_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_authorize_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_authorize_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-authorize-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_authorize_sign_rsa_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DFAPI_PROFILE=\\\"P_RSA256\\\" -DFAPI_TEST_EK_CERT_LESS\ntest_integration_fapi_key_create_policy_authorize_sign_rsa_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_authorize_sign_rsa_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_authorize_sign_rsa_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-authorize-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_authorize_nv_sign_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_create_policy_authorize_nv_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_authorize_nv_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_authorize_nv_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-authorize-nv-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_secret_nv_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DFAPI_PROFILE=\\\"P_RSA256\\\" -DFAPI_TEST_EK_CERT_LESS\ntest_integration_fapi_key_create_policy_secret_nv_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_secret_nv_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_secret_nv_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-secret-nv-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_pcr_sign_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_create_policy_pcr_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_pcr_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_pcr_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-pcr-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_signed_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_create_policy_signed_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_signed_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_signed_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-signed.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_signed_ecc_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DTEST_ECC\ntest_integration_fapi_key_create_policy_signed_ecc_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_signed_ecc_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_signed_ecc_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-signed.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_nv_sign_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_create_policy_nv_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_nv_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_nv_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-nv-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_or_sign_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_create_policy_or_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_or_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_or_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policy-or-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_password_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_POLICY_PASSWORD -DTEST_PASSWORD\ntest_integration_fapi_key_create_policy_password_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_password_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_password_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policies-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_countertimer_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_POLICY_COUNTERTIMER\ntest_integration_fapi_key_create_policy_countertimer_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_countertimer_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_countertimer_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policies-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_physical_presence_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_POLICY_PHYSICAL_PRESENCE\ntest_integration_fapi_key_create_policy_physical_presence_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_physical_presence_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_physical_presence_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policies-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_locality_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_POLICY_LOCALITY\ntest_integration_fapi_key_create_policy_locality_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_locality_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_locality_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policies-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_command_code_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n    -DTEST_POLICY_COMMAND_CODE\ntest_integration_fapi_key_create_policy_command_code_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_command_code_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_command_code_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policies-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_policy_auth_value_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DTEST_POLICY_AUTH_VALUE -DTEST_PASSWORD\ntest_integration_fapi_key_create_policy_auth_value_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_policy_auth_value_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_policy_auth_value_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-policies-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_ckda_sign_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_key_create_ckda_sign_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_ckda_sign_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_ckda_sign_int_SOURCES = \\\n    test/integration/fapi-key-create-ckda-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_ckda_sign_password_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PASSWORD  -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_key_create_ckda_sign_password_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_ckda_sign_password_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_ckda_sign_password_int_SOURCES = \\\n    test/integration/fapi-key-create-ckda-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_create_ckda_sign_password_da_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PASSWORD -DFAPI_DA  -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_key_create_ckda_sign_password_da_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_create_ckda_sign_password_da_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_create_ckda_sign_password_da_int_SOURCES = \\\n    test/integration/fapi-key-create-ckda-sign.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_key_change_auth_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_key_change_auth_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_key_change_auth_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_key_change_auth_int_SOURCES = \\\n    test/integration/fapi-key-change-auth.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_nv_ordinary_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_nv_ordinary_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_nv_ordinary_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_nv_ordinary_int_SOURCES = \\\n    test/integration/fapi-nv-ordinary.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_nv_authorizenv_cphash_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_nv_authorizenv_cphash_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_nv_authorizenv_cphash_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_nv_authorizenv_cphash_int_SOURCES = \\\n    test/integration/fapi-nv-authorizenv-cphash.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_nv_extend_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_nv_extend_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_nv_extend_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_nv_extend_int_SOURCES = \\\n    test/integration/fapi-nv-extend.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_nv_increment_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_nv_increment_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_nv_increment_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_nv_increment_int_SOURCES = \\\n    test/integration/fapi-nv-increment.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_nv_set_bits_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_nv_set_bits_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_nv_set_bits_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_nv_set_bits_int_SOURCES = \\\n    test/integration/fapi-nv-set-bits.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_nv_written_policy_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_nv_written_policy_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_nv_written_policy_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_nv_written_policy_int_SOURCES = \\\n    test/integration/fapi-nv-written-policy.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_ext_public_key_int_CFLAGS  = $(TESTS_CFLAGS) \\\n  -DFAPI_NONTPM\ntest_integration_fapi_ext_public_key_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_ext_public_key_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_ext_public_key_int_SOURCES = \\\n    test/integration/fapi-ext-public-key.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_data_crypt_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_data_crypt_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_data_crypt_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_data_crypt_int_SOURCES = \\\n    test/integration/fapi-data-crypt.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_data_crypt_rsa_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_data_crypt_rsa_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_data_crypt_rsa_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_data_crypt_rsa_int_SOURCES = \\\n    test/integration/fapi-data-crypt.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_duplicate_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_duplicate_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_duplicate_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_duplicate_int_SOURCES = \\\n    test/integration/fapi-duplicate.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\n\ntest_integration_fapi_pcr_test_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_pcr_test_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_pcr_test_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_pcr_test_int_SOURCES = \\\n    test/integration/fapi-pcr-test.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_quote_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_quote_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_quote_int_LDFLAGS = $(TESTS_LDFLAGS) -ljson-c\ntest_integration_fapi_quote_int_SOURCES = \\\n    test/integration/fapi-quote.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_quote_rsa_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_quote_rsa_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_quote_rsa_int_LDFLAGS = $(TESTS_LDFLAGS) -ljson-c\ntest_integration_fapi_quote_rsa_int_SOURCES = \\\n    test/integration/fapi-quote.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\n\ntest_integration_fapi_info_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_info_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_info_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_info_int_SOURCES = \\\n    test/integration/fapi-info.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_unseal_int_CFLAGS  = $(TESTS_CFLAGS)\ntest_integration_fapi_unseal_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_unseal_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_unseal_int_SOURCES = \\\n    test/integration/fapi-unseal.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_provision_fingerprint_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_TEST_FINGERPRINT  -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_provision_fingerprint_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_provision_fingerprint_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_provision_fingerprint_int_SOURCES = \\\n    test/integration/fapi-get-random.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_provision_certificate_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_TEST_CERTIFICATE  -DFAPI_PROFILE=\\\"P_RSA\\\"\ntest_integration_fapi_provision_certificate_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_provision_certificate_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_provision_certificate_int_SOURCES = \\\n    test/integration/fapi-get-random.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_provision_fingerprint_ecc_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_TEST_FINGERPRINT_ECC  -DFAPI_PROFILE=\\\"P_ECC\\\"\ntest_integration_fapi_provision_fingerprint_ecc_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_provision_fingerprint_ecc_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_provision_fingerprint_ecc_int_SOURCES = \\\n    test/integration/fapi-get-random.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\ntest_integration_fapi_provision_certificate_ecc_int_CFLAGS  = $(TESTS_CFLAGS) \\\n -DFAPI_TEST_CERTIFICATE_ECC  -DFAPI_PROFILE=\\\"P_ECC\\\"\ntest_integration_fapi_provision_certificate_ecc_int_LDADD   = $(TESTS_LDADD)\ntest_integration_fapi_provision_certificate_ecc_int_LDFLAGS = $(TESTS_LDFLAGS)\ntest_integration_fapi_provision_certificate_ecc_int_SOURCES = \\\n    test/integration/fapi-get-random.int.c \\\n    test/integration/main-fapi.c test/integration/test-fapi.h\n\nendif #FAPI\n\nendif #ENABLE_INTEGRATION\n\ncheck-ptpm:\n\t$(MAKE) -j1 check\n",
        "/tmp/vanessa/spack-stage/spack-stage-tpm2-tss-2.4.1-pcbrn5ftkezadertd4khyzadqwby6xxk/spack-src/src/tss2-tcti/tctildr-dl.c": "/* SPDX-License-Identifier: BSD-2-Clause */\n/*******************************************************************************\n * Copyright 2017-2018, Fraunhofer SIT sponsored by Infineon Technologies AG\n * Copyright 2019, Intel Corporation\n * All rights reserved.\n *******************************************************************************/\n\n#ifdef HAVE_CONFIG_H\n#include <config.h>\n#endif\n\n#include <stdlib.h>\n#include <errno.h>\n#include <string.h>\n#include <inttypes.h>\n#include <dlfcn.h>\n#include <limits.h>\n#include <stdio.h>\n\n#include \"tss2_tcti.h\"\n#include \"tctildr-interface.h\"\n#include \"tctildr.h\"\n#define LOGMODULE tcti\n#include \"util/log.h\"\n\n#define ARRAY_SIZE(X) (sizeof(X)/sizeof(X[0]))\n\nstruct {\n    char *file;\n    char *conf;\n    char *description;\n} tctis[] = {\n    {\n        .file = \"libtss2-tcti-default.so\",\n        .description = \"Access libtss2-tcti-default.so\",\n    },\n    {\n        .file = \"libtss2-tcti-tabrmd.so.0\",\n        .description = \"Access libtss2-tcti-tabrmd.so\",\n    },\n    {\n        .file = \"libtss2-tcti-device.so.0\",\n        .conf = \"/dev/tpmrm0\",\n        .description = \"Access libtss2-tcti-device.so.0 with /dev/tpmrm0\",\n    },\n    {\n        .file = \"libtss2-tcti-device.so.0\",\n        .conf = \"/dev/tpm0\",\n        .description = \"Access libtss2-tcti-device.so.0 with /dev/tpm0\",\n    },\n    {\n        .file = \"libtss2-tcti-mssim.so.0\",\n        .description = \"Access to libtss2-tcti-mssim.so\",\n    },\n};\n\nconst TSS2_TCTI_INFO*\ninfo_from_handle (void *dlhandle)\n{\n    TSS2_TCTI_INFO_FUNC info_func;\n\n    if (dlhandle == NULL)\n        return NULL;\n\n    info_func = dlsym  (dlhandle, TSS2_TCTI_INFO_SYMBOL);\n    if (info_func == NULL) {\n        LOG_ERROR (\"Failed to get reference to TSS2_TCTI_INFO_SYMBOL: %s\",\n                   dlerror());\n        return NULL;\n    }\n\n    return info_func ();\n}\nTSS2_RC\nhandle_from_name(const char *file,\n                 void **handle)\n{\n    char file_xfrm [PATH_MAX] = { 0, };\n    size_t size;\n\n    if (handle == NULL) {\n        return TSS2_TCTI_RC_BAD_REFERENCE;\n    }\n    *handle = dlopen(file, RTLD_NOW);\n    if (*handle != NULL) {\n        return TSS2_RC_SUCCESS;\n    } else {\n        LOG_DEBUG(\"Could not load TCTI file: \\\"%s\\\": %s\", file, dlerror());\n    }\n    /* 'name' alone didn't work, try libtss2-tcti-<name>.so.0 */\n    size = snprintf(file_xfrm,\n                    sizeof (file_xfrm),\n                    TCTI_NAME_TEMPLATE_0,\n                    file);\n    if (size >= sizeof (file_xfrm)) {\n        LOG_ERROR(\"TCTI name truncated in transform.\");\n        return TSS2_TCTI_RC_BAD_VALUE;\n    }\n    *handle = dlopen(file_xfrm, RTLD_NOW);\n    if (*handle != NULL) {\n        return TSS2_RC_SUCCESS;\n    } else {\n        LOG_DEBUG(\"Could not load TCTI file \\\"%s\\\": %s\", file, dlerror());\n    }\n    /* libtss2-tcti-<name>.so.0 didn't work, try libtss2-tcti-<name>.so */\n    size = snprintf(file_xfrm,\n                    sizeof (file_xfrm),\n                    TCTI_NAME_TEMPLATE,\n                    file);\n    if (size >= sizeof (file_xfrm)) {\n        LOG_ERROR(\"TCTI name truncated in transform.\");\n        return TSS2_TCTI_RC_BAD_VALUE;\n    }\n    *handle = dlopen(file_xfrm, RTLD_NOW);\n    if (*handle == NULL) {\n        LOG_DEBUG(\"Failed to load TCTI for name \\\"%s\\\": %s\", file, dlerror());\n        return TSS2_TCTI_RC_NOT_SUPPORTED;\n    }\n\n    return TSS2_RC_SUCCESS;\n}\nTSS2_RC\ntcti_from_file(const char *file,\n               const char* conf,\n               TSS2_TCTI_CONTEXT **tcti,\n               void **dlhandle)\n{\n    TSS2_RC r;\n    void *handle;\n    TSS2_TCTI_INFO_FUNC infof;\n\n    LOG_TRACE(\"Attempting to load TCTI file: %s\", file);\n    if (tcti == NULL) {\n        return TSS2_TCTI_RC_BAD_REFERENCE;\n    }\n    r = handle_from_name(file, &handle);\n    if (r != TSS2_RC_SUCCESS) {\n        return r;\n    }\n\n    infof = (TSS2_TCTI_INFO_FUNC) dlsym(handle, TSS2_TCTI_INFO_SYMBOL);\n    if (infof == NULL) {\n        LOG_ERROR(\"Info not found in TCTI file: %s\", file);\n        dlclose(handle);\n        return TSS2_ESYS_RC_BAD_REFERENCE;\n    }\n\n    r = tcti_from_info(infof, conf, tcti);\n    if (r != TSS2_RC_SUCCESS) {\n        LOG_ERROR(\"Could not initialize TCTI file: %s\", file);\n        dlclose(handle);\n        return r;\n    }\n\n    if (dlhandle)\n        *dlhandle = handle;\n\n    LOG_DEBUG(\"Initialized TCTI file: %s\", file);\n\n    return TSS2_RC_SUCCESS;\n}\nTSS2_RC\nget_info_default(const TSS2_TCTI_INFO **info,\n                 void **dlhandle)\n{\n    void *handle = NULL;\n    const TSS2_TCTI_INFO *info_src;\n    char *name = NULL;\n    TSS2_RC rc = TSS2_TCTI_RC_GENERAL_FAILURE;\n\n    LOG_DEBUG(\"%s\", __func__);\n    if (info == NULL || dlhandle == NULL) {\n        LOG_ERROR(\"parameters cannot be NULL\");\n        return TSS2_TCTI_RC_BAD_REFERENCE;\n    }\n#ifdef ESYS_TCTI_DEFAULT_MODULE\n    name = ESYS_TCTI_DEFAULT_MODULE;\n    LOG_DEBUG(\"name: %s\", name);\n    rc = handle_from_name (name, &handle);\n    if (rc != TSS2_RC_SUCCESS)\n        return rc;\n    else if (handle == NULL)\n        return TSS2_TCTI_RC_IO_ERROR;\n#else\n    size_t i;\n    for (i = 0; i < ARRAY_SIZE(tctis); i++) {\n        name = tctis[i].file;\n        LOG_DEBUG(\"name: %s\", name);\n        if (name == NULL) {\n            continue;\n        }\n        rc = handle_from_name (name, &handle);\n        if (rc != TSS2_RC_SUCCESS || handle == NULL) {\n            LOG_DEBUG(\"Failed to get handle for TCTI with name: %s\", name);\n            continue;\n        }\n\n        break;\n    }\n#endif /* ESYS_TCTI_DEFAULT_MODULE */\n\n    info_src = info_from_handle (handle);\n    if (info_src != NULL) {\n        *info = info_src;\n    } else {\n        tctildr_finalize_data (&handle);\n        rc = TSS2_TCTI_RC_GENERAL_FAILURE;\n    }\n    *dlhandle = handle;\n\n    return rc;\n}\n\nTSS2_RC\ntctildr_get_default(TSS2_TCTI_CONTEXT ** tcticontext, void **dlhandle)\n{\n    if (tcticontext == NULL) {\n        LOG_ERROR(\"tcticontext must not be NULL\");\n        return TSS2_TCTI_RC_BAD_REFERENCE;\n    }\n    *tcticontext = NULL;\n#ifdef ESYS_TCTI_DEFAULT_MODULE\n\n#ifdef ESYS_TCTI_DEFAULT_CONFIG\n    const char *config = ESYS_TCTI_DEFAULT_CONFIG;\n#else /* ESYS_TCTI_DEFAULT_CONFIG */\n    const char *config = NULL;\n#endif /* ESYS_TCTI_DEFAULT_CONFIG */\n\n    LOG_DEBUG(\"Attempting to initialize TCTI defined during compilation: %s:%s\",\n              ESYS_TCTI_DEFAULT_MODULE, config);\n    return tcti_from_file(ESYS_TCTI_DEFAULT_MODULE, config, tcticontext,\n                          dlhandle);\n\n#else /* ESYS_TCTI_DEFAULT_MODULE */\n\n    TSS2_RC r;\n    size_t i;\n\n    for (i = 0; i < ARRAY_SIZE(tctis); i++) {\n        LOG_DEBUG(\"Attempting to connect using standard TCTI: %s\",\n                  tctis[i].description);\n        r = tcti_from_file(tctis[i].file, tctis[i].conf, tcticontext,\n                           dlhandle);\n        if (r == TSS2_RC_SUCCESS)\n            return TSS2_RC_SUCCESS;\n        LOG_DEBUG(\"Failed to load standard TCTI number %zu\", i);\n    }\n\n    LOG_ERROR(\"No standard TCTI could be loaded\");\n    return TSS2_TCTI_RC_IO_ERROR;\n\n#endif /* ESYS_TCTI_DEFAULT_MODULE */\n}\nTSS2_RC\ninfo_from_name (const char *name,\n                const TSS2_TCTI_INFO **info,\n                void **data)\n{\n    TSS2_RC rc;\n\n    if (data == NULL || info == NULL)\n        return TSS2_TCTI_RC_BAD_REFERENCE;\n    rc = handle_from_name (name, data);\n    if (rc != TSS2_RC_SUCCESS)\n        return rc;\n    *info = (TSS2_TCTI_INFO*)info_from_handle (*data);\n    if (*info == NULL) {\n        tctildr_finalize_data (data);\n        return TSS2_TCTI_RC_IO_ERROR;\n    }\n    return rc;\n}\nTSS2_RC\ntctildr_get_info(const char *name,\n                 const TSS2_TCTI_INFO **info,\n                 void **data)\n{\n    if (info == NULL) {\n        LOG_ERROR(\"info must not be NULL\");\n        return TSS2_TCTI_RC_BAD_REFERENCE;\n    }\n    if (name != NULL) {\n        return info_from_name (name, info, data);\n    } else {\n        return get_info_default (info, data);\n    }\n}\nTSS2_RC\ntctildr_get_tcti(const char *name,\n                 const char* conf,\n                 TSS2_TCTI_CONTEXT **tcti,\n                 void **data)\n{\n    LOG_DEBUG(\"name: \\\"%s\\\", conf: \\\"%s\\\"\", name, conf);\n    if (tcti == NULL) {\n        LOG_ERROR(\"tcticontext must not be NULL\");\n        return TSS2_TCTI_RC_BAD_REFERENCE;\n    }\n    *tcti = NULL;\n    if (name == NULL) {\n        return tctildr_get_default (tcti, data);\n    }\n\n    return tcti_from_file (name, conf, tcti, data);\n}\n\nvoid\ntctildr_finalize_data (void **data)\n{\n    if (data != NULL && *data != NULL) {\n        dlclose(*data);\n        *data = NULL;\n    }\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-tpm2-tss-2.4.1-pcbrn5ftkezadertd4khyzadqwby6xxk/spack-src/test/unit/tctildr-dl.c": "/* SPDX-License-Identifier: BSD-2-Clause */\n/*******************************************************************************\n * Copyright 2018, Fraunhofer SIT sponsored by Infineon Technologies AG\n * Copyright 2019, Intel Corporation\n * All rights reserved.\n *******************************************************************************/\n\n#ifdef HAVE_CONFIG_H\n#include <config.h>\n#endif\n\n#include <stdio.h>\n#include <stddef.h>\n#include <stdlib.h>\n\n#include <dlfcn.h>\n\n#include <setjmp.h>\n#include <cmocka.h>\n\n#include \"tss2_tcti.h\"\n\n#include \"tss2-tcti/tctildr-interface.h\"\n#include \"tss2-tcti/tctildr-dl.h\"\n#include \"tss2-tcti/tctildr.h\"\n#define LOGMODULE test\n#include \"util/log.h\"\n\n/* global TCTI object, use to return reference from */\nstatic TSS2_TCTI_CONTEXT_COMMON_V2 tcti_instance = { 0, };\n\nchar *\n__wrap_dlerror(void)\n{\n    return (char*)__func__;\n}\n\nvoid *\n__wrap_dlopen(const char *filename, int flags)\n{\n    LOG_TRACE(\"Called with filename %s and flags %x\", filename, flags);\n    check_expected_ptr(filename);\n    check_expected(flags);\n    return mock_type(void *);\n}\n\nint\n__wrap_dlclose(void *handle)\n{\n    LOG_TRACE(\"Called with handle %p\", handle);\n    check_expected_ptr(handle);\n    return mock_type(int);\n}\n\nvoid *\n__wrap_dlsym(void *handle, const char *symbol)\n{\n    LOG_TRACE(\"Called with handle %p and symbol %s\", handle, symbol);\n    check_expected_ptr(handle);\n    check_expected_ptr(symbol);\n    return mock_type(void *);\n}\n\nTSS2_TCTI_INFO *\n__wrap_Tss2_Tcti_Fake_Info(void)\n{\n    LOG_TRACE(\"Called.\");\n    return mock_type(TSS2_TCTI_INFO *);\n}\n\nTSS2_RC\n__wrap_tcti_from_init(TSS2_TCTI_INIT_FUNC init,\n                      const char* conf,\n                      TSS2_TCTI_CONTEXT **tcti)\n{\n    printf(\"%s\", __func__);\n    return mock_type (TSS2_RC);\n}\nTSS2_RC\n__wrap_tcti_from_info(TSS2_TCTI_INFO_FUNC infof,\n                      const char* conf,\n                      TSS2_TCTI_CONTEXT **tcti)\n{\n    check_expected (infof);\n    check_expected (conf);\n    check_expected (tcti);\n    if (tcti != NULL)\n        *tcti = mock_type (TSS2_TCTI_CONTEXT*);\n    return mock_type (TSS2_RC);\n}\n\n#define TEST_HANDLE (void*)0xade0\nstatic void\ntest_info_from_handle_null (void **state)\n{\n    const TSS2_TCTI_INFO* info = info_from_handle (NULL);\n    assert_null (info);\n}\nstatic void\ntest_info_from_handle_dlsym_fail (void **state)\n{\n    expect_value(__wrap_dlsym, handle, TEST_HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, NULL);\n\n    const TSS2_TCTI_INFO* info = info_from_handle (TEST_HANDLE);\n    assert_null (info);\n}\nstatic void\ntest_info_from_handle_success (void **state)\n{\n    TSS2_TCTI_INFO info_instance = { 0, };\n    const TSS2_TCTI_INFO *info = { 0, };\n\n    expect_value(__wrap_dlsym, handle, TEST_HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    will_return(__wrap_Tss2_Tcti_Fake_Info, &info_instance);\n\n    info = info_from_handle (TEST_HANDLE);\n    assert_ptr_equal (info, &info_instance);\n}\n\nstatic void\ntest_fail_null(void **state)\n{\n    TSS2_RC r = tctildr_get_default(NULL, NULL);\n    assert_int_equal(r, TSS2_TCTI_RC_BAD_REFERENCE);\n}\n\nstatic void\ntest_handle_from_name_null_handle (void **state)\n{\n    TSS2_RC rc = handle_from_name (NULL, NULL);\n    assert_int_equal (rc, TSS2_TCTI_RC_BAD_REFERENCE);\n}\n#define TEST_TCTI_NAME \"test-tcti\"\n#define TEST_TCTI_CONF \"test-conf\"\nstatic void\ntest_handle_from_name_first_dlopen_success (void **state)\n{\n    TSS2_RC rc;\n    void *handle = NULL;\n\n    expect_string(__wrap_dlopen, filename, TEST_TCTI_NAME);\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, TEST_HANDLE);\n\n    rc = handle_from_name (TEST_TCTI_NAME, &handle);\n    assert_int_equal (rc, TSS2_RC_SUCCESS);\n    assert_int_equal (handle, TEST_HANDLE);\n}\n\n#define TEST_TCTI_NAME_SO_0 TCTI_PREFIX\"-\"TEST_TCTI_NAME\"\"TCTI_SUFFIX_0\nstatic void\ntest_handle_from_name_second_dlopen_success (void **state)\n{\n    TSS2_RC rc;\n    void *handle = NULL;\n\n    expect_string(__wrap_dlopen, filename, TEST_TCTI_NAME);\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, TEST_TCTI_NAME_SO_0);\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, TEST_HANDLE);\n\n    rc = handle_from_name (TEST_TCTI_NAME, &handle);\n    assert_int_equal (rc, TSS2_RC_SUCCESS);\n    assert_int_equal (handle, TEST_HANDLE);\n}\n#define TEST_TCTI_NAME_SO TCTI_PREFIX\"-\"TEST_TCTI_NAME\"\"TCTI_SUFFIX\nstatic void\ntest_handle_from_name_third_dlopen_success (void **state)\n{\n    TSS2_RC rc;\n    void *handle = NULL;\n\n    expect_string(__wrap_dlopen, filename, TEST_TCTI_NAME);\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, TEST_TCTI_NAME_SO_0);\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, TEST_TCTI_NAME_SO);\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, TEST_HANDLE);\n\n    rc = handle_from_name (TEST_TCTI_NAME, &handle);\n    assert_int_equal (rc, TSS2_RC_SUCCESS);\n    assert_int_equal (handle, TEST_HANDLE);\n}\n\nstatic void\ntest_tcti_from_file_null_tcti (void **state)\n{\n    TSS2_RC rc = tcti_from_file (NULL, NULL, NULL, NULL);\n    assert_int_equal (rc, TSS2_TCTI_RC_BAD_REFERENCE);\n}\n\n#define HANDLE (void *)123321\n#ifndef ESYS_TCTI_DEFAULT_MODULE\nstatic void\ntest_get_info_default_null (void **state)\n{\n    TSS2_RC rc = get_info_default (NULL, NULL);\n    assert_int_equal (rc, TSS2_TCTI_RC_BAD_REFERENCE);\n}\nstatic void\ntest_get_info_default_success (void **state)\n{\n    const TSS2_TCTI_INFO info_instance = { 0, };\n    TSS2_TCTI_INFO *info = { 0, };\n    void *handle;\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-default.so.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-default.so.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-tabrmd.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    will_return(__wrap_Tss2_Tcti_Fake_Info, &info_instance);\n\n    TSS2_RC rc = get_info_default (&info, &handle);\n    assert_int_equal (rc, TSS2_RC_SUCCESS);\n    assert_ptr_equal (info, &info_instance);\n}\nstatic void\ntest_get_info_default_info_fail (void **state)\n{\n    TSS2_TCTI_INFO *info = { 0, };\n    void *handle;\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-default.so.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-default.so.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-tabrmd.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    will_return(__wrap_Tss2_Tcti_Fake_Info, NULL);\n\n    expect_value(__wrap_dlclose, handle, HANDLE);\n    will_return(__wrap_dlclose, 0);\n\n    TSS2_RC rc = get_info_default (&info, &handle);\n    assert_int_equal (rc, TSS2_TCTI_RC_GENERAL_FAILURE);\n    assert_ptr_equal (info, NULL);\n}\n/** Test for tcti\n * { \"libtss2-tcti-default.so\", NULL, \"\", \"Access libtss2-tcti-default.so\" }\n */\nstatic void\ntest_tcti_default(void **state)\n{\n    TSS2_TCTI_CONTEXT *tcti;\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    expect_value(__wrap_tcti_from_info, infof, __wrap_Tss2_Tcti_Fake_Info);\n    expect_value(__wrap_tcti_from_info, conf, NULL);\n    expect_value(__wrap_tcti_from_info, tcti, &tcti);\n    will_return(__wrap_tcti_from_info, &tcti_instance);\n    will_return(__wrap_tcti_from_info, TSS2_RC_SUCCESS);\n\n    TSS2_RC r;\n    void *handle = NULL;\n    r = tctildr_get_default(&tcti, &handle);\n    assert_int_equal(r, TSS2_RC_SUCCESS);\n}\n\n/** Test for failure on tcti\n * { \"libtss2-tcti-default.so\", NULL, \"\", \"Access libtss2-tcti-default.so\" }\n */\nstatic void\ntest_tcti_default_fail_sym(void **state)\n{\n    TSS2_TCTI_CONTEXT *tcti;\n#define HANDLE (void *)123321\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, NULL);\n\n    expect_value(__wrap_dlclose, handle, HANDLE);\n    will_return(__wrap_dlclose, 0);\n\n    /** Now test\n     *{ \"libtss2-tcti-tabrmd.so\", NULL, \"\", \"Access libtss2-tcti-tabrmd.so\"},\n     */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-tabrmd.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    expect_value(__wrap_tcti_from_info, infof, __wrap_Tss2_Tcti_Fake_Info);\n    expect_value(__wrap_tcti_from_info, conf, NULL);\n    expect_value(__wrap_tcti_from_info, tcti, &tcti);\n    will_return(__wrap_tcti_from_info, &tcti_instance);\n    will_return(__wrap_tcti_from_info, TSS2_RC_SUCCESS);\n\n    TSS2_RC r;\n    r = tctildr_get_default(&tcti, NULL);\n    assert_int_equal(r, TSS2_RC_SUCCESS);\n}\n\n/** Test for failure on tcti\n * { \"libtss2-tcti-default.so\", NULL, \"\", \"Access libtss2-tcti-default.so\" }\n */\nstatic void\ntest_tcti_default_fail_info(void **state)\n{\n    TSS2_TCTI_CONTEXT *tcti;\n#define HANDLE (void *)123321\n#define TEST_RC 0x55687\n\n /** Test for failure on tcti\n * { \"libtss2-tcti-default.so\", NULL, \"\", \"Access libtss2-tcti-default.so\" }\n */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    expect_value(__wrap_tcti_from_info, infof, __wrap_Tss2_Tcti_Fake_Info);\n    expect_value(__wrap_tcti_from_info, conf, NULL);\n    expect_value(__wrap_tcti_from_info, tcti, &tcti);\n    will_return(__wrap_tcti_from_info, &tcti_instance);\n    will_return(__wrap_tcti_from_info, TEST_RC);\n\n    expect_value(__wrap_dlclose, handle, HANDLE);\n    will_return(__wrap_dlclose, 0);\n\n    /** Now test\n     *{ \"libtss2-tcti-tabrmd.so\", NULL, \"\", \"Access libtss2-tcti-tabrmd.so\"},\n     */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-tabrmd.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    expect_value(__wrap_tcti_from_info, infof, __wrap_Tss2_Tcti_Fake_Info);\n    expect_value(__wrap_tcti_from_info, conf, NULL);\n    expect_value(__wrap_tcti_from_info, tcti, &tcti);\n    will_return(__wrap_tcti_from_info, &tcti_instance);\n    will_return(__wrap_tcti_from_info, TSS2_RC_SUCCESS);\n\n    TSS2_RC r;\n    r = tctildr_get_default(&tcti, NULL);\n    assert_int_equal(r, TSS2_RC_SUCCESS);\n}\n\nstatic void\ntest_tcti_fail_all (void **state)\n{\n    /* skip over libtss2-tcti-default.so */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-default.so.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-default.so.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    /* Skip over libtss2-tcti-tabrmd.so */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-tabrmd.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-tabrmd.so.0.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-tabrmd.so.0.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    /* Skip over libtss2-tcti-device.so, /dev/tpmrm0 */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-device.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-device.so.0.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-device.so.0.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    /* Skip over libtss2-tcti-device.so, /dev/tpm0 */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-device.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-device.so.0.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-device.so.0.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    /* Skip over libtss2-tcti-mssim.so */\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-mssim.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-mssim.so.0.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-libtss2-tcti-mssim.so.0.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    TSS2_RC r;\n    TSS2_TCTI_CONTEXT *tcti;\n    r = tctildr_get_default(&tcti, NULL);\n    assert_int_equal(r, TSS2_TCTI_RC_IO_ERROR);\n}\n#endif\nvoid\ntest_info_from_name_null (void **state)\n{\n    TSS2_RC rc = info_from_name (NULL, NULL, NULL);\n    assert_int_equal (rc, TSS2_TCTI_RC_BAD_REFERENCE);\n}\nvoid\ntest_info_from_name_handle_fail (void **state)\n{\n    const TSS2_TCTI_INFO *info;\n    void *data;\n\n    expect_string(__wrap_dlopen, filename, \"foo\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-foo.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-foo.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    TSS2_RC rc = info_from_name (\"foo\", &info, &data);\n    assert_int_equal (rc, TSS2_TCTI_RC_NOT_SUPPORTED);\n}\nvoid\ntest_info_from_name_info_fail (void **state)\n{\n    const TSS2_TCTI_INFO *info = { 0, };\n    void *data = HANDLE;\n\n    expect_string(__wrap_dlopen, filename, \"foo\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    will_return(__wrap_Tss2_Tcti_Fake_Info, NULL);\n\n    expect_value(__wrap_dlclose, handle, HANDLE);\n    will_return(__wrap_dlclose, 0);\n\n    TSS2_RC rc = info_from_name (\"foo\", &info, &data);\n    assert_int_equal (rc, TSS2_TCTI_RC_IO_ERROR);\n}\nvoid\ntest_info_from_name_success (void **state)\n{\n    const TSS2_TCTI_INFO *info = { 0, };\n    TSS2_TCTI_INFO info_instance = { 0, };\n    void *data;\n\n    expect_string(__wrap_dlopen, filename, \"foo\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    will_return(__wrap_Tss2_Tcti_Fake_Info, &info_instance);\n\n    TSS2_RC rc = info_from_name (\"foo\", &info, &data);\n    assert_int_equal (rc, TSS2_RC_SUCCESS);\n    assert_ptr_equal (info, &info_instance);\n    assert_ptr_equal (data, HANDLE);\n}\nvoid\ntest_get_tcti_null (void **state)\n{\n    TSS2_RC rc = tctildr_get_tcti (NULL, NULL, NULL, NULL);\n    assert_int_equal(rc, TSS2_TCTI_RC_BAD_REFERENCE);\n}\nvoid\ntest_get_tcti_default (void **state)\n{\n    TSS2_TCTI_CONTEXT *tcti;\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    expect_value(__wrap_tcti_from_info, infof, __wrap_Tss2_Tcti_Fake_Info);\n    expect_value(__wrap_tcti_from_info, conf, NULL);\n    expect_value(__wrap_tcti_from_info, tcti, &tcti);\n    will_return(__wrap_tcti_from_info, &tcti_instance);\n    will_return(__wrap_tcti_from_info, TSS2_RC_SUCCESS);\n\n    void *data;\n    TSS2_RC rc = tctildr_get_tcti (NULL, NULL, &tcti, &data);\n    assert_int_equal(rc, TSS2_RC_SUCCESS);\n}\nvoid\ntest_get_tcti_from_name (void **state)\n{\n    TSS2_TCTI_CONTEXT *tcti;\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, &__wrap_Tss2_Tcti_Fake_Info);\n\n    expect_value(__wrap_tcti_from_info, infof, __wrap_Tss2_Tcti_Fake_Info);\n    expect_value(__wrap_tcti_from_info, conf, NULL);\n    expect_value(__wrap_tcti_from_info, tcti, &tcti);\n    will_return(__wrap_tcti_from_info, &tcti_instance);\n    will_return(__wrap_tcti_from_info, TSS2_RC_SUCCESS);\n\n    void *data;\n    TSS2_RC rc = tctildr_get_tcti (\"libtss2-tcti-default.so\", NULL, &tcti, &data);\n    assert_int_equal(rc, TSS2_RC_SUCCESS);\n}\n\nvoid\ntest_tctildr_get_info_from_name (void **state)\n{\n    const TSS2_TCTI_INFO *info;\n    void *data;\n\n    expect_string(__wrap_dlopen, filename, \"foo\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-foo.so.0\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-foo.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, NULL);\n\n    TSS2_RC rc = tctildr_get_info (\"foo\", &info, &data);\n    assert_int_equal (rc, TSS2_TCTI_RC_NOT_SUPPORTED);\n}\nvoid\ntest_tctildr_get_info_default (void **state)\n{\n    const TSS2_TCTI_INFO *info;\n    void *data;\n\n    expect_string(__wrap_dlopen, filename, \"libtss2-tcti-default.so\");\n    expect_value(__wrap_dlopen, flags, RTLD_NOW);\n    will_return(__wrap_dlopen, HANDLE);\n\n    expect_value(__wrap_dlsym, handle, HANDLE);\n    expect_string(__wrap_dlsym, symbol, TSS2_TCTI_INFO_SYMBOL);\n    will_return(__wrap_dlsym, NULL);\n\n    expect_value(__wrap_dlclose, handle, HANDLE);\n    will_return(__wrap_dlclose, 0);\n\n    TSS2_RC rc = tctildr_get_info (NULL, &info, &data);\n    assert_int_equal (rc, TSS2_TCTI_RC_GENERAL_FAILURE);\n}\n\nvoid\ntest_finalize_data (void **state)\n{\n    void *data = HANDLE;\n\n    expect_value(__wrap_dlclose, handle, data);\n    will_return(__wrap_dlclose, 0);\n    tctildr_finalize_data (&data);\n    assert_null (data);\n}\n\nint\nmain(void)\n{\n    const struct CMUnitTest tests[] = {\n        cmocka_unit_test(test_info_from_handle_null),\n        cmocka_unit_test(test_info_from_handle_dlsym_fail),\n        cmocka_unit_test(test_info_from_handle_success),\n        cmocka_unit_test(test_handle_from_name_null_handle),\n        cmocka_unit_test(test_handle_from_name_first_dlopen_success),\n        cmocka_unit_test(test_handle_from_name_second_dlopen_success),\n        cmocka_unit_test(test_handle_from_name_third_dlopen_success),\n        cmocka_unit_test(test_fail_null),\n        cmocka_unit_test(test_tcti_from_file_null_tcti),\n#ifndef ESYS_TCTI_DEFAULT_MODULE\n        cmocka_unit_test(test_get_info_default_null),\n        cmocka_unit_test(test_get_info_default_success),\n        cmocka_unit_test(test_get_info_default_info_fail),\n        cmocka_unit_test(test_tcti_default),\n        cmocka_unit_test(test_tcti_default_fail_sym),\n        cmocka_unit_test(test_tcti_default_fail_info),\n        cmocka_unit_test(test_tcti_fail_all),\n        cmocka_unit_test(test_get_tcti_null),\n        cmocka_unit_test(test_get_tcti_default),\n        cmocka_unit_test(test_get_tcti_from_name),\n        cmocka_unit_test(test_tctildr_get_info_from_name),\n        cmocka_unit_test(test_tctildr_get_info_default),\n#endif\n        cmocka_unit_test(test_info_from_name_null),\n        cmocka_unit_test(test_info_from_name_handle_fail),\n        cmocka_unit_test(test_info_from_name_info_fail),\n        cmocka_unit_test(test_info_from_name_success),\n        cmocka_unit_test(test_finalize_data),\n    };\n    return cmocka_run_group_tests (tests, NULL, NULL);\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-tpm2-tss-2.4.1-pcbrn5ftkezadertd4khyzadqwby6xxk/spack-src/doc/TSS_block_diagram.png"
    ],
    "total_files": 702
}