{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/src/dynload.c": "/* Author:  Lisandro Dalcin\n * Contact: dalcinl@gmail.com\n */\n\n#include \"Python.h\"\n#include \"dynload.h\"\n\nstatic PyObject *\ndl_dlopen(PyObject *self, PyObject *args)\n{\n  void *handle = NULL;\n  char *filename = NULL;\n  int mode = 0;\n  (void)self; /* unused */\n  if (!PyArg_ParseTuple(args, (char *)\"zi:dlopen\",\n                        &filename, &mode)) return NULL;\n  handle = dlopen(filename, mode);\n  return PyLong_FromVoidPtr(handle);\n}\n\nstatic PyObject *\ndl_dlsym(PyObject *self, PyObject *args)\n{\n  PyObject *arg0 = NULL;\n  void *handle = NULL;\n  char *symbol = NULL;\n  void *symval = NULL;\n  (void)self; /* unused */\n  if (!PyArg_ParseTuple(args, (char *)\"Os:dlsym\",\n                        &arg0, &symbol)) return NULL;\n#ifdef RTLD_DEFAULT\n  handle = (void *)RTLD_DEFAULT;\n#endif\n  if (arg0 != Py_None) {\n    handle = PyLong_AsVoidPtr(arg0);\n    if (PyErr_Occurred()) return NULL;\n  }\n  symval = dlsym(handle, symbol);\n  return PyLong_FromVoidPtr(symval);\n}\n\nstatic PyObject *\ndl_dlclose(PyObject *self, PyObject *arg0)\n{\n  int err = 0;\n  void *handle = NULL;\n  (void)self; /* unused */\n  if (arg0 != Py_None) {\n    handle = PyLong_AsVoidPtr(arg0);\n    if (PyErr_Occurred()) return NULL;\n  }\n  if (handle)\n    err = dlclose(handle);\n  return Py_BuildValue((char *)\"i\", err);\n}\n\nstatic PyObject *\ndl_dlerror(PyObject *self, PyObject *args)\n{\n  char *errmsg = NULL;\n  (void)self; (void)args; /* unused */\n  errmsg = dlerror();\n  return Py_BuildValue((char *)\"z\", errmsg);\n}\n\nstatic PyMethodDef dl_methods[] = {\n  { (char *)\"dlopen\",  dl_dlopen,  METH_VARARGS, NULL },\n  { (char *)\"dlsym\",   dl_dlsym,   METH_VARARGS, NULL },\n  { (char *)\"dlclose\", dl_dlclose, METH_O,       NULL },\n  { (char *)\"dlerror\", dl_dlerror, METH_NOARGS,  NULL },\n  { (char *)NULL,      NULL,       0,            NULL } /* sentinel */\n};\n\nPyDoc_STRVAR(dl_doc,\n\"POSIX dynamic linking loader\");\n\n#if PY_MAJOR_VERSION >= 3\nstatic struct PyModuleDef dl_module = {\n  PyModuleDef_HEAD_INIT, /* m_base     */\n  (char *)\"dl\",          /* m_name     */\n  dl_doc,                /* m_doc      */\n  -1,                    /* m_size     */\n  dl_methods,            /* m_methods  */\n  NULL,                  /* m_reload   */\n  NULL,                  /* m_traverse */\n  NULL,                  /* m_clear    */\n  NULL                   /* m_free     */\n};\n#endif\n\n#if !defined(PyModule_AddIntMacro)\n#define PyModule_AddIntMacro(m, c) \\\n  PyModule_AddIntConstant(m, (char *)#c, c)\n#endif\n\n#define PyModule_AddPtrMacro(m, c) \\\n  PyModule_AddObject(m, (char *)#c, PyLong_FromVoidPtr((void *)c))\n\n\n#if PY_MAJOR_VERSION >= 3\nPyMODINIT_FUNC PyInit_dl(void);\nPyMODINIT_FUNC PyInit_dl(void)\n#else\nPyMODINIT_FUNC initdl(void);\nPyMODINIT_FUNC initdl(void)\n#endif\n{\n  PyObject *m = NULL;\n\n#if PY_MAJOR_VERSION >= 3\n  m = PyModule_Create(&dl_module);\n#else\n  m = Py_InitModule3((char *)\"dl\", dl_methods, (char *)dl_doc);\n#endif\n  if (!m) goto bad;\n\n  if (PyModule_AddIntMacro(m, RTLD_LAZY   ) < 0) goto bad;\n  if (PyModule_AddIntMacro(m, RTLD_NOW    ) < 0) goto bad;\n  if (PyModule_AddIntMacro(m, RTLD_LOCAL  ) < 0) goto bad;\n  if (PyModule_AddIntMacro(m, RTLD_GLOBAL ) < 0) goto bad;\n\n#ifdef RTLD_NOLOAD\n  if (PyModule_AddIntMacro(m, RTLD_NOLOAD   ) < 0) goto bad;\n#endif\n#ifdef RTLD_NODELETE\n  if (PyModule_AddIntMacro(m, RTLD_NODELETE ) < 0) goto bad;\n#endif\n#ifdef RTLD_DEEPBIND\n  if (PyModule_AddIntMacro(m, RTLD_DEEPBIND ) < 0) goto bad;\n#endif\n#ifdef RTLD_FIRST\n  if (PyModule_AddIntMacro(m, RTLD_FIRST    ) < 0) goto bad;\n#endif\n\n#ifdef RTLD_DEFAULT\n  if (PyModule_AddPtrMacro(m, RTLD_DEFAULT)   < 0) goto bad;\n#endif\n#ifdef RTLD_NEXT\n  if (PyModule_AddPtrMacro(m, RTLD_NEXT)      < 0) goto bad;\n#endif\n\n#ifdef RTLD_SELF\n  if (PyModule_AddPtrMacro(m, RTLD_SELF)      < 0) goto bad;\n#endif\n#ifdef RTLD_MAIN_ONLY\n  if (PyModule_AddPtrMacro(m, RTLD_MAIN_ONLY) < 0) goto bad;\n#endif\n\n finally:\n#if PY_MAJOR_VERSION >= 3\n  return m;\n#else\n  return;\n#endif\n\n bad:\n  Py_XDECREF(m);\n  m = NULL;\n  goto finally;\n}\n\n/*\n  Local variables:\n  c-basic-offset: 2\n  indent-tabs-mode: nil\n  End:\n*/\n",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/src/dynload.h": "/* Author:  Lisandro Dalcin\n * Contact: dalcinl@gmail.com\n */\n\n#ifndef PyMPI_DYNLOAD_H\n#define PyMPI_DYNLOAD_H\n\n#if HAVE_DLFCN_H\n  #include <dlfcn.h>\n#else\n  #if defined(__linux) || defined(__linux__)\n    #define RTLD_LAZY     0x00001\n    #define RTLD_NOW      0x00002\n    #define RTLD_LOCAL    0x00000\n    #define RTLD_GLOBAL   0x00100\n    #define RTLD_NOLOAD   0x00004\n    #define RTLD_NODELETE 0x01000\n    #define RTLD_DEEPBIND 0x00008\n  #elif defined(__sun) || defined(__sun__)\n    #define RTLD_LAZY     0x00001\n    #define RTLD_NOW      0x00002\n    #define RTLD_LOCAL    0x00000\n    #define RTLD_GLOBAL   0x00100\n    #define RTLD_NOLOAD   0x00004\n    #define RTLD_NODELETE 0x01000\n    #define RTLD_FIRST    0x02000\n  #elif defined(__APPLE__)\n    #define RTLD_LAZY     0x1\n    #define RTLD_NOW      0x2\n    #define RTLD_LOCAL    0x4\n    #define RTLD_GLOBAL   0x8\n    #define RTLD_NOLOAD   0x10\n    #define RTLD_NODELETE 0x80\n    #define RTLD_FIRST    0x100\n  #elif defined(__CYGWIN__)\n    #define RTLD_LAZY     1\n    #define RTLD_NOW      2\n    #define RTLD_LOCAL    0\n    #define RTLD_GLOBAL   4\n  #endif\n  #if defined(__cplusplus)\n  extern \"C\" {\n  #endif\n  extern void *dlopen(const char *, int);\n  extern void *dlsym(void *, const char *);\n  extern int   dlclose(void *);\n  extern char *dlerror(void);\n  #if defined(__cplusplus)\n  }\n  #endif\n#endif\n\n#ifndef RTLD_LAZY\n#define RTLD_LAZY 1\n#endif\n#ifndef RTLD_NOW\n#define RTLD_NOW RTLD_LAZY\n#endif\n#ifndef RTLD_LOCAL\n#define RTLD_LOCAL 0\n#endif\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL RTLD_LOCAL\n#endif\n\n#endif /* !PyMPI_DYNLOAD_H */\n\n/*\n  Local variables:\n  c-basic-offset: 2\n  indent-tabs-mode: nil\n  End:\n*/\n",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/test/test_dl.py": "import mpiunittest as unittest\nimport sys, os\ntry:\n    from mpi4py import dl\nexcept ImportError:\n    dl = None\n\npypy_lt_510 = (hasattr(sys, 'pypy_version_info') and\n               sys.pypy_version_info < (5, 10))\n\n@unittest.skipIf(dl is None, 'mpi4py-dl')\nclass TestDL(unittest.TestCase):\n\n    def testDL1(self):\n        if sys.platform == 'darwin':\n            libm = 'libm.dylib'\n        else:\n            libm = 'libm.so'\n\n        handle = dl.dlopen(libm, dl.RTLD_LOCAL|dl.RTLD_LAZY)\n        if handle == 0 and sys.platform.startswith('linux'):\n            self.assertTrue(dl.dlerror() is not None)\n            handle = dl.dlopen('libm.so.6', dl.RTLD_LOCAL|dl.RTLD_LAZY)\n        self.assertTrue(handle != 0)\n        self.assertTrue(dl.dlerror() is None)\n\n        symbol = dl.dlsym(handle, 'sqrt')\n        self.assertTrue(symbol != 0)\n        self.assertTrue(dl.dlerror() is None)\n\n        symbol = dl.dlsym(handle, 'xxxxx')\n        self.assertTrue(symbol == 0)\n        self.assertTrue(dl.dlerror() is not None)\n\n        ierr = dl.dlclose(handle)\n        self.assertTrue(ierr == 0)\n        self.assertTrue(dl.dlerror() is None)\n\n    @unittest.skipIf(pypy_lt_510 and sys.platform == 'darwin',\n                     'pypy(<5.10)|darwin')\n    def testDL2(self):\n        handle = dl.dlopen(None, dl.RTLD_GLOBAL|dl.RTLD_NOW)\n        self.assertTrue(handle != 0)\n        self.assertTrue(dl.dlerror() is None)\n\n        symbol = dl.dlsym(handle, 'malloc')\n        self.assertTrue(symbol != 0)\n        self.assertTrue(dl.dlerror() is None)\n\n        symbol = dl.dlsym(handle, '!@#$%^&*()')\n        self.assertTrue(symbol == 0)\n        self.assertTrue(dl.dlerror() is not None)\n\n        ierr = dl.dlclose(handle)\n        self.assertTrue(ierr == 0)\n        self.assertTrue(dl.dlerror() is None)\n\n    def testDL3(self):\n        symbol = dl.dlsym(None, 'malloc')\n        self.assertTrue(symbol != 0)\n        self.assertTrue(dl.dlerror() is None)\n\n        symbol = dl.dlsym(None, '!@#$%^&*()')\n        self.assertTrue(symbol == 0)\n        self.assertTrue(dl.dlerror() is not None)\n\n        ierr = dl.dlclose(None)\n        self.assertTrue(ierr == 0)\n        self.assertTrue(dl.dlerror() is None)\n\n    def testDL4(self):\n        handle = dl.dlopen('xxxxx', dl.RTLD_LOCAL|dl.RTLD_LAZY)\n        self.assertTrue(handle == 0)\n        self.assertTrue(dl.dlerror() is not None)\n\n\nif __name__ == '__main__':\n    unittest.main()\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/docs/mpi4py.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/docs/usrman/objects.inv",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/docs/usrman/_static/comment-close.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/docs/usrman/_static/down.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/docs/usrman/_static/down-pressed.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/docs/usrman/_static/plus.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/docs/usrman/_static/comment-bright.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/docs/usrman/_static/comment.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/docs/usrman/_static/up-pressed.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/docs/usrman/_static/file.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/docs/usrman/_static/ajax-loader.gif",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/docs/usrman/_static/up.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/docs/usrman/_static/minus.png",
        "/tmp/vanessa/spack-stage/spack-stage-py-mpi4py-3.0.3-kz7qrwqsx74wb36rn6oj2u7keeu3tvme/spack-src/docs/apiref/crarr.png"
    ],
    "total_files": 405
}