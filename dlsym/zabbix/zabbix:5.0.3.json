{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/configure.ac": "dnl\ndnl Zabbix\ndnl Copyright (C) 2001-2020 Zabbix SIA\ndnl\ndnl This program is free software; you can redistribute it and/or modify\ndnl it under the terms of the GNU General Public License as published by\ndnl the Free Software Foundation; either version 2 of the License, or\ndnl (at your option) any later version.\ndnl\ndnl This program is distributed in the hope that it will be useful,\ndnl but WITHOUT ANY WARRANTY; without even the implied warranty of\ndnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\ndnl GNU General Public License for more details.\ndnl\ndnl You should have received a copy of the GNU General Public License\ndnl along with this program; if not, write to the Free Software\ndnl Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\ndnl\n\ndnl Process this file with autoconf to produce a configure script.\n\nAC_INIT([Zabbix],[5.0.3])\nAC_CONFIG_SRCDIR(src/zabbix_server/server.c)\nAM_INIT_AUTOMAKE([subdir-objects filename-length-max=99])\n\nAC_MSG_NOTICE([Configuring $PACKAGE_NAME $PACKAGE_VERSION])\n\nAC_PROG_MAKE_SET\n\nAM_CONFIG_HEADER(include/config.h)\n\nAC_CANONICAL_HOST\n\ndnl *****************************************************************\ndnl *                                                               *\ndnl *                     Checks for programs                       *\ndnl *                                                               *\ndnl *****************************************************************\n\nAC_PROG_CC([cc c99 gcc clang])\nAM_PROG_CC_C_O\n\ndnl *****************************************************************\ndnl *                                                               *\ndnl *                   Checks for header files                     *\ndnl *                                                               *\ndnl *****************************************************************\n\nAC_HEADER_STDC\nAC_CHECK_HEADERS(stdio.h stdlib.h string.h unistd.h netdb.h signal.h \\\n  syslog.h time.h errno.h sys/types.h sys/stat.h netinet/in.h \\\n  math.h sys/socket.h dirent.h ctype.h \\\n  mtent.h fcntl.h sys/param.h arpa/inet.h \\\n  sys/vfs.h sys/pstat.h sys/sysinfo.h sys/statvfs.h sys/statfs.h \\\n  sys/socket.h sys/loadavg.h arpa/inet.h \\\n  sys/vmmeter.h strings.h vm/vm_param.h \\\n  sys/time.h kstat.h sys/syscall.h sys/sysmacros.h \\\n  stdint.h mach/host_info.h mach/mach_host.h knlist.h pwd.h \\\n  sys/var.h arpa/nameser.h assert.h sys/dkstat.h sys/disk.h sys/sched.h \\\n  zone.h nlist.h kvm.h linux/kernel.h procinfo.h sys/dk.h \\\n  sys/resource.h pthread.h windows.h process.h conio.h sys/wait.h \\\n  stdarg.h winsock2.h pdh.h psapi.h sys/sem.h sys/ipc.h sys/shm.h Winldap.h \\\n  Winber.h lber.h ws2tcpip.h inttypes.h sys/file.h grp.h \\\n  execinfo.h sys/systemcfg.h sys/mnttab.h mntent.h sys/times.h \\\n  dlfcn.h sys/utsname.h sys/un.h sys/protosw.h stddef.h limits.h float.h)\nAC_CHECK_HEADERS(resolv.h, [], [], [\n#ifdef HAVE_SYS_TYPES_H\n#  include <sys/types.h>\n#endif\n#ifdef HAVE_NETINET_IN_H\n#  include <netinet/in.h>\n#endif\n#ifdef HAVE_ARPA_NAMESER_H\n#  include <arpa/nameser.h>\n#endif\n#ifdef HAVE_NETDB_H\n#  include <netdb.h>\n#endif\n])\nAC_CHECK_HEADERS(net/if.h net/if_mib.h, [], [], [\n#include <stdio.h>\n#ifdef STDC_HEADERS\n#  include <stdlib.h>\n#  include <stddef.h>\n#else\n#  ifdef HAVE_STDLIB_H\n#    include <stdlib.h>\n#  endif\n#endif\n#ifdef HAVE_SYS_TYPES_H\n#  include <sys/types.h>\n#endif\n#ifdef HAVE_SYS_SOCKET_H\n#  include <sys/socket.h>\n#endif\n/* for net/if_mib.h */\n#ifdef HAVE_NET_IF_H\n#  include <net/if.h>\n#endif\n])\nAC_CHECK_HEADERS(sys/mount.h sys/proc.h sys/sysctl.h sys/user.h, [], [], [\n#ifdef HAVE_SYS_TYPES_H\n#  include <sys/types.h>\n#endif\n#ifdef HAVE_SYS_PARAM_H\n#  include <sys/param.h>\n#endif\n])\nAC_CHECK_HEADERS(sys/swap.h, [], [], [\n#ifdef HAVE_SYS_PARAM_H\n#  include <sys/param.h>\n#endif\n])\nAC_CHECK_HEADERS(sys/ucontext.h, [], [], [\n#ifdef HAVE_SIGNAL_H\n#  include <signal.h>\n#endif\n])\nAC_CHECK_HEADERS(devstat.h, [], [], [\n#ifdef HAVE_SYS_DKSTAT_H\n#  include <sys/dkstat.h>\n#endif\n])\nAC_CHECK_HEADERS(linux/netlink.h, [\n\tAC_CHECK_HEADERS(linux/inet_diag.h, [\n\t\tAC_DEFINE([HAVE_INET_DIAG], 1, [Define to 1 if you have NETLINK INET_DIAG support.])\n\t])\n], [], [\n#ifdef HAVE_SYS_SOCKET_H\n#  include <sys/socket.h>\n#endif\n])\nAC_CHECK_HEADERS(libperfstat.h, [], [], [\n#ifdef HAVE_SYS_PROTOSW_H\n#  include <sys/protosw.h>\n#endif\n])\n\ndnl *****************************************************************\ndnl *                                                               *\ndnl *                     Checks for libraries                      *\ndnl *                                                               *\ndnl *****************************************************************\n\nAC_SEARCH_LIBS(socket, socket)\nAC_SEARCH_LIBS(kstat_open, kstat)\nAC_SEARCH_LIBS(gethostbyname, nsl)\nAC_SEARCH_LIBS(clock_gettime, rt)\nAC_SEARCH_LIBS(dlopen, dl)\n\ndnl AIX\nAC_SEARCH_LIBS(perfstat_memory_total, perfstat, [AC_DEFINE([HAVE_LIBPERFSTAT], 1, [Define to 1 if you have the 'libperfstat' library (-lperfstat)])])\nAC_SEARCH_LIBS(devstat_getdevs, devstat, [AC_DEFINE([HAVE_LIBDEVSTAT], 1, [Define to 1 if you have the 'libdevstat' library (-ldevstat)])])\nAC_SEARCH_LIBS(getdevs, devstat, [AC_DEFINE([HAVE_LIBDEVSTAT], 1, [Define to 1 if you have the 'libdevstat' library (-ldevstat)])])\n\ndnl on FreeBSD we have to link with -lexecinfo to get backtraces\nAC_SEARCH_LIBS(backtrace_symbols, execinfo, [AC_DEFINE([HAVE_LIBEXECINFO], 1, [Define to 1 if you have the 'libexecinfo' library (-lexecinfo)])])\n\nAC_CHECK_LIB(m, main)\nAC_CHECK_LIB(kvm, main)\n\ndnl check for DNS lookup functions\nfound_resolv=\"no\"\nLIBRESOLV_CHECK_CONFIG([no])\nif test \"x$found_resolv\" != \"xyes\"; then\n\tAC_MSG_ERROR([Unable to do DNS lookups (libresolv check failed)])\nfi\nLIBS=\"${LIBS} ${RESOLV_LIBS}\"\n\ndnl *****************************************************************\ndnl *                                                               *\ndnl *          Checks for type definitions and structures           *\ndnl *                                                               *\ndnl *****************************************************************\n\ndnl large file support\nlargefile=yes\n\ndnl disable large file support on 32-bit Solaris as it's incompatible with procfs and swapctl\ncase \"${host_os}\" in\n\tsolaris*)\n\t\tlargefile=no\n\t\t;;\nesac\n\nif test \"x$largefile\" = \"xyes\"; then\n\tAC_SYS_LARGEFILE\nfi\n\nAC_C_CONST\nAC_TYPE_PID_T\n\nAC_MSG_CHECKING(for socklen_t)\nAC_TRY_COMPILE([\n#include <sys/types.h>\n#include <unistd.h>\n#include <sys/socket.h>\n],[socklen_t s;],\nAC_MSG_RESULT(yes),\n[AC_DEFINE(socklen_t, int, [Define socklen_t type.])\nAC_MSG_RESULT(no)])\n\nAC_MSG_CHECKING(for actual socklen_t parameter type in socket functions)\nzbx_socklen_t=\nfor arg2 in \"struct sockaddr\" void; do\n  for arg3 in socklen_t size_t int; do\n    AC_TRY_COMPILE([\n#ifdef HAVE_SYS_TYPES_H\n#  include <sys/types.h>\n#endif\n#ifdef HAVE_SYS_SOCKET_H\n#  include <sys/socket.h>\n#endif\n      extern int getpeername(int sockfd, $arg2 *addr, $arg3 *addrlen);\n    ],[\n      $arg3 addrlen;\n      getpeername(0, 0, &addrlen);\n    ],[\n      zbx_socklen_t=\"$arg3\"\n      break 2\n    ])\n  done\ndone\nif test \"x$zbx_socklen_t\" != \"x\"; then\n  AC_MSG_RESULT($zbx_socklen_t)\n  AC_DEFINE_UNQUOTED(ZBX_SOCKLEN_T, $zbx_socklen_t, [Define actual socklen_t parameter type in socket functions.])\nelse\n  AC_MSG_RESULT(leaving undefined)\nfi\n\nAC_MSG_CHECKING(for integer field name in union sigval of struct siginfo_t)\nzbx_sival_int=\nfor field in sival_int sigval_int; do\n  AC_TRY_COMPILE([\n#ifdef HAVE_SIGNAL_H\n#  include <signal.h>\n#endif\n  ],[\n    siginfo_t siginfo;\n    siginfo.si_value.$field = 0;\n  ],[\n    zbx_sival_int=\"$field\"\n    break\n  ])\ndone\nif test \"x$zbx_sival_int\" != \"x\"; then\n  AC_MSG_RESULT($zbx_sival_int)\n  AC_DEFINE_UNQUOTED(ZBX_SIVAL_INT, $zbx_sival_int, [Define integer field name in union 'sigval' of struct 'siginfo_t'])\nelse\n  AC_MSG_ERROR(Unable to find integer field name in union sigval of struct siginfo_t)\nfi\n\nAC_MSG_CHECKING(for res_ninit)\nAC_TRY_LINK(\n[\n#ifdef HAVE_SYS_TYPES_H\n#\tinclude <sys/types.h>\n#endif\n#ifdef HAVE_NETINET_IN_H\n#\tinclude <netinet/in.h>\n#endif\n#ifdef HAVE_ARPA_NAMESER_H\n#\tinclude <arpa/nameser.h>\n#endif\n#ifdef HAVE_RESOLV_H\n#\tinclude <resolv.h>\n#endif\n#ifndef C_IN\n#\tdefine C_IN\tns_c_in\n#endif\t/* C_IN */\n#ifndef T_SOA\n#\tdefine T_SOA\tns_t_soa\n#endif\t/* T_SOA */\n],\n[\n\tstruct __res_state\tres_state_local;\n\n\tres_ninit(&res_state_local);\n],\nAC_DEFINE(HAVE_RES_NINIT,1,[Define to 1 if 'res_ninit' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for res_ndestroy)\nAC_TRY_LINK(\n[\n#ifdef HAVE_SYS_TYPES_H\n#\tinclude <sys/types.h>\n#endif\n#ifdef HAVE_NETINET_IN_H\n#\tinclude <netinet/in.h>\n#endif\n#ifdef HAVE_ARPA_NAMESER_H\n#\tinclude <arpa/nameser.h>\n#endif\n#ifdef HAVE_RESOLV_H\n#\tinclude <resolv.h>\n#endif\n#ifndef C_IN\n#\tdefine C_IN\tns_c_in\n#endif\t/* C_IN */\n#ifndef T_SOA\n#\tdefine T_SOA\tns_t_soa\n#endif\t/* T_SOA */\n],\n[\n\tstruct __res_state\tres_state_local;\n\n\tres_ninit(&res_state_local);\n\tres_ndestroy(&res_state_local);\n],\nAC_DEFINE(HAVE_RES_NDESTROY,1,[Define to 1 if 'res_ndestroy' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for _res._u._ext.nsaddrs[])\nAC_TRY_LINK(\n[\n#ifdef HAVE_SYS_TYPES_H\n#\tinclude <sys/types.h>\n#endif\n#ifdef HAVE_NETINET_IN_H\n#\tinclude <netinet/in.h>\n#endif\n#ifdef HAVE_ARPA_NAMESER_H\n#\tinclude <arpa/nameser.h>\n#endif\n#ifdef HAVE_RESOLV_H\n#\tinclude <resolv.h>\n#endif\n#ifndef C_IN\n#\tdefine C_IN\tns_c_in\n#endif\t/* C_IN */\n#ifndef T_SOA\n#\tdefine T_SOA\tns_t_soa\n#endif\t/* T_SOA */\n],\n[\n\tstruct sockaddr_in6\t*sockaddrin6;\n\n\tsockaddrin6 = _res._u._ext.nsaddrs[0];\n],\nAC_DEFINE(HAVE_RES_U_EXT,1,[Define to 1 if '_res._u._ext.nsaddrs[]' exists. /Linux/])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for _res._u._ext.ext)\nAC_TRY_LINK(\n[\n#ifdef HAVE_SYS_TYPES_H\n#\tinclude <sys/types.h>\n#endif\n#ifdef HAVE_NETINET_IN_H\n#\tinclude <netinet/in.h>\n#endif\n#ifdef HAVE_ARPA_NAMESER_H\n#\tinclude <arpa/nameser.h>\n#endif\n#ifdef HAVE_RESOLV_H\n#\tinclude <resolv.h>\n#endif\n#ifndef C_IN\n#\tdefine C_IN\tns_c_in\n#endif\t/* C_IN */\n#ifndef T_SOA\n#\tdefine T_SOA\tns_t_soa\n#endif\t/* T_SOA */\n],\n[\n\tstruct __res_state_ext\t*ext;\n\n\text = _res._u._ext.ext;\n],\nAC_DEFINE(HAVE_RES_U_EXT_EXT,1,[Define to 1 if '_res._u._ext.ext' exists. /BSD/])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for _res._ext.ext.nsaddrs[])\nAC_TRY_LINK(\n[\n#ifdef HAVE_SYS_TYPES_H\n#\tinclude <sys/types.h>\n#endif\n#ifdef HAVE_NETINET_IN_H\n#\tinclude <netinet/in.h>\n#endif\n#ifdef HAVE_ARPA_NAMESER_H\n#\tinclude <arpa/nameser.h>\n#endif\n#ifdef HAVE_RESOLV_H\n#\tinclude <resolv.h>\n#endif\n#ifndef C_IN\n#\tdefine C_IN\tns_c_in\n#endif\t/* C_IN */\n#ifndef T_SOA\n#\tdefine T_SOA\tns_t_soa\n#endif\t/* T_SOA */\n],\n[\n\tunion res_sockaddr_union\t*na;\n\n\tna = &_res._ext.ext.nsaddrs[0];\n],\nAC_DEFINE(HAVE_RES_EXT_EXT,1,[Define to 1 if '_res._ext.ext.nsaddrs[]' exists. /AIX/])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for struct sockaddr_in6.sin6_len)\nAC_TRY_LINK(\n[\n#ifdef HAVE_SYS_TYPES_H\n#\tinclude <sys/types.h>\n#endif\n#ifdef HAVE_NETINET_IN_H\n#\tinclude <netinet/in.h>\n#endif\n#ifdef HAVE_ARPA_NAMESER_H\n#\tinclude <arpa/nameser.h>\n#endif\n#ifdef HAVE_RESOLV_H\n#\tinclude <resolv.h>\n#endif\n#ifndef C_IN\n#\tdefine C_IN\tns_c_in\n#endif\t/* C_IN */\n#ifndef T_SOA\n#\tdefine T_SOA\tns_t_soa\n#endif\t/* T_SOA */\n],\n[\n\tstruct sockaddr_in6\tsin6;\n\tunsigned int\t\tlen;\n\n\tlen = sin6.sin6_len;\n],\nAC_DEFINE(HAVE_RES_SIN6_LEN,1,[Define to 1 if 'sockaddr_in6.sin6_len' exists. /BSD/])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for union semun)\nAC_TRY_COMPILE(\n[\n#include <sys/types.h>\n#include <sys/ipc.h>\n#include <sys/sem.h>\n],\n[union semun foo;],\nAC_DEFINE(HAVE_SEMUN, 1, [Define to 1 if union 'semun' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for struct swaptable in sys/swap.h)\nAC_TRY_COMPILE(\n[\n#include <stdlib.h>\n#include <sys/types.h>\n#include <sys/syscall.h>\n#include <sys/swap.h>\n\n#ifndef NULL\n#define NULL (void *)0\n#endif\n],\n[\n    register int cnt, i;\n    register int t, f;\n    struct swaptable *swt;\n    struct swapent *ste;\n    static char path[256];\n\n    /* get total number of swap entries */\n    cnt = swapctl(SC_GETNSWP, 0);\n\n    /* allocate enough space to hold count + n swapents */\n    swt = (struct swaptable *)malloc(sizeof(int) +\n             cnt * sizeof(struct swapent));\n    if (swt == NULL)\n    {\n  return;\n    }\n    swt->swt_n = cnt;\n\n    /* fill in ste_path pointers: we do not care about the paths, so we\npoint\n       them all to the same buffer */\n    ste = &(swt->swt_ent[0]);\n    i = cnt;\n    while (--i >= 0)\n    {\n  ste++->ste_path = path;\n    }\n\n    /* grab all swap info */\n    swapctl(SC_LIST, swt);\n\n    /* walk through the structs and sum up the fields */\n    t = f = 0;\n    ste = &(swt->swt_ent[0]);\n    i = cnt;\n    while (--i >= 0)\n    {\n  /* do not count slots being deleted */\n  if (!(ste->ste_flags & ST_INDEL) &&\n      !(ste->ste_flags & ST_DOINGDEL))\n  {\n      t += ste->ste_pages;\n      f += ste->ste_free;\n  } ste++;\n    }\n\n    /* fill in the results */\n    free(swt);\n\n],\nAC_DEFINE(HAVE_SYS_SWAP_SWAPTABLE,1,[Define to 1 if struct 'swaptable' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for struct sensordev in sys/sensors.h)\nAC_TRY_COMPILE([\n#include <stdlib.h>\n#include <sys/queue.h>\n#include <sys/sensors.h>],\n[struct sensordev sensordev;\nsensordev.xname[0]='\\0';\nsensordev.maxnumt[0]=0;\n],\nAC_DEFINE(HAVE_SENSORDEV,1,[Define to 1 if struct 'sensordev' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for struct statvfs64 in sys/statvfs.h)\nAC_TRY_COMPILE(\n[\n#ifdef HAVE_SYS_TYPES_H\n#\tinclude <sys/types.h>\n#endif\n#ifdef HAVE_SYS_STATVFS_H\n#\tinclude <sys/statvfs.h>\n#endif\n],\n[\n\tstruct statvfs64\ts;\n\ts.f_frsize = s.f_blocks = s.f_bfree = s.f_bavail = 0;\n\tstatvfs64(\"/\", &s);\n],\nAC_DEFINE(HAVE_SYS_STATVFS64, 1, [Define to 1 if struct 'statvfs64' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for struct statfs64 in sys/statfs.h)\nAC_TRY_COMPILE(\n[\n#ifdef HAVE_SYS_TYPES_H\n#\tinclude <sys/types.h>\n#endif\n#ifdef HAVE_SYS_STATFS_H\n#\tinclude <sys/statfs.h>\n#endif\n],\n[\n\tstruct statfs64\ts;\n\ts.f_bsize = s.f_blocks = s.f_bfree = s.f_bavail = 0;\n\tstatfs64(\"/\", &s);\n],\nAC_DEFINE(HAVE_SYS_STATFS64, 1, [Define to 1 if struct 'statfs64' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for field ss_family in struct sockaddr_storage)\nAC_TRY_COMPILE([#include <sys/socket.h>],\n[struct sockaddr_storage ss;\nss.ss_family = 0;\n],\nAC_DEFINE(HAVE_SOCKADDR_STORAGE_SS_FAMILY, 1, [Define to 1 if 'sockaddr_storage.ss_family' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for field mem_unit in struct sysinfo)\nAC_TRY_COMPILE([#include <sys/sysinfo.h>],\n[struct sysinfo sysinfo;\nsysinfo.mem_unit=0;\n],\nAC_DEFINE(HAVE_SYSINFO_MEM_UNIT,1,[Define to 1 if 'sysinfo.mem_unit' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for field freeswap in struct sysinfo)\nAC_TRY_COMPILE([#include <sys/sysinfo.h>],\n[struct sysinfo sysinfo;\nsysinfo.freeswap=0;\n],\nAC_DEFINE(HAVE_SYSINFO_FREESWAP,1,[Define to 1 if 'sysinfo.freeswap' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for field totalswap in struct sysinfo)\nAC_TRY_COMPILE([#include <sys/sysinfo.h>],\n[struct sysinfo sysinfo;\nsysinfo.totalswap=0;\n],\nAC_DEFINE(HAVE_SYSINFO_TOTALSWAP,1,[Define to 1 if 'sysinfo.totalswap' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for field totalram in struct sysinfo)\nAC_TRY_COMPILE([#include <sys/sysinfo.h>],\n[struct sysinfo sysinfo;\nsysinfo.totalram=0;\n],\nAC_DEFINE(HAVE_SYSINFO_TOTALRAM,1,[Define to 1 if 'sysinfo.totalram' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for field sharedram in struct sysinfo)\nAC_TRY_COMPILE([#include <sys/sysinfo.h>],\n[struct sysinfo sysinfo;\nsysinfo.sharedram=0;\n],\nAC_DEFINE(HAVE_SYSINFO_SHAREDRAM,1,[Define to 1 if 'sysinfo.sharedram' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for field bufferram in struct sysinfo)\nAC_TRY_COMPILE([#include <sys/sysinfo.h>],\n[struct sysinfo sysinfo;\nsysinfo.bufferram=0;\n],\nAC_DEFINE(HAVE_SYSINFO_BUFFERRAM,1,[Define to 1 if 'sysinfo.bufferram' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for field freeram in struct sysinfo)\nAC_TRY_COMPILE([#include <sys/sysinfo.h>],\n[struct sysinfo sysinfo;\nsysinfo.freeram=0;\n],\nAC_DEFINE(HAVE_SYSINFO_FREERAM,1,[Define to 1 if 'sysinfo.freeram' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for field uptime in struct sysinfo)\nAC_TRY_COMPILE([#include <sys/sysinfo.h>],\n[struct sysinfo sysinfo;\nsysinfo.uptime=0;\n],\nAC_DEFINE(HAVE_SYSINFO_UPTIME,1,[Define to 1 if 'sysinfo.uptime' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for field procs in struct sysinfo)\nAC_TRY_COMPILE([#include <sys/sysinfo.h>],\n[struct sysinfo sysinfo;\nsysinfo.procs=0;\n],\nAC_DEFINE(HAVE_SYSINFO_PROCS,1,[Define to 1 if 'sysinfo.procs' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for field tm_gmtoff in struct tm)\nAC_TRY_COMPILE([\n#ifdef HAVE_SYS_TIME_H\n#include <sys/time.h>\n#endif\t/* HAVE_SYS_TIME_H */\n\n#ifdef HAVE_TIME_H\n#include <time.h>\n#endif\t/* HAVE_TIME_H */\n],\n[\n\tstruct tm tm;\n\ttm.tm_gmtoff;\n],\nAC_DEFINE(HAVE_TM_TM_GMTOFF,1,[Define to 1 if 'tm.tm_gmtoff' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for linker options --start-group/--end-group)\nsaved_LDFLAGS=\"$LDFLAGS\"\nLDFLAGS=\"-Wl,--start-group -Wl,--end-group\"\nAC_TRY_LINK([], [],\nHAVE_START_GROUP=\"yes\"\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no)\n)\nLDFLAGS=\"$saved_LDFLAGS\"\n\nAC_MSG_CHECKING(for '__thread' compiler support)\nAC_TRY_COMPILE([#include <stdio.h>],[static __thread int a = 0;],\nAC_DEFINE(HAVE_THREAD_LOCAL,1,[Define to 1 if compiler keyword '__thread' supported.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no)\nHAVE_THREAD_LOCAL=\"no\")\ndnl *****************************************************************\ndnl *                                                               *\ndnl *                     Checks for functions                      *\ndnl *                                                               *\ndnl *****************************************************************\n\nAC_MSG_CHECKING(for function sysconf() in unistd.h)\nAC_TRY_COMPILE(\n[\n#include <unistd.h>\n],\n[\tint i;\n\n\ti=sysconf(_SC_PHYS_PAGES)*sysconf(_SC_PHYS_PAGES);\n\ti=sysconf(_SC_AVPHYS_PAGES)*sysconf(_SC_PHYS_PAGES);\n],\nAC_DEFINE(HAVE_UNISTD_SYSCONF,1,[Define to 1 if function 'sysconf' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for function initgroups())\nAC_TRY_LINK(\n[\n#include <sys/types.h>\n#include <grp.h>\n],\n[\n\tchar\t*user = \"zabbix\";\n\tinitgroups(user, 0);\n],\nAC_DEFINE(HAVE_FUNCTION_INITGROUPS,1,[Define to 1 if function 'initgroups' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for functions seteuid() and setegid())\nAC_TRY_LINK(\n[\n#include <sys/types.h>\n#include <unistd.h>\n],\n[\n\tseteuid(0);\n\tsetegid(0);\n],\nAC_DEFINE(HAVE_FUNCTION_SETEUID,1,[Define to 1 if functions 'seteuid' and 'setegid' exist.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for function setproctitle())\nAC_TRY_LINK(\n[\n#include <sys/types.h>\n#include <unistd.h>\n],\n[\n\tsetproctitle(\"Test %d\", 1);\n],\nAC_DEFINE(HAVE_FUNCTION_SETPROCTITLE,1,[Define to 1 if function 'setproctitle' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for function sysctlbyname())\nAC_TRY_LINK(\n[\n#ifdef HAVE_SYS_TYPES_H\n#include <sys/types.h>\n#endif /* HAVE_SYS_TYPES_H */\n\n#ifdef HAVE_SYS_PARAM_H\n#include <sys/param.h>\n#endif /* HAVE_SYS_PARAM_H */\n\n#include <sys/sysctl.h>\n],\n[\n\tsysctlbyname(\"\", 0, 0, 0, 0);\n],\nAC_DEFINE(HAVE_FUNCTION_SYSCTLBYNAME,1,[Define to 1 if 'sysctlbyname' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for function sysctl (KERN_BOOTTIME))\nAC_TRY_COMPILE(\n[\n#ifdef HAVE_SYS_TYPES_H\n#include <sys/types.h>\n#endif /* HAVE_SYS_TYPES_H */\n\n#ifdef HAVE_SYS_PARAM_H\n#include <sys/param.h>\n#endif /* HAVE_SYS_PARAM_H */\n\n#include <sys/sysctl.h>\n#include <unistd.h>\n#include <time.h>\n#include <sys/time.h>\n],\n[\n\tsize_t\t\tlen;\n\tstruct timeval\tuptime;\n        int\t\tmib[2];\n\n        mib[0] = CTL_KERN;\n        mib[1] = KERN_BOOTTIME;\n\n        len = sizeof(uptime);\n        sysctl(mib, 2, &uptime, &len, 0, 0);\n],\nAC_DEFINE(HAVE_FUNCTION_SYSCTL_KERN_BOOTTIME,1,[Define to 1 if 'KERN_BOOTTIME' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for function sysctl (HW_NCPU))\nAC_TRY_COMPILE(\n[\n#ifdef HAVE_SYS_TYPES_H\n#include <sys/types.h>\n#endif /* HAVE_SYS_TYPES_H */\n\n#ifdef HAVE_SYS_PARAM_H\n#include <sys/param.h>\n#endif /* HAVE_SYS_PARAM_H */\n\n#include <sys/sysctl.h>\n],\n[\n\tsize_t\tlen;\n\tint\tmib[2], ncpu;\n\n\tmib[0] = CTL_HW;\n\tmib[1] = HW_NCPU;\n\n\tlen = sizeof(ncpu);\n\tsysctl(mib, 2, &ncpu, &len, 0, 0);\n],\nAC_DEFINE(HAVE_FUNCTION_SYSCTL_HW_NCPU,1,[Define to 1 if 'HW_NCPU' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for function sysctl (KERN_MAXFILES))\nAC_TRY_COMPILE(\n[\n#ifdef HAVE_SYS_TYPES_H\n#include <sys/types.h>\n#endif /* HAVE_SYS_TYPES_H */\n\n#ifdef HAVE_SYS_PARAM_H\n#include <sys/param.h>\n#endif /* HAVE_SYS_PARAM_H */\n\n#include <sys/sysctl.h>\n],\n[\n\tsize_t\tlen;\n        int\tmib[2], maxfiles;\n\n        mib[0] = CTL_KERN;\n        mib[1] = KERN_MAXFILES;\n\n        len = sizeof(maxfiles);\n        sysctl(mib, 2, &maxfiles, &len, 0, 0);\n],\nAC_DEFINE(HAVE_FUNCTION_SYSCTL_KERN_MAXFILES,1,[Define to 1 if 'KERN_MAXFILES' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for function sysctl (KERN_MAXPROC))\nAC_TRY_COMPILE(\n[\n#ifdef HAVE_SYS_TYPES_H\n#include <sys/types.h>\n#endif /* HAVE_SYS_TYPES_H */\n\n#ifdef HAVE_SYS_PARAM_H\n#include <sys/param.h>\n#endif /* HAVE_SYS_PARAM_H */\n\n#include <sys/sysctl.h>\n],\n[\n\tsize_t\tlen;\n\tint\tmib[2], maxproc;\n\n        mib[0] = CTL_KERN;\n        mib[1] = KERN_MAXPROC;\n\n        len = sizeof(maxproc);\n        sysctl(mib, 2, &maxproc, &len, 0, 0);\n],\nAC_DEFINE(HAVE_FUNCTION_SYSCTL_KERN_MAXPROC,1,[Define to 1 if 'KERN_MAXPROC' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for function sysctl (KERN_CPTIME,KERN_CPTIME2))\nAC_TRY_COMPILE(\n[\n#include <sys/param.h>\n#include <sys/sysctl.h>\n#if defined(HAVE_SYS_DKSTAT_H)\n#\tinclude <sys/dkstat.h>\n#elif defined(HAVE_SYS_SCHED_H)\n#\tinclude <sys/sched.h>\n#endif\n],\n[\nsize_t\tsz;\nint\ti[] = {CP_USER, CP_NICE, CP_SYS, CP_INTR, CP_IDLE};\n\n{\n\tlong\tstates[CPUSTATES];\n\tint\tmib[2] = {CTL_KERN, KERN_CPTIME};\n\n\tsz = sizeof(states);\n\tsysctl(mib, 2, &states, &sz, NULL, 0);\n}\n\n{\n\tu_int64_t\tstates[CPUSTATES];\n\tint\t\tmib[3] = {CTL_KERN, KERN_CPTIME2, 0};\n\n\tsz = sizeof(states);\n\tsysctl(mib, 3, &states, &sz, NULL, 0);\n}\n],\nAC_DEFINE(HAVE_FUNCTION_SYSCTL_KERN_CPTIME,1,[Define to 1 if 'KERN_CPTIME,KERN_CPTIME2' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for function clock_gettime in time.h)\nAC_TRY_LINK([\n#ifdef HAVE_TIME_H\n#\tinclude <time.h>\n#elif HAVE_SYS_TIME_H\n#\tinclude <sys/time.h>\n#endif\t/* HAVE_SYS_TIME_H */\n],\n[struct timespec tp;\nclock_gettime(CLOCK_REALTIME, &tp);\n],\nAC_DEFINE(HAVE_TIME_CLOCK_GETTIME,1,[Define to 1 if function 'clock_gettime' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\ndnl *****************************************************************\ndnl *                                                               *\ndnl *                      Checks for macros                        *\ndnl *                                                               *\ndnl *****************************************************************\n\nAC_MSG_CHECKING(for macro __va_copy() in stdarg.h)\nAC_TRY_COMPILE(\n[\n#include <stdarg.h>\n],\n[\n\tva_list\tsrc,dst;\n\n\t__va_copy(dst,src);\n],\nAC_DEFINE(HAVE___VA_COPY,1,[Define to 1 if macro '__va_copy' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for macro __VA_ARGS__)\nAC_TRY_COMPILE(\n[\n#define ZBX_CONST_STRING(str)   str\nint test(const char *fmt, ...) { return 0; }\n],\n[\n#define TEST(fmt, ...) test(ZBX_CONST_STRING(fmt), ##__VA_ARGS__)\nTEST(\"%s\",\"test\");\nTEST(\"test\");\n],\nAC_DEFINE(HAVE___VA_ARGS__,1,[Define to 1 if macro '__VA_ARGS__' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\ndnl *****************************************************************\ndnl *                                                               *\ndnl *                 Checks for library functions                  *\ndnl *                                                               *\ndnl *****************************************************************\n\nAC_TYPE_SIGNAL\nAC_REPLACE_FUNCS(getloadavg)\nAC_CHECK_FUNCS(hstrerror)\nAC_CHECK_FUNCS(getenv)\nAC_CHECK_FUNCS(putenv)\nAC_CHECK_FUNCS(sigqueue)\nAC_CHECK_FUNCS(round)\n\ndnl *****************************************************************\ndnl *                                                               *\ndnl *            Checks for file system characteristics             *\ndnl *                                                               *\ndnl *****************************************************************\n\nAC_MSG_CHECKING(for /proc filesystem)\nif test -d /proc; then\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE(HAVE_PROC,1,[Define to 1 if '/proc' file system should be used.])\nelse\n\tAC_MSG_RESULT(no)\nfi\n\nAC_MSG_CHECKING(for file /proc/stat)\nif test -r /proc/stat; then\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE(HAVE_PROC_STAT,1,[Define to 1 if file '/proc/stat' should be used.])\nelse\n\tAC_MSG_RESULT(no)\nfi\n\nAC_MSG_CHECKING(for file /proc/cpuinfo)\nif test -r /proc/cpuinfo; then\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE(HAVE_PROC_CPUINFO,1,[Define to 1 if file '/proc/cpuinfo' should be used.])\nelse\n\tAC_MSG_RESULT(no)\nfi\n\ndnl Solaris\nAC_MSG_CHECKING(for file /proc/0/psinfo)\nif test -r /proc/0/psinfo; then\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE(HAVE_PROC_0_PSINFO,1,[Define to 1 if file '/proc/0/psinfo' should be used.])\nelse\n\tAC_MSG_RESULT(no)\nfi\n\nAC_MSG_CHECKING(for file /proc/loadavg)\nif test -r /proc/loadavg; then\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE(HAVE_PROC_LOADAVG,1,[Define to 1 if file '/proc/loadavg' should be used.])\nelse\n\tAC_MSG_RESULT(no)\nfi\n\nAC_MSG_CHECKING(for file /proc/net/dev)\nif test -r /proc/net/dev; then\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE(HAVE_PROC_NET_DEV,1,[Define to 1 if file '/proc/net/dev' should be used.])\nelse\n\tAC_MSG_RESULT(no)\nfi\n\ndnl *****************************************************************\ndnl *                                                               *\ndnl *              Checks for compiler characteristics              *\ndnl *                                                               *\ndnl *****************************************************************\n\ndnl Check for %qu format (FreeBSD 4.x)\ndnl FreeBSD 4.x does not support %llu\nAC_MSG_CHECKING(for long long format)\nAC_TRY_RUN(\n[\n#include <sys/types.h>\nint main()\n{\n        uint64_t i;\n\n        sscanf(\"200000000010020\", \"%qu\", &i);\n\n        if (i == 200000000010020) return 0;\n        else return -1;\n}\n],\nAC_DEFINE(HAVE_LONG_LONG_QU, 1 ,[Define to 1 if format '%qu' exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no),\nAC_MSG_RESULT(no))\n\ndnl option -rdynamic is needed for readable backtraces\nAC_MSG_CHECKING(for -rdynamic linking option)\nsaved_LDFLAGS=\"$LDFLAGS\"\nLDFLAGS=\"-rdynamic $LDFLAGS\"\nAC_TRY_LINK([#include <execinfo.h>],\n[void *bcktrc[6];\n(void)backtrace(bcktrc, 6);\n],\nLDFLAGS=\"-rdynamic $saved_LDFLAGS\"\nAC_MSG_RESULT(yes),\nLDFLAGS=\"$saved_LDFLAGS\"\nAC_MSG_RESULT(no))\n\ndnl *****************************************************************\ndnl *                                                               *\ndnl *                 Checks for operating systems                  *\ndnl *                                                               *\ndnl *****************************************************************\n\nAC_MSG_CHECKING(for libperfstat 5.2.0.40 fileset)\nAC_TRY_COMPILE([#include <sys/protosw.h>\n#include <libperfstat.h>],\n[perfstat_memory_total_t\tmemstats;\nmemstats.virt_active = 0;\n],\nAC_DEFINE(HAVE_AIXOSLEVEL_520004,1,[Define to 1 if libperfstat 5.2.0.40 fileset exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\nAC_MSG_CHECKING(for libperfstat 5.3.0.60 fileset)\nAC_TRY_COMPILE([#include <sys/protosw.h>\n#include <libperfstat.h>],\n[perfstat_partition_total_t\tlparstats;\nlparstats.type.b.donate_enabled = 0;\nlparstats.idle_donated_purr = 0;\nlparstats.busy_donated_purr = 0;\nlparstats.idle_stolen_purr = 0;\nlparstats.busy_stolen_purr = 0;\n],\nAC_DEFINE(HAVE_AIXOSLEVEL_530006,1,[Define to 1 if libperfstat 5.3.0.60 fileset exists.])\nAC_MSG_RESULT(yes),\nAC_MSG_RESULT(no))\n\ncase \"$host_os\" in\nlinux*)\n\tARCH=\"linux\"\n\t;;\naix*)\n\tARCH=\"aix\"\n\t;;\ndarwin*|rhapsody*)\n\tARCH=\"osx\"\n\tAC_DEFINE([MAC_OS_X], 1, [Define to 1 if you are using Mac OS X.])\n\t;;\n*solaris*)\n\tARCH=\"solaris\"\n\t;;\nhpux*)\n\tARCH=\"hpux\"\n\t;;\nfreebsd*)\n\tARCH=\"freebsd\"\n\t;;\nnetbsd*)\n\tARCH=\"netbsd\"\n\t;;\nosf*)\n\tARCH=\"osf\"\n\t;;\nopenbsd*)\n\tARCH=\"openbsd\"\n\t;;\n*)\n\tARCH=\"unknown\"\n\t;;\nesac\n\nAC_MSG_CHECKING(for architecture)\nAC_MSG_RESULT([$ARCH ($host_os)])\n\nif test \"x$ARCH\" = \"xlinux\"; then\n\tAC_MSG_CHECKING([for the linux kernel version])\n\n\tkernel=`uname -r`\n\n\tcase \"${kernel}\" in\n\t\t2.6.*)\n\t\t\tAC_MSG_RESULT([2.6 family (${kernel})])\n\t\t\tAC_DEFINE([KERNEL_2_6], 1, [Define to 1 if you are using Linux 2.6.x])\n\t\t\t;;\n\t\t2.4.*)\n\t\t\tAC_MSG_RESULT([2.4 family (${kernel})])\n\t\t\tAC_DEFINE([KERNEL_2_4], 1, [Define to 1 if you are using Linux 2.4.x])\n\t\t\t;;\n\t\t*)\n\t\t\tAC_MSG_RESULT([unknown family (${kernel})])\n\t\t\t;;\n\tesac\nfi\n\nif test \"x$ARCH\" = \"xsolaris\"; then\n\tdnl Forcing a 64-bit application for a 64-bit Solaris\n\tdnl A 32-bit program that uses /proc is able to look at 32-bit processes,\n\tdnl but is not able to understand all attributes of a 64-bit process.\n\tAC_MSG_CHECKING(for -m64 compilation flag)\n\tsaved_CFLAGS=\"$CFLAGS\"\n\tCFLAGS=\"-m64\"\n\tAC_TRY_RUN(\n\t[int main(void) {return 0;}],\n\tCFLAGS=\"-m64 $saved_CFLAGS\"\n\tAC_MSG_RESULT(yes),\n\tCFLAGS=\"$saved_CFLAGS\"\n\tAC_MSG_RESULT(no))\n\tCFLAGS=\"${CFLAGS} -DDUK_F_OLD_SOLARIS\"\nfi\n\nif test \"x$ARCH\" = \"xhpux\"; then\n\tdnl Low Level Discovery needs a way to get the list of network\n\tdnl interfaces available on the monitored system. On HP-UX systems\n\tdnl that way depends on the OS version.\n\thpux_version=${host_os#hpux}\n\thpux_major=${hpux_version%.*}\n\thpux_minor=${hpux_version#*.}\n\n\tAC_DEFINE_UNQUOTED([HPUX_VERSION], $hpux_major$hpux_minor, [Define to HP-UX version])\n\n\tdnl This API level is needed so that \"utsname.nodename\" is not truncated.\n\tAC_MSG_CHECKING(for -D_HPUX_API_LEVEL=20040821 compilation flag)\n\tsaved_CFLAGS=\"$CFLAGS\"\n\tCFLAGS=\"-D_HPUX_API_LEVEL=20040821\"\n\tAC_TRY_RUN(\n[\n#ifdef HAVE_DLFCN_H\n#\tinclude <dlfcn.h>\n#endif\n#ifdef HAVE_SYS_UTSNAME_H\n#\tinclude <sys/utsname.h>\n#endif\n\nint main(void)\n{\n\tvoid\t\t*p1, *p2;\n\tstruct utsname\tname;\n\n\t/* check that the compiler (e.g., GCC 4.3.0 and above) supports function-level versioning */\n\n\tp1 = uname;\n\tp2 = dlsym(RTLD_DEFAULT, \"uname{20040821}\");\n\n\tif (p1 != p2)\n\t\treturn 1;\n\n\t/* uname() fails with EFAULT on HP-UX systems that were only partially upgraded to this API level */\n\n\treturn -1 == uname(&name) ? 1 : 0;\n}\n],\n\tCFLAGS=\"-D_HPUX_API_LEVEL=20040821 $saved_CFLAGS\"\n\tAC_MSG_RESULT(yes),\n\tCFLAGS=\"$saved_CFLAGS\"\n\tAC_MSG_RESULT(no))\nfi\n\nAC_DEFINE_UNQUOTED([ARCH], \"${ARCH}\", [Define to OS name for code managing])\nAC_SUBST(ARCH)\n\nAC_CHECK_SIZEOF([void *])\n\ndnl *****************************************************************\ndnl *                                                               *\ndnl *         Checks for options given on the command line          *\ndnl *                                                               *\ndnl *****************************************************************\n\nAC_ARG_ENABLE(static,[  --enable-static         Build statically linked binaries],\n[case \"${enableval}\" in\n  yes)\n    LDFLAGS=\"${LDFLAGS} -static\"\n    AC_MSG_CHECKING(if static linking is possible)\n    AC_LINK_IFELSE([AC_LANG_PROGRAM(,)],\n      [AC_MSG_RESULT([yes])\n        static_linking=yes],\n      [AC_MSG_RESULT([no])\n        static_linking=no])\n      if test \"x$static_linking\" = \"xno\"; then\n        AC_MSG_ERROR([static linking is not possible on this system])\n      fi\n    ;;\n  no) ;;\n  *) AC_MSG_ERROR([bad value ${enableval} for --enable-static]) ;;\nesac])\n\nAC_ARG_ENABLE(static-libs,[  --enable-static-libs    Build statically linked binaries with selected libs from default folders],\n[case \"${enableval}\" in\n  yes)\n    static_linking_libs=yes\n    saved_LIBS=\"$LIBS\"\n    LIBS=\"${saved_LIBS} -Wl,-bstatic -Wl,-bdynamic\"\n    AC_MSG_CHECKING([if libs static linking with \"-Wl,-b\" is possible])\n    AC_LINK_IFELSE([AC_LANG_PROGRAM(,)],\n      [AC_MSG_RESULT([yes])\n        static_linking_support=\"-Wl,-b\"],\n      [AC_MSG_RESULT([no])\n        static_linking_support=no])\n        LIBS=\"$saved_LIBS\"\n\n    if test \"x$static_linking_support\" = \"xno\"; then\n      LIBS=\"${saved_LIBS} -Wl,-Bstatic -Wl,-Bdynamic\"\n      AC_MSG_CHECKING([if libs static linking with \"-Wl,-B\" is possible])\n      AC_LINK_IFELSE([AC_LANG_PROGRAM(,)],\n        [AC_MSG_RESULT([yes])\n          static_linking_support=\"-Wl,-B\"],\n        [AC_MSG_RESULT([no])\n          static_linking_support=no])\n          LIBS=\"$saved_LIBS\"\n    fi\n    ;;\n  no) ;;\n  *) AC_MSG_ERROR([bad value ${enableval} for --enable-static-libs]) ;;\nesac])\n\nAC_ARG_ENABLE(server,[  --enable-server         Turn on build of Zabbix server],\n[case \"${enableval}\" in\n  yes) server=yes ;;\n  no)  server=no ;;\n  *) AC_MSG_ERROR([bad value ${enableval} for --enable-server]) ;;\nesac],\n[server=no])\nAM_CONDITIONAL(SERVER, test \"x$server\" = \"xyes\")\n\nAC_ARG_ENABLE(proxy,[  --enable-proxy          Turn on build of Zabbix proxy],\n[case \"${enableval}\" in\n  yes) proxy=yes ;;\n  no)  proxy=no ;;\n  *) AC_MSG_ERROR([bad value ${enableval} for --enable-proxy]) ;;\nesac],\n[proxy=no])\nAM_CONDITIONAL(PROXY, test \"x$proxy\" = \"xyes\")\n\nAC_ARG_ENABLE(agent,[  --enable-agent          Turn on build of Zabbix agent and client utilities],\n[case \"${enableval}\" in\n  yes) agent=yes ;;\n  no)  agent=no ;;\n  *) AC_MSG_ERROR([bad value ${enableval} for --enable-agent]) ;;\nesac],\n[agent=no])\nAM_CONDITIONAL(AGENT, test \"x$agent\" = \"xyes\")\n\nAC_ARG_ENABLE(agent2,[  --enable-agent2         Turn on build of Zabbix agent 2],\n[case \"${enableval}\" in\n  yes) agent2=yes ;;\n  no)  agent2=no ;;\n  *) AC_MSG_ERROR([bad value ${enableval} for --enable-agent2]) ;;\nesac\ntest \"x$agent2\" = \"xyes\" -a \"x$HAVE_THREAD_LOCAL\" = \"xno\" && AC_MSG_ERROR([C compiler is not compatible with agent2 assembly])\n],\n[agent2=no])\nAM_CONDITIONAL(AGENT2, test \"x$agent2\" = \"xyes\")\n\nAC_ARG_ENABLE(java,[  --enable-java           Turn on build of Zabbix Java gateway],\n[case \"${enableval}\" in\n  yes) java=yes ;;\n  no)  java=no ;;\n  *) AC_MSG_ERROR([bad value ${enableval} for --enable-java]) ;;\nesac],\n[java=no])\nAM_CONDITIONAL(JAVA, test \"x$java\" = \"xyes\")\n\nAC_ARG_ENABLE(ipv6,[  --enable-ipv6           Turn on support of IPv6],\n[case \"${enableval}\" in\n  yes) ipv6=yes ;;\n  no)  ipv6=no ;;\n  *) AC_MSG_ERROR([bad value ${enableval} for --enable-ipv6]) ;;\nesac],\n[ipv6=no])\nAM_CONDITIONAL(IPV6, test \"x$ipv6\" = \"xyes\")\n\nAM_CONDITIONAL([DBSCHEMA], [test -d create])\n\nAM_CONDITIONAL([ZBXCMOCKA], [(test -d tests/) && (test \"x$server\" = \"xyes\" || test \"x$proxy\" = \"xyes\" || test \"x$agent\" = \"xyes\")])\n\nhave_db=\"no\"\nhave_unixodbc=\"no\"\nhave_web_monitoring=\"no\"\nhave_snmp=\"no\"\nhave_ipmi=\"no\"\nhave_ipv6=\"no\"\nhave_ssh=\"no\"\nhave_tls=\"no\"\n\n\nif test \"x$ipv6\" = \"xyes\"; then\n\tAC_DEFINE(HAVE_IPV6,1,[Define to 1 if IPv6 should be enabled.])\n\thave_ipv6=\"yes\"\nfi\n\nif test \"x$server\" = \"xyes\" || test \"x$proxy\" = \"xyes\"; then\n\n\n\tdnl Checking for MySQL support\n\tAX_LIB_MYSQL()\n\tif test \"x$want_mysql\" = \"xyes\"; then\n\t\tif test \"x$have_db\" != \"xno\"; then\n\t\t\tAC_MSG_ERROR([You can configure for only one database.])\n\t\tfi\n\n\t\tif test \"x$found_mysql\" = \"xyes\"; then\n\t\t\thave_db=\"MySQL\"\n\t\t\thave_multirow_insert=\"yes\"\n\t\telse\n\t\t\tAC_MSG_ERROR([MySQL library not found])\n\t\tfi\n\tfi\n\n\tdnl Checking for Oracle support\n\tAX_LIB_ORACLE_OCI([10.0])\n\tif test \"x$want_oracle_oci\" = \"xyes\"; then\n\t\tif test \"x$have_db\" != \"xno\"; then\n\t\t\tAC_MSG_ERROR([You can configure for only one database.])\n\t\tfi\n\n\t\tif test \"x$HAVE_ORACLE_OCI\" = \"xyes\"; then\n\t\t\thave_db=\"Oracle\"\n\n\t\t\tORACLE_CPPFLAGS=\"$ORACLE_OCI_CFLAGS\"\n\t\t\tORACLE_LDFLAGS=\"$ORACLE_OCI_LDFLAGS\"\n\t\t\tORACLE_LIBS=\"$ORACLE_OCI_LIBS\"\n\n\t\t\tAC_DEFINE(HAVE_ORACLE,1,[Define to 1 if Oracle should be enabled.])\n\t\telse\n\t\t\tAC_MSG_ERROR([Oracle OCI library not found])\n\t\tfi\n\tfi\n\n\tdnl Checking for PostgreSQL support\n\tAX_LIB_POSTGRESQL(\"9.2\")\n\tif test \"x$want_postgresql\" = \"xyes\"; then\n\t\tif test \"x$have_db\" != \"xno\"; then\n\t\t\tAC_MSG_ERROR([You can configure for only one database.])\n\t\tfi\n\n\t\tif test \"x$found_postgresql\" = \"xyes\"; then\n\t\t\tif test \"$postgresql_version_check\" != \"1\"; then\n\t\t\t\tAC_MSG_ERROR([PostgreSQL version mismatch])\n\t\t\tfi\n\n\t\t\thave_db=\"PostgreSQL\"\n\n\t\t\tif test \"$postgresql_version_number\" -ge 8002000; then\n\t\t\t\thave_multirow_insert=\"yes\"\n\t\t\tfi\n\n\t\telse\n\t\t\tAC_MSG_ERROR([PostgreSQL library not found])\n\t\tfi\n\tfi\n\n\tdnl Checking for SQLite3 support\n\tAX_LIB_SQLITE3()\n\tif test \"x$want_sqlite3\" = \"xyes\"; then\n\t\tif test \"x$server\" = \"xyes\"; then\n\t\t\tAC_MSG_ERROR([SQLite is not supported as a main Zabbix database backend.])\n\t\tfi\n\n\t\tif test \"x$have_db\" != \"xno\"; then\n\t\t\tAC_MSG_ERROR([You can configure for only one database.])\n\t\tfi\n\n\t\tif test \"x$found_sqlite3\" = \"xyes\"; then\n\t\t\thave_db=\"SQLite v3.x\"\n\n\t\t\tsaved_CPPFLAGS=\"$CPPFLAGS\"\n\t\t\tsaved_LDFLAGS=\"$LDFLAGS\"\n\n\t\t\tCPPFLAGS=\"$CPPFLAGS $SQLITE3_CPPFLAGS\"\n\t\t\tLDFLAGS=\"$LDFLAGS $SQLITE3_LDFLAGS $SQLITE3_LIBS\"\n\n\t\t\tAC_MSG_CHECKING([for function sqlite3_open_v2() in sqlite3.h])\n\t\t\tAC_TRY_LINK([#include <sqlite3.h>],\n\t\t\t\t[sqlite3 *conn = 0;\n\t\t\t\tsqlite3_open_v2(\"dbname\", &conn, SQLITE_OPEN_READWRITE, 0);\n\t\t\t\t],\n\t\t\t\tAC_DEFINE(HAVE_FUNCTION_SQLITE3_OPEN_V2,1,[Define to 1 if function 'sqlite3_open_v2' exists.])\n\t\t\t\tAC_MSG_RESULT(yes),\n\t\t\t\tAC_MSG_RESULT(no))\n\n\t\t\tCPPFLAGS=\"$saved_CPPFLAGS\"\n\t\t\tLDFLAGS=\"$saved_LDFLAGS\"\n\t\telse\n\t\t\tAC_MSG_ERROR([SQLite3 library not found])\n\t\tfi\n\tfi\n\n\tAC_MSG_CHECKING(for Zabbix server/proxy database selection)\n\tif test \"x$have_db\" = \"xno\"; then\n\t\tAC_MSG_RESULT(error)\n\t\tAC_MSG_ERROR([No database selected for Zabbix server/proxy. Use --with-mysql or --with-oracle or --with-postgresql or --with-sqlite3.])\n\telse\n\t\tAC_MSG_RESULT(ok)\n\tfi\n\n\tAC_MSG_CHECKING(for multirow insert statements)\n\tif test \"x$have_multirow_insert\" = \"xyes\"; then\n\t\tAC_DEFINE(HAVE_MULTIROW_INSERT,1,[Define to 1 if database supports multirow insert statements.])\n\t\tAC_MSG_RESULT(yes)\n\telse\n\t\tAC_MSG_RESULT(no)\n\tfi\n\n\tDB_CFLAGS=\"$MYSQL_CFLAGS $ORACLE_CPPFLAGS $POSTGRESQL_CFLAGS $SQLITE3_CPPFLAGS\"\n\tDB_LDFLAGS=\"$MYSQL_LDFLAGS $ORACLE_LDFLAGS $POSTGRESQL_LDFLAGS $SQLITE3_LDFLAGS\"\n\tDB_LIBS=\"$MYSQL_LIBS $ORACLE_LIBS $POSTGRESQL_LIBS $SQLITE3_LIBS\"\n\n\tAC_SUBST(DB_CFLAGS)\n\tAC_SUBST(DB_LDFLAGS)\n\tAC_SUBST(DB_LIBS)\n\n\tSERVER_LDFLAGS=\"${SERVER_LDFLAGS} ${DB_LDFLAGS}\"\n\tSERVER_LIBS=\"${SERVER_LIBS} ${DB_LIBS}\"\n\n\tPROXY_LDFLAGS=\"${PROXY_LDFLAGS} ${DB_LDFLAGS}\"\n\tPROXY_LIBS=\"${PROXY_LIBS} ${DB_LIBS}\"\n\n\tdnl Check for LIBXML2 [by default - skip]\n\tLIBXML2_CHECK_CONFIG([no])\n\tif test \"x$want_libxml2\" = \"xyes\"; then\n\t\tif test \"x$found_libxml2\" != \"xyes\"; then\n\t\t\tAC_MSG_ERROR([LIBXML2 library not found])\n\t\telse\n\t\t\thave_libxml2=\"yes\"\n\t\tfi\n\tfi\n\tSERVER_LDFLAGS=\"$SERVER_LDFLAGS $LIBXML2_LDFLAGS\"\n\tSERVER_LIBS=\"$SERVER_LIBS $LIBXML2_LIBS\"\n\n\tPROXY_LDFLAGS=\"$PROXY_LDFLAGS $LIBXML2_LDFLAGS\"\n\tPROXY_LIBS=\"$PROXY_LIBS $LIBXML2_LIBS\"\n\n\tAC_SUBST(LIBXML2_CFLAGS)\n\n\tdnl Checking for unixODBC support\n\tLIBUNIXODBC_CHECK_CONFIG([no])\n\tif test \"x$want_unixodbc\" = \"xyes\"; then\n\t\tif test \"x$unixodbc_error\" != \"x\"; then\n\t\t\tAC_MSG_ERROR($unixodbc_error)\n\t\tfi\n\t\thave_unixodbc=\"yes\"\n\tfi\n\tSERVER_LDFLAGS=\"$SERVER_LDFLAGS $UNIXODBC_LDFLAGS\"\n\tSERVER_LIBS=\"$SERVER_LIBS $UNIXODBC_LIBS\"\n\n\tPROXY_LDFLAGS=\"$PROXY_LDFLAGS $UNIXODBC_LDFLAGS\"\n\tPROXY_LIBS=\"$PROXY_LIBS $UNIXODBC_LIBS\"\n\n\tAC_SUBST(UNIXODBC_CFLAGS)\n\n\tdnl Check for Net-SNMP [by default - skip]\n\tLIBNETSNMP_CHECK_CONFIG([no], \"5.3.0\")\n\n\tif test \"x$want_netsnmp\" = \"xyes\"; then\n\t\tif test \"x$found_netsnmp\" != \"xyes\"; then\n\t\t\tAC_MSG_ERROR([Invalid Net-SNMP directory - unable to find net-snmp-config])\n\t\telse\n\t\t\thave_snmp=\"yes\"\n\t\tfi\n\tfi\n\tSERVER_LDFLAGS=\"$SERVER_LDFLAGS $SNMP_LDFLAGS\"\n\tSERVER_LIBS=\"$SERVER_LIBS $SNMP_LIBS\"\n\n\tPROXY_LDFLAGS=\"$PROXY_LDFLAGS $SNMP_LDFLAGS\"\n\tPROXY_LIBS=\"$PROXY_LIBS $SNMP_LIBS\"\n\n\tAC_SUBST(SNMP_CFLAGS)\n\n\tdnl Check for LIBSSH2 [by default - skip] at least of version 1.0.0.\n\tLIBSSH2_CHECK_CONFIG([no])\n\tLIBSSH_CHECK_CONFIG([no])\n\tif test \"x$want_ssh2\" = \"xyes\"; then\n\t\tif test \"x$want_ssh\" != \"xno\"; then\n\t\t\tAC_MSG_ERROR([You can configure for only one SSH library (--with-ssh or --with-ssh2).])\n\t\tfi\n\n\t\tif test \"x$found_ssh2\" != \"xyes\"; then\n\t\t\tAC_MSG_ERROR([SSH2 library not found])\n\t\telif test \"x$accept_ssh2_version\" != \"xyes\"; then\n\t\t\tAC_MSG_ERROR([SSH2 library version requirement not met (>= 1.0.0)])\n\t\telse\n\t\t\thave_ssh=\"yes (libssh2)\"\n\t\tfi\n\tfi\n\tSERVER_LDFLAGS=\"$SERVER_LDFLAGS $SSH2_LDFLAGS\"\n\tSERVER_LIBS=\"$SERVER_LIBS $SSH2_LIBS\"\n\n\tPROXY_LDFLAGS=\"$PROXY_LDFLAGS $SSH2_LDFLAGS\"\n\tPROXY_LIBS=\"$PROXY_LIBS $SSH2_LIBS\"\n\t\n\tAC_SUBST(SSH2_CFLAGS)\n\n\tdnl Check for LIBSSH [by default - skip] at least of version 0.7.0.\n\tif test \"x$want_ssh\" = \"xyes\"; then\n\t\tif test \"x$found_ssh\" != \"xyes\"; then\n\t\t\tAC_MSG_ERROR([SSH library not found])\n\t\telif test \"x$accept_ssh_version\" != \"xyes\"; then\n\t\t\tAC_MSG_ERROR([SSH library version requirement not met (>= 0.6.0)])\n\t\telse\n\t\t\thave_ssh=\"yes (libssh)\"\n\t\tfi\n\tfi\n\tSERVER_LDFLAGS=\"$SERVER_LDFLAGS $SSH_LDFLAGS\"\n\tSERVER_LIBS=\"$SERVER_LIBS $SSH_LIBS\"\n\n\tPROXY_LDFLAGS=\"$PROXY_LDFLAGS $SSH_LDFLAGS\"\n\tPROXY_LIBS=\"$PROXY_LIBS $SSH_LIBS\"\n\t\n\tAC_SUBST(SSH_CFLAGS)\n\n\tfound_openipmi=\"no\"\n\tdnl Check for libOpenIPMI [by default - skip]\n\tLIBOPENIPMI_CHECK_CONFIG([no])\n\tif test \"x$want_openipmi\" = \"xyes\"; then\n\t\tif test \"x$found_openipmi\" != \"xyes\"; then\n\t\t\tAC_MSG_ERROR([Invalid OPENIPMI directory - unable to find ipmiif.h])\n\t\telse\n\t\t\thave_ipmi=\"yes\"\n\t\tfi\n\tfi\n\n\tSERVER_LDFLAGS=\"$SERVER_LDFLAGS $OPENIPMI_LDFLAGS\"\n\tSERVER_LIBS=\"$SERVER_LIBS $OPENIPMI_LIBS\"\n\n\tPROXY_LDFLAGS=\"$PROXY_LDFLAGS $OPENIPMI_LDFLAGS\"\n\tPROXY_LIBS=\"$PROXY_LIBS $OPENIPMI_LIBS\"\n\n\tAC_SUBST(OPENIPMI_CFLAGS)\n\n\tdnl Check for zlib, used by Zabbix server-proxy communications\n\tZLIB_CHECK_CONFIG([no])\n\tif test \"x$found_zlib\" != \"xyes\"; then\n\t\tAC_MSG_ERROR([Unable to use zlib (zlib check failed)])\n\tfi\n\n\tAC_SUBST(ZLIB_CFLAGS)\n\n\tdnl Check for 'libpthread' library that supports PTHREAD_PROCESS_SHARED flag\n\tLIBPTHREAD_CHECK_CONFIG([no])\n\tif test \"x$found_libpthread\" != \"xyes\"; then\n\t\tAC_MSG_ERROR([Unable to use libpthread (libpthread check failed)])\n\tfi\nfi\n\nSERVER_LDFLAGS=\"$SERVER_LDFLAGS $ZLIB_LDFLAGS $LIBPTHREAD_LDFLAGS\"\nSERVER_LIBS=\"$SERVER_LIBS $ZLIB_LIBS $LIBPTHREAD_LIBS\"\n\nPROXY_LDFLAGS=\"$PROXY_LDFLAGS $ZLIB_LDFLAGS $LIBPTHREAD_LDFLAGS\"\nPROXY_LIBS=\"$PROXY_LIBS $ZLIB_LIBS $LIBPTHREAD_LIBS\"\n\nAGENT_LDFLAGS=\"$AGENT_LDFLAGS $ZLIB_LDFLAGS $LIBPTHREAD_LDFLAGS\"\nAGENT_LIBS=\"$AGENT_LIBS $ZLIB_LIBS $LIBPTHREAD_LIBS\"\n\nZBXGET_LDFLAGS=\"$ZBXGET_LDFLAGS $ZLIB_LDFLAGS $LIBPTHREAD_LDFLAGS\"\nZBXGET_LIBS=\"$ZBXGET_LIBS $ZLIB_LIBS $LIBPTHREAD_LIBS\"\n\nSENDER_LDFLAGS=\"$SENDER_LDFLAGS $ZLIB_LDFLAGS $LIBPTHREAD_LDFLAGS\"\nSENDER_LIBS=\"$SENDER_LIBS $ZLIB_LIBS $LIBPTHREAD_LIBS\"\n\nZBXJS_LDFLAGS=\"$ZBXJS_LDFLAGS $ZLIB_LDFLAGS $LIBPTHREAD_LDFLAGS\"\nZBXJS_LIBS=\"$ZBXJS_LIBS $ZLIB_LIBS $LIBPTHREAD_LIBS\"\n\nAM_CONDITIONAL(HAVE_IPMI, [test \"x$have_ipmi\" = \"xyes\"])\nAM_CONDITIONAL(HAVE_LIBXML2, test \"x$have_libxml2\" = \"xyes\")\n\ndnl Check if Zabbix internal IPC services are used\nhave_ipcservice=\"no\"\nif test \"x$have_ipmi\" = \"xyes\"; then\n\thave_ipcservice=\"yes\"\nfi\n\nif test \"x$server\" = \"xyes\"; then\n\thave_ipcservice=\"yes\"\nfi\n\nif test \"x$proxy\" = \"xyes\"; then\n\thave_ipcservice=\"yes\"\nfi\n\nAM_CONDITIONAL(PROXY_IPCSERVICE, [test \"x$have_ipmi\" = \"xyes\"])\n\ndnl Check for libevent, used by Zabbix IPC services\nif test \"x$have_ipcservice\" = \"xyes\"; then\n\tAC_DEFINE([HAVE_IPCSERVICE], 1, [Define to 1 if Zabbix IPC services are used])\n\n\tLIBEVENT_CHECK_CONFIG([no])\n\tif test \"x$found_libevent\" != \"xyes\"; then\n\t\tAC_MSG_ERROR([Unable to use libevent (libevent check failed)])\n\tfi\n\n\tSERVER_LDFLAGS=\"$SERVER_LDFLAGS $LIBEVENT_LDFLAGS\"\n\tSERVER_LIBS=\"$SERVER_LIBS $LIBEVENT_LIBS\"\n\n\tPROXY_LDFLAGS=\"$PROXY_LDFLAGS $LIBEVENT_LDFLAGS\"\n\tPROXY_LIBS=\"$PROXY_LIBS $LIBEVENT_LIBS\"\nfi\n\ndnl Check for GnuTLS libgnutls [by default - skip]\nLIBGNUTLS_CHECK_CONFIG([no])\nif test \"x$want_gnutls\" = \"xyes\"; then\n\tif test \"x$have_tls\" != \"xno\"; then\n\t\tAC_MSG_ERROR([You can configure for only one TLS library (--with-gnutls or --with-openssl).])\n\tfi\n\n\tif test \"x$found_gnutls\" != \"xyes\"; then\n\t\tAC_MSG_ERROR([GnuTLS library libgnutls not found])\n\telif test \"x$accept_gnutls_version\" != \"xyes\"; then\n\t\tAC_MSG_ERROR([GnuTLS library version requirement not met (>= 3.1.18)])\n\telse\n\t\thave_tls=\"GnuTLS\"\n\tfi\n\tTLS_CFLAGS=\"$GNUTLS_CFLAGS\"\n\tTLS_LDFLAGS=\"$GNUTLS_LDFLAGS\"\n\tTLS_LIBS=\"$GNUTLS_LIBS\"\nfi\n\ndnl Check for OpenSSL libssl and libcrypto [by default - skip]\nLIBOPENSSL_CHECK_CONFIG([no])\nif test \"x$want_openssl\" = \"xyes\"; then\n\tif test \"x$have_tls\" != \"xno\"; then\n\t\tAC_MSG_ERROR([You can configure for only one TLS library (--with-gnutls or --with-openssl).])\n\tfi\n\n\tif test \"x$found_openssl\" != \"xOpenSSL\" -a \"x$found_openssl\" != \"xOpenSSL (PSK not supported)\"; then\n\t\tAC_MSG_ERROR([OpenSSL library libssl or libcrypto not found])\n\telif test \"x$accept_openssl_version\" != \"xyes\"; then\n\t\tAC_MSG_ERROR([OpenSSL library version requirement not met (>= 1.0.1)])\n\telse\n\t\thave_tls=$found_openssl\n\tfi\n\tTLS_CFLAGS=\"$OPENSSL_CFLAGS\"\n\tTLS_LDFLAGS=\"$OPENSSL_LDFLAGS\"\n\tTLS_LIBS=\"$OPENSSL_LIBS\"\nfi\nAC_SUBST(TLS_CFLAGS)\n\nSERVER_LDFLAGS=\"$SERVER_LDFLAGS $TLS_LDFLAGS\"\nSERVER_LIBS=\"$SERVER_LIBS $TLS_LIBS\"\n\nPROXY_LDFLAGS=\"$PROXY_LDFLAGS $TLS_LDFLAGS\"\nPROXY_LIBS=\"$PROXY_LIBS $TLS_LIBS\"\n\nAGENT_LDFLAGS=\"$AGENT_LDFLAGS $TLS_LDFLAGS\"\nAGENT_LIBS=\"$AGENT_LIBS $TLS_LIBS\"\n\nZBXGET_LDFLAGS=\"$ZBXGET_LDFLAGS $TLS_LDFLAGS\"\nZBXGET_LIBS=\"$ZBXGET_LIBS $TLS_LIBS\"\n\nSENDER_LDFLAGS=\"$SENDER_LDFLAGS $TLS_LDFLAGS\"\nSENDER_LIBS=\"$SENDER_LIBS $TLS_LIBS\"\n\nZBXJS_LDFLAGS=\"$ZLIB_LDFLAGS $TLS_LDFLAGS\"\nZBXJS_LIBS=\"$ZBXJS_LIBS $TLS_LIBS\"\n\nif test \"x$agent2\" = \"xyes\"; then\n\tAC_CHECK_PROGS([GO], [go], [no])\n\tif test \"x$GO\" = \"xno\"; then\n\t\tAC_MSG_ERROR([Unable to find \"go\" executable in path])\n\tfi\n\tAC_DEFINE(ZBX_BUILD_AGENT2,1,[Define to 1 if Agent2 is being built.])\nfi\n\nif test \"x$java\" = \"xyes\"; then\n\tAC_CHECK_PROGS([JAVAC], [javac], [no])\n\tif test \"x$JAVAC\" = \"xno\"; then\n\t\tAC_MSG_ERROR([Unable to find \"javac\" executable in path])\n\tfi\n\tAC_CHECK_PROGS([JAR], [jar], [no])\n\tif test \"x$JAR\" = \"xno\"; then\n\t\tAC_MSG_ERROR([Unable to find \"jar\" executable in path])\n\tfi\nfi\n\nfound_ldap=\"no\"\ndnl Check for libLDAP [by default - skip]\nLIBLDAP_CHECK_CONFIG([no])\nif test \"x$want_ldap\" = \"xyes\"; then\n\tif test \"x$found_ldap\" != \"xyes\"; then\n\t\tAC_MSG_ERROR([Invalid LDAP directory - unable to find ldap.h])\n\tfi\nfi\nSERVER_LDFLAGS=\"$SERVER_LDFLAGS $LDAP_LDFLAGS\"\nSERVER_LIBS=\"$SERVER_LIBS $LDAP_LIBS\"\n\nPROXY_LDFLAGS=\"$PROXY_LDFLAGS $LDAP_LDFLAGS\"\nPROXY_LIBS=\"$PROXY_LIBS $LDAP_LIBS\"\n\nAGENT_LDFLAGS=\"$AGENT_LDFLAGS $LDAP_LDFLAGS\"\nAGENT_LIBS=\"$AGENT_LIBS $LDAP_LIBS\"\n\nAC_SUBST(LDAP_CPPFLAGS)\n\nfound_curl=\"no\"\ndnl Checking for libCurl [by default - skip]\nLIBCURL_CHECK_CONFIG(, [7.13.1], [],[])\nif test \"x$want_curl\" = \"xyes\"; then\n\tif test \"x$found_curl\" != \"xyes\"; then\n\t\tAC_MSG_ERROR([Curl library not found])\n\tfi\nfi\nif test \"x$found_curl\" = \"xyes\"; then\n\thave_web_monitoring=\"cURL\"\nfi\nCFLAGS=\"$LIBCURL_CFLAGS $CFLAGS\"\n\nSERVER_LDFLAGS=\"$SERVER_LDFLAGS $LIBCURL_LDFLAGS\"\nSERVER_LIBS=\"$SERVER_LIBS $LIBCURL_LIBS\"\n\nPROXY_LDFLAGS=\"$PROXY_LDFLAGS $LIBCURL_LDFLAGS\"\nPROXY_LIBS=\"$PROXY_LIBS $LIBCURL_LIBS\"\n\nAM_CONDITIONAL(HAVE_LIBCURL, test \"x$found_curl\" = \"xyes\")\n\ndnl Starting from 2.0 agent can do web monitoring\nAGENT_LDFLAGS=\"$AGENT_LDFLAGS $LIBCURL_LDFLAGS\"\nAGENT_LIBS=\"$AGENT_LIBS $LIBCURL_LIBS\"\n\nZBXGET_LDFLAGS=\"$ZBXGET_LDFLAGS $ZLIB_LDFLAGS $LIBPTHREAD_LDFLAGS\"\nZBXGET_LIBS=\"$ZBXGET_LIBS $ZLIB_LIBS $LIBPTHREAD_LIBS\"\n\nSENDER_LDFLAGS=\"$SENDER_LDFLAGS $ZLIB_LDFLAGS $LIBPTHREAD_LDFLAGS\"\nSENDER_LIBS=\"$SENDER_LIBS $ZLIB_LIBS $LIBPTHREAD_LIBS\"\n\nZBXJS_LDFLAGS=\"$ZBXJS_LDFLAGS $LIBCURL_LDFLAGS\"\nZBXJS_LIBS=\"$ZBXJS_LIBS $LIBCURL_LIBS\"\n\ndnl Check for libpcre, used by Zabbix for regular expressions\nif test \"x$server\" = \"xyes\" || test \"x$proxy\" = \"xyes\" || test \"x$agent\" = \"xyes\" || test \"x$agent2\" = \"xyes\"; then\n\tLIBPCRE_CHECK_CONFIG([no])\n\tif test \"x$found_libpcre\" != \"xyes\"; then\n\t\tAC_MSG_ERROR([Unable to use libpcre (libpcre check failed)])\n\tfi\nfi\n\nCFLAGS=\"$CFLAGS $LIBPCRE_CFLAGS\"\nLDFLAGS=\"$LDFLAGS $LIBPCRE_LDFLAGS\"\nif test \"x$ARCH\" = \"xosx\"; then\n\tLIBS=\"$LIBPCRE_LIBS $LIBS\"\nelse\n\tLIBS=\"$LIBS $LIBPCRE_LIBS\"\nfi\n\nfound_iconv=\"no\"\ndnl Check for libiconv [by default - skip]\nLIBICONV_CHECK_CONFIG([no])\nif test \"x$found_iconv\" != \"xyes\"; then\n\tAC_MSG_ERROR([Unable to use iconv (libiconv check failed)])\nfi\nLDFLAGS=\"$LDFLAGS $ICONV_LDFLAGS\"\nLIBS=\"$LIBS $ICONV_LIBS\"\n\nRANLIB=\"ranlib\"\nAC_SUBST(RANLIB)\n\nSERVER_CONFIG_FILE=\"${sysconfdir}/zabbix_server.conf\"\nPROXY_CONFIG_FILE=\"${sysconfdir}/zabbix_proxy.conf\"\nAGENT_CONFIG_FILE=\"${sysconfdir}/zabbix_agentd.conf\"\nAGENT2_CONFIG_FILE=\"${sysconfdir}/zabbix_agent2.conf\"\n\nEXTERNAL_SCRIPTS_PATH=\"${datadir}/zabbix/externalscripts\"\nALERT_SCRIPTS_PATH=\"${datadir}/zabbix/alertscripts\"\n\nCURL_SSL_CERT_LOCATION=\"${datadir}/zabbix/ssl/certs\"\nCURL_SSL_KEY_LOCATION=\"${datadir}/zabbix/ssl/keys\"\n\nLOAD_MODULE_PATH=\"${libdir}/modules\"\n\nAC_SUBST(SERVER_LDFLAGS)\nAC_SUBST(SERVER_LIBS)\n\nAC_SUBST(PROXY_LDFLAGS)\nAC_SUBST(PROXY_LIBS)\n\nAC_SUBST(AGENT_LDFLAGS)\nAC_SUBST(AGENT_LIBS)\n\nif test \"x$HAVE_START_GROUP\" = \"xyes\"; then\n\tLD_START_GROUP=-Wl,--start-group\n\tLD_END_GROUP=-Wl,--end-group\nfi\n\nCGO_CFLAGS=$TLS_CFLAGS\nCGO_LDFLAGS=\"$AGENT_LDFLAGS $LD_START_GROUP \\\n\t\\${abs_top_builddir}/src/zabbix_agent/logfiles/libzbxlogfiles.a \\\n\t\\${abs_top_builddir}/src/libs/zbxcomms/libzbxcomms.a \\\n\t\\${abs_top_builddir}/src/libs/zbxcommon/libzbxcommon.a \\\n\t\\${abs_top_builddir}/src/libs/zbxcrypto/libzbxcrypto.a \\\n\t\\${abs_top_builddir}/src/libs/zbxsys/libzbxsys.a \\\n\t\\${abs_top_builddir}/src/libs/zbxnix/libzbxnix.a \\\n\t\\${abs_top_builddir}/src/libs/zbxconf/libzbxconf.a \\\n\t\\${abs_top_builddir}/src/libs/zbxhttp/libzbxhttp.a \\\n\t\\${abs_top_builddir}/src/libs/zbxcompress/libzbxcompress.a \\\n\t\\${abs_top_builddir}/src/libs/zbxregexp/libzbxregexp.a \\\n\t\\${abs_top_builddir}/src/libs/zbxsysinfo/libzbxagent2sysinfo.a \\\n\t\\${abs_top_builddir}/src/libs/zbxsysinfo/common/libcommonsysinfo.a \\\n\t\\${abs_top_builddir}/src/libs/zbxsysinfo/simple/libsimplesysinfo.a \\\n\t\\${abs_top_builddir}/src/libs/zbxsysinfo/\"$ARCH\"/libspechostnamesysinfo.a \\\n\t\\${abs_top_builddir}/src/libs/zbxsysinfo/\"$ARCH\"/libspecsysinfo.a \\\n\t\\${abs_top_builddir}/src/libs/zbxexec/libzbxexec.a \\\n\t\\${abs_top_builddir}/src/libs/zbxalgo/libzbxalgo.a \\\n\t\\${abs_top_builddir}/src/libs/zbxjson/libzbxjson.a \\\n\t$LIBS $AGENT_LIBS $LD_END_GROUP\"\n\nAC_SUBST(CGO_CFLAGS)\nAC_SUBST(CGO_LDFLAGS)\n\nAC_SUBST(ZBXGET_LDFLAGS)\nAC_SUBST(ZBXGET_LIBS)\n\nAC_SUBST(SENDER_LDFLAGS)\nAC_SUBST(SENDER_LIBS)\n\nAC_SUBST(ZBXJS_LDFLAGS)\nAC_SUBST(ZBXJS_LIBS)\n\nAC_SUBST(SERVER_CONFIG_FILE)\nAC_SUBST(PROXY_CONFIG_FILE)\nAC_SUBST(AGENT_CONFIG_FILE)\nAC_SUBST(AGENT2_CONFIG_FILE)\n\nAC_SUBST(EXTERNAL_SCRIPTS_PATH)\nAC_SUBST(ALERT_SCRIPTS_PATH)\n\nAC_SUBST(CURL_SSL_CERT_LOCATION)\nAC_SUBST(CURL_SSL_KEY_LOCATION)\n\nAC_SUBST(LOAD_MODULE_PATH)\n\nGOBIN=${sbindir}\nGOCMD=go\nGOWORKDIR=$ac_abs_confdir/go/src/zabbix\n\nexport GOBIN=${GOBIN}\nAC_SUBST(GOBIN)\nAC_SUBST(GOCMD)\nAC_SUBST(GOWORKDIR)\n\ndnl *****************************************************************\ndnl *                                                               *\ndnl *                         Other checks                          *\ndnl *                                                               *\ndnl *****************************************************************\n\ndnl Automake 1.8 to 1.9.6 sets mkdir_p macro (lower-cased).\nAC_MSG_CHECKING(for mkdir -p candidate)\nif test \"x${MKDIR_P}\" = \"x\"; then\n        if test \"x${mkdir_p}\" = \"x\"; then\n                AC_MSG_ERROR([No suitable \"mkdir -p\" candidate found.])\n        fi\n        AC_SUBST([MKDIR_P], ${mkdir_p})\nfi\nAC_MSG_RESULT([ok (${MKDIR_P})])\n\ndnl Check if process statistics collector should be enabled\ncase \"x$ARCH\" in\n\txlinux|xsolaris)\n\t\tAC_DEFINE(ZBX_PROCSTAT_COLLECTOR, 1 , [Define to 1 on linux and solaris platforms])\n\t\t;;\nesac\n\ndnl *****************************************************************\ndnl *                                                               *\ndnl *                 Output configuration results                  *\ndnl *                                                               *\ndnl *****************************************************************\n\nm4_ifdef([CONF_TESTS],[CONF_TESTS(ZBXCMOCKA)])\n\nAC_OUTPUT([\n\tMakefile\n\tdatabase/Makefile\n\tdatabase/mysql/Makefile\n\tdatabase/oracle/Makefile\n\tdatabase/postgresql/Makefile\n\tdatabase/sqlite3/Makefile\n\tmisc/Makefile\n\tsrc/Makefile\n\tsrc/go/Makefile\n\tsrc/libs/Makefile\n\tsrc/libs/zbxlog/Makefile\n\tsrc/libs/zbxalgo/Makefile\n\tsrc/libs/zbxmemory/Makefile\n\tsrc/libs/zbxcrypto/Makefile\n\tsrc/libs/zbxconf/Makefile\n\tsrc/libs/zbxdbcache/Makefile\n\tsrc/libs/zbxdbhigh/Makefile\n\tsrc/libs/zbxmedia/Makefile\n\tsrc/libs/zbxsysinfo/Makefile\n\tsrc/libs/zbxcommon/Makefile\n\tsrc/libs/zbxsysinfo/agent/Makefile\n\tsrc/libs/zbxsysinfo/common/Makefile\n\tsrc/libs/zbxsysinfo/simple/Makefile\n\tsrc/libs/zbxsysinfo/linux/Makefile\n\tsrc/libs/zbxsysinfo/aix/Makefile\n\tsrc/libs/zbxsysinfo/freebsd/Makefile\n\tsrc/libs/zbxsysinfo/hpux/Makefile\n\tsrc/libs/zbxsysinfo/openbsd/Makefile\n\tsrc/libs/zbxsysinfo/osx/Makefile\n\tsrc/libs/zbxsysinfo/solaris/Makefile\n\tsrc/libs/zbxsysinfo/osf/Makefile\n\tsrc/libs/zbxsysinfo/netbsd/Makefile\n\tsrc/libs/zbxsysinfo/unknown/Makefile\n\tsrc/libs/zbxnix/Makefile\n\tsrc/libs/zbxsys/Makefile\n\tsrc/libs/zbxcomms/Makefile\n\tsrc/libs/zbxcommshigh/Makefile\n\tsrc/libs/zbxdb/Makefile\n\tsrc/libs/zbxdbupgrade/Makefile\n\tsrc/libs/zbxjson/Makefile\n\tsrc/libs/zbxhttp/Makefile\n\tsrc/libs/zbxserver/Makefile\n\tsrc/libs/zbxicmpping/Makefile\n\tsrc/libs/zbxexec/Makefile\n\tsrc/libs/zbxself/Makefile\n\tsrc/libs/zbxmodules/Makefile\n\tsrc/libs/zbxregexp/Makefile\n\tsrc/libs/zbxtasks/Makefile\n\tsrc/libs/zbxipcservice/Makefile\n\tsrc/libs/zbxhistory/Makefile\n\tsrc/libs/zbxcompress/Makefile\n\tsrc/libs/zbxembed/Makefile\n\tsrc/libs/zbxprometheus/Makefile\n\tsrc/zabbix_agent/Makefile\n\tsrc/zabbix_agent/logfiles/Makefile\n\tsrc/zabbix_get/Makefile\n\tsrc/zabbix_js/Makefile\n\tsrc/zabbix_sender/Makefile\n\tsrc/zabbix_server/Makefile\n\tsrc/zabbix_server/alerter/Makefile\n\tsrc/zabbix_server/dbsyncer/Makefile\n\tsrc/zabbix_server/dbconfig/Makefile\n\tsrc/zabbix_server/discoverer/Makefile\n\tsrc/zabbix_server/housekeeper/Makefile\n\tsrc/zabbix_server/httppoller/Makefile\n\tsrc/zabbix_server/pinger/Makefile\n\tsrc/zabbix_server/poller/Makefile\n\tsrc/zabbix_server/snmptrapper/Makefile\n\tsrc/zabbix_server/timer/Makefile\n\tsrc/zabbix_server/trapper/Makefile\n\tsrc/zabbix_server/escalator/Makefile\n\tsrc/zabbix_server/proxypoller/Makefile\n\tsrc/zabbix_server/selfmon/Makefile\n\tsrc/zabbix_server/vmware/Makefile\n\tsrc/zabbix_server/taskmanager/Makefile\n\tsrc/zabbix_server/ipmi/Makefile\n\tsrc/zabbix_server/odbc/Makefile\n\tsrc/zabbix_server/scripts/Makefile\n\tsrc/zabbix_server/preprocessor/Makefile\n\tsrc/zabbix_server/lld/Makefile\n\tsrc/zabbix_proxy/Makefile\n\tsrc/zabbix_proxy/heart/Makefile\n\tsrc/zabbix_proxy/housekeeper/Makefile\n\tsrc/zabbix_proxy/proxyconfig/Makefile\n\tsrc/zabbix_proxy/datasender/Makefile\n\tsrc/zabbix_proxy/taskmanager/Makefile\n\tsrc/zabbix_java/Makefile\n\tman/Makefile\n\t])\n\ndnl The following variables use autoconf variables such as\ndnl ${sysconfdir} and ${datadir} . Which in turn contain\ndnl variables such as ${prefix}. In order to completely\ndnl substitute all variables and output end-value in\ndnl Configuration output below it is required to perform 2\ndnl substitutions.\n\nSERVER_CONFIG_FILE=`eval echo \"${SERVER_CONFIG_FILE}\"`\nSERVER_CONFIG_FILE=`eval echo \"${SERVER_CONFIG_FILE}\"`\n\nPROXY_CONFIG_FILE=`eval echo \"${PROXY_CONFIG_FILE}\"`\nPROXY_CONFIG_FILE=`eval echo \"${PROXY_CONFIG_FILE}\"`\n\nAGENT_CONFIG_FILE=`eval echo \"${AGENT_CONFIG_FILE}\"`\nAGENT_CONFIG_FILE=`eval echo \"${AGENT_CONFIG_FILE}\"`\n\nAGENT2_CONFIG_FILE=`eval echo \"${AGENT2_CONFIG_FILE}\"`\nAGENT2_CONFIG_FILE=`eval echo \"${AGENT2_CONFIG_FILE}\"`\n\nEXTERNAL_SCRIPTS_PATH=`eval echo \"${EXTERNAL_SCRIPTS_PATH}\"`\nEXTERNAL_SCRIPTS_PATH=`eval echo \"${EXTERNAL_SCRIPTS_PATH}\"`\n\nALERT_SCRIPTS_PATH=`eval echo \"${ALERT_SCRIPTS_PATH}\"`\nALERT_SCRIPTS_PATH=`eval echo \"${ALERT_SCRIPTS_PATH}\"`\n\nCURL_SSL_CERT_LOCATION=`eval echo \"${CURL_SSL_CERT_LOCATION}\"`\nCURL_SSL_CERT_LOCATION=`eval echo \"${CURL_SSL_CERT_LOCATION}\"`\n\nCURL_SSL_KEY_LOCATION=`eval echo \"${CURL_SSL_KEY_LOCATION}\"`\nCURL_SSL_KEY_LOCATION=`eval echo \"${CURL_SSL_KEY_LOCATION}\"`\n\nLOAD_MODULE_PATH=`eval echo \"${LOAD_MODULE_PATH}\"`\nLOAD_MODULE_PATH=`eval echo \"${LOAD_MODULE_PATH}\"`\n\necho \"\n\nConfiguration:\n\n  Detected OS:           ${host_os}\n  Install path:          ${prefix}\n  Compilation arch:      ${ARCH}\n\n  Compiler:              ${CC}\n  Compiler flags:        ${CFLAGS}\n\n  Library-specific flags:\"\n\nif test \"x$DB_CFLAGS\" != \"x\"; then\n\techo \"    database:              ${DB_CFLAGS}\"\nfi\n\nif test \"x$LIBXML2_CFLAGS\" != \"x\"; then\n\techo \"    libXML2:               ${LIBXML2_CFLAGS}\"\nfi\n\nif test \"x$UNIXODBC_CFLAGS\" != \"x\"; then\n\techo \"    unixODBC:              ${UNIXODBC_CFLAGS}\"\nfi\n\nif test \"x$SNMP_CFLAGS\" != \"x\"; then\n\techo \"    Net-SNMP:              ${SNMP_CFLAGS}\"\nfi\n\nif test \"x$OPENIPMI_CFLAGS\" != \"x\"; then\n\techo \"    OpenIPMI:              ${OPENIPMI_CFLAGS}\"\nfi\n\nif test \"x$SSH2_CFLAGS\" != \"x\"; then\n\techo \"    libssh2:               ${SSH2_CFLAGS}\"\nfi\n\nif test \"x$SSH_CFLAGS\" != \"x\"; then\n\techo \"    libssh:                ${SSH_CFLAGS}\"\nfi\n\nif test \"x$TLS_CFLAGS\" != \"x\"; then\n\techo \"    TLS:                   ${TLS_CFLAGS}\"\nfi\n\nif test \"x$LDAP_CPPFLAGS\" != \"x\"; then\n\techo \"    LDAP:                  ${LDAP_CPPFLAGS}\"\nfi\n\nif test \"x$ICONV_CFLAGS\" != \"x\"; then\n\techo \"    iconv:                 ${ICONV_CFLAGS}\"\nfi\n\nif test \"x$LIBEVENT_CFLAGS\" != \"x\"; then\n\techo \"    libevent:              ${LIBEVENT_CFLAGS}\"\nfi\n\necho \"\n  Enable server:         ${server}\"\n\nif test \"x$server\" != \"xno\"; then\n\necho \"  Server details:\n    With database:         ${have_db}\n    WEB Monitoring:        ${have_web_monitoring}\"\n\nif test \"x$have_web_monitoring\" = \"xcURL\"; then\necho \"      SSL certificates:      ${CURL_SSL_CERT_LOCATION}\n      SSL keys:              ${CURL_SSL_KEY_LOCATION}\"\nfi\n\necho \"    SNMP:                  ${have_snmp}\n    IPMI:                  ${have_ipmi}\n    SSH:                   ${have_ssh}\n    TLS:                   ${have_tls}\n    ODBC:                  ${have_unixodbc}\n    Linker flags:          ${SERVER_LDFLAGS} ${LDFLAGS}\n    Libraries:             ${SERVER_LIBS} ${LIBS}\n    Configuration file:    ${SERVER_CONFIG_FILE}\n    External scripts:      ${EXTERNAL_SCRIPTS_PATH}\n    Alert scripts:         ${ALERT_SCRIPTS_PATH}\n    Modules:               ${LOAD_MODULE_PATH}\"\n\nfi\n\necho \"\n  Enable proxy:          ${proxy}\"\n\nif test \"x$proxy\" != \"xno\"; then\n\necho \"  Proxy details:\n    With database:         ${have_db}\n    WEB Monitoring:        ${have_web_monitoring}\"\n\nif test \"x$have_web_monitoring\" = \"xcURL\"; then\necho \"      SSL certificates:      ${CURL_SSL_CERT_LOCATION}\n      SSL keys:              ${CURL_SSL_KEY_LOCATION}\"\nfi\n\necho \"    SNMP:                  ${have_snmp}\n    IPMI:                  ${have_ipmi}\n    SSH:                   ${have_ssh}\n    TLS:                   ${have_tls}\n    ODBC:                  ${have_unixodbc}\n    Linker flags:          ${PROXY_LDFLAGS} ${LDFLAGS}\n    Libraries:             ${PROXY_LIBS} ${LIBS}\n    Configuration file:    ${PROXY_CONFIG_FILE}\n    External scripts:      ${EXTERNAL_SCRIPTS_PATH}\n    Modules:               ${LOAD_MODULE_PATH}\"\n\nfi\n\necho \"\n  Enable agent:          ${agent}\"\n\nif test \"x$agent\" != \"xno\"; then\n\necho \"  Agent details:\n    TLS:                   ${have_tls}\n    Linker flags:          ${AGENT_LDFLAGS} ${LDFLAGS}\n    Libraries:             ${AGENT_LIBS} ${LIBS}\n    Configuration file:    ${AGENT_CONFIG_FILE}\n    Modules:               ${LOAD_MODULE_PATH}\"\n\nfi\n\necho \"\n  Enable agent 2:        ${agent2}\"\n\necho \"\n  Enable Java gateway:   ${java}\"\n\nif test \"x$java\" != \"xno\"; then\n\necho \"  Java gateway details:\n    Java compiler:         ${JAVAC}\n    Java archiver:         ${JAR}\"\n\nfi\n\necho \"\n  LDAP support:          ${found_ldap}\n  IPv6 support:          ${have_ipv6}\"\n\necho\necho \"***********************************************************\"\necho \"*            Now run '${am_make} install'                       *\"\necho \"*                                                         *\"\necho \"*            Thank you for using Zabbix!                  *\"\necho \"*              <http://www.zabbix.com>                    *\"\necho \"***********************************************************\"\necho\n",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/src/libs/zbxmodules/modules.c": "/*\n** Zabbix\n** Copyright (C) 2001-2020 Zabbix SIA\n**\n** This program is free software; you can redistribute it and/or modify\n** it under the terms of the GNU General Public License as published by\n** the Free Software Foundation; either version 2 of the License, or\n** (at your option) any later version.\n**\n** This program is distributed in the hope that it will be useful,\n** but WITHOUT ANY WARRANTY; without even the implied warranty of\n** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n** GNU General Public License for more details.\n**\n** You should have received a copy of the GNU General Public License\n** along with this program; if not, write to the Free Software\n** Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n**/\n\n#include \"common.h\"\n#include \"module.h\"\n#include \"zbxmodules.h\"\n\n#include \"log.h\"\n#include \"sysinfo.h\"\n#include \"zbxalgo.h\"\n\n#define ZBX_MODULE_FUNC_INIT\t\t\t\"zbx_module_init\"\n#define ZBX_MODULE_FUNC_API_VERSION\t\t\"zbx_module_api_version\"\n#define ZBX_MODULE_FUNC_ITEM_LIST\t\t\"zbx_module_item_list\"\n#define ZBX_MODULE_FUNC_ITEM_PROCESS\t\t\"zbx_module_item_process\"\n#define ZBX_MODULE_FUNC_ITEM_TIMEOUT\t\t\"zbx_module_item_timeout\"\n#define ZBX_MODULE_FUNC_UNINIT\t\t\t\"zbx_module_uninit\"\n#define ZBX_MODULE_FUNC_HISTORY_WRITE_CBS\t\"zbx_module_history_write_cbs\"\n\nstatic zbx_vector_ptr_t\tmodules;\n\nzbx_history_float_cb_t\t\t*history_float_cbs = NULL;\nzbx_history_integer_cb_t\t*history_integer_cbs = NULL;\nzbx_history_string_cb_t\t\t*history_string_cbs = NULL;\nzbx_history_text_cb_t\t\t*history_text_cbs = NULL;\nzbx_history_log_cb_t\t\t*history_log_cbs = NULL;\n\n/******************************************************************************\n *                                                                            *\n * Function: zbx_register_module_items                                        *\n *                                                                            *\n * Purpose: add items supported by module                                     *\n *                                                                            *\n * Parameters: metrics       - list of items supported by module              *\n *             error         - error buffer                                   *\n *             max_error_len - error buffer size                              *\n *                                                                            *\n * Return value: SUCCEED - all module items were added or there were none     *\n *               FAIL    - otherwise                                          *\n *                                                                            *\n ******************************************************************************/\nstatic int\tzbx_register_module_items(ZBX_METRIC *metrics, char *error, size_t max_error_len)\n{\n\tint\ti;\n\n\tfor (i = 0; NULL != metrics[i].key; i++)\n\t{\n\t\t/* accept only CF_HAVEPARAMS flag from module items */\n\t\tmetrics[i].flags &= CF_HAVEPARAMS;\n\t\t/* the flag means that the items comes from a loadable module */\n\t\tmetrics[i].flags |= CF_MODULE;\n\n\t\tif (SUCCEED != add_metric(&metrics[i], error, max_error_len))\n\t\t\treturn FAIL;\n\t}\n\n\treturn SUCCEED;\n}\n\n/******************************************************************************\n *                                                                            *\n * Function: zbx_register_module                                              *\n *                                                                            *\n * Purpose: add module to the list of successfully loaded modules             *\n *                                                                            *\n ******************************************************************************/\nstatic zbx_module_t\t*zbx_register_module(void *lib, char *name)\n{\n\tzbx_module_t\t*module;\n\n\tmodule = (zbx_module_t *)zbx_malloc(NULL, sizeof(zbx_module_t));\n\tmodule->lib = lib;\n\tmodule->name = zbx_strdup(NULL, name);\n\tzbx_vector_ptr_append(&modules, module);\n\n\treturn module;\n}\n\n/******************************************************************************\n *                                                                            *\n * Function: zbx_register_history_write_cbs                                   *\n *                                                                            *\n * Purpose: registers callback functions for history export                   *\n *                                                                            *\n * Parameters: module            - module pointer for later reference         *\n *             history_write_cbs - callbacks                                  *\n *                                                                            *\n ******************************************************************************/\nstatic void\tzbx_register_history_write_cbs(zbx_module_t *module, ZBX_HISTORY_WRITE_CBS history_write_cbs)\n{\n\tif (NULL != history_write_cbs.history_float_cb)\n\t{\n\t\tint\tj = 0;\n\n\t\tif (NULL == history_float_cbs)\n\t\t{\n\t\t\thistory_float_cbs = (zbx_history_float_cb_t *)zbx_malloc(history_float_cbs, sizeof(zbx_history_float_cb_t));\n\t\t\thistory_float_cbs[0].module = NULL;\n\t\t}\n\n\t\twhile (NULL != history_float_cbs[j].module)\n\t\t\tj++;\n\n\t\thistory_float_cbs = (zbx_history_float_cb_t *)zbx_realloc(history_float_cbs, (j + 2) * sizeof(zbx_history_float_cb_t));\n\t\thistory_float_cbs[j].module = module;\n\t\thistory_float_cbs[j].history_float_cb = history_write_cbs.history_float_cb;\n\t\thistory_float_cbs[j + 1].module = NULL;\n\t}\n\n\tif (NULL != history_write_cbs.history_integer_cb)\n\t{\n\t\tint\tj = 0;\n\n\t\tif (NULL == history_integer_cbs)\n\t\t{\n\t\t\thistory_integer_cbs = (zbx_history_integer_cb_t *)zbx_malloc(history_integer_cbs, sizeof(zbx_history_integer_cb_t));\n\t\t\thistory_integer_cbs[0].module = NULL;\n\t\t}\n\n\t\twhile (NULL != history_integer_cbs[j].module)\n\t\t\tj++;\n\n\t\thistory_integer_cbs = (zbx_history_integer_cb_t *)zbx_realloc(history_integer_cbs, (j + 2) * sizeof(zbx_history_integer_cb_t));\n\t\thistory_integer_cbs[j].module = module;\n\t\thistory_integer_cbs[j].history_integer_cb = history_write_cbs.history_integer_cb;\n\t\thistory_integer_cbs[j + 1].module = NULL;\n\t}\n\n\tif (NULL != history_write_cbs.history_string_cb)\n\t{\n\t\tint\tj = 0;\n\n\t\tif (NULL == history_string_cbs)\n\t\t{\n\t\t\thistory_string_cbs = (zbx_history_string_cb_t *)zbx_malloc(history_string_cbs, sizeof(zbx_history_string_cb_t));\n\t\t\thistory_string_cbs[0].module = NULL;\n\t\t}\n\n\t\twhile (NULL != history_string_cbs[j].module)\n\t\t\tj++;\n\n\t\thistory_string_cbs = (zbx_history_string_cb_t *)zbx_realloc(history_string_cbs, (j + 2) * sizeof(zbx_history_string_cb_t));\n\t\thistory_string_cbs[j].module = module;\n\t\thistory_string_cbs[j].history_string_cb = history_write_cbs.history_string_cb;\n\t\thistory_string_cbs[j + 1].module = NULL;\n\t}\n\n\tif (NULL != history_write_cbs.history_text_cb)\n\t{\n\t\tint\tj = 0;\n\n\t\tif (NULL == history_text_cbs)\n\t\t{\n\t\t\thistory_text_cbs = (zbx_history_text_cb_t *)zbx_malloc(history_text_cbs, sizeof(zbx_history_text_cb_t));\n\t\t\thistory_text_cbs[0].module = NULL;\n\t\t}\n\n\t\twhile (NULL != history_text_cbs[j].module)\n\t\t\tj++;\n\n\t\thistory_text_cbs = (zbx_history_text_cb_t *)zbx_realloc(history_text_cbs, (j + 2) * sizeof(zbx_history_text_cb_t));\n\t\thistory_text_cbs[j].module = module;\n\t\thistory_text_cbs[j].history_text_cb = history_write_cbs.history_text_cb;\n\t\thistory_text_cbs[j + 1].module = NULL;\n\t}\n\n\tif (NULL != history_write_cbs.history_log_cb)\n\t{\n\t\tint\tj = 0;\n\n\t\tif (NULL == history_log_cbs)\n\t\t{\n\t\t\thistory_log_cbs = (zbx_history_log_cb_t *)zbx_malloc(history_log_cbs, sizeof(zbx_history_log_cb_t));\n\t\t\thistory_log_cbs[0].module = NULL;\n\t\t}\n\n\t\twhile (NULL != history_log_cbs[j].module)\n\t\t\tj++;\n\n\t\thistory_log_cbs = (zbx_history_log_cb_t *)zbx_realloc(history_log_cbs, (j + 2) * sizeof(zbx_history_log_cb_t));\n\t\thistory_log_cbs[j].module = module;\n\t\thistory_log_cbs[j].history_log_cb = history_write_cbs.history_log_cb;\n\t\thistory_log_cbs[j + 1].module = NULL;\n\t}\n}\n\nstatic int\tzbx_module_compare_func(const void *d1, const void *d2)\n{\n\tconst zbx_module_t\t*m1 = *(const zbx_module_t **)d1;\n\tconst zbx_module_t\t*m2 = *(const zbx_module_t **)d2;\n\n\tZBX_RETURN_IF_NOT_EQUAL(m1->lib, m2->lib);\n\n\treturn 0;\n}\n\n/******************************************************************************\n *                                                                            *\n * Function: zbx_load_module                                                  *\n *                                                                            *\n * Purpose: load loadable module                                              *\n *                                                                            *\n * Parameters: path    - directory where modules are located                  *\n *             name    - module name                                          *\n *             timeout - timeout in seconds for processing of items by module *\n *                                                                            *\n * Return value: SUCCEED - module was successfully loaded or found amongst    *\n *                         previously loaded                                  *\n *               FAIL    - loading of module failed                           *\n *                                                                            *\n ******************************************************************************/\nstatic int\tzbx_load_module(const char *path, char *name, int timeout)\n{\n\tvoid\t\t\t*lib;\n\tchar\t\t\tfull_name[MAX_STRING_LEN], error[MAX_STRING_LEN];\n\tint\t\t\t(*func_init)(void), (*func_version)(void), version;\n\tZBX_METRIC\t\t*(*func_list)(void);\n\tvoid\t\t\t(*func_timeout)(int);\n\tZBX_HISTORY_WRITE_CBS\t(*func_history_write_cbs)(void);\n\tzbx_module_t\t\t*module, module_tmp;\n\n\tif ('/' != *name)\n\t\tzbx_snprintf(full_name, sizeof(full_name), \"%s/%s\", path, name);\n\telse\n\t\tzbx_snprintf(full_name, sizeof(full_name), \"%s\", name);\n\n\tzabbix_log(LOG_LEVEL_DEBUG, \"loading module \\\"%s\\\"\", full_name);\n\n\tif (NULL == (lib = dlopen(full_name, RTLD_NOW)))\n\t{\n\t\tzabbix_log(LOG_LEVEL_CRIT, \"cannot load module \\\"%s\\\": %s\", name, dlerror());\n\t\treturn FAIL;\n\t}\n\n\tmodule_tmp.lib = lib;\n\tif (FAIL != zbx_vector_ptr_search(&modules, &module_tmp, zbx_module_compare_func))\n\t{\n\t\tzabbix_log(LOG_LEVEL_DEBUG, \"module \\\"%s\\\" has already beed loaded\", name);\n\t\treturn SUCCEED;\n\t}\n\n\tif (NULL == (func_version = (int (*)(void))dlsym(lib, ZBX_MODULE_FUNC_API_VERSION)))\n\t{\n\t\tzabbix_log(LOG_LEVEL_CRIT, \"cannot find \\\"\" ZBX_MODULE_FUNC_API_VERSION \"()\\\"\"\n\t\t\t\t\" function in module \\\"%s\\\": %s\", name, dlerror());\n\t\tgoto fail;\n\t}\n\n\tif (ZBX_MODULE_API_VERSION != (version = func_version()))\n\t{\n\t\tzabbix_log(LOG_LEVEL_CRIT, \"unsupported module \\\"%s\\\" version: %d\", name, version);\n\t\tgoto fail;\n\t}\n\n\tif (NULL == (func_init = (int (*)(void))dlsym(lib, ZBX_MODULE_FUNC_INIT)))\n\t{\n\t\tzabbix_log(LOG_LEVEL_DEBUG, \"cannot find \\\"\" ZBX_MODULE_FUNC_INIT \"()\\\"\"\n\t\t\t\t\" function in module \\\"%s\\\": %s\", name, dlerror());\n\t}\n\telse if (ZBX_MODULE_OK != func_init())\n\t{\n\t\tzabbix_log(LOG_LEVEL_CRIT, \"cannot initialize module \\\"%s\\\"\", name);\n\t\tgoto fail;\n\t}\n\n\tif (NULL == (func_list = (ZBX_METRIC *(*)(void))dlsym(lib, ZBX_MODULE_FUNC_ITEM_LIST)))\n\t{\n\t\tzabbix_log(LOG_LEVEL_DEBUG, \"cannot find \\\"\" ZBX_MODULE_FUNC_ITEM_LIST \"()\\\"\"\n\t\t\t\t\" function in module \\\"%s\\\": %s\", name, dlerror());\n\t}\n\telse\n\t{\n\t\tif (SUCCEED != zbx_register_module_items(func_list(), error, sizeof(error)))\n\t\t{\n\t\t\tzabbix_log(LOG_LEVEL_CRIT, \"cannot load module \\\"%s\\\": %s\", name, error);\n\t\t\tgoto fail;\n\t\t}\n\n\t\tif (NULL == (func_timeout = (void (*)(int))dlsym(lib, ZBX_MODULE_FUNC_ITEM_TIMEOUT)))\n\t\t{\n\t\t\tzabbix_log(LOG_LEVEL_DEBUG, \"cannot find \\\"\" ZBX_MODULE_FUNC_ITEM_TIMEOUT \"()\\\"\"\n\t\t\t\t\t\" function in module \\\"%s\\\": %s\", name, dlerror());\n\t\t}\n\t\telse\n\t\t\tfunc_timeout(timeout);\n\t}\n\n\t/* module passed validation and can now be registered */\n\tmodule = zbx_register_module(lib, name);\n\n\tif (NULL == (func_history_write_cbs = (ZBX_HISTORY_WRITE_CBS (*)(void))dlsym(lib,\n\t\t\tZBX_MODULE_FUNC_HISTORY_WRITE_CBS)))\n\t{\n\t\tzabbix_log(LOG_LEVEL_DEBUG, \"cannot find \\\"\" ZBX_MODULE_FUNC_HISTORY_WRITE_CBS \"()\\\"\"\n\t\t\t\t\" function in module \\\"%s\\\": %s\", name, dlerror());\n\t}\n\telse\n\t\tzbx_register_history_write_cbs(module, func_history_write_cbs());\n\n\treturn SUCCEED;\nfail:\n\tdlclose(lib);\n\n\treturn FAIL;\n}\n\n/******************************************************************************\n *                                                                            *\n * Function: zbx_load_modules                                                 *\n *                                                                            *\n * Purpose: load loadable modules (dynamic libraries)                         *\n *                                                                            *\n * Parameters: path - directory where modules are located                     *\n *             file_names - list of module names                              *\n *             timeout - timeout in seconds for processing of items by module *\n *             verbose - output list of loaded modules                        *\n *                                                                            *\n * Return value: SUCCEED - all modules are successfully loaded                *\n *               FAIL - loading of modules failed                             *\n *                                                                            *\n ******************************************************************************/\nint\tzbx_load_modules(const char *path, char **file_names, int timeout, int verbose)\n{\n\tchar\t**file_name;\n\tint\tret = SUCCEED;\n\n\tzabbix_log(LOG_LEVEL_DEBUG, \"In %s()\", __func__);\n\n\tzbx_vector_ptr_create(&modules);\n\n\tif (NULL == *file_names)\n\t\tgoto out;\n\n\tfor (file_name = file_names; NULL != *file_name; file_name++)\n\t{\n\t\tif (SUCCEED != (ret = zbx_load_module(path, *file_name, timeout)))\n\t\t\tgoto out;\n\t}\n\n\tif (0 != verbose)\n\t{\n\t\tchar\t*buffer;\n\t\tint\ti = 0;\n\n\t\t/* if execution reached this point at least one module was loaded successfully */\n\t\tbuffer = zbx_strdcat(NULL, ((zbx_module_t *)modules.values[i++])->name);\n\n\t\twhile (i < modules.values_num)\n\t\t{\n\t\t\tbuffer = zbx_strdcat(buffer, \", \");\n\t\t\tbuffer = zbx_strdcat(buffer, ((zbx_module_t *)modules.values[i++])->name);\n\t\t}\n\n\t\tzabbix_log(LOG_LEVEL_WARNING, \"loaded modules: %s\", buffer);\n\t\tzbx_free(buffer);\n\t}\nout:\n\tzabbix_log(LOG_LEVEL_DEBUG, \"End of %s():%s\", __func__, zbx_result_string(ret));\n\n\treturn ret;\n}\n\n/******************************************************************************\n *                                                                            *\n * Function: zbx_unload_module                                                *\n *                                                                            *\n * Purpose: unload module and free allocated resources                        *\n *                                                                            *\n ******************************************************************************/\nstatic void\tzbx_unload_module(void *data)\n{\n\tzbx_module_t\t*module = (zbx_module_t *)data;\n\tint\t\t(*func_uninit)(void);\n\n\tif (NULL == (func_uninit = (int (*)(void))dlsym(module->lib, ZBX_MODULE_FUNC_UNINIT)))\n\t{\n\t\tzabbix_log(LOG_LEVEL_DEBUG, \"cannot find \\\"\" ZBX_MODULE_FUNC_UNINIT \"()\\\"\"\n\t\t\t\t\" function in module \\\"%s\\\": %s\", module->name, dlerror());\n\t}\n\telse if (ZBX_MODULE_OK != func_uninit())\n\t\tzabbix_log(LOG_LEVEL_WARNING, \"uninitialization of module \\\"%s\\\" failed\", module->name);\n\n\tdlclose(module->lib);\n\tzbx_free(module->name);\n\tzbx_free(module);\n}\n\n/******************************************************************************\n *                                                                            *\n * Function: zbx_unload_modules                                               *\n *                                                                            *\n * Purpose: Unload already loaded loadable modules (dynamic libraries).       *\n *          It is called on process shutdown.                                 *\n *                                                                            *\n ******************************************************************************/\nvoid\tzbx_unload_modules(void)\n{\n\tzabbix_log(LOG_LEVEL_DEBUG, \"In %s()\", __func__);\n\n\tzbx_free(history_float_cbs);\n\tzbx_free(history_integer_cbs);\n\tzbx_free(history_string_cbs);\n\tzbx_free(history_text_cbs);\n\tzbx_free(history_log_cbs);\n\n\tzbx_vector_ptr_clear_ext(&modules, zbx_unload_module);\n\tzbx_vector_ptr_destroy(&modules);\n\n\tzabbix_log(LOG_LEVEL_DEBUG, \"End of %s()\", __func__);\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/src/zabbix_java/lib/slf4j-api-1.6.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/src/zabbix_java/lib/android-json-4.3_r3.1.jar",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/src/zabbix_java/lib/logback-core-0.9.27.jar",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/src/zabbix_java/lib/logback-classic-0.9.27.jar",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/src/zabbix_java/tests/junit-4.8.2.jar",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/sass/apple-touch-icon-76x76-precomposed.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/sass/apple-touch-icon-180x180-precomposed.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/sass/apple-touch-icon-152x152-precomposed.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/sass/favicon.ico",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/sass/ms-tile-144x144.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/sass/apple-touch-icon-120x120-precomposed.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/sass/touch-icon-192x192.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/sass/img/browser-sprite.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/sass/img_source/icons-sprite.ai",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/favicon.ico",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/tests/images/image.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/audio/alarm_average.mp3",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/audio/alarm_warning.mp3",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/audio/alarm_information.mp3",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/audio/no_sound.mp3",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/audio/alarm_disaster.mp3",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/audio/alarm_ok.mp3",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/audio/alarm_high.mp3",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/assets/img/apple-touch-icon-76x76-precomposed.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/assets/img/apple-touch-icon-180x180-precomposed.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/assets/img/apple-touch-icon-152x152-precomposed.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/assets/img/ms-tile-144x144.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/assets/img/apple-touch-icon-120x120-precomposed.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/assets/img/touch-icon-192x192.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/assets/img/browser-sprite.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/ui/assets/fonts/DejaVuSans.ttf",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/telegram/images/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/telegram/images/telegram_logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/telegram/images/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/telegram/images/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/telegram/images/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/telegram/images/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/telegram/images/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/telegram/images/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/telegram/images/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/telegram/images/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/telegram/images/4.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zammad/images/thumb.05.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zammad/images/05.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zammad/images/thumb.04.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zammad/images/thumb.03.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zammad/images/02.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zammad/images/04.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zammad/images/03.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zammad/images/06.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zammad/images/thumb.06.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zammad/images/zammad_logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zammad/images/thumb.01.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zammad/images/01.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zammad/images/thumb.02.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/discord/images/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/discord/images/thumb.7.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/discord/images/thumb.6.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/discord/images/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/discord/images/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/discord/images/thumb.3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/discord/images/thumb.5.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/discord/images/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/discord/images/thumb.4.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/discord/images/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/discord/images/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/discord/images/thumb.1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/discord/images/thumb.2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/discord/images/4.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/signl4/images/zabbix-script-action.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/signl4/images/zabbix-script-user.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/signl4/images/signl4-zabbix.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/signl4/images/zabbix-webhook-media-type.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/signl4/images/zabbix-webhook-user.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/signl4/images/zabbix-webhook-action.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/signl4/images/zabbix-script-media-type.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/thumb.05.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/09.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/thumb.07.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/05.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/thumb.04.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/thumb.03.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/02.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/04.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/03.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/06.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/thumb.06.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/thumb.08.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/thumb.01.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/01.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/07.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/08.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/thumb.02.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/thumb.09.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/otrs/images/otrs_logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/servicenow/images/thumb.3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/servicenow/images/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/servicenow/images/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/servicenow/images/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/servicenow/images/thumb.1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/servicenow/images/thumb.2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/tn_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/tn_10.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/tn_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/tn_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/tn_7.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/tn_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/tn_9.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/4.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/tn_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/opsgenie/images/tn_5.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/thumb.7.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/12.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/thumb.6.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/thumb.8.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/thumb.10.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/thumb.3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/11.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/thumb.5.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/thumb.4.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/Slack_RGB.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/thumb.11.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/thumb.1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/thumb.2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/4.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/thumb.12.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/slack/images/thumb.9.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pushover/images/zabbix2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pushover/images/pushoverapp1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pushover/images/zabbix3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pushover/images/pushover_logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pushover/images/zabbix1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pushover/images/pushover2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pushover/images/tn/zabbix2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pushover/images/tn/pushoverapp1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pushover/images/tn/zabbix3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pushover/images/tn/zabbix1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pushover/images/tn/pushover2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/thumb.05.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/thumb.07.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/05.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/thumb.04.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/redmine_logo_v1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/thumb.03.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/02.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/04.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/03.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/06.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/thumb.06.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/thumb.01.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/01.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/07.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/redmine/images/thumb.02.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/tn_2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/tn_6.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/12.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/tn_11.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/tn_10.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/11.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/tn_4.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/tn_1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/tn_12.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/tn_7.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/tn_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/tn_9.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/4.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/PagerDuty-GreenRGB.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/tn_3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/pagerduty/images/tn_5.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/jira_servicedesk/images/thumb.3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/jira_servicedesk/images/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/jira_servicedesk/images/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/jira_servicedesk/images/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/jira_servicedesk/images/thumb.1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/jira_servicedesk/images/thumb.2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/tn_6.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/12.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/tn_11.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/tn_10.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/11.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/tn_13.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/13.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/tn_12.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/tn_7.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/zendesk_logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/tn_8.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/zendesk/images/tn_9.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.30.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/7.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.27.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.7.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/30.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/8.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.26.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.6.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/20.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.25.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.8.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/6.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.10.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/22.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/23.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/5.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/19.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.5.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.4.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/31.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/29.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/25.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/9.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/10.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.19.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.23.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.31.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/14.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.22.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/13.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.20.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/26.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/logoHorizontal.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/32.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.14.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.29.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.32.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/16.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/27.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.9.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/mattermost/images/thumb.13.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/jira/images/thumb.3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/jira/images/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/jira/images/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/jira/images/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/jira/images/thumb.1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/jira/images/thumb.2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/msteams/images/thumb.3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/msteams/images/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/msteams/images/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/msteams/images/3.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/msteams/images/thumb.1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/msteams/images/thumb.2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/spiceworks/images/1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/spiceworks/images/2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/spiceworks/images/thumb.1.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/templates/media/spiceworks/images/thumb.2.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Network.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Router_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Network_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Workstation.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Printer_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Satellite_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Satellite.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/UPS.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Phone_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Server_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Printer.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Hub_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Hub.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Notebook_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Server.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Notebook.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Phone.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Router.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/Workstation_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_classic/UPS_small.png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Satellite_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Modem_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Disk_array_3D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Disk_array_3D_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_rackmountable_3D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_5U_server_3D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_3U_server_3D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Network_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/IP_PBX_symbol_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Network_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Printer_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_3U_server_2D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Server_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Router_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Router_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/PBX_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Printer_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/SAN_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Zabbix_server_3D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_rackmountable_3D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/House_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_5U_server_2D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Switch_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/IP_PBX_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Network_adapter_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Modem_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Notebook_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_2U_server_2D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/IP_PBX_symbol_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/SAN_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_2U_server_2D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Modem_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_rackmountable_2D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Satellite_antenna_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Server_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rack_42_with_door_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/IP_PBX_symbol_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_3U_server_2D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Phone_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Cloud_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_1U_server_2D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Router_symbol_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Printer_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_3U_server_3D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/IP_PBX_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Modem_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Cloud_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_4U_server_3D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_rackmountable_2D_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Disk_array_2D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rack_42_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/IP_PBX_symbol_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Crypto-router_symbol_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_2U_server_3D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Crypto-router_symbol_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rack_42_with_door_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Workstation_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/House_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/SAN_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/PBX_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Satellite_antenna_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Server_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Cloud_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Firewall_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Phone_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_2U_server_3D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Video_terminal_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rack_42_with_door_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_rackmountable_3D_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Router_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_4U_server_2D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Crypto-router_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_1U_server_2D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_rackmountable_3D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_rackmountable_3D_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Server_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Video_terminal_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Server_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Firewall_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Phone_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/PBX_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_5U_server_2D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Firewall_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Video_terminal_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_1U_server_2D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_rackmountable_2D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Network_adapter_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Disk_array_3D_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Workstation_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Crypto-router_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/SAN_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Firewall_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Network_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Crypto-router_symbol_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_2U_server_2D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Workstation_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/House_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Router_symbol_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Cloud_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/House_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/IP_PBX_symbol_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Video_terminal_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rack_42_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rack_42_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Workstation_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Switch_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Phone_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_1U_server_3D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/SAN_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Printer_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/PBX_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Router_symbol_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_1U_server_3D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Router_symbol_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Satellite_antenna_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_5U_server_2D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_1U_server_3D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_4U_server_2D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Switch_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Hub_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Satellite_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Router_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Notebook_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Hub_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Satellite_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Firewall_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_rackmountable_2D_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Disk_array_2D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Workstation_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_4U_server_2D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/House_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Disk_array_3D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_5U_server_3D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Disk_array_2D_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Network_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Phone_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Hub_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Zabbix_server_2D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Satellite_antenna_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Zabbix_server_3D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_rackmountable_2D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_5U_server_3D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Notebook_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Disk_array_2D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_4U_server_3D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Switch_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Zabbix_server_2D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Network_adapter_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Notebook_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Zabbix_server_2D_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Hub_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Video_terminal_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Disk_array_2D_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Crypto-router_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/IP_PBX_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Router_symbol_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Notebook_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Network_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Router_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/IP_PBX_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Switch_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Printer_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/IP_PBX_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Satellite_antenna_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Satellite_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_4U_server_3D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Disk_array_3D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_3U_server_2D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_3U_server_3D_(128).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Satellite_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Crypto-router_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Crypto-router_symbol_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/PBX_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Crypto-router_symbol_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Zabbix_server_3D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Cloud_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Crypto-router_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Hub_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/UPS_(48).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Network_adapter_(64).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Rackmountable_2U_server_3D_(96).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Modem_(24).png",
        "/tmp/vanessa/spack-stage/spack-stage-zabbix-5.0.3-fbi4nebejoftxgdmef3ky5vljnoyh2bx/spack-src/misc/images/png_modern/Network_adapter_(48).png"
    ],
    "total_files": 3540
}