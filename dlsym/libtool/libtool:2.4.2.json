{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/ChangeLog.2001": "2001-12-06  Jens Petersen  <petersen@redhat.com>\n\n\t* ltmain.in: Replace all test \"-a\"s by \"&& test\"\n\tfor portability.\n\n2001-11-28  Robert Boehne  <rboehne@ricardo-us.com>\n\n\t* libtool.m4 (AC_LIBTOOL_SYS_MAX_CMD_LEN): Change the\n\tfactor of saftey as 3/4 of the result was not low enough.\n\n2001-11-28  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.in: The test for whether AC_PROG_LIBTOOL is defined\n\tin aclocal.m4 had bitrotted slightly.\n\tReported by Takahiko Kawasaki <Takahiko_Kawasaki@cii.csk.co.jp>\n\n2001-11-27  Donald D. Anderson  <dda@sleepycat.com>\n\n\t* ltmain.in: Treat freebsd like openbsd, in that -lc/-lc_r should\n\tnot be explicitly used.  ld handles this depending on the presence\n\tof the -pthread option.\n\n2001-11-27  Robert Boehne  <rboehne@ricardo-us.com>\n\n\tWith help from Michael Matz <matz@kde.org>:\n\t* ltmain.in:  Add a new command line argument\n\t--preserve-dup-deps for preserving duplicate\n\tdependent libraries.\n\t* libtool.texi: Document it.\n\n2001-11-27  Kevin Ryde  <user42@zip.com.au>\n\n\t* libtool.m4 (AC_LIBTOOL_SYS_MAX_CMD_LEN): Send \"test\"\n\twarnings to /dev/null, helps FreeBSD and maybe others.\n\n2001-11-15  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* libtool.m4: quote LTCC because autoconf AC_PROG_CC_STDC\n\tmacro might add to $CC if options needed by compiler to\n\tgrok ANSI.\n\n2001-11-15  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Joseph S. Myers  <jsm28@cam.ac.uk>:\n\t* ltmain.in: Typo.\n\n2001-11-15   Mo DeJong  <supermo@bayarea.net>\n\n\t* ltmain.in: Place parens around a generated relink_command\n\tso it is run is a subshell. This avoids an install error\n\twhere libtool ended up in the wrong directory after\n\trelinking a .la file.\n\n2001-10-31  Raja R Harinath  <harinath@cs.umn.edu>\n\n\t* configure.ac (pkgdatadir): Move the invocation of AC_INIT_AUTOMAKE\n\tbefore the use of $PACKAGE in $pkgdatadir.\n\tReported by Bob Friesenhahn <bfreisen@simple.dallas.tx.us>\n\n2001-10-28  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Tom Bates  <Tom.Bates@compaq.com>:\n\t* libtool.m4 [mips-compaq-nonstopux]: New port.\n\t* ltmain.in [mips-compaq-nonstopux]: Support\n\t$version_type == nonstopux.\n\n2001-10-28  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* libltdl/ltdl.c (foreach_dirinpath): change some types to size_t\n\tfrom int because strlen() returns size_t. argz_len changed to\n\tsize_t because argzize_path() takes 3rd argument as size_t, not\n\tint.\n\tBased on lint run from Bob Friesenhahn <bfriesen@simple.dallas.tx.us>\n\n2001-10-27  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (_LT_AC_TAGCONFIG): Cray sed does not allow character\n\tsets to contain the separator character.\n\tReported by Kevin Ryde <user42@zip.com.au>\n\n\t* ltdl.m4 (AC_WITH_LTDL): New macro to add `--with-included-ltdl'\n\toption to configure, but to find an appropriate ltdl library and\n\tappend the right options to link it.\n\n2001-10-24  Kevin Ryde  <user42@zip.com.au>\n\n\t* libtool.m4 (AC_LIBTOOL_PROG_LD_SHLIBS): Remove a stray ' quote.\n\n2001-10-24  H.J. Lu  <hjl@gnu.org>\n\n\t* ltmain.sh: Allow link against an archive when building a\n\tshared library.\n\t* libtool.m4 (lt_cv_deplibs_check_method): Always use\n\tfile_magic for Linux ELF.\n\n2001-10-12  Guido Draheim  <guidod-2001q3@gmx.de>\n\n\t* ltdl.m4: Changed \"underscode to underscore\".\n\n2001-10-06  Gary V. Vaughan  <gary@gnu.org>\n\n\t* configure.ac: General modernisation and cleanup.\n\t* cdemo/configure.ac: Ditto.\n\t* demo/configure.ac: Ditto.\n\t* depdemo/configrue.ac: Ditto.\n\t* ltdl/configure.ac: Ditto.\n\t* ltdldemo/configure.ac: Ditto.\n\t* mdemo/configure.ac: Ditto.\n\t* pdemo/configure.ac: Ditto.\n\t* tagdemo/configure.ac: Ditto.\n\n2001-10-04  Albert Chin-A-Young <china@thewrittenword.com>\n\n\t* libltdl/ltdl.c: Match function return type with prototype\n\t(add static initializer to file_not_found).\n\n2001-09-30  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (AC_LIBLTDL_CONVENIENCE): s/INCLTDL/LTDLINCL/ for\n\tconsistency with gettext's INTLINCL.  Keep the old symbol too for\n\tbackwards compatibility.\n\t(AC_LIBLTDL_INSTALLABLE): Ditto.\n\t* doc/libtool.texi (Distributing libltdl):  Adjust documentation.\n\n2001-09-22  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* ltdl.m4 (AC_LTDL_DLLIB): Even though HP-UX 10.20 and 11.00\n\tsupport shl_load *and* dlopen, dlopen works correctly only\n\twith a patch. Because we want to avoid the situation where we\n\tbuild on a system with the patch but deploy on a system without,\n\tuse shl_load exclusively if found.\n\n2001-09-22  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (_LT_AC_FILE_LTDLL_C): Be carefule that the start\n\tmarker searched for by sed must start in column 0.\n\t(_LT_AC_FILE_IMPGEN_C): Ditto.\n\tReported by Tor Lillqvist <tml@iki.fi>\n\n2001-09-22  Tor Lillqvist  <tml@iki.fi>\n\n\t* libtool.m4 [mingw* cygwin*]: Small improvement for mingw-hosted\n\ttool support (while still running libtool on cygwin). In that case\n\tPATH_SEPARATOR is ':', but gcc -print-search-dirs still prints its\n\tsearch path with ';' as separator.\n\t(AC_LIBTOOL_RC, AC_LIBTOOL_LANG_RC_CONFIG): Add support for .rc\n\tfiles (Windows resource files), compiled by the resource compiler\n\t(windres in mingw) to .o files.\n\t(AC_PROG_NM): Minor bug fix for $PATH elements with spaces in\n\tthem.\n\t* configure.ac: Use LT_AC_PROG_RC.\n\t* ltmain.in: Check for .rc files.\n\t* NEWS: Updated.\n\n\t* ltmain.in: Add a space to $base_compile in the case statement,\n\tas the case labels checks for trailing spaces, but there aren't\n\tnecessarily in $base_compile.\n\n2001-09-22  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* libtool.m4: When setting archive_cmds for CC, don't\n\ttest for $GXX but for $GCC on HP-UX. Indentation fixes.\n\n2001-09-21  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Tor Lillqvist <tml@iki.fi>:\n\t* ltmain.in [cygwin* mingw*]: Take care of the difference between\n\twrapper script name and executable name.\n\n\t* libtool.m4 (archive_cmds) [darwin1.[0-2]]: Darwin uses zsh-3.1.6\n\tfor /bin/sh, and that shell does not handle escaped quotes\n\tproperly yet.\n\tReported by Christopher Pfisterer <cp@chrisp.de>\n\n2001-09-21  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* libltdl/ltdl.c: Match function return type with prototype\n\t(add static initializer to some functions) to prevent warnings\n\tfrom HP-UX cc.\n\n2001-09-21  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c: Added support for dmalloc, and uncovered some\n\tmemory bugs as a result.\n\n2001-09-21  Albert Chin  <china@thewrittenword.com>\n\n\t* libtool.m4: Don't include main() when testing for command to\n\tparse $NM output because some C++ compilers don't allow you to\n\ttake the address of main (e.g. HP-UX aCC).\n\n\t* libtool.m4: Some uses of $GXX were unquoted, but GXX is either\n\tNULL or yes.  Use \"$GXX\".\n\n2001-09-13  Assar Westerlund  <assar@sics.se>\n\n\t* ltdl.m4 (AC_LTDL_DLLIB): call dlopen with arguments so the test\n\tdoes not fail due to a prototype in dlfcn.h\n\n2001-09-13  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltdl.m4 (AC_CHECK_HEADERS): Check for assert.h.\n\t* libltdl/ltdl.c:  If not, disable assertions manually.\n\n2001-09-11  Gary V. Vaughan  <gary@gnu.org>\n\n\t* bootstrap: Be robust to having no files that need removing.\n\n\t* libltdl/configure.ac (AM_INIT_AUTOMAKE): Bump libltdl version to\n\t1.2.\n\t* libltdl/Makefile.am (libltdl_la_LDFLAGS):  Bump libtool library\n\tversion info to 4:0:1.\n\n2001-09-11  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4: No need to undefine([symbols]), proper quotation is\n\tenough.\n\n2001-09-10  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4: CVS Autoconf guarantees a decent default IFS, so\n\tthere is no need for us to preset it anymore.\n\tBe careful not to set IFS=\"${IFS}$PATH_SEPARATOR\" for PATH\n\tsplitting, otherwise spaces in directory names will be lost.\n\tUse $PATH_SEPARATOR... don't rely on $ac_path_separator, which was\n\tan autoconf internal until just now, when it disappeared!\n\t* ltmain.in: Default IFS once, at the start.\n\tReported by Akim Demaille <akim@epita.fr>\n\n2001-09-10   Brad  <brad@comstyle.com>\n\n\t* libtool.m4 (AC_DEPLIBS_CHECK_METHOD): Missed an instance of\n\tAutoconf square bracket quoting style normalisation.\n\n\t* ltmain.in (-lc_r): Style improvement.\n\n\t* doc/libtool.texi: Remove obsolete references to ltconfig.\n\t* tests/quote.test: s/ltconfig/\\$0/\n\n2001-09-09  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4: Use Autoconf square bracket quoting style\n\tconsistently throughout.\n\n2001-09-08  Gary V. Vaughan  <gary@gnu.org>\n\n\t* bootstrap: Cleanup `autom4te' and `libtool' so that we don't\n\tget caught by something from a previous build.\n\n\t* libtool.m4 (archive_cmds, archive_expsym_cmds) [solaris*]: Revert\n\tmy 2001-09-06 patch.\n\t(no_undefined_flag)i [solaris*]: Revert Alexandre's 2001-04-11 patch.\n\n2001-09-07  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (foreach_dirinpath): argz_len should be a size_t.\n\tReported by Albert Chin <china@thewrittenword.com>\n\n2001-09-06  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (AC_LIBTOOL_PROG_LD_SHLIBS) [solaris*]: Typo. s/GXX/GCC/.\n\n\t* libtool.m4 (archive_cmds, archive_expsym_cmds) [solaris*]: Changing\n\tno_undefined_flag from `-z text' to `-z defs' (see entry below at\n\t2001-04-11  Alexandre Oliva  <aoliva@redhat.com>) has a problem.\n\twhen linking a shared library with gcc calling /usr/ccs/bin/ld (eg.\n\tthe gcc supplied with Solaris 8 companion CD), using the flag\n\t-no-undefined, shared library linking will always fail because of\n\tthe unresolved symbols from libgcc.a.  Consequently we have to\n\tprovide a path to libgcc.a when linking shared libraries in\n\tconjunction with -no-undefined!\n\n\tFrom Michael Pruett <mpruett@engr.sgi.com>:\n\t* libltdl/ltdl.c (find_module): `0' valued arguments to\n\ttryall_dlopen_module() must be explicitly cast to avoid compiler\n\twarnings on some environments.\n\n\tFrom Daniel Johnson <danielj7@mac.com>:\n\t* libtool.m4 (AC_LIBTOOL_PROG_LD_SHLIBS) [darwin*]: Move from GNU\n\tld section to non-GNU ld section.\n\n2001-09-05  Robert Boehne  <rboehne@ricardo-us.com>\n\n\t* pdemo/Makefile.am (helldl):  Automake 1.4 can't find the target\n\tif we use helldl$(EXEEXT), and Automake 1.5 barfs unless we do.\n\tUsing both targets to the left of the colon seems to work though!\n\n2001-09-03  Gary V. Vaughan  <gary@gnu.org>\n\n\t* demo/Makefile.am (helldl):  Automake 1.4 can't find the target\n\tif we use helldl$(EXEEXT), and Automake 1.5 barfs unless we do.\n\tUsing both targets to the left of the colon seems to work though!\n\n2001-09-03  Brad  <brad@comstyle.com>\n\n\t* ltdl.m4 [AC_LTDL_SYS_DLOPEN_DEPLIBS]: Teach ltdl about the\n\tbehavior of OpenBSD's dlopen().\n\n2001-09-03  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Marius Vollmer <mvo@zagadka.ping.de>:\n\t* libltdl/ltdl.c (tryall_dlopen_module): Don't forget to propogate\n\terrors over recurse levels.\n\n2001-09-03  Brad  <brad@comstyle.com>\n\n\t* libtool.m4 [openbsd*]: More improvements to the OpenBSD port.\n\n2001-09-02  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Albert Chin <china@thewrittenword.com>:\n\t* libtool.m4 (_LT_AC_LANG_C_CONFIG) [aix4*]: Be careful with\n\tshared namespaces for static and shared libs.\n\t(AC_LIBTOOL_DLOPEN_SELF): If all else fails, try dld_link from GNU\n\tDLD.\n\n2001-09-02  Christopher Pfisterer <cp@chrisp.de>\n\n\t* libtool.m4, ltmain.in: Linker flag and version numbering fixes\n\tfor darwin.\n\n2001-09-02  Gary V. Vaughan  <gary@gnu.org>\n\n\tBased on a patch from Marius Vollmer <mvo@zagadka.ping.de>:\n\t* NEWS: updated.\n\t* ltdl.m4 (AC_LIB_LTDL): Check for unistd.h.\n\t* ltdl.c: Include unistd.h if it exists.\n\t(LTDL_SEARCHPATH_VAR): Macro to prevent hardcoding\n\t\"LTDL_LIBRARY_PATH\".\n\t(LTDL_ARCHIVE_EXT): Macro to prevent hardcoding \".la\".\n\t(archive_ext): Have only one copy of \".la\" in the readonly\n\tsegment of the compiled library.\n\t(find_handle_callback): Don't bother trying to dlopen the file if\n\tit doesn't exist.\n\t(find_handle): Don't bother searching for files if no search_path\n\twas supplied.\n\t(file_not_found): A new function to determine whether the last\n\terror was due to a file not found condition.\n\t(try_dlopen): Renamed from lt_dlopen() and changed to have the\n\tsame footprint as tryall_dlopen.  This involved a minor rewrite of\n\tmuch of the internals of this function.\n\t(lt_dlopen): A new function wrapped arounf try_dlopen().\n\t(lt_dlopenext): If a file already has a suitable extension, don't\n\tbother adding additional extensions and trying to open those.\n\tTidy up the rest of the code to prevent continued searching with\n\tan eventual FILE_NOT_FOUND when a genuine failure earlier in the\n\tsearch process could be legitimately reported.\n\n\t* demo/Makefile.am (helldl$(EXEEXT)): Automake-1.5 made me change\n\tthis from just `helldl'.\n\n2001-07-31  Robert Boehne  <rboehne@ricardo-us.com>\n\n\t* libtool.m4 (AC_LIBTOOL_PROG_LD_SHLIBS) Fixed a problem\n\twith export_symbols_cmds not being set for CXX tags, and\n\tnot being properly set for any tag under AIX/Power.\n\n2001-08-19  Ossama Othman  <ossama@uci.edu>\n\n\t* libtool.m4 (AC_LIBTOOL_LANG_CXX_CONFIG): Corrected and improved\n\t  error message that is displayed when there was a problem\n\t  compiling the C++ test program.  It still mentioned the now\n\t  non-existent `ltcf-cxx.sh' file.\n\n\t* doc/libtool.texi (LTDL_SET_PRELOADED_SYMBOLS): Removed\n\t  parentheses at end of starting \"defmac\" line, as pointed out by\n\t  makeinfo.\n\n2001-08-18  Brad  <brad@comstyle.com>\n\n\t* ltmain.in: Do not remove -lm from deplibs for OpenBSD.\n\n2001-08-16  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (argz_create_sep): Don't forget to include the\n\tterminating '\\0' when counting argz_len.\n\t(argz_create_sep): When canonicalizing argz, don't forget to copy\n\tthe terminating '\\0', incase canonicalization has shortened argz.\n\t(argz_stringify): Don't covert the final '\\0' to a separator.\n\n2001-08-15  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (lt_dlhandle_next): Now we can loop through all\n\tloaded module handles as originally intended.\n\n\t* libltdl/ltdl.c (lt_dlseterror): Oops.  This never worked\n\teither, due to a pair of typos.  Now fixed.\n\n\t* libltdl/ltdl.c (N_ELEMENTS):  Deleted.  How come nobody noticed\n\tthere was no way this could have ever worked?\n\t(lt_dlcaller_set_data): Now that valid caller_ids must be\n\tnon-zero, allocate an addition entry in the caller_data vector and\n\tuse a zero valued key as the end marker.\n\t(lt_dlcaller_get_data): Iterate up to the end marker in one pass.\n\n2001-08-14  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (lt_dlcaller_register): Caller ids are allocated\n\tstarting from value `1', so that clients can use a value of zero\n\tto indicate that libltdl has not yet initialised.\n\n\t* ltmain.in (exec_cmd): Fix quoting in execute mode so that the\n\tdouble quotes added by libtool (to prevent lossage with embedded\n\tspaces in filenames etc.) are not interpreted as literals by the\n\tshell.\n\n2001-08-13  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (find_file_callback): Fix a multiple free()\n\tbug.\n\t(tryall_dlopen_module): Remove some unused variables.\n\n\t* libltdl/ltdl.c (lt_dlinsertsearchdir): Calculate the address\n\tof the end of user_search_path correctly.\n\n\t* libltdl/ltdl.c (rpl_argz_stringify): New fallback implementation.\n\t* ltdl.m4 (AC_LTDL_FUNC_ARGZ):  Test for argz_stringify in libc.\n\t* libltdl/ltdl.c (lt_argz_insertinorder): Renamed from\n\tlt_argz_insert to make room for...\n\t(lt_argz_insert): Wraps argz_insert with libltdl error handling.\n\t(lt_dlpath_insertdir): Insert new path elements into an\n\targzized path.\n\t(lt_dlinsertsearchdir): New function to insert new search\n\tdirectories anywhere into user_search_path using the above.\n\t(lt_dladdsearchdir): Rewritten to use lt_dlpath_insertdir.\n\t* libltdl/ltdl.h (lt_dlinsertsearchdir): Prototype for export.\n\t* doc/libtool.texi (Libltdl interface): Document it.\n\t* NEWS: Updated,\n\n2001-08-07  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Albert Chin <china@thewrittenword.com>:\n\t* ltmain.in [irix*]: $with_gcc is either \"yes\" or \"\" (empty string)\n\twith current autoconf, so we need to be robust to that when testing\n\tit,\n\n2001-08-06  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Brad <brad@comstyle.com>:\n\t* libtool.m4 (deplibs_check_method) [aix*]: Removed redundant setting\n\tof this variable.\n\n2001-08-05  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (load_deplibs): Insert missing 1st argument to\n\tLT_EMALLOC.\n\n2001-08-05  Tim Van Holder  <tim.van.holder@pandora.be>\n\n\t* ltdl.m4: Canonicalize descriptive text used with\n\tAC_DEFINE.\n\n\t* libtool.m4 (_LT_AC_LIBTOOL_SYS_PATH_SEPARATOR): Remove.\n\t(_LT_AC_PROG_ECHO_BACKSLASH): Use $ac_path_separator\n\tinstead of $PATH_SEPARATOR.\n\t(AC_LIBTOOL_SYS_DYNAMIC_LINKER): Ditto.\n\t(_LT_AC_TAGCONFIG): Ditto.\n\t(AC_ENABLE_SHARED): Ditto.\n\t(AC_ENABLE_STATIC): Ditto.\n\t(AC_ENABLE_FAST_INSTALL): Ditto.\n\t(AC_PATH_TOOL_PREFIX): Ditto.\n\t(AC_PATH_MAGIC): Ditto.\n\t(AC_PROG_LD): Ditto.\n\t(AC_PROG_NM): Ditto.\n\t* ltdl.m4 (AC_LTDL_SYSSEARCHPATH): Ditto.\n\n2001-08-05  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Brad <brad@comstyle.com>:\n\t* libtool.m4 (AC_LIBTOOL_SYS_DYNAMIC_LINKER) [openbsd]:  OpenBSD\n\tcan build modules without a `lib' prefix and version number.\n\tMove the deplibs check code from here...\n\t(AC_DEPLIBS_CHECK_METHOD): ...to here.\n\n2001-08-05  Tim Mooney <mooney@dogbert.cc.ndsu.NoDak.edu>\n\n\t* libtool.m4 [osf3*, osf4*, osf5*]: Tru64 *can* build modules\n\twithout a `lib' prefix to the module name.\n\n2001-08-05  Gary V. Vuaghan  <gary@gnu.org>\n\n\tFrom Guido Draheim <Guido.Draheim@tek.com>:\n\t* ltmain.in: Display better and different error messages when\n\tlibrary linkage fails in various ways.\n\n2001-08-05  Albert Chin-A-Young <china@thewrittenword.com>\n\n\t* libtool.m4 (_LT_AC_SYS_LIBPATH_AIX): Add newline after\n\tterminating '}' grouping character. Change '[0-9][0-9]'\n\tto '0' as we've already matched it.\n\n2001-08-05  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Brad <brad@comstyle.com>:\n\t* libtool.m4 (archive_cmds) [darwin, newsos, sysv4]: Replace\n\t1.3 era $linkopts references with $linker_flags.\n\n\t* libltdl/ltdl.c:  Fixed several careless mistakes in the\n\tforeach_dirinpath support functions.\n\t(foreach_dirinpath): Walk path elements with the argz API.\n\n2001-08-04  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Sedi Master Albert Chin <china@thewrittenword.com>:\n\t* libtool.m4 (_LT_AC_SYS_LIBPATH_AIX): Replace the awk invocation\n\twith an equivalent bit of sed wizardry.\n\n\tFrom Edouard G. Parmelan <egp@free.fr>\n\t* libtool.m4 [darwin, openbsd]: Fix quoting problems with\n\tunquoted [] expressions.\n\n2001-08-03  Gary V. Vaughan  <gary@gnu.org>\n\n\t* bootstrap:  s/ltdldemo // -- This demo soesn't work properly,\n\tso I haven't committed it yet.\n\n2001-08-01  Ossama Othman  <ossama@doc.ece.uci.edu>\n\n\t* libtool.m4 (AC_LIBTOOL_SETUP): Require Autoconf-2.50 via the\n\tAC_PREREQ autoconf macro since the new libtool macros utilize\n\tmacros from that version of Autoconf.\n\n2001-08-01  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltdl.m4: Bump serial number.\n\tGeneral reformat and tify up in line with Autoconf-2.50 support.\n\t(AC_LTDL_FUNC_ARGZ): Test for system implementations of a\n\thandful of argz API calls, the error_t type, and the argz.h\n\theader.\n\t* libltdl/configure.ac (AM_INIT_AUTOMAKE): Bump version number.\n\t* libltdl/ltdl.c (rpl_argz_append, rpl_argz_create_sep.\n\trpl_argz_insert, rpl_rgz_next):  Fallback implementations of\n\tthe similarly named functions for machines that don;t use glibc.\n\t(lt_dlrealloc):  New memory function pointer that can be set by\n\tthe client.  Defaults to rpl_realloc, which in turn uses only\n\tlt_dlmalloc and lt_dlfree.\n\t(LT_EMALLOC, LT_EREALLOC): Set internal out-of-memory error\n\tinside the functions called by these new macros.  Simplified all\n\tcallers by removing explicit client error reporting.\n\t(memmove):  Fallback implementation of overlap safe memory copy\n\tfunction.\n\t(tryall_dlopen):  Factorized common code into...\n\t(tryall_dlopen_module): ...this new helper function.\n\t(canonicalize_path):  Changed function signature to return success\n\tor failure.  Updated all callers.\n\t(foreachfile_callback):  Make use of argz API.\n\t(LT_DLSTRLEN): Moved from here...\n\t* libltdl/ltdl.h (LT_STRLEN): ...to here.  Updated all callers.\n\t(lt_dlrealloc):  Declare new memory management handle.\n\n2001-07-31  Robert Boehne  <rboehne@ricardo-us.com>\n\n\t* libtool.m4 (mingw*) Revert the previous change as it was\n\tapplied by mistake.\n\n2001-07-31  Guido Draheim  <Guido.Draheim@tek.com>\n\n\t* libtool.m4 (mingw*) sys_lib_search_path_spec:\n\tSets the proper path separator for cross-compiling.\n\n2001-07-30  Steve Ellcey  <sje@cup.hp.com>\n\n\t* libtool.m4 (ia64-*-hpux*) Add support for ia64*-*-hpux* platform.\n\n2001-07-30  Robert Boehne  <rboehne@ricardo-us.com>\n\n\t* libtool.m4 (AC_LIBTOOL_PROG_COMPILER_PIC) [aix*]: Fixed an\n\tincorrect resetting of lt_prog_compiler_static when using gcc\n\tunder AIX Power.\n\n2001-07-31  Gary V. Vaughan  <gary@gnu.org>\n\n\t* bootstrap: Remove generated files (incase they are links) before\n\trerunning the autotools to regenerate them.\n\n2001-07-30  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (AC_LIBTOOL_SETUP): Use Autoconf-2.50 era\n\tquadrigraphs and AC_HELP_STRING to bring AC_ARG_WITH/ENABLE\n\tmacros up to date.\n\t(_LT_AC_LOCK): Ditto.\n\t(_LT_AC_TAGCONFIG): Ditto.\n\t(AC_PROG_LD): Ditto.\n\t(AC_ENABLE_SHARED): Ditto.  And eliminate the last remaining\n\tchangequote invocations.\n\t(AC_ENABLE_STATIC): Ditto.  And Ditto.\n\t(AC_ENABLE_FAST_INSTALL):  Ditto.  And Ditto.\n\t* ltdl.m4 (AC_LTDL_ENABLE_INSTALL): Use Autoconf-2.50 era\n\tquadrigraphs and AC_HELP_STRING to bring AC_ARG_ENABLE\n\tmacro up to date.\n\t* NEWS: Updated.\n\n\t* libtool.m4 [UnixWare7, OpenUNIX8]: Initial support for\n\tUnixWare7 and OpenUNIX8.  Accept these identifiers from the\n\tlatest config.guess/config.sub as pseudonyms for sysv5uw[78].\n\t* NEWS: Updated.\n\tReported by Boyd Lynn Gerber <gerberb@zenez.com>\n\n2001-07-29  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/sh.test: Add a new test to enforce X as the fill\n\tcharacter in `test \"X...'.\n\tBeef up the `test' tests to also check `test -.' and `test ! -.'\n\tphrases for compliance.\n\t* ltmain.in: Fix quoting problems uncovered by the new tests.\n\n2001-07-29  Andrew C. Feren  <aferen@CetaceanNetworks.com>\n\n\t* tests/sh.test:  New test to disallow `test $foo', where\n\t`test \"$foo\"' is much safer.\n\t* ltmain.in: Fix quoting problems uncovered by the new test.\n\n2001-07-29  Steve Ellcey  <sje@cup.hp.com>\n\n\t* libtool.m4 (lt_cv_sys_global_symbol_to_cdecl):  Change it from\n\t\"extern char\" to \"extern int\" so that GCC 3.0 won't complain and\n\trefuse to compile programs containing \"extern char main()\".\n\n2001-07-29  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Guido Draheim <Guido.Draheim@tek.com>:\n\t* libtool.m4 (AC_LIBTOOL_SYS_DYNAMIC_LINKER) [mingw]: Support\n\tcross compilation to mingw by allowing `:' or ';' as a path\n\tseparator.\n\t* NEWS: Updated.\n\n2001-07-27  NIIBE Yutaka  <gniibe@m17n.org>\n\n\t* libtool.m4 (lt_cv_deplibs_check_method): Use pass_all\n\tfor sh*-*-linux* (SuperH) too.\n\n2001-07-25  Ossama Othman  <ossama@debian.org>\n\n\tFrom Thomas Poindessous <poinde_t@epita.fr>\n\t* ltmain.in (pic_mode):  Added missing quotes around shell\n\tvariable in \"if test\" conditional.\n\n\tFrom Peter Moulder <pmoulder@longford.csse.monash.edu.au>\n\t* ltmain.in (xform): Add support for pre-processed\n\t(e.g. `*.{i,ii}' sources).\n\n2001-07-25  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Steve Ellcey <sje@cup.hp.com>:\n\t* libltdl/ltdl.c (foreach_dirinpath): Free unassigned pointer\n\tfix for `canonical'.\n\n2001-07-23  Robert Boehne  <rboehne@ricardo-us.com>\n\n\t* libtool.m4 (AC_LIBTOOL_LANG_CXX_CONFIG, AC_LIBTOOL_PROG_LD_SHLIBS)\n\t[aix4*, aix5*]: Fixed a mispelled binder option under AIX.\n\tThe option to throw errors for unresolved external references is\n\t-bernotok, not -bnoerok.\n\n2001-07-23  Gary V. Vaughan  <gary@gnu.org>\n\n\t* Makefile.am (EXTRA_DIST): Don't forget to distribute\n\tChangeLog.1.\n\n\tFrom Erik Lindahl <E.Lindahl@chem.rug.nl>\n\t* libtool.m4 (_LT_AC_SYS_LIBPATH_AIX): Used on aix to discover\n\tthe compiler's default library search path so that the MPI\n\tcompiler suite is not hosed by the previously hardcoded path.\n\t* libtool.m4 (AC_LIBTOOL_PROG_LD_SHLIBS) [aix4*, aix5*]: Use it.\n\n2001-07-23  Andreas Schwab  <schwab@suse.de>\n\n\t* libtool.m4 (AC_DEPLIBS_CHECK_METHOD): Use pass_all for\n\ts390*-*-linux* and m68*-*-linux*.\n\n2001-07-19  Robert Boehne  <rboehne@ricardo-us.com>\n\n\t* libtool.m4 (AC_LIBTOOL_PROG_LD_SHLIBS): Fix tag support\n\tproblems with CXX variables being overwritten by the individual\n\tmacros.\n\t(AC_LIBTOOL_PROG_CC_C_O): Ditto.\n\t(AC_LIBTOOL_PROG_COMPILER_PIC): Ditto.\n\t(AC_LIBTOOL_LANG_CXX_CONFIG): Moved call to\n\tAC_LIBTOOL_SYS_HARD_LINK_LOCKS after the call to\n\tAC_LIBTOOL_PROG_CC_C_O as it depends on the result.\n\t(AC_LIBTOOL_LANG_GCJ_CONFIG): Ditto.\n\t(AC_LIBTOOL_LANG_C_CONFIG): Ditto.\n\t(AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH): Used the macro\n\t_LT_AC_TAGVAR to ensure the correct variable is being queried.\n\t(AC_LIBTOOL_SYS_DYNAMIC_LINKER): Changed the naming of shared\n\tobjects under IRIX back to what it was in the MLB.\n\n2001-07-23  Mark Kettenis  <kettenis@gnu.org>\n\n\t* libtool.m4 (AC_LIBTOOL_SYS_MAX_CMD_LEN) [gnu*]: Remove spurious\n\t\"break\" and bogus comment\n\t(_LT_AC_LANG_CXX_CONFIG): Add support for the Hurd.\n\t* ltdl.m4 (AC_LTDL_SYS_DLOPEN_DEPLIBS): Add support for the Hurd.\n\n2001-07-16  Robert Boehne  <rboehne@ricardo-us.com>, Tim Mooney  <mooney@dogbert.cc.ndsu.NoDak.edu>\n\n\t* ltdl.m4 (AC_LTDL_SYS_DLOPEN_DEPLIBS): add cases and comments for\n\tmore platforms, including AIX, Digital/Tru64 UNIX and IRIX.\n\n2001-07-16  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (AC_LIBTOOL_PROG_LD_SHLIBS): Fix ia64 AIX\n\trun-time-linking when not using gcc.\n\t(AC_LIBTOOL_LANG_CXX_CONFIG):  Ditto.\n\tReported by Dan McNichol <mcnichol@austin.ibm.com>\n\n2001-07-12  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom dda@sleepycat.com (Don Anderson):\n\t* libtool.m4 (AC_LIBTOOL_SYS_DYNAMIC_LINKER) [qnx]: New\n\tsupported architecture.\n\t(AC_DEPLIBS_CHECK_METHOD) [qnx]:  Ditto.\n\t* NEWS: Updated.\n\n\tFrom Stefan Ondrejicka <ondrej@idata.sk>:\n\t* libtool.m4 (AC_LIBTOOL_SYS_DYNAMIC_LINKER) [cygwin*]: Make\n\tsure that /lib/w32api is searched for system libraries to\n\tmatch recent versions of cygwin.\n\t* NEWS: Updated.\n\n2001-07-12  Dan McNichol  <mcnichol@austin.ibm.com>\n\n\tFrom albert chin <china@thewrittenword.com>\n\t* libtool.m4 (AC_LIBTOOL_PROG_LD_SHLIBS): Fix AIX\n\trun-time-linking when using gcc.\n\t(AC_LIBTOOL_LANG_CXX_CONFIG):  Ditto.\n\n2001-07-11  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (_LT_AC_LANG_CXX_CONFIG) [hpux, linux, osf,\n\tsolaris]: Doh!  the evalled variable shouldn't have been\n\tquoted.\n\n\t* libtool.m4 (_LT_AC_LANG_CXX_CONFIG) [hpux, linux, osf,\n\tsolaris]: output_verbose_link_cmd have unquoted `*' in case\n\tstatements for these architectures.  Be sure to quote them\n\twith a sed expression before passing to eval.\n\tReported by Tim Mooney <mooney@dogbert.cc.ndsu.NoDak.edu>\n\n2001-07-09  Gary V. Vaughan  <gary@gnu.org>\n\n\t* README-alpha:  s/configure.in/configure.ac.\n\t* configure.ac: Bumped version to 1.4c.\n\n\tGNU libtool 1.4b was released.\n\n\t* configure.ac: Bumped version to 1.4b.\n\t* NEWS: updated.\n\t* config.guess, config.sub, texinfo.tex:  Synchronised from\n\tftp.gnu.org.\n\n2001-07-09  Robert Boehne  <rboehne@ricardo-us.com>\n\n\tFrom Michael Elizabeth Chastain <chastain@cygnus.com>:\n\t* libtool.m4 (AC_LIBTOOL_SYS_MAX_CMD_LEN):  Set max_cmd_len\n\tto a maximum of 512Kb, as it seems some HPUX 11.0 systems\n\thave trouble with 1MB.\n\n2001-07-09  Gary V. Vaughan  <gary@gnu.org>\n\n\t* README-alpha:  Upgrade distribution instructions to include\n\tcanonical location of texinfo.tex.\n\n2001-07-09  Timothy Wall  <twall@oculustech.com>\n\n\t* libtool.m4 (AC_LIBTOOL_PROG_LD_SHLIBS): Don't disable shlibs\n\ton AIX5/IA64 with GNU ld.  Keep gnu defaults if using gnu tools\n\ton AIX5/IA64.\n\n2001-07-09  Robert Boehne  <rboehne@ricardo-us.com>\n\n\t* libtool.m4 (AC_LIBTOOL_SYS_MAX_CMD_LEN):  Set max_cmd_len\n\tto -1 on hurd, it has no command line argument limits.\n\t* ltmain.in Handle max_cmd_len=-1 for systems that don't have\n\tcommand line argument limits.\n\n2001-07-05  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (_LT_AC_LANG_C_CONFIG):  Revert to 1.3.x\n\tsematics, and always build static libs when the host machine\n\tcannot build shared libs.  Even if static libs were explicitly\n\tdisabled.\n\n2001-07-02  Gary V. Vaughan  <gary@gnu.org>\n\n\tCleanup of libltdl:\n\t* ltdl.c (lt_dladderror): Don't use `index' as a variable name,\n\tsince it is a function on BSD based boxes.\n\t(lt_dlseterror): Ditto.\n\t(lt_dlexit): Remove unused errormsg declaration.\n\t(foreach_dirinpath):  Make sure filename is initialised.\n\t(find_handle):  Return NULL for a failed search.\n\t(foreachfile_callback): Don't reuse data2 symbol from prototype\n\tin func declaration to prevent symbol shadowing.\n\t* ltdl.h (lt_dlmutex_seterror): Don't use `error' as a parameter\n\tname, since it is a function on glibc boxes.\n\n\t* libtoolize.in:  Display --version in the same format as\n\tautoconf and automake.\n\t* ltmain.in: Ditto.\n\n2001-06-30  Gary V. Vaughan  <gary@gnu.org>\n\n\tMerge test improvements from multi-language-branch:\n\t* tests/defs: Find and set the value of CC probed by libtool.m4\n\t* tests/link-2.test: Use a .lo wrapper script, and the value of\n\tCC set by defs instead of hardcoding gcc.\n\t* tests/link.test: Use the value of CC set by defs instead of\n\thardcoding gcc.\n\t* tests/quote.test: Ditto.\n\t* tests/suffix.test: Ditto.\n\n\t* libtool.m4 (AC_LIBTOOL_PROG_COMPILER_PIC) [aix*]: Always set\n\tlt_prog_compiler_wl to `-Wl'.\n\tReported by Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* ltdl.m4 (AC_LTDL_DLLIB) [sco3.2*]: When searching for a dlopen\n\timplementation, and adding `-ldl' has failed, try linking a call\n\tto dlopen, #including dlfcn.h, and without -ldl.  On sco3.2 the\n\theader files redefines the interface symbols to point at the\n\timplementation symbols in libc.\n\tReported by \"Golubev I. N.\" <gin@mo.msk.ru>\n\n2001-06-29  Tim Van Holder  <tim.van.holder@pandora.be>\n\n\tGeneral cleanup of autoconf-2.50 upgrade:\n\t* configure.ac: Mark as needing autoconf-mode in\n\temacs.  Pass arguments to AC_INIT.\n\t* cdemo/configure.ac: Ditto.\n\t* demo/configure.ac: Ditto.\n\t* depdemo/configure.ac: Ditto.\n\t* libltdl/configure.ac: Ditto.\n\t* mdemo/configure.ac: Ditto.\n\t* pdemo/configure.ac: Ditto.\n\t* tagdemo/configure.ac: Ditto.\n\t* ltdl.m4: Mark as needing autoconf-mode in\n\temacs.\n\t* libtool.m4: Mark as needing autoconf-mode in\n\temacs.  Don't add () to AS_MESSAGE_LOG_FD.\n\t* libltdl/configure.ac: Use config-h.in as\n\ttemplate for config.h.\n\t* tagdemo/configure.ac: Drop the AC_DIAGNOSTIC. Move\n\tAC_LANG([C++]) after the OBJEXT/EXEEXT check.\n\n2001-06-29  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Tim Van Holder <tim.van.holder@pandora.be>\n\t* tests/suffix.test: Typo in 2nd for loop.\n\n\tFrom Tim Van Holder <tim.van.holder@pandora.be>\n\t* libltdl/Makefile.am (OBJECTS):  This was an implicit variable.\n\tinstead state the list of object variables explicitly.\n\n\tFrom Bruno Haible <haible@ilog.fr>\n\t* libtool.m4:  undefine the m4 builtin `symbols', so that the\n\tstring `symbols' can be used in the rest of the code without\n\tcausing errors with autoconf-2.13.\n\n\tFrom \"Golubev I. N.\" <gin@mo.msk.ru>\n\t* tests/Makefile.am (CPPLAGS): Typo. s/CPPLAGS/CPPFLAGS.\n\n\t* mdemo/Makefile,am (foo1_la_LIBADD): Add libsub.la, since foo1\n\tdoes use symbols from libsub.la -- only platforms that allow\n\tundefined symbols in libraries were able to cope with this\n\tpreviously.\n\tReported by Robert Collins <robert.collins@itdomain.com.au>\n\n\tFrom \"Golubev I. N.\" <gin@mo.msk.ru>\n\t* libtool.m4 (AC_LIBTOOL_PROG_LD_SHLIBS) [sco3.2v5*]: Needs\n\t-wl,-Bexport to make self dlopen work.\n\n2001-06-28  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom  Alexander Bluhm  <Alexander.Bluhm@WiredMinds.de>\n\t* libltdl/ltdl.c (lt_dlopen): Fix bad memory initialisation\n\tassumptions.\n\n\t* libtool.m4 (AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE) [HPUX]: Define\n\tlt_cv_sys_global_symbol_to_c_name_address to be a sed expression\n\tfor mangling the output of the symbol pipe into a brace delimited\n\tC declaration of symbol name and address.\n\t* ltmain.in: Use it to generate the fooS.c symbol name\n\tReported by Albert Chin-A-Young  <china@thewrittenword.com>\n\n2001-06-28  Tim Van Holder  <tim.van.holder@pandora.be>, Gary V. Vaughan  <gary@gnu.org>\n\n\t* bootstrap: Use cp instead of ln -s, for systems without\n\tsymlinks.  Reorder the statements to avoid repetition outside\n\tthe loop.\n\n2001-06-28  Paolo Bonzini  <bonzini@gnu.org>, Gary V. Vaughan  <gary@gnu.org>\n\n\tLibtool now builds with the help of Autoconf-2.50!\n\t* configure.ac (AC_PREREQ):  Require Autoconf-2.50 or newer.\n\t(AC_PROG_CPP, AC_EXEEXT, AC_OBJEXT):  Removed.  Autoconf-2.50\n\tdoesn't have the AC_REQUIRE bug that required these to be called\n\texplicitly from here.  Autoconf-2.50 uses this file instead of...\n\t* configure.in: ...this, which is now deleted.\n\t* cdemo/configure.ac, cdemo/configure.in: Ditto.\n\t* demo/configure.ac, demo/configure.in: Ditto.\n\t* depdemo/configure.ac, depdemo/configure.in: Ditto.\n\t* libltdl/configure.ac, libltdl/configure.in: Ditto.\n\t* mdemo/configure.ac, mdemo/configure.in: Ditto.\n\t* pdemo/configure.ac, pdemo/configure.in: Ditto.\n\t* tagdemo/configure.ac, tagdemo/configure.in: Ditto.\n\t* libltdl/acconfig.h:  Deleted.\n\t* Makefile.am (libtool): libtool now depends on configure.ac.\n\t* libtool.m4 (_LT_AC_LOCK):  Use 2.50's AC_LANG_PUSH/AC_LANG_POP\n\tinstead of 2.13's AC_LANG_SAVE/AC_LANG_RESTORE.\n\t(AC_LIBTOOL_LANG_C_CONFIG): Ditto.\n\t(AC_LIBTOOL_LANG_CXX_CONFIG): Ditto.\n\t* libtoolize.in:  Use $configure_ac, instead of hardcoding\n\tconfigure.in.\n\n2001-06-28  Tim Van Holder  <tim.van.holder@pandora.be>\n\n\t* pdemo/Makefile.am:  Use '=' instead of '+=' to shut up\n\tautomake.\n\n2001-06-27  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom brad@openbsd.org:\n\t* NEWS: Updated.\n\t* libtool.m4 (AC_LIBTOOL_SYS_DYNAMIC_LINKER) [openbsd]: Improved\n\tsupport for various openbsd platforms.\n\t(AC_LIBTOOL_PROG_LD_SHLIBS): Ditto.\n\t* ltmain.in: Ditto,\n\n2001-06-26  Gary V. Vaughan  <gary@gnu.org>\n\n\t* NEWS: Updated.\n\t* libltdl/ltdl,c (LT_DLMUTEX_LOCK): Renamed from MUTEX_LOCK to\n\tavoid potential namespace clash.\n\t(LT_DLMUTEX_UNLOCK, LT_DLMUTEX_SETERROR, LT_DLMUTEX_GETERROR):\n\tDitto.\n\t(lt_dlmutex_lock_func): Renamed from mutex_lock to avoid a\n\tnamespace clash of NCR MP-RAS.\n\t(lt_dlmutex_unlock_func, lt_dlmutex_seterror_func,\n\tlt_dlmutex_geterror_func): Ditto.\n\tReported by Edouard G. Parmelan <egp@free.fr>\n\n\t* libltdl/ltdl.c (LT_DLSTRLEN): Call strlen only if the argument\n\tis non-NULL and non-zero in length.  Changed all calls to strlen\n\tappropriately.\n\n\t* libltdl/ltdl.c: Prototype all static functions.\n\n\t* ltdl.m4: Bump serial number to 3.\n\t(AC_LIB_LTDL): Require AC_HEADER_DIRENT for ltdl.c.\n\t* libltdl/ltdl.h (lt_dlforeachfile): Prototype for new function.\n\t* libltdl/ltdl.c: Include an appropriate header for the\n\topendir/dirent api.\n\t(foreach_dirinpath): Visit each file in a list of directories.\n\t(find_file_callback): Factor out the core of find_file() to make\n\tuse of foreach_dirinpath().\n\t(find_file): Use it!\n\t(find_handle_callback, find_handle): Ditto.\n\t(lt_dlforeachfile):  New function to find files in a searchpath.,,\n\t(foreachfile_callback): ...using this callback.\n\t* doc/libtool.texi (Libltdl interface): Document new\n\tlt_dlforeachfile api call.\n\n2001-06-25  Gary V. Vaughan  <gary@gnu.org>\n\n\t* THANKS:  Added Albert Chin-A-Young.\n\n\t* libtool.m4 (IFS): When IFS is changed to split a string for\n\texamination in a loop, restore it inside the loop as well as\n\toutside incase IFS is needed by commands in that loop.\n\tReported by Pavel Roskin <proski@gnu.org>\n\n2001-06-25  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* libtool.m4: Prefer shl_load to dlopen on HP-UX because dlopen\n\twon't work properly without a patch.\n\n2001-06-25  Daniel Harvey <daniel@amristar.com.au>\n\n\t* libtool.m4 (ltdll_cmds): [$]0 doesn't appear to translate through\n\tthe script correctly, change to $''0\n\n2001-06-25  Maciej W. Rozycki  <macro@ds2.pg.gda.pl>\n\n\t* libtool.m4 (AC_DEPLIBS_CHECK_METHOD): Use pass_all for\n\tmips-*-linux* and mipsel-*-linux*.\n\n2001-06-24  Andreas Schwab  <schwab@suse.de>\n\n\t* libtool.m4 (AC_LIBTOOL_SETUP): Remove failed try to\n\ttransform linux to linux-gnu in $host.\n\t(AC_LIBTOOL_SYS_DYNAMIC_LINKER): Match $host_os against\n\tlinux*, not linux-gnu*.\n\t(AC_DEPLIBS_CHECK_METHOD): Likewise.\n\n2001-06-24  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (_LT_AC_LIBTOOL_SYS_PATH_SEPARATOR):  Set\n\tPATH_SEPARATOR appropriately if it is not set already,\n\t(_LT_AC_TAGCONFIG): Use it.\n\t(AC_ENABLE_SHARED): Ditto.\n\t(AC_ENABLE_STATIC): Ditto.\n\t(AC_ENABLE_FAST_INSTALL): Ditto.\n\t(AC_PATH_TOOL_PREFIX): Ditto.\n\t(AC_PATH_MAGIC): Ditto.\n\t(AC_PATH_PROG_NM): Ditto.\n\n\tFrom Tim Van Holder  <tim.van.holder@pandora.be>:\n\t* libtool.m4: Use the canonical absolute path test\n\t([\\\\/]* | ?:[\\\\/]) and $PATH_SEPARATOR wherever\n\tappropriate.\n\t(AC_LIBTOOL_PROG_CC_PIC): Properly recognize DJGPP as a\n\tplatform that doesn't support shared libraries.\n\t(AC_LIBTOOL_SYS_MAX_CMD_LEN): Avoid this test on DJGPP; use a\n\tfixed value (12K) instead.\n\t(AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE): Don't forget $ac_exeext\n\twhen testing for link success.\n\n\t* configure.in (AM_INIT_AUTOMAKE): Bumped version to 1.4a.\n\n\tComplete the new configure time tags creation facility based on\n\tthe ltcf-*.sh and ltconfig.in files from multi-language-branch:\n\t* libtool.m4:  More refactoring and reformatting.\n\t(_LT_AC_LANG_GCJ_CONFIG): Merged ltcf-gcj.sh from\n\tmulti-language-branch.\n\t(_LT_AC_LANG_CXX_CONFIG): Merged ltcf-cxx.sh from\n\tmulti-language-branch.\n\t* configure.in (AC_PROG_CXX, LT_AC_PROG_GCJ): Compiler checks must\n\tbe done before AC_PROG_LIBTOOL which appends tags based on their\n\tresults.\n\n2001-06-12  Robert Boehne  <rboehne@ricardo-us.com>\n\n\t* docs/libtool.texi: Updated the libltdl interface documentation\n\tto bring it up to date.\n\n2001-06-06  Gary V. Vaughan  <gary@gnu.org>\n\n\t* demo/Makefile.am (objdir): Use `libtool --config' for\n\textracting configuration values, since a given value may\n\tbe present in each tag.\n\t(hc-libpath): Ditto.\n\t(hc-minusL): Ditto.\n\t* libtool.m4 (_LT_AC_TAGCONFIG): Add tagged configurations from\n\tthe --with-tags option.\n\t(_LT_AC_LTCONFIG_HACK): Factored out into separate configuration\n\tmacros -- The interdependencies and running order are still\n\timmutable, and need a lot of work to fix.\n\t(AC_LIBTOOL_CONFIG): Taken from the previous incarnation of\n\t_LT_AC_LTCONFIG_HACK -- this macro is used both to create the\n\tprimary (C language) libtool configuration from\n\t_LT_AC_LTCONFIG_HACK and also to append tagged configurations from\n\t_LT_AC_TAGCONFIG.\n\t* NEWS:  Merged from multi-language-branch.\n\n2001-06-06  Robert Boehne  <rboehne@ricardo-us.com>\n\n\t* bootstrap: Added tagdemo and pdemo tests from\n\tmulti-language-branch.\n\t* configure.in: Added pdemo and tagdemo to CONF_SUBDIRS\n\tand merged references to CXX and GCJ from multi-language-branch.\n\t* pdemo: Added test directory from multi-language-branch.\n\t* tagdemo: Added test directory from multi-language-branch.\n\t* tests/Makefile.am: Merged additional tests from\n\tmulti-language-branch.\n\t* tests/pdemo-*.test: ditto.\n\t* tests/tagdemo-*.test: ditto.\n\n2001-05-30  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4: Merged ltconfig.in from multi-language-branch.\n\n2001-05-28  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4: Reformatting for consistency, and some refactoring\n\tin preparation for ltcf-*.sh merge.\n\n2001-05-27  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltmain.in: Merged from multi-language-branch.\n\t* libtool.m4: Merged from multi-language-branch.\n\t* ChangeLog: Started afresh.  Old ChangeLog history moved to...\n\t* ChangeLog.1: ...here.\n\n2000-06-04  Mark Mitchell  <mark@codesourcery.com>\n\n\t* ltcf-c.sh (archive_cmds, archive_expsym_cmds) [solaris,\n\twith_gcc]: Use `gcc -shared' to build a shared library.\n\n2001-06-04  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n\n\t* ltcf-c.sh (archive_cmd) [hpux, with_gcc]: Use gcc to link shared\n\tarchives.\n\n2001-05-28  Simon Patarin <simon.patarin@inria.fr>\n\n\t* ltcf-cxx.sh (osf3/osf4/osf5): Support creation of C++  shared\n\tlibraries when using g++ with native linker.\n\n2001-05-28  Albert Chin  <china@thewrittenword.com>\n\n\t* ltconfig.in (version_type, soname_spec) [aix4* | aix5*]: Use\n\tlinux-style versioning, and remove trailing .o from soname_spec.\n\n2001-05-22  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* ltcf-cxx.sh (allow_undefined_flag, no_undefined_flag)\n\t[aix4*|aix5*]: Prepend blank.\n\n2001-05-20  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* configure.in: Reverted to 1.4, to avoid confusion with MLB.\n\tMainline is the release snapshot, except for the ChangeLog version\n\tnumber, until the multi-language branch is merged into it.\n\n\t* ltconfig.in: Fix sh.test regression introduced in previous patch.\n\n\t* ltconfig.in (lt_cv_sys_max_cmd_len): Improve test to work better\n\tin case of non-built-in echo.  Set bounds correctly.\n\n\t* ltcf-cxx.sh (allow_undefined_flag) [aix4* | aix5*]: Fix quote\n\terror.\n\n\t* ltmain.in (exec_cmd): New variable.  Don't exec programs within\n\tthe big `case'; set the variable instead, and exec the cmd\n\tafterwards, so that the shell gets a chance to clean up here-doc\n\tfiles.\n\t* NEWS: Update.\n\n2001-05-16  Alan Modra  <amodra@one.net.au>\n\n\t* libtool.m4 (lt_cv_deplibs_check_method): pass_all for hppa*-linux.\n\n2001-05-03  Andreas Jaeger  <aj@suse.de>, Andreas Schwab  <schwab@suse.de>\n\n\t* ltmain.in (relink_command): Arrange for wrapper script to save\n\toutput to a variable and display it only if relinking fails.\n\n2001-04-25  Gary V. Vaughan  <gary@gnu.org>\n\n\t* configure.in: bumped version to 1.4a.\n\n\tGNU libtool 1.4 was released.\n\n\t* configure.in: Bumped version to 1.4.\n\t* config.sub, config.guess:  Synchronised from ftp.gnu.org.\n\t* NEWS: updated.\n\n2001-04-24  Peter Eisentraut  <peter_e@gmx.net>\n\n\t* libtool.m4: Support $host_os as /sysv5uw7*/ from newer\n\tconfig.guess in addition to older /unixware*/.  Use compiler\n\tdriver, not linker, for linking shared libraries.\n\n2001-04-24  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4, ltmain.in, libltdl/configure.in,\n\ttests/quote.test:  Remove stale references to ltconfig.\n\n\t* ltdl.m4 (AC_C_INLINE): No longer required.\n\t* libltdl/ltdl.c (strdup, strcmp, strchr, strrchr, memcpy, trim,\n\tfree_vars):  Revoke inline keyword from declarations.  `static\n\tinline' is not very portable, and in addition Unixware 7.1.1's\n\tcompiler says you can't access static variables from inline\n\tfunctions.\n\tReported by Peter Eisentraut  <peter_e@gmx.net>\n\n2001-04-24 Albert Chin-A-Young <china@thewrittenword.com>\n\n\t* libtool.m4: Handle case where /bin/nm -p outputs multiple\n\tsymbol types (like under HP-UX 11.00).\n\n2001-04-24  Thomas Tanner  <tanner@ffii.org>\n\n\t* TODO: describe problems with libltdl\n\t* ltmain.in (ILD): tidy up, add comments, remove dead code,\n\t  merge duplicate code\n\t* ltmain.in (ILD): don't touch newdependency_libs after scan or\n\t  dlopen pass\n\t* ltmain.in (ILD): don't dlpreopen dependency_libs of a dlopened\n\t  module (remove absolutely wrong quick hack)\n\t* ltmain.in (ILD): remove wrong comments about duplicate removal\n\t* ltmain.in (ILD): build a static-only module if it has\n\t  static libraries in its dependencies (so that libltdl can\n\t  safely load dependency_libs)\n\t* ltmain.in (argument parsing): prefix comparsions of -l args with X,\n\t  replace -lc with `-framework System' _after_ the ILD passes\n\t* ltmain.in (argument parsing): support dl[pre]open\n\t  for both .o and .lo files\n\t* ltmain.in (deplibs_check): use portable test syntax\n\t* ltmain.in (help): document -prefer-[non-]pic flags\n\t* ltmain.in: improve readablity by adding some comments,\n\t  rename uninst_* to notinst_* (more adequate name)\n\n2001-04-24  Gary V. Vaughan  <gary@gnu.org>\n\n\t* doc/PLATFORMS:  More updates from subscribers to\n\tlibtool@gnu.org.\n\n\tFrom Tim Mooney <mooney@dogbert.cc.ndsu.NoDak.edu>\n\t* tests/Makefile.am (TESTS_ENVIRONMENT): Make sure the *.test\n\tscripts get the same make that was used in the top level\n\tdirectory.\n\n2001-04-23  Gary V. Vaughan  <gary@gnu.org>\n\n\t* doc/PLATFORMS:  Updated with more platforms successfully\n\ttested by members of libtool@gnu.org.\n\n2001-04-23  Peter Eisentraut  <peter_e@gmx.net>\n\n\t* doc/PLATFORMS:  With this patch, freebsd4.3 passes the test\n\tsuite.\n\t* libltdl/ltdl.c (lt_dlexit): Quit loop if only resident modules\n\tare left.\n\n2001-04-23  Gary V. Vaughan  <gary@gnu.org>\n\n\t* doc/PLATFORMS:  With this patch, my Solaris boxes now pass the\n\ttest suite,  Yay!\n\tFrom Albert Chin-A-Young <china@thewrittenword.com>\n\t* ltmain.in:  `test -L' is not portable, and infact breaks uninstall\n\tmode on Solaris.  Fallback to `test -h' and finally `test -f',\n\tbut be careful not to let the failure status cause libtool to\n\tstop.\n\n\tFrom Simon Spero <ses@ibiblio.org>\n\t* ltdl.m4 (AC_LTDL_DLSYM_USCORE):  Add $LIBADD_DL while\n\tchecking for dlsym _.\n\n\tFrom Simon Spero <ses@ibiblio.org>\n\t* libtool.m4 (lt_cv_deplibs_check_method) [darwin]: Set it!\n\n\t* TODO: Make a note to undo this later.\n\tFrom Christoph Pfisterer <cp@chrisp.de>\n\t* libtool.m4: Use $() execution substitution quotation to work\n\taround zsh builtin echo \\ escape removal.\n\n2001-04-22  Peter Eisentraut  <peter_e@gmx.net>\n\n\t* bootstrap: Allow overriding the location aclocal, automake,\n\tautoconf, autoheader from the environment.\n\n\t* demo/Makefile.am: Automake 1.4e does not allow `+=' assignments\n\tif the variable was not set with `=' earlier.  `+=' was not useful\n\there anyway.\n\n2001-04-22  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltdl.m4 (AC_CHECK_HEADERS): UW7 has sys/dl.h, so we must\n\tcheck for that here.\n\t* libltdl/ltdl.c (HAVE_SYS_DL_H):  Include it if necessary for\n\tthe dlopen loader.\n\tReported by Matthew Schalit <mschalit@pacbell.net>\n\n\t* libtool.m4 (AC_DEPLIBS_CHECK_METHOD):  Use pass_all for\n\tvarious releases of UnixWare and OpenServer that support it.\n\tReported by Matthew Schalit <mschalit@pacbell.net>\n\n\t* doc/PLATFORMS:  Updated with various platforms successfully\n\ttested by members of libtool@gnu.org.\n\n2001-04-21  Gary V. Vaughan  <gary@gnu.org>\n\n\t* TODO:  propose pkg-config merge.\n\n2001-04-21  Nick Hudson  <skrll@netbsd.org>\n\n\t* ltmain.in: Correct an error in yesterday's patch.\n\n2001-04-20  Nick Hudson  <skrll@netbsd.org>\n\n\t* libtool.m4: Improve NetBSD support.\n\t* ltmain.in: ditto.\n\n2001-04-19  Dan McNichol <mcnichol@austin.ibm.com>\n\n\t* libtool.m4: Build standard shared libraries on AIX POWER\n\tmore like AIX does, with a shared object archived into lib<xxx>.a.\n\tOn AIX -bexpall flag does strange things... Don't use it.\n\tFix quotes around -berok flag.  Add support for AIX 5.\n\tAdd support for run time linking on AIX POWER. (should work\n\ton AIX 4.2 and up).  Turn this feature on by adding -brtl flag\n\tto LD_FLAGS.  Add support for AIX on IA64. Note: AIX on IA64\n\tuses a SYSV type linker.  Add a comment telling what to do if the\n\tTOC starts getting too large on AIX.\n\t* NEWS: mention aix5 support.\n\n2001-04-18  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* TODO: Add -L- flag.\n\n2001-04-11  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* libtool.m4 (no_undefined_flag) [Solaris ld]: Change to -zdefs.\n\n2001-04-11  Ossama Othman  <ossama@uci.edu>\n\n\t* AUTHORS: Added myself to the list of maintainers.\n\n2001-04-08  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (hardcode_libdir_flag_spec, osf4/osf5): Use ${wl}\n\tto pass -rpath when compiling with gcc.\n\tReported by Tim Mooney <mooney@dogbert.cc.ndsu.NoDak.edu>\n\n\t* libltdl/ltdl.c (sys_shl_open): Cache a handle for the `self'\n\tmodule, since HPUX adds module symbols into the `self' pool if\n\tit is opened later.  Return the cached pointer if the caller\n\tsubsequently tries to open `self'.\n\t(sys_shl_sym): Diagnose NULL modules.\n\n\tFrom Peter Eisentraut  <peter_e@gmx.net>\n\t* ltmain.in (clean,uninstall): test -e is not portable.  Well,\n\tneither is -L, but I'm hoping that redirecting error messages\n\tto /dev/null and relying on non-zero exit status will work okay\n\ton the few hosts that don't support -L.\n\n2001-04-08  Nick Hudson  <skrll@netbsd.org>\n\n\t* ltmain.in: Improve check for valid -version-info parameter.\n\n2001-04-08  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Nick Hudson  <skrll@netbsd.org>\n\t* doc/Makefile.am (libtool_TEXINFOS): Add fdl.texi so that it\n\tis included in the distribution.\n\n2001-04-07  Peter Eisentraut  <peter_e@gmx.net>\n\n\t* ltmain.in (clean,uninstall): Do not error if the file doesn't\n\texist and 'rm -f' was used.  Exit with status 1 on error.\n\n2001-04-06  Nick Hudson  <skrll@netbsd.org>\n\n\t* ltmain.in: Implement a new deplibs_check_method called\n\tmatch_pattern that does pattern matching on filenames...\n\t* libtool.m4: ...use it with NetBSD\n\n2001-04-05  Gary V. Vaughan  <gary@gnu.org>\n\n\t* doc/libtool.texi (Multiple dependencies): A note about the\n\tproblems I've reintroduced by reverting the my patch of 2001-03-31.\n\n\tFrom Edward Lee <tailbert@yahoo.com>\n\t* libtool.m4: Typos.\n\n\t* tests/Makefile.am (TESTS): Delete references to depdemo-dups.test.\n\t* tests/depdemo-dups.test:  Removed, as part of the patch\n\treversion below.\n\t* ltmain.in: Revert my change from 2001-03-31.  Although it\n\twas technically correct, it opens a whole can of worms we don't\n\twant to deal with right now.\n\n\tFrom Ahmed Masud <masud@googgun.com>\n\t* libltdl/ltdl.c (sys_shl_open):  Return a NULL module handle\n\tfor self opening.\n\t(sys_shl_close):  Be careful not to close a NULL module handle.\n\t(sys_shl_sym):  Allow shl_findsym() to open NULL modules, but\n\tdiscard the modified module address it returns.\n\n\t* libltdl/ltdl.c (lt_dlopen):  When reading the .la file,\n\treallocate the line buffer size if the line overflows the\n\toriginal buffer.\n\tReported by Nick Hudson <skrll@netbsd.org>\n\n\t* NEWS (1.3d) Removed bogus ltconfig reference.\n\n2001-04-03  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (_LT_AC_LTCONFIG_HACK):  Remove the spurious\n\t`dnl' from the help text of --with-pic.\n\tReported by stefan <stefan@lkcc.org>\n\n2001-04-02  Gary V. Vaughan  <gary@gnu.org>\n\n\t* configure.in: bumped version to 1.3e.\n\n\tGNU libtool 1.3d was released.\n\n\t* NEWS: inserted todays date.\n\n2001-04-01  Christoph Pfisterer  <cp@chrisp.de>\n\n\t* libtool.m4: Fixed support for Darwin and Rhapsody. Now correctly\n\thardcodes the library path and adds versioning. Other small\n\tfixes.\n\t* ltmain.in: Fixed special cases for libc and libm on Rhapsody and\n\tDarwin. One of them was misplaced. Added version_type case for\n\tRhapsody and Darwin, named \"darwin\".\n\n2001-03-31  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltmain.in: Remove the code for stripping duplicate deplibs\n\tfrom libtool link lines -- duplicates are somtimes necessary\n\tto satisfy inter-library dependencies, and never cause link to\n\tfail even if they are spurious.\n\t* tests/depdemo-dups.test: New file.  Make sure this bug doesn't\n\tcreep back in again!\n\t* tests/Makefile.am (TESTS): Use the new test above.\n\n2001-03-29  Edward M. Lee  <tailbert@yahoo.com>\n\n\t* libtoolize.in: Check configure.ac and prefer configure.ac to\n\tconfigure.in.\n\n\t* libtoolize.in: change recommendation from AM_PROG_LIBTOOL to\n\tAC_PROG_LIBTOOL.\n\n\t* libtool.m4: Generate dll/import libraries for cygwin according\n\tto the following: libFOO.a (static lib), libFOO.dll.a (import\n\tlib), cygFOO-version.dll (dll).  Update postinstall_cmds and\n\tpostuninstall_cmds to reflect this.\n\t* ltmain.in: Generate installed .la files with dlnames set to\n\t../bin/cygFOO-version.dll for normal dlls. dlls for modules\n\tremain with the .la file.\n\n\t* libltdl/ltdl.c:  Use windows paths while calling LoadLibrary.\n\n2001-03-16  Albert Chin  <china@thewrittenword.com>\n\n\t* libtool.m4 (save_CPPFLAGS): Fix typo.\n\n2001-03-13  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* libtool.m4 (lt_cv_compiler_c_o): Cache it.\n\t(lt_cv_compiler_o_lo): Likewise.\n\n2001-03-09  Peter Eisentraut  <peter_e@gmx.net>\n\n\t* ltmain.in (clean): Automatically remove $objdir (usually '.libs').\n\n2001-03-08  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltconfig.in (library_names_spec): Undo latin-1 spaces I pasted\n\tin yesterday by mistake.\n\n2001-03-07  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Tor Lillqvist <tml@iki.fi>\n\t* libtool.m4 (export_symbols): On Windows, if the export_symbols\n\tfile (which has been passed to libtool with the -export-symbols\n\tcommand line switch) already is a .def file, use it as is.\n\n\t* libtool.m4 (library_names_spec): Using m4 quotes correctly this\n\ttime around!\n\n\tFrom Tor Lillqvist <tml@iki.fi>\n\t* libtool.m4 (library_names_spec): Use an appropriate filename\n\tprefix for dlls -- lib for mingw; cyg for cygwin; pw for pw32.\n\n2001-03-06  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* libtool.m4 (can_build_shared) [AIX 4.[01], GCC]: GCC up to\n\t2.96 can't build shared libraries reliably.  Disable them.\n\n\t* ltmain.in: When dropping dependencies of a -no-undefined\n\tlibrary, give up on building a shared library.\n\n2001-03-05  Akim Demaille  <akim@epita.fr>\n\n\t* ltmain.sh: Don't quote the argument of case/esac and\n\tassignments.\n\t* libtool.m4: Likewise.\n\n2001-03-03  Markus F.X.J. Oberhumer <markus@oberhumer.com>,\n\t    Alexandre Oliva <oliva@lsd.ic.unicamp.br>\n\n\t* libtool.m4: Added explicit return type to all C functions.\n\n2001-02-22  Gary Vaughan  <gary@gnu.org>\n\n\t* NEWS: Updated.\n\t* doc/libtool.texi (Thread Safety in libltdl): New node describing\n\tthe  application the new MT API.\n\t* libltdl/ltdl.h: Prototypes.\n\t* libltdl/ltdl.c: Use these functions throughout the rest of\n\tthe file to provide thread locking.\n\t(lt_dlmutex_register): New function to set callbacks for\n\tmulti-threaded calls into libltdl.\n\t(lt_dl_mutex_lock): Type of a locking callback function.\n\t(lt_dl_mutex_lock): Type of an unlocking callback function.\n\t(lt_dl_mutex_seterror): Type of a callback function to save the\n\tlast libltdl error message in thread local storage.\n\t(lt_dl_mutex_geterror): Type of a callback function to retrieve\n\tthe last saved error message from thread local storage.\n\n2001-02-20  Gary Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (lt_dlcaller_register): dont set an unsigned\n\ttype to a negative number.\n\tReported by Guenter Millahn <Guenter.Millahn@Informatik.TU-Cottbus.DE>\n\n2001-02-05  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Nick Hudson <skrll@netbsd.org>\n\t* ltdl.m4 (AC_LTDL_SYS_DLOPEN_DEPLIBS): netbsd* is able to\n\tautomatically load module deplibs without assistance from\n\tlibltdl.\n\n2001-02-02  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (load_deplibs): Make sure the depcount is reset,\n\teven when deplibs are not used because of the patch below.\n\n\t* ltdl.m4 (AC_LTDL_SYS_DLOPEN_DEPLIBS): If we know that the host\n\tarchitecture automatically loads deplibs, then...\n\t* libltdl/ltdl.c (load_deplibs): ...don't manually load each one.\n\n2001-01-31  Gary V. Vaughan  <gary@gnu.org>\n\n\t* TODO:  Updated.\n\n\t* libltdl/ltdl.c (load_deplibs): If loading a deplib fails,\n\tdon't sweat -- it may be a lib that is already statically linked\n\tinto the loading application.\n\n\t* libltdl/ltdl.c: Clean up the shadowing of the global handles\n\tvariable.\n\t(LT_DLRESIDENT_FLAGS): Add extra parens to satisfy -Wall.\n\t(load_deplibs):  Cast isspace() argument to an int to satisfy\n\t-Wall.\n\n2001-01-30  Robert Boehne  <rboehne@ricardo-us.com>\n\n\t* AUTHORS: added myself to the list of maintainers.\n\n2001-01-28  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* libltdl/Makefile.am (CLEANFILES): Clean conditionally-built\n\tlibraries.\n\n2001-01-27  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* libtool.m4 (ld_shlibs) [aix4*]: Disable on unknown CPU types.\n\n2001-01-07  Gary V. Vaughan  <gary@gnu.org>\n\n\t* NEWS: Updated.\n\t* doc/libtool.texi (User defined module data): Updated.\n\t* libltdl/ltdl.c (lt_dlhandle_next): New function.\n\t* libltdl/ltdl.h (lt_dlhandle_next): Prototypes.\n\n2001-01-05  Gary V. Vaughan  <gary@gnu.org>\n\n\t* NEWS: Updated.\n\t* doc/libtool.texi (User defined module data):  Document it all.\n\t* ltdl.m4:  Check for memcpy, or else bcopy.\n\t* ltdl.c (lt_caller_data): New type.\n\t(lt_dl_handle_struct): Add an lt_caller_data field.\n\t(lt_dlcaller_register, lt_dlcaller_set_data,\n\tlt_dlcaller_get_data): New functions.\n\t(rpl_memcpy): A minimal fallback implementation.\n\t(rpl_realloc): A realloc implemented with lt_dlmalloc and\n\tlt_dlfree.\n\t(LT_DLMALLOC, LT_DLFREE, LT_DLREALLOC, LT_DLMEM_REASSIGN):\n\tNew memory handling convenience macros.  Use them\n\tappropriately throughout the rest of this file.\n\t* ltdl.h (lt_dlcaller_register, lt_dlcaller_set_data,\n\tlt_dlcaller_get_data): Prototyped.\n\n2001-01-04  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.h:  formatting change.\n\nContinued in ChangeLog.2000\n-- \n  Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n  2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n\n  This file is part of GNU Libtool.\n\nCopying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout warranty of any kind.\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/ChangeLog.2008": "2008-12-19  Akim Demaille  <demaille@gostai.com>\n\n\tFix copyright notice.\n\t* libltdl/config/ltmain.m4sh: Add missing comma.\n\n2008-12-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAdd cache variables to link tests.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER)\n\t(_LT_LINKER_SHLIBS): Add cache variables to tests that\n\trequire the linker to work.  For shlibpath_overrides_runpath,\n\tthis also changes the semantics to let the result from the C\n\tcompiler take precedence.\n\t* tests/no-executables.at (AC_NO_EXECUTABLES): New file.\n\t* Makefile.am: Update.\n\t* NEWS: Update.\n\tReport of shlibpath_overrides_runpath issue by Mike Frysinger,\n\treport of GCC issue by Andreas Schwab.\n\n2008-11-28  Paolo Bonzini  <bonzini@gnu.org>\n\n\tFix inadvertent commit.\n\t* bootstrap: Revert.\n\n2008-11-28  Paolo Bonzini  <bonzini@gnu.org>\n\n\tFix manual typo.\n\t* doc/libtool.texi (LT_INIT): Use correct config.status\n\tinvocation.  Reported by Akim Demaille.\n\n2008-11-28  Paolo Bonzini  <bonzini@gnu.org>\n\n\tDo not use $ECHO within eval-ed `...`, as %s\\\\n becomes %s\\n.\n\t* HACKING: Document func_echo_all.\n\t* libltdl/m4/libtool.m4: Use it within backticks that appear in\n\teval-ed variables.  Reported by Akim Demaille.\n\n2008-11-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix func_infer_tag $ECHO usage; some testsuite exposure.\n\t* libltdl/config/ltmain.m4sh (func_infer_tag): Use func_echo_all\n\trather than $ECHO for possibly multiple arguments.\n\t* tests/infer-tag.at (inferred tag, CXX inferred tag)\n\t(F77 inferred tag, FC inferred tag, GCJ inferred tag): New file,\n\tnew tests.\n\t* Makefile.am: Adjust.\n\n\t* tests/runpath-in-lalib.at (Runpath in libtool library files):\n\tAdd $EXEEXT overlooked in patch yesterday.\n\n2008-11-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix expout and experr line ending issues.\n\t* tests/testsuite.at (LT_AT_HOST_DATA): Renamed from..\n\t(_LT_AT_TRANSLATE_TEXT_OUTPUT): ..this.\n\t(LT_AT_EXEC_CHECK, LT_AT_NOINST_EXEC_CHECK): Do not use\n\t_LT_AT_TRANSLATE_TEXT_OUTPUT any more.\n\t* tests/configure-iface.at: Use LT_AT_HOST_DATA instead of\n\tAT_DATA for `expout' files.\n\t* tests/lt_dladvise.at (lt_dlopenadvise library loading):\n\tLikewise.\n\t* tests/need_lib_prefix.at (enforced lib prefix): Likewise.\n\tReport by Roumen Petrov.\n\n\tRelax link-order2 test for systems with partial wrong order.\n\t* tests/link-order2.at (Link order of deplibs.): On w32 (and\n\tothers, e.g., AIX), the wrongly linked executable picks up only\n\tone instance of the bad function instead of two; relax the test\n\tto accept this; we still require the right link order with the\n\tcorrectly linked executable.\n\tReported by Roumen Petrov and others.\n\n2008-11-23  Roumen Petrov  <bugtrack@roumenpetrov.info>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAdd $EXEEXT to all linked programs in the new testsuite.\n\t* tests/convenience.at, tests/ctor.at, tests/darwin.at,\n\ttests/deplibs-ident.at, tests/duplicate_conv.at,\n\ttests/duplicate_deps.at, tests/duplicate_members.at,\n\ttests/export.at, tests/fail.at, tests/indirect_deps.at,\n\ttests/inherited_flags.at, tests/link-order.at,\n\ttests/link-order2.at, tests/lt_dladvise.at, tests/lt_dlexit.at,\n\ttests/need_lib_prefix.at, tests/runpath-in-lalib.at,\n\ttests/search-path.at, tests/shlibpath.at, tests/static.at,\n\ttests/stresstest.at, tests/template.at, tests/testsuite.at:\n\tUse $EXEEXT throughout, except in Makefile.am snippets where\n\tautomake takes care of it, and in testsuite macros that take\n\tcare of the extension.\n\tReports by Roumen Petrov and Alon Bar-Lev.\n\n2008-11-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAdjust executable run tests to cwrapper changes.\n\t* tests/testsuite.at (LT_AT_EXEC_CHECK): Accept fifth argument\n\tARGS-OR-STATUS-ADJUST, for command-line arguments and/or exit\n\tstatus flattening.  Rewrite to prefer the executable with the\n\t`.exe' prefix over one without.  Test exit status against\n\texpected exit status, not against zero, when determining whether\n\tthis may be a cross-compilation-induced result.\n\t(LT_AT_NOINST_EXEC_CHECK): Likewise.\n\t* tests/static.at (static linking flags for programs): Adjust\n\tcalls.\n\tReport by Roumen Petrov.\n\n\tNo trailing period in Autotest test group names.\n\t* tests/link-order.at (Link order test): Drop trailing period\n\tfrom test name.\n\t* tests/link-order2.at (Link order of deplibs): Likewise.\n\n2008-11-23  Vincent Torri  <vtorri@univ-evry.fr>  (tiny change)\n\n\tFix func_emit_cwrapperexe_src for WinCE: no errno support.\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src)\n\t[__MINGW32CE__]: Do not use errno, do not include errno.h and\n\tremove calls related to errno when using the mingw32ce compiler.\n\n2008-11-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tNo libm in WinCE.\n\t* libltdl/m4/libtool.m4 (LT_LIB_M) [cegcc*]: This system has\n\tonly a dummy libm, ignore.\n\tReport by Vincent Torri.\n\n\tFix import library detection for WinCE.\n\t* libltdl/config/ltmain.m4sh (func_win32_libid): Work for\n\tpe-arm-wince import libraries.\n\t* NEWS: Update.\n\tReport by Vincent Torri.\n\n2008-11-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\t    Eric Blake  <ebb9@byu.net>\n\n\tFix $ECHO test to not influence other _AS_DETECT_SUGGESTED code.\n\t* libltdl/m4/libtool.m4 (_LT_PROG_ECHO_BACKSLASH): Fix test to\n\tnot influence further tests registered with _AS_DETECT_SUGGESTED\n\tand do not use a PATH below /tmp, to avoid influence by a third\n\tparty.\n\n2008-11-23  Alon Bar-Lev  <alon.barlev@gmail.com>  (tiny change)\n\n\tFix func_win32_libid for 64-bit Windows.\n\t* libltdl/config/ltmain.m4sh (func_win32_libid): Accept file\n\tformat 'pe-x86-64'.\n\t* NEWS: Update.\n\n2008-11-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAvoid newlines in some AT_CHECK commands.\n\t* tests/standalone.at (linking libltdl without autotools): Wrap\n\tlines with dnl, to avoid turning off tracing of AT_CHECK.\n\t* tests/subproject.at (linking libltdl without autotools):\n\tLikewise.\n\n\tReplace uses of $SED $basename.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Replace instances\n\tof `$ECHO ... | $SED' with calls to func_basename.\n\t* libtoolize.m4sh (func_copy, func_serial)\n\t(func_massage_aclocal_DATA): Likewise, replace with\n\tfunc_dirname_and_basename.\n\t* tests/defs.m4sh (func_configure_nofail, func_make, func_exec):\n\tLikewise.\n\n\tNo need to prepend $progname with './'.\n\t* libltdl/config/general.m4sh (func_dirname_and_basename): $ECHO\n\tcopes with leading hyphens now, so do not mangle $progname any\n\tmore.\n\n\tRevenge of the $ECHO. Kill most uses of Xsed.\n\t* libltdl/config/general.m4sh: Replace all uses of `$ECHO \"X...\"\n\t| $Xsed' with `$ECHO \"...\" | $SED', and employ further trivial\n\tsimplifications.  Replace $ECHO with echo where appropriate.\n\t(func_echo_all): New function.\n\t* libltdl/config/getopt.m4sh: Likewise simplifications.\n\t* libltdl/config/ltmain.m4sh: Likewise.\n\t* libltdl/m4/libtool.m4: Likewise.\n\t(LT_CMD_MAX_LEN): Use func_fallback_echo, to ensure that the\n\tcommand line is passed through an exec* function.\n\t* libtoolize.m4sh: Likewise simplifications.  Use func_echo_all\n\tto implement --dry-run.\n\t* tests/defs.m4sh: Likewise simplifications.\n\t* tests/quote.test: Likewise simplifications.\n\n\tFix matching of Sun Fortran compiler on Linux.\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC) [ linux ]: Also\n\tmatch `Sun Ceres Fortran' compiler; reorder with C compiler\n\tmatching.\n\t* THANKS: Update.\n\tReport by Ethan Mallove.\n\n2008-11-21  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tFix --verbose option; add new --no-{silent|quiet|verbose} options.\n\n\t* libltdl/config/ltmain.m4sh (usage): Document\n\tnew options --no-silent/--no-quiet and --no-verbose.\n\t(func_enable_tag): Handle new options.\n\tModified --verbose to actually activate opt_verbose.\n\tNew behavior: --silent disables both \"normal\" output and\n\tfunc_verbose output.  --verbose enables both \"normal\"\n\toutput and func_verbose output. --no-silent enables\n\t\"normal\" output, but does not affect func_verbose output.\n\t--no-verbose disables func_verbose output, but does not\n\taffect \"normal\" output.\n\t* NEWS: announce new options --no-silent/--no-quiet, and\n\t--no-verbose.\n\t* doc/libtool.texi: document new options --no-silent/--no-quiet\n\tand --no-verbose.\n\n2008-11-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix match patterns for cegcc*.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Match '*cegcc*'\n\tinstead of '*cegcc' for $host_os.\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_MAGIC_METHOD): Likewise.\n\t* tests/lt_dladvise.at (lt_dlopenadvise library loading):\n\tLikewise.\n\t* libltdl/m4/ltoptions.m4 (AC_LIBTOOL_DLOPEN): Match\n\t'*-*-cegcc*' for $host.\n\n\tEnsure $ac_aux_dir is initialized for LIBTOOL_DEPS.\n\t* libltdl/m4/libtool.m4 (LT_INIT): Require\n\tAC_CONFIG_AUX_DIR_DEFAULT.\n\t* tests/old-m4-iface.at (AM_PROG_LIBTOOL): Amend test to\n\texpose this.\n\tReport, analysis, and test example by Jakub Bogusz.\n\n\tCheck for bogus aclocal.m4 contents in bootstrap and dist-hook.\n\t* Makefile.am (dist-hook): Bail out if shipped aclocal.m4 files\n\tcontain LT_INIT, AC_PROG_LIBTOOL, or AM_PROG_LIBTOOL macro\n\tdefinitions.  These can only come from bogus pull-ins from older\n\tinstalled Libtool macro files.\n\t* bootstrap: Likewise.\n\tReport by Akim Demaille.\n\n2008-11-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix $ECHO abuse exposed by recent patch.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER): Require\n\t_LT_CHECK_SHELL_FEATURES, for $lt_NL2SP.  Always quote argument\n\tto $ECHO.\n\n\tSkip sys_lib_search_path on systems without libz.\n\t* tests/search-path.at (sys_lib_search_path): Autotest needs at\n\tleast one AT_CHECK executed in a test group.  So if we haven't\n\tfound -lz anywhere, as may happen with cross-compilers, skip the\n\ttest.\n\t* THANKS: Update.\n\tReport by Alon Bar-Lev.\n\n\tFix execute mode test to actually expose cwrapper failures.\n\t* tests/execute-mode.at (execute mode): Actually also test the\n\tcwrapper on the arguments.\n\tReport by Bruno Haible.\n\n2008-11-15  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tAdd func_win32_import_lib_p.\n\t* libltdl/config/ltmain.m4sh (func_win32_import_lib_p):\n\tNew function.\n\n2008-11-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix archive_cmds for older cc on HP-UX 11.\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS) [hp-ux11*, !GCC]\n\t[!hppa*64*, !ia64*] <archive_cmds>: Older releases of the HP-UX\n\t11.00 C compiler do not support -b yet; use a link test to\n\tdecide whether $LD should be used for library creation.\n\t* THANKS: Update.\n\tReport by Daniel Richard G.\n\n2008-11-12  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* configure.ac: Bump Autoconf requirement.\n\t* libltdl/config/general.m4sh: Use $as_echo as default $ECHO.\n\t* tests/testsuite.at: Use $as_echo as default $ECHO.\n\n\t* libltdl/m4/libtool.m4 (LT_INIT): Add _LT_SHELL_INIT to\n\twork around Autoconf <2.64 bug.\n\t(_LT_OUTPUT_LIBTOOL_COMMANDS_INIT): Add func_fallback_echo.\n\tEliminate lt_ECHO requoting.\n\t(_LT_SHELL_INIT): Use a public M4sh diversion.\n\t(_LT_PROG_ECHO_BACKSLASH): Rewrite.\n\t(LT_CMD_MAX_LEN): Do not use --fallback-echo.\n\t* libltdl/config/ltmain.m4sh: Remove --no-reexec and --fallback-echo\n\thandling.\n\t(func_fallback_echo): New.\n\t(func_emit_wrapper_part1): Quote ECHO.  Remove --no-reexec and\n\t--fallback-echo handling.\n\t(Execute mode): Do not set qecho.\n\n2008-11-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tUse -no-undefined in install tests.\n\t* tests/install.at (Install tests): Use `-no-undefined'.\n\n2008-11-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tDo not use `test ... -a ...'.\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS) [hpux10, hpux11]:\n\tReplace test -a with test && test.\n\n2008-11-11  Roumen Petrov  <bugtrack@roumenpetrov.info>  (tiny change)\n\n\tFix destdir tests in cross compile mode.\n\t* tests/destdir.at (Simple DESTDIR install)\n\t(DESTDIR with in-package deplibs): Use $EXEEXT throughout.\n\t* THANKS: Update.\n\n2008-11-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tSimplify cwrapper handling a bit.\n\t* libltdl/config/ltmain.m4sh (func_emit_wrapper_part1)\n\t(func_emit_wrapper_part2, func_to_host_path)\n\t(func_to_host_pathlist, func_emit_wrapper): Simplify using\n\tdefault argument, func_append.\n\n2008-11-10  Paolo Bonzini  <bonzini@gnu.org>\n\n\tSeparate part of _LT_SETUP into other macros, detect ECHO sooner.\n\t* libltdl/m4/libtool.m4 (_LT_PREPARE_SED_QUOTE_VARS): New macro,\n\textracted from...\n\t(_LT_SETUP): ... here.  Require _LT_PROG_ECHO_BACKSLASH sooner.\n\n2008-11-10  Paolo Bonzini  <bonzini@gnu.org>\n\n\tFix quoting when config.status generates libtool config.\n\t* libltdl/m4libtool.m4 (_LT_OUTPUT_LIBTOOL_COMMANDS_INIT):\n\tDouble quote ECHO-ed variables.\n\n2008-11-10  Paolo Bonzini  <bonzini@gnu.org>\n\n\tUse documented M4sh interfaces.\n\t* clcommit.m4sh: Do not unset CDPATH, use AS_INIT and M4sh diversions.\n\t* libltdl/config/mailnotify.m4sh: Likewise.\n\t* libtoolize.m4sh: Likewise.\n\t* tests/defs.m4sh: Likewise.\n\t* tests/testsuite.at: Move AT_INIT invocation at the top.\n\n\t* libltdl/m4/libtool.m4 (_LT_INIT_GENERATED): New.\n\t(LT_OUTPUT): Use it.\n\n\t* libltdl/config/general.m4sh (M4SH_IN_HEADER): New.\n\t(progpath): Move setting before $0 could be clobbered.\n\t* libltdl/config/ltmain.m4sh (M4SH_IN_HEADER): New.\n\n2008-11-10  Paolo Bonzini  <bonzini@gnu.org>\n\n\tRun sh.test on the M4sh source.\n\t* tests/defs.m4sh (scripts): Point to pre-m4 sources.\n\n2008-11-10  Paolo Bonzini  <bonzini@gnu.org>\n\n\tAvoid that autom4te complains about unexpanded macros.\n\t* libtoolize.m4sh: Allow occurrences of \"dnl\" and use quadrigraphs\n\tto protect other m4 macros.\n\n2008-11-11  Bruno Haible  <bruno@clisp.org>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix cwrapper argument mangling on w32.\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src): On\n\tmingw, preprocess the argument vector through prepare_spawn.\n\t* tests/execute-mode.at (execute mode): Output args\n\tnewline-separated.  Extend tests by more argument pairs that\n\tcontain special characters, where the w32 cwrapper fails.\n\tAlso test a real compiled program, linked against an uninstalled\n\tlibrary, to expose cwrapper issues.\n\t* NEWS: Update.\n\n2008-11-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tUpdate to GFDL 1.3.\n\t* doc/fdl.texi: Update to GFDL 1.3.\n\t* doc/libtool.texi: Adjust.\n\t* NEWS: Update.\n\n2008-11-09  Alexei Sheplyakov  <varg@theor.jinr.ru>  (tiny change)\n\n\tFix cross compilation with wine for the case SHELL != bash.\n\t* libltdl/config/ltmain.m4sh (func_to_host_path): Avoid escape\n\tsequence interpretation by 'echo', for w32-style paths.\n\t* THANKS: Update.\n\n2008-10-28  Michael Haubenwallner  <michael.haubenwallner@salomon.at> (tiny change)\n\n\tFix checks for unsupported allow_undefined_flag.\n\t* tests/tagdemo-undef.test: Match allow_undefined_flag\n\tcorrectly, for SKIPping.\n\t* tests/cdemo-undef.test: Likewise.\n\n2008-10-26  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/testsuite.at (_LTDL_PROJECT_FILES): Fix dependencies for\n\tparallel make.\n\n\t* libtoolize.m4sh (func_nonemptydir_p): Fix typo in error\n\tmessage.\n\n2008-10-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix Autoconf 2.59 incompatibilty.\n\t* libltdl/m4/ltdl.m4 (_LTDL_SETUP): m4_pattern_allow\n\t`LT_LIBEXT'; Autoconf 2.59's AC_DEFINE* macros didn't do this\n\tautomatically yet.\n\t* NEWS, THANKS: Update.\n\tReport by Marcel Loose.\n\n2008-10-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAtomic shared library install permissions on HP-UX.\n\tThe HP-UX 11 runtime linker fails to mmap shared libraries\n\twithout execute permissions.  Fixing them with postinstall_cmds\n\tmay be too late, as ln, sed, and chmod may link against the\n\tlibrary being installed.\n\n\t* libltdl/m4/libtool.m4 (install_override_mode): New LT_DECL.\n\t(_LT_SYS_DYNAMIC_LINKER) [hpux9*, hpux10*, hpux11*]: Set it.\n\t* libltdl/config/ltmain.m4sh (func_mode_install): Build a second\n\tcommand line, $install_shared_prog, for the installation of the\n\tshared library.  Override resp. set the permission mode if\n\tinstall_override_mode is nonempty.\n\t* doc/libtool.texi (libtool script contents): Document it.\n\t* tests/install.at (Install tests): New test.\n\t* Makefile.am (TESTSUITE_AT): Adjust.\n\t(TESTS_ENVIRONMENT): Pass INSTALL.\n\tReport by Bruno Haible.\n\n2008-09-26  Eric Blake  <ebb9@byu.net>\n\n\tAvoid gcc warning.\n\t* libltdl/loaders/loadlibrary.c (vm_open): Don't check for array\n\tbeing a NULL pointer.\n\n2008-09-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tMan pages for libtoolize and libtool, new command line option\n\t--help-all.\n\t* Makefile.am (dist_man1_MANS, update_mans): New macros.\n\t($(srcdir)/doc/libtool.1, $(srcdir)/doc/libtoolize.1): New\n\trules.  Use --help-all for libtool.\n\t(MAINTAINERCLEANFILES): New macro.  Add dist_man1_MANS.\n\t(BUILT_SOURCES): Add libtoolize.\n\t* configure.ac: Check for help2man, set HELP2MAN.\n\t* doc/libtool.texi: Add @direntry for libtool-invocation.\n\t(Invoking libtool): Document -h, --help-all.  Reorder mode\n\tdescription for consistency.\n\t(Compile mode): Do not document -Wl,FLAG and -XCClinker here.\n\t(Link mode): Document -Wc,FLAG here, reformat a bit.\n\t* libtoolize.m4sh: Reformat --help output a bit, to help\n\thelp2man.\n\t* libltdl/config/ltmain.m4sh: Likewise.  Also, set PROGRAM to\n\t`libtool', not `ltmain.sh', so the former is used in the man\n\tpage.\n\tNew argument `--help-all'.  If given, call func_help and\n\tfunc_mode_help several times, beating output in shape with sed.\n\t(func_mode_help): Do not exit here.\n\t* libltdl/config/getopt.m4sh (func_usage): Work with different\n\tindentations, but require comment hash in first column, when\n\tgrepping for '-h' in usage to end short help.\n\t(func_help): Accept optional argument to not exit.\n\t* NEWS, THANKS: Update.\n\tSuggestion by Karl Berry.\n\n2008-09-08  Gary V. Vaughan  <gary@gnu.org>\n\n\tUse `-version-info 9:0:2' for one added iface since 2.2.4.\n\t* libltdl/Makefile.inc (LTDL_VERSION_INFO): Make the libltdl\n\tversion number match 2.2.6a rerelease.\n\n\tAdd ./commit option for pushing tags back to origin.\n\t* clcommit.m4sh (opt_tags): New --tags push option.\n\t(func_commit): Run `$GIT push --tags' if --tags was passed.\n\t* HACKING (Release Procedure): Note the requirement to pass\n\t--tags to ./commit for new release tag to be push back to\n\torigin.\n\n2008-09-07  Gary V. Vaughan  <gary@gnu.org>\n\n\tRetire gnu.org news.html in favour of savannah news.\n\t* HACKING (Release Procedure): Add instructions for sending\n\ta web release announcement to http://planet.gnu.org via\n\tthe savannah news manager.\n\n\tAdd untested git push conflict testing to commit script.\n\t* clcommit.m4sh (func_check_conflicts): Test return status\n\tof 'git push --dry-run', and display an error on non-zero.\n\n\tEnable release procedure to work with lzma OLDRELEASE file.\n\t* Makefile.maint (diffs, prev-tarball, new-tarball): If lzma\n\ttarballs are present use them to generate the diffs, otherwise\n\tuse gz tarballs if they are present, or else complain if both\n\tare missing.\n\n\tSet SCM version number to 2.2.7a.\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version\n\tnumber to 2.2.7a.\n\t* NEWS: Updated.\n\n\tGNU Libtool 2.2.6 was released.\n\n\tFix typo in Makefile.maint.\n\t* Makefile.maint (git-news): Renamed to check-news, since it\n\tdoesn't actually run git.  Adjust all dependees.\n\n\tRun `git commit -a' when no files are passed.\n\t* clcommit.m4sh (func_commit): Add -a argument if necessary.\n\n\tPrepare for next stable release.\n\t* libltdl/Makefile.inc (LTDL_VERSION_INFO): Update.\n\t* libltdl/m4/libtool.m4: Bump serial number to account for\n\tchanges since 2.2.4 release.\n\t* INSTALL, config/config.guess, config/texinfo.tex: Updated\n\tfrom canonical source.\n\t* configure.ac (AM_INIT_AUTOMAKE): Specify dist-lzma, which\n\twas introduced after automake-1.10 was released.\n\t(abs_top_srcdir, abs_top_builddir): No need to substitute these\n\tfrom configure anymore, since we require automake 1.10.1, which\n\tdoes perform the substitutions properly.\n\t(TIMESTAMP): Normal releases were displaying the long-form\n\ttimestamp.  Fix to show the short release timestamp as per\n\talpha release numbers.\n\t* NEWS: Update with missing entries from ChangeLog.\n\t* HACKING (Release Procedure): We release lzma tarballs now\n\tbut no xdeltas.\n\t* Makefile.maint: Updated to match Release Procedure\n\tinstructions in HACKING.\n\n\tConvert mailnotify headers to git.\n\t* clcommit.m4sh: Improve mailnotify contents.\n\n\tMake ./commit useful again.\n\t* clcommit.m4sh: Major overhaul and simplification for git.\n\n2008-09-06  Gary V. Vaughan  <gary@gnu.org>\n\n\tFix 'DISTCHECK_CONFIGURE_FLAGS=--program-prefix=g' bug.\n\t* tests/testsuite.at (_LIBTOOLIZE_TRANSFORM): Fix test failures\n\twith --program-prefix, where the test case output contains the\n\ttransformed name somewhere other than the beginning of a line.\n\t* libtoolize.m4sh (func_check_macros): Be sure to always use\n\tthe transformed name in output messages.\n\n2008-09-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tDo not remove .gcno files when linking.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): When removing\n\tpotential output files before linking, do not remove *.gcno\n\tprofile information GCC outputs next to object files in `.libs'.\n\tReport by Vincent Torri.\n\n2008-09-01  Peter O'Gorman  <peter@pogma.com>\n\n\tRevert 75142db4f8afc65ba7aae0ed80ea0b35bd9cc382 (AIX libltdl\n\tdlopen(NULL)\n\n\t* libltdl/m4/ltdl.m4: Remove LTDL_DLOPEN_SELF_WORKS define.\n\t* libltdl/loaders/dlopen.c: Remove LTDL_DLOPEN_SELF_WORKS check.\n\t* libltdl/m4/libtool.m4 [aix]: Set export_dynamic_flag_spec to\n\t-Wl,-bexpall. This is a temporary workaround until a real fix\n\tis implemented.\n\t* NEWS: document it.\n\n2008-08-26  Peter O'Gorman  <peter@pogma.com>\n\n\tAllow for extensions other than .a for preloaded modules.\n\t* libltdl/m4/ltdl.m4 (_LTDL_SETUP): Define LT_LIBEXT.\n\t* libltdl/ltdl.c (lt_dladvise_preload): Use it.\n\tReported by Ralf Wildenhues.\n\n2008-08-26  Peter O'Gorman  <peter@pogma.com>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tRemove unnecessary global argz functions.\n\t* libltdl/argz.c (argz_add,argz_count): Remove.\n\t* libltdl/argz_.h (argz_add,argz_count): Remove.\n\t* NEWS: Announce it.\n\t* tests/ltdl-api.at: Test so we don't repeat it.\n\t* Makefile.am: Add new test.\n\n2008-08-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tInitial support for Lahey Fortran on GNU/Linux.\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC, _LT_LINKER_SHLIBS)\n\t[linux] <lf95>: Add support for Lahey Fortran 8.1.\n\t* NEWS, THANKS: Update.\n\tSuggested by Craig Tierney.\n\n2008-08-21  Sam Thursfield  <ssssam@gmail.com>  (tiny change)\n\n\tAvoid leading separator in PATH for DLL search.\n\t* libltdl/config/ltmain.m4sh (func_mode_link) [cygwin, mingw]\n\t[ pw32, os2, cegcc]: Fix dllsearchpath not to contain leading\n\tseparator.\n\t* THANKS: Update.\n\n2008-08-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Quote $#.\n\n\tDisallow `-L path', do not misparse it silently.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Diagnose `-L'\n\twithout argument, and `-L path', i.e., with a space.\n\t* tests/fail.at (Failure tests): Test for these failures.\n\t* THANKS: Update.\n\tReport by Olaf Lenz.\n\n2008-08-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAvoid test failure due to broken dlpreloading of shared library.\n\t* tests/lt_dladvise.at (lt_dlopenadvise library loading): Drop\n\tsome newlines in AT_CHECK commands, for better 'testsuite -x'\n\toutput.  Only create a static installable libpreload.la, to\n\tavoid exposing the bug libtool currently has with preloading of\n\tshared libraries.  Add a note to revisit this later.\n\n2008-08-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tParallel make testsuite fixes.\n\t* tests/configure-iface.at (installable libltdl)\n\t(--with-ltdl-include/lib, --with-included-ltdl): Add dlopened\n\tlibmodule.la to main_DEPENDENCIES.\n\t* tests/old-m4-iface.at (AC_WITH_LTDL): Likewise, let ltdldemo\n\tdepend upon module.la and libltdl/libltdlc.la.\n\t* tests/testsuite.at (LT_AT_MAKE): Invoke each target in turn,\n\tdefault to 'all'.\n\t* tests/early-libtool.at (config.lt): Define 'all' target.\n\n\t* HACKING: Update for git, fix some minor nits.\n\n2008-08-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tRemove use of exit in configure test sources.\n\t* libltdl/m4/libtool.m4 (_LT_TRY_DLOPEN_SELF): Return from main,\n\tto avoid using undeclared exit.\n\tReport against OpenMPI from Coverity via Jeff Squyres.\n\n\t* tests/configure-iface.at (convenience libltdl): Ignore warning\n\tfrom parallel make.\n\n2008-08-07  DJ Delorie  <dj@redhat.com>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [tpf]\n\t<library_names_spec>: Fix typo in variable name.\n\n2008-08-06  Steve Ellcey  <sje@cup.hp.com>\n\n\tUse -fPIC with GCC on HP-UX/ia64.\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC, _LT_LINKER_SHLIBS)\n\t[ia64-*-hpux*]: Specify -fPIC when using GCC to build shared\n\tlibraries.\n\n2008-08-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* NEWS: Minor fixups.\n\n2008-08-01  Gary V. Vaughan  <gary@gnu.org>\n\n\tBring NEWS up to date.\n\t* NEWS: Add missing summaries since 2.2.4 release.\n\n\tImplement lt_dlopening of only preloaded modules.\n\t* libltdl/m4/ltdl.m4 (LTDL_INIT): Check for a libltdl that\n\tprovides lt_dladvise_preopen when deciding if installed libltdl\n\tis 'new enough'.\n\t* libltdl/libltdl/lt__private.h (lt__advise): Add a new\n\tis_preload flag.\n\t* libltdl/ltdl.c (lt_dladvise_preload): New api call to set it.\n\t(try_dlopen): If it is set, and the search of preloaded modules\n\tdidn't return a match, don't bother searching the filesystem.\n\t* libltdl/ltdl.h (lt_dladvise_preload): Declare it.\n\t* doc/libtool.texi (Libltdl Interface): Document it.\n\t* tests/lt_dladvise.at: Test it (and incidentally add some test\n\tcoverage for `libtool -dlpreopen').\n\t* NEWS: Announce it.\n\n2008-08-01  Vincent Torri  <doursse@users.sf.net>\n\n\tAdd cegcc (Windows CE/PocketPC) support.\n\t* libltdl/config/ltmain.m4sh: Add 'cegcc' case where needed.\n\t* libltdl/m4/libtool.m4 (LT_CMD_MAX_LEN, LT_SYS_DLOPEN_SELF)\n\t(_LT_SYS_DYNAMIC_LINKER, _LT_CHECK_MAGIC_METHOD)\n\t(_LT_CMD_GLOBAL_SYMBOLS, _LT_COMPILER_PIC, _LT_LINKER_SHLIBS)\n\t(_LT_LANG_CXX_CONFIG): Likewise.\n\t* libltdl/m4/ltoptions.m4 (AC_LIBTOOL_DLOPEN): Likewise.\n\t* NEWS: Update.\n\t* THANKS: Update.\n\n2008-07-31  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_to_host_path): Fix sh.test\n\tfailure.\n\tReport by Paolo Bonzini.\n\n2008-07-31  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* ltmain.m4sh (func_emit_cwrapperexe_src): Factor\n\tmultiple closed braces into the next cat command.\n\n2008-06-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC) [linux] <icc, icpc>:\n\tUse -fPIC, newer Intel compilers (icc 10, ifort 9) reject -KPIC.\n\t* tests/localization.at: Skip test if the compiler fails merely\n\tdue to the locale setting.\n\t* THANKS: Update.\n\tReport by Vincent Lefevre.\n\n2008-06-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (Linking executables, Static libraries)\n\t(Modules for libltdl, Distributing libltdl): Remove TABs from\n\tthe manual.\n\n2008-06-13  Peter O'Gorman  <peter@pogma.com>\n\n\tSupport ifort on darwin.\n\t* libltdl/m4/libtool.m4 (_LT_DARWIN_LINKER_FEATURES): Build\n\tshared libraries with ifort.\n\tReported by Christopher Hulbert.\n\n2008-06-01  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t[mingw] fix cross-compile-with-wine case\n\t* libltdl/config/ltmain.m4sh (func_to_host_path)\n\t[host=mingw, build!=mingw|cygwin]: check that winepath\n\tstdout is non-empty and exit code is 0, instead of checking\n\tstderr.\n\tReported by: Roumen Petrov\n\n2006-06-01  Stas Maximov  <smaximov@ieee.org>  (tiny change)\n\n\tCheck only regular files, not devices, for lalibs.\n\t* libltdl/config/ltmain.m4sh (functions func_lalib_p)\n\t(func_lalib_unsafe_p): Only read regular files and not device\n\tfiles.  Avoids blocking libtool executing gdb, when a\n\tpseudo-terminal device /dev/pts/NN is given as one of the\n\targuments to gdb, as in:\n\tlibtool --mode=execute gdb -q -nw -i mi -tty /dev/pts/4 prog\n\n2008-05-31  Peter O'Gorman  <peter@pogma.com>\n\n\tSkip darwin test if fat link fails.\n\t* tests/darwin.at: Skip if we can not link a fat program.\n\tReported by Daniel Macks <dmacks@netspace.org>\n\n2008-05-26  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tlibtoolize should not remove config.guess, config.sub.\n\t* libtoolize.m4sh (all_pkgconfig_files): Do not list\n\tconfig.guess nor config.sub.  We don't install them without\n\t--install, and the project may not be using Automake.\n\tReport by Andreas Schwab.\n\n\tSimplify argument parsing in cwrapper.\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src):\n\tUse NULL where appropriate.  Do not compute length of arguments\n\tneedlessly.\n\n2008-05-25  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t[mingw] Add cross-compile support to cwrapper\n\t* libltdl/config/ltmain.m4sh (func_to_host_path) [$host=mingw]:\n\tIf present, use winepath to convert from $build to $host\n\tif $build is neither mingw (msys) nor cygwin.  Use unconverted\n\tpath as fallback when conversion fails. Also update comments.\n\t(func_to_host_pathlist) [$host=mingw]: Ditto. For fallback case,\n\tuse simplistic ':' to ';' path separator translation.\n\n2008-05-25  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tCwrapper should not eat -- arguments\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src)\n\t[file scope]: Defined all option strings in terms of macro\n\tLTWRAPPER_OPTION_PREFIX. Similarly defined all option string\n\tlengths in terms of macro LTWRAPPER_OPTION_PREFIX_LENGTH.\n\t[main]: Modified option parsing algorithm to pass -- on to\n\ttarget, and to not stop processing arguments when -- is seen.\n\tAdded check for unrecognized options in reserved namespace\n\tdefined by LTWRAPPER_OPTION_PREFIX.\n\n2008-05-25  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix ifort settings again.\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC) [linux] <ifort>:\n\tUnlike icc and ecc, not all ifort versions understand `-KPIC',\n\te.g. version 10.1, so use `-fPIC' instead.\n\tReport by Jeff Squyres.\n\n2008-05-20  Eric Blake  <ebb9@byu.net>\n\n\tResynchronize argz whitespace changes from gnulib.\n\t* libltdl/m4/argz.m4: Kill trailing whitespace.\n\t* libltdl/argz.c: Likewise.\n\n2008-05-19  Eric Blake  <ebb9@byu.net>\n\n\tFix regression from two days ago.\n\t* libltdl/m4/ltdl.m4 (_LT_LIBOBJ): Don't refer to deleted macro.\n\n2008-05-17  Eric Blake  <ebb9@byu.net>\n\n\tSpeed up bootstrap by improving lt_combine.\n\t* libltdl/m4/ltsugar.m4 (lt_combine): Mirror Autoconf 2.62\n\timprovements.  Includes a semantic change where the separator can\n\tnow be empty, and where an empty fourth argument is now treated as\n\ta valid suffix.\n\t* libltdl/m4/libtool.m4 (_lt_decl_varnames_tagged): Adjust to new\n\tsemantics of lt_combine.\n\t(lt_decl_varnames_tagged): Fix quoting and optimize.\n\n\tKill _LT_LIBSOURCES; it wasn't checking anything useful.\n\t* libltdl/m4/ltdl.m4 (_LT_LIBSOURCES): Delete.\n\t(LTDL_INIT): Ignore arguments to AC_LIBSOURCES during _LTDL_SETUP,\n\ton the assumption that libtoolize correctly installed them.\n\n2008-05-13  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t[mingw|cygwin] Modify cwrapper to invoke target directly.\n\t* libltdl/config/ltmain.m4sh (func_to_native_path):\n\tNew function. If $host is mingw, and $build is mingw\n\tor cygwin, convert path to mingw native format.\n\t(func_to_native_pathlist): New function. Ditto, for\n\t:-separated pathlists.\n\t(func_emit_cwrapperexe_src) [__CYGWIN__ && __STRICT_ANSI__]:\n\tEnsure putenv and setenv are declared. Define HAVE_SETENV.\n\t(func_emit_cwrapperexe_src) [main]: Add new constants to\n\thold desired PATH settings; initialize and use functions\n\tabove to convert to $host format if necessary. Add new\n\tcommand-line options --lt-env-set, --lt-env-prepend, and\n\t--lt-env-append. No longer emit wrapper script as integral\n\tpart of launching child. Remove support for (now) unnecessary\n\t$TARGETSHELL. Exec actual target executable directly.\n\t(func_emit_cwrapperexe_src) [lt_setenv, lt_extend_str]\n\t[lt_split_name_value, lt_opt_process_env_set]\n\t[lt_opt_process_env_prepend, lt_opt_process_env_append]\n\t[lt_update_exe_path, lt_update_lib_path]: New functions.\n\n2008-05-11  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tEnsure cwrapper compiles without warnings under -std=c99.\n\t* libltdl/config/ltmain.m4sh (func_emit_wrapper_part1):\n\tnew function.\n\t(func_emit_wrapper_part2): new function.\n\t(func_emit_wrapper): delegate to new functions.\n\t(func_emit_cwrapperexe_src) [__CYGWIN__ && __STRICT_ANSI__]:\n\tensure realpath is declared.\n\t(func_emit_cwrapperexe_src): declare two different strings\n\tto each hold part of the wrapper script content. Initialize\n\tusing new func_emit_wrapper_partX functions.\n\t(func_emit_cwrapperexe_src) [main]: when emitting wrapper\n\tscript content, use both strings.\n\tReported by Yaakov Selkowitz.\n\n2008-05-06  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tEnsure $OBJDUMP is defined\n\t* libltdl/m4/libtool.m4 (_LT_DECL_OBJDUMP): new macro ensures\n\tthat $OBJDUMP is always defined sanely.\n\t(_LT_SYS_DYNAMIC_LINKER): call it.\n\t(_LT_CHECK_MAGIC_METHOD): call it.\n\n2008-05-05  Gary V. Vaughan  <gary@gnu.org>\n\n\tFix libtoolize test failure with aclocal < 1.10.1\n\t* tests/libtoolize.at\n\t(verbatim aclocal.m4 w/o AC_CONFIG_MACRO_DIR): Older aclocal\n\trequires a space between -I and the directory argument.\n\tReported by Daniel Macks <dmacks@netspace.org>\n\n2008-05-04  Gary V. Vaughan  <gary@gnu.org>\n\n\tSet SCM version number to 2.2.5a.\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version\n\tnumber to 2.2.5a.\n\t* NEWS: Updated.\n\n\tGNU Libtool 2.2.4 was released.\n\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version\n\tnumber to 2.2.4.\n\t* libltdl/Makefile.inc (LTDL_VERSION_INFO): C:R+1:A because the\n\tinterfaces are unchanged, even though we improved the code some\n\tmore.\n\t* NEWS: Updated.\n\n\tMacro file serial updates for next stable release.\n\t* libltdl/m4/libtool.m4, libltdl/m4/ltdl.m4,\n\tlibltdl/m4/ltoptions.m4, libltdl/m4/lt~obsolete.m4: Bump serial\n\tnumbers to account for changes since 2.2.2 release.\n\n\tMake libtoolize tests work with distcheck.\n\t* tests/testsuite.at (_LIBTOOLIZE_TRANSFORM): When $tst_aclocal\n\tis set, transform paths that use it to generic\n\t/usr/local/share/aclocal in time for AT_CHECK comparisons.\n\n2008-05-03  Gary V. Vaughan  <gary@gnu.org>\n\n\tDon't trip over outdated acinclude.m4.\n\t* libtoolize.m4sh (all_pkgconfig_files, all_pkgmacro_files)\n\t(all_pkgltdl_files): New variables listing all files ever\n\tmaintained by any release of libtoolize.\n\t(func_install_pkgconfig_parent, func_install_pkgltdl_files)\n\t(func_install_pkgconfig_subproject, func_install_pkgmacro_parent)\n\t(func_install_pkgmacro_subproject): Carefully clean up any files\n\tthat may have been installed by previous libtoolize releases.\n\t* tests/libtoolize.at: New test for libltdl/acinclude.m4 removal.\n\tReported by Andreas Schwab <schwab@suse.de>.\n\n2008-05-02  Peter O'Gorman  <peter@pogma.com>\n\n\tIt helps to close quotes.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Add closing '.\n\n2008-05-01  Peter O'Gorman  <peter@pogma.com>\n\n\tUse AC_CHECK_TOOL for otool and otool64.\n\t* libltdl/m4/libtool.m4 (_LT_REQUIRED_DARWIN_CHECKS): Check.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Use.\n\tReported by Richard Purdie <rpurdie@rpsys.net>\n\n2008-04-30  Eric Blake  <ebb9@byu.net>\n\n\tSupport cygwin 1.7.0 in loadlibrary loader.\n\t* libltdl/m4/ltdl.m4 (LT_LIB_DLLOAD) <cygwin>: Check for modern\n\tfunction.\n\t* libltdl/loaders/loadlibrary.c (vm_open): Avoid deprecated\n\tcygwin_conv_to_full_win32_path.\n\n2008-04-29  Gary V. Vaughan  <gary@gnu.org>\n\n\tNew libtoolize --no-warn option and LIBTOOLIZE_OPTIONS parsing.\n\t* libltdl/config/general.m4sh (opt_warning): New option.\n\t(func_warning): Only display a warning message if $opt_warning\n\tis true.\n\t* libtoolize.m4sh: Accept options in LIBTOOLIZE_OPTIONS\n\tenvironment variable.\n\t(--no-warn): Parse new option.\n\t(func_serial_update_check, func_keyword_update): Use func_warning.\n\t(func_check_macros): Bail out before style issues nags when\n\t$opt_warning is false.\n\t* doc/libtool.texi (Invoking Libtoolize): Document it.\n\t* tests/libtoolize.at: Test it.\n\t* NEWS: Updated.\n\n\tFix libtoolize test failure with aclocal-1.10.1.\n\t* tests/libtoolize.at\n\t(verbatim aclocal.m4 w/o AC_CONFIG_MACRO_DIR): Force aclocal to\n\tsearch the source tree for latest libtool macros.\n\n2008-04-24  Eric Blake  <ebb9@byu.net>\n\n\tFix bug in 2008-04-21 type improvements.\n\t* libltdl/ltdl.c (load_deplibs): Fix casting bug.\n\n2008-04-23  Michael Haubenwallner  <michael.haubenwallner@salomon.at>\n\n\tUse /nonexistent as destination for files not to be installed.\n\t* tests/darwin.at (darwin fat compile): Fix typo.\n\t* tests/inherited_flags.at (inherited_linker_flags): Change\n\t-rpath to /nonexistent.  This helps to avoid accidentally\n\tpicking up libraries below /usr/local.\n\t* tests/template.at (simple template test): Likewise.  Fixes\n\ttest failure for additional incompatible libstdc++ in\n\t/usr/local.\n\t* tests/testsuite.at (configure_options): Add\n\t--prefix=/nonexistent.\n\n2008-04-23  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh (rerun_aclocal): Remove unused variable.\n\tReported by Olly Betts <olly@survex.com>\n\n2008-04-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/static.at (ccache -all-static): Ignore link warnings.\n\tReport by Gary V. Vaughan.\n\n2008-04-22  Gary V. Vaughan  <gary@gnu.org>\n\n\tLibtoolize now advises AC_CONFIG_MACRO_DIR use where appropriate.\n\t* libtoolize.m4sh (func_check_macros): Always advise use of\n\tAC_CONFIG_MACRO_DIR when not able to copy libtool macros into\n\tthe project tree.\n\t* tests/libtoolize.at: New test for correct diagnosis of mismatch\n\tbetween AC_CONFIG_MACRO_DIR and ACLOCAL_AMFLAGS.\n\tUpdate expected output of other tests.\n\t* NEWS: Updated.\n\n2008-04-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix regression over 1.5.26 with ccache $CC -all-static.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Add\n\t$link_static_flag to compile_command and link_command only\n\tlater, instead of right after a possible compiler wrapper.\n\t* tests/static.at (ccache -all-static): New test.\n\t* THANKS: Update.\n\tReport by Richard Purdie.\n\n2008-04-22  Andreas Schwab  <schwab@suse.de>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix default argument for AC_LIBLTDL_CONVENIENCE.\n\t* libltdl/m4/ltdl.m4 (AC_LIBLTDL_CONVENIENCE): Default argument\n\tto libltdl.\n\t(AC_LIBLTDL_INSTALLABLE): Likewise.\n\t* tests/configure-iface.at (convenience libltdl): New test.\n\n2008-04-21  Gary V. Vaughan  <gary@gnu.org>\n\n\tOnly complain that files are up-to-date with --force.\n\tAs a side effect, this also means that when `aclocal' copies the\n\tlibtool macros into `aclocal.m4' libtoolize complains only about\n\tthe macro files that are missing or not up-to-date.\n\t* libtoolize.m4sh (func_echo_once): New function that prints\n\tthe contents of a named variable only on the first call.\n\t(func_aclocal_update_check): New function that compares serial\n\tnumbers of libtool macros in aclocal.m4 and only diagnoses the\n\tmissing files.\n\t(func_copy, func_copy_cb, func_copy_some_files, func_serial_update)\n\t(func_keyword_update, func_ltmain_update, func_config_update)\n\t(func_install_update): Accept a new argument naming a variable\n\tcontaining a header string to print with func_echo_once iff any\n\tbody text is output by this function.\n\t(func_install_pkgmacro_subproject, func_install_pkgmacro_parent)\n\t(func_install_pkgltdl_files, func_install_pkgconfig_subproject)\n\t(func_install_pkgconfig_parent: Set and pass a suitable\n\theader string variable for the above functions.\n\t(func_serial_update_check): Don't advise rerunning `libtoolize\n\t--force' when aclocal.m4 is not m4_including libtoolize installed\n\tmacro files.\n\t* tests/testsuite.at (_LIBTOOLIZE_TRANSFORM): Transform generic\n\t/usr/local/share/aclocal paths to point into the uninstalled\n\tlibtool macro directory.\n\t* tests/libtoolize.at: Update tests that were checking for old\n\tbehaviour of outputing `file is already up to date' even when\n\t--force was not passed.\n\t* tests/libtoolize.at: New tests to prevent regressions of these\n\tsmarter messages.\n\t* NEWS: Updated.\n\tReported by Olly Betts <olly@survex.com>\n\n\tCapture lt~obsolete.m4 serial number correctly in libtoolize.\n\t* libltdl/m4/lt~obsolete.m4: Add the filename to the #serial\n\tmarker so that libtoolize's serial number checks can find it\n\tin a non-include using aclocal.m4.\n\t* NEWS: Updated.\n\tReported by Olly Betts <olly@survex.com>\n\n\tAllow better compile time type checking for lt_dladvise.\n\t* libltdl/lt__private.h (lt__handle, lt__advise): Typedefs\n\tremoved in favour of...\n\t* libltdl/ltdl.h (lt_dlhandle),\n\tlibltdl/libltdl/lt_dlloader.h (lt_dladvise): ...changing from\n\tvoid* to forward declarations.\n\t* libltdl/loaders/dlopen.c, libltdl/loaders/loadlibrary.c,\n\tlibltdl/lt_dlloader.c, libltdl/ltdl.c: Remove many redundant\n\ttype casts.\n\t* NEWS: Updated.\n\tSuggested by Bob Friesenhahn <bfriesen@simple.dallas.tx.us>\n\n2008-04-21  Peter O'Gorman  <peter@pogma.com>\n\n\tbasename does not take a list of strings.\n\t* libltdl/config/ltmain.m4sh(func_extract_archives): Use sed\n\t$basename.\n\t* tests/darwin.at: New. Check that we can built fat program,\n\tshared library and convenience library.\n\t* Makefile.am: Add test.\n\tReported by LiKai Liu <liulk@cs.bu.edu>\n\n\tUse AC_CHECK_TOOL for lipo too.\n\t* libltdl/m4/libtool.m4 (_LT_REQUIRED_DARWIN_CHECKS): Check.\n\t* libltdl/config/ltmain.m4sh (func_extract_archives): Use.\n\n2008-04-20  Gary V. Vaughan  <gary@gnu.org>\n\n\tFix misleading lt_dlopenadvise documentation.\n\t* doc/libtool.texi (lt_dlopenadvise): The last parameter is of\n\ttype lt_dladvise, not lt_dladvise*.\n\t(my_dlopenext): Correct the example too.\n\t* NEWS: Updated.\n\tReported by Gary Kumfert <kumfert@llnl.gov>\n\n2008-04-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix testsuite cleanup warnings on AIX with NFS.\n\t* tests/testsuite.at [ aix ]: Set file mode creation so that\n\t'others' have no permissions.  Shared libraries are kept in\n\tmemory on AIX after use if they are world-readable, which means\n\ton NFS mounts cleanup of test group directories will fail later.\n\t* THANKS: Update.\n\tReport and analysis by Michael Haubenwallner.\n\n\tFix nonportable use of expr.\n\t* libltdl/config/ltmain.m4sh (func_mode_link) <Transforming\n\tdeplibs into only shared deplibs>: Fix expr portability issues,\n\tnoted on FreeBSD.  While at it, simplify and avoid forking.\n\tReport by Bob Friesenhahn.\n\n\tExploit shell arithmetic expansion and ${#var}.\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_SHELL_FEATURES): Also check\n\tfor arithmetic expansion, and ${#var}.\n\t(_LT_PROG_XSI_SHELLFNS): Define func_arith and func_len\n\taccordingly, falling back on 'expr'.  Note that the argument to\n\tfunc_len may not start with a hyphen.  In the pre-Posix\n\tfallback, take care not to rely on the exit status of the\n\tvariable assignment (not portable), but set the length to\n\t$max_cmd_len instead.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Use func_arith\n\tand func_len throughout for integer arithmetic, fixing\n\tquadratical amount of counting for reloadable object and\n\tpiecewise archive linking.  Change all comparisons with\n\tmax_cmd_len to test for smaller, non-equal length.\n\t* THANKS: Update.\n\tSuggested by Roland Mainz.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_compile): Avoid\n\tredundant removal of old output files before compilation.\n\tDo not remove $obj until we have successfully grabbed the\n\tlockfile (in case the compiler doesn't grok `-c -o'), because\n\tit might be identical to $output_obj.\n\tAt the end of the function, before we remove the lockfile,\n\tupdate $removelist so that if the trap hits after the lockfile\n\thas been removed, we do not accidentally remove $output_obj that\n\tdoes not belong to us.\n\t(func_write_libtool_object): Use $MV instead of mv.\n\n2008-04-18  Andreas Schwab  <schwab@suse.de>\n\n\t* libltdl/m4/ltoptions.m4 (AC_ENABLE_SHARED): Check optional\n\targument.\n\t(AC_ENABLE_STATIC): Likewise.\n\t(AC_ENABLE_FAST_INSTALL): Likewise.\n\n2008-04-16  Eric Blake  <ebb9@byu.net>\n\n\tMake ChangeLog merges easier.\n\t* .gitattributes: New file.\n\t* HACKING: Mention how it helps.\n\n2008-04-15  Peter O'Gorman  <peter@pogma.com>\n\n\tAllow bootstrap from git repository.\n\t* Makefile.am: Pass srcdir as an argument to mkstamp and expect\n\tonly 2 fields in mkstamps output.\n\t* clcommit.m4sh: Ditto.\n\t* configure.ac: Ditto.\n\t* libltdl/config/mkstamp: return a revision and date based on\n\tthe number of lines which look like dates in all the ChangeLog*\n\tfiles in the directory we got as arg 1.\n\n2008-04-11  Eric Blake  <ebb9@byu.net>\n\n\tFix usage of setmode without declaration on cygwin.\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src): Ensure\n\tsetmode has prototype for both mingw and cygwin.\n\n2008-04-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_PROG_XSI_SHELLFNS): Move non-XSI\n\tdefinition of func_dirname_and_basename ...\n\t* libltdl/config/general.m4sh (func_dirname_and_basename):\n\t... here, to use it for the other scripts that use general.m4sh\n\t(and as portable fallback for libtool).  Add marker for early\n\tinsertion of generated shell functions (into libtool, not the\n\tother scripts) here.\n\tUse func_dirname_and_basename to compute progname, progpath.\n\t* libltdl/config/ltmain.m4sh (func_mode_help): Remove marker\n\tfor insertion of generated shell functions.\n\t* tests/sh.test: Adjust function definition test to not match\n\tfunction call.\n\n\t* libltdl/m4/libtool.m4 (_LT_PROG_XSI_SHELLFNS) <func_xform>:\n\tNew function.\n\t* libltdl/config/ltmain.m4sh (func_mode_compile): Use it to\n\tavoid two forks with XSI shells.\n\t* tests/suffix.test: Also test a file with multiple dots.\n\n2008-04-10  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/config/ltmain.m4sh (func_win32_libid,\n\tfunc_generate_dlsyms, func_extract_an_archive,\n\tfunc_extract_archives, func_mode_help): move these so they\n\tappear after func_mode_compile.\n\t* tests/nomode.test: Check that --mode=link --help works.\n\tReported by Josh Triplett <josh@freedesktop.org>\n\n2008-04-07  Gary V. Vaughan  <gary@gnu.arg>\n\n\t* doc/libtool.texi (Libltdl interface): Add missing\n\tdocumentation for lt_dlopenavise.\n\tReported by Anton Erti <anton@mips.complang.tuwien.ac.at>\n\n\t* configure.ac, libltdl/configure.ac (AM_INIT_AUTOMAKE): Use\n\tgnu rather than gnits standards so that version number 2.2.3a\n\tis not rejected!\n\tReported by Olly Betts <olly@survex.com>\n\n2008-04-01  Gary V. Vaughan  <gary@gnu.arg>\n\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version\n\tnumber to 2.2.3a.\n\n\tGNU Libtool 2.2.2 was released.\n\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version\n\tnumber to 2.2.2.\n\t* libltdl/Makefile.in (LTDL_VERSION_INFO): C:R+1:A because the\n\tinterfaces are unchanged, even though we improved the code some\n\tmore.\n\t* NEWS: Updated.\n\n\t* libltdl/m4/libtool.m4, libltdl/m4/ltdl.m4,\n\tlibltdl/m4/ltoptions.m4: Bump serial numbers to account for\n\tchanges since 2.2 release.\n\n2008-03-27  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/m4/libtool.m4 [_LT_REQUIRED_DARWIN_CHECKS]: Fix the\n\ttest for -single_module and log it to config.log.\n\tReported by Torok Edwin and Nigel Home.\n\n2008-03-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tDocument that disable-static plus -all-static is not portable.\n\t* doc/libtool.texi (Link mode): -all-static does not go well\n\twith disable-static on most systems.\n\t* tests/static.at (static linking flags for programs) [!aix]:\n\tWith --disable-static but nonempty link_static_flag, skip the\n\tm-all-static link.  Do not skip it on AIX, as there the\n\tenable_static is self-inflicted, and thus expected to work.\n\t* THANKS: Update.\n\tReport by Nix.\n\n2008-03-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_BUILDDIR): No need to escape\n\tbackticks in argument to AC_MSG_WARN or AC_MSG_ERROR.\n\t* libltdl/m4/ltdl.m4 (_LTDL_INSTALLABLE, LTDL_INIT): Likewise.\n\n2008-03-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (NLS nuisances): Fix quoting of\n\tlocalization variables for shell-active characters.\n\t* tests/localization.at (localized compiler messages): Extend\n\ttest.\n\t* THANKS: Update.\n\tReport by Mike Frysinger.\n\n2008-03-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/defs.m4sh (func_get_config): Build egrep regex to speed\n\tup extracting several variables at once.  Use it to extract all\n\tdefault variables at once.  Also extract build_alias and\n\thost_alias from the libtool script.\n\t(func_configure_nofail): Use build_alias and host_alias for\n\t--build and --host, respectively.  Pass each if nonempty.\n\t* tests/testsuite.at: Pass --build if build_alias is nonemtpy.\n\t* tests/quote.test: Extract ECHO and wl at once.\n\n\t* libltdl/m4/ltoptions.m4 (AC_LIBTOOL_WIN32_DLL): Require\n\tAC_CANONICAL_HOST.\n\t* THANKS: Update.\n\tReport by Jakub Bogusz.\n\n2008-03-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* NEWS: Update.\n\n2008-03-12  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src) [file\n\tscope]: additional #includes and #defines to support...\n\t(func_emit_cwrapperexe_src) [main]: ensure stdout is set to\n\tbinary mode for cygwin|mingw builds. Ensure temporary script\n\tfile is written in binary mode for cygwin|mingw builds.\n\t(func_mode_link) [cygwin|mingw]: cross-build support - only\n\tuse cwrapper to generate shell wrapper if building native;\n\totherwise use func_emit_wrapper()\n\n2008-03-12  Henning Nielsen Lund  <hnl_dk@amigaos.dk>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER)\n\t(_LT_COMPILER_PIC, _LT_LINKER_SHLIBS) [amigaos]: Port to\n\tAmigaOS4 shared libraries on powerpc.\n\t* libltdl/m4/ltdl.m4 (LT_SYS_DLOPEN_DEPLIBS) [amigaos]:\n\tLikewise.\n\t* THANKS, NEWS: Update.\n\n2008-03-09  Bruno Haible  <bruno@clisp.org>\n\tand Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix compiler output to be in the user locale.\n\t* libltdl/config/general.m4sh (func_show_eval_locale): New\n\tfunction, for running commands in the user locale.\n\t* libltdl/config/ltmain.m4sh (func_mode_compile): Use it for\n\tcompiling.\n\t* tests/localization.at (localized compiler messages): New test.\n\t* Makefile.am: Adjust.\n\tReport by Bruno Haible.\n\n2008-03-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix several test failures on Cygwin and MinGW.\n\t* tests/nonrecursive.at: Use -no-undefined for foo.la.\n\t* tests/recursive.at: Likewise.\n\t* tests/subproject.at: Likewise.\n\t* tests/lt_dladvise.at: For systems where undefined symbols are\n\tnot allowed, to not try to load the module libdepend.\n\t[ mingw ]: Add to list of such systems.\n\t* tests/testsuite.at (_LT_AT_TRANSLATE_TEXT_OUTPUT): New macro,\n\tto translate line ending of expout and experr files suitable for\n\thost executables.\n\t(LT_AT_CHECK, LT_AT_NOINST_EXEC_CHECK): Use it.\n\tReport by Bob Friesenhahn.\n\n\tFix installcheck dependencies, fix for --program-transform-name.\n\t* Makefile.am (installcheck-local): Depend upon tests/atconfig\n\tand $(srcdir)/$(TESTSUITE).\n\t* tests/testsuite.at (_LIBTOOLIZE_TRANSFORM): New macro.\n\t(LT_AT_CHECK_LIBTOOLIZE): Use it to transform expout and experr\n\tfiles suitably.\n\t* HACKING: Update.\n\n\tDrop usage of obsolete macros AC_EXEEXT and AC_OBJEXT.\n\t* libltdl/m4/libtool.m4 (_LT_ENABLE_LOCK, _LT_COMPILER_OPTION)\n\t(_LT_COMPILER_C_O, LT_PATH_NM, _LT_CMD_GLOBAL_SYMBOLS, _LT_SETUP):\n\tDrop usage of obsolete AC_OBJEXT and AC_EXEEXT.\n\t* tests/am-subdir.at (C++ subdir-objects): Likewise.\n\n2008-03-07  Peter O'Gorman  <peter@pogma.com>\n\n\t* tests/convenience.at (Java convenience archives): Skip test if\n\tgcj cannot compile a working executable from .java files.\n\tReport by Nelson H. F. Beebe.\n\n\t* libltdl/m4/libtool.m4 (_LT_LANG_GCJ_CONFIG): Need to set LD.\n\tReported by Nelson H. F. Beebe.\n\n2008-03-06  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/m4/libtool.m4 (_LT_PROG_FC): Undo commit - bad idea.\n\n\t* libltdl/m4/libtool.m4 (_LT_PROG_FC): Report FC=no if the FC\n\tcompiler is not a GNU compiler and the CXX compiler is a GNU\n\tcompiler.\n\tReported by Nelson H. F. Beebe.\n\n2008-03-06  Gary V. Vaughan  <gary@gnu.org>\n\n\t* Makefile.maint (TSDEPS_DIST): Removed.  No longer used.\n\t(TSDEPS): libtool.m4 has long since moved to libltdl.\n\t(cvs-dist): Don't put the suffix dot in twice.\n\n2008-03-06  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/convenience.at (Java convenience archives): Skip test if\n\tgcj cannot compile a .java file.\n\tReport by Nelson H. F. Beebe.\n\n2008-03-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_lalib_unsafe_p): redirect\n\tand restore from stdin, not stdout.\n\t* tests/execute-mode.at (execute mode): Adjust test to catch\n\tthis.\n\tReport by Roberto Bagnara.\n\n2008-03-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix libltdl to not skip dlopen on systems with several loaders,\n\tsuch as HP-UX, Cygwin.\n\t* libltdl/slist.c (slist_concat): When appending to the tail\n\tof a list, do not drop items off the beginning of the list.\n\t* NEWS: Update.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_execute): Replace only\n\targuments we have identified as shell or C wrappers.\n\t(func_emit_wrapper): Output error message on stderr.\n\t* tests/execute-mode.at: New file, with --mode=execute tests.\n\t* Makefile.am: Adjust.\n\t* NEWS: Update.\n\tFixes 2.2 regression.  Report by Roberto Bagnara.\n\n\t* libltdl/m4/libtool.m4 (_LT_CONFIG): Drop misleading `GNU'\n\tprefix before the host package name in the \"Generated by\" line\n\tfor the libtool script.\n\t* THANKS: Update.\n\tReports by Peter Rosin and Roberto Bagnara.\n\n\t* doc/libtool.texi (Module loaders for libltdl): Fix typo.\n\n\t* libltdl/loaders/dld_link.c (vl_exit): New function, zero out ...\n\t(vtable): ... this new file static variable split out from ...\n\t(get_vtable): ... here.  Initialize vtable, register vl_exit as\n\tdlloader_exit function.\n\t* libltdl/loaders/dlopen.c: Likewise.\n\t* libltdl/loaders/dyld.c: Likewise.\n\t* libltdl/loaders/load_add_on.c: Likewise.\n\t* libltdl/loaders/loadlibrary.c: Likewise.\n\t* libltdl/loaders/shl_load.c: Likewise.\n\t* libltdl/loaders/preopen.c: Likewise; vl_exit existed here\n\talready.\n\t* tests/lt_dlexit.at (lt_dlexit unloading libs): Update test.\n\t* NEWS: Update.\n\tReport by Andreas Schwab.\n\n2008-03-01  Gary V. Vaughan  <gary@gnu.org>\n\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version\n\tnumber to 2.3a.\n\n\tGNU Libtool 2.2 was released.\n\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version\n\tnumber to 2.2.\n\t* NEWS: Updated.\n\n\t* tests/lt_dladvise.at, tests/lt_dlexit.at,\n\ttests/need_lib_prefix.at: Skip these tests when called from\n\t`make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install'.\n\tThe tests try to link against the dummy installed libltdl.la\n\tfrom .../_inst/lib/libltdl.la, which does not exist when\n\tconfigured with --disable-ltdl-install.\n\n2008-02-29  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/m4/argz.m4 (AC_CHECK_FUNCS): Also use our replacement\n\targz if the system argz_add or argz_count are missing.\n\tReport by Juan Manuel Guerrero <juan.guerrero@gmx.de>.\n\n2008-02-26  Karl Berry  <karl@freefriends.org>\n\n\t* libltdl/argz.c (argz_add, argz_count): New functions.\n\t* libltdl/argz_.h: Declare them.\n\tReport by Juan Manuel Guerrero <juan.guerrero@gmx.de>.\n\n2008-02-20  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/m4/libtool.m4 (_LT_LANG_GCJ_CONFIG): Do not call the\n\t_LT_SYS_DYNAMIC_LINKER macro here.\n\tReported by Mike Frysinger <vapier@gentoo.org>\n\n2008-02-15  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_HIDDEN_LIBDEPS): Fix typo.\n\n2008-02-14  Peter Breitenlohner  <peb@mppmu.mpg.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER): better handling\n\tof predefined values for lt_cv_sys_lib_search_path_spec and\n\tlt_cv_sys_lib_dlsearch_path_spec.\n\n2008-02-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libtoolize.m4sh (func_install_pkgconfig_files): Only call\n\tfunc_install_pkgconfig_parent if $seen_autoconf.\n\t* tests/standalone.at (compiling softlinked libltdl)\n\t(compiling copied libltdl, installable libltdl)\n\t(linking libltdl without autotools): Use checked libtoolize\n\tcalls to catch warnings.\n\n2008-02-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/configure.ac: Bump package version.\n\t* HACKING: Reminder to do it next time, too.\n\n2008-02-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/mdemo/Makefile.am (@LIBLTDL@): Update outdated\n\tdependencies.\n\t($(top_distdir)/libltdl/libtool): Remove.\n\tFixes spurious mdemo-dryrun failure with OpenBSD make.\n\n2008-02-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC) [linux] <ifort>:\n\tTreat like icc and ecc, for fixed `-Wl,' and `-KPIC' settings.\n\n2008-02-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/archive-in-archive.at\n\t(static library contains static library): Test also the actual\n\tbroken link command, and the following install command, as\n\tUnixWare ar rightly refuses to put an archive into an archive.\n\tReport by Tim Rice.\n\n2008-02-06  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/m4/ltoptions.m4 (_LT_SET_OPTIONS): Only set default\n\tLT_INIT values for LT_INIT, not LTDL_INIT.\n\tReported by Jochem Huhmann <joh@revier.com>\n\n2008-02-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/testsuite.at (LT_AT_TAG): For the CXX tag, if $CXX is\n\tg++, check that `g++ -v' works; AC_PROG_CXX may have set that\n\tas default value even if it found no C++ compiler.\n\tReport by Andreas Schwab.\n\n2008-02-02  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/Makefile.inc (EXTRA_DIST): Now that we're not using\n\tAutoconf's AC_SOURCES macro, Automake can't trace our extra\n\tsource files argz, lt__dirent.c and lt__strl.c.  List them\n\tmanually here to make sure they are distributed.\n\t* NEWS: Updated.\n\tReported by Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n2008-02-01  Gary V. Vaughan  <gary@gnu.org>\n\n\t* configure.ac (AC_INIT): Bump version number to 2.1c.\n\n\tGNU Libtool 2.1b was released.\n\n\t* configure.ac (AC_INIT): Bump version number to 2.1b.\n\t* libltdl/Makefile.inc (LTDL_VERSION_INFO): Increment to account\n\tfor new interfaces since the last libltdl update.\n\t* HACKING (Release Procedure): Note that LTDL_VERSION_INFO is now\n\tkept in libltdl/Makefile.inc.\n\n2008-02-01  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/cdemo, tests/depdemo, tests/fcdemo, tests/pdemo,\n\ttests/demo, tests/f77demo, tests/mdemo, tests/tagdemo\n\t(distclean-local): Remove compiler file droppings left by\n\tAutoconf tests that prevent make dist from finishing on\n\tseveral machines including Mac OS 10.5.\n\n2008-02-01  Gary V. Vaughan  <gary@gnu.org>\n\n\tUnfortunately, the autoconf implementation of AC_LIBOBJ and\n\tfriends requires all libobjs to be in the same directory, as\n\tdeclared by AC_CONFIG_LIBOBJ_DIR.  That might prevent using\n\teither recursive or nonrecursive libltdl if the parent project\n\thas libobjs of its own, except that this patch tracks libltdl's\n\tlibobjs in another namespace:\n\n\t* libltdl/m4/ltdl.m4 (_LT_LIBOBJ, _LT_LIBSOURCES): Versions of\n\tAC_LIBOBJ and AC_LIBSOURCES that save missing sources in a\n\tltdl_LIBOBJS automake macro, instead of the global LIBOBJS\n\tautomake macro.  Content of the macros inspired by code from\n\tgnulib-tool.\n\t(_LTDL_MODE_DISPATCH): Initialise lt_libobj_prefix in\n\tnonrecursive mode.\n\t(LTDL_INIT): Push and pop the new definitions around potential\n\tsites that call AC_LIBOBJ.  Also, using lt_libobj_prefix,\n\tinitialise ltdl_LIBOBJS and ltdl_LTLIBOBJS.\n\t* libtoolize.m4sh (func_fixup_Makefile): Substitute ltdl_LIBOBJS\n\tand ltdl_LTLIBOBJS for LIBOBJS and LTLIBOBJS during copying\n\teither Makefile.am or Makefile.inc, depending on ltdl_mode.\n\tReported by Eric Blake <ebb9@byu.net>\n\n2008-01-30  Gary V. Vaughan  <gary@gnu.org>\n\n\tThere are 5 distinct batches of files that libtoolize might\n\tinstall into a project, depending on whether libltdl is\n\tbeing installed in subproject mode, and in that case whether\n\tthe parent project shares the config and macro directories\n\twith the subproject ltdl.  Make a separate function for each\n\tof those 5 batches (4 new functions below, plus the recently\n\tfactored func_install_pkgltdl_files), and make a clearer\n\tdistinction between when each of them is needed:\n\n\t* libtoolize.m4sh (func_install_pkgmacro_subproject):\n\tNew function for installing and reporting on m4 files copied\n\tto a subproject ltdl directory.\n\t(func_install_pkgmacro_parent): Similar new function for m4\n\tfiles copied solely for the use of the parent project,\n\tincluding serial checking.\n\t(func_install_pkgconfig_subproject): New function for\n\tinstalling and reporting on config helper files copied to a\n\tsubproject ltdl directory.\n\t(func_install_pkgconfig_parent): Similar new function for\n\tconfig helper files copied solely for the use of the parent\n\tproject, including serial checking.\n\t(func_install_pkgmacro_files, func_install_pkgconfig_files):\n\tRewritten in terms of the above functions.\n\t* tests/libtoolize.at: Adjust test expout's to match newly\n\tregularized libtoolize output.\n\tMove parent project pkgconfig files to build-aux directory\n\tso that progress messages show an obvious difference to\n\tpkgconfig files installed to subproject `config' directory.\n\t(nonrecursive ltdl with AC_CONFIG_MACRO_DIR): New test.\n\t(diagnose missing LT_CONFIG_LTDL_DIR): New test.\n\t(subproject ltdl with non-shared directories): New test.\n\tReported by Eric Blake <ebb9@byu.net>\n\n2008-01-29  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/m4/libtool.m4 [darwin]: Changes to glob pattern matching\n\tto be safer.\n\n\tSearch the compiler path too.\n\t* libltdl/m4/libtool.m4 (compiler_lib_search_dirs): New variable.\n\t* libltdl/config/ltmain.m4sh: Use it.\n\tReported by Maynard Johnson\n\n2008-01-28  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh (func_check_macros): Correct typo with\n\t'$opt_quiet ||' where '$opt_quiet &&' that was preventing\n\tfunc_check_macros from running!\n\n\t* libtoolize.m4sh: Set opt_ltdl whenever seen_ltdl is set\n\tso that libtoolize behaves as though --ltdl was passed even\n\tif it wasn't as long as LTDL_INIT (or equivalent) was seen\n\tin configure.ac.  Adjust redundant '$opt_ltdl || $seen_ltdl'\n\tto simply '$opt_ltdl'.\n\tReported by Eric Blake <ebb9@byu.net>\n\n\t* libtoolize.m4sh (func_check_macros): Check opt_quiet\n\tin the function itself to simplify calling it.  Also move\n\tthe definition of the function.\n\n\t* libtoolize.m4sh (func_scan_files): Be sure to set the\n\tdefault libltdl mode to 'subproject' when libtoolize is\n\texecuted before configure.ac has been updated.\n\n2008-01-27  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh (func_install_pkgconfig_files)\n\t(func_install_pkgmacro_files, func_install_pkgltdl_files):\n\tFactored out from the 'Main' section of the file.\n\n\t* libtoolize.m4sh (subproject_auxdir, subproject_macrodir):\n\tNew variables to hold the default locations for auxfiles\n\tand macrofiles in a subproject libltdl.\n\t(ac_auxdir, ac_macrodir): New variables to hold the values\n\tpassed by AC_CONFIG_AUX_DIR and AC_CONFIG_MACRO_DIR resp.\n\t(auxdir, macrodir): Adjust to contain the values to be\n\tused by libtoolize at runtime.\n\n\t* libtoolize.m4sh (func_fixup_Makefile)\n\t(func_massage_aclocal_DATA, func_massage_pkgltdl_files)\n\t(func_massage_pkgconfig_files): Add missing $opt_debug.\n\n2008-01-27  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize (func_fixup_Makefile, func_massage_aclocal_DATA)\n\t(func_massage_pkgltdl_files, func_massage_pkgconfig_files):\n\tAdd missing $opt_debug.\n\n2008-01-26  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh (Main): Copy (or link) libltdl sources\n\tinto project tree when LTDL_INIT was seen, whether or not\n\t`--ltdl' is passed.\n\t(func_check_macros): Recommend LTDL_INIT instead of\n\tLT_WITH_LTDL when `--ltdl' is used before configure.ac is\n\tupgraded.\n\t* tests/libtoolize.at: Test that it works.\n\t(_LT_AT_LTDL_SETUP): Factor out some common test setup.\n\tReported by Eric Blake <ebb9@byu.net>\n\n2008-01-24  Peter O'Gorman  <peter@pogma.com>\n\n\t* doc/notes.texi: Fix errors in previous commit.\n\n\t* libltdl/m4/libtool.m4 (sys_lib_search_path_spec,\n\tsys_lib_dlsearch_path_spec): Allow for a cache variable\n\tlt_cv_sys_lib_... to set these at configure time.\n\t* doc/notes.texi: Short note about the above change.\n\n2008-01-24  Eric Blake  <ebb9@byu.net>\n\n\tAdd proper quoting to doc examples.\n\t* doc/libtool.texi: Use m4 quotes where appropriate.\n\t(Test descriptions): Fix truncated sentence.\n\n2008-01-18  Gary V. Vaughan  <gary@gnu.org>\n\n\t* Makefile.am (DISTCLEANFILES): Remove libtool.dvi generated\n\tby 'make dvi'.\n\n2008-01-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libtoolize.m4sh (func_scan_files): Avoid matching our own\n\tmacro code when scanning configure.ac and aclocal.m4.\n\tDon't produce spurious output if AC_PROG_RANLIB is found.\n\t* tests/old-m4-iface.at (AM_PROG_LIBTOOL): Add a (weak) check\n\tthat we don't match our own macro code when searching for user\n\tcode calling us.\n\t* TODO: Updated.\n\n2008-01-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tNew variable LTDLDEPS for use in output_DEPENDENCIES.\n\n\t* libltdl/m4/ltdl.m4 (_LTDL_CONVENIENCE, _LTDL_INSTALLABLE)\n\t(LTDL_INIT): Set and substitute LTDLDEPS according to chosen\n\tmethod.\n\t* tests/configure-iface.at (installable libltdl)\n\t(--with-ltdl-include/lib, --with-included-ltdl): Test it.\n\t* doc/libtool.texi (Distributing libltdl): Document LTDLDEPS.\n\t* NEWS: Updated.\n\tDependency bug exposed by Eric Blake in M4, found by Bob Proulx\n\tbuild daemon.\n\n2008-01-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (Distributing libltdl): Clarify that\n\t`${top_build_prefix}' may be used in place of `${top_builddir}/'.\n\n\t* doc/libtool.texi (Distributing libltdl): Clarify that\n\tLTDL_INIT goes after LT_INIT; also show the latter in the\n\trespective examples.\n\t* tests/subproject.at: Adjust order.\n\n2008-01-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/ltdl.m4 (_LT_ENABLE_INSTALL): Use AM_CONDITIONAL\n\tonly if defined.  Allows to use libltdl without aclocal.\n\n2008-01-16  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/m4/libtool.m4: Set GCC var for every tag, avoids need\n\tto set withGCC var.\n\n2008-01-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* configure.ac: Set libltdl nonrecursive option, to avoid\n\tconfiguring libltdl inside the Libtool package.\n\n2008-01-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tSilence all non-warning output from `libtool --silent'.\n\t* libltdl/config/ltmain.m4sh (func_generate_dlsyms)\n\t(func_extract_archives, func_mode_link): Use func_verbose\n\tinstead of func_echo for all non-warning output.\n\n\t* Makefile.maint (fetch): Update to match upstream git sources.\n\tPull `INSTALL' from gnulib instead of from Autoconf.\n\n\t* doc/notes.texi: Mention AIX binutils deficiency for C++ code.\n\tReport by Rainer Tammer.\n\tSuggest using bash for configure.\n\n\t* libltdl/m4/ltoptions.m4 (AC_ENABLE_SHARED): Fix to use\n\tnew _LT_SET_OPTION semantics.\n\n2008-01-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/ltdl.m4 (_LTDL_SETUP): Define\n\tLTDL_DLOPEN_SELF_WORKS, depending upon lt_cv_dlopen_self.\n\t* libltdl/loaders/dlopen.c (vm_open) [!LTDL_DLOPEN_SELF_WORKS]:\n\tFail for dlopen(NULL), so that the preopen loader is used.  This\n\tfixes mdemo-exec.test failures on AIX where dlopen(NULL)\n\tsucceeds but dlsym resolves no symbol.\n\t* NEWS: Update.\n\tReport by Rainer Tammer.\n\n\t* tests/am-subdir.at: Drop unused variables.\n\t* tests/configure-iface.at: Likewise.\n\t* tests/ctor.at: Likewise.\n\t* tests/early-libtool.at: Likewise.\n\t* tests/lt_dladvise.at: Likewise.\n\t* tests/old-m4-iface.at: Likewise.\n\t* tests/lt_dlexit.at: Likewise.  Also drop unused functions.\n\n\t* tests/old-m4-iface.at (AM_PROG_LIBTOOL): Also copy needed\n\tlt~obsolete.m4.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Fix warning\n\tabout -l and -L for archives and objects as output, to not\n\ttrigger for *.la files.  Non-convenience archives are diagnosed\n\tlater on.\n\n\t* tests/configure-iface.at: Ensure LTDLINCL is expanded\n\tbefore CPPFLAGS, so that even CPPFLAGS=-I/usr/local/include\n\twon't make the tests prefer an installed ltdl.h over the\n\tin-package one.\n\t* tests/lt_dladvise.at, tests/lt_dlexit.at: Likewise.\n\t* tests/need_lib_prefix.at, tests/old-m4-iface.at: Likewise.\n\tReport by Bob Friesenhahn.\n\n2008-01-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS) <exclude_expsyms>:\n\tAlso exclude `_GLOBAL__F[ID]_.*'.  Also set for the C++ tag.\n\tFixes esp. demo/helldl build failure with GCC on AIX.\n\tReport by Rainer Tammer.\n\n2008-01-11  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/m4/libtool.m4 [darwin]: Reorganize darwin support, use\n\tdsymutil if it is available so that debugging is possible, check\n\tfor nmedit and dsymutil with AC_CHECK_TOOL, use the linker flag\n\t-exported_symbols_list in preference to nmedit if it is available.\n\tDrop support for xlc, it is probably broken.\n\t* tests/template.at [darwin]: Skip this test, I can not find a way\n\tto make it work on darwin9 with Xcode-3.0.\n\t* NEWS: Note the dropping of xlc support.\n\n2008-01-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (LT_INIT): m4_require, not AC_REQUIRE\n\t_LT_CHECK_BUILDDIR, as it's m4_defun'ed, not AC_DEFUN'ed.\n\tReport by Peter O'Gorman.\n\n\t* libltdl/m4/ltdl.m4 (_LTDL_INSTALLABLE): Restore correct\n\t_LT_BUILD_PREFIX-using code.\n\n2008-01-08  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/recursive.at: Remove bogus --debug option.\n\tReported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* tests/configure-iface.at: Build libltdl in a subdir so that\n\tit can be easily removed without trying to remove config.log\n\ton windows (which can't delete a file until it is closed).\n\tReported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/ltdl.m4 (LTDL_INSTALLABLE): Use _LT_BUILD_PREFIX\n\tinstead of ${top_builddir} for Autoconf-2.62.\n\tReported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/ltdl.m4 (_LT_CONFIG_LTDL_DIR): Correct closing\n\tcomment.\n\tReported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* NEWS: Grammar nit.\n\n\t* tests/configure-iface.at, tests/nonrecursive.at,\n\ttests/recursive.at, tests/subproject.at (_LTDL_SETUP):\n\tRenamed to _LT_AT_LTDL_SETUP to avoid a nameclash with\n\tlibltdl/m4/ltoptions.m4:_LTDL_SETUP from yesterday's patch.\n\tReported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n2008-01-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/runpath-in-lalib.at (Runpath in libtool library files):\n\tCompile program file without libtool.\n\tReport by Rainer Tammer.\n\n2008-01-07  Rainer Tammer  <tammer@tammer.net>  (tiny change)\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tSupport AIX 6.1.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER)\n\t(_LT_CHECK_MAGIC_METHOD, _LT_COMPILER_PIC, _LT_LINKER_SHLIBS)\n\t(_LT_LANG_C_CONFIG, _LT_LANG_CXX_CONFIG, _LT_LANG_F77_CONFIG)\n\t(_LT_LANG_FC_CONFIG): Adjust case patterns to match AIX 6\n\tthrough 9 as well.\n\t* libltdl/m4/ltdl.m4 (LT_SYS_DLOPEN_DEPLIBS): Likewise.\n\t* NEWS: Update.\n\t* THANKS: Update.\n\n2008-01-07  Gary V. Vaughan  <gary@gnu.org>\n\n\tMove libltdl build mode options from LT_CONFIG_LTDL_DIR to\n\tLTDL_INIT.  Accept (optional) new 'convenience' and 'installable'\n\toptions in lieu of LTDL_CONVENIENCE and LTDL_INSTALL macros. And\n\talso, implement --with-included-ltdl, --with-ltdl-lib and\n\t--with-ltdl-include configure-time options:\n\n\t* libltdl/m4/ltoptions.m4: Associate existing option settings with\n\tLT_INIT.\n\t(LT_OPTION_DEFINE): Associate options 'nonrecursive', 'recursive',\n\t'subproject', 'installable' and 'convenience' with LTDL_INIT.\n\t(_LT_MANGLE_OPTION, _LT_SET_OPTION, _LT_IF_OPTION)\n\t(_LT_UNLESS_OPTIONS, _LT_SET_OPTIONS): Add MACRO-NAME argument to\n\tsupport options to named macros instead of hardcoding only LT_INIT\n\toptions.\n\t* libltdl/m4/ltdl.m4 (_LTDL_CONVENIENCE): Factor common code from\n\tLTDL_CONVENIENCE and LTDL_INIT([convenience]).\n\t(_LTDL_INSTALLABLE): Factor out common code from LTDL_INSTALLABLE\n\tand LTDL_INIT([installable]).\n\t(_LTDL_SETUP): Renamed from LTDL_INIT.  Support new configure-time\n\toptions: --with-included-ltdl, --with-ltdl-lib,\n\t--with-ltdl-include.\n\t(LTDL_CONVENIENCE, LTDL_INSTALLABLE): Adjust.\n\t(LT_WITH_LTDL): Removed.\n\t(LTDL_INIT): Parse caller options.\n\t* libltdl/m4/libtool.m4 (LT_INIT): Declare that this macro must be\n\texpanded before LTDL_INIT, and be sure to parse caller options.\n\t* configure.ac: Call directly into internal _LTDL_SETUP macro.\n\t* libtoolize.m4sh (func_scan_files): Ltdl mode argument moved from\n\tLT_CONFIG_LTDL_DIR to LTDL_INIT.\n\t* tests/nonrecursive.at, tests/recursive.at: Use new interfaces.\n\t* tests/configure-iface.at: Test it.\n\t* Makefile.am (TESTSUITE_AT): Add configure-iface.at.\n\t* doc/libtool.texi (Distributing libltdl): Document improved\n\tLTDL_INIT interfaces.\n\t* NEWS: Updated.\n\n2008-01-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): When creating\n\treloadable object files, avoid issuing plain `rm -f' without\n\tfurther arguments, even if the line length limit is ridiculously\n\tlow as in the `Run tests with low max_cmd_len' test.  This\n\tfailure is exposed on NetBSD.\n\tReport by Patrick Welche.\n\n\t* Makefile.am (EXTRA_DIST): Add ChangeLog.2007.\n\t* ChangeLog.2007: New, rotated, from...\n\t* ChangeLog: ...here.\n\t* NEWS, README, README.alpha, Makefile.am, libtoolize.m4sh,\n\tlibltdl/config/getopt.m4sh, libltdl/config/ltmain.m4sh,\n\tlibltdl/m4/libtool.m4: Bump copyright years.\n\nContinued in ChangeLog.2007\n-- \n  Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n  2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n\n  This file is part of GNU Libtool.\n\nCopying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout warranty of any kind.\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/ChangeLog.2006": "2006-12-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/link-order2.at: Define our override `sin' function with\n\tC binding even if $CC is a C++ compiler.  Skip the test with g++\n\tas its command line driver reorders `-lm'.\n\t* tests/search-path.at: Declare `inflate' with C binding.\n\t* tests/stresstest.at: Avoid unused variable warnings.\n\n2006-11-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/link-order2.at: Simplify logic to be a bit more self\n\tdocumenting.  Suggested by Gary V. Vaughan.\n\n2006-10-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/link-order2.at: Add missing $bindir setting.  Prevent\n\tcompiler optimization of sqrt call.  Fix logic inversion and\n\tadd some comments about this stunt.  Add a test with reversed\n\tlibrary link order that should fail if the system has a libm.\n\tReport by Patrick Welche.\n\n2006-10-26  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAssume presence of a config header in all files, to provoke\n\ttest failures on all systems.\n\t* libltdl/lt__alloc.c: Likewise.\n\t* libltdl/libltdl/lt__dirent.h: Likewise.\n\t* libltdl/libltdl/lt__glibc.h: Likewise.\n\t* libltdl/libltdl/lt__private.h: Likewise.\n\t* libltdl/libltdl/lt__strl.h: Likewise.\n\t* tests/recursive.at: Use AC_CONFIG_HEADERS.\n\t* tests/nonrecursive.at: Likewise.  Invoke autoheader.\n\t* HACKING: Adjust.\n\tReport by Patrick Welche.\n\n2006-10-24  Paul Eggert  <eggert@cs.ucla.edu>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (Distributing libltdl): In recursive and\n\tnonrecursive mode, a config header is now required.\n\t* libltdl/argz.c: Remove check for HAVE_CONFIG_H, to conform\n\tto gnulib's policy of including config.h unconditionally.\n\n2006-10-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/link-order2.at: New test to show one case where ordering\n\tof depdepls on the command line matters.\n\t* Makefile.am: Adjust.\n\n\t* tests/tagtrace.test: SKIP if `autoconf --trace' exits 63 or 1,\n\tfor various possible (valid) error cases.  Also output stderr,\n\tto help with analysis.\n\n\t* NEWS: Account for recent multilib fix.\n\t* tests/search-path.at: New test, to provide at least a weak\n\ttest.\n\t* Makefile.am: Update.\n\n\t* libtoolize.m4sh (func_fixup_Makefile): Fix missing\n\tsubstitution for nonrecursive mode.  Remove otherwise-empty\n\tcontinuation lines in the output file.\n\tReport by Bob Friesenhahn.\n\n2006-10-22  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/config/ltmain.m4sh: Add -F* to flags that are passed\n\tto the linker.\n\tReported by SIGOURE Benoit <sigoure.benoit@lrde.epita.fr>\n\n2006-10-19  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER): Improve\n\tmultilib support.\n\tReported by Kate Minola <kate01123@gmail.com> and others.\n\n2006-10-13  Eric Blake  <ebb9@byu.net>\n\n\t* libltdl/ltdl.c (load_deplibs): Avoid memory leak on failure.\n\t(unload_deplibs): Avoid memory leak on cleanup.\n\n2006-09-20  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (func_mode_compile): Accept files with\n\textension `.f9?'.\n\t* tests/suffix.test: Test `f95'.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_uninstall): Use\n\t`func_source' consistently.\n\n2006-09-18  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [ linux ]\n\t[k*bsd*-gnu ]: Fix brown paper bag: save and restore `libdir'.\n\n2006-09-17  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* tests/duplicate_deps.at: New file.  Test circular depending\n\tconvenience archives (currently failing).\n\t* Makefile.am: Update.\n\tReport by Stefan Traby <stefan@hello-penguin.com>.\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG)\n\t[ openbsd ]: Set `hardcode_direct_absolute', to prefer rpath\n\tover putting absolute file names in NEEDED entries.\n\t* NEWS: Update.\n\tReported by Jake Meuser and others.\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [ linux ]\n\t[ k*bsd*-gnu ]: Test if ld sets DT_RUNPATH; in that case, set\n\tshlib_overrides_runpath to `yes'.  Fixes test failure of new\n\ttest on Gentoo GNU/Linux.\n\n\t* tests/shlibpath.at: New file, with...\n\t(shlibpath_overrides_runpath): ...new test.\n\t* Makefile.am: Update.\n\n2006-09-12  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* tests/destdir.at: New file.\n\t* Makefile.am: Adjust.\n\n2006-09-11  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* tests/inherited_flags.at: Drop `${parameter}' for `$parameter'\n\twhere appropriate, for improved `testsuite -x' output.\n\n2006-09-04  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/ltdl.c: Move LT__UNUSED before parameter name, for g++\n\t3.2.3 (on MinGW).\n\t* libltdl/loaders/dld_link.c, libltdl/loaders/dlopen.c,\n\tlibltdl/loaders/load_add_on.c, libltdl/loaders/loadlibrary.c,\n\tlibltdl/loaders/preopen.c, libltdl/loaders/shl_load.c: Likewise.\n\n2006-09-04  George Bosilca <bosilca@cs.utk.edu>\n\tand Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\tMake libltdl work when compiled with a C++ compiler.\n\n\t* libltdl/lt__alloc.c, libltdl/lt_dlloader.c, libltdl/ltdl.c,\n\tlibltdl/slist.c, libltdl/libltdl/lt__alloc.h,\n\tlibltdl/libltdl/lt_error.h, libltdl/libltdl/slist.h,\n\tlibltdl/loaders/dld_link.c, libltdl/loaders/dlopen.c,\n\tlibltdl/loaders/dyld.c, libltdl/loaders/load_add_on.c,\n\tlibltdl/loaders/loadlibrary.c, libltdl/loaders/preopen.c,\n\tlibltdl/loaders/shl_load.c, tests/stresstest.at,\n\ttests/testsuite.at, tests/f77demo/foo.h, tests/fcdemo/foo.h,\n\ttests/mdemo/foo.h, tests/mdemo/foo1.c, tests/mdemo/foo2.c,\n\ttests/mdemo/main.c: Allow sources to be compiled by a C++\n\tcompiler: Cast appropriately, add C linkage for `get_vtable'\n\tfunctions, do not use C++ keyword `delete'.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): In the dlsym\n\tfile, define a type for the symbol list, and declare the list\n\t`extern', so that it is extern even if compiled by a C++\n\tcompiler.  The type definition helps avoid a compiler warning\n\tagainst anonymous extern struct.\n\t* libltdl/libltdl/lt_system.h: Add `extern' to `LT_SCOPE' for\n\tthe same reason.\n\n\t* libltdl/argz_.h: It's __cplusplus, not _cplusplus.\n\t* libltdl/libltdl/slist.h: Likewise.\n\n\t* libltdl/libltdl/lt__glibc.h: Wrap included argz.h in\n\t`extern \"C\"', for broken headers on Cygwin.\n\n2006-09-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/testsuite.at: Test `unset' on a set variable; older\n\tbash versions return 1 if the variable was not set.\n\n\t* tests/am-subdir.at, tests/early-libtool.at: Fix the LF vs.\n\tCRLF related failures on MinGW by grepping for good output\n\tinstead of using AT_CHECK's `expout'.\n\n2006-09-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tDrop K&R support from testsuite in favor of C89.\n\n\t* tests/duplicate_members.at: provide declarations of used\n\tfunctions.\n\t* tests/testsuite.at: Drop unneeded arguments.\n\t* tests/cdemo/main.c: Assume C89.\n\t* tests/demo/dlmain.c: Likewise.\n\t* tests/demo/main.c: Likewise.\n\t* tests/depdemo/main.c: Likewise.\n\t* tests/depdemo/l1/l1.c: Likewise.\n\t* tests/depdemo/l2/l2.c: Likewise.\n\t* tests/depdemo/l3/l3.c: Likewise.\n\t* tests/depdemo/l4/l4.c: Likewise.\n\t* tests/f77demo/cprogram.c: Likewise.\n\t* tests/fcdemo/cprogram.c: Likewise.\n\t* tests/mdemo/mlib.c: Likewise.\n\t* tests/mdemo2/main.c: Likewise.\n\t* tests/pdemo/longer_file_name_dlmain.c: Likewise.\n\t* tests/pdemo/longer_file_name_main.c: Likewise.\n\t* tests/fcdemo/fooc.c: Reformat.\n\t* tests/mdemo/sub.c: Likewise.\n\n2006-08-31  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/mdemo/main.c: Fix bogus line in last patch.\n\n2006-08-31  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAvoid mixing functions and data pointers in callback functions.\n\n\t* libltdl/ltdl.c (file_worker_func): New type.\n\t(lt_dlforeachfile): Instead of passing a function pointer as a\n\tdata pointer, pass a pointer to a file_worker_func pointer.\n\t(foreach_callback_func): Adjust.\n\t* tests/mdemo/main.c: Assume C89. Exercise lt_dlforeachfile.\n\t(callback, try_iterate, my_dirname): New functions.\n\t* tests/mdemo-exec.test: Check for its output.\n\n2006-08-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/libltdl/lt__private.h (__attribute__, LT__UNUSED):\n\tNew macros.\n\t* libltdl/loaders/dld_link.c: Use LT__UNUSED where\n\tappropriate.\n\t* libltdl/loaders/dlopen.c, libltdl/loaders/load_add_on.c,\n\tlibltdl/loaders/loadlibrary.c, libltdl/loaders/preopen.c,\n\tlibltdl/loaders/shl_load.c: Likewise.\n\t* libltdl/ltdl.c: Likewise.\n\t(find_file_callback): Fix declaration names to match definition.\n\t(load_deplibs) [!LTDL_DLOPEN_DEPLIBS]: Use separate definition\n\tfor less preprocessor clutter.\n\n\t* Makefile.am (check-local, installcheck-local): Use\n\t`TESTSUITEFLAGS' rather than `TESTSUITE_FLAGS', like Autoconf.\n\t* HACKING, README, README.alpha: All uses changed.\n\n2006-08-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/argz.c: Use `#ifdef HAVE_CONFIG_H', to facilitate code\n\tsharing with gnulib.  Report by Eric Blake.\n\t* libltdl/lt__alloc.c, libltdl/libltdl/lt__dirent.h,\n\tlibltdl/libltdl/lt__glibc.h, libltdl/libltdl/lt__private.h,\n\tlibltdl/libltdl/lt__strl.h: Likewise.\n\t* HACKING: Update.\n\n2006-08-25  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Pass through\n\t`--coverage' and `-pg', for GCC.  Report by Rainer Keller\n\t<keller@hlrs.de> and Tor Lillqvist <tml@iki.fi>.\n\n2006-08-25  Kurt Roeckx <kurt@roeckx.be>,\n\t    Aurelien Jarno <aurel32@debian.org>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER)\n\t(_LT_CHECK_MAGIC_METHOD, _LT_COMPILER_PIC, _LT_LINKER_SHLIBS)\n\t(_LT_LANG_CXX_CONFIG) [k*bsd*-gnu]: kfreebsd*-gnu and\n\tknetbsd*-gnu behave like linux-gnu.\n\t* libltdl/m4/ltdl.m4 (LT_SYS_DLOPEN_DEPLIBS): Likewise.\n\t* libltdl/m4/libtool.m4 (_LT_ENABLE_LOCK)\n\t[x86_64-*kfreebsd*-gnu]: Add 32/64 bit bi-arch support.\n\t* NEWS: Update.\n\n2006-08-25  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_MAGIC_METHOD) [ mingw,pw32 ]:\n\tIf `file' is present, use `func_win32_libid' rather than\n\t`objdump -f', to facilitate cross-compilation.\n\tReported by Pierre Ossman <ossman@cendio.se>.\n\n2006-08-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): In GNU ld script,\n\tdo not quote object file names, for Intel icc 9.0 IPO link.\n\n2006-08-22  Eric Blake  <ebb9@byu.net>\n\n\t* libltdl/m4/ltdl.m4 (LTDL_INIT): Avoid macros marked obsolete in\n\tlatest autoconf.\n\t* libltdl/m4/libtool.m4 (_lt_cv_sys_global_symbol_pipe): Work in\n\tspite of -Wmissing-prototypes.\n\t* libltdl/libltdl/lt__dirent.h: Rewrite to accomodate loss of\n\tAC_HEADER_DIRENT.\n\n\t* libltdl/m4/libtool.m4: Avoid space-tab.\n\n2006-08-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_execute): Also search\n\tthe directory above `$objdir' for the argument of \"-dlopen\", as\n\tmentioned in the error message.\n\n2006-08-03  Ralf Menzel  <menzel@ls6.cs.uni-dortmund.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_HIDDEN_LIBDEPS): Fix issues\n\twith previous patch. for ... do' line is superflous. Need\n\t_LT_TAGVAR not _LT_AC_TAGVAR, should be for both linux and\n\tsolaris with Sun compiler.\n\n2006-08-01  Albert Chin <china@thewrittenword.com>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_HIDDEN_LIBDEPS) [ solaris ]:\n\tDon't set $postdeps to \"-lCstd -lCrun\" if\n\t\"-library=stlport4\" set in CXXFLAGS as stlport4 C++\n\tlibrary incompatible with Cstd C++ library. Use\n\t'-library=Cstd -library=Crun' instead of '-lCstd -lCrun'.\n\n2006-07-28  Eric Blake  <ebb9@byu.net>\n\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_MAGIC_METHOD, LT_OUTPUT):\n\ts/recognise/recognize/.\n\n2006-07-22  Eric Blake  <ebb9@byu.net>\n\n\t* libltdl/ltdl.c (loader_init_callback) [HAVE_LIBDLLOADER]:\n\tProtect definition to avoid compiler warnings about unused\n\tfunction.\n\n2006-07-21  Eric Blake  <ebb9@byu.net>\n\n\t* libltdl/m4/ltdl.m4 (LT_LIB_DLLOAD): Search for dlopen without\n\tdepending on -ldl, required by cygwin 1.5.20.\n\n2006-06-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_BOILERPLATE)\n\t( _LT_LINKER_BOILERPLATE): Rewrite to not use unchecked\n\t`printf', for old systems like SunOS 4.1.\n\t(_LT_COMPILER_OPTION, _LT_LINKER_OPTION)\n\t(_LT_COMPILER_C_O, _LT_LINKER_SHLIBS): Likewise.\n\t(_LT_LANG_C_CONFIG): Adjust: use literal newlines in\n\t`lt_simple_compile_test_code' and `lt_simple_link_test_code'.\n\t(_LT_LANG_CXX_CONFIG, _LT_LANG_F77_CONFIG, _LT_LANG_FC_CONFIG)\n\t(_LT_LANG_GCJ_CONFIG, _LT_LANG_RC_CONFIG): Likewise.\n\tBug report by Bruce Becker and Mark Andrews.\n\n2006-06-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix the bugs where libtoolize needs to use `dir/file' instead of\n\t`./dir/file', where ltdldir is `.', so that libtoolize correctly\n\tchecks for (and suggests) `config' and `m4' instead of\n\t`./config' and `./m4' as auxiliary resp. macro directories.\n\tThe change is necessary for unambiguous naming, the chosen way\n\tplays better with non-GNU make in VPATH builds.\n\n\t* libtoolize.m4sh (ltdlprefix): New variable, to use as prefix\n\tinstead of `$ltdldir/'.\n\t(func_check_macros): Use it.  Bug report by Eric Blake.\n\n2006-06-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix several libtoolize-related bugs:\n\t- Do not symlink aclocal.m4, to work around a bug in aclocal\n\toverwriting the linked-to file instead of removing the symlink.\n\t- Have `libtoolize --copy' cause current time stamps, so that\n\tdependents will be rebuilt; for this, install files in order.\n\t- Fix list of distribution files for (non)recursive libltdl.\n\t- Fix some failure cases.\n\n\t* libtoolize.m4sh (func_copy_cb):\n\tIf `$opt_link', still copy `aclocal.m4', so a subsequent\n\t`aclocal' will not overwrite the symlink target.\n\tIn `--copy' mode, do `cp -p' and `touch' for each file, so\n\ttimestamps are updated but permissions preserved.\n\t(main): Reorder installing of files to match logical order\n\tand timestamp requirements.\n\t(func_fixup_Makefile_inc): Renamed to\n\t(func_fixup_Makefile): this.  Add sed scriptlet to remove\n\tnon-existent files from EXTRA_DIST, for either nonrecursive\n\tor recursive mode.\n\t(main): call it to mangle also in recursive mode.\n\t* tests/libtoolize.at (expout): Adjusted.\n\t* tests/testsuite.at (tst_dist): Default to `dist'.\n\n2006-06-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix libltdl to always have all generated files up to date.\n\n\t* Makefile.am (all-local): Depend on all generated files in\n\tlibltdl, namely...\n\t(libltdl/aclocal.m4, libltdl/configure, libltdl/config-h.in):\n\t...these.  List explicitly, including dependencies and\n\trebuilding rules, using...\n\t(sub_aclocal_m4_deps, sub_configure_deps): ...these new\n\tvariables.\n\tReport by Dan Lacher <Dan.Lacher@Sun.Com>.\n\n2006-06-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (install-data-local): Do not use $(INSTALL_DATA)\n\tfrom another directory: it may use a relative path to\n\t`install-sh'.\n\tBug report by Dan Lacher <Daniel.Lacher@Sun.COM>.\n\n2006-06-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Honor `-threads',\n\tsimilar to `-mt'.\n\tReport by Eric Paire <eric.paire@st.com>.\n\n2006-06-01  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC) [ cygwin ]:\n\tdefine DLL_EXPORT for PIC objects on cygwin.\n\n2006-05-24  Albert Chin  <china@thewrittenword.com>\n\n\t* libltdl/m4/libtool.m4 (_LT_LANG_CXX_CONFIG)\n\t[ aix4*, aix5*, hpux10*, hpux11* ]: Set hardcode_direct_absolute\n\tfor CXX tag too!\n\n2006-05-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link, shell wrapper):\n\tDo not put `\"$@\"' in argument to $ECHO.\n\n2006-05-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4: Bump serial, necessary because of\n\t_LT_CHECK_SHELL_FEATURES changes.\n\n2006-05-18  Albert Chin-A-Young <china@thewrittenword.com>\n\n\t* tests/early-libtool.at: Pass $CPPFLAGS and $CFLAGS to\n\tcompiler when compiling for extra flags that might be\n\tneeded for ANSI-compliance, 64-bit, etc. The environment\n\twe compile with should match the environment libtool was\n\tcompiled with.\n\n2006-05-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix mode=compile time regression of CVS HEAD over branch-1-5.\n\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_XSI_SHELL): Rename to...\n\t(_LT_CHECK_SHELL_FEATURES): ...this.\n\t(_LT_SETUP): Adjust caller.\n\t(_LT_CHECK_XSI_SHELL): New libtool variables `lt_unset',\n\t`SP2NL', `NL2SP', to contain results from tests for unset,\n\ttaken from AS_BOURNE_COMPATIBLE, and ASCII vs EBCDIC, taken...\n\t* libltdl/config/general.m4sh: ...from here, and used...\n\t* libltdl/config/ltmain.m4sh: ...here everywhere now.\n\t* (AS_SHELL_SANITIZE): Replace by faster, actually necessary\n\tpart of its expansion, taken from current Autoconf CVS.  Do not\n\tsave and set all locale variables any more, but only LANG,\n\tLC_ALL, LC_CTYPE, LC_COLLATE, LC_MESSAGES.\n\t(func_mode_execute): Adjust.\n\t* libltdl/m4/libtool.m4 (_LT_CONFIG): No need to unset CDPATH\n\there any more.\n\t* libtoolize.m4sh: Compute `SP2NL' and `NL2SP' here, too.\n\n2006-05-17  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/config/ltmain.m4sh, libltdl/m4/libtool.m4\n\t(_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG, _LT_LANG_F77_CONFIG,\n\t_LT_LANG_FC_CONFIG), tests/link-order.at\n\t[ aix4*, aix5*, hpux10*, hpux11* ]: rename\n\thardcode_direct_static to hardcode_direct_absolute.\n\t* doc/libtool.texi (libtool script contents): Adjust.\n\n\t* libltdl/ltdl.c (lt_dlhandle_fetch): Arguments to\n\tlt_dlhandle_iterate were in the wrong order.\n\n2006-05-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_OPTION): Require\n\t_LT_DECL_SED.\n\t(_LT_CMD_GLOBAL_SYMBOLS, _LT_LINKER_SHLIBS): Likewise.\n\t* libltdl/m4/ltdl.m4 (LTDL_INIT): Likewise.\n\t(_LT_DECL_SED): Set $Xsed here, using $SED.  Moved from...\n\t(_LT_SETUP): ...here.\n\tReport by Eric Blake.\n\n2006-05-17  Gary V. Vaughan  <gary@gnu.org>\n\n\t* doc/libtool.texi (libtool script contents): Document new\n\thardcode_direct_static variable.\n\n\t* tests/link-order.at: Be careful about usage of shrext_cmds.\n\n\t* libltdl/m4/libtool.m4 (LT_AC_PROG_SED):  Declarations for\n\tcompatibility with old versions of libtool, and old versions\n\tof aclocal.\n\n2006-05-17  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* libltdl/config/ltmain.m4sh, libltdl/m4/libtool.m4\n\t(_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG, _LT_LANG_F77_CONFIG,\n\t_LT_LANG_FC_CONFIG) [ aix4*, aix5*, hpux10*, hpux11* ]:\n\tIntroduce a new variable, hardcode_direct_static, which\n\twould ignore hardcode_direct=yes if the result would create a\n\tstatic library dependency. Static library dependencies are\n\timmune to $shlibpath_var.\n\t* tests/link-order.at: Take hardcode_direct and\n\thardcode_direct_static into consideration when testing\n\tlink order.\n\n2006-05-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tEliminate quadratic scaling in argument parsing loop, for\n\tshells that understand `var+=value', such as Bash-3.1, or Zsh.\n\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_XSI_SHELL): Test whether\n\tthe shell understands `var+=value'.\n\t(_LT_PROG_XSI_SHELLFNS): Define `func_append' based on this.\n\t* config/ltmain.m4sh (func_mode_link): Use `func_append' for\n\tcompile_command, finalize_command, libtool_args, libobjs,\n\tnon_pic_objects.\n\n2006-05-15  Bruno Haible  <bruno@clisp.org>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC, _LT_LINKER_SHLIBS)\n\t(_LT_LANG_CXX_CONFIG, _LT_SYS_HIDDEN_LIBDEPS) [ linux ]:\n\tAdd support for Sun C 5.9, Sun C++ 5.9, and Sun Fortran 8.3 on\n\tGNU/Linux.\n\t* NEWS: Update.\n\n2006-05-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (check-local): Move `$(TESTS_ENVIRONMENT)' and\n\t`$(BUILDCHECK_ENVIRONMENT)' to be arguments of `testsuite', so\n\tthat reruns will remember it; set enviroment variable\n\t`CONFIG_SHELL' so the suite will know which shell it was started\n\twith.\n\t(installcheck-local): Likewise, for `$(TESTS_ENVIRONMENT)' and\n\t`$(INSTALLCHECK_ENVIRONMENT)'.\n\t* tests/testsuite.at (LT_AT_TAG): Do not set the compiler\n\tvariable here.\n\n2006-05-14  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG)\n\t[ aix ]: $hardcode_direct is set twice.\n\n2005-05-14  John Bowler  <jbowler@acm.org>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): For version_type\n\t`none', we still need to set `current', `age', and `revision',\n\tso that our checks don't barf.  The values won't be used later.\n\tApparently reported by several people, several times, for BeOS.\n\t* NEWS, THANKS: Update.\n\n2006-05-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/fail.at: Use \"test -x\" if available, for testing of\n\texecutables; code modified from Autoconf's AS_EXECUTABLE_P.\n\tReported by Albert Chin <china@thewrittenword.com>.\n\n2006-04-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_write_libtool_object):\n\tNew function, factored out from..\n\t(func_mode_compile): .. here.  Call it to generate the libtool\n\tobject file (the `.lo' file) in one step.\n\n2006-04-03  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/loaders/preopen.c: Don't allow lt_dlopen if the\n\tmodule has no symbols.\n\n2006-03-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [ linux ]:\n\tAvoid warning when \"parsing\" `/etc/ld.so.conf' and empty\n\t`/etc/ld.so.conf.d'.\n\tReported by Orion Poplawski <orion@cora.nwra.com>.\n\n2006-03-27  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* bootstrap: Actually use the correct version of the last patch.\n\n2006-03-25  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* bootstrap: Enable `WORKING_LIBOBJ_SUPPORT' if we detect\n\tAutoconf-2.60+ and Automake-1.10+, or CVS versions.\n\n\t* libltdl/m4/argz.m4 (gl_FUNC_ARGZ): Sync with gnulib:  If we\n\tdefine `error_t', also define `__error_t_defined', so argp.h\n\twill not typedef the former.\n\n2006-03-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/ltdl.m4 (LT_SYS_DLOPEN_DEPLIBS) [ freebsd ]\n\t[ dragonfly ]: Set libltdl_cv_sys_dlopen_deplibs to yes.\n\tFixes excessive lt_dlopen times on these systems.\n\t* NEWS, THANKS: Update.\n\tBug reported by Peter Jeremy <peterjeremy@optushome.com.au>,\n\tpatch by Joerg Sonnenberger <joerg@netbsd.org>.\n\n2006-03-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/static.at: New tests for comprehensive test exposure of\n\tall current and proposed static linking flags for programs.\n\t* Makefile.am: Updated.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link)\n\t< -static-libtool-libs >: New option.\n\t* doc/libtool.texi (Link mode, Distributing libltdl):\n\tDocument it.\n\tSuggested by Gary Kumfert <kumfert@llnl.gov>.\n\n2006-03-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/tagdemo/foo.cpp, tests/tagdemo/main.cpp [ hpux ] <aCC>:\n\tThe HPPA C++ compiler has namespace support but provides no\n\t`std' namespace; just provide it with a dummy.\n\n\t* libltdl/m4/libtool.m4 (AC_PROG_SED): Do not forget to reset\n\tIFS even in case of empty `$PATH'.\n\n2006-03-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Comment out the\n\tcode to remove uninstalled paths, as it is wrong here.  Change\n\tthe wrong shell quoting that kept it from \"working\" before.\n\t* THANKS: Updated.\n\n\t* libltdl/m4/libtool.m4 (AC_LIBTOOL_SYS_DYNAMIC_LINKER)\n\t[ freebsd, dragonfly ]: Fix 1.5.22 regression caused by too\n\tstrict $host_os match that stopped DragonFly from working.\n\t* THANKS: Updated.\n\tReported by Jeremy C. Reed <reed@reedmedia.net>,\n\tpatch by Todd Vierling <tv@duh.org>.\n\n2006-02-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (startup): save all locale specific\n\tenvironment, variables:, LANG, LANGUAGE, LC_ADDRESS, LC_ALL\n\tLC_COLLATE, LC_CTYPE, LC_IDENTIFICATION, LC_MEASUREMENT,\n\tLC_MESSAGES LC_MONETARY, LC_NAME, LC_NUMERIC, LC_PAPER,\n\tLC_TELEPHONE, LC_TIME.\n\t(func_mode_execute): Restore them.\n\n2006-02-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (Tags): Mention `FC'.\n\t(libtool script contents) <CC>: Specify more precisely as the\n\tcompiler of the current tag.\n\t<LTCC, LTCFLAGS, build, build_alias, build_os, host_alias,\n\thost_os, macro_version, macro_revision, max_cmd_len>:\n\tDocument these variables.\n\n2006-02-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi: Update copyright years.\n\n\t* libltdl/config/getopt.m4sh (func_help): Substitute `$host'.\n\t* libltdl/config/ltmain.m4sh (help message): Use $host not\n\t@host_triplet@, as the `@..@' substitution is done at bootstrap\n\ttime already.\n\tReported by Julien Lecomte <julien@famille-lecomte.net>.\n\n\t* doc/libtool.texi (Implementation issues):  Note that both\n\tprefix and suffix of a library may differ.\n\t(Using libtool, Creating object files, Linking libraries):\n\tRemove last documentation traces of the age when `foo.lo' was\n\tthe PIC object file and not the `libtool object' text file.\n\t(libtool script contents) <compiler_o_lo>: Remove description\n\tof this variable.  It was removed from libtool in 1.5 times.\n\n2006-02-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link) [ linux ]:\n\tPGI: for `reload_cmds', we not only need to get rid of `$wl',\n\tbut also turn comma into space so $LD understands\n\twhole_archive_flag_spec correctly.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link) <shell wrapper>:\n\tAdd _AS_BOURNE_COMPATIBLE code from Autoconf, to fix issues\n\twith zsh and other shells.\n\tReported by David G\u00f3mez Espinosa <david@pleyades.net>.\n\n2006-02-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (AC_PROG_SED): m4_defun this rather\n\tthan AC_DEFUN, so that old aclocal does not pick this up.\n\n\t* Makefile.am ($(TESTSUITE)): Also depend on `Makefile.am'.\n\tWrite to temporary file and rename.\n\n2006-02-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (EXTRA_DIST): Add `$(srcdir)/' to all generated\n\tfiles so that non-GNU make programs will use the rebuilding\n\trules.\n\n\t* tests/testsuite.at: Add new keyword `libtoolize' for tests\n\tthat exercise the `libtoolize' script that is generated at build\n\ttime.\n\t* HACKING: Update testsuite mention, explain keywords.\n\n\t* libltdl/config/ltmain.m4sh (extracted_archives)\n\t(extracted_serial): New globals.\n\t(func_extract_archives): Use them to rename extraction archives\n\tfor linking against multiple convenience libraries with the same\n\tname.\n\t* tests/duplicate_conv.at: New tests.\n\t* Makefile.am: Adjusted.\n\tReported by Carlo Contavalli <ccontavalli@commedia.it>.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link) < test_compile >:\n\tFix a couple of instances where `test .. -ne ..' would possibly\n\tcompare non-numbers.  Clean up a bit.\n\n\t* tests/convenience.at, tests/deplibs-ident.at: Add new keyword\n\t`libtool' for tests that exercise the unmodified `libtool'\n\tscript that is generated at build time.\n\t* tests/duplicate_members.at, tests/fail.at: Likewise.\n\t* tests/inherited_flags.at, tests/link-order.at: Likewise.\n\t* tests/stresstest.at, tests/template.at: Likewise.\n\n2006-02-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/fail.at: Also pass a bogus object file to the linker so\n\tit fails more reliably; AIX and IRIX linkers ignore duplicate\n\tsymbol definitions.\n\n\t* libltdl/m4/libtool.m4 [ solaris ] (_LT_LINKER_SHLIBS)\n\t(_LT_LANG_CXX_CONFIG) < whole_archive_flag_spec >:\n\tFix this once and for all, for both the SUN compiler suite\n\t(cc/CC/f77/f90/f95) and GCC.\n\tReported by Yuri Pukhalsky <pooh@cryptopro.ru>.\n\n\t* tests/cdemo/Makefile.am: Remove broken use of undocumented\n\tAutomake variable `$(OBJECTS)'.\n\t* tests/demo/Makefile.am, tests/depdemo/Makefile.am: Likewise.\n\t* tests/f77demo/Makefile.am, tests/fcdemo/Makefile.am: Likewise.\n\t* tests/mdemo/Makefile.am, tests/mdemo2/Makefile.am: Likewise.\n\t* tests/pdemo/Makefile.am, tests/tagdemo/Makefile.am: Likewise.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Fix logic for\n\tadding run paths to also add paths for installed libtool\n\tlibraries in case `-static' is used.\n\n2006-02-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (TESTSUITE_AT): List testsuite files in the order\n\tin which they are to be expanded in the suite.\n\t(tests/TESTSUITE): Rebuild by passing all $(TESTSUITE_AT) files,\n\twith their path suitably adjusted.  This enables us to..\n\t* tests/testsuite.at: ..get rid of their redundant mention here.\n\n2006-01-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (titlepage): Remove superfluous word.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Fix matching\n\tduplicate run path entries with the correct separator.\n\n\t* tests/testsuite.at (PREPARE_TESTS): Escape `^' for some older\n\tshells.\n\n\t* ChangeLog, HACKING, README, README.alpha,\n\tlibltdl/config/ltmain.m4sh:  Add vi(m) modelines, to match emacs\n\tformatting variables.\n\n2006-01-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (libltdl/Makefile.am): Fixup sed script.\n\tReported by Bob Friesenhahn <bfriesen@simple.dallas.tx.us>.\n\n2006-01-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am, bootstrap, clcommit.m4sh,\n\tlibltdl/config/getopt.m4sh, libltdl/config/mailnotify.m4sh,\n\ttests/sh.test, tests/testsuite.at: Bump copyright years.\n\n2006-01-21  Eric Blake  <ebb9@byu.net>\n\n\t* THANKS: Move myself to contributor.\n\n2006-01-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* bootstrap: Don't use semicolons inside { } in sed scripts, as\n\tPosix says it's not portable.\n\t* Makefile.am (libltdl/Makefile.am): Likewise.\n\t* libtoolize.m4sh (all over the map): Likewise.\n\t* libltdl/config/getopt.m4sh (func_version, func_usage)\n\t(func_help): Likewise.\n\t* libltdl/config/ltmain.m4sh (func_win32_libid): Likewise.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_MODULE_PATH_AIX): Likewise.\n\t* clcommit.m4sh, libltdl/config/mailnotify.m4sh: Likewise.\n\t* tests/sh.test, tests/testsuite.at (LT_AT_TAG): Likewise.\n\tNoted by Paul Eggert <eggert@cs.ucla.edu>.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_compile): Also transform\n\t`.obj' correctly.\n\tReported by George Bosilca <bosilca@cs.utk.edu>.\n\n2006-01-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC): Fix my forward port\n\terror of last commit.\n\n2006-01-12  Leif Ekblad  <leif@rdos.net>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER)\n\t(_LT_CHECK_MAGIC_METHOD, _LT_COMPILER_PIC): Added support for\n\tRDOS.\n\t* NEWS: Updated.\n\n2006-01-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libtoolize.m4sh, libltdl/config/general.m4sh,\n\tlibltdl/config/getopt.m4sh, libltdl/config/ltmain.m4sh,\n\tlibltdl/m4/libtool.m4: Bump copyright years.\n\n2006-01-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (EXTRA_DIST): Add ChangeLog.2005.\n\n\t* README, README.alpha: Adjust copyright years.\n\t* ChangeLog.2005: New, rotated, from..\n\t* ChangeLog: ..here.\n\nContinued in ChangeLog.2005\n-- \n  Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n  2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n\n  This file is part of GNU Libtool.\n\nCopying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout warranty of any kind.\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/ChangeLog.2000": "2000-12-23  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom vvv@vsu.ru:\n\t* doc/fdl.texi (GNU Free Documentation License): contained @bye\n\tcommand which prevented part of document to be generated (indices,\n\tetc).\n\t* doc/libtool.texi (Dlpreopening): the @deftypevar did not contain\n\ta space after a type.\n\n2000-12-22  Akim Demaille  <akim@epita.fr>\n\n\t* libtool.m4: s/[ \\t]*$//\n\n2000-12-22  Aneesh Kumar K.V  <kvaneesh@hotmail.com>\n\n\t* libtool.m4 (OSF/1):  Revert my patch of 2000-12-16.\n\n2000-12-20  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (lt_dlexit): Was checking for residency of the\n\twrong module.\n\tReported by Robert Boehne  <rboehne@ricardo-us.com>\n\n\t* ltmain.in (dlprefiles): Now that `2000-12-15 Utz-Uwe Haus' patch\n\tbelow can detect preopened library deplibs correctly in libltdl,\n\twe need to ensure that libtool library deplibs are also preloaded\n\tinto the binary for that phase to work.\n\n2000-12-16  Aneesh Kumar K.V  <kvaneesh@hotmail.com>\n\n\t* libtool.m4 (OSF/1): Change the way to pass linker flags through\n\tcompiler on a Tru64 machine.\n\n2000-12-16  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (sys_lib_search_path_spec): Use test instead of\n\t`['.\n\t(archive_cmds): And another one.\n\n\t* libtool.m4 (darwin*): Fixed a pair of stupid typos I made in the\n\tlast patch.\n\n\t* libtool.m4 (AC_DEPLIBS_CHECK_METHOD):  moved rogue settings from\n\tsequent, ncr and newos6 back into here from other macros.\n\n2000-12-16   Wilfredo Sanchez  <wsanchez@apple.com>\n\n\t* libtool.m4: (dyld/darwin*) Much improved port.\n\t* ltmain.in: (dyld/darwin*) Much improved port.\n\n2000-12-16  Sascha Schumann <sascha@schumann.cx>\n\n\t* libtool.m4: Accept darwin as an alias for rhapsody.\n\t* ltmain.in: ditto.\n\n\t* libtool.m4 (AC_DEPLIBS_CHECK_METHOD): Use the HPUX 10.20\n\tmethods to check for library dependencies on HPUX 11.\n\n2000-12-16  Nick Hudson  <skrll@netbsd.org>\n\n\t* libtool.m4 (netbsd*, deplibs_check_method): Enable ILD support\n\tfor NetBSD a.out.\n\n2000-12-15  Akim Demaille  <akim@epita.fr>\n\n\t* libtool.m4 (AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE): Rename\n\t`ac_cv_sys_global_symbol_pipe' as `lt_cv_sys_global_symbol_pipe'.\n\tSimilarly with `lt_cv_global_symbol_to_cdecl\n\t(_LT_AC_LTCONFIG_HACK): Similarly with `ac_cv_prog_cc_pic',\n\t`ac_cv_prog_cc_shlib', `ac_cv_prog_cc_wl', `ac_cv_prog_cc_static',\n\t`ac_cv_prog_cc_no_builtin', `ac_cv_prog_cc_can_build_shared',\n\t`ac_cv_prog_cc_static_works', `ac_cv_archive_cmds_need_lc'.\n\t(AC_PATH_TOOL_PREFIX): Similarly with `ac_cv_path_MAGIC_CMD'\n\t(AC_PROG_LD) <ac_cv_path_LD>: Likewise.\n\t(AC_PROG_LD_GNU) <ac_cv_prog_gnu_ld>: Likewise.\n\t(AC_PROG_NM) <ac_cv_path_NM>: Likewise.\n\n2000-12-15  Utz-Uwe Haus  <haus@mail.math.uni-magdeburg.de>\n\n\t* libltdl/ltdl.c (lt_dlopen): Changed \"dl_dependency_libs\" keyword\n\tto \"dependency_libs\".\n\n2000-12-14  Tod Milam  <tmilam@traclabs.com>\n\n\t* libltdl/ltdl.c (lt_dlexit): Reset the loaders value to zero when\n\tthe last module has been unloaded.\n\n2000-12-14  Michael Schmitz  <mschmitz@iname.com>\n\n\t* libtool.m4: Port to *-sni-sysv4 (Reliant Unix)\n\t* README: added Reliant Unix to hte list of supported platforms\n\t* doc/PLATFORMS: added note on tests on Reliant Unix\n\n2000-12-14  Masahiro Nobori  <nobori@ss.titech.ac.jp>\n\n\t* README:  Updated.\n\t* NEWS: Updated.\n\t* libtool.m4:  New port to NEWS-OS Release 6.\n\n2000-12-14  Nick Hudson  <skrll@netbsd.org>\n\n\t* libtool.m4 (hardcode_libdir_flag_spec):  Remove linker\n\tspecification for netbsd.\n\n2000-12-14  Akim Demaille  <akim@epita.fr>\n\n\t* libtool.m4:  Don't depend on Autoconf internals:\n\ts/ac_cv_prog_gcc/GCC/.\n\n2000-12-14  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE): Don't empty\n\tout ac_cv_global_symbol_to_cdecl inside the loop, incase we\n\tneed to go around again and try with underscore prefix.\n\t(_LT_AC_TRY_DLOPEN_SELF): On some hosts (cygwin for instance)\n\tself dlclosing unloads the main program and causes a SIGSEGV.  So\n\tdon't do it for now.\n\n2000-12-05  Gary V. Vaughan  <gary@gnu.org>\n\n\tOh My! Cygwin support has bitrotted while I was looking the other\n\tway.  This should fix it some:\n\t* libtool.m4 (extract_expsyms_cmds): There is a quoting problem\n\twith autoconf-2.13 that prevents [$]0 from expanding.  Use shell\n\tquotes instead to delay eval of $0.\n\t(impgen.c) The '# ' sequence stripped by sed works again.\n\n2000-12-01  Gary V. Vaughan  <gary@gnu.org>\n\n\t* doc/libtool.texi (Libltdl interface):  Add documentation.\n\t* libltdl/ltdl.h (lt_dlmakeresident, lt_dlisresident):  Add\n\tprototypes.\n\t(LT_DLERROR_CLOSE_RESIDENT_MODULE): New error status.\n\t* libltdl/ltdl.c (lt_dlmakeresident, lt_dlisresident):  Allow\n\tmaking and testing of resident module status, which prevents a\n\tmodule from being lt_dlclosed.\n\t(lt_dlopen):  If lt_dlopen()ing self, make the module resident.\n\t(lt_dlclose):  Return an error if the module is resident.\n\n\t* libtool.m4 (_LT_AC_LTCONFIG_HACK): Move the tests for dlopen\n\tfrom here...\n\t(AC_LIBTOOL_DLOPEN_SELF): ...to here.\n\t(_LT_AC_CHECK_DLFCN):  Factor out repeated code for dlfcn.h\n\t(_LT_AC_TRY_DLOPEN_SELF): Factor out repeated code for\n\tchecking dlopen status.\n\t* ltdl.m4 (AC_LIB_LTDL):  Use _LT_AC_CHECK_DLFCN.\n\tdlopen compile time checking.  Use _LT_AC_CHECK_DLFCN.\n\t(AC_LTDL_DLSYM_USCORE):  Use _LT_AC_TRY_DLOPEN_SELF.\n\n2000-11-29  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.h (lt_dlhandle): Rename the wrapped structure\n\tto prevent nameclash when used from C++.\n\t* libltdl/ltdl.c: Fixed all references.\n\n2000-11-25  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (lt_dlopen):  Change the default search order\n\tfor modules.  If the named module has no directory component,\n\talways start the search with the user_search_path directories,\n\tand then fall back on the current directory only if that fails.\n\n2000-11-20  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/Makefile.am (libltdl_la_LDFLAGS): increment the version\n\tnumber to reflect the breakage of binary compatibility.\n\t* doc/libtool.texi (Libltdl interface):  Document\n\tLT_NON_POSIX_NAMESPACE.\n\t* libltdl/ltdl.h (LT_POSIX_NAMESPACE):  Deleted.  The default is\n\tnow to use this namespace, so the cpp macro is no longer\n\tnecessary.\n\n2000-11-20  Morten Eriksen  <mortene@sim.no>\n\n\t* ltdl.m4 (AC_LIB_LTDL, AC_LTDL_SYMBOL_USCORE): Break a circular\n\tdependency between AC_LTDL_SYMBOL_USCORE and AC_LTDL_DLSYM_USCORE.\n\n2000-11-20  Paul Berrevoets  <paul@swi.com>\n\n\t* ltmain.in: Some versions of expr respond with \"0\" if a\n\tregexp fails to match.\n\n2000-11-19  Paul Berrevoets  <paul@swi.com>\n\n\t* libtool.m4 (_LT_AC_LTCONFIG_HACK): Quote the $ in $#, $2 and\n\t$3 in variable 'archive_expsym_cmds' for cygwin.\n\n2000-11-19  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltdl.c: Relegate non-POSIX-compliant symbols (e.g. those\n\tending in ``_t'') to deprecated #define compatibility macros.\n\tAlso ease up on the namespace pollution, so that only ``lt_''\n\tand ``LT_'' prefixes are taken from the global namespace.\n\t* ltdl.h: ditto.\n\n2000-11-17  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltdl.c: Reformatted.\n\t* ltdl.h: ditto.\n\n2000-11-11  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltdl.m4 (AC_LTDL_SYMBOL_USCORE): Use $ac_ext for conftest\n\tsourcefile.\n\t* libtool.m4: Use $ac_ext and $ac_objext respectively for conftest\n\tsources and objects.\n\tReported by Carlo Wood <carlo@alinoe.com>\n\n\t* doc/fdl.texi: New file.  The license for distributing the\n\tlibtool manual.\n\t* doc/libtool.texi: Reference the new license.\n\n2000-10-31  Morten Eriksen  <mortene@sim.no>\n\n\t* libtool.m4 (_LT_AC_LTCONFIG_HACK): Quote argument to avoid\n\terror output from cygpath when $srcdir is empty.\n\n2000-10-31  Gary V. Vaughan  <gary@gnu.org>\n\n\t* bootstrap:  rm Makefiles to prevent infinite loop during\n\tconfigure when libtool.m4 is newer than Makefile.\n\n2000-10-31  Akim Demaille  <akim@epita.fr>\n\n\t* libtool.m4: Adjust the copyright notice.\n\tQuote all the macro names when defined.\n\tSome minor formatting changes.\n\t(AM_PROG_LIBTOOL, AM_ENABLE_SHARED, AM_ENABLE_STATIC)\n\t(AM_DISABLE_SHARED, AM_DISABLE_STATIC, AM_PROG_LD, AM_PROG_NM):\n\tDon't use indir when useless.  Don't add trailing `dnl' either.\n\n2000-10-30  Gary V. Vaughan  <gary@gnu.org>\n\n\t* doc/libtool.texi:  Corrected another attack of CRLF line\n\tendings.\n\n2000-10-30  Ossama Othman  <ossama@debian.org>\n\n\t* libtool.m4 (archive_expsym_cmds): Fix typo where line was broken\n\tin the middle of an expression.\n\n2000-10-30  Aneesh Kumar K.V <kvaneesh@hotmail.com>\n\n\t* libtool.m4 (archive_expsym_cmds):  Support for -export-symbol\n\toption on Tru64.\n\t(hardcode_libdir_flag_spec): Fixed cxx throwing error while using\n\tlibtool.  Done by passing -rpath directlty to the compiler.\n\n2000-10-27  Robert Boehne  <rboehne@ricardo-us.com>\n\n\t* docs/libtool.texi: Added pointers to documentation\n\tof Hewlett-Packard, Compaq Tru64 and IBM AIX systems.\n\n2000-10-02  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Bruce Korb <bkorb@cruzio.com>\n\t* ltmain.in (execute_dlfiles): Reduce obfuscation.\n\n2000-09-30  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* libtool.m4 [netbsd*] (deplibs_check_method, file_magic_cmd,\n\tfile_magic_test_file): Removed inappropriate duplicate\n\tdefinitions; these variables are set in AC_DEPLIBS_CHECK_METHOD.\n\n\t* libtool.m4 (lt_cv_file_magic_cmd): Don't use '${MAGIC_CMD}' or\n\t'${OBJDUMP}'; Solaris' /bin/sh loses with `}' in cache files.\n\t(ac_cv_path_MAGIC_CMD): Renamed to lt_cv_path_MAGIC_CMD.\n\n2000-09-28  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (MAGIC_CMD): Don't use MAGIC, since BSD versions of\n\tthe file command use this environment variable to hold the\n\tlocation of the magic database.\n\tReported by Marc Espie <Marc.Espie@liafa.jussieu.fr>\n\n2000-09-19  Gary V. Vaughan  <gary@gnu.org>\n\n\t* doc/PLATFORMS: Updated.\n\t* demo/configure.in:  Revert to the `libtool --features' test.\n\t* Makefile.am (libtool):  This needs to rerun configure now that\n\tlibtool is generated entirely by AC_PROG_LIBTOOL again.\n\t(ltconfig): Removed.\n\t(ltmain.sh):  Is now regenerated when ltmain.in changes.\n\t* libtool.m4 (_LT_AC_LTCONFIG_HACK): Now does all of the work for\n\tgenerating libtool immediately in configure.in, rather than\n\tdeferring part of the creation until config.status runs.\n\n2000-09-17  Gary V. Vaughan  <gary@gnu.org>\n\n\t* bootstrap:  Backed out yesterdays patch which is no longer\n\tnecessary.\n\t* Makefile.am (libtool): Reworked rule for regeneration of libtool,\n\tnow that it is built entirely withing config.status.\n\t(libtoolize): Tidied for orthogonality with the other generation\n\trules.\n\t(ltconfig):  This is now generated by AC_PROG_LIBTOOL, called from\n\tmake by running config.status --recheck.\n\t(ltmain.sh): Moved primary generation of this file into here...\n\t* configure.in (AC_OUTPUT): ...instead of here.\n\t* libtool.m4 (AC_OUTPUT_COMMANDS):  Write the config to ltconfig\n\twhere it can be reused, rather than directly to libtool.\n\t* demo/configure.in:  libtool is no longer present immediately\n\tafter AC_LIBTOOL_M4 has completed, so the tests now grep through\n\tltconfig instead -- which *will* be present.\n\n2000-09-16  Gary V. Vaughan  <gary@gnu.org>\n\n\t* TODO: Removed the item describing the change below, and added a\n\tsimilar item to remind us to change the ltdl.m4 macros again when\n\t_LT_AC_LTCONFIG_HACK is divided into proper macros.\n\t* ltdl.m4 (AC_LTDL_SNARF_CONFIG):  Removed.  No longet required\n\tnow that ltconfig has migrated to libtool.m4.\n\t(AC_LTDL_SHLIBEXT): Require _LT_AC_LTCONFIG_HACK.\n\t(AC_LTDL_SHLIBPATH): ditto.\n\t(AC_LTDL_SYSSEARCHPATH): ditto.\n\n\t* ltdl.m4 (AC_LTDL_DLPREOPEN): Require the libtool.m4 symbol_pipe\n\tmacro.\n\t(AC_LTDL_SYMBOL_USCORE): ditto.\n\t(AC_LTDL_GLOBAL_SYMBOL_PIPE): Removed, since it is a duplicate\n\tof...\n\t* libtool.m4 (AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE): ...this new\n\tmacro, extracted from _LT_AC_LTCONFIG_HACK.\n\n\t* ltdl.m4 (changequote): An audit of changequote and m4\n\tquote usage -- all changequotes have been removed, and some\n\tlatent unquoted `[' and `]' bugs have been fixed.\n\n\t* configure.in (AC_OUTPUT): ltmain.sh must be generated in the\n\tsource tree since this is where it would be found in a freshly\n\tunrolled tarball.\n\n\t* configure.in: Replace `dnl' comments with `#' comments for\n\tmore conformity with cvs autoconf.\n\tRemoved emacs hack-local-variables, since there is now a\n\tproper Autoconf major mode.\n\tRemoved a couple of changequote()s.\n\n\t* bootstrap (ltconfig): When bootstrapping libtool with a\n\tstock automake (i.e. without the README patch applied),\n\treferences to ltconfig are manually removed from the generated\n\tMakefile.in files.\n\n2000-09-15  Gary V. Vaughan  <gary@gnu.org>\n\n\t* doc/libtool.texi: Removes references to ltconfig, and a small\n\tamount of tidying up to compensate.\n\n2000-09-15  Nick Hudson  <skrll@netbsd.org>\n\n\t* libtool.m4 (netbsd): Improved support.\n\n2000-09-15  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltmain.in (version_type): Use \"-iface\" as the windows\n\tversioning scheme, where iface is the number of the oldest\n\tinterface supported.\n\n2000-09-14  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Paul Sokolovsky <Paul.Sokolovsky@technologist.com>\n\t* libtool.m4 (pw32): Initial support for pw32, assuming that\n\tlibtool's behaviour in this environment is identical to under\n\tcygwin.\n\t* ltmain.in (pw32): ditto.\n\t* NEWS: Updated.\n\n\t* libtool.m4 (changequote): An audit of changequote and m4\n\tquote usage -- all changequotes (except a few with non-nesting\n\tsquare brackets) have been removed.\n\n\t* Makefile.am (EXTRA_DIST):  The bootstrap script should be\n\tdistributed with libtool.\n\n2000-09-13  Gary V. Vaughan  <gary@gnu.org>\n\n\tlibtool.m4 (_LT_AC_LTCONFIG_HACK): Oh man!  Third time lucky.\n\tI just discovered that '&' needs to be escaped inside\n\tAC_TRY_EVAL.\n\n2000-09-12  Michael Matz  <matz@ifh.de>\n\n\t* ltmain.in:  Be careful about filenames with multiple `.'s in\n\tthem when calculating file extensions.\n\tReported by Joel Reed <jreed@support.ddiworld.com>\n\n2000-09-12  Gary V. Vaughan  <gary@gnu.org>\n\n\tlibtool.m4 (AC_PROG_LIBTOOL):  Removed, as it was triggering a\n\tbug in Autoconf-2.13 AC_REQUIRE implementation which inserted\n\tsome of the expanded tests too early in the generaated configure.\n\t(_AC_PROG_LIBTOOL): renamed to AC_PROG_LIBTOOL, and defines\n\titself to an empty expansion to prevent multiple expansions.\n\tconfigure.in (AC_LIBTOOL_SETUP): Replaced by a call to\n\tAC_PROG_LIBTOOL now that the AC_REQUIRE bug has been worked\n\taround.\n\n2000-09-09  Gary V. Vaughan  <gary@gnu.org>\n\n\tlibtool.m4 (_LT_AC_LTCONFIG_HACK): Forgot to escape the\n\tredirections inside AC_TRY_EVAL in the need_lc tests. Doh!\n\n\tlibtool.m4 (_LT_AC_LTCONFIG_HACK): Forgot to redirect the\n\toutput of grep to /dev/null in the need_lc tests.\n\n\tconfigure.in (AC_PROG_LIBTOOL):  Using this in libtools own\n\tconfigure.in interacts badly with the AC_PROVIDE calls and\n\tresults in several tests being inserted into configure too\n\tearly.  Use AC_LIBTOOL_SETUP instead.\n\n2000-09-08  Gary V. Vaughan  <gary@gnu.org>\n\n\tlibtool.m4 (_LT_AC_LTCONFIG_HACK): The ltconfig.in code I\n\tported from ltconfig.in was incomplete -- this is a backport\n\tof the missing code taken from the multi-language branch.\n\n2000-09-07  Pavel Roskin  <proskin@gnu.org>\n\n\t* libtool.m4 (_LT_AC_LTCONFIG_HACK):  Fixed incorrect use of\n\tchangequote\n\n2000-09-07  Gary V. Vaughan  <gary@gnu.org>\n\n\t* NEWS:  Updated.\n\t* TODO:  Add a reminder to get rid of ltconfig in mlb.\n\t* README: Until things even out, I have added a note and a\n\tpatch to make the installed automake cooperate with the new\n\tltconfig free libtool.\n\n\t* libtool.m4 (_LT_AC_LTCONFIG_HACK): with_gcc is only useful in\n\tltmain.sh as it has not yet been set in libtool.m4.  Use\n\t$ac_cv_prog_gcc instead.\n\n\t* doc/PLATFORMS: Updated.\n\n\t* configure.in (AC_PROG_AWK): Removed -- no longer required by\n\tthe build process.\n\t* lineno: ditto.\n\n\t* libtoolize.in (files): Don't try to install ltconfig -- it\n\tdoesn't exist!!\n\t* bootstrap: Fake an ltconfig incase the installed automake\n\tcalls an installed libtoolize (as part of its --add-missing\n\tprocess) which thinks ltconfig should be there.\n\n\t* libtool.m4 (_LT_AC_LTCONFIG_HACK): Deleted a vital `;;'\n\tterminator from a case statement by mistake.\n\n\t* Makefile.am (ltmain.sh):  Make this depend on TSDEPS again\n\tso that the Changelog timestamp is used for ltmain.sh at `make\n\tdist' time.\n\n2000-09-06  Gary V. Vaughan  <gary@gnu.org>\n\n\tlibtool.m4 now contains a version of the code that used to run\n\tfrom ltconfig, so that ltmain.sh and then libtool are\n\tgenerated at configure time.\n\n\t* Makefile.am:  Don't generate ltmain.sh or ltconfig anymore.\n\t* bootstrap: ltconfig is no more!\n\t* configure.in: Call AC_PROG_LIBTOOL directly.\n\t(AC_OUTPUT): Generate tmain.sh.\n\t* libtool.m4: Don't build an argument list for ltconfig.\n\t(_LT_AC_LTCONFIG_HACK):  Refactoring of the former contents of\n\tltconfig.in to take advantage of the m4 macros from autoconf.\n\t* ltmain.in: Don't do a version check against ltconfig.\n\t* tests/assign.test: Remove reference to ltconfig.\n\t* tests/hardcode.test: ditto.\n\t* tests/sh.test: ditto.\n\n2000-09-05  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* depdemo/main.c: Support -alt.\n\t* tests/build-relink2.test: Try it.\n\n\t* ltconfig.in: Removed all references to what used to be\n\thardcode_into_libs=all.  2000-09-03's patch was wrong.\n\t* ltmain.in: Likewise.\n\t* tests/build-relink.test, tests/build-relink2.test: Adjust.\n\t* mdemo/Makefile.am (lib_LTLIBRARIES): Move libsub.la before\n\tlibfoo2.la, so that they're installed in the right order.\n\n2000-09-04  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* tests/dryrun.test: Build libsub.la along with the object files,\n\tsince it is needed by libfoo2.la.\n\n\t* mdemo/Makefile.am: Mark only libfoo2 as -no-undefined.\n\tExplicitly link it with libsub.la.\n\n\t* ltconfig.in (need_lc): Preserve allow_undefined_flag.\n\n\t* tests/*.test (CONFIG_SITE): Ultrix's /bin/sh fails on\n\t`. /dev/null'.  Set CONFIG_SITE to /dev/null/config/site, to make\n\tsure we pick a non-existent file.\n\n\t* Makefile.am (libtool, clibtool): Pass CONFIG_SHELL along with\n\tECHO down to ltconfig.\n\n\t* ltconfig.in (hardcode_libdir_flag_spec, export_dynamic_flag_spec):\n\tUse ${wl}, not ${wlarc}.\n\n\t* ltmain.in (compile, need_lock): Don't create nor remove lock\n\tfiles in dry runs.\n\n\t* libltdl/ltdl.c (load_deplibs): Don't append shlib_ext; use\n\tlt_dlopenext() instead.\n\n\t* ltmain.in (link -static): Don't add $link_static_flag; only\n\t-all-static should do that.\n\t* mdemo/configure.in: Revert part of the previous delta.\n\n\t* mdemo/configure.in: Don't use -static on AIX4.1.\n\t* mdemo/Makefile.am: Likewise.\n\n2000-09-03  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* ltconfig.in: Get rid of hardcode_into_libs=all; use\n\thardcode_into_libs=yes && shlibpath_overrides_runpath!=yes\n\tinstead.\n\t[FreeBSD 3.[01]] (shlibpath_overrides_runpath): Set to no.\n\t* ltmain.in: Likewise.\n\t* tests/build-relink.test, tests/build-relink2.test: Adjust.\n\n\t* libtool.m4: Fix typo I introduced in yesterday's patch.\n\n\t* libltdl/ltdl.c (lt_dlopen): Set dlname from library_names if\n\tdlname is empty.\n\n\t* ltdl.m4 (HAVE_LIBDL): Look for dlopen in -lsvld.\n\t* ltconfig.in: Likewise.\n\n\t* tests/mdemo-exec.test: Modify failure message.\n\n\t* ltmain.in (newdlprefiles): Use dlname if it's available and\n\told_library isn't; use linklib only if dlname is not available.\n\n\t* ltconfig.in (enable_dlopen): Set to no when lt_cv_dlopen is no.\n\n\t* libtool.m4: Don't quote CONFIG_SHELL nor ORIGINAL_CONFIG_SHELL.\n\tQuote $@ properly so that the shell expands it, not m4.\n\n\t* libtool.m4: Don't quote SHELL when `re-exec'ing, so that SHELL\n\tcan be `/path/to/shell -x'.\n\n\t* tests/quote.test: Move the match test out of case statements, to\n\twork around bug in /bin/sh of several OSs.\n\n\t* ltmain.in (variables_saved_for_relink): Attempt to unset them\n\tinstead of setting them to an empty string.\n\n2000-09-02  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* ltconfig.in [with_gnu_ld] (archive_cmds, archive_expsym_cmds)\n\t<solaris*, sysv5*, beos*>: Use compiler_flags instead of linker\n\tflags.\n\tReported by Alex Hornby <alex@anvil.co.uk>\n\n2000-09-02  Makoto Ishisone  <ishisone@sra.co.jp>\n\n\t* libtool.m4 (lt_cv_deplibs_check_method, freebsd): Fix typo,\n\tadd support for compact format library.\n\n2000-09-02  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* ltdl.m4: Oops, I had forgotten to commit this part of Syd Polk's\n\tpatch from 2000-06-17.\n\n2000-09-02  Tom Kacvinsky  <tjk@ams.org>, Tim Mooney <mooney@dogbert.cc.ndsu.NoDak.edu>\n\n\t* libtool.m4: Ignore Tru64's nm's complaint.\n\n2000-09-02  Pavel Roskin <proski@gnu.org>\n\n\t* ltconfig.in: only load $cache_file if it's a regular file\n\n2000-09-02  Assar Westerlund  <assar@sics.se>\n\n\t* ltconfig.in: Add back ranlib calls for static libraries if there\n\tis a ranlib.\n\n2000-08-31  Gary V. Vaughan  <gary@gnu.org>\n\n\tMove the echo detection code to a macro in libtool.m4.  The code\n\tat the top ofltconfig.in is ugly, but will go away when the rest\n\tof ltconfig is migrated.\n\n\t* Makefile.am (libtool):  Pass the value of $ECHO to ltconfig as\n\tan environment variable.\n\t* libtool.m4 (_LT_AC_PROG_ECHO_BACKSLASH): Quote the ECHO value\n\tcorrectly so that it inserts the correct code into configure.in\n\tsuitably quoted for M4 expansion.  This code needs to be near\n\tthe top of configure.in as it calls itself recursively, so I\n\tam using AC_DIVERSION_NOTICE (or simply NOTICE on CVS\n\tAutoconf).  The value of ECHO is also substitued into the\n\tMakefile to be used when Make calls ltconfig to generate\n\tlibtool, so another layer of quotation is required for the\n\tMakefile.\n\t(AC_LIBTOOL_SETUP):  Use it.\n\t* ltconfig.in: Accept a value for ECHO from the environment, and\n\tcarefully substitue for $0 if it is present in the ECHO value.\n\tBecause ECHO was quoted for Make, when ltconfig is called by\n\tconfigure, it is overquoted, and one layer of quotes must be\n\tstripped.\n\n2000-08-27  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltconfig.in (with_gcc):  Make the value of this option\n\tavailable to the generated libtool script.\n\t* ltmain.in (compile_command, finalize_command):  The native C\n\tand C++ compilers on IRIX require the -LANG:std in order to to\n\tcompile correctly.   The same options should _not_ be passed\n\tthrough to gcc on IRIX, or at all on other architectures for\n\tbackwards compatibility (among others).\n\tReported by Bob Friesenhahn <bfriesen@simple.dallas.tx.us>\n\tReported by Albert Chin-A-Young <china@thewrittenword.com>\n\n2000-08-26  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltconfig.in (old_reload_flag): typo.\n\n2000-08-01  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n\n\t* ltmain.in (shtool): Use echo|grep instead of expr, as in the\n\toriginal patch.\n\n2000-08-01  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* ltconfig.in (need_lc): Fix test message.\n\n2000-07-24  Mocha  <netbsd_alpha@yahoo.com>\n\n\t* ltconfig.in (NetBSD, deplibs_check_method): Use file_magic.\n\t(NetBSD, file_magic_cmd, file_magic_test_file): Set.\n\n2000-07-24  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>, David Kaelbling  <drk@orchietta.hudson.sgi.com>\n\n\t* ltmain.in (irix, major): Prepend a `.'.\n\t* ltconfig.in (irix, soname_spec, library_names_spec): Adjust.\n\n2000-07-24  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>, Ralf S. Engelschall  <rse@engelschall.com>\n\n\t* ltmain.in: Support GNU shtool's install.\n\n2000-07-24  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n\n\t* ltconfig.in (linkopts): Don't set for test.\n\n2000-07-24  Nick Hudson <skrll@netbsd.org>\n\n\t* ltconfig.in (linkopts): Replace with linker_flags.\n\n\t* ltmain.in (ILD): Fix addition of deplibs in relink case.\n\n2000-07-18  H.J. Lu  <hjl@gnu.org>\n\n\t* ltconfig.in: Check if -lc is necessary for building shared\n\tlibrary. Set build_libtool_need_lc to indicate it.\n\t* ltmain.in: Add -lc when building shared library only if\n\tnecessary.\n\n2000-07-10  Mo DeJong  <mdejong@redhat.com>\n\n\t* libtool.m4 (AC_PROG_NM): Fix macro so that it\n\tfinds a cross NM on the PATH.\n\n2000-07-10  Ken Block <block@zk3.dec.com>\n\n\t* libltdl/ltdl.h: Also check for __cplusplus, __STDC__ is not\n\tby Compaq C++ compiler\n\n2000-07-10  Alexandre Oliva  <aoliva@lsd.ic.unicamp.br>\n\n\t* ltconfig.in (wlarc, netbsd, aout): Set to empty.\n\t(hardcode_dynamic_flag_spec, export_dynamic_flag_spec): Use it.\n\n\t* ltconfig.in (dynamic_linker, linux, powerpc): Do not disable\n\tshared libraries just because of MkLinux.\n\n\t* libtool.m4 (lt_cv_deplibs_check_method, freebsd): Do not depend\n\ton $version_type; check for ELF support as in other BSDs.\n\n2000-06-17  Syd Polk  <spolk@redhat.com>\n\n\t* libtool.m4 (AC_LIBTOOL_SETUP): Do not generate a libtool based\n\ton target; use host instead.\n\n2000-05-30  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltconfig.in (ORIGINAL_CONFIG_SHELL): Prevent lossage when\n\tthe echo probing code falls into this branch without setting\n\tthis variable.\n\n\t* ltconfig.in (netbsd*): archive_cmds and archive_expsym_cmds\n\twere reversed with respect to definition of __ELF__.\n\tFrom Keisuke Inoue <keisuke@csl.sony.co.jp>\n\n2000-05-29  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (netbsd*): Use -L option to file_magic_cmd as for\n\tfreebsd (below).\n\t* libtool.m4 (netbsd ELF): support file_magic.\n\tFrom Dan Winship <danw@helixcode.com>.\n\n2000-05-29  Steven M. Schultz <sms@moe.2bsd.com>\n\n\t* libtool.m4 (bsdi4*): Add -L option to bsdi4's file_magic_cmd\n\tcommand.  Under BSD/OS 4.1 several libraries are now symlinks\n\trather than regular files.  Adding -L tells the file program\n\tto follow the symlink.\n\n2000-05-29  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (i*86-*-freebsd*): Forgot to changequote(,).\n\n\t* NEWS: Updated.\n\t* libtool.m4 (i*86-*-freebsd*): Support a.out shared libs.\n\tFrom <suzukis@file.phys.tohoku.ac.jp>\n\n2000-05-29  Fred Fish  <fnf@be.com>\n\n\tSupport AR=mwld AR_FLAGS='-xml -o' for PPC Beos.\n\t* ltconfig (old_AR_FLAGS): Add.\n\t(old_archive_cmds): Use AR_FLAGS rather than hardcoding \"cru\".\n\t(archive_cmds): Use AR_FLAGS rather than hardcoding \"cru\".\n\t(AR_FLAGS): Default to \"cru\" if not set.\n\n2000-05-29  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltconfig.in (echo): The following code actually prints the\n\tdouble quotes -- so I removed them:\n\t    echo='printf \"%s\\n\"' /bin/ksh -c '$echo \\\\t'\n\tFrom Tuukka Toivonen <tutoivon@mail.student.oulu.fi>\n\n\t* NEWS: Updated.\n\n2000-05-29  Bernhard Rosenkraenzer <bero@redhat.de>\n\n\t* libtool.m4: adding ia64 as supported linux platform\n\n2000-05-29  Michael Matz  <matz@ifh.de>\n\n\t* ltmain.in: fix quoting for $var_value.\n\n\t* ltconfig.in: check for dlfcn.h: include return value\n\tto make -Wall in CFLAGS work.\n\n2000-05-27  Gary V. Vaughan  <gary@gnu.org>\n\n\t* README-alpha: note new location of config.(guess|sub).\n\n2000-05-27  Chad Cunningham  <ccunning@math.ohio-state.edu>\n\n\t* ltconfig.in (rhapsody*): New Port.\n\t* ltmain.in (rhapsody*): ditto.\n\n2000-05-27  Chris Lattner  <sabre@skylab.org>\n\n\t* ltconfig.in (*-sequent-sysv4): New Port.\n\n2000-05-17  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltmain.in: cygwin-1.1.0 and higher no longer grok backslash path\n\tseparators.\n\n2000-05-14  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n\n\t* libtool.m4 (AC_LIBLTDL_CONVENIENCE, AC_LIBLTDL_INSTALLABLE):\n\tPick LIBLTLD from top_builddir and INCLTDL from top_srcdir.\n\t* mdemo/configure.in: Remove comments on\n\tAC_LIBLTLD_CONVENIENCE.\n\n\t* libtool.m4 (_AC_PROG_LIBTOOL): Renamed from...\n\t(AC_PROG_LIBTOOL): Just AC_REQUIRE(_AC_PROG_LIBTOOL), to avoid\n\teffects of multiple runs.\n\n2000-05-11  Thomas Tanner  <tanner@ffii.org>\n\n\t* NEWS: update\n\t* doc/libtool.texi (libltdl): rename lt_(find|next|add|remove)_dlloader\n\t  to lt_dlloader_*\n\t* libltdl/ltdl.c: ditto\n\t* libltdl/ltdl.h: ditto, add declaration of lt_dlloader_(find|remove)\n\n2000-05-06  Pavel Roskin  <pavel_roskin@geocities.com>\n\n\t* libltdl/ltdl.c: Typo.\n\n\t* libtool.m4 (AC_LIBTOOL_SETUP): CVS autoconf no longer sets\n\ttarget to \"NONE\", but to an empty string.\n\n2000-05-05  Paul Sokolovsky  <Paul.Sokolovsky@technologist.com>\n\n\t* ltdl.c: support lt_dlopen(0) for win32\n\n2000-05-03  Thomas Tanner  <tanner@ffii.org>\n\n\t* doc/libtool.texi (libltdl): fix typos,\n\t  INCLTDL starts with top_srcdir, replace NULL with @code{NULL}\n\n\t* ltmain.in (ILD): search in newlib_search_path, too\n\n\t* ltmain.in (ILD): fix bugs in conv pass, expand convenience\n\t  libs to deplibs and link them later on\n\n\t* ltmain.in (ILD): don't allow convenience libs to be\n\t   -dlopen/preopen'ed\n\n\t* ltmain.in (ILD): it's not required to link all deplibs\n\t  in fast-install mode\n\n\t* ltmain.in (ILD): if hardcode_into_libs=all, only relink\n\t  a library if it is linked against uninstalled libtool libraries,\n\t  rename link_against_libtool_libs to uninst_deplibs\n\n\t* ltmain.in (ILD): tidy up, add some comments\n\n2000-05-03  John Wehle  (john@feith.com)\n\n\t* libtool.m4 (hpux10.20*): use file_magic for\n\tinter-library dependency tracking.\n\n2000-05-02  Gary V. Vaughan  <gary@gnu.org>\n\n\t* AUTHORS:  Update my email address.\n\t* commit: ditto.\n\n2000-04-11  Thomas Tanner  <tanner@ffii.org>\n\n\t* NEWS: update\n\t* libtool.m4: add AC_LIBTOOL_PICMODE\n\t* ltconfig.in: move pic_mode checks to ltmain.in\n\t* ltmain.in: add -prefer-pic and -prefer-non-pic\n\n2000-03-29  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n\n\t* ltmain.in (tmpdir): Do not accept an existing directory, and\n\tforce its mode to 700, for security reasons.\n\tReported by Joseph S. Myers <jsm28@cam.ac.uk>\n\n2000-03-27  Thomas Tanner  <tanner@ffii.org>\n\n\t* NEWS: reformatting\n\n\t* ltmain.in (ILD): add extra convenience library scanning pass\n\n\t* ltmain.in (ILD): accept -R flags for libraries, too\n\n\t* ltmain.in (ILD): correclty merge the dlpreopened libraries\n\t  with deplibs\n\n\t* ltmain.in (install mode): remove directories from filenames\n\t  before relinking (reported by Elrond <Elrond@Wunder-Nett.org>)\n\n\t* doc/libtool.texi (libltdl): rename Library -> Lesser,\n\t  clarify exception clause\n\t* libltdl/ltdl.c, libltdl.h (License): ditto\n\n2000-03-21  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n\n\t* ltconfig.in (variables_saved_for_relink): Set to `PATH\n\t$shlibpath_var $runpath_var'.  If with_gcc, add gcc-related\n\tenvironment variables.  Add it to the configuration section.\n\t* ltmain.in (relink_command): Expand those variables.\n\n2000-03-14  Christopher A. Knight  <chriskn@crt.com>\n\n\t* ltconfig.in: added main() definition in compile\n\tcheck for header `dlfcn.h' to fix link errors\n\twhen built with Sun Workshop Pro CC 4.2 (and perhaps\n\tothers).\n\n2000-02-03  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (lt_find_dlhandle): Deleted.  This was B.S.\n\tfar cleaner to use lt_dlforeach and lt_dlgetinfo.\n\t* libltdl/ltdl.h:  Prototype deleted.\n\t* doc/libtool.texi: Documentation deleted.\n\t* NEWS: annoncement deleted.\n\n2000-02-23  Thomas Tanner  <tanner@ffii.org>\n\n\t* ltmain.in: remove duplicates from deplibs, handle\n\t  interdependent libraries (e.g. -la -lb -la),\n\t  this requires adding deplibs in reverse order\n\n\t* ltmain.in: link dlpreopened libraries before other libraries\n\t  (reported by Pavel Roskin)\n\t* mdemo/Makefile.am: build and link libsub.la\n\t* mdemo/sub.c: new file used by both dlopened modules\n\t* mdemo/foo*: use sub() defined in libsub\n\t* tests/dryrun.test: build libsub.la\n\n\t* mdemo/Makefile.am: always link mdemo.static with -static\n\t* mdemo/configure.in: ditto\n\n\t* ltmain.in: fix dlopen/dlpreopening of objects\n\n\t* ltmain.in (ILD): fix misplaced `continue' in -R* argument handler\n\n\t* ltmain.in: merge duplicated code of clean and uninstall mode\n\n\t* libtool.m4: recognize powerpc*linux* (reported by\n\t  Dirk A. Mueller <dmuell@gmx.net>)\n\n2000-02-23  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltconfig.in (old_MAGIC, old_STRIP, old_reload_flag,\n\told_deplibs_check_method, old_file_magic_cmd):  New variabes.\n\tTreat these as old_CC etc.\n\t(STRIP, MAGIC): Create and set these variables in the generated\n\tlibtool script.\n\tReported by Pavel Roskin <pavel_rosin@geocities.com>\n\n\t* configure.in: Due to a bug in autoconf-2.13 implementation of\n\tAC_SUBST, `AC_SUBST(FILE)' can never work.  Use MAGIC as the\n\tholder of the command to run in file_magic_cmd instead.\n\t* ltconfig.in: s/FILE/MAGIC/g.\n\t* libtool.m4 (AC_PROG_LIBTOOL): set MAGIC in the environment when\n\tcalling ltconfig.\n\t(AC_PATH_MAGIC):  renamed from AC_PATH_FILE.\n\t(AC_PATH_TOOL_PREFIX):  s/FILE/MAGIC/g.  Also set file_magic_cmd\n\tto '${MAGIC}' so that make can grok it.\n\t* Makefile.am (libtool):\n\t(clibtool): ditto.\n\n2000-02-21  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (lt_find_dlhandle): New function.\n\t(tryall_dlopen): Use it.\n\t* libltdl/ltdl.h:  Prototype it.\n\t* doc/libtool.texi: Document it.\n\t* NEWS: updated.\n\n\t* libltdl/ltdl.c (lt_dlinit): removed unused variable, `loader'.\n\n\t* libltdl/ltdl.c (lt_remove_dlloader): typo, s/=/==/g.\n\n2000-02-03  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.h (lt_dlloader_data_t):  New type for loader\n\tinstance data.\n\t(lt_user_dlloader): New lt_dlloader_data_t field.\n\t(lt_module_open_t): Add lt_dlloader_data_t parameter.\n\t(lt_module_close_t): Add lt_dlloader_data_t parameter.\n\t(lt_find_sym_t): Add lt_dlloader_data_t parameter.\n\t(lt_dlloader_exit_t): Add lt_dlloader_data_t parameter.\n\t* libltdl/ltdl.c:  A sprinkling of /*ARGSUSED*/ markers to\n\treassure lint that the unused arguments are intentional.\n\t(lt_dlloader_t): New lt_dlloader_data_t field.\n\t(lt_dlloader_data): New function to return the contents of the\n\tdlloader_data field.\n\t(sys_dl_open): Take an additional lt_dlloader_data_t argument.\n\t(sys_dl_close): Ditto.\n\t(sys_dl_sym): Ditto.\n\t(sys_dl): Initialise lt_dlloader_data_t field.\n\t(sys_shl_open, sys_shl_close, sys_shl_sym, sys_shl): As above.\n\t(sys_wll_open, sys_wll_close, sys_wll_sym, sys_wll): As above.\n\t(sys_bedl_open, sys_bedl_close, sys_bedl_sym, sys_bedl): As\n\tabove.\n\t(sys_dld_open, sys_dld_close, sys_dld_sym, sys_dld): As above.\n\t(presym_init, presym_exit, presym_open, presym_close, presym_sym,\n\tpresym): As above.\n\t(lt_dlinit): Call presym_init with additional argument.\n\t(lt_dlexit): Call dlloader_exit method with additional argument.\n\t(tryall_dlopen): Call module_open method with additional argument.\n\t(lt_dlclose): Call module_close method with additional argument.\n\t(lt_dlsym): Call find_sym method with additional argument.\n\t(lt_add_dlloader): Initialise dlloader_data field.\n\t(lt_remove_dlloader): Call dlloader_exit method with additional\n\targument.\n\n\t* libltdl/ltdl.c (find_file): Prevent early release of memory\n\tin filename/*pdir.\n\tFrom Jon Leichter <jon@symas.com>\n\n\t(sys_wll_init): Deleted.  No longer required.  And this time,\n\twith feeling!\n\t(sys_wll_exit): Ditto.\n\n2000-02-02  Gary V. Vaughan  <gary@gnu.org>\n\n\t* NEWS: updated.\n\t* doc/libtool.texi (Libltdl interface): Moved user defined module\n\tloader documentation from here...\n\t(Module loaders for libltdl) ...to here, and updated the text and\n\tadded examples.\n\t* ltdl.m4 (AC_CHECK_FUNCS): check strcmp for lt_find_dlloader.\n\t* libltdl/ltdl.h: Reformatted and commented for readability.\n\t(struct lt_user_dlloader): New data type for passing\n\tinitialisation pointers to lt_add_dlloader.\n\t(LTDL_ERROR_INVALID_LOADER):  New error message when non loader\n\thandles are passed to the user loader API.\n\t(LTDL_ERROR_INIT_LOADER): New error when loader initialisation\n\tfails.\n\t(LTDL_ERROR_REMOVE_LOADER): New error when loader removal fails.\n\t(lt_module_open_t): renamed from lt_lib_open_t.\n\t(lt_module_close_t): renamed from lt_lib_close_t.\n\t(lt_dlloader_exit_t): renamed from lt_dlloader_exit_t.\n\t* libltdl/ltdl.c: Reordered builtin loaders so that the \"dld\"\n\tloader no longer occurs before \"dlopen\" on some platforms and\n\tafter it on others.\n\t(lt_dlloader_t): Moved here from ltdl.h, added a field,\n\t\"loader_name\", for identifying the loader, and renamed from\n\tlt_dltype_t.  Renamed type variables to loader IFF of type\n\tlt_dlloader_t.\n\t(lt_module_t): Renamed from lt_syshandle. Renamed handle variables\n\tto module IFF of type lt_module_t.\n\t(LTDL_TYPE_TOP): Deleted.  No longer required.\n\t(sys_dl): Initialised as a struct lt_user_dlloader.\n\t(sys_dl_init): Deleted.  No longer required.\n\t(sys_dl_exit): Ditto.\n\t(sys_shl): Initialised as a struct lt_user_dlloader.\n\t(sys_shl_init): Deleted.  No longer required.\n\t(sys_shl_exit): Ditto.\n\t(sys_wll): Initialised as a struct lt_user_dlloader.\n\t(sys_wll_init): Deleted.  No longer required.\n\t(sys_wll_exit): Ditto.\n\t(sys_bedl): Initialised as a struct lt_user_dlloader.\n\t(sys_bedl_init): Deleted.  No longer required.\n\t(sys_bedl_exit): Ditto.\n\t(sys_dld): Initialised as a struct lt_user_dlloader.\n\t(sys_dld_init): Deleted.  No longer required.\n\t(sys_dld_exit): Ditto.\n\t(sys_presym): Initialised as a struct lt_user_dlloader.\n\t(lt_mod_init_t): Moved to here from ltdl.h.\n\t(lt_dlinit): Add builtin loaders using the user loader API.\n\t(lt_dlexit): Unregister and free all loaders.\n\t(lt_add_dlloader): New function to add a new module loader after the\n\tloader specified in the argument.\n\t(lt_remove_dlloader): New function to remove a module loader.\n\t(lt_next_dlloader): New function for iterating over module loaders.\n\t(lt_dlloader_name): Accessor function for name of dlloader.\n\t(lt_find_dlloader): New function to get a reference to a registered\n\tmodule loader.\n\t(strcmp): static implementation incase the host has none.\n\t(lt_dlgettypes, lt_dlsettypes): Removed.\n\n2000-02-02  Thomas Tanner  <tanner@ffii.org>\n\n\t* libltdl/ltdl.c: replace NULL with 0, remove unused system\n\t  and app_private pointers from lt_dlhandle_t\n\t* libltdl/ltdl.c (presym_add_list): new preloaded symbols\n\t  don't need to be added to the end\n\n\t* libltdl/ltdl.c (lt_dlgetdata, lt_dlsetdata): removed\n\t* libltdl/ltdl.h: ditto\n\t* doc/libtool.texi (libltdl interface): ditto\n\n2000-02-01  Thomas Tanner  <tanner@ffii.org>\n\n\t* ltmain.in: support -dlopen/dlpreopen for libraries\n\t* NEWS: updated\n\t* TODO: updated\n\t* ltmain.in: rename dlopen to dlopen_support\n\t* ltconfig.in: ditto\n\t* doc/libtool.texi: ditto\n\n\t* ltmain.in: check whether libraries are moved out of $libdir,\n\t  replace .a and .lib with .$libext, .o and .obj with .$objext\n\n2000-01-31  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.h (lt_dlrealloc): removed declaration.\n\t* libltdl/ltdl.c (lt_dlrealloc): removed definition.\n\t(lt_dladderror): Instead of calling lt_dlrealloc, use lt_dlmalloc,\n\tand lt_dlfree.\n\n2000-01-30  Ossama Othman  <ossama@debian.org>\n\n\t* libtool.m4 (lt_cv_cc_needs_belf): Set the test language to C\n\tprior to executing the test that checks if the C compiler needs\n\t\"-belf.\"\n\tReported by Chris Butler <chrisb@sandy.force9.co.uk>\n\n2000-01-28  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (AC_DEPLIBS_CHECK_METHOD):  Use changequote to\n\tprotect `[' and `]' in deplibs_check_method.\n\n\t* libltdl/ltdl.h (lt_dlrealloc): Added declaration.\n\t* libltdl/ltdl.c (lt_dlrealloc): Added default definition.\n\n\t* libltdl/ltdl.c (lt_dlseterror): Catch errorcodes below 0 as\n\tinvalid.\n\t* libltdl/ltdl.h (LTDL_ERROR): Added missing '_' in K&R\n\tdefinition.\n\n\t* libltdl/ltdl.h (ltdl_error_table): Added missing error code, and\n\tfixed typo in another code.\n\t* doc/libtool.texi (Libltdl interface): Added missing @end\n\tclause.\n\n2000-01-27  Thomas Tanner  <tanner@ffii.org>\n\n\t* ltconfig.in: Oops, replace the remaining $objdir's\n\n\t* ltmain.in: merge library linking code of programs and libraries,\n\t  some cleanups\n\n2000-01-27  Gary V. Vaughan  <gary@gnu.org>\n\n\t* NEWS: Updated.\n\t* doc/libtool.texi (Libltdl interface): Document new entry\n\tpoints.\n\t* libltdl/ltdl.c (lt_dladderror): New function to add a user\n\tdefined error message to the tables used by lt_dlerror().\n\t(lt_dlseterror):  New function to allow setting of last_error by\n\tuser modules.\n\t(ltdl_error_strings): New preprocessor generated table of internal\n\terror diagnostic strings.\n\t(user_error_strings): New internal list of registered user error\n\tdiagnostic strings.\n\t(throughout!): Use error messages from ltdl_error_strings.\n\t* libltdl/ltdl.h (ltdl_error_table): New macro to tabulate\n\tinternal diagnostic error strings alongside enum keys.\n\n\t* NEWS: Updated.\n\t* doc/libtool.texi (Libltdl interface): Document new entry\n\tpoints.\n\t* libltdl/ltdl.c (lt_dltype_t):  Use new type definitions for\n\texisting fields.\n\t(lt_dladdtype): New function to add a new ltdl dynamic loader\n\ttype to the end of the list of valid types..\n\t(lt_dlgettypes): New function to return the complete list of ltdl\n\tdynamic loader types.\n\t(lt_dlsettypes): New function to replace the list of ltdl dynamic\n\tloader types entirely -- e.g. to prepend a new type to the\n\texisting list.\n\t(sys_dl_open, sys_dl_close, sys_dl_sym): Work with lt_syshandle.\n\t(sys_shl_open, sys_shl_close, sys_shl_sym): ditto.\n\t(sys_dld_open, sys_dld_close, sys_dld_sym): ditto.\n\t(sys_wll_open, sys_wll_close, sys_wll_sym): ditto.\n\t(sys_bedl_open, sys_bedl_close, sys_bedl_sym): ditto.\n\t(presym_open, presym_close, presym_sym): ditto.\n\t(tryall_dlopen): Call lt_lib_open_t functions lt_syshandle\n\tcompatibly.\n\t(lt_dlclose): Call lt_lib_close_t functions lt_syshandle\n\tcompatibly.\n\t(lt_dlsym): Call lt_find_sym_t functions lt_syshandle compatibly.\n\t(lt_dltype_t): moved type declaration from here...\n\t* libltdl/ltdl.h (lt_dltype_t): ...to here.\n\t(lt_syshandle): new type for low level system handles passed by\n\tloader functions\n\t(lt_mod_init_t):  New type for functions implementing the\n\tinitialisation for an ltdl dynamic loader.\n\t(lt_mod_exit_t): Type of exit functions for the same.\n\t(lt_lib_open_t): Type of loader functions for the same.\n\t(lt_lib_close_t): Type of unloader functions for the same.\n\t(lt_find_sym_t): Type of symbol resolver functions for the same.\n\n\t* libltdl/ltdl.c (sys_dl_init, sys_dl_exit, sys_dl_open,\n\tsys_dl_close, sys_dl_sym):  Preprocess these away on cygwin to\n\tavoid spurious error messages.\n\n2000-01-24  Thomas Tanner  <tanner@ffii.org>\n\n\tfix severe bugs reported by Elrond <Elrond@Wunder-Nett.org>\n\n\t* ltconfig.in: replace $objdir with $output_objdir\n\n\t* ltmain.in: change to the builddir before relinking programs\n\n\t* ltmain.in, ltconfig.in, libtool.m4, ltdl.m4:\n\t  remove unnessary spaces from line endings\n\n2000-01-19  Thomas Tanner  <tanner@ffii.org>\n\n\t* ltmain.in: rewrite of the ILD code, merge linking code for\n\t  programs, libraries and objects, allow linking of shared libraries\n\t  against static libraries/objects on platforms that support it\n\t  but print a warning, fix some typos\n\n\t* partially revert my previous change and\n\t  update only copyright notices of files that were actually modified\n\n\t* NEWS: update\n\n\t* libltdl/Makefile.am: version number was wrong\n\n\t* libltdl/ltdl.c (tryall_dlopen): revert Gary's change\n\t  since it breaks dlpreopening\n\t* ltdl.m4: ditto\n\n\t* libltdl/ltdl.c (sys_search_path): search in the system default\n\t  library search path, too\n\t* ltdl.m4 (AC_LTDL_SYSSEARCHPATH): extract the path\n\n\t* libltdl/ltdl.c (find_module): remove bogus file_not_found_error\n\n\t* libltdl/ltdl.c (load_deplibs): implement loading of dependency\n\t  libraries\n\t* libltdl/ltdl.c (unload_deplibs): implement unloading of dependency\n\t  libraries\n\t* libltdl/ltdl.c (lt_dlexit): correctly close all modules and\n\t  their dependencies\n\n\t* libltdl/ltdl.c (lt_dlforeach): new function\n\t* libltdl/ltdl.h: ditto\n\t* doc/libtool.texi (using libltdl): document it\n\n\t* libtool.m4: reformatting, only add -I$topsrc_dir/libltdl to\n\t  INCLTDL\n\n\t* libtoolize.in: reformatting\n\t* ltconfig.in: reformatting\n\t* ltmain.in: reformatting\n\n\t* mdemo/configure.in: AC_SUBST INCLTDL\n\t* mdemo/Makefile.am: use INCLTDL\n\n\t* tests/Makefile.am: reexport OBJEXT and EXEEXT\n\t* tests/dryrun.test: use them for building main.obj and mdemo.exe\n\n2000-01-17  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (tryall_dlopen): Abort with\n\tfile_not_found_error before trying all lib_open() methods\n\tif the file to be dlopened doesn't exist.\n\t* ltdl.m4 (AC_HAVE_HEADERS): add unistd.h.\n\n2000-01-16  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (find_file): memory error fixed.\n\n2000-01-14  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltconfig.in (Usage): Now it matches the code!\n\tReported by Jon Leichter <jon@symas.com>\n\n\t* README:  Some notes about libtool release numbers.\n\n\t* mdemo/README: Explain the deliberate incompleteness of the\n\tWindows port.\n\t* mdemo/configure.in: Use AC_LIBTOOL_WIN32_DLL.\n\t* mdemo/Makefile.am (LDFLAGS):  Add -no-undefined.\n\n\t* libltdl/ltdl.h (LTDL_STMT_START, LTDL_STMT_END):  Macros for\n\twrapping other macros to make a portable compound statement from\n\tmultiple C statements in the expansion.\n\t(LTDL_SET_PRELOADED_SYMBOLS): Use the above macros to add an\n\textern declaration for lt_preloaded_symbols, to remove\n\tdependency on undefined symbol from libltdl.dll on cygwin (and\n\tother -no-undefined architectures).\n\t* libltdl/ltdl.c (lt_preloaded_symbols): No longer defined here.\n\n\t* libtool,m4 (AC_LIBTOOL_SETUP):  The result of lt_cv_need_dllmain\n\twas set to the opposite of what it should be.\n\t* configure.in (AC_LIBTOOL_WIN32_DLL):  Call to this macro is\n\trequired for libtool configury to test lt_cv_need_dllmain on\n\tWindows.\n\n\t* ltconfig.in (opt_cr, mingw*): replace unescaped ? with correctly\n\tescaped and portable \\{0,1\\} in sed expression.\n\tFrom Jon Leichter <jon@symas.com>\n\n2000-01-13  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtool.m4 (AC_LIBLTDL_CONVENIENCE): Add -I${top_srcdir}/libltdl\n\tto default INCLTDL for VPATH.\n\t(AC_LIBLTDL_INSTALLABLE): ditto.\n\tReported by Tom Tromey <tromey@cygnus.com>\n\n2000-01-12  Thomas Tanner  <tanner@ffii.org>\n\n\t* update all copyright notices to 2000\n\n\t* doc/libtool.texi (using libltdl): document new lt_dlinfo struct,\n\t  replace NULL with @code{NULL}, document lt_dlsetdata(),\n\t  lt_dlgetdata() and lt_dlgetinfo()\n\t* libltdl/Makefile.am: increment interface version number\n\t* libltdl/configure.in: set version number to 1.1\n\t* libltdl/ltdl.c: make some variables public by moving them\n\t  to the info struct, add support for application specific data\n\t  within module handles, new lt_dlsetdata(), lt_dlgetdata() and\n\t  lt_dlgetinfo() functions,\n\t  fix memory leaks, minor cleanups\n\t* libltdl/ltdl.h: ditto\n\t* mdemo/main.c: demonstrate use of lt_dlgetinfo,\n\t  improved handling of errors\n\n\t* ltconfig.in: set hardcode_into_libs = yes for GNU/Hurd, Linux\n\t  and Solaris, only hardcode *all* run-paths if hardcode_into_libs\n\t  is set to 'all', otherwise hardcode only user-specified rpaths\n\t  into libraries\n\t* ltmain.in: minor cleanups, we don't need to add user-specified\n\t  rpaths to compile_rpath, finalize_rpath is sufficient\n\n\t* ltconfig.in: transform linux* -> *linux-gnu* _after_ host_os has\n\t  been set! (reported by Bruno Haible <haible@ilog.fr>)\n\n\t* configure.in: AC_SUBST reload_flag, deplibs_check_method\n\t  and file_magic_cmd\n\n\t* README: use 'libtool --version' instead of 'ltconfig --version'\n\t  (suggested by Francios Pinard <pinard@iro.umontreal.ca>\n\n2000-01-10  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.h (LTDL_DIRSEP_CHAR): Leave undefined when\n\tnot compiling for a Windows target.\n\t* libltdl/ltdl.c (canonicalize_path): New function to\n\tensure internal paths use '/' directory separators.\n\t(find_file): use canonicalize_path.  Memory management\n\tchanged to cope.\n\t(lt_dlopen): ditto.\n\t(free_vars): Removed `dir' and `name', which are now handled\n\tinternally.\n\n\t* libltdl/ltdl.h (LTDL_DIRSEP_CHAR): Define to '/' or '\\\\',\n\tas suitable for the target host.\n\t(LTDL_PATHSEP_CHAR): Similarly with ':' or ';'.\n\t* libltdl/ltdl.c: Use LTDL_DIRSEP_CHAR and LTDL_PATHSEP_CHAR\n\tinstead of hardcoding throughout.\n\tReported by Jon Leichter <jon@symas.com>\n\nContinued in ChangeLog.1999\n-- \n  Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n  2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n\n  This file is part of GNU Libtool.\n\nCopying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout warranty of any kind.\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/ChangeLog.2007": "2007-11-30  Stefan Sperling  <stsp@elego.de>  (tiny change)\n\n\t* doc/libtool.texi (Linking executables): Reorder paragraphs.\n\n2007-11-26  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC) [ linux ]: The IBM\n\tXL 8.0 C++ compiler may also be called xlc++*, not only xlC*.\n\tReport by Nysal K Jan <jnysal@in.ibm.com>.\n\n2007-11-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_BUILDDIR): New macro.\n\tWarn about whitespace in the absolute build tree name.\n\t(LT_INIT): Use it.\n\t* THANKS: Update.\n\tReport by Jim Meyering.\n\n\t* libltdl/config/ltmain.m4sh (func_extract_an_archive)\n\t(func_extract_archives): Add some quoting.\n\n2007-11-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tUse `${top_build_prefix}' for better compatibility with non-GNU make.\n\t* libltdl/m4/ltdl.m4 (_LT_BUILD_PREFIX): New macro.\n\tIf the Autoconf version used is >= 2.62, then expand to\n\t`${top_build_prefix}', otherwise to `${top_builddir}/'.\n\t(LTDL_CONVENIENCE, LTDL_INSTALLABLE): Use it for defining\n\tLIBLTDL.  Fixes a build failure with AIX make in a package\n\tusing convenience libltdl in nonrecursive mode.\n\t* doc/libtool.texi (Distributing libltdl): Document requirements\n\tto define `top_build_prefix' if Automake is not used.\n\tReport by Bob Friesenhahn.\n\n2007-11-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAvoid warnings about conftest.dSYM directories on Mac OS X Leopard.\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_BOILERPLATE)\n\t(_LT_LINKER_OPTION, _LT_CMD_GLOBAL_SYMBOLS): Remove\n\tconftest.dSYM directory.\n\tReport and analysis by Jeff Squyres and Peter O'Gorman.\n\n2007-11-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/configure.ac: Drop the broken and long-disabled code\n\tto output a banner for the libltdl configure.  Avoids the need\n\tto ship mkstamp with libltdl.\n\n2007-11-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/runpath-in-lalib.at: New test.\n\t* Makefile.am: Update.\n\tReport by Benoit SIGOURE <tsuna@lrde.epita.fr>.\n\n2007-10-16  Eric Blake  <ebb9@byu.net>\n\n\tSpeed up bootstrap by improving lt_join.\n\t* libltdl/m4/ltsugar.m4 (lt_join, _lt_join): Rewrite to mirror\n\tAutoconf 2.62's faster implementation.\n\n2007-10-12  Eric Blake  <ebb9@byu.net>\n\n\tWhitespace cleanup.\n\t* libltdl/m4/ltsugar.m4: Avoid space-tab in indents.\n\t* libltdl/m4/libtool.m4: Avoid trailing space.\n\n\tDeal with Autoconf 2.62's semantic change in m4_append.\n\t* libltdl/m4/ltsugar.m4 (lt_append): Replace broken versions of\n\tm4_append.\n\t(lt_if_append_uniq): Don't require separator to be overquoted, and\n\tavoid broken m4_append.\n\t(lt_dict_add): Fix typo.\n\t* libltdl/m4/libtool.m4 (_LT_DECL): Don't overquote separator.\n\n2007-10-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh: Also sanitize `LANGUAGE'.\n\t(func_mode_execute): Also restore `LANGUAGE', for old glibc.\n\tReport by Paul Eggert against Autoconf.\n\n2007-10-11  Eric Blake  <ebb9@byu.net>\n\n\t* libltdl/.cvsignore: Ignore argz.h.\n\n2007-10-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC)\n\t<lt_cv_prog_compiler_pic_works>: Renamed from\n\tlt_prog_compiler_pic_works.\n\t<lt_cv_prog_compiler_static_works>: Renamed from\n\tlt_prog_compiler_static_works.\n\t* NEWS: Update.\n\n2007-10-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_compile): Accept\n\textension `.sx'.\n\t* tests/suffix.test: Test it.\n\n2007-09-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/lt_dlloader.c (loader_callback, lt_dlloader_get): Use\n\tNULL, not 0, for the benefit of too picky compilers like PGI.\n\t* slist.c (slist_tail): Likewise.  Include stddef.h, for NULL.\n\tReport by Jeff Squyres.\n\n2007-09-05  Eric Blake  <ebb9@byu.net>\n\n\t* libltdl/ltdl.c (lt_dlcaller_get_data): Work even when no caller\n\thas set data.\n\n2007-09-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (User defined module data)\n\t<lt_dlinterface_register>: Document that a NULL place matches\n\tall modules.\n\t* libltdl/lt_dlloader.c (lt_dlloader_remove): Actually iterate\n\tover all open modules when looking for modules that use it.\n\tIf a resident module is found, return but do not set the error\n\tstring.\n\t* libltdl/ltdl.c (lt_dlexit): When removing dlloaders, ignore\n\terrors that stem from earlier failed commands.  Exposed by the\n\tlt_dladvise test.\n\tFixes regression over branch-1-5.\n\tMemleak report as Coverity CID 19 via Jeff Squyres.\n\n2007-09-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* NEWS: Update.\n\n\t* libltdl/ltdl.c (trim): Fix possible write beyond array bound.\n\n\t* libltdl/ltdl.c (lt_dlopenadvise): Instead of asserting, return\n\tFILE_NOT_FOUND if the filename is \"\".\n\n\t* libltdl/ltdl.c (try_dlopen): Fix computation of extension,\n\tavoids subtracting pointer from NULL pointer.\n\n\t* libltdl/ltdl.c (try_dlopen, lt_dlforeachfile): Do not test\n\tarray address of sys_dlsearch_path against NULL, rather test for\n\tnonempty contents.\n\tCoverity reports CID 148 and CID 149 via Jeff Squyres.\n\n\t* libltdl/ltdl.c (tryall_dlopen_module): Fix string length\n\tcomputation: do not allocate more than needed.\n\n2007-08-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/loaders/preopen.c (vm_close): `module' is unused.\n\tCoverity report CID 158 via Jeff Squyres.\n\n\t* libltdl/ltdl.c (parse_dotla_file): If we run out of memory,\n\tdo not close the .la file twice.\n\tCoverity report CID 440 via Jeff Squyres.\n\n\t* libltdl/ltdl.c (has_library_ext): Remove dead code.\n\tCoverity report CID 561 against Open MPI via Jeff Squyres.\n\n2007-08-29  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/slist.c (slist_remove): When a matching item is found,\n\tbreak out of the loop to return the first match; also fixes\n\tpossible NULL dereference.\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC, _LT_LINKER_SHLIBS)\n\t(_LT_LANG_CXX_CONFIG) [ linux ]: Add support for IBM XL 8.0\n\tC/C++ (xlc*, xlC*) and IBM XL Fortran 10.1 (xlf*) on GNU/Linux,\n\ttested on ppc, pending a $shlibpath_var related fix.\n\t(_LT_SYS_HIDDEN_LIBDEPS): Double-quote $output_verbose_link_cmd\n\tproperly during evaluation, obsoleting $no_glob_subst mangling.\n\t* NEWS: Update.\n\n2007-08-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [ linux ]\n\t[ k*bsd*-gnu ] <shlibpath_overrides_runpath>: Avoid spurious\n\toutput in runpath test.\n\n2007-08-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC) [ mingw, cygwin ]\n\t<GCJ>: Do not use -DDLL_EXPORT.\n\tReport by Ross Ridge <rridge@csclub.uwaterloo.ca>.\n\n\t* Makefile.am (edit): Do not warn against manual editing for the\n\tgenerated files libtool, libtoolize, libltdl/m4/ltversion.m4,\n\ttests/defs, as they are still in a preferred source code form as\n\trequired by GPL.\n\tReport by DJ Delorie.\n\n2007-08-15  Dirk Mueller  <dmueller@suse.de>  (tiny change)\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/ltdl.c (parse_dotla_file): Avoid a strlen.  When\n\treading .la files, cope with files that are not\n\tnewline-terminated.\n\n2007-08-05  Tilman Koschnick  <til@subnetz.org>  (tiny change)\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC, _LT_LANG_CXX_CONFIG)\n\t[ linux ]: Treat pgcpp as Portland Group C++ compiler as well.\n\n2007-08-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/ltdl.c (try_dlopen): Use `attempt' rather than\n\t`filename', as the former has the needed extension when called\n\tby lt_dlopenext.\n\tReport by Brian Barrett.\n\n2007-07-27  Peter Rosin  <peda@lysator.liu.se>\n\n\t* Makefile.am: Pass STRIP through to the testsuite, so that\n\ttests that run configure will use the same strip program.\n\n2007-07-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/mdemo-exec.test: Also try absolute library names.\n\t* tests/mdemo/main.c (test_dl, main): Try lt_dlopenext as well.\n\t* THANKS: Update.\n\tReport by Brian Barrett.\n\n2007-07-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/fdl.texi: Update to GFDL 1.2.\n\t* doc/libtool.texi: Adjust.  Put License in Appendix.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Remove each\n\tintermediate relinked object after use, to avoid quadratic space\n\tcomplexity when linking partially.\n\tReport by Isidor Zeuner <eezyy@gmx.net>.\n\n2007-07-23  Eric Blake  <ebb9@byu.net>\n\n\t* libltdl/config/ltmain.m4sh: Whitespace cleanup.\n\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src)\n\t<chase_symlinks>: Avoid compiler warning.\n\n2007-07-22  Peter Rosin  <peda@lysator.liu.se>\n\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src): Add\n\tsupport for Microsoft Visual C. Also, older MinGW versions\n\tseem to need stdint.h to find intptr_t.\n\n2007-07-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [linux]:\n\tIgnore lines in ld.so.conf starting with 'hwcap '.\n\n2007-07-16  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* tests/cdemo-exec.test: use $EXEEXT where appropriate\n\tto correct mingw cross-compile issues.\n\t* demo-deplibs.test: Ditto.\n\t* demo-exec.test: Ditto.\n\t* demo-inst.test: Ditto.\n\t* demo-relink.test: Ditto.\n\t* depdemo-exec.test: Ditto.\n\t* depdemo-inst.test: Ditto.\n\t* depdemo-relink.test: Ditto.\n\t* f77demo-exec.test: Ditto.\n\t* fcdemo-exec.test: Ditto.\n\t* mdemo-exec.test: Ditto.\n\t* mdemo-inst.test: Ditto.\n\t* mdemo2-exec.test: Ditto.\n\t* pdemo-exec.test: Ditto.\n\t* pdemo-inst.test: Ditto.\n\t* tagdemo-exec.test: Ditto.\n\n2007-07-14  Peter Rosin  <peda@lysator.liu.se>\n\n\t* AUTHORS, THANKS: Peter Ekberg got married, now Peter Rosin.\n\n2007-07-13  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* libltdl/m4/libtool.m4 (func_dirname_and_basename) <XSI>:\n\tNew function.\n\t(func_dirname_and_basename) <!XSI>: New function.\n\t* libltdl/config/ltmain.m4sh (func_ltwrapper_scriptname):\n\tCall it.  Also, take advantage of missed optimization using\n\tfunc_dirname's additional arguments.\n\t(func_mode_compile): Call it.\n\t(func_mode_install): Call it.\n\t(func_mode_link): Call it.\n\n2007-07-12  Peter Rosin  <peda@lysator.liu.se>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Strip the cwrapper\n\tusing $STRIP instead of relying on the tools to support -s, which\n\tMSVC doesn't.\n\n2007-07-06  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/config/libtool.m4sh: Don't pass -msg_* through to the\n\tlinker.\n\tReported by Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n2007-07-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libltdl/lt__alloc.c, libltdl/loaders/preopen.c,\n\tlibltdl/loaders/dyld.c, libltdl/loaders/dlopen.c, libltdl/ltdl.c,\n\tlibltdl/lt_error.c, libltdl/lt_dlloader.c, libltdl/lt__dirent.c:\n\tInclude lt__private.h prior to any system headers.\n\t* libltdl/lt__alloc.c: Remove redundant inclusion of configuration\n\theader.\n\n2007-07-04  Eric Blake  <ebb9@byu.net>\n\n\t* libltdl/ltdl.c (advise_dup): Delete function no longer used\n\tafter memleak fix three days ago.\n\n2007-07-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_ENABLE_LOCK) [ solaris ]: Cater to\n\told Sparc Solaris 7 ld that does not understand `-64'.\n\tReport by Vincent Lefevre <vincent@vinc17.org>.\n\n2007-07-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/lt~obsolete.m4 (LTOBSOLETE_VERSION): New macro, to\n\tforce-pull in this file by aclocal.\n\t* libltdl/m4/libtool.m4 (LT_INIT): Require LTOBSOLETE_VERSION.\n\t* tests/libtoolize.at (upgrading verbatim style aclocal.m4):\n\tAdjust.\n\tReport by H. J. Lu <hjl@lucon.org>.\n\n\t* libltdl/ltdl.c (tryall_dlopen): Rename argument to have typed\n\talias of `advise' instead of allocating a copy.  Fixes memleak.\n\n2007-06-30  Peter Breitenlohner  <peb@mppmu.mpg.de>\n\n\t* libltdl/m4/libtool.m4 (LT_SYS_DLOPEN_SELF): Correct a typo\n\t(\"-dld\" instead of \"-ldld\").\n\n2007-06-24  Gary V. Vaughan  <gary@gnu.org>\n\n\tAdd a test to simulate a failure visible on systems which\n\tneed a library prefix like 'lib', such as BeOS.  Fix a number\n\tof bugs exposed by this test in order for it to pass.\n\tCurrently the prefix is hardcoded as 'lib', as I am not aware\n\tof systems that require a different prefix:\n\n\t* libltdl/loaders/preopen.c (lt_dlpreload_open):  Move error\n\tcondition out of test loop to be sure that each originator is\n\ttried, instead of erroring out if the first doesn't match.\n\tSupport passing NULL as the originator to load all preloaded\n\tmodules originating in the program itself.\n\t* libltdl/lt_dlloader.c (lt_dlloader_dump): New debug function.\n\t* libltdl/libltdl/lt_dlloader.h (lt_dlloader_dump): Declare it\n\twhen LT_DEBUG_LOADERS is defined at compile time.\n\t* libltdl/ltdl.c (lt_dlinit): Dump loader list after successful\n\tinitialisation.\n\t(tryall_dlopen): Add a new VTABLE parameter to force use of a\n\tspecific loader in preference to trying every loader in turn.\n\tAdjust all callers.\n\t(try_dlopen): Always see whether a module was preloaded for\n\tmodule names with no directory component before searching the\n\tfilesystem for a match.\n\t* libltdl/m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS): Declare\n\ta new global_symbol_to_c_name_address_lib_prefix variable.\n\t(global_symbol_to_c_name_address_lib_prefix): The sed\n\texpressions to use when a lib prefix is enforced need to be\n\tslightly different to work with preloaded modules.\n\t* libltdl/config/ltmain.m4sh (func_generate_dlsyms): In order\n\tto name preloaded symbols correctly for the lookup algorithm\n\tto work when the loaded module file must be prefixed with lib.\n\tUse global_symbol_to_c_name_address_lib_prefix when\n\tneed_lib_prefix is other than no.\n\t* tests/need_lib_prefix.at: New test to check for breakage on\n\thosts where need_lib_prefix is unknown.\n\t* Makefile.am (TESTSUITE_AT): Add new test.\n\t* tests/TODO: Note missing tests that would have caught some\n\tof the latent bugs fixed by this patch.\n\t* HACKING: Document libltdl keyword.\n\t* NEWS: Updated.\n\n2007-06-24  Gary V. Vaughan  <gary@gnu.org>\n\n\tReenable compilation of libltdl with C++:\n\n\t* libltdl/ltdl.c (tryall_dlopen): Rename the try variable to\n\tattempt, and cast explicitly.\n\t(advise_dup): Add explicit cast.\n\n2007-06-22  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/config/ltmain.m4sh (version-number) [irix]: Don't subtract\n\t1 from major as it may be less than age.\n\n2007-06-21  Noah Misch  <noah@cs.caltech.edu>\n\n\t* tests/f77demo/configure.ac [--with-dist]: New option.  Skip most\n\tFortran checks when given.\n\t* tests/fcdemo/configure.ac [--with-dist]: Likewise.\n\t* Makefile.am (@DIST_MAKEFILE_LIST@): Pass --with-dist.\n\tReported by Benoit Sigoure <tsuna@lrde.epita.fr>.\n\n2007-06-19  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* AUTHORS: Add myself.\n\n2007-06-18  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* libltdl/config/ltmain.m4sh: Add new magic variable\n\tfor use with cwrapper.\n\t(func_ltwrapper_script_p): New function.\n\t(func_ltwrapper_executable_p): New function.\n\t(func_ltwrapper_scriptname): New function.\n\t(func_ltwrapper_p): Accomodate both wrapper scripts and\n\twrapper executables.\n\t(func_mode_execute): Handle $file that is a wrapper\n\tscript and $file that is a wrapper executable differently.\n\t(func_mode_install) [cygwin|mingw]: If $file is a wrapper\n\texecutable, use func_ltwrapper_scriptname to determine\n\twrapper script name. Afterwards, always use\n\tfunc_ltwrapper_script_p instead of func_ltwrapper_p.\n\t(func_emit_libtool_wrapper_script): Rename to...\n\t(func_emit_wrapper): ...this. All callers changed.\n\t(func_emit_libtool_cwrapperexe_source): Rename to...\n\t(func_emit_cwrapperexe_src): ...this. All callers changed.\n\tEmbed new magic_exe variable into source. Private transient\n\twrapper script now called foo_ltshwrapperTMP, not\n\tfoo_ltshwrapper.\n\t(func_emit_cwrapperexe_src) [main, mingw]: Use _spawnv\n\tand return child's exit code manually rather than rely on\n\tbroken execv.\n\t(func_mode_link) [cygwin|mingw]: Don't call dirname and\n\tbasename directly; use func_dirname and func_basename\n\twhen computing cwrapper names.  Use cwrapper to generate\n\twrapper script, and use pathname returned by\n\tfunc_ltwrapper_scriptname instead of $output.\n\t(func_mode_link) [NOT cygwin|mingw]: move wrapper script\n\tgeneration for non-win32 inside case statement, as default\n\tcase.\n\t(func_mode_uninstall) [$name's extension != .lo|.la]:\n\t'clean' mode must handle $file differently if it is a libtool\n\twrapper script, or if it is a libtool wrapper executable.\n\t* tests/destdir.at [Simple DESTDIR install]: $EXEEXT fixups.\n\t* tests/destdir.at [DESTDIR with in-package deplibs]: Ditto.\n\n2007-06-17  Noah Misch  <noah@cs.caltech.edu>\n\n\t* AUTHORS: Add myself.\n\n2007-06-17  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/m4/libtool.m4 (LT_CMD_MAX_LEN): add quotes to\n\tthe test -n.\n\n2007-06-17  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* libltdl/m4/libtool.m4 (LT_CMD_MAX_LEN): ensure stderr\n\tis redirected even when getconf does not exist.\n\n2007-06-09  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* libltdl/config/ltmain.m4sh (func_emit_libtool_wrapper_script):\n\tTake an argument to specify value assigned to\n\tWRAPPER_SCRIPT_BELONGS_IN_OBJDIR in the emitted\n\tscript.\n\t(func_emit_libtool_cwrapperexe_source) [file scope]:\n\tdefine permission flags S_IXGRP and S_IXOTH if not\n\talready defined.\n\t(func_emit_libtool_cwrapperexe_source) [LTWRAPPER_DEBUGPRINTF]:\n\tUse C89-compatible syntax to mimic variadic macros.\n\tAdjust all callers.\n\t(func_emit_libtool_cwrapperexe_source) [check_executable]:\n\tavoid embedded #ifdefs; use S_IXGRP and S_IXOTH\n\tunconditionally.\n\t(func_emit_libtool_cwrapperexe_source) [make_executable]:\n\tditto.\n\t(func_emit_libtool_cwrapperexe_source): don't rewrite\n\tWRAPPER_SCRIPT_BELONGS_IN_OBJDIR posthoc; instead pass\n\tcorrect argument when calling func_emit_libtool_wrapper_script.\n\t(func_mode_link): pass correct argument when calling\n\tfunc_emit_libtool_wrapper_script.\n\n2007-06-07  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* libltdl/config/ltmain.m4sh (func_emit_libtool_cwrapperexe_source):\n\tensure that generated source follows GCS as nearly as\n\tpossible.\n\n2007-06-07  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* libltdl/config/ltmain.m4sh (func_emit_libtool_wrapper_script):\n\tadd code block to handle cases when wrapper script is in $objdir.\n\t(func_emit_libtool_cwrapperexe_source): replace DEBUG() macro\n\twith namespace-safe LTWRAPPER_DEBUGPRINTF(). Call\n\tfunc_emit_libtool_wrapper_script() with appropriate filters to\n\tembed script text in C char* static variable.\n\t(f_e_l_c_s: main): add new option --lt-dump-script, parse argv[]\n\tfor it, and take appropriate action.  Call chase_symlinks()\n\ton argv[0], in case this.exe was launched via one.  Use chased\n\tvalue to determine full absolute pathname of wrapper script, in\n\t$objdir. Unconditionally write script out to this pathname and\n\tset permission bits.  Remove extraneous ';' from debugging loop.\n\t(f_e_l_c_s: main) [mingw]: DOS-ize $SHELL before populating\n\tnewargv[0]; if $TARGETSHELL environment variable is set, use\n\tit instead of $SHELL and do not DOS-ize.  Ensure newargv[1]\n\t(wrapper script absolute path) uses only '/', not '\\'.  Make\n\tsure to call execv() with DOS-ized $SHELL (or un-DOS-ized\n\t$TARGETSHELL, if set)\n\t(f_e_l_c_s: make_executable): new function\n\t(f_e_l_c_s: chase_symlinks): new function (no-op if !S_ISLNK)\n\n2007-06-03  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/m4/libtool.m4 (old_archive_cmds): Remove\n\told_deplibs.\n\t* tests/archive-in-archive.at: Check for archives as members\n\tof static archives. Currently XFAILS, above only eliminates\n\tone of the two static archives.\n\t* Makefile.am: Add test.\n\tReported by Daniel Macks <dmacks@netspace.org>\n\n2007-06-01  Steve Ellcey  <sje@cup.hp.com>\n\n\t* libltdl/m4/libtool.m4 (LT_CMD_MAX_LEN): Try using getconf\n\tto set lt_cv_sys_max_cmd_len.\n\n2007-05-28  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link),\n\tlibltdl/m4/libtool.m4 [darwin]: Only use ${wl} in verstring\n\twith xlc.\n\n2007-05-22  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/lt_dladvise.at:  Use the lib prefix throughout for\n\tbetter portability - testing whether modules build and load\n\twithout that prefix is not the domain of this test.\n\tAlso, only run the test of the global hint with the depend\n\tmodule on hosts that can compile a module without passing\n\t-no-undefined in link mode.\n\n2007-05-10  Noah Misch  <noah@cs.caltech.edu>\n\n\t* tests/duplicate_deps.at: Make the XFAIL unconditional, but\n\tskip the test if the test link would succeed even without\n\t--preserve-dup-deps.\n\n\t* libltdl/config/general.m4sh (func_echo): Use $* instead of\n\t${1+\"$@\"}.\n\n2007-05-09  Eric Blake  <ebb9@byu.net>\n\n\t* libltdl/libltdl/lt_error.h (LT_ERROR_LEN_MAX): Adjust, to fix\n\tbuffer overflow in previous patch.\n\n2007-05-09  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/lt_dladvise.at: Commit missing file from below.\n\n2007-05-08  Gary V. Vaughan  <gary@gnu.org>\n\n\tWithout this patch, lt_dlopen always opens modules with symbol\n\tvisibility set according to the underlying implementation.\n\tHere, we add lt_dlopenadvise() to allow callers to request,\n\tamong other things, local or global symbol visibility from the\n\tunderlying dlloader:\n\n\t* libltdl/ltdl.c (LT_DLRESIDENT_FLAG): Removed.\n\t(LT_DLIS_RESIDENT): Use public is_resident info field.\n\t(LT_DLIS_SYMLOCAL, LT_DLIS_SYMGLOBAL): New macros to test for\n\tmodule symbol visibility status.\n\t(tryall_dlopen): If vtable->module_open() was able to act on\n\teither is_symlocal or is_symglobal hints, store that in\n\tthe handle flags.\n\t(lt_dlopenadvise): New function that works like lt_dlopen(),\n\tbut accepts an advise type to determine whether to ask\n\tdlloaders to change default symbol visibility.\n\t(lt_dlopen, lt_dlopenext): Just call lt_dlopenadvise() with\n\tthe correct parameters.\n\t(lt_dladvise_init, lt_dladvise_destroy): New functions to\n\tinitialize and destroy an advise type hint.\n\t(lt_dladvise_ext, lt_dladvise_resident, lt_dladvise_local)\n\t(lt_dladvise_global): Set hints on an advise type.\n\t(openadvise): Factored out of lt_dlopenadvise.\n\t(has_library_ext): Factored out of lt_dlopenadvise.\n\t* libltdl/ltdl.h: Declare all of the above.\n\t(lt_dlinfo): New fields for advise hints.\n\t* libltdl/libltdl/lt_dlloader.h (lt_module_open): Add a new\n\tadvise parameter.  Adjust all callers.\n\t(lt_dladvise): New opaque type for advise hints.\n\t* libltdl/libltdl/lt__private.h (lt__advise): Declare\n\tcontents of opaque lt_dladvise type.\n\t* libltdl/libltdl/lt_error.h (CONFLICTING_FLAGS): New error\n\tfor attempts to have local and global symbol visibility at the\n\tsame time.\n\t* libltdl/loaders/dld_link.c, libltdl/loaders/dyld.c,\n\tlibltdl/loaders/load_add_on.c, libltdl/loaders/loadlibrary.c,\n\tlibltdl/loaders/preopen.c, libltdl/loaders/shl_load.c: Adjust.\n\t* libltdl/loaders/dlopen.c (RTLD_LOCAL, RTLD_GLOBAL): Try to\n\tdefine these symbols if the system has equivalents.\n\t(vmopen): If unable to act on a caller request to set symbol\n\tvisibility, then unset the relevant hints in the advise type.\n\t* tests/lt_dladvise.at: New tests for the above.\n\t* doc/libtool.texi (Libltdl Interface): Updated.\n\t* NEWS: Updated.\n\n2007-05-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): When adding\n\tnew_inherited_linker_flags to compiler_flags, remember to\n\ttranslate .ltframework back.  Fixes bug introduced 2007-04-23.\n\t* THANKS: Update.\n\t* tests/inherited_flags.at: Amend test.\n\tReport by Christoph Egger.\n\n2007-05-03  Reuben Thomas  <rrt@sc3d.org>  (tiny change)\n\n\t* doc/libtool.texi (Libltdl interface): Fix typo.\n\n2007-05-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (clean-ltmain-sh): Removed.\n\t(libtool, $(srcdir)/$(m4dir)/ltversion.m4)\n\t($(srcdir)/$(auxdir)/ltmain.sh): Updated to not depend on any\n\tphony rules.  Test `$?' for prerequisites that should always\n\tcause us to update the target.  Fixes rebuilding rules, at the\n\tcost of sometimes updating too much with non-GNU make.\n\n2007-04-27  Noah Misch  <noah@cs.caltech.edu>\n\n\t* tests/ctor.at: New file.\n\t* Makefile.am (TESTSUITE_AT): Add tests/ctor.at.\n\n2007-04-27  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* libltdl/libltdl/lt__glibc.h: Use !HAVE_WORKING_ARGZ\n\tinstead of SYSTEM_ARGZ_IS_BROKEN.\n\t* libltdl/m4/argz.m4 (gl_FUNC_ARGZ): Ditto.  Also, minor\n\tstylistic improvements.\n\tReport by Bruno Haible <bruno@clisp.org>.\n\n2007-04-25  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/argz_.h: ensure error_t definition is obtained\n\tin same mechanism system argz.h would have.\n\t* libltdl/libltdl/lt__glibc.h: also detect if\n\tSYSTEM_ARGZ_IS_BROKEN when determining whether to re#def\n\targz* functions.\n\t* libltdl/m4/argz.m4 (gl_FUNC_ARGZ): add new test to check\n\tif $host's argz facilities are known bad.  Err on the side\n\tof caution if cross-compiling.\n\n2007-04-25  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* README, README.alpha: Document how to test an arbitrary\n\tinstalled libtool script.\n\n2007-04-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/cmdline_wrap.at: Avoid `AT_CAPTURE_FILE' if it not\n\tdefined (Autoconf < 2.60).\n\t* tests/shlibpath.at: Add `libtool' keyword.\n\n\t* tests/indirect_deps.at: New file, with tests to ensure\n\t`link_all_deplibs=no' does not break functionality.\n\t* Makefile.am: Adjust.\n\n2007-04-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Fix accumulation\n\tof `inherited_linker_flags' entries from multiple deplibs, by\n\tadding $new_inherited_linker_flags only once, only in link pass.\n\t* tests/inherited_flags: Amend test to expose this.\n\t* NEWS: Adjust: kill one regression, but add note about the\n\tfeature new in 1.9b.\n\tReport by Jeff Squyres and others.\n\n2007-04-23  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): move wrapper\n\tscript generation from here...\n\t(func_emit_libtool_wrapper_script): to this new function, and\n\twrite to stdout\n\t(func_mode_link): move cwrapper source code generation from\n\there...\n\t(func_emit_libtool_cwrapperexe_source): to this new function,\n\tand write to stdout\n\t(func_mode_link): call the two new functions and redirect\n\toutput to appropriate file.\n\n2007-04-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link) <-no-install>\n\t[ darwin ]: Treat like `-no-fast-install', as we cannot\n\thardcode.  Report by Simon Josefsson.\n\n2007-04-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (Link mode) <-no-install>: Mention that this\n\tstill generates a wrapper script on systems without hardcoding.\n\t* tests/stresstest.at: Test `-no-install'.\n\t* THANKS: Update.\n\tReport by Simon Josefsson.\n\n2007-03-30   Matthieu Herrb  <matthieu.herrb@laas.fr>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG)\n\t[ openbsd ]: Add an explicit check for shared libraries support.\n\n2007-03-29  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am ($(srcdir)/$(m4dir)/ltversion.m4): Fix quoting\n\terror.\n\n2007-03-28  Gary V. Vaughan  <gary@gnu.org>\n\n\t* HACKING (Abstraction layers in libltdl): Rewritten somewhat\n\tfor (hopefully) better clarity.\n\n2007-03-26  Gary V. Vaughan  <gary@gnu.org>\n\n\tThe stamp-vcl file rules caused non-gnu make programs to rerun\n\tparts of the configuration process on each invocation.  Instead\n\tof relying on a stamp file, we now compare version numbers of\n\tgenerated files with the ChangeLog timestamp manually in the\n\taffected make rules to decide whether regenerating is necessary:\n\n\t* Makefile.am (EXTRA_DIST): Remove stamp-vcl.\n\t(clean-ltmain-sh): Also remove users' obsolescent stamp-vcl.\n\t(rebuild): Keep some common code here for...\n\t(libtool, libltdl/m4/ltversion.m4, libltdl/config/ltmain.sh):\n\tRewritten to work without reference to intermediate stamp-vcl\n\tfile.\n\t* configure.ac (CONFIG_STATUS_DEPENDENCIES): Change from\n\tstamp-vcl to ChangeLog.\n\t* NEWS: Removed entry saying this fix is needed.\n\n2007-03-25  Gary V. Vaughan  <gary@gnu.org>\n\n\t* HACKING (LGPL with Libtool exception clause): Typo.\n\tReported by Tim Van Holder  <tim.van.holder@telenet.be>\n\n\t* HACKING (Licensing Rules): Explain the various license texts\n\tused for files distributed with Libtool, and update license text\n\tto match.\n\t* Makefile.am, Makefile.maint README, README.alpha, THANKS, TODO,\n\tbootstrap, clcommit.m4sh, configure.ac, libltdl/Makefile.inc,\n\tlibltdl/README, libltdl/argz.c, libltdl/argz_.h,\n\tlibltdl/config/general.m4sh, libltdl/config/getopt.m4sh,\n\tlibltdl/config/ltmain.m4sh, libltdl/config/mailnotify.m4sh,\n\tlibltdl/config/mkstamp, libltdl/configure.ac,\n\tlibltdl/libltdl/lt__alloc.h, libltdl/libltdl/lt__dirent.h,\n\tlibltdl/libltdl/lt__glibc.h, libltdl/libltdl/lt__private.h,\n\tlibltdl/libltdl/lt__strl.h, libltdl/libltdl/lt_dlloader.h,\n\tlibltdl/libltdl/lt_error.h, libltdl/libltdl/lt_system.h,\n\tlibltdl/libltdl/slist.h, libltdl/loaders/dld_link.c,\n\tlibltdl/loaders/dlopen.c, libltdl/loaders/dyld.c,\n\tlibltdl/loaders/load_add_on.c, libltdl/loaders/loadlibrary.c,\n\tlibltdl/loaders/preopen.c, libltdl/loaders/shl_load.c,\n\tlibltdl/lt__alloc.c, libltdl/lt__dirent.c, libltdl/lt__strl.c,\n\tlibltdl/lt_dlloader.c, libltdl/lt_error.c, libltdl/ltdl.c,\n\tlibltdl/ltdl.h, libltdl/m4/argz.m4, libltdl/m4/libtool.m4,\n\tlibltdl/m4/ltdl.m4, libltdl/m4/ltoptions.m4,\n\tlibltdl/m4/ltsugar.m4, libltdl/m4/ltversion.in,\n\tlibltdl/m4/ltversion.m4, libltdl/m4/lt~obsolete.m4,\n\tlibltdl/slist.c, libtoolize.m4sh, tests/am-subdir.at,\n\ttests/cdemo-conf.test, tests/cdemo-exec.test,\n\ttests/cdemo-make.test, tests/cdemo-shared.test,\n\ttests/cdemo-static.test, tests/cdemo-undef.test,\n\ttests/cdemo/Makefile.am, tests/cdemo/configure.ac,\n\ttests/cdemo/foo.c, tests/cdemo/foo.h, tests/cdemo/main.c,\n\ttests/cmdline_wrap.at, tests/convenience.at, tests/defs.m4sh,\n\ttests/demo-conf.test, tests/demo-deplibs.test,\n\ttests/demo-exec.test, tests/demo-hardcode.test,\n\ttests/demo-inst.test, tests/demo-make.test,\n\ttests/demo-nofast.test, tests/demo-noinst-link.test,\n\ttests/demo-nopic.test, tests/demo-pic.test,\n\ttests/demo-relink.test, tests/demo-shared.test,\n\ttests/demo-static.test, tests/demo-unst.test,\n\ttests/demo/Makefile.am, tests/demo/configure.ac,\n\ttests/demo/dlmain.c, tests/demo/foo.c,\n\ttests/demo/foo.h, tests/demo/hell1.c, tests/demo/hell2.c,\n\ttests/demo/hello.c, tests/demo/main.c,\n\ttests/depdemo-conf.test, tests/depdemo-exec.test,\n\ttests/depdemo-inst.test, tests/depdemo-make.test,\n\ttests/depdemo-nofast.test, tests/depdemo-relink.test,\n\ttests/depdemo-shared.test, tests/depdemo-static.test,\n\ttests/depdemo-unst.test, tests/depdemo/Makefile.am,\n\ttests/depdemo/configure.ac, tests/depdemo/l1/Makefile.am,\n\ttests/depdemo/l1/l1.c, tests/depdemo/l1/l1.h,\n\ttests/depdemo/l2/Makefile.am, tests/depdemo/l2/l2.c,\n\ttests/depdemo/l2/l2.h, tests/depdemo/l3/Makefile.am,\n\ttests/depdemo/l3/l3.c, tests/depdemo/l3/l3.h,\n\ttests/depdemo/l4/Makefile.am, tests/depdemo/l4/l4.c,\n\ttests/depdemo/l4/l4.h, tests/depdemo/main.c,\n\ttests/depdemo/sysdep.h, tests/deplibs-ident.at,\n\ttests/destdir.at, tests/duplicate_conv.at,\n\ttests/duplicate_deps.at, tests/duplicate_members.at,\n\ttests/early-libtool.at, tests/export.at,\n\ttests/f77demo-conf.test, tests/f77demo-exec.test,\n\ttests/f77demo-make.test, tests/f77demo-shared.test,\n\ttests/f77demo-static.test, tests/f77demo/Makefile.am,\n\ttests/f77demo/configure.ac, tests/f77demo/cprogram.c,\n\ttests/f77demo/foo.h, tests/f77demo/fooc.c,\n\ttests/fail.at, tests/fcdemo-conf.test, tests/fcdemo-exec.test,\n\ttests/fcdemo-make.test, tests/fcdemo-shared.test,\n\ttests/fcdemo-static.test, tests/fcdemo/Makefile.am,\n\ttests/fcdemo/configure.ac, tests/fcdemo/cprogram.c,\n\ttests/fcdemo/foo.h, tests/fcdemo/fooc.c,\n\ttests/inherited_flags.at, tests/libtoolize.at,\n\ttests/link-2.test, tests/link-order.at, tests/link-order2.at,\n\ttests/link.test, tests/lt_dlexit.at, tests/mdemo-conf.test,\n\ttests/mdemo-dryrun.test, tests/mdemo-exec.test,\n\ttests/mdemo-inst.test, tests/mdemo-make.test,\n\ttests/mdemo-shared.test, tests/mdemo-static.test,\n\ttests/mdemo-unst.test, tests/mdemo/Makefile.am,\n\ttests/mdemo/configure.ac, tests/mdemo/foo.h, tests/mdemo/foo1.c,\n\ttests/mdemo/foo2.c, tests/mdemo/main.c, tests/mdemo/mlib.c,\n\ttests/mdemo/sub.c, tests/mdemo2-conf.test,\n\ttests/mdemo2-exec.test, tests/mdemo2-make.test,\n\ttests/mdemo2/Makefile.am, tests/mdemo2/configure.ac,\n\ttests/mdemo2/main.c, tests/nomode.test, tests/nonrecursive.at,\n\ttests/objectlist.test, tests/old-m4-iface.at,\n\ttests/pdemo-conf.test, tests/pdemo-exec.test,\n\ttests/pdemo-inst.test, tests/pdemo-make.test,\n\ttests/pdemo/Makefile.am, tests/pdemo/configure.ac,\n\ttests/pdemo/foo.h, tests/pdemo/longer_file_name_dlmain.c,\n\ttests/pdemo/longer_file_name_foo.c,\n\ttests/pdemo/longer_file_name_foo2.c,\n\ttests/pdemo/longer_file_name_hell1.c,\n\ttests/pdemo/longer_file_name_hell2.c,\n\ttests/pdemo/longer_file_name_hello.c,\n\ttests/pdemo/longer_file_name_main.c, tests/quote.test,\n\ttests/recursive.at, tests/search-path.at, tests/sh.test,\n\ttests/shlibpath.at, tests/standalone.at, tests/static.at,\n\ttests/stresstest.at, tests/subproject.at, tests/suffix.test,\n\ttests/tagdemo-conf.test, tests/tagdemo-exec.test,\n\ttests/tagdemo-make.test, tests/tagdemo-shared.test,\n\ttests/tagdemo-static.test, tests/tagdemo-undef.test,\n\ttests/tagdemo/Makefile.am, tests/tagdemo/baz.cpp,\n\ttests/tagdemo/baz.h, tests/tagdemo/configure.ac,\n\ttests/tagdemo/conv.cpp, tests/tagdemo/conv.h,\n\ttests/tagdemo/foo.cpp, tests/tagdemo/foo.h,\n\ttests/tagdemo/main.cpp, tests/tagtrace.test,\n\ttests/template.at, tests/testsuite.at: Apply correct license\n\ttext according to the new rules set out in HACKING.\n\n2007-03-19  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh: Handle argz.m4 specially like ltdl.m4, so\n\tthat it isn't copied unless libltdl is being used.  Copy other\n\tmacro files according to their tagged serial numbers.\n\t* tests/libtoolize.at: Adjust.\n\n2007-03-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/mdemo/Makefile.am (libmlib_la_LDFLAGS): Add\n\t`-export-symbols-regex \".*\"' because the convenience libltdl\n\tuses export markers and thus turns off autoexport on w32.  Fixes\n\ttest failures for Cygwin and MinGW.\n\tBug analysis by Charles Wilson.\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER)\n\t(_LT_CHECK_MAGIC_METHOD, _LT_COMPILER_PIC, _LT_LINKER_SHLIBS)\n\t(_LT_LANG_CXX_CONFIG, _LT_SYS_HIDDEN_LIBDEPS) [ interix ]: When\n\tmatching for interix, accept version range [3-9] instead of 3.\n\t* NEWS: Update.\n\tReport by Martin Koeppe <mkoeppe@gmx.de>.\n\n\t* libltdl/m4/libtool.m4 (LT_PROG_GCJ): Avoid M4 expansion error\n\tthat caused `dnl' to be merged to the previous word.\n\t* THANKS: Update.\n\tReport by Steve Ellcey.\n\n2007-03-09  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh: Replace literal tab chars in help comment\n\twith spaces to align columns in --help output.\n\n2007-03-06  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Also apply the\n\tsymbol filtering for w32 and the include_expsyms feature in the\n\tcase of exceeded command line length.  Fixes test failure on\n\tMinGW.\n\n\t* tests/stresstest.at: For const data object imported from\n\tshared library, define appropriate macros to expand\n\t__declspec(dllimport) on w32.  Use two different main objects\n\tand pick the right one for the link flags we are about to test.\n\tFixes test failure on MinGW.\n\n\t* tests/export.at: For const data object imported from shared\n\tlibrary, define appropriate macros to expand\n\t__declspec(dllimport) on w32.  Fixes test failure on MinGW.\n\n2007-03-05  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh (func_check_macros): Display m4 quotes correctly\n\tin AC_CONFIG_MACRO_DIR diagnostics.\n\n\t* libltdl/config/general.m4sh (M4SH_VERBATIM): New macro to\n\tsimplify m4sh quote quoting in blocks of raw shell code.\n\t* clcommit.m4sh, libtoolize.m4sh, libltdl/config/getopt.m4sh,\n\tlibltdl/config/ltmain.m4sh, libltdl/config/mailnotify.m4sh,\n\ttests/defs.m4sh: Use it.\n\t* HACKING (Editing `.m4sh' Files): Mention M4SH_VERBATIM Macro.\n\n2007-02-27  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/lt_dlexit.at: Allow test to pass on static-only systems\n\tand with disable-shared.\n\n\t* NEWS: Rewrite all news since 1.9f and put in categories,\n\tupdate.\n\n\t* libltdl/Makefile.inc: Fix the file description, so that it\n\tmatches recursive and nonrecursive libltdl setup.\n\t* Makefile.am ($(srcdir)/libltdl/Makefile.am): Do not depend\n\tupon the exact text of the copyright header, just copy until\n\tthe marker line.  Remove the marker lines in the output, and\n\tadjust the description for subpackage setup.\n\n2007-02-26  Gary V. Vaughan  <gary@gnu.org>\n\n\t* Makefile.am ($(srcdir)/libltdl/Makefile.am): Fix regexp typo.\n\n\t* clcommit.m4sh: Look in the right directory for helper scripts.\n\n2007-02-25  Gary V. Vaughan  <gary@gnu.org>\n\n\t* Makefile.am ($(srcdir)/libltdl/Makefile.am): Fixup regex to\n\tmatch Copyright notice change below.\n\n\t* HACKING, Makefile.am, Makefile.maint, bootstrap,\n\tlibltdl/Makefile.am, libltdl/Makefile.inc, libltdl/m4/libtool.m4,\n\tltmain.c, tests/cdemo/Makefile.am, tests/demo/Makefile.am,\n\ttests/depdemo/Makefile.am, tests/depdemo/l1/Makefile.am,\n\ttests/depdemo/l2/Makefile.am, tests/depdemo/l3/Makefile.am,\n\ttests/depdemo/l4/Makefile.am, tests/f77demo/Makefile.am,\n\ttests/fcdemo/Makefile.am, tests/libtoolize.at,\n\ttests/mdemo/Makefile.am, tests/mdemo2/Makefile.am,\n\ttests/pdemo/Makefile.am, tests/tagdemo/Makefile.am: Update\n\tCopyright notice text to include URL for canonical GPL document.\n\n2007-02-25  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/static.at: Forgot to fix PATH for the first\n\tfunc_test_exec invocation.  So factor out into new functions\n\tfunc_fix_path and func_restore_path and use those.\n\n\t* README: Document the need for GNU make to build Libtool.\n\tPoint the user to the doc/notes.txt file.  In the examples, use\n\t`gmake' throughout to make it more obvious.  Explain simpler way\n\tto run both testsuites and either one.  Referring to individual\n\ttests needs the `tests/' prefix.\n\t* README.alpha: Likewise.\n\t* doc/notes.texi: Likewise, document need for GNU make.\n\tComment out the FreeBSD make issue for now.\n\n\t* tests/static.at: Larger rewrite to make work on w32: Use three\n\tdifferent prefixes instead of three libdirs, so the moving of\n\tthe DLLs works as expected.  Adjust all code.  Since now\n\t$libdirI/../bin is distinct from the directory of the installed\n\tprogram, take care than on w32 PATH contains the needed bindirs,\n\tin appropriate order.\n\tReport by Charles Wilson.\n\n\t* Makefile.am (INSTALLCHECK_ENVIRONMENT): Point LTDLINCL and\n\tLIBLTDL to installed libltdl, so that it is being used by\n\tthe lt_dlexit test.\n\n2007-02-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (Install mode, libtool script contents):\n\tDescribe current and system-specific DESTDIR limitations.\n\t* tests/destdir.at: XFAIL if `fast_install' is no.\n\n\t* doc/libtool.texi (LT_INIT): Fix typo.\n\n\t* doc/libtool.texi (Libtool test suite): Mention the new\n\ttestsuite.  Point to README rather than INSTALL for testing\n\tinstructions.\n\t(Test descriptions): Fix more file names.  Also mention\n\tcdemo-undef.test, mdemo2-conf.test, mdemo2-exec.test,\n\tmdemo2-make.test, objectlist.test, pdemo-conf.test,\n\tpdemo-exec.test, pdemo-inst.test, pdemo-make.test,\n\ttagdemo-conf.test, tagdemo-exec.test, tagdemo-make.test,\n\ttagdemo-static.test, tagdemo-shared.test, tagdemo-undef.test,\n\tf77demo-conf.test, f77demo-exec.test, f77demo-make.test,\n\tf77demo-static.test, f77demo-shared.test, fcdemo-conf.test,\n\tfcdemo-exec.test, fcdemo-make.test, fcdemo-static.test,\n\tfcdemo-shared.test.  Describe what they do.\n\t(When tests fail, Troubleshooting): Mention how to pass options\n\tto the new test suite.\n\t* tests/tagdemo/README: Fix description.\n\n\t* bootstrap: Also set GREP, FGREP, EGREP, LN_S, when creating a\n\tpreliminary ltmain.sh script.\n\n\t* doc/libtool.texi (Test descriptions): Track the grand test\n\tsuite renaming from 2003-10-14 in the tests documentation.\n\tassign.test is merged into sh.test.  Fix description of sh.test.\n\t* tests/sh.test: Likewise.\n\n\t* doc/libtool.texi (LT_INIT): Fix wording of intro a bit.\n\t<shared, static>: Also describe these default LT_INIT options.\n\t<AC_LIBTOOL_DLOPEN, AC_LIBTOOL_WIN32_DLL>\n\t<AC_DISABLE_FAST_INSTALL>: Mention deprecated macro names,\n\tincluding the respective LT_INIT replacement.\n\t<AC_DISABLE_SHARED, AC_DISABLE_STATIC, AC_ENABLE_SHARED>\n\t<AC_ENABLE_STATIC>: Document, un-deprecate.  Suggest the\n\trespective LT_INIT replacement.\n\t<AM_DISABLE_SHARED, AM_DISABLE_STATIC, AM_ENABLE_SHARED>\n\t<AM_ENABLE_STATIC>: Document deprecated aliases.\n\t(Distributing libltdl) <AC_WITH_LTDL, AC_LIBLTDL_INSTALLABLE>\n\t<AC_LIBLTDL_CONVENIENCE>: Document deprecated aliases.\n\t* libltdl/m4/ltoptions.m4 (AM_ENABLE_SHARED, AM_DISABLE_SHARED)\n\t(AM_ENABLE_STATIC, AM_DISABLE_STATIC): Make these AU_ALIASes of\n\tthe respective AC_* macros, so we do not recommend LT_INIT(*) in\n\tthis case.\n\t(AC_ENABLE_SHARED, AC_DISABLE_SHARED, AC_ENABLE_STATIC)\n\t(AC_DISABLE_STATIC): Un-deprecate these.  Remove now-superfluous\n\taclocal-1.4 backwards compatibility comments.\n\n\t* tests/link-order2.at: Rewrite completely.  Do not use `sin'\n\tfrom the math library, there are too many problems with this.\n\tInstead, use a self-written library, install it without the\n\tLibtool library file, to emulate a native library in a system\n\tdirectory, and adjust $shlibpat_var.  Try overriding its symbol.\n\tFurther, also try an installed `wrong' binary.\n\tAvoid failing test bits on AIX without runtimelinking and on\n\tDarwin in some cases, SKIP at the end in this case.\n\tAnalysis by Peter O'Gorman.\n\n\t* doc/notes.texi: Mention MACOSX_DEPLOYMENT_TARGET issue.\n\t* tests/template.at: Only skip those tests failing on Darwin\n\tif `-flat_namespace' is used by libtool.  In that case, SKIP\n\tat the end.  Analysis by Peter O'Gorman.\n\n2007-02-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix -export-symbols and -export-symbols-regex for links that\n\texceed the command line length and use convenience archives.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Avoid grepping a\n\tnonexistent file if using reloadable objects.  Do not create a\n\tlinker script nor a linker input file if no objects are passed.\n\tApply export_symbols_regex in case the command line length is\n\texceeded.\n\tReport by Bob Friesenhahn.\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS)\n\t<compiler_needs_object>: New tag variable.  Default to `no'.\n\t(_LT_LINKER_SHLIBS) [ linux ]: Set it to yes for Sun C 5.9.\n\t(_LT_LANG_CXX_CONFIG): Also default it to `no'.\n\t[ linux ]: Set it to `yes' for Sun C++ 5.9.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): If we link\n\tno objects but only convenience archives into a library,\n\tforce expansion if `compiler_needs_object' is yes.\n\tFor creating a linker input filelist due to long cmdline,\n\textract the first object if `compiler_needs_object' is yes.\n\t* doc/libtool.texi (libtool script contents): Document it.\n\tFixes test failures of Sun compilers on GNU/Linux.\n\tReport by Terry D. Dontje.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Avoid setting\n\t`$libobjs' to a single space; set it to empty in that case.\n\n2007-02-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_generate_dlsyms) [ osf5 ]:\n\tOn Tru64 5.1, const relocations do not work well.  Omit the\n\tconst here.  Fixes failure of demo-make after demo-shared with\n\tlink editor error `seg_info_ptr: Couldnt find a seg type 2'.\n\n\t* Makefile.am (doc_libtool_TEXINFOS): Renamed from...\n\t(libtool_TEXINFOS): ...this, to fix dependencies.  Omit from\n\tEXTRA_DIST.\n\t(check-local): Also depend upon $(bin_SCRIPTS).\n\n2007-02-23  Ralf Menzel  <menzel@ls6.cs.uni-dortmund.de>  (tiny change)\n\n\t* libltdl/config/general.m4sh (sed_double_backslash): Fix\n\thacky sed script to avoid limitations but retain portability to\n\tSolaris /bin/sed.  Remove old obsolete cruft.\n\n2007-02-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Fix the check for\n\tconvenience archives when warning about linking against static\n\tlibraries: test against $deplib rather than empty $lib.\n\n2007-02-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/ltdl.m4 (LT_WITH_LTDL): Fix detection of new enough\n\tlibltdl by actually checking for the declaration of\n\tlt_dlinterface_register in ltdl.h with AC_CHECK_DECL.\n\tRemove redundant configure output line.\n\n\t* tests/template.at: Reformat, add M4 quoting.  Use $LDFLAGS\n\tconsistently for link mode.\n\n2007-02-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/static.at: Use the right names for the broken libs.\n\n2007-02-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/deplibs-ident.at [aix, hppa*-*-hpux*, interix, openbsd]:\n\tDo not XFAIL, on these systems we happen to pass.\n\t* tests/duplicate_deps.at [aix]: Likewise.\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [ linux |\n\tk*bsd*-gnu ]: Fix eval quoting in the DT_RUNPATH test.\n\n\t* HACKING: Update.\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS) [ linux ]\n\t<whole_archive_flag_spec>: For Sun C/C++ 5.9, do not add\n\t/dev/null as dummy object, it fails with GNU ld version\n\t2.16.91.0.7-amd-sles9.  Report by Terry D. Dontje.\n\t* THANKS: Update.\n\n2007-02-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS) [ osf4, osf5 ]\n\t<archive_expsym_cmds>: Use `${wl}-input' not `-input', for\n\tcc.  Could use `-input_to_ld'.\n\t(_LT_LANG_CXX_CONFIG) [ osf4, osf5 ] <archive_expsym_cmds>:\n\tUse `${wl}' instead of `-Wl,', for consistency.\n\n2007-02-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix spurious testsuite failures on AIX due on NFS mounts due to\n\tshared library images that cannot be removed without `slibclean'\n\twhich needs superuser privileges.\n\n\t* tests/testsuite.at (PREPARE_TESTS): Define $mkdir_p globally.\n\t(LT_AT_MVDIR): New macro to emulate `mv dir dest'.\n\t* tests/destdir.at: Use LT_AT_MVDIR.\n\t* tests/shlibpath.at: Likewise.\n\t* tests/static.at: Likewise.\n\n2007-02-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/export.at: Exporting is not fully functional with\n\t-retain-symbols-file.  Do not test for failure to link `broken'\n\tin this case.  At the end of the test, SKIP if we are not fully\n\tfunctional.\n\n\t* tests/lt_dlexit.at: Add casts and `extern \"C\"' to let the test\n\tpass with a C++ compiler.\n\n\t* libltdl/config/ltmain.m4sh: Remove duplicate marker for\n\tgenerated shell functions.\n\n\t* tests/testsuite.at (LT_AT_NOINST_EXEC_CHECK): New macro, like\n\tLT_AT_EXEC_CHECK but uses `$LIBTOOL --mode=execute' and allows\n\tto pass `-dlopen MODULE' arguments.\n\t* tests/lt_dlexit.at: Use it.  Also, do not test `-dlpreopen',\n\tthat currently needs library names to begin with `lib'.\n\n2007-02-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/export.at: New test: expose -export-symbols failure\n\twhen the input consists solely of convenience archives, and\n\tfailure to not export all symbols when the command line length\n\tis exceeded.\n\t* Makefile.am: Adjust.\n\n\t* libltdl/m4/libtool.m4 (_LT_PROG_XSI_SHELLFNS): New substituted\n\tfunction `func_lo2o', saving two fork&exec with XSI shells.\n\t* libltdl/config/ltmain.m4sh (func_mode_compile)\n\t(func_mode_install, func_mode_link): Use it for rewrites of\n\tsingle files.\n\n\t* libltdl/m4/libtool.m4 (_LT_PROG_XSI_SHELLFNS): New function\n\tfunc_opt_split, for XSI and portable shell.\n\t* libltdl/config/ltmain.m4sh: Move the insertion point for the\n\tconfigure-generated shell functions to before the first option\n\tparsing loop.  Rewrite the separation of the long options to use\n\tfunc_opt_split.\n\n2007-02-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tEliminate roughly a third of the script execution time overhead\n\tfor all modes except for link/relink and uninstall/clean.\n\n\t* libltdl/m4/libtool.m4 (_LT_CONFIG): Remove unused `TEST SUITE\n\tMARKER', obsolete since 2005-04-17.\n\t* libltdl/config/ltmain.m4sh: Likewise, several instances.\n\t(Main): Tear apart, moving individual bits up as early in the\n\tscript as possible, to help the shell to avoid parsing the rest.\n\n2007-02-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi: Update copyright years.\n\n2007-02-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/general.m4sh (sed_double_backslash): Replace\n\tPOSIX sed script with a hack that treats up to 10 backslashes\n\tin the input correctly and is portable to Solaris /bin/sed.\n\n2007-02-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/testsuite.at (LT_AT_TAG): Skip also if the compiler\n\tvariable is set to `no', not only if it is empty.\n\n2007-02-06  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/lt_dlexit.at: Do not compile main object with libtool.\n\n\t* tests/cmdline_wrap.at: Pass $abs_top_srcdir and $abs_builddir\n\tto inner testsuite.\n\n\t* Makefile.am (TESTSUITE_AT): Move destdir.at after\n\tsearch-path.at so the banners fit better.\n\n\t* tests/convenience.at: Use $CPPFLAGS for compilation.\n\t* tests/deplibs-ident.at: Likewise.\n\t* tests/duplicate_members.at: Likewise.\n\t* tests/inherited_flags.at: Likewise.\n\t* tests/link-order.at: Likewise.\n\t* tests/stresstest.at: Likewise.\n\t* tests/early-libtool.at: Likewise.  Do not quote $CC.\n\n\t* libltdl/ltdl.c (lt_dlexit): Add casts to fix compilation with\n\tC++ compiler again.\n\n\t* tests/destdir.at: Add `libtool' keyword to tests.\n\n2007-02-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_BOILERPLATE)\n\t(_LT_LINKER_BOILERPLATE, _LT_SYS_MODULE_PATH_AIX)\n\t(_LT_COMPILER_C_O): Require _LT_DECL_SED.\n\t* THANKS: Update.\n\tReport by Maciej W. Rozycki.\n\n2007-01-29  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/lt_dlexit.at: Use $abs_top_srcdir, not $top_srcdir,\n\tin the new testsuite.\n\n2007-01-29  Samuel Thibault <samuel.thibault@ens-lyon.org>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS) [ gnu ]\n\t<archive_expsym_cmds>: Behave like Linux, so that\n\t--version-script is used for Hurd as well.\n\n2007-01-28  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* NEWS: Update for Cygwin changes.\n\n2007-01-28  Brian W. Barrett <bbarrett@lanl.gov>\n\n\t* libltdl/config/ltmain.m4sh [darwin]: Use otool64 if otool fails.\n\n2007-01-28  Dave Brolley  <brolley@redhat.com>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/ltdl.c (lt_dlexit): Make sure that 'cur' is not NULL\n\tbefore checking that it is still in the list.\n\t* tests/lt_dlexit.at: New test.\n\t* Makefile.am (TESTSUITE_AT): Adjust.\n\t(check-local): Also depend on libltdl/libltdlc.la.\n\t(check-recursive): Removed, unnecessary use of Automake\n\tinternals.\n\n2007-01-28  Mike Frysinger  <vapier@gentoo.org>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Pass through\n\t`-p' and `-fprofile-*' for GCC.\n\n2007-01-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/libltdl/lt_system.h: Adjust copyright years.\n\n2007-01-28  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t* libltdl/libltdl/lt__private.h (LT_GLOBAL_DATA) [__CYGWIN__]:\n\tAlso define on Cygwin.\n\t* libltdl/libltdl/lt_system.h (LT_SCOPE) [__CYGWIN__]: Likewise.\n\n2007-01-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS) [ cygwin, mingw ]\n\t<export_symbols_cmds>: Avoid shell expansion of '/s/.*' through\n\tdouble expansion, in case there is a 'S:' drive.\n\tReport by Charles Wilson.\n\n2007-01-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tIntroduce a new test keyword `recursive' for tests that create a\n\tmodified `libtool' script and run the suite on this script.  All\n\ttests with the keyword `libtool' are (by definition) suitable to\n\tbe used here.\n\n\t* tests/cmdline_wrap.at: New test.\n\t* Makefile.am: Adjust.\n\t* tests/testsuite.at (LT_ESCAPE): New macro: clone of Autoconf\n\tAS_ESCAPE that does not escape `$'.\n\t(LT_AT_CHECK): New macro: print a command-to-be-run while\n\texpanding parameters but nothing else.\n\t* tests/stresstest.at: Use LT_AT_CHECK.  Create some files to\n\texpose erroneous globbing errors with `-export-symbols-regex',\n\tsimilar to those reported by Charles Wilson.  Use `eval' and\n\tadjusted quoting so the expansion doesn't already happen in the\n\ttestsuite commands.\n\t* HACKING: Update.\n\n2007-01-27  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAssume C89 for included headers, and throughout the testsuite.\n\n\t* NEWS: Update.\n\t* libltdl/argz.c: Do not include strings.h nor memory.h, include\n\tstring.h unconditionally.\n\tPatch by Simon Josefsson <jas@extundo.com>.\n\t* libltdl/libltdl/lt__private.h: Likewise.\n\t* libltdl/m4/ltdl.m4 (LTDL_INIT): Do not check for string.h,\n\tstrings.h, memory.h.\n\t* tests/cdemo/configure.ac: Assume presence of math.h.\n\t* tests/cdemo/foo.c: Likewise.\n\t* tests/demo/configure.ac: Likewise for math.h, string.h.\n\tAssume 'const'.  Drop obsolete AC_EXEEXT.\n\t* tests/demo/dlmain.c: Likewise.\n\t* tests/demo/foo.c: Likewise.\n\t* tests/depdemo/configure.ac: Likewise.\n\t* tests/depdemo/l4/l4.c: Likewise.\n\t* tests/f77demo/configure.ac: Likewise.  Also drop obsolete\n\tAC_OBJEXT.\n\t* tests/fcdemo/configure.ac: Likewise.\n\t* tests/mdemo/configure.ac: Likewise.\n\t* tests/mdemo/foo1.c: Likewise.\n\t* tests/mdemo/foo2.c: Likewise.\n\t* tests/mdemo2/configure.ac: Likewise.\n\t* tests/pdemo/configure.ac: Likewise.\n\t* tests/pdemo/longer_file_name_dlmain.c:\n\t* tests/pdemo/longer_file_name_foo.c: Likewise.\n\t* tests/pdemo/longer_file_name_foo2.c: Likewise.\n\t* tests/tagdemo/configure.ac: Likewise.\n\t* tests/tagdemo/foo.cpp: Likewise.\n\n2007-01-24  Reuben Thomas <rrt@sc3d.org>  (tiny change)\n\n\t* doc/libtool.texi (Inter-library dependencies): Fix typo.\n\n2007-01-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS) [cygwin, mingw]:\n\tUse `lib -OUT' rather than `lib /OUT' to avoid MSYS path\n\ttranslation mangling.  Report by Christopher Hulbert.\n\t* THANKS: Update.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_compile): Accept\n\tsuffixes matching `[fF][09].', for Fortran.\n\t* tests/suffix.test: Also test F90, F95, f03, F03.\n\n\t* Makefile.am (EXTRA_DIST): Add ChangeLog.2006.\n\t* ChangeLog.2006: New, rotated, from...\n\t* ChangeLog: ...here.\n\n2007-01-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi: Typo fixes.\n\t* TODO: Likewise.\n\nContinued in ChangeLog.2006\n-- \n  Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n  2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n\n  This file is part of GNU Libtool.\n\nCopying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout warranty of any kind.\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/config-h.in": "/* config-h.in.  Generated from configure.ac by autoheader.  */\n\n/* Define to 1 if you have the `argz_add' function. */\n#undef HAVE_ARGZ_ADD\n\n/* Define to 1 if you have the `argz_append' function. */\n#undef HAVE_ARGZ_APPEND\n\n/* Define to 1 if you have the `argz_count' function. */\n#undef HAVE_ARGZ_COUNT\n\n/* Define to 1 if you have the `argz_create_sep' function. */\n#undef HAVE_ARGZ_CREATE_SEP\n\n/* Define to 1 if you have the <argz.h> header file. */\n#undef HAVE_ARGZ_H\n\n/* Define to 1 if you have the `argz_insert' function. */\n#undef HAVE_ARGZ_INSERT\n\n/* Define to 1 if you have the `argz_next' function. */\n#undef HAVE_ARGZ_NEXT\n\n/* Define to 1 if you have the `argz_stringify' function. */\n#undef HAVE_ARGZ_STRINGIFY\n\n/* Define to 1 if you have the `closedir' function. */\n#undef HAVE_CLOSEDIR\n\n/* Define to 1 if you have the declaration of `cygwin_conv_path', and to 0 if\n   you don't. */\n#undef HAVE_DECL_CYGWIN_CONV_PATH\n\n/* Define to 1 if you have the <dirent.h> header file. */\n#undef HAVE_DIRENT_H\n\n/* Define if you have the GNU dld library. */\n#undef HAVE_DLD\n\n/* Define to 1 if you have the <dld.h> header file. */\n#undef HAVE_DLD_H\n\n/* Define to 1 if you have the `dlerror' function. */\n#undef HAVE_DLERROR\n\n/* Define to 1 if you have the <dlfcn.h> header file. */\n#undef HAVE_DLFCN_H\n\n/* Define to 1 if you have the <dl.h> header file. */\n#undef HAVE_DL_H\n\n/* Define if you have the _dyld_func_lookup function. */\n#undef HAVE_DYLD\n\n/* Define to 1 if the system has the type `error_t'. */\n#undef HAVE_ERROR_T\n\n/* Define to 1 if you have the <inttypes.h> header file. */\n#undef HAVE_INTTYPES_H\n\n/* Define if you have the libdl library or equivalent. */\n#undef HAVE_LIBDL\n\n/* Define if libdlloader will be built on this platform */\n#undef HAVE_LIBDLLOADER\n\n/* Define to 1 if you have the <mach-o/dyld.h> header file. */\n#undef HAVE_MACH_O_DYLD_H\n\n/* Define to 1 if you have the <memory.h> header file. */\n#undef HAVE_MEMORY_H\n\n/* Define to 1 if you have the `opendir' function. */\n#undef HAVE_OPENDIR\n\n/* Define if libtool can extract symbol lists from object files. */\n#undef HAVE_PRELOADED_SYMBOLS\n\n/* Define to 1 if you have the `readdir' function. */\n#undef HAVE_READDIR\n\n/* Define if you have the shl_load function. */\n#undef HAVE_SHL_LOAD\n\n/* Define to 1 if you have the <stdint.h> header file. */\n#undef HAVE_STDINT_H\n\n/* Define to 1 if you have the <stdlib.h> header file. */\n#undef HAVE_STDLIB_H\n\n/* Define to 1 if you have the <strings.h> header file. */\n#undef HAVE_STRINGS_H\n\n/* Define to 1 if you have the <string.h> header file. */\n#undef HAVE_STRING_H\n\n/* Define to 1 if you have the `strlcat' function. */\n#undef HAVE_STRLCAT\n\n/* Define to 1 if you have the `strlcpy' function. */\n#undef HAVE_STRLCPY\n\n/* Define to 1 if you have the <sys/dl.h> header file. */\n#undef HAVE_SYS_DL_H\n\n/* Define to 1 if you have the <sys/stat.h> header file. */\n#undef HAVE_SYS_STAT_H\n\n/* Define to 1 if you have the <sys/types.h> header file. */\n#undef HAVE_SYS_TYPES_H\n\n/* Define to 1 if you have the <unistd.h> header file. */\n#undef HAVE_UNISTD_H\n\n/* This value is set to 1 to indicate that the system argz facility works */\n#undef HAVE_WORKING_ARGZ\n\n/* Define if the OS needs help to load dependent libraries for dlopen(). */\n#undef LTDL_DLOPEN_DEPLIBS\n\n/* Define to the system default library search path. */\n#undef LT_DLSEARCH_PATH\n\n/* The archive extension */\n#undef LT_LIBEXT\n\n/* The archive prefix */\n#undef LT_LIBPREFIX\n\n/* Define to the extension used for runtime loadable modules, say, \".so\". */\n#undef LT_MODULE_EXT\n\n/* Define to the name of the environment variable that determines the run-time\n   module search path. */\n#undef LT_MODULE_PATH_VAR\n\n/* Define to the sub-directory in which libtool stores uninstalled libraries.\n   */\n#undef LT_OBJDIR\n\n/* Define to the shared library suffix, say, \".dylib\". */\n#undef LT_SHARED_EXT\n\n/* Define if dlsym() requires a leading underscore in symbol names. */\n#undef NEED_USCORE\n\n/* Define to 1 if your C compiler doesn't accept -c and -o together. */\n#undef NO_MINUS_C_MINUS_O\n\n/* Name of package */\n#undef PACKAGE\n\n/* Define to the address where bug reports for this package should be sent. */\n#undef PACKAGE_BUGREPORT\n\n/* Define to the full name of this package. */\n#undef PACKAGE_NAME\n\n/* Define to the full name and version of this package. */\n#undef PACKAGE_STRING\n\n/* Define to the one symbol short name of this package. */\n#undef PACKAGE_TARNAME\n\n/* Define to the home page for this package. */\n#undef PACKAGE_URL\n\n/* Define to the version of this package. */\n#undef PACKAGE_VERSION\n\n/* Define to 1 if you have the ANSI C header files. */\n#undef STDC_HEADERS\n\n/* Version number of package */\n#undef VERSION\n\n/* Define so that glibc/gnulib argp.h does not typedef error_t. */\n#undef __error_t_defined\n\n/* Define to a type to use for `error_t' if it is not otherwise available. */\n#undef error_t\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/ChangeLog.2005": "2005-12-29  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (libtoolize): Also depend on `config.status'.\n\t(tests/atconfig): Normalize path, for non-GNU make.\n\tReported by Bob Friesenhahn <bfriesen@simple.dallas.tx.us>.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link) <temp_rpath>:\n\tFix position of separator for shlibpath_var setting in shell\n\twrapper.\n\n\t* libltdl/lt_error.c (error_strings): Remove parentheses around\n\tstring literal initializers, uncovered by `tcc'.\n\tReported by Edward Chernenko <edwardspec@yahoo.com>.\n\n2005-12-21  Gary V. Vaughan  <gary@gnu.org>\n\n\t* .cvsignore, libltdl/.cvsignore, tests/.cvsignore: Ignore\n\t+build, +dest, +inst, .cvslog-tlasync, .gdb_history, .pc,\n\tlibltdl/INSTALL, libltdl/stamp-mk and tests/testsuite.log.\n\n2005-12-20  Eric Blake  <ebb9@byu.net>\n\n\t* README.alpha: Really commit.\n\n2005-12-19  Eric Blake  <ebb9@byu.net>\n\n\t* HACKING (release note templates): Update anon cvs location.\n\t* README.alpha (Reporting Bugs): Likewise.\n\n2005-12-18  Jacob Meuser <jakemsr@jakemsr.com>,\n\t    Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Move library\n\tsearch paths that coincide with paths to not yet installed\n\tlibraries to the beginning of the library search list.\n\n2005-12-18  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* THANKS: Updated.\n\n\t* HACKING: `./libtool --config' is more helpful than `--help'.\n\n\t* libltdl/config/ltmain.m4sh <preserve_args, linknames>:\n\tInitialize properly.\n\n2005-12-18  Kean Johnston  <jkj@sco.com>,\n\t    Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (LT_PATH_NM): Also look in\n\t/usr/ccs/bin/elf, for SCO.  If we are not cross-compiling, but\n\t$ac_tool_prefix is set, also try an un-prefixed `nm'.\n\n2005-12-18  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_LANG_CXX_CONFIG)\n\t<hardcode_shlibpath_var>: Initialize, to `unsupported'.\n\n2005-12-18  Marc Espie  <espie@nerim.net>\n\n\t* libltdl/m4/libtool.m4 (AC_LIBTOOL_SYS_DYNAMIC_LINKER)\n\t[ openbsd ] <sys_lib_dlsearch_path_spec>: Set to `/usr/lib'\n\tonly.\n\n2005-12-16  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* tests/old-m4-iface.at: Require Autoconf-2.50, so that\n\tDebian's autoconf wrapper will not cause 2.13 to barf over\n\t`--force'.\n\tReported by Kurt Roeckx <kurt@roeckx.be>.\n\n\t* README.alpha (Reporting bugs): Suggest to also bootstrap the\n\tlibltdl subdirectory -- the Makefile will enforce it anyway.\n\t(The Test Suite): Renamed to..\n\t(The Test Suites): ..this.  Introduce the new Autotest test\n\tsuite, how to run each one individually, and what to report.\n\t* README (The Test Suite): Likewise.\n\n2005-12-16  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\tIn the subpackage case, we do not install Makefile.inc.  Since\n\twe have to be correct for this case, remove `Makefile.inc' from\n\tEXTRA_DIST.  Recursive mode does not use it either.  Since\n\tnonrecursive mode requires an Automake >= 1.7 anyway, and those\n\tversions automatically distribute included makefile fragments,\n\twe don't need to cater for that one either.\n\n\t* libltdl/Makefile.inc (EXTRA_DIST): Remove Makefile.inc.\n\tReorder other entries.\n\n2005-12-16  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (libltdl/Makefile.in): also depend on\n\tlibltdl/aclocal.m4, so that we guarantee timestamp consistency.\n\t(libltdl/stamp-mk): New target, to fix `libltdl/Makefile.in'.\n\t(EXTRA_DIST): Distribute `libltdl/stamp-mk' and\n\t`libltdl/m4/lt~obsolete.m4'.\n\t(all-local): Ensure the stamp files is up to date.\n\t(libltdl/aclocal.m4): New target, to ensure timestamp\n\tconsistency.  Depend on all m4 files.\n\t* HACKING: Updated.\n\n\t* tests/testsuite.at (PREPARE_TESTS): New variable `tst_dist',\n\tdefault to empty.\n\t* tests/nonrecursive.at, tests/recursive.at,\n\ttests/standalone.at, tests/subproject.at: Use it in\n\tLT_AT_BOOTSTRAP or LT_AT_MAKE, so that you can optionally test\n\tredistribution within the tests.\n\n\t* libltdl/m4/lt~obsolete.m4: Update documentation for aclocal\n\tversions before 1.7.  Change all macros to use AC_DEFUN instead\n\tof AU_DEFUN.\n\t* (_AC_PROG_LIBTOOL, AC_LIBTOOL_SETUP, _LT_AC_CHECK_DLFCN)\n\t(AC_LIBTOOL_SYS_DYNAMIC_LINKER, _LT_AC_TAGCONFIG)\n\t(AC_DISABLE_FAST_INSTALL, _LT_AC_LANG_CXX, _LT_AC_LANG_F77)\n\t(_LT_AC_LANG_GCJ, AC_LIBTOOL_RC, AC_LIBTOOL_LANG_C_CONFIG)\n\t(_LT_AC_LANG_C_CONFIG, AC_LIBTOOL_LANG_CXX_CONFIG)\n\t(_LT_AC_LANG_CXX_CONFIG, AC_LIBTOOL_LANG_F77_CONFIG)\n\t(_LT_AC_LANG_F77_CONFIG, AC_LIBTOOL_LANG_GCJ_CONFIG)\n\t(_LT_AC_LANG_GCJ_CONFIG, AC_LIBTOOL_LANG_RC_CONFIG)\n\t(_LT_AC_LANG_RC_CONFIG, AC_LIBTOOL_CONFIG)\n\t(_LT_AC_FILE_LTDLL_C): Add new fake macros for these, they\n\twere used at one time in libtool.m4.\n\n\t* tests/am-subdir.at (Makefile.am): Put automake options here,\n\tin AUTOMAKE_OPTIONS.  Require 1.6 because of the newer\n\t`AC_INIT(pkgname,version) AM_INIT_AUTOMAKE' scheme.\n\t* tests/nonrecursive.at, tests/recursive.at: Require 1.7,\n\tbecause libltdl rules use `+=' in conditionals.\n\t* tests/testsuite.at (LT_AT_AUTOMAKE): Fix indenting.\n\t(LT_AT_AUTORECONF): also detect too old Automake.\n\n2005-12-08  Eric Blake  <ebb9@byu.net>\n\n\t* libltdl/libltdl/lt__alloc.h (FREE): Cast away constness of\n\targument to `free' to avoid compiler warning.\n\n2005-12-08  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/m4/libtool.m4 (_LT_LANG_CXX_CONFIG, _LT_LINKER_SHLIBS)\n\t[darwin]: Use $LTCC $LTCFLAGS to check for -single_module.\n\tReported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n2005-12-07  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* bootstrap: always remove Makefile, to avoid triggering the\n\tautotools rebuild rules before autoreconf builds these.\n\tReported by Bob Friesenhahn <bfriesen@simple.dallas.tx.us>.\n\n2005-12-07  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/config/ltmain.m4sh, libltdl/m4/libtool.m4 [darwin]:\n\tUse -single_module by default when linking shared libraries. Can\n\tbe overridden by specifying -multi-module or by setting the env\n\tvar LT_MULTI_MODULE before configure.\n\t* libltdl/m4/libtool.m4 (archive_expsyms_cmds) [darwin]:\n\tSimplify.\n\tReported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n2005-12-04  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (References): Do not use `@/' for the benefit\n\tof older `makeinfo', break lines instead.\n\n\t* Makefile.am (install-data-local): No continuation here.\n\t(dist-hook): Fix copying of README.alpha to README.\n\t* tests/early-libtool.at (configure.ac): Remove\n\t`AM_INIT_AUTOMAKE', we do not use automake in these tests.\n\n\t* README, README.alpha, libtoolize.m4sh: Typos.\n\t* tests/am-subdir.at, tests/duplicate_members.at: Make all\n\tbanners end with a dot, for symmetry.\n\n\t* libtoolize.m4sh (func_copy_all_files)\n\t(glob_exclude_pkgaux_files): Removed, since unused.\n\n\t* libtoolize.m4sh (func_copy_cb, func_copy_some_files)\n\t(func_serial_update, func_keyword_update): Fail immediately\n\tif some file we may install does not exist.\n\tReported by Troy Benjegerdes <hozer@hozed.org>.\n\n2005-12-03  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* TODO: A bunch of items fixed. :)\n\n\t* tests/convenience.at: Updated to expose more corner cases.\n\n\t* doc/libtool.texi (Invoking libtoolize): Remove mention of\n\tthe nonrecursive restriction to name the directory `libltdl'.\n\n\t* libtoolize.m4sh (func_fixup_Makefile_inc): New function.\n\t(main): Call it in nonrecursive mode to mangle Makefile.inc.\n\t* tests/nonrecursive.at: adjusted to test this.\n\n2005-12-03  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\tBasic support for PIE (position-independent executables).\n\n\t* libltdl/config/ltmain.m4sh (func_generate_dlsyms):\n\tDon't pass PIE flag for compilation of the symbol file object.\n\t(func_mode_compile): Pass PIE flag only for non-PIC objects.\n\t* NEWS: Updated.\n\n2005-12-03  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/general.m4sh (func_show_eval): Rewrite use of\n\tthe failure expression, because the exit status of the previous\n\tcommand may not be preserved in the next `eval' by some shells,\n\tsuch as pdksh.\n\t* libltdl/config/ltmain.m4sh (func_extract_an_archive):\n\tUse func_show_eval correctly.\n\t(func_mode_link): Likewise.  Also, do not use `$status'.\n\t* tests/fail.at: New set of tests to ensure libtool fails.\n\t* Makefile.am, tests/testsuite.at: Adjusted.\n\n2005-11-26  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/m4/libtool.m4 [darwin]: Use $LTCC $LTCFLAGS to create\n\treloadable objects.\n\n2005-11-25  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/Makefile.inc (libltdl/argz.h): Create libltdl\n\tdirectory if it does not exist yet.  Take care that munging\n\tof the file will not mess up the build rule.\n\tReported by Peter O'Gorman <peter@pogma.com>.\n\n2005-11-25  Eric Blake  <ebb9@byu.net>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/loaders/loadlibrary.c (iface_id): New variable.\n\t(get_vtable): Get an `iface_id' from `lt_dlinterface_register'.\n\t(get_vtable): Rewrite to catch up with lt_dlhandle_iterate\n\tinterface change.  Append dot only after w32 path conversion\n\tso it works on cygwin managed mounts.\n\n\t* libltdl/ltdl.h, libltdl/ltdl.c (lt_dlinterface_free): New\n\tfunction.\n\t* doc/libtool.texi (User defined module data): Document it.\n\n2005-11-25  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 [aix] <archive_expsym_cmds>\n\t(_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG): Always move -bnoentry\n\tbefore $compiler_flags, so it can be overridden.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Allow GCC\n\tresponse files through.\n\n2005-11-25  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Pass through\n\t-isysroot for cross architecture builds on darwin.\n\n2005-11-24  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_uninstall): In clean\n\tmode, don't remove non-existent libfoo.lai.\n\n2005-11-20  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (aclocalfiles): Also install lt~obsolete.m4.\n\t* libtoolize.m4sh (func_check_macros): Updated.\n\t* tests/libtoolize.at: Adjusted.\n\n2005-11-20  Eric Blake  <ebb9@byu.net>,\n\t    Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* bootstrap (--help): Provide some help.\n\n2005-11-20  Todd Vierling <tv@netbsd.org>,\n\t    Thorsten Glaser <tg@mirbsd.org>\n\n\t* libltdl/m4/libtool.m4 (LT_CMD_MAX_LEN, _LT_SYS_DYNAMIC_LINKER)\n\t(_LT_CHECK_MAGIC_METHOD, _LT_COMPILER_PIC, _LT_LINKER_SHLIBS)\n\t(_LT_LANG_CXX_CONFIG) [ interix3 ]: Support for Interix/Microsoft\n\tServices for Unix.\n\t* libltdl/m4/ltdl.m4 (LT_SYS_DLOPEN_DEPLIBS): Likewise.\n\t* NEWS: Updated.\n\n2005-11-20  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* tests/link-order.at [ interix ]: Skip command line grep.\n\t* tests/deplibs-ident.at [ interix ]: Not broken here.\n\tReported by Thorsten Glaser <tg@66h.42h.de>.\n\n2005-11-18  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libtoolize.m4sh (func_copy_all_files)\n\t(func_massage_aclocal_DATA, func_massage_pkgltdl_files)\n\t(func_massage_pkgconfig_files): Work around ksh limitation.\n\tReported by Thorsten Glaser <tg@66h.42h.de>.\n\n2005-11-14  Albert Chin  <china@thewrittenword.com>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG)\n\t[ hpux11 ]: Pass +nodefaultrpath when linking on ia64*.\n\n2005-11-14  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\tTestsuite portability update round.\n\n\t* tests/inherited_flags: skip when shared libs are disabled.\n\t* tests/deplibs-ident.at [ aix ]: No unexpected failure here.\n\t* tests/libtoolize.at: Fix for distcheck (readonly sources).\n\t* tests/nonrecursive.at, tests/recursive.at, tests/subproject.at\n\t(foo.c): Actually export a symbol, for AIX.\n\t* tests/old-m4-iface.at: Use AC_LIBTOOL_DLOPEN, for AIX.\n\t* tests/nonrecursive.at: Set foo_la_SOURCES, for automake-1.7.\n\t* tests/subproject.at: Require automake-1.9, we use indirect\n\tsubdirs.\n\t* tests/am-subdir.at: Move AT_KEYWORDS settings..\n\t* tests/testsuite.at: ..here, in respective macros.\n\t(LT_AT_AUTOMAKE): Skip if we detect failure due to old version.\n\t(PREPARE_TESTS): Set autotool variables to `no' if not present.\n\t(LT_AT_ACLOCAL, LT_AT_AUTOCONF, LT_AT_AUTOMAKE)\n\t(LT_AT_AUTOHEADER, LT_AT_AUTORECONF): Use to XFAIL tests.\n\tReported by Tim Rice <tim@multitalents.net>.\n\t(LT_AT_MAKE): Do not use `make -e'.\n\t(_LTDL_PROJECT_FILES): Adjust sub-make call.  Work around `make'\n\twhich does not set `MAKE' or `SHELL'.  Fix for user-set\n\t`CONFIG_SHELL'.\n\tReported by Charles Wilson <cygwin@cwilson.fastmail.fm>.\n\n\t* libltdl/m4/lt~obsolete.m4 (_LT_CC_BASENAME)\n\t(_LT_COMPILER_BOILERPLATE, _LT_LINKER_BOILERPLATE):\n\tAdded because they were added to branch-1-5 AC_DEFUNed.\n\t* HACKING: Add note about lt~obsolete.m4.\n\n\t* Makefile.am, libltdl/Makefile.inc (INSTALL_LTDL):\n\tFor nonrecursive mode, add to include_HEADERS as well.\n\t* doc/libtool.texi (Invoking libtoolize, Distributing libltdl),\n\ttests/nonrecursive.at: Adjusted, and removed TABS from .texi.\n\n\t* libtoolize.m4sh: Revert use of `$tst_aclocaldir'.\n\n2005-11-13  Eric Blake  <ebb9@byu.net>\n\n\t* libltdl/ltdl.c (lt_dlhandle_iterate): Fix endless loop.\n\t(lt_dlinterface_register): Fail if lt__strdup did.\n\n2005-11-13  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_LANG_C_CONFIG):\n\tRemoved `lt_prog_cc_shlib' cruft, not needed any more.\n\n2005-11-13  Kean Johnston  <jkj@sco.com>,\n\t    Tim Rice  <tim@multitalents.net>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER)\n\t(_LT_CHECK_MAGIC_METHOD, _LT_COMPILER_PIC, _LT_LINKER_SHLIBS)\n\t(_LT_LANG_C_CONFIG, _LT_LANG_CXX_CONFIG)\n\t[ sco3.2v5, sysv4, sysv4.3, sysv5, sco3.2v5, sco5v6, unixware,\n\tOpenUNIX, sysv4*uw2 ]: Complete overhaul of SCO support.\n\t* THANKS: Updated.\n\n2005-11-13  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* tests/quote.test: Do not fail on harmless shell bug present\n\tin some ksh versions.\n\tReported by Tim Rice <tim@multitalents.net> and others.\n\n2005-11-12  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/ltoptions.m4 (_LT_SET_OPTION): Use m4_warning\n\tinstead of m4_warn.\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC): `wl' is tagged here.\n\n\t* libltdl/m4/libtool.m4 (LT_SYS_DLOPEN_SELF, _LT_COMPILER_PIC):\n\tMake sure `$wl' is properly expanded for tests involving\n\t`export_dynamic_flag_spec', `lt_prog_compiler_static'.\n\n\t* tests/defs.m4sh (func_configure): Actually pass\n\toptions (like --disable-shared) to func_configure_nofail.\n\n2005-11-11  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [ freebsd ]:\n\tFix shlibpath_overrides_runpath settings.\n\tReported by Dave Benson <daveb@idealab.com>.\n\n2005-09-10  Charles Wilson  <cygwin@cwilson.fastmail.fm>\n\n\t* libltdl/config/ltmain.m4sh (func_win32_libid): use $SED not\n\tsed.\n\t\n2005-11-10  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* libltdl/m4/libtool.m4 (_LT_LANG_CXX_CONFIG) [ hpux10, hpux11 ]\n\t<hppa*64,ia64, aCC,g++>:\n\tUse C++ compiler for linking rather than ld.\n\n2005-11-10  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/ltsugar.m4 (lt_join, lt_combine, lt_dict_filter):\n\tRewrite to eliminate tail recursion; use ..\n\t(lt_unquote): New trivial helper macro.\n\t* libltdl/m4/libtool.m4 (_lt_decl_filter): Document.\n\n2005-11-10  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/testsuite.ac (macrodir): Don't set it here...\n\t* Makefile.am (BUILDCHECK_ENVIRONMENT, INSTALLCHECK_ENVIRONMENT):\n\t...set it here to pick up files from the right place in context.\n\t* tests/libtoolize.at, tests/old-m4-iface.at: Adjust.\n\t* libtoolize.m4sh: Take tst_aclocaldir into account when running\n\tinside the test harness.\n\n2005-11-10  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/am-subdir.at: Now that we don't run autoreconf, we have to\n\texplicitly tell aclocal what flags to use.\n\n\t* tests/testsuite.at (LT_AT_BOOTSTRAP): Allow passing arguments to\n\tconfigure.\n\t* tests/am-subdir.at, tests/nonrecursive.at, tests/old-m4-iface.at,\n\ttests/subproject.at: Use LT_AT_BOOTSTRAP.\n\n2005-11-09  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS): Also set pic_flag.\n\t(_LT_LANG_CXX_CONFIG): Use $as_unset, not unset.\n\t(_LT_LANG_F77_CONFIG, _LT_LANG_FC_CONFIG): Remove bogus\n\tld_shlibs tests.\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS): Move setting of\n\t`variables_saved_for_relink'..\n\t(_LT_SYS_DYNAMIC_LINKER): here, when both `shlibpath_var'\n\tand `runpath_var' have been set.\n\tReported by Mike Frysinger <vapier@gentoo.org>.\n\n\t* libltdl/Makefile.inc (AM_CPPFLAGS): Do not define\n\tHAVE_CONFIG_H.\n\t* libltdl/m4/ltdl.m4 (LTDL_INIT): Do not invoke\n\tAC_CONFIG_HEADERS ourselves, we can build with or without now.\n\n2005-11-07  Kean Johnston  <jkj@sco.com>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link) [ sysv4*uw2*,\n\tunixware7* ]: Work around linker bug on older SCO systems.\n\n2005-11-07  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS)\n\t(_LT_LANG_CXX_CONFIG) [ hpux10, hpux11 ]:\n\thardcode_libdir_flag_spec and hardcode_minus_L are the same for\n\thppa*64 and ia64*. Don't set\n\thardcode_libdir_flag_spec='-L$libdir' on ia64* because if you\n\tspecify +b and -L, +b overrides what is set into DT_RPATH.\n\n2005-11-07  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/testsuite.at (_LTDL_PROJECT_FILES): Factored out from\n\tcommon code to build a basic libltdl using project.\n\t* tests/old-m4-iface.at, tests/standalone.at, tests/subproject.at:\n\tUse it.\n\n\t* doc/libtool.texi (Distributing libltdl): Document correct use of\n\tLT_CONFIG_LTDL_DIR mode argument with Autoconf and Automake.\n\n2005-11-07  Gary V. Vaughan  <gary@gnu.org>\n\n\tSupport 'recursive' mode for building libltdl: Automake will\n\trecursively descend into the libltdl directory, and use libltdl's\n\tMakefile.am code to build libltdl:\n\n\t* ltdl.m4 (LT_CONFIG_LTDL_DIR): Don't barf on 'recursive' mode\n\tfor 2nd argument.\n\t(_LTDL_MODE_DISPATCH): Handle recursive mode.\n\n2005-11-07  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/recursive.at: New tests for libltdl as a subdirectory,\n\tconfigured and compiled from the toplevel project using a\n\trecursive make..\n\t* tests/testsuite.at: Use it.\n\t* Makefile.am (TESTSUITE_AT): Depend on it.\n\n\t* libltdl/m4/ltdl.m4 (LTDL_INIT): Don't force running\n\tAC_CONFIG_HEADERS for subproject ltdl.\n\t* tests/old-m4-iface.at, tests/subproject.at: Remove workaround.\n\n\t* libltdl/m4/ltdl.m4 (LT_CONFIG_LTDL_DIR): Add LTDL-MODE\n\targument.\n\t* configure.ac: Use it.\n\n2005-11-06  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_TRY_DLOPEN_SELF): lt_unknown is\n\tlt_dlunknown.\n\n\t* libltdl/m4/libtool.m4 (LT_SYS_DLOPEN_SELF): Revert\n\texpansion of `$wl'.\n\t(_LT_LANG_C_CONFIG, _LT_LANG_CXX_CONFIG, _LT_LANG_GCJ_CONFIG):\n\tDo not require LT_SYS_DLOPEN_SELF.\n\t(_LT_LANG_C_CONFIG): Instead call it at the right time.\n\t(_LT_LANG_CXX_CONFIG, _LT_LANG_F77_CONFIG, _LT_LANG_FC_CONFIG)\n\t(_LT_LANG_GCJ_CONFIG): Do not call _LT_CMD_STRIPLIB.\n\n\t* Makefile.am: `2>&1' as suggested by Albert Chin.\n\t* libltdl/m4/libtool.m4, libltdl/m4/ltdl.m4:\n\tTwo newlines before each macro, fix underlines.\n\n2005-11-05  Kean Johnston  <jkj@sco.com>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link) [*-*-sco3.2v5*]:\n\tDon't pass through -lc, nor add it to deplibs.\n\t[*-*-sysv5*]: Ditto.\n\t[*-*-openbsd*, *-*-freebsd*, *-*-dragonfly*]: Remove bogus\n\t`$arg'.\n\n2005-11-04  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* THANKS: Updated.\n\n2005-11-02  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/nonrecursive.at: New tests for libltdl as a subdirectory,\n\tconfigured and compiled from the toplevel project.\n\t* tests/testsuite.at: Use it.\n\t(LT_AT_AUTOHEADER): New macro.\n\t* Makefile.am (TESTSUITE_AT): Depend on nonrecursive.at.\n\n2005-11-01  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_ENABLE_LOCK) [ solaris ]: Add `-64'\n\tto $LD if necessary, to permit combining of several convenience\n\tlibs without any further objects added.\n\tReported by Brian Barrett <brbarret@open-mpi.org>.\n\n2005-11-01  Kean Johnston  <jkj@sco.com>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (LT_SYS_DLOPEN_SELF): Use\n\t`lt_prog_compile_static', not `link_static_flag'.  Expand `$wl'\n\tso expansion of `export_dynamic_flag_spec' works.\n\t(_LT_TRY_DLOPEN_SELF): Show dlerror() in case of failure.\n\t(_LT_LINKER_SHLIBS) [ aix3 ]: Likewise.\n\t(_LT_COMPILER_PIC) [ hpux* ]: Use `${wl}'.\n\n2005-11-01  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* THANKS: Updated.\n\n2005-11-01  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/m4/ltdl.m4 (LTDL_INIT): Call _LT_ENABLE_INSTALL directly\n\tinstead of m4_requiring it, as it relies on enable_ltdl_install\n\tand enable_ltdl_convenience to have been initialised first.\n\n\t* libtoolize.m4sh: Use serial tags to locate the correct serial\n\tnumbers when deciding whether to update.\n\t(func_serial): Allow for macro_regex argument to be originating\n\tfile name.\n\t(func_serial_update): Use NL2SP to flatten list of extracted\n\tm4_include files.\n\t* tests/libtoolize.at: More tests for old-style verbatim copying\n\tof macros into aclocal.m4.\n\n\t* libltdl/m4/argz.m4, libltdl/m4/ltoptions.m4, libltdl/ltsugar.m4,\n\tlibltdl/m4/ltversion.in: Add serial number tags, and bump serial\n\tnumber.\n\n2005-10-31  Kean Johnston  <jkj@sco.com>\n\n\t[ sysv5*, sco3.2v5*, sco5v6*, unixware*, OpenUNIX*, sysv4*uw2* ]\n\tPatches for various bug fixes, small improvements and updating\n\tthe SCO platform support.\n\n\t* libltdl/m4/libtool.m4 (LT_CMD_MAX_LEN): Set correctly for SCO.\n\n\t* libltdl/m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS): Set correct\n\tsymcode values for the native nm on SCO platforms.\n\n\t* libltdl/m4/ltdl.m4 (LT_SYS_DLOPEN_DEPLIBS): All SCO platforms\n\topen dependency libraries when you dlopen a module.\n\n2005-10-31  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG)\n\t[ aix ]: Remove duplicate always_export_symbols=yes for AIX.\n\n2005-10-29  Howard Chu  <hyc@highlandsun.com>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link):\n\tWith `-static', only link statically against uninstalled\n\tlibtool libraries.  Fixes 1.5.x regression to match documented\n\tbehavior.\n\t* NEWS: Updated.\n\n2005-10-27  Stepan Kasal  <kasal@ucw.cz>\n\n\t* HACKING: Update note about use of `$#' in m4 macros.\n\n2005-10-27  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/tagtrace.test: Allow `$AUTOCONF' to contain arguments.\n\tSkip if the running `autoconf' version is older than the one\n\tused to bootstrap Libtool.\n\n2005-10-26  Eric Blake  <ebb9@byu.net>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (vcl-tmp): Avoid warnings from diff.\n\t* bootstrap: Avoid warnings from find.\n\t(lt_tab): Use to prevent editor whitespace \"cleanup\".\n\n2005-10-26  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh: Put back the func_serial_update callback for\n\tfunc_copy_some_files so that the testsuite passes again.  We'll\n\thave to find a better way of handling serial numbers in libtool\n\tmacro files.\n\n\t* libltdl/Makefile.inc: New file, factored out of Makefile.am for\n\tuse in non-recursive libltdl installations.\n\t* bootstrap: Adjust.\n\t* Makefile.am: include it.\n\t(libltdl/Makefile.am): Adjust to build from the new\n\tlibltdl/Makefile.inc.\n\t(SUBDIR_LIBOBJS): Renamed from this...\n\t(LTDL_SUBDIR_LIBOBJS): ...to this.\n\t* configure.ac: Adjust.\n\t* doc/libtool.texi (Invoking libtoolize): Document the new modes\n\tand libtoolize option to select them.\n\t* libtoolize.m4sh: Parse new options, --nonrecursive, --recursive\n\tand --subproject.  Install the appropriate files with --ltdl\n\taccording to the selected mode.\n\t(func_scan_files): If --subproject, --recursive or --nonrecursive\n\toptions were not given, use the value from LT_CONFIG_LTDL_DIR; if\n\ta mode was given, and there is also an argument to\n\tLT_CONFIG_LTDL_DIR, ensure they are the same.\n\t* NEWS: Updated.\n\n\t* libtoolize.m4sh: Don't use func_serial_update as a copy\n\tfunction for libtool m4 files with no macro_regex.  If the\n\tfiles are copied directly into aclocal.m4, because\n\tAC_CONFIG_MACRO_DIR isn't set for example, there is no way\n\tto tell what serial number goes with what source file.\n\t(func_serial_update): For future-proofing, only make the second\n\tserial number check if the destination file wasn't m4_included\n\tinto aclocal.m4 (and hence updated automatically by the cat of\n\tcopying a new version to the dest directory).\n\n\t* libtoolize.m4sh: Move the consistency checks...\n\t(func_check_macros): ...into here.  Also suggest LT_WITH_LTDL if\n\tappropriate.\n\n\t* libtoolize.m4sh: Copying just libtool.m4 for hand maintained\n\taclocal.m4 doesn't work.  List all required files in that case,\n\tusing the files from installed libltdl if available.  Also, list\n\tthe additional files required when using libltdl.\n\tReported by Patrick Welche <prlw1@newn.cam.ac.uk>.\n\n\t* libltdl/ltdl.h, libltdl/ltdl.c (lt_dlhandle_first): Removed.\n\t* libltdl/ltdl.h, libltdl/ltdl.c (lt_dlhandle_next)\n\t(lt_dlhandle_find, lt_dlforeach): Removed...\n\t(lt_dlhandle_iterate, lt_dlhandle_fetch, lt_dlhandle_map): Similar\n\tfunctions that are multi-loader safe, and require a registered\n\tinterface validator argument.\n\t* doc/libtool.texi: Updated.\n\t* NEWS: Updated.\n\n\t* libtoolize.m4sh: Always copy pkgconfig_files for --ltdl, incase\n\tltdl needs additional things not found by automake when looking at\n\tthe parent project configury.\n\t* tests/libtoolize.at: Adjust.\n\n2005-10-17  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh [darwin]: Don't check for \"bundle\"\n\tin file path.\n\tReported by Christoph Egger <Christoph_Egger@gmx.de>.\n\n2005-10-14  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/m4/ltdl.m4 (LT_WITH_LTDL): Don't nest AC_MSG_CHECKING/\n\tAC_MSG_RESULT pairs.\n\n2005-10-14  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/subproject.at: Move 'touch config.h.in' invocation.\n\n\t* tests/subproject.at (_LTDL_SETUP): Use pushdef/popdef to\n\tsimulate file-local scope.  Empty source file compilation is not\n\tportable, so add minimal code to generated foo.c file.\n\n2005-10-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (LT_PATH_NM): End test source with\n\tnewline.\n\tReported by Charles Wilson <cygwin@cwilson.fastmail.fm>.\n\n2005-10-13  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/ltdl.c (find_module): Check that dir is set.\n\t(load_deplibs): Don't free the user search paths too early.\n\n2005-10-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/testsuite.at (LT_AT_AUTOMAKE): New macro.\n\t* tests/subproject.at: Use it.  Do not call `autoreconf' in\n\ttests, since it will try to reconfigure `sub/ltdl', which\n\tbreaks `make check' during `distcheck' because of a readonly\n\tsource tree.\n\n\t* libltdl/m4/ltdl.m4 (LT_WITH_LTDL): Also set INCLTDL.\n\n\t* libltdl/m4/ltdl.m4 (LTDL_CONVENIENCE, LTDL_INSTALLABLE)\n\t(LT_WITH_LTDL): Revert Gary's 2005-10-10 patch.\n\n\t* tests/stresstest.at: Use `allow_undefined_flag' instead of\n\thost_os setting.\n\n2005-10-10  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/m4/ltdl.m4 (_LT_ENABLE_INSTALL): Remove bogus extra\n\tclosing brackets.\n\n2005-10-10  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/m4/ltdl.m4 (LTDL_CONVENIENCE, LTDL_INSTALLABLE): Remove\n\tAC_SUBST of LIBLTDL, LTDLINCL, and all mention of INCLTDL.\n\t(LT_WITH_LTDL): Due to order constraints between LTDL_CONVENIENCE,\n\tLTDL_INSTALLABLE, LT_WITH_LTDL & LTDL_INIT, we can safely AC_SUBST\n\tLIBLTDL and LTDLINCL here.  Also, remember to synch INCLTDL.\n\n2005-10-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/stresstest.at [ aix3, beos, os2 ]: Always use\n\t`-no-undefined'.\n\n2005-10-09  Christian Biesinger  <cbiesinger@web.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_LANG_CXX_CONFIG) [ beos ]:\n\tInitial shared library support for C++.\n\n2005-10-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* configure.ac (abs_top_builddir, abs_top_srcdir): always\n\tsubstitute.\n\t* Makefile.am (BUILDCHECK_ENVIRONMENT)\n\t(INSTALLCHECK_ENVIRONMENT): New macros.  Set _lt_pkgdatadir,\n\tLIBTOOL, LIBTOOLIZE accordingly, by using above, and\n\tprogram_transform_name.\n\t* tests/testsuite.at (TESTS_PREPARE): Do not set them anymore.\n\tSet $unset.\n\t(LT_AT_MAKE): Use to unset LIBTOOL and LIBTOOLIZE.\n\n2005-10-05  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/subproject.at: Commit the right file this time.\n\n2005-10-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_LANG_CXX_CONFIG): Fix m4 quoting\n\tfor lt_simple_link_test_code.\n\tReported by Nicolas Joly <njoly@pasteur.fr>.\n\n2005-10-05  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/subproject.at: New tests for libltdl as a subproject with\n\tits own configuration.\n\t* tests/testsuite.at: Use it.\n\t* Makefile.am (TESTSUITE_AT): Depend on it.\n\n2005-10-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am: Simplify.  Do not use abs_top_srcdir.\n\tReported by Gary V. Vaughan <gary@gnu.org>.\n\n2005-10-05  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/m4/ltdl.m4 (_LT_CONFIG_LTDL_DIR): Spurious './' prefixes\n\tupset BSD pmake, don't set lt_ltdl_dir in this case.\n\t(LTDL_CONVENIENCE, LTDL_INSTALLABLE): Adjust.\n\n2005-10-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (BUILDCHECK_ENVIRONMENT)\n\t(INSTALLCHECK_ENVIRONMENT): New macros.\n\t(check-local, installcheck-local): Use them.\n\t* tests/testsuite.at (PREPARE_TESTS): Extract host_alias, ECHO.\n\tSet configure_options appropriately.\n\t(LT_AT_CONFIGURE, LT_AT_AUTORECONF, LT_AT_MAKE): New macros.\n\t(LT_AT_BOOTSTRAP): Use them.\n\t* tests/am-subdir.at, tests/early-libtool.at,\n\ttests/old-m4-iface.at, tests/standalone.at: Likewise.\n\t* tests/link-order.test: Do not extract ECHO any more.\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER): Require\n\tAC_CANONICAL_HOST and _LT_DECL_SED.\n\n2005-10-03  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/m4/ltdl.m4: Bump serial as we are changing the\n\tinterface.\n\t(LT_CONFIG_LTDL_DIR): New macro to centralise setting the\n\tsubdirectory used for libltdl.\n\t(LTDL_CONVENIENCE): Continue backwards compatibility support for\n\tdeclaring the libltdl source subdirectory with an argument, but\n\tdefer to LT_CONFIG_LTDL_DIR.\n\t(AC_LIBLTDL_CONVENIENCE): Adjust to upgrade to the new style.\n\t(LTDL_INSTALLABLE, AC_LIBLTDL_INSTALLABLE): Ditto.\n\t(LTDL_INIT): lt_ltdl_dir is set by LT_CONFIG_LTDL_DIR now, and\n\teven `./' needs trailing slashes trimming!  If the user didn't\n\tupgrade their configure.ac yet, call LT_CONFIG_LTDL_DIR for them.\n\t* libtoolize.m4sh (func_scan_files): If --ltdl option is given\n\twithout a directory argument, use the value from\n\tLT_CONFIG_LTDL_DIR; if the argument is given, and there is also a\n\tvalue in LT_CONFIG_LTDL_DIR, ensure they are the same.\n\t* libltdl/configure.ac: Use it.\n\t* NEWS: Updated.\n\n2005-10-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/old-m4-iface.at (Makefile.in): Do not reconfigure\n\tlibltdl directory.\n\n2005-09-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/deplibs-ident.at: New file with XFAIL test to expose\n\twrong multiple listing of a deplib on the command line.\n\t* Makefile.am, tests/testsuite.at: Updated.\n\tReported by Brian Barrett <brbarret@open-mpi.org>.\n\n\t* tests/old-m4-iface.at: Define top_srcdir, work around current\n\tltdl.m4 bug.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link):\n\tFix wrong logic introduced in last commit.\n\n2005-09-30  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/libtoolize.at: Add a new test to catch a regression I\n\talmost introduced with respect to copying macro files when\n\tAC_CONFIG_MACRO_DIR is shared with libltdl subproject.\n\n2005-09-30  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/old-m4-iface.at: Start of a new test series for m4\n\tinterface backwards compatibility.\n\t* tests/testsuite.at: Use it.\n\t(macrodir): Declare the location of uninstalled libtool m4 macros.\n\t* Makefile.am (TESTSUITE_AT): Depend on it.\n\n2005-09-29  Tim Rice  <tim@multitalents.net>  (tiny change)\n\n\t* tests/early-libtool.at (Makefile.in): Set $(SHELL).\n\n2005-09-29  Peter Ekberg  <peda@lysator.liu.se>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Don't modify\n\tuser provided symbols file. Adjust removal of temporary files\n\tand also remove temporary files used during symbols file\n\tfiltering.\n\n2005-09-29  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libtoolize.m4sh (func_included_files): Do not recurse\n\tnon-existent files.\n\n2005-09-27  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh (func_scan_files): Support projects that have\n\tupgraded libtool, but still use an old autoconf.  When the libtool\n\tmacros are not copied (because of missing ACLOCAL_AMFLAGS and\n\tAC_CONFIG_MACRO_DIR ), point them at the libtoolize master tree\n\tfor files to manually copy into acinclude.m4 or aclocal.m4.\n\n\t* libltdl/lt_error.c (lt__last_error, lt__error_strings): The lt__\n\tprefix is used to indicate internal symbols that are only exported\n\tfor use by other parts of libltdl.  These are now static, so...\n\t(last_error, error_strings): ...renamed to this.  Changed all\n\tcallers.\n\n\t* libltdl/ltdl.h (lt_dlmutex_register, lt_dlmutex_lock)\n\t(lt_dlmutex_unlock, lt_dlmutex_seterror, lt_dlmutex_geterror)\n\t(lt_dlmalloc, lt_dlrealloc, lt_dlfree): Remove deprecated APIs.\n\t* doc/libtool.tex: Updated.\n\t* NEWS: Updated.\n\n\t* libltdl/ltdl.c (lt_dlcaller_register): Renamed to avoid problems\n\twith module visibilty when linked with programs written for the\n\told API.\n\t(lt_dlinterface_register): New name.\n\t* Makefile.am (VERSION_INFO): Bumped.\n\t* doc/libtool.texi (User defined module data): Updated.\n\n2005-09-27  Tim Rice  <tim@multitalents.net>\n\n\t* tests/defs.m4sh, tests/testsuite.at (PREPARE_TESTS)\n\t<AUTORECONF>: Allow variable override.\n\n2005-09-26  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* HACKING: Only update libltdl version info before release.\n\n2005-09-26  Tim Rice  <tim@multitalents.net>\n\n\t* configure.ac <AUTOM4TE>: Allow variable override.\n\n2005-09-25  Alan W. Irwin  <irwin@beluga.phys.uvic.ca>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_win32_libid)\n\t[ cygwin, mingw ]: Robustify sed script to determine\n\twin32_libid_type.\n\t(func_mode_link) [ mingw ]: Ignore `-lm'.\n\n2005-09-25  Peter Ekberg  <peda@lysator.liu.se>\n\n\t* libltdl/libltdl/lt__private.h, libltdl/lt_error.c:\n\tDon't export the lt__last_error and lt__error_strings\n\tvariables. Define lt__error_strings so that no relocations\n\tare needed.\n\t* libltdl/libltdl/lt__private.h (LT__STRERROR, LT__GETERROR)\n\t(LT__SETERRORSTR): Adjust to not use the above variables,\n\tinstead use the following functions...\n\t* libltdl/lt_error.c: (lt__error_string, lt__get_last_error)\n\t(lt__set_last_error): Reimplement the functionality in\n\tthese functions instead.\n\t* libltdl/libltdl/lt_error.h: Add LT_ERROR_LEN_MAX define for\n\tmax error string length.\n\t(lt_dlerror_table): Append explicit nul terminators so that\n\tcompilers warn more reliably if the above define is too small.\n\n2005-09-23  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* tests/link-order.at [ aix* ]: skip path syntax grep.\n\n2005-09-23  Peter Ekberg  <peda@lysator.liu.se>\n\n\t* libltdl/m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS): Fix awk\n\tscript to be a single line so that the cache variable isn't\n\tmultiline.\n\n2005-09-23  Eric Blake  <ebb9@byu.net>  (tiny change)\n\n\t* libltdl/loaders/loadlibrary.c (vm_open): Silence gcc warnings.\n\t[__CYGWIN__]: Include <sys/cygwin.h> for prototype.\n\n2005-09-22  Gary V. Vaughan  <gary@gnu.org>\n\n\t* bootstrap: Don't clobber the working copy metadata in\n\t./{arch}/libtool during bootstrap.\n\n2005-09-22  Peter Ekberg  <peda@lysator.liu.se>,\n\t    Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Filter\n\tuser supplied symfile to tag relevant symbols as data\n\tsymbols. Fixes segfault in stresstest.at on Cygwin and\n\tmakes the test pass.\n\n2005-09-22  Peter Ekberg  <peda@lysator.liu.se>\n\n\t* tests/link-order.test: Clean up the uninstalled libraries\n\tbefore linking the test executables so that they don't pick\n\tup the dlls from the current dir on Cygwin and MinGW.\n\n2005-09-22  Tim Rice  <tim@multitalents.net>\n\n\t* libltdl/m4/libtool.m4 (LT_PATH_NM, _LT_LINKER_SHLIBS)\n\t(_LT_LANG_CXX_CONFIG, _LT_SYS_HIDDEN_LIBDEPS):\n\tAdd missing `;;' after case list.\n\n2005-09-22  Peter Ekberg  <peda@lysator.liu.se>,\n\t    Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS, _LT_COMPILER_PIC)\n\t(_LT_LINKER_SHLIBS): Require _LT_TAG_COMPILER to make sure that\n\t$compiler is assigned. Fixes crippled configure output.\n\n2005-09-21  Peter Ekberg  <peda@lysator.liu.se>\n\n\t* libltdl/m4/libtool.m4 (LT_PATH_NM): Fix autodetection of\n\tdumpbin and also check for \"link -dump -symbols\" as a synonym\n\tfor \"dumpbin -symbols\".\n\n\t* libltdl/config/ltmain.m4sh (func_mode_uninstall): Clean\n\tup $dlname as well when cleaning a uninstalled libtool\n\tlibrary. Fixes -mode=clean on Cygwin and MinGW to actually\n\tremove the dll when cleaning up an uninstalled library.\n\n2005-09-20  Peter Ekberg  <peda@lysator.liu.se>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG):\n\tSplit up --out-implib option for linker in separate args so that\n\tthe MSYS path translation can do its magic on the provided path\n\tto the import library. Fixes problem in stresstest.at on MinGW.\n\n2005-09-19  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (ltdldatafiles): Fix installation order to match\n\tdependency order.\n\t(libltdl/Makefile.in): Use $(srcdir) for non-GNU make.\n\n2005-09-17  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Allow some\n\tARM gcc ABI flags through.\n\tReported by Andr\u00e9s Mor\u00e9 <more.andres@gmail.com>.\n\n\t* Makefile.am (all-local): Rebuild libltdl/Makefile.in.\n\n\t* libltdl/m4/ltdl.m4 (LTDL_INIT) <CONFIG_H>: Rename to..\n\t<LT_CONFIG_H>: this, to contain the name of the config\n\theader.\n\t* Makefile.am <DEFS>: Use it to define LT_CONFIG_H.\n\t* HACKING, libltdl/argz.c, libltdl/lt__alloc.c,\n\tlibltdl/libltdl/lt__dirent.h, libltdl/libltdl/lt__glibc.h,\n\tlibltdl/libltdl/lt__private.h, libltdl/libltdl/lt__strl.h:\n\tAdjusted.\n\n2005-09-16  Peter Ekberg  <peda@lysator.liu.se>\n\n\t* tests/testsuite.at (LT_AT_EXEC_CHECK): Make sure\n\tthat the exit status of the tested program is\n\tpropagated as the exit status of the expression\n\tfed to AT_CHECK.\n\n2005-09-14  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/argz.c <HAVE_CONFIG_H>: Avoid redefinition warning.\n\n\t* libltdl/ltdl.c (lt_argz_insert): Work around newlib\n\targz_insert bug.\n\t* Makefile.am (VERSION_INFO): Bumped revision.\n\tReported by Eric Blake <ebb9@byu.net>.\n\n2005-09-13  Peter Ekberg  <peda@lysator.liu.se>,\n\t    Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/config/ltmain.m4sh (func_generate_dlsyms):\n\tFix escape expression to actually escape relevant\n\tcharacters from the following grep. Fix Cygwin and\n\tMinGW to use the filtered symbol list when exporting\n\tfrom self, and not the symbol filter.\n\t* tests/stresstest.at: Export w8, not w8$\n\n2005-09-12  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\tMake tagdemo work smoothly with both pre- and ISO C++ compilers,\n\tand remove all use of libstdc from other tests.\n\n\t* tests/tagdemo/configure.ac (HAVE_NAMESPACES, HAVE_IOSTREAM):\n\tNew tests for ISO C++ features.  Reimplementation of similar\n\tmacros from the autoconf archive.\n\t* tests/tagdemo/foo.cpp, tests/tagdemo/main.cpp: Adjusted.\n\t* tests/am-subdir.at, tests/template.at: Do not use iostream.\n\n2005-09-12  Peter Ekberg  <peda@axentia.se>,\n\t    Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* tests/testsuite.at (host_os): Pull from `libtool --config'.\n\t* tests/stresstest.at [ cygwin, mingw, pw32 ]: Use it to fix\n\tsetting of `-no-undefined'.\n\n2005-09-12  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/ltdl.m4 (LT_WITH_LTDL, LTDL_CONVENIENCE)\n\t(LTDL_INSTALLABLE): Use less quoting for expanded LIBLTDL,\n\tLTDLINCL.  Use m4_default instead of m4_if, to work\n\taround AU_ALIAS bug with empty macro arguments.\n\t(LTDL_INIT): Likewise.\n\t* libltdl/m4/ltoptions.m4 (_LT_WITH_PIC): Likewise.\n\t* TODO, HACKING: Updated.\n\n2005-09-10  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh (TAR): Allow the user to override the tar\n\tcommand.\n\n2005-09-09  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_BOILERPLATE)\n\t(_LT_LINKER_BOILERPLATE, _LT_COMPILER_OPTION, _LT_LINKER_OPTION)\n\t(_LT_COMPILER_C_O): When comparing expected and actual compiler/\n\tlinker output for warnings, weed out both empty lines as well as\n\tlines starting with possibly indented `+', to allow for shell\n\tdebugging with `set -x'.\n\tCheck the weeded instead of unweeded contents for emptiness.\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Actually provide\n\ta useful error message.  Fixes long-standing shameful user\n\tneglection.\n\tReported by Martin Paljak <martin.paljak@gmail.com>.\n\n2005-09-08  Peter Ekberg  <peda@axentia.se>\n\n\t* libltdl/m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS) [dumpbin]:\n\tSymbols in \"pick any\" sections are not global. Use\n\tawk, not sed, in the global_symbol_pipe so that keeping\n\ttrack of sections is easier.\n\t* doc/libtool.texi (libtool script contents): Update to hint\n\tat new findings concerning \"pick any\" sections.\n\n2005-09-08  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* tests/early-libtool.at (config.status): Use EXEEXT\n\tconsistently.\n\tReported by Charles Wilson <cygwin@cwilson.fastmail.fm>.\n\n2005-09-08  Charles Wilson  <cygwin@cwilson.fastmail.fm>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG)\n\t[ cygwin, mingw, pw32 ]: Use --enable-auto-image-base instead of\n\ta fixed image base address.\n\n2005-09-06  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_MAGIC_METHOD) [ sysv4*uw2*,\n\tsysv4.2uw2* ]: Fix my last checkin to really match the more special\n\tcase before the general case.\n\tReported by Stepan Kasal <kasal@ucw.cz>.\n\n2005-09-06  Roger Cornelius  <rac@tenzing.org>\n\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_MAGIC_METHOD)\n\t[ sysv5OpenUNIX8, sysv5UnixWare7, sysv5uw[78], unixware7,\n\tsysv4*uw2* ]: Match special cases before general case.\n\n2005-09-05  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* bootstrap: another AIX sed fix.\n\n\t* Makefile.am (TESTS_ENVIRONMENT): Export SHELL.\n\t* bootstrap (SHELL): Set to $CONFIG_SHELL or /bin/sh.\n\tName `make' targets in portable fashion.  Work around `rm'\n\twarnings.  Unconditionally create fake `libtoolize'.\n\tReported by Patrick Welche <prlw1@newn.cam.ac.uk>.\n\n\t* Makefile.am (doc/notes.txt): Use --no-headers instead of\n\t--plaintext for makeinfo.\n\tReported by Peter O'Gorman <peter@pogma.com>.\n\n2005-09-04  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS) [ aix ]\n\t<export_symbols_cmds>: Work around shell expansion issue in\n\tfunc_show_eval by separating `$' and field number; drop then\n\tunnecessary m4 quoting.\n\n2005-09-02  Gary V. Vaughan  <gary@gnu.org>\n\n\tAC_BEFORE only works if declarations are made inside the macro\n\tcited as the first argument:\n\n\t* libltdl/m4/libtool.m4 (LT_OUTPUT): Move AC_BEFORE decls...\n\t(LT_INIT, LT_LANG): ...to the macro that has to come first.\n\n2005-09-01  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/m4/libtool.m4 (old_postintall_cmds): chmod 644 before\n\trunning ranlib.\n\tReported by Gerald Pfeifer <gerald@pfeifer.com>\n\n2005-09-01  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_PROG_CXX, _LT_PROG_F77)\n\t(_LT_PROG_FC): aclocal-1.4 compatibility workaround.\n\n\t* bootstrap: Do not use nonportable -path.\n\tReported by Ralf Menzel <menzel@ls6.cs.uni-dortmund.de>.\n\n2005-09-01  Gary V. Vaughan  <gary@gnu.org>\n\n\t* doc/libtool.texi (LT_INIT): Fix a logical error with\n\tdocumentation of --with-pic vs --without-pic.\n\n2005-09-01  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/ltoptions.m4 (_LT_SET_OPTIONS): m4_defun this..\n\t* libltdl/m4/libtool.m4 (LT_INIT): so it can be m4_require'd\n\tfrom here with user-supplied options.  Fixes output macro\n\tordering issue.\n\n2005-09-01  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh (func_scan_files): When searching for evidence\n\tof Autotools in aclocal.m4, be careful not to trip over requires\n\tand defuns.\n\n2005-08-31  Gary V. Vaughan <gary@gnu.org>,\n\t    Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/ltoptions.m4 (_LT_SET_OPTIONS): Move option macro\n\tdipatch..\n\t(_LT_SET_OPTION): here.  Do not fail but warn on unknown\n\toptions.\n\t(_LT_UNLESS_OPTIONS(win32-dll), LT_OPTION_DEFINE(dlopen)):\n\tAdd whitespace.\n\tReported by Robert \u00d6gren <lists@roboros.com> and\n\tAkim Demaille <akim@lrde.epita.fr>.\n\n2005-08-31  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 [ solaris CC ]: Document issue with C++\n\tstandard libraries.\n\n2005-08-30  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/m4/ltoptions.m4 (AC_LIBTOOL_PIC_MODE): Renamed...\n\t(AC_LIBTOOL_PICMODE): ...this in the backwards compatibility\n\tcode.  There never was an AC_LIBTOOL_PIC_MODE macro.\n\n\t* libltdl/m4/libtool.m4 (_LT_SETUP): Remove duplicate\n\t--enable-libtool-lock declaration.\n\n2005-08-29  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER)\n\t(_LT_PATH_TOOL_PREFIX, _LT_SYS_HIDDEN_LIBDEPS, _LT_DECL_EGREP):\n\tFix typos.\n\n\t* Makefile.am: Install libltdl data files in correct order.\n\tUse pre-defined programs for installation; use NORMAL_INSTALL\n\tand NORMAL_UNINSTALL.  Really fix ownership and timestamp\n\tproblems.  Fix typo in uninstallation of aclocal files.\n\tReported by Peter Breitenlohner <peb@mppmu.mpg.de> and\n\tCharles Wilson <cygwin@cwilson.fastmail.fm>.\n\n2005-08-29  Gary V. Vaughan <gary@gnu.org>,\n\t    Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\tAllow for portability with Autoconf 2.59, Automake 1.9.6,\n\twhich lack AC_CONFIG_LIBOBJ_DIR support.\n\n\t* bootstrap: Unless environment variable WORKING_LIBOBJS_SUPPORT\n\tis set to true aka `:', symlink ..\n\t* argz.c lt__dirent.c lt__strl.c: .. these from the copies in\n\tlibltdl.\n\t* configure.ac (SUBDIR_LIBOBJS): Automake conditional, set if\n\tbootstrap didn't make the extra copies of libobj sources in\n\ttop srcdir...\n\t* Makefile.am: Add these to EXTRA_DIST if SUBDIR_OBJS is not set,\n\tas well as the originals in libltdl/, in order to work when\n\tbootstrapped both with old and newer Automake/Autoconf.\n\n2005-08-29  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/m4/ltdl.m4 (LTDL_CONVENIENCE): Fix the comment to not\n\tpretend that LIBLTDL and LTDLINCL are not AC_SUBSTed here.\n\n2005-08-29  Gary V. Vaughan  <gary@gnu.org>\n\n\tSome macros had relied on accidentally correct ordering in order\n\tfor $MV to be defined before use.  Factor out setting of some\n\tcommon file commands and m4_require it before use:\n\n\t* libltdl/m4/libtool.m4 (_LT_FILEUTILS_DEFAULTS): Allow user to\n\toverride some common file commands at configure time.\n\t(_LT_SETUP, _LT_CONFIG, _LT_COMPILER_OPTION, _LT_LINKER_OPTION)\n\t(_LT_COMPILER_C_O, _LT_COMPILER_FILE_LOCKS)\n\t(_LT_SYS_DYNAMIC_LINKER, _LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG)\n\t(_LT_SYS_HIDDEN_DEPLIBS): m4_require it to ensure the commands are\n\tdefined before they are called.\n\n2005-08-28  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/m4/libtool.m4, libltdl/m4/ltdl.m4: AU_DEFUN doesn't pass\n\targuments.  Use AU_ALIAS instead!\n\n2005-08-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>,\n\t    Gary V. Vaughan <gary@gnu.org>\n\n\t* libltdl/config/ltmain.m4sh (func_lalib_unsafe_p) [osf]:\n\tSave file descriptor to original STDIN, and restore after\n\tredirection.  Fixes memory corruption with Tru64 and OSF sh.\n\tReported by Nicolas Joly <njoly@pasteur.fr>.\n\n2005-08-26  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>,\n\t    Peter Ekberg  <peda@lysator.liu.se>\n\n\t* tests/early-libtool.at: Fix goofed up make rules in\n\tprevious commit.\n\n\t* tests/inherited_flags.at: Weaken for MSVC.\n\t* tests/early-libtool.at, tests/template.at: Fix for compiler\n\tthat do not understand '-c -o'.\n\n2005-08-26  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/standalone.at, tests/template.at: Do not compare\n\toutput because of EOL issues.  Resolve warnings, make cross-\n\tcompilation aware.\n\tReported by Peter Ekberg <peda@axentia.se>.\n\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER)\n\t(_LT_LINKER_SHLIBS): Double-quote unsafe tag variable\n\tdescriptions: they are literals.\n\n2005-08-25  Peter Ekberg  <peda@lysator.liu.se>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/standalone.at: (without autotools): Add\n\t$(CFLAGS) to LTCOMPILE and LTLINK. Separate compiling\n\tand linking. Remove compiling flags from link. Add\n\t--tag. Add -no-undefined flag.\n\n2005-08-24  Bruno Haible  <bruno@clisp.org>\n\n\t* libltdl/config/ltmain.sh (func_mode_install): Try \"ln -s -f\"\n\tand \"rm -f && ln -s\" to make a symlink for a shared library: the\n\tformer is needed for libraries `ln' depends on, the latter for\n\tSolaris /bin/ln.\n\tReported by Nelson H. F. Beebe <beebe@math.utah.edu>.\n\n\t* libltdl/config/ltmain.sh (cwrappersource): return 127 if exec\n\tfailed.\n\n2005-08-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_C_O): Send chmod warning to log.\n\n\t* tests/defs.m4sh (m4dir, auxdir, scripts): Fix for source tree\n\treorganization.\n\t* tests/sh.test: Adjust.  Also barf on sed diagnostics so this\n\ttest will not fail again silently.\n\n\t* libltdl/m4/ltdl.m4 (LT_SYS_SYMBOL_USCORE): Use _LT_EOF, not\n\tEOF.\n\n\t* tests/fcdemo/Makefile.am (suffix rules): Explicitly add\n\t$(FCFLAGS_f90) so the tests can pass on AIX.\n\n2005-08-24  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/config/ltmain.m4sh (inherited_linker_flags): Work when\n\toutput is an application too.\n\tReported by Christopher Egger <Christoph_Egger@gmx.de>\n\n2005-08-23  Stepan Kasal  <kasal@ucw.cz>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/m4/ltdl.m4 (LTDL_INIT): Use AH_HEADER if defined.\n\tCompute CONFIG_H only before creating config.status.\n\tReported by Peter Ekberg <peda@axentia.se>.\n\n2005-08-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.maint (web-manual): Fix $(LN_S) to use absolute path.\n\tFix creating the manual for VPATH build.\n\n\t* bootstrap: Fix missing replace config -> $auxdir.  ltmain.m4sh\n\tis prerequisite to ltmain.sh.  Improve warning message.\n\n2005-08-22  Gary V. Vaughan  <gary@gnu.org>\n\n\tReorganise the libtool tree to create a bootstrapped libltdl for\n\tinstallation to the libtoolize master tree, so that libltdl is\n\tuseable even in the extreme case of when automake and autoconf are\n\tnot installed on the developers machine.  Part of this change\n\trequires some duplication of rules between Makefile.am (which\n\tbuilds libltdl for this distribution) and libltdl/Makefile.am\n\t(which is used by projects that libltoolize --ltdl --copy), so\n\tlibtool now really does use a single toplevel Makefile.am, and we\n\tgenerate libltdl/Makefile.am from that:\n\n\t* m4, config: Moved from here...\n\t* libltdl/m4, libltdl/config: ...to here, to reduce the amount of\n\tkludging needed in bootstrap for autoreconf to run.\n\t* tests/cdemo/Makefile.am, tests/demo/Makefile.am,\n\ttests/depdemo/Makefile.am, tests/f77demo/Makefile.am,\n\ttests/fcdemo/Makefile.am, tests/mdemo/Makefile.am,\n\ttests/mdemo2/Makefile.am, tests/pdemo/Makefile.am,\n\ttests/tagdemo/Makefile.am (ACLOCAL_AMFLAGS): Adjust to\n\tcompensate.\n\t* tests/cdemo/configure.ac, tests/demo/configure.ac,\n\ttests/depdemo/configure.ac, tests/f77demo/configure.ac,\n\ttests/fcdemo/configure.ac, tests/mdemo/configure.ac,\n\ttests/mdemo2/configure.ac, tests/pdemo/configure.ac,\n\ttests/tagdemo/configure.ac (AC_CONFIG_AUX_DIR): Ditto.\n\t* libltdl/m4/ltdl.m4: Increment serial number.\n\t(LTDL_INIT): Accept an optional directory argument to prefix each\n\tof the LD_DLLOADERS locations.  Default to empty for backwards\n\tcompatibility.\n\t* Makefile.maint: Adjust to compensate.\n\t* configure.ac (AC_CONFIG_AUX_DIR, AC_CONFIG_MACRO_DIR): Adjust.\n\t(AC_CONFIG_LIBOBJ_DIR): Set here so that we can build LTLIBOBJS\n\tfrom in a subdirectory from the amalgamated Makefile.am.\n\t(AM_PROG_CC_C_O, AM_INIT_AUTOMAKE): Use subdir-objects.\n\t(AC_CONFIG_FILES): Remove libltdl/Makefile.am.\n\t* libltdl/Makefile.am: Removed from repository, and merged into\n\tMakefile.am as we now generate it...\n\t* Makefile.am (libltdl/Makefile.am): ...from here, by extracting\n\tthe merged rules, and tweaking paths to accomodate the difference\n\tin directory from Makefile.am to libltdl/Makefile.am.\n\t(nobase_dist_pkgdata_DATA): Automake generated installation rules\n\tchange timestamps of installed files, so renamed this...\n\t(configauxfiles): ...to this...\n\t(libtoolize): ...substitute it...\n\t(install-data-local): ...install manually, preserving\n\ttimestamps...\n\t(install-data-hook): ...and set execute bit as appropriate.\n\t(uninstall-hook): Not forgetting to remove them at uninstall.\n\t(libltdl/Makefile.in): New rule.  Called from...\n\t* bootstrap: ...here to avoid relying on config.status at\n\tbootstrap time.\n\t(auxdir, m4dir): Extract from configure.ac for ease of future\n\tmaintenance.  Adjust all references.\n\t(reconfdirs): Call autoreconf for libltdl too -- even\n\tthough we don't use it for the build, libltdl/configure and\n\tfriends are installed with `libtoolize --ltdl --copy'.\n\t* libtoolize.m4sh: Add files from the installed config master tree\n\tto libtoolize --ltdl project subdirectory.\n\tDiagnose duplicated files when --ltdl is used in an autotooled\n\tproject.\n\tIt's perfectly fine to run `libtoolize --ltdl --copy' in a tree\n\tthat has no configure.ac or configure.in; we want libltdl to be\n\tuseful even to projects that don't use autotools themselves.\n\t(libtoolize_flags): Removed.  Changed all callers.\n\t(func_massage_pkgconfig_files): New function.\n\t* tests/standalone.at: New tests for using libltdl without\n\tsupporting configury in the parent project.\n\t* tests/testsuite.at: Run them!\n\t* NEWS: Updated.\n\n2005-08-22  Peter Ekberg  <peda@lysator.liu.se>\n\n\t* m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS) [dumpbin]: Add\n\tforgotten end bracket.\n\n\t* doc/libtool.texi: Shorten the lines describing the\n\toutput from MS dumpbin, and align the columns.\n\n\t* m4/libtool.m4: Bump serial number.\n\t(LT_PATH_NM): If nm is not found on the path, look for\n\tdumpbin. Then check if $NM responds as dumpbin would\n\tand if not, assume the name lister is BSD nm compatible.\n\t(_LT_CMD_GLOBAL_SYMBOLS): If the name lister uses the\n\tdumpbin interface, adjust the test to find a working\n\tglobal_symbol_pipe.\n\t* doc/libtool.texi: Document $NM to possibly be MS\n\tdumpbin compatible, and also document the format of the\n\trelevant output from MS dumpbin.\n\n2005-08-21  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/Makefile.am: revert mistaken commit.\n\n\t* tests/template.at [darwin]: Some of these tests result in\n\tunresolved symbols on darwin, so don't run those test on that\n\thost!\n\n2005-08-18  Gary V. Vaughan  <gary@gnu.org>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (LT_OUTPUT): New macro to generate\n\tlibtool before config.status.\n\t(_LT_CONFIG_COMMANDS): If LT_OUTPUT has been invoked, then\n\tgenerate code in config.status to call config.lt instead of\n\tgenerating libtool directly.\n\t* doc/libtool.texi (LT_INIT): Document LT_OUTPUT.\n\t* tests/early-libtool.at: New test.\n\t* Makefile.am (TESTSUITE_AT): Updated.\n\t* tests/testsuite.at: Updated.  Define defaults for $ACLOCAL,\n\t$AUTOCONF.\n\n2005-08-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* TODO: Actually updated now.\n\n\t* m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [ freebsd ]: Do not\n\tassume `aout' for modern FreeBSD by absence of deprecated\n\t`objformat'.\n\n\t* m4/libtool.m4 [sun, CC] (_LT_LANG_CXX_CONFIG): Move postdeps\n\toverride ..\n\t(_LT_SYS_HIDDEN_LIBDEPS): ..here.\n\t* TODO: Updated.\n\n2005-08-18  Stepan Kasal  <kasal@ucw.cz>\n\n\t* config/general.m4sh (SP2NL, NL2SP): Simplify.\n\n2005-08-17  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/ltdl.m4 (LTDL_INIT): Fix mismatched parens.\n\n2005-08-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/inherited_flags.at: Store intermediate libtool output\n\tfor better debugging.\n\n\t* tests/link-order.at: Add -no-undefined to LDFLAGS.\n\n\t* tests/convenience.at, tests/template.at: Change suffix of C++\n\tfiles to .cpp, for compatibility with MSVC.\n\tReported by Peter Ekberg <peda@axentia.se>.\n\n2005-08-12  Jeremie LE HEN  <tataz@sitadelle.com>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (Creating object files, Linking libraries):\n\tUpdate description of library object (.lo) and libtoo library\n\t(.la) files.\n\t(all over): Replace MODE with --mode=MODE in examples.\n\n2005-08-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (func_source): New function.\n\t(func_mode_execute, func_mode_install, func_mode_link): Use it.\n\tDo not append a dot to a file name to source, it breaks on\n\tcygwin managed mounts and is not necessary anywhere.\n\tReported by Eric Blake <ebb9@byu.net>.\n\n\t* config/ltmain.m4sh (func_execute_cmds): New function.\n\t(func_mode_finish, func_mode_install, func_mode_link)\n\t(func_mode_uninstall): Use it.\n\n\t* tests/defs.m4sh (func_configure): Rename to ..\n\t(func_configure_nofail): this, call from old.\n\t* tests/fcdemo-conf.test, tests/fcdemo-shared.test,\n\ttests/fcdemo-static.test: Use.  Do not fail gratuitously but\n\tSKIP on compilers that look like they could be Fortran 77-only.\n\tReported by Patrick Welche <prlw1@newn.cam.ac.uk>.\n\n\t* config/ltmain.m4sh (mode): Do not initialize, for nicer error\n\tmessages.\n\n2005-08-10  Peter Ekberg  <peda@lysator.liu.se>\n\n\t* m4/libtool.m4 (_LT_LANG_CXX_CONFIG): Set ac_ext to cpp, not cc.\n\n2005-08-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (inherited_linker_flags): Backed out broken\n\tpatch.\n\n2005-08-08  Peter O'Gorman  <peter@pogma.com>\n\n\t* config/ltmain.m4sh (inherited_linker_flags): Work when output\n\tis an application too.\n\tReported by Christopher Egger <Christoph_Egger@gmx.de>\n\n2005-08-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_PROG_FC, _LT_LANG_FC_CONFIG): New macros\n\tfor modern Fortran.\n\t(LT_LANG, _LT_LANG_DEFAULT_CONFIG, _LT_SYS_DYNAMIC_LINKER,\n\t_LT_SYS_HIDDEN_LIBDEPS): Adjusted.\n\t* tests/fcdemo-conf.test, tests/fcdemo-exec.test,\n\ttests/fcdemo-make.test, tests/fcdemo-shared.test,\n\ttests/fcdemo-static.test, tests/fcdemo/Makefile.am,\n\ttests/fcdemo/README, tests/fcdemo/configure.ac,\n\ttests/fcdemo/cprogram.c, tests/fcdemo/foo.h, tests/fcdemo/fooc.c,\n\ttests/fcdemo/foof.f90, tests/fcdemo/foof2.f90,\n\ttests/fcdemo/foof3.f90, tests/fcdemo/fprogram.f90: New tests for\n\tFortran.\n\t* tests/convenience.at: Extended.\n\t* Makefile.am, configure.ac: Adjusted.\n\t* NEWS: Updated.\n\n\t* AUTHORS, HACKING: Updated.\n\n2005-08-05  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* config/ltmain.m4sh (func_mode_link): Ignore errors from expr\n\twhen determining if piece-wise linking should be done.\n\n2005-08-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (func_mode_link) <cwrappersource>: Add\n\tmissing bit from Christoph's patch.\n\n\t* m4/libtool.m4 (_LT_LINKER_HARDCODE_LIBPATH, _LT_LINKER_SHLIBS)\n\t(_LT_LANG_CXX_CONFIG): Comment typos.\n\n2005-08-04  Christoph Egger  <Christoph_Egger@gmx.de>\n\n\t* config/ltmain.m4sh (func_mode_link) <cwrappersource>: Change\n\tbasename() to base_name() and have it return a pointer to const,\n\tfix compilation warnings.\n\n2005-07-30  Peter Ekberg  <peda@lysator.liu.se>\n\n\t* m4/libtool.m4 (_LT_PROG_F77): Set it up so that saying F77=no\n\tto configure disables the fortran tests in the testsuite.\n\n2005-07-29  Richard Moseley  <dickie.moseley@virgin.net>\n\n\t* m4/ltdl.m4 (LTDL_INIT): Handle in addition the new name for\n\tAC_LIST_HEADERS which is _AC_LIST_TAGS.\n\n2005-07-28  Peter Ekberg  <peda@lysator.liu.se>\n\n\t* libltdl/Makefile.am: Make the LTDLOPEN define controllable\n\tfrom the configure script.\n\t* m4/ltdl.m4 (LTDL_INIT): Set the LTDLOPEN define according\n\tto libname_spec.\n\n\t* tests/mdemo-dryrun.test: ls -l in MSYS sometimes shows year,\n\tnot time, for really fresh files. Add sleep 1 calls at\n\tstrategic places. Makes the test pass for MinGW.\n\n\t* m4/libtool.m4 (_LT_LINKER_OPTION): Fix copy-paste bug, it is\n\tthe linker that is tested.\n\n\t* tests/demo-noinst-link.test: $make is empty on MSYS, replace\n\twith $MAKE. Makes the test pass for MinGW.\n\n\t* config/ltmain.m4sh (func_generate_dlsyms): Properly remove\n\tthe fake symbol line \": @PROGRAM@ \" from the list of exported\n\tsymbols.\n\n\t* libltdl/loaders/loadlibrary.c (vm_open): Set the error mode so\n\tthat no dialog is popped up in case the file given to\n\tLoadLibrary is not a dll.\n\n\t* config/ltmain.m4sh (func_mode_link) <lib>: Make sure\n\tskipped_export is set to colon if _some_ cmd of\n\texport_symbols_cmds is too long.\n\n\t* libltdl/ltdl.c: The linker is confused by having one\n\tdefinition of lt_libltdlc_LTX_preloaded_symbols tagged with\n\t__declspec(dllexport) in ltdl.c and one definition with an\n\tinitial value in libltdlcS.c. So, just say extern in ltdl.c.\n\tFixes the mdemo-exec.test for MinGW.\n\n\t* config/ltmain.m4sh (func_mode_link) <lib>: Zap duplicate\n\tmessage \"creating reloadable object files...\"\n\n2005-07-23 Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4 (CXX, archive_cmds) [sun]: Add -lCstd, -lCrun\n\tand -lc for c++ builds with Sun C++ and Centerline C++..\n\tReported by Albert Chin-A-Young <china@hewrittenword.com>\n\n2005-07-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_CHECK_XSI_SHELL): Fix bogus merge.\n\tReported by Patrick Welche <prlw1@newn.cam.ac.uk>.\n\n2005-07-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/Makefile.am (libltdl_la_DEPENDENCIES): Depend on\n\t$(BUILT_SOURCES) as well, so that argz.h gets created through\n\t`make libltdlc.la'.\n\tReported by Sven Verdoolaege <skimo@liacs.nl>.\n\n2005-07-08  Peter Breitenlohner  <peb@mppmu.mpg.de>\n\n\t* Makefile.am (install-data-local): Have root own of installed\n\tfiles (but do not fail, for user installs).\n\n2005-07-08  Bruno Haible  <bruno@clisp.org>\n\n\t* m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) <postinstall_cmds>\n\t[cygwin,mingw,pw32]: Make DLL executable after installing it.\n\n2005-07-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (func_mode_install): Do not assume `-f'\n\tneeds an argument if the install program is `cp'.  Cleanup\n\tinstall mode somewhat.\n\tReported by Juergen Leising <juergen.leising@gmx.de>.\n\n2005-07-03  Thorsten Glaser  <tg@66h.42h.de>\n\n\t* m4/libtool.m4 (_LT_TRY_DLOPEN_SELF): Quieten configure\n\toutput for corner cases on some BSDs.\n\t(LT_CMD_MAX_LEN): Another comment cleanup.\n\n\t* config/ltmain.m4sh (func_extract_archives, func_mode_install),\n\tm4/libtool.m4 (_LT_SETUP, _LT_SYS_DYNAMIC_LINKER, LT_PATH_LD)\n\t(_LT_PATH_LD_GNU, _LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG):\n\tComment language, indentation, and backquote cleanup.\n\t* THANKS: Updated.\n\n2005-07-02  Peter O'Gorman  <peter@pogma.com>\n\n\t* tests/inherited_flags.at: Use -no-undefined.\n\tReported by Chris Oxenreider <oxenreid@state.net>\n\n2005-07-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (func_mode_compile, func_mode_link),\n\tm4/libtool.m4 (_LT_PROG_ECHO_BACKSLASH, _LT_ENABLE_LOCK):\n\tRemove some unnecessary quotes.\n\n\t* tests/convenience.at <GCJ>: Fix java test.\n\tReported by Eric Blake <ericblake@comcast.net>.\n\n2005-07-01  Derek R. Price  <derek@ximbiot.com>\n\n\t* config/ltmain.m4sh (func_mode_link) <shell wrapper>: Handle\n\tspaces in paths to executed programs.  Quote path in error message.\n\n2005-06-29  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* THANKS: Updated.\n\n2005-06-28  Stepan Kasal  <kasal@ucw.cz>\n\n\t* clcommit.m4sh: \"grep|sed\" can be replaced by mere \"sed\".\n\t* m4/libtool.m4 (_LT_LIBTOOL_TAGS): Remove unnnecessary \"[]\".\n\t* m4/lt~obsolete.m4: Use m4_ifndef.\n\n2005-06-27  Stepan Kasal  <kasal@ucw.cz>\n\n\t* m4/ltsugar.m4 (lt_combine, _lt_combine): Fix default separator.\n\n\t* m4/ltoptions.m4 (_LT_UNLESS_OPTIONS, _LT_SET_OPTIONS): Replace\n\tAC_FOREACH by a combination of m4_foreach/m4_split/m4_normalize.\n\n2005-06-27  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/ltoptions.m4 (_LT_SET_OPTIONS): Remove unnecessary workaround\n\tfor CVS Automake bug (fixed).\n\tReported by Stepan Kasal <kasal@ucw.cz>.\n\n2005-06-21  Peter O'Gorman  <peter@pogma.com>\n\n\t* conig/ltmain.m4sh [darwin]: Accept -arch flag.\n\n2005-06-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_COMPILER_BOILERPLATE, _LT_LINKER_BOILERPLATE):\n\tNew macros: save warnings and boilerplate of simple compile/link\n\ttests.\n\t(_LT_LANG_C_CONFIG, _LT_LANG_CXX_CONFIG, _LT_LANG_F77_CONFIG)\n\t(_LT_LANG_GCJ_CONFIG, _LT_LANG_RC_CONFIG): Call.\n\t(_LT_COMPILER_OPTION, _LT_LINKER_OPTION, _LT_COMPILER_C_O, ):\n\tFail only if nonempty warnings different from default\n\tcompile/link.\n\n2005-06-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/ltsugar.m4 (lt_car, lt_cdr): New macros, clones of\n\tm4_car/m4_cdr with the fixed semantics of Autoconf-2.59c CVS, in\n\torder to work with 2.59.\n\t(lt_combine): Use it.\n\tReported by Christoph Egger <Christoph_Egger@gmx.de>.\n\n2005-06-11  Ralf Menzel  <menzel@ls6.cs.uni-dortmund.de>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/ltoptions.m4 (_LT_SET_OPTIONS): Loop options only if\n\tnonempty.\n\t* m4/ltsugar.m4 (lt_combine): Don't test against empty quotes,\n\ttest against empty arg.  Fixes infinite m4 loop with CVS\n\tAutoconf.\n\n2005-06-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_COMPILER_OPTION, _LT_LINKER_OPTION): No\n\tneed for $ECHO here.  Fix sed script syntax to be portable.\n\tThis should now put the pic-flag right after the last $*FLAGS\n\tvariable again, if any.  Necessary for Fortran AC_FC_SRCEXT.\n\n2005-06-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_CONFIG_COMMANDS): Remove long lines.\n\n2005-06-06  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_COMPILER_PIC, _LT_LINKER_SHLIBS,\n\t_LT_LANG_CXX_CONFIG): PGI also has pgf95.  PGI static flag is\n\t`-Bstatic'.  Remove harmless extra comma from whole_archive\n\toutput.\n\n2005-06-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (func_mode_compile): In order to find out\n\tabout forbidden characters in output, check with grep after\n\tchecking func_quote_for_eval result.  Also, warn instead of fail.\n\t* config/general.m4sh (func_quote_for_eval)\n\t(func_quote_for_expand): Revert SunOS sh bug workaround patch from\n\t2004-12-28 as it triggers bugs in the Tru64 5.1B shell.\n\tReported by Albert Chin <libtool@mlists.thewrittenword.com> and\n\tNicolas Joly <njoly@pasteur.fr>.\n\n2005-06-01  Olly Betts <olly@survex.com>  (tiny change)\n\n\t* libltdl/argz.c (argz_create_sep): Fix typo.\n\n2005-05-31  Peter O'Gorman  <peter@pogma.com>\n\n\t* config/ltmain.m4sh: Do not add installed static litool libraries\n\tto convenience, they are not convenience libraries.\n\tReported by Chen-Mou Cheng <chenmou.cheng@gmail.com>\n\n2005-05-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* THANKS: Updated.\n\n2005-05-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG) [aix]:\n\tFix wrong $ECHO use overlooked in 2005-04-27.  Simplify slightly.\n\n\t* m4/libtool.m4 (_LT_COMPILER_PIC, _LT_LINKER_SHLIBS,\n\t_LT_LANG_CXX_CONFIG) [linux]: PGI:\n\tAdd $pic_flag to archive_cmds and archive_expsyms_cmds.\n\tBug reported against LAM by Troy Telford <ttelford@lnxi.com>.\n\n2005-05-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* THANKS: Updated.\n\n2005-05-06  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/m4/ltdl.m4 (LT_WITH_LTDL): Propogate ltdl directory.\n\n2005-05-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am (stamp-vcl): Use `diff' instead of `cmp'.\n\n2005-04-30  Gary V. Vaughan  <gary@gnu.org>\n\n\tRevert the parallel installation changes from November last year:\n\n\t* libtoolize.m4sh (pkgdatadir, aclocaldir): Substituted from\n\tconfigure.\n\t(func_copy_all_from_path): Removed.  No longer used.\n\t(func_copy_some_files): Simplify now that nothing is copied from a\n\tlist of possible directories now.\n\t(func_scan_files): Remove directory readability check...\n\t(func_nonemptydir_p): ...in favour of a dedicated sanity check\n\tfunction called from the main body.\n\t(_lt_pkgvdatadir): Set pkgdatadir and aclocaldir appropriately if\n\tthis is in the environment.\n\t* configure.ac: Tests for `ln' removed.\n\t(APIVERSION): Removed.\n\t* Makefile.am (pkgvdatadir, nobase_dist_pkgvdata_DATA)\n\t(nobase_pkgvdata_DATA): Renamed to...\n\t(pkgdatadir, nobase_dist_pkgdata_DATA, aclocalfiles): ...these\n\trespectively.\n\t(edit): Adjust for new variable names.\n\t(install-data-local): Don't bother to remove old macro files that\n\twill be overwritten by the installation, and perform a manual\n\tinstallation of $(aclocalfiles) to preserve timestamps.\n\t(install-exec-hook): Removed.  No need to make versioned links.\n\t(uninstall-hook): No need to remove versioned links, but now we\n\tneed to manually remove the manually installed $(aclocalfiles).\n\t* doc/libtool.texi: Remove bogus notes about setting\n\tACLOCAL_AMFLAGS for versioned libtool installations.\n\t* NEWS: Remove parallel installation item.\n\n2005-04-29  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/ltdl.m4 (all over): Quote all arguments to AC_DEFINE and\n\tAC_DEFINE_UNQUOTED consistently.  Reported by\n\tMichael Koch  <konqueror@gmx.de>, Riccardo Mottola <zuse@libero.it>,\n\tand Dalibor Topic <robilad@kaffe.org>.\n\n\t* HACKING: Updated.\n\n2005-04-27  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/convenience.at: Actually add.\n\n\t* tests/convenience.at: New.  Test convenience archives.\n\t* Makefile.am, tests/testsuite.at: Adjust.\n\t* tests/testsuite.at: Reorder tests.  Suspend AT_TESTED.\n\t(PREPARE_TESTS): Define EGREP, host, build, LIBTOOL.\n\t(LT_AT_BOOTSTRAP): Fail if autoreconf fails.\n\t(LT_AT_EXEC_CHECK): New macro for execution of $build binaries.\n\t(LT_AT_TAG): New macro to test tag availability or skip test.\n\t* tests/am-subdir.at, tests/duplicate_members.at,\n\ttests/inherited_flags.at, tests/link-order.at,\n\ttests/stresstest.at, tests/template.at: Adjust.  Use LT_AT_TAG,\n\tLT_AT_EXEC_CHECK, AT_KEYWORDS. Use compiler/linker flags\n\tconsistently.\n\t* tests/link-order.at: Fix use of AT_DATA, bogus redirection\n\tinside AT_CHECK.\n\t* tests/stresstest.at: Do not use wildcards/regex in symbol files,\n\tthey are not portable.  Use -no-undefined on win32.  Fix to ignore\n\tcompile/link warnings.\n\n\t* tests/f77demo/foo.h, tests/f77demo/fooc.c,\n\ttests/f77demo/cprogram.c, tests/mdemo2/main.c, tests/pdemo/foo.h:\n\tMake declarations available.\n\n\t* m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [linux]: sed 3.02 does\n\tnot understand \\t in regex.\n\tReported by Tim Van Holder <tim.vanholder@gmail.com>.\n\n\t* tests/defs.m4sh (func_configure): Don't run the whole configure\n\tscript with -x.\n\n\t* config/ltmain.m4sh: Audit use of echo vs $ECHO.\n\tReported by Robert \u00d6gren <lists@roboros.com> and others.\n\n\t* TODO: Updated.\n\n2005-04-26  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>,\n\t    Gary V. Vaughan  <gary@gnu.org>\n\n\t* HACKING, THANKS: Updated.\n\n2005-04-25  David Edelsohn  <dje@watson.ibm.com>\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS): _LT_TAGDECL(file_list_spec).\n\t* config/ltmain.m4sh (func_mode_link): Change $filelist to\n\t$output.\n\n2005-04-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_CC_BASENAME): Ignore `compile'.\n\n2005-04-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_COMPILER_PIC, _LT_LINKER_SHLIBS) [solaris]:\n\tUpdate wl for Sun Studio f77/f90/f95.  Fix whole_archive_flag_spec\n\tfor cc and f77/f90/f95 to prevent reordering in case we link with\n\t$CC.\n\n\t* m4/libtool.m4: Audit use of echo vs $ECHO.\n\t* TODO: Update.\n\tReported by Robert \u00d6gren <lists@roboros.com> and others.\n\n2005-04-23  Gary Kumfert <kumfert@llnl.gov>\n\n\t* m4/libtool.m4 (_LT_LANG_F77_CONFIG) [aix4, aix5]:\n\tAdjust logic to match the C case: Only disable static if not\n\ton ia64 nor runtimelinking.\n\n2005-04-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>  (tiny change)\n\n\t* Makefile.am, HACKING: Use lt__cd throughout.\n\n2005-04-22  Gary V. Vaughan  <gary@gnu.org>\n\n\tThe FSF are moving offices today.  Changed their contact address\n\tin all files from `59 Temple Place, Suite 330, MA 02111-1307' to\n\t`51 Franklin Street, Fifth Floor, MA 02110-1301'.\n\n2005-04-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libtoolize.m4sh (func_scan_files, func_serial,\n\tfunc_ltmain_update, func_config_update, func_install_update):\n\tPlacate AIX sed.\n\n2005-04-19  David Edelsohn  <dje@watson.ibm.com>\n\n\t* config/ltmain.m4sh (func_mode_link): If command exceeds\n\tmax_cmd_len and file_list_spec exists, write list of input files\n\tto temporary file.\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG)\n\t[aix4,aix5]: Define file_list_spec.\n\n2005-04-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/demo-hardcode.test: Fix typo.\n\n2005-04-17 Alexandre Oliva  <aoliva@redhat.com>,\n\t   Peter O'Gorman  <peter@pogma.com>\n\n\t* config/ltmain.m4sh: Don't add files with the same base name to\n\tan archive; rename duplicates instead.\n\t(func_extract_an_archive): Remove section to deal with duplicate\n\tbase names in an archive.\n\t* tests/functests.at: remove.\n\t* tests/duplicate_members.at: new test.\n\t* tests/testsuite.at: Add new test, remove old.\n\t* Makefile.am: Add new test, remove old.\n\n2005-04-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/demo-hardcode.test [solaris]:  Use dumpstabs if available,\n\tto avoid false failure caused by debug section which contains\n\tcommand line (Solaris cc).\n\tReported by Ralf Menzel <menzel@ls6.cs.uni-dortmund.de>.\n\n2005-04-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>  (tiny change)\n\n\t* libtoolize.m4sh (func_copy_cb): Fix syntax typo.\n\n2005-04-15  Maciej W. Rozycki  <macro@linux-mips.org>\n\n\t* m4/libtool.m4 (_LT_LANG_GCJ_CONFIG): Add old_archive_cmds\n\tdefinition.\n\n2005-04-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_CC_BASENAME): New macro to figure out\n\t$cc_basename.  Skip ccache, distcc, purify, cmdline options,\n\t`$host_alias-' prefix.\n\t(_LT_SETUP, _LT_LANG_CXX_CONFIG, _LT_LANG_F77_CONFIG)\n\t(_LT_LANG_GCJ_CONFIG, _LT_LANG_RC_CONFIG): Use.\n\t* NEWS, TODO: Update.\n\n2005-04-15  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/configure.ac (AC_OUTPUT): loaders/Makefile is no longer\n\tused.\n\n\t* Makefile.am (lt__cd, CD_TESTDIR): New make macros to work around\n\tproblems with CDPATH in some shells.\n\t(check-local, installcheck-local, clean-local): Use them.\n\n2005-04-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>  (tiny change)\n\n\t* bootstrap: Define srcdir for making `commit'.\n\n2005-04-14  Alexandre Oliva  <aoliva@redhat.com>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (link mode): Add to tmp_libs paths for\n\tlibtool dep libs in reverse order as well.\n\t* Makefile.am, tests/testsuite.at, tests/link-order.at: New test.\n\n2005-04-13  Gary V. Vaughan  <gary@gnu.org>\n\n\tSince the bootstrap process requires that several of the rules for\n\tfiles generated in doc and tests already lived in\n\t$top_srcdir/Makefile.am, along with proxy rules in sub-Makefiles,\n\tthis changeset consolidates almost everything into the top\n\tMakefile.am, simplifying things considerably:\n\n\t* doc/Makefile.am, tests/Makefile.am: Removed.  All rules moved...\n\t* Makefile.am: ...to here and adjusted to run from $top_builddir.\n\tSome reformatting to group rules and declarations by purpose, and\n\tsimplify with respect to removing much of the make recursion.\n\tAdd `doc/PLATFORMS', `doc/fdl.texi' and `doc/notes.texi'.\n\t`defs.in' and `defs.m4sh' are in directory `tests'.\n\t(uninstall-hook): Don't forget to uninstall libtoolize's libltdl\n\tsource tree.\n\t* bootstrap: Simplified dirty makefile management, and bootstrap\n\tfile creation in light of having only a single pertinent\n\tMakefile.\n\t* configure.ac (CONF_SUBDIRS): Add tests/ prefix to each subdir to\n\tcompensate.\n\t(DIST_MAKEFILE_LIST): Adjust.\n\t(AC_CONFIG_FILES): Remove doc/Makefile and tests/Makefile.\n\t* tests/defs.m4sh (LIBTOOL, scripts): Adjust paths.\n\t* tests/cdemo-conf.test, tests/cdemo-exec.test,\n\ttests/cdemo-make.test, tests/cdemo-shared.test,\n\ttests/cdemo-static.test, tests/cdemo-undef.test,\n\ttests/demo-conf.test, tests/demo-deplibs.test,\n\ttests/demo-exec.test, tests/demo-hardcode.test,\n\ttests/demo-inst.test, tests/demo-make.test,\n\ttests/demo-nofast.test, tests/demo-noinst-link.test,\n\ttests/demo-nopic.test, tests/demo-pic.test,\n\ttests/demo-relink.test, tests/demo-shared.test,\n\ttests/demo-static.test, tests/demo-unst.test,\n\ttests/depdemo-conf.test, tests/depdemo-exec.test,\n\ttests/depdemo-inst.test, tests/depdemo-make.test,\n\ttests/depdemo-nofast.test, tests/depdemo-relink.test,\n\ttests/depdemo-shared.test, tests/depdemo-static.test,\n\ttests/depdemo-unst.test, tests/f77demo-conf.test,\n\ttests/f77demo-exec.test, tests/f77demo-make.test,\n\ttests/f77demo-shared.test, tests/f77demo-static.test,\n\ttests/link-2.test, tests/link.test, tests/mdemo-conf.test,\n\ttests/mdemo-dryrun.test, tests/mdemo-exec.test,\n\ttests/mdemo-inst.test, tests/mdemo-make.test,\n\ttests/mdemo-shared.test, tests/mdemo-static.test,\n\ttests/mdemo-unst.test, tests/mdemo2-conf.test,\n\ttests/mdemo2-exec.test, tests/mdemo2-make.test, tests/nomode.test,\n\ttests/objectlist.test, tests/pdemo-conf.test,\n\ttests/pdemo-exec.test, tests/pdemo-inst.test,\n\ttests/pdemo-make.test, tests/quote.test, tests/sh.test,\n\ttests/suffix.test, tests/tagdemo-conf.test,\n\ttests/tagdemo-exec.test, tests/tagdemo-make.test,\n\ttests/tagdemo-shared.test, tests/tagdemo-static.test,\n\ttests/tagdemo-undef.test, tests/tagtrace.test (func_cd,\n\tfunc_require): Adjust paths.\n\n2005-04-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/general.m4sh, libtool.m4 (_LT_SETUP), tests/defs.m4sh,\n\ttests/functests.at: Fix definition of $Xsed.\n\n2005-04-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tImproved Portland support: prelinking of C++ templates and\n\twhole_archive.\n\n\t* m4/libtool.m4 (_LT_COMPILER_PIC, _LT_LINKER_SHLIBS) [linux]:\n\tReinstate formatted whole_archive_flag_spec for PGI compilers.\n\t* config/ltmain.m4sh (func_mode_link), m4/libtool.m4\n\t(_LT_LINKER_SHLIBS): New tag prelink_cmds, to be executed before\n\tlinking a program.\n\t(_LT_LANG_CXX_CONFIG) [linux]: Use for pgCC.\n\t(_LT_COMPILER_C_O): conftest might be nonempty, clean up more\n\tthoroughly.\n\n\t* tests/testsuite.at (LT_AT_BOOTSTRAP): Temporary fix for testing\n\tin-tree libtoolize.\n\n\t* m4/libtool.m4 (_LT_CONFIG_COMMANDS): Only call sed if\n\tnecessary while quoting all libtool variables.\n\tReported by Robert \u00d6gren <lists@roboros.com>.\n\n2005-04-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/Makefile.am: Typo.\n\n2005-04-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* notes.texi: Platform-specific configuration notes.\n\t* doc/libtool.texi: Include as section.\n\t* bootstrap, doc/Makefile.am: build also as notes.txt and\n\tdistribute.\n\n2005-04-04  Gary V. Vaughan  <gary@gnu.org>\n\n\tUnder certain circumstances, not all of the macro files were\n\tcopied into the destination directory.  This changeset fixes\n\tthat bug:\n\n\t* libtoolize.m4sh (func_serial_update):  Renamed local variable\n\t`my_update_p' to `my_serial_update_p', and initialise it correctly\n\teven when the destination file is not yet there.\n\tReported by Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n2005-04-04  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/libtoolize.at: New tests for basic libtoolize\n\tfunctionality and reporting.\n\t* tests/testsuite.at: Call them.\n\t* tests/Makefile.am: Distribute them.\n\n\t* libtoolize.m4sh (pkgvdatadir): Renamed from this...\n\t(_lt_pkgvdatadir): ...to this.\n\t* tests/testsuite.at (LT_AT_LIBTOOLIZE): The `-I' option is no\n\tlonger supported by libtoolize.  Set _lt_pkgvdatadir in the\n\tenvironment of the invocation instead.\n\n2005-04-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/template.at: New Autotest tests for C++ with templates.\n\tFirst test provided by\n\tMarkus Christen\t<markus@igc.phys.chem.ethz.ch>.\n\t* tests/Makefile.am, tests/testsuite.at: Use and distribute.\n\n2005-04-04  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh (func_serial_update): Replace missing\n\tdestination serial calculation line, presumably lost due to a bad\n\tmerge.\n\n\t* libltdl/loaders/Makefile.am: Removed actually.\n\n2005-04-04  Gary V. Vaughan  <gary@gnu.org>\n\n\tGetting the value of ltdldatafiles from a submake was not\n\tportable, and had problems with GNU make-3.80 at least.  This\n\tchangeset pulls the installation rules for libtoolize's copy of\n\tthe libltdl sources out of libltdl/Makefile.am so that\n\tltdldatafiles is defined in the same Makefile that uses it.  Also,\n\tthis makes a start at cleaning up libltdl/Makefile.am so that it\n\tis useful in a package that uses `libtoolize --ltdl':\n\n\t* libltdl/loaders/Makefile.am: Removed entirely.\n\t* libltdl/Makefile.am (dlopen.la, dld_link.la, dyld.la)\n\t(load_add_on.la, loadlibrary.la, shl_load.la): All built from here\n\tnow that the loaders submake has gone.\n\t(show-ltdldatafiles): Removed.  No longer required.\n\t(ltdldatadir, ltdldatafiles, install-local): Moved from here...\n\t* Makefile.am (ltdldatadir, ltdldatafiles, install-local): ..to\n\there.\n\t(libtoolize): Substitute $(ltdldatafiles) directly without calling\n\tmake to get the value from libltdl/Makefile.\n\n2005-04-01  Gary V. Vaughan  <gary@gnu.org>\n\n\t* Makefile.am (libtoolize): Substitute $(nobase_pkgvdata_DATA).\n\tpkgvmacro_DATA is no longer set in the makefile.\n\t* libtoolize.m4sh (func_massage_pkgvmacro_DATA): Use it and, for\n\tconsistency, renamed from this...\n\t(func_massage_nobase_pkgvdata_DATA): ...to this.  Adjust all\n\tcallers.\n\n2005-04-01  Gary V. Vaughan  <gary@gnu.org>\n\n\tFix problems with serial comparison sed scripts, and factor out\n\tcommon code from similar serial comparison functions:\n\n\t* libtoolize.m4sh (func_keyword_update): Common code factored out\n\tof func_ltmain_update and func_config_update.\n\t(func_ltmain_update, func_config_update): Adjust, and fix sed\n\texpressions to not use unportable ? modifier.\n\t(func_install_update): New serial number based file updater keyed\n\toff 'scriptversion' variable in install-sh.  Adjust all callers.\n\n2005-04-01  Gary V. Vaughan  <gary@gnu.org>\n\n\tMost of the hair introduced ostensibly to enable testing of\n\tuninstalled libtoolize isn't necessary if we allow overriding of\n\tthe libtool master copy directory:\n\n\t* configure.ac (pkvmacrodir): No need to substitute this.\n\t* Makefile.am (edit): No need to substitute pkgvmacrodir.\n\t(dist_pkgvdata_DATA): Use nobase_ prefix so that these files are\n\tinstalled to $(pkgvdatadir)/config.\n\t(pkgvmacro_DATA): Renamed to...\n\t(nobase_pkgvdata_DATA): ...this, so that files are installed to\n\t$(pkgvdatadir)/m4.\n\t(install-data-hook): Adjust.\n\t* libtoolize.m4sh: Remove -I processing.\n\t(func_filename_path_search): No longer required without -I.\n\tAdjust all callers.\n\t(pkgvltdldirs, pkgvmacrodirs): Deleted.\n\t(pkgvdatadir): Allow overriding from the environment so that we\n\tcan write tests for uninstalled libtoolize.\n\t(func_serial_update, func_ltmain_update, func_config_update):\n\tRename srcdirs parameter to srcdir, and don't call the path_search\n\tfunction anymore.  Adjust all callers.\n\t(--install): Don't blindly copy all config files.\n\n2005-04-01  Mike Stump  <mrs@apple.com>\n\n\t* m4/libtool.m4 (LT_CMD_MAX_LEN) [netbsd, freebsd, openbsd\n\tdarwin, dragonfly]: Use 3/4 of argmax, instead of 1/4.\n\n2005-03-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_LANG_GCJ_CONFIG, _LT_LANG_RC_CONFIG):\n\tSet $cc_basename.\n\n\t* HACKING: echo vs $ECHO.\n\n2005-03-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>  (tiny change)\n\n\t* doc/libtool.texi: Minor formatting cleanups.\n\n2005-03-24  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh: Propogate --debug flag to sub-libtoolizes.\n\n\t* libtoolize.m4sh: Fix a typo, s/pkgvltdldirs/pkgvdatadirs/.\n\tWhen using -I to test an uninstalled libtoolize, we need to add\n\tthe config subdirectory to the search path so that ltmain.sh can\n\tbe found in the source tree.\n\n\t* libtoolize.m4sh (func_copy_some_files): IFS needs to be set to\n\tpath delimiter for all inner loop iterations.\n\tOnce a matching file has been copied, no need to keep searching\n\tthe path for another -- move on to the next file!\n\n\t* libtoolize.m4sh: For verbose mode, explain why macro files are\n\tnot installed without an AC_CONFIG_MACRO_DIR declaration.\n\n2005-03-24  Gary V. Vaughan  <gary@gnu.org>\n\n\tAs a prerequisite for being able to test an uninstalled libtoolize\n\tfor copying files correctly from the source tree, we must know\n\texactly which files should be copied by the --ltdl option to avoid\n\taccidentally picking up compilation objects and other noise when\n\t$builddir == $srcdir:\n\n\t* libltdl/loaders/Makefile.am (ltdldatadir, ltdldatafiles)\n\t(install-data-local): Removed...\n\t* libltdl/Makefile.am (ltdldatafiles): ...and consolidated here.\n\t(show-ltdldatafiles): New rule...\n\t* Makefile.am (ltdldatafiles, libtoolize): ...used to substitute\n\texactly which files are installed by libtoolize --ltdl.\n\t(edit): Move pkgvmacro_DATA substitution expression...\n\t(libtoolize): ...to here.\n\t* libtoolize.m4sh: Use func_copy_some_files() instead of\n\tfunc_copy_all_from_path() to copy the --ltdl option installed\n\tfiles.\n\t(pkgvltdldirs): New path variable to search for\tfiles installed by\n\t--ltdl option.\n\t(func_massage_pkgvltdl_files): New function to calculate the list\n\tof ltdl installation files.\n\n2005-03-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>  (tiny change)\n\n\t* m4/libtool.m4, m4/ltdl.m4: Indentation and quoting cleanup.\n\n2005-03-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS) [solaris]: Use ${wlarc}\n\tand set to empty when using $LD for linking.  Fixes regression\n\tintroduced in 2004-11-17.\n\tReported by Ralf Menzel <menzel@ls6.cs.uni-dortmund.de> and\n\t\u041f\u0443\u0445\u0430\u043b\u044c\u0441\u043a\u0438\u0439 \u042e\u0440\u0438\u0439 \u0410\u043d\u0434\u0440\u0435\u0435\u0432\u0438\u0447 <pooh@cryptopro.ru>.\n\n2005-03-21  Gary V. Vaughan  <gary@gnu.org>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_SETUP, _LT_LANG_CXX_CONFIG)\n\t(_LT_LANG_F77_CONFIG): For matching compiler names -- Pick only\n\tfirst word, allow leading white space.\n\t* tests/sh.test: ..and test for missing `*' at end of patterns.\n\n2005-03-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* TODO: Update.\n\n2005-03-20  Peter Ekberg  <peda@lysator.liu.se>\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS) [irix5, irix6, nonstopux]:\n\tTest if it is possible to use the -exports_file linker option on\n\tirix with gcc, as the gcc specs file may include a -hidden_symbol\n\toption that is clashing with the -exports_file option.\n\tSee this gcc bugzilla entry for further details:\n\thttp://gcc.gnu.org/bugzilla/show_bug.cgi?id=15288\n\t* THANKS: Update.\n\n2005-03-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/demo-nopic.test: Enhance status output\n\tnoted by Tom Burger <tvburger@few.vu.nl>.\n\n2005-03-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh, tests/defs.m4sh: Typos.\n\n2005-03-18  Peter O'Gorman  <peter@pogma.com>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4: The compiler can be a program name with args, so\n\talways check cc_basename against compiler name and a wildcard.\n\tAlso, drop unnecessary quotes in `case' argument.\n\n2005-03-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am: tests/defs.in depends on config/general.m4sh.\n\n\t* config/general.m4sh: unconditionally set IFS, and set it\n\tto the one true right sequence: space, tab, newline.\n\t* m4/libtool.m4: remove IFS setting and as_* namespace\n\tinfringement.\n\n\t* m4/libtool.m4 (_LT_CONFIG): Reset IFS to fix failure with ash.\n\n\t* configure.ac, libltdl/configure.ac: s/##/dnl/ for comments\n\tthat are meaningless in configure.\n\tReported by Alexandre Duret-Lutz <adl@src.lip6.fr>.\n\n2005-03-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/configure.ac: Update version; require Autoconf >= 2.59.\n\n\t* bootstrap: Allow to override tools.\n\n2005-03-15  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh (func_massage_pkgvmacro_DATA): New function\n\tto calculate the macro filenames to be copied by libtoolize.\n\t* Makefile.am (edit): Substitute pkgvmacro_DATA.\n\n\t* bootstrap: Need to generate tests/package.m4 from Makefile.am\n\tbefore generating tests/testsuite from tests/Makefile.am, or\n\telse bootstrap of a fresh checkout fails.\n\n2005-03-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_COPYING): Update Copyright year.\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS) [linux]: Remove MAIN_\n\tdependency when creating shared libraries with Portland pgf77.\n\n2005-03-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* configure.ac: stamp-vcl is in $top_srcdir, not $top_builddir.\n\n2005-03-12  Per Bothner <per@bothner.com>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAllow special characters in source file names.  Will break unless\n\t`-o target' is also given, which must not contain special\n\tcharacters. En passant, fix source file quoting broken for\n\tcygwin/MSVC:\n\n\t* config/ltmain.m4sh (func_mode_compile): Use new variable\n\tqsrcfile for quoted source file name for compile $command.  Fix\n\tmissing quotes for _c_o lockfile.\n\t* NEWS: Update.\n\n2005-03-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (func_mode_link): Reword double negation in\n\terror message.\n\tReported by Jesper Louis Andersen <jlouis@mongers.org>.\n\n\t* bootstrap: really remove bogus files Makefile tests/Makefile.\n\n\t* doc/libtool.texi: Replace wicked whiches by thats or other\n\tbetter-sounding constructs.\n\n2005-03-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>  (tiny change)\n\n\t* tests/Makefile (clean-local): Ignore testsuite cleanup\n\tfailures.\n\n2005-03-11  Per Bothner  <per@bothner.com>  (tiny change)\n\n\t* tests/Makefile (clean-local): Only run the testsuite cleanup\n\tif the testsuite has been generated.\n\n2005-03-10  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/Makefile.am (install-data-local): Don't force v7 tar\n\tformat with the `o' flag in create mode.\n\tSet the umask to 0 when untarring to avoid copied files taking\n\ttheir mode from the installer's umask.\n\t* libltdl/loaders/Makefile.am (install-data-local): Ditto.\n\t* libtoolize.m4sh (func_copy_cb): Ditto.\n\tIgnore errors from failed `cd' in the tar processes, since we\n\tmay be running in dryrun mode.\n\tReported by Noah Misch <noah@cs.caltech.edu>,\n\t\t    Bob Friesenhahn <bfriesen@simple.dallas.tx.us>\n\n2005-03-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/Makefile.am: $(builddir) is not defined, replace by\n\t`.'.\n\n2005-03-08  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG)\n\t[irix*, osf*]: Output -update_registry information to\n\t${output_objdir} directory, not ${objdir}. ${output_objdir}\n\twill work when a project has a single Makefile and performs\n\tbuilds in subdirectories. ${objdir} expects the source in\n\tthe current directory, breaking single-Makefile builds.\n\n2005-03-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/stresstest.at: Remove multiple variable definition.\n\n\t* TODO: Update.\n\n\t* THANKS: Update.\n\n2005-03-02  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh (func_copy_cb): Use tar chof to avoid symlink\n\tattacks.\n\t* libltdl/Makefile.am, libltdl/loaders/Makefile.am\n\t(install-data-local): Ditto.\n\n2005-02-27  Gary V. Vaughan  <gary@gnu.org>\n\n\tIn branch-2-0 (and in time, others) ltversion.m4 has a dot\n\tdelimited serial number that didn't used to be processed\n\tcorrectly by libtoolize.  This changeset fixes that, and\n\tleverages those changes to check versions of ltmain.sh and\n\tconfig.sub, config.guess before overwriting when --force is\n\tnot given:\n\n\t* libtoolize.m4sh: Don't overwrite pkgaux files with --force\n\tunless --install is given too.\n\t(func_serial): Fix underquoting in regexp.\n\t(func_serial_max): New function to compare serial numbers.\n\t(func_serial_update_check): New function factored out of\n\tfunc_serial_update().\n\t(func_serial_update): Bail if SRCFILE is missing.\n\tDon't display both 'already up to date' and 'use --force to\n\tupdate' messages for the same file.\n\tUse func_serial_max to cope with `.' delimited serial numbers.\n\t(func_ltmain_update): Use func_serial_update_check and\n\tfunc_serial_max to do version checking with $package_revision.\n\t(func_config_update): Ditto with $timestamp.\n\n2005-02-26  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/Makefile.am (install-data-local):  cd to $(srcdir)\n\tbefore tarring up the files for installation to\n\t$(DESTDIR)$(ltdldatadir).  Don't remove the destination directory,\n\tsince that interacts badly with the multi-Makefile installation.\n\t* libltdl/loaders/Makefile.am (install-data-local): Ditto.\n\n2005-02-26  Gary V. Vaughan  <gary@gnu.org>\n\n\tI assume that it is okay to have undefined symbols in convenience\n\tlibraries that will be used as modules -- the pic objects are\n\tbuilt normally, and are not expected to resolve all their symbols\n\tuntil they are linked into a library; convenience libraries are\n\tthen rolled using 'ar' and 'ranlib' (or equivalent) which also do\n\tnot check whether symbols are resolved.  We now build each of the\n\tloaders as a convenience library module under these assumptions,\n\tand link libltdl.la with selected modules, at which time all of\n\tthe symbols *are* resolved:\n\n\t* TODO: Remove item addressed by this changeset.\n\t* libltdl/Makefile.am (lib_LTLIBRARIES): Remove libdlloader.la.\n\t(libdlloader_la_SOURCES): Declaration removed.  Changed all\n\tclients.  Source files..\n\t(libltdl_la_SOURCES): ...added back in here.\n\t(libdlloader_LDFLAGS, libdlloader_la_LIBADD): Removed.\n\t(libltdl_la_LIBADD): Remove libdlloader.la; add $(LTLIBOBJS).\n\t* libltdl/loaders/Makefile.am: Removed all references to\n\tlibdlloader.la.\n\n2005-02-25  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh (func_copy): Split arguments to func_copy_cb\n\tcalls across lines so that quote.test doesn't misdiagnose nested\n\tquotes.\n\n\t* m4/libtool.m4 (_LT_LANG_CXX_CONFIG, _LT_COMPILER_PIC):\n\tFix some typos -- s/_LT_AC_TAGVAR/_LT_TAGVAR/g.\n\n2005-02-24  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS): The Portland group's\n\tcompiler does not pass --whole-archive. Move gnu ld check for\n\tthe flag to the top so it can be overridden.\n\t(_LT_LANG_CXX_CONFIG, _LT_COMPILER_PIC): Unset\n\twhole_archive_flag_spec for the portland group's c++ compiler\n\ttoo.\n\tReported by Jeff Squyres <jsquyres@lam-mpi.org>\n\n2005-02-23  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/Makefile.am (install-data-local): Don't forget about\n\t$(DESTDIR).\n\t* libltdl/loaders/Makefile.am (install-data-local): Ditto.\n\n2005-02-23  Gary V. Vaughan  <gary@gnu.org>\n\n\tPreserving the installed timestamps for libltdl sources from\n\t`libtoolize --ltdl --copy' is pointless if they are not preserved\n\tfrom the libtool source tree at install time:\n\n\t* libltdl/Makefile.am, libltdl/loaders/Makefile.am\n\t(nobase_ltdldata_DATA): Renamed to...\n\t(ltdldatafiles): ...this.\n\t(install-data-local): New rule to install libltdl tree with tar to\n\tpreserve timestamps.\n\n2005-02-23  Christoph Egger  <Christoph_Egger@gmx.de> (tiny change)\n\n\t* config/ltmain.m4sh (func_mode_link): Add -pthread like flags to\n\tinherited_linker_flags.\n\n2005-02-22  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.m4sh (func_copy_cb): self.leg->shoot_off() :-/\n\tLet's not redirect stdout to null when sending tar output to a\n\tpipe.\n\n2005-02-22  Gary V. Vaughan  <gary@gnu.org>\n\n\tUsing `libtoolize --copy --ltdl' was not preserving timestamps, so\n\tparts of the autoconf bootstrap would be rerun spuriously after\n\tthe files had been copied into the source tree:\n\n\t* libtoolize.m4sh (TAR): New default tar command.\n\t(func_copy_cb): Move the core copying internals to here, using\n\t$TAR to transfer files if possible when --copy was specified.\n\t(func_copy): Adjust to call func_copy_cb.\n\t* TODO: Remember to refactor this fix in due course.\n\tReported by Jeff Squyres <jsquyres@lam-mpi.org>\n\n2005-02-21  Peter O'Gorman  <peter@pogma.com>\n\n\t* config/ltmain.m4sh (func_extract_archives) [darwin]: This didn't\n\tactually work on a real fat archive, should do now.\n\t* tests/functests.at [darwin]: remove darwin fat tests which\n\tdid not actually work.\n\n2005-02-07  Peter O'Gorman  <peter@pogma.com>\n\n\t* config/ltmain.m4sh: Add -pthread like flags when linking\n\texecutables too.\n\tReported by Andreas Schwab <schwab@suse.de>\n\n2005-02-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (func_mode_link): Allow five digits in\n\tversion-info.\n\n\t* NEWS: s/Linux/GNU &/.\n\n2005-02-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/Makefile.am, tests/testsuite.at, tests/stresstest.at:\n\tNew test.  Stresses several combinations of link flags and\n\tpath specifications.  Uses several data types to test linkage\n\tagainst symbols in all kinds of (e.g., ELF) sections.\n\n2005-02-03  Reid Spencer  <reid@x10sys.com>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (func_generate_dlsyms): Fix broken subdir\n\tpath computation, exposed by using `-dlopen self'.  Fix broken\n\tsed script exposed by additionally using `-export-symbols FILE'.\n\n2005-02-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* THANKS: Update.\n\n\t* THANKS: Update.\n\n2005-02-03  Peter O'Gorman  <peter@pogma.com>\n\n\t* config/ltmain.m4sh [darwin]: Don't add installed libs to\n\ttemp_rpath when building executables on darwin, or other systems\n\twhich use hardcode_automatic. It may break our wrapper scripts.\n\n2005-02-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/getopt.m4sh (func_version, func_usage, func_help):\n\tExit with nonzero status on write failures.\n\t* config/ltmain.m4sh (func_mode_help, func_config, func_features):\n\tDitto.\n\n\t* tests/sh.test: Check for preferred function definition layout.\n\n2005-02-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER)\n\t[pw32, freebsd3.[01], freebsdelf3.[01]]:  Fix [] quoting.  Should\n\tfix various spurious failures.\n\t(_LT_LINKER_SHLIBS) [linux with GNU ld < 2.11, aix4.[012]*]:\n\tDitto.\n\t(_LT_LANG_CXX_CONFIG) [aix4.[012]*, freebsd[12], solaris2.[0-5]]:\n\tDitto.\n\t(_LT_LANG_GCJ_CONFIG): Ditto.\n\n\t* tests/Makefile.am: Add `atconfig' to DISTCLEANFILES.\n\n\t* clcommit.m4sh: Test whether the shell understands `read -r'.\n\tUse as `$read_r' if available, so `\\' is preserved in commit\n\tnotices.\n\n\t* HACKING (Editing `.m4sh' Files): Document preferred function\n\theader layout.\n\t* config/ltmain.m4sh (func_win32_libid, func_infer_tag)\n\t(func_generate_dlsyms, func_extract_an_archive)\n\t(func_extract_archives): Adjust to fit.\n\n2005-01-31  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS): Unicos 9 sed rejects\n\tempty parentheses as in 's/x\\(\\)/\\1/'.\n\t(_LT_COMPILER_PIC) [unicos*]: wl=-Wl,.\n\t* tests/sh.test: Not all sed's like '/.*\\n.*/' (Unicos 9 sed\n\tloops endlessly).\n\n\t* tests/quote.test: Match link \tquoting against `\"$wl\"', not\n\t`-Wl,'.\n\n\t* tests/quote.test: Check for `--no-reexec' in $1 to avoid one\n\treexec.\n\n\t* m4/libtool.m4 (_LT_COMPILER_C_O): _LT_TAGDECL(lt_compiler_c_o),\n\tnot _LT_DECL, since this is tag-dependent.\n\n\t* config/ltmain.m4sh, m4/libtool.m4: Change `( cmd ) 2>/dev/null'\n\tto  `{ cmd; } 2>/dev/null', when cmd has no side effects and might\n\tbe a builtin.  Note that it is unspecified whether cmd will run\n\twithin a subshell (e.g. Bourne shells) or within the current shell\n\t(most modern shells).\n\n2005-01-29  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG) [linux]:\n\tUpdate for Intel Compiler icc/icpc/ifort: add -i_dynamic and\n\t-nofor_main, if necessary.  Simplify logic somewhat.\n\n2005-01-26  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/Makefile.am: also re-export CPP, CXXCPP, and the value of\n\tSHELL as CONFIG_SHELL.\n\tReported by Heinz Salzmann <heinz.salzmann@micronas.com>.\n\n2005-01-26  Craig Dooley  <xlnxminusx@gmail.com>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* NEWS, m4/libtool.m4, config/ltmain.m4sh [dragonfly]:\n\tAdd support for DragonFly.\n\n2005-01-26  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_PROG_XSI_SHELLFNS): Work around pdksh\n\tpositional parameter expansion bug.\n\n2005-01-25  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh: Fix endless loop in cmdline parsing.\n\n2005-01-25  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* config/ltmain.m4sh (func_mode_link) [irix]: Preserve processor\n\toption for SGI Compiler (-r[0-9][0-9]*).\n\n2005-01-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_PROG_XSI_SHELLFNS): Define Bourne and XSI\n\tvariants of new function func_stripname for stripping literal\n\tprefixes and suffixes.\n\t* config/ltmain.m4sh (all over): Use func_stripname.\n\n\t* tests/defs.m4sh: Extract $build from $LIBTOOL.\n\t(func_configure): Pass --host if $host != $build.\n\t(func_exec): Try executing cross-compiled binaries (e.g. i686 ->\n\ti386), but SKIP rather than FAIL.\n\t* tests/depdemo-relink.test: Do not try to access possibly non-\n\texistent files.  SKIP rather than FAIL or PASS falsely when\n\tcross-compiling.\n\n\t* m4/libtool.m4 (_LT_SETUP) [mingw, cygwin, pw32, os2]:\n\tAdd _LT_DECLs for host_os, build_alias, build and build_os.\n\thost_os and build were used in a few occasions in ltmain.m4sh\n\tand affect above-mentioned systems, the others are added for\n\tsymmetry and in order to be able to detect cross-compiling.\n\n2005-01-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/Makefile.am: Add $(AM_LDFLAGS) to all per-target\n\tvariables *_LDFLAGS as per CVS Automake semantic change.\n\n2005-01-16  Peter O'Gorman  <peter@pogma.com>\n\n\t* config/ltmain.m4sh (func_mode_link): Don't pass through\n\tcompiler-like thread flags when using $LD to do the linking.\n\tUse compiler_flags instead.\n\tReported by Mark_Andrews@isc.org.\n\n\t* m4/libtool.m4 (LT_CMD_MAX_LEN) [osf]: On Tru64 there could\n\tbe a kernel panic when testing the maximum command line length\n\tif exec_disable_arg_limit=1. Don't do the tests to figure it\n\tout on *-osf*.\n\tReported by Dr. Hans Ekkehard Plesser\n\t<hans.ekkehard.plesser@umb.no>\n\n2005-01-14  Guido Draheim  <guidod-2003-@gmx.de>  (tiny change)\n\n\t* m4/libtool.m4 (AC_PROG_SED): Don't break test loop early.\n\n2005-01-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* TODO: Update.\n\n\t* libltdl/ltdl.c: Whitespace cleanup.\n\n\t* config/ltmain.m4sh: New option `--verbose'/`-v' to enable\n\toverride of `--silent'.  Verbose is the default behavior.\n\t* doc/libtool.texi (Invoking libtool): Document it.\n\n\t* m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [linux]: While \"parsing\"\n\t/etc/ld.so.conf, skip comments.\n\tReported by Jens Elkner <elkner@linofee.org>.\n\n2005-01-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/libltdl/lt__glibc.h: Move all exported slist\n\tsymbols into the lt__* namespace.\n\t* libltdl/libltdl/lt__private.h, libltdl/libltdl/slist.h:\n\tAdjust includes.\n\n2005-01-10  Peter O'Gorman  <peter@pogma.com>\n\n\t* config/ltmain.m4sh (func_mode_link): Fix\n\tinherited_linker_flags so it puts it on the link line when\n\tlinking shared libraries as well as when linking executables.\n\t* tests/inherited_flags.at: test inherited_linker_flags.\n\t* tests/Makefile.am: Add test.\n\t* tests/testsuite.at: Add test.\n\tReported by: Albert Chin-A-Young <china@thewrittenword.com>\n\n2005-01-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/sh.test: After `set dummy [...]', check for `shift'\n\twithin the same and following line.\n\t* config/ltmain.m4sh (func_enable_tag, func_mode_install)\n\t(func_mode_link): Sprinkle `shift's all over to conform to this.\n\n2005-01-09  Gary V. Vaughan  <gary@gnu.org>\n\n\t* HACKING (Editing 'ChangeLog'): Follow the GCS with respect to\n\tattributions, and mention how to handle tiny changes.\n\tReported by Alexandre Duret-Lutz <adl@src.lip6.fr>.\n\n\t* ChangeLog.2004: Trim 2005 entries.\n\t* ChangeLog: Add missing entries.\n\n2005-01-08  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ChangeLog: Move 2004 change logs from here...\n\t* ChangeLog.2004: ...to here.\n\n\t* m4/argz.m4, m4/libtool.m4, m4/ltdl.m4, m4/ltoptions.m4,\n\tm4/ltsugar.m4, m4/ltversion.m4, m4/lt~obsolete.m4: RMS says,\n\t'I think the [license of autoconf macro files] should be:\n\t# This file is free software; the Free Software Foundation\n\t# gives unlimited permission to copy and/or distribute it,\n\t# with or without modifications, as long as this notice is\n\t# preserved.'.\n\n\t* ChangeLog: Reformatting.\n\t* HACKING: Fix section numbering.\n\t(Editing 'ChangeLog'): New notes on ChangeLog entry format.\n\n2005-01-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/am-subdir.at tests/testsuite.at (AT_BOOTSTRAP,\n\tAT_LIBTOOLIZE, AT_CHECK_LIBTOOLIZE): Rename to ...\n\t(LT_AT_BOOTSTRAP, LT_AT_LIBTOOLIZE, LT_AT_CHECK_LIBTOOLIZE):\n\t...and make use of new names.\n\nContinued in ChangeLog.2004\n-- \n  Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n  2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n\n  This file is part of GNU Libtool.\n\nCopying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout warranty of any kind.\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/ChangeLog.2009": "2009-12-30  Peter Rosin  <peda@lysator.liu.se>\n\n\t* libltdl/ltdl.c (lt_dlerror): Remove meaningless conditional.\n\n2009-12-29  Peter Rosin  <peda@lysator.liu.se>\n\n\t* libltdl/ltdl.c (file_not_found): Fix typos in code comment.\n\n2009-12-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tReplace last __oline__ instance.\n\t* libltdl/m4/libtool.m4 (_LT_TRY_DLOPEN_SELF): Replace last\n\t__oline__ instance with $LINENO.\n\n2009-12-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tImprove parsing of .la files in libltdl.\n\t* libltdl/ltdl.c (trim): Do not dump core upon missing quote in\n\tmodule .la file.\n\t* tests/lalib-syntax.at (syntax of .la files): New file, new\n\ttest.\n\t* Makefile.am (TESTSUITE_AT): Add tests/lalib-syntax.at.\n\tReport by Bob Friesenhahn.\n\n2009-12-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tSane fallback initialization of $ECHO from $as_echo.\n\t* libltdl/config/general.m4sh: Use 'printf %s\\n' if $as_echo is\n\tunset.\n\t* tests/testsuite.at: Likewise.\n\t* THANKS: Update.\n\tReport by Vadim Zeitlin and Peter Rosin.\n\n2009-12-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tlt_dlloader_remove and lt_dlloader_find accept const arguments.\n\t* libltdl/lt_dlloader.c (lt_dlloader_remove, lt_dlloader_find):\n\tAccept `const char *' arguments, as documented.  Cast them to\n\t`void *' for the slist machinery.\n\t* libltdl/libltdl/lt_dlloader.h: Adjust prototypes.\n\n\tTest and fix slist.c.\n\t* libltdl/libltdl/slist.h: Include stddef.h, for size_t.\n\t(slist_remove): Return pointer to SList, not void.\n\t* libltdl/slist.c: Include stdlib.h, for malloc and free.\n\t(slist_remove): Adjust prototype as above.\n\t(slist_sort): Do not loop forever on one-item list.\n\t* tests/slist.at (SList functionality): New file, new test.\n\t* Makefile.am (TESTSUITE_AT): Add tests/slist.at.\n\n2009-11-30  Peter Rosin  <peda@lysator.liu.se>\n\n\tPlease C++ compilers when calling strrchr.\n\t* libltdl/ltdl.c (has_library_ext): Match the return type of\n\tstrrchr with the first argument to please C++ compilers.\n\tReport by Peter O'Gorman.\n\n2009-11-29  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix bindir and dlopen tests for C++ compilers (CC=g++).\n\t* tests/bindir.at (bindir basic lib test, bindir install tests):\n\tInclude stdlib.h rather than declaring abort.\n\t* tests/lt_dlopenext.at (lt_dlopenext error messages): Use\n\t`extern \"C\"' annotation for dlsym'ed function in C++ mode.\n\n2009-11-25  Peter Rosin  <peda@lysator.liu.se>\n\n\tFix cross build issue in execute mode test.\n\t* tests/execute-mode.at: Skip test for cross builds.\n\n2009-11-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tEnable symbol versioning with the GNU gold linker.\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS): Accept 'GNU gold'\n\tin the version string.\n\t* NEWS, THANKS: Update.\n\tReport by Peter Fritzsche.\n\n\tTighten regex for Portland C++ compiler for version 10.\n\t* libltdl/m4/libtool.m4 (_LT_LANG_CXX_CONFIG) [linux]:\n\tMatch a dot after version 1 through 5, so 10 and up don't match,\n\tand use weak symbols.\n\t* THANKS: Update.\n\tReport by Jeff Squyres and Brent Leback.\n\n2009-11-16  Peter O'Gorman  <peter@pogma.com>\n\n\tUpdate libltdl version to match 2.2.6b release.\n\t* libltdl/Makefile.inc: Make version 9:1:2\n\n2009-11-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\tDon't load module.la from current directory by default.\n\t* libltdl/ltdl.c (try_dlopen): Do not attempt to load an\n\tunqualified module.la file from the current directory (by\n\tdefault) since doing so is insecure and is not compliant with\n\tthe documentation.\n\t* tests/testsuite.at: Qualify access to module.la file in\n\tcurrent directory so that test passes.\n\n2009-11-14  Peter O'Gorman  <peter@pogma.com>\n\n\tOnly use preopen loader to load preopened archives\n\t* libltdl/ltdl.c: Limit checking of .a to preopen loader.\n\t* tests/lt_dlopen_a.at: Add test.\n\t* Makefile.am: Add test.\n\n2009-11-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tRecognize `pgfortran' as Portland compiler.\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC, _LT_LINKER_SHLIBS):\n\tAccept `pgfortran*' too.\n\tReport by Jeff Squyres.\n\n2009-11-04  Alexandre Oliva  <aoliva@redhat.com>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix verbose link extraction for multiply reconfigured GCC.\n\t* libltdl/m4/libtool.m4 (_LT_LANG_CXX_CONFIG)\n\t<output_verbose_link_cmd>: Drop GCC lines \"Configured with\" that\n\tmay contain unrelated flags.\n\n2009-11-02  Eric Blake  <ebb9@byu.net>\n\n\tAllow gcc builds with -Wall -Werror.\n\t* libltdl/ltdl.c (try_dlopen): Use strlen rather than LT_STRLEN on\n\tan array that will never be NULL.\n\n2009-11-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix func_normal_abspath sed script for Solaris.\n\t* libltdl/config/general.m4sh (pathcar, pathcdr, removedotparts)\n\t(collapseslashes, finalslash): Use single quotes, for clarity.\n\t(removedotparts): Avoid \\{N,M\\} after subexpression \\(...\\), for\n\tSolaris /bin/sed.\n\n\tImprove versioning algorithm documentation.\n\t* doc/libtool.texi (Updating version info): Repeat the\n\talgorithms in different, hopefully simpler terms.\n\t* THANKS: Update.\n\tPrompted by Richard B. Kreckel.\n\n2009-11-01  Ingo Weinhold  <ingo_weinhold@gmx.de>  (tiny change)\n\n\tSupport for the Haiku operating system.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Add cases for\n\t`*-*-haiku*' alongside `*-*-beos*'.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER)\n\t(_LT_CHECK_MAGIC_METHOD, LT_LIB_M, _LT_COMPILER_PIC)\n\t(_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG): Add cases for\n\t`haiku*'.\n\t* NEWS, THANKS: Update.\n\n2009-11-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix quoting of AS, DLLTOOL, and OBJDUMP for the libtool script.\n\t* libltdl/m4/ltoptions.m4 (AC_LIBTOOL_DLOPEN): Quote values of\n\t$AS, $DLLTOOL, and $OBJDUMP, so they can contain arguments.\n\t* THANKS: Update.\n\tReport by Matthijs Kooijman.\n\n2009-09-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tInitial support for the Cuda Compiler Driver on Linux.\n\t* libltdl/config/ltmain.m4sh (func_mode_compile): Accept source\n\tfile extensions `.cu' and `.cup'.\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_NO_RTTI, _LT_COMPILER_PIC)\n\t(_LT_LINKER_SHLIBS): Support for `nvcc' compiler driver.\n\t* NEWS, THANKS: Update.\n\tReport by Mahesh Narayanamurthi.\n\n2009-09-12  Dave Korn  <dave.korn.cygwin@googlemail.com>\n\n\tControl where win32 DLLs get installed.\n\t* libltdl/config/general.m4sh (func_normal_abspath): New function.\n\t(func_relative_path): Likewise.\n\t* libltdl/config/ltmain.m4sh (func_mode_help): Document \"-bindir\".\n\t(func_mode_link): Accept new \"-bindir\" option and use it, if\n\tsupplied, to place Windows DLLs.\n\t* tests/bindir.at: New file for install tests using \"-bindir\".\n\t* Makefile.am (TESTSUITE_AT): Add bindir.at.\n\t* doc/libtool.texi (Link Mode): Update documentation.\n\t* NEWS, THANKS: Update.\n\n2009-09-11  Akim Demaille  <demaille@gostai.com>\n\n\tlibtool: clean libconftest.a.\n\t* libltdl/m4/libtool.m4 (_LT_REQUIRED_DARWIN_CHECKS): Here.\n\n2009-09-10  Peter Rosin  <peda@lysator.liu.se>\n\n\tfunc_win32_libid doesn't work with MS dumpbin\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_MAGIC_METHOD): The $NM\n\tinterface is assumed to be BSD nm in func_win32_libid, so\n\tcheck for that before using it.\n\n2009-09-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAllow dlopen self test to work with gcc's -fvisibility=hidden.\n\t* libltdl/m4/libtool.m4 (_LT_TRY_DLOPEN_SELF): Declare default\n\tvisibility for the symbol we are going to test dlopen (NULL)\n\twhen a GCC version is used that understands the visibility\n\tattribute, under the assumption that if -fvisibility=hidden\n\twill be used, the user code will be sufficiently annotated\n\tfor visibility of needed symbols from the main executable.\n\t* THANKS: Update.\n\tReport by Josh Hursey against OpenMPI.\n\n\tFix and split recent testsuite addition for compile/link flags.\n\t* tests/flags.at (passing flags through libtool): Split into ...\n\t(passing CC flags through libtool)\n\t(passing CXX flags through libtool)\n\t(passing F77 flags through libtool)\n\t(passing FC flags through libtool)\n\t(passing GCJ flags through libtool): ... these five tests,\n\tfactorized with m4_foreach.  Fix F77 and FC compile and link\n\tcommands; add GCJ tag.  Use LT_AT_TAG to correctly skip tags\n\tfor which no compiler exists.  Use $EXEEXT where appropriate.\n\tDrop unneeded use of reload_cmds.\n\tReports by Peter Rosin and Peter O'Gorman.\n\n2009-09-07  Peter O'Gorman  <peter@pogma.com\n\n\tFix redirect in test case.\n\t* tests/darwin.at: Fix stderr redirect.\n\n\tUse darwin's -force_load flag if available for whole_archive_flag_spec\n\t* libltdl/m4/libtool.m4 (_LT_REQUIRED_DARWIN_CHECKS): Check for\n\t-force_load and use it if there.\n\t* tests/darwin.at: Add a simple test.\n\n2009-09-06  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tTestsuite keyword 'interactive' and check-* rules.\n\t* Makefile.am (testsuite_deps, testsuite_deps_uninstalled):\n\tNew variables.\n\t(check-local, installcheck-local): Use them.\n\t(check-interactive, check-noninteractive): New rules.\n\t* tests/link-order2.at (Link order of deplibs),\n\ttests/static.at (static linking flags for programs): Add keyword\n\t`interactive'.\n\t* doc/libtool.texi (Test descriptions): Document all keywords\n\tused in the Libtool test suite.\n\t* NEWS: Update.\n\n\tFix failure test in the presence of --with-pic or -prefer-pic.\n\t* tests/fail.at (Failure tests): Run non-PIC failure test only\n\tif pic_mode is 'default' or 'no', rather than 'default' or 'yes'\n\tand also -prefer-pic has not been passed in $CFLAGS.\n\t* THANKS: Update.\n\tReport by Donn Washburn.\n\n\tAdd testsuite exposure for passing of compiler and linker flags.\n\t* tests/flags.at (passing flags through libtool): New file, new\n\ttest, for bug fixed in previous commit.\n\t* Makefile.am (TESTSUITE_AT): Add tests/flags.at.\n\n2009-09-04  Peter Rosin  <peda@lysator.liu.se>\n\n\tMake -Wc,FLAG behave like -Xcompiler FLAG in link mode.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Remove \"-Wc,\"\n\tinstead of replacing it with \"$wl\" when linking programs\n\tthrough the compiler driver, just as is the case when linking\n\tlibraries.\n\t* NEWS: Update.\n\n2009-08-23  Lennart Poettering  <lennart@poettering.net>  (tiny change)\n\n\tShut up prototype warnings with recent GCC and -Wstrict-prototypes.\n\t* libltdl/config/ltmain.m4sh (func_generate_dlsyms): Use recent\n\tGCC's diagnostic pragma to override a -Wstrict-prototypes\n\tsetting for the symbol list code.\n\t* THANKS: Update.\n\n2009-08-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tRemove __oline__ from macros, for less spurious configure diffs.\n\t* libltdl/m4/libtool.m4 (_LT_ENABLE_LOCK, _LT_COMPILER_OPTION)\n\t(_LT_COMPILER_C_O, LT_PATH_NM): Replace __oline__ instances with\n\t$LINENO.\n\t* NEWS: Update.\n\n2009-07-24  Roumen Petrov  <bugtrack@roumenpetrov.info>  (tiny change)\n\n\tFixup 'execute mode' test for w32.\n\t* tests/execute-mode.at (execute mode): Add missing $EXEEXT.\n\t(LDFLAGS): Add -no-undefined.\n\n2009-07-01  Yaakov Selkowitz  <yselkowitz@users.sourceforge.net> (tiny change)\n\t    Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t[CXX] Use correct export_dynamic_flag_spec for PE-COFF $hosts\n\t* libltdl/m4/libtool.m4 (_LT_LANG_CXX_CONFIG) [cygwin*|mingw*|pw32*|cegcc*]:\n\tDefine export_dynamic_flag_spec as -Wl,--export-all-symbols here as well\n\t(see commit 5f2bbb494a2753afb2878c399cfd8316b7403a5b).\n\n2009-06-29  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t[mingw] Improve sys_lib_search_path_spec detection.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER): Fix handling\n\tof dos-style paths when parsing $CC -print-search-dirs output.\n\n2009-06-28  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tFinish adding alias for obsoleted AC_LIBTOOL_RC macro.\n\t* libltdl/m4/libtool.m4: Add reminder comment concerning\n\taclocal-1.4 backwards compatibility.\n\t* libltdl/m4/lt~obsolete.m4: Remove unnecessary AC_DEFUN.\n\n2009-06-27  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tAdd alias for obsoleted AC_LIBTOOL_RC macro.\n\t* libltdl/m4/libtool.m4: Add alias for obsoleted\n\tmacro AC_LIBTOOL_RC.\n\n2009-06-21  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tRemove unneeded functions and options from cwrapper\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src)\n\t[lt_opt_process_env_set]: Remove.\n\t[lt_opt_process_env_prepend]: Remove.\n\t[lt_opt_process_env_append]: Remove.\n\t[lt_split_name_value]: Remove.\n\t[file scope]: Don't declare removed functions. Remove\n\tconstants and defines related to eliminated commandline\n\toptions.\n\t[main]: Remove code related to eliminated commandline\n\toptions --lt-env-set, --lt-env-prepend, --lt-env-append.\n\n2009-06-19  Yaakov Selkowitz  <yselkowitz@users.sourceforge.net> (tiny change)\n\t    Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tEnsure LT_PATH_LD works when called before LT_INIT\n\t* libltdl/m4/libtool.m4 (LT_PATH_LD): AC_REQUIRE _LT_PROG_ECHO_BACKSLASH.\n\n2009-06-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAdd versioning tests.\n\t* tests/versioning.at (versioning): New file, new test.\n\t* Makefile.am (TESTSUITE_AT): Adjust.\n\tPrompted by bug report from Mike Gorchak.\n\n2009-06-14  Mike Gorchak  <mike@malva.ua>  (tiny change)\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix versioning computation for QNX.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Set `$current'\n\tand `$age' properly for version_type `qnx'.\n\n2009-06-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAvoid spurious localization testsuite failure on HP-UX/ia64.\n\t* tests/localization.at (localized compiler messages): Skip test\n\tif the compiler warning output contains `locale', for HP-UX.\n\n2009-06-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix concurrent extraction of convenience libraries on Darwin.\n\t* libltdl/m4/libtool.m4 (_LT_CMD_OLD_ARCHIVE): New libtool\n\tvariable `lock_old_archive_extraction', set to `yes' on darwin.\n\t* doc/libtool.texi (libtool script contents): Document it.\n\t* libltdl/config/ltmain.m4sh (func_extract_an_archive): Lock\n\t`ar x' invocation if `lock_old_archive_extraction' is yes.\n\t* tests/darwin.at (darwin concurrent library extraction): New\n\ttest.\n\t* NEWS: Update.\n\tReport by Akim Demaille.\n\n2009-06-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix testsuite failure of lt_dlopenadvise test on FreeMiNT.\n\t* tests/lt_dladvise.at (lt_dlopenadvise library loading): Do not\n\tbuild moddepend for systems without shared libraries.\n\tReport by Alan Hourihane.\n\n\ttestsuite: avoid failures due to old Automake.\n\t* tests/configure-iface.at (installable libltdl)\n\t(--with-ltdl-include/lib, --with-included-ltdl):\n\tSpeficy libmodule_la_SOURCES in Makefile.am as the default\n\tsource file naming scheme changed in Automake 1.8.\n\t* tests/nonrecursive.at (_LT_AT_LTDL_SETUP): Require Automake\n\t1.9.6.\n\t* THANKS: Update.\n\tReport by Robert Garron.\n\n\ttestsuite: add missing @LIBS@ in a link command line.\n\t* tests/old-m4-iface.at (AC_WITH_LTDL): Use @LIBS@ when linking.\n\tReport by Patrice Fromy.\n\n\ttestsuite: cope when some installed libltdl.la has been removed.\n\t* tests/old-m4-iface.at (AC_WITH_LTDL): Pass --with-included-ltdl\n\tto configure, to ensure we do not accidentally link against a\n\tpreviously installed libltdl.so where the corresponding .la\n\tfile has been removed, thus we do not add a run path, and the\n\truntime linker then fails to find libltdl.so.7.\n\t* tests/configure-iface.at (--with-ltdl-include/lib): Remove -L\n\tflags from LDFLAGS to avoid picking up an installed libltdl\n\toutside of the default locations.\n\t* THANKS: Update.\n\tPrompted by report from Patrice Fromy.\n\n2009-06-07  Vincent Torri  <vtorri@univ-evry.fr>  (tiny change)\n\n\tFix C wrapper invocation for ceGCC hosts (cegcc and mingw32ce).\n\t* libltdl/config/ltmain.m4sh (func_mode_link): do not generate\n\tC wrapper for cegcc and mingw32ce hosts.\n\t(func_emit_cwrapperexe_src): remove useless check on\n\t__MINGW32CE__.\n\n2009-06-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tDon't pick up double-quotes from /etc/ld.so.conf on Ubuntu.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [ linux ]\n\t<sys_lib_dlsearch_path_spec>: Remove embedded double quotes from\n\tpaths picked up from /etc/ld.so.conf.  Fixes libltdl compile\n\tfailure on Ubuntu 7.10.\n\t* THANKS: Update.\n\tReport by Camilo La Rota.\n\n2009-06-06  Richard Sandiford  <richards@transitive.com>\n\n\tFix GNU nm invocation for AIX.\n\t* libldtl/m4/libtool.m4 (_LT_LINKER_SHLIBS)\n\t<export_symbols_cmds>: Modify the GNU-nm-on-AIX version so that\n\tit adds weak defined symbols to the export list.\n\n\tBuild AIX shared libraries with binutils 2.19.50+.\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG)\n\t<lt_use_gnu_ld_interface>: New variable to control whether the\n\tGNU ld or native ld interface is used.  Set to \"no\" for GNU ld\n\t2.19.50+ on AIX, otherwise mirror $with_gnu_ld.  Update the\n\twarning message that is printed when using GNU ld on AIX.\n\tAdjust the whole_archive_flag_spec value for GNU ld on AIX.\n\t* NEWS, THANKS: Update.\n\n2009-05-27  Peter O'Gorman  <peter@pogma.com>\n\n\tDon't run compiler checks twice.\n\tlibltdl/m4/libtool.m4 (_LT_PROG_FC, _LT_PROG_F77,\n\t_LT_PROG_CXX): Remove these macros.\n\tlibltdl/m4/lt~obsolete.m4: Add removed macros here.\n\tlibltdl/m4/libtool.m4 (_LT_LANG_FC_CONFIG, _LT_LANG_F77_CONFIG,\n\t_LT_LANG_CXX_CONFIG): Remove references to removed macros, and\n\tmove functionality here.\n\tNEWS: Update.\n\n2009-05-05  Rainer Emrich  <r.emrich@de.tecosim.com>  (tiny change)\n\t    Peter Rosin  <peda@lysator.liu.se>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix cross compilation for HPPA/64 with a BSD file command.\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_MAGIC_METHOD)\n\t[hpux10.20*, hpux11*, !ia64] <lt_cv_deplibs_check_method>:\n\tMatch the dot in `PA-RISC 2.0' literally.  Adjust hppa*64*\n\tpattern to also match BSD `file' output, used in cross\n\tcompilation setups.\n\t* THANKS: Update.\n\tReport and initial patch by Rainer Emrich, refined by Peter\n\tRosin.\n\n2009-05-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tlibtoolize: ignore trailing junk on scriptversion line.\n\t* libtoolize.m4sh (func_install_update): Ignore semi-colon or\n\tcomment-sign and all following characters when parsing a\n\t`scriptversion' line in one of the auxiliary scripts; recent\n\tAutomake-provided script have a stylized comment to induce\n\tEmacs to use UTC.\n\tExposed by the `libtoolize config files serial update' test.\n\n2009-05-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tSkip localization test when setlocale is not functional.\n\t* tests/localization.at (localized compiler messages): Skip\n\ttest when there is a warning about `LC_ALL'.\n\t* THANKS: Update.\n\tReport by Maciej Helminiak.\n\n2009-05-02  Alan Hourihane  <alanh@fairlite.co.uk>  (tiny change)\n\n\tImproved support for FreeMiNT.\n\t* libltdl/m4/libtool.m4 (LT_CMD_MAX_LEN) [mint]: Hard-code\n\tcommand line length limit to 8192, to avoid long test.\n\t* NEWS, THANKS: Update.\n\n2009-05-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tInitial port for BlueGene BG/L.\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC, _LT_LINKER_SHLIBS)\n\t(_LT_LANG_CXX_CONFIG) [linux]: Detect bgxl*, bgf*, mpixl*\n\tcompilers.\n\t* NEWS, THANKS: Update.\n\tReport, feedback and testing by John R. Cary and Christian\n\tR\u00f6ssel.\n\n\tmanual: fix grammaros.\n\t* doc/libtool.texi (Dlpreopening): Fix grammaro.\n\t(C header files): Remove duplicate word.\n\n\tAllow through -tp=* at link time, for pgcc.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Portlant Group\n\tpgcc uses `-tp=PROCESSOR' for target processor selection; allow\n\tthe flag through at link time.\n\tReport by Ethan Mallove.\n\n\tFix quoting of eval'ed variable.\n\t* libltdl/m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS): Double-quote\n\t$lt_cv_sys_global_symbol_pipe for eval, like we do in ltmain,\n\tin order to preserve TABs and multiple adjacent whitespace.\n\tReport by Bruno Haible.\n\n2009-04-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tCope better with missing `makeinfo' in `bootstrap'.\n\t* bootstrap: Update `./doc/notes.txt' last so missing `makeinfo'\n\tdoes not cause a broken tree.\n\t* THANKS: Update.\n\tReport by Christian R\u00f6ssel.\n\n2009-03-29  Yaakov Selkowitz  <yselkowitz@users.sourceforge.net>  (tiny change)\n\t    Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t[cygwin] Improve operation with gcc4\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [cygwin*]:\n\tAdd w32api to sys_lib_search_path_spec without overriding gcc's\n\town search path.\n\n2009-03-29  Yaakov Selkowitz  <yselkowitz@users.sourceforge.net>  (tiny change)\n\t    Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tUse correct export_dynamic_flag_spec for PE-COFF $hosts\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS) \n\t[cygwin*|mingw*|pw32*|cegcc*]: Define export_dynamic_flag_spec\n\tas -Wl,--export-all-symbols, as required by GNU ld for PE-COFF.\n\n2009-03-29  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tImprove compatibility with older automake\n\t* libltdl/m4/lt~obsolete.m4: Add AC_DEFUNs for\n\t_LT_PREPARE_SED_QUOTE_VARS and _LT_PROG_ECHO_BACKSLASH.\n\tReport by Yaakov Selkowitz.\n\n2009-03-20  Peter Rosin  <peda@lysator.liu.se>\n\n\tLT_OUTPUT should always create the libtool script.\n\t* libltdl/m4/libtool.m4 (LT_OUTPUT): Make LT_OUTPUT ignore the\n\t--no-create configure option, and assume that the user wants\n\tto use an up-to-date libtool script if the LT_OUTPUT macro is\n\tpresent.\n\t* tests/early-libtool.at: Make sure we do not regress.\n\n2009-01-26  Peter Rosin  <peda@lysator.liu.se>\n\n\tDon't settle for any dumpbin/link program as name lister.\n\t* libltdl/m4/libtool.m4 (LT_PATH_NM): When locating dumpbin or\n\tlink -dump, check if they appear to really be capable of name\n\tlisting, in order to eliminate e.g. link from coreutils. This\n\tmakes the name lister decision fall back on nm as the default if\n\tno acceptable candidate is found, which mainly happens on\n\t(arguably broken) cross compiles.\n\t* NEWS: Update\n\t* THANKS: Update\n\tReports by Rudolf Leitgeb and Peter Kjellerstedt.\n\n2009-03-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tDocument INNER_TESTSUITEFLAGS, drop leading space.\n\t* README: Document INNER_TESTSUITEFLAGS.\n\t* tests/cmdline_wrap.at (Run tests with low max_cmd_len):\n\tWhen using INNER_TESTSUITEFLAGS on the testsuite invocation,\n\tdrop leading space after \"-k libtool\", so that the user may\n\tfurther limit the set of tests to be run.\n\n2009-03-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix low max_cmd_len template test on UnixWare.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): When expanding\n\t$reload_cmds, always put objects in $reload_objs rather than\n\tadding them to the command line, to allow more general command\n\tlines in reload_cmds.  Ensure $reload_objs contains a leading\n\tspace.\n\t* libltdl/m4/libtool.m4 (_LT_LANG_CXX_CONFIG) [sysv5*,\n\tsco3.2v5*, sco5v6*] <reload_cmds>: For CC, invoke prelinker\n\tbefore creating reloadable object.\n\t(_LT_CMD_RELOAD) <reload_cmds, reload_flag>: Declare as\n\t_LT_TAGDECL, not _LC_DECL.\n\t(_LT_LANG_CXX_CONFIG, _LT_LANG_F77_CONFIG, _LT_LANG_FC_CONFIG)\n\t(_LT_LANG_GCJ_CONFIG) <reload_cmds, reload_flag>: Initialize\n\tfrom default (C tag) value.\n\t* THANKS: Update.\n\tReport and analysis by Tim Rice and John Wolfe.\n\n2009-02-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (Distributing libltdl, Test descriptions):\n\tAdd missing parentheses.\n\n2009-02-28  Tim Rice  <tim@multitalents.net>\n\n\tFix C++ template handling for old archives on UnixWare 7.1.4.\n\t* libltdl/m4/libtool.m4 (_LT_LANG_CXX_CONFIG) [sysv5*,\n\tsco3.2v5*, sco5v6*] <old_archive_cmds>: For CC, add template\n\tprelink step before archiving.  Fixes template.at test failures.\n\n2009-02-28  T\u00f6r\u00f6k Edwin  <edwintorok@gmail.com>  (tiny change)\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tDo not add bogus directory arguments to link command lines.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Ensure $path is\n\talways initialized before it is used.  Reported for zsh, for\n\twhich $path contains $PATH entries even after \"emulate sh\", see\n\t<http://bugs.debian.org/517501>.\n\n2009-02-28  Andreas Schwab  <schwab@suse.de>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tRemove remaining references to CVS.\n\t* bootstrap: Remove references to CVS.\n\t* README.alpha: Likewise.\n\t* clcommit.m4sh: Likewise.\n\t* doc/libtool.texi: Bump copyright years.\n\t(libtool script contents): Describe macro_revision as revision\n\twithout reference to CVS.\n\n2009-02-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tDo not pass $INSTALL via TESTS_ENVIRONMENT.\n\t* Makefile.am (TESTS_ENVIRONMENT): Set lt_INSTALL, not INSTALL,\n\tso that a bogus relative path to the install-sh script in the\n\tsource tree is not propagated to the configure scripts of the\n\told test suite.\n\t* tests/testsuite.at: Adjust.\n\t* tests/install.at (Install tests): Likewise.\n\n2009-02-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\t    Kurt Roeckx <kurt@roeckx.be>\n\n\tNew test for lt_dlopenext error message.\n\t* tests/lt_dlopenext.at (lt_dlopenext error messages): New file,\n\twith new test, with sources taken from the Autobook example.\n\t* Makefile.am: Update.\n\n2009-02-03  Kurt Roeckx <kurt@roeckx.be>\n\n\tlt_dlopenext sets error upon successful library load.\n\t* libltdl/ltdl.c (lt_dlopenadvise): Fix bogus error on\n\tsuccessful loading of library with lt_dlopenext.\n\tReport by Kaiwang Chen in <http://bugs.debian.org/510006>.\n\n2009-02-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix sed script in install.at.\n\t* tests/install.at (Install tests): Fix typo in sed script,\n\tfixes test failure on HP-UX.\n\n\tFix $INSTALL in testsuite with relative path to install-sh.\n\t* tests/testsuite.at: If `$INSTALL' points to in-tree\n\tinstall-sh, override a possibly-relative path to it with an\n\tabsolute one.\n\n\tinstall mode: do not pass `-m $install_override_mode' to cp.\n\t* libltdl/config/ltmain.m4sh (func_mode_install): New variable\n\t$install_cp, factor test when `cp' is used for installation.\n\tDo not pass mode override to cp.  Fixes `libtool --mode=install\n\tcp ...' on HP-UX; cp should not be used for libraries that might\n\tbe needed by programs invoked during the installation process.\n\n\tFix sed script portability issue in func_version.\n\t* libltdl/config/getopt.m4sh (func_version): Remove space in\n\t`/\\./! {' sed command, to please HP-UX sed.\n\n2009-01-31  Jeff Squyres <jsquyres@cisco.com>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tNew test for bogus lt_dlopen error message.\n\t* tests/lt_dlopen.at (lt_dlopen error messages): New file, new\n\ttest, marked as XFAIL for now.\n\t* Makefile.am: Adjust.\n\tReport and reproducible test case by Jeff Squyres.\n\n2009-01-31  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\texecute mode: do not transform *.lo or *.la arguments.\n\t* libltdl/config/ltmain.m4sh (func_mode_execute): Do not check\n\targuments matching *.lo or *.la for script wrappers.\n\t* tests/execute-mode.at (execute mode): Add tests.\n\t* NEWS, THANKS: Update.\n\tReport by Paul Biggar.\n\n\tNonexistent `main' does not guarantee link failure.\n\t* tests/fail.at (Failure tests): Use an unresolved symbol,\n\trather than non-presence of `main', to provoke a link failure\n\talso on QNX.  Only check for failure of the libtool script if\n\tthe link without libtool would have failed, too.\n\tReport by Mike Gorchak.\n\n\tUse AT_CHECK more liberally in duplicate members test.\n\t* tests/duplicate_members.at (duplicate members in archive\n\ttests): Wrap link commands in AT_CHECK, they might fail, as seen\n\ton QNX.\n\t* THANKS: Update.\n\tReport by Mike Gorchak.\n\n2009-01-30  Akim Demaille  <demaille@gostai.com>\n\n\tFix cwrapper warnings from MSVC 2005.\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src)\n\t[file scope]: define _CRT_SECURE_NO_DEPRECATE.\n\n2009-01-29  Akim Demaille  <demaille@gostai.com>\n\n\tFix bootstrap with older libtool.m4 in reach of aclocal.\n\t* libltdl/m4/lt~obsolete.m4: Add stub definitions for\n\t_LT_REQUIRED_DARWIN_CHECKS and _LT_AC_PROG_CXXCPP.\n\n\tFix func_exec_init.\n\t* tests/defs.m4sh (func_exec_init): Instead of using the undefined\n\tmy_dir, call func_dirname_and_basename and use its result.\n\t(func_make): For consistency, don't use the useless local variable\n\tmy_dir.\n\n2009-01-29  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tDocument --mode short-hands better, and test them.\n\t* doc/libtool.texi (Invoking libtool): Give examples for using\n\tthe `--mode=MODE' short-hand `MODE', or abbreviations thereof.\n\t* libltdl/config/ltmain.m4sh: Mention the short-hand for MODE\n\tin the --help output.\n\t* tests/help.at (mode short-hands): New test group.\n\tSuggestion by Bruno Haible.\n\n\tfunc_version copes with multi-line copyright headers.\n\t* libltdl/config/getopt.m4sh (func_version): Slurp in copyright\n\tlines until a period is found.\n\t* libltdl/config/ltmain.m4sh: Multi-line copyright is ok to use\n\tnow.\n\t* tests/help.at (standard command line options): New file, new\n\ttests.  Make this test group the first one for libtool tests,\n\tmoving the banner ...\n\t* tests/duplicate_members.at: ... from here.\n\t* Makefile.am (TESTSUITE_AT): Add tests/help.at.\n\n2009-01-29  Akim Demaille  <demaille@gostai.com>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tNormalize compiler output due to compiler wrappers.\n\t* tests/testsuite.at (LT_AT_NORMALIZE_COMPILER_OUTPUT): New\n\tmacro, to normalize ccache and distcc output.\n\t* tests/localization.at (localized compiler messages): Use it.\n\n2009-01-29  Peter Rosin  <peda@lysator.liu.se>\n\n\tMake modified libtool script in cwrapper test executable\n\t* tests/cwrapper.at: Make modified libtool script executable.\n\tReport by Roumen Petrov.\n\n2009-01-28  Akim Demaille  <demaille@gostai.com>\n\n\tClean space uses.\n\t* libtoolize.m4sh: Remove trailing spaces.\n\tUse <tab><sp>, as some editors remove \"useless\" spaces in\n\t<sp><tab>.\n\n2009-01-26  Peter Rosin  <peda@lysator.liu.se>\n\n\tAWK is required, make sure it is set.\n\t* libltdl/m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS: Make sure\n\tAWK is set (automake brings it in, but is not always used).\n\tFixes old-m4-iface.at on MSYS/MSVC.\n\n2009-01-25  Mike Frysinger  <vapier@gentoo.org>\n\n\tFix typo in libtool install mode documentation.\n\t* libltdl/config/ltmain.m4sh (func_mode_help): Change -inst-prefix\n\tto -inst-prefix-dir.\n\t* doc/libtool.texi (Install mode): Likewise.\n\n2009-01-24  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tAdd -Wall to cwrapper tests.\n\t* tests/cwrapper.at: Add -Wall existing tests. Add additional\n\tround of tests with -Wall alone.\n\n2009-01-24  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t[cygwin|mingw] cwrapper cleanups.\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src)\n\t[file scope]: re-organized includes and portability\n\tmacros. Avoid oldnames on MINGW32 and MSVC for\n\tsetmode/stat/chmod/getcwd/putenv. Declare _putenv on\n\tMINGW32 when -ansi. Use namespaced macro LT_DEBUGWRAPPER.\n\n2009-01-24  Peter Rosin  <peda@lysator.liu.se>\n\n\tExpand exit status test in LT_AT_NOINST_EXEC_CHECK correctly\n\t* tests/testsuite.at (LT_AT_NOINST_EXEC_CHECK): STATUS is\n\targument $3, not $2.\n\n2009-01-23  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tAdd tests for cwrapper with -std=c89 and -std=c99\n\t* tests/cwrapper.at: New file.\n\t* Makefile.am: Add tests/cwrapper.at.\n\n2009-01-22  Peter Rosin  <peda@lysator.liu.se>\n\n\tUnify line endings in localization test.\n\t* tests/testsuite.at: Update copyright year.\n\t(LT_AT_UNIFY_NL): Add macro that unifies line endings on\n\tplatforms that suffer from such confusion.\n\t* tests/localization.at: Use it. Update copyright year. Fixes\n\tthe test on MSYS/MSVC.\n\n2009-01-21  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t[cygwin|mingw] Fix compile warnings when -std=c89.\n\t* libltdl/config/ltmain.m4sh (func_emit_wrapper_part1):\n\tmove contents to...\n\t(func_emit_wrapper_part2): move contents to...\n\t(func_emit_wrapper): here.\n\t(func_emit_cwrapperexe_src) [file scope]: Remove\n\tvariables script_text_part1 and script_text_part2.\n\t(func_emit_cwrapperexe_src) [lt_dump_script]: New function.\n\t(func_emit_cwrapperexe_src) [main]: Call it.\n\n2009-01-21  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tMinor cygwin cleanup\n\t* libltdl/config/ltmain.m4sh (func_generate_dlsyms): Correct\n\tcase pattern for cygwin.\n\n2009-01-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAvoid failure due to Cygwin path detection bug.\n\t* tests/execute-mode.at (execute mode): Ignore noise on stderr;\n\tCygwin might consider `d\\\"e' to be a DOS-style path and warn.\n\tReport by Charles Wilson.\n\n2009-01-19  Robert Millan  <rmh@aybabtu.com>\n\n\tSupport GNU/kOpenSolaris.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER)\n\t(_LT_CHECK_MAGIC_METHOD, _LT_COMPILER_PIC, _LT_LINKER_SHLIBS)\n\t(_LT_LANG_CXX_CONFIG) [kopensolaris*-gnu]: Recognize\n\tGNU/kOpenSolaris.\n\t* libltdl/m4/ltdl.m4 (LT_SYS_DLOPEN_DEPLIBS): Likewise.\n\t* NEWS, THANKS: Update.\n\n2009-01-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAnother LT_AT_EXEC_CHECK fixup.\n\t* tests/shlibpath.at (shlibpath_overrides_runpath): Use\n\tLT_AT_EXEC_CHECK instead of AT_CHECK.\n\n2009-01-19  Roumen Petrov  <bugtrack@roumenpetrov.info>  (tiny change)\n\n\tAdd missing $EXEEXT to java test.\n\t* tests/convenience.at (Java convenience archives): Add $EXEEXT.\n\n2009-01-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tBump copyright years.\n\t* ChangeLog.2008: New, rotated from ...\n\t* ChangeLog: ... here.\n\t* Makefile.am (EXTRA_DIST): Add ChangeLog.2008.\n\t* NEWS, libltdl/config/ltmain.m4sh: Bump copyright years.\n\t* libltdl/m4/libtool.m4 (_LT_COPYING, LT_OUTPUT): Likewise.\n\t* libtoolize.m4sh: Likewise.\n\n2009-01-14  Peter Rosin  <peda@lysator.liu.se>\n\n\tFix flakey mdemo-dryrun test on MSYS (again!)\n\t* tests/mdemo-dryrun.test: ls -l in MSYS sometimes shows year,\n\tnot time, for really fresh files. Add sleep 1 call at yet another\n\tstrategic position. Makes the test pass reliably for MSYS/MinGW.\n\nContinued in ChangeLog.2008\n\nvim:tw=72\n-- \n  Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n  2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n\n  This file is part of GNU Libtool.\n\nCopying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout warranty of any kind.\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/ChangeLog.2010": "2010-12-20  Ian Lance Taylor  <iant@google.com>\n\n\t* libltdl/m4/libtool.m4 (LT_LANG): Add Go.\n\t(AC_PROG_GO): Provide.\n\t(_LT_SYS_HIDDEN_LIBDEPS): Add Go case.\n\t(_LT_LANG_GO_CONFIG): Define.\n\t(LT_PROG_GO): Define.\n\t(AC_PROG_GO): Define if not defined.\n\t* libltdl/config/ltmain.m4sh: Match *.go.\n\t* doc/libtool.texi (LT_INIT): Mention Go.\n\t(Tags): Mention Go.\n\t* configure.ac: Enable Go.\n\t* NEWS: Update.\n\n2010-12-20  Brice De Bruyne  <bricedb@gmail.com>  (tiny change)\n\n\tAlso turn off -fuse-linker-plugin for postdep_objects computation.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_HIDDEN_LIBDEPS): Add\n\t-fno-use-linker-plugin to temporary compile flags if necessary,\n\tto fix C++ postdep_objects setting with -flto\n\t-fuse-linker-plugin.\n\t* NEWS, THANKS: Update.\n\n2010-12-20  KO Myung-Hun  <komh@chollian.net>  (tiny change)\n\n\tSet command line length limit for OS/2.\n\t* libltdl/m4/libtool.m4 (LT_CMD_MAX_LEN) [os2]\n\t<lt_cv_sys_max_cmd_len>: Set to 8192 to avoid long test.\n\n2010-12-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix PIC flags with mpif77 using ifort on GNU/Linux.\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC) [linux]:\n\tMatch Intel compiler also using $CC -V output, to avoid false\n\tnegatives with compiler drivers like mpif77.\n\tReport by Christian R\u00f6ssel.\n\n2010-12-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix PIC flags with MPI wrappers using Portland on GNU/Linux.\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC) [linux]:\n\tMatch Portland compilers also using $CC -V output, to avoid\n\tfalse negatives with MPI compiler drivers.\n\tReport by Christian R\u00f6ssel.\n\n\t* libltdl/m4/libtool.m4 (_LT_SETUP): Fix quoting for\n\tPATH_SEPARATOR.\n\n2010-12-15  KO Myung-Hun  <komh@chollian.net>  (tiny change)\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix PATH_SEPARATOR handling for OS/2.\n\t* Makefile.am (update_mans): Quote $(PATH_SEPARATOR).\n\t* libltdl/m4/libtool.m4 (_LT_SETUP): Add _LT_DECL for\n\tPATH_SEPARATOR.\n\t* libltdl/config/general.m4sh: Use PATH_SEPARATOR when computing\n\t$progpath.\n\t* THANKS: Update.\n\n2010-12-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix nvcc PIC setting on darwin.\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC)\n\t<lt_prog_compiler_pic>: Prepend -Xcompiler to nonempty variable\n\tsetting rather than hard-coding -Xcompiler -fPIC, for darwin.\n\t* NEWS, THANKS: Update.\n\tReport by Pawe\u0142 Daniluk.\n\n\tHonor $AUTOCONF, $AUTOMAKE in --help output.\n\t* libltdl/config/getopt.m4sh (func_help): Use $AUTOCONF and\n\t$AUTOMAKE if set, for --version outout.\n\n\tdocs: Libtool configuration diagram.\n\t* doc/libtool.texi (Integrating libtool): Add diagrams\n\texplaining the dependencies between Libtool files.\n\tSuggestion by Ethan Mallove.\n\n2010-11-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tEliminate hardcode_libdir_flag_spec_ld tag variable.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Set $wl to empty\n\tif $LD is used for creating shared libraries.  Do not use\n\thardcode_libdir_flag_spec_ld any more.\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG)\n\t(_LT_LANG_F77_CONFIG, _LT_LANG_FC_CONFIG, _LT_SYS_DYNAMIC_LINKER)\n\t<hardcode_libdir_flag_spec_ld>: Remove all instances of the tag\n\tvariable.\n\t(_LT_LINKER_SHLIBS) [linux, xlf] <hardcode_libdir_flag_spec>:\n\tSet variable, including ${wl}.  Fixes hardcoding in programs\n\tcreated by XL Fortran on GNU/Linux.\n\t* NEWS, THANKS: Update.\n\tReport by Paul H. Hargrove.\n\n\tRebuild menus in the manual.\n\t* doc/automake.texi: Rebuild menus (using ^C ^U ^A in emacs).\n\tThanks to Ian Lance Taylor for the suggestion.\n\n2010-11-07  Ollie Wild  <aaw@google.com>\n\n\tModify --with-pic to support per-package configurations.\n\t* libltdl/m4/libtool.m4:  Modify --with-pic to accept a list of\n\tpackage names.  Modelled off --enable-shared.\n\t* tests/with-pic.at: New test.\n\t* Makefile.am (TESTSUITE_AT): Add tests/with-pic.at.\n\t* doc/libtool.texi (LT_INIT): Enhance documentation of\n\t--with-pic configure flag.\n\t* NEWS (New features): Mention that --with-pic now accepts a\n\tcomma-separated list of package names.\n\n2010-11-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix cwrapper test failure with --disable-static.\n\t* tests/cwrapper.at (cwrapper and installed shared libraries):\n\tCompile program source without libtool, so we can be sure a\n\tnon-PIC object will be created.\n\n2010-11-01  Peter Rosin  <peda@lysator.liu.se>\n\n\tdocs: Windows DLLs and headers.\n\t* doc/libtool.texi (Platform quirks): Add new subsection\n\t'Windows DLLs'.\n\n\t* doc/libtool.texi (Platform quirks): Fix typo.\n\n2010-10-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tdocs: mention shell requirement for libtool script.\n\t* doc/libtool.texi (Invoking libtool): Document that the shell\n\tused to invoke libtool needs to be the same used to configure\n\tit.\n\t* THANKS: Update.\n\tReport by Markus Duft.\n\n2010-10-15  Gary V. Vaughan  <gary@gnu.org>\n\n\tlibtool: remove redundant unsubstituted shell var defaults.\n\t* Makefile.am (libltdl/config/ltmain.sh): Boilerplate code from\n\tlibltdl/config/general.m4 sets some default shell variables\n\tdesigned to be substituted by `$(configure_edit)'.  Actually,\n\t`libtool' uses the language tag values for those variables, and\n\t`ltmain.m4sh' is not passed through `$(configure_edit)', so they\n\tare just noise.  Edit them out at bootstrap time.\n\n2010-10-15  Gary V. Vaughan  <gary@gnu.org>\n\n\tmaint: don't leak developer GREP, SED etc into distribution file.\n\t* Makefile.am: Having rearranged the file, now apply the actual\n\tchanges to follow-up.\n\t(edit): Split into two parts...\n\t(bootstrap_edit): ...substitutions that should happen at bootstrap\n\ttime...\n\t(configure_edit): ...and substitutions that should not happen until\n\tconfigure time.\n\t* Makefile.am (libltdl/m4/ltversion.m4, libltdl/config/ltmain.sh)\n\t(libtoolize.in, tests/package.m4): Use bootstrap_edit.\n\t(libtoolize, tests/defs): Use configure_edit.\n\t* HACKING (Release Procedure): Remove the note to workaround the\n\tbug fixed by this changeset.\n\t* NEWS (Bug fixes): Mention that this bug is now fixed.\n\tReported by Joerg Sonnenberger.\n\n\tmaint: rearrange Makefile.am in preparation for a follow-up patch.\n\t* Makefile.am (Libtool scripts.): Move this section below the\n\t`Bootstrap.' section...\n\t(libtoolize.in): ...except this one which is generated at\n\tbootstrap time, and was added into the `Bootstrap.' section.\n\t(Libltdl.): Move this section below the `Libtool scripts.'\n\tsection.\n\n2010-10-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix linking from only convenience archives with gfortran on Darwin.\n\t* libltdl/m4/libtool.m4 (_LT_DARWIN_LINKER_FEATURES): Update\n\tmacro comment header.\n\t[darwin, F77, FC] <compiler_needs_object>: Set to yes if\n\twhole_archive_flag_spec is nonempty.  Fixes convenience.at test\n\tsuite failures with gfortran 4.2 on Darwin.\n\t* THANKS: Update.\n\tReport by Paul Laight.\n\n\tFix bindir check logic, and relax non-bindir case for AIX.\n\t* tests/bindir.at (bindir install tests): Rewrite checks for\n\tplace of the installed shared library in two separate tests,\n\tdepending on whether -bindir is supposed to have an effect or\n\tnot.  In the positive case, make the test stricter so that we\n\treject libraries in $libdir.  In the negative case, do not\n\trequire a major version number in the $libdir file name, for AIX\n\twithout runtimelinking.  If tmpdir creation fails, skip the\n\ttest.  Use fewer bindir directory names for testing, to speed\n\tup the test.  Also mention MSVC style DLL name in comment.\n\tReport by Peter Rosin.\n\n\ttests: remove unneeded 'bindir compile check' test.\n\t* tests/bindir.at (bindir compile check): Remove.\n\n2010-10-14  Peter Rosin  <peda@lysator.liu.se>\n\n\ttests: fix $EXEEXT typo.\n\t* tests/depdemo-relink.test (func_restore_files): Use $EXEEXT\n\tinstead of $EXEXT.\n\n2010-10-12  Simon Josefsson  <simon@josefsson.org>\n\t    Mat\u011bj T\u00fd\u010d <matej.tyc@gmail.com>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tdocs: improve description of -no-undefined.\n\t* doc/libtool.texi (Link mode): Fix -no-undefined description.\n\t(Inter-library dependencies): Use Windows not AIX as example\n\tsystem.  Clarify need for symbol resolution at library creation\n\ttime.\n\n2010-10-09  Paolo Bonzini  <bonzini@gnu.org>\n\n\tAdd missing sysroot resolution.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Resolve sysroot\n\twhen fetching the install directory of dependent libraries.\n\tReported by Lionel Landwerlin <llandwerlin@gmail.com>,\n\tpatch by Khem Raj <raj.khem@gmail.com>.\n\t* THANKS: Reorder entries, add Khem and Lionel.\n\n2010-10-07  Roumen Petrov  <bugtrack@roumenpetrov.info>\n\n\tAdd test case for 69e77671 (cwrapper PATH manipulation order)\n\t* tests/cwrapper.at: Add new test 'cwrapper and installed shared\n\tlibraries.'\n\n2010-10-04  Peter Rosin  <peda@lysator.liu.se>\n\n\tcwrapper: split long lines when dumping the wrapper script.\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src): If\n\tthe wrapper script contains long lines, split them for\n\treadability and to conform with C standards.\n\t* tests/cwrapper.at (cwrapper string length): New test, making\n\tsure we don't regress.\n\n\tmsvc: handle symbols from different files independently.\n\t* libltdl/m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS)\n\t<dumpbin, lt_cv_sys_global_symbol_pipe>: Make all sections\n\tviable for symbol extraction again when the symbols from a new\n\tfile starts.  Fixes tests/tagdemo-make.test for MSVC 10.\n\t* tests/dumpbin-symbols.at: New test, making sure we don't\n\tregress.\n\t* Makefile.am (TESTSUITE_AT): Update.\n\n2010-09-27  Peter Rosin  <peda@lysator.liu.se>\n\n\ttests: check if sys_lib_search_path_spec works on MSVC.\n\t* tests/search-path.at (sys_lib_search_path on w32): New test,\n\tmaking sure v2.2.10-207-g09142ea doesn't regress.\n\n\tSkip need_lib_prefix.at on systems without lib prefix on libraries.\n\t* tests/need_lib_prefix.at [MSVC, OS/2]: Skip this test on\n\tsystems that do not have libraries prefixed with lib.\n\n\ttests: clean up importing and exporting on w32.\n\tMakes the touched tests pass for MSVC when DLLs are built.\n\t* tests/demo/Makefile.am, tests/pdemo/Makefile.am: Define\n\tBUILDING_LIBHELLO when building libhello.la.\n\t* tests/demo/foo.h, tests/pdemo/foo.h (nothing) <MSVC>: Export\n\tvariable when building the libhello dll and import when using\n\tlibhello.  For GCC and non-w32, and when building a static\n\tlibhello, leave as an ordinary extern.\n\t* tests/pdemo/foo.h [Cygwin]: Remove unneeded and \"dead\" export\n\tand import logic (LIBFOO_DLL is always undefined).\n\t* tests/pdemo/longer_file_name_foo.c,\n\ttests/pdemo/longer_file_name_foo2.c (_LIBFOO_COMPILATION_): Not\n\tuseful before, even less so now.  Removed.\n\t* tests/depdemo/l1/Makefile.am: Define BUILDING_LIBL1 when\n\tbuilding libl1.la.\n\t* tests/depdemo/l2/Makefile.am: Define BUILDING_LIBL2 when\n\tbuilding libl2.la.\n\t* tests/depdemo/l3/Makefile.am: Define BUILDING_LIBL3 when\n\tbuilding libl3.la.\n\t* tests/depdemo/l4/Makefile.am: Define BUILDING_LIBL4 when\n\tbuilding libl4.la.\n\t* tests/depdemo/l1/l1.h, tests/depdemo/l2/l2.h,\n\ttests/depdemo/l3/l3.h, tests/depdemo/l4/l4.h <MSVC>: Export\n\tvariables when building the associated library dll and import\n\twhen using the library.  For GCC and non-w32, and when building\n\tstatic libraries, leave as an ordinary extern.\n\n2010-09-26  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tdocs: do not refer to Libtool version with dlopen functionality.\n\t* doc/libtool.texi (Dlopened modules): Remove broken reference\n\tto what should have been Libtool 0.9g.\n\tReport by Roumen Petrov.\n\n2010-09-23  Peter Rosin  <peda@lysator.liu.se>\n\n\tmsvc: don't try to export import descriptors.\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS) [cygwin, mingw]\n\t[pw32, cegcc] <cl*, exclude_expsyms>: Don't export symbols in\n\timport libraries related to describing what dll(s) the import\n\tlibrary is importing. Fixes problem in tests/demo-make.test\n\tand some other tests.\n\n2010-09-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix regression in command-line length computation.\n\t* libltdl/m4/libtool.m4 (LT_CMD_MAX_LEN): Use `env echo' rather\n\tthan possibly-undefined func_fallback_echo, to ensure we fork\n\tand exec for this test.\n\t* NEWS: Update.\n\tRegression introduced in v2.2.6-39-g9c3d4d8.\n\n2010-09-22  Gary V. Vaughan  <gary@gnu.org>\n\n\tPost-release administrivia.\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version\n\tnumbers to 2.4.1a.\n\t* NEWS: Add header line for next release.\n\n\tRelease 2.4.\n\t* libltdl/Makefile.inc (LTDL_VERSION_INFO): We've added the\n\tstatic libprefix interface, so new version-info is C+1:0:R+1.\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version\n\tnumbers.\n\t* NEWS: Update version number.\n\n\tmanual: web-manual index.html clashes with @node Index.\n\t* doc/libtool.texi (Index): Renamed to `Combined Index'.\n\n\ttests: ISO C++ forbids declaration of 'v1' with no type.\n\t* tests/lt_dlexit.at (lt_dlexit unloading libs): Added an\n\texplicit int type to declaration of 'v1' to prevent compilation\n\tfailure with C++.\n\n2010-09-22  Peter Rosin  <peda@lysator.liu.se>\n\n\ttests: reloadable objects do not work on MSVC, SKIP test.\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS)\n\t[cygwin, mingw, pw32, cegcc] <cl*, reload_cmds>: Indicate that\n\treloadable objects do not work.\n\t* tests/duplicate_conv.at: Skip last test if reloadable\n\tobjects do not work.\n\t* doc/libtool.texi (libtool script contents) <reload_cmds>:\n\tDocument how to indicate that reloadable objects do not work.\n\n2010-09-21  Peter Rosin  <peda@lysator.liu.se>\n\n\tmsvc: eliminate spaces in the library search path.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [mingw, cygwin]\n\t<cl*, sys_lib_search_path_spec>: The LIB path variable telling\n\twhere MSVC looks for libraries is likely to contain directory\n\tnames with spaces.  Convert those directory names to the short\n\t8.3 DOS form (i.e. without spaces) when storing them in\n\tsys_lib_search_path_spec, as that is a space separated variable.\n\n2010-09-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tRevert to per-language libpath computation on AIX.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_MODULE_PATH_AIX): Accept\n\ttagname argument.  Use global cache variable lt_cv_aix_libpath\n\tto override per-language tag variables for the libpath value.\n\tFix the sed script to remove trailing space.\n\t(_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG): Pass tag argument to\n\t_LT_SYS_MODULE_PATH_AIX.\n\tTracked down and reported by Rainer Tammer.\n\n2010-09-21  Gary V. Vaughan  <gary@gnu.org>\n\n\tmaint: edit-readme-alpha shouldn't try to re-edit during dist.\n\t* libltdl/config/edit-readme-alpha: If README is non-writable\n\tassume that it is being run from distcheck, and skip the edit\n\twith a warning (to help diagnose cases where the heuristic is\n\tnot correct).  However, if README has already been edited to\n\tthe alpha text, quietly skip without an error message.\n\n2010-09-20  Eric Blake  <eblake@redhat.com>\n\n\tmaint: drop autobuild requirement\n\t* HACKING: Update.\n\n\tbuild: ship autobuild.m4, to reduce bootstrap requirement\n\t* libltdl/m4/.gitignore: Drop autobuild.m4.\n\t* libltdl/m4/autobuild.m4: New file, copied from autobuild.\n\t* configure.ac (AB_INIT): Unconditionally call it.\n\n2010-09-20  Peter Rosin  <peda@lysator.liu.se>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tlibltdl: Make sure preloaded symbols are declared extern \"C\".\n\t* libltdl/ltdl.h (LTDL_SET_PRELOADED_SYMBOLS): Move the\n\tdeclaration of lt__PROGRAM__LTX_preloaded_symbols to global\n\tscope and make sure it has \"C\" linkage.  Makes exceptions.at\n\tsucceed on MSVC.\n\n2010-09-20  Peter Rosin  <peda@lysator.liu.se>\n\n\ttests: __declspec (dll{ex,im}port) in tests/exceptions.at\n\t* tests/exceptions.at (common.h, module.h, lib.h) [w32]: Use\n\t__declspec (dllimport) and __declspec (dllexport) instead of\n\tthe less portable __attribute__ ((dllimport)) and\n\t__attribute__ ((dllexport)).  Makes the test compile on MSVC.\n\n2010-09-19  Peter Rosin  <peda@lysator.liu.se>\n\n\ttests: Import items from liba1 for MSVC.\n\t* tests/lt_dlexit.at (b1.c) [MSVC]: Import function f1 and\n\tvariable v1 from liba1 when using them from modb1.  Makes the\n\ttest pass on MSVC.\n\n2010-09-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\ttests: avoid distcheck failure with --disable-ltdl-install.\n\t* tests/ltdl-libdir.at (libdir of installed modules): Skip if\n\t$LIBLTDL does not exist.\n\n2010-09-18  Gary V. Vaughan  <gary@gnu.org>\n\n\tmaint: use sed instead of maintaining 2 README files.\n\t* README.alpha: Deleted.  It was mostly identical to README.\n\t* libltdl/config/edit-readme-alpha: New script to edit the\n\tcontents of README in the dist tree prior to tarring up.\n\t* Makefile.am (dist-hook): Run it before rolling alpha release\n\ttarball.\n\n\tmaint: improve README's `Obtaining the Latest Sources'.\n\t* README (Obtaining the Latest Sources): Add instructions for\n\tobtaining stable, alpha and nightly snapshot tarballs.\n\t* README.alpha (Obtaining the Latest Sources): Adjust to match.\n\n\tmaint: reformat README `The Test Suites' for consistency.\n\t* README (The Test Suites): Reformatted for consistency.\n\t* README.alpha (The Test Suites): Adjust to match.\n\n\tmaint: improve `Reporting Bugs' in README and README.alpha.\n\t* README (Reporting Bugs): Rewritten to a more complete and\n\tconcise guide to providing a good bug report.\n\t* README.alpha (Reporting Bugs): Adjust to match.\n\n\tmaint: consolidate Introductions of README and README.alpha.\n\t* README (Introduction): Rewritten to a more logical order for\n\tfirst time users, incorporating some additional text that was\n\tpreviously only in README.alpha.\n\t* README.alpha (Introduction): Adjust to match.\n\n\tmaint: copy the Version Numbering section into README.alpha.\n\t* README.alpha (Version Numbering): No less useful for users\n\tof alpha releases.  Copied from README.\n\n2010-09-17  Peter Rosin  <peda@lysator.liu.se>\n\n\ttests: actually detect missing 'test' in 'if \"$foo\" = ...'.\n\t* tests/sh.test: Remove extra backslash in regex.\n\n\tCopy over DLL_EXPORT handling from C to C++ for non-GCC on w32.\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC) [mingw, cygwin, os2]\n\t[pw32, cegcc]: Copy over the DLL_EXPORT handling from C to C++.\n\n2010-09-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tLTO: consistently accept -fwhopr* and -flto* for GCC.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Accept -fwhopr*.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_HIDDEN_LIBDEPS): Also match\n\t-flto*.\n\n2010-09-17  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tFix order of PATH manipulation in cwrapper and shwrapper\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src:main): Call\n\tlt_update_exe_path before lt_update_lib_path, to ensure that the\n\ttemporary rpath values (which include the OBJDIRs of uninstalled\n\tlibtool libraries) precede installation and final -rpath directories.\n\t(func_emit_wrapper): Prepend $dllsearchpath to PATH before prepending\n\t$temp_rpath to $shlibpath_var; similar rationale as above.\n\tReported by Jon Turney <jon.turney@dronecode.org.uk>\n\n2010-09-17  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tDocument libtool variable to_host_file_cmd.\n\t* doc/libtool.texi (libtool script contents:to_host_file_cmd):\n\tDocument variable.\n\t(libtool script contents:to_tool_file_cmd): Prefer `build platform'\n\tto `build system'; Ditto `host platform'.\n\n2010-09-16  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tFix sh.test failure introduced in 72064249\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Avoid poor\n\tsyntax.\n\n2010-09-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\ttests: avoid localization failure due to unstable compiler messages.\n\t* tests/testsuite.at (LT_AT_NORMALIZE_COMPILER_OUTPUT):\n\tAttempt to normalize temporary file names in error messages.\n\tFixes 'localized compiler messages' test failure on Darwin when\n\tcreating fat (multi-ABI) libraries.\n\n2010-09-13  Peter Rosin  <peda@lysator.liu.se>\n\n\tPrefer $NM @file when the toolchain isn't native to $build.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Avoid calculating\n\tthe command line length and take the @file branch *if* the file\n\tnames needs to be converted for the toolchain and the @file\n\tbranch works.  Fixes problems in stresstest.at when doing a cross\n\tfrom Cygwin to MinGW using MinGW native tools (a.k.a. a \"faked\"\n\tcross), and for the specific case of MSVC on Cygwin it makes the\n\ttest pass.\n\n2010-09-15  Gary V. Vaughan  <gary@gnu.org>\n\n\tmaint: improve README instructions for fetching latest version.\n\t* README, README-alpha (Obtaining the Latest Sources): New\n\tsection, describing use of savannah repositories and bootstrap.\n\t* README.alpha (Reporting Bugs): Remove git instructions in\n\tfavour of a reference to the new `Obtaining the Latest Sources'\n\tsection.\n\n2010-09-14  Eric Blake  <eblake@redhat.com>\n\n\tmaint: ship .xz, not .lzma\n\t* configure.ac (AM_INIT_AUTOMAKE): Prefer better file format.\n\t* Makefile.maint (git-release, git-dist, prev-tarball)\n\t(new-tarball, diffs): Use correct extension.\n\t* HACKING: Update instructions.\n\t* .gitignore: Ignore .xz files.\n\n2010-09-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tdoc: avoid long lines in input and output, indexing fixes.\n\t* doc/libtool.texi (Linking libraries)\n\t(Module loaders for libltdl): Manually line-wrap examples, to\n\tavoid long lines.\n\t(Libltdl interface, User defined module data)\n\t(Module loaders for libltdl): Wrap long @deftypefun input lines\n\tusing trailing '@'.  Use @deftypefun rather than @deftp where\n\tappropriate, and add spaces in @deftypefun lines to fix the\n\tindex entries generated from these lines.\n\t(Cheap tricks): Use @smallexample rather than @example, to avoid\n\tlong lines.\n\n\tdocs: @file and @option markup fixes.\n\t* doc/libtool.texi (Creating object files, Linking libraries)\n\t(Linking executables, Link mode, Finish mode, Autoconf macros)\n\t(Using Automake, Inter-library dependencies, Dlpreopening)\n\t(Linking with dlopened modules, Finding the dlname)\n\t(Libltdl interface, Test descriptions, Multiple dependencies):\n\tAdd @option where needed, replace @samp with @file as\n\tappropriate.\n\n2010-09-12  Peter Rosin  <peda@lysator.liu.se>\n\n\t* .gitignore: Ignore *.obj files for MSVC (and w32 in general).\n\n\tAdjust to moved auxiliary files and add compile.\n\t* HACKING (Maintenance Notes): Adjust to moved files.  Add the\n\tcompile script.\n\t* Makefile.maint (fetch): Also fetch the compile script.\n\n2010-09-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\ttests: avoid empty AT_DATA contents, for zsh.\n\t* tests/libtoolize.at (libtoolize macro serial update)\n\t(libtoolize config files serial update, LIBTOOLIZE_OPTIONS):\n\tDo not create empty files with AT_DATA, the latter is documented\n\tto require a final newline.  Fixes testsuite failures with zsh\n\t4.3.10.\n\n2010-09-12  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tWhen assigning $linklib value, honor [-all]-static[-libtool-libs]\n\n\t* libltdl/config/ltmain.m4sh (func_mode_link): When prefer_static_libs\n\tand static library exists, ensure old_library name is used as $linklib.\n\tFixes failure on mingw when both static and shared libraries are\n\tpresent.\n\n2010-09-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\ttests: work around zsh use of $options variable.\n\t* tests/getopt-m4sh.at: Rename $options to $opts, the former is\n\tspecial for zsh 4.3.10.\n\n\tFix AC_NO_EXECUTABLES test failure on IRIX 6.5.\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS) [irix]: Cache result\n\tof link check for -Wl,-exported_symbol.\n\t* tests/no-executables.at (AC_NO_EXECUTABLES): Set\n\tlt_cv_irix_exported_symbol, to avoid link check.\n\n2010-09-12  J\u00fcrgen Reuter  <juergen.reuter@physik.uni-freiburg.de>  (tiny change)\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tInitial support for the NAG Fortran compiler on GNU/Linux.\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC) [linux] <nagfor>:\n\tNew set of entries, for NAG Fortran 5.1 and 5.2.\n\t* NEWS: Update.\n\n2010-09-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix getopt.m4sh to require Autoconf 2.62 or newer.\n\t* libltdl/config/getopt.m4sh (m4_version_prereq): Require 2.62,\n\tnot 2.61.\n\n2010-09-11  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tCorrect typo: $sharedlib_from_linklib_cmd missing '_cmd'\n\n\t* libltdl/config/ltmain.m4sh (func_generate_dlsyms): Fix obvious\n\ttypo, $sharedlib_from_linklib_cmd missing '_cmd'.\n\n2010-09-10  Peter Rosin  <peda@lysator.liu.se>\n\n\tConvert file name to toolchain format when invoking $NM.\n\t* libltdl/config/ltmain.m4sh (func_generate_dlsyms)\n\t(func_win32_libid, func_cygming_gnu_implib_p)\n\t(func_cygming_ms_implib_p): When using the name lister to find\n\tsymbols in files, convert the file names to a format appropriate\n\tfor the tool. Fixes testsuite issues in mdemo-static-make.test\n\tand mdemo-make.test when doing a cross from Cygwin/Wine to MinGW\n\tusing MinGW native tools (a.k.a. a \"faked\" cross).\n\n2010-09-09  Peter Rosin  <peda@lysator.liu.se>\n\n\tFix dependency tracking for MSYS/MinGW.\n\t* libltdl/config/ltmain.m4sh (func_to_tool_file): Add lazy\n\targument which allows the user to specify conversions that are\n\tnot desired.\n\t(func_mode_compile): Don't convert source files on MSYS, as\n\tMSYS does it for us. This fixes a regression introduced by\n\t\"Use func_to_tool_file instead of fix_srcfile_path\".\n\tReported by Charles Wilson.\n\n2010-09-08  Peter Rosin  <peda@lysator.liu.se>\n\n\tMention adjustment of naming of MSVC import libraries in NEWS.\n\t* NEWS: Mention the change in import library naming on MSVC.\n\n2010-09-07  Peter Rosin  <peda@lysator.liu.se>\n\n\tAdjust naming of MSVC import libraries.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [mingw, cygwin]\n\t[pw32, cegcc] <cl*, library_names_spec>: Adjust naming of the\n\timport library from foo-<major-version>.lib to foo.dll.lib, to\n\tavoid clashes with the static library for unversioned libraries.\n\t(_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG) [mingw, cygwin, pw32]\n\t[cegcc] <cl*, archive_expsym_cmds>: Explicitely name the import\n\tlibrary to match the above.\n\n\tFixup texi typo in previous.\n\t* doc/libtool.texi (libtool script content) <postlink_cmds>:\n\tAdd missing 'code' command.\n\n\tConvert POSIX file names to toolchain format for MSVC\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG)\n\t[cygwin, mingw, pw32, cegcc] <cl*, postlink_cmds>: Make\n\tsure the -outputresource: file name for the manifest tool is\n\tin w32 format.\n\t<cl*, archive_expsym_cmds>: Likewise for the MSVC command file\n\tcontaining the exports and the output file name.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Precalculate the\n\ttoolchain format of the output_objdir file name and store it in\n\tthe tool_output_objdir variable. Also replace any occurrence of\n\t@TOOL_OUTPUT@ in postlink_cmds with the toolchain version of the\n\t@OUTPUT@ content.\n\t* doc/libtool.texi (libtool script content): Update description\n\tof postlink_cmds to mention @TOOL_OUTPUT@.\n\n2010-09-06  Peter Rosin  <peda@lysator.liu.se>\n\n\tUse func_to_tool_file instead of fix_srcfile_path.\n\t* libltdl/config/ltmain.m4sh (func_mode_compile): Replace the\n\tfix_srcfile_path hook with a call to func_to_tool_file.\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS) [cygwin,mingw,pw32]\n\t[cegcc]: Drop fix_srcfile_path.\n\t* doc/libtool.texi (libtool script contents): Likewise.\n\t* NEWS: Mention that fix_srcfile_path has been replaced.\n\n\tConvert file names to toolchain format in $NM and $AR @files.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): When listing\n\tsymbols and when creating archives using command files (or\n\tresponse files), make sure that both the name of the command\n\tfile and the content are made up of file names in a format\n\tappropriate for the tool. Fixes stresstest.at on MSYS when\n\trun with low command line length.\n\n\tConvert file names to toolchain format when linking.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): When exporting\n\tsymbols and when linking using command files (or response\n\tfiles), make sure that both the name of the command file and\n\tthe content are made up of file names in a format appropriate\n\tfor the tool. Fixes problems in stresstest.at on MSYS when run\n\twith low command line length.\n\n\tAdd file name conversion from $build to toolchain.\n\t* configure.ac: Ensure to_tool_file_cmd is available to Makefile.\n\t* libltdl/m4/libtool.m4 (_LT_PATH_CONVERSION_FUNCTIONS): Add\n\tcache variable lt_cv_to_tool_file_cmd that describes how to\n\tconvert file names from $build to toolchain format.\n\t* libltdl/config/ltmain.m4sh (func_to_tool_file): New function\n\tthat utilizes the above.\n\t* Makefile.am: Ensure to_tool_file_cmd is included in\n\tTEST_ENVIRONMENT so that it is passed to (old testsuite) tests.\n\t* testsuite.at: Ensure to_tool_file_cmd is passed as a variable\n\tsetting on the configure line for (new testsuite) tests.\n\t* doc/libtool.texi (libtool script content): Update with\n\tto_tool_file_cmd description.\n\t(Cygwin to MinGW Cross): Update to mention lt_cv_to_tool_file_cmd.\n\n2010-09-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\ttests: avoid spurious test failure due to library mode on HP-UX.\n\t* tests/help.at (debug tracing): Use $lt_INSTALL not cp for\n\tinstall mode, the latter will not overwrite an existing library\n\twith mode 555.\n\n2010-09-01  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tPath conversion documentation\n\t* doc/libtool.texi (Platform quirks): Add new subsections\n\t'Cross compiling' and 'File name conversion'.\n\n2010-09-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\ttests: avoid spurious pic_flag test failure on HP-UX 10.20.\n\t* tests/pic_flag.at (override pic_flag at configure time):\n\tMatch HP-UX 10.20 cc warning about unknown options, to skip\n\tthe test.\n\n\ttests: fix localization test for GCC on HP-UX 11.00.\n\t* tests/localization.at (localized compiler messages): Be sure\n\tto switch the locale only for the actual compiler commands, so\n\twe don't pick up warnings from helper tools such as diff which\n\tmay not have the locale installed.\n\n\tAvoid leaking make flags into testsuite results.\n\t* tests/defs.m4sh: Unset MFLAGS, MAKEFLAGS, MAKELEVEL, __MKLVL__\n\tand MAKE_JOBS_FIFO.\n\t* tests/testsuite.at: Likewise.\n\tFixes warnings in test logs when the user uses 'make -jN check'\n\tand inner $MAKE invocations can't connect to the job server.\n\tFixes spurious failures of configure-iface.at and of\n\tdemo-noinst-link tests with BSD and Tru64 make if the user uses\n\t'make -k', as the exit status of the latter is not reliable.\n\n2010-09-01  Gary V. Vaughan  <gary@gnu.org>\n\n\tRemove announce-gen.m4sh and mailnotify.m4sh.\n\t* libltdl/config/announce-gen.m4sh: Removed.  This script has\n\tno apparent connection to libtool functionality, and mostly\n\tduplicates the better maintained gnulib announce-gen script.\n\t* libltdl/config/mailnotify.sh: Removed. This script was used\n\tby only clcommit.m4sh and announce-gen.m4sh, both of which are\n\tnow removed too.\n\t* Makefile.maint (announce-gen, libltdl/config/mailnotify):\n\tTargets removed.\n\t* bootstrap: Remove the mailnotify regeneration warning.\n\t* HACKING (Release Procedure): Remove references to\n\tannounce-gen.\n\t(Alpha release note template, Full release note template):\n\tReinstated from before announce-gen was introduced.\n\n\tRemove clcommit.m4sh.\n\t* clcommit.m4sh: Removed. This script was written to help keep\n\tChangeLog and commit messages in sync when committing to CVS,\n\tand is an anachronism now that Libtool uses git.\n\t* Makefile.maint (commit): Target removed.\n\t* bootstrap: Don't generate commit.\n\t* HACKING (Release Procedure): Adjusted.\n\n2010-08-31  Peter Rosin  <peda@lysator.liu.se>\n\n\tarchive-in-archive.at passes with Microsoft lib.\n\t* tests/archive-in-archive.at: Tighten test to check that the desired\n\tobject files are indeed part of the archive. Microsoft lib still\n\tpasses, so remove the expected failure for that case.\n\n\tDump archiver output to the log when testing @file support.\n\t* libltdl/m4/libtool.m4 (_LT_PROG_AR): Redirect stdout to config.log\n\twhen testing for @file support.\n\tSuggested by Ralf Wildenhues.\n\n\tSilence archiver output when testing @file support.\n\t* libltdl/m4/libtool.m4 (_LT_PROG_AR): Redirect stdout and stderr\n\tto the bit bucket when testing for @file support.\n\n2010-08-31  Gary V. Vaughan  <gary@gnu.org>\n\n\tRemove double `Generated from foo.m4sh' lines.\n\tWe now require a modern Autoconf to bootstrap libtool, which\n\twill add the `Generated by ...' boiler-plate automatically,\n\tso we can remove the hand-rolled @configure_input@\n\tsubstitutions we had been doing:\n\t* clcommit.m4sh, libtoolize.m4sh, tests/defs.sh,\n\tlibltdl/config/announce-gen.m4sh, libltdl/config/ltmain.m4sh,\n\tlibltdl/config/mailnotify.m4sh: Remove @configure_input@.\n\t* Makefile.am (edit): Remove configure_input substitution.\n\t(libtoolize, libltdl/config/ltmain.sh, libltdl/m4/ltversion.m4)\n\t(tests/defs): Don't set `$input' shell variable.\n\t* Makefile.maint (announce_gen, libltdl/config/mailnotify)\n\t(commit): Likewise.\n\n2010-08-31  Peter Rosin  <peda@lysator.liu.se>\n\n\tExtract the archive name from the .la file and use $AR (not ar).\n\t* Makefile.am: Pass AR through to the testsuite.\n\t* tests/archive-in-archive.at: Bump copyright year. Extract archive\n\tname from the .la file instead of hardcoding the name, and allow\n\tdifferent archivers. Also clarify that the tested functionality is\n\tcurrently broken.\n\n2010-08-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\ttests: skip -Wall -Werror with Tru64 cc in cwrapper test.\n\t* tests/cwrapper.at (cwrapper for uninstalled executables):\n\tUse a link test rather than a compile test to flesh out unknown\n\tcompiler flags starting with -W; Tru64/OSF1 cc will happily\n\taccept `-Wall -Werror' as indication to pass flags on to\n\tsubprocesses.\n\n\ttests: avoid getopt-m4sh failures when autom4te is not available.\n\t* tests/getopt-m4sh.at (_LT_AT_GETOPT_M4SH_SETUP):\n\tCheck $M4SH --version, skip on failure.\n\n\ttests: mark 'syntax of .la files' as XFAIL, expose failure.\n\t* tests/lalib-syntax.at (syntax of .la files): Assert that the\n\tstring returned by lt_dlerror after a failure is non-NULL, so\n\tthe failure shows up on systems other than Solaris.  Mark test\n\tas expected to fail.\n\tSuggested by Bob Friesenhahn.\n\n2010-08-30  Eric Blake  <eblake@redhat.com>\n\n\tSimplify recent configure quoting portability workaround.\n\t* configure.ac: Simplify setting of timestamp_string.\n\n2010-08-30  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tUpdate path conversion warning messages\n\t* libltdl/config/ltmain.m4sh (func_convert_file_check): Update\n\tcomments and warning message.\n\t(func_convert_path_check): Update warning message.\n\n2010-08-29  Peter Rosin  <peda@lysator.liu.se>\n\n\tFix typo when renaming path conversion functions.\n\t* tests/testsuite.at: Ensure to_host_file_cmd is passed as a\n\tvariable setting on the configure line for (new testsuite) tests.\n\n2010-08-29  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tSupport GCC LTO on GNU/Linux.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Allow through\n\tflags matching -O*, -flto*, -fwhopr, -fuse-linker-plugin.\n\t* libltdl/m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS): Drop symbols\n\tstarting with __gnu_lto.\n\t(_LT_LINKER_SHLIBS) [linux] <archive_cmds, archive_expsyms_cmds>:\n\tAdd $pic_flag for GCC.\n\t(_LT_LANG_CXX_CONFIG) [linux] <archive_cmds, archive_expsyms_cmds>:\n\tLikewise.\n\t(_LT_SYS_HIDDEN_LIBDEPS): Ignore files matching *.lto.o.\n\t* NEWS: Update.\n\n\tDisable GCC LTO for verbose library extraction.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_HIDDEN_LIBDEPS): Temporarily\n\tappend -fno-lto or -fno-whopr to CFLAGS if CC or CFLAGS (which\n\tare substituted with the per-language variables here) contain\n\t-flto or match -fwhopr*, respectively.\n\n\tSave and restore CFLAGS properly inside libtool.m4 macros.\n\t* libltdl/m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS): Use different\n\ttemporary variables for saved and restored values of $LIBS,\n\t$CFLAGS, to avoid overlap with the *_CONFIG macros.\n\t(_LT_LANG_CXX_CONFIG, _LT_LANG_F77_CONFIG, _LT_LANG_FC_CONFIG)\n\t(_LT_LANG_GCJ_CONFIG, _LT_LANG_RC_CONFIG): Also save and restore\n\t$CFLAGS, and override it with per-language flags, so that in\n\tcase output_verbose_link_cmd uses $CFLAGS, the right flags are\n\tused.\n\n\tWork around yet another shell quoting portability issue.\n\t* configure.ac: Avoid nonportable quoted alternate variable\n\tvalue in unquoted here document, so Solaris 10 sh and Tru64\n\tksh do not print spurious extra quotes.\n\n\tSilence order-only configure test for AIX make.\n\t* configure.ac: Also drop standard output, for AIX 5.1 make.\n\n2010-08-28  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tMinor sysroot fixups.\n\t* libltdl/m4/libtool.m4 (_LT_WITH_SYSROOT): Fix typo.\n\t* tests/sysroot.at: Search also for crt0.o to accommodate cygwin.\n\n2010-08-28  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t[cygwin|mingw|cross-compile]: Path conversion support.\n\t* configure.ac: Ensure to_host_file_cmd is available to Makefile.\n\t* TODO: Document QoI issue with file name conversion functions.\n\t* libltdl/m4/libtool.m4 (_LT_PATH_CONVERSION_FUNCTIONS): New function\n\tsets libtool variable $to_host_file_cmd, and employs cache.\n\t(_LT_SETUP): Require it.\n\t* tests/testsuite.at: Ensure to_host_file_cmd is passed as a\n\tvariable setting on the configure line for (new testsuite) tests.\n\t* Makefile.am (TESTS_ENVIRONMENT): Ensure to_host_file_cmd is\n\tincluded so that it is passed to (old testsuite) tests.\n\t* libltdl/config/general.m4sh: Define $lt_sed_naive_backslashify here.\n\t* libltdl/config/ltmain.m4sh ($to_host_file_cmd, $to_host_path_cmd):\n\tNew variables.\n\t(func_cygpath): New function.\n\t(func_init_to_host_path_cmd): New function.\n\t(func_to_host_path): Renamed to...\n\t(func_to_host_file): Refactored to... (now uses $to_host_file_cmd).\n\t(func_convert_core_file_wine_to_w32): Here. New function.\n\t(func_convert_core_msys_to_w32): Here. New function.\n\t(func_convert_file_check): Here. New function.\n\t(func_convert_file_noop): Here. New function.\n\t(func_convert_file_msys_to_w32): Here. New function.\n\t(func_convert_file_cygwin_to_w32): Here. New function.\n\t(func_convert_file_nix_to_w32): Here. New function.\n\t(func_convert_file_msys_to_cygwin): New function.\n\t(func_convert_file_nix_to_cygwin): New function.\n\t(func_to_host_pathlist): Renamed to...\n\t(func_to_host_path): Refactored to... (now uses $to_host_path_cmd\n\tand func_init_to_host_path_cmd).\n\t(func_convert_path_check): Here. New function.\n\t(func_convert_path_front_back_pathsep): Here. New function.\n\t(func_convert_core_path_wine_to_w32): Here. New function.\n\t(func_convert_path_noop): Here. New function.\n\t(func_convert_path_msys_to_w32): Here. New function.\n\t(func_convert_path_cygwin_to_w32): Here. New function.\n\t(func_convert_path_nix_to_w32): Here. New function.\n\t(func_convert_path_msys_to_cygwin): New function.\n\t(func_convert_path_nix_to_cygwin): New function.\n\n2010-08-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix symlist variable path to use _WIN32 instead of __WINDOWS__.\n\t* libltdl/config/ltmain.m4sh, libltdl/libltdl/lt_system.h,\n\tlibltdl/m4/libtool.m4, tests/demo/foo.h, tests/pdemo/foo.h:\n\tChange __WINDOWS__ to _WIN32.\n\tReport by Charles Wilson.\n\n\tAdd $pic_flag to archive_cmds and archive_expsym_cmds.\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS)\n\t<archive_cmds, archive_expsym_cmds>\n\t[GNU ld, netbsd]: Add $pic_flag if ELF.\n\t[GNU ld, solaris]: Likewise.\n\t[GNU ld, default case]: Likewise.\n\t[!GNU ld, freebsd, dragonfly]: Add $pic_flag.\n\t[!GNU ld, GCC, hpux9]: Add $pic_flag.\n\t[!GNU ld, GCC, hpux10]: Replace -fPIC with $pic_flag\n\t[!GNU ld, GCC, hpux11, !hppa*64]: Replace -fPIC with $pic_flag.\n\t[!GNU ld, GCC, irix5, irix6, nonstopux]: Add $pic_flag.\n\t[!GNU ld, GCC, osf4, osf5]: Likewise.\n\t[!GNU ld, GCC, solaris]: Likewise.\n\t(_LT_LANG_CXX_CONFIG) <archive_cmds, archive_expsym_cmds>\n\t[hpux9]: Add $pic_flag if $GXX.\n\t[hpux10, hpux11, !hppa*64]: Replace -fPIC with $pic_flag.\n\t[irix5, irix6]: Add $pic_flag if $GXX.\n\t[osf4, osf5]: Likewise.\n\t[solaris]: Add $pic_flag if $GXX and not GCC 2.7.\n\n\tUniform const'ness of symlist variable lt_preloaded_symbols.\n\tOn some systems, lt_preloaded_symbols may not be declared\n\tconst due to relocation issues.  C99 requires qualification to\n\tmatch for compatible declarations, so ensure we declare\n\tconst'ness in the same way everywhere; link-time optimization\n\tmay otherwise rightfully complain about inconsistencies.\n\tSince ltdl.h may not depend upon config.h, rely on system\n\tdefines for choosing const'ness.\n\t* NEWS: Update.\n\t* doc/libtool.texi (Dlpreopening): Document this issue.\n\t* libltdl/config/ltmain.m4sh (func_generate_dlsyms):\n\t[__WINDOWS__, __CYGWIN__, _WIN32_WCE]: Define LT_DLSYM_CONST\n\taccording to system defines.  Remove old shell cruft.  Use\n\tLT_DLSYM_CONST for lt_${my_prefix}_LTX_preloaded_symbols.\n\t* libltdl/libltdl/lt_system.h (LT_DLSYM_CONST): Likewise,\n\tdefine LT_DLSYM_CONST according to system defines.\n\t* tests/demo/foo.h (LT_DLSYM_CONST): Likewise.\n\t* tests/pdemo/foo.h (LT_DLSYM_CONST): Likewise.\n\t* tests/demo/dlmain.c (lt_dlsymlist): Use LT_DLSYM_CONST.\n\t* tests/pdemo/longer_file_name_dlmain.c (lt_dlsymlist):\n\tLikewise.\n\t* libltdl/m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS): Likewise\n\tfor configure test code.\n\t* libltdl/ltdl.c (preloaded_symbols): Use LT_DLSYM_CONST.\n\t* libltdl/ltdl.h (LTDL_SET_PRELOADED_SYMBOLS): Likewise.\n\n2010-08-28  Dave Korn  <dave.korn.cygwin@googlemail.com>\n\n\tEnsure cwrapper magic string is not optimized away.\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src):\n\tDeclare MAGIC_EXE as volatile.\n\tReport by Charles Wilson.\n\n2010-08-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix quoting in non-XSI func_xform, for IRIX sh.\n\t* libltdl/config/ltmain.m4sh (func_xform): Remove spurious extra\n\tM4 quotes.\n\n\tFix response file test for unreliable exit status of IRIX ar.\n\t* libltdl/m4/libtool.m4 (_LT_PROG_AR): IRIX ar will not fail\n\tover a command-line argument specifying a nonexistent file (such\n\tas `@FILE'), so ensure failure with a reponse file containing\n\ta nonexistent file.  Also, use lt_* variable prefix for\n\ttemporary variables.\n\n\tFix AC_LANG_PROGRAM warnings from git Autoconf.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_MODULE_PATH_AIX): Fix\n\tunderquoted AC_LANG_PROGRAM call.\n\t(LT_PROG_AR): Use AC_LANG_PROGRAM.\n\t(_LT_LINKER_SHLIBS) [irix, GCC]: Use the right source for the\n\tgiven language.\n\t* NEWS: Update.\n\n2010-08-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tfix AIX testsuite regression\n\t* libltdl/config/ltmain.m4sh (func_resolve_sysroot): Partly\n\trevert v2.2.10-83-gc45a288: Do not absolutize path here, only do\n\tsysroot replacement.\n\t(func_mode_link): Adjust.\n\n2010-08-22  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tfix --mode=finish\n\t* libltdl/config/ltmain.m4sh (func_mode_finish): Invert then/else\n\tblocks of the \"if $opt_dry_run\" conditional.\n\n2010-08-15  Paolo Bonzini  <bonzini@gnu.org>\n\n\timprove code for sysroot --mode=finish\n\t* libltdl/config/ltmain.m4sh (func_mode_finish): Change sysroot_regex\n\tand sysroot_cmd delimiter from pipe to slash.  Wrap the entire for\n\tloop with \"if $opt_dry_run...fi\" and print an explanatory message\n\tfor the --dry-run case.\n\n2010-08-12  Paolo Bonzini  <bonzini@gnu.org>\n\n\tadd libtool --mode=finish mode for sysroot\n\t* doc/libtool.texi (Finish mode): Document behavior when *.la files\n\tare passed.\n\t* libltdl/config/ltmain.m4sh (func_mode_finish): Eliminate sysroot\n\tor `=' signs representing it from files in $libs.\n\t* tests/sysroot.at (SYSROOT_TESTS): Test for presence of sysroot\n\treferences before running libtool --mode=finish, and for absence\n\tafterwards.\n\n\treorganize parsing of --mode=finish arguments\n\t* libltdl/config/ltmain.m4sh (func_mode_finish): Split arguments for\n\tdirectories and *.la files.\n\n\tfix sysroot handling for deplibs of preopened libtool libs\n\t* libltdl/config/ltmain.m4sh: Pass $dependency_libs of preopened libtool\n\tthrough func_resolve_sysroot.\n\n\tfix sysroot tests to pass on Fedora 13\n\t* tests/sysroot.at: Link $prefix/include into the sysroot as well, as\n\trequired by newer GCC.\n\n2010-07-29  Paolo Bonzini  <bonzini@gnu.org>\n\n\tinitial version of the NEWS entry\n\t* NEWS: Document sysroot support.\n\n\tadd sysroot test\n\t* Makefile.am (TESTSUITE_AT): Add tests/sysroot.at.\n\t* tests/sysroot.at: New.\n\n\temit sysrooted paths when installing .la files\n\t* libltdl/config/ltmain.m4sh (func_replace_sysroot): New.\n\t(func_mode_link): Prepend paths in $libdir with the sysroot.  Further,\n\treplace the sysroot with = (using func_replace_sysroot) whenever\n\tsuch a path is written in a .la file.\n\n\tprocess postdeps to include sysrooted paths\n\t* libltdl/m4/libtool.m4 (_LT_FUNC_STRIPNAME_CNF): New (from Charles Wilson).\n\t(_LT_SYS_HIDDEN_LIBDEPS): Require it.  Use func_stripname_cnf to convert\n\tsysroot (-L= and -R=) usage in postdeps.  Adjust the code because -L, -R\n\tand -l flags will now always be separated from the rest of the argument.\n\n\thandle sysrooted paths when reading dependencies to la files\n\t* libltdl/config/ltmain.m4sh (func_mode_execute, func_mode_install,\n\tfunc_mode_link): Whenever a .la file occurs in another .la file,\n\texpand the sysroot path in it.\n\n2010-07-28  Paolo Bonzini  <bonzini@gnu.org>\n\n\tteach libtool -L= and -R=\n\t* libltdl/config/ltmain.m4sh (func_resolve_sysroot): New.\n\t(func_mode_link): Always pass result of stripping -L and -R to\n\tfunc_resolve_sysroot before using it.  Remove absolute path expansion\n\twhen func_resolve_sysroot subsumes it.  Expand sysroot in -rpath.\n\tWhen processing dependent libraries also resolve sysroot paths there.\n\n\tadd --with-sysroot\n\t* libltdl/m4/libtool.m4 (_LT_HOST_NONCANONICAL, _LT_WITH_SYSROOT): New.\n\t(LT_SETUP): Require _LT_WITH_SYSROOT.\n\n\thandle sysroot flags\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Recognize --sysroot\n\toption.\n\n2010-08-27  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* NEWS: Only bootstrapping needs new Automake and Autoconf.\n\n\tcheck-interactive and check-noninteractive for both testsuites.\n\t* Makefile.am (COMMON_TESTS, TESTS): Split into ...\n\t(NONINTERACTIVE_TESTS, INTERACTIVE_TESTS): ... these new\n\tvariables.\n\t(check-interactive-new): Rename from check-interactive.\n\t(check-noninteractive-new): Rename from check-noninteractive.\n\t(check-interactive-old, check-noninteractive-old): New targets.\n\t(check-interactive, check-noninteractive): Depend on the\n\trespective targets for the old and the new test suites.\n\t* doc/libtool.texi (Test descriptions): Simplify description\n\tabout check-interactive and check-noninteractive.  Add index\n\tentries.\n\n\tAdjust docs for renaming and for parallel-tests.\n\t* README: Update example TESTS setting.\n\t* README.alpha: Likewise.\n\t* doc/libtool.texi (Test descriptions): Update for test renaming,\n\tadjust descriptions accordingly.\n\n\tUpdate VERBOSE handling for parallel-tests driver.\n\t* tests/defs.m4sh: Default to verbose output, drop now-unneeded\n\thandling of 'VERBOSE=no'.\n\t* README: Update example usage.\n\t* README.alpha: Likewise.\n\t* doc/libtool.texi (Test descriptions, When tests fail): Remove\n\tunneeded VERBOSE recommendations.  Point to per-test log files\n\tand test-suite.log summary file.\n\n\tEnable parallel-tests test driver for the old testsuite.\n\t* configure.ac: New configure test to find out whether `make'\n\tsupports order-only prerequisites; set @ORDER@ accordingly.\n\t(AM_INIT_AUTOMAKE): Enable parallel-tests option.\n\t* tests/defs.m4sh (prefix): Derive install prefix for tests\n\tfrom the test name, to avoid clashes.\n\t* Makefile.am (CXX_TESTS, F77_TESTS, FC_TESTS, COMMON_TESTS):\n\tReformat.  Adjust for renamed tests.  Add dependencies between\n\tthe respective log files of the tests, to ensure proper ordering.\n\tUse order-only dependencies if possible, between test groups that\n\tuse the same directory.\n\t(clean-local-legacy): Remove `_inst-*' directories as well.\n\tPrompted by suggestion from Bob Friesenhahn.\n\n\tNew alias scripts for old tests run more than once.\n\t* tests/cdemo-shared-exec.test, tests/cdemo-shared-make.test,\n\ttests/cdemo-static-exec.test, tests/cdemo-static-make.test,\n\ttests/cdemo-undef-exec.test, tests/cdemo-undef-make.test,\n\ttests/demo-nofast-exec.test, tests/demo-nofast-inst.test,\n\ttests/demo-nofast-make.test, tests/demo-nofast-unst.test,\n\ttests/demo-nopic-exec.test, tests/demo-nopic-make.test,\n\ttests/demo-pic-exec.test, tests/demo-pic-make.test,\n\ttests/demo-shared-exec.test, tests/demo-shared-inst.test,\n\ttests/demo-shared-make.test, tests/demo-shared-unst.test,\n\ttests/demo-static-exec.test, tests/demo-static-inst.test,\n\ttests/demo-static-make.test, tests/demo-static-unst.test,\n\ttests/depdemo-nofast-exec.test, tests/depdemo-nofast-inst.test,\n\ttests/depdemo-nofast-make.test, tests/depdemo-nofast-unst.test,\n\ttests/depdemo-shared-exec.test, tests/depdemo-shared-inst.test,\n\ttests/depdemo-shared-make.test, tests/depdemo-shared-unst.test,\n\ttests/depdemo-static-exec.test, tests/depdemo-static-inst.test,\n\ttests/depdemo-static-make.test, tests/depdemo-static-unst.test,\n\ttests/f77demo-shared-exec.test, tests/f77demo-shared-make.test,\n\ttests/f77demo-static-exec.test, tests/f77demo-static-make.test,\n\ttests/fcdemo-shared-exec.test, tests/fcdemo-shared-make.test,\n\ttests/fcdemo-static-exec.test, tests/fcdemo-static-make.test,\n\ttests/mdemo-shared-exec.test, tests/mdemo-shared-inst.test,\n\ttests/mdemo-shared-make.test, tests/mdemo-shared-unst.test,\n\ttests/mdemo-static-exec.test, tests/mdemo-static-inst.test,\n\ttests/mdemo-static-make.test, tests/mdemo-static-unst.test,\n\ttests/tagdemo-shared-exec.test, tests/tagdemo-shared-make.test,\n\ttests/tagdemo-static-exec.test, tests/tagdemo-static-make.test,\n\ttests/tagdemo-undef-exec.test, tests/tagdemo-undef-make.test:\n\tNew files.\n\n\tRequire Automake 1.11.1 for Libtool, enable color-tests.\n\t* configure.ac (AM_INIT_AUTOMAKE): Require 1.11.1.  Enable\n\tcolor-tests.\n\t(LTDL_SUBDIR_LIBOBJS): Remove now-obsolete conditional and\n\tfeature test for Autoconf 2.59 and Automake 1.9.x workaround.\n\t* Makefile.am: Simplify accordingly.\n\t* bootstrap: Remove obsolete WORKING_LIBOBJ_SUPPORT workarounds\n\tfor Autoconf 2.59 and Automake 1.9.6.\n\n2010-08-23  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tFix syntax for cygwin-cross\n\tlibltdl/m4/argz.m4: Add quotes around variable, which\n\tmay contain the multiword value 'guessing no'.\n\n2010-08-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tconfigure: use Autobuild AB_INIT if available.\n\t* configure.ac: Call AB_INIT if it is defined, with\n\t$autobuild_mode as argument, to be set at configure time.\n\tSet AB_VERSION to the Libtool version string.\n\t* HACKING: Update.\n\n\tFix getopt tests to skip with Autoconf < 2.61.\n\t* tests/getopt-m4sh.at (_LT_AT_GETOPT_M4SH_SETUP): Skip the test\n\tif 'autom4te --language=m4sh' exits 63 because version 2.61 is\n\trequired.  Allows the testsuite to complete successfully with\n\tAutoconf 2.59 and Automake 1.9.6.\n\n\tTidy and fix clean and distclean rules for old testsuite.\n\t* Makefile.am (clean-local-legacy): Use $(CONF_SUBDIRS) instead\n\tof hard-coding the list of test directories.  Use\n\t$(AM_MAKEFLAGS).\n\t(fake-distclean-legacy): New phony rule, to create fake Makefile\n\tfiles if needed so that the automake-generated\n\tdistclean-recursive rule can work properly.\n\t(distclean_recursive): New helper variable.\n\t(distclean-recursive): Depend on fake-distclean-legacy.\n\n2010-08-22  Paolo Bonzini  <bonzini@gnu.org>\n\n\tFix sed_make_literal_regex.\n\t* libltdl/config/general.m4sh (sed_make_literal_regex): Fix\n\tdefinition.\n\n2010-08-15  Paolo Bonzini  <bonzini@gnu.org>\n\n\tFactor the sed command used to make a regex from a literal.\n\t* libltdl/config/general.m4sh (sed_make_literal_regex): New.\n\t* libltdl/config/ltmain.m4sh\n\t(func_cygming_dll_for_implib_fallback_core): Use it.  Suggested\n\tby Ralf Wildenhues.\n\n2010-08-21  Rainer Tammer <tammer@tammer.net>  (tiny change)\n\n\tAvoid issues with AIX resident shared libraries in old testsuite.\n\t* tests/defs.m4sh [aix]: Remove file mode permission for others,\n\tso shared libraries are not kept in memory after execution.\n\tFixes failures of repeated mdemo-inst.test with on AIX 5.3.\n\n2010-08-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tSkip part of versioning test on AIX.\n\t* tests/versioning.at (versioning): The AIX linker always\n\trecords the unversioned library name, even with runtimelinking,\n\tso skip the execution test for the incompatibly upgraded\n\tlibrary.\n\tReport by Rainer Tammer.\n\n\tRemove dead code from versioning test.\n\t* tests/versioning.at (versioning): No need to build unused\n\tprog3.\n\n2010-08-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tDon't hide the table of contents in the manual.\n\t* doc/libtool.texi: Move the table of contents to the beginning.\n\tPrompted by patch from Bruno Haible against Automake.\n\n\tRemove superfluous dependency in Makefile.am.\n\t* Makefile.am (tests/demo-conf.test): Remove dependency on\n\tlibtool, this test is a primary source and not generated.\n\n\tBump copyright years in manual.\n\t* doc/libtool.texi: Bump copyright years.\n\n2010-08-13  Peter Rosin  <peda@lysator.liu.se>\n\n\tAllow the use of a listing file if the archiver supports it.\n\t* libltdl/m4/libtool.m4 (_LT_CMD_OLD_ARCHIVE): Move detection\n\tof a suitable archiver...\n\t(_LT_PROG_AR): ...to here. New macro, also detect if the\n\tarchiver supports a listing file with the new variable\n\tarchiver_list_spec.\n\t* libltdl/config/ltmain.m4sh: If the archiver supports a listing\n\tfile, use it when max_cmd_len is exceeded.  This is needed for\n\ttool chains such as MSVC which do not support piece by piece\n\tlinking (-r -o).\n\t* doc/libtool.texi (libtool script contents): Update with\n\tarchiver_list_spec description.\n\n2010-08-10  Gary V. Vaughan  <gary@gnu.org>  (tiny change)\n\n\tMake testsuite compatible with Autoconf 2.62 again.\n\t* tests/getopt-m4sh.at (AT_CHECK): Autotest 2.62 chokes on unquoted\n\t'#' in AT_CHECK, so replace all uses with '@%:@' quadrigraph.\n\tSuggested by Eric Blake <eblake@redhat.com>\n\tReported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n2010-08-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix more problematic code from \"Add func_append_quoted and do...\"\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Revert back\n\tfunc_append instances that as assignments relied on the shell\n\tnot performing word splitting on the right hand side of the\n\tassignment.\n\n\tFix another typo on \"Add func_append_quoted and do...\"\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Fix regression in\n\tcomputation of finalize_rpath introduced in v2.2.10-40-g0da7d80,\n\tfixing several testsuite failures on AIX.\n\tReport by Rainer Tammer.\n\n2010-08-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAvoid unwanted error message in configure output.\n\t* libltdl/m4/libtool.m4 (_LT_PROG_ECHO_BACKSLASH): Try print\n\tin subshell, so eventual `print: not found' is hidden reliably.\n\n\tFix compilation of program sources on AIX.\n\t* tests/lt_dlopenext.at (lt_dlopenext error messages): Do not\n\tuse $LIBTOOL when compiling plain object, AIX by default does\n\tnot enable static archives.\n\t* tests/ltdl-libdir.at (libdir of installed modules): Likewise.\n\tReport by Rainer Tammer.\n\n\tDo not call toplevel configure in non-VPATH build.\n\t* tests/deplibs-mingw.at (deplibs without file command): Use\n\tLT_AT_CONFIGURE for consistency, update comment about why it\n\tmight fail.\n\t* tests/pic_flag.at (override pic_flag at configure time): Skip\n\ttest if we are building in-tree.\n\tReport by Rainer Tammer.\n\n\tAllow running pic_flag test with different shell.\n\t* tests/testsuite.at (LT_AT_CONFIGURE): Accept optional second\n\targument specifying the configure script to run.\n\t* tests/pic_flag.at (override pic_flag at configure time):\n\tUse LT_AT_CONFIGURE.\n\n\tEnsure not to reverse preserving of --debug for relinking/finish.\n\t* libltdl/config/ltmain.m4sh (func_check_version_match): Only\n\tpreserve '--debug' switch if $opt_debug is not equal to ':'.\n\t* tests/help.at (debug tracing): New test group.\n\tReport by Rainer Tammer.\n\n2010-08-06  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix AC_NO_EXECUTABLES test failure on AIX.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_MODULE_PATH_AIX): Wrap link\n\ttest in AC_CACHE_VAL, using cache variable $lt_cv_aix_libpath.\n\t* tests/no-executables.at (AC_NO_EXECUTABLES): Preset it, to\n\tavoid link test.\n\tBug report by Rainer Tammer.\n\n\tFix ltdl-libdir test for C++ compilers.\n\t* tests/ltdl-libdir.at (libdir of installed modules): Declare\n\tmodule function as extern \"C\".\n\n2010-08-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tLet `libtool' without arguments point to `--help' again.\n\t* libltdl/config/ltmain.m4sh (func_check_version_match):\n\tRemove duplicate and wrong error check.\n\t* tests/help.at (standard command line options): Extend test.\n\tReport by Rainer Tammer.\n\n\tAvoid syntax error due to shift of nonexistent parameter.\n\t* libltdl/config/ltmain.m4sh <command-line handling>: Only shift\n\tif there is a positional parameter to shift.  Fixes `libtool\n\t--help' when dash is used.\n\tReport by Rainer Tammer.\n\n\tFix testsuite errors due to shell quoted parameter expansion issue.\n\t* tests/getopt-m4sh.at (_LT_AT_GETOPT_M4SH_SETUP): Insert space\n\tbetween double-quoted and unquoted shell parameter, as bash\n\t4.0.28 doesn't add one in its output if the expansion of the\n\tsecond one starts with a space.\n\t(short option splitting, enhanced shell short option splitting)\n\t(long option splitting, XSI long option splitting): Add space in\n\texpected output.\n\tFixes testsuite failures on AIX, FreeBSD, etc.\n\tReport by Rainer Tammer.\n\n2010-08-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix build failure with AIX sh due to shell quoting error.\n\t* libltdl/config/ltmain.m4sh (func_append_quoted): Document\n\tthat this function inserts a separator space.\n\t(func_mode_compile): Do not pass extra space here.\n\tFixes regression introduced in v2.2.10-49-gc13532a.\n\tReport by Rainer Tammer.\n\n2010-08-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix pic_flag test unportabilities.\n\t* tests/pic_flag.at (override pic_flag at configure time): Skip\n\ttest if the compiler produces a warning containing `fpic'.\n\tDo not use nonportable `grep -e', for Solaris.\n\tReport by Charles Wilson.\n\n2010-08-01  Paolo Bonzini  <bonzini@gnu.org>\n\n\tFix bug in postdeps computation\n\t* libltdl/m4/libtool.m4 (_LT_SYS_HIDDEN_LIBDEPS): Actually\n\tconcatenate $prev and $p.\n\n2010-07-26  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tDon't always skip XSI tests\n\t* tests/getopt-m4sh.at: Use new signature as implemented by\n\tde8a0992b21b76a13c302cf48588ad5f6042595c, when determining\n\twhether to test Extended-shell functions.\n\n2010-07-18  Peter Rosin  <peda@lysator.liu.se>\n\n\t* tests/stresstest.at: Link with main.lo when liba is shared\n\tand linking main with -no-install.\n\n2010-07-18  Peter Rosin  <peda@lysator.liu.se>\n\n\t* tests/stresstest.at [MSVC]: dllimport all imported\n\tvariables.\n\n2010-07-17  Peter Rosin  <peda@lysator.liu.se>\n\n\tdllimport the variable for MSVC in link-order.at\n\t* tests/link-order.at [MSVC]: Makes the test pass by dllimporting\n\timported variables when working with shared libraries.\n\n2010-07-08  Peter Rosin  <peda@lysator.liu.se>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tMake preloading heed libname_spec.\n\tFixes testsuite failure for lt_dladvise.at on MSYS/MSVC.\n\t* libltdl/ltdl.c (libprefix): New static variable describing\n\tthe prefix of static archives.\n\t(try_dlopen): Use libprefix.\n\t* libltdl/m4/ltdl.m4 (_LTDL_SETUP): Export prefix of static\n\tarchives to config.h. Also fix assignment of LTDLOPEN to be more\n\tefficient and less error prone while at it.\n\n2010-07-08  Gary V. Vaughan  <gary@gnu.org>\n\n\tRename _LT_PROG_XSI_REPLACE macro to _LT_PROG_FUNCTION_REPLACE.\n\t* libltdl/m4/libtool.m4 (_LT_PROG_XSI_SHELLFNS): Rename to\n\t_LT_PROG_REPLACE_SHELLFNS.\n\t(_LT_PROG_XSI_REPLACE): Rename to _LT_PROG_FUNCTION_REPLACE.\n\t(_LT_PROG_FUNCTION_REPLACE): Change decorator comment to use\n\t'Extended shell' rather than 'XSI' on successful replacement.\n\t* libltdl/config/general.m4sh (func_dirname, func_basename)\n\t(func_dirname_and_basename, func_stripname): Change decorator\n\tcomment to use 'extended shell' rather than 'XSI' on fallback\n\timplementations.\n\t* libltdl/config/getopt.m4sh (func_split_short_opt)\n\t(func_split_long_opt): Ditto.\n\t* libltdl/config/ltmain.m4sh (func_append, func_append_quoted)\n\t(func_arith, func_len, func_lo2o, func_xform): Ditto.\n\t* tests/getopt-m4sh.at (_LT_AT_XSI_FUNC_EXTRACT): Rename to\n\t_LT_AT_EXTENDED_SHELL_FUNC_EXTRACT.\n\t(_LT_AT_EXTENDED_SHELL_FUNC_EXTRACT): Change regular expression to\n\tmatch new replacable function decorator comments.\n\n2010-07-08  Peter Rosin  <peda@lysator.liu.se>\n\n\tOptimize assignment of output_la.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Save two fork/exec\n\tinstances.\n\tReport by Ralf Wildenhues.\n\n2010-07-08  Gary V. Vaughan  <gary@gnu.org>\n\n\tFix a cut-n-pasto in \"2010-07-07 Charles Wilson\" patch.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Remove spurious\n\tvariable dereference.\n\n2010-07-07  Gary V. Vaughan  <gary@gnu.org>\n\n\tTidy m4 comment header underline.\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_SHAREDLIB_FROM_LINKLIB): Make\n\tsure hyphens in function name comment header underline line up.\n\n2010-07-07  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t[cygwin|mingw] fix dlpreopen with --disable-static\n\t* libltdl/config/general.m4sh (func_tr_sh): New function.\n\t* libltdl/config/ltmain.m4sh (func_generate_dlsyms) [cygwin|mingw]:\n\tObtain DLL name corresponding to import library by using value\n\tstored in unique variable libfile_$(transliterated implib name).\n\tIf that fails, use $sharedlib_from_linklib_cmd to extract DLL\n\tname from import library directly. Also, properly extract dlsyms\n\tfrom the import library.\n\t(func_mode_link) [cygwin|mingw]: Prefer to dlpreopen DLLs\n\tover static libs when both are available.  When dlpreopening\n\tDLLs, use linklib (that is, import lib) as dlpreopen file,\n\trather than DLL. Store name of associated la file in\n\tunique variable libfile_$(transliterated implib name)\n\tfor later use.\n\t(func_win32_libid): Accomodate pei-i386 import libs\n\tas well as pe-i386.\n\t(func_cygming_dll_for_implib): New function.\n\t(func_cygming_dll_for_implib_fallback): New function.\n\t(func_cygming_dll_for_implib_fallback_core): New function.\n\t(func_cygming_gnu_implib_p): New function.\n\t(func_cygming_ms_implib_p): New function.\n\t* libltdl/m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS): Adjust sed\n\texpressions for lt_cv_sys_global_symbol_to_c_name_address and\n\tlt_cv_sys_global_symbol_to_c_name_address_lib_prefix\n\tas trailing space after module name is optional.\n\t(_LT_LINKER_SHLIBS) [cygwin|mingw][C++]:\n\tSet exclude_expsyms correctly for $host. Simplify regular\n\texpression in export_symbols_cmds.\n\t(_LT_LINKER_SHLIBS) [cygwin|mingw|pw32][C]: Set exclude_expsyms\n\tcorrectly for $host. Enable export_symbols_cmds to identify\n\tDATA exports by _nm_ prefix.\n\t(_LT_CHECK_SHAREDLIB_FROM_LINKLIB): New macro sets\n\tsharedlib_from_linklib_cmd variable.\n\t(_LT_DECL_DLLTOOL): New macro ensures DLLTOOL is always set.\n\n2010-07-05  Peter Rosin  <peda@lysator.liu.se>\n\n\t* tests/export.at [MSVC]: dllimport all imported variables.\n\n2010-07-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\t    Peter Rosin  <peda@lysator.liu.se>\n\n\tSupport for response files with $NM.\n\t* libltdl/m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS)\n\t<nm_file_list_spec>: New tag variable. Set it to '@' if input\n\tfiles can be passed to $NM in a file named with the '@' option.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): When\n\tnm_file_list_spec is nonempty, use it to avoid skipped_export.\n\t* doc/libtool.texi (libtool script contents): Document\n\tnew variable.\n\n2010-07-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix ccache test for MSVC.\n\t* tests/static.at (ccache -all-static): Ignore compiler stderr.\n\tReported by Peter Rosin.\n\n2010-07-03  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\tAvoid false failures caused by filesystem interaction\n\t* tests/dlloader-api.at (dlloader API): Use uglified names for\n\tpseudo-modules.\n\n2010-07-03  Peter Rosin  <peda@lysator.liu.se>\n\n\tFix typo in \"Add func_append_quoted and do...\"\n\t* libltdl/config/ltmain.m4sh (func_mode_compile): Use\n\tfunc_append_quoted instead of func_append.\n\n2010-07-02  Peter Rosin  <peda@lysator.liu.se>\n\n\tDon't trigger file name expansion when embedding manifests.\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS)\n\t[ cygwin, mingw, cegcc ] <cl*>: Remove all spaces in the\n\tcase statement of postlink_cmds to make file name expansion\n\tmore unlikely.\n\t(_LT_LANG_CXX_CONFIG): Likewise, but also add the missing |.\n\n2010-07-01  Peter Rosin  <peda@lysator.liu.se>\n\n\tFix regression caused by \"Add func_append_quoted and do...\"\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Remove leftover\n\t\"_libs\" trash.\n\n2010-06-28  Peter Rosin  <peda@lysator.liu.se>\n\n\tFor MSVC, embed the manifest as a resource in the executable.\n\tFixes a lot of testsuite failures with MSVC 2003 (v8.0) and\n\tabove (and perhaps also MSVC .Net) related to running programs\n\tthat have been moved (e.g. installed) without their manifests\n\talso having been moved.\n\t* libltdl/m4/libtool.m4 (_LT_PATH_MANIFEST_TOOL): New macro\n\tthat locates the Manifest Tool (mt) and verifies that it is\n\tindeed the manifest tool. The result is stored in the new\n\tvariable MANIFEST_TOOL.\n\t(_LT_LINKER_SHLIBS) <postlink_cmds>: New tag variable.\n\t[ cygwin, mingw, cegcc ] <cl*>: Embed the manifest file as a\n\tresource. Make sure the embedding work regardless of if the\n\t@OUTPUT@ file name includes a trailing $EXEEXT.\n\t(_LT_LANG_CXX_CONFIG): Likewise.\n\t(_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG): Require the above\n\t_LT_PATH_MANIFEST_TOOL.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): After linking\n\ta program, replace @OUTPUT@ in $postlink_cmds and then execute\n\tthe commands.\n\t* doc/libtool.texi (libtool script contents): Document\n\tnew postlink_cmds variable.\n\t(LT_INIT): Add that the MANIFEST_TOOL environment variable can\n\tbe used to override the manifest tool to use.\n\t* tests/exeext.at: New. Make sure linking with both -o prog\n\tand -o prog$EXEEXT works.\n\t* Makefile.am (TESTSUITE_AT): Update.\n\t(TESTS_ENVIRONMENT): Propagate $(MANIFEST_TOOL) to the\n\ttestsuite.\n\t* NEWS: Add note of the new MANIFEST_TOOL environment variable.\n\n2010-06-24  Peter Rosin  <peda@lysator.liu.se>\n\n\tAdd MSVC support.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER)\n\t(_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG) [mingw, cygwin]: Add\n\tsupport for the Microsoft C/C++ Compiler (cl) relying on help\n\tfrom the compile script in Automake.\n\t* NEWS: Add note of the above.\n\n2010-07-01  Gary V. Vaughan  <gary@gnu.org>\n\n\tSkip `enhanced shell option appending' test when not available.\n\t* tests/getopt-m4sh.at [enhanced shell option appending]:\n\t_LT_AT_XSI_FUNC_EXTRACT will not be able to find the enhanced\n\tlibtool func_append function if the replacement wasn't substituted\n\tby configure, since the decorator comments will be different - in\n\tthat case simply skip the test.\n\n2010-06-30  Gary V. Vaughan  <gary@gnu.org>\n\n\tAdd func_append test cases for smart and retarded implementations.\n\t* tests/getopt-m4sh.at (_LT_AT_FALLBACK_FUNC_EXTRACT): New\n\tmacro to extract a fallback function implementation from\n\tltmain.m4sh.\n\t[option appending]: Use it for a test of the fallback\n\timplementation of func_append.\n\t[enhanced shell option appending]: And also test the enhanced\n\timplementation.\n\t* libltdl/config/ltmain.m4sh (func_append_quoted): Fix missing \\\\\n\tto escape a quoted space for eval.\n\t* libltdl/m4/libtool.m4 (_LT_PROG_XSI_SHELLFNS): Fix missing $ in\n\tdereference of func_append inline replacement for retarded\n\tshells.\n\n2010-06-29  Gary V. Vaughan  <gary@gnu.org>\n\n\tCorrect func_split_short_opt comment cut-n-pasto.\n\t* libtool/config/getopt.m4sh (func_split_short_opt): Fix\n\tthe function comment.\n\n\tUse a real XSI compliant func_split_short_opt substitution.\n\t* libtool/m4/libtool.m4 (_LT_CHECK_SHELL_FEATURES): Remove\n\ttest ${foo:n:m} substrings, instead adding a ${foo%??} check\n\tto the existing XSI tests.\n\t(_LT_PROG_XSI_SHELLFNS): Remove the ${foo:n:m} based\n\tfunc_split_short_opt substitution in favour of a properly\n\tXSI compliant substitution.\n\tSuggested by Paolo Bonzini.\n\n2010-06-28  Gary V. Vaughan  <gary@gnu.org>\n\n\tAdd func_append_quoted and do inline func_append substitutions.\n\t* libtool/config/ltmain.m4sh: Replace all occurrences of\n\t`foo=\"$foo bar\"' with func_append. No decorator comment was\n\tadded since /func_append [a-zA-Z0-9_]* \"/ is already an\n\texcellent match regexp, and additional comments would only\n\tcomplicate things.\n\t(func_append_quoted): New function that quotes a value with\n\tfunc_quote_for_eval before appending it.  To avoid quoting the\n\twhitespace in the passed value, a single whitespace is added\n\tautomatically.  Changed callers where possible.\n\t* libtool/m4/libtool.m4 (_LT_PROG_XSI_SHELLFNS): Perform a\n\t`+=' implementation substitution for func_append_quoted.  More\n\timportantly, systematically replace matching func_append calls\n\twith inline `+=' when supported (for maximum speed), and\n\tlonghand `foo=\"$foo bar\"' otherwise to avoid the function\n\toverhead.\n\n\tAdd an XSI replacement for func_split_short_opt, with test cases.\n\t* libltdl/config/getopt.m4sh (m4go_shortnoargs): Remove 'v' now\n\tthat getopt.m4sh doesn't steal that letter for the --version\n\tshort option.\n\t* libltdl/config/ltmain.m4sh (M4SH_GETOPTS): We can now use 'v'\n\tas a short option for '--verbose'.\n\t* libltdl/config/getopt.m4sh (m4go_printopts): Add back in the\n\tleading '-' for remaining non-argument short options.\n\t(func_split_short_opt): Use the correct sed script variable.\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_SHELL_FEATURES): Also ensure\n\tthat XSI substring extraction is supported.\n\t(_LT_PROG_XSI_SHELLFNS): Use XSI substring extraction to split\n\tshort options to avoid unnecessary forks if the host shell\n\tsupports that.\n\t* tests/getopt-m4sh.at: New tests for getopt.m4sh coverage.\n\t* Makefile.am (TESTSUITE_AT): Add getopt-m4sh.at.\n\t(TESTS_ENVIRONMENT): Pass M4SH and SED for substition into the\n\tm4sh expansion performed in tests/getopt-m4sh.at.\n\n2010-06-27  Gary V. Vaughan  <gary@gnu.org>\n\n\tAdd missing case branch terminators.\n\t* libltdl/config/ltmain.m4sh: Fixed everal case branches with\n\tmissing ';;' terminators.\n\n\tUse TAB-SPACE in preference to SPACE-TAB.\n\t* libltdl/m4/libtool.m4 (_LT_PROG_XSI_REPLACE): Some editors\n\tmight optimise away the SPACE in SPACE-TAB sequences, so use\n\tTAB-SPACE just in case.\n\tReported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\tAmend a missed opt_mode rename instance in ltmain.m4sh.\n\t* libltdl/config/ltmain.m4sh <mode>: Rename to opt_mode.\n\n\tFix portability regressions in today's earlier changeset.\n\t* libltdl/m4/libtool.m4 (_LT_PROG_XSI_REPLACE): `sed -i' is not\n\tportable; use `mv -f ...|| cp -f ...' instead.\n\tAdd an initial backslash to sed `c' substitutions with leading\n\twhitespace, so that indentation is not removed by some non-POSIX\n\tcompliant sed implementations.\n\t(_LT_PROG_XSI_SHELLFNS): Display a diagnostic warning message if\n\tone or more XSI function replacements failed.\n\n\tgetopt.m4sh generated libtool option parser, and XSI improvements.\n\t* libltdl/m4/libtool.m4 (_LT_PROG_XSI_SHELLFNS): Moved portable\n\tshell versions of various utility functions from here...\n\t* libltdl/config/getopt.m4sh (func_split_long_opt): ...to here...\n\t* libltdl/config/general.m4sh (func_dirname, func_basename)\n\t(func_dirname_and_basename, func_strip_name): ...here...\n\t* libltdl/config/ltmain.m4sh (func_append, func_arith, func_len)\n\t(func_lo2o, func_xform): ...and here.\n\t* libltdl/config/libtool.m4 (_LT_PROG_XSI_REPLACE): New macro that\n\texpands into a sed command for replacing the contents of a\n\tsuitably decorated shell function with an alternate XSI\n\timplementation.\n\t(_LT_PROG_XSI_SHELLFNS): Use it to replace the portable shell\n\tversions of the functions above with equivalent XSI\n\timplementations that avoid unnecessary forks if the host shell\n\tsupports that.\n\t* libltdl/config/ltmain.m4sh: Replace hand written shell code\n\twith a call to M4SH_GETOPTS. Rename some option variables in\n\tthe client code to match the generated option parser settings.\n\t* libltdl/config/general.m4sh (func_echo, func_error)\n\t(func_warning): Use $opt_mode instead of obsoleted $mode in\n\tmessage leader.\n\t* libltdl/config/getopt.m4sh (m4_version_prereq): This file\n\trequires m4sugar.m4 from Autoconf-2.61 or newer. \n\n2010-06-24  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t[cygwin] Refactor C++ exception handling for Win32 correctness\n\t* tests/exception.at (common.h): New file, refactored from\n\t(module.h): Move declaration of modexc to libcommon.\n\tInclude common.h. Use explicit import/export markings for\n\tsymbols when building on win32 or cygwin.\n\t(common.cpp): New file.\n\t(module.cpp): Ensure correct symbols markings when including\n\tmodule.h.\n\t(lib.h): Use explicit import/export markings for symbols\n\twhen building on win32 or cygwin.\n\t(lib.cpp): Ensure correct symbol markings when including lib.h.\n\t(main.cpp): Include common.h.\n\t(commands): Ensure correct symbol markings when compiling\n\tmain.cpp, and lib.cpp, and module.cpp. Add command to compile\n\tcommon.cpp, and to link libcommon.la.  Add libcommon.la when\n\tlinking module.la and main.  Add command to install libcommon.la.\n\n2010-06-21  Gary V. Vaughan  <gary@gnu.org>\n\n\tEnsure getopts.m4sh is compatible with Autoconf-2.61 and newer.\n\t* libltdl/config/getopt.m4sh (m4_chomp): Ensure this macro is\n\timplemented even if Autoconf's m4sugar.m4 doesn't provide it.\n\t(m4go_expand): New macro based on Autoconf-2.64 m4_expand. Use\n\tit everywhere incase m4sugar.m4 doesn't have an implementation.\n\t(m4_ifnblank): Replace all uses with m4_ifval, which was\n\tavailable long before m4_ifnblank was introduced.\n\n2010-06-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix clean mode for HP-UX 11.31 sh.\n\t* libltdl/config/ltmain.m4sh (func_mode_uninstall): Do not try\n\tto match a null string in a case pattern, even with surrounding\n\tspaces.  Fixes `lt_dlopenadvise library loading' test.\n\n\tAdd comment for exception handling module unloading issue.\n\t* tests/exceptions.at (C++ exception handling): Add comment\n\tfor last patch.\n\n\tFix flags test failure when ld is used as linker.\n\t* tests/flags.at (passing CC flags through libtool): When $LD\n\tis used for linking libraries, ensure flags passed with `-Wc,'\n\tare not passed through to $LD, but flags passed with `-Wl,' use\n\t$wl when linking programs.  Fixed testsuite failure on HP-UX\n\t10.20.\n\n2010-06-19  Charles Wilson  <libtool@cwilson.fastmail.fm>\n\n\t[cygwin] Fix segfault in C++ exception handling test\n\t* tests/exceptions.at (main.cpp:exceptions_in_module):\n\tMove dlclose outside catch block; otherwise __cxa_end_catch\n\t(part of the cygwin g++ ABI) accesses pointers to data inside\n\tunloaded DLL. This is a platform ABI-specific bug, but is\n\tlikely common to many platforms' g++ and/or other C++\n\tcompilers.\n\n2010-06-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix srcdir computation for manual runs of old tests.\n\t* tests/defs.m4sh: Strip trailing `/tests' from srcdir, to allow\n\t`$srcdir/tests/FOO.test' to be run from the top build directory.\n\n\tClean up @var handling in the manual.\n\t* doc/libtool.texi: Throughout the manual, replace @var with\n\t@samp or @code as appropriate, ensure the argument of remaining\n\t@var uses are lower-case.\n\n\tLet the bootstrap script fail upon errors.\n\t* bootstrap: Enable errexit.\n\n\tFix execute mode test for OSF/1 5.1.\n\t* tests/execute-mode.at (execute mode): Do not use grep -F\n\twith an empty pattern.\n\t* THANKS: Update.\n\tReport by Jay K.\n\n\tUse config.cache variable for PIC flag, to allow override.\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC) <lt_prog_compiler_pic>:\n\tSave result, and allow override, through cache variable\n\tlt_cv_prog_compiler_pic{,_CXX,_F77,_FC}.  The cache variable\n\tneeds to contain an eventual -DPIC.\n\t* tests/pic_flag.at (override pic_flag at configure time):\n\tNew file, new test.\n\t* Makefile.am (TESTSUITE_AT): Update.\n\t* NEWS, THANKS: Update.\n\tSuggestion by Joakim Tjernlund and Paolo Bonzini.\n\n2010-06-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tOptimize func_ltwrapper_scriptname to assume a cwrapper.\n\t* libltdl/config/ltmain.m4sh (func_ltwrapper_scriptname): Do not\n\tcall func_ltwrapper_executable_p again here, this function is\n\tdocumented to allow being called with wrapper executables.\n\n\tFix bootstrap script to cope with changed AC_INIT arguments.\n\t* bootstrap: When extracting PACKAGE and VERSION from AC_INIT\n\targuments, be sure to remove a 'GNU ' prefix and lowercase the\n\tpackage name for PACKAGE.  Also set PACKAGE_NAME and PACKAGE_URL\n\tappropriately for GNU software.  Pass these variables to the\n\tmake commands creating tests/package.m4 and other files.\n\t* Makefile.am (edit): Fix substitution of PACKAGE_NAME and\n\tPACKAGE_STRING.\n\t* libltdl/config/announce-gen.m4sh: Use @PACKAGE@ not\n\t@PACKAGE_STRING@.\n\n2010-06-15  Peter Rosin  <peda@lysator.liu.se>\n\n\tOn Windows, find potential libs regardless of file name case.\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_MAGIC_METHOD),\n\tlibltdl/config/ltmain.m4sh (func_mode_link): On Windows,\n\tfind potential libs regardless of file name case.\n\t* tests/nocase.at: New test, to check for regressions\n\tof the above.\n\t* Makefile.am: Add above new test.\n\t* doc/libtool.texi (libtool script contents): Document\n\tnew variables.\n\t* NEWS: Updated.\n\n2010-06-15  Philip Allison  <philip.allison@smoothwall.net>  (tiny change)\n\n\tAvoid GCC -Wall compiler warning in dlopen self test.\n\t* libltdl/m4/libtool.m4 (_LT_TRY_DLOPEN_SELF): Fix unused\n\tvariable warning in test program.\n\t* THANKS: Update.\n\n2010-06-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix cleaning of uninstalled w32 shell wrapper in subdirs.\n\t* libltdl/config/ltmain.m4sh (func_mode_uninstall): Do not\n\toverride global objdir variable, instead use odir for the\n\tdirectory of to-be-removed files.  Drop unneeded origobjdir.\n\tReport by Charles Wilson.\n\n2010-06-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tEnable colored Autotest testsuite output if available.\n\t* tests/testsuite.at: Move AT_INIT call down to late in the\n\tfile, all prior code can go beforehand.\n\tCall AT_COLOR_TESTS if defined.\n\n2010-06-14  Peter O'Gorman  <peter@pogma.com>\n\n\tPass resident test with --disable-shared too.\n\t* tests/resident.at: use LTDL_SET_PRELOADED_SYMBOLS.\n\n2010-06-13  Peter O'Gorman  <peter@pogma.com>\n\n\tTest with --disable-shared at release time too.\n\t* HACKING: Note it.\n\n\tAvoid failure for --disable-shared.\n\t* tests/lt_dladvise.at: Hack.\n\n\tUse LTDL_SET_PRELOADED_SYMBOLS to avoid failure.\n\t* tests/exceptions.at: Use it.\n\n2010-06-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tPrint Libtool project URL in program --help output.\n\t* configure.ac (AC_INIT): Set PACKAGE argument to `GNU Libtool',\n\tso Autoconf knows this is GNU software.  For Autoconf < 2.64,\n\tif AC_PACKAGE_URL is not defined, substitute PACKAGE_URL.\n\t* Makefile.am (edit): Substitute PACKAGE_URL.\n\t($(srcdir)/tests/package.m4): Also depend on Makefile.am.\n\tDefine AT_PACKAGE_URL, for `tests/testsuite --help' output.\n\t* libltdl/config/getopt.m4sh (func_help): Also extract comment\n\tlines that mention a home page and general GNU help.\n\t* libltdl/config/ltmain.m4sh: Use @PACKAGE_BUGREPORT@ instead of\n\thard-coded list address.  Also mention Libtool home page and\n\tgeneral GNU help web page.\n\t* libtoolize.m4sh: Likewise.\n\n2010-06-12  Peter Rosin  <peda@lysator.liu.se>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tImprove libdir usage from within ltdl on MinGW.\n\t* libltdl/ltdl.c (parse_dotla_file) [__WINDOWS__]: Read the\n\tlibdir entry in the .la file, but accept it only if it is not\n\ta unix-style absolute name.\n\t* tests/ltdl-libdir.at: New test that checks if ltdl finds an\n\tinstalled module via the libdir variable in the .la file.  On\n\tMinGW, use a Windows-style libdir name including drive spec.\n\t* Makefile.am: Add above.\n\n2010-06-11  Peter O'Gorman  <peter@pogma.com>\n\n\tSkip bindir install test if we're not building shared.\n\t* tests/bindir.at: Skip install test if necessary.\n\t* THANKS: Update.\n\tReport by Michael E Faenza.\n\n2010-06-11  Gary V. Vaughan  <gary@gnu.org>\n\n\tUse getopt.m4sh to generate libtoolize option parser.\n\t* libtoolize.m4sh: Replace hand written shell code with a\n\tcall to M4SH_GETOPTS.  Move some premature initialization\n\tfrom the preamble to the main part of the script.  Exit with\n\tan error on spurious additional non-option arguments.\n\t(envopts): Integrate LIBTOOLIZE_OPTIONS pre-parsing into the\n\tmain option parsing loop.\n\t(opt_copy): Use in place of and in the reverse sense of the\n\told opt_link variable.\n\n2010-06-10  Peter O'Gorman  <peter@pogma.com>\n\n\tCreate reloadable object files with non-pic objects too.\n\t* libltdl/config/ltmain.m4sh: When not building a shared\n\tlibrary, use the non-pic objects to create a reloadable\n\tobject, because pic objects do not exist.\n\n2010-06-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tEnsure libltdl is up to date for check-local.\n\t* Makefile.am (LTDL_BOOTSTRAP_DEPS): New variable.\n\t(all-local): Use it to simplify dependencies.\n\t(testsuite_deps_uninstalled): Add $(LTDL_BOOTSTRAP_DEPS).\n\tReport by Peter Rosin.\n\n2010-06-10  Gary V. Vaughan  <gary@gnu.org>\n\n\tSupport shell tracing inside functions even with ksh.\n\t* libltdl/config/getopt.m4sh: Set $opt_debug to be either `:'\n\tor `set -x' depending on whether --debug was parsed to match\n\tusage in libtoolize.m4sh and ltmain.m4sh.\n\t* clcommit.m4sh, libltdl/config/announce-gen.sh: Instead of\n\t`$opt_debug && ...', use `test \"$opt_debug\" != \":\" && ...'.\n\t* clcommit.m4sh, libltdl/config/announce-gen.m4sh,\n\tlibltdl/config/getopt.m4sh, libltdl/connfig/mailnotify.m4sh:\n\tExecute at the start of functions to cater to ksh, which\n\tresets `-x' inside shell functions.\n\n\tFix a typu in HACKING.\n\t* HACKING (Release Procedure): s/Makeflie/Makefile/.\n\n2010-06-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFactorize testing gcj installation in the testsuite.\n\t* tests/testsuite.at (LT_AT_TAG): For the GCJ tag, actually\n\ttry to compile a .java file when deciding whether to skip.\n\t(LT_AT_EXEC_TAG): New macro, to also ensure runnability.\n\t* tests/convenience.at (Java convenience archives): Use\n\tLT_AT_EXEC_TAG, simplify accordingly.\n\t* tests/flags.at (passing lt_tag flags through libtool): Use\n\tm4_defn for tag so LT_AT_TAG works.\n\t* tests/infer-tag.at (GCJ inferred tag): Simplify.\n\t* THANKS: Update.\n\tReport by Warren Dodge.\n\n2010-06-09  Peter O'Gorman  <peter@pogma.com>\n\n\tSkip demo-nopic tests if SELinux policy will cause failure.\n\t* tests/demo-nopic.test: Check SELinux policy and skip if\n\tnecessary.\n\n2010-06-09  Gary V. Vaughan  <gary@gnu.org>\n\n\tSet SCM version number to 2.2.11a.\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version\n\tnumber to 2.2.11a.\n\t* NEWS: Updated.\n\n\tGNU Libtool 2.2.10 was released.\n\n\tPrepare for next release.\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version number\n\tto 2.2.10.\n\t* NEWS: Update version number.\n\n\tFix a quoting bug with ./commit -a 'A U Thor'.\n\t* clcommit.m4sh (func_commit): Use func_show_eval when calling\n\tgit, so that the previously func_quote_for_eval()ed $git_flags is\n\texpanded properly.\n\n2009-09-15  Peter Rosin  <peda@lysator.liu.se>\n\n\tDon't try the MSYS libdir path on MinGW.\n\t* libltdl/ltdl.c (parse_dotla_file) [mingw]: The absolute\n\tlibdir path in the .la file is recorded as an MSYS (POSIX\n\tstyle) path. Make sure it isn't tried when locating the\n\tshared library.\n\t* NEWS: Updated.\n\n2010-06-09  Gary V. Vaughan  <gary@gnu.org>\n\n\tSimplify license variations, and add missing license texts.\n\t* ChangeLog, ChangeLog.1996, ChangeLog.1997, ChangeLog.1998,\n\tChangeLog.1999, ChangeLog.2000, ChangeLog.2001, ChangeLog.2002,\n\tChangeLog.2003, ChangeLog.2004, ChangeLog.2005, ChangeLog.2006,\n\tChangeLog.2007, ChangeLog.2008, ChangeLog.2009, NEWS: Add\n\tall-permissive license.\n\t* HACKING, README, README.alpha, TODO: Relax license to RMS\n\tencouraged all-permissive terms.\n\t* libltdl/README: Ditto. I added the original license text in\n\t2007, and there's no need for it to be so long for such a trivial\n\tfile.\n\t* libltdl/config/getopt.m4sh, libltdl/general.m4sh: Cvs-utils is\n\tdead, and I am the author of these files, so consolidated license\n\tterms to match regular Libtool licensing.\n\t* HACKING (Licensing Rules): Update wording, and list of files for\n\tthe all permissive license.\n\t(GPL with CVS-Utils exception clause): Removed.  No files have these \n\tlicense any more.\n\t(GPL with Libtool exception clause): Ditto, only libltdl/README\n\tused to be distributed with this variation.\n\t* AUTHORS: Add GPL license text.\n\t\n\tFix a type in the 2.2.8 release notes.\n\t* NEWS: s/ romoted/ promoted/ in the 2.2.8 release notes.\n\n\tDon't warn about the blank line inserted into git commit message.\n\t* clcommit.m4sh: When searching for accidental commits of mutliple\n\tchanges, ignore the second line of the message, which we inserted\n\tearlier to support \"git log --oneline\".\n\n\tEnable correct extraction of multiline copyright from --version.\n\t* libltdl/config/getopt.m4sh: Wrap copyright notice at 76\n\tcolumns.\n\t(func_version): Don't omit spaces when merging multiline copyright\n\tnotices.\n\t* clcommit.m4sh, libtoolize.m4sh: Wrap copyright notice at 76\n\tcolumns.\n\n\t* NEWS (2.2.8): BlueGene compiler tests were performed on BG/P\n\tsystems, not BG/L.\n\tReported by Christian R\u00f6ssel <christian.roessel@gmx.de>\n\n2010-06-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix testsuite helper macros to not hide failure.\n\t* tests/testsuite.at (LT_AT_CONFIGURE, LT_AT_MAKE):\n\tDo not wrap AT_CHECK in a subshell, so that failures are\n\tproperly propagated; instead, move environment changes inside\n\tthe AT_CHECK code.\n\tReport and analysis by Peter Rosin.\n\n\tAvoid autom4te warning about unnamed diversion.\n\t* libltdl/config/getopt.m4sh: Use diversion name KILL not -1.\n\n2010-06-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tMake versioning test stricter for w32, enable shared libs.\n\t* tests/versioning.at (versioning): Add -no-undefined to\n\tLDFLAGS.\n\t(test_uninstalled): Also move $bindir out of the way\n\ttemporarily.\n\n\tFix versioning test for LDFLAGS=-Wl,--as-needed.\n\t* tests/versioning.at (versioning): For the library update\n\thypotheses, ensure the unchanged library libb isn't accidentally\n\trelinked against the new liba, by not reinstalling libb.\n\tFixes testsuite failure for the incompatible update case with\n\tLDFLAGS=-Wl,--as-needed.\n\t* THANKS: Update.\n\tReport by Ryan Hill.\n\n2010-06-06  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tRewrite manual intro to be gender-neutral.\n\t* doc/libtool.texi (Introduction): Use gender-neutral\n\tformulation when addressing developers.\n\n2010-06-05  Gary V. Vaughan  <gary@gnu.org>\n\n\tUpdate and simplify all m4sh scripts to use latest getopt.m4sh.\n\t* clcommit.m4sh, libltdl/config/mailnotify.m4sh: Rewrite option\n\tparsing loop over M4SH_GETOPTS macro, and adjust all clients of\n\toption variables to use generated option names.\n\n\tAdd missing quote for literal ? in a shell case statement.\n\t* libltdl/config/getopt.m4sh (m4go_shortnoargs): Quote initial ?\n\tcorrectly for use in a shell case statement.\n\n\tQuote command line arguments after --rcfile properly.\n\t* libltdl/config/announce-gen.m4sh (--rcfile): Quote remaining\n\targuments shell variable expression correctly for eval.\n\t\n\tShift correctly in numbered option argument collection.\n\t* libltdl/config/getopt.m4sh (_m4go_option): Argument list also\n\tneeds to be `shift'ed in the shell option loop after processing a\n\tnumbered argument collection.\n\n\tFetch from new upstream host for config.guess and config.sub.\n\t* Makefile.maint (WGET_CGIT): Location of newest config.guess and\n\tconfig.sub upstream.\n\t(fetch): Fetch config.guess and config.sub from WGET_CGIT, rather\n\tthan no-longer-updating WGET_SGO location.\n\n\tUpdate generated upload directive file format to v1.1.\n\t* Makefile.maint (git-dist, diffs): Update to generate v1.1 format\n\tdirective files for ftp://ftp-upload.gnu.org/incoming/ftp.\n\n\tFix web manual generation details in release instructions.\n\t* HACKING (Release Procedure): Move the instruction for generating\n\tweb manuals for a new release to before the instruction that bumps\n\tthe version numbers to the post release values.\n\n\tSet SCM version number to 2.2.9a.\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version\n\tnumber to 2.2.9a.\n\t* NEWS: Updated.\n\n\tGNU Libtool 2.2.8 was released.\n\n\tPrepare for next release.\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version\n\tnumber to 2.2.8.\n\t* NEWS: Update version number.\n\t* INSTALL, libltdl/config/install-sh, libltdl/config/config.guess,\n\tlibltdl/config/config.sub, libltdl/config/texinfo.tex: Updated\n\tfrom canonical source.\n\n\tProvide an m4sh reimplementation of announce-gen.\n\t* libltdl/config/getopt.m4sh (M4SH_GETOPTS): New macro that takes\n\ta quoted m4 list of command line options to be parsed, and\n\tgenerates the shell code to parse those options and collect the\n\tresults into appropriately named 'opt_xxx' shell variables.  Also,\n\tadd some private supporting macros, and improve the comments\n\tradically.\n\t* libltdl/config/announce-gen.m4sh: New file, to generate and\n\toptionally post (an enhancement over the gnulib perl script of the\n\tsame name) a release announcement.\n\t* Makefile.maint (announce-gen): Build a new announce-gen script\n\tin the build directory, from the contents of\n\tlibltdl/config/announce-gen.m4sh.\n\t* HACKING (Release Procedure): Update the instructions to use\n\tannounce-gen.\n\t(Alpha release note template, Full release note template):\n\tRemoved.\n\n2010-05-22  Gary V. Vaughan  <gary@gnu.org>\n\n\tSupport \"git log --oneline\" in generated commit messages.\n\t* clcommit.m4sh (func_check_commit_msg): Insert an empty line\n\tbetween the ChangeLog entry summary line and the ChangeLog entry\n\tbody, so that \"git log --oneline\" works properly.\n\tBump copyright and version number.\n\tReported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n2010-05-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* HACKING: Set Reply-To: in announcement emails.\n\n2010-05-21  Gary V. Vaughan  <gary@gnu.org>\n\n\tSet SCM version number to 2.2.7c.\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version\n\tnumber to 2.2.7c.\n\t* NEWS: Updated.\n\n\tGNU Libtool 2.2.7b  was released.\n\n\tPrepare for next release candidate.\n\t* configure.ac, libltdl/configure.ac (AC_INIT): Bump version\n\tnumber to 2.2.7b.\n\t* libltdl/m4/libtool.m4, libltdl/m4/ltdl.m4,\n\tlibltdl/m4/ltoptions.m4, libltdl/m4/lt~obsolete.m4: These files\n\thave been updated without a serial bump since the last release.\n\t* libltdl/Makefile.inc (LTDL_VERSION_INFO): Bump Revision, to\n\taccount for bugfixes since the last release.\n\t* libltdl/config/install-sh, libltdl/config/config.guess,\n\tlibltdl/config/config.sub, libltdl/config/texinfo.tex,\n\tINSTALL: Updated from canonical source.\n\t* NEWS: Update with missing entries from ChangeLog.\n\t* HACKING: Note workaround for developer tool-path leakage bug.\n\n\tSkip some tests in --disable-ltdl-install mode.\n\t* tests/dlloader-api.at, tests/exceptions.at,\n\ttests/lalib-syntax.at, tests/loadlibrary.at,\n\ttests/lt_dlopenext.at, tests/resident.at: Detect when these\n\ttests try to link against the not installed libltdl.la, and\n\tskip rather than FAIL.\n\n2010-05-05  Peter Rosin  <peda@lysator.liu.se>\n\n\tClarify versioning algorithm documentation.\n\t* doc/libtool.texi (Updating version info): Be explicit\n\tabout setting age to zero on interface change.\n\tReported by Jef Driesen <jefdriesen@hotmail.com>\n\n2010-05-04  Peter O'Gorman  <peter@pogma.com>\n\n\tRanlib is required with -force_load and fat archives.\n\t* libltdl/m4/libtool.m4 (_LT_REQUIRED_DARWIN_CHECKS): Run\n\tranlib.\n\tReported by Jeremy Huddleston <jeremyhu@apple.com>\n\n2010-04-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix incompatible struct declarations.\n\t* doc/libtool.texi (Dlpreopening): Remove broken documentation\n\tof lt_dlsymbol and lt_dlsymlist.  Document typedef lt_dlsymlist\n\tand symbol lt_preloaded_symbols according to the implementation.\n\t* tests/demo/dlmain.c (lt_symlist): Make struct anonymous ...\n\t(lt_dlsymlist): ... and typedef to this name.\n\t(lt_preloaded_symbols, main): Adjust.\n\t* tests/pdemo/longer_file_name_dlmain.c: Likewise.\n\n2010-04-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tUse linker_flags not compiler_flags with $LD.\n\t* libltdl/m4/libtool.m4 (_LT_LINKER_SHLIBS) [linux]\n\t<archive_cmds, archive_expsym_cmds>: With xlf and bgxlf\n\tcompilers, when linking with $LD, use $linker_flags not\n\t$compiler_flags.\n\n2010-03-31  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tAdd FAQ, and FAQ entry for flags stripped at library link time.\n\t* doc/libtool.texi (FAQ, Stripped link flags): New nodes.\n\t(Wrapper executables): Replace bug address with macro.\n\t(Compile mode, Link mode): Document `-Wc,' and `-Xcompiler '\n\tsemantics better.\n\t* libltdl/config/ltmain.m4sh (func_mode_link): Rewrite comment\n\tfor the flags that are passed through.\n\tPrompted by reports from Simon Richter <Simon.Richter@hogyros.de>,\n\tT\u00f6r\u00f6k Edwin <edwintorok@gmail.com> and\n\t\u00c5ke Sandgren <ake.sandgren@hpc2n.umu.se>.\n\n2010-03-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tFix preloader symbol list declaration in libltdl.\n\t* libltdl/ltdl.c (preloaded_symbols): Fix declaration to include\n\tarray brackets.\n\t(lt_dlinit): Do not take address of preloaded_symbols.\n\n\tFix typo in libtool --help output.\n\t* libltdl/config/ltmain.m4sh (func_mode_help): Fix typo in help\n\toutput.\n\n\tFix a couple of documentation errors.\n\t* doc/libtool.texi (Autoconf macros): Improve hyphenation.\n\t(Using libltdl): libltdl uses the Lesser General Public License,\n\tnot the Library General Public License.\n\n\tDo not use @sc nor @acronym in the manual.\n\t* doc/libtool.texi: Remove all usage of @sc.\n\n2010-03-19  Chris Demetriou  <cgd@google.com>\n\n\tSort output of 'find' to enable deterministic builds.\n\t* libltdl/config/ltmain.m4sh (func_extract_archives): Sort\n\toutput of 'find'.\n\t* libltdl/m4/libtool.m4 (_LT_LANG_CXX_CONFIG): Likewise.\n\t* THANKS: Update.\n\n2010-03-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tUnconditionally normalize LC_ALL, LANGUAGE in libtool script.\n\t* libltdl/config/ltmain.m4sh: Unconditionally set LC_ALL and\n\tLANGUAGE to 'C', to avoid semantic differences on MinGW under\n\tChines locale.  SCO issues with e.g. LANG=C are not known to\n\tbe relevant today any more.\n\tReport by Pete Batard <pbatard@gmail.com> and Xiaofan Chen\n\t<xiaofanc@gmail.com>.\n\n2010-03-17  Peter Rosin  <peda@lysator.liu.se>\n\n\tPreserve the last error when restoring the error mode.\n\t* libltdl/loaders/loadlibrary.c (wm_open): Don't rely on\n\tSetThreadErrorMode (or SetErrorMode) to not clobber the last\n\terror.\n\tReport by Ralf Wildenhues.\n\n\tUse Get/SetThreadErrorMode if they are available.\n\t* libltdl/loaders/loadlibrary.c (wrap_geterrormode): Replaced...\n\t(wrap_getthreaderrormode): ...by this function that checks\n\tfirst for GetThreadErrorMode, then GetErrorMode and makes use\n\tof either of those or...\n\t(fallback_getthreaderrormode): ...else falls back to this\n\treplacement function that implements the old workaround, which\n\twas previously implemented in...\n\t(fallback_geterrormode): ...this now renamed function.\n\t(geterrormode): Replaced...\n\t(getthreaderrormode): ...by this function pointer that points\n\tat either of wrap_getthreaderrormode, GetThreadErrorMode,\n\tGetErrorMode or fallback_getthreaderrormode.\n\t(wrap_setthreaderrormode): New function that checks if\n\tSetThreadErrorMode is supported by the system and makes use of\n\tit if it is.\n\t(fallback_setthreaderrormode): New function that is used\n\totherwise that implements the old version using SetErrorMode.\n\t(setthreaderrormode): New function pointer that points at\n\teither of wrap_setthreaderrormode, SetThreadErrorMode or\n\tfallback_setthreaderrormode.\n\t(vm_open): Adjust to the above.\n\n2010-02-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tDetect Sun compiler suite with 'sun'-prefixed names.\n\t* libltdl/m4/libtool.m4 (_LT_COMPILER_PIC, _LT_LANG_CXX_CONFIG)\n\t(_LT_SYS_HIDDEN_LIBDEPS) [solaris]: Accept compiler names sunCC,\n\tsunf77, sunf90, sunf95 in addition to CC, f77, f90, f95.\n\t* NEWS: Update.\n\tReport by Vadim Zeitlin.\n\n2010-02-28  Pierre Ossman  <ossman@ossman.lkpg.cendio.se>  (tiny change)\n\t    Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\tFix deplibs check fallback for 64-bit Windows and Windows CE.\n\t* libltdl/m4/libtool.m4 (_LT_CHECK_MAGIC_METHOD): Accept file formats\n\t'pe-arm-wince' and 'pe-x86-64'.  Add note about consistency with ...\n\t* libltdl/config/ltmain.m4sh (func_win32_libid): ... the respective\n\tpattern here; sync pattern from the former.\n\t* tests/deplibs-mingw.at (deplibs without file command): New\n\tfile, new test.\n\t* Makefile.am (TESTSUITE_AT): Update.\n\t* NEWS: Update.\n\n2010-02-24  Scott McCreary  <scottmc2@gmail.com>  (tiny change)\n\n\tUpdate search path on Haiku for legacy system directory.\n\t* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [haiku]\n\t<sys_lib_dlsearch_path_spec>: Replace legacy\n\t/boot/beos/system/lib directory with /boot/system/lib.\n\t* THANKS: Update.\n\n2010-02-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tmanual: fix detailmenu ordering.\n\t* doc/libtool.texi (Top): Add section for `Linking executables'\n\tin the detailmenu.\n\n2010-02-21  Charles Wilson <libtool@cwilson.fastmail.fm>\n\n\tGuard against strerror()==NULL\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src:main):\n\tCheck return value of strerror() using nonnull().\n\t(func_emit_cwrapperexe_src:find_executable): Ditto.\n\t(func_emit_cwrapperexe_src:chase_symlinks): Ditto.\n\n2010-02-21  Charles Wilson <libtool@cwilson.fastmail.fm>\n\n\tDocument wrapper changes.\n\t* NEWS: Indicate new feature and incompatibility.\n\t* doc/libtool.texi [detailmenu]: Add reference to subsection\n\t'Wrapper executables for programs', in Platform Quirks category.\n\t[Linking executables]: Mention wrapper executables, in\n\taddition to wrapper scripts. Add menu referencing subsection\n\t'Wrapper executables for programs'.\n\t[Wrapper executables for programs]: New subsection. Documents\n\tcwrapper rationale and command line options.\n\n2010-02-21  Charles Wilson <libtool@cwilson.fastmail.fm>\n\n\tAdd --lt-* options to shell wrapper\n\t* libltdl/config/ltmain.m4sh (func_emit_wrapper): Call\n\tfunc_parse_lt_options early. Use func_exec_program.\n\t(func_emit_wrapper:func_parse_lt_options): New function.\n\t(func_emit_wrapper:func_lt_dump_args): New function.\n\t(func_emit_wrapper:func_exec_program_core): New function.\n\t(func_emit_wrapper:func_exec_program): New function.\n\n2010-02-21  Charles Wilson <libtool@cwilson.fastmail.fm>\n\n\tEnable runtime cwrapper debugging; add tests\n\t* libltdl/config/ltmain.m4sh (func_emit_cwrapperexe_src):\n\tUpdate comments. Initialize program_name. Eliminate _LENGTH\n\tvariables for string constants. In debug mode, print a\n\tbanner with known content before any other output. Remove\n\tLTWRAPPER_DEBUGPRINTF macro. Add constants and variables\n\tto support new --lt-debug option.\n\t(func_emit_cwrapperexe_src:ltwrapper_debugprintf): Renamed to...\n\t(func_emit_cwrapperexe_src:lt_debugprintf): this. Only print\n\tmessages if lt_debug != 0. Ensure appearance of messages\n\tconforms to GCS.\n\t(func_emit_cwrapperexe_src:lt_fatal): Ditto.\n\t(func_emit_cwrapperexe_src:lt_error_core): Ditto.\n\t(func_emit_cwrapperexe_src): Update all callers to lt_fatal.\n\tUpdate all users of LTWRAPPER_DEBUGPRINTF (()) to call\n\tlt_debugprintf () directly.\n\t(func_emit_cwrapperexe_src:main): Consolidate option parsing.\n\tEnsure first use of lt_debugprintf occurs after option parsing.\n\tAdd stanza to parse for --lt-debug and set lt_debug variable.\n\tUse strcmp rather than strncmp, where safe.\n\t* tests/cwrapper.at: Add new tests for --lt-debug and\n\t-DLT_DEBUGWRAPPER.\n\n2010-01-31  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tUse --email with gendocs.sh.\n\t* Makefile.maint (web-manual): Pass bug reporting address to\n\tgendocs.sh.\n\n\tMake testsuite code C++ clean again.\n\t* tests/resident.at (resident modules): Fix for C++.\n\n2010-01-29  Peter Rosin  <peda@lysator.liu.se>\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tTestsuite exposure for dlloader API.\n\t* tests/dlloader-api.at: New file, new test.\n\t* Makefile.am (TESTSUITE_AT): Update.\n\n2010-01-29  Peter Rosin  <peda@lysator.liu.se>\n\n\t* tests/loadlibrary.at: Fix C++ issues.\n\n2010-01-20  Peter Rosin  <peda@lysator.liu.se>\n\n\tReport proper errors from the loadlibrary loader.\n\t* libltdl/loaders/loadlibrary.c (loadlibraryerror): New\n\thelper function that returns the latest Windows error as a\n\tstring, or the provided default string on failure to do so.\n\t(LOADLIB_SETERROR): New macro that wraps previous to make it\n\teasy to use.\n\t(vm_open, vm_close, vm_sym): Make use of previous.\n\t(LOCALFREE): New macro to help free the Windows error string.\n\t(vl_exit): Make use of previous.\n\t* tests/loadlibarry.at: New file, new test that makes sure\n\tthe loadlibrary loader reports non-standard error messages.\n\t* Makefile.am (TESTSUITE_AT): Add above test.\n\n2010-01-02  Peter Rosin  <peda@lysator.liu.se>\n\n\tUse GetErrorMode if it is available.\n\t* libltdl/loaders/loadlibrary.c (wrap_geterrormode): New\n\tfunction that checks if GetErrorMode is supported by the\n\tsystem and makes use of it if it is.\n\t(fallback_geterrormode): New function that is used otherwise\n\tthat implements the old workaround.\n\t(geterrormode): New function pointer that points at either\n\tof the above or directly at GetErrorMode.\n\t(vm_open): Make use of the above.\n\n2010-01-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tEnsure functions from resident modules work in atexit handlers.\n\t* tests/resident.at (resident modules): New file, new test.\n\t* Makefile.am (TESTSUITE_AT): Adjust.\n\tReport by Bob Friesenhahn.\n\n\tTestsuite exposure for relative output file names and deplibs.\n\t* tests/deplib-in-subdir.at (deplib in subdir): New file, new\n\ttest.\n\t* Makefile.am (TESTSUITE_AT): Update.\n\tPrompted by report from Bob Friesenhahn.\n\n2010-01-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\t    Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\tTestsuite exposure for C++ exception handling.\n\t* tests/exceptions.at (C++ exception handling): New file, new\n\ttest.\n\t* Makefile.am (TESTSUITE_AT): Update.\n\tReport by Bob Friesenhahn.\n\n2010-01-06  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\tBump copyright years.\n\t* ChangeLog.2009: New, rotated from ...\n\t* ChangeLog: ... here.\n\t* Makefile.am (EXTRA_DIST): Add ChangeLog.2009.\n\t* NEWS, libltdl/config/ltmain.m4sh: Bump copyright years.\n\t* libltdl/m4/libtool.m4 (_LT_COPYING, LT_OUTPUT): Likewise.\n\t* libtoolize.m4sh: Likewise.\n\nContinued in ChangeLog.2009\n-- \n  Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n  2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n\n  This file is part of GNU Libtool.\n\nCopying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout warranty of any kind.\n\nvim:tw=72\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/ChangeLog.2004": "2004-12-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/getopt.m4sh (func_version, func_usage, func_help):\n\tUse `$SED -n' instead of `$SED RANGE {..}; d' as AIX sed cannot\n\thandle the latter.\n\t(func_help): start autoconf and automake in subshells to avoid\n\terror messages from ash or Bourne shell if not available.\n\n2004-12-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/general.m4sh (func_quote_for_eval): Move backslash to\n\tbeginning of character class, to work around old Bash bug.\n\t(func_quote_for_expand): Also test to avoid unnecessary fork.\n\n2004-12-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>,\n\t    Gary V. Vaughan <gary@gnu.org>\n\n\t* Makefile.am, bootstrap, clcommit.m4sh, libtoolize.m4sh,\n\tconfig/ltmain.m4sh: Replace `set --' with `set dummy [...]; shift'\n\tfor portability.\n\t* tests/sh.test: Test for this.\n\n2004-12-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libtoolize.m4sh, config/ltmain.m4sh (most functions): New\n\tvariable $opt_debug is either `:' or `set -x' depending on\n\t--debug.  Execute at most function entries to cater for ksh which\n\tresets `-x'.\n\t* tests/defs.m4sh: Ditto for VERBOSE=debug.\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS) [cygwin, mingw, pw32]:\n\t_LT_TAGVAR missing for `fix_srcfile_path'.\n\t[sysv4, sysv5]: _LT_TAGVAR missing for\n\t`export_dynamic_flag_spec'.\n\n\t* doc/libtool.texi (all over): Use @option and @command.\n\tSome more minor formatting updates, typos.\n\n\t* m4/libtool.m4 (_LT_PROG_ECHO_BACKSLASH): Fix variable\tquoting;\n\tallows lt_ECHO to match --fallback-echo again.\n\n\t* config/ltmain.m4sh (func_extract_archives): Not all shells grok\n\t`read -r' (unnecessary in this case).\n\tReported by Ralf Menzel <menzel@ls6.cs.uni-dortmund.de>.\n\n\t* config/general.m4sh: New variable quote_scanset...\n\t(func_quote_for_eval, func_quote_for_expand): ...use it to work\n\taround SunOS ksh `case' backslash-escaping bug: protect character\n\tclass by variable expansion.\n\tReported by Alexander Kurz <alexander.kurz@qsc.de>.\n\n\t* tests/quote.test: Restart under the correct shell (the one\n\t$ECHO was computed for).\n\n2004-12-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/lt__dirent.c: Include lt__private.h.\n\t* libltdl/libltdl/lt__private.h: Include lt__strl.h.\n\n2004-12-20  Peter O'Gorman  <peter@pogma.com>\n\n\t* config/ltmain.m4sh (func_extract_archives)\n\t(func_extract_an_archive): On darwin, uniq can not take the flags\n\t-cd together, thanks to Ralf for the fix, also ar does not accept\n\tN, so we use the fact that ar x libfoo.a foo.o will always extract\n\tthe first foo.o in the archive and we then delete foo.o from the\n\tarchive, which will also delete only the first foo.o, then rinse\n\tand repeat. Also add markers for the testuite.\n\t* m4/libtool.m4 (_LT_CONFIG): Add a marker so that we can use a\n\tsed expression to find the shell functions in libtool.\n\t* tests/functests.at: Test this feature.\n\t* tests/testsuite.at: Add the test.\n\t* tests/Makefile.am: Add the test.\n\n2004-12-20  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libtoolize.m4sh: Install `install-sh' as well, needed for\n\tconfigure.\n\t* Makefile.am, Makefile.maint: Install, update it.\n\t* NEWS, doc/libtool.texi (Distributing): Document it.\n\tReported by Ross Boylan <ross@biostat.ucsf.edu>.\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS) [solaris]: Add '${wl}-z\n\t${wl}text' to archive_cmds and archive_expsyms_cmds.  I.e., do not\n\tallow nopic in shared libraries.\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS) [solaris]: Change\n\tno_undefined_flag back to ' -z defs'.  Problems with linking\n\tagainst libgcc.a will have to be resolved differently.\n\n\t* tests/demo-nopic.test [solaris, sunos]: Skip test.\n\n2004-12-18  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libtool.m4 [linux] (_LT_COMPILER_PIC, _LT_LANG_CXX_CONFIG):\n\tMatch icpc* and ecpc* (ia64 version of icpc) instead of only icpc.\n\n\t* libltdl/lt__dirent.c (opendir) [mingw]: Fix write of constant\n\tstrings past end of buffer.\n\t(opendir, readdir): Fix read past end of buffer.\n\n2004-12-17  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* HACKING: Update list of non-Libtool-owned files.\n\n2004-12-17  Akim Demaille <akim@epita.fr>\n\n\t* libtoolize.m4sh (func_copy_all_from_path): Remove spurious eval.\n\n2004-12-16  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/ltdl.c (trim): Return error rather than do bogus\n\tnull pointer arithmetic when parsing a malformed .la file.\n\n2004-12-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libltdl/lt__strl.c, libltdl/libltdl/lt__strl.h: New files to\n\temulate strlcat and strlcpy, which support size-bounded string\n\tcopying and concatenation for improved security.\n\t* libltdl/Makefile.am: Optionally build source files\n\tlibltdl/lt__strl.c and libltdl/libltdl/lt__strl.h.\n\t* m4/ltdl.m4 (LTDL_INIT): Add checks for strlcat and strlcpy.\n\n2004-12-13  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG):\n\tAppend -G to link command-line on AIX to honor -brtl on\n\tcommand-line (runtime linking). Already done for IBM C/C++\n\tcompilers.\n\n2004-12-12  Patrick Welche <prlw1@newn.cam.ac.uk>\n\n\t* configure.ac: Fix aclocaldir to use ${datadir}, not ${prefix}.\n\tNecessary for removal of old libtool.m4 files.\n\n2004-12-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (func_extract_archive): Send stderr of $NM\n\tto /dev/null.\n\tReported by Martin Waitz <tali@admingilde.org>.\n\n2004-12-09  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* config/ltmain.m4sh: Preserve -model [arg] option, used\n\twith the Tru64 UNIX C++ compiler. This option selects the\n\tlayout of C++ classes, name mangling, and exception handling.\n\n2004-12-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (func_mode_finish) [solaris]: Fix [] escaping\n\tbug.\n\n\t* config/ltmain.m4sh (all over the map): Make use of func_basename\n\tand func_dirname in most occasions.\n\n\t* m4/libtool.m4 (_LT_CHECK_XSI_SHELL, _LT_PROG_XSI_SHELLFNS): New\n\tmacros to detect at `configure' time whether the shell supports\n\tsome XSI extensions and to copy appropriate versions of new shell\n\tfunctions into `libtool' through `config.status'.  Copied\n\tfunctions are Bourne and XSI variants of func_basename,\n\tfunc_dirname (a variant of `dirname' suitable for libtool).\n\t(_LT_SETUP): Require _LT_CHECK_XSI_SHELL.\n\t(_LT_CONFIG):  Use _LT_PROG_XSI_SHELLFNS to insert into `libtool'\n\tat marker.\n\n\t* config/ltmain.m4sh: Set marker for insertion of shell functions.\n\n\t* config/general.m4sh (func_quote_for_eval): Only fork if the\n\tsubstitution matches.\n\n2004-12-03  Gary V. Vaughan  <gary@gnu.org>\n\n\t* TODO: Paste Peter's summary of the TODO thread starting at\n\thttp://lists.gnu.org/archive/html/libtool/2004-11/msg00130.html.\n\n2004-12-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* config/ltmain.m4sh: Remove code which is no longer needed\n\tnow that temp_rpath only contains fully-qualified elements.\n\n2004-11-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/general.m4sh: basename sed-subst is anchored and thus\n\tdoes not need the `g' flag.\n\t(func_quote_for_eval): Return both the possibly double-quoted\n\tbackslashified as well as only the backslashified argument.\n\t* config/ltmain.m4sh (func_mode_link): Use both return values,\n\tto save another sed_quote_subst application per cmdline arg.\n\n2004-11-29  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (func_lalib_p): Update function\n\tdescription.\n\t(func_lalib_unsafe_p): New function with same functionality but\n\twritten without forks; this function is safe to use for cases\n\twhere the argument either does not exist or is required to be a\n\tlalib for correct operation.\n\t* NEWS: Mention the fact that stdin is not to be used.\n\t* config/ltmain.m4sh (func_mode_execute, func_mode_install)\n\t(func_mode_link): Use func_lalib_unsafe_p where appropriate.\n\t(func_mode_execute): For the program wrapper, use\n\tfunc_ltwrapper_p instead of func_lalib_p.\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS): Treat linux-dietlibc with\n\tthe `diet' compiler wrapper (as opposed to the `diet-dyn' wrapper)\n\tas a static-only platform.\n\t* NEWS: Updated.\n\n\t* libltdl/ltdl.c (trim): Use memcpy instead of strncpy here, to\n\tavoid problems with non-conforming strncpy.  This is safe here.\n\n\t* m4/ltdl.m4 (LT_LIB_DLLOAD): Define HAVE_LIBDLLOADER if we\n\thave a dlloader to preload.\n\t* libltdl/ltdl.c (lt_dlinit): Only preload if HAVE_LIBDLLOADER, only\n\tdeclare preloaded_symbols then.  Fixes libltdl on static platforms.\n\t* NEWS: Updated.\n\n2004-11-29  Gary V. Vaughan  <gary@gnu.org>\n\n\tAdd a search path option to libtoolize so that we can run it from\n\tthe testsuite without pulling in the last installed macros and\n\tltdl sources:\n\n\t* libtoolize.m4sh:  Add a -I option to change libtoolize's search\n\tpath for macro files, and libltdl master sources.\n\t(pkgvdatadir, pkgvmacrodir): Renamed...\n\t(pkgvdatadirs, pkgvmacrodirs): ...as they can now contain a ':'\n\tdelimited list of directories.  Adjust all callers.\n\t(func_copy_all_from_path): New function to search a ':' delimited\n\tsearch path for a directory to copy.\n\t(func_serial_update, func_ltmain_update, func_config_update): New\n\tfirst parameter is a filename to search for.  srcdir parameter can\n\tnow be a ':' delimited search path.  Adjust all callers.\n\t(func_copy_some_files): Ditto.\n\tPut srcfile_spec first in parameter list for consistency with\n\tother functions.  Adjust all callers.\n\t(func_copy_cb): func_copy adapter function to call func_copy\n\tcorrectly from func_copy_some_files.\n\t(func_filename_path_search): Return the full path to the first\n\toccurence of a named file found in a list of directories.\n\t* tests/testsuite.at (LIBTOOLIZE): Wrap exported LIBTOOLIZE\n\tinitialisation in PREPARE_TESTS diversion to stop it being\n\tdiscarded when testsuite is generated.\n\t(AT_LIBTOOLIZE): Factor out libtoolize calls,\n\tand set search path to find macros and libltdl source files from\n\tthe source tree.\n\t(AT_CHECK_LIBTOOLIZE): Test it.\n\t(AT_BOOTSTRAP): Adjust.  Split out call to make.\n\t* tests/am-subdir.at: Call make explicitly.\n\t(Makefile.am): Fix typo in ACLOCAL_AMFLAGS,\n\n2004-11-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (func_mode_link): $dlsymsobj is really\n\t$symfileobj, bug exposed only in the static preloading case\n\t(symfileobj is created, but not linked into output).\n\n\t* tests/demo-relink.test, tests/depdemo-relink.test: SKIP, don't\n\tFAIL if no shared libs available in demo/.  Do not try to access\n\tnonexistent files.\n\n\t* libltdl/loaders/loadlibrary.c: Remove unneeded\n\tfile-static variable.\n\n2004-11-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* config/ltmain.m4sh: Add fully-qualified paths to temp_rpath\n\trather than unqualified paths in order to avoid possible errors\n\twhen computing the fully-qualified path later.\n\n2004-11-24  Jeff Squyres  <jsquyres@lam-mpi.org>\n\n\t* m4/libtool.m4 (_LT_COMPILER_PIC, _LT_LINKER_SHLIBS)\n\t(_LT_LANG_CXX_CONFIG) [linux]: Support for Portland Group (aka\n\t\"pgi\") compilers.\n\t* NEWS, THANKS: Updated.\n\n2004-11-24  Gary V. Vaughan  <gary@gnu.org>\n\n\t* Makefile.am: Move Autotest rules from here...\n\t* tests/Makefile.am: ...to here.\n\t* bootstrap: Adjust.  Also, create temporary Makefile from\n\ttests/Makefile.am so that bootstrap can create the Autotest\n\ttestsuite.\n\n2004-11-23  Gary V. Vaughan  <gary@gnu.org>\n\n\tIf the user's login shell is something crazy like, oooh,\n\t/bin/tcsh, trying to execute bourne shell helper scripts with\n\tthe `$SHELL /path/to/helper $helper_flags' idiom incase the\n\texecute bits were lost by say, eeer, cvs, is gonna blow up in\n\tour faces.  This changeset tries to save these people from\n\ttheir shells^H^H^H^H^H^H^H^H^Hmselves :->\n\n\t* tests/defs.m4sh (SHELL): Move definition from here...\n\t* config/general.m4sh (SHELL): ...to here.\n\n2004-11-23  Gary V. Vaughan  <gary@gnu.org>\n\n\tThe ltdl.h header is the published interface to libltdl, and\n\tis thus not installed to $prefix/include/libltdl.  It has always\n\tbeen used with `#include <ltdl.h>', so move just that one file\n\tback to where it was before:\n\n\t* libltdl/libltdl/ltdl.h: Moved from here...\n\t* libltdl/ltdl.h: ...to here.\n\t* libltdl/Makefile.am: Adjust.\n\n2004-11-23  Peter O'Gorman  <peter@pogma.com>\n\n\tDo not require that libtoolize --ltdl=/some/path end in libltdl.\n\tMove most libltdl headers to libltdl/libltdl to allow\n\t`#include <libltdl/ltdl.h>' to always work:\n\n\t* libltdl/Makefile.am, libltdl/loaders/Makefile.am: Look for includes\n\tin the new location.\n\t* libltdl/libltdl/lt__alloc.h, libltdl/libltdl/lt__dirent.h,\n\tlibltdl/libltdl/lt__glibc.h, libltdl/libltdl/lt__private.h,\n\tlibltdl/libltdl/lt_dlloader.h, libltdl/libltdl/lt_error.h,\n\tlibltdl/libltdl/lt_system.h, libltdl/libltdl/ltdl.h,\n\tlibltdl/libltdl/slist.h: Added files, moved from libtdl/.\n\t* libltdl/lt__alloc.h, libltdl/lt__dirent.h, libltdl/lt__glibc.h,\n\tlibltdl/lt__private.h, libltdl/lt_dlloader.h, libltdl/lt_error.h,\n\tlibltdl/lt_system.h, libltdl/ltdl.h, libltdl/slist.h: Removed, moved\n\tto libltdl/libltdl.\n\n2004-11-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (LT_INIT): s/libtool 1.6/libtool 2.0/.\n\t(Invoking libtoolize): Fix typo.\n\n2004-11-22  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/ltmain.m4sh (func_mode_install): Now that func_mktempdir\n\thas been improved, the default directory template is perfectly\n\tfine.\n\n\t* doc/libtool.texi (Invoking libtoolize): Improve documentation\n\tfor use of ACLOCAL_AMFLAGS and AC_CONFIG_MACRO_DIR.\n\n2004-11-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_TAG_COMPILER): Document that with_gcc is\n\ttag-dependent.\n\n\t* m4/libtool.m4, tests/demo-nopic.test: Undo bogus commit.\n\n\t* config/ltmain.m4sh (func_mode_link), tests/objectlist.test:\n\tMake sure the argument to `-objectlist' may contain spaces.\n\n2004-11-19  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/m4general.m4sh, config/mailnotify.m4sh,\n\tclcommit.m4sh: Updated from cvs-utils--tla--1.0 to allow\n\tparallel commits, and use safer tmpfiles.\n\n2004-11-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (Libltdl interface): Typos.\n\n\t* doc/libtool.texi (Libltdl interface): Document public macros\n\tLT_PATHSEP_CHAR, LT_DIRSEP_CHAR, use in path descriptions.\n\n2004-11-18  Daniel Reed  <djr@redhat.com>\n\n\t* m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [linux]: Interpret\n\t`include' statements in toplevel ld.so.conf file.\n\n2004-11-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS) [cygwin, mingw, pw32]:\n\ttag-protect setting of ld_shlibs.\n\n2004-11-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (Libltdl interface): The path separator\n\tis system-dependent.\n\n\t* doc/libtool.texi (Linking static libraries): Typo.\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS, _LT_LANG_CXX_CONFIG)\n\t[aix4/aix5 !ia64]: Set whole_archive_flag_spec to '$convenience'\n\tso convenience libs are really added to the link cmdline.\n\n2004-11-17  Mats Rynge  <rynge@isi.edu>\n\n\t* libtool.m4 [linux]: Use only the CC basename in case statment\n\twhen checking for icc/ecc.  Allows for setting CC to the full path\n\tto the compiler.\n\n\t* libtool.m4 [solaris]: Added missing 'with linker' flags to\n\t-z allextract ... -z defaultextract flags\n\n2004-11-14  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS): Typo: s/--rpath/-rpath/g.\n\t(_LT_LANG_CXX_CONFIG): Ditto.\n\n\t* configure.ac (APIVERSION): New substituted variable.\n\t(pkgvdatadir): Ditto.  Versioned data directory.\n\t(pkgvmacrodir): Ditto.  Versioned aclocal directory.\n\t(LN): New check for LN command.\n\t* Makefile.am (aclocal_DATA): Replaced with...\n\t(pkgvmacro_DATA): ...this.\n\t(install-data-local): Remove old shared resources.\n\t(install-exec-hook): Make versioned links to executables.\n\t(uninstall-hook): Remove versioned files.\n\t* libltdl/Makefile.am (ltdldatadir): Redefine in terms of\n\tpkgvdatadir.\n\t* libltdl/loaders/Makefile.am (ltdldatadir): Ditto.\n\t* libtoolize.m4sh: Copy macro files from versioned macro directory\n\tinstead of shared aclocal directory.\n\t* doc/libtool.texi: Document it.\n\t* NEWS: Updated.\n\n2004-11-10  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom James Henstridge <james@jamesh.id.au>:\n\t* m4/libtool.m4, m4/ltdl.m4, m4/ltoptions.m4: Added commented out\n\tempty macro definitions to match each AU_DEFUN to help aclocal\n\tfrom automake-1.4 regexps find the right libtool macro files.\n\n2004-11-10  James E Wilson  <wilson@specifixinc.com>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.m4sh (func_mode_link), tests/Makefile.am,\n\tFix error message with `-objectlist' file that does not exist.\n\t* tests/objectlist.test:  New test for this.\n\n\t* Makefile.am: config/ltmain.sh is generated by\n\tconfig/ltmain.m4sh.\n\n2004-11-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (Compile mode, Link mode,\n\tLibltdl interface, Test descriptions, libtool script\n\tcontents): Some quote cleanup, more use of texinfo types.\n\n\t* doc/libtool.texi (libtool script contents):\n\techo is now ECHO; mention argument restriction.\n\n\t* doc/libtool.texi (Multiple dependencies): Minor rewording.\n\n\t* doc/libtool.texi (User defined module data, References):\n\tindentation and word-wrap cleanup.\n\n\t* doc/libtool.texi (all over): White space cleanup:\n\ttwo spaces at start of sentence, no TABs.\n\n2004-11-09  Gary V. Vaughan  <gary@gnu.org>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* doc/libtool.texi (libtool script contents): Fix description\n\tof need_lib_prefix.\n\n2004-11-08  Peter Ekberg  <spam.protected>\n\n\t* config/ltmain.m4sh (func_mode_link): forward thread\n\trelated flags to dependent applications and libraries\n\tby adding them to `inherited_linker_flags'.\n\n2004-11-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/ltoptions.m4: Change all references of LT_LIBTOOL_INIT\n\tto LT_INIT.\n\n2004-11-05  Peter Ekberg  <spam.protected>\n\n\t* ltmain.m4sh (cwrappersource): clean up other warning on MinGW.\n\n2004-11-04  Bernhard Fischer  <spam.protected>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/ltdl.m4 (LT_SYS_DLOPEN_DEPLIBS), m4/ltoptions.m4\n\t(_LT_SET_OPTIONS), README, README.alpha: Typos.\n\n2004-11-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/ltdl.c (parse_dotla_file): Fix memleak.\n\n\t* ltmain.m4sh (cwrappersource): Cast isalpha arguments correctly.\n\n2004-11-03  Peter Ekberg  <spam.protected>\n\n\t* ltmain.m4sh (cwrappersource): clean up warnings and\n\t#include errors on MinGW.\n\n2004-11-01  Peter Ekberg  <spam.protected>\n\n\t* config/ltmain.m4sh (cwrappersource): clean up warnings and\n\t#include errors.\n\n2004-11-01  Peter Ekberg  <spam.protected>\n\n\tSometimes, a wrapper script is generated for an executable that,\n\titself, does not link against an uninstalled library.  It appears\n\tthat this can happen if you are building a project where:\n\n\t  (1) there is a library\n\t  (2) there is an executable that does not, itself, link against\n\t      that library\n\n\tIn this case, notinst_deplibs is empty, and when the wrapper\n\tscript is loaded by libtool during ./libtool mode=install, there\n\tis a check for \"is notinst_deplibs empty\".  In this case, it is,\n\tso libtool reports an error.\n\n\tI don't think it is wrong to have a wrapper script for an exe that\n\t*technically* doesn't need it.  But instead of checking for\n\tnotinst_deplib nonempty as a proxy for \"did wrapper script get\n\tsourced into my environment properly\" a different var should be\n\tused.\n\n\t* config/ltmain.m4sh (func_mode_install): set new variable\n\t`generated_by_libtool_version' in wrapper script when using\n\tlibtool_install_magic.  When verifying that wrapper script was\n\tproperly sourced, check that `generated_by_libtool_version' is\n\tnon-empty, instead of using notinst_deplibs.\n\n2004-11-01  Charles Wilson  <spam.protected>,\n\t    Peter Ekberg  <spam.protected>\n\n\t* config/ltmain.m4sh (func_mode_install): On Windows based hosts,\n\tensure that import libraries don't get stripped.\n\t* m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER): On Windows based hosts,\n\tuse postinstall_cmds to strip DLL (not import lib!) when symbol\n\tstripped installation was requested.\n\n2004-10-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/ltdl.c (loader_init_callback): Back out broken cast.\n\n\t* libltdl/ltdl.c (loader_init_callback, lt_dlexit): Add casts to\n\ttarget type.\n\n\t* tests/defs.m4sh (func_exec): `shift'ing when there is nothing\n\tto shift is non-portable.\n\n2004-10-28  Patrick Welche  <prlw1@newn.cam.ac.uk>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* Makefile.am, Makefile.maint: Use path for dependencies built\n\tin the source tree, to cater for BSD make.\n\n2004-10-24  Noah Misch  <noah@cs.caltech.edu>\n\n\t* config/ltmain.m4sh (func_lalib_p, func_ltwrapper_p): New\n\tfunctions that abstract .la sanity checking.\n\t(func_mode_execute, func_mode_install, func_mode_link)\n\t(func_mode_uninstall): Use them.\n\n2004-10-24  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/ltmain.m4sh (opt_silent): Whether --silent was given.\n\t(run, show): Deleted.  All callers converted to opt_dry_run,\n\topt_silent or calls to func_show_eval.\n\t* tests/mdemo-dryrun.test: Adjust.\n\n\t* HACKING: Fix a typo in the gpg --verify instructions.\n\n\t* Makefile.maint (cvs-dist): Generate signatures and directives\n\tfor bz2 upload.\n\n2004-10-23  Peter O'Gorman  <peter@pogma.com>\n\n\t* config/ltmain.m4sh (func_mode_link): Make Gary's new tests\n\tpass. When the output wrapper script is not in the current\n\tdirectory, we can not use an rpath which is relative to the\n\tcurrent directory. Use an absolute path instead.\n\n2004-10-22  Gary V. Vaughan  <gary@gnu.org>\n\n\t* clcommit.m4sh: Add --rcfile option.\n\n\t* clcommit.m4sh: Updated again, to support file list limited\n\tcommits to CVS, and to fix another occurence of the bash bug\n\tthat was preventing non-tla users from sending a commit mail.\n\n2004-10-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* TODO, libltdl/lt_error.h, libltdl/ltdl.c, libltdl/ltdl.h:\n\tUndo accidental commit.\n\n\t* Makefile.maint: Fix typo.\n\n2004-10-22  Gary V. Vaughan  <gary@gnu.org>\n\n\t* clcommit.m4sh, config/mailnotify.m4sh: Updated from\n\tcvs-utils--tla--1.0 to fix quoting of metachars in patch names.\n\n\t* HACKING: Updated: `.in' files are now `.m4sh'; document some\n\tmore coding standards for these files.\n\n\t* config/general.m4sh (sed_double_backslash): Undo an\n\tover-optimisation.\n\n2004-10-21  Gary V. Vaughan  <gary@gnu.org>\n\n\t* AUTHORS: Reformatted to better reflect the current state of\n\tLibtool maintainership.\n\t* THANKS: Reformatted to give maintainers a quick way to look\n\tup who has supplied FSF paperwork.\n\n2004-10-21  Noah Misch  <noah@cs.caltech.edu>,\n\t    Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/general.m4sh (sed_double_backslash): Improve this sed\n\texpression to correct left anchored \\$ input to\n\tdouble_quote_subst, as well as backslash escaped $ preceded by\n\tany odd-numbered amount of \\ characters.\n\n2004-10-20  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/general.m4sh (sed_double_backslash): New sed expression\n\tto escape \\$ properly in combination with double_quote_subst.\n\t(func_quote_for_eval): Four space indent margin for functions!\n\t(func_quote_for_expand): Use $sed_double_backslash.\n\t(func_show_eval): New function that echos an escaped but variable\n\texpanded command, and then evaluates it.\n\n2004-10-20  Noah Misch  <noah@cs.caltech.edu>,\n\t    Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4 (sed_quote_subst): Remove superfluous backslashes\n\tfrom the match character set.\n\t(double_quote_subst): Ditto.\n\t* config/general.m4sh (sed_quote_subst): Ditto.\n\t(double_quote_subst): New variable, copied from\n\tm4/libtool.m4. Much the same as sed_quote_subst, but variable\n\treferences are not quoted.\n\t(func_quote_for_eval): Given any $foo; $bar and\n\t$foo must be identical after the following commands:\n\t    func_quote_for_eval \"$foo\"\n\t    eval \"bar=$func_quote_for_eval_result\"\n\t(func_quote_for_expand): In a similar vein to to func_quote_for_eval,\n\texcept that variable expansions are not protected when quoting the\n\tcommand for subsequent display.\n\t* config/ltmain.m4sh: Factor away use of $sed_quote_subst now that\n\tit has been subsumed into func_quote_for_eval.\n\t(func_mode_link): Instead of `2004-10-14 Peter O'Gorman' below,\n\tuse func_quote_for_expand so that ${wl} is expanded properly in\n\tthe $show expression.\n\n2004-10-16  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/ltmain.m4sh (func_mode_finish): solaris-2.6 also has\n\tcrle(1).\n\tReported by Albert Chin-A-Young <china@thewrittenword.com>\n\n2004-10-16  Gary V. Vaughan  <gary@gnu.org>\n\n\tAdd some new tests for Libtool's support of Automake\n\tsubdir-objects builds.  This marks the beginning of a move to an\n\tAutotest driven test framework, which will eventually allow us to\n\ttrim away many of the generated files in the current test demo\n\tsubdirectories:\n\n\t* configure.ac (AC_CONFIG_TESTDIR): Re-enable commented out\n\tAutotest macros.\n\t(AUTOTEST, M4SH): Use --language long hand.\n\t* bootstrap: Generate tests/testsuite, and by implication\n\ttests/package.m4.\n\t* Makefile.am (edit): Add substitutions needed to generate\n\ttests/package.m4 from bootstrap.\n\t(check-recursive): Add tests/testsuite.\n\t(TESTSUITE): The new Autotest testsuite target.\n\t(TESTSUITE_AT): The Autotest sources.\n\t(EXTRA_DIST): Distribute the generated testsuite and sources.\n\t(tests/package.m4): Use $(edit) to propagate package metadata to\n\tthe new tests.\n\t(tests/testsuite): Build the testsuite.\n\t(tests/atconfig): How to regenerate the file.\n\t(check-local): Hook Autotest into `make check'.\n\t(installcheck-local): Run the testsuite on the installed tree.\n\t(clean-local): Tidy our file droppings.\n\t* tests/Makefile.am: Remove bitrotted code from Autotest\n\texperiments in Autoconf 2.52 era.  Updated the rest and moved into\n\tMakefile.am.\n\t* tests/testsuite.at: New container for Autotest test groups.\n\t* tests/am-subdir.at: New test group for compatibility with\n\tAutomake's subdir-objects builds.  Currently holds two tests, one\n\tfor a C project and another similar project in C++.\n\t* TODO: Add an entry to remind us that these new tests expose a\n\tbug in libtool.\n\t* NEWS: Updated.\n\n2004-10-14  Peter O'Gorman  <peter@pogma.com>\n\n\t* config/ltmain.m4sh: Revert most of my last commit, only eval\n\t\\$show \\\"$cmds\\\", and only when building a library. I'm a wimp.\n\tThanks Gary for pointing out errors in previous commit.\n\n2004-10-13  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/ltmain.m4sh (func_mode_finish): Mention crle(1) on\n\tsolaris 2.7 and higher in the finalisation notes.\n\tReported by Kurt J. Lidl <lidl@pix.net>\n\n\t* tests/cdemo-undef.test: New test for hosts that allow shared\n\tlibraries with undefined symbols, but have no C++ compiler\n\tinstalled.\n\t* tests/Makefile.am (COMMON_TESTS): Add it.\n\n2004-10-13  Peter O'Gorman  <peter@pogma.com>\n\n\t* config/ltmain.m4sh: Make sure that we $show what we will $run,\n\tuse eval $show if we do $run eval.\n\n2004-10-13  Charles Wilson  <spam.protected>\n\n\t* config/ltmain.m4sh: add foo/bin for every foo/lib\n\tin dllsearchpath when creating wrapper script.  Fixes\n\tdepdemo-relink test failure.\n\n2004-10-12  Charles Wilson  <spam.protected>\n\n\t* config/ltmain.m4sh (func_mode_link): don't relink\n\ton cygwin/mingw; no need.  But do ensure that wrappers\n\tare created unless doing a purely static build.\n\n2004-10-13  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/tagdemo-undef.test: New test for hosts that allow shared\n\tlibraries with undefined symbols.\n\t* tests/Makefile.am (CXX_TESTS): Add it.\n\n2004-10-11  Charles Wilson  <spam.protected>\n\n\t* tests/link.test: Fix check for use of libnlsut.a under\n\tCygwin.\n\n2004-10-11  Noah Misch  <noah@cs.caltech.edu>\n\n\t* tests/quote.test: Do not look for $preargs in the output,\n\tbecause libtool may change them.\n\n2004-10-10  Charles Wilson  <spam.protected>\n\n\t* config/ltmain.m4sh: Really don't require versions of GNU\n\tsed newer than 3.02 for Cygwin and MinGW, and don't break\n\tdryrun mode.\n\n2004-10-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* config/getopt.m4sh: Under MinGW, reported paths may include ':'\n\tso ':' should not be used as the sed delimiter.  Use '*' instead\n\tsince it is very unlikely to appear in a path.\n\n2004-10-10  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* config/ltmain.m4sh: Don't require versions of GNU sed newer than\n\t3.02 for Cygwin and MinGW.\n\n2004-10-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tests/pdemo-inst.test: Correction for mis-application of\n\tCharles Wilson's earlier patch.\n\n2004-10-09  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4 (_LT_LANG_F77_CONFIG): Make sure the save and\n\trestore code for CC is nested at the same depth.\n\t(_LT_LANG_CXX_CONFIG): Ditto, but for several variables.\n\n2004-10-08  Gary V. Vaughan  <gary@gnu.org>\n\n\tUpdate to the latest commit and mailnotify scripts from\n\tgary@gnu.org--2004/cvs-utils--tla--1.0:\n\n\t* commit, config/mailnotify: Removed.  Now built from...\n\t* clcommit.m4sh, config/mailnotify.m4sh: ...these new sources.\n\t* Makefile.maint (commit, config/mailnotify): How to build them.\n\t* bootstrap: If we have a checked out tree (i.e. clcommit.m4sh\n\tis present), then build them.\n\n2004-10-08  Gary V. Vaughan  <gary@gnu.org>\n\n\tFix some issues that mangled the reexecution path to a script,\n\tand thus prevented it from finding itself:\n\n\t* config/general.m4sh (progname): Don't actually change the name\n\tof the script if it begins with a `-', just prepend `./'.\n\t(progpath): Add a new clause that first searches the execution\n\tPATH, and then finally assumes this script is in the current\n\tworking directory if $progname has no directory separators (e.g\n\twhen invoked as `$SHELL progname').\n\n2004-10-08  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/general.m4sh (func_verbose): Work around a bash bug in\n\tshell functions.\n\n2004-10-08  Charles Wilson  <cygwin@cwilson.fastmail.fm>\n\n\t* tests/pdemo-inst.test: pdemo-inst should depend on pdemo-make.\n\t* config/ltmain.m4sh: Windows and Cygwin reserve the .lnk\n\textension to represent shortcuts.  Use the extension \".lnkscript\"\n\trather than \".lnk\" for the piecewise linking ld script in order to\n\tavoid the conflict.\n\n2004-10-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/ltdl.c (lt_dlexit, lt_dlpath_insertdir): Fix memleaks,\n\tfree user_search_path on lt_dlexit.\n\n2004-10-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/sh.test: Remove tests which fail on AS_SHELL_SANITIZE\n\tfrom autoconf >= 2.59.\n\n\t* TODO: Remove item: no need for a libltdl without stdio.\n\n2004-10-07  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/defs.m4sh (scripts): Actually scan the generated ltmain.sh\n\tfor shell portability problems.\n\n\t* m4/libtool.m4 (_LT_FORMAT_COMMENT): Shell meta-characters in\n\t_LT_DECL descriptions were not being escaped before injection into\n\tTAG CONFIG here documents in config.status.\n\n2004-10-06  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4 (_LT_PROG_CXX, _LT_PROG_F77): New macros to work\n\taround the deficiencies in AC_PROG_CXX and AC_PROG_F77.\n\t* configure.ac: Cleaned up, having moved the checks for compilers\n\twhich do not exist to libtool.m4.\n\n2004-10-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/ltdl.c (try_dlopen): Move .la file parsing\n\tpart.. (parse_dotla_file): ..here.  Adjust.\n\n\t* libltdl/ltdl.c (load_deplibs, try_dlopen): Revert unnecessary casts\n\tto int from my patch from 2004-10-01.\n\n\t* AUTHORS: Add myself.\n\n2004-10-05  Peter O'Gorman  <peter@pogma.com>\n\n\t* config/ltmain.m4sh [darwin]: Make the -dylib_file flag work on\n\tolder darwins too. Reported by Christoph Egger.\n\n2004-10-05  Gary V. Vaughan  <gary@gnu.org>\n\n\t* configure.ac: Bumped version to 2.1a.\n\n2004-10-04  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4 (_LT_PROG_ECHO_BACKSLASH): Don't confuse $ECHO\n\twith $lt_ECHO, or we always get a libtool with ECHO=echo, rather\n\tthan testing for a mechanism that quotes \\ properly.\n\t* NEWS: Updated.\n\n\t* config/ltmain.m4sh: Need to include getopt.m4sh earlier so that\n\tprogpath is set before it is called to --no-reexec.\n\t* NEWS: Updated.\n\n2004-10-04  Gary V. Vaughan  <gary@gnu.org>\n\n\tWithout this change, the distributed libtool tarball has a\n\tdependency on autom4te.  There was some inconsistency in the\n\tfilenames: now we have foo.m4sh -> m4sh -> foo.in -> configure\n\t-> foo[.sh].  Bootstrap runs the m4sh steps and the resulting .in\n\tfiles are distributed:\n\n\t* tests/Makefile.am (EXTRA_DIST): Distribute defs.m4sh.\n\t* Makefile.am (EXTRA_DIST): Distribute libtoolize.m4sh.\n\t(libtoolize.in, libtoolize): Split into bootstrap and runtime\n\tstages.\n\t($(top_srcdir)/tests/defs.in, $(top_srcdir)/tests/defs): Ditto.\n\t($(top_srcdir)/config/ltmain.sh): Swap ltmain.m4sh and ltmain.in\n\tnames.\n\t* bootstrap: Make libtoolize.in and tests/defs.in.\n\t* NEWS: Updated.\n\n2004-10-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* README, README.alpha: Update notes regarding available VERBOSE\n\tsettings.\n\n2004-10-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* config/ltmain.in: Change $XSED to $Xsed to fix hang noticed\n\tunder MinGW.\n\t* tests/defs.in: Support VERBOSE=debug to enable shell tracing\n\twhile running tests.\n\n2004-10-03  Gary V. Vaughan  <gary@gnu.org>\n\n\t* NEWS: Updated.\n\t* configure.ac: Bumped version to 1.9e.\n\n\tGNU libtool 1.9d was released.\n\n\t* configure.ac: Bumped version to 1.9d.\n\t* NEWS: Updated.\n\n\t* libltdl/lt__alloc.h (lt__alloc_die): Declare with LT_SCOPE as\n\tper Ralf's original patch.\n\tReported by Bob Friesenhahn <bfriesen@simple.dallas.tx.us>\n\n\t* libltdl/Makefile.am (libltdlc_la_LIBADD): Don't use\n\tlibdlloader_la_OBJECTS, an undocumented Automake internal\n\tvariable...\n\t(libltdlc_la_SOURCES): ...use libdlloader_la_SOURCES here\n\tinstead.\n\tReported by Bob Friesenhahn <bfriesen@simple.dallas.tx.us>\n\n\t* libltdl/argz_.h: Forgot to spell lt_system.h with just one `_'.\n\n\t* libltdl/argz_.h: Forgot to include lt__system.h for LT_SCOPE\n\tdefinition.\n\n2004-10-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>,\n\t    Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/lt__alloc.h: Declare exported functions with LT_SCOPE\n\tfor mingw32.\n\t* libltdl/lt__dirent.h: Ditto.\n\t* libltdl/argz._h: Ditto.  Be careful about not requiring\n\tadditional libltdl files when used outside of libltdl.\n\t* libltdl/slist.h: Ditto.\n\t* HACKING: Add a section on libltdl implementation layering.\n\n2004-10-03  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/quote.test: echo is called ECHO now.  Make sure we extract\n\tthe value of ECHO from the libtool script.\n\tReported by Bob Friesenhahn <bfriesen@simple.dallas.tx.us>\n\n2004-10-02  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4 (hardcode_shlibpath_var) [darwin7*]: Revert my\n\thack from 2004-09-30 now that I've removed /lib/hello.la and the\n\ttests work properly for me again.\n\n2004-10-02  Jim Tison  <jtison@us.ibm.com>\n\n\tInitial support for s390x-ibm-tpf:\n\n\t* m4/libtool.m4: Correct obvious spelling errors in remarks.\n\t(_LT_ENABLE_LOCK): Make s390x-ibm-tpf hosts adopt elf64_s390\n\tconventions.\n\t(_LT_SYS_DYNAMIC_LINKER): Set defaults for s390x-ibm-tpf host.\n\t(_LT_CHECK_MAGIC_METHOD): Skip all dependency checks for\n\ts390x-ibm-tpf hosts.\n\t(_LT_LINKER_SHLIBS): Make s390x-ibm-tpf hosts adopt GNU/Linux OS\n\tattributes.\n\t* NEWS: Updated.\n\n2004-10-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* config/ltmain.in (func_mode_install): Need to set $tmpdir before\n\tusing it.\n\n\t* config/ltmain.in (func_mode_link): Fix quoting bug.  Fixes\n\te.g. the quoting of the -export-symbols-regex argument in .la\n\tfiles' relink_command.\n\n\t* libltdl/lt__alloc.c (lt__memdup): Allocation can fail, so we\n\tneed to guard against null pointer dereference here.\n\t* libltdl/ltdl.c (lt_dlcaller_register): Ditto.\n\n\t* libltdl/slist.c (slist_foreach): result was declared as\n\tinner variable, shadowing the actually returned value.\n\n\t* libltdl/ltdl.c (load_deplibs, try_dlopen): Cast argument\n\tto isspace/isalnum to the correct range.  Also, cast to int to\n\tavoid compiler warnings.\n\n2004-09-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/ltdl.c (try_dlopen): Fix null pointer dereference in\n\tcase the name given to lt_dlopen contains no extension.\n\n\t* libltdl/lt_dlloader.c (lt_dlloader_remove), libltdl/ltdl.c\n\t(tryall_dlopen, lt_dlhandle_next): Show usage of function pointers.\n\n\t* doc/libtool.texi (LT_INIT, Using libltdl)\n\t(Module loaders for libltdl, Multiple dependencies)\n\t(libtool script contents): Fix several typos (trivial change).\n        Also, libltdl consists of more than two small files.\n\n2004-09-30  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4 (hardcode_shlibpath_var) [darwin7]: My Panther\n\tworkstation doesn't hardcode the shared library path, although it\n\tused to, so this is more likely a function of the binutils and/or\n\tgcc I am using at the moment.  The hardcode value setting code for\n\tthe configure script sucks at the moment though...\n\t* TODO: ...and needs to do a test compile instead of a table\n\tlookup before 2.0 final.\n\n\t* m4/libtool.m4 (echo): Use ECHO throughout for consistency with\n\tconfig/ltmain.in.\n\tReported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (rm): Use RM throughout for consistency with\n\tconfig/ltmain.in.\n\tReported by Charles Wilson <cwilson@spam.protected>\n\n2004-09-27  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4 (_LT_LANG_CXX_CONFIG) [darwin]: Don't echo gcc -v\n\toutput during configure. (Really this time, honest)\n\n2004-09-26  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS) [aix]: In archive_expsym_cmds,\n\tmove -bnoentry linker option before $compiler_flags to honor any\n\tpossible -e entries in LDFLAGS.\n\n2004-09-25  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/ltmain.in (func_mode_link): When linking an installed\n\tlibtool library on the command line using -lfoo we need to find\n\tthe library in the search paths and add it's dependency_libs to\n\tthe link in the conv pass so that any libtool libs listed are\n\tcorrectly expanded in the link pass.\n\n2004-09-24  Charles Wilson  <cwilson@spam.protected>\n\n\t* libtool.m4 (_LT_SYS_DYNAMIC_LINKER): Revert changeset from\n\t`2004-09-22  Charles Wilson  <cwilson@spam.protected>'.\n\n2004-09-24  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/general.m4sh (Xsed): Set a default when not used from\n\tltmain.in.\n\t(ECHO): Audit for (and correct!) uses of $ECHO with more than one\n\targument, which breaks when ECHO='printf %s\\n', and with possible\n\t`-' as first character of the argument, which breaks `print -r'\n\tand some implementations of `echo'.\n\t* config/ltmain.in, tests/defs.in, libtoolize.in (ECHO): Ditto.\n\tReported by Albert Chin-A-Young <china@thewrittenword.com>\n\n2004-09-24  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4 (_LT_CMD_STRIPLIB) [darwin]: strip archives too.\n\n\t* m4/libtool.m4 (_LT_LANG_CXX_CONFIG) [darwin]: Don't echo gcc -v\n\toutput during configure.\n\n2004-09-24  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4 (_LT_DECL_EGREP): Only the newest CVS autoconf\n\tAC_SUBSTs for GREP.  Do our own here too to cater for release\n\tautoconfen.\n\n\t* m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [openbsd3.3]: Set\n\tneed_version to yes or no depending on the os release.\n\tReported by Dalibor Topic <robilad@kaffe.org>\n\n2004-09-23  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/cdemo-conf.test, tests/cdemo-exec.test,\n\ttests/cdemo-make.test, tests/cdemo-shared.test,\n\ttests/cdemo-static.test, tests/demo-conf.test,\n\ttests/demo-deplibs.test, tests/demo-exec.test,\n\ttests/demo-hardcode.test, tests/demo-inst.test,\n\ttests/demo-make.test, tests/demo-nofast.test,\n\ttests/demo-noinst-link.test, tests/demo-nopic.test,\n\ttests/demo-pic.test, tests/demo-relink.test,\n\ttests/demo-shared.test, tests/demo-static.test,\n\ttests/demo-unst.test, tests/depdemo-conf.test,\n\ttests/depdemo-exec.test, tests/depdemo-inst.test,\n\ttests/depdemo-make.test, tests/depdemo-nofast.test,\n\ttests/depdemo-relink.test, tests/depdemo-shared.test,\n\ttests/depdemo-static.test, tests/depdemo-unst.test,\n\ttests/f77demo-conf.test, tests/f77demo-exec.test,\n\ttests/f77demo-make.test, tests/f77demo-shared.test,\n\ttests/f77demo-static.test, tests/link-2.test, tests/link.test,\n\ttests/mdemo-conf.test, tests/mdemo-dryrun.test,\n\ttests/mdemo-exec.test, tests/mdemo-inst.test,\n\ttests/mdemo-make.test, tests/mdemo-shared.test,\n\ttests/mdemo-static.test, tests/mdemo-unst.test,\n\ttests/mdemo2-conf.test, tests/mdemo2-exec.test,\n\ttests/mdemo2-make.test, tests/nomode.test, tests/pdemo-conf.test,\n\ttests/pdemo-exec.test, tests/pdemo-inst.test,\n\ttests/pdemo-make.test, tests/quote.test, tests/sh.test,\n\ttests/suffix.test, tests/tagdemo-conf.test,\n\ttests/tagdemo-exec.test, tests/tagdemo-make.test,\n\ttests/tagdemo-shared.test, tests/tagdemo-static.test,\n\ttests/tagtrace.test: POSIX `.' searches only in user's $PATH, so\n\twe must use `. ./defs' to source the common code.\n\tReported by Alexandre Duret-Lutz <adl@src.lip6.fr>\n\n\t* m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS): Gah.  Merge error\n\tcorrected.\n\n2004-09-23  Gary V. Vaughan  <gary@gnu.org>\n\n\tSince defs can change (path to grep for example) when it is made\n\tfor a different host, it can't be shipped.  That also means that\n\tdefs will always be generated in the build tree, so each test case\n\tcan have the srcdir discovery factored away into tests/defs.in:\n\n\t* Makefile.am (EXTRA_DIST): s/defs/defs.in/g\n\t* tests/Makefile.am (defs): New rule to remake defs from the\n\tparent directory's Makefile.\n\t* tests/cdemo-conf.test, tests/cdemo-exec.test,\n\ttests/cdemo-make.test, tests/cdemo-shared.test,\n\ttests/cdemo-static.test, tests/demo-conf.test,\n\ttests/demo-deplibs.test, tests/demo-exec.test,\n\ttests/demo-hardcode.test, tests/demo-inst.test,\n\ttests/demo-make.test, tests/demo-nofast.test,\n\ttests/demo-noinst-link.test, tests/demo-nopic.test,\n\ttests/demo-pic.test, tests/demo-relink.test,\n\ttests/demo-shared.test, tests/demo-static.test,\n\ttests/demo-unst.test, tests/depdemo-conf.test,\n\ttests/depdemo-exec.test, tests/depdemo-inst.test,\n\ttests/depdemo-make.test, tests/depdemo-nofast.test,\n\ttests/depdemo-relink.test, tests/depdemo-shared.test,\n\ttests/depdemo-static.test, tests/depdemo-unst.test,\n\ttests/f77demo-conf.test, tests/f77demo-exec.test,\n\ttests/f77demo-make.test, tests/f77demo-shared.test,\n\ttests/f77demo-static.test, tests/link-2.test, tests/link.test,\n\ttests/mdemo-conf.test, tests/mdemo-dryrun.test,\n\ttests/mdemo-exec.test, tests/mdemo-inst.test,\n\ttests/mdemo-make.test, tests/mdemo-shared.test,\n\ttests/mdemo-static.test, tests/mdemo-unst.test,\n\ttests/mdemo2-conf.test, tests/mdemo2-exec.test,\n\ttests/mdemo2-make.test, tests/nomode.test, tests/pdemo-conf.test,\n\ttests/pdemo-exec.test, tests/pdemo-inst.test,\n\ttests/pdemo-make.test, tests/quote.test, tests/sh.test,\n\ttests/suffix.test, tests/tagdemo-conf.test,\n\ttests/tagdemo-exec.test, tests/tagdemo-make.test,\n\ttests/tagdemo-shared.test, tests/tagdemo-static.test,\n\ttests/tagtrace.test: Removed srcdir discovery boilerplate...\n\t* tests/defs.in: ...and put it here.\n\n2004-09-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS): move symcode calculation\n\tto correct place.\n\t* doc/libtool.texi (libtool script contents): update description\n\tof global_symbol_to_cdecl.\n\n2004-09-23  Gary V. Vaughan  <gary@gnu.org>\n\n\t* configure.ac (M4SH): AC_SUBST m4sh expander.\n\t* config/general.m4sh, config/getopt.m4sh: New files with factored\n\tout functionality from...\n\t* config/ltmain.in, libtoolize.in: ...here.  m4_include the shared\n\tcode, and call AS_SHELL_SANITIZE.  Also quote all `[' and `]' to\n\tsurvive m4 run.\n\t(func_serial): No need to double up m4sh quotes after a `#'.\n\t(func_check_macros): Escape `dnl' to stop m4sh interpreting it as\n\ta macro.\n\t* tests/defs.in: New file expanded into tests/defs by autom4te.\n\t* m4/libtool.m4 (_LT_DECL_EGREP): Also require fgrep for the tests\n\tthat use it.\n\t* Makefile.am ($(top_srcdir)/config/ltmain.sh): Now built with\n\tM4SH.\n\t(libtoolize): Ditto.\n\t* bootstrap: Set M4SH for call to make.\n\t* HACKING: No need to sync to AS_SHELL_SANITIZE by hand any more.\n\n\t* m4/libtool.m4: _LT_DECL uppercase ECHO.\n\t* config/ltmain.in: Use it throughout.\n\t(func_mkdir_p): Now matches the other implementations in\n\ttests/defs and libtoolize.in.\n\t* tests/sh.test: Updated to detect ECHO misuse.\n\n2004-09-22  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/ltmain.in (func_mode_link): Propagate a convenience\n\tlibrary's dependency libs correctly when it is being linked into a\n\tlibtool library.  Deplibs are now propagated whether libdir is set\n\tor not.\n\n2004-09-22  Andreas Schwab  <schwab@suse.de>\n\n\tThe dlpreopen pass over libraries reverses the elements in the\n\t$deplibs list.  This causes problems when the link pass tries to\n\tfind libraries when they are located in non-standard places\n\tdenoted by -L options.  Due to the reversed order these -L options\n\toccur after the libraries that need them, and they are not found:\n\n\t* config/ltmain.in: (Un)Reverse $deplibs list at the start of the\n\tlink pass in lib mode.\n\n2004-09-22  Charles Wilson  <cwilson@spam.protected>\n\n\t* ltmain.in (func_generate_dlsyms) [cygwin, mingw]: when creating\n\ta .exp file for an executable, also create a .def file, and add\n\tthat file to the link command via SYMFILES.  This causes binutils\n\tto generate an .edata section, and allows self dlopening to work.\n\t* NEWS: Updated.\n\n\t* m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER): better quoting for\n\tpostinstall_cmds and postuninstall_cmds to allow spaces in install\n\tpaths.\n\n\t* config/ltmain.in (func_generate_dlsyms): Addresses in\n\t_preloaded_symbols[] cannot go into .rdata section if symbols are\n\tDATA imported from DLL, on windows, because runtime relocations\n\tmust happen.\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS([TAGNAME])):\tBuild exports for\n\tsymbols in .rdata sections.\n\n2004-09-19  Gary V. Vaughan  <gary@gnu.org>\n\n\tThe checks in assign.test are trying to catch case of this ilk:\n\t`foo=bar break', but unfortunately they also choke on `foo=bar;\n\tbreak' and `foo=bar && break'.  Writing a sophisticated test to\n\tcatch just the intended case seems like more trouble than it's\n\tworth, but leaving the test in causes the testsuite to fail on\n\tvalid m4sh output:\n\n\t* tests/assign.test: Removed; chokes on perfectly valid shell\n\tsyntax.\n\t* tests/Makefile.am (COMMON_TESTS): Remove assign.test.\n\t* tests/defs.in (scripts): Don't check the m4sh inputs, go back\n\tto checking the generated ltmain.sh script.\n\n2004-09-17  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/ltmain.in (func_echo): Except for multi-line warnings and\n\terrors, always use func_echo.  $show is for command output, and\n\t$echo is for internal use in backtick expressions and similar.\n\n2004-09-17  Gary V. Vaughan  <gary@gnu.org>\n\n\tMissed a couple of MKDIR_P references in ltmain.in in my last\n\tpatch; fix them carefully.  Introduce an opt_dry_run to ltmain.in\n\tso that the implementations of func_mkdir_p can converge, and a\n\tfunc_mktempdir to do a better job of temporary directory creation:\n\n\t* libtoolize.in (func_mkdir_p): Don't fail if the directory wasn't\n\tcreated in dry run mode.\n\t* tests/defs (func_mkdir_p): Ditto.  We don't actually have a dry\n\trun mode for the tests, but the function is written carefully to\n\tbe kept in synch and work correctly here too.\n\t* config/ltmain.in (func_mkdir_p): Ditto.  This copy of the\n\tfunction now only differs in its use of $echo over $ECHO.\n\t(func_extract_archive): Removed first redundant mkdir call.\n\t(func_mktempdir): New function that tries to avoid races when\n\tmaking temporary directories.\n\t(opt_dry_run): Set this if --dry-run is given at the CLI, or if\n\ttests/mdemo-dryrun.test has forced the value of $run.\n\t(func_mode_install): Call $MKDIR directly and error out if the\n\tdirectory cannot be created.\n\t(func_mode_link): Rather than copying func_mkdir_p into the\n\twrapper script as a replacement for $MKDIR_P, we know that the\n\tscript won't be called my `make -j', so write the current value of\n\t$MKDIR.\n\n2004-09-17  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4: remove an extra \"]\"\n\n\t* m4/libtool.m4 [darwin] (_LT_LANG_CXX_CONFIG): Changes for 10.4.\n\t* config/libtool.in [darwin]: ditto.\n\n2004-09-16  Gary V. Vaughan  <gary@gnu.org>\n\n\tMy most recent `2004-09-02 Gary V. Vaughan' patch for mkdir_p\n\tbelow is horrendously broken since it makes the installed libtool\n\ttry to run the mkinstalldirs or install-sh helper scripts.  This\n\tpatch fixes the `make -j' mkdir race condition internally:\n\n\t* libtoolize.in (func_mkdir_p): New slice and dice algorithm\n\tto build the directory tree one dir at a time, ignoring errors\n\tuntil the end incase they are transient due to a concurrent\n\tidentical mkdir.\n\t* tests/defs (func_mkdir_p): Ditto.\n\t* config/ltmain.in (func_mkdir_p): Ditto, except that ltmain.in\n\tuses $echo rather than $ECHO, and uses $show and $run to interact\n\tcorrectly with the command line.\n\t* configure.ac (AM_INIT_AUTOMAKE): 1.8 is sufficient again.\n\t* Makefile.am (edit): Don't substitute automake's $(mkdir_p).\n\t* NEWS: Updated.\n\n2004-09-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libltdl/loaders/loadlibrary.c: Compilation fixes (originally\n\tfrom Gary V. Vaughan) to compile under MinGW.\n\t* config/mkstamp: Translate input data so that it is assured to\n\tuse the Unix line terminations. This is necessary under Windows if\n\tthe files are checked out with CR/NL line terminations. A\n\tside-effect of this change is that input must always be from\n\tstdin. Previously a filename argument was accepted as well.\n\n2004-09-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* tests/Makefile.am: Use the same CPP, F77, CXX and CXXFLAGS\n\tfor the test suite.\n\n2004-09-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_ENABLE_LOCK):Replace AC_TRY_LINK with\n\tAC_LINK_IFELSE to get rid of `autoconf -Wobsolete' warning.\n\t* m4/ltdl.m4 (LT_LIB_DLLOAD): Ditto.\n\n2004-09-15  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/ltmain.in (func_quote_for_eval): Set a return value to\n\tavoid forking at every call.  Changed all callers.\n\t(func_mode_link): Simplified, and removed the final non-portable\n\tnested escaped double quotes in back quotes usage in the process.\n\n2004-09-14  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/ltmain.in (func_quote_for_eval): Factor out the ugly\n\tshell meta-character quoting.  Changed all callers.\n\n2004-09-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS): Simplification:\n\tdistinguish between data and code symbols on every system.\n\n2004-09-14  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\tUnfortunately, libtool has no way of telling if unrecognized\n\tcompiler flags need an argument or not, and can disect options and\n\tpass parts through incorrectly.  This changeset reverts both\n\t2004-09-06 Albert Chin-A-Young (topmost) and 2004-09-05 Albert\n\tChin-A-Young below, and recognises more options explicitly:\n\n\t* config/ltmain.in (func_mode_link): Pass through options needed\n\tto compile in 64-bit mode with gcc, and the SGI, Sun, HP and IBM\n\tcompilers.\n\n2004-09-13  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4 (_LT_CMD_GLOBALS_SYMBOLS): Fix a typo I made when\n\tapplying 2004-09-11 Ralf Wildenhues.\n\n2004-09-12  Brad  <brad@comstyle.com>\n\n\t* libtool.m4: Fixes for the OpenBSD support\n\n2004-09-12  Peter O'Gorman  <peter@pogma.com>\n\n\tOur fortran tests were not very good. All the libraries created\n\twere convenience libs, so we did not test the creation of shared\n\tlibraries on any platform. Also none of the libs used any actual\n\tfortran library calls, adding a call to write(*,*) in each lib\n\tcauses the tests to fail on darwin (and presumably other platforms).\n\tThese new tests would likely cause many more fortran test failures,\n\tso if there is an error during make it is reported as SKIP.\n\n\t* tests/f77demo-make.test: Don't fail hard, skip on failure.\n\t* tests/f77demo/foof2.f: New file.\n\t* tests/f77demo/foof3.f: New file.\n\t* tests/f77demo/fprogram.f: Call routine in new lib.\n\t* tests/f77demo/foof.f: Call routine in another new lib.\n\t* tests/f77demo/Makefile.am: Make a couple of new libraries, add\n\t$(FLIBS) to cprogram LDADD.\n\n2004-09-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS): The linker distinguishes\n\tdata and code symbols on linux-gnu/ia64.  Fixes multiple testsuite\n\tfailures.\n\t* NEWS: Updated.\n\n2004-09-06  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/loaders/shl_load.c (get_vtable): Typo.\n\n2004-09-06  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\tHopefully, passing unrecognised compiler arguments through\n\tunmolested will prove to be a good plan for the 2.0 release.  If\n\tit goes awry, we can get back to where we were by reverting this\n\tpatch and the 2004-09-05 Albert Chin-A-Young patch, aka\n\tgary@gnu.org--2004/libtool--devo--1.0--patch-169,172:\n\n\t* config/ltmain.in (func_mode_link): Because we now pass through\n\tcompiler arguments we doesn't recognize, the code to pass\n\tthrough GCC's -m* arguments is not needed.\n\n2004-09-06  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* Makefile.am (clean-ltmain-sh): Using '==' to test for equality\n\tin a shell script is not portable. Use '=' instead.\n\n2004-09-05  Andreas Schwab  <schwab@suse.de>\n\n\t* m4/ltdl.m4 (LT_WITH_LTDL): Remove excess quoting in argument of\n\tAC_CONFIG_SUBDIRS.\n\n2004-09-05  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* config/ltmain.in (func_mode_link): Pass otherwise unrecognised +\n\tand - style switches to the compiler.\n\t* NEWS: Updated.\n\n2004-09-05  Gary V. Vaughan  <gary@gnu.org>\n\n\t* Makefile.am (libtool): Force libtool to be regenerated if\n\tstamp-vcl has changed.\n\n2004-09-05  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* m4/libtool.m4, config/ltmain.in: When calling $LTCC,\n\tpass default $CFLAGS through with $LTCFLAGS.\n\n2004-09-03  David Edelsohn  <dje@watson.ibm.com>\n\n\t* config/ltmain.in (func_mode_link): Use $pic_object as\n\t$non_pic_object if $non_pic_object=none.\n\t* NEWS: Updated.\n\n2004-09-03  Gary V. Vaughan  <gary@gnu.org>\n\n\t* bootstrap: Remember that the ltmain.sh generated by bootstrap\n\tis missing most of its substitution values, so force it to be\n\trebuilt at make time by touching $(top_srcdir)/config/ltmain.in.\n\n\tFrom Martin Quinson <mquinson@ens-lyon.fr>\n\t* m4/libtool.m4 (_LT_SETUP, _LT_ENABLE_LOCK, LT_PATH_LD): Use\n\tAS_HELP_STRING to get rid of autoconf -Wobsolete warning\n\tmessages.\n\t* m4/ltdl.m4 (LT_WITH_LTDL, _LT_ENABLE_INSTALL): Ditto.\n\t* m4/ltoptions.m4 (_LT_ENABLE_SHARED, _LT_ENABLE_STATIC)\n\t(_LT_ENABLE_FAST_INSTALL, _LT_WITH_PIC): Ditto.\n\t* TODO: Updated\n\n2004-09-03  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/slist.c (slist_cons): Don't leak the tail of a list.\n\n2004-09-03  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* m4/libtool.m4 (_LT_ENABLE_LOCK): Reformatted.\n\n2004-09-03  Gary V. Vaughan  <gary@gnu.org>\n\n\t* HACKING: Explain how to verify detached signatures with gpg in\n\tthe release announcement templates.\n\n\t* AUTHORS: Fix typo in my address.\n\n2004-09-02  Gary V. Vaughan  <gary@gnu.org>,\n\n\tBuilds of packages that use libtool and make -j produce \"directory\n\talready exists warnings\" for .lib directory.  Build on automake\n\twisdom to support make -j builds where a suitable mkdir is\n\tavailable:\n\n\t* configure.ac (AM_INIT_AUTOMAKE): Require 1.9, which goes to some\n\ttrouble to find a $(mkdir_p) that doesn't interfere with make -j.\n\t* Makefile.am (edit): Substitute for @mkdir_p@.\n\t* config/ltmain.in (MKDIR_P): Take @mkdir_p@ value.\n\t(mkdir): Removed.\n\t(func_mkdir_p): New function to use $MKDIR_P.  Factor out all\n\tprevious mkdir calls to use this function.\n\t(RM, MV): Declared as in libtoolize.in.  Changed all callers.\n\t* libtoolize.in (MKDIR_P): Take @mkdir_p@ value from automake.\n\t(func_mkdir_p): Use it, similarly to new config/ltmain.in.\n\t* tests/defs: Synchronize boiler plate code with ltmain.in.\n\tAdjust all callers.\n\tAdd missing copyright preamble.\n\t* tests/demo-static.test: Add missing copyright preamble.\n\t* NEWS: Updated.\n\tReported by Daniel Reed <n@ml.org>\n\n2004-09-02  Gary V. Vaughan  <gary@gnu.org>,\n\n\t* Makefile.am (clean-ltmain-sh): Quote $(top_builddir) for the\n\tshell, incase it is not set when running maintainer rules with\n\t`make -fMakefile.maint'.\n\tDon't show the shell commands.\n\n\t* AUTHORS: Fix my email address.\n\n2004-09-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/ltdl.c (try_dlopen): Fix memory leak.\n\t* NEWS: Updated.\n\n2004-09-02  Gary V. Vaughan  <gary@gnu.org>,\n\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/slist.c, libltdl/slist.h: Merge in changes from latest\n\tupstream.  Mostly comments, formal item boxing, a sort function,\n\tand const madness reduction.\n\t(slist_new): Removed.\n\t(slist_box, slist_unbox, slist_sort): New.\n\t(SListCompare, SListCallback): Swapped!\n\t(slist_remove, slist_find): Change order of parameters for\n\torthogonality with slist_foreach.  Changed all callers.\n\t* libltdl/lt_dlloader.c (loader_cmp): Renamed to...\n\t(loader_callback): ...this.  Return boxed item.\n\t(lt_dlloader_remove): Adjust to new loader_callback semantics;\n\tunbox each removed item before returning.\n\tRemove unused variable.\n\tRemove const from name parameter, since the slist API cannot\n\tguarantee userdata const-ancy for its callback functions.\n\t(lt_dlloader_find): Adjust to new loader_callback semantics; need\n\tto return the contents of the boxed item.\n\tRemove const from name parameter, since the slist API cannot\n\tguarantee userdata const-ancy for its callback functions.\n\t* libltdl/lt_dlloader.h (lt_dlloader_find, lt_dlloader_remove):\n\tAdjust to new constless footprint.\n\t* libltdl/ltdl.c (ltdl_exit): The global `loaders' list is changed\n        by `lt_dlloader_remove' while cleaning up, so the address in local\n\tvariable `loader' is invalidated.  Since some loaders may be\n\tresident modules that cannot be unloaded (though we have none\n\tyet), we must save each `next' address before calling\n\t`lt_dlloader_remove'.\n\t* NEWS: Updated.\n\t* THANKS: Added Ralf.\n\n2004-09-01  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/lt_dlloader.c (lt_dlloader_add): Handle malloc failure\n\tfrom slist_new.\n\t* libltdl/ltdl.c (loader_init): Trust lt_dlloader_add(), don't\n\toverwrite its error type, and simplify.\n\tReported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n2004-09-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/slist.c (slist_new): Handle malloc failure gracefully.\n\n2004-09-01  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.in, config/ltmain.in: Add CDPATH protection to\n\tpreamble.\n\t* tests/defs: Put a full m4sh.m4 style 'Be Bourne compatible'\n\tpreamble in here too.\n\t* HACKING: Note that tests/defs needs synching with m4sh.m4 too.\n\t* TODO: Add new item.\n\n\t* libltdl/ltdl.c (try_dlopen, lt_dlforeachfile): Use correct cpp\n\tmacro name, LT_DLSEARCH_PATH.\n\n\t* libltdl/ltdl.c (lt_dlexit, tryall_dlopen): Fix gcc parentheses\n\twarning.\n\t(foreach_dirinpath, try_dlopen, lt_dlpath_insertdir): Fix gcc\n\tsigned vs unsigned warning.\n\tReported by Bob Friesenhahn <bfriesen@simple.dallas.tx.us>\n\n\t* m4/libtool.m4 (_LT_PROG_LTMAIN): Simplified in light of\n\tltmain.sh no longer being in the build tree.\n\tReported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n2004-09-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* libltdl/loaders/preopen.c: Initialise memory in get_vtable.\n\n\t* tests/sh.test: Look in the source tree for ltmain.sh.\n\n2004-09-01  Gary V. Vaughan  <gary@gnu.org>\n\n\tDon't use C99 flexible array types as we want to be C89\n\tcompatible.  Instead, revert to the old way of doing things with\n\tan array of symbol name vs. address, and adding the originator as\n\tthe first symbol but with a NULL address:\n\n\t* config/ltmain.in (func_extract_dlsyms): Store originator as a\n\tNULL address symbol.\n\t* libltdl/ltdl.h (lt_dlsymbol): Removed.\n\t(lt_dlsymlist): Remove originator field.\n\t(LTDL_SET_PRELOADED_SYMBOLS): Adjust.\n\t* libltdl/loaders/preopen.c (vm_open, lt_dlpreload_open): Adjust\n\tfor new types.\n\t(vm_sym): Skip the new originator symbol when scanning symbol\n\tnames.\n\t* m4/libtool.m4 (_LT_CMD_GLOBAL_SYMBOLS): Adjust preloaded symbols\n\ttest file to match.\n\t* NEWS: Updated.\n\tReported by Andreas Schwab <schwab@suse.de>\n\n2004-09-01  Gary V. Vaughan  <gary@gnu.org>\n\n\tLibtool currently assumes that certain characteristics, such as\n\tenable_shared, apply to the host architecture rather than per-\n\tlanguage.  Running the tests over a broken compiler can corrupt\n\tthese values, when there is no C++ compiler for example, so we\n\tskip most of the tests in those cases.\n\n\t* m4/libtool.m4 (_LT_LANG_CXX_CONFIG): If caught_CXX_compiler was\n\tset from configure.ac, then don't run all the compiler tests.\n\t(_LT_LANG_F77_CONFIG): Similarly for caught_F77_compiler.\n\n2004-08-31  Gary V. Vaughan  <gary@gnu.org>\n\n\t* Makefile.am (clean-ltmain-sh): Remove stale config/ltmain.sh\n\tfrom the build tree that were left behind by previous versions of\n\tlibtool.\n\t($top_srcdir)/stamp-vcl: Since this rule is already called on\n\tevery invocation of make, hook clean-ltmain-sh in here too.\n\tSuggested by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n2004-08-31  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* bootstrap: Update warning message to reflect having split\n\tlibtool.m4 into several files.\n\tAlso, add config/ltmain.sh to list of stale files from previous\n\tversions to be removed before bootstrap.\n\n\t* libltdl/ltdl.c: Replace strdup with lt__strdup.\n\n2004-08-30  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/ltmain.in: Double quote even $# for the sake of sh.test.\n\t(exec_cmd): Be careful about \"`\\\"foo\\\"`\" quoting, even in comments\n\tto avoid triggering the tests in sh.test.\n\n\t* configure.ac:  Because of the way the autoconf C++ testing\n\tworks, we need to call the C test first to work in an environment\n\tthat has no C++ compiler.\n\n\t* libltdl/lt_dlloader.c (lt_dlloader_remove): Since the return\n\tvalue of this function is often passed to free, don't declare it\n\t`const'. Responsibility for this memory is given back to the\n\tcaller on return.\n\t* libltdl/lt_dlloader.h (lt_dlloader_remove): Ditto.\n\t* libltdl/ltdl.c (lt_dlexit): Adjust.\n\t* NEWS: Updated.\n\n2004-08-30  Andreas Schwab  <schwab@suse.de>\n\n\t* libltdl/ltdl.c (lt_dlexit): Remove lvalue cast.\n\n\t* libltdl/slist.h (SListCallback): Fix missing type.\n\n\t* config/ltmain.in: Accept --mode=relink.\n\n2004-08-29  Gary V. Vaughan  <gary@gnu.org>\n\n\t* NEWS: Updated.\n\t* configure.ac: Bumped version to 1.9c.\n\n\tGNU libtool 1.9b was released.\n\n\t* configure.ac: Bumped version to 1.9b.\n\t* NEWS: Updated.\n\t* INSTALL, config/config.guess, config/config.sub,\n\tconfig/texinfo.tex: Updated from canonical source.\n\t* Makefile.maint, HACKING: Update instructions for releasing in a\n\tVPATH build.\n\n\t* Makefile.am (dist-hook): Only run if README-alpha exists.\n\t* README.alpha: Renamed from README-alpha to stop automake from\n\tautomatically adding it to DIST_COMMON.\n\n\t* NEWS: Merge changes from branch-1-5.\n\n\t* Makefile.am (dist-hook): Always distribute just a README file,\n\tbut take its contents from README-alpha for alpha releases.\n\n\t* TODO: Reformat.  Removed some items that have been implemented.\n\n2004-08-29  Gary V. Vaughan  <gary@gnu.org>\n\n\tAdd a new `-weak' flag to tell libtool when not to propogate\n\tdependency libraries from dlpreopened modules to libraries:\n\n\t* config/ltmain.in: Support new -weak link mode option.  Adjust\n\thelp message.\n\t* libltdl/Makefile.am (libltdlc_la_LDFLAGS): Use it.\n\t* doc/libtool.texi (Linking with dlopened modules): Document it.\n\t(Link mode): Mention -weak.\n\t* NEWS: Updated.\n\n2004-08-29  Gary V. Vaughan  <gary@gnu.org>\n\n\t* config/ltmain.in (opt_help): Defer showing help messages until\n\tafter a possible following --mode argument has been parsed, so we\n\tcan handle `libtool --help --mode=foo'.\n\n2004-08-29  Gary V. Vaughan  <gary@gnu.org>\n\n\tWe have had shell functions in ltmain.in for a few years without\n\tcomplaint now, and recently a few more have crept in.  Make a\n\tstart at refactoring the code with shell functions, and\n\tstandardising on option parsing style:\n\n\t* config/ltmain.in (func_echo, func_verbose, func_error)\n\t(func_fatal_error, func_fatal_help, func_missing_arg)\n\t(func_version, func_usage, func_help): Boiler plate shell\n\tfunctions mostly copied from libtoolize.in.  Changed *lots* of\n\tshell snippets to call these functions as appropriate, rather than\n\tinlining the same code over and over.\n\t(func_config, func_features, func_enable_tag, func_mode_help):\n\tFactored out from the shared option parsing loop.  Write a new\n\tshared option parser based on the one in libtoolize.in.\n\t(func_check_version_match): Factored out from global scope.\n\t(func_mode_compile, func_mode_execute, func_mode_finish)\n\t(func_mode_install, func_mode_link, func_mode_uninstall): Break\n\teach of the top level mode handlers out into a function.  Adjust\n\tmain loop.\n\t(modename, prevopt, prev, optarg, show_help): Removed in the\n\tcourse of cleaning up the shared option parser.\n\t(opt_duplicate_deps): Use `:' and `false' instead of `yes' and `',\n\tso we can run it directly, rather than calling test.\n\n2004-08-28  Gary V. Vaughan  <gary@gnu.org>\n\n\tTo help users submit better bug reports, improve the general\n\tinstructions, and provide additional useful info alongside the bug\n\treporting address in --help output:\n\n\t* Makefile.am (edit): Substitute $host_triplet.\n\t* libtoolize.in: Output useful debug info with --help.\n\t* config/ltmain.in: Ditto.\n\t* README: Rewritten.  Added copyright info.\n\t* README-alpha: Rewritten.  Added copyright info.\n\t* HACKING: New file, partly taken from old README-alpha.\n\n2004-08-27  Gary V. Vaughan  <gary@gnu.org>\n\n\tTwo things to stop `make distcheck' from trying to rebuild\n\tdistributed files (m4/ltversion.m4 and config/ltmain.in) in the\n\treadonly source tree:\n\n\t* Makefile.am (stamp-vcl): Keep only one copy of stamp-vcl; in\n\t$(top_srcdir), so that an up-to-date version is rolled into the\n\tdist tarball even from a VPATH build.\n\t($(top_srcdir)/config/ltmain.sh): Don't depend on Makefile,\n\totherwise ltmain.sh needs to be rebuilt after every config.status\n\trun, and then configure needs to be rebuilt, and it all goes\n\thorribly wrong :-/  Unfortunately, we can't depend on Makefile.am\n\teither, because that is a circular dependency.  The downside of\n\tthis change is that it is now possible to edit Makefile.am to\n\tchange the way ltmain.sh is generated, and the dependency\n\tinformation can't tell that ltmain.sh needs regenerating.\n\n2004-08-27  Gary V. Vaughan  <gary@gnu.org>\n\n\t* doc/libtool.texi (Cheap tricks): Escape the `@' for texinfo.\n\n2004-08-27  Gary V. Vaughan  <gary@gnu.org>\n\n\t* doc/libtool.texi (Cheap tricks): Fix the instructions for making\n\ta ltmain.in wrapping libtool in light of recent changes to the\n\tversion checking code.\n\n2004-08-26  Peter O'Gorman  <peter@pogma.com>\n\n\t* config/ltmain.in [darwin]: Use the -dylib_file flag and avoid\n\tlinking to so many libraries on darwin.\n\n\t* m4/libtool.m4 [darwin]: Don't use a libname triplet, a couplet\n\tis perfectly fine.\n\n\t* m4/ltdl.m4: Don't use the dyld loader on darwin 8 or later.\n\n2004-08-25  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* config/ltmain.in (piecewise linking): Use a GNU ld script if\n\tpossible.\n\t* m4/libtool.m4 (_LT_LINKER_SHLIBS): Add per-tag variable\n\twith_gnu_ld.\n\t(_LT_LANG_CXX_CONFIG): Don't set unused variable with_gnu_ldcxx.\n\n2004-08-22  Gary V. Vaughan  <gary@gnu.org>\n\n\tThe Grand Renaming.  In preparation for libtool-2.0, move all of\n\tthe many and varied m4 symbols accumulated by libtool over the\n\tyears, considering also that modern autoconf can detect unexpanded\n\tmacros even without AC in the macro name:\n\n\t* bootstrap: Remove libltdl/config.h from previous releases.\n\t* m4/libtool.m4, m4/ltdl.m4, doc/libtool.texi: Basically, run a\n\tgiant sed transformation like this:\n\ts,AC_LIB_LTDL,LTDL_INIT,g\n\ts,AC_LIBLTDL_CONVENIENCE,LTDL_CONVENIENCE,g\n\ts,AC_LIBLTDL_INSTALLABLE,LTDL_INSTALLABLE,g\n\ts,AC_WITH_LTDL,LT_WITH_LTDL,g\n\ts,AC_LTDL_ENABLE_INSTALL,_LT_ENABLE_INSTALL,g\n\ts,AC_DEPLIBS_CHECK_METHOD,_LT_CHECK_MAGIC_METHOD,g\n\ts,AC_LIBTOOL_OBJDIR,_LT_CHECK_OBJDIR,g\n\ts,AC_LTDL_OBJDIR,_LT_CHECK_OBJDIR,g\n\ts,AC_LTDL_DLPREOPEN,_LT_CHECK_DLPREOPEN,g\n\ts,AC_LIBTOOL_SYS_MAX_CMD_LEN,LT_CMD_MAX_LEN,g\n\ts,AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE,_LT_CMD_GLOBAL_SYMBOLS,g\n\ts,AC_LIBTOOL_SYS_OLD_ARCHIVE,_LT_CMD_OLD_ARCHIVE,g\n\ts,AC_PROG_LD_RELOAD_FLAG,_LT_CMD_RELOAD,g\n\ts,AC_LIBTOOL_SYS_LIB_STRIP,_LT_CMD_STRIPLIB,g\n\ts,AC_CHECK_LIBM,LT_LIB_M,g\n\ts,AC_LTDL_DLLIB,LT_LIB_DLLOAD,g\n\ts,AC_LIBTOOL_COMPILER_OPTION,_LT_COMPILER_OPTION,g\n\ts,AC_LIBTOOL_PROG_CC_C_O,_LT_COMPILER_C_O,g\n\ts,AC_LIBTOOL_PROG_COMPILER_NO_RTTI,_LT_COMPILER_NO_RTTI,g\n\ts,AC_LIBTOOL_PROG_COMPILER_PIC,_LT_COMPILER_PIC,g\n\ts,AC_LIBTOOL_SYS_HARD_LINK_LOCKS,_LT_COMPILER_FILE_LOCKS,g\n\ts,AC_LTDL_DLSYM_USCORE,LT_FUNC_DLSYM_USCORE,g\n\ts,AC_LIBTOOL_LINKER_OPTION,_LT_LINKER_OPTION,g\n\ts,AC_LIBTOOL_PROG_LD_SHLIBS,_LT_LINKER_SHLIBS,g\n\ts,AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH,_LT_LINKER_HARDCODE_LIBPATH,g\n\ts,AC_PATH_MAGIC,_LT_PATH_MAGIC,g\n\ts,AC_PATH_TOOL_PREFIX,_LT_PATH_TOOL_PREFIX,g\n\ts,AC_PROG_LD,LT_PATH_LD,g\n\ts,AC_PROG_LD_GNU,_LT_PATH_LD_GNU,g\n\ts,AC_PROG_NM,LT_PATH_NM,g\n\ts,AC_LTDL_SYS_DLOPEN_DEPLIBS,LT_SYS_DLOPEN_DEPLIBS,g\n\ts,AC_LIBTOOL_DLOPEN_SELF,LT_SYS_DLOPEN_SELF,g\n\ts,AC_LIBTOOL_POSTDEP_PREDEP,_LT_SYS_HIDDEN_LIBDEPS,g\n\ts,AC_LTDL_SYSSEARCHPATH,LT_SYS_DLSEARCH_PATH,g\n\ts,AC_LTDL_SHLIBEXT,LT_SYS_MODULE_EXT,g\n\ts,AC_LTDL_SHLIBPATH,LT_SYS_MODULE_PATH,g\n\ts,AC_LTDL_SYMBOL_USCORE,LT_SYS_SYMBOL_USCORE,g\n\ts,AC_LIBTOOL_SYS_DYNAMIC_LINKER,_LT_SYS_DYNAMIC_LINKER,g\n\ts,_LT_AC_TAGVAR,_LT_TAGVAR,g\n\ts,_LT_AC_SYS_COMPILER,_LT_TAG_COMPILER,g\n\ts,_LT_AC_PROG_ECHO_BACKSLASH,_LT_PROG_ECHO_BACKSLASH,g\n\ts,_LT_AC_SYS_LIBPATH_AIX,_LT_SYS_MODULE_PATH_AIX,g\n\ts,_LT_AC_SHELL_INIT,_LT_SHELL_INIT,g\n\ts,_LT_AC_LOCK,_LT_ENABLE_LOCK,g\n\ts,_LT_AC_CHECK_DLFCN,_LT_HEADER_DLFCN,g\n\ts,_LT_AC_TRY_DLOPEN_SELF,_LT_TRY_DLOPEN_SELF,g\n\ts,LT_AC_PROG_EGREP,_LT_DECL_EGREP,g\n\ts,LT_AC_PROG_SED,_LT_DECL_SED,g\n\t* doc/libtool.texi (Autoconf macros): Document exported macros.\n\t* libtoolize.in: Compare ltdl.m4 serial numbers for LTDL_INIT\n\tinstead of newly obsoleted AC_LIB_LTDL.\n\t(func_scan_files): Also set seen_ltdl for LTDL_INIT and\n\tLT_WITH_LTDL.\n\n2004-08-12  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4 [GNU/linux] (AC_DEPLIBS_CHECK_METHOD): Cleanup,\n\tthanks to Daniel Reed.\n\n2004-08-11  Daniel Reed  <djr@redhat.com>\n\n\t* tests/demo-nopic.test: Do not run on x86_64 or s390*\n\n2004-08-06  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (lt_dlforeachfile): LT_SYS_LIBSEARCH_PATH is not\n\tan environment variable, it is an actual path.\n\n\t* bootstrap: Remove `-f Makefile.am' now that we have an actual\n\tMakefile to build ltmain.sh.\n\tReported by Noah Mish <noah@cs.caltech.edu>\n\n2004-08-05  Gary V. Vaughan  <gary@gnu.org>\n\n\t* bootstrap: Run the bootstrap rules from a file named Makefile,\n\tcopied from Makefile.am for fresh checkouts.\n\n2004-08-05  Alexandre Duret-Lutz  <adl@gnu.org>\n\n\t* m4/libtool.m4 (_LT_PROG_LTMAIN): Require ltmain.sh using\n\tusing Autoconf's new AC_REQUIRE_AUX_FILE.\n\n2004-08-05  Gary V. Vaughan  <gary@gnu.org>\n\n\t* Makefile.am ($(top_srcdir)/config/ltmain.sh): Depends on\n\tMakefile.\n\t(timestamp): Factor out timestamp setting and edit it based on the\n\tversion number, so that it is empty for release versions.\n\t($(top_srcdir)/config/ltmain.sh): Use it.\n\t(libtoolize): Ditto.\n\n\t* Makefile.am (libtool): Depends on ltmain.sh.\n\t(libtoolize): Set and substitute TIMESTAMP.\n\n\t* Makefile.am ($(top_srcdir)/config/ltmain.sh): Actually run\n\t$(MKSTAMP) before changing directories, or it won't be found.\n\tForgot to save before my last commit :-(\n\n\t* Makefile.am ($(top_srcdir)/m4/ltversion.m4): Since we already did\n\t`cd $(top_srcdir)' for this rule, we can't mv ltversion.tmp to the\n\trelative $(top_srcdir) again!  Also, run $(MKSTAMP) before changing\n\tdirectories, or it won't be found.\n\t($(top_srcdir)/config/ltmain.sh): Ditto.\n\t(EXTRA_DIST): We should distribute ltversion.m4 too.\n\n2004-08-04  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4 (AC_LIBTOOL_SYS_MAX_CMD_LEN): Since CONFIG_SHELL may\n\tnot actually be set, we should use SHELL here, also make darn sure\n\tthat SHELL is set to something. Bug from Willem Jan Palenstijn\n\t<wpalenst@math.leidenuniv.nl>.\n\n2004-08-03  Jacob Meuser  <jakemsr@jakemsr.com>\n\n\t* ltmain.in: Allow some static libraries to be used in generating a\n\tshared library on NetBSD and OpenBSD. match-pattern_regex decides\n\twhich are good.\n\n2004-08-02  Geoffrey Keating  <geoffk@apple.com>\n\n\t* m4/libtool.m4 [darwin]: Don't use -all_load.\n\n2004-08-01  Maciej W. Rozycki  <macro@linux-mips.org>\n\n\t* m4/libtool.m4 (LT_AC_PROG_SED): Set SED when running from cache as\n\twell.\n\n2004-07-31  Gary V. Vaughan  <gary@gnu.org>\n\n\tAlthough libtool is optimised to not need to subconfigure libltdl,\n\tthe installed libltdl sources for libtoolize need to put\n\tlibltdl/configure.ac in the parent package so that *it* can\n\tsubconfigure libltdl.  That way we don't put any constraints on\n\tthe build system used by the parent package because the\n\tlibtoolized libltdl subtree is a self-contained sub-project:\n\n\t* libltdl/Makefile.am (EXTRA_DIST): Add configure.ac.\n\t(nobase_ltdldata_DATA): Change back to libltdl's own\n\tconfigure.ac.\n\n2004-07-30  Gary V. Vaughan  <gary@gnu.org>\n\n\tMy thanks to Alexandre Duret-Lutz <adl@gnu.org> for the insight\n\trequired to write this changeset -- especially that ltmain.sh is\n\tthe same on any machine for a given release, which I hadn't\n\tnoticed for some bizarre reason: It turns out that generating\n\tdistributed files from configure causes no end of hassle, as\n\tevidenced by the many patches I've generated over the last few\n\tdays to try and get the dist and distcheck make rules to work.\n\tInstead of all that hair, we now simply generate our distributed\n\tfiles (now including ltmain.sh) with make rules -- and since\n\tautomake creates make variables for all AC_SUBSTs, that is really\n\teasy.  The code looks a lot more like automake and autoconf\n\tMakefile.ams now, and doesn't have all the rough edges the earlier\n\thacky solution suffered from.  We still generate libtool from\n\tconfig.status, but that is not a distributed file, and doesn't\n\tbreak the golden rule.  Besides, there is way more going on there\n\tthan a bunch of substitutions:\n\n\t* Makefile.am (edit): New common sed substitutions for files now\n\tgenerated by make instead of config.status.\n\t(CLEANFILES): Clean new tmp files.\n\t(EXTRA_DIST): Add ltmain.sh.\n\t(vcl-tmp): Reinstated.\n\t(m4/ltversion.m4, config/ltmain.sh): New rules.  Generate from\n\there instead of config.status.\n\t(libtoolize): Ditto.\n\t(libtool): Call config.status to regenerate if necessary.\n\t(dist-hook): Removed.\n\t* config/ltmain.in: Moved here from top_srcdir.\n\t* README-alpha: Update instructions to check AS_SHELL_SANITIZE is\n\tup to date.\n\t* bootstrap: Rewritten.  Generate m4/ltversion.m4 and\n\tconfig/ltmain.sh because configure depends on them.\n\t* configure.ac (AC_CONFIG_SRCDIR): Use libtoolize.in now that\n\tltmain.in has moved.\n\t(AC_CONFIG_FILES): Don't generate distributed files,\n\tconfig/ltmain.sh and libtoolize from config.status.  We have make\n\trules to do that now.\n\n2004-07-30  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4, ltmain.in: readd the comments that I erased.\n\n\t* ltmain.in [darwin]: We already had a module var, there can be\n\tonly one.\n\n\t* m4/libtool.m4, ltmain.in: autoconf now says the best thing to do\n\twith CDPATH is to (unset CDPATH) >/dev/null 2>&1 && unset CDPATH,\n\tso do it.\n\n2004-07-29  Gary V. Vaughan  <gary@gnu.org>\n\n\t* Makefile.am ($(top_srcdir)/config/ltmain.sh): Ugh. More hair to\n\thelp `make distcheck'; not only do we have to make a copy of\n\tltmain.sh available in the source tree, but we have to be really\n\tcareful about permission bit twiddling when we copy it across into\n\tthe possible read-only $(top_srcdir)/config directory!\n\n\t* tests/tagtrace.test: Skip this test when running a VPATH build\n\tagainst a read-only source tree (as in distcheck for example),\n\tsince autoconf wants to write temporary files in $top_srcdir\n\totherwise.\n\n\t* Makefile.am ($(top_srcdir)/config/ltmain.sh): Automake assumes,\n\tquite rightly for every project except libtool, that there will be\n\tan ltmain.sh in the source tree.\n\t(EXTRA_DIST): As do the dist rules it generates.\n\t(dist-hook): Even though we definitely don't want to distribute\n\tour local ltmain.sh.\n\n\t* config/config.guess, config/config.sub: Don't check these in,\n\tthey cause spurious conflicts on cvs commit and update, and are\n\tadded by bootstrap in any case.\n\n\t* configure.ac (AC_INIT): Revert an accidental commit from my\n\ttesting of package_revision.\n\n2004-07-29  Alexandre Duret-Lutz  <adl@gnu.org>\n\n\t* doc/libtool.texi (Tags): Document CC.\n\t* m4/libtool.m4 (_LT_SETUP): Register CC as supported tag so that\n\tAutomake uses it.\n\n2004-07-28  Gary V. Vaughan  <gary@gnu.org>\n\n\tFix a long-standing bug where macro_version was always empty in\n\tthe generated m4/ltversion.m4.  Except for CVS revisions:\n\n\t* ltmain.in (package_revision): Don't try to deduce it from\n\tTIMESTAMP, since that is empty for release versions; simply\n\tsubstitute it...\n\t* configure.ac (package_revision): ...from here, having\n\tprecalculated it before resetting TIMESTAMP for release versions.\n\t* bootstrap: Force regeneration of m4/ltversion.m4, but retain\n\ttimestamps if there is no change to the content.\n\n2004-07-28  Gary V. Vaughan  <gary@gnu.org>\n\n\tTo take full advantage of this, libtool must be bootstrapped with\n\tCVS autoconf, otherwise pdksh chokes on some nested escaped quotes\n\tfrom libtool.m4.  Using CVS autoconf protects configure from\n\tnon-bourne compatible shells in the same way this changeset\n\tprotects libtool and libtoolize:\n\n\t* libtoolize.in: Include latest CVS autoconf AS_SHELL_SANITIZE\n\texpansion to make various shells fully bourne compatible.\n\t* ltmain.in: Ditto.\n\t* m4/libtool.m4 (AC_PATH_TOOL_PREFIX): Remove spurious quotes, the\n\tRHS of = assignment is not IFS split.\n\t(_LT_LANG_CXX_CONFIG): Ditto.\n\t(AC_LIBTOOL_POSTDEP_PREDEP): Ditto.\n\n2004-07-27  Gary V. Vaughan  <gary@gnu.org>\n\n\tThis change fixes another VPATH build bug, where the vcl.tmp\n\ttarget forced a rebuild of stamp-vcl in the build tree (and\n\thence regeneration of m4/ltversion.m4, thus an automake driven\n\trebootstrap that doesn't know about $fakes) requiring a fresh\n\t./bootstrap after every cvs/tla update:\n\n\t* Makefile.am (vcl.tmp): Removed.\n\t(stamp-vcl): Adopt former vcl.tmp target rules.\n\n2004-07-25  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltmain.in: Make sure that dependency libraries of -dlpreopened\n\tlibraries are propogated properly.\n\n2004-07-23  Joe Orton  <joe@manyfish.co.uk>\n\n\t* libtool.m4: Treat bsdi5* like bsdi4*.\n\n2004-07-22  Peter O'Gorman  <peter@pogma.com>\n\n\t* ltmain.in [darwin](func_extract_archives): $SED not sed.\n\n\t* ltmain.in [darwin](func_extract_archives): Clean up last commit\n\ta little, some suggestions are from Albert Chin, those that are\n\tbroken are mine.\n\n\t* libltdl/Makefile.am, libltdl/loaders/Makefile.am: Look for\n\tincluded files in the right places.\n\n2004-07-18  Peter O'Gorman  <peter@pogma.com>\n\n\t* ltmain.in [darwin](func_extract_archives): Because fat archives\n\ton darwin can not be extracted using ar, we need to use lipo to\n\textract the thin archives and then use lipo again to generate the\n\tindividual fat objects. This should allow people to run configure\n\twith CC set to \"cc -arch ppc -arch ppc64\" or \"cc -arch ppc -arch\n\ti386\" or whatever to match the toolchain they have available.\n\n2004-07-18  Greg Eisenhauer  <eisen@cc.gatech.edu>\n\n\t* libltdl/loaders/Makefile.am: Use AM_MAKEFLAGS not MAKEFLAGS.\n\n2004-07-18  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/Makefile.am: Ensure that lt__dirent.h is part of the dist,\n\talso make failed looking for configure.ac, look for\n\t$(top_srcdir)/configure.ac instead.\n\n2004-07-15  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/lt__private.h (lt_dlhandle_struct): Renamed to\n\tlt__handle to better reflect the naming scheme.\n\t* libltdl/ltdl.h (lt_dlhandle): Be truly opaque with a void *.\n\t* libltdl/lt_dlloader.c (lt_dlloader_remove): Party to\n\tlt__private.h, so use internal lt__handle instead of opaque\n\tlt_dlhandle.\n\t* libltdl/ltdl.c (LT_DLGET_FLAG, LT_DLSET_FLAG): Add a cast to\n\tinternal lt__handle type.\n\t(try_dlopen, tryall_dlopen, load_deplibs, unload_deplibs): Ditto.\n\t(lt_dlexit, lt_dlclose, lt_dlsym): Use lt__handle to iterate\n\tthrought the handle list.\n\t(try_dlopen): Use lt__zalloc instead of MALLOC and memset.\n\t* libltdl/ltdl.h (lt_dlcaller_id): Be truly opaque with a void *.\n\t(lt_dlhandle_interface): New callback type for filtering handles\n\taccording to the interface they present.\n\t* libltdl/ltdl.c (lt_dlcaller_register): Take an id and an\n\tinterface check callback, and generate a caller_id.\n\t(iterator): New static variable for the use of...\n\t(lt_dlhandle_first): New function.  Set the iterator for\n\tsubsequent calls to lt_dlhandle_next.\n\t(lt_dlhandle_next): Either work as before when iterator is unset,\n\tor else skip handles that fail the interface check in iterator set\n\tby lt_dlhandle_first.\n\t* libltdl/ltdl.h (lt_dlhandle_first): Declaration.\n\t* doc/libtool.texi (User defined module data): Document the new\n\tAPIs.\n\t* NEWS: Updated.\n\n2004-07-15  Gary V. Vaughan  <gary@gnu.org>\n\n\tSplit lt_dlloader management into a separate file, and factor\n\t`loaders' list management into a new SList ADT.  In the process,\n\tthe API for writing loaders is a little cleaner, so all the\n\texisting loaders were tweaked to take advantage of that:\n\n\t* libltdl/slist.h, libltdl/slist.c: New files implementing a\n\tgeneric singly linked list container ADT.  The ADT is purely\n\tinternal, and none of its API's are visible from an installed\n\tlibltdl.\n\t* libltdl/lt_dlloader.h (lt_dlloader): Removed next field again\n\t:-) Renamed to lt_dlvtable for API.  Changed all callers.\n\t(lt_dlloader_get): New function to turn an lt_dlloader into its\n\tassociated lt_dlvtable.\n\t(lt_dlloader_add): Removed unused data parameter.  The caller\n\tdata belongs to (and is set by) the loader itself, not the\n\tloader's client.  Changed all callers.\n\t(lt_dlloader_name, lt_dlloader_data): Removed.  Use\n\tlt_dlloader_get instead!\n\t* libltdl/lt__private.h: Include slist.h.\n\t(lt__alloc_die_callback): Add missing LT_SCOPE to declaration.\n\t(lt_dlhandle_struct): Use lt_dlvtable instead of opaque\n\tlt_dlloader.\n\t* libltdl/ltdl.c (lt_dlexit): Rewritten for the new loader API.\n\t(loaders, lt_dlloader_add, lt_dlloader_remove, lt_dlloader_next,\n\tlt_dlloader_find): Moved from here...\n\t* libltdl/lt_dlloader.c ((loaders, lt_dlloader_add,\n\tlt_dlloader_remove, lt_dlloader_next, lt_dlloader_find): ...to\n\there.  And rewritten in terms of new SList interface.\n\t* libltdl/ltdl.c (lt_dlexit, tryall_dlopen): Rewritten in terms of\n\tnew lt_dlloader interface.\n\t* libltdl/Makefile.am (libdlloader_la_SOURCES): Add slist.h and\n\tslist.c.  Move lt_dlloader.h from here...\n\t(pkginclude_HEADERS): ...to here.\n\t(libltdl_la_SOURCES): Add lt_dlloader.c and lt_dlloader.h.\n\n2004-07-15  Gary V. Vaughan  <gary@gnu.org>\n\n\tCollapse two almost identical structures into one:\n\n\t* libltdl/lt_dlloader.h (lt_dlloader): Add next field.\n\t* libltdl/ltdl.c (lt_user_dlloader): Remove entirely.  Change all\n\tcallers to use lt_dlloader instead.  Add a compatibility macro.\n\t(lt_dlloader_add): Remove copy and allocate stage, just hook\n\tdirectly into the loaders list.\n\n2004-07-15  Gary V. Vaughan  <gary@gnu.org>\n\n\tA cleaner way to access the private fields of an lt_dlhandle\n\tthan my move of the module field into lt_dlinfo:\n\n\t* libltdl/ltdl.c (lt_caller_data, lt_dlhandle_struct): Move from\n\there...\n\t* libltdl/lt__private.h (lt_caller_data, lt_dlhandle_struct):\n\t...to here.  And put the module field back here...\n\t* libltdl/ltdl.h (lt_dlinfo): ...instead of here.\n\t* libltdl/loaders/loadlibrary.c (vm_open): Adjust.\n\n2004-07-15  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/lt__private.h (streq, strneq): New macros to make strcmp\n\tcalls as used for simple comparison easier to read.\n\t* libltdl/loaders/dyld.c, libltdl/loaders/preopen.c,\n\tlibltdl/ltdl.c: Use them!\n\n2004-07-15  Gary V. Vaughan  <gary@gnu.org>\n\n\tThis pervasive changeset makes two intertwined deep changes to the\n\toperation of libtool (neither would work alone).  First, there is\n\ta new feature that allows libraries to preopen modules.  This\n\tentails a backwards incompatible change to the libltdl API for\n\tseparating out the preloaded symbol lists by owner.  Second, in\n\tthe tradition of \"eating our own dogfood\", libltdl now preloads\n\tits own dlloaders.  The internal API for dlloaders has also had to\n\tchange in a backwards incompatible way in support of the new\n\tlibrary preloading feature.  If you don't use preloaded libraries,\n\tyou needn't change your project sources, though you will need to\n\trecompile against the new libltdl.  The API changes are mostly\n\tconfined to dlloaders, so you probably needn't worry about those\n\t(unless you have written a custom loader that you want libltdl to\n\tuse):\n\n\t* configure.ac (AC_CONFIG_FILES): Add libltdl/loaders/Makefile.\n\t* libltdl/configure.ac (AC_CONFIG_FILES): Add loaders/Makefile.\n\t* libltdl/loaders: New directory for module loaders, to simplify\n\tMakefile rules, and to give the loaders themselves names that are\n\tunique in the first few characters.\n\t* libtoolize.in (func_copy_all_files): Copy recursively to pick up\n\tthe loaders directory contents.\n\t* libltdl/loaders/Makefile.am: New file.  Move module building\n\trules to here...\n\t* libltdl/Makefile.am: ...from here.\n\t(VERSION_INFO): Bumped version info to signify interface changes.\n\t(libltdl_la_CPPFLAGS, libltdlc_la_CPPFLAGS): Set LTDLOPEN\n\tappropriately for each library.\n\t* libltdl/loader-dld_link.c, libltdl/loader-dlopen.c,\n\tlibltdl/loader-dyld.c, libltdl/loader-load_add_on.c,\n\tlibltdl/loader-loadlibrary.c libltdl/loader-preopen.c,\n\tlibltdl/loader-shl_load.c: Moved from here...\n\t* libltdl/loaders/dld_link.c, libltdl/loaders/dlopen.c,\n\tlibltdl/loaders/dyld.c, libltdl/loaders/load_add_on.c,\n\tlibltdl/loaders/loadlibrary.c libltdl/loaders/preopen.c,\n\tlibltdl/loaders/shl_load.c: ...to here.\n\t(get_vtable): New entry function for each.\n\t* libltdl/loaders/preopen.c (lt_dlsymlists_t): Replaced by...\n\t(symlist_chain): ...a new structure which maps lists of preloaded\n\tsymbols from the object that loads them.\n\t(lt_dlpreload_open): New function to automatically open all\n\tpreloaded modules belonging to a named object (ORIGINATOR).\n\t* libltdl/lt__alloc.c (lt__zalloc): New function to return a block\n\tof zeroed out new memory.\n\t* libltdl/lt__alloc.h (lt__zalloc): Prototype it.\n\t* libltdl/lt__private.h (lt__alloc_die_callback): Add missing\n\tprototype.\n\t(lt__error_strings): Make this opaque to callers.\n\t* libltdl/lt_error.c (lt__error_strings): Move the implementation\n\tto here.\n\t* libltdl/lt_dlloader.h (lt_user_dlloader): Add extra fields to\n\tmake originator focused preloading possible.  *BREAKS BACKWARDS\n\tCOMPATIBILITY*\n\t(lt_dlloader_add): Take advantage of new fields to simplify\n\tparamater list.\n\t* libltdl/lt_system.h (LT_STR): New ANSI stringification macro.\n\t(LT_CONC): Fix it to work from within macros.\n\t* libltdl/ltdl.c (loader_init, loader_init_callback): Simplify\n\tdlloader loading.\n\t(get_vtable, preloaded_symbols): Point these at the preopen.c\n\tsymbols to bootstrap the loader chain.\n\t(lt_dlinit): Load the preopen dlloader manually, and then use it\n\tto load any other preloaded dlloaders.\n\t(lt_dlloader_add): Simplify parameter list. Populate new\n\tfields. Chain new loaders according to priority field.\n\t* libltdl/ltdl.h (lt_dlsymlist): Add a new originator field.\n\t(lt_dlpreload_callback_func): Type of a callback for automatic\n\tlt_dlpreload_open loading.\n\t(LTDL_SET_PRELOADED_SYMBOLS): Adjust to hook into preloaded\n\tsymbols from the \"@PROGRAM@\" originator.\n\t* tests/demo/dlmain.c (main): Use mangled preloaded_symbols symbol.\n\t* tests/pdemo/longer_file_name_dlmain.c (main): Ditto.\n\t* ltmain.in: Don't spew spurious warnings when dlopening and\n\tdlpreopening modules.\n\t(func_generate_dlsyms): Factored out from multiple copies in the\n\trest of the code. Generate originator keyed symbol lists.\n\t(func_extract_archives): Also factored.  Extract the contents of\n\tconvenience archives for linking with dependent libraries when\n\t--whole-archive is not available.\n\t[darwin]: Don't try to link $old_library unless it exists, and\n\t$lib is a bundle.\n\t* m4/ltdl.m4 (AC_LTDL_DLLIB): Check for all possible dynamic\n\tloading libraries/apis rather that stopping when an acceptable one\n\tis discovered.\n\t(LT_DLLOADERS): New variable for holding dlloaders that can be\n\tpreloaded.\n\t* doc/libtool.texi: Document interface changes.\n\t* NEWS: Updated.\n\n2004-07-12  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4 [darwin]: Set whole_archive_flag_spec to '' for xlc,\n\tor it does not pass it's tests. xlc passes -noall_load (the default)\n\tand when -all_load is also specified Apple's /usr/bin/libtool barfs\n\tand dies.\n\n2004-07-07  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.h (lt_dlinfo): Move private module field to here...\n\t* libltdl/ltdl.c (lt_dlhandle_struct): ...from here.  Changed all\n\tcallers.\n\t* libltdl/loader-loadlibrary.c (sys_wll_open): Use new inteface to\n\tscan loaded handle->info.module fields for previously loaded\n\tmodules.\n\t* doc/libtool.texi (User defined module data): Document changes to\n\tthe interface.\n\t* NEWS: Updated.\n\tReported by Chuck Wilson <cwilson@ece.gatech.edu>\n\n2004-07-07  Brad  <brad@comstyle.com>\n\n\t* m4/libtool.m4: Fixes for the OpenBSD support\n\n2004-06-24  Noah Misch  <noah@cs.caltech.edu>\n\n\t* ltmain.in: Unset the zsh GLOB_SUBST option, which makes zsh\n\thandle backslash quoting poorly, before doing anything else.\n\t* tests/defs: Likewise.\n\n2004-06-21  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.in (libtoolize_flags): With the --ltdl option, we\n\tlibtoolize the libltdl subdirectory automatically.\n\t* m4/ltdl.m4 (AC_WITH_LTDL): Fix overquoted args.\n\n2004-06-21  Peter O'Gorman  <peter@pogma.com>\n\n\t* ltmain.in (dependency_libs) [darwin]: Remove -framework stuff from\n\tdependency_libs. Instead, invent a new .la var \"inherited_linker_flags\"\n\tto keep any linker flags which should be used when linking the library,\n\tbut are outside the usual -L -l, -R etc that can be used in\n\tdependency_libs. Any unusual flags in dependency_libs cause recent\n\tversions of libtool to die with \"cannot find the library `'\", so\n\tit is required to move frameworks out of there. :(\n\n2004-06-21  Gary V. Vaughan  <gary@gnu.org>\n\n\tFrom Ralf Wildenhues <Ralf.Wildenhues@gmx.de>:\n\t* libtoolize.in: Quote $# to make sh.test happy again.\n\n\t* m4/ltdl.m4 (AC_WITH_LTDL): Remove redundant AC_REQUIRE calls.\n\tEither set variables to allow a client to link with the installed\n\tlibltdl, or else compile a local libltdl as a convenience library.\n\t* libtoolize.in (opt_ltdl): Removed in favour of...\n\t(ltdldir): ...this, which is defaulted to \"libltdl\" or can be set\n\tby the user with an argument to --ltdl.\n\t(Main): Use it!\n\t* doc/libtool.texi (Distributing libltdl): Improved documentation\n\ton libltdl.\n\t(Invoking libtoolize): Document new optional --ltdl target\n\tdirectory argument.\n\n2004-06-17  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4 (AC_LIBTOOL_PROG_LD_SHLIBS) [darwin*]: Fix a typo\n\tin allow_undefined_flag: s,${Wl},${wl},g\n\n\t* libtoolize.in (func_scan_files): Accept AC_WITH_LTDL as an\n\tindication that libltdl is being used.\n\t(Main): Without AC_CONFIG_MACRO_DIR, don't just dump all the\n\tmacro files in `.' since they are never used, and aclocal will\n\tcopy them from $aclocaldir into aclocal.m4 anyway.\n\tReported by Alexandre Duret-Lutz <adl@gnu.org>\n\n2004-06-16  Brad  <brad@comstyle.com>\n\n\t* m4/libtool.m4: More improvements to OpenBSD support.\n\t* NEWS: Updated.\n\n2004-06-16  Gary V. Vaughan  <gary@gnu.org>\n\n\tlibltdl uses LIBOBJS, which leak out into a parent project if both\n\tshare the same configure.ac.  Libtool itself doesn't compile any\n\tcode, so it is okay to do it during bootstrap, but other projects\n\tneed to treat libltdl as a configurable subproject to keep their\n\trespective LIBOBJS separate:\n\n\t* libltdl/configure.ac: New file, based on configure.ac.\n\t* libltdl/Makefile.am (AC_LOCAL_AMFLAGS): Use our own m4\n\tdirectory.\n\t(ltdldata_DATA): List *all* the files that libtoolize --ltdl will\n\tinstall.\n\n2004-06-16  Gary V. Vaughan  <gary@gnu.org>\n\n\tAutomake 1.9 won't have the AC_PROG_EGREP bug (aclocal used to\n\tpull an old installed libtool.m4 as well as the bootstrap\n\tm4/libtool.m4 if an AC_DEFUN was removed), and we have\n\tlt~obsolete.m4 to work around it in the mean time.  libtoolize\n\tcan install macro files from $prefix/share/aclocal perfectly well\n\twithout us needing to move to a whole other directory:\n\n\t* Makefile.am (pkgmacro_DATA): Renamed to aclocal_DATA, so m4\n\tfiles are installed to $prefix/share/aclocal again.\n\t(install-data-local): Don't remove just installed macros!\n\t* libtoolize.in (pkgmacrodir): Renamed to aclocaldir.\n\t(func_copy_some_files): New function factored out of...\n\t(func_copy_all_files): ...here.  Adjust to use func_copy_some_files.\n\t(re_pkgaux_files): Renamed to glob_pkgaux_files, since it is not\n\ta regular expression.\n\t(re_pkgmagro_files): Replaced with...\n\t(pkgmacro_files): ...a colon delimited list of libtool installed\n\tm4 files from aclocaldir.\n\t(Main): Copy macro files from aclocaldir again.\n\t* NEWS: Updated.\n\n2004-05-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* ltmain.sh (check_executable): The WIN32 API and MinGW do not support\n\tS_IXOTH and S_IXGRP so use of these modes should be conditional.\n\n2004-05-21  Gary V. Vaughan  <gary@gnu.org>\n\n\t* tests/tagtrace.test: Forgot to add this file to the repository\n\tfor Alexandre's 2004-05-16 patch below.\n\n2004-05-18  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4 (AC_LIBTOOL_SYS_DYNAMIC_LINKER): Make this an m4_defun,\n\ttest the tags compiler to see if it is GCC, not the CC compiler.\n\n2004-05-16  Alexandre Duret-Lutz  <adl@gnu.org>\n\n\t* doc/libtool.texi (Invoking libtool): Mention --tag=TAG.\n\t(Tags, Trace interface): New nodes.\n\t* m4/libtool.m4 (LT_SUPPORTED_TAG): New macro.\n\t(_LT_LANG): Call it.\n\t* tests/tagtrace.test: New file.\n\t* tests/Makefile.am\n\t(TESTS): Add tagtrace.test.\n\t* tests/defs: Define AUTOCONF.\n\n2004-05-14  Mike Gorchak  <lestat@i.com.ua>\n\n\t* ltmain.in: Add new qnx version type support.\n\t* m4/libtool.m4 (AC_LIBTOOL_SYS_DYNAMIC_LINKER): Use it.  Set\n\tldqnx.so linker type.\n\t(AC_DEPLIBS_CHECK_METHOD): QNX6 uses GNU C++, with deplib\n\tchecking, so use pass_all.\n\t(AC_LIBTOOL_PROG_COMPILER_PIC): Use -shared for QNX.\n\t(_LT_LANG_CXX_CONFIG): QNX can make shared libraries.\n\t* m4/ltdl.m4 (AC_LTDL_SYS_DLOPEN_DEPLIBS): QNX opens deplibs on\n\tdlopen.\n\t* NEWS: Updated.\n\n2004-05-05  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4 (AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH): Insert space\n\taround = for a test and a comma between runpath_var and $1. Bug\n\treported by Max Bowsher.\n\n2004-04-22  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/argz.h: Moved from here...\n\t* libltdl/argz_.h: ...to here, so as not to shadow system\n\targz.h when we `#include <argz.h>' for example.\n\t#include stdlib.h and sys/types.h to ensure we get a size_t\n\tdefinition.\n\t* libltdl/argz.c (HAVE_CONFIG_H): Set it up how ltdl likes it when\n\tused by another client.\n\t* m4/argz.m4: New file.\n\t(gl_FUNC_ARGZ): Try to find an error_t definition, and a system\n\targz.h.\n\t* m4/ltdl.m4: Use it.\n\t(AC_LTDL_FUNC_ARGZ): Removed.\n\t* libltdl/lt__glibc.h: #include <argz.h> to pick up either the\n\tsystem argz.h or our libltdl/argz.h if necessary.\n\t* libltdl/Makefile.am (libltdl_la_SOURCES): Move argz.h from\n\there...\n\t(ltdldata_DATA): ...here. Along with argz.c.\n\t(argz.h): Generate from argz_.h if the system file is missing.\n\tReported by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\n2004-04-22  Gary V. Vaughan  <gary@gnu.org>\n\n\tAccording to Howard Chu <hyc@highlandsun.com>:\n\tApplications should assume that the native dlopen is NOT\n\tthread-safe, and take care of locking themselves. All application\n\tcalls into libltdl should thus be protected by the caller.\n\n\t* libltdl/lt_mutex.c, libltdl/lt_mutex.h: Removed.\n\t* libltdl/Makefile.am (pkginclude_HEADERS): Removed lt_mutex.h.\n\t(libltdl_la_SOURCES): Removed lt_mutex.c and lt_mutex.h.\n\t* libltdl/ltdl.h: Don't include lt_mutex.h.\n\t* libltdl/lt__private.h (LT__MUTEX_GETERROR, LT__MUTEX_SETERROR)\n\t(LT__MUTEX_SETERRORSTR): Renamed to...\n\t(LT__GETERROR, LT__SETERROR, LT__SETERRORSTR): ...this.  Changed\n\tall callers.\n\t(LT__MUTEX_LOCK, LT__MUTEX_UNLOCK, lt_dlmutex_lock)\n\t(lt_dlmutex_unlock, lt_dlmutex_seterror, lt_dlmutex_geterror):\n\tRemoved.  Changed all callers.\n\t* doc/libtool.texi (Thread Saftey in libltdl):\n\t* NEWS: Updated.\n\n2004-04-19  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4 (_LT_LANG_CXX_CONFIG): Detect Intel C++ compiler\n\tversion more idiomatically.\n\n2004-04-19  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* m4/libtool.m4: Use cc rather than ld to created\n\ta shared library on HP-UX 11.x. On HP-UX 10.x, the\n\tC compiler doesn't grok -b so we continue to use ld.\n\n\t* m4/libtool.m4: Use cc rather than ld to create a\n\tshared library on Solaris. When using the Sun\n\tWorkshop compiler 5.0 (and I presume any previous\n\tversion), revert to ld due to compiler errors.\n\n\t* m4/libtool.m4: Use cc rather than ld to created\n\ta shared library on Tru64 UNIX.\n\n\t* m4/libtool.m4: Use cc rather than ld to created\n\ta shared library on IRIX.\n\n\t* libltdl/loader-shl_load.c: Fix typos during reorg.\n\n2004-04-19  Alexandre Duret-Lutz  <adl@gnu.org>\n\n\t* doc/libtool.texi (LT_INIT): Properly display options in a table.\n\n2004-04-19  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4 (_LT_LANG_CXX_CONFIG): Intel C++ compiler 8.0 and\n\tnewer adds predep_objects and postdep_objects itself, so don't\n\tduplicate them in $archive_cmds and $archive_expsym_cmds.\n\t* NEWS: Updated.\n\tReported by Roberto Bagnara <bagnara@cs.unipr.it>\n\n2004-04-17  Peter O'Gorman  <peter@pogma.com>\n\n\t* libltdl/loader-dyld.c: Fix compilation issues. Set Original author\n\tto me.\n\n2004-04-17  Todd Vierling  <tv@duh.org>,\n\tPeter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4 (AC_LIBTOOL_SYS_MAX_CMD_LEN): Use sysctl to get the\n\tmax cmd length on BSD* and darwin. Make sure that there is a safety\n\tfactor too.\n\n2004-04-15  Scott James Remnant  <scott@netsplit.com>\n\n\t* m4/libtool.m4 (_LT_LANG_DEFAULT_CONFIG): Remove code to handle 'none'\n\tand 'all' options, this now always assumes automatic mode as that\n\tworks so well.\n\t(_LT_LANG_DEFAULT): Remove definition\n\t* m4/ltoptions.m4: Remove 'no-lang', 'auto-lang' and 'all-lang' options.\n\t* configure.ac: Invoke LT_LANG for each desired supported language.\n\t* doc/libtool.texi: Remove documentation for the LT_INIT options,\n\trewrite LT_LANG documentation.\n\n2004-04-14  Alexandre Duret-Lutz  <adl@gnu.org>\n\n\t* bootstrap: Delete acinclude.m4.\n\n2004-04-14  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.in (configure_ac): Don't complain about the lack of\n\taclocal.m4.\n\tReported by Alexandre Duret-Lutz <adl@src.lip6.fr>\n\n2004-04-13  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/ltdl.m4 (AC_LIB_LTDL): Remove AC_REPLACE_FUNCS for memmove\n\tand strcpy.\n\n\t* libltdl/lt__pre89.h, libltdl/memcpy.c, libltdl/memmove.c,\n\tlibltdl/strchr.c, libltdl/strcmp.c, libltdl/strrchr.c: Remove\n\thalf-assed pre-c89 support entirely.\n\t* libltdl/lt__private.h: Don't refer to lt__pre89.h.\n\t* libltdl/Makefile.am (ltdldata_DATA): Remove references to\n\tdeleted files.\n\t* NEWS: Mention it.\n\n\t* libltdl/lt__pre89.h, libltdl/ltdl.c, libltdl/ltdl.h, libltdl/argz.c,\n\tlibltdl/argz.h, libltdl/lt__glibc.h, libltdl/lt_dlloader.h,\n\tlibltdl/lt__dirent.c, libltdl/lt__dirent.h, libltdl/lt__private.h,\n\tlibltdl/lt__alloc.c, libltdl/lt__alloc.h, libltdl/lt_system.h,\n\tlibltdl/loader-dld_link.c, libltdl/loader-dlopen.c,\n\tlibltdl/loader-dyld.c,  libltdl/loader-loadlibrary.c,\n\tlibltdl/loader-shl_load.c, libltdl/lt_error.h, libltdl/lt_mutex.h:\n\tAutoconf either defines to 1 or undefs the discovery macros it\n\tputs in config.h, and many (non-GNU) compilers throw a spurious\n\twarning when testing an #undef macro with #if.  For consistency,\n\twhile we are touching all these lines, use defined(MACRO) style\n\tthroughout.\n\tReported by Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n2004-04-13  Gary V. Vaughan  <gary@gnu.org>\n\n\tFactor out the individual loaders, in preparation for preloading\n\tthem as libtool modules.  Currently loader-preopen.c is linked\n\tunconditionally and other appropriate loaders discovered by\n\tAC_LTDL_DLLIB are built and linked in:\n\n\t* libltdl/Makefile.am (libltdl_la_SOURCES): Add loader-preopen\n\tmodule.\n\t* m4/ltdl.m4 (AC_LTDL_DLLIB): Use AC_LIBOBJ to add appropriate\n\tloaders to libltdl.\n\t* libltdl/lt_system.h (LT_SCOPE): Moved to here.\n\t* libltdl/ltdl.h (lt_dlloader, lt_user_data, lt_module)\n\t(lt_module_open, lt_module_close, lt_find_sym, lt_dlloader_exit)\n\t(struct lt_user_dlloader, lt_dlloader_next, lt_dlloader_find)\n\t(lt_dlloader_name, lt_dlloader_data, lt_dlloader_add)\n\t(lt_dlloader_remove): Moved declarations...\n\t* libltdl/lt_loader.h: ...to here.\n\t* libltdl/ltdl.c: Include lt_loader.h.  Move loader implementation\n\tcode from here...\n\t* libltdl/loader-dld_link.c, libltdl/loader-dlopen.c,\n\tlibltdl/loader-dyld.c, libltdl/loader-load_add_on.c,\n\tlibltdl/loader-loadlibrary.c, libltdl/loader-preopen.c,\n\tlibltdl/loader-shl_load.c: ...to here.\n\t* tests/cdemo/Makefile.am, tests/demo/Makefile.am,\n\ttests/depdemo/Makefile.am, tests/f77demo/Makefile.am,\n\ttests/mdemo/Makefile.am, tests/mdemo2/Makefile.am,\n\ttests/pdemo/Makefile.am, tests/tagdemo/Makefile.am (AM_CPPFLAGS):\n\tAdd -I$(top_srcdir)/../.. so that libltdl include files can be\n\twritten as #include <libltdl/lt_dlloader.h> and found correctly.\n\n2004-04-13  Gary V. Vaughan  <gary@gnu.org>\n\n\tFactor out the mutex handling and error handling into their own\n\tmodules.  Mutex handling is not currently useful in combination\n\twith posix threads, and should be easier to replace if it is in a\n\tseparate module.  Additionally, we can factor out the loaders in\n\tsuch a way as to depend on only the portability layer and these\n\tnew mutex and error modules now:\n\n\t* libltdl/Makefile.am (pkginclude_HEADERS): Install lt_error.h and\n\tlt_mutex.h to $includedir/libltdl.\n\t(libltdl_la_SOURCES): Build lt_error and lt_mutex objects.\n\t* libltdl/ltdl.h (LT_SCOPE): Moved from here...\n\t* libltdl/lt_system.h (LT_SCOPE): ...to here.\n\t* libltdl/ltdl.c (lt_dlerror_strings, LT_DLSTRERROR): Moved from\n\there...\n\t* libltdl/lt__private.h (lt__error_strings, LT__STRERROR): ...to\n\there as additional internal interfaces to lt_error.  Changed all\n\tcallers.\n\t* libltdl/ltdl.c (LT_DLMUTEX_LOCK, LT_DLMUTEX_UNLOCK)\n\t(LT_DLMUTEX_SETERROR, LT_DLMUTEX_GETERROR, lt_dlmutex_lock_func)\n\t(lt_dlmutex_unlock_func, lt_dlmutex_geterror_func)\n\t(lt_dllast_error): Moved from here...\n\t(LT__MUTEX_LOCK, LT__MUTEX_UNLOCK, LT__MUTEX_SETERRORSTR)\n\t(LT__MUTEX_GETERROR, lt__mutex_lock_func, lt__mutex_unlock_func)\n\t(lt__mutex_geterror_func, lt__last_error): ...to here as\n\tadditional internal interfaces to lt_mutex.  Changed all callers.\n\t(LT_MUTEX_SETERROR): Take an errorcode rather than a string.\n\tChanged all callers.\n\t* libltdl/ltdl.c, libltdl/ltdl.h (lt_dlmutex_register): Moved from\n\there...\n\t* libltdl/lt_mutex.c, libltdl/lt_mutex.h (lt_dlmutex_register):\n\t...to here. New files.\n\t* libltdl/ltdl.c, libltdl/ltdl.h (lt_dladderror, lt_dlseterror)\n\t(lt_dlerror_table):\n\tMoved from here...\n\t* libltdl/lt_error.c, libltdl/lt_error.h (lt_dladderror)\n\t(lt_dlseterror, lt_dlerror_table): ...to here. New files.\n\n2004-04-13  Scott James Remnant  <scott@netsplit.com>\n\n\t* Makefile.am (XDELTA_OPTIONS): Remove --pristine as that\n\tgenerates huge xdeltas.\n\n2004-04-08  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.c (argz_append, argz_create_sep, argz_insert)\n\t(argz_next, argz_stringify): Move from here...\n\t* libltdl/argz.c: New file. ...to here.\n\t* libltdl/lt__glibc.h: New file. Rename global symbols into the\n\tlt__ namespace.\n\t* libltdl/lt__private.h: Include lt__glibc.h.\n\t* libltdl/Makefile.am (libltdl_la_SOURCES): Add new files.\n\t(AM_CPPFLAGS): Add -DLTDL.\n\t* libltdl/argz.h (argz_append, argz_create_sep, argz_insert)\n\t(argz_next, argz_stringify): New file. Declare argz functions\n\there, including lt__glibc.h when LTDL is defined to rename global\n\tsymbols for libltdl.\n\t* m4/ltdl.m4 (AC_LTDL_FUNC_ARGZ): Add argz to AC_LIBOBJ if any of\n\tour argz_* functions are missing from the system libraries.\n\n\t* libltdl/ltdl.c: Move standard headers and preprocessor guards\n\tfrom here...\n\t* libltdl/lt__private.h: ...to here.  New file to declare ltdl's\n\tinternal interfaces.\n\t* libltdl/ltdl.c: Include lt__private.h.\n\t* m4/ltdl.m4 (AC_LIB_LTDL): Add lt_dirent to AC_LIBOBJ if all of\n\topendir, readdir and closedir are missing.\n\t(AC_CHECK_HEADERS): Remove assert.h, ctype.h, errno.h, malloc.h,\n\tstdio.h and stdlib.h; these headers are all available in standard\n\tc89 environments and newer.\n\t* libltdl/lt__private.h: Include them here unconditionally.\n\t* libltdl/lt__dirent.c (opendir, readdir, closedir): New file.\n\tWindows dirent emulation functions moved to here...\n\t* libltdl/ltdl.c (opendir, readdir, closedir): ...from here.\n\t* libltdl/lt__dirent.h: New file.  Rename the global symbols from\n\tlt__dirent.c into the lt__ namespace so they don't clash with\n\tother libraries.\n\n2004-04-08  Gary V. Vaughan  <gary@gnu.org>\n\n\tFactor out the bottom portability layer from ltdl.  Code in this\n\tlayer has global symbols renamed by lt__pre89.h, and may not\n\trefer to any symbols except those provided by the system libraries\n\tor other code in the portability layer:\n\n\t* libltdl/lt__pre89.h: New file.  Rename all the symbols from\n\tLTLIBOBJS into the lt__ namespace so that they don't clash with\n\tother libraries.\n\t* libltdl/ltdl.c (rpl_memcpy, rpl_memmove, rpl_strchr, rpl_strcmp)\n\t(rpl_strrchr): Moved from here...\n\t* libltdl/memcpy.c (memcpy): ...to here, and fixed void *\n\tdereference bug...\n\t* libltdl/memmove.c (memmove): ...to here, and fixed void *\n\tdereference bug...\n\t* libltdl/strchr.c (strchr): ...to here...\n\t* libltdl/strcmp.c (strcmp): ...here...\n\t* libltdl/strrchr.c (strrchr): ...and here.\n\t* libltdl/Makefile.am (libltdl_la_SOURCES): Add lt__pre89.h.\n\t(libltdl_la_LIBADD, libltdlc_la_LIBADD): Add $(LTLIBOBJS).\n\t(ltdldata_DATA): Add replacement sources files.\n\t* m4/ltdl.m4 (AC_LIB_LTDL): Do careful config.h and LTLIBOBJ\n\tsetting for missing pre89 functions.\n\n2004-04-08  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libltdl/ltdl.h (LT_PARAMS): Removed.  Changed all users to\n\tANSI prototypes.\n\t(lt_ptr): Keep backwards compatibility stub.\n\t* libltdl/ltdl.c, libltdl/ltdl.h: Use ANSI function declarations\n\tthroughout.  s/lt_ptr/void */g.\n\n2004-04-08  Fredrik Estreen  <estreen@algonet.se>\n\n\t* m4/ltdl.m4: Rename shrext to shrext_cmds here too.\n\n2004-04-06  Gary V. Vaughan  <gary@gnu.org>\n\n\tThere was no clean separation of abstraction layers in libltdl.\n\tThe first step in fixing this is to factor out the memory\n\tmanagement abstraction, making a start on removing promiscuity\n\tfrom the underlying portability layer:\n\n\t* doc/libtool.texi (Libltdl interface): Remove lt_dlmalloc,\n\tlt_dlrealloc and lt_dlfree references.  The memory management\n\tlayer used by libltdl is now private.\n\t* libltdl/lt_system.h: New installed header for system portability\n\tabstraction.\n\t* libltdl/ltdl.h: Use it.\n\t* libltdl/lt__alloc.c, libltdl/lt__alloc.h: New module above\n\tsystem portability layer to abstract ltdl's memory management.\n\t* libltdl/ltdl.c: Use lt__alloc.h.\n\t(closedir): Use free.\n\t(opendir): Use malloc/free.\n\t(lt__xalloc_die_callback): Report memory failures through\n\tlt_dlerror.\n\t(lt_dlinit): Use it to initialise memory management.\n\t(LT_DLMALLOC, LT_DLREALLOC, LT_DLFREE, LT_EMALLOC, LT_EREALLOC)\n\t(rpl_strdup, rpl_realloc, lt_estrdup, lt_emalloc, lt_erealloc):\n\tRemoved in favour of...\n\t(lt__strdup, lt__memdup, MALLOC, REALLOC, FREE): ...these calls\n\tfrom libltdl/lt__alloc.h.  Changed all callers.\n\t(rpl_argz_append, rpl_argz_create_sep, rpl_argz_insert): As part\n\tof the portability layer, these functions no longer use libltdl\n\tmemory management API.\n\t(free_vars): Factored out.\n\t(LT_DLMEM_REASSIGN): While redoing memory handling, renamed...\n\t* libltdl/lt__alloc.h (MEMREASSIGN): ...to this.\n\t* libltdl/Makefile.am (AUTOMAKE_OPTIONS): Let automake track\n\tdependencies automatically.\n\t(pkgincludedir): Override from parent package's setting.\n\t(pkginclude_HEADERS): Install lt_system.h.\n\t(libltdl_la_SOURCES): Add new files.\n\t* NEWS: Updated.\n\tReported by Dalibor Topic <robilad@kaffe.org>\n\n2004-04-01  Peter O'Gorman  <peter@pogma.com>\n\n\t* ltmain.in: Remove an extra eval concat_cmds that some idiot added.\n\tFixes double eval on AIX, reported by Albert Chin and Uwe Moeller.\n\n\t* NEWS: Add a news item about xlc support that I forgot yesterday.\n\n2004-03-31  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4, ltmain.in (darwin): Support IBM's xlc and xlc++.\n\n2004-03-31  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4 (_LT_LANG_C_CONFIG): If $compiler is not set, then\n\tdon't call the macros that test it.\n\t(_LT_LANG_CXX_CONFIG): Ditto.\n\t(_LT_LANG_F77_CONFIG): Ditto.\n\t(_LT_LANG_GCJ_CONFIG): Ditto.\n\t(_LT_LANG_RC_CONFIG): Ditto.\n\n2004-03-30  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.in (func_scan_files): sed BRE have no alternation, so\n\tbreak LT_INIT matcher out.\n\t(func_serial): Don't escape literal parens for grep BRE.\n\n\t* m4/libtool.m4 (LT_INIT): aclocal can't see AC_DEFUN_ONCE, so use\n\tAC_DEFUN and m4_define.\n\t* libtoolize.in (func_serial): No longer accept AC_DEFUN_ONCE...\n\t(func_grep): ...so mere grep is sufficient again...\n\t(EGREP): ...and this is no longer required.\n\n2004-03-29  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4: Use LT_INIT as #serial tag.\n\t* libtoolize.in: Grok LT_INIT!  Pass A[CM]_PROG_LIBTOOL to...\n\t(func_serial_update): ...here, we now take an additional parameter\n\tcontaining another regex to match ancient serialed files.\n\t(func_serial): Accept AC_DEFUN_ONCE of the #serial tag...\n\t(func_grep): ...which requires egrep...\n\t(EGREP): ...substituted by config.status.\n\t(func_scan_files): Set seen_libtool if LT_INIT goes by.\n\n\t* Makefile.am (pkgmacro_DATA): Install ltoptions.m4.\n\n\t* libltdl/Makefile.am (AM_CPPFLAGS): Also check $top_builddir for\n\tconfig.h.\n\t(ltdl.o): config.h is in $top_builddir.\n\n2004-03-24  Scott James Remnant  <scott@netsplit.com>\n\n\t* NEWS: Explain more fully why we no longer load libraries\n\twith global symbol resolution.\n\t* doc/libtool.texi (libtool script contents): Add missing\n\tdocumentation for 'inherit_rpath' variable.\n\n\t* configure.ac: Catch errors during calls to AC_PROG_CXX,\n\tAC_PROG_CXXCPP and AC_PROG_F77 before LT_INIT.  Only set the\n\tHAVE_CXX and HAVE_F77 conditions to true if an error didn't\n\toccur (AC_PROG_CXX leaves CXX=\"g++\" even if it didn't find one).\n\tSet HAVE_GCJ and HAVE_RC to true correctly as well.\n\t* m4/libtool.m4 (LT_PROG_GCJ): If AC_PROG_GCJ or AM_PROG_GCJ are\n\tdefined, expand to the definition of those instead of our own.\n\tDefine GCJ to '' instead of 'no' if not found.\n\t(LT_PROG_RC) Define RC to '' instead of 'no' if not found.\n\t(_LT_LANG_GCJ_CONFIG): Require LT_PROG_GCJ to be expanded first.\n\t(_LT_LANG_RC_CONFIG): Require LT_PROG_RC to be expanded first.\n\n\t* libltdl/ltdl.c (sys_dl_open): Don't load libraries with global\n\tsymbol resolution.\n\t* NEWS: Updated.\n\n2004-03-24  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* m4/libtool.m4: Add new variable, inherit_rpath, if the\n\tRPATHs of the libraries being linked are inherited in\n\tthe output file. For systems with a linker exhibiting\n\tthis feature, programs/libraries must be relinked at\n\tinstallation time.\n\n\t* m4/libtool.m4: When linking convenience libraries on Solaris\n\twith the Sun C++ compiler, pass convenience libraries through\n\tto the linker with -Qoption between allextract/defaultextract.\n\tThe Sun C++ compiler bundles -Qoption arguments so\n\tconvenience libraries are linked with defaultextract\n\totherwise.\n\t* tagdemo/Makefile.am, tagdemo/main.cpp, tagdemo/conv.h,\n\ttagdemo/conv.cpp: Augment tagdemo test to link a convenience\n\tlibrary with a libtool library.\n\n\t* ltmain.in: Piecewise linking doesn't work when the output\n\tfile is an absolute path, use the basename only instead.\n\n\t* ltmain.in: When a library is installed, dependent on a\n\tconvenience library, and it involves relinking, the object\n\tfiles extracted from the convenience library are not removed\n\tafter the relink. This is a problem if you build as non-root,\n\tinstall as root, then try to remove the build directory as\n\tnon-root; Clean up properly if relink fails; Change\n\t\"$realname\"U to ${realname}T to be consistent.\n\n2004-03-24  Scott James Remnant  <scott@netsplit.com>\n\n\t* ltmain.in <prog linkmode>: Always add -L options to\n\t$newlib_search_path instead of just in scan mode to ensure that\n\tnon-libtool libraries in user-specified directories can be found.\n\n2004-03-22  Scott James Remnant  <scott@netsplit.com>\n\n\t* m4/libtool.m4 (_LT_CONFIG): Remove unneeded else condition\n\tcode, now the support determination is done in m4.\n\t(_LT_LANG): Correct comment, unexpected leak from keybuk-lt-tag.patch.\n\n2004-03-21  Scott James Remnant  <scott@netsplit.com>\n\n\t* libltdl/Makefile.am (libltdl_la_LDFLAGS): Increment CURRENT\n\tand AGE of libltdl, warranted by the addition of lt_dlhandle_find()\n\tsince 1.5.2.\n\n2004-03-21  Scott James Remnant  <scott@netsplit.com>\n\n\tFurther sweeping changes to the user interface to libtool from\n\t`configure.ac' to allow users to better control the list of\n\tsupported languages.  Three LT_INIT options 'no-lang', 'all-lang'\n\tand 'auto-lang' (the default) control the initial list and others\n\tmay be added with LT_LANG.\n\n\t* m4/libtool.m4 (_LT_CONFIG): Renamed AC_LIBTOOL_CONFIG to _LT_CONFIG\n\twhich is more consistent with our own namespace and gets us further out\n\tof Autoconf's.\n\t(_LT_LIBTOOL_TAGS): Output available_tags variable based entirely\n\ton the value of _LT_TAGS.\n\t(_LT_COPYING): Call _LT_LIBTOOL_TAGS to output available tags,\n\talways append tag configuration if the tag is available.\n\t(LT_LANG): New macro to enable support for a language that accepts\n\ttag names (eg. \"CXX\") or human language names (eg. \"C++\").\n\t(_LT_LANG): Internal support macro for above that appends the\n\ttag to _LT_TAGS and calls the appropriate config macro.\n\t(LT_INIT): Ensure that LT_LANG is not called before LT_INIT.\n\t(AC_LIBTOOL_TAGS): Removed, call LT_LANG for each language now.\n\t(_LT_AC_TAG_CHECK): Removed, _LT_LANG handles duplicate calls.\n\t(_LT_LANG_DEFAULT_CONFIG): Macro to set initial language support\n\tbased on options passed to LT_INIT.\n\t(_LT_SETUP): Call _LT_LANG_DEFAULT_CONFIG.\n\t(_LT_AC_TAG_CONFIG): Removed, handled by _LT_LANG_DEFAULT_CONFIG.\n\t(_LT_AC_LANG_CXX, _LT_AC_LANG_F77, _LT_AC_LANG_GCJ): Removed,\n\tautomatic language support inclusion now handled by\n\t_LT_LANG_DEFAULT_CONFIG.\n\t(AC_LIBTOOL_CXX): Obsolete macro, update to LT_LANG(C++).\n\t(AC_LIBTOOL_F77): Obsolete macro, update to LT_LANG(Fortran 77).\n\t(AC_LIBTOOL_GCJ): Obsolete macro, update to LT_LANG(Java).\n\t(AC_LIBTOOL_LANG_C_CONFIG_: Removed.\n\t(_LT_AC_LANG_C_CONFIG): Renamed to _LT_LANG_C_CONFIG, call\n\t_LT_CONFIG instead of AC_LIBTOOL_CONFIG.\n\t(_LT_SETUP): Replace call to AC_LIBTOOL_LANG_C_CONFIG with call to\n\tnew _LT_LANG_C_CONFIG macro.\n\t(AC_LIBTOOL_LANG_CXX_CONFIG): Removed.\n\t(_LT_AC_LANG_CXX_CONFIG): Renamed to _LT_LANG_CXX_CONFIG, call\n\t_LT_CONFIG instead of AC_LIBTOOL_CONFIG.\n\t(AC_LIBTOOL_LANG_F77_CONFIG): Removed.\n\t(_LT_AC_LANG_F77_CONFIG): Renamed to _LT_LANG_F77_CONFIG, call\n\t_LT_CONFIG instead of AC_LIBTOOL_CONFIG.\n\t(AC_LIBTOOL_LANG_GCJ_CONFIG): Removed.\n\t(_LT_AC_LANG_GCJ_CONFIG): Renamed to _LT_LANG_GCJ_CONFIG, call\n\t_LT_CONFIG instead of AC_LIBTOOL_CONFIG.\n\t(AC_LIBTOOL_LANG_RC_CONFIG): Removed.\n\t(_LT_AC_LANG_RC_CONFIG): Renamed to _LT_LANG_RC_CONFIG, call\n\t_LT_CONFIG instead of AC_LIBTOOL_CONFIG.\n\t(LT_AC_PROG_GCJ): Renamed to LT_PROG_GCJ.\n\t(LT_AC_PROG_RC): Renamed to LT_PROG_RC.\n\t* m4/ltoptions.m4: Define new 'no-lang', 'auto-lang' and 'all-lang'\n\toptions which set the default for _LT_LANG_DEFAULT_CONFIG.\n\t* m4/lt~obsolete.m4: Removed AC_LIBTOOL_CONFIG, _LT_AC_LANG_C_CONFIG,\n\t_LT_AC_LANG_GCJ_CONFIG, _LT_AC_LANG_RC_CONFIG; all of which are no\n\tlong referenced in any way.\n\t* configure.ac: Enable all languages.\n\t* tests/cdemo/configure.ac, tests/demo/configure,ac,\n\ttests/depdemo/configure.ac, tests/f77demo/configure.ac,\n\ttests/mdemo/configure.ac, tests/pdemo/configure,ac,\n\ttests/tagdemo/configure.ac: Remove calls to AC_LIBTOOL_TAGS,\n\tthe default 'auto-lang' mode now does the right thing.\n\t* doc/libtool.texi (The LT_INIT macro): Add documentation for\n\tnew LT_INIT options and the LT_LANG macro, replacing the old\n\tdocumentation of AC_LIBTOOL_TAGS which is no more.\n\t* NEWS: Updated.\n\n2004-03-17  Scott James Remnant  <scott@netsplit.com>\n\n\t* m4/libtool.m4: Removed AC_BEFORE references to AC_LIBTOOL_SETUP\n\twhich is no more.\n\t* m4/lt~obsolete.m4: As AC_LIBTOOL_SETUP is no longer referenced,\n\tit can be removed from this file.  Remove _AC_PROG_LIBTOOL also.\n\n2004-03-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n\n\t* m4/libtool.m4: Remove newlines from lt_ld_extra, so\n\tvariable can safely be stored in config.cache.\n\n2004-03-14  Michael Pruett  <michael@68k.org>\n\n\t* m4/libtool.m4 (AC_LIBTOOL_PROG_LD_SHLIBS0 [irix]: Define\n\tarchive_expsym_cmds so that --export-symbols will work.\n\n2004-03-11  Peter O'Gorman  <peter@pogma.com>\n\n\t* ltmain.in (link_all_deplibs,darwin): Link libraries in the\n\tcorrect order. Bug from Zachary Pincus <zpincus@stanford.edu>.\n\n2004-03-14  Scott James Remnant  <scott@netsplit.com>\n\n\t* m4/ltmain.in: Only check precious_files_regex if it is not empty.\n\n2004-03-14  Gary V. Vaughan  <gary@gnu.org>\n\n\t* doc/libtool.texi (Autoconf and LTLIBOBJS): The correct version\n\tof Autoconf is 2.54.\n\tFrom Alexandre Duret-Lutz  <adl@src.lip6.fr>\n\n2004-03-13  Gary V. Vaughan  <gary@gnu.org>\n\n\t* doc/libtool.texi (Using Automake): Cite correct Automake version\n\tfor -dlopen quoting.\n\t(Autoconf and LTLIBOBJS): Cite correct Autoconf\tversions\n\tthroughout.\n\t(Distributing libltdl): Use AM_CPPFLAGS; INCLUDES is deprecated.\n\tFrom Alexandre Duret-Lutz  <adl@src.lip6.fr>\n\n2004-03-05  David Edelsohn  <edelsohn@gnu.org>\n\n\t* m4/libtool.m4: Disable building static libraries if building\n\tshared libraries on AIX 5L.\n\n2004-03-05  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.in: Remove --ltdl-tar.  It doesn't work with the\n\tcurrent implementation, and seems more or less pointless.\n\t* doc/libtool.texi (Invoking libtoolize): Updated.\n\t* NEWS: Updated.\n\n\t* doc/libtool.texi: This manual has not been maintained properly\n\tfor a number of years.  Much of what it said was outdated, or\n\tplain wrong with reference to modern autotools.  This change\n\trepresents a first pass edit to clean up the obviously wrong.\n\n2004-03-02  Gary V. Vaughan  <gary@gnu.org>\n\n\t* bootstrap: Prune out my arch mirror dir before running\n\tamok through the tree with 'rm -rf'!\n\n2004-03-02  Patrick Welche  <prlw1@newn.cam.ac.uk>\n\n\t* doc/libtool.texi (LT_INIT): Dumb typos fixed.\n\n2004-02-23  Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltmain.in <install mode>: Add missing --help doc for\n\t-inst-prefix option.\n\n\t* ltmain.in <link mode>: Add missing --help doc for -shrext\n\toption.\n\n\t* ltmain.in (IFS): Move '\\n' to beginning of IFS so that emacs\n\tdoesn't offer to strip trailing ' \\t' on every save.\n\n\t* ltmain.in: Add missing --help doc for --preserve-dup-deps.\n\n2004-02-22  Gary V. Vaughan  <gary@gnu.org>\n\n\t* Makefile.maint (web-manual): Generate the web manual carefully\n\tso that links will still work when it is uploaded to gnu.org.\n\t* README-alpha: Note that this rule should be used at release\n\ttime.\n\n2004-02-20  Gary V. Vaughan  <gary@gnu.org>\n\n\tSweeping changes to the user interface to libtool from\n\t`configure.ac' to be more like AC_INIT and accept a space\n\tdelimited list of options.  Instead of calling `AC_LIBTOOL_DLOPEN;\n\tAC_PROG_LIBTOOL', we now recommend `LT_INIT([dlopen])':\n\n\t* m4/libtool.m4\t(AC_PROG_LIBTOOL, _AC_PROG_LIBTOOL)\n\t(AC_LIBTOOL_SETUP): Removed.  Added AU_DEFUNs.\n\t(LT_INIT): Replace with an Autoconf like interface which accepts a\n\tversion number as a minimum required libtool release at configure\n\ttime.\n\t* m4/ltoptions.m4: New file inspired by automake/m4/amoptions.m4,\n\twhich additionally flags an error if the configuring libtool\n\tmacros are not new enough according to LT_INIT.\n\t(LT_OPTION_DEFINE): New macro to declare option handlers.\n\t(dlopen, win32-dll, shared, disable-shared, static)\n\t(disable-static, fast-install, disable-fast-install, pic-only)\n\t(no-pic): Newly LT_OPTION_DEFINEd option handlers that use...\n\t(_LT_ENABLE_SHARED, _LT_ENABLE_STATIC, _LT_ENABLE_FAST_INSTALL)\n\t(_LT_WITH_PIC, _LT_WIN32_DLL): New macros to handle\n\tLT_LIBTOOL_INIT options...\n\t* m4/libtool.m4 (AC_ENABLE_SHARED, AC_ENABLE_STATIC)\n\t(AC_ENABLE_FAST_INSTALL, AC_LIBTOOL_DLOPEN, AC_LIBTOOL_WIN32_DLL):\n\t...to replace these user interface macros, now defined as\n\tAU_DEFUNs.\n\t(AC_DISABLE_SHARED, AC_DISABLE_STATIC, AC_DISABLE_FAST_INSTALL):\n\tRemoved.  No longer required with LT_INIT_LIBTOOL interface.\n\tAdded AU_DEFUNs.\n\t(AM_ENABLE_SHARED, AM_DISABLE_SHARED, AM_ENABLE_STATIC)\n\t(AM_DISABLE_STATIC): Changed AU_DEFUNs to match new interface.\n\t(_LT_SETUP): Internal to LT_INIT, replaces AC_LIBTOOL_SETUP.\n\t* m4/lt~obsolete.m4 (AC_LIBTOOL_SETUP, _AC_PROG_LIBTOOL)\n\t(_LT_PROG_LTMAIN):  More AC_DEFUNs that have been retracted.\n\t* configure.ac: Use new interface.\n\t* doc/libtool.texi: Document new interface.\n\t* NEWS: Updated.\n\n2004-02-18  Gary V. Vaughan  <gary@gnu.org>\n\n\t* commit (SHELL): Set it explicitly, incase some madman is using\n\ttcsh as their login shell :-b\n\n2004-02-15  Scott James Remnant  <scott@netsplit.com>\n\n\t* Makefile.am (m4/ltversion.m4): Generate serial number by\n\tremoving initial '1.' from the revision, replace @MACRO_SERIAL@\n\twith this new variable.\n\t* m4/ltversion.in: Use @MACRO_SERIAL@ for the serial number\n\tas some shells don't like a '.' when using test.\n\n\t* m4/ltversion.in: Add a serial number to this file otherwise\n\tlibtoolize will refuse to copy it into $pkgdatadir, where it\n\tis needed by m4/libtool.m4.\n\n2004-02-15  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4, ltmain.in: Rename shrext to shrext_cmds.\n\n2004-02-13  Scott James Remnant  <scott@netsplit.com>\n\n\t* ltmain.in, libtoolize.in, commit, config/mailnotify: Correctly\n\tquote usage of $basename and $dirname to avoid (unlikely) path\n\texpansion.\n\n\t* tests/sh.test: Test the config/ltmain.sh and libtoolize in the\n\tbuild directory not the source directory, where they won't exist\n\tduring 'make distcheck'.\n\t* ltmain.in: Revert one line of previous intendation clean-up\n\tto enable one of the sh.test checks to pass.\n\n\t* tests/cdemo/configure.ac: Drop AC_PREREQ back to 2.54, this\n\twas debris from Gary's cvsapply going mad and wasn't backed\n\tout.\n\n\t* Makefile.am (pkgmacro_DATA): We have to distribute\n\tm4/ltversion.m4 because it can be needed before the Makefile\n\tthat generates it exists.\n\n2004-02-13  Gary V. Vaughan  <gary@gnu.org>\n\n\t* commit (MKSTAMP): Look for mkstamp in the right place.\n\n2004-02-12  Scott James Remnant  <scott@netsplit.com>\n\n\t* Makefile.maint, Makefile: Move rules intended for Libtool\n\tmaintainers only out of the Makefile we distribute and into one\n\tthat we only need keep in CVS.\n\t* README-alpha: Add -fMakefile.maint to the instructions where\n\tneeded.\n\n2004-02-12  Albert Chin-A-Young  <china@thewrittenword.com>\n\tScott James Remnant  <scott@netsplit.com>\n\n\t* ltmain.in: Fix typo: duplcations -> duplications,\n\tFix indentation of a handful of badly indented blocks,\n\tFix last remaining use of 'grep' to $GREP,\n\tRemove unnecessary trailing slash where we break a line on a\n\tcommand separator.\n\t* m4/libtool.m4: Also remove unnecessary trailing slash where\n\twe break a line on a command separator.\n\n2004-02-12  Scott James Remnant  <scott@netsplit.com>\n\n\t* m4/ltoptions.m4: This got committed by an over-keen Gary,\n\tbut the support for this isn't ready yet and if aclocal decides\n\tto m4_include this (which it will) you'll get a non-functioning\n\tlibtool.  Removed.\n\n\t* ltmain.in: Remove duplicated version checking block.\n\n\t* bootstrap, m4/libtool.m4: Argh, Gary went crazy after cvsapply\n\twent crazy and backed out more than he should've.  This patch puts\n\tsome of it back again.\n\n\t* ltmain.in, libtoolize.in, commit, config/mailnotify: Remove\n\t$SED from definitions of $dirname and $basename and prefix each\n\tuse with it instead.  Some shells (zsh) treat the expansion as\n\ta single command instead of a command with arguments.\n\n\t* config/mailnotify (func_sendmail): Look for sendmail in a\n\tcouple of common non-PATH locations as well.\n\n\t* ltmain.in: Fix typo: macro's -> macros.\n\n\t* ltmain.in: Correct definition of basename sed expression to\n\tnot include single quotes.\n\n2004-02-12  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.in: Use $progpath as for ltmain.in to work around the\n\tIRIX bug described below.\n\t* commit, config/mailnotify: Ditto. Resynch with cvs-utils HEAD.\n\n2004-02-12  Albert Chin-A-Young  <china@thewrittenword.com>,\n\t    Gary V. Vaughan  <gary@gnu.org>\n\n\t* ltmain.in (progpath): Work around backward compatibility issue\n\ton IRIX 6.5. On IRIX 6.4+, sh is ksh but when the shell is invoked\n\tas \"sh\" and the current value of the _XPG environment variable is\n\tnot equal to 1 (one), the special positional parameter $0, within\n\ta function call, is the name of the function. So, rather than\n\tusing \"$0\" in functions, we set $progpath in the body and use that\n\teverywhere instead (incase of code refactoring later).\n\t(EXIT_SUCCESS, EXIT_FAILURE, EXIT_MISMATCH): For clarity.\n\n2004-02-12  Gary V. Vaughan  <gary@gnu.org>\n\n\t* Makefile.am (EXTRA_DIST): Remove config/mailnotify after all; it\n\tis of no use in a distribution tarball.\n\n2004-02-11  Gary V. Vaughan  <gary@gnu.org>\n\n\t* commit: Fix cut-n-paste error.\n\n\t* commit: Completely change CVS/Root->name sed script to actually\n\twork when :ext: is not shown.\n\n\t* commit: Improve CVS/Root->name sed script to work when :ext: is\n\tnot shown.\n\n2004-02-11  Albert Chin-A-Young  <china@thewrittenword.com>\n\n\t* m4/libtool.m4: Fix typo: testring -> teststring.\n\n2004-02-11  Gary V. Vaughan  <gary@gnu.org>\n\n\t* commit: Mail a nicer commit notification.\n\n2004-02-10  Gary V. Vaughan  <gary@gnu.org>\n\n\t* NEWS, bootstrap, configure.ac, ltmain.in, m4/libtool.m4:\n\t* m4/lt~obsolete.m4, tests/cdemo/configure.ac: Arghh.  cvsapply just\n\twent crazy and committed a bunch of stuff that shouldn't have been\n\tin the last changeset.  The patch backs it all out.\n\n\t* config/mailnotify: New file for mailing commit notifications,\n\timported from cvs-utils.\n\t* commit: Updated from cvs-utils and tweaked for libtool.\n\t* Makefile.am (EXTRA_DIST): Add config/mailnotify.\n\n2004-02-06  Gary V. Vaughan  <gary@gnu.org>\n\n\t* bootstrap: Remove vcl.tmp, otherwise it can interfere with make.\n\t* Makefile.am (vcl.tmp): Move comment out of multi-line command,\n\tas this rule is called from bootstrap as if it were a Makefile.\n\n\t* m4/ltversion.in: New file to capture what version number macros\n\tare being used.\n\t* Makefile.am (m4/ltversion.m4): New rule to create it from\n\tm4/ltversion.in.\n\t(nodist_pkgmacro_DATA): Add m4/ltversion.m4.\n\t(EXTRA_DIST): Add m4/ltversion.in.\n\t* m4/libtool.m4 (AC_LIBTOOL_SETUP): AC_REQUIRE LTVERSION_VERSION\n\tfrom ltversion.m4.\n\t* bootstrap: Call the Makefile.am to create an initial\n\tm4/ltversion.m4.\n\t* ltmain.in: Diagnose version mismatches of various flavours.\n\t* TODO: Remove mismatch item.\n\t* NEWS: Updated.\n\n\t* Makefile.am ($(top_builddir)/config.status): Removed.\n\t* configure.ac (CONFIG_STATUS_DEPENDENCIES): This substitution is\n\thow automake-1.8 now informs all Makefiles when config.status\n\tneeds to be rebuilt.\n\tReported by Alexandre Duret-Lutz <adl@src.lip6.fr>\n\n\t* configure.ac (AC_CONFIG_FILES): Generate libtoolize from here.\n\t* Makefile.am (libtool, libtoolize): These rules are redundant.\n\tAutomake generates better rules for remaking these files.\n\n\t* m4/libtool.m4 (AC_LIBTOOL_SETUP): Catch unexpanded macros with\n\tbeginning with LT_ and _LT_.\n\t* configure.ac (LT_MAJOR, LT_MINOR, LT_MICRO, LT_ALPHA): Renamed\n\tto lt_major, lt_minor, lt_micro, lt_alpha to save triggering the\n\tunexpanded macros error.\n\n\t* m4/libtool.m4 (AC_PROVIDE_IFELSE): Removed.  We now require\n\tAutoconf 2.58, which ships this macro anyway.\n\n\t* Makefile.am: Comment typo.\n\n\t* m4/libtool.m4 (LT_PREREQ): Declare the minimum release number\n\tthat is required for the calling code.\n\t* doc/libtool.texi (AC_PROG_LIBTOOL): Document it.\n\t* NEWS: Updated.\n\n2004-02-05  Peter O'Gorman  <peter@pogma.com>\n\n\t* ltmain.in (infer_tag, win32_libid): Style changes. Rename\n\tinfer_tag to func_infer_tag and win32_libid to func_win32_libid.\n\t* m4/libtool.m4 (cygwin): rename win32_libid to func_win32_libid.\n\n2004-02-04  Peter O'Gorman  <peter@pogma.com>\n\n\t* ltmain.in (infer_tag): Move tag inferrence to a shell function.\n\tAlso test $base_compile against $CC with escaped arguments. Bug\n\treported by Geoff Keating <geoffk@apple.com>.\n\n2004-02-03  Scott James Remnant  <scott@netsplit.com>\n\n\t* Makefile.am (install-data-hook): Manually make config.guess\n\tand config.sub executable after they are installed as _DATA.\n\tWe can't use _SCRIPTS because the various program name\n\ttransforms may be applied to them.\n\t(dist_pkgdata_DATA): List config.guess and config.sub here\n\t(pkgdata_SCRIPTS): instead of here.\n\n2003-02-03  Scott James Remnant  <scott@netsplit.com>\n\n\t* ltmain.in: Create temporary directory under a strict umask\n\trather than running chmod afterwards, preventing a race\n\tcondition where the directory could be replaced with a symbolic\n\tlink in the time between the two commands.\n\n2004-01-31  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4 (_LT_CONFIG_STATUS_DECLARE): Change `echo to\n\t`$echo, causes problems when builtin echo is broken. Reported\n\tby Ralf Wildenhues <Ralf.Wildenhues@gmx.de>.\n\n2004-01-27  Scott James Remnant  <scott@netsplit.com>\n\n\tThis fixes release procedure problems discovered whilst making\n\tthe 1.5.2 release.\n\n\t* Makefile.am (cvs-dist): Because we check whether ChangeLog\n\thas been committed, this rule can't be run with uncommitted\n\tsource so we can't run 'commit' and don't need to run\n\t'make dist' a second time.  Fix CVS tag as it should be\n\t\"release-X\" not \"Release-X\".\n\t(cvs_commit): New rule for the cvs-release chain that runs\n\t'commit'\n\t(cvs-release): Depend on cvs-commit, depend on deltas instead of\n\tcvs-diff and xdelta.\n\t(cvs-diff): Removed, replaced with delta-diff.\n\t(delta-diff): Unpack and diff the old and new tarballs rather\n\tthan using CVS, so we get a genuinely complete diff.\n\t(xdelta): Removed, replaced with delta-xdelta.\n\t(got-xdelta): New rule for improved reading.\n\t(delta-xdiff): Copied and cleaned up version of old xdelta rule.\n\t(deltas): Depends on delta-diff and delta-xdelta (make deltas).\n\t(cvs-news): Don't depend on timestamps, cvs-dist itself does now.\n\t(prev-tarball): This is the only place we need a LASTRELEASE check\n\tso copy the code here and remove the CHECK_RELEASE variable.\n\t(new-tarball): Check there's a new tarball (did cvs-dist work?)\n\t(FETCHFILES): Remove obsolete libltdl mentions.\n\t* README-alpha: Update CVS instructions as everything's changed\n\ton Savannah.\n\t(Release procedure): Update NEWS and ChangeLog after changing\n\tthe version number (both times); Run 'make fetch' after running\n\t'configure' (difficult to do it beforehand); Require 'commit'\n\tbefore 'make cvs-dist' as that checks ChangeLog is committed;\n\t'make deltas' instead of 'cvs-diff' and 'xdelta', pass LASTRELEASE\n\tto make instead of OLDVERSION (and it's mandatory); Clean up\n\tuploading paragraph; Clearer announcement sending instruction;\n\tRemoved ftp-upload@gnu.org mail as that's not necessary now;\n\tMake web page updating instructions a bit clearer; Add an instruction\n\tto update the manual for non-alphas.\n\t(Alpha release note template): Add a Subject; update CVS instructions.\n\t(Full release note template): Add a Subject; update CVS instructions.\n\t* configure.ac: Add dist-bzip2 to AM_INIT_AUTOMAKE as we talk\n\tabout bz2 files in our release announcements; remove old reference\n\tto OLDVERSION.\n\n2004-01-25  Scott James Remnant  <scott@netsplit.com>\n\n\t* NEWS: Include 1.5.2 release information.\n\n2004-01-22  Gary V. Vaughan  <gary@gnu.org>\n\n\tThis fixes a bug in the libtoolize ltdl source installation rules,\n\twhich were copying Makefile.in from the libtool tree into the\n\tpackage running libtoolize.  Now we explicitly list the files to\n\tcopy to force the package to generate its own Makefile.in:\n\n\t* libltdl/Makefile.am (libltdl_la_SOURCES, libltdlc_la_SOURCES):\n\tAdd ltdl.h.\n\t(ltdldatadir): New variable for installation directory of\n\tlibtoolize --ltdl files.\n\t(ltdldata_DATA): Tell automake what files to copy there at install\n\ttime (and remove at unistall time!).\n\t(local-install-files): Removed.  This hack is not required\n\tanymore, the automake generated install rules are much more\n\tadvanced than this.\n\t* Makefile.am (install-data-hook, uninstall-local): Removed.\n\tLibltdl files for libtoolize are installed by their own Makefile\n\tnow.\n\n2004-01-22  Jeff Squyres  <jsquyres@lam-mpi.org>\n\n\t* m4/libtool.m4 (AC_LIBTOOL_PROG_CC_C_O): Some compilers\n\t(e.g. Intel Linux icc compiler) write temporary files to the current\n\tdirectory. These compilers do support -c and -o simultaneously but\n\twrongly fail the test due to the failure to create temporary\n\tfiles. It is incorrect to penalize compilers which write temporary\n\tfiles to the current directory so the 'chmod -w .' is therefore\n\tremoved.\n\n2004-01-22  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4 (LT_AC_PROG_EGREP): Wrapper for AC_PROG_GREP.\n\tAIX has a brain-dead grep that only handles lines < 2048\n\tcharacters.  Default GREP incase we are not using a future\n\tautoconf that sets it for us :-)  Changed all callers to use $GREP\n\tinstead of grep, and to AC_REQUIRE LT_AC_PROG_EGREP.\n\tDeclare GREP as a libtool config var.\n\t* ltmain.in: Use it.\n\t* tests/sh.test (scripts): Accept `if $GREP \"^foo=bar\"' by\n\ttightening the regexp.\n\tReported by Albert Chin-A-Young  <china@thewrittenword.com>\n\n2004-01-21  Nick Hudson  <skrll@netbsd.org>\n\n\t* m4/libtool.m4 (AC_LIBTOOL_SYS_DYNAMIC_LINKER) [netbsd*]: Remove\n\tgratuitous ${libname}${release}${shared_ext} from\n\tlibrary_names_spec.\n\n2004-01-21  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4 (AC_PROG_LD_RELOAD_FLAG): On darwin change the\n\treload_cmds to use $CC, otherwise ld will thin out any fat\n\tobjects.\n\n2004-01-18  Benjamin Reed  <ranger@befunk.com>\n\n\t* ltmain.in: Fix handling of frameworks in search paths.  Also\n\ta one-liner fix to eval shrext in the libtool library search.\n\n2004-01-16  Gary V. Vaughan  <gary@gnu.org>\n\n\t* configure.ac (AM_INIT_AUTOMAKE): Require 1.8 for bootstrap, or\n\telse aclocal.m4 is huge, and m4 directory is not distributed.\n\n\t* configure.ac (AC_CONFIG_HEADERS): Create config.h in\n\t$top_srcdir.\n\t* m4/ltdl.m4 (AC_LIB_LTDL): Run AC_CONFIG_HEADERS for the user if\n\tnecessary. Calculate filename from first argument to\n\tAC_CONFIG_HEADERS, and substitute as CONFIG_H.\n\t* libltdl/Makefile.am (AM_CPPFLAGS): Make sure we are searching in\n\t$top_srcdir for headers.\n\t(DEFS): Override the default HAVE_CONFIG_H with the config.h\n\tfilename.\n\t(ltdl.lo): Reference config.h via $(CONFIG_H).\n\t* libltdl/ltdl.c (HAVE_CONFIG_H): Ditto.\n\n2004-01-15  Scott James Remnant  <scott@netsplit.com>\n\n\t* m4/lt~obsolete.m4: Add a file containing aclocal-fooling\n\tmacro definitions which stop the contents of an installed\n\tlibtool.m4 ending up in our aclocal.m4 when we bootstrap.\n\t* Makefile.am (pkgmacro_DATA): Note that we don't need to add\n\tlt~obsolete.m4 to this list.\n\n2004-01-12  Gary V. Vaughan  <gary@gnu.org>\n\n\t* m4/libtool.m4 (_LT_COPYING): Factor out copyright message so it\n\tonly needs to be updated in one place.\n\t(AC_LIBTOOL_CONFIG): Refactor to be more readable.  Only add\n\ttags if a compiler was found; ie if you have no gcj compiler,\n\tdon't tack the GCJ tag onto the generated libtool script.\n\n2004-01-13  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4: Quote shrext as it is evaled in ltmain.\n\n2004-01-11  Scott James Remnant  <scott@netsplit.com>\n\n\t* ltmain.in: new -precious-files-regex link mode option\n\tto prevent removal of matching files from the temporary\n\toutput directory.\n\t(Debian Bug #221420)\n\t* doc/libtool.texi: document the new option.\n\t* NEWS: announce the new option.\n\n2004-01-11  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.in (func_copy_all_files): s/xfunc_copy/Xfunc_copy.\n\tNow the test can actually succeed sometimes.\n\n2004-01-09  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.in: Break out of the command argument parse loop when\n\t-- is encountered.\n\n2004-01-08  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.in (func_copy_all_files): s/test \"x/test \"X/ to keep\n\ttests/sh.test happy.\n\n2004-01-07  Gary V. Vaughan  <gary@gnu.org>\n\n\t* Makefile.am (aclocal_macros, aclocal_DATA): Removed.\n\t(EXTRA_DIST): Remove m4 macro files; they are automatically\n\tadded by automake.\n\t(pkgmacrodir): Where to install libtool macro files.\n\t(pkgmacro_DATA): List installable libtool macro files.\n\t(install-data-local): Remove previous versions of ltdl.m4 and\n\tlibtool.m4 from their old location.\n\t* libtoolize.in: Use new pkgmacrodir installed macros when\n\tlibtoolizing a project.  Treat libtool.m4 and ltdl.m4 specially,\n\tand func_serial_update() any other files from pkgmacrodir.\n\t(pkgmacrodir): Where to find installed libtool macro files.\n\t(aclocaldir): Removed.\n\t(func_copy_all_files): Add an optional callback parameter to\n\tcontrol how files are copied.  If the callback is passed, don't\n\ttell it whether it can copy or not.\n\t(func_serial): Exchange parameters and make macro_regex optional,\n\tso that this function can be used to extract serial numbers from\n\tfiles with the traditional /^# serial [1-9][0-9]*$/ syntax.\n\tChanged all callers.\n\t(func_serial_update): Make macro_regex optional last parameter, so\n\tthat this function can be used as a callback for\n\tfunc_copy_all_files().  Changed all callers.\n\t* m4/ltsugar.m4: Add a serial number.\n\n2004-01-07  Gary V. Vaughan  <gary@gnu.org>\n\n\tA complete rewrite of the m4 code involved in the generation of\n\tlibtool via config.status.  The old way involved manually\n\tsynchronising disparate bits of shell code in several macros, to\n\tquote a copy of a shell variable, put that in config.status, maybe\n\tadd it to some quotation loops to prevent early expansion, and\n\tthen add a block to _LT_CONFIG_COMMANDS to bring it into the\n\tlibtool script.  The new way is to mark shell variables for\n\tpropogation using _LT_DECL for language independent variables, or\n\t_LT_TAGDECL for those that need to be propogated in several\n\tlanguage flavours.  The marking can be done in the macro that\n\tprobes the variables, and this new m4 machinery takes care of\n\tsynchronising all the other bits of code at autoconf time:\n\n\t* m4/ltsugar.m4:  New file.  Macros that are useful outside the\n\tcontext of libtool.  Initially, contains some generalised list\n\tmanagement macros, and the scaffolding for dictionary type data\n\tstorage and retrieval.\n\t* Makefile.am (aclocal_macros): Install ltsugar.m4.\n\t* m4/libtool.m4 (_LT_DECL): Mark a shell variable for export to\n\tthe libtool script, along with a comment, and hints for quoting\n\tand renaming.\n\t(_LT_TAGDECL): Similarly mark a tagged shell variable for export\n\tin each tag.\n\t(lt_decl_tag_varnames, lt_decl_quote_varnames)\n\t(lt_decl_dquote_varnames, lt_decl_varnames_tagged)\n\t(lt_decl_all_varnames):  New utility macros for managing lists of\n\tshell variable names from _LT_DECL and _LT_TAGDECL.\n\t(_LT_CONFIG_STATUS_DECLARATIONS, _LT_CONFIG_STATUS_DECLARE):\n\tExpand to correctly quoted variable declarations in config.status\n\tfrom all marked shell variables.\n\t(_LT_LIBTOOL_DECLARE): Expand to commented and quoted variable\n\tdeclaration for libtool tag section.\n\t(_LT_LIBTOOL_CONFIG_VARS, _LT_LIBTOOL_TAG_VARS): Pass all marked\n\tvariables to _LT_LIBTOOL_DECLARE.\n\t(_LT_CONFIG_COMMANDS): Use _LT_CONFIG_STATUS_DECLARATIONS and\n\tfriends to generate all the variable passing shell code for\n\tconfig.status, to get marked variables from libtool.m4 into\n\tlibtool itself eventually.\n\t(AC_LIBTOOL_CONFIG): Generate marked variable code for libtool tag\n\tconfiguration.  Changed all client macros to mark variables\n\tsuitably rather than the hand pasting that was necessary\n\tpreviously.\n\t(AC_PROG_SED): Renamed from LT_AC_PROG_SED.\n\t(LT_AC_PROG_SED): Wrap AC_PROG_SED, and mark shell variables for\n\tpropogation to the libtool script.\n\n2004-01-07  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.in (seen_gettext): Removed unused variable.\n\n2004-01-06  Gary V. Vaughan  <gary@gnu.org>\n\n\t* libtoolize.in (func_scan_files): Don't assume the existence of\n\taclocal.m4.  Make the comment more descriptive.\n\tReported by Alexandre Duret-Lutz <adl@src.lip6.fr>\n\n\t* NEWS: Note libtoolize changes.\n\n\t* ChangeLog.2003: New file, containing all the ChangeLog entries\n\tfrom 2003.  Trimmed ChangeLog accordingly.\n\n\t* ltmain.in: Output 2004 in the copyright from libtool --version.\n\n2004-01-03  Stefan Nordhausen  <nordhaus@informatik.hu-berlin.de>\n\tScott James Remnant  <scott@netsplit.com>\n\n\t* ltmain.in: Don't use the mkdir -p option when creating a\n\ttemporary output directory so a symlink attack can't be used to\n\tarbitrarily chmod other directories on the system if libtool\n\tgets run as root.\n\n2004-01-02  Peter O'Gorman  <peter@pogma.com>\n\n\t* m4/libtool.m4: Ensure that ${ZSH_VERSION+set} is properly escaped.\n\n\t* m4/libtool.m4 (CDPATH): Change the CDPATH setting so that it\n\tallows for zsh differences, as noted in the autoconf manual's\n\tPortable Shell - Special Shell Variables section.\n\n2004-01-02  Scott James Remnant  <scott@netsplit.com>\n\n\t* .cvsignore: Ignore stamp-vcl created by the Makefile.\n\n2004-01-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\tJoe Orton  <joe@manyfish.co.uk>\n\n\t* m4/libtool.m4 (AC_LIBTOOL_CONFIG): Add extra blackslash\n\tin front of all the inner double-quotes as this is removed\n\ton Solaris, IRIX and AIX leading to broken definitions\n\tin config.status.\n\n2004-01-02  Scott James Remnant  <scott@netsplit.com>\n\n\t* NEWS: Next release will be in 2004.\n\nContinued in ChangeLog.2003\n-- \n  Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n  2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n\n  This file is part of GNU Libtool.\n\nCopying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout warranty of any kind.\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/resident.at": "# resident.at -- test resident modules              -*- Autotest -*-\n\n#   Copyright (C) 2010 Free Software Foundation, Inc.\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\n# Ensure resident modules are not unloaded at program exit:\n# they need to be able to invoke atexit handlers.\n\nAT_SETUP([resident modules])\nAT_KEYWORDS([libltdl])\n\nAT_DATA([main.c],\n[[#include <ltdl.h>\n#include <stdio.h>\n\nint\nmain (int argc, char* argv[])\n{\n  int err = 0;\n  lt_dlhandle plugin_handle;\n  lt_dladvise advise;\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n\n  if (argc < 2)\n    {\n      fprintf (stderr, \"usage: %s plugin\\n\", argv[0]);\n      return 1;\n    }\n\n  lt_dlinit ();\n  if (lt_dladvise_init (&advise) != 0\n      || lt_dladvise_ext (&advise) != 0\n      || lt_dladvise_resident (&advise) != 0)\n    {\n      printf (\"advise failure: %s\\n\", lt_dlerror ());\n      err = 1;\n    }\n  else\n    {\n      plugin_handle = lt_dlopenadvise (argv[1], advise);\n      if (NULL != plugin_handle)\n\t{\n\t  int (*pf) (void);\n\t  printf (\"plugin opened successfully!\\n\");\n\t  pf = (int (*) (void)) lt_dlsym (plugin_handle, \"setup_plugin\");\n\t  if (pf)\n\t    pf ();\n\t  else\n\t    {\n\t      printf (\"dlsym failure: %s\\n\", lt_dlerror ());\n\t      err = 1;\n\t    }\n\t  if (!lt_dlisresident (plugin_handle))\n\t    {\n\t      printf (\"module wrongly not marked resident\\n\");\n\t      err = 1;\n\t    }\n\t  if (lt_dlclose (plugin_handle) != 0)\n\t    {\n\t      printf (\"close failure (expected): %s\\n\", lt_dlerror ());\n\t    }\n\t  else\n\t    {\n\t      printf (\"wrongly closed resident module\\n\");\n\t      err = 1;\n\t    }\n\t}\n      else\n\t{\n\t  printf (\"plugin failed to open: %s\\n\", lt_dlerror ());\n\t  err = 1;\n\t}\n      if (lt_dladvise_destroy (&advise) != 0)\n\t{\n\t  printf (\"advise destroy failure: %s\\n\", lt_dlerror ());\n\t  err = 1;\n\t}\n    }\n  lt_dlexit ();\n  return err;\n}\n]])\n\nAT_DATA([plugin.c],\n[[#include <stdlib.h>\n#include <stdio.h>\n\nvoid\nbye (void)\n{\n  puts (\"called from atexit handler\");\n}\n\n#ifdef __cplusplus\nextern \"C\"\n#endif\nint\nsetup_plugin (void)\n{\n  atexit (bye);\n}\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f $LIBLTDL || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS -no-undefined\"\ninst=`pwd`/inst\nlibdir=$inst/lib\n\nAT_CHECK([$CC $CPPFLAGS $CFLAGS -c main.c], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c plugin.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o plugin.la -rpath $libdir ]dnl\n\t [-module -avoid-version plugin.lo], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o main$EXEEXT main.$OBJEXT ]dnl\n\t [-dlopen plugin.la $LIBLTDL],\n\t [], [ignore], [ignore])\nLT_AT_EXEC_CHECK([./main], [], [stdout], [ignore], [./plugin.la])\nAT_CHECK([grep 'called from atexit handler' stdout], [], [ignore])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/configure-iface.at": "# configure-iface.at -- test ltdl configure interface         -*- Autotest -*-\n#\n#   Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n#   Written by Gary V. Vaughan, 2007\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_BANNER([configure interface to libltdl.])\n\n# _LT_AT_LTDL_SETUP\n# -----------------\nm4_pushdef([_LT_AT_LTDL_SETUP],\n[AT_DATA([main.c],\n[[#include <ltdl.h>\n#include <stdio.h>\n\ntypedef int funcp (void);\n\nstatic int errors = 0;\n\nint\nmain (void)\n{\n  lt_dlhandle handle;\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n\n  if (lt_dlinit () != 0)\n    {\n      fprintf (stderr, \"error during initialization: %s\\n\", lt_dlerror ());\n      return 1;\n    }\n\n  handle = lt_dlopenext (\"libmodule\");\n  if (!handle)\n    {\n      fprintf (stderr, \"can't open libmodule: %s\\n\", lt_dlerror ());\n      ++errors;\n    }\n\n  {\n    funcp *f = (funcp *) lt_dlsym (handle, \"f\");\n\n    if (f)\n      {\n        printf (\"%d\\n\", f ());\n      }\n    else\n      {\n        fprintf (stderr, \"function `f' not found: %s\\n\", lt_dlerror ());\n        ++errors;\n      }\n  }\n\n  if (lt_dlexit () != 0)\n    {\n      fprintf (stderr, \"error during exit: %s\\n\", lt_dlerror ());\n      ++errors;\n    }\n\n  return (errors != 0);\n}\n]])\n\nAT_DATA([libmodule.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\nint f (void) { return 5150; }\n#ifdef __cplusplus\n}\n#endif\n]])\n\nLT_AT_HOST_DATA([expout],\n[[5150\n]])\n])# _LT_AT_LTDL_SETUP\n\n\n## -------------------- ##\n## Installable libltdl. ##\n## -------------------- ##\n\nAT_SETUP([installable libltdl])\nAT_KEYWORDS([libltdl])\n\n_LT_AT_LTDL_SETUP\n\nAT_DATA([configure.ac],\n[[AC_INIT([installable-ltdl-demo], ]AT_PACKAGE_VERSION[, ]AT_PACKAGE_BUGREPORT[)\nAC_CONFIG_AUX_DIR([libltdl/config])\nAC_CONFIG_MACRO_DIR([libltdl/m4])\nAC_CONFIG_HEADERS([config.h:config.hin])\nLT_CONFIG_LTDL_DIR([libltdl])\nAM_INIT_AUTOMAKE([foreign])\nAC_PROG_CC\nAM_PROG_CC_C_O\nLT_INIT([dlopen])\nLTDL_INIT([installable])\nAC_CONFIG_FILES([Makefile])\nAC_OUTPUT\n]])\n\nAT_DATA([Makefile.am],\n[[AUTOMAKE_OPTIONS\t= 1.7\n\nSUBDIRS\t\t\t= libltdl\n\nAM_CPPFLAGS\t\t= $(LTDLINCL)\n\nlib_LTLIBRARIES\t\t= libmodule.la\n# Automake < 1.8 will use libmodule.la.c as default source,\n# while newer will choose libmodule.c; so specify it here.\nlibmodule_la_SOURCES\t= libmodule.c\nlibmodule_la_LDFLAGS\t= -module\n\nbin_PROGRAMS\t\t= main\nmain_LDFLAGS\t\t= -dlopen libmodule.la\nmain_LDADD\t\t= $(LIBLTDL)\nmain_DEPENDENCIES\t= $(LTDLDEPS) libmodule.la\n]])\n\n# Install everything!\nprefix=`pwd`/_inst\n\nLT_AT_BOOTSTRAP([--ltdl], [-I libltdl/m4], [], [--add-missing], [],\n        [--with-included-ltdl --prefix=$prefix], [all install])\n\n# TODO: Check that the installed program `main' is linked against our libltdl\nAT_CHECK([test -f $prefix/lib/libltdl.la])\nAT_CHECK([test -f $prefix/include/ltdl.h])\n\n# Check that main is rebuilt if libltdl.la is newer\nrm -f libltdl/libltdl.la\nAT_CHECK([$MAKE -q main$EXEEXT || exit 1], [1], [ignore], [ignore])\n\nAT_CLEANUP\n\n\n## ------------------------------- ##\n## Link against installed libltdl. ##\n## ------------------------------- ##\n\nAT_SETUP([--with-ltdl-include/lib])\nAT_KEYWORDS([libltdl])\n\n# Install libltdl\nprefix=`pwd`/_inst\n\nLT_AT_LIBTOOLIZE([--copy --ltdl=ltdl])\n\n(cd ltdl\nLT_AT_CONFIGURE([--enable-ltdl-install --prefix=$prefix])\nLT_AT_MAKE([all install])\n)\n\n# Remove build files\nrm -rf ltdl/\n\nAT_CHECK([test -f $prefix/lib/libltdl.la])\nAT_CHECK([test -f $prefix/include/ltdl.h])\n\n_LT_AT_LTDL_SETUP\n\nAT_DATA([configure.ac],\n[[AC_INIT([configure-iface-demo], ]AT_PACKAGE_VERSION[, ]AT_PACKAGE_BUGREPORT[)\nAC_CONFIG_MACRO_DIR([_inst/aclocal])\nAC_CONFIG_HEADERS([config.h:config.hin])\nAM_INIT_AUTOMAKE([foreign])\nAC_PROG_CC\nAM_PROG_CC_C_O\nLT_INIT([dlopen])\nLTDL_INIT\nAC_CONFIG_FILES([Makefile])\nAC_OUTPUT\n]])\n\nAT_DATA([Makefile.am],\n[[AUTOMAKE_OPTIONS\t= 1.7\n\nAM_CPPFLAGS\t\t= $(LTDLINCL)\n\nlib_LTLIBRARIES\t\t= libmodule.la\n# Automake < 1.8 will use libmodule.la.c as default source,\n# while newer will choose libmodule.c; so specify it here.\nlibmodule_la_SOURCES\t= libmodule.c\nlibmodule_la_LDFLAGS\t= -module\n\nbin_PROGRAMS\t\t= main\nmain_LDFLAGS\t\t= -dlopen libmodule.la\nmain_LDADD\t\t= $(LIBLTDL)\nmain_DEPENDENCIES\t= $(LTDLDEPS) libmodule.la\n]])\n\n## Try to avoid linking against a previously installed libltdl found\n## with an explicit -L/path.\nsave_LDFLAGS=$LDFLAGS\nLDFLAGS=\nfor l in $save_LDFLAGS\ndo\n  case $l in\n  -L*) ;;\n  *) LDFLAGS=\"$LDFLAGS $l\" ;;\n  esac\ndone\n\n# We don't use 'libtoolize --ltdl', so that we get an error if the test\n# tries to build and link against its own ltdl sources:\nLT_AT_BOOTSTRAP([], [-I _inst/aclocal], [], [--add-missing], [],\n\t[--with-ltdl-lib=$prefix/lib --with-ltdl-include=$prefix/include],\n\t[all])\n\n## TODO: portable ldd check for correct libltdl\n## Currently, this test doesn't fail if `main' ends up linking against a\n## previously installed system libltdl.\nLT_AT_NOINST_EXEC_CHECK([./main], [-dlopen libmodule.la], [], [expout], [])\n\nAT_CLEANUP\n\n\n## ------------------------------------- ##\n## Link against shipped libltdl sources. ##\n## ------------------------------------- ##\n\nAT_SETUP([--with-included-ltdl])\nAT_KEYWORDS([libltdl])\n\n_LT_AT_LTDL_SETUP\n\nAT_DATA([configure.ac],\n[[AC_INIT([configure-iface-demo], ]AT_PACKAGE_VERSION[, ]AT_PACKAGE_BUGREPORT[)\nAC_CONFIG_AUX_DIR([libltdl/config])\nAC_CONFIG_MACRO_DIR([libltdl/m4])\nAC_CONFIG_HEADERS([config.h:config.hin])\nLT_CONFIG_LTDL_DIR([libltdl])\nAM_INIT_AUTOMAKE([foreign])\nAC_PROG_CC\nAM_PROG_CC_C_O\nLT_INIT([dlopen])\nLTDL_INIT\nAC_CONFIG_FILES([Makefile])\nAC_OUTPUT\n]])\n\nAT_DATA([Makefile.am],\n[[AUTOMAKE_OPTIONS\t= 1.7\n\nSUBDIRS\t\t\t= libltdl\n\nAM_CPPFLAGS\t\t= $(LTDLINCL)\n\nlib_LTLIBRARIES\t\t= libmodule.la\n# Automake < 1.8 will use libmodule.la.c as default source,\n# while newer will choose libmodule.c; so specify it here.\nlibmodule_la_SOURCES\t= libmodule.c\nlibmodule_la_LDFLAGS\t= -module\n\nbin_PROGRAMS\t\t= main\nmain_LDFLAGS\t\t= -dlopen libmodule.la\nmain_LDADD\t\t= $(LIBLTDL)\nmain_DEPENDENCIES\t= $(LTDLDEPS) libmodule.la\n]])\n\nLT_AT_BOOTSTRAP([--ltdl], [-I libltdl/m4], [], [--add-missing], [],\n        [--with-included-ltdl], [all])\n\n# --with-included-ltdl should build a convenience lib by default\nAT_CHECK([test -f libltdl/libltdlc.la])\n\n## TODO: portable ldd check for correct libltdl\n## Currently, this test doesn't fail if `main' ends up linking against a\n## previously installed system libltdl.\nLT_AT_NOINST_EXEC_CHECK([./main], [-dlopen libmodule.la], [], [expout], [])\n\n# Check that main is rebuilt if libltdlc.la is newer\nrm -f libltdl/libltdlc.la\nAT_CHECK([$MAKE -q main$EXEEXT || exit 1], [1], [ignore], [ignore])\n\nAT_CLEANUP\n\n\n## -------------------- ##\n## Convenience libltdl. ##\n## -------------------- ##\n\nAT_SETUP([convenience libltdl])\n\nAT_DATA([configure.ac],\n[[AC_INIT\nAC_CONFIG_AUX_DIR([libltdl/config])\nAC_LIBLTDL_CONVENIENCE\nAC_LIBTOOL_DLOPEN\nAC_PROG_LIBTOOL\nAC_CONFIG_FILES(Makefile)\nAC_OUTPUT\n]])\nAT_DATA([Makefile.in],\n[[LIBLTDL = @LIBLTDL@\nprint-ltdl:\n\techo $(LIBLTDL)\n]])\n\nLT_AT_BOOTSTRAP([--ltdl], [-I libltdl/m4], [ignore], [ignore], [], [], [ignore])\nAT_CHECK([$MAKE print-ltdl], [], [stdout], [ignore])\nAT_CHECK([grep libltdl/libltdlc.la stdout], [], [ignore])\n\nAT_CLEANUP\n\ndnl Be careful not to let the definition leak into other tests\nm4_popdef([_LT_AT_LTDL_SETUP])\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/dlloader-api.at": "# dlloader.at -- test dlloader functionality                -*- Autotest -*-\n#\n#   Copyright (C) 2010 Free Software Foundation, Inc.\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_SETUP([dlloader API])\nAT_KEYWORDS([libltdl])\n\nAT_DATA([main.c],\n[[#include <ltdl.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nstatic int\nfirst_init (lt_user_data data)\n{\n  const char *ctx = (const char *) data;\n\n  printf (\"first_init: %s\\n\", ctx);\n\n  return 0;\n}\n\nstatic lt_module\nfirst_open (lt_user_data data, const char *filename, lt_dladvise advise)\n{\n  static const char *first_module = \"first\";\n  const char *ctx = (const char *) data;\n\n  /* Use a magic string to avoid possible interactions with filesystem\n   * objects.  Prepend '/' to short-circuit libltdl's search of\n   * $shlibpath_var (e.g. PATH, LD_LIBRARY_PATH, or similar).\n   */\n  if (!filename || strcmp (filename, \"/libltdl_dlloader_api_test_first\"))\n    {\n      printf (\"first_open denies a request\\n\");\n      lt_dlseterror (LT_ERROR_FILE_NOT_FOUND);\n      return NULL;\n    }\n\n  printf (\"first_open (\\\"%s\\\"): %s\\n\", filename, ctx);\n\n  return (lt_module) first_module;\n}\n\nstatic const char *\nfirst_symbol (void)\n{\n  return \"first_symbol\";\n}\n\nstatic void *\nfirst_sym (lt_user_data data, lt_module module, const char *symbolname)\n{\n  const char *ctx = (const char *) data;\n  const char *filename = (const char *) module;\n\n  printf (\"first_sym (%s): %s\\n\", filename, ctx);\n\n  return (void *) first_symbol;\n}\n\nstatic int\nfirst_close (lt_user_data data, lt_module module)\n{\n  const char *ctx = (const char *) data;\n  const char *filename = (const char *) module;\n\n  printf (\"first_close (%s): %s\\n\", filename, ctx);\n\n  return 0;\n}\n\nstatic int\nfirst_exit (lt_user_data data)\n{\n  const char *ctx = (const char *) data;\n\n  printf (\"first_exit: %s\\n\", ctx);\n\n  return 0;\n}\n\nstatic int\nlast_init (lt_user_data data)\n{\n  const char *ctx = (const char *) data;\n\n  printf (\"last_init: %s\\n\", ctx);\n\n  return 0;\n}\n\nstatic lt_module\nlast_open (lt_user_data data, const char *filename, lt_dladvise advise)\n{\n  static const char *last_module = \"last\";\n  const char *ctx = (const char *) data;\n\n  /* Use a magic string to avoid possible interactions with filesystem\n   * objects.  Prepend '/' to short-circuit libltdl's search of\n   * $shlibpath_var (e.g. PATH, LD_LIBRARY_PATH, or similar).\n   */\n  if (!filename || strcmp (filename, \"/libltdl_dlloader_api_test_last\"))\n    {\n      printf (\"last_open denies a request\\n\");\n      lt_dlseterror (LT_ERROR_FILE_NOT_FOUND);\n      return NULL;\n    }\n\n  printf (\"last_open (\\\"%s\\\"): %s\\n\", filename, ctx);\n\n  return (lt_module) last_module;\n}\n\nstatic const char *\nlast_symbol (void)\n{\n  return \"last_symbol\";\n}\n\nstatic void *\nlast_sym (lt_user_data data, lt_module module, const char *symbolname)\n{\n  const char *ctx = (const char *) data;\n  const char *filename = (const char *) module;\n\n  printf (\"last_sym (%s): %s\\n\", filename, ctx);\n\n  return (void *) last_symbol;\n}\n\nstatic int\nlast_close (lt_user_data data, lt_module module)\n{\n  const char *ctx = (const char *) data;\n  const char *filename = (const char *) module;\n\n  printf (\"last_close (%s): %s\\n\", filename, ctx);\n\n  return 0;\n}\n\nstatic int\nlast_exit (lt_user_data data)\n{\n  const char *ctx = (const char *) data;\n\n  printf (\"last_exit: %s\\n\", ctx);\n\n  return 0;\n}\n\ntypedef const char *module_func (void);\n\nint\nmain (int argc, char* argv[])\n{\n  int err = 0;\n  lt_dlvtable *first;\n  lt_dlvtable *last;\n  lt_dlhandle module = NULL;\n  module_func *symbol;\n  const char *first_ctx = \"first_ctx\";\n  const char *last_ctx = \"last_ctx\";\n  const lt_dlvtable *finder;\n\n  LTDL_SET_PRELOADED_SYMBOLS ();\n\n  if (lt_dlinit ())\n    {\n      printf (\"lt_dlinit failed\\n\");\n      return 1;\n    }\n\n  first = (lt_dlvtable *) malloc (sizeof (*first));\n  if (!first)\n    {\n      printf (\"malloc failed\\n\");\n      err = 1;\n      goto cleanup;\n    }\n\n  first->name = \"first\";\n  first->sym_prefix = NULL;\n  first->module_open = first_open;\n  first->module_close = first_close;\n  first->find_sym = first_sym;\n  first->dlloader_init = first_init; /* test that it isn't called twice */\n  first->dlloader_exit = first_exit;\n  first->dlloader_data = (lt_user_data) first_ctx;\n  first->priority = LT_DLLOADER_PREPEND;\n\n  if (first_init (first->dlloader_data))\n    {\n      printf (\"first_init failed\\n\");\n      err = 1;\n      goto cleanup;\n    }\n\n  if (lt_dlloader_add (first))\n    {\n      printf (\"lt_dlloader_add failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  finder = lt_dlloader_find (\"first\");\n\n  if (!finder)\n    {\n      printf (\"lt_dlloader_find failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  printf (\"Found loader \\\"%s\\\"\\n\", finder->name);\n\n  last = (lt_dlvtable *) malloc (sizeof (*last));\n  if (!last)\n    {\n      printf (\"malloc failed\\n\");\n      err = 1;\n      goto cleanup;\n    }\n\n  last->name = \"last\";\n  last->sym_prefix = NULL;\n  last->module_open = last_open;\n  last->module_close = last_close;\n  last->find_sym = last_sym;\n  last->dlloader_init = last_init; /* test that it isn't called twice */\n  last->dlloader_exit = last_exit;\n  last->dlloader_data = (lt_user_data) last_ctx;\n  last->priority = LT_DLLOADER_APPEND;\n\n  if (last_init (last->dlloader_data))\n    {\n      printf (\"last_init failed\\n\");\n      err = 1;\n      goto cleanup;\n    }\n\n  if (lt_dlloader_add (last))\n    {\n      printf (\"lt_dlloader_add failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  finder = lt_dlloader_find (\"last\");\n\n  if (!finder)\n    {\n      printf (\"lt_dlloader_find failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  printf (\"Found loader \\\"%s\\\"\\n\", finder->name);\n\n  /* Use a magic string to avoid possible interactions with filesystem\n   * objects.  Prepend '/' to short-circuit libltdl's search of\n   * $shlibpath_var (e.g. PATH, LD_LIBRARY_PATH, or similar).\n   */\n  module = lt_dlopen (\"/libltdl_dlloader_api_test_first\");\n\n  if (!module)\n    {\n      printf (\"lt_dlopen failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  symbol = (module_func *) lt_dlsym (module, \"symbol\");\n\n  if (!symbol)\n    {\n      printf (\"lt_dlsym failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  printf (\"result: %s\\n\", symbol ());\n\n  lt_dlclose (module);\n  module = lt_dlopen (\"./module.la\");\n\n  if (!module)\n    {\n      printf (\"lt_dlopen failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  symbol = (module_func *) lt_dlsym (module, \"symbol\");\n\n  if (!symbol)\n    {\n      printf (\"lt_dlsym failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  printf (\"result: %s\\n\", symbol ());\n\n  lt_dlclose (module);\n\n  /* Use a magic string to avoid possible interactions with filesystem\n   * objects.  Prepend '/' to short-circuit libltdl's search of\n   * $shlibpath_var (e.g. PATH, LD_LIBRARY_PATH, or similar).\n   */\n  module = lt_dlopen (\"/libltdl_dlloader_api_test_last\");\n\n  if (!module)\n    {\n      printf (\"lt_dlopen failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  symbol = (module_func *) lt_dlsym (module, \"symbol\");\n\n  if (!symbol)\n    {\n      printf (\"lt_dlsym failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  printf (\"result: %s\\n\", symbol ());\n\n  if (lt_dlopen (\"no-module\"))\n    {\n      printf (\"lt_dlopen unexpectedly opened \\\"no-module\\\"\\n\");\n      err = 1;\n      goto cleanup;\n    }\n\n  if (lt_dlloader_remove (\"first\") != first)\n    {\n      printf (\"vtable of first loader has changed\\n\");\n      err = 1;\n      goto cleanup;\n    }\n\n  free (first);\n\ncleanup:\n  if (module)\n    {\n      lt_dlclose (module);\n    }\n  lt_dlexit ();\n  return err;\n}\n]])\n\nAT_DATA([module.c],\n[[\n#ifdef __cplusplus\nextern \"C\"\n#endif\nconst char *symbol (void);\nconst char *\nsymbol (void)\n{\n  return \"module_symbol\";\n}\n]])\n\nLT_AT_HOST_DATA(expout,\n[[first_init: first_ctx\nFound loader \"first\"\nlast_init: last_ctx\nFound loader \"last\"\nfirst_open (\"/libltdl_dlloader_api_test_first\"): first_ctx\nfirst_sym (first): first_ctx\nresult: first_symbol\nfirst_close (first): first_ctx\nfirst_open denies a request\nresult: module_symbol\nfirst_open denies a request\nlast_open (\"/libltdl_dlloader_api_test_last\"): last_ctx\nlast_sym (last): last_ctx\nresult: last_symbol\nfirst_open denies a request\nlast_open denies a request\nfirst_exit: first_ctx\nlast_close (last): last_ctx\nlast_exit: last_ctx\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f $LIBLTDL || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\n\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c module.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o module.la ]dnl\n\t [-rpath /nowhere -module -avoid-version -no-undefined ]dnl\n\t [module.lo],\n\t [], [ignore], [ignore])\n\ndnl Not possible to override the preopen loader, so skip if not shared.\n. ./module.la\nAT_CHECK([test -n \"$dlname\" || (exit 77)])\n\nAT_CHECK([$CC $CPPFLAGS $CFLAGS -c main.c], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o main$EXEEXT ]dnl\n\t [main.$OBJEXT -dlopen module.la $LIBLTDL],\n\t [], [ignore], [ignore])\n\nLT_AT_EXEC_CHECK([./main], [], [expout], [ignore], [])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/darwin.at": "# darwin.at - tests specific to Mac OS X\n#\n#   Copyright (C) 2008, 2009, 2011 Free Software Foundation, Inc.\n#   Written by Peter O'Gorman, 2008\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_BANNER([Mac OS X tests])\nAT_SETUP([darwin fat compile])\nnoskip=:\ncase \"$host_os\" in\ndarwin*) ;;\n*) noskip=false ;;\nesac\n\nAT_DATA([simple.c] ,[[\nint main() { return 0;}\n]])\n\n$noskip && {\n$CC $CPPFLAGS $CFLAGS -arch ppc -arch i386 -o simple simple.c 2>&1 > /dev/null || noskip=false\nrm -f simple \n}\n\nAT_CHECK([$noskip || (exit 77)])\n\nAT_DATA([foo.c],[[\nint x=0;\n]])\n\nAT_DATA([baz.c],[[\nint y=0;\n]])\n\nAT_DATA([bar.c],[[\nextern int x;\nint bar(void);\nint bar() { return x;}\n]])\n\nAT_DATA([main.c],[[\nextern int x;\nextern int y;\n\nint main() {\nreturn x+y;\n}\n]])\n\nmkdir bin\nAT_DATA([bin/basename],[[\n#! /bin/sh\n\nusage=\"usage: $0 argument\"\nif test $# != 1; then\n                  echo $usage >&2\n                  exit 1\nfi\n\necho $1 | sed \"s,^.*/,,\"\n]])\n\nchmod +x bin/basename\nsave_PATH=$PATH\nPATH=`pwd`/bin:$PATH\nexport PATH\n\nAT_CHECK([$LIBTOOL --mode=compile --tag=CC $CC -c -o foo.lo $CPPFLAGS $CFLAGS -arch ppc -arch i386 foo.c],[0],[ignore],[ignore])\n\nAT_CHECK([$LIBTOOL --mode=compile --tag=CC $CC -c -o baz.lo $CPPFLAGS $CFLAGS -arch ppc -arch i386 baz.c],[0],[ignore],[ignore])\n\nAT_CHECK([$LIBTOOL --mode=link --tag=CC $CC -o libfoo.la $CPPFLAGS $CFLAGS $LDFLAGS -arch ppc -arch i386 foo.lo baz.lo],[0],[ignore],[ignore])\n\nAT_CHECK([$LIBTOOL --mode=compile --tag=CC $CC -c -o bar.lo $CPPFLAGS $CFLAGS -arch ppc -arch i386 bar.c],[0],[ignore],[ignore])\n\nAT_CHECK([$LIBTOOL --mode=link --tag=CC $CC  -o libbar.la $CPPFLAGS $CFLAGS $LDFLAGS -arch ppc -arch i386 bar.lo libfoo.la -rpath /nonexistent],[0],[ignore],[ignore])\n\nAT_CHECK([$LIBTOOL --mode=compile --tag=CC $CC -c -o main.lo $CPPFLAGS $CFLAGS -arch ppc -arch i386 main.c],[0],[ignore],[ignore])\n\nAT_CHECK([$LIBTOOL --mode=link --tag=CC $CC  -o main$EXEEXT $CPPFLAGS $CFLAGS $LDFLAGS -arch ppc -arch i386 main.lo libbar.la],[0],[ignore],[ignore])\n\nPATH=$save_PATH\nAT_CLEANUP\n\n\nAT_SETUP([darwin concurrent library extraction])\n\nAT_DATA([foo.c], [[\nint foo (void) { return 0; }\n]])\n\nAT_DATA([bar.c], [[\nextern int foo1 (void);\nint bar (void) { return foo1 (); }\n]])\ncp bar.c baz.c\n\nobjects=\nfor obj in 1 2 3 4 5 6 7 8; do\n  sed \"s/foo/foo$obj/\" < foo.c > foo$obj.c\n  AT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c foo$obj.c],\n\t   [], [ignore], [ignore])\n  objects=\"$objects foo$obj.lo\"\ndone\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c bar.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c baz.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o libfoo.la $objects],\n\t [], [ignore], [ignore])\n\n# Hypothesis: concurrent convenience archive extraction works.\nfor i in 1 2 3 4 5; do\n  rm -f libbar.la libbaz.la\n  AT_CHECK([($LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS ]dnl\n\t   [  -o libbar.la bar.lo -rpath /foo libfoo.la) & ]dnl\n\t   [($LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS ]dnl\n\t   [  -o libbaz.la baz.lo -rpath /foo libfoo.la) & ]dnl\n\t   [wait; test -f libbar.la && test -f libbaz.la],\n\t   [], [ignore], [ignore])\ndone\n\n# Hypothesis: the lock is not used in dry run mode.\neval \"`$LIBTOOL --config | $EGREP '^(objdir)='`\"\n# Next line is internal detail.\nlockfile=$objdir/libfoo.a.lock\necho stamp > $lockfile\nAT_CHECK([$LIBTOOL --dry-run --mode=link $CC $CFLAGS $LDFLAGS ]dnl\n\t [ -o libbar.la bar.lo -rpath /foo libfoo.la],\n\t [], [ignore], [ignore])\nAT_CHECK([grep stamp $lockfile], [], [ignore])\n\nAT_CLEANUP\n\nAT_SETUP([darwin gdb debug information])\n\nAT_CHECK([gdb --version || (exit 77)],[ignore],[ignore],[ignore])\n\nAT_DATA([foo.c], [[\nint foo (void) { return 0; }\n]])\n\nAT_DATA([bar.c], [[\nextern int foo (void);\nint bar (void) { return foo (); }\n]])\n\nAT_DATA([main.c], [[\nextern int bar(void);\n\nint main() { return bar();}\n]])\n\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c bar.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c foo.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c main.c],\n\t [], [ignore], [ignore])\n\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o libfoo.la foo.lo],\n\t [], [ignore], [ignore])\n\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS ]dnl\n\t [  -o libbar.la bar.lo -rpath /foo libfoo.la ],\n\t [], [ignore], [ignore])\n\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS ]dnl\n\t [  -o main main.lo libbar.la],[], [ignore], [ignore])\nAT_CHECK([echo quit | $LIBTOOL --mode=execute gdb main],\n\t [ignore], [ignore], [stderr])\n\nAT_CHECK([grep 'Could not find object file' stderr],[1],[ignore],[ignore])\n\nAT_XFAIL_IF([\neval \"`$LIBTOOL --config | $EGREP '^(whole_archive_flag_spec)='`\"\ncase $whole_archive_flag_spec:$host_os in\n:darwin*) : ;;\n*) false ;;\nesac ])\n\n# Remove any dSYM bundle\nrm -rf .libs/*.dSYM\n\nAT_CHECK([echo quit | $LIBTOOL --mode=execute gdb main],\n\t [ignore], [ignore], [stderr])\nAT_CHECK([grep 'Could not find object file' stderr],[1],[ignore],[ignore])\n\nAT_CLEANUP\n\nAT_SETUP([darwin ld warnings changing configure results])\n\nAT_DATA([configure.ac],\n[[AC_INIT([ld-stderr], ]AT_PACKAGE_VERSION[, ]AT_PACKAGE_BUGREPORT[)\nAC_CONFIG_MACRO_DIR([m4])\nAM_INIT_AUTOMAKE([foreign])\nAC_PROG_CC\nLT_INIT\nAC_CONFIG_FILES([Makefile])\nAC_OUTPUT\n]])\n\nAT_DATA([Makefile.am],[\nACLOCAL_AMFLAGS = -I m4\n])\nLT_AT_LIBTOOLIZE([--copy --force])\nLT_AT_AUTORECONF([--force --install])\nLT_AT_CONFIGURE\nAT_CHECK([./libtool --config],[ignore],[stdout],[ignore])\nmv stdout expout\nLT_AT_CONFIGURE([LDFLAGS=-L/there/is/no/dir/here])\nAT_CHECK([./libtool --config],[ignore],[expout],[ignore])\nAT_CLEANUP\n\nAT_SETUP([darwin can lt_dlopen .dylib and .so files])\n\nAT_KEYWORDS([libltdl dylib])\n\n# This test requires shared library support.\nAT_CHECK([$LIBTOOL --features | grep 'enable shared libraries' || exit 77],\n\t [], [ignore])\n\neval `$LIBTOOL --config | $EGREP '^shrext_cmds='`\n\nmodule=no\neval shared_ext=\\\"$shrext_cmds\\\"\nmodule=yes\neval module_ext=\\\"$shrext_cmds\\\"\n\n# Only bother with this test if module extension is different from\n# shared extension\nAT_CHECK([test \"$shared_ext\" != \"$module_ext\" || exit 77])\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f $LIBLTDL || (exit 77) ;;\nesac], [], [ignore])\n\nprefix=`pwd`/inst\nlibdir=$prefix/lib\nbindir=$prefix/bin\nmkdir $prefix $libdir $bindir\n\n# This code is copied from the Autobook:\n# <http://sources.redhat.com/autobook/autobook/autobook_169.html>\n# so if it needs changes, be sure to notify the Autobook authors\n# about them.\n\nAT_DATA([simple-module.c],\n[[\n#include <stdio.h>\n\n#ifdef __cplusplus\nextern \"C\"\n#endif\nint\nrun (const char *argument)\n{\n  printf (\"Hello, %s!\\n\", argument);\n  return 0;\n}\n]])\n\nAT_DATA([ltdl-loader.c],\n[[\n#include <stdio.h>\n#include <stdlib.h>\n#ifndef EXIT_FAILURE\n#  define EXIT_FAILURE        1\n#  define EXIT_SUCCESS        0\n#endif\n\n#include <limits.h>\n#ifndef PATH_MAX\n#  define PATH_MAX 255\n#endif\n\n#include <string.h>\n#include <ltdl.h>\n\n#ifndef MODULE_PATH_ENV\n#  define MODULE_PATH_ENV        \"MODULE_PATH\"\n#endif\n\ntypedef int entrypoint (const char *argument);\n\n/* Save and return a copy of the dlerror() error  message,\n   since the next API call may overwrite the original. */\nstatic char *dlerrordup (char *errormsg);\n\nint\nmain (int argc, const char *argv[])\n{\n  char *errormsg = NULL;\n  lt_dlhandle module = NULL;\n  entrypoint *run = NULL;\n  int errors = 0;\n\n  if (argc != 3)\n    {\n      fprintf (stderr, \"USAGE: main MODULENAME ARGUMENT\\n\");\n      exit (EXIT_FAILURE);\n    }\n\n  /* Initialise libltdl. */\n  errors = lt_dlinit ();\n\n  /* Set the module search path. */\n  if (!errors)\n    {\n      const char *path = getenv (MODULE_PATH_ENV);\n\n      if (path != NULL)\n        errors = lt_dlsetsearchpath (path);\n    }\n\n  /* Load the module. */\n  if (!errors)\n    module = lt_dlopenext (argv[1]);\n\n  /* Find the entry point. */\n  if (module)\n    {\n      run = (entrypoint *) lt_dlsym (module, \"run\");\n\n      /* In principle, run might legitimately be NULL, so\n         I don't use run == NULL as an error indicator\n         in general. */\n      errormsg = dlerrordup (errormsg);\n      if (errormsg != NULL)\n        {\n          errors = lt_dlclose (module);\n          module = NULL;\n        }\n    }\n  else\n    errors = 1;\n\n  /* Call the entry point function. */\n  if (!errors)\n    {\n      int result = (*run) (argv[2]);\n      if (result < 0)\n        errormsg = strdup (\"module entry point execution failed\");\n      else\n        printf (\"\\t=> %d\\n\", result);\n    }\n\n  /* Unload the module, now that we are done with it. */\n  if (!errors)\n    errors = lt_dlclose (module);\n\n  if (errors)\n    {\n      /* Diagnose the encountered error. */\n      errormsg = dlerrordup (errormsg);\n\n      if (!errormsg)\n        {\n          fprintf (stderr, \"%s: dlerror() failed.\\n\", argv[0]);\n          return EXIT_FAILURE;\n        }\n    }\n\n  /* Finished with ltdl now. */\n  if (!errors)\n    if (lt_dlexit () != 0)\n      errormsg = dlerrordup (errormsg);\n\n  if (errormsg)\n    {\n      fprintf (stderr, \"%s: %s.\\n\", argv[0], errormsg);\n      free (errormsg);\n      exit (EXIT_FAILURE);\n    }\n\n  return EXIT_SUCCESS;\n}\n\n/* Be careful to save a copy of the error message,\n   since the  next API call may overwrite the original. */\nstatic char *\ndlerrordup (char *errormsg)\n{\n  char *error = (char *) lt_dlerror ();\n  if (error && !errormsg)\n    errormsg = strdup (error);\n  return errormsg;\n}\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS -no-undefined\"\n\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c simple-module.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o simple-module.la ]dnl\n\t [simple-module.lo -rpath $libdir -module -avoid-version],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o libsimple-dylib.la ]dnl\n\t [simple-module.lo -rpath $libdir -avoid-version],\n\t [], [ignore], [ignore])\nAT_CHECK([$CC $CPPFLAGS $CFLAGS -c ltdl-loader.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o ltdl-loader$EXEEXT ]dnl\n\t [ltdl-loader.$OBJEXT -dlopen self $LIBLTDL],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp simple-module.la $libdir/simple-module.la], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp libsimple-dylib.la $libdir/libsimple-dylib.la], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=clean rm -f simple-module.la], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=clean rm -f libsimple-dylib.la], [], [ignore], [ignore])\n\nrm $libdir/simple-module.la\nrm $libdir/libsimple-dylib.la\n\nfor dir in inst/lib \"$libdir\"; do\n  LT_AT_EXEC_CHECK([./ltdl-loader], [], [stdout], [ignore],\n\t    [$dir/simple-module World])\n  AT_CHECK([grep \"Hello, World\" stdout], [], [ignore])\n  LT_AT_EXEC_CHECK([./ltdl-loader], [], [stdout], [ignore],\n\t    [$dir/libsimple-dylib World])\n  AT_CHECK([grep \"Hello, World\" stdout], [], [ignore])\ndone\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/ltdl-libdir.at": "# ltdl-libdir.at -- test libltdl functionality             -*- Autotest -*-\n#\n#   Copyright (C) 2010 Free Software Foundation, Inc.\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_SETUP([libdir of installed modules])\nAT_KEYWORDS([libltdl])\n\n# This test requires shared library support.\nAT_CHECK([$LIBTOOL --features | grep 'enable shared libraries' || exit 77],\n\t [], [ignore])\n\n# With MinGW, try Windows-style paths only.\nif pwd -W >/dev/null 2>&1; then\n  prefix=`pwd -W`/inst\nelse\n  prefix=`pwd`/inst\nfi\nlibdir=$prefix/lib\nbindir=$prefix/bin\nmkdir $prefix $libdir $bindir\n\nAT_DATA([a.c],\n[[#ifdef __cplusplus\nextern \"C\"\n#endif\nint f (void)\n{\n  return 42;\n}\n]])\n\nAT_DATA([m.c],\n[[\n#include <stdio.h>\n#include <ltdl.h>\n\ntypedef int func_f(void);\n\nint\nmain (int argc, const char *argv[])\n{\n  lt_dlhandle module = NULL;\n  func_f *f = NULL;\n\n  if (lt_dlinit()) {\n    fprintf(stderr, \"lt_dlinit failed '%s'\\n\", lt_dlerror());\n    return 1;\n  }\n\n  module = lt_dlopen(\"./a.la\");\n\n  if (!module) {\n    fprintf(stderr, \"lt_dlopen failed '%s'\\n\", lt_dlerror());\n    return 1;\n  }\n\n  f = (func_f *)lt_dlsym(module, \"f\");\n\n  if (!f) {\n    fprintf(stderr, \"lt_dlsym failed '%s'\\n\", lt_dlerror());\n    return 1;\n  }\n\n  if (f() != 42) {\n    fprintf(stderr, \"f did not return 42\\n\");\n    return 1;\n  }\n\n  lt_dlclose(module);\n  lt_dlexit();\n  return 0;\n}\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip installcheck if --disable-ltdl-install was used.\nAT_CHECK([test -f \"$LIBLTDL\" || exit 77])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS -no-undefined\"\n\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c a.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o a.la ]dnl\n\t [a.lo -rpath $libdir -module -shared -avoid-version],\n\t [], [ignore], [ignore])\nAT_CHECK([$CC $CPPFLAGS $CFLAGS -c m.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o m$EXEEXT ]dnl\n\t [m.$OBJEXT $LIBLTDL],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp a.la $libdir/a.la],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp m$EXEEXT $bindir/m$EXEEXT],\n\t [], [ignore], [ignore])\n\n# Try finding the module via the libdir entry in a misplaced .la file.\n\nmv $libdir/a.la $bindir/a.la\ncd $bindir\nLT_AT_EXEC_CHECK([./m],\n\t\t [], [ignore], [ignore])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/lt_dladvise.at": "# lt_dladvise.at -- test libltdl functionality                -*- Autotest -*-\n#\n#   Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n#   Written by Gary V. Vaughan, 2007\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\n# Try to keep the new interfaces of HEAD separate from those of\n# branch-1-5 to facilitate testing of older releases.\n\nAT_SETUP([lt_dlopenadvise library loading])\nAT_KEYWORDS([libltdl])\n\nAT_DATA([main.c],\n[[#include <ltdl.h>\n#include <stdio.h>\n\ntypedef int funcp (int);\n\nstatic int errors = 0;\n\nstatic void\ncomplain (const char *msg)\n{\n  const char *errmsg = lt_dlerror ();\n  fprintf (stderr, \"%s\", msg);\n  if (errmsg)\n    fprintf (stderr, \": %s\\n\", errmsg);\n  else\n    fprintf (stderr, \".\\n\");\n  ++errors;\n}\n\nstatic lt_dlhandle\nmoduleopen (const char *filename, lt_dladvise advise)\n{\n  lt_dlhandle handle;\n\n  handle = lt_dlopenadvise (filename, advise);\n  if (!handle)\n    {\n      fprintf (stderr, \"can't open the module %s!\\n\", filename);\n      complain (\"error was\");\n    }\n\n  return handle;\n}\n\nstatic int\nmoduletest (lt_dlhandle handle, const char *fname, const char *vname)\n{\n  funcp *f = (funcp *) lt_dlsym (handle, fname);\n  int   *v = (int *)   lt_dlsym (handle, vname);\n\n  if (!f)\n    {\n      fprintf (stderr, \"function `%s' not found\\n\", fname);\n      ++errors;\n      return -1;\n    }\n  if (!v)\n    {\n      fprintf (stderr, \"variable `%s' not found\\n\", vname);\n      ++errors;\n      return -1;\n    }\n  return f (*v);\n}\n\nvoid\nhint_ext (void)\n{\n  lt_dlhandle handle;\n  lt_dladvise advise;\n\n  if (lt_dladvise_init (&advise) || lt_dladvise_ext (&advise))\n    complain (\"error setting advise ext\");\n\n  handle = moduleopen (\"libdepend\", advise);\n\n  if (handle)\n    printf (\"depend: %d\\n\", moduletest (handle, \"g\", \"j\"));\n\n  lt_dladvise_destroy (&advise);\n}\n\nvoid\nhint_resident (void)\n{\n  const lt_dlinfo *info;\n  lt_dlhandle handle;\n  lt_dladvise advise;\n\n  if (lt_dladvise_init (&advise) || lt_dladvise_resident (&advise))\n    complain (\"error setting advise resident\");\n\n  handle = moduleopen (\"libresident.la\", advise);\n\n  if (handle)\n    {\n      info = lt_dlgetinfo (handle);\n      if (!info->is_resident)\n\tcomplain (\"error taking advise resident\");\n\n      /* cannot close resident modules */\n      if (lt_dlclose (handle) == 0)\n\tcomplain (\"successfully unloaded resident module\");\n\n      printf (\"resident: %d\\n\", moduletest (handle, \"func\", \"numb\"));\n    }\n\n  lt_dladvise_destroy (&advise);\n}\n\nvoid\nhint_local (void)\n{\n  const lt_dlinfo *info;\n  lt_dlhandle handle;\n  lt_dladvise advise;\n\n  if (lt_dladvise_init (&advise) || lt_dladvise_local (&advise))\n    complain (\"error setting advise local\");\n\n  handle = moduleopen (\"liblocal.la\", advise);\n\n  if (handle)\n    {\n      info = lt_dlgetinfo (handle);\n      printf (\"local: %d\\n\", moduletest (handle, \"f\", \"i\"));\n\n      /* If the symlocal hint was taken, don't unload this module\n         and test that our local symbolnames won't clash with modglobal.  */\n      if (!info->is_symlocal && lt_dlclose (handle))\n\tcomplain (\"error unloading modlocal\");\n    }\n\n  lt_dladvise_destroy (&advise);\n}\n\nvoid\nhint_global (void)\n{\n  const lt_dlinfo *info;\n  lt_dlhandle handle;\n  lt_dladvise advise;\n\n  if (lt_dladvise_init (&advise) || lt_dladvise_global (&advise))\n    complain (\"error setting advise global\");\n\n  handle = moduleopen (\"libglobal.la\", advise);\n\n  if (handle)\n    {\n      info = lt_dlgetinfo (handle);\n      printf (\"global: %d\\n\", moduletest (handle, \"f\", \"i\"));\n\n      /* Don't attempt to load moddepend unless modglobal was successfully\n         loaded and the symglobal hint was taken, and the system allows to\n \t to have undefined symbols.  */\n      if (info && info->is_symglobal && HAVE_UNDEFINED_SYMBOLS)\n        {\n          hint_ext ();\n        }\n      else\n        {\n          /* Fake the output so the test won't fail when using a dlloader\n             unable to take symglobal hints.  */\n          printf (\"depend: 5\\n\");\n        }\n    }\n\n  lt_dladvise_destroy (&advise);\n}\n\nvoid\nhint_preload (void)\n{\n  lt_dlhandle handle;\n  lt_dladvise advise;\n\n  if (lt_dladvise_init (&advise) || lt_dladvise_preload (&advise))\n    complain (\"error setting advise preload\");\n\n  handle = moduleopen (\"libpreload.la\", advise);\n\n  if (handle)\n    {\n      printf(\"preload: %d\\n\", moduletest (handle, \"h\", \"k\"));\n    }\n\n  lt_dladvise_destroy (&advise);\n}\n\nint\nmain (void)\n{\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n\n  if (lt_dlinit() != 0)\n    {\n      fprintf (stderr, \"error during initialization: %s\\n\", lt_dlerror());\n      return 1;\n    }\n\n  hint_resident ();\n  hint_local ();\n#ifdef HAVE_SHARED\n  hint_global ();\n#else\n  /* This ugly hack is because we have symbols with the same name in both the\n     global module and the local one, we can't lt_dlopen the local module\n     locally and then later load the global module globally because of this.\n     Instead of skipping the test entirely, we test what we can and\n     have this hack. */\n  printf (\"global: 4\\n\");\n  printf (\"depend: 5\\n\");\n#endif\n  hint_preload ();\n\n  if (lt_dlexit () != 0)\n    complain (\"error during exit\");\n\n  return (errors != 0);\n}\n]])\n\nAT_DATA([modresident.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\nint func (int x) { return x / 3; }\nint numb = 7;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nAT_DATA([modlocal.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\nint f (int x) { return (x * x) / 10; }\nint i = 6;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nAT_DATA([modglobal.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\nint f (int x) { return x - 1; }\nint i = 5;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nAT_DATA([moddepend.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\nextern int f (int), i;\nint g (int x) { return f (i) + x - 3; }\nint j = 4;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nAT_DATA([modpreload.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\nint h (int x) { return 2 * x; }\nint k = 3;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nLT_AT_HOST_DATA([expout],\n[[resident: 2\nlocal: 3\nglobal: 4\ndepend: 5\npreload: 6\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f $LIBLTDL || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\n\ndlopenable='resident local global'\ndlpreloadable='preload'\n\n# ------------------------------------------------------------------------- #\n# The depend test makes no sense unless compiled without -no-undefined. By  #\n# not building the depend module in that case, when this test passes we can #\n# be sure that hint_global() above, is being correctly informed those hosts #\n# are reporting not able to accept the global hint to lt_dlopenadvise().    #\n# ------------------------------------------------------------------------- #\n\nhave_shared=false\n$LIBTOOL --features | grep 'enable shared libraries' >/dev/null && have_shared=:\n\ncase $host_os,$have_shared in\ncygwin* | mingw* | cegcc* | *,false)\n  # These hosts do not support linking without -no-undefined\n  CPPFLAGS=\"$CPPFLAGS -DHAVE_UNDEFINED_SYMBOLS=0\"\n  ;;\n*)\n  CPPFLAGS=\"$CPPFLAGS -DHAVE_UNDEFINED_SYMBOLS=1\"\n  dlopenable=\"$dlopen depend\"\n  $LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c moddepend.c\n  AT_CHECK([$LIBTOOL --mode=link $CC -module $CFLAGS $LDFLAGS -o libdepend.la ]dnl\n           [moddepend.lo -rpath /foo -avoid-version], [], [ignore], [ignore])\n  ;;\nesac\n\n$have_shared && CPPFLAGS=\"$CPPFLAGS -DHAVE_SHARED\"\n\n# ------------------------------------------------------------------------- #\n# Other modules can be tested correctly even when built with -no-undefined. #\n# ------------------------------------------------------------------------- #\n\nLDFLAGS=\"$LDFLAGS -no-undefined\"\n\n$CC $CPPFLAGS $CFLAGS -c main.c\nfor name in resident local global preload; do\n  # FIXME: adding -static to libpreload shouldn't be necessary.\n  #        Fix this properly in ltmain, then remove this workaround.\n  if test $name = preload; then\n    st=-static\n  else\n    st=\n  fi\n  $LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c mod$name.c\n  AT_CHECK([$LIBTOOL --mode=link $CC -module $CFLAGS $LDFLAGS -o lib$name.la ]dnl\n           [mod$name.lo $st -rpath /foo -avoid-version], [], [ignore], [ignore])\ndone\n\npreloaded=\nfor module in $dlpreloadable; do\n  preloaded=\"${preloaded+$preloaded }-dlpreopen lib$module.la\"\ndone\n\nmodules=\nfor module in $dlopenable; do\n  modules=\"${modules+$modules }-dlopen lib$module.la\"\ndone\n\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o main$EXEEXT main.$OBJEXT $preloaded $modules $LIBLTDL],\n\t [], [ignore], [ignore])\n\n# Remove loadable libpreload module, so we know it is the preloaded module\n# that is being executed by a successful test invocation:\nAT_CHECK([$LIBTOOL --mode=clean rm -f libpreload.la], [], [ignore], [ignore])\n\nLT_AT_NOINST_EXEC_CHECK([./main], [$modules], [], [expout], [])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/loadlibrary.at": "# loadlibrary.at -- test loadlibrary functionality          -*- Autotest -*-\n#\n#   Copyright (C) 2010 Free Software Foundation, Inc.\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_SETUP([loadlibrary error messages])\nAT_KEYWORDS([libltdl])\n\neval \"`$LIBTOOL --config | $EGREP '^(objdir)='`\"\n\nAT_DATA([main.c],\n[[#include <ltdl.h>\n#include <stdio.h>\n\nstatic int\nstandard_error_message(const char *error)\n{\n  int error_number;\n\n  for (error_number = 0; error_number < LT_ERROR_MAX; ++error_number)\n    {\n      lt_dlseterror (error_number);\n      if (error == lt_dlerror ())\n\t{\n\t  return 1;\n\t}\n    }\n\n  lt_dlseterror (LT_ERROR_UNKNOWN);\n  return 0;\n}\n\nint\nmain (int argc, char* argv[])\n{\n  int err = 0;\n  lt_dlhandle module = NULL;\n  const lt_dlvtable *loadlibrary;\n  const lt_dlvtable *preopen;\n  lt_dlloader loader = NULL;\n  lt_dlloader next;\n  const lt_dlvtable *vtable;\n  void *symbol;\n  const char *error;\n\n  if (argc < 2)\n    {\n      fprintf (stderr, \"usage: %s plugin [symbol]\\n\", argv[0]);\n      return 1;\n    }\n\n  lt_dlinit ();\n\n  loadlibrary = lt_dlloader_find (\"lt_loadlibrary\");\n  if (!loadlibrary)\n    {\n      /* Skip if the loadlibrary loader isn't supported */\n      printf (\"loadlibrary loader not found\\n\");\n      err = 77;\n      goto cleanup;\n    }\n\n  preopen = lt_dlloader_find (\"lt_preopen\");\n  if (!loadlibrary)\n    {\n      printf (\"preopen loader not found\\n\");\n      err = 2;\n      goto cleanup;\n    }\n\n  /* Remove all loaders except the preopen and loadlibrary loaders. */\n  while (next = lt_dlloader_next (loader))\n    {\n      if (lt_dlloader_get (next) == loadlibrary)\n\t{\n\t  loader = next;\n\t  continue;\n\t}\n\n      if (lt_dlloader_get (next) == preopen)\n\t{\n\t  loader = next;\n\t  continue;\n\t}\n\n      lt_dlloader_remove (lt_dlloader_get (next)->name);\n    }\n\n  module = lt_dlopen (argv[1]);\n  error = lt_dlerror ();\n\n  if (module)\n    {\n      printf (\"lt_dlopen: success!\\n\");\n\n      if (argc == 2)\n\t{\n\t  /* But failure was the desired result... */\n\t  printf (\"expected failure\\n\");\n\t  err = 2;\n\t  goto cleanup;\n\t}\n    }\n  else if (argc > 2)\n    {\n      /* Didn't expect failure... */\n      printf (\"lt_dlopen: failure: %s\\n\", error);\n      err = 2;\n      goto cleanup;\n    }\n  else if (standard_error_message (error))\n    {\n      /* Expected custom error message... */\n      printf (\"lt_dlopen: standard error (bad): %s\\n\", error);\n      err = 1;\n      goto cleanup;\n    }\n  else\n    {\n      printf (\"lt_dlopen: custom error (good): %s\\n\", error);\n      goto cleanup;\n    }\n\n  symbol = lt_dlsym (module, argv[2]);\n  error = lt_dlerror ();\n\n  if (symbol)\n    {\n      printf (\"lt_dlsym: success!\\n\");\n    }\n  else if (standard_error_message (error))\n    {\n      /* Expected custom failure message... */\n      printf (\"lt_dlsym: standard error (bad): %s\\n\", error);\n      err = 1;\n    }\n  else\n    {\n      printf (\"lt_dlsym: custom error (good): %s\\n\", error);\n    }\n\ncleanup:\n  if (module)\n    {\n      lt_dlclose (module);\n    }\n  lt_dlexit ();\n  return err;\n}\n]])\n\nAT_DATA([foomod.c],\n[[\n#ifdef __cplusplus\nextern \"C\"\n#endif\nint foosym (void);\nint\nfoosym (void)\n{\n  return 0;\n}\n]])\n\nAT_DATA([bardep.c],\n[[\n#ifdef __cplusplus\nextern \"C\"\n#endif\nint bardep (void);\nint\nbardep (void)\n{\n  return 0;\n}\n]])\n\nAT_DATA([barmod.c],\n[[\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nint bardep (void);\nint barsym (void);\n#ifdef __cplusplus\n}\n#endif\nint\nbarsym (void)\n{\n  return bardep ();\n}\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f $LIBLTDL || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\ninst=`pwd`/inst\nlibdir=$inst/lib\n\nAT_CHECK([$CC $CPPFLAGS $CFLAGS -c main.c], [], [ignore], [ignore])\nfor file in foomod.c bardep.c barmod.c; do\n  AT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c $file],\n\t   [], [ignore], [ignore])\ndone\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o foomod.la ]dnl\n\t [-rpath $libdir -module -avoid-version -no-undefined ]dnl\n\t [foomod.lo],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o libbardep.la ]dnl\n\t [-rpath $libdir -avoid-version -no-undefined ]dnl\n\t [bardep.lo],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o barmod.la ]dnl\n\t [-rpath $libdir -module -avoid-version -no-undefined ]dnl\n\t [barmod.lo ./libbardep.la],\n\t [], [ignore], [ignore])\n\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o main$EXEEXT ]dnl\n\t [main.$OBJEXT $LIBLTDL],\n\t [], [ignore], [ignore])\n\n. ./foomod.la\nAT_CHECK([test -n \"$dlname\" || (exit 77)])\n\nLT_AT_EXEC_CHECK([./main], [], [ignore], [ignore], [./foomod.la no_symbol])\n\n#   chmod -x doesn't appear to work in MSYS, and Wine can load no-exec dlls.\ndnl chmod -x $objdir/$dlname\ndnl LT_AT_EXEC_CHECK([./main], [], [ignore], [ignore], [./foomod.la])\n\nrm -f $objdir/$dlname\nLT_AT_EXEC_CHECK([./main], [], [ignore], [ignore], [./foomod.la])\n\nLT_AT_EXEC_CHECK([./main], [], [ignore], [ignore], [./barmod.la no_symbol])\n\n. ./libbardep.la\n#   chmod -x doesn't appear to work in MSYS, and Wine can load no-exec dlls.\ndnl chmod -x $objdir/$dlname\ndnl LT_AT_EXEC_CHECK([./main], [], [ignore], [ignore], [./barmod.la])\n\nrm -f $objdir/$dlname\nLT_AT_EXEC_CHECK([./main], [], [ignore], [ignore], [./barmod.la])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/lt_dlopenext.at": "# lt_dlopenext.at -- test libltdl functionality             -*- Autotest -*-\n#\n#   Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_SETUP([lt_dlopenext error messages])\nAT_KEYWORDS([libltdl])\n\n# This test requires shared library support.\nAT_CHECK([$LIBTOOL --features | grep 'enable shared libraries' || exit 77],\n\t [], [ignore])\n\nprefix=`pwd`/inst\nlibdir=$prefix/lib\nbindir=$prefix/bin\nmkdir $prefix $libdir $bindir\n\n# This code is copied from the Autobook:\n# <http://sources.redhat.com/autobook/autobook/autobook_169.html>\n# so if it needs changes, be sure to notify the Autobook authors\n# about them.\n\nAT_DATA([simple-module.c],\n[[\n#include <stdio.h>\n\n#ifdef __cplusplus\nextern \"C\"\n#endif\nint\nrun (const char *argument)\n{\n  printf (\"Hello, %s!\\n\", argument);\n  return 0;\n}\n]])\n\nAT_DATA([ltdl-loader.c],\n[[\n#include <stdio.h>\n#include <stdlib.h>\n#ifndef EXIT_FAILURE\n#  define EXIT_FAILURE        1\n#  define EXIT_SUCCESS        0\n#endif\n\n#include <limits.h>\n#ifndef PATH_MAX\n#  define PATH_MAX 255\n#endif\n\n#include <string.h>\n#include <ltdl.h>\n\n#ifndef MODULE_PATH_ENV\n#  define MODULE_PATH_ENV        \"MODULE_PATH\"\n#endif\n\ntypedef int entrypoint (const char *argument);\n\n/* Save and return a copy of the dlerror() error  message,\n   since the next API call may overwrite the original. */\nstatic char *dlerrordup (char *errormsg);\n\nint\nmain (int argc, const char *argv[])\n{\n  char *errormsg = NULL;\n  lt_dlhandle module = NULL;\n  entrypoint *run = NULL;\n  int errors = 0;\n\n  if (argc != 3)\n    {\n      fprintf (stderr, \"USAGE: main MODULENAME ARGUMENT\\n\");\n      exit (EXIT_FAILURE);\n    }\n\n  /* Initialise libltdl. */\n  errors = lt_dlinit ();\n\n  /* Set the module search path. */\n  if (!errors)\n    {\n      const char *path = getenv (MODULE_PATH_ENV);\n\n      if (path != NULL)\n        errors = lt_dlsetsearchpath (path);\n    }\n\n  /* Load the module. */\n  if (!errors)\n    module = lt_dlopenext (argv[1]);\n\n  /* Find the entry point. */\n  if (module)\n    {\n      run = (entrypoint *) lt_dlsym (module, \"run\");\n\n      /* In principle, run might legitimately be NULL, so\n         I don't use run == NULL as an error indicator\n         in general. */\n      errormsg = dlerrordup (errormsg);\n      if (errormsg != NULL)\n        {\n          errors = lt_dlclose (module);\n          module = NULL;\n        }\n    }\n  else\n    errors = 1;\n\n  /* Call the entry point function. */\n  if (!errors)\n    {\n      int result = (*run) (argv[2]);\n      if (result < 0)\n        errormsg = strdup (\"module entry point execution failed\");\n      else\n        printf (\"\\t=> %d\\n\", result);\n    }\n\n  /* Unload the module, now that we are done with it. */\n  if (!errors)\n    errors = lt_dlclose (module);\n\n  if (errors)\n    {\n      /* Diagnose the encountered error. */\n      errormsg = dlerrordup (errormsg);\n\n      if (!errormsg)\n        {\n          fprintf (stderr, \"%s: dlerror() failed.\\n\", argv[0]);\n          return EXIT_FAILURE;\n        }\n    }\n\n  /* Finished with ltdl now. */\n  if (!errors)\n    if (lt_dlexit () != 0)\n      errormsg = dlerrordup (errormsg);\n\n  if (errormsg)\n    {\n      fprintf (stderr, \"%s: %s.\\n\", argv[0], errormsg);\n      free (errormsg);\n      exit (EXIT_FAILURE);\n    }\n\n  return EXIT_SUCCESS;\n}\n\n/* Be careful to save a copy of the error message,\n   since the  next API call may overwrite the original. */\nstatic char *\ndlerrordup (char *errormsg)\n{\n  char *error = (char *) lt_dlerror ();\n  if (error && !errormsg)\n    errormsg = strdup (error);\n  return errormsg;\n}\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f $LIBLTDL || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS -no-undefined\"\n\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c simple-module.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o simple-module.la ]dnl\n\t [simple-module.lo -rpath $libdir -module -avoid-version],\n\t [], [ignore], [ignore])\nAT_CHECK([$CC $CPPFLAGS $CFLAGS -c ltdl-loader.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o ltdl-loader$EXEEXT ]dnl\n\t [ltdl-loader.$OBJEXT -dlopen self $LIBLTDL],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp simple-module.la $libdir/simple-module.la], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=clean rm -f simple-module.la], [], [ignore], [ignore])\n\n# Try finding the module with and without the .la file, with absolute\n# path, relative path, or one of the path variables.  Do not override\n# $PATH for w32, see shlibpath.at for the hacks this requires.\n#\n# Finding the module without the .la file will not work if MODULE_EXT\n# aka. shared_ext is empty.\n\neval `$LIBTOOL --config | $EGREP '^(shlibpath_var|shrext_cmds)='`\n\nmodule=no\neval shared_ext=\\\"$shrext_cmds\\\"\nif test -n \"$shared_ext\"; then\n  have_lafile=\"with without\"\nelse\n  have=\"with\"\nfi\n\nif test \"$shlibpath_var\" = PATH; then\n  $unset shlibpath_var || shlibpath_var=\nfi\n\nfor lafile in $have_lafile; do\n  if test $lafile = without; then\n    rm $libdir/simple-module.la\n  fi\n\n  for dir in inst/lib \"$libdir\"; do\n    LT_AT_EXEC_CHECK([./ltdl-loader], [], [stdout], [ignore],\n\t\t     [$dir/simple-module World])\n    AT_CHECK([grep \"Hello, World\" stdout], [], [ignore])\n\n    for var in MODULE_PATH LTDL_LIBRARY_PATH $shlibpath_var\n    do\n      eval $var=\\$dir\n      export $var\n      LT_AT_EXEC_CHECK([./ltdl-loader], [], [stdout], [ignore],\n\t\t       [simple-module World])\n      AT_CHECK([grep \"Hello, World\" stdout], [], [ignore])\n      $unset $var || eval $var=\n    done\n  done\ndone\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/need_lib_prefix.at": "# need-lib-prefix.at -- test libltdl functionality            -*- Autotest -*-\n#\n#   Copyright (C) 2007, 2008, 2010 Free Software Foundation, Inc.\n#   Written by Gary V. Vaughan, 2007\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_SETUP([enforced lib prefix])\nAT_KEYWORDS([libltdl libtool])\n\n# Originally written to simulate a failure visible on systems\n# which need a library prefix like 'lib', such as BeOS.  Currently\n# the prefix is hardcoded as 'lib', so systems that require a\n# different prefix skips the test.\n\nAT_DATA([main.c],\n[[#include <ltdl.h>\n#include <stdio.h>\n\ntypedef int fun (int);\n\nstatic int errors = 0;\n\nstatic void\ncomplain (const char *msg)\n{\n  const char *errmsg = lt_dlerror ();\n  fprintf (stderr, \"%s\", msg);\n  if (errmsg)\n    fprintf (stderr, \": %s\\n\", errmsg);\n  else\n    fprintf (stderr, \".\\n\");\n  ++errors;\n}\n\nstatic lt_dlhandle\nmoduleopen (const char *filename)\n{\n  lt_dlhandle handle;\n\n  handle = lt_dlopen (filename);\n  if (!handle)\n    {\n      fprintf (stderr, \"can't open the module %s!\\n\", filename);\n      complain (\"error was\");\n    }\n\n  return handle;\n}\n\nstatic int\nmoduletest (lt_dlhandle handle)\n{\n  const lt_dlinfo *info = lt_dlgetinfo (handle);\n  fun *f = (fun *) lt_dlsym (handle, \"f\");\n  int *v = (int *) lt_dlsym (handle, \"i\");\n\n  if (!f)\n    {\n      complain (\"function `f' not found\");\n      return 1;\n    }\n  if (!v)\n    {\n      complain (\"variable `i' not found\");\n      return 1;\n    }\n  printf (\"%s: %d\\n\", info->name, f (*v));\n\n  return 0;\n}\n\nint\nmain (int argc, char **argv)\n{\n  lt_dlhandle handle;\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n\n  if (lt_dlinit() != 0)\n    {\n      fprintf (stderr, \"error during initialization: %s\\n\", lt_dlerror());\n      return 1;\n    }\n\n  if (lt_dlpreload_open (0, moduletest) != 0)\n    complain (\"error during preloading\");\n\n  if (lt_dlexit () != 0)\n    complain (\"error during exit\");\n\n  return (errors != 0);\n}\n]])\n\nAT_DATA([foo1.c],\n[[#define f foo1_LTX_f\n#define i foo1_LTX_i\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nint f (int x) { return x / 3; }\nint i = 7;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nAT_DATA([foo2.c],\n[[#define f libfoo2_LTX_f\n#define i libfoo2_LTX_i\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nint f (int x) { return (x * x) / 10; }\nint i = 6;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nLT_AT_HOST_DATA([expout],\n[[libfoo1: 2\nlibfoo2: 3\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f $LIBLTDL || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS\"\n\n# Skip this test when libraries are not normally prefixed with lib.\n# E.g., for MSVC and OS/2.\neval \"`$LIBTOOL --config | $EGREP '^(libname_spec)='`\"\nname=\neval libname=\\\"$libname_spec\\\"\nAT_CHECK([test \"$libname\" = lib || exit 77])\n\n# Create our own libtool, forcing need_lib_prefix setting\nsed 's,^\\(need_lib_prefix\\)=.*$,\\1=unknown,' $LIBTOOL > ./libtool\nLIBTOOL=\"$SHELL ./libtool\"\n\n# Installation directory:\ninstdir=`pwd`/_inst\n\n$CC $CPPFLAGS $CFLAGS -c main.c\nfor file in foo1 foo2; do\n  $LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c $file.c\ndone\n\nAT_CHECK([$LIBTOOL --mode=link $CC -module -avoid-version $CFLAGS $LDFLAGS -o foo1.la foo1.lo -rpath $instdir/lib],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC -module -avoid-version $CFLAGS $LDFLAGS -o libfoo2.la foo2.lo -rpath $instdir/lib],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o main$EXEEXT main.$OBJEXT -dlpreopen foo1.la -dlpreopen libfoo2.la $LIBLTDL],\n          [], [ignore], [ignore])\n\nLT_AT_NOINST_EXEC_CHECK([./main], [-dlopen foo1.la -dlopen libfoo2.la],\n\t      [], [expout], [])\n\n# Install the libraries.\nmkdir $instdir\nmkdir $instdir/lib\n$LIBTOOL --mode=install cp foo1.la $instdir/lib/foo1.la\n$LIBTOOL --mode=install cp libfoo2.la $instdir/lib/libfoo2.la\n\n# Install the binary\nmkdir $instdir/bin\n$LIBTOOL --mode=install cp main$EXEEXT $instdir/bin/main$EXEEXT\n\nLT_AT_EXEC_CHECK([$instdir/bin/main], [], [expout], [])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/lt_dlexit.at": "# lt_dlexit.at -- test libltdl functionality                  -*- Autotest -*-\n#\n#   Copyright (C) 2007, 2008, 2010 Free Software Foundation, Inc.\n#   Written by Dave Brolley & Ralf Wildenhues, 2007\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\n# Try to keep the new interfaces of HEAD separate from those of\n# branch-1-5 to facilitate testing of older releases.\n\nAT_BANNER([Libltdl functionality.])\n\nAT_SETUP([lt_dlexit unloading libs])\nAT_KEYWORDS([libltdl])\n\n# Test for\n# http://lists.gnu.org/archive/html/bug-libtool/2007-01/msg00014.html\n# http://lists.gnu.org/archive/html/bug-libtool/2008-03/msg00013.html\n\nAT_DATA([main.c],\n[[#include <ltdl.h>\n#include <stdio.h>\n#include <string.h>\n\ntypedef int (*pfun_T) (int);\ntypedef int *pvar_T;\n\n/* lt_dlopen wrapper */\nstatic lt_dlhandle\nxdlopen (const char *filename)\n{\n  lt_dlhandle handle = lt_dlopen (filename);\n  if (!handle) {\n    fprintf (stderr, \"can't open the module %s!\\n\", filename);\n    fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n  }\n  return handle;\n}\n\n/* lt_dlsym wrapper: try one function and one variable */\nstatic int\nxdlsymtest (lt_dlhandle handle, const char *func, const char *var)\n{\n  pfun_T pf = (pfun_T) lt_dlsym (handle, func);\n  pvar_T pv = (pvar_T) lt_dlsym (handle, var);\n  if (pf == NULL) {\n    fprintf (stderr, \"function `%s' not found\\n\", func);\n    return 1;\n  }\n  if (pv == NULL) {\n    fprintf (stderr, \"variable `%s' not found\\n\", var);\n    return 1;\n  }\n  return (*pf) (*pv);\n}\n\nint\nmain (void)\n{\n  lt_dlhandle b1;\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n  if (lt_dlinit() != 0) {\n    fprintf (stderr, \"error during initialization: %s\\n\", lt_dlerror());\n    return 1;\n  }\n  if (lt_dlexit() != 0) {\n    fprintf (stderr, \"error during first lt_dlexit: %s\\n\", lt_dlerror());\n    return 1;\n  }\n  if (lt_dlinit() != 0) {\n    fprintf (stderr, \"error during second initialization: %s\\n\", lt_dlerror());\n    return 1;\n  }\n  if (!(b1 = xdlopen (\"modb1.la\"))) return 1;\n  if (xdlsymtest (b1, \"fb1\", \"vb1\")) return 1;\n  /* do not lt_dlclose here on purpose.  */\n\n  if (lt_dlexit() != 0) {\n    fprintf (stderr, \"error during exit: %s\\n\", lt_dlerror());\n    return 1;\n  }\n  return 0;\n}\n]])\n\n\nAT_DATA([a1.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\nint f1 (int x) { return x - 1; }\nint v1 = 1;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nAT_DATA([b1.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\n#if defined DLL_EXPORT && defined _WIN32 && defined _MSC_VER\n#  define LIBA1_SCOPE extern __declspec (dllimport)\n#endif\n#if !defined LIBA1_SCOPE\n#  define LIBA1_SCOPE extern\n#endif\nLIBA1_SCOPE int f1 (int);\nLIBA1_SCOPE int v1;\nint fb1 (int x) { return f1 (v1) + x - 3; }\nint vb1 = 3;\n#ifdef __cplusplus\n}\n#endif\n]])\n\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f $LIBLTDL || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS -no-undefined\"\n\nfor file in a1 b1; do\n  $LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c $file.c\ndone\n$CC $CPPFLAGS $CFLAGS -c main.c\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o liba1.la a1.lo \\\n          -rpath /foo -avoid-version], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o modb1.la b1.lo \\\n          -rpath /foo -module -avoid-version liba1.la], [], [ignore], [ignore])\n\n# TODO: test -dlpreopen\nfor dlopen in -dlopen; do\n  AT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o main$EXEEXT main.$OBJEXT \\\n           $dlopen modb1.la $LIBLTDL], [], [ignore], [ignore])\n  LT_AT_NOINST_EXEC_CHECK([./main], [-dlopen modb1.la])\ndone\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/exceptions.at": "# exception.at -- test C++ exception handling with libtool  -*- Autotest -*-\n#\n#   Copyright (C) 2010 Free Software Foundation, Inc.\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_SETUP([C++ exception handling])\nAT_KEYWORDS([libtool])\nAT_KEYWORDS([libltdl])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f $LIBLTDL || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\n\n# Win32 (and cygwin) notes\n# ------------------------\n# When using C++ and Win32 DLLs, data types used in the DLL's interface\n# which are other-than-POD, must have vtables, typeinfo, and other\n# elements resolved when the client is linked.  This includes exception\n# classes.  Therefore, the exception class \"modexc\" thrown by the\n# dynamically-loaded module must be defined in a separate DLL, to which\n# both that module and main must be directly linked; hence, the 'common'\n# library. Not using a 'common' library in this manner represents an\n# ODR violation, unless the platform's runtime loader is capable of\n# rationalizing vague linkage items such as vtables, typeinfo, and\n# typename elements) at runtime.  The Win32 loader is not capable of\n# this, but some ELF loaders appear to be.\n#\n# Similar treatment is not necessary for liba (e.g. the libexc\n# exception class), because that library is not dynamically loaded. As a\n# consequence, vague linkage items for the class libexc are resolved at\n# link time using the vague linkage rules, for both Win32 and other\n# (e.g. ELF) platforms.\n#\n# Also, when linking a C++ DLL with another C++ DLL, some versions of\n# the GNU toolchain on Win32 (or cygwin) mistakenly re-export symbols\n# that were imported from the other DLL, when the client DLL is linked\n# using -export-all-symbols.  Similar issues MAY also arise with those\n# versions of the GNU toolchain if using the libtool link flags\n# -export-symbols LIST or -export-symbols-regex REGEX, if any symbols\n# from the dependency, rather than client, library are listed (or match\n# the regex).  However, in this test, none of these situations apply,\n# so we don't directly address it.  Otherwise, the correct mechanism\n# would be to avoid all of those flags, and instead explicitly decorate\n# all symbols with appropriate __declspec (dllexport) or\n# __declspec (dllimport) flags when building the DLLs and the clients.\n#\n# For more information, see these two threads:\n#   http://lists.gnu.org/archive/html/bug-libtool/2010-06/msg00069.html\n#   http://cygwin.com/ml/cygwin/2010-06/msg00392.html\n# To sum up: C++ is complicated.\nAT_DATA([common.h],\n[[#ifndef LIBTOOL_TEST_COMMON_HEADER\n#define LIBTOOL_TEST_COMMON_HEADER\n\n#include <exception>\n#include <string>\n\n#if defined(__CYGWIN__) || defined(_WIN32)\n# if defined(DLL_EXPORT) || defined(USING_COMMON_DLL)\n#  if defined(LIBTOOL_TEST_IN_COMMON)\n#   define COMMON_IMPEXP __declspec (dllexport)\n#  else\n#   define COMMON_IMPEXP __declspec (dllimport)\n#  endif\n# else\n#  define COMMON_IMPEXP\n# endif\n#else\n# define COMMON_IMPEXP\n#endif\n\nclass COMMON_IMPEXP modexc : public std::exception {\npublic:\n  modexc (std::string str) : message (str) { }\n  ~modexc () throw () { }\n  virtual const char *what () const throw ()\n  {\n    return message.c_str ();\n  }\nprivate:\n  std::string message;\n};\n\nextern \"C\" int COMMON_IMPEXP common_dummy (void);\n#endif\n]])\n\nAT_DATA([common.cpp],\n[[#define LIBTOOL_TEST_IN_COMMON\n#include \"common.h\"\n\nextern \"C\"\nint common_dummy (void)\n{\n  return 0;\n}\n]])\n\nAT_DATA([module.h],\n[[#include \"common.h\"\n\n#if defined(__CYGWIN__) || defined(_WIN32)\n# if defined(DLL_EXPORT) || defined(USING_MODULE_DLL)\n#  if defined(LIBTOOL_TEST_IN_MODULE)\n#   define MODULE_IMPEXP __declspec (dllexport)\n#  else\n#   define MODULE_IMPEXP __declspec (dllimport)\n#  endif\n# else\n#  define MODULE_IMPEXP\n# endif\n#else\n# define MODULE_IMPEXP\n#endif\n\nextern \"C\" int MODULE_IMPEXP modfoo () throw (modexc);\n]])\n\nAT_DATA([module.cpp],\n[[#include <iostream>\n#define LIBTOOL_TEST_IN_MODULE\n#include \"module.h\"\n\nint modbar (void) throw (modexc)\n{\n  throw modexc (\"exception in module\");\n}\n\nextern \"C\"\nint modfoo (void) throw (modexc)\n{\n  try {\n    modbar ();\n  }\n  catch (modexc e) {\n    std::cerr << \"caught inside module: \" << e.what () << '\\n';\n    throw modexc (\"exception from module\");\n  }\n  return 0;\n}\n]])\n\nAT_DATA([lib.h],\n[[#include <exception>\n#include <string>\n\n\n#if defined(__CYGWIN__) || defined(_WIN32)\n# if defined(DLL_EXPORT) || defined(USING_LIB_DLL)\n#  if defined(LIBTOOL_TEST_IN_LIB)\n#   define LIB_IMPEXP __declspec (dllexport)\n#  else\n#   define LIB_IMPEXP __declspec (dllimport)\n#  endif\n# else\n#  define LIB_IMPEXP\n# endif\n#else\n# define LIB_IMPEXP\n#endif\n\nclass LIB_IMPEXP libexc : public std::exception {\npublic:\n  libexc (std::string str) : message (str) { }\n  ~libexc () throw () { }\n  virtual const char *what () const throw ()\n  {\n    return message.c_str ();\n  }\nprivate:\n  std::string message;\n};\nint LIB_IMPEXP libfoo () throw (libexc);\n]])\n\nAT_DATA([lib.cpp],\n[[#include <iostream>\n#define LIBTOOL_TEST_IN_LIB\n#include \"lib.h\"\n\nint libbar (void) throw (libexc)\n{\n  throw libexc (\"exception in library\");\n}\n\nint libfoo (void) throw (libexc)\n{\n  try {\n    libbar ();\n  }\n  catch (libexc e) {\n    std::cerr << \"caught inside lib: \" << e.what () << '\\n';\n    throw libexc (\"exception from library\");\n  }\n  return 0;\n}\n]])\n\nAT_DATA([main.cpp],\n[[#include <ltdl.h>\n#include <cstdlib>\n#include <iostream>\n#include <exception>\n#include <string>\n#include \"common.h\"\n#include \"lib.h\"\n#include \"module.h\"\n\nclass exc : public std::exception {\npublic:\n  exc (std::string str) : message (str) { }\n  ~exc () throw () { }\n  virtual const char *what () const throw ()\n  {\n    return message.c_str ();\n  }\nprivate:\n  std::string message;\n};\n\nint foo (void) throw (exc)\n{\n  throw exc (\"exception in program\");\n  return 0;\n}\n\nint exceptions_in_prog (void)\n{\n  std::cerr << \"exceptions_in_prog\\n\";\n  try {\n    foo ();\n  }\n  catch (exc e) {\n     std::cerr << \"caught: \" << e.what () << '\\n';\n    return 0;\n  }\n  return 1;\n}\n\nint exceptions_in_lib (void)\n{\n  std::cerr << \"exceptions_in_lib\\n\";\n  try {\n    libfoo ();\n  }\n  catch (libexc e) {\n     std::cerr << \"caught: \" << e.what () << '\\n';\n    return 0;\n  }\n  return 1;\n}\n\nint exceptions_in_module (void)\n{\n  std::cerr << \"exceptions_in_module\\n\";\n\n  if (lt_dlinit ())\n    {\n      std::cerr << \"init error: \" << lt_dlerror () << '\\n';\n      return 1;\n    }\n\n  // Some systems need RTLD_GLOBAL for exceptions to work in modules.\n  lt_dladvise advise;\n  if (lt_dladvise_init (&advise) || lt_dladvise_global (&advise))\n    {\n      std::cerr << \"error setting advise global\\n\";\n      return 1;\n    }\n\n  lt_dlhandle handle = lt_dlopenadvise (\"module.la\", advise);\n  if (handle == NULL)\n    {\n      std::cerr << \"dlopen failed: \" << lt_dlerror () << '\\n';\n      return 1;\n    }\n  lt_dladvise_destroy (&advise);\n\n  typedef int (*pfun) (void);\n  pfun pf = (pfun) lt_dlsym (handle, \"modfoo\");\n  if (pf == NULL)\n    {\n      std::cerr << \"dlsym failed: \" << lt_dlerror () << '\\n';\n      return 1;\n    }\n\n  bool exception_caught = false;\n  try {\n    (*pf) ();\n  }\n  catch (modexc e) {\n    std::cerr << \"caught: \" << e.what () << '\\n';\n    exception_caught = true;\n  }\n\n  /* Only close the module after all of its objects have gone out of scope. */\n  if (exception_caught)\n  {\n    if (lt_dlclose (handle))\n      {\n        std::cerr << \"dlclose failed: \" << lt_dlerror () << '\\n';\n\treturn 1;\n      }\n    if (lt_dlexit ())\n      {\n        std::cerr << \"lt_dlexit failed: \" << lt_dlerror () << '\\n';\n\treturn 1;\n      }\n    return 0;\n  }\n  return 1;\n}\n\nint main (void)\n{\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n\n  if (exceptions_in_prog ())\n    return 1;\n  if (exceptions_in_lib ())\n    return 1;\n  if (exceptions_in_module ())\n    return 1;\n  return 0;\n}\n]])\n\ninst=`pwd`/inst\nlibdir=$inst/lib\nbindir=$inst/bin\nmoddir=$inst/mod\nmkdir l m $inst $libdir $bindir $moddir\n\n# If the C++ compiler isn't capable, don't bother.\nAT_CHECK([$CXX $CPPFLAGS $CXXFLAGS -DUSING_COMMON_DLL -DUSING_MODULE_DLL -DUSING_LIB_DLL -c main.cpp || exit 77], [], [ignore], [ignore])\n\nAT_CHECK([$LIBTOOL --mode=compile --tag=CXX $CXX $CPPFLAGS $CXXFLAGS -c common.cpp],\n\t   [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=compile --tag=CXX $CXX $CPPFLAGS $CXXFLAGS -c lib.cpp],\n\t   [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=compile --tag=CXX $CXX $CPPFLAGS $CXXFLAGS -DUSING_COMMON_DLL -c module.cpp],\n\t   [], [ignore], [ignore])\n\nAT_CHECK([$LIBTOOL --mode=link --tag=CXX $CXX $CXXFLAGS $LDFLAGS -o l/libcommon.la ]dnl\n\t [common.lo -no-undefined -version-info 1:0:0 -rpath $libdir],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link --tag=CXX $CXX $CXXFLAGS $LDFLAGS -o l/liba.la ]dnl\n\t [lib.lo -no-undefined -version-info 1:0:0 -rpath $libdir],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link --tag=CXX $CXX $CXXFLAGS $LDFLAGS -o m/module.la ]dnl\n\t [module.lo l/libcommon.la -module -avoid-version -no-undefined -rpath $moddir],\n\t [], [ignore], [ignore])\n\n# We need -export-dynamic for the exception handling in modules to work.\nAT_CHECK([$LIBTOOL --mode=link --tag=CXX $CXX $CXXFLAGS $LDFLAGS -o main$EXEEXT ]dnl\n\t [main.$OBJEXT l/liba.la l/libcommon.la -dlopen m/module.la $LIBLTDL -export-dynamic],\n\t [], [ignore], [ignore])\n\nLT_AT_NOINST_EXEC_CHECK([./main], [-dlopen m/module.la], [], [ignore], [ignore])\n\nAT_CHECK([$LIBTOOL --mode=install cp l/libcommon.la $libdir],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp l/liba.la $libdir],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp m/module.la $moddir],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp main$EXEEXT $bindir],\n\t [], [ignore], [ignore])\nrm -rf l m main$EXEEXT\n\nLTDL_LIBRARY_PATH=$moddir\nexport LTDL_LIBRARY_PATH\nLT_AT_EXEC_CHECK([$bindir/main], [], [ignore], [ignore])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/testsuite.at": "# Process with autom4te to create an -*- Autotest -*- test suite.\n#\n#   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010 Free Software\n#   Foundation, Inc.\n#   Written by Gary V. Vaughan, 2004\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nm4_divert_push([PREPARE_TESTS])dnl\n: ${tst_dist=dist}\n: ${ACLOCAL=aclocal}\n: ${AUTOHEADER=autoheader}\n: ${AUTOCONF=autoconf}\n: ${AUTOMAKE=automake}\n: ${AUTORECONF=autoreconf}\ntest \"${ECHO+set}\" = set || ECHO=${as_echo-'printf %s\\n'}\n: ${ECHO=$as_echo}\nfor tool in ACLOCAL AUTOHEADER AUTOCONF AUTOMAKE AUTORECONF; do\n  if eval \\$$tool --version >/dev/null 2>&1; then :; else eval $tool=no; fi\ndone\nexport ACLOCAL AUTOHEADER AUTOCONF AUTOMAKE AUTORECONF\neval `$LIBTOOL --config | grep '^EGREP='`\neval `$LIBTOOL --config | $EGREP '^(host|host_os|host_alias|build|build_alias|to_host_file_cmd|to_tool_file_cmd)='`\nconfigure_options=--prefix=/nonexistent\nif test -n \"$host_alias\"; then\n  configure_options=\"$configure_options --host $host_alias\"\nfi\nif test -n \"$build_alias\"; then\n  configure_options=\"$configure_options --build $build_alias\"\nfi\nif test -n \"$to_host_file_cmd\"; then\n  configure_options=\"$configure_options lt_cv_to_host_file_cmd=$to_host_file_cmd\"\nfi\nif test -n \"$to_tool_file_cmd\"; then\n  configure_options=\"$configure_options lt_cv_to_tool_file_cmd=$to_tool_file_cmd\"\nfi\nif (FOO=bar; unset FOO) >/dev/null 2>&1; then\n  unset=unset\nelse\n  unset=false\nfi\n: ${mkdir_p=\"$abs_top_srcdir/libltdl/config/install-sh -d\"}\n# Fix relative paths in $lt_INSTALL\ncase $lt_INSTALL in\n  *libltdl/config/install-sh*)\n    lt_INSTALL=$abs_top_srcdir/libltdl/config/install-sh\n    ;;\nesac\n\n# Unset some MAKE... variables that may cause $MAKE to act like a\n# recursively invoked sub-make.  Any $MAKE invocation in a test is\n# conceptually an independent invocation.\nunset MFLAGS MAKEFLAGS MAKELEVEL __MKLVL__ MAKE_JOBS_FIFO\n\n# On AIX, shared libraries remain loaded in memory after use if they\n# are world-readable, until root issues slibclean.  On NFS, this causes\n# a testsuite rerun to fail to clean up test group directories.  Avoid\n# this with a suitable umask.  Do not do this on other systems, for\n# example HP-UX suffers unless shared libraries are mode 555.\ncase $host_os in\naix*) umask o-rwx ;;\nesac\nm4_divert_pop([PREPARE_TESTS])dnl\n\n\n# LT_AT_LIBTOOLIZE([ARGS])\n# ------------------------\nm4_define([LT_AT_LIBTOOLIZE],\n[$LIBTOOLIZE $1\nAT_KEYWORDS([libtoolize])\n])\n\n\n# _LIBTOOLIZE_TRANSFORM(FILE)\n# ---------------------------\n# Fix the expected output of installed libtoolize in presence of --program-*.\nm4_define([_LIBTOOLIZE_TRANSFORM],\n[lt_name=`$ECHO \"$LIBTOOLIZE\" | sed \"s,^.*/,,\"`\nsed \"s/libtoolize/$lt_name/g\ns|/usr/local/share/aclocal/|${tst_aclocaldir-$abs_top_srcdir/libltdl/m4}/|\" < $1 > $1.t\nmv -f $1.t $1\n])dnl\n\n\n# LT_AT_CHECK_LIBTOOLIZE(ARGS, [EXIT-STATUS = 0], [STDOUT = `'], [STDERR = `'])\n# -----------------------------------------------------------------------------\nm4_define([LT_AT_CHECK_LIBTOOLIZE],\n[m4_if([$3], [expout], [_LIBTOOLIZE_TRANSFORM([$3])])dnl\nm4_if([$4], [experr], [_LIBTOOLIZE_TRANSFORM([$4])])dnl\nAT_CHECK([LT_AT_LIBTOOLIZE([$1])],\n  [$2], [$3], [$4])\n])\n\n\n# LT_AT_ACLOCAL([OPTIONS])\n# --------------------------\nm4_define([LT_AT_ACLOCAL],\n[AT_CHECK([$ACLOCAL $1], [0], [ignore], [ignore])\nAT_XFAIL_IF([test \"$ACLOCAL\" = no])\nAT_KEYWORDS([automake])\n])\n\n\n# LT_AT_AUTOCONF([OPTIONS])\n# --------------------------\nm4_define([LT_AT_AUTOCONF],\n[AT_CHECK([$AUTOCONF $1], [0], [ignore], [ignore])\nAT_XFAIL_IF([test \"$AUTOCONF\" = no])\nAT_KEYWORDS([autoconf])\n])\n\n\n# LT_AT_AUTOMAKE([OPTIONS])\n# --------------------------\nm4_define([LT_AT_AUTOMAKE],\n[AT_CHECK([$AUTOMAKE $1], [0], [ignore], [stderr],\n  [AT_CHECK([grep 'require .*but have' stderr && (exit 77)], [1])])\nAT_XFAIL_IF([test \"$AUTOMAKE\" = no])\nAT_KEYWORDS([automake])\n])\n\n\n# LT_AT_AUTOHEADER([OPTIONS])\n# ---------------------------\nm4_define([LT_AT_AUTOHEADER],\n[AT_CHECK([$AUTOHEADER $1], [0], [ignore], [ignore])\nAT_XFAIL_IF([test \"$AUTOHEADER\" = no])\nAT_KEYWORDS([autoconf])\n])\n\n\n# LT_AT_AUTORECONF([OPTIONS])\n# --------------------------\nm4_define([LT_AT_AUTORECONF],\n[AT_CHECK([$AUTORECONF $1], [0], [ignore], [stderr],\n  [AT_CHECK([grep 'require .*but have' stderr && (exit 77)], [1])])\nAT_XFAIL_IF(\n  [case ,$AUTORECONF,$AUTOCONF,$AUTOHEADER,$ACLOCAL,$AUTOMAKE, in *,no,*) :;; *) false;; esac])\nAT_KEYWORDS([autoconf automake])\n])\n\n\n# LT_AT_CONFIGURE([OPTIONS], [CONFIGURE-SCRIPT])\n# ----------------------------------------------\n# Configure CONFIGURE-SCRIPT, defaulting to ./configure, with\n# additional OPTIONS.\nm4_define([LT_AT_CONFIGURE],\n[AT_CHECK([: ${CONFIG_SHELL=/bin/sh}; export CONFIG_SHELL; ]dnl\n\t  [$CONFIG_SHELL m4_default([$2], [./configure]) $configure_options $1],\n\t  [0], [ignore], [ignore])\n])\n\n\n# LT_AT_MAKE([TGTS], [VARS])\n# --------------------------\nm4_define([LT_AT_MAKE],\n[for target in m4_default([$1], [all])\ndo\n  AT_CHECK([$unset LIBTOOL LIBTOOLIZE; $MAKE $target $2], [0], [ignore], [ignore])\ndone\n])\n\n\n# LT_AT_BOOTSTRAP([LIBTOOLIZE-ARGS], [ACLOCAL-ARGS], [AUTOHEADER-ARGS],\n#\t[AUTOMAKE-ARGS], [AUTOCONF-ARGS], [CONFIGURE-ARGS], [MAKE-ARGS])\n# ----------------------------------------------------------------------\nm4_define([LT_AT_BOOTSTRAP],\n[m4_if([$1], [ignore], [], [LT_AT_LIBTOOLIZE([$1])])\nm4_if([$2], [ignore], [], [LT_AT_ACLOCAL([$2])])\nm4_if([$3], [ignore], [], [LT_AT_AUTOHEADER([$3])])\nm4_if([$4], [ignore], [], [LT_AT_AUTOMAKE([$4])])\nm4_if([$5], [ignore], [], [LT_AT_AUTOCONF([$5])])\nm4_if([$6], [ignore], [], [LT_AT_CONFIGURE([$6])])\nm4_if([$7], [ignore], [], [LT_AT_MAKE([$7])])\n])\n\n\n# LT_ESCAPE(ARG)\n# --------------\n# Escape command for output (expand only parameters).\nm4_define([LT_ESCAPE],\n[m4_bpatsubst([$1],\n\t     m4_dquote(m4_default([$2], [\\\"`])),\n\t     [\\\\\\&])])\n\n\n# LT_AT_CHECK\n# -----------\n# Wrapper around AT_CHECK that outputs the command first, with\n# parameters expanded.\nm4_define([LT_AT_CHECK],\n[echo \"LT_ESCAPE([$1])\"; AT_CHECK($@)])\n\n\n# LT_AT_HOST_DATA(FILE, CONTENTS)\n# -------------------------------\n# Ensure correct line ending for expected output of host executables.\nm4_define([LT_AT_HOST_DATA],\n[AT_DATA([$1], [$2])\ncase $host_os in mingw*)\n  while read -r l; do printf \"%s\\r\\n\" \"$l\"; done < $1 > $1.t\n  mv -f $1.t $1 ;;\nesac])\n\n\n# LT_AT_UNIFY_NL(FILE, [RESULT-FILE])\n# -----------------------------------\n# Ensure (text) FILE has predictable line endings.\n# If RESULT-FILE is given, FILE is left untouched. If not, convert in-place.\nm4_define([LT_AT_UNIFY_NL],\n[case $host_os in\n  mingw*)\n    tr -d '\\015' < $1 > m4_ifval([$2], [$2], [$1.t\n    mv -f $1.t $1]) ;; m4_ifval([$2], [\n  *)\n    cp $1 $2 ;;])\nesac])\n\n\n# LT_AT_NORMALIZE_COMPILER_OUTPUT(FILE, [RESULT-FILE])\n# ----------------------------------------------------\n# Normalize differences in compiler output stemming from, e.g.,\n# - distcc process numbers,\n# - ccache file location,\n# - newline encoding,\n# - location of the libtool script,\n# - error messages involving unstable temporary file names.\nm4_define([LT_AT_NORMALIZE_COMPILER_OUTPUT],\n[_ltbase=`$ECHO \"$LIBTOOL\" | sed 's,^.*/,,'`\n[sed \"/^distcc\\[[0-9]*\\]/d\n      /^$_ltbase: compile/d\n      s/\\(tmp\\/\\{1,\\}cc\\)\\([a-zA-Z0-9_]\\{1,\\}\\)/\\1-normalized-tmpname/g\" < $1 > $1.t]\nLT_AT_UNIFY_NL([$1.t], [m4_default([$2], [$1])])[]dnl\n])\n\n\n# LT_AT_EXEC_CHECK(EXECUTABLE, [STATUS = 0], [STDOUT], [STDERR],\n#\t\t   [ARGS-OR-STATUS-ADJUST])\n# --------------------------------------------------------------\n# Run EXECUTABLE ARGS-OR-STATUS-ADJUST.  STATUS, STDOUT, and STDERR are\n# handled as in AT_CHECK.\n# However, if we are cross-compiling, then SKIP instead of FAIL.\n# ARGS-OR-STATUS-ADJUST can also contain code like `|| (exit 1)'\n# to unify different possible exit status values.\nm4_define([LT_AT_EXEC_CHECK],\n[lt_exe=$1; if test -f \"$1$EXEEXT\"; then lt_exe=$lt_exe$EXEEXT; fi\nAT_CHECK([if \"$lt_exe\" $5; then :; else lt_status=$?; ]dnl\n\t [  m4_ifval([$2], [test $lt_status != $2 && ])]dnl\n\t [  test \"X$host\" != \"X$build\" && test -x \"$lt_exe\" && exit 77; ]dnl\n\t [  exit $lt_status; fi],[$2],[$3],[$4])\n])\n\n\n# LT_AT_NOINST_EXEC_CHECK(EXECUTABLE, [NOINST-MODULES],\n#\t\t\t  [STATUS = 0], [STDOUT], [STDERR],\n#\t\t\t  [ARGS-OR-STATUS-ADJUST])\n# ---------------------------------------------------------\n# Run EXECUTABLE ARGS-OR-STATUS-ADJUST using `libtool --mode=execute'\n# with `-dlopen' arguments in NOINST_MODULES.  STATUS, STDOUT, and\n# STDERR are handled as in AT_CHECK.\n# However, if we are cross-compiling, then SKIP instead of FAIL.\n# ARGS-OR-STATUS-ADJUST can also contain code like `|| (exit 1)'\n# to unify different possible exit status values.\nm4_define([LT_AT_NOINST_EXEC_CHECK],\n[lt_exe=$1; if test -f \"$1$EXEEXT\"; then lt_exe=$lt_exe$EXEEXT; fi\nAT_CHECK([if $LIBTOOL --mode=execute $2 \"$lt_exe\" $6; then :; else lt_status=$?; ]dnl\n\t [  m4_ifval([$3], [test $lt_status != $3 && ])]dnl\n\t [  test \"X$host\" != \"X$build\" && test -x \"$lt_exe\" && exit 77; ]dnl\n\t [  exit $lt_status; fi],[$3],[$4],[$5])\n])\n\n\n# LT_AT_TAG(TAG)\n# --------------\n# Declare that the language TAG will be used in this test.\n# Skips the test if the compiler is apparently not functional.\nm4_define([LT_AT_TAG],\n[AT_KEYWORDS([$1])\nAT_CHECK([{ test -n \"[$]$1\" && test \"X[$]$1\" != Xno; } || (exit 77)])\nm4_case([$1],\n  [CXX],\n  [AT_CHECK([test \"X$CXX\" != Xg++ || (g++ -v >/dev/null 2>&1) || (exit 77)])],\n  [GCJ],\n  [# There are just too many broken gcj installations out there, either missing\n   # libgcj.spec or unable to find it.  Skip the test for them.\n   AT_DATA([gcj_test.java],\n[[public class gcj_test {\n    public static void main(String[] argv) { }\n  }\n]])\n   AT_CHECK([$GCJ $GCJFLAGS -c gcj_test.java || exit 77],\n\t    [], [ignore], [ignore])])\n])\n\n\n# LT_AT_EXEC_TAG([TAG])\n# ---------------------\n# Declare that the language TAG will be used and compiled programs may be run.\n# Skips the test if the compiler is apparently not functional.\nm4_define([LT_AT_EXEC_TAG],\n[LT_AT_TAG([$1])\nm4_case([$1],\n  [GCJ],\n  [AT_CHECK([$GCJ $GCJFLAGS --main=gcj_test -o gcj_test$EXEEXT gcj_test.java ]dnl\n\t    [|| exit 77], [], [ignore], [ignore])\n   AT_CHECK([./gcj_test$EXEEXT || exit 77], [], [ignore], [ignore])])\n])\n\n\n# LT_AT_MVDIR(SRC, DEST)\n# ----------------------\n# Move contents of a directory recursively.\n# Avoid `mv DIR ...' due to issues with non-deletable shared libraries\n# on AIX on NFS mounts.  We cannot use slibclean as non-superuser.\nm4_define([LT_AT_MVDIR],\n[$mkdir_p $2\n(cd $1 && find . -type d) | (cd $2 && xargs $mkdir_p)\nfor file in `cd $1 && find . -type f -print -o -type l -print`\ndo\n  mv $1/$file $2/$file\ndone\nrm -rf $1\n])\n\n## ------------------------------- ##\n## Files for a small ltdl project. ##\n## ------------------------------- ##\n\n# _LTDL_PROJECT_FILES([LTDL-DIR])\n# -------------------------------\n# LTDL-DIR is needed to generate a correct Makefile.  If the argument\n# is omitted, then no Makefile is created.\nm4_define([_LTDL_PROJECT_FILES],\n[AT_DATA([module.c],\n[[#ifdef __cplusplus\nextern \"C\"\n#endif\nconst char *\nhello (void)\n{\n  return \"Hello!\";\n}\n]])\n\nAT_DATA([main.c],\n[[#include <stdio.h>\n#include \"ltdl.h\"\n\nint\nmain ()\n{\n  lt_dlhandle module;\n  const char *(*func) (void) = 0;\n  int status = 1;\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n  if (lt_dlinit() != 0) {\n    fprintf (stderr, \"error during initialisation: %s\\n\", lt_dlerror());\n    return 1;\n  }\n\n  module = lt_dlopen(\"./module.la\");\n  if (!module) {\n    fprintf (stderr, \"error dlopening ./module.la: %s\\n\", lt_dlerror());\n    goto finish;\n  }\n\n  func = (const char *(*)(void)) lt_dlsym (module, \"hello\");\n  if (!func) {\n    fprintf (stderr, \"error fetching func: %s\\n\", lt_dlerror());\n    goto finish;\n  }\n\n  printf (\"%s\\n\", (*func) ());\n  status = 0;\n\nfinish:\n  if (lt_dlexit() != 0) {\n    fprintf (stderr, \"error during finalisation: %s\\n\", lt_dlerror());\n    status = 1;\n  }\n\n  return status;\n}\n]])\n\nm4_pushdef([_ARG_DIR], m4_bpatsubst([$1], [/*$]))\nm4_ifval([$1],\n[AT_DATA([Makefile],\n[[top_builddir\t= .\nLIBTOOL\t\t= ./]_ARG_DIR[/libtool\nINCLUDES\t= -I./]_ARG_DIR[\nMODFLAGS\t= -module -avoid-version -no-undefined\n\nLTCOMPILE = $(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=compile \\\n        $(CC) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)\nLTLINK    = $(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=link \\\n        $(CC) $(CFLAGS) $(LDFLAGS)\n\nTARGETS\t\t= ]_ARG_DIR[/libltdlc.la module.la ltdldemo$(EXEEXT)\n\nall: $(TARGETS)\n\n]_ARG_DIR[/libltdlc.la: $(LIBTOOL) ]_ARG_DIR[/Makefile\n\tMAKE='$(MAKE)'; test -n \"$$MAKE\" || MAKE=make; \\\n\tcd ]_ARG_DIR[ && $$MAKE CC=\"$(CC)\" LIBTOOLFLAGS=\"$(LIBTOOLFLAGS)\" \\\n\t  CPPFLAGS=\"$(CPPFLAGS)\" CFLAGS=\"$(CFLAGS)\" LDFLAGS=\"$(LDFLAGS)\" \\\n          CONFIGURE_OPTIONS=\"$(CONFIGURE_OPTIONS)\"\n\n$(LIBTOOL): ]_ARG_DIR[/Makefile\n\n]_ARG_DIR[/Makefile:\n\tcd ]_ARG_DIR[ && CONFIG_SHELL=\"$(SHELL)\" $(SHELL) ./configure $(CONFIGURE_OPTIONS)\n\nltdldemo$(EXEEXT): $(LIBTOOL) module.la ]_ARG_DIR[/libltdlc.la main.lo\n\t$(LTLINK) -o ltdldemo$(EXEEXT) main.lo -dlopen module.la ./]_ARG_DIR[/libltdlc.la\n\nmain.lo: $(LIBTOOL) main.c\n\t$(LTCOMPILE) -c main.c\n\nmodule.la: $(LIBTOOL) module.lo\n\t$(LTLINK) -o module.la module.lo $(MODFLAGS) -rpath /dev/null\n\nmodule.lo: $(LIBTOOL) module.c\n\t$(LTCOMPILE) -c module.c\n]])\ncat >> Makefile <<EOF\nSHELL = $SHELL \nEOF\n])\nm4_popdef([_ARG_DIR])\n])# _LTDL_PROJECT_FILES\n\n\n# We use `dnl' in zillions of places...\nm4_pattern_allow([^dnl$])\n\n# We exercise these tools.\ndnl AT_TESTED([grep autoreconf autom4te automake])\n\n# Enable colored output if available.\nm4_ifdef([AT_COLOR_TESTS], [AT_COLOR_TESTS])\n\nAT_INIT\n\n## ----------- ##\n## The suite.  ##\n## ----------- ##\n\n# Tests will be appended here by the Makefile rule.\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/demo/dlmain.c": "/* dlmain.c -- hello test program that uses simulated dynamic linking\n\n   Copyright (C) 1996-1999, 2004, 2006, 2007, 2010 Free Software\n   Foundation, Inc.\n\n   This file is part of GNU Libtool.\n\nGNU Libtool is free software; you can redistribute it and/or\nmodify it under the terms of the GNU General Public License as\npublished by the Free Software Foundation; either version 2 of\nthe License, or (at your option) any later version.\n\nGNU Libtool is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with GNU Libtool; see the file COPYING.  If not, a copy\ncan be downloaded from  http://www.gnu.org/licenses/gpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"foo.h\"\n#include <stdio.h>\n#include <string.h>\n\n#define lt_preloaded_symbols lt__PROGRAM__LTX_preloaded_symbols\n\ntypedef struct\n{\n  const char *name;\n  lt_ptr_t address;\n} lt_dlsymlist;\n\nextern LT_DLSYM_CONST lt_dlsymlist lt_preloaded_symbols[];\n\nint\nmain ()\n{\n  const lt_dlsymlist *s;\n  int (*pfoo)() = 0;\n  int (*phello)() = 0;\n  int *pnothing = 0;\n\n  printf (\"Welcome to *modular* GNU Hell!\\n\");\n\n  /* Look up the symbols we require for this demonstration. */\n  s = lt_preloaded_symbols;\n  while (s->name)\n    {\n      if (s->address) {\n        const char *name = s->name;\n        printf (\"found symbol: %s\\n\", name);\n        if (!strcmp (\"hello\", name))\n \t  phello = (int(*)())s->address;\n        else if (!strcmp (\"foo\", name))\n  \t  pfoo = (int(*)())s->address;\n        else if (!strcmp (\"nothing\", name))\n#ifndef _WIN32\n\t  /* In an ideal world we could do this... */\n  \t  pnothing = (int*)s->address;\n#else /* !_WIN32 */\n\t  /* In an ideal world a shared lib would be able to export data */\n\t  pnothing = (int*)&nothing;\n#endif\n      } else\n        printf (\"found file: %s\\n\", s->name);\n      s ++;\n    }\n\n  /* Try assigning to the nothing variable. */\n  if (pnothing)\n    *pnothing = 1;\n  else\n    fprintf (stderr, \"did not find the `nothing' variable\\n\");\n\n  /* Just call the functions and check return values. */\n  if (pfoo)\n    {\n      if ((*pfoo) () != FOO_RET)\n\treturn 1;\n    }\n  else\n    fprintf (stderr, \"did not find the `foo' function\\n\");\n\n  if (phello)\n    {\n      if ((*phello) () != HELLO_RET)\n\treturn 3;\n    }\n  else\n    fprintf (stderr, \"did not find the `hello' function\\n\");\n\n  return 0;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/pdemo/longer_file_name_dlmain.c": "/* dlmain.c -- hello test program that uses simulated dynamic linking\n\n   Copyright (C) 1996-1999, 2004, 2006, 2007, 2010 Free Software\n   Foundation, Inc.\n\n   This file is part of GNU Libtool.\n\nGNU Libtool is free software; you can redistribute it and/or\nmodify it under the terms of the GNU General Public License as\npublished by the Free Software Foundation; either version 2 of\nthe License, or (at your option) any later version.\n\nGNU Libtool is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with GNU Libtool; see the file COPYING.  If not, a copy\ncan be downloaded from  http://www.gnu.org/licenses/gpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"foo.h\"\n#include <stdio.h>\n#include <string.h>\n\n#define lt_preloaded_symbols lt__PROGRAM__LTX_preloaded_symbols\n\ntypedef struct\n{\n  const char *name;\n  lt_ptr_t address;\n} lt_dlsymlist;\n\nextern LT_DLSYM_CONST lt_dlsymlist lt_preloaded_symbols[];\n\nint\nmain (int argc, char **argv)\n{\n  const lt_dlsymlist *s;\n  int (*pfoo)() = 0;\n  int (*phello)() = 0;\n  int *pnothing = 0;\n\n  printf (\"Welcome to *modular* GNU Hell!\\n\");\n\n  /* Look up the symbols we require for this demonstration. */\n  s = lt_preloaded_symbols;\n  while (s->name)\n    {\n      if (s->address) {\n        const char *name = s->name;\n        printf (\"found symbol: %s\\n\", name);\n        if (!strcmp (\"hello\", name))\n \t  phello = (int(*)())s->address;\n        else if (!strcmp (\"foo\", name))\n  \t  pfoo = (int(*)())s->address;\n        else if (!strcmp (\"nothing\", name))\n#ifndef _WIN32\n\t  /* In an ideal world we could do this... */\n  \t  pnothing = (int*)s->address;\n#else /* !_WIN32 */\n\t  /* In an ideal world a shared lib would be able to export data */\n\t  pnothing = (int*)&nothing;\n#endif\n      } else\n        printf (\"found file: %s\\n\", s->name);\n      s ++;\n    }\n\n  /* Try assigning to the nothing variable. */\n  if (pnothing)\n    *pnothing = 1;\n  else\n    fprintf (stderr, \"did not find the `nothing' variable\\n\");\n\n  /* Just call the functions and check return values. */\n  if (pfoo)\n    {\n      if ((*pfoo) () != FOO_RET)\n\treturn 1;\n    }\n  else\n    fprintf (stderr, \"did not find the `foo' function\\n\");\n\n  if (phello)\n    {\n      if ((*phello) () != HELLO_RET)\n\treturn 3;\n    }\n  else\n    fprintf (stderr, \"did not find the `hello' function\\n\");\n\n  return 0;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/mdemo/mlib.c": "/* mlib.c -- mlib library\n\n   Copyright (C) 2002, 2006 Free Software Foundation, Inc.\n   Written by Greg Eisenhauer, 2002\n   Extracted from mdemo.c\n\n   This file is part of GNU Libtool.\n\nGNU Libtool is free software; you can redistribute it and/or\nmodify it under the terms of the GNU General Public License as\npublished by the Free Software Foundation; either version 2 of\nthe License, or (at your option) any later version.\n\nGNU Libtool is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with GNU Libtool; see the file COPYING.  If not, a copy\ncan be downloaded from  http://www.gnu.org/licenses/gpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"foo.h\"\n#include \"ltdl.h\"\n#include <stdio.h>\n\nint\ntest_dl (char *filename)\n{\n  lt_dlhandle handle;\t\n  const lt_dlinfo *info;\n  int (*pfoo1)() = 0;\n  int (*pfoo2)() = 0;\n  int (*phello)() = 0;\n  int *pnothing = 0;\n  int ret = 0;\n\n  handle = lt_dlopen(filename);\n  if (!handle) {\n    fprintf (stderr, \"can't open the module %s!\\n\", filename);\n    fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n    return 1;\n  }\n\n  info = lt_dlgetinfo(handle);\n  if (!info) {\n    fprintf (stderr, \"can't get module info: %s\\n\", lt_dlerror());\n    return 1;\n  }\n  if (info->name) {\n    printf (\"module name: %s\\n\", info->name);\n  } else {\n    printf (\"module is not a libtool module\\n\");\n  }\n  printf (\"module filename: %s\\n\", info->filename);\n  printf (\"module reference count: %i\\n\", info->ref_count);\n  \n  phello = (int(*)())lt_dlsym(handle, \"hello\");  \n  if (phello)\n    {\n      int value = (*phello) ();\n      \n      printf (\"hello returned: %i\\n\", value);\n      if (value == HELLO_RET)\n        printf(\"hello is ok!\\n\");\n    }\n  else\n    {\n      fprintf (stderr, \"did not find the `hello' function\\n\");\n      fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n      ret = 1;\n    }\n\n  pnothing = (int*)lt_dlsym(handle, \"nothing\");  \n  /* Try assigning to the nothing variable. */\n  if (pnothing)\n    *pnothing = 1;\n  else\n    {\n      fprintf (stderr, \"did not find the `nothing' variable\\n\");\n      fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n      ret = 1;\n    }\n\n  pfoo1 = (int(*)())lt_dlsym(handle, \"foo1\");  \n  /* Just call the functions and check return values. */\n  if (pfoo1)\n    {\n      if ((*pfoo1) () == FOO_RET)\n        printf(\"foo1 is ok!\\n\");\n      else\n\tret = 1;\n    }\n  else {\n    pfoo2 = (int(*)())lt_dlsym(handle, \"foo2\");  \n    if (pfoo2)\n      {\n        if ((*pfoo2) () == FOO_RET)\n          printf(\"foo2 is ok!\\n\");\n        else ret = 1;\n      }\n    else\n      {\n        fprintf (stderr, \"did not find any of the `foo' functions\\n\");\n        fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n        ret = 1;\n      }\n  }\n  lt_dlclose(handle);\n  return ret;\n}\n\nint \nmlib_func (int argc, char **argv)\n{\n  int ret = 0;\n  int i;\n  /*\n   * Would be nice if this somehow worked for libraries, not just executables.\n   * LTDL_SET_PRELOADED_SYMBOLS();\n   */\n  if (lt_dlinit() != 0) {\n    fprintf (stderr, \"error during initialization: %s\\n\", lt_dlerror());\n    return 1;\n  }\n\n  for (i = 1; i < argc; i++)\n    if (test_dl(argv[i]))\n       ret = 1;\n\n  lt_dlexit();\n  return ret;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/tests/mdemo/main.c": "/* main.c -- mdemo test program\n\n   Copyright (C) 1998-2000, 2006, 2007 Free Software Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   This file is part of GNU Libtool.\n\nGNU Libtool is free software; you can redistribute it and/or\nmodify it under the terms of the GNU General Public License as\npublished by the Free Software Foundation; either version 2 of\nthe License, or (at your option) any later version.\n\nGNU Libtool is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with GNU Libtool; see the file COPYING.  If not, a copy\ncan be downloaded from  http://www.gnu.org/licenses/gpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"foo.h\"\n#include \"ltdl.h\"\n#include <stdio.h>\n#include <string.h>\n\nLT_BEGIN_C_DECLS\nextern int myfunc (void);\nLT_END_C_DECLS\n\nint\ntest_dl (char *filename, int test_ext)\n{\n  lt_dlhandle handle;\t\n  const lt_dlinfo *info;\n  int (*pfoo1)() = 0;\n  int (*pfoo2)() = 0;\n  int (*phello)() = 0;\n  int *pnothing = 0;\n  int ret = 0;\n\n  if (test_ext)\n    handle = lt_dlopenext (filename);\n  else\n    handle = lt_dlopen (filename);\n\n  if (!handle) {\n    fprintf (stderr, \"can't open the module %s!\\n\", filename);\n    fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n    return 1;\n  }\n\n  info = lt_dlgetinfo(handle);\n  if (!info) {\n    fprintf (stderr, \"can't get module info: %s\\n\", lt_dlerror());\n    return 1;\n  }\n  if (info->name) {\n    printf (\"module name: %s\\n\", info->name);\n  } else {\n    printf (\"module is not a libtool module\\n\");\n  }\n  printf (\"module filename: %s\\n\", info->filename);\n  printf (\"module reference count: %i\\n\", info->ref_count);\n  \n  phello = (int(*)())lt_dlsym(handle, \"hello\");  \n  if (phello)\n    {\n      int value = (*phello) ();\n      \n      printf (\"hello returned: %i\\n\", value);\n      if (value == HELLO_RET)\n        printf(\"hello is ok!\\n\");\n    }\n  else\n    {\n      fprintf (stderr, \"did not find the `hello' function\\n\");\n      fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n      ret = 1;\n    }\n\n  pnothing = (int*)lt_dlsym(handle, \"nothing\");  \n  /* Try assigning to the nothing variable. */\n  if (pnothing)\n    *pnothing = 1;\n  else\n    {\n      fprintf (stderr, \"did not find the `nothing' variable\\n\");\n      fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n      ret = 1;\n    }\n\n  pfoo1 = (int(*)())lt_dlsym(handle, \"foo1\");  \n  /* Just call the functions and check return values. */\n  if (pfoo1)\n    {\n      if ((*pfoo1) () == FOO_RET)\n        printf(\"foo1 is ok!\\n\");\n      else\n\tret = 1;\n    }\n  else {\n    pfoo2 = (int(*)())lt_dlsym(handle, \"foo2\");  \n    if (pfoo2)\n      {\n        if ((*pfoo2) () == FOO_RET)\n          printf(\"foo2 is ok!\\n\");\n        else ret = 1;\n      }\n    else\n      {\n        fprintf (stderr, \"did not find any of the `foo' functions\\n\");\n        fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n        ret = 1;\n      }\n  }\n  lt_dlclose(handle);\n  return ret;\n}\n\nint\nmyfunc ()\n{\n  return HELLO_RET;\n}\n\nint myvar;\n\nint\ntest_dlself ()\n{\n  lt_dlhandle handle;\t\n  int (*pmyfunc)() = 0;\n  int *pmyvar = 0;\n  int ret = 0;\n\n  handle = lt_dlopen(0);\n  if (!handle) {\n    fprintf (stderr, \"can't dlopen the program!\\n\");\n    fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n    return 1;\n  }\n\n  pmyfunc = (int(*)())lt_dlsym(handle, \"myfunc\");\n  if (pmyfunc)\n    {\n      int value = (*pmyfunc) ();\n      \n      printf (\"myfunc returned: %i\\n\", value);\n      if (value == HELLO_RET)\n        printf(\"myfunc is ok!\\n\");\n    }\n  else\n    {\n      fprintf (stderr, \"did not find the `myfunc' function\\n\");\n      fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n      ret = 1;\n    }\n\n  pmyvar = (int*)lt_dlsym(handle, \"myvar\");  \n  /* Try assigning to the variable. */\n  if (pmyvar)\n    *pmyvar = 1;\n  else\n    {\n      fprintf (stderr, \"did not find the `myvar' variable\\n\");\n      fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n      ret = 1;\n    }\n\n  lt_dlclose(handle);\n  return ret;\n}\n\nstatic int\ncallback (const char *filename, void *data)\n{\n  printf (\"%s: %s\\n\", (char *)data, filename);\n  return 0;\n}\n\nstatic int\ntry_iterate (const char *search_path)\n{\n  char *s = \"try_iterate\";\n  return lt_dlforeachfile (search_path, callback, s);\n}\n\n/* cheap dirname clone.  We require a '/' separator, nonempty and large\n   enough input, not ending with '/', and we will overwrite the input. */\nstatic char *\nmy_dirname (char *path)\n{\n  char *p = strrchr (path, '/');\n  if (p)\n    *p = '\\0';\n  else\n    {\n      path[0] = '.';\n      path[1] = '\\0';\n    }\n  return path;\n}\n\nint\nmain (int argc, char **argv)\n{\n  int i;\n  int ret = 0;\n  char *p;\n\n  printf (\"Welcome to GNU libtool mdemo!\\n\");\n\n  if (argc < 2) {\n    fprintf (stderr, \"usage: %s module [module...]\\n\", argv[0]);\n  }\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n  if (lt_dlinit() != 0) {\n    fprintf (stderr, \"error during initialization: %s\\n\", lt_dlerror());\n    return 1;\n  }\n\n  for (i = 1; i < argc; i++)\n  {\n    if (test_dl(argv[i], 0))\n       ret = 1;\n    p = strrchr(argv[i], '.');\n    if (p)\n      {\n\t*p = '\\0';\n\tif (test_dl(argv[i], 1))\n\t  ret = 1;\n\t*p = '.';\n      }\n  }\n\n  if (test_dlself())\n    ret = 1;\n\n  for (i = 1; i < argc; i++)\n    if (argv[i][0] != '\\0')\n      {\n\tmy_dirname (argv[i]);\n\tif (try_iterate (argv[i]))\n\t  ret = 1;\n      }\n\n  lt_dlexit();\n  return ret;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/libltdl/ltdl.h": "/* ltdl.h -- generic dlopen functions\n\n   Copyright (C) 1998-2000, 2004, 2005,\n                 2007, 2008 Free Software Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n/* Only include this header file once. */\n#if !defined(LTDL_H)\n#define LTDL_H 1\n\n#include <libltdl/lt_system.h>\n#include <libltdl/lt_error.h>\n#include <libltdl/lt_dlloader.h>\n\nLT_BEGIN_C_DECLS\n\n\n/* LT_STRLEN can be used safely on NULL pointers.  */\n#define LT_STRLEN(s)\t(((s) && (s)[0]) ? strlen (s) : 0)\n\n\f\n/* --- DYNAMIC MODULE LOADING API --- */\n\n\ntypedef\tstruct lt__handle *lt_dlhandle;\t/* A loaded module.  */\n\n/* Initialisation and finalisation functions for libltdl. */\nLT_SCOPE int\t    lt_dlinit\t\t(void);\nLT_SCOPE int\t    lt_dlexit\t\t(void);\n\n/* Module search path manipulation.  */\nLT_SCOPE int\t    lt_dladdsearchdir\t (const char *search_dir);\nLT_SCOPE int\t    lt_dlinsertsearchdir (const char *before,\n\t\t\t\t\t\t  const char *search_dir);\nLT_SCOPE int \t    lt_dlsetsearchpath\t (const char *search_path);\nLT_SCOPE const char *lt_dlgetsearchpath\t (void);\nLT_SCOPE int\t    lt_dlforeachfile\t (\n\t\t\tconst char *search_path,\n\t\t\tint (*func) (const char *filename, void *data),\n\t\t\tvoid *data);\n\n/* User module loading advisors.  */\nLT_SCOPE int\t    lt_dladvise_init\t (lt_dladvise *advise);\nLT_SCOPE int\t    lt_dladvise_destroy  (lt_dladvise *advise);\nLT_SCOPE int\t    lt_dladvise_ext\t (lt_dladvise *advise);\nLT_SCOPE int\t    lt_dladvise_resident (lt_dladvise *advise);\nLT_SCOPE int\t    lt_dladvise_local\t (lt_dladvise *advise);\nLT_SCOPE int\t    lt_dladvise_global   (lt_dladvise *advise);\nLT_SCOPE int\t    lt_dladvise_preload\t (lt_dladvise *advise);\n\n/* Portable libltdl versions of the system dlopen() API. */\nLT_SCOPE lt_dlhandle lt_dlopen\t\t(const char *filename);\nLT_SCOPE lt_dlhandle lt_dlopenext\t(const char *filename);\nLT_SCOPE lt_dlhandle lt_dlopenadvise\t(const char *filename,\n\t\t\t\t\t lt_dladvise advise);\nLT_SCOPE void *\t    lt_dlsym\t\t(lt_dlhandle handle, const char *name);\nLT_SCOPE const char *lt_dlerror\t\t(void);\nLT_SCOPE int\t    lt_dlclose\t\t(lt_dlhandle handle);\n\n\n\n/* --- PRELOADED MODULE SUPPORT --- */\n\n\n/* A preopened symbol. Arrays of this type comprise the exported\n   symbols for a dlpreopened module. */\ntypedef struct {\n  const char *name;\n  void       *address;\n} lt_dlsymlist;\n\ntypedef int lt_dlpreload_callback_func (lt_dlhandle handle);\n\nLT_SCOPE int\tlt_dlpreload\t     (const lt_dlsymlist *preloaded);\nLT_SCOPE int\tlt_dlpreload_default (const lt_dlsymlist *preloaded);\nLT_SCOPE int\tlt_dlpreload_open    (const char *originator,\n\t\t\t\t      lt_dlpreload_callback_func *func);\n\n#define lt_preloaded_symbols\tlt__PROGRAM__LTX_preloaded_symbols\n/* Ensure C linkage.  */\nextern LT_DLSYM_CONST lt_dlsymlist lt__PROGRAM__LTX_preloaded_symbols[];\n\n#define LTDL_SET_PRELOADED_SYMBOLS() \\\n\tlt_dlpreload_default(lt_preloaded_symbols)\n\n\n\n\f\n/* --- MODULE INFORMATION --- */\n\n\n/* Associating user data with loaded modules. */\ntypedef void * lt_dlinterface_id;\ntypedef int lt_dlhandle_interface (lt_dlhandle handle, const char *id_string);\n\nLT_SCOPE lt_dlinterface_id lt_dlinterface_register (const char *id_string,\n\t\t\t\t\t  lt_dlhandle_interface *iface);\nLT_SCOPE void\tlt_dlinterface_free (lt_dlinterface_id key);\nLT_SCOPE void *\tlt_dlcaller_set_data  (lt_dlinterface_id key,\n\t\t\t\t\t  lt_dlhandle handle, void *data);\nLT_SCOPE void *\tlt_dlcaller_get_data  (lt_dlinterface_id key,\n\t\t\t\t\t  lt_dlhandle handle);\n\n\n/* Read only information pertaining to a loaded module. */\ntypedef\tstruct {\n  char *\tfilename;\t/* file name */\n  char *\tname;\t\t/* module name */\n  int\t\tref_count;\t/* number of times lt_dlopened minus\n\t\t\t\t   number of times lt_dlclosed. */\n  unsigned int\tis_resident:1;\t/* module can't be unloaded. */\n  unsigned int\tis_symglobal:1;\t/* module symbols can satisfy\n\t\t\t\t   subsequently loaded modules.  */\n  unsigned int\tis_symlocal:1;\t/* module symbols are only available\n\t\t\t\t   locally. */\n} lt_dlinfo;\n\nLT_SCOPE const lt_dlinfo *lt_dlgetinfo\t    (lt_dlhandle handle);\n\nLT_SCOPE lt_dlhandle\tlt_dlhandle_iterate (lt_dlinterface_id iface,\n\t\t\t\t\t     lt_dlhandle place);\nLT_SCOPE lt_dlhandle\tlt_dlhandle_fetch   (lt_dlinterface_id iface,\n\t\t\t\t\t     const char *module_name);\nLT_SCOPE int\t\tlt_dlhandle_map\t    (lt_dlinterface_id iface,\n\t\t\t\tint (*func) (lt_dlhandle handle, void *data),\n\t\t\t\tvoid *data);\n\n\n\n/* Deprecated module residency management API. */\nLT_SCOPE int\t    lt_dlmakeresident\t(lt_dlhandle handle);\nLT_SCOPE int\t    lt_dlisresident\t(lt_dlhandle handle);\n\n#define lt_ptr void *\n\nLT_END_C_DECLS\n\n#endif /*!defined(LTDL_H)*/\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/libltdl/ltdl.c": "/* ltdl.c -- system independent dlopen wrapper\n\n   Copyright (C) 1998, 1999, 2000, 2004, 2005, 2006,\n\t\t 2007, 2008, 2011 Free Software Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_system.h\"\n#include \"lt_dlloader.h\"\n\n\n/* --- MANIFEST CONSTANTS --- */\n\n\n/* Standard libltdl search path environment variable name  */\n#undef  LTDL_SEARCHPATH_VAR\n#define LTDL_SEARCHPATH_VAR\t\"LTDL_LIBRARY_PATH\"\n\n/* Standard libtool archive file extension.  */\n#undef  LT_ARCHIVE_EXT\n#define LT_ARCHIVE_EXT\t\".la\"\n\n/* max. filename length */\n#if !defined(LT_FILENAME_MAX)\n#  define LT_FILENAME_MAX\t1024\n#endif\n\n#if !defined(LT_LIBEXT)\n#  define LT_LIBEXT \"a\"\n#endif\n\n#if !defined(LT_LIBPREFIX)\n#  define LT_LIBPREFIX \"lib\"\n#endif\n\n/* This is the maximum symbol size that won't require malloc/free */\n#undef\tLT_SYMBOL_LENGTH\n#define LT_SYMBOL_LENGTH\t128\n\n/* This accounts for the _LTX_ separator */\n#undef\tLT_SYMBOL_OVERHEAD\n#define LT_SYMBOL_OVERHEAD\t5\n\n/* Various boolean flags can be stored in the flags field of an\n   lt_dlhandle... */\n#define LT_DLIS_RESIDENT(handle)  ((handle)->info.is_resident)\n#define LT_DLIS_SYMGLOBAL(handle) ((handle)->info.is_symglobal)\n#define LT_DLIS_SYMLOCAL(handle)  ((handle)->info.is_symlocal)\n\n\nstatic\tconst char\tobjdir[]\t\t= LT_OBJDIR;\nstatic\tconst char\tarchive_ext[]\t\t= LT_ARCHIVE_EXT;\nstatic  const char\tlibext[]\t\t= LT_LIBEXT;\nstatic  const char\tlibprefix[]\t\t= LT_LIBPREFIX;\n#if defined(LT_MODULE_EXT)\nstatic\tconst char\tshlib_ext[]\t\t= LT_MODULE_EXT;\n#endif\n/* If the loadable module suffix is not the same as the linkable\n * shared library suffix, this will be defined. */\n#if defined(LT_SHARED_EXT)\nstatic\tconst char\tshared_ext[]\t\t= LT_SHARED_EXT;\n#endif\n#if defined(LT_DLSEARCH_PATH)\nstatic\tconst char\tsys_dlsearch_path[]\t= LT_DLSEARCH_PATH;\n#endif\n\n\n\n\f\n/* --- DYNAMIC MODULE LOADING --- */\n\n\n/* The type of a function used at each iteration of  foreach_dirinpath().  */\ntypedef int\tforeach_callback_func (char *filename, void *data1,\n\t\t\t\t       void *data2);\n/* foreachfile_callback itself calls a function of this type: */\ntypedef int\tfile_worker_func      (const char *filename, void *data);\n\n\nstatic\tint\tforeach_dirinpath     (const char *search_path,\n\t\t\t\t       const char *base_name,\n\t\t\t\t       foreach_callback_func *func,\n\t\t\t\t       void *data1, void *data2);\nstatic\tint\tfind_file_callback    (char *filename, void *data1,\n\t\t\t\t       void *data2);\nstatic\tint\tfind_handle_callback  (char *filename, void *data,\n\t\t\t\t       void *ignored);\nstatic\tint\tforeachfile_callback  (char *filename, void *data1,\n\t\t\t\t       void *data2);\n\n\nstatic\tint     canonicalize_path     (const char *path, char **pcanonical);\nstatic\tint\targzize_path\t      (const char *path,\n\t\t\t\t       char **pargz, size_t *pargz_len);\nstatic\tFILE   *find_file\t      (const char *search_path,\n\t\t\t\t       const char *base_name, char **pdir);\nstatic\tlt_dlhandle *find_handle      (const char *search_path,\n\t\t\t\t       const char *base_name,\n\t\t\t\t       lt_dlhandle *handle,\n\t\t\t\t       lt_dladvise advise);\nstatic\tint\tfind_module\t      (lt_dlhandle *handle, const char *dir,\n\t\t\t\t       const char *libdir, const char *dlname,\n\t\t\t\t       const char *old_name, int installed,\n\t\t\t\t       lt_dladvise advise);\nstatic  int     has_library_ext       (const char *filename);\nstatic\tint\tload_deplibs\t      (lt_dlhandle handle,  char *deplibs);\nstatic\tint\ttrim\t\t      (char **dest, const char *str);\nstatic\tint\ttry_dlopen\t      (lt_dlhandle *handle,\n\t\t\t\t       const char *filename, const char *ext,\n\t\t\t\t       lt_dladvise advise);\nstatic\tint\ttryall_dlopen\t      (lt_dlhandle *handle,\n\t\t\t\t       const char *filename,\n\t\t\t\t       lt_dladvise padvise,\n\t\t\t\t       const lt_dlvtable *vtable);\nstatic\tint\tunload_deplibs\t      (lt_dlhandle handle);\nstatic\tint\tlt_argz_insert\t      (char **pargz, size_t *pargz_len,\n\t\t\t\t       char *before, const char *entry);\nstatic\tint\tlt_argz_insertinorder (char **pargz, size_t *pargz_len,\n\t\t\t\t       const char *entry);\nstatic\tint\tlt_argz_insertdir     (char **pargz, size_t *pargz_len,\n\t\t\t\t       const char *dirnam, struct dirent *dp);\nstatic\tint\tlt_dlpath_insertdir   (char **ppath, char *before,\n\t\t\t\t       const char *dir);\nstatic\tint\tlist_files_by_dir     (const char *dirnam,\n\t\t\t\t       char **pargz, size_t *pargz_len);\nstatic\tint\tfile_not_found\t      (void);\n\n#ifdef HAVE_LIBDLLOADER\nstatic\tint\tloader_init_callback  (lt_dlhandle handle);\n#endif /* HAVE_LIBDLLOADER */\n\nstatic\tint\tloader_init\t      (lt_get_vtable *vtable_func,\n\t\t\t\t       lt_user_data data);\n\nstatic\tchar\t       *user_search_path= 0;\nstatic\tlt_dlhandle\thandles\t= 0;\nstatic\tint\t\tinitialized\t= 0;\n\n/* Our memory failure callback sets the error message to be passed back\n   up to the client, so we must be careful to return from mallocation\n   callers if allocation fails (as this callback returns!!).  */\nvoid\nlt__alloc_die_callback (void)\n{\n  LT__SETERROR (NO_MEMORY);\n}\n\n#ifdef HAVE_LIBDLLOADER\n/* This function is called to initialise each preloaded module loader,\n   and hook it into the list of loaders to be used when attempting to\n   dlopen an application module.  */\nstatic int\nloader_init_callback (lt_dlhandle handle)\n{\n  lt_get_vtable *vtable_func = (lt_get_vtable *) lt_dlsym (handle, \"get_vtable\");\n  return loader_init (vtable_func, 0);\n}\n#endif /* HAVE_LIBDLLOADER */\n\nstatic int\nloader_init (lt_get_vtable *vtable_func, lt_user_data data)\n{\n  const lt_dlvtable *vtable = 0;\n  int errors = 0;\n\n  if (vtable_func)\n    {\n      vtable = (*vtable_func) (data);\n    }\n\n  /* lt_dlloader_add will LT__SETERROR if it fails.  */\n  errors += lt_dlloader_add (vtable);\n\n  assert (errors || vtable);\n\n  if ((!errors) && vtable->dlloader_init)\n    {\n      if ((*vtable->dlloader_init) (vtable->dlloader_data))\n\t{\n\t  LT__SETERROR (INIT_LOADER);\n\t  ++errors;\n\t}\n    }\n\n  return errors;\n}\n\n/* Bootstrap the loader loading with the preopening loader.  */\n#define get_vtable\t\tpreopen_LTX_get_vtable\n#define preloaded_symbols\tLT_CONC3(lt_, LTDLOPEN, _LTX_preloaded_symbols)\n\nLT_BEGIN_C_DECLS\nLT_SCOPE const lt_dlvtable *\tget_vtable (lt_user_data data);\nLT_END_C_DECLS\n#ifdef HAVE_LIBDLLOADER\nextern LT_DLSYM_CONST lt_dlsymlist preloaded_symbols[];\n#endif\n\n/* Initialize libltdl. */\nint\nlt_dlinit (void)\n{\n  int\terrors\t= 0;\n\n  /* Initialize only at first call. */\n  if (++initialized == 1)\n    {\n      lt__alloc_die\t= lt__alloc_die_callback;\n      handles\t\t= 0;\n      user_search_path\t= 0; /* empty search path */\n\n      /* First set up the statically loaded preload module loader, so\n\t we can use it to preopen the other loaders we linked in at\n\t compile time.  */\n      errors += loader_init (get_vtable, 0);\n\n      /* Now open all the preloaded module loaders, so the application\n\t can use _them_ to lt_dlopen its own modules.  */\n#ifdef HAVE_LIBDLLOADER\n      if (!errors)\n\t{\n\t  errors += lt_dlpreload (preloaded_symbols);\n\t}\n\n      if (!errors)\n\t{\n\t  errors += lt_dlpreload_open (LT_STR(LTDLOPEN), loader_init_callback);\n\t}\n#endif /* HAVE_LIBDLLOADER */\n    }\n\n#ifdef LT_DEBUG_LOADERS\n  lt_dlloader_dump();\n#endif\n\n  return errors;\n}\n\nint\nlt_dlexit (void)\n{\n  /* shut down libltdl */\n  lt_dlloader *loader   = 0;\n  lt_dlhandle  handle   = handles;\n  int\t       errors   = 0;\n\n  if (!initialized)\n    {\n      LT__SETERROR (SHUTDOWN);\n      ++errors;\n      goto done;\n    }\n\n  /* shut down only at last call. */\n  if (--initialized == 0)\n    {\n      int\tlevel;\n\n      while (handles && LT_DLIS_RESIDENT (handles))\n\t{\n\t  handles = handles->next;\n\t}\n\n      /* close all modules */\n      for (level = 1; handle; ++level)\n\t{\n\t  lt_dlhandle cur = handles;\n\t  int saw_nonresident = 0;\n\n\t  while (cur)\n\t    {\n\t      lt_dlhandle tmp = cur;\n\t      cur = cur->next;\n\t      if (!LT_DLIS_RESIDENT (tmp))\n\t\t{\n\t\t  saw_nonresident = 1;\n\t\t  if (tmp->info.ref_count <= level)\n\t\t    {\n\t\t      if (lt_dlclose (tmp))\n\t\t\t{\n\t\t\t  ++errors;\n\t\t\t}\n\t\t      /* Make sure that the handle pointed to by 'cur' still exists.\n\t\t\t lt_dlclose recursively closes dependent libraries which removes\n\t\t\t them from the linked list.  One of these might be the one\n\t\t\t pointed to by 'cur'.  */\n\t\t      if (cur)\n\t\t\t{\n\t\t\t  for (tmp = handles; tmp; tmp = tmp->next)\n\t\t\t    if (tmp == cur)\n\t\t\t      break;\n\t\t\t  if (! tmp)\n\t\t\t    cur = handles;\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\t  /* done if only resident modules are left */\n\t  if (!saw_nonresident)\n\t    break;\n\t}\n\n      /* When removing loaders, we can only find out failure by testing\n\t the error string, so avoid a spurious one from an earlier\n\t failed command. */\n      if (!errors)\n\tLT__SETERRORSTR (0);\n\n      /* close all loaders */\n      for (loader = (lt_dlloader *) lt_dlloader_next (NULL); loader;)\n\t{\n\t  lt_dlloader *next   = (lt_dlloader *) lt_dlloader_next (loader);\n\t  lt_dlvtable *vtable = (lt_dlvtable *) lt_dlloader_get (loader);\n\n\t  if ((vtable = lt_dlloader_remove ((char *) vtable->name)))\n\t    {\n\t      FREE (vtable);\n\t    }\n\t  else\n\t    {\n\t      /* ignore errors due to resident modules */\n\t      const char *err;\n\t      LT__GETERROR (err);\n\t      if (err)\n\t\t++errors;\n\t    }\n\n\t  loader = next;\n\t}\n\n      FREE(user_search_path);\n    }\n\n done:\n  return errors;\n}\n\n\n/* Try VTABLE or, if VTABLE is NULL, all available loaders for FILENAME.\n   If the library is not successfully loaded, return non-zero.  Otherwise,\n   the dlhandle is stored at the address given in PHANDLE.  */\nstatic int\ntryall_dlopen (lt_dlhandle *phandle, const char *filename,\n\t       lt_dladvise advise, const lt_dlvtable *vtable)\n{\n  lt_dlhandle\thandle\t\t= handles;\n  const char *\tsaved_error\t= 0;\n  int\t\terrors\t\t= 0;\n\n#ifdef LT_DEBUG_LOADERS\n  fprintf (stderr, \"tryall_dlopen (%s, %s)\\n\",\n\t   filename ? filename : \"(null)\",\n\t   vtable ? vtable->name : \"(ALL)\");\n#endif\n\n  LT__GETERROR (saved_error);\n\n  /* check whether the module was already opened */\n  for (;handle; handle = handle->next)\n    {\n      if ((handle->info.filename == filename) /* dlopen self: 0 == 0 */\n\t  || (handle->info.filename && filename\n\t      && streq (handle->info.filename, filename)))\n\t{\n\t  break;\n\t}\n    }\n\n  if (handle)\n    {\n      ++handle->info.ref_count;\n      *phandle = handle;\n      goto done;\n    }\n\n  handle = *phandle;\n  if (filename)\n    {\n      /* Comment out the check of file permissions using access.\n\t This call seems to always return -1 with error EACCES.\n      */\n      /* We need to catch missing file errors early so that\n\t file_not_found() can detect what happened.\n      if (access (filename, R_OK) != 0)\n\t{\n\t  LT__SETERROR (FILE_NOT_FOUND);\n\t  ++errors;\n\t  goto done;\n\t} */\n\n      handle->info.filename = lt__strdup (filename);\n      if (!handle->info.filename)\n\t{\n\t  ++errors;\n\t  goto done;\n\t}\n    }\n  else\n    {\n      handle->info.filename = 0;\n    }\n\n  {\n    lt_dlloader loader = lt_dlloader_next (0);\n    const lt_dlvtable *loader_vtable;\n\n    do\n      {\n\tif (vtable)\n\t  loader_vtable = vtable;\n\telse\n\t  loader_vtable = lt_dlloader_get (loader);\n\n#ifdef LT_DEBUG_LOADERS\n\tfprintf (stderr, \"Calling %s->module_open (%s)\\n\",\n\t\t (loader_vtable && loader_vtable->name) ? loader_vtable->name : \"(null)\",\n\t\t filename ? filename : \"(null)\");\n#endif\n\thandle->module = (*loader_vtable->module_open) (loader_vtable->dlloader_data,\n\t\t\t\t\t\t\tfilename, advise);\n#ifdef LT_DEBUG_LOADERS\n\tfprintf (stderr, \"  Result: %s\\n\",\n\t\t handle->module ? \"Success\" : \"Failed\");\n#endif\n\n\tif (handle->module != 0)\n\t  {\n\t    if (advise)\n\t      {\n\t\thandle->info.is_resident  = advise->is_resident;\n\t\thandle->info.is_symglobal = advise->is_symglobal;\n\t\thandle->info.is_symlocal  = advise->is_symlocal;\n\t      }\n\t    break;\n\t  }\n      }\n    while (!vtable && (loader = lt_dlloader_next (loader)));\n\n    /* If VTABLE was given but couldn't open the module, or VTABLE wasn't\n       given but we exhausted all loaders without opening the module, bail\n       out!  */\n    if ((vtable && !handle->module)\n\t|| (!vtable && !loader))\n      {\n\tFREE (handle->info.filename);\n\t++errors;\n\tgoto done;\n      }\n\n    handle->vtable = loader_vtable;\n  }\n\n  LT__SETERRORSTR (saved_error);\n\n done:\n  return errors;\n}\n\n\nstatic int\ntryall_dlopen_module (lt_dlhandle *handle, const char *prefix,\n\t\t      const char *dirname, const char *dlname,\n\t\t      lt_dladvise advise)\n{\n  int      error\t= 0;\n  char     *filename\t= 0;\n  size_t   filename_len\t= 0;\n  size_t   dirname_len\t= LT_STRLEN (dirname);\n\n  assert (handle);\n  assert (dirname);\n  assert (dlname);\n#if defined(LT_DIRSEP_CHAR)\n  /* Only canonicalized names (i.e. with DIRSEP chars already converted)\n     should make it into this function:  */\n  assert (strchr (dirname, LT_DIRSEP_CHAR) == 0);\n#endif\n\n  if (dirname_len > 0)\n    if (dirname[dirname_len -1] == '/')\n      --dirname_len;\n  filename_len = dirname_len + 1 + LT_STRLEN (dlname);\n\n  /* Allocate memory, and combine DIRNAME and MODULENAME into it.\n     The PREFIX (if any) is handled below.  */\n  filename  = MALLOC (char, filename_len + 1);\n  if (!filename)\n    return 1;\n\n  sprintf (filename, \"%.*s/%s\", (int) dirname_len, dirname, dlname);\n\n  /* Now that we have combined DIRNAME and MODULENAME, if there is\n     also a PREFIX to contend with, simply recurse with the arguments\n     shuffled.  Otherwise, attempt to open FILENAME as a module.  */\n  if (prefix)\n    {\n      error += tryall_dlopen_module (handle, (const char *) 0,\n\t\t\t\t     prefix, filename, advise);\n    }\n  else if (tryall_dlopen (handle, filename, advise, 0) != 0)\n    {\n      ++error;\n    }\n\n  FREE (filename);\n  return error;\n}\n\nstatic int\nfind_module (lt_dlhandle *handle, const char *dir, const char *libdir,\n\t     const char *dlname,  const char *old_name, int installed,\n\t     lt_dladvise advise)\n{\n  /* Try to open the old library first; if it was dlpreopened,\n     we want the preopened version of it, even if a dlopenable\n     module is available.  */\n  if (old_name && tryall_dlopen (handle, old_name,\n\t\t\t  advise, lt_dlloader_find (\"lt_preopen\") ) == 0)\n    {\n      return 0;\n    }\n\n  /* Try to open the dynamic library.  */\n  if (dlname)\n    {\n      /* try to open the installed module */\n      if (installed && libdir)\n\t{\n\t  if (tryall_dlopen_module (handle, (const char *) 0,\n\t\t\t\t    libdir, dlname, advise) == 0)\n\t    return 0;\n\t}\n\n      /* try to open the not-installed module */\n      if (!installed)\n\t{\n\t  if (tryall_dlopen_module (handle, dir, objdir,\n\t\t\t\t    dlname, advise) == 0)\n\t    return 0;\n\t}\n\n      /* maybe it was moved to another directory */\n      {\n\t  if (dir && (tryall_dlopen_module (handle, (const char *) 0,\n\t\t\t\t\t    dir, dlname, advise) == 0))\n\t    return 0;\n      }\n    }\n\n  return 1;\n}\n\n\nstatic int\ncanonicalize_path (const char *path, char **pcanonical)\n{\n  char *canonical = 0;\n\n  assert (path && *path);\n  assert (pcanonical);\n\n  canonical = MALLOC (char, 1+ LT_STRLEN (path));\n  if (!canonical)\n    return 1;\n\n  {\n    size_t dest = 0;\n    size_t src;\n    for (src = 0; path[src] != LT_EOS_CHAR; ++src)\n      {\n\t/* Path separators are not copied to the beginning or end of\n\t   the destination, or if another separator would follow\n\t   immediately.  */\n\tif (path[src] == LT_PATHSEP_CHAR)\n\t  {\n\t    if ((dest == 0)\n\t\t|| (path[1+ src] == LT_PATHSEP_CHAR)\n\t\t|| (path[1+ src] == LT_EOS_CHAR))\n\t      continue;\n\t  }\n\n\t/* Anything other than a directory separator is copied verbatim.  */\n\tif ((path[src] != '/')\n#if defined(LT_DIRSEP_CHAR)\n\t    && (path[src] != LT_DIRSEP_CHAR)\n#endif\n\t    )\n\t  {\n\t    canonical[dest++] = path[src];\n\t  }\n\t/* Directory separators are converted and copied only if they are\n\t   not at the end of a path -- i.e. before a path separator or\n\t   NULL terminator.  */\n\telse if ((path[1+ src] != LT_PATHSEP_CHAR)\n\t\t && (path[1+ src] != LT_EOS_CHAR)\n#if defined(LT_DIRSEP_CHAR)\n\t\t && (path[1+ src] != LT_DIRSEP_CHAR)\n#endif\n\t\t && (path[1+ src] != '/'))\n\t  {\n\t    canonical[dest++] = '/';\n\t  }\n      }\n\n    /* Add an end-of-string marker at the end.  */\n    canonical[dest] = LT_EOS_CHAR;\n  }\n\n  /* Assign new value.  */\n  *pcanonical = canonical;\n\n  return 0;\n}\n\nstatic int\nargzize_path (const char *path, char **pargz, size_t *pargz_len)\n{\n  error_t error;\n\n  assert (path);\n  assert (pargz);\n  assert (pargz_len);\n\n  if ((error = argz_create_sep (path, LT_PATHSEP_CHAR, pargz, pargz_len)))\n    {\n      switch (error)\n\t{\n\tcase ENOMEM:\n\t  LT__SETERROR (NO_MEMORY);\n\t  break;\n\tdefault:\n\t  LT__SETERROR (UNKNOWN);\n\t  break;\n\t}\n\n      return 1;\n    }\n\n  return 0;\n}\n\n/* Repeatedly call FUNC with each LT_PATHSEP_CHAR delimited element\n   of SEARCH_PATH and references to DATA1 and DATA2, until FUNC returns\n   non-zero or all elements are exhausted.  If BASE_NAME is non-NULL,\n   it is appended to each SEARCH_PATH element before FUNC is called.  */\nstatic int\nforeach_dirinpath (const char *search_path, const char *base_name,\n\t\t   foreach_callback_func *func, void *data1, void *data2)\n{\n  int\t result\t\t= 0;\n  size_t filenamesize\t= 0;\n  size_t lenbase\t= LT_STRLEN (base_name);\n  size_t argz_len\t= 0;\n  char *argz\t\t= 0;\n  char *filename\t= 0;\n  char *canonical\t= 0;\n\n  if (!search_path || !*search_path)\n    {\n      LT__SETERROR (FILE_NOT_FOUND);\n      goto cleanup;\n    }\n\n  if (canonicalize_path (search_path, &canonical) != 0)\n    goto cleanup;\n\n  if (argzize_path (canonical, &argz, &argz_len) != 0)\n    goto cleanup;\n\n  {\n    char *dir_name = 0;\n    while ((dir_name = argz_next (argz, argz_len, dir_name)))\n      {\n\tsize_t lendir = LT_STRLEN (dir_name);\n\n\tif (1+ lendir + lenbase >= filenamesize)\n\t{\n\t  FREE (filename);\n\t  filenamesize\t= 1+ lendir + 1+ lenbase; /* \"/d\" + '/' + \"f\" + '\\0' */\n\t  filename\t= MALLOC (char, filenamesize);\n\t  if (!filename)\n\t    goto cleanup;\n\t}\n\n\tassert (filenamesize > lendir);\n\tstrcpy (filename, dir_name);\n\n\tif (base_name && *base_name)\n\t  {\n\t    if (filename[lendir -1] != '/')\n\t      filename[lendir++] = '/';\n\t    strcpy (filename +lendir, base_name);\n\t  }\n\n\tif ((result = (*func) (filename, data1, data2)))\n\t  {\n\t    break;\n\t  }\n      }\n  }\n\n cleanup:\n  FREE (argz);\n  FREE (canonical);\n  FREE (filename);\n\n  return result;\n}\n\n/* If FILEPATH can be opened, store the name of the directory component\n   in DATA1, and the opened FILE* structure address in DATA2.  Otherwise\n   DATA1 is unchanged, but DATA2 is set to a pointer to NULL.  */\nstatic int\nfind_file_callback (char *filename, void *data1, void *data2)\n{\n  char\t     **pdir\t= (char **) data1;\n  FILE\t     **pfile\t= (FILE **) data2;\n  int\t     is_done\t= 0;\n\n  assert (filename && *filename);\n  assert (pdir);\n  assert (pfile);\n\n  if ((*pfile = fopen (filename, LT_READTEXT_MODE)))\n    {\n      char *dirend = strrchr (filename, '/');\n\n      if (dirend > filename)\n\t*dirend   = LT_EOS_CHAR;\n\n      FREE (*pdir);\n      *pdir   = lt__strdup (filename);\n      is_done = (*pdir == 0) ? -1 : 1;\n    }\n\n  return is_done;\n}\n\nstatic FILE *\nfind_file (const char *search_path, const char *base_name, char **pdir)\n{\n  FILE *file = 0;\n\n  foreach_dirinpath (search_path, base_name, find_file_callback, pdir, &file);\n\n  return file;\n}\n\nstatic int\nfind_handle_callback (char *filename, void *data, void *data2)\n{\n  lt_dlhandle  *phandle\t\t= (lt_dlhandle *) data;\n  int\t\tnotfound\t= access (filename, R_OK);\n  lt_dladvise   advise\t\t= (lt_dladvise) data2;\n\n  /* Bail out if file cannot be read...  */\n  if (notfound)\n    return 0;\n\n  /* Try to dlopen the file, but do not continue searching in any\n     case.  */\n  if (tryall_dlopen (phandle, filename, advise, 0) != 0)\n    *phandle = 0;\n\n  return 1;\n}\n\n/* If HANDLE was found return it, otherwise return 0.  If HANDLE was\n   found but could not be opened, *HANDLE will be set to 0.  */\nstatic lt_dlhandle *\nfind_handle (const char *search_path, const char *base_name,\n\t     lt_dlhandle *phandle, lt_dladvise advise)\n{\n  if (!search_path)\n    return 0;\n\n  if (!foreach_dirinpath (search_path, base_name, find_handle_callback,\n\t\t\t  phandle, advise))\n    return 0;\n\n  return phandle;\n}\n\n#if !defined(LTDL_DLOPEN_DEPLIBS)\nstatic int\nload_deplibs (lt_dlhandle handle, char * LT__UNUSED deplibs)\n{\n  handle->depcount = 0;\n  return 0;\n}\n\n#else /* defined(LTDL_DLOPEN_DEPLIBS) */\nstatic int\nload_deplibs (lt_dlhandle handle, char *deplibs)\n{\n  char\t*p, *save_search_path = 0;\n  int   depcount = 0;\n  int\ti;\n  char\t**names = 0;\n  int\terrors = 0;\n\n  handle->depcount = 0;\n\n  if (!deplibs)\n    {\n      return errors;\n    }\n  ++errors;\n\n  if (user_search_path)\n    {\n      save_search_path = lt__strdup (user_search_path);\n      if (!save_search_path)\n\tgoto cleanup;\n    }\n\n  /* extract search paths and count deplibs */\n  p = deplibs;\n  while (*p)\n    {\n      if (!isspace ((unsigned char) *p))\n\t{\n\t  char *end = p+1;\n\t  while (*end && !isspace((unsigned char) *end))\n\t    {\n\t      ++end;\n\t    }\n\n\t  if (strncmp(p, \"-L\", 2) == 0 || strncmp(p, \"-R\", 2) == 0)\n\t    {\n\t      char save = *end;\n\t      *end = 0; /* set a temporary string terminator */\n\t      if (lt_dladdsearchdir(p+2))\n\t\t{\n\t\t  goto cleanup;\n\t\t}\n\t      *end = save;\n\t    }\n\t  else\n\t    {\n\t      ++depcount;\n\t    }\n\n\t  p = end;\n\t}\n      else\n\t{\n\t  ++p;\n\t}\n    }\n\n\n  if (!depcount)\n    {\n      errors = 0;\n      goto cleanup;\n    }\n\n  names = MALLOC (char *, depcount);\n  if (!names)\n    goto cleanup;\n\n  /* now only extract the actual deplibs */\n  depcount = 0;\n  p = deplibs;\n  while (*p)\n    {\n      if (isspace ((unsigned char) *p))\n\t{\n\t  ++p;\n\t}\n      else\n\t{\n\t  char *end = p+1;\n\t  while (*end && !isspace ((unsigned char) *end))\n\t    {\n\t      ++end;\n\t    }\n\n\t  if (strncmp(p, \"-L\", 2) != 0 && strncmp(p, \"-R\", 2) != 0)\n\t    {\n\t      char *name;\n\t      char save = *end;\n\t      *end = 0; /* set a temporary string terminator */\n\t      if (strncmp(p, \"-l\", 2) == 0)\n\t\t{\n\t\t  size_t name_len = 3+ /* \"lib\" */ LT_STRLEN (p + 2);\n\t\t  name = MALLOC (char, 1+ name_len);\n\t\t  if (name)\n\t\t    sprintf (name, \"lib%s\", p+2);\n\t\t}\n\t      else\n\t\tname = lt__strdup(p);\n\n\t      if (!name)\n\t\tgoto cleanup_names;\n\n\t      names[depcount++] = name;\n\t      *end = save;\n\t    }\n\t  p = end;\n\t}\n    }\n\n  /* load the deplibs (in reverse order)\n     At this stage, don't worry if the deplibs do not load correctly,\n     they may already be statically linked into the loading application\n     for instance.  There will be a more enlightening error message\n     later on if the loaded module cannot resolve all of its symbols.  */\n  if (depcount)\n    {\n      lt_dlhandle cur = handle;\n      int\tj = 0;\n\n      cur->deplibs = MALLOC (lt_dlhandle, depcount);\n      if (!cur->deplibs)\n\tgoto cleanup_names;\n\n      for (i = 0; i < depcount; ++i)\n\t{\n\t  cur->deplibs[j] = lt_dlopenext(names[depcount-1-i]);\n\t  if (cur->deplibs[j])\n\t    {\n\t      ++j;\n\t    }\n\t}\n\n      cur->depcount\t= j;\t/* Number of successfully loaded deplibs */\n      errors\t\t= 0;\n    }\n\n cleanup_names:\n  for (i = 0; i < depcount; ++i)\n    {\n      FREE (names[i]);\n    }\n\n cleanup:\n  FREE (names);\n  /* restore the old search path */\n  if (save_search_path) {\n    MEMREASSIGN (user_search_path, save_search_path);\n  }\n\n  return errors;\n}\n#endif /* defined(LTDL_DLOPEN_DEPLIBS) */\n\nstatic int\nunload_deplibs (lt_dlhandle handle)\n{\n  int i;\n  int errors = 0;\n  lt_dlhandle cur = handle;\n\n  if (cur->depcount)\n    {\n      for (i = 0; i < cur->depcount; ++i)\n\t{\n\t  if (!LT_DLIS_RESIDENT (cur->deplibs[i]))\n\t    {\n\t      errors += lt_dlclose (cur->deplibs[i]);\n\t    }\n\t}\n      FREE (cur->deplibs);\n    }\n\n  return errors;\n}\n\nstatic int\ntrim (char **dest, const char *str)\n{\n  /* remove the leading and trailing \"'\" from str\n     and store the result in dest */\n  const char *end   = strrchr (str, '\\'');\n  size_t len\t    = LT_STRLEN (str);\n  char *tmp;\n\n  FREE (*dest);\n\n  if (!end || end == str)\n    return 1;\n\n  if (len > 3 && str[0] == '\\'')\n    {\n      tmp = MALLOC (char, end - str);\n      if (!tmp)\n\treturn 1;\n\n      memcpy(tmp, &str[1], (end - str) - 1);\n      tmp[(end - str) - 1] = LT_EOS_CHAR;\n      *dest = tmp;\n    }\n  else\n    {\n      *dest = 0;\n    }\n\n  return 0;\n}\n\n/* Read the .la file FILE. */\nstatic int\nparse_dotla_file(FILE *file, char **dlname, char **libdir, char **deplibs,\n    char **old_name, int *installed)\n{\n  int\t\terrors = 0;\n  size_t\tline_len = LT_FILENAME_MAX;\n  char *\tline = MALLOC (char, line_len);\n\n  if (!line)\n    {\n      LT__SETERROR (FILE_NOT_FOUND);\n      return 1;\n    }\n\n  while (!feof (file))\n    {\n      line[line_len-2] = '\\0';\n      if (!fgets (line, (int) line_len, file))\n\t{\n\t  break;\n\t}\n\n      /* Handle the case where we occasionally need to read a line\n\t that is longer than the initial buffer size.\n\t Behave even if the file contains NUL bytes due to corruption. */\n      while (line[line_len-2] != '\\0' && line[line_len-2] != '\\n' && !feof (file))\n\t{\n\t  line = REALLOC (char, line, line_len *2);\n\t  if (!line)\n\t    {\n\t      ++errors;\n\t      goto cleanup;\n\t    }\n\t  line[line_len * 2 - 2] = '\\0';\n\t  if (!fgets (&line[line_len -1], (int) line_len +1, file))\n\t    {\n\t      break;\n\t    }\n\t  line_len *= 2;\n\t}\n\n      if (line[0] == '\\n' || line[0] == '#')\n\t{\n\t  continue;\n\t}\n\n#undef  STR_DLNAME\n#define STR_DLNAME\t\"dlname=\"\n      if (strncmp (line, STR_DLNAME, sizeof (STR_DLNAME) - 1) == 0)\n\t{\n\t  errors += trim (dlname, &line[sizeof (STR_DLNAME) - 1]);\n\t}\n\n#undef  STR_OLD_LIBRARY\n#define STR_OLD_LIBRARY\t\"old_library=\"\n      else if (strncmp (line, STR_OLD_LIBRARY,\n\t    sizeof (STR_OLD_LIBRARY) - 1) == 0)\n\t{\n\t  errors += trim (old_name, &line[sizeof (STR_OLD_LIBRARY) - 1]);\n\t}\n\n      /* Windows native tools do not understand the POSIX paths we store\n\t in libdir. */\n#undef  STR_LIBDIR\n#define STR_LIBDIR\t\"libdir=\"\n      else if (strncmp (line, STR_LIBDIR, sizeof (STR_LIBDIR) - 1) == 0)\n\t{\n\t  errors += trim (libdir, &line[sizeof(STR_LIBDIR) - 1]);\n#ifdef __WINDOWS__\n\t  /* Disallow following unix-style paths on MinGW.  */\n\t  if (*libdir && (**libdir == '/' || **libdir == '\\\\'))\n\t    **libdir = '\\0';\n#endif\n\t}\n\n#undef  STR_DL_DEPLIBS\n#define STR_DL_DEPLIBS\t\"dependency_libs=\"\n      else if (strncmp (line, STR_DL_DEPLIBS,\n\t    sizeof (STR_DL_DEPLIBS) - 1) == 0)\n\t{\n\t  errors += trim (deplibs, &line[sizeof (STR_DL_DEPLIBS) - 1]);\n\t}\n      else if (streq (line, \"installed=yes\\n\"))\n\t{\n\t  *installed = 1;\n\t}\n      else if (streq (line, \"installed=no\\n\"))\n\t{\n\t  *installed = 0;\n\t}\n\n#undef  STR_LIBRARY_NAMES\n#define STR_LIBRARY_NAMES \"library_names=\"\n      else if (!*dlname && strncmp (line, STR_LIBRARY_NAMES,\n\t    sizeof (STR_LIBRARY_NAMES) - 1) == 0)\n\t{\n\t  char *last_libname;\n\t  errors += trim (dlname, &line[sizeof (STR_LIBRARY_NAMES) - 1]);\n\t  if (!errors\n\t      && *dlname\n\t      && (last_libname = strrchr (*dlname, ' ')) != 0)\n\t    {\n\t      last_libname = lt__strdup (last_libname + 1);\n\t      if (!last_libname)\n\t\t{\n\t\t  ++errors;\n\t\t  goto cleanup;\n\t\t}\n\t      MEMREASSIGN (*dlname, last_libname);\n\t    }\n\t}\n\n      if (errors)\n\tbreak;\n    }\ncleanup:\n  FREE (line);\n  return errors;\n}\n\n\n/* Try to open FILENAME as a module. */\nstatic int\ntry_dlopen (lt_dlhandle *phandle, const char *filename, const char *ext,\n\t    lt_dladvise advise)\n{\n  const char *\tsaved_error\t= 0;\n  char *\tarchive_name\t= 0;\n  char *\tcanonical\t= 0;\n  char *\tbase_name\t= 0;\n  char *\tdir\t\t= 0;\n  char *\tname\t\t= 0;\n  char *        attempt\t\t= 0;\n  int\t\terrors\t\t= 0;\n  lt_dlhandle\tnewhandle;\n\n  assert (phandle);\n  assert (*phandle == 0);\n\n#ifdef LT_DEBUG_LOADERS\n  fprintf (stderr, \"try_dlopen (%s, %s)\\n\",\n\t   filename ? filename : \"(null)\",\n\t   ext ? ext : \"(null)\");\n#endif\n\n  LT__GETERROR (saved_error);\n\n  /* dlopen self? */\n  if (!filename)\n    {\n      *phandle = (lt_dlhandle) lt__zalloc (sizeof (struct lt__handle));\n      if (*phandle == 0)\n\treturn 1;\n\n      newhandle\t= *phandle;\n\n      /* lt_dlclose()ing yourself is very bad!  Disallow it.  */\n      newhandle->info.is_resident = 1;\n\n      if (tryall_dlopen (&newhandle, 0, advise, 0) != 0)\n\t{\n\t  FREE (*phandle);\n\t  return 1;\n\t}\n\n      goto register_handle;\n    }\n\n  assert (filename && *filename);\n\n  if (ext)\n    {\n      attempt = MALLOC (char, LT_STRLEN (filename) + LT_STRLEN (ext) + 1);\n      if (!attempt)\n\treturn 1;\n\n      sprintf(attempt, \"%s%s\", filename, ext);\n    }\n  else\n    {\n      attempt = lt__strdup (filename);\n      if (!attempt)\n\treturn 1;\n    }\n\n  /* Doing this immediately allows internal functions to safely\n     assume only canonicalized paths are passed.  */\n  if (canonicalize_path (attempt, &canonical) != 0)\n    {\n      ++errors;\n      goto cleanup;\n    }\n\n  /* If the canonical module name is a path (relative or absolute)\n     then split it into a directory part and a name part.  */\n  base_name = strrchr (canonical, '/');\n  if (base_name)\n    {\n      size_t dirlen = (1+ base_name) - canonical;\n\n      dir = MALLOC (char, 1+ dirlen);\n      if (!dir)\n\t{\n\t  ++errors;\n\t  goto cleanup;\n\t}\n\n      strncpy (dir, canonical, dirlen);\n      dir[dirlen] = LT_EOS_CHAR;\n\n      ++base_name;\n    }\n  else\n    MEMREASSIGN (base_name, canonical);\n\n  assert (base_name && *base_name);\n\n  ext = strrchr (base_name, '.');\n  if (!ext)\n    {\n      ext = base_name + LT_STRLEN (base_name);\n    }\n\n  /* extract the module name from the file name */\n  name = MALLOC (char, ext - base_name + 1);\n  if (!name)\n    {\n      ++errors;\n      goto cleanup;\n    }\n\n  /* canonicalize the module name */\n  {\n    int i;\n    for (i = 0; i < ext - base_name; ++i)\n      {\n\tif (isalnum ((unsigned char)(base_name[i])))\n\t  {\n\t    name[i] = base_name[i];\n\t  }\n\telse\n\t  {\n\t    name[i] = '_';\n\t  }\n      }\n    name[ext - base_name] = LT_EOS_CHAR;\n  }\n\n  /* Before trawling through the filesystem in search of a module,\n     check whether we are opening a preloaded module.  */\n  if (!dir)\n    {\n      const lt_dlvtable *vtable\t= lt_dlloader_find (\"lt_preopen\");\n\n      if (vtable)\n\t{\n\t  /* libprefix + name + \".\" + libext + NULL */\n\t  archive_name = MALLOC (char, strlen (libprefix) + LT_STRLEN (name) + strlen (libext) + 2);\n\t  *phandle = (lt_dlhandle) lt__zalloc (sizeof (struct lt__handle));\n\n\t  if ((*phandle == NULL) || (archive_name == NULL))\n\t    {\n\t      ++errors;\n\t      goto cleanup;\n\t    }\n\t  newhandle = *phandle;\n\n\t  /* Preloaded modules are always named according to their old\n\t     archive name.  */\n\t  if (strncmp(name, \"lib\", 3) == 0)\n\t    {\n\t      sprintf (archive_name, \"%s%s.%s\", libprefix, name + 3, libext);\n\t    }\n\t  else\n\t    {\n\t      sprintf (archive_name, \"%s.%s\", name, libext);\n\t    }\n\n\t  if (tryall_dlopen (&newhandle, archive_name, advise, vtable) == 0)\n\t    {\n\t      goto register_handle;\n\t    }\n\n\t  /* If we're still here, there was no matching preloaded module,\n\t     so put things back as we found them, and continue searching.  */\n\t  FREE (*phandle);\n\t  newhandle = NULL;\n\t}\n    }\n\n  /* If we are allowing only preloaded modules, and we didn't find\n     anything yet, give up on the search here.  */\n  if (advise && advise->try_preload_only)\n    {\n      goto cleanup;\n    }\n\n  /* Check whether we are opening a libtool module (.la extension).  */\n  if (ext && streq (ext, archive_ext))\n    {\n      /* this seems to be a libtool module */\n      FILE *\tfile\t = 0;\n      char *\tdlname\t = 0;\n      char *\told_name = 0;\n      char *\tlibdir\t = 0;\n      char *\tdeplibs\t = 0;\n\n      /* if we can't find the installed flag, it is probably an\n\t installed libtool archive, produced with an old version\n\t of libtool */\n      int\tinstalled = 1;\n\n      /* Now try to open the .la file.  If there is no directory name\n\t component, try to find it first in user_search_path and then other\n\t prescribed paths.  Otherwise (or in any case if the module was not\n\t yet found) try opening just the module name as passed.  */\n      if (!dir)\n\t{\n\t  const char *search_path = user_search_path;\n\n\t  if (search_path)\n\t    file = find_file (user_search_path, base_name, &dir);\n\n\t  if (!file)\n\t    {\n\t      search_path = getenv (LTDL_SEARCHPATH_VAR);\n\t      if (search_path)\n\t\tfile = find_file (search_path, base_name, &dir);\n\t    }\n\n#if defined(LT_MODULE_PATH_VAR)\n\t  if (!file)\n\t    {\n\t      search_path = getenv (LT_MODULE_PATH_VAR);\n\t      if (search_path)\n\t\tfile = find_file (search_path, base_name, &dir);\n\t    }\n#endif\n#if defined(LT_DLSEARCH_PATH)\n\t  if (!file && *sys_dlsearch_path)\n\t    {\n\t      file = find_file (sys_dlsearch_path, base_name, &dir);\n\t    }\n#endif\n\t}\n      else\n\t{\n\t  file = fopen (attempt, LT_READTEXT_MODE);\n\t}\n\n      /* If we didn't find the file by now, it really isn't there.  Set\n\t the status flag, and bail out.  */\n      if (!file)\n\t{\n\t  LT__SETERROR (FILE_NOT_FOUND);\n\t  ++errors;\n\t  goto cleanup;\n\t}\n\n      /* read the .la file */\n      if (parse_dotla_file(file, &dlname, &libdir, &deplibs,\n\t    &old_name, &installed) != 0)\n\t++errors;\n\n      fclose (file);\n\n      /* allocate the handle */\n      *phandle = (lt_dlhandle) lt__zalloc (sizeof (struct lt__handle));\n      if (*phandle == 0)\n\t++errors;\n\n      if (errors)\n\t{\n\t  FREE (dlname);\n\t  FREE (old_name);\n\t  FREE (libdir);\n\t  FREE (deplibs);\n\t  FREE (*phandle);\n\t  goto cleanup;\n\t}\n\n      assert (*phandle);\n\n      if (load_deplibs (*phandle, deplibs) == 0)\n\t{\n\t  newhandle = *phandle;\n\t  /* find_module may replace newhandle */\n\t  if (find_module (&newhandle, dir, libdir, dlname, old_name,\n\t\t\t   installed, advise))\n\t    {\n\t      unload_deplibs (*phandle);\n\t      ++errors;\n\t    }\n\t}\n      else\n\t{\n\t  ++errors;\n\t}\n\n      FREE (dlname);\n      FREE (old_name);\n      FREE (libdir);\n      FREE (deplibs);\n\n      if (errors)\n\t{\n\t  FREE (*phandle);\n\t  goto cleanup;\n\t}\n\n      if (*phandle != newhandle)\n\t{\n\t  unload_deplibs (*phandle);\n\t}\n    }\n  else\n    {\n      /* not a libtool module */\n      *phandle = (lt_dlhandle) lt__zalloc (sizeof (struct lt__handle));\n      if (*phandle == 0)\n\t{\n\t  ++errors;\n\t  goto cleanup;\n\t}\n\n      newhandle = *phandle;\n\n      /* If the module has no directory name component, try to find it\n\t first in user_search_path and then other prescribed paths.\n\t Otherwise (or in any case if the module was not yet found) try\n\t opening just the module name as passed.  */\n      if ((dir || (!find_handle (user_search_path, base_name,\n\t\t\t\t &newhandle, advise)\n\t\t   && !find_handle (getenv (LTDL_SEARCHPATH_VAR), base_name,\n\t\t\t\t    &newhandle, advise)\n#if defined(LT_MODULE_PATH_VAR)\n\t\t   && !find_handle (getenv (LT_MODULE_PATH_VAR), base_name,\n\t\t\t\t    &newhandle, advise)\n#endif\n#if defined(LT_DLSEARCH_PATH)\n\t\t   && !find_handle (sys_dlsearch_path, base_name,\n\t\t\t\t    &newhandle, advise)\n#endif\n\t\t   )))\n\t{\n\t  if (tryall_dlopen (&newhandle, attempt, advise, 0) != 0)\n\t    {\n\t      newhandle = NULL;\n\t    }\n\t}\n\n      if (!newhandle)\n\t{\n\t  FREE (*phandle);\n\t  ++errors;\n\t  goto cleanup;\n\t}\n    }\n\n register_handle:\n  MEMREASSIGN (*phandle, newhandle);\n\n  if ((*phandle)->info.ref_count == 0)\n    {\n      (*phandle)->info.ref_count\t= 1;\n      MEMREASSIGN ((*phandle)->info.name, name);\n\n      (*phandle)->next\t= handles;\n      handles\t\t= *phandle;\n    }\n\n  LT__SETERRORSTR (saved_error);\n\n cleanup:\n  FREE (dir);\n  FREE (attempt);\n  FREE (name);\n  if (!canonical)\t\t/* was MEMREASSIGNed */\n    FREE (base_name);\n  FREE (canonical);\n  FREE (archive_name);\n\n  return errors;\n}\n\n\n/* If the last error message stored was `FILE_NOT_FOUND', then return\n   non-zero.  */\nstatic int\nfile_not_found (void)\n{\n  const char *error = 0;\n\n  LT__GETERROR (error);\n  if (error == LT__STRERROR (FILE_NOT_FOUND))\n    return 1;\n\n  return 0;\n}\n\n\n/* Unless FILENAME already bears a suitable library extension, then\n   return 0.  */\nstatic int\nhas_library_ext (const char *filename)\n{\n  const char *\text     = 0;\n\n  assert (filename);\n\n  ext = strrchr (filename, '.');\n\n  if (ext && ((streq (ext, archive_ext))\n#if defined(LT_MODULE_EXT)\n\t     || (streq (ext, shlib_ext))\n#endif\n#if defined(LT_SHARED_EXT)\n\t     || (streq (ext, shared_ext))\n#endif\n    ))\n    {\n      return 1;\n    }\n\n  return 0;\n}\n\n\n/* Initialise and configure a user lt_dladvise opaque object.  */\n\nint\nlt_dladvise_init (lt_dladvise *padvise)\n{\n  lt_dladvise advise = (lt_dladvise) lt__zalloc (sizeof (struct lt__advise));\n  *padvise = advise;\n  return (advise ? 0 : 1);\n}\n\nint\nlt_dladvise_destroy (lt_dladvise *padvise)\n{\n  if (padvise)\n    FREE(*padvise);\n  return 0;\n}\n\nint\nlt_dladvise_ext (lt_dladvise *padvise)\n{\n  assert (padvise && *padvise);\n  (*padvise)->try_ext = 1;\n  return 0;\n}\n\nint\nlt_dladvise_resident (lt_dladvise *padvise)\n{\n  assert (padvise && *padvise);\n  (*padvise)->is_resident = 1;\n  return 0;\n}\n\nint\nlt_dladvise_local (lt_dladvise *padvise)\n{\n  assert (padvise && *padvise);\n  (*padvise)->is_symlocal = 1;\n  return 0;\n}\n\nint\nlt_dladvise_global (lt_dladvise *padvise)\n{\n  assert (padvise && *padvise);\n  (*padvise)->is_symglobal = 1;\n  return 0;\n}\n\nint\nlt_dladvise_preload (lt_dladvise *padvise)\n{\n  assert (padvise && *padvise);\n  (*padvise)->try_preload_only = 1;\n  return 0;\n}\n\n/* Libtool-1.5.x interface for loading a new module named FILENAME.  */\nlt_dlhandle\nlt_dlopen (const char *filename)\n{\n  return lt_dlopenadvise (filename, NULL);\n}\n\n\n/* If FILENAME has an ARCHIVE_EXT or MODULE_EXT extension, try to\n   open the FILENAME as passed.  Otherwise try appending ARCHIVE_EXT,\n   and if a file is still not found try again with MODULE_EXT appended\n   instead.  */\nlt_dlhandle\nlt_dlopenext (const char *filename)\n{\n  lt_dlhandle\thandle\t= 0;\n  lt_dladvise\tadvise;\n\n  if (!lt_dladvise_init (&advise) && !lt_dladvise_ext (&advise))\n    handle = lt_dlopenadvise (filename, advise);\n\n  lt_dladvise_destroy (&advise);\n  return handle;\n}\n\n\nlt_dlhandle\nlt_dlopenadvise (const char *filename, lt_dladvise advise)\n{\n  lt_dlhandle\thandle\t= 0;\n  int\t\terrors\t= 0;\n  const char *\tsaved_error\t= 0;\n\n  LT__GETERROR (saved_error);\n\n  /* Can't have symbols hidden and visible at the same time!  */\n  if (advise && advise->is_symlocal && advise->is_symglobal)\n    {\n      LT__SETERROR (CONFLICTING_FLAGS);\n      return 0;\n    }\n\n  if (!filename\n      || !advise\n      || !advise->try_ext\n      || has_library_ext (filename))\n    {\n      /* Just incase we missed a code path in try_dlopen() that reports\n\t an error, but forgot to reset handle... */\n      if (try_dlopen (&handle, filename, NULL, advise) != 0)\n\treturn 0;\n\n      return handle;\n    }\n  else if (filename && *filename)\n    {\n\n      /* First try appending ARCHIVE_EXT.  */\n      errors += try_dlopen (&handle, filename, archive_ext, advise);\n\n      /* If we found FILENAME, stop searching -- whether we were able to\n\t load the file as a module or not.  If the file exists but loading\n\t failed, it is better to return an error message here than to\n\t report FILE_NOT_FOUND when the alternatives (foo.so etc) are not\n\t in the module search path.  */\n      if (handle || ((errors > 0) && !file_not_found ()))\n\treturn handle;\n\n#if defined(LT_MODULE_EXT)\n      /* Try appending SHLIB_EXT.   */\n      LT__SETERRORSTR (saved_error);\n      errors = try_dlopen (&handle, filename, shlib_ext, advise);\n\n      /* As before, if the file was found but loading failed, return now\n\t with the current error message.  */\n      if (handle || ((errors > 0) && !file_not_found ()))\n\treturn handle;\n#endif\n\n#if defined(LT_SHARED_EXT)\n      /* Try appending SHARED_EXT.   */\n      LT__SETERRORSTR (saved_error);\n      errors = try_dlopen (&handle, filename, shared_ext, advise);\n\n      /* As before, if the file was found but loading failed, return now\n\t with the current error message.  */\n      if (handle || ((errors > 0) && !file_not_found ()))\n\treturn handle;\n#endif\n    }\n\n  /* Still here?  Then we really did fail to locate any of the file\n     names we tried.  */\n  LT__SETERROR (FILE_NOT_FOUND);\n  return 0;\n}\n\n\nstatic int\nlt_argz_insert (char **pargz, size_t *pargz_len, char *before,\n\t\tconst char *entry)\n{\n  error_t error;\n\n  /* Prior to Sep 8, 2005, newlib had a bug where argz_insert(pargz,\n     pargz_len, NULL, entry) failed with EINVAL.  */\n  if (before)\n    error = argz_insert (pargz, pargz_len, before, entry);\n  else\n    error = argz_append (pargz, pargz_len, entry, 1 + strlen (entry));\n\n  if (error)\n    {\n      switch (error)\n\t{\n\tcase ENOMEM:\n\t  LT__SETERROR (NO_MEMORY);\n\t  break;\n\tdefault:\n\t  LT__SETERROR (UNKNOWN);\n\t  break;\n\t}\n      return 1;\n    }\n\n  return 0;\n}\n\nstatic int\nlt_argz_insertinorder (char **pargz, size_t *pargz_len, const char *entry)\n{\n  char *before = 0;\n\n  assert (pargz);\n  assert (pargz_len);\n  assert (entry && *entry);\n\n  if (*pargz)\n    while ((before = argz_next (*pargz, *pargz_len, before)))\n      {\n\tint cmp = strcmp (entry, before);\n\n\tif (cmp < 0)  break;\n\tif (cmp == 0) return 0;\t/* No duplicates! */\n      }\n\n  return lt_argz_insert (pargz, pargz_len, before, entry);\n}\n\nstatic int\nlt_argz_insertdir (char **pargz, size_t *pargz_len, const char *dirnam,\n\t\t   struct dirent *dp)\n{\n  char   *buf\t    = 0;\n  size_t buf_len    = 0;\n  char   *end\t    = 0;\n  size_t end_offset = 0;\n  size_t dir_len    = 0;\n  int    errors\t    = 0;\n\n  assert (pargz);\n  assert (pargz_len);\n  assert (dp);\n\n  dir_len = LT_STRLEN (dirnam);\n  end     = dp->d_name + D_NAMLEN(dp);\n\n  /* Ignore version numbers.  */\n  {\n    char *p;\n    for (p = end; p -1 > dp->d_name; --p)\n      if (strchr (\".0123456789\", p[-1]) == 0)\n\tbreak;\n\n    if (*p == '.')\n      end = p;\n  }\n\n  /* Ignore filename extension.  */\n  {\n    char *p;\n    for (p = end -1; p > dp->d_name; --p)\n      if (*p == '.')\n\t{\n\t  end = p;\n\t  break;\n\t}\n  }\n\n  /* Prepend the directory name.  */\n  end_offset\t= end - dp->d_name;\n  buf_len\t= dir_len + 1+ end_offset;\n  buf\t\t= MALLOC (char, 1+ buf_len);\n  if (!buf)\n    return ++errors;\n\n  assert (buf);\n\n  strcpy  (buf, dirnam);\n  strcat  (buf, \"/\");\n  strncat (buf, dp->d_name, end_offset);\n  buf[buf_len] = LT_EOS_CHAR;\n\n  /* Try to insert (in order) into ARGZ/ARGZ_LEN.  */\n  if (lt_argz_insertinorder (pargz, pargz_len, buf) != 0)\n    ++errors;\n\n  FREE (buf);\n\n  return errors;\n}\n\nstatic int\nlist_files_by_dir (const char *dirnam, char **pargz, size_t *pargz_len)\n{\n  DIR\t*dirp\t  = 0;\n  int    errors\t  = 0;\n\n  assert (dirnam && *dirnam);\n  assert (pargz);\n  assert (pargz_len);\n  assert (dirnam[LT_STRLEN(dirnam) -1] != '/');\n\n  dirp = opendir (dirnam);\n  if (dirp)\n    {\n      struct dirent *dp\t= 0;\n\n      while ((dp = readdir (dirp)))\n\tif (dp->d_name[0] != '.')\n\t  if (lt_argz_insertdir (pargz, pargz_len, dirnam, dp))\n\t    {\n\t      ++errors;\n\t      break;\n\t    }\n\n      closedir (dirp);\n    }\n  else\n    ++errors;\n\n  return errors;\n}\n\n\n/* If there are any files in DIRNAME, call the function passed in\n   DATA1 (with the name of each file and DATA2 as arguments).  */\nstatic int\nforeachfile_callback (char *dirname, void *data1, void *data2)\n{\n  file_worker_func *func = *(file_worker_func **) data1;\n\n  int\t  is_done  = 0;\n  char   *argz     = 0;\n  size_t  argz_len = 0;\n\n  if (list_files_by_dir (dirname, &argz, &argz_len) != 0)\n    goto cleanup;\n  if (!argz)\n    goto cleanup;\n\n  {\n    char *filename = 0;\n    while ((filename = argz_next (argz, argz_len, filename)))\n      if ((is_done = (*func) (filename, data2)))\n\tbreak;\n  }\n\n cleanup:\n  FREE (argz);\n\n  return is_done;\n}\n\n\n/* Call FUNC for each unique extensionless file in SEARCH_PATH, along\n   with DATA.  The filenames passed to FUNC would be suitable for\n   passing to lt_dlopenext.  The extensions are stripped so that\n   individual modules do not generate several entries (e.g. libfoo.la,\n   libfoo.so, libfoo.so.1, libfoo.so.1.0.0).  If SEARCH_PATH is NULL,\n   then the same directories that lt_dlopen would search are examined.  */\nint\nlt_dlforeachfile (const char *search_path,\n\t\t  int (*func) (const char *filename, void *data),\n\t\t  void *data)\n{\n  int is_done = 0;\n  file_worker_func **fpptr = &func;\n\n  if (search_path)\n    {\n      /* If a specific path was passed, search only the directories\n\t listed in it.  */\n      is_done = foreach_dirinpath (search_path, 0,\n\t\t\t\t   foreachfile_callback, fpptr, data);\n    }\n  else\n    {\n      /* Otherwise search the default paths.  */\n      is_done = foreach_dirinpath (user_search_path, 0,\n\t\t\t\t   foreachfile_callback, fpptr, data);\n      if (!is_done)\n\t{\n\t  is_done = foreach_dirinpath (getenv(LTDL_SEARCHPATH_VAR), 0,\n\t\t\t\t       foreachfile_callback, fpptr, data);\n\t}\n\n#if defined(LT_MODULE_PATH_VAR)\n      if (!is_done)\n\t{\n\t  is_done = foreach_dirinpath (getenv(LT_MODULE_PATH_VAR), 0,\n\t\t\t\t       foreachfile_callback, fpptr, data);\n\t}\n#endif\n#if defined(LT_DLSEARCH_PATH)\n      if (!is_done && *sys_dlsearch_path)\n\t{\n\t  is_done = foreach_dirinpath (sys_dlsearch_path, 0,\n\t\t\t\t       foreachfile_callback, fpptr, data);\n\t}\n#endif\n    }\n\n  return is_done;\n}\n\nint\nlt_dlclose (lt_dlhandle handle)\n{\n  lt_dlhandle cur, last;\n  int errors = 0;\n\n  /* check whether the handle is valid */\n  last = cur = handles;\n  while (cur && handle != cur)\n    {\n      last = cur;\n      cur = cur->next;\n    }\n\n  if (!cur)\n    {\n      LT__SETERROR (INVALID_HANDLE);\n      ++errors;\n      goto done;\n    }\n\n  cur = handle;\n  cur->info.ref_count--;\n\n  /* Note that even with resident modules, we must track the ref_count\n     correctly incase the user decides to reset the residency flag\n     later (even though the API makes no provision for that at the\n     moment).  */\n  if (cur->info.ref_count <= 0 && !LT_DLIS_RESIDENT (cur))\n    {\n      lt_user_data data = cur->vtable->dlloader_data;\n\n      if (cur != handles)\n\t{\n\t  last->next = cur->next;\n\t}\n      else\n\t{\n\t  handles = cur->next;\n\t}\n\n      errors += cur->vtable->module_close (data, cur->module);\n      errors += unload_deplibs (handle);\n\n      /* It is up to the callers to free the data itself.  */\n      FREE (cur->interface_data);\n\n      FREE (cur->info.filename);\n      FREE (cur->info.name);\n      FREE (cur);\n\n      goto done;\n    }\n\n  if (LT_DLIS_RESIDENT (handle))\n    {\n      LT__SETERROR (CLOSE_RESIDENT_MODULE);\n      ++errors;\n    }\n\n done:\n  return errors;\n}\n\nvoid *\nlt_dlsym (lt_dlhandle place, const char *symbol)\n{\n  size_t lensym;\n  char\tlsym[LT_SYMBOL_LENGTH];\n  char\t*sym;\n  void *address;\n  lt_user_data data;\n  lt_dlhandle handle;\n\n  if (!place)\n    {\n      LT__SETERROR (INVALID_HANDLE);\n      return 0;\n    }\n\n  handle = place;\n\n  if (!symbol)\n    {\n      LT__SETERROR (SYMBOL_NOT_FOUND);\n      return 0;\n    }\n\n  lensym = LT_STRLEN (symbol) + LT_STRLEN (handle->vtable->sym_prefix)\n\t\t\t\t\t+ LT_STRLEN (handle->info.name);\n\n  if (lensym + LT_SYMBOL_OVERHEAD < LT_SYMBOL_LENGTH)\n    {\n      sym = lsym;\n    }\n  else\n    {\n      sym = MALLOC (char, lensym + LT_SYMBOL_OVERHEAD + 1);\n      if (!sym)\n\t{\n\t  LT__SETERROR (BUFFER_OVERFLOW);\n\t  return 0;\n\t}\n    }\n\n  data = handle->vtable->dlloader_data;\n  if (handle->info.name)\n    {\n      const char *saved_error;\n\n      LT__GETERROR (saved_error);\n\n      /* this is a libtool module */\n      if (handle->vtable->sym_prefix)\n\t{\n\t  strcpy(sym, handle->vtable->sym_prefix);\n\t  strcat(sym, handle->info.name);\n\t}\n      else\n\t{\n\t  strcpy(sym, handle->info.name);\n\t}\n\n      strcat(sym, \"_LTX_\");\n      strcat(sym, symbol);\n\n      /* try \"modulename_LTX_symbol\" */\n      address = handle->vtable->find_sym (data, handle->module, sym);\n      if (address)\n\t{\n\t  if (sym != lsym)\n\t    {\n\t      FREE (sym);\n\t    }\n\t  return address;\n\t}\n      LT__SETERRORSTR (saved_error);\n    }\n\n  /* otherwise try \"symbol\" */\n  if (handle->vtable->sym_prefix)\n    {\n      strcpy(sym, handle->vtable->sym_prefix);\n      strcat(sym, symbol);\n    }\n  else\n    {\n      strcpy(sym, symbol);\n    }\n\n  address = handle->vtable->find_sym (data, handle->module, sym);\n  if (sym != lsym)\n    {\n      FREE (sym);\n    }\n\n  return address;\n}\n\nconst char *\nlt_dlerror (void)\n{\n  const char *error;\n\n  LT__GETERROR (error);\n  LT__SETERRORSTR (0);\n\n  return error;\n}\n\nstatic int\nlt_dlpath_insertdir (char **ppath, char *before, const char *dir)\n{\n  int    errors\t\t= 0;\n  char  *canonical\t= 0;\n  char  *argz\t\t= 0;\n  size_t argz_len\t= 0;\n\n  assert (ppath);\n  assert (dir && *dir);\n\n  if (canonicalize_path (dir, &canonical) != 0)\n    {\n      ++errors;\n      goto cleanup;\n    }\n\n  assert (canonical && *canonical);\n\n  /* If *PPATH is empty, set it to DIR.  */\n  if (*ppath == 0)\n    {\n      assert (!before);\t\t/* BEFORE cannot be set without PPATH.  */\n      assert (dir);\t\t/* Without DIR, don't call this function!  */\n\n      *ppath = lt__strdup (dir);\n      if (*ppath == 0)\n\t++errors;\n\n      goto cleanup;\n    }\n\n  assert (ppath && *ppath);\n\n  if (argzize_path (*ppath, &argz, &argz_len) != 0)\n    {\n      ++errors;\n      goto cleanup;\n    }\n\n  /* Convert BEFORE into an equivalent offset into ARGZ.  This only works\n     if *PPATH is already canonicalized, and hence does not change length\n     with respect to ARGZ.  We canonicalize each entry as it is added to\n     the search path, and don't call this function with (uncanonicalized)\n     user paths, so this is a fair assumption.  */\n  if (before)\n    {\n      assert (*ppath <= before);\n      assert ((int) (before - *ppath) <= (int) strlen (*ppath));\n\n      before = before - *ppath + argz;\n    }\n\n  if (lt_argz_insert (&argz, &argz_len, before, dir) != 0)\n    {\n      ++errors;\n      goto cleanup;\n    }\n\n  argz_stringify (argz, argz_len, LT_PATHSEP_CHAR);\n  MEMREASSIGN(*ppath, argz);\n\n cleanup:\n  FREE (argz);\n  FREE (canonical);\n\n  return errors;\n}\n\nint\nlt_dladdsearchdir (const char *search_dir)\n{\n  int errors = 0;\n\n  if (search_dir && *search_dir)\n    {\n      if (lt_dlpath_insertdir (&user_search_path, 0, search_dir) != 0)\n\t++errors;\n    }\n\n  return errors;\n}\n\nint\nlt_dlinsertsearchdir (const char *before, const char *search_dir)\n{\n  int errors = 0;\n\n  if (before)\n    {\n      if ((before < user_search_path)\n\t  || (before >= user_search_path + LT_STRLEN (user_search_path)))\n\t{\n\t  LT__SETERROR (INVALID_POSITION);\n\t  return 1;\n\t}\n    }\n\n  if (search_dir && *search_dir)\n    {\n      if (lt_dlpath_insertdir (&user_search_path,\n\t\t\t       (char *) before, search_dir) != 0)\n\t{\n\t  ++errors;\n\t}\n    }\n\n  return errors;\n}\n\nint\nlt_dlsetsearchpath (const char *search_path)\n{\n  int   errors\t    = 0;\n\n  FREE (user_search_path);\n\n  if (!search_path || !LT_STRLEN (search_path))\n    {\n      return errors;\n    }\n\n  if (canonicalize_path (search_path, &user_search_path) != 0)\n    ++errors;\n\n  return errors;\n}\n\nconst char *\nlt_dlgetsearchpath (void)\n{\n  const char *saved_path;\n\n  saved_path = user_search_path;\n\n  return saved_path;\n}\n\nint\nlt_dlmakeresident (lt_dlhandle handle)\n{\n  int errors = 0;\n\n  if (!handle)\n    {\n      LT__SETERROR (INVALID_HANDLE);\n      ++errors;\n    }\n  else\n    {\n      handle->info.is_resident = 1;\n    }\n\n  return errors;\n}\n\nint\nlt_dlisresident\t(lt_dlhandle handle)\n{\n  if (!handle)\n    {\n      LT__SETERROR (INVALID_HANDLE);\n      return -1;\n    }\n\n  return LT_DLIS_RESIDENT (handle);\n}\n\n\n\n/* --- MODULE INFORMATION --- */\n\ntypedef struct {\n  const char *id_string;\n  lt_dlhandle_interface *iface;\n} lt__interface_id;\n\nlt_dlinterface_id\nlt_dlinterface_register (const char *id_string, lt_dlhandle_interface *iface)\n{\n  lt__interface_id *interface_id = (lt__interface_id *) lt__malloc (sizeof *interface_id);\n\n  /* If lt__malloc fails, it will LT__SETERROR (NO_MEMORY), which\n     can then be detected with lt_dlerror() if we return 0.  */\n  if (interface_id)\n    {\n      interface_id->id_string = lt__strdup (id_string);\n      if (!interface_id->id_string)\n\tFREE (interface_id);\n      else\n\tinterface_id->iface = iface;\n    }\n\n  return (lt_dlinterface_id) interface_id;\n}\n\nvoid lt_dlinterface_free (lt_dlinterface_id key)\n{\n  lt__interface_id *interface_id = (lt__interface_id *)key;\n  FREE (interface_id->id_string);\n  FREE (interface_id);\n}\n\nvoid *\nlt_dlcaller_set_data (lt_dlinterface_id key, lt_dlhandle handle, void *data)\n{\n  int n_elements = 0;\n  void *stale = (void *) 0;\n  lt_dlhandle cur = handle;\n  int i;\n\n  if (cur->interface_data)\n    while (cur->interface_data[n_elements].key)\n      ++n_elements;\n\n  for (i = 0; i < n_elements; ++i)\n    {\n      if (cur->interface_data[i].key == key)\n\t{\n\t  stale = cur->interface_data[i].data;\n\t  break;\n\t}\n    }\n\n  /* Ensure that there is enough room in this handle's interface_data\n     array to accept a new element (and an empty end marker).  */\n  if (i == n_elements)\n    {\n      lt_interface_data *temp\n\t= REALLOC (lt_interface_data, cur->interface_data, 2+ n_elements);\n\n      if (!temp)\n\t{\n\t  stale = 0;\n\t  goto done;\n\t}\n\n      cur->interface_data = temp;\n\n      /* We only need this if we needed to allocate a new interface_data.  */\n      cur->interface_data[i].key\t= key;\n      cur->interface_data[1+ i].key\t= 0;\n    }\n\n  cur->interface_data[i].data = data;\n\n done:\n  return stale;\n}\n\nvoid *\nlt_dlcaller_get_data (lt_dlinterface_id key, lt_dlhandle handle)\n{\n  void *result = (void *) 0;\n  lt_dlhandle cur = handle;\n\n  /* Locate the index of the element with a matching KEY.  */\n  if (cur->interface_data)\n    {\n      int i;\n      for (i = 0; cur->interface_data[i].key; ++i)\n\t{\n\t  if (cur->interface_data[i].key == key)\n\t    {\n\t      result = cur->interface_data[i].data;\n\t      break;\n\t    }\n\t}\n    }\n\n  return result;\n}\n\nconst lt_dlinfo *\nlt_dlgetinfo (lt_dlhandle handle)\n{\n  if (!handle)\n    {\n      LT__SETERROR (INVALID_HANDLE);\n      return 0;\n    }\n\n  return &(handle->info);\n}\n\n\nlt_dlhandle\nlt_dlhandle_iterate (lt_dlinterface_id iface, lt_dlhandle place)\n{\n  lt_dlhandle handle = place;\n  lt__interface_id *iterator = (lt__interface_id *) iface;\n\n  assert (iface); /* iface is a required argument */\n\n  if (!handle)\n    handle = handles;\n  else\n    handle = handle->next;\n\n  /* advance while the interface check fails */\n  while (handle && iterator->iface\n\t && ((*iterator->iface) (handle, iterator->id_string) != 0))\n    {\n      handle = handle->next;\n    }\n\n  return handle;\n}\n\n\nlt_dlhandle\nlt_dlhandle_fetch (lt_dlinterface_id iface, const char *module_name)\n{\n  lt_dlhandle handle = 0;\n\n  assert (iface); /* iface is a required argument */\n\n  while ((handle = lt_dlhandle_iterate (iface, handle)))\n    {\n      lt_dlhandle cur = handle;\n      if (cur && cur->info.name && streq (cur->info.name, module_name))\n\tbreak;\n    }\n\n  return handle;\n}\n\n\nint\nlt_dlhandle_map (lt_dlinterface_id iface,\n\t\t int (*func) (lt_dlhandle handle, void *data), void *data)\n{\n  lt__interface_id *iterator = (lt__interface_id *) iface;\n  lt_dlhandle cur = handles;\n\n  assert (iface); /* iface is a required argument */\n\n  while (cur)\n    {\n      int errorcode = 0;\n\n      /* advance while the interface check fails */\n      while (cur && iterator->iface\n\t     && ((*iterator->iface) (cur, iterator->id_string) != 0))\n\t{\n\t  cur = cur->next;\n\t}\n\n      if ((errorcode = (*func) (cur, data)) != 0)\n\treturn errorcode;\n    }\n\n  return 0;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/libltdl/config-h.in": "/* config-h.in.  Generated from configure.ac by autoheader.  */\n\n/* Define to 1 if you have the `argz_add' function. */\n#undef HAVE_ARGZ_ADD\n\n/* Define to 1 if you have the `argz_append' function. */\n#undef HAVE_ARGZ_APPEND\n\n/* Define to 1 if you have the `argz_count' function. */\n#undef HAVE_ARGZ_COUNT\n\n/* Define to 1 if you have the `argz_create_sep' function. */\n#undef HAVE_ARGZ_CREATE_SEP\n\n/* Define to 1 if you have the <argz.h> header file. */\n#undef HAVE_ARGZ_H\n\n/* Define to 1 if you have the `argz_insert' function. */\n#undef HAVE_ARGZ_INSERT\n\n/* Define to 1 if you have the `argz_next' function. */\n#undef HAVE_ARGZ_NEXT\n\n/* Define to 1 if you have the `argz_stringify' function. */\n#undef HAVE_ARGZ_STRINGIFY\n\n/* Define to 1 if you have the `closedir' function. */\n#undef HAVE_CLOSEDIR\n\n/* Define to 1 if you have the declaration of `cygwin_conv_path', and to 0 if\n   you don't. */\n#undef HAVE_DECL_CYGWIN_CONV_PATH\n\n/* Define to 1 if you have the <dirent.h> header file. */\n#undef HAVE_DIRENT_H\n\n/* Define if you have the GNU dld library. */\n#undef HAVE_DLD\n\n/* Define to 1 if you have the <dld.h> header file. */\n#undef HAVE_DLD_H\n\n/* Define to 1 if you have the `dlerror' function. */\n#undef HAVE_DLERROR\n\n/* Define to 1 if you have the <dlfcn.h> header file. */\n#undef HAVE_DLFCN_H\n\n/* Define to 1 if you have the <dl.h> header file. */\n#undef HAVE_DL_H\n\n/* Define if you have the _dyld_func_lookup function. */\n#undef HAVE_DYLD\n\n/* Define to 1 if the system has the type `error_t'. */\n#undef HAVE_ERROR_T\n\n/* Define to 1 if you have the <inttypes.h> header file. */\n#undef HAVE_INTTYPES_H\n\n/* Define if you have the libdl library or equivalent. */\n#undef HAVE_LIBDL\n\n/* Define if libdlloader will be built on this platform */\n#undef HAVE_LIBDLLOADER\n\n/* Define to 1 if you have the <mach-o/dyld.h> header file. */\n#undef HAVE_MACH_O_DYLD_H\n\n/* Define to 1 if you have the <memory.h> header file. */\n#undef HAVE_MEMORY_H\n\n/* Define to 1 if you have the `opendir' function. */\n#undef HAVE_OPENDIR\n\n/* Define if libtool can extract symbol lists from object files. */\n#undef HAVE_PRELOADED_SYMBOLS\n\n/* Define to 1 if you have the `readdir' function. */\n#undef HAVE_READDIR\n\n/* Define if you have the shl_load function. */\n#undef HAVE_SHL_LOAD\n\n/* Define to 1 if you have the <stdint.h> header file. */\n#undef HAVE_STDINT_H\n\n/* Define to 1 if you have the <stdlib.h> header file. */\n#undef HAVE_STDLIB_H\n\n/* Define to 1 if you have the <strings.h> header file. */\n#undef HAVE_STRINGS_H\n\n/* Define to 1 if you have the <string.h> header file. */\n#undef HAVE_STRING_H\n\n/* Define to 1 if you have the `strlcat' function. */\n#undef HAVE_STRLCAT\n\n/* Define to 1 if you have the `strlcpy' function. */\n#undef HAVE_STRLCPY\n\n/* Define to 1 if you have the <sys/dl.h> header file. */\n#undef HAVE_SYS_DL_H\n\n/* Define to 1 if you have the <sys/stat.h> header file. */\n#undef HAVE_SYS_STAT_H\n\n/* Define to 1 if you have the <sys/types.h> header file. */\n#undef HAVE_SYS_TYPES_H\n\n/* Define to 1 if you have the <unistd.h> header file. */\n#undef HAVE_UNISTD_H\n\n/* This value is set to 1 to indicate that the system argz facility works */\n#undef HAVE_WORKING_ARGZ\n\n/* Define if the OS needs help to load dependent libraries for dlopen(). */\n#undef LTDL_DLOPEN_DEPLIBS\n\n/* Define to the system default library search path. */\n#undef LT_DLSEARCH_PATH\n\n/* The archive extension */\n#undef LT_LIBEXT\n\n/* The archive prefix */\n#undef LT_LIBPREFIX\n\n/* Define to the extension used for runtime loadable modules, say, \".so\". */\n#undef LT_MODULE_EXT\n\n/* Define to the name of the environment variable that determines the run-time\n   module search path. */\n#undef LT_MODULE_PATH_VAR\n\n/* Define to the sub-directory in which libtool stores uninstalled libraries.\n   */\n#undef LT_OBJDIR\n\n/* Define to the shared library suffix, say, \".dylib\". */\n#undef LT_SHARED_EXT\n\n/* Define if dlsym() requires a leading underscore in symbol names. */\n#undef NEED_USCORE\n\n/* Name of package */\n#undef PACKAGE\n\n/* Define to the address where bug reports for this package should be sent. */\n#undef PACKAGE_BUGREPORT\n\n/* Define to the full name of this package. */\n#undef PACKAGE_NAME\n\n/* Define to the full name and version of this package. */\n#undef PACKAGE_STRING\n\n/* Define to the one symbol short name of this package. */\n#undef PACKAGE_TARNAME\n\n/* Define to the home page for this package. */\n#undef PACKAGE_URL\n\n/* Define to the version of this package. */\n#undef PACKAGE_VERSION\n\n/* Define to 1 if you have the ANSI C header files. */\n#undef STDC_HEADERS\n\n/* Version number of package */\n#undef VERSION\n\n/* Define so that glibc/gnulib argp.h does not typedef error_t. */\n#undef __error_t_defined\n\n/* Define to a type to use for `error_t' if it is not otherwise available. */\n#undef error_t\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/libltdl/config/ltmain.m4sh": "m4_define([_m4_divert(SCRIPT)], 100)\nm4_divert_push([SCRIPT])\n# libtool (GNU @PACKAGE@@TIMESTAMP@) @VERSION@\n# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006,\n# 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n# Usage: $progname [OPTION]... [MODE-ARG]...\n#\n# Provide generalized library-building support services.\n#\n#       --config             show all configuration variables\n#       --debug              enable verbose shell tracing\n#   -n, --dry-run            display commands without modifying any files\n#       --features           display basic configuration information and exit\n#       --mode=MODE          use operation mode MODE\n#       --preserve-dup-deps  don't remove duplicate dependency libraries\n#       --quiet, --silent    don't print informational messages\n#       --no-quiet, --no-silent\n#                            print informational messages (default)\n#       --no-warn            don't display warning messages\n#       --tag=TAG            use configuration variables from tag TAG\n#   -v, --verbose            print more informational messages than default\n#       --no-verbose         don't print the extra informational messages\n#       --version            print version information\n#   -h, --help, --help-all   print short, long, or detailed help message\n#\n# MODE must be one of the following:\n#\n#         clean              remove files from the build directory\n#         compile            compile a source file into a libtool object\n#         execute            automatically set library path, then run a program\n#         finish             complete the installation of libtool libraries\n#         install            install libraries or executables\n#         link               create a library or an executable\n#         uninstall          remove libraries from an installed directory\n#\n# MODE-ARGS vary depending on the MODE.  When passed as first option,\n# `--mode=MODE' may be abbreviated as `MODE' or a unique abbreviation of that.\n# Try `$progname --help --mode=MODE' for a more detailed description of MODE.\n#\n# When reporting a bug, please describe a test case to reproduce it and\n# include the following information:\n#\n#         host-triplet:\t$host\n#         shell:\t\t$SHELL\n#         compiler:\t\t$LTCC\n#         compiler flags:\t\t$LTCFLAGS\n#         linker:\t\t$LD (gnu? $with_gnu_ld)\n#         $progname:\t(GNU @PACKAGE@@TIMESTAMP@) @VERSION@\n#         automake:\t$automake_version\n#         autoconf:\t$autoconf_version\n#\n# Report bugs to <@PACKAGE_BUGREPORT@>.\n# GNU @PACKAGE@ home page: <@PACKAGE_URL@>.\n# General help using GNU software: <http://www.gnu.org/gethelp/>.\n\nPROGRAM=libtool\nPACKAGE=@PACKAGE@\nVERSION=@VERSION@\nTIMESTAMP=\"@TIMESTAMP@\"\npackage_revision=@package_revision@\n\n# Be Bourne compatible\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n}\n\n# NLS nuisances: We save the old values to restore during execute mode.\nlt_user_locale=\nlt_safe_locale=\nfor lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\ndo\n  eval \"if test \\\"\\${$lt_var+set}\\\" = set; then\n          save_$lt_var=\\$$lt_var\n          $lt_var=C\n\t  export $lt_var\n\t  lt_user_locale=\\\"$lt_var=\\\\\\$save_\\$lt_var; \\$lt_user_locale\\\"\n\t  lt_safe_locale=\\\"$lt_var=C; \\$lt_safe_locale\\\"\n\tfi\"\ndone\nLC_ALL=C\nLANGUAGE=C\nexport LANGUAGE LC_ALL\n\n$lt_unset CDPATH\n\ndnl This script is generated by config.status, so we cannot put things\ndnl in the header.\nm4_define([M4SH_IN_HEADER], [$1])dnl\n\nm4_include([getopt.m4sh])\n\nM4SH_VERBATIM([[\nmagic=\"%%%MAGIC variable%%%\"\nmagic_exe=\"%%%MAGIC EXE variable%%%\"\n\n# Global variables.\nnonopt=\npreserve_args=\nlo2o=\"s/\\\\.lo\\$/.${objext}/\"\no2lo=\"s/\\\\.${objext}\\$/.lo/\"\nextracted_archives=\nextracted_serial=0\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\n# func_append var value\n# Append VALUE to the end of shell variable VAR.\nfunc_append ()\n{\n    eval \"${1}=\\$${1}\\${2}\"\n} # func_append may be replaced by extended shell implementation\n\n# func_append_quoted var value\n# Quote VALUE and append to the end of shell variable VAR, separated\n# by a space.\nfunc_append_quoted ()\n{\n    func_quote_for_eval \"${2}\"\n    eval \"${1}=\\$${1}\\\\ \\$func_quote_for_eval_result\"\n} # func_append_quoted may be replaced by extended shell implementation\n\n\n# func_arith arithmetic-term...\nfunc_arith ()\n{\n    func_arith_result=`expr \"${@}\"`\n} # func_arith may be replaced by extended shell implementation\n\n\n# func_len string\n# STRING may not start with a hyphen.\nfunc_len ()\n{\n    func_len_result=`expr \"${1}\" : \".*\" 2>/dev/null || echo $max_cmd_len`\n} # func_len may be replaced by extended shell implementation\n\n\n# func_lo2o object\nfunc_lo2o ()\n{\n    func_lo2o_result=`$ECHO \"${1}\" | $SED \"$lo2o\"`\n} # func_lo2o may be replaced by extended shell implementation\n\n\n# func_xform libobj-or-source\nfunc_xform ()\n{\n    func_xform_result=`$ECHO \"${1}\" | $SED 's/\\.[^.]*$/.lo/'`\n} # func_xform may be replaced by extended shell implementation\n\n\n# func_fatal_configuration arg...\n# Echo program name prefixed message to standard error, followed by\n# a configuration failure hint, and exit.\nfunc_fatal_configuration ()\n{\n    func_error ${1+\"$@\"}\n    func_error \"See the $PACKAGE documentation for more information.\"\n    func_fatal_error \"Fatal configuration error.\"\n}\n\n\n# func_config\n# Display the configuration for all the tags in this script.\nfunc_config ()\n{\n    re_begincf='^# ### BEGIN LIBTOOL'\n    re_endcf='^# ### END LIBTOOL'\n\n    # Default configuration.\n    $SED \"1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\\$d\" < \"$progpath\"\n\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      $SED -n \"/$re_begincf TAG CONFIG: $tagname\\$/,/$re_endcf TAG CONFIG: $tagname\\$/p\" < \"$progpath\"\n    done\n\n    exit $?\n}\n\n# func_features\n# Display the features supported by this script.\nfunc_features ()\n{\n    echo \"host: $host\"\n    if test \"$build_libtool_libs\" = yes; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test \"$build_old_libs\" = yes; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n\n    exit $?\n}\n\n# func_enable_tag tagname\n# Verify that TAGNAME is valid, and either flag an error and exit, or\n# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist\n# variable here.\nfunc_enable_tag ()\n{\n  # Global variable:\n  tagname=\"$1\"\n\n  re_begincf=\"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\\$\"\n  re_endcf=\"^# ### END LIBTOOL TAG CONFIG: $tagname\\$\"\n  sed_extractcf=\"/$re_begincf/,/$re_endcf/p\"\n\n  # Validate tagname.\n  case $tagname in\n    *[!-_A-Za-z0-9,/]*)\n      func_fatal_error \"invalid tag name: $tagname\"\n      ;;\n  esac\n\n  # Don't test for the \"default\" C tag, as we know it's\n  # there but not specially marked.\n  case $tagname in\n    CC) ;;\n    *)\n      if $GREP \"$re_begincf\" \"$progpath\" >/dev/null 2>&1; then\n\ttaglist=\"$taglist $tagname\"\n\n\t# Evaluate the configuration.  Be careful to quote the path\n\t# and the sed script, to avoid splitting on whitespace, but\n\t# also don't use non-portable quotes within backquotes within\n\t# quotes we have to do it in 2 steps:\n\textractedcf=`$SED -n -e \"$sed_extractcf\" < \"$progpath\"`\n\teval \"$extractedcf\"\n      else\n\tfunc_error \"ignoring unknown tag $tagname\"\n      fi\n      ;;\n  esac\n}\n\n# func_check_version_match\n# Ensure that we are using m4 macros, and libtool script from the same\n# release of libtool.\nfunc_check_version_match ()\n{\n  if test \"$package_revision\" != \"$macro_revision\"; then\n    if test \"$VERSION\" != \"$macro_version\"; then\n      if test -z \"$macro_version\"; then\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from an older release.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n      else\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n      fi\n    else\n      cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,\n$progname: but the definition of this LT_INIT comes from revision $macro_revision.\n$progname: You should recreate aclocal.m4 with macros from revision $package_revision\n$progname: of $PACKAGE $VERSION and run autoconf again.\n_LT_EOF\n    fi\n\n    exit $EXIT_MISMATCH\n  fi\n}\n\n\n# Shorthand for --mode=foo, only valid as the first argument\ncase $1 in\nclean|clea|cle|cl)\n  shift; set dummy --mode clean ${1+\"$@\"}; shift\n  ;;\ncompile|compil|compi|comp|com|co|c)\n  shift; set dummy --mode compile ${1+\"$@\"}; shift\n  ;;\nexecute|execut|execu|exec|exe|ex|e)\n  shift; set dummy --mode execute ${1+\"$@\"}; shift\n  ;;\nfinish|finis|fini|fin|fi|f)\n  shift; set dummy --mode finish ${1+\"$@\"}; shift\n  ;;\ninstall|instal|insta|inst|ins|in|i)\n  shift; set dummy --mode install ${1+\"$@\"}; shift\n  ;;\nlink|lin|li|l)\n  shift; set dummy --mode link ${1+\"$@\"}; shift\n  ;;\nuninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)\n  shift; set dummy --mode uninstall ${1+\"$@\"}; shift\n  ;;\nesac\n]])\n\ndnl SHORT\tLONG\t\t\t       DEFAULT\t\t      INIT\ndnl ----------------------------------------------------------------------\nM4SH_GETOPTS(\n  [n],\t\t[--dry-run|--dryrun],\t\t[],\t\t\t[],\n  [],\t\t[--config],\t\t\t[], \t\t\t[\n\tfunc_config],\n  [;],\t\t[--dlopen|-dlopen],\t\t[],\t\t\t[],\n  [],\t\t[--preserve-dup-deps],\t\t[],\t\t\t[],\n  [],\t\t[--features],\t\t\t[],\t\t\t[\n\tfunc_features],\n  [],\t\t[--finish],\t\t\t[],\t\t\t[\n\tset dummy --mode finish ${1+\"[$]@\"}; shift],\n  [],\t\t[--help],\t\t\t[],\t\t\t[],\n  [],\t\t[--help-all],\t\t\t[],\t\t\t[\n\topt_help=': help-all'],\n  [!],\t\t[--mode],\t\t\t[],\t\t\t[\n\tcase $optarg in\n\t  # Valid mode arguments:\n\t  clean|compile|execute|finish|install|link|relink|uninstall) ;;\n\n\t  # Catch anything else as an error\n\t  *) func_error \"invalid argument for $opt\"\n\t     exit_cmd=exit\n\t     break\n\t     ;;\n\tesac],\n  [],\t\t[--no-silent|--no-quiet],\t[false],\t\t[\n\tfunc_append preserve_args \" $opt\"],\n  [],\t\t[--no-warning|--no-warn],\t[false],\t\t[\n\tfunc_append preserve_args \" $opt\"],\n  [],\t\t[--no-verbose],\t\t\t[false],\t\t[\n\tfunc_append preserve_args \" $opt\"],\n  [],\t\t[--silent|--quiet],\t\t[],\t\t\t[\n\tfunc_append preserve_args \" $opt\"\n        opt_verbose=false],\n  [v],\t\t[--verbose],\t\t\t[],\t\t\t[\n\tfunc_append preserve_args \" $opt\"\n\topt_silent=false],\n  [!],\t\t[--tag],\t\t\t[],\t\t\t[\n\tfunc_append preserve_args \" $opt $optarg\"\n\tfunc_enable_tag \"$optarg\"],\n[\n  # save first non-option argument\n  if test \"$[]#\" -gt 0; then\n    nonopt=\"$opt\"\n    shift\n  fi\n\n  # preserve --debug\n  test \"$opt_debug\" = : || func_append preserve_args \" --debug\"\n\n  case $host in\n    *cygwin* | *mingw* | *pw32* | *cegcc*)\n      # don't eliminate duplications in $postdeps and $predeps\n      opt_duplicate_compiler_generated_deps=:\n      ;;\n    *)\n      opt_duplicate_compiler_generated_deps=$opt_preserve_dup_deps\n      ;;\n  esac\n\n  $opt_help || {\n    # Sanity checks first:\n    func_check_version_match\n\n    if test \"$build_libtool_libs\" != yes && test \"$build_old_libs\" != yes; then\n      func_fatal_configuration \"not configured to build any kind of library\"\n    fi\n\n    # Darwin sucks\n    eval std_shrext=\\\"$shrext_cmds\\\"\n\n    # Only execute mode is allowed to have -dlopen flags.\n    if test -n \"$opt_dlopen\" && test \"$opt_mode\" != execute; then\n      func_error \"unrecognized option \\`-dlopen'\"\n      $ECHO \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    # Change the help message to a mode-specific one.\n    generic_help=\"$help\"\n    help=\"Try \\`$progname --help --mode=$opt_mode' for more information.\"\n  }\n])\n\n\nM4SH_VERBATIM([[\n## ----------- ##\n##    Main.    ##\n## ----------- ##\n\n# func_lalib_p file\n# True iff FILE is a libtool `.la' library or `.lo' object file.\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_lalib_p ()\n{\n    test -f \"$1\" &&\n      $SED -e 4q \"$1\" 2>/dev/null \\\n        | $GREP \"^# Generated by .*$PACKAGE\" > /dev/null 2>&1\n}\n\n# func_lalib_unsafe_p file\n# True iff FILE is a libtool `.la' library or `.lo' object file.\n# This function implements the same check as func_lalib_p without\n# resorting to external programs.  To this end, it redirects stdin and\n# closes it afterwards, without saving the original file descriptor.\n# As a safety measure, use it only where a negative result would be\n# fatal anyway.  Works if `file' does not exist.\nfunc_lalib_unsafe_p ()\n{\n    lalib_p=no\n    if test -f \"$1\" && test -r \"$1\" && exec 5<&0 <\"$1\"; then\n\tfor lalib_p_l in 1 2 3 4\n\tdo\n\t    read lalib_p_line\n\t    case \"$lalib_p_line\" in\n\t\t\\#\\ Generated\\ by\\ *$PACKAGE* ) lalib_p=yes; break;;\n\t    esac\n\tdone\n\texec 0<&5 5<&-\n    fi\n    test \"$lalib_p\" = yes\n}\n\n# func_ltwrapper_script_p file\n# True iff FILE is a libtool wrapper script\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_script_p ()\n{\n    func_lalib_p \"$1\"\n}\n\n# func_ltwrapper_executable_p file\n# True iff FILE is a libtool wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_executable_p ()\n{\n    func_ltwrapper_exec_suffix=\n    case $1 in\n    *.exe) ;;\n    *) func_ltwrapper_exec_suffix=.exe ;;\n    esac\n    $GREP \"$magic_exe\" \"$1$func_ltwrapper_exec_suffix\" >/dev/null 2>&1\n}\n\n# func_ltwrapper_scriptname file\n# Assumes file is an ltwrapper_executable\n# uses $file to determine the appropriate filename for a\n# temporary ltwrapper_script.\nfunc_ltwrapper_scriptname ()\n{\n    func_dirname_and_basename \"$1\" \"\" \".\"\n    func_stripname '' '.exe' \"$func_basename_result\"\n    func_ltwrapper_scriptname_result=\"$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper\"\n}\n\n# func_ltwrapper_p file\n# True iff FILE is a libtool wrapper script or wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_p ()\n{\n    func_ltwrapper_script_p \"$1\" || func_ltwrapper_executable_p \"$1\"\n}\n\n\n# func_execute_cmds commands fail_cmd\n# Execute tilde-delimited COMMANDS.\n# If FAIL_CMD is given, eval that upon failure.\n# FAIL_CMD may read-access the current command in variable CMD!\nfunc_execute_cmds ()\n{\n    $opt_debug\n    save_ifs=$IFS; IFS='~'\n    for cmd in $1; do\n      IFS=$save_ifs\n      eval cmd=\\\"$cmd\\\"\n      func_show_eval \"$cmd\" \"${2-:}\"\n    done\n    IFS=$save_ifs\n}\n\n\n# func_source file\n# Source FILE, adding directory component if necessary.\n# Note that it is not necessary on cygwin/mingw to append a dot to\n# FILE even if both FILE and FILE.exe exist: automatic-append-.exe\n# behavior happens only for exec(3), not for open(2)!  Also, sourcing\n# `FILE.' does not work on cygwin managed mounts.\nfunc_source ()\n{\n    $opt_debug\n    case $1 in\n    */* | *\\\\*)\t. \"$1\" ;;\n    *)\t\t. \"./$1\" ;;\n    esac\n}\n\n\n# func_resolve_sysroot PATH\n# Replace a leading = in PATH with a sysroot.  Store the result into\n# func_resolve_sysroot_result\nfunc_resolve_sysroot ()\n{\n  func_resolve_sysroot_result=$1\n  case $func_resolve_sysroot_result in\n  =*)\n    func_stripname '=' '' \"$func_resolve_sysroot_result\"\n    func_resolve_sysroot_result=$lt_sysroot$func_stripname_result\n    ;;\n  esac\n}\n\n# func_replace_sysroot PATH\n# If PATH begins with the sysroot, replace it with = and\n# store the result into func_replace_sysroot_result.\nfunc_replace_sysroot ()\n{\n  case \"$lt_sysroot:$1\" in\n  ?*:\"$lt_sysroot\"*)\n    func_stripname \"$lt_sysroot\" '' \"$1\"\n    func_replace_sysroot_result=\"=$func_stripname_result\"\n    ;;\n  *)\n    # Including no sysroot.\n    func_replace_sysroot_result=$1\n    ;;\n  esac\n}\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    $opt_debug\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n\tfunc_append_quoted CC_quoted \"$arg\"\n      done\n      CC_expanded=`func_echo_all $CC`\n      CC_quoted_expanded=`func_echo_all $CC_quoted`\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n      \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if $GREP \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t      # Double-quote args containing other shell metacharacters.\n\t      func_append_quoted CC_quoted \"$arg\"\n\t    done\n\t    CC_expanded=`func_echo_all $CC`\n\t    CC_quoted_expanded=`func_echo_all $CC_quoted`\n\t    case \"$@ \" in\n\t    \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n\t    \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  func_echo \"unable to infer tagged configuration\"\n\t  func_fatal_error \"specify a tag with \\`--tag'\"\n#\telse\n#\t  func_verbose \"using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n\n# func_write_libtool_object output_name pic_name nonpic_name\n# Create a libtool object file (analogous to a \".la\" file),\n# but don't create it if we're doing a dry run.\nfunc_write_libtool_object ()\n{\n    write_libobj=${1}\n    if test \"$build_libtool_libs\" = yes; then\n      write_lobj=\\'${2}\\'\n    else\n      write_lobj=none\n    fi\n\n    if test \"$build_old_libs\" = yes; then\n      write_oldobj=\\'${3}\\'\n    else\n      write_oldobj=none\n    fi\n\n    $opt_dry_run || {\n      cat >${write_libobj}T <<EOF\n# $write_libobj - a libtool object file\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=$write_lobj\n\n# Name of the non-PIC object\nnon_pic_object=$write_oldobj\n\nEOF\n      $MV \"${write_libobj}T\" \"${write_libobj}\"\n    }\n}\n\n\n##################################################\n# FILE NAME AND PATH CONVERSION HELPER FUNCTIONS #\n##################################################\n\n# func_convert_core_file_wine_to_w32 ARG\n# Helper function used by file name conversion functions when $build is *nix,\n# and $host is mingw, cygwin, or some other w32 environment. Relies on a\n# correctly configured wine environment available, with the winepath program\n# in $build's $PATH.\n#\n# ARG is the $build file name to be converted to w32 format.\n# Result is available in $func_convert_core_file_wine_to_w32_result, and will\n# be empty on error (or when ARG is empty)\nfunc_convert_core_file_wine_to_w32 ()\n{\n  $opt_debug\n  func_convert_core_file_wine_to_w32_result=\"$1\"\n  if test -n \"$1\"; then\n    # Unfortunately, winepath does not exit with a non-zero error code, so we\n    # are forced to check the contents of stdout. On the other hand, if the\n    # command is not found, the shell will set an exit code of 127 and print\n    # *an error message* to stdout. So we must check for both error code of\n    # zero AND non-empty stdout, which explains the odd construction:\n    func_convert_core_file_wine_to_w32_tmp=`winepath -w \"$1\" 2>/dev/null`\n    if test \"$?\" -eq 0 && test -n \"${func_convert_core_file_wine_to_w32_tmp}\"; then\n      func_convert_core_file_wine_to_w32_result=`$ECHO \"$func_convert_core_file_wine_to_w32_tmp\" |\n        $SED -e \"$lt_sed_naive_backslashify\"`\n    else\n      func_convert_core_file_wine_to_w32_result=\n    fi\n  fi\n}\n# end: func_convert_core_file_wine_to_w32\n\n\n# func_convert_core_path_wine_to_w32 ARG\n# Helper function used by path conversion functions when $build is *nix, and\n# $host is mingw, cygwin, or some other w32 environment. Relies on a correctly\n# configured wine environment available, with the winepath program in $build's\n# $PATH. Assumes ARG has no leading or trailing path separator characters.\n#\n# ARG is path to be converted from $build format to win32.\n# Result is available in $func_convert_core_path_wine_to_w32_result.\n# Unconvertible file (directory) names in ARG are skipped; if no directory names\n# are convertible, then the result may be empty.\nfunc_convert_core_path_wine_to_w32 ()\n{\n  $opt_debug\n  # unfortunately, winepath doesn't convert paths, only file names \n  func_convert_core_path_wine_to_w32_result=\"\"\n  if test -n \"$1\"; then\n    oldIFS=$IFS\n    IFS=:\n    for func_convert_core_path_wine_to_w32_f in $1; do\n      IFS=$oldIFS\n      func_convert_core_file_wine_to_w32 \"$func_convert_core_path_wine_to_w32_f\"\n      if test -n \"$func_convert_core_file_wine_to_w32_result\" ; then\n        if test -z \"$func_convert_core_path_wine_to_w32_result\"; then\n          func_convert_core_path_wine_to_w32_result=\"$func_convert_core_file_wine_to_w32_result\"\n        else\n          func_append func_convert_core_path_wine_to_w32_result \";$func_convert_core_file_wine_to_w32_result\"\n        fi\n      fi\n    done\n    IFS=$oldIFS\n  fi\n}\n# end: func_convert_core_path_wine_to_w32\n\n\n# func_cygpath ARGS...\n# Wrapper around calling the cygpath program via LT_CYGPATH. This is used when\n# when (1) $build is *nix and Cygwin is hosted via a wine environment; or (2)\n# $build is MSYS and $host is Cygwin, or (3) $build is Cygwin. In case (1) or\n# (2), returns the Cygwin file name or path in func_cygpath_result (input\n# file name or path is assumed to be in w32 format, as previously converted\n# from $build's *nix or MSYS format). In case (3), returns the w32 file name\n# or path in func_cygpath_result (input file name or path is assumed to be in\n# Cygwin format). Returns an empty string on error.\n#\n# ARGS are passed to cygpath, with the last one being the file name or path to\n# be converted.\n#\n# Specify the absolute *nix (or w32) name to cygpath in the LT_CYGPATH\n# environment variable; do not put it in $PATH.\nfunc_cygpath ()\n{\n  $opt_debug\n  if test -n \"$LT_CYGPATH\" && test -f \"$LT_CYGPATH\"; then\n    func_cygpath_result=`$LT_CYGPATH \"$@\" 2>/dev/null`\n    if test \"$?\" -ne 0; then\n      # on failure, ensure result is empty\n      func_cygpath_result=\n    fi\n  else\n    func_cygpath_result=\n    func_error \"LT_CYGPATH is empty or specifies non-existent file: \\`$LT_CYGPATH'\"\n  fi\n}\n#end: func_cygpath\n\n\n# func_convert_core_msys_to_w32 ARG\n# Convert file name or path ARG from MSYS format to w32 format.  Return\n# result in func_convert_core_msys_to_w32_result.\nfunc_convert_core_msys_to_w32 ()\n{\n  $opt_debug\n  # awkward: cmd appends spaces to result\n  func_convert_core_msys_to_w32_result=`( cmd //c echo \"$1\" ) 2>/dev/null |\n    $SED -e 's/[ ]*$//' -e \"$lt_sed_naive_backslashify\"`\n}\n#end: func_convert_core_msys_to_w32\n\n\n# func_convert_file_check ARG1 ARG2\n# Verify that ARG1 (a file name in $build format) was converted to $host\n# format in ARG2. Otherwise, emit an error message, but continue (resetting\n# func_to_host_file_result to ARG1).\nfunc_convert_file_check ()\n{\n  $opt_debug\n  if test -z \"$2\" && test -n \"$1\" ; then\n    func_error \"Could not determine host file name corresponding to\"\n    func_error \"  \\`$1'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback:\n    func_to_host_file_result=\"$1\"\n  fi\n}\n# end func_convert_file_check\n\n\n# func_convert_path_check FROM_PATHSEP TO_PATHSEP FROM_PATH TO_PATH\n# Verify that FROM_PATH (a path in $build format) was converted to $host\n# format in TO_PATH. Otherwise, emit an error message, but continue, resetting\n# func_to_host_file_result to a simplistic fallback value (see below).\nfunc_convert_path_check ()\n{\n  $opt_debug\n  if test -z \"$4\" && test -n \"$3\"; then\n    func_error \"Could not determine the host path corresponding to\"\n    func_error \"  \\`$3'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback.  This is a deliberately simplistic \"conversion\" and\n    # should not be \"improved\".  See libtool.info.\n    if test \"x$1\" != \"x$2\"; then\n      lt_replace_pathsep_chars=\"s|$1|$2|g\"\n      func_to_host_path_result=`echo \"$3\" |\n        $SED -e \"$lt_replace_pathsep_chars\"`\n    else\n      func_to_host_path_result=\"$3\"\n    fi\n  fi\n}\n# end func_convert_path_check\n\n\n# func_convert_path_front_back_pathsep FRONTPAT BACKPAT REPL ORIG\n# Modifies func_to_host_path_result by prepending REPL if ORIG matches FRONTPAT\n# and appending REPL if ORIG matches BACKPAT.\nfunc_convert_path_front_back_pathsep ()\n{\n  $opt_debug\n  case $4 in\n  $1 ) func_to_host_path_result=\"$3$func_to_host_path_result\"\n    ;;\n  esac\n  case $4 in\n  $2 ) func_append func_to_host_path_result \"$3\"\n    ;;\n  esac\n}\n# end func_convert_path_front_back_pathsep\n\n\n##################################################\n# $build to $host FILE NAME CONVERSION FUNCTIONS #\n##################################################\n# invoked via `$to_host_file_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# Result will be available in $func_to_host_file_result.\n\n\n# func_to_host_file ARG\n# Converts the file name ARG from $build format to $host format. Return result\n# in func_to_host_file_result.\nfunc_to_host_file ()\n{\n  $opt_debug\n  $to_host_file_cmd \"$1\"\n}\n# end func_to_host_file\n\n\n# func_to_tool_file ARG LAZY\n# converts the file name ARG from $build format to toolchain format. Return\n# result in func_to_tool_file_result.  If the conversion in use is listed\n# in (the comma separated) LAZY, no conversion takes place.\nfunc_to_tool_file ()\n{\n  $opt_debug\n  case ,$2, in\n    *,\"$to_tool_file_cmd\",*)\n      func_to_tool_file_result=$1\n      ;;\n    *)\n      $to_tool_file_cmd \"$1\"\n      func_to_tool_file_result=$func_to_host_file_result\n      ;;\n  esac\n}\n# end func_to_tool_file\n\n\n# func_convert_file_noop ARG\n# Copy ARG to func_to_host_file_result.\nfunc_convert_file_noop ()\n{\n  func_to_host_file_result=\"$1\"\n}\n# end func_convert_file_noop\n\n\n# func_convert_file_msys_to_w32 ARG\n# Convert file name ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_msys_to_w32 ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_to_host_file_result=\"$func_convert_core_msys_to_w32_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_w32\n\n\n# func_convert_file_cygwin_to_w32 ARG\n# Convert file name ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_cygwin_to_w32 ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    # because $build is cygwin, we call \"the\" cygpath in $PATH; no need to use\n    # LT_CYGPATH in this case.\n    func_to_host_file_result=`cygpath -m \"$1\"`\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_cygwin_to_w32\n\n\n# func_convert_file_nix_to_w32 ARG\n# Convert file name ARG from *nix to w32 format.  Requires a wine environment\n# and a working winepath. Returns result in func_to_host_file_result.\nfunc_convert_file_nix_to_w32 ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_to_host_file_result=\"$func_convert_core_file_wine_to_w32_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_w32\n\n\n# func_convert_file_msys_to_cygwin ARG\n# Convert file name ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_file_msys_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_file_result=\"$func_cygpath_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_cygwin\n\n\n# func_convert_file_nix_to_cygwin ARG\n# Convert file name ARG from *nix to Cygwin format.  Requires Cygwin installed\n# in a wine environment, working winepath, and LT_CYGPATH set.  Returns result\n# in func_to_host_file_result.\nfunc_convert_file_nix_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    # convert from *nix to w32, then use cygpath to convert from w32 to cygwin.\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_file_wine_to_w32_result\"\n    func_to_host_file_result=\"$func_cygpath_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_cygwin\n\n\n#############################################\n# $build to $host PATH CONVERSION FUNCTIONS #\n#############################################\n# invoked via `$to_host_path_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# The result will be available in $func_to_host_path_result.\n#\n# Path separators are also converted from $build format to $host format.  If\n# ARG begins or ends with a path separator character, it is preserved (but\n# converted to $host format) on output.\n#\n# All path conversion functions are named using the following convention:\n#   file name conversion function    : func_convert_file_X_to_Y ()\n#   path conversion function         : func_convert_path_X_to_Y ()\n# where, for any given $build/$host combination the 'X_to_Y' value is the\n# same.  If conversion functions are added for new $build/$host combinations,\n# the two new functions must follow this pattern, or func_init_to_host_path_cmd\n# will break.\n\n\n# func_init_to_host_path_cmd\n# Ensures that function \"pointer\" variable $to_host_path_cmd is set to the\n# appropriate value, based on the value of $to_host_file_cmd.\nto_host_path_cmd=\nfunc_init_to_host_path_cmd ()\n{\n  $opt_debug\n  if test -z \"$to_host_path_cmd\"; then\n    func_stripname 'func_convert_file_' '' \"$to_host_file_cmd\"\n    to_host_path_cmd=\"func_convert_path_${func_stripname_result}\"\n  fi\n}\n\n\n# func_to_host_path ARG\n# Converts the path ARG from $build format to $host format. Return result\n# in func_to_host_path_result.\nfunc_to_host_path ()\n{\n  $opt_debug\n  func_init_to_host_path_cmd\n  $to_host_path_cmd \"$1\"\n}\n# end func_to_host_path\n\n\n# func_convert_path_noop ARG\n# Copy ARG to func_to_host_path_result.\nfunc_convert_path_noop ()\n{\n  func_to_host_path_result=\"$1\"\n}\n# end func_convert_path_noop\n\n\n# func_convert_path_msys_to_w32 ARG\n# Convert path ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_path_result.\nfunc_convert_path_msys_to_w32 ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from ARG.  MSYS\n    # behavior is inconsistent here; cygpath turns them into '.;' and ';.';\n    # and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=\"$func_convert_core_msys_to_w32_result\"\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_w32\n\n\n# func_convert_path_cygwin_to_w32 ARG\n# Convert path ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_cygwin_to_w32 ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_to_host_path_result=`cygpath -m -p \"$func_to_host_path_tmp1\"`\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_cygwin_to_w32\n\n\n# func_convert_path_nix_to_w32 ARG\n# Convert path ARG from *nix to w32 format.  Requires a wine environment and\n# a working winepath.  Returns result in func_to_host_file_result.\nfunc_convert_path_nix_to_w32 ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=\"$func_convert_core_path_wine_to_w32_result\"\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_w32\n\n\n# func_convert_path_msys_to_cygwin ARG\n# Convert path ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_path_msys_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_path_result=\"$func_cygpath_result\"\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_cygwin\n\n\n# func_convert_path_nix_to_cygwin ARG\n# Convert path ARG from *nix to Cygwin format.  Requires Cygwin installed in a\n# a wine environment, working winepath, and LT_CYGPATH set.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_nix_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from\n    # ARG. msys behavior is inconsistent here, cygpath turns them\n    # into '.;' and ';.', and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_path_wine_to_w32_result\"\n    func_to_host_path_result=\"$func_cygpath_result\"\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_cygwin\n\n\n# func_mode_compile arg...\nfunc_mode_compile ()\n{\n    $opt_debug\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=\"$nonopt\"  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n    pie_flag=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=\"$arg\"\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=\"$arg\"\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  test -n \"$libobj\" && \\\n\t    func_fatal_error \"you cannot specify \\`-o' more than once\"\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-pie | -fpie | -fPIE)\n          func_append pie_flag \" $arg\"\n\t  continue\n\t  ;;\n\n\t-shared | -static | -prefer-pic | -prefer-non-pic)\n\t  func_append later \" $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  func_stripname '-Wc,' '' \"$arg\"\n\t  args=$func_stripname_result\n\t  lastarg=\n\t  save_ifs=\"$IFS\"; IFS=','\n\t  for arg in $args; do\n\t    IFS=\"$save_ifs\"\n\t    func_append_quoted lastarg \"$arg\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\t  func_stripname ' ' '' \"$lastarg\"\n\t  lastarg=$func_stripname_result\n\n\t  # Add the arguments to base_compile.\n\t  func_append base_compile \" $lastarg\"\n\t  continue\n\t  ;;\n\n\t*)\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=\"$srcfile\"\n\t  srcfile=\"$arg\"\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      func_append_quoted base_compile \"$lastarg\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      func_fatal_error \"you must specify an argument for -Xcompile\"\n      ;;\n    target)\n      func_fatal_error \"you must specify a target with \\`-o'\"\n      ;;\n    *)\n      # Get the name of the library object.\n      test -z \"$libobj\" && {\n\tfunc_basename \"$srcfile\"\n\tlibobj=\"$func_basename_result\"\n      }\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    case $libobj in\n    *.[cCFSifmso] | \\\n    *.ada | *.adb | *.ads | *.asm | \\\n    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \\\n    *.[fF][09]? | *.for | *.java | *.go | *.obj | *.sx | *.cu | *.cup)\n      func_xform \"$libobj\"\n      libobj=$func_xform_result\n      ;;\n    esac\n\n    case $libobj in\n    *.lo) func_lo2o \"$libobj\"; obj=$func_lo2o_result ;;\n    *)\n      func_fatal_error \"cannot determine name of library object from \\`$libobj'\"\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -shared)\n\ttest \"$build_libtool_libs\" != yes && \\\n\t  func_fatal_configuration \"can not build a shared library\"\n\tbuild_old_libs=no\n\tcontinue\n\t;;\n\n      -static)\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    func_quote_for_eval \"$libobj\"\n    test \"X$libobj\" != \"X$func_quote_for_eval_result\" \\\n      && $ECHO \"X$libobj\" | $GREP '[@:>@~#^*{};<>?\"'\"'\"'\t &()|`$@<:@]' \\\n      && func_warning \"libobj name \\`$libobj' may not contain shell special characters.\"\n    func_dirname_and_basename \"$obj\" \"/\" \"\"\n    objname=\"$func_basename_result\"\n    xdir=\"$func_dirname_result\"\n    lobj=${xdir}$objdir/$objname\n\n    test -z \"$base_compile\" && \\\n      func_fatal_help \"you must specify a compilation command\"\n\n    # Delete any leftover library objects.\n    if test \"$build_old_libs\" = yes; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2* | cegcc*)\n      pic_mode=default\n      ;;\n    esac\n    if test \"$pic_mode\" = no && test \"$deplibs_check_method\" != pass_all; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test \"$compiler_c_o\" = no; then\n      output_obj=`$ECHO \"$srcfile\" | $SED 's%^.*/%%; s%\\.[^.]*$%%'`.${objext}\n      lockfile=\"$output_obj.lock\"\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test \"$need_locks\" = yes; then\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test \"$need_locks\" = warn; then\n      if test -f \"$lockfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n      func_append removelist \" $output_obj\"\n      $ECHO \"$srcfile\" > \"$lockfile\"\n    fi\n\n    $opt_dry_run || $RM $removelist\n    func_append removelist \" $lockfile\"\n    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15\n\n    func_to_tool_file \"$srcfile\" func_convert_file_msys_to_w32\n    srcfile=$func_to_tool_file_result\n    func_quote_for_eval \"$srcfile\"\n    qsrcfile=$func_quote_for_eval_result\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test \"$build_libtool_libs\" = yes; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test \"$pic_mode\" != no; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      func_mkdir_p \"$xdir$objdir\"\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tfunc_append command \" -o $lobj\"\n      fi\n\n      func_show_eval_locale \"$command\"\t\\\n          'test -n \"$output_obj\" && $RM $removelist; exit $EXIT_FAILURE'\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$lobj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n\n      # Allow error messages only from the first compilation.\n      if test \"$suppress_opt\" = yes; then\n\tsuppress_output=' >/dev/null 2>&1'\n      fi\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test \"$build_old_libs\" = yes; then\n      if test \"$pic_mode\" != yes; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile$pie_flag\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test \"$compiler_c_o\" = yes; then\n\tfunc_append command \" -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      func_append command \"$suppress_output\"\n      func_show_eval_locale \"$command\" \\\n        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$obj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n    fi\n\n    $opt_dry_run || {\n      func_write_libtool_object \"$libobj\" \"$objdir/$objname\" \"$objname\"\n\n      # Unlock the critical section if it was locked\n      if test \"$need_locks\" != no; then\n\tremovelist=$lockfile\n        $RM \"$lockfile\"\n      fi\n    }\n\n    exit $EXIT_SUCCESS\n}\n\n$opt_help || {\n  test \"$opt_mode\" = compile && func_mode_compile ${1+\"$@\"}\n}\n\nfunc_mode_help ()\n{\n    # We need to display help for each of the modes.\n    case $opt_mode in\n      \"\")\n        # Generic help is extracted from the usage comments\n        # at the start of this file.\n        func_help\n        ;;\n\n      clean)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      compile)\n      $ECHO \\\n\"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -no-suppress      do not suppress compiler output for multiple passes\n  -prefer-pic       try to build PIC objects only\n  -prefer-non-pic   try to build non-PIC objects only\n  -shared           do not build a \\`.o' file suitable for static linking\n  -static           only build a \\`.o' file suitable for static linking\n  -Wc,FLAG          pass FLAG directly to the compiler\n\nCOMPILE-COMMAND is a command to be used in creating a \\`standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix \\`.c' with the\nlibrary object suffix, \\`.lo'.\"\n        ;;\n\n      execute)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to \\`-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n        ;;\n\n      finish)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe \\`--dry-run' option if you just want to see what would be executed.\"\n        ;;\n\n      install)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the \\`install' or \\`cp' program.\n\nThe following components of INSTALL-COMMAND are treated specially:\n\n  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n        ;;\n\n      link)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -bindir BINDIR    specify path to binaries directory (for systems where\n                    libraries must be found in the PATH setting at runtime)\n  -dlopen FILE      \\`-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n                    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n                    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  Use a list of object files found in FILE to specify objects\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -shared           only do dynamic linking of libtool libraries\n  -shrext SUFFIX    override the standard shared library file extension\n  -static           do not do any dynamic linking of uninstalled libtool libraries\n  -static-libtool-libs\n                    do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n                    specify library version info [each variable defaults to 0]\n  -weak LIBNAME     declare that the target provides the LIBNAME interface\n  -Wc,FLAG\n  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler\n  -Wl,FLAG\n  -Xlinker FLAG     pass linker-specific FLAG directly to the linker\n  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)\n\nAll other options (arguments beginning with \\`-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in \\`.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in \\`.la', then a libtool library is created,\nonly library objects (\\`.lo' files) may be specified, and \\`-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in \\`.a' or \\`.lib', then a standard library is created\nusing \\`ar' and \\`ranlib', or on Windows using \\`lib'.\n\nIf OUTPUT-FILE ends in \\`.lo' or \\`.${objext}', then a reloadable object file\nis created, otherwise an executable program is created.\"\n        ;;\n\n      uninstall)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      *)\n        func_fatal_help \"invalid operation mode \\`$opt_mode'\"\n        ;;\n    esac\n\n    echo\n    $ECHO \"Try \\`$progname --help' for more information about other modes.\"\n}\n\n# Now that we've collected a possible --mode arg, show help if necessary\nif $opt_help; then\n  if test \"$opt_help\" = :; then\n    func_mode_help\n  else\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\tfunc_mode_help\n      done\n    } | sed -n '1p; 2,$s/^Usage:/  or: /p'\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\techo\n\tfunc_mode_help\n      done\n    } |\n    sed '1d\n      /^When reporting/,/^Report/{\n\tH\n\td\n      }\n      $x\n      /information about other modes/d\n      /more detailed .*MODE/d\n      s/^Usage:.*--mode=\\([^ ]*\\) .*/Description of \\1 mode:/'\n  fi\n  exit $?\nfi\n\n\n# func_mode_execute arg...\nfunc_mode_execute ()\n{\n    $opt_debug\n    # The first argument is the command name.\n    cmd=\"$nonopt\"\n    test -z \"$cmd\" && \\\n      func_fatal_help \"you must specify a COMMAND\"\n\n    # Handle -dlopen flags immediately.\n    for file in $opt_dlopen; do\n      test -f \"$file\" \\\n\t|| func_fatal_help \"\\`$file' is not a file\"\n\n      dir=\n      case $file in\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"\\`$lib' is not a valid libtool archive\"\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\tfunc_source \"$file\"\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && \\\n\t    func_warning \"\\`$file' was not linked with \\`-export-dynamic'\"\n\t  continue\n\tfi\n\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=\"$func_dirname_result\"\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  func_append dir \"/$objdir\"\n\telse\n\t  if test ! -f \"$dir/$dlname\"; then\n\t    func_fatal_error \"cannot find \\`$dlname' in \\`$dir' or \\`$dir/$objdir'\"\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=\"$func_dirname_result\"\n\t;;\n\n      *)\n\tfunc_warning \"\\`-dlopen' is ignored for non-libtool libraries and objects\"\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=\"$absdir\"\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=\"$magic\"\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -* | *.la | *.lo ) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif func_ltwrapper_script_p \"$file\"; then\n\t  func_source \"$file\"\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\telif func_ltwrapper_executable_p \"$file\"; then\n\t  func_ltwrapper_scriptname \"$file\"\n\t  func_source \"$func_ltwrapper_scriptname_result\"\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      func_append_quoted args \"$file\"\n    done\n\n    if test \"X$opt_dry_run\" = Xfalse; then\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\n      do\n\teval \"if test \\\"\\${save_$lt_var+set}\\\" = set; then\n                $lt_var=\\$save_$lt_var; export $lt_var\n\t      else\n\t\t$lt_unset $lt_var\n\t      fi\"\n      done\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\"\\$cmd$args\"\n    else\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$ECHO \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\techo \"export $shlibpath_var\"\n      fi\n      $ECHO \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest \"$opt_mode\" = execute && func_mode_execute ${1+\"$@\"}\n\n\n# func_mode_finish arg...\nfunc_mode_finish ()\n{\n    $opt_debug\n    libs=\n    libdirs=\n    admincmds=\n\n    for opt in \"$nonopt\" ${1+\"$@\"}\n    do\n      if test -d \"$opt\"; then\n\tfunc_append libdirs \" $opt\"\n\n      elif test -f \"$opt\"; then\n\tif func_lalib_unsafe_p \"$opt\"; then\n\t  func_append libs \" $opt\"\n\telse\n\t  func_warning \"\\`$opt' is not a valid libtool archive\"\n\tfi\n\n      else\n\tfunc_fatal_error \"invalid argument \\`$opt'\"\n      fi\n    done\n\n    if test -n \"$libs\"; then\n      if test -n \"$lt_sysroot\"; then\n        sysroot_regex=`$ECHO \"$lt_sysroot\" | $SED \"$sed_make_literal_regex\"`\n        sysroot_cmd=\"s/\\([ ']\\)$sysroot_regex/\\1/g;\"\n      else\n        sysroot_cmd=\n      fi\n\n      # Remove sysroot references\n      if $opt_dry_run; then\n        for lib in $libs; do\n          echo \"removing references to $lt_sysroot and \\`=' prefixes from $lib\"\n        done\n      else\n        tmpdir=`func_mktempdir`\n        for lib in $libs; do\n\t  sed -e \"${sysroot_cmd} s/\\([ ']-[LR]\\)=/\\1/g; s/\\([ ']\\)=/\\1/g\" $lib \\\n\t    > $tmpdir/tmp-la\n\t  mv -f $tmpdir/tmp-la $lib\n\tdone\n        ${RM}r \"$tmpdir\"\n      fi\n    fi\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  func_execute_cmds \"$finish_cmds\" 'admincmds=\"$admincmds\n'\"$cmd\"'\"'\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $opt_dry_run || eval \"$cmds\" || func_append admincmds \"\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    $opt_silent && exit $EXIT_SUCCESS\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      echo \"----------------------------------------------------------------------\"\n      echo \"Libraries have been installed in:\"\n      for libdir in $libdirs; do\n\t$ECHO \"   $libdir\"\n      done\n      echo\n      echo \"If you ever happen to want to link against installed libraries\"\n      echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n      echo \"specify the full pathname of the library, or use the \\`-LLIBDIR'\"\n      echo \"flag during linking and do at least one of the following:\"\n      if test -n \"$shlibpath_var\"; then\n\techo \"   - add LIBDIR to the \\`$shlibpath_var' environment variable\"\n\techo \"     during execution\"\n      fi\n      if test -n \"$runpath_var\"; then\n\techo \"   - add LIBDIR to the \\`$runpath_var' environment variable\"\n\techo \"     during linking\"\n      fi\n      if test -n \"$hardcode_libdir_flag_spec\"; then\n\tlibdir=LIBDIR\n\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n\t$ECHO \"   - use the \\`$flag' linker flag\"\n      fi\n      if test -n \"$admincmds\"; then\n\t$ECHO \"   - have your system administrator run these commands:$admincmds\"\n      fi\n      if test -f /etc/ld.so.conf; then\n\techo \"   - have your system administrator add LIBDIR to \\`/etc/ld.so.conf'\"\n      fi\n      echo\n\n      echo \"See any operating system documentation about shared libraries for\"\n      case $host in\n\tsolaris2.[6789]|solaris2.1[0-9])\n\t  echo \"more information, such as the ld(1), crle(1) and ld.so(8) manual\"\n\t  echo \"pages.\"\n\t  ;;\n\t*)\n\t  echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n\t  ;;\n      esac\n      echo \"----------------------------------------------------------------------\"\n    fi\n    exit $EXIT_SUCCESS\n}\n\ntest \"$opt_mode\" = finish && func_mode_finish ${1+\"$@\"}\n\n\n# func_mode_install arg...\nfunc_mode_install ()\n{\n    $opt_debug\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$nonopt\" = \"$SHELL\" || test \"$nonopt\" = /bin/sh ||\n       # Allow the use of GNU shtool's install command.\n       case $nonopt in *shtool*) :;; *) false;; esac; then\n      # Aesthetically quote it.\n      func_quote_for_eval \"$nonopt\"\n      install_prog=\"$func_quote_for_eval_result \"\n      arg=$1\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    func_quote_for_eval \"$arg\"\n    func_append install_prog \"$func_quote_for_eval_result\"\n    install_shared_prog=$install_prog\n    case \" $install_prog \" in\n      *[\\\\\\ /]cp\\ *) install_cp=: ;;\n      *) install_cp=false ;;\n    esac\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=no\n    stripme=\n    no_mode=:\n    for arg\n    do\n      arg2=\n      if test -n \"$dest\"; then\n\tfunc_append files \" $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=yes ;;\n      -f)\n\tif $install_cp; then :; else\n\t  prev=$arg\n\tfi\n\t;;\n      -g | -m | -o)\n\tprev=$arg\n\t;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  if test \"x$prev\" = x-m && test -n \"$install_override_mode\"; then\n\t    arg2=$install_override_mode\n\t    no_mode=false\n\t  fi\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      func_quote_for_eval \"$arg\"\n      func_append install_prog \" $func_quote_for_eval_result\"\n      if test -n \"$arg2\"; then\n\tfunc_quote_for_eval \"$arg2\"\n      fi\n      func_append install_shared_prog \" $func_quote_for_eval_result\"\n    done\n\n    test -z \"$install_prog\" && \\\n      func_fatal_help \"you must specify an install program\"\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the \\`$prev' option requires an argument\"\n\n    if test -n \"$install_override_mode\" && $no_mode; then\n      if $install_cp; then :; else\n\tfunc_quote_for_eval \"$install_override_mode\"\n\tfunc_append install_shared_prog \" -m $func_quote_for_eval_result\"\n      fi\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\tfunc_fatal_help \"no file or destination specified\"\n      else\n\tfunc_fatal_help \"you must specify a destination\"\n      fi\n    fi\n\n    # Strip any trailing slash from the destination.\n    func_stripname '' '/' \"$dest\"\n    dest=$func_stripname_result\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=yes\n    if test \"$isdir\" = yes; then\n      destdir=\"$dest\"\n      destname=\n    else\n      func_dirname_and_basename \"$dest\" \"\" \".\"\n      destdir=\"$func_dirname_result\"\n      destname=\"$func_basename_result\"\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files; shift\n      test \"$#\" -gt 1 && \\\n\tfunc_fatal_help \"\\`$dest' is not a directory\"\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  func_fatal_help \"\\`$destdir' must be an absolute directory name\"\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tfunc_append staticlibs \" $file\"\n\t;;\n\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"\\`$file' is not a valid libtool archive\"\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\tfunc_source \"$file\"\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append current_libdirs \" $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append future_libdirs \" $libdir\" ;;\n\t  esac\n\tfi\n\n\tfunc_dirname \"$file\" \"/\" \"\"\n\tdir=\"$func_dirname_result\"\n\tfunc_append dir \"$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$ECHO \"$destdir\" | $SED -e \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  test \"$inst_prefix_dir\" = \"$destdir\" && \\\n\t    func_fatal_error \"error: cannot install \\`$file' to a directory not ending in $libdir\"\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  func_warning \"relinking \\`$file'\"\n\t  func_show_eval \"$relink_command\" \\\n\t    'func_fatal_error \"error: relink \\`$file'\\'' with the above command before installing it\"'\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names; shift\n\tif test -n \"$1\"; then\n\t  realname=\"$1\"\n\t  shift\n\n\t  srcname=\"$realname\"\n\t  test -n \"$relink_command\" && srcname=\"$realname\"T\n\n\t  # Install the shared library and build the symlinks.\n\t  func_show_eval \"$install_shared_prog $dir/$srcname $destdir/$realname\" \\\n\t      'exit $?'\n\t  tstripme=\"$stripme\"\n\t  case $host_os in\n\t  cygwin* | mingw* | pw32* | cegcc*)\n\t    case $realname in\n\t    *.dll.a)\n\t      tstripme=\"\"\n\t      ;;\n\t    esac\n\t    ;;\n\t  esac\n\t  if test -n \"$tstripme\" && test -n \"$striplib\"; then\n\t    func_show_eval \"$striplib $destdir/$realname\" 'exit $?'\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try `ln -sf' first, because the `ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      test \"$linkname\" != \"$realname\" \\\n\t\t&& func_show_eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })\"\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=\"$destdir/$realname\"\n\t  func_execute_cmds \"$postinstall_cmds\" 'exit $?'\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tfunc_basename \"$file\"\n\tname=\"$func_basename_result\"\n\tinstname=\"$dir/$name\"i\n\tfunc_show_eval \"$install_prog $instname $destdir/$name\" 'exit $?'\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && func_append staticlibs \" $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  func_basename \"$file\"\n\t  destfile=\"$func_basename_result\"\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  func_lo2o \"$destfile\"\n\t  staticdest=$func_lo2o_result\n\t  ;;\n\t*.$objext)\n\t  staticdest=\"$destfile\"\n\t  destfile=\n\t  ;;\n\t*)\n\t  func_fatal_help \"cannot copy a libtool object to \\`$destfile'\"\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\ttest -n \"$destfile\" && \\\n\t  func_show_eval \"$install_prog $file $destfile\" 'exit $?'\n\n\t# Install the old object if enabled.\n\tif test \"$build_old_libs\" = yes; then\n\t  # Deduce the name of the old-style object file.\n\t  func_lo2o \"$file\"\n\t  staticobj=$func_lo2o_result\n\t  func_show_eval \"$install_prog \\$staticobj \\$staticdest\" 'exit $?'\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  func_basename \"$file\"\n\t  destfile=\"$func_basename_result\"\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\"\"\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      func_stripname '' '.exe' \"$file\"\n\t      file=$func_stripname_result\n\t      stripped_ext=\".exe\"\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin* | *mingw*)\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      wrapper=$func_ltwrapper_scriptname_result\n\t    else\n\t      func_stripname '' '.exe' \"$file\"\n\t      wrapper=$func_stripname_result\n\t    fi\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif func_ltwrapper_script_p \"$wrapper\"; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  func_source \"$wrapper\"\n\n\t  # Check the variables that should have been set.\n\t  test -z \"$generated_by_libtool_version\" && \\\n\t    func_fatal_error \"invalid libtool wrapper script \\`$wrapper'\"\n\n\t  finalize=yes\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      func_source \"$lib\"\n\t    fi\n\t    libfile=\"$libdir/\"`$ECHO \"$lib\" | $SED 's%^.*/%%g'` ### testsuite: skip nested quoting test\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      func_warning \"\\`$lib' has not been installed in \\`$libdir'\"\n\t      finalize=no\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  func_source \"$wrapper\"\n\n\t  outputname=\n\t  if test \"$fast_install\" = no && test -n \"$relink_command\"; then\n\t    $opt_dry_run || {\n\t      if test \"$finalize\" = yes; then\n\t        tmpdir=`func_mktempdir`\n\t\tfunc_basename \"$file$stripped_ext\"\n\t\tfile=\"$func_basename_result\"\n\t        outputname=\"$tmpdir/$file\"\n\t        # Replace the output file specification.\n\t        relink_command=`$ECHO \"$relink_command\" | $SED 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t        $opt_silent || {\n\t          func_quote_for_expand \"$relink_command\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t        }\n\t        if eval \"$relink_command\"; then :\n\t          else\n\t\t  func_error \"error: relink \\`$file' with the above command before installing it\"\n\t\t  $opt_dry_run || ${RM}r \"$tmpdir\"\n\t\t  continue\n\t        fi\n\t        file=\"$outputname\"\n\t      else\n\t        func_warning \"cannot relink \\`$file'\"\n\t      fi\n\t    }\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$ECHO \"$file$stripped_ext\" | $SED \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    func_stripname '' '.exe' \"$destfile\"\n\t    destfile=$func_stripname_result\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tfunc_show_eval \"$install_prog\\$stripme \\$file \\$destfile\" 'exit $?'\n\t$opt_dry_run || if test -n \"$outputname\"; then\n\t  ${RM}r \"$tmpdir\"\n\tfi\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      func_basename \"$file\"\n      name=\"$func_basename_result\"\n\n      # Set up the ranlib parameters.\n      oldlib=\"$destdir/$name\"\n      func_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n      tool_oldlib=$func_to_tool_file_result\n\n      func_show_eval \"$install_prog \\$file \\$oldlib\" 'exit $?'\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\tfunc_show_eval \"$old_striplib $tool_oldlib\" 'exit $?'\n      fi\n\n      # Do each command in the postinstall commands.\n      func_execute_cmds \"$old_postinstall_cmds\" 'exit $?'\n    done\n\n    test -n \"$future_libdirs\" && \\\n      func_warning \"remember to run \\`$progname --finish$future_libdirs'\"\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      $opt_dry_run && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest \"$opt_mode\" = install && func_mode_install ${1+\"$@\"}\n\n\n# func_generate_dlsyms outputname originator pic_p\n# Extract symbols from dlprefiles and create ${outputname}S.o with\n# a dlpreopen symbol table.\nfunc_generate_dlsyms ()\n{\n    $opt_debug\n    my_outputname=\"$1\"\n    my_originator=\"$2\"\n    my_pic_p=\"${3-no}\"\n    my_prefix=`$ECHO \"$my_originator\" | sed 's%[^a-zA-Z0-9]%_%g'`\n    my_dlsyms=\n\n    if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n      if test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\tmy_dlsyms=\"${my_outputname}S.c\"\n      else\n\tfunc_error \"not configured to extract global symbols from dlpreopened files\"\n      fi\n    fi\n\n    if test -n \"$my_dlsyms\"; then\n      case $my_dlsyms in\n      \"\") ;;\n      *.c)\n\t# Discover the nlist of each of the dlfiles.\n\tnlist=\"$output_objdir/${my_outputname}.nm\"\n\n\tfunc_show_eval \"$RM $nlist ${nlist}S ${nlist}T\"\n\n\t# Parse the name list into a source file.\n\tfunc_verbose \"creating $output_objdir/$my_dlsyms\"\n\n\t$opt_dry_run || $ECHO > \"$output_objdir/$my_dlsyms\" \"\\\n/* $my_dlsyms - symbol resolution table for \\`$my_outputname' dlsym emulation. */\n/* Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n#if defined(__GNUC__) && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))\n#pragma GCC diagnostic ignored \\\"-Wstrict-prototypes\\\"\n#endif\n\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined(_WIN32) || defined(__CYGWIN__) || defined(_WIN32_WCE)\n/* DATA imports from DLLs on WIN32 con't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined(__osf__)\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\tif test \"$dlself\" = yes; then\n\t  func_verbose \"generating symbol list for \\`$output'\"\n\n\t  $opt_dry_run || echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t  # Add our own program objects to the symbol list.\n\t  progfiles=`$ECHO \"$objs$old_deplibs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\t  for progfile in $progfiles; do\n\t    func_to_tool_file \"$progfile\" func_convert_file_msys_to_w32\n\t    func_verbose \"extracting global C symbols from \\`$func_to_tool_file_result'\"\n\t    $opt_dry_run || eval \"$NM $func_to_tool_file_result | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  if test -n \"$export_symbols_regex\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  # Prepare the list of exported symbols\n\t  if test -z \"$export_symbols\"; then\n\t    export_symbols=\"$output_objdir/$outputname.exp\"\n\t    $opt_dry_run || {\n\t      $RM $export_symbols\n\t      eval \"${SED} -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n\t      case $host in\n\t      *cygwin* | *mingw* | *cegcc* )\n                eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n                eval 'cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"'\n\t        ;;\n\t      esac\n\t    }\n\t  else\n\t    $opt_dry_run || {\n\t      eval \"${SED} -e 's/\\([].[*^$]\\)/\\\\\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"'\n\t      eval '$GREP -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t      case $host in\n\t        *cygwin* | *mingw* | *cegcc* )\n\t          eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t          eval 'cat \"$nlist\" >> \"$output_objdir/$outputname.def\"'\n\t          ;;\n\t      esac\n\t    }\n\t  fi\n\tfi\n\n\tfor dlprefile in $dlprefiles; do\n\t  func_verbose \"extracting global C symbols from \\`$dlprefile'\"\n\t  func_basename \"$dlprefile\"\n\t  name=\"$func_basename_result\"\n          case $host in\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # if an import library, we need to obtain dlname\n\t      if func_win32_import_lib_p \"$dlprefile\"; then\n\t        func_tr_sh \"$dlprefile\"\n\t        eval \"curr_lafile=\\$libfile_$func_tr_sh_result\"\n\t        dlprefile_dlbasename=\"\"\n\t        if test -n \"$curr_lafile\" && func_lalib_p \"$curr_lafile\"; then\n\t          # Use subshell, to avoid clobbering current variable values\n\t          dlprefile_dlname=`source \"$curr_lafile\" && echo \"$dlname\"`\n\t          if test -n \"$dlprefile_dlname\" ; then\n\t            func_basename \"$dlprefile_dlname\"\n\t            dlprefile_dlbasename=\"$func_basename_result\"\n\t          else\n\t            # no lafile. user explicitly requested -dlpreopen <import library>.\n\t            $sharedlib_from_linklib_cmd \"$dlprefile\"\n\t            dlprefile_dlbasename=$sharedlib_from_linklib_result\n\t          fi\n\t        fi\n\t        $opt_dry_run || {\n\t          if test -n \"$dlprefile_dlbasename\" ; then\n\t            eval '$ECHO \": $dlprefile_dlbasename\" >> \"$nlist\"'\n\t          else\n\t            func_warning \"Could not compute DLL name from $name\"\n\t            eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          fi\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe |\n\t            $SED -e '/I __imp/d' -e 's/I __nm_/D /;s/_nm__//' >> '$nlist'\"\n\t        }\n\t      else # not an import lib\n\t        $opt_dry_run || {\n\t          eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t        }\n\t      fi\n\t    ;;\n\t    *)\n\t      $opt_dry_run || {\n\t        eval '$ECHO \": $name \" >> \"$nlist\"'\n\t        func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t        eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t      }\n\t    ;;\n          esac\n\tdone\n\n\t$opt_dry_run || {\n\t  # Make sure we have at least an empty file.\n\t  test -f \"$nlist\" || : > \"$nlist\"\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t    $MV \"$nlist\"T \"$nlist\"\n\t  fi\n\n\t  # Try sorting and uniquifying the output.\n\t  if $GREP -v \"^: \" < \"$nlist\" |\n\t      if sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\tsort -k 3\n\t      else\n\t\tsort +2\n\t      fi |\n\t      uniq > \"$nlist\"S; then\n\t    :\n\t  else\n\t    $GREP -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t  fi\n\n\t  if test -f \"$nlist\"S; then\n\t    eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$my_dlsyms\"'\n\t  else\n\t    echo '/* NONE */' >> \"$output_objdir/$my_dlsyms\"\n\t  fi\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n\n/* The mapping between symbol names and symbols.  */\ntypedef struct {\n  const char *name;\n  void *address;\n} lt_dlsymlist;\nextern LT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[];\nLT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[] =\n{\\\n  { \\\"$my_originator\\\", (void *) 0 },\"\n\n\t  case $need_lib_prefix in\n\t  no)\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  *)\n\t    eval \"$global_symbol_to_c_name_address_lib_prefix\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  esac\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_${my_prefix}_LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t} # !$opt_dry_run\n\n\tpic_flag_for_symtable=\n\tcase \"$compile_command \" in\n\t*\" -static \"*) ;;\n\t*)\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2.*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\" ;;\n\t  *-*-hpux*)\n\t    pic_flag_for_symtable=\" $pic_flag\"  ;;\n\t  *)\n\t    if test \"X$my_pic_p\" != Xno; then\n\t      pic_flag_for_symtable=\" $pic_flag\"\n\t    fi\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tsymtab_cflags=\n\tfor arg in $LTCFLAGS; do\n\t  case $arg in\n\t  -pie | -fpie | -fPIE) ;;\n\t  *) func_append symtab_cflags \" $arg\" ;;\n\t  esac\n\tdone\n\n\t# Now compile the dynamic symbol file.\n\tfunc_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable \"$my_dlsyms\")' 'exit $?'\n\n\t# Clean up the generated files.\n\tfunc_show_eval '$RM \"$output_objdir/$my_dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\"'\n\n\t# Transform the symbol file into the correct name.\n\tsymfileobj=\"$output_objdir/${my_outputname}S.$objext\"\n\tcase $host in\n\t*cygwin* | *mingw* | *cegcc* )\n\t  if test -f \"$output_objdir/$my_outputname.def\"; then\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t  else\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  fi\n\t  ;;\n\t*)\n\t  compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  ;;\n\tesac\n\t;;\n      *)\n\tfunc_fatal_error \"unknown suffix for \\`$my_dlsyms'\"\n\t;;\n      esac\n    else\n      # We keep going just in case the user didn't refer to\n      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n      # really was required.\n\n      # Nullify the symbol file.\n      compile_command=`$ECHO \"$compile_command\" | $SED \"s% @SYMFILE@%%\"`\n      finalize_command=`$ECHO \"$finalize_command\" | $SED \"s% @SYMFILE@%%\"`\n    fi\n}\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\n# Despite the name, also deal with 64 bit binaries.\nfunc_win32_libid ()\n{\n  $opt_debug\n  win32_libid_type=\"unknown\"\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    # Keep the egrep pattern in sync with the one in _LT_CHECK_MAGIC_METHOD.\n    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |\n       $EGREP 'file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then\n      func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n      win32_nmres=`eval $NM -f posix -A \\\"$func_to_tool_file_result\\\" |\n\t$SED -n -e '\n\t    1,100{\n\t\t/ I /{\n\t\t    s,.*,import,\n\t\t    p\n\t\t    q\n\t\t}\n\t    }'`\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $ECHO \"$win32_libid_type\"\n}\n\n# func_cygming_dll_for_implib ARG\n#\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib ()\n{\n  $opt_debug\n  sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify \"$1\"`\n}\n\n# func_cygming_dll_for_implib_fallback_core SECTION_NAME LIBNAMEs\n#\n# The is the core of a fallback implementation of a\n# platform-specific function to extract the name of the\n# DLL associated with the specified import library LIBNAME.\n#\n# SECTION_NAME is either .idata$6 or .idata$7, depending\n# on the platform and compiler that created the implib.\n#\n# Echos the name of the DLL associated with the\n# specified import library.\nfunc_cygming_dll_for_implib_fallback_core ()\n{\n  $opt_debug\n  match_literal=`$ECHO \"$1\" | $SED \"$sed_make_literal_regex\"`\n  $OBJDUMP -s --section \"$1\" \"$2\" 2>/dev/null |\n    $SED '/^Contents of section '\"$match_literal\"':/{\n      # Place marker at beginning of archive member dllname section\n      s/.*/====MARK====/\n      p\n      d\n    }\n    # These lines can sometimes be longer than 43 characters, but\n    # are always uninteresting\n    /:[\t ]*file format pe[i]\\{,1\\}-/d\n    /^In archive [^:]*:/d\n    # Ensure marker is printed\n    /^====MARK====/p\n    # Remove all lines with less than 43 characters\n    /^.\\{43\\}/!d\n    # From remaining lines, remove first 43 characters\n    s/^.\\{43\\}//' |\n    $SED -n '\n      # Join marker and all lines until next marker into a single line\n      /^====MARK====/ b para\n      H\n      $ b para\n      b\n      :para\n      x\n      s/\\n//g\n      # Remove the marker\n      s/^====MARK====//\n      # Remove trailing dots and whitespace\n      s/[\\. \\t]*$//\n      # Print\n      /./p' |\n    # we now have a list, one entry per line, of the stringified\n    # contents of the appropriate section of all members of the\n    # archive which possess that section. Heuristic: eliminate\n    # all those which have a first or second character that is\n    # a '.' (that is, objdump's representation of an unprintable\n    # character.) This should work for all archives with less than\n    # 0x302f exports -- but will fail for DLLs whose name actually\n    # begins with a literal '.' or a single character followed by\n    # a '.'.\n    #\n    # Of those that remain, print the first one.\n    $SED -e '/^\\./d;/^.\\./d;q'\n}\n\n# func_cygming_gnu_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is a GNU/binutils-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_gnu_implib_p ()\n{\n  $opt_debug\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_gnu_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $EGREP ' (_head_[A-Za-z0-9_]+_[ad]l*|[A-Za-z0-9_]+_[ad]l*_iname)$'`\n  test -n \"$func_cygming_gnu_implib_tmp\"\n}\n\n# func_cygming_ms_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is an MS-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_ms_implib_p ()\n{\n  $opt_debug\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_ms_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $GREP '_NULL_IMPORT_DESCRIPTOR'`\n  test -n \"$func_cygming_ms_implib_tmp\"\n}\n\n# func_cygming_dll_for_implib_fallback ARG\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n#\n# This fallback implementation is for use when $DLLTOOL\n# does not support the --identify-strict option.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib_fallback ()\n{\n  $opt_debug\n  if func_cygming_gnu_implib_p \"$1\" ; then\n    # binutils import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' \"$1\"`\n  elif func_cygming_ms_implib_p \"$1\" ; then\n    # ms-generated import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' \"$1\"`\n  else\n    # unknown\n    sharedlib_from_linklib_result=\"\"\n  fi\n}\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    $opt_debug\n    f_ex_an_ar_dir=\"$1\"; shift\n    f_ex_an_ar_oldlib=\"$1\"\n    if test \"$lock_old_archive_extraction\" = yes; then\n      lockfile=$f_ex_an_ar_oldlib.lock\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    fi\n    func_show_eval \"(cd \\$f_ex_an_ar_dir && $AR x \\\"\\$f_ex_an_ar_oldlib\\\")\" \\\n\t\t   'stat=$?; rm -f \"$lockfile\"; exit $stat'\n    if test \"$lock_old_archive_extraction\" = yes; then\n      $opt_dry_run || rm -f \"$lockfile\"\n    fi\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      func_fatal_error \"object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\"\n    fi\n}\n\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    $opt_debug\n    my_gentop=\"$1\"; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\"\"\n    my_xlib=\"\"\n    my_xabs=\"\"\n    my_xdir=\"\"\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=\"$my_xlib\" ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      func_basename \"$my_xlib\"\n      my_xlib=\"$func_basename_result\"\n      my_xlib_u=$my_xlib\n      while :; do\n        case \" $extracted_archives \" in\n\t*\" $my_xlib_u \"*)\n\t  func_arith $extracted_serial + 1\n\t  extracted_serial=$func_arith_result\n\t  my_xlib_u=lt$extracted_serial-$my_xlib ;;\n\t*) break ;;\n\tesac\n      done\n      extracted_archives=\"$extracted_archives $my_xlib_u\"\n      my_xdir=\"$my_gentop/$my_xlib_u\"\n\n      func_mkdir_p \"$my_xdir\"\n\n      case $host in\n      *-darwin*)\n\tfunc_verbose \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\t$opt_dry_run || {\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  darwin_base_archive=`basename \"$darwin_archive\"`\n\t  darwin_arches=`$LIPO -info \"$darwin_archive\" 2>/dev/null | $GREP Architectures 2>/dev/null || true`\n\t  if test -n \"$darwin_arches\"; then\n\t    darwin_arches=`$ECHO \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    func_verbose \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches ; do\n\t      func_mkdir_p \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      $LIPO -thin $darwin_arch -output \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\" \"${darwin_archive}\"\n\t      cd \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      func_extract_an_archive \"`pwd`\" \"${darwin_base_archive}\"\n\t      cd \"$darwin_curdir\"\n\t      $RM \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\"\n\t    done # $darwin_arches\n            ## Okay now we've a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print | $SED -e \"$basename\" | sort -u`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n\t      $LIPO -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    $RM -rf unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd $darwin_orig_dir\n\t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\t} # !$opt_dry_run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n    done\n\n    func_extract_archives_result=\"$my_oldobjs\"\n}\n\n\n# func_emit_wrapper [arg=no]\n#\n# Emit a libtool wrapper script on stdout.\n# Don't directly open a file because we may want to\n# incorporate the script contents within a cygwin/mingw\n# wrapper executable.  Must ONLY be called from within\n# func_mode_link because it depends on a number of variables\n# set therein.\n#\n# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\n# variable will take.  If 'yes', then the emitted script\n# will assume that the directory in which it is stored is\n# the $objdir directory.  This is a cygwin/mingw-specific\n# behavior.\nfunc_emit_wrapper ()\n{\n\tfunc_emit_wrapper_arg1=${1-no}\n\n\t$ECHO \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='$sed_quote_subst'\n\n# Be Bourne compatible\nif test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variables:\n  generated_by_libtool_version='$macro_version'\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$ECHO are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    file=\\\"\\$0\\\"\"\n\n    qECHO=`$ECHO \"$ECHO\" | $SED \"$sed_quote_subst\"`\n    $ECHO \"\\\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n    ECHO=\\\"$qECHO\\\"\n  fi\n\n# Very basic option parsing. These options are (a) specific to\n# the libtool wrapper, (b) are identical between the wrapper\n# /script/ and the wrapper /executable/ which is used only on\n# windows platforms, and (c) all begin with the string \"--lt-\"\n# (application programs are unlikely to have options which match\n# this pattern).\n#\n# There are only two supported options: --lt-debug and\n# --lt-dump-script. There is, deliberately, no --lt-help.\n#\n# The first argument to this parsing function should be the\n# script's $0 value, followed by \"$@\".\nlt_option_debug=\nfunc_parse_lt_options ()\n{\n  lt_script_arg0=\\$0\n  shift\n  for lt_opt\n  do\n    case \\\"\\$lt_opt\\\" in\n    --lt-debug) lt_option_debug=1 ;;\n    --lt-dump-script)\n        lt_dump_D=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%/[^/]*$%%'\\`\n        test \\\"X\\$lt_dump_D\\\" = \\\"X\\$lt_script_arg0\\\" && lt_dump_D=.\n        lt_dump_F=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%^.*/%%'\\`\n        cat \\\"\\$lt_dump_D/\\$lt_dump_F\\\"\n        exit 0\n      ;;\n    --lt-*)\n        \\$ECHO \\\"Unrecognized --lt- option: '\\$lt_opt'\\\" 1>&2\n        exit 1\n      ;;\n    esac\n  done\n\n  # Print the debug banner immediately:\n  if test -n \\\"\\$lt_option_debug\\\"; then\n    echo \\\"${outputname}:${output}:\\${LINENO}: libtool wrapper (GNU $PACKAGE$TIMESTAMP) $VERSION\\\" 1>&2\n  fi\n}\n\n# Used when --lt-debug. Prints its arguments to stdout\n# (redirection is the responsibility of the caller)\nfunc_lt_dump_args ()\n{\n  lt_dump_args_N=1;\n  for lt_arg\n  do\n    \\$ECHO \\\"${outputname}:${output}:\\${LINENO}: newargv[\\$lt_dump_args_N]: \\$lt_arg\\\"\n    lt_dump_args_N=\\`expr \\$lt_dump_args_N + 1\\`\n  done\n}\n\n# Core function for launching the target application\nfunc_exec_program_core ()\n{\n\"\n  case $host in\n  # Backslashes separate directories on plain windows\n  *-*-mingw | *-*-os2* | *-cegcc*)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"${outputname}:${output}:\\${LINENO}: newargv[0]: \\$progdir\\\\\\\\\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n\n  *)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"${outputname}:${output}:\\${LINENO}: newargv[0]: \\$progdir/\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n  esac\n  $ECHO \"\\\n      \\$ECHO \\\"\\$0: cannot exec \\$program \\$*\\\" 1>&2\n      exit 1\n}\n\n# A function to encapsulate launching the target application\n# Strips options in the --lt-* namespace from \\$@ and\n# launches target application with the remaining arguments.\nfunc_exec_program ()\n{\n  case \\\" \\$* \\\" in\n  *\\\\ --lt-*)\n    for lt_wr_arg\n    do\n      case \\$lt_wr_arg in\n      --lt-*) ;;\n      *) set x \\\"\\$@\\\" \\\"\\$lt_wr_arg\\\"; shift;;\n      esac\n      shift\n    done ;;\n  esac\n  func_exec_program_core \\${1+\\\"\\$@\\\"}\n}\n\n  # Parse options\n  func_parse_lt_options \\\"\\$0\\\" \\${1+\\\"\\$@\\\"}\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  done\n\n  # Usually 'no', except on cygwin/mingw when embedded into\n  # the cwrapper.\n  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1\n  if test \\\"\\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\\\" = \\\"yes\\\"; then\n    # special case for '.'\n    if test \\\"\\$thisdir\\\" = \\\".\\\"; then\n      thisdir=\\`pwd\\`\n    fi\n    # remove .libs from thisdir\n    case \\\"\\$thisdir\\\" in\n    *[\\\\\\\\/]$objdir ) thisdir=\\`\\$ECHO \\\"\\$thisdir\\\" | $SED 's%[\\\\\\\\/][^\\\\\\\\/]*$%%'\\` ;;\n    $objdir )   thisdir=. ;;\n    esac\n  fi\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test \"$fast_install\" = yes; then\n\t  $ECHO \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" ||\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | ${SED} 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $MKDIR \\\"\\$progdir\\\"\n    else\n      $RM \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $ECHO \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\$relink_command 2>&1\\`; then :\n      else\n\t$ECHO \\\"\\$relink_command_output\\\" >&2\n\t$RM \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $RM \\\"\\$progdir/\\$program\\\";\n      $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $RM \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $ECHO \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$ECHO \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# fixup the dll searchpath if we need to.\n\t#\n\t# Fix the DLL searchpath if we need to.  Do this before prepending\n\t# to shlibpath, because on Windows, both are PATH and uninstalled\n\t# libraries must come first.\n\tif test -n \"$dllsearchpath\"; then\n\t  $ECHO \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t# Export our shlibpath_var if we have one.\n\tif test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $ECHO \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" | $SED 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t$ECHO \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n      func_exec_program \\${1+\\\"\\$@\\\"}\n    fi\n  else\n    # The program doesn't exist.\n    \\$ECHO \\\"\\$0: error: \\\\\\`\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$ECHO \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    \\$ECHO \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n}\n\n\n# func_emit_cwrapperexe_src\n# emit the source code for a wrapper executable on stdout\n# Must ONLY be called from within func_mode_link because\n# it depends on a number of variable set therein.\nfunc_emit_cwrapperexe_src ()\n{\n\tcat <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n*/\nEOF\n\t    cat <<\"EOF\"\n#ifdef _MSC_VER\n# define _CRT_SECURE_NO_DEPRECATE 1\n#endif\n#include <stdio.h>\n#include <stdlib.h>\n#ifdef _MSC_VER\n# include <direct.h>\n# include <process.h>\n# include <io.h>\n#else\n# include <unistd.h>\n# include <stdint.h>\n# ifdef __CYGWIN__\n#  include <io.h>\n# endif\n#endif\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <sys/stat.h>\n\n/* declarations of non-ANSI functions */\n#if defined(__MINGW32__)\n# ifdef __STRICT_ANSI__\nint _putenv (const char *);\n# endif\n#elif defined(__CYGWIN__)\n# ifdef __STRICT_ANSI__\nchar *realpath (const char *, char *);\nint putenv (char *);\nint setenv (const char *, const char *, int);\n# endif\n/* #elif defined (other platforms) ... */\n#endif\n\n/* portability defines, excluding path handling macros */\n#if defined(_MSC_VER)\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n# define S_IXUSR _S_IEXEC\n# ifndef _INTPTR_T_DEFINED\n#  define _INTPTR_T_DEFINED\n#  define intptr_t int\n# endif\n#elif defined(__MINGW32__)\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n#elif defined(__CYGWIN__)\n# define HAVE_SETENV\n# define FOPEN_WB \"wb\"\n/* #elif defined (other platforms) ... */\n#endif\n\n#if defined(PATH_MAX)\n# define LT_PATHMAX PATH_MAX\n#elif defined(MAXPATHLEN)\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef S_IXOTH\n# define S_IXOTH 0\n#endif\n#ifndef S_IXGRP\n# define S_IXGRP 0\n#endif\n\n/* path handling portability macros */\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \\\n  defined (__OS2__)\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# define FOPEN_WB \"wb\"\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#ifndef FOPEN_WB\n# define FOPEN_WB \"w\"\n#endif\n#ifndef _O_BINARY\n# define _O_BINARY 0\n#endif\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free ((void *) stale); stale = 0; } \\\n} while (0)\n\n#if defined(LT_DEBUGWRAPPER)\nstatic int lt_debug = 1;\n#else\nstatic int lt_debug = 0;\n#endif\n\nconst char *program_name = \"libtool-wrapper\"; /* in case xstrdup fails */\n\nvoid *xmalloc (size_t num);\nchar *xstrdup (const char *string);\nconst char *base_name (const char *name);\nchar *find_executable (const char *wrapper);\nchar *chase_symlinks (const char *pathspec);\nint make_executable (const char *path);\nint check_executable (const char *path);\nchar *strendzap (char *str, const char *pat);\nvoid lt_debugprintf (const char *file, int line, const char *fmt, ...);\nvoid lt_fatal (const char *file, int line, const char *message, ...);\nstatic const char *nonnull (const char *s);\nstatic const char *nonempty (const char *s);\nvoid lt_setenv (const char *name, const char *value);\nchar *lt_extend_str (const char *orig_value, const char *add, int to_end);\nvoid lt_update_exe_path (const char *name, const char *value);\nvoid lt_update_lib_path (const char *name, const char *value);\nchar **prepare_spawn (char **argv);\nvoid lt_dump_script (FILE *f);\nEOF\n\n\t    cat <<EOF\nvolatile const char * MAGIC_EXE = \"$magic_exe\";\nconst char * LIB_PATH_VARNAME = \"$shlibpath_var\";\nEOF\n\n\t    if test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n              func_to_host_path \"$temp_rpath\"\n\t      cat <<EOF\nconst char * LIB_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * LIB_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test -n \"$dllsearchpath\"; then\n              func_to_host_path \"$dllsearchpath:\"\n\t      cat <<EOF\nconst char * EXE_PATH_VARNAME = \"PATH\";\nconst char * EXE_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * EXE_PATH_VARNAME = \"\";\nconst char * EXE_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test \"$fast_install\" = yes; then\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"lt-$outputname\"; /* hopefully, no .exe */\nEOF\n\t    else\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"$outputname\"; /* hopefully, no .exe */\nEOF\n\t    fi\n\n\n\t    cat <<\"EOF\"\n\n#define LTWRAPPER_OPTION_PREFIX         \"--lt-\"\n\nstatic const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;\nstatic const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX \"dump-script\";\nstatic const char *debug_opt            = LTWRAPPER_OPTION_PREFIX \"debug\";\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int  newargc;\n  char *tmp_pathspec;\n  char *actual_cwrapper_path;\n  char *actual_cwrapper_name;\n  char *target_name;\n  char *lt_argv_zero;\n  intptr_t rval = 127;\n\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  newargz = XMALLOC (char *, argc + 1);\n\n  /* very simple arg parsing; don't want to rely on getopt\n   * also, copy all non cwrapper options to newargz, except\n   * argz[0], which is handled differently\n   */\n  newargc=0;\n  for (i = 1; i < argc; i++)\n    {\n      if (strcmp (argv[i], dumpscript_opt) == 0)\n\t{\nEOF\n\t    case \"$host\" in\n\t      *mingw* | *cygwin* )\n\t\t# make stdout use \"unix\" line endings\n\t\techo \"          setmode(1,_O_BINARY);\"\n\t\t;;\n\t      esac\n\n\t    cat <<\"EOF\"\n\t  lt_dump_script (stdout);\n\t  return 0;\n\t}\n      if (strcmp (argv[i], debug_opt) == 0)\n\t{\n          lt_debug = 1;\n          continue;\n\t}\n      if (strcmp (argv[i], ltwrapper_option_prefix) == 0)\n        {\n          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX\n             namespace, but it is not one of the ones we know about and\n             have already dealt with, above (inluding dump-script), then\n             report an error. Otherwise, targets might begin to believe\n             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX\n             namespace. The first time any user complains about this, we'll\n             need to make LTWRAPPER_OPTION_PREFIX a configure-time option\n             or a configure.ac-settable value.\n           */\n          lt_fatal (__FILE__, __LINE__,\n\t\t    \"unrecognized %s option: '%s'\",\n                    ltwrapper_option_prefix, argv[i]);\n        }\n      /* otherwise ... */\n      newargz[++newargc] = xstrdup (argv[i]);\n    }\n  newargz[++newargc] = NULL;\n\nEOF\n\t    cat <<EOF\n  /* The GNU banner must be the first non-error debug message */\n  lt_debugprintf (__FILE__, __LINE__, \"libtool wrapper (GNU $PACKAGE$TIMESTAMP) $VERSION\\n\");\nEOF\n\t    cat <<\"EOF\"\n  lt_debugprintf (__FILE__, __LINE__, \"(main) argv[0]: %s\\n\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__, \"(main) program_name: %s\\n\", program_name);\n\n  tmp_pathspec = find_executable (argv[0]);\n  if (tmp_pathspec == NULL)\n    lt_fatal (__FILE__, __LINE__, \"couldn't find %s\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (before symlink chase) at: %s\\n\",\n\t\t  tmp_pathspec);\n\n  actual_cwrapper_path = chase_symlinks (tmp_pathspec);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (after symlink chase) at: %s\\n\",\n\t\t  actual_cwrapper_path);\n  XFREE (tmp_pathspec);\n\n  actual_cwrapper_name = xstrdup (base_name (actual_cwrapper_path));\n  strendzap (actual_cwrapper_path, actual_cwrapper_name);\n\n  /* wrapper name transforms */\n  strendzap (actual_cwrapper_name, \".exe\");\n  tmp_pathspec = lt_extend_str (actual_cwrapper_name, \".exe\", 1);\n  XFREE (actual_cwrapper_name);\n  actual_cwrapper_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  /* target_name transforms -- use actual target program name; might have lt- prefix */\n  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));\n  strendzap (target_name, \".exe\");\n  tmp_pathspec = lt_extend_str (target_name, \".exe\", 1);\n  XFREE (target_name);\n  target_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(main) libtool target name: %s\\n\",\n\t\t  target_name);\nEOF\n\n\t    cat <<EOF\n  newargz[0] =\n    XMALLOC (char, (strlen (actual_cwrapper_path) +\n\t\t    strlen (\"$objdir\") + 1 + strlen (actual_cwrapper_name) + 1));\n  strcpy (newargz[0], actual_cwrapper_path);\n  strcat (newargz[0], \"$objdir\");\n  strcat (newargz[0], \"/\");\nEOF\n\n\t    cat <<\"EOF\"\n  /* stop here, and copy so we don't have to do this twice */\n  tmp_pathspec = xstrdup (newargz[0]);\n\n  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */\n  strcat (newargz[0], actual_cwrapper_name);\n\n  /* DO want the lt- prefix here if it exists, so use target_name */\n  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);\n  XFREE (tmp_pathspec);\n  tmp_pathspec = NULL;\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t    cat <<\"EOF\"\n  {\n    char* p;\n    while ((p = strchr (newargz[0], '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n    while ((p = strchr (lt_argv_zero, '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n  }\nEOF\n\t    ;;\n\t    esac\n\n\t    cat <<\"EOF\"\n  XFREE (target_name);\n  XFREE (actual_cwrapper_path);\n  XFREE (actual_cwrapper_name);\n\n  lt_setenv (\"BIN_SH\", \"xpg4\"); /* for Tru64 */\n  lt_setenv (\"DUALCASE\", \"1\");  /* for MSK sh */\n  /* Update the DLL searchpath.  EXE_PATH_VALUE ($dllsearchpath) must\n     be prepended before (that is, appear after) LIB_PATH_VALUE ($temp_rpath)\n     because on Windows, both *_VARNAMEs are PATH but uninstalled\n     libraries must come first. */\n  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);\n  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);\n\n  lt_debugprintf (__FILE__, __LINE__, \"(main) lt_argv_zero: %s\\n\",\n\t\t  nonnull (lt_argv_zero));\n  for (i = 0; i < newargc; i++)\n    {\n      lt_debugprintf (__FILE__, __LINE__, \"(main) newargz[%d]: %s\\n\",\n\t\t      i, nonnull (newargz[i]));\n    }\n\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n  /* execv doesn't actually work on mingw as expected on unix */\n  newargz = prepare_spawn (newargz);\n  rval = _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);\n  if (rval == -1)\n    {\n      /* failed to start process */\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"(main) failed to launch target \\\"%s\\\": %s\\n\",\n\t\t      lt_argv_zero, nonnull (strerror (errno)));\n      return 127;\n    }\n  return rval;\nEOF\n\t\t;;\n\t      *)\n\t\tcat <<\"EOF\"\n  execv (lt_argv_zero, newargz);\n  return rval; /* =127, but avoids unused variable warning */\nEOF\n\t\t;;\n\t    esac\n\n\t    cat <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void *p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (__FILE__, __LINE__, \"memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),\n\t\t\t  string) : NULL;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char) name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable (const char *path)\n{\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(check_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0)\n      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))\n    return 1;\n  else\n    return 0;\n}\n\nint\nmake_executable (const char *path)\n{\n  int rval = 0;\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(make_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if (stat (path, &st) >= 0)\n    {\n      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);\n    }\n  return rval;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise\n   Does not chase symlinks, even on platforms that support them.\n*/\nchar *\nfind_executable (const char *wrapper)\n{\n  int has_slash = 0;\n  const char *p;\n  const char *p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  int tmp_len;\n  char *concat_name;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(find_executable): %s\\n\",\n                  nonempty (wrapper));\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable (concat_name))\n\treturn concat_name;\n      XFREE (concat_name);\n    }\n  else\n    {\n#endif\n      if (IS_DIR_SEPARATOR (wrapper[0]))\n\t{\n\t  concat_name = xstrdup (wrapper);\n\t  if (check_executable (concat_name))\n\t    return concat_name;\n\t  XFREE (concat_name);\n\t}\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n    }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n      {\n\thas_slash = 1;\n\tbreak;\n      }\n  if (!has_slash)\n    {\n      /* no slashes; search PATH */\n      const char *path = getenv (\"PATH\");\n      if (path != NULL)\n\t{\n\t  for (p = path; *p; p = p_next)\n\t    {\n\t      const char *q;\n\t      size_t p_len;\n\t      for (q = p; *q; q++)\n\t\tif (IS_PATH_SEPARATOR (*q))\n\t\t  break;\n\t      p_len = q - p;\n\t      p_next = (*q == '\\0' ? q : q + 1);\n\t      if (p_len == 0)\n\t\t{\n\t\t  /* empty path: current directory */\n\t\t  if (getcwd (tmp, LT_PATHMAX) == NULL)\n\t\t    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n                              nonnull (strerror (errno)));\n\t\t  tmp_len = strlen (tmp);\n\t\t  concat_name =\n\t\t    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, tmp, tmp_len);\n\t\t  concat_name[tmp_len] = '/';\n\t\t  strcpy (concat_name + tmp_len + 1, wrapper);\n\t\t}\n\t      else\n\t\t{\n\t\t  concat_name =\n\t\t    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, p, p_len);\n\t\t  concat_name[p_len] = '/';\n\t\t  strcpy (concat_name + p_len + 1, wrapper);\n\t\t}\n\t      if (check_executable (concat_name))\n\t\treturn concat_name;\n\t      XFREE (concat_name);\n\t    }\n\t}\n      /* not found in PATH; assume curdir */\n    }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n              nonnull (strerror (errno)));\n  tmp_len = strlen (tmp);\n  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable (concat_name))\n    return concat_name;\n  XFREE (concat_name);\n  return NULL;\n}\n\nchar *\nchase_symlinks (const char *pathspec)\n{\n#ifndef S_ISLNK\n  return xstrdup (pathspec);\n#else\n  char buf[LT_PATHMAX];\n  struct stat s;\n  char *tmp_pathspec = xstrdup (pathspec);\n  char *p;\n  int has_symlinks = 0;\n  while (strlen (tmp_pathspec) && !has_symlinks)\n    {\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"checking path component for symlinks: %s\\n\",\n\t\t      tmp_pathspec);\n      if (lstat (tmp_pathspec, &s) == 0)\n\t{\n\t  if (S_ISLNK (s.st_mode) != 0)\n\t    {\n\t      has_symlinks = 1;\n\t      break;\n\t    }\n\n\t  /* search backwards for last DIR_SEPARATOR */\n\t  p = tmp_pathspec + strlen (tmp_pathspec) - 1;\n\t  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    p--;\n\t  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    {\n\t      /* no more DIR_SEPARATORS left */\n\t      break;\n\t    }\n\t  *p = '\\0';\n\t}\n      else\n\t{\n\t  lt_fatal (__FILE__, __LINE__,\n\t\t    \"error accessing file \\\"%s\\\": %s\",\n\t\t    tmp_pathspec, nonnull (strerror (errno)));\n\t}\n    }\n  XFREE (tmp_pathspec);\n\n  if (!has_symlinks)\n    {\n      return xstrdup (pathspec);\n    }\n\n  tmp_pathspec = realpath (pathspec, buf);\n  if (tmp_pathspec == 0)\n    {\n      lt_fatal (__FILE__, __LINE__,\n\t\t\"could not follow symlinks for %s\", pathspec);\n    }\n  return xstrdup (tmp_pathspec);\n#endif\n}\n\nchar *\nstrendzap (char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert (str != NULL);\n  assert (pat != NULL);\n\n  len = strlen (str);\n  patlen = strlen (pat);\n\n  if (patlen <= len)\n    {\n      str += len - patlen;\n      if (strcmp (str, pat) == 0)\n\t*str = '\\0';\n    }\n  return str;\n}\n\nvoid\nlt_debugprintf (const char *file, int line, const char *fmt, ...)\n{\n  va_list args;\n  if (lt_debug)\n    {\n      (void) fprintf (stderr, \"%s:%s:%d: \", program_name, file, line);\n      va_start (args, fmt);\n      (void) vfprintf (stderr, fmt, args);\n      va_end (args);\n    }\n}\n\nstatic void\nlt_error_core (int exit_status, const char *file,\n\t       int line, const char *mode,\n\t       const char *message, va_list ap)\n{\n  fprintf (stderr, \"%s:%s:%d: %s: \", program_name, file, line, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *file, int line, const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, file, line, \"FATAL\", message, ap);\n  va_end (ap);\n}\n\nstatic const char *\nnonnull (const char *s)\n{\n  return s ? s : \"(null)\";\n}\n\nstatic const char *\nnonempty (const char *s)\n{\n  return (s && !*s) ? \"(empty)\" : nonnull (s);\n}\n\nvoid\nlt_setenv (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_setenv) setting '%s' to '%s'\\n\",\n                  nonnull (name), nonnull (value));\n  {\n#ifdef HAVE_SETENV\n    /* always make a copy, for consistency with !HAVE_SETENV */\n    char *str = xstrdup (value);\n    setenv (name, str, 1);\n#else\n    int len = strlen (name) + 1 + strlen (value) + 1;\n    char *str = XMALLOC (char, len);\n    sprintf (str, \"%s=%s\", name, value);\n    if (putenv (str) != EXIT_SUCCESS)\n      {\n        XFREE (str);\n      }\n#endif\n  }\n}\n\nchar *\nlt_extend_str (const char *orig_value, const char *add, int to_end)\n{\n  char *new_value;\n  if (orig_value && *orig_value)\n    {\n      int orig_value_len = strlen (orig_value);\n      int add_len = strlen (add);\n      new_value = XMALLOC (char, add_len + orig_value_len + 1);\n      if (to_end)\n        {\n          strcpy (new_value, orig_value);\n          strcpy (new_value + orig_value_len, add);\n        }\n      else\n        {\n          strcpy (new_value, add);\n          strcpy (new_value + add_len, orig_value);\n        }\n    }\n  else\n    {\n      new_value = xstrdup (add);\n    }\n  return new_value;\n}\n\nvoid\nlt_update_exe_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_exe_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      /* some systems can't cope with a ':'-terminated path #' */\n      int len = strlen (new_value);\n      while (((len = strlen (new_value)) > 0) && IS_PATH_SEPARATOR (new_value[len-1]))\n        {\n          new_value[len-1] = '\\0';\n        }\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nvoid\nlt_update_lib_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_lib_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nEOF\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n\n/* Prepares an argument vector before calling spawn().\n   Note that spawn() does not by itself call the command interpreter\n     (getenv (\"COMSPEC\") != NULL ? getenv (\"COMSPEC\") :\n      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n         GetVersionEx(&v);\n         v.dwPlatformId == VER_PLATFORM_WIN32_NT;\n      }) ? \"cmd.exe\" : \"command.com\").\n   Instead it simply concatenates the arguments, separated by ' ', and calls\n   CreateProcess().  We must quote the arguments since Win32 CreateProcess()\n   interprets characters like ' ', '\\t', '\\\\', '\"' (but not '<' and '>') in a\n   special way:\n   - Space and tab are interpreted as delimiters. They are not treated as\n     delimiters if they are surrounded by double quotes: \"...\".\n   - Unescaped double quotes are removed from the input. Their only effect is\n     that within double quotes, space and tab are treated like normal\n     characters.\n   - Backslashes not followed by double quotes are not special.\n   - But 2*n+1 backslashes followed by a double quote become\n     n backslashes followed by a double quote (n >= 0):\n       \\\" -> \"\n       \\\\\\\" -> \\\"\n       \\\\\\\\\\\" -> \\\\\"\n */\n#define SHELL_SPECIAL_CHARS \"\\\"\\\\ \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\n#define SHELL_SPACE_CHARS \" \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\nchar **\nprepare_spawn (char **argv)\n{\n  size_t argc;\n  char **new_argv;\n  size_t i;\n\n  /* Count number of arguments.  */\n  for (argc = 0; argv[argc] != NULL; argc++)\n    ;\n\n  /* Allocate new argument vector.  */\n  new_argv = XMALLOC (char *, argc + 1);\n\n  /* Put quoted arguments into the new argument vector.  */\n  for (i = 0; i < argc; i++)\n    {\n      const char *string = argv[i];\n\n      if (string[0] == '\\0')\n\tnew_argv[i] = xstrdup (\"\\\"\\\"\");\n      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)\n\t{\n\t  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);\n\t  size_t length;\n\t  unsigned int backslashes;\n\t  const char *s;\n\t  char *quoted_string;\n\t  char *p;\n\n\t  length = 0;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    length++;\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\tlength += backslashes + 1;\n\t      length++;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    length += backslashes + 1;\n\n\t  quoted_string = XMALLOC (char, length + 1);\n\n\t  p = quoted_string;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    *p++ = '\"';\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\t{\n\t\t  unsigned int j;\n\t\t  for (j = backslashes + 1; j > 0; j--)\n\t\t    *p++ = '\\\\';\n\t\t}\n\t      *p++ = c;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    {\n\t      unsigned int j;\n\t      for (j = backslashes; j > 0; j--)\n\t\t*p++ = '\\\\';\n\t      *p++ = '\"';\n\t    }\n\t  *p = '\\0';\n\n\t  new_argv[i] = quoted_string;\n\t}\n      else\n\tnew_argv[i] = (char *) string;\n    }\n  new_argv[argc] = NULL;\n\n  return new_argv;\n}\nEOF\n\t\t;;\n\t    esac\n\n            cat <<\"EOF\"\nvoid lt_dump_script (FILE* f)\n{\nEOF\n\t    func_emit_wrapper yes |\n\t      $SED -n -e '\ns/^\\(.\\{79\\}\\)\\(..*\\)/\\1\\\n\\2/\nh\ns/\\([\\\\\"]\\)/\\\\\\1/g\ns/$/\\\\n/\ns/\\([^\\n]*\\).*/  fputs (\"\\1\", f);/p\ng\nD'\n            cat <<\"EOF\"\n}\nEOF\n}\n# end: func_emit_cwrapperexe_src\n\n# func_win32_import_lib_p ARG\n# True if ARG is an import lib, as indicated by $file_magic_cmd\nfunc_win32_import_lib_p ()\n{\n    $opt_debug\n    case `eval $file_magic_cmd \\\"\\$1\\\" 2>/dev/null | $SED -e 10q` in\n    *import*) : ;;\n    *) false ;;\n    esac\n}\n\n# func_mode_link arg...\nfunc_mode_link ()\n{\n    $opt_debug\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # which system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll which has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=$nonopt\n    base_compile=\"$nonopt $@\"\n    compile_command=$nonopt\n    finalize_command=$nonopt\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n    new_inherited_linker_flags=\n\n    avoid_version=no\n    bindir=\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=no\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n    weak_libs=\n    single_module=\"${wl}-single_module\"\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -shared)\n\ttest \"$build_libtool_libs\" != yes && \\\n\t  func_fatal_configuration \"can not build a shared library\"\n\tbuild_old_libs=no\n\tbreak\n\t;;\n      -all-static | -static | -static-libtool-libs)\n\tcase $arg in\n\t-all-static)\n\t  if test \"$build_libtool_libs\" = yes && test -z \"$link_static_flag\"; then\n\t    func_warning \"complete static linking is impossible in this configuration\"\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\t-static)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\t  ;;\n\t-static-libtool-libs)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\tesac\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=\"$1\"\n      shift\n      func_quote_for_eval \"$arg\"\n      qarg=$func_quote_for_eval_unquoted_result\n      func_append libtool_args \" $func_quote_for_eval_result\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  func_append compile_command \" @OUTPUT@\"\n\t  func_append finalize_command \" @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tbindir)\n\t  bindir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tdlfiles|dlprefiles)\n\t  if test \"$preload\" = no; then\n\t    # Add the symbol object into the linking commands.\n\t    func_append compile_command \" @SYMFILE@\"\n\t    func_append finalize_command \" @SYMFILE@\"\n\t    preload=yes\n\t  fi\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test \"$dlself\" = no; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test \"$prev\" = dlprefiles; then\n\t      dlself=yes\n\t    elif test \"$prev\" = dlfiles && test \"$dlopen_self\" != yes; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test \"$prev\" = dlfiles; then\n\t      func_append dlfiles \" $arg\"\n\t    else\n\t      func_append dlprefiles \" $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=\"$arg\"\n\t  test -f \"$arg\" \\\n\t    || func_fatal_error \"symbol file \\`$arg' does not exist\"\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tframework)\n\t  case $host in\n\t    *-*-darwin*)\n\t      case \"$deplibs \" in\n\t\t*\" $qarg.ltframework \"*) ;;\n\t\t*) func_append deplibs \" $qarg.ltframework\" # this is fixed later\n\t\t   ;;\n\t      esac\n\t      ;;\n\t  esac\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat \"$save_arg\"`\n\t    do\n#\t      func_append moreargs \" $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if func_lalib_unsafe_p \"$arg\"; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\tfunc_source \"$arg\"\n\n\t\tif test -z \"$pic_object\" ||\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test \"$pic_object\" = none &&\n\t\t   test \"$non_pic_object\" = none; then\n\t\t  func_fatal_error \"cannot find name of object for \\`$arg'\"\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\tfunc_dirname \"$arg\" \"/\" \"\"\n\t\txdir=\"$func_dirname_result\"\n\n\t\tif test \"$pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=\"$xdir$pic_object\"\n\n\t\t  if test \"$prev\" = dlfiles; then\n\t\t    if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\t      func_append dlfiles \" $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test \"$prev\" = dlprefiles; then\n\t\t    # Preload the old-style object.\n\t\t    func_append dlprefiles \" $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  arg=\"$pic_object\"\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test \"$non_pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=\"$xdir$non_pic_object\"\n\n\t\t  # A standard non-PIC object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t\t    arg=\"$non_pic_object\"\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=\"$pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif $opt_dry_run; then\n\t\t  # Extract subdirectory from the argument.\n\t\t  func_dirname \"$arg\" \"/\" \"\"\n\t\t  xdir=\"$func_dirname_result\"\n\n\t\t  func_lo2o \"$arg\"\n\t\t  pic_object=$xdir$objdir/$func_lo2o_result\n\t\t  non_pic_object=$xdir$func_lo2o_result\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t        else\n\t\t  func_fatal_error \"\\`$arg' is not a valid libtool object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    func_fatal_error \"link input file \\`$arg' does not exist\"\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=\"-$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    func_fatal_error \"only absolute run-paths are allowed\"\n\t    ;;\n\t  esac\n\t  if test \"$prev\" = rpath; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append rpath \" $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append xrpath \" $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\tshrext)\n\t  shrext_cmds=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tweak)\n\t  func_append weak_libs \" $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\txcclinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txcompiler)\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $wl$qarg\"\n\t  prev=\n\t  func_append compile_command \" $wl$qarg\"\n\t  func_append finalize_command \" $wl$qarg\"\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=\"$arg\"\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  # See comment for -static flag below, for more details.\n\t  func_append compile_command \" $link_static_flag\"\n\t  func_append finalize_command \" $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\tfunc_fatal_error \"\\`-allow-undefined' must not be used because it is the default\"\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -bindir)\n\tprev=bindir\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  func_fatal_error \"more than one -exported-symbols argument is not allowed\"\n\tfi\n\tif test \"X$arg\" = \"X-export-symbols\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n\tprev=framework\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tfunc_stripname \"-L\" '' \"$arg\"\n\tif test -z \"$func_stripname_result\"; then\n\t  if test \"$#\" -gt 0; then\n\t    func_fatal_error \"require no space between \\`-L' and \\`$1'\"\n\t  else\n\t    func_fatal_error \"need path for \\`-L' option\"\n\t  fi\n\tfi\n\tfunc_resolve_sysroot \"$func_stripname_result\"\n\tdir=$func_resolve_sysroot_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  test -z \"$absdir\" && \\\n\t    func_fatal_error \"cannot determine absolute directory name of \\`$dir'\"\n\t  dir=\"$absdir\"\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"* | *\" $arg \"*)\n\t  # Will only happen for absolute or sysroot arguments\n\t  ;;\n\t*)\n\t  # Preserve sysroot, but never include relative directories\n\t  case $dir in\n\t    [\\\\/]* | [A-Za-z]:[\\\\/]* | =*) func_append deplibs \" $arg\" ;;\n\t    *) func_append deplibs \" -L$dir\" ;;\n\t  esac\n\t  func_append lib_search_path \" $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$dir\" | $SED 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  ::) dllsearchpath=$dir;;\n\t  *) func_append dllsearchpath \":$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test \"X$arg\" = \"X-lc\" || test \"X$arg\" = \"X-lm\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  esac\n\telif test \"X$arg\" = \"X-lc_r\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tfunc_append deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      # Darwin uses the -arch flag to determine output architecture.\n      -model|-arch|-isysroot|--sysroot)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n      |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tcase \"$new_inherited_linker_flags \" in\n\t    *\" $arg \"*) ;;\n\t    * ) func_append new_inherited_linker_flags \" $arg\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -multi_module)\n\tsingle_module=\"${wl}-multi_module\"\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # and Darwin in order for the loader to find any dlls it needs.\n\t  func_warning \"\\`-no-install' is ignored for $host\"\n\t  func_warning \"assuming \\`-no-fast-install' instead\"\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tfunc_stripname '-R' '' \"$arg\"\n\tdir=$func_stripname_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t=*)\n\t  func_stripname '=' '' \"$dir\"\n\t  dir=$lt_sysroot$func_stripname_result\n\t  ;;\n\t*)\n\t  func_fatal_error \"only absolute run-paths are allowed\"\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) func_append xrpath \" $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -shared)\n\t# The effects of -shared are defined in a previous loop.\n\tcontinue\n\t;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -static | -static-libtool-libs)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -weak)\n        prev=weak\n\tcontinue\n\t;;\n\n      -Wc,*)\n\tfunc_stripname '-Wc,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=\"$save_ifs\"\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Wl,*)\n\tfunc_stripname '-Wl,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $wl$func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $wl$func_quote_for_eval_result\"\n\t  func_append linker_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=\"$save_ifs\"\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # -msg_* for osf cc\n      -msg_*)\n\tfunc_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n\n      # Flags to be passed through unchanged, with rationale:\n      # -64, -mips[0-9]      enable 64-bit mode for the SGI compiler\n      # -r[0-9][0-9]*        specify processor for the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode for the Sun compiler\n      # +DA*, +DD*           enable 64-bit mode for the HP compiler\n      # -q*                  compiler args for the IBM compiler\n      # -m*, -t[45]*, -txscale* architecture-specific flags for GCC\n      # -F/path              path to uninstalled frameworks, gcc on darwin\n      # -p, -pg, --coverage, -fprofile-*  profiling flags for GCC\n      # @file                GCC response files\n      # -tp=*                Portland pgcc target processor selection\n      # --sysroot=*          for sysroot support\n      # -O*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \\\n      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \\\n      -O*|-flto*|-fwhopr*|-fuse-linker-plugin)\n        func_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n        func_append compile_command \" $arg\"\n        func_append finalize_command \" $arg\"\n        func_append compiler_flags \" $arg\"\n        continue\n        ;;\n\n      # Some other compiler flag.\n      -* | +*)\n        func_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tfunc_append objs \" $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif func_lalib_unsafe_p \"$arg\"; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  func_source \"$arg\"\n\n\t  if test -z \"$pic_object\" ||\n\t     test -z \"$non_pic_object\" ||\n\t     test \"$pic_object\" = none &&\n\t     test \"$non_pic_object\" = none; then\n\t    func_fatal_error \"cannot find name of object for \\`$arg'\"\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  func_dirname \"$arg\" \"/\" \"\"\n\t  xdir=\"$func_dirname_result\"\n\n\t  if test \"$pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=\"$xdir$pic_object\"\n\n\t    if test \"$prev\" = dlfiles; then\n\t      if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\tfunc_append dlfiles \" $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test \"$prev\" = dlprefiles; then\n\t      # Preload the old-style object.\n\t      func_append dlprefiles \" $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    func_append libobjs \" $pic_object\"\n\t    arg=\"$pic_object\"\n\t  fi\n\n\t  # Non-PIC object.\n\t  if test \"$non_pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=\"$xdir$non_pic_object\"\n\n\t    # A standard non-PIC object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t    if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t      arg=\"$non_pic_object\"\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=\"$pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if $opt_dry_run; then\n\t    # Extract subdirectory from the argument.\n\t    func_dirname \"$arg\" \"/\" \"\"\n\t    xdir=\"$func_dirname_result\"\n\n\t    func_lo2o \"$arg\"\n\t    pic_object=$xdir$objdir/$func_lo2o_result\n\t    non_pic_object=$xdir$func_lo2o_result\n\t    func_append libobjs \" $pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  else\n\t    func_fatal_error \"\\`$arg' is not a valid libtool object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tfunc_append deplibs \" $arg\"\n\tfunc_append old_deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tfunc_resolve_sysroot \"$arg\"\n\tif test \"$prev\" = dlfiles; then\n\t  # This library was specified with -dlopen.\n\t  func_append dlfiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telif test \"$prev\" = dlprefiles; then\n\t  # The library was specified with -dlpreopen.\n\t  func_append dlprefiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telse\n\t  func_append deplibs \" $func_resolve_sysroot_result\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\tfunc_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n      fi\n    done # argument parsing loop\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the \\`$prevarg' option requires an argument\"\n\n    if test \"$export_dynamic\" = yes && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      func_append compile_command \" $arg\"\n      func_append finalize_command \" $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    func_basename \"$output\"\n    outputname=\"$func_basename_result\"\n    libobjs_save=\"$libobjs\"\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$ECHO \\\"\\${$shlibpath_var}\\\" \\| \\$SED \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n\n    func_dirname \"$output\" \"/\" \"\"\n    output_objdir=\"$func_dirname_result$objdir\"\n    func_to_tool_file \"$output_objdir/\"\n    tool_output_objdir=$func_to_tool_file_result\n    # Create the object directory.\n    func_mkdir_p \"$output_objdir\"\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      func_fatal_help \"you must specify an output file\"\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if $opt_preserve_dup_deps ; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\tesac\n      fi\n      func_append libs \" $deplib\"\n    done\n\n    if test \"$linkmode\" = lib; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if $opt_duplicate_compiler_generated_deps; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) func_append specialdeplibs \" $pre_post_deps\" ;;\n\t  esac\n\t  func_append pre_post_deps \" $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n\n    case $linkmode in\n    lib)\n\tpasses=\"conv dlpreopen link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    func_fatal_help \"libraries can \\`-dlopen' only libtool libraries: $file\"\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=no\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n\n    for pass in $passes; do\n      # The preopen pass in lib mode reverses $deplibs; put it back here\n      # so that -L comes before libs that need it for instance...\n      if test \"$linkmode,$pass\" = \"lib,link\"; then\n\t## FIXME: Find the place where the list is rebuilt in the wrong\n\t##        order, and fix it there properly\n        tmp_deplibs=\n\tfor deplib in $deplibs; do\n\t  tmp_deplibs=\"$deplib $tmp_deplibs\"\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n      fi\n\n      if test \"$linkmode,$pass\" = \"lib,link\" ||\n\t test \"$linkmode,$pass\" = \"prog,scan\"; then\n\tlibs=\"$deplibs\"\n\tdeplibs=\n      fi\n      if test \"$linkmode\" = prog; then\n\tcase $pass in\n\tdlopen) libs=\"$dlfiles\" ;;\n\tdlpreopen) libs=\"$dlprefiles\" ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test \"$linkmode,$pass\" = \"lib,dlpreopen\"; then\n\t# Collect and forward deplibs of preopened libtool libs\n\tfor lib in $dlprefiles; do\n\t  # Ignore non-libtool-libs\n\t  dependency_libs=\n\t  func_resolve_sysroot \"$lib\"\n\t  case $lib in\n\t  *.la)\tfunc_source \"$func_resolve_sysroot_result\" ;;\n\t  esac\n\n\t  # Collect preopened libtool deplibs, except any this library\n\t  # has declared as weak libs\n\t  for deplib in $dependency_libs; do\n\t    func_basename \"$deplib\"\n            deplib_base=$func_basename_result\n\t    case \" $weak_libs \" in\n\t    *\" $deplib_base \"*) ;;\n\t    *) func_append deplibs \" $deplib\" ;;\n\t    esac\n\t  done\n\tdone\n\tlibs=\"$dlprefiles\"\n      fi\n      if test \"$pass\" = dlopen; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=\"$deplibs\"\n\tdeplibs=\n      fi\n\n      for deplib in $libs; do\n\tlib=\n\tfound=no\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n        |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    func_append compiler_flags \" $deplib\"\n\t    if test \"$linkmode\" = lib ; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test \"$linkmode\" != lib && test \"$linkmode\" != prog; then\n\t    func_warning \"\\`-l' is ignored for archives/objects\"\n\t    continue\n\t  fi\n\t  func_stripname '-l' '' \"$deplib\"\n\t  name=$func_stripname_result\n\t  if test \"$linkmode\" = lib; then\n\t    searchdirs=\"$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path\"\n\t  else\n\t    searchdirs=\"$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path\"\n\t  fi\n\t  for searchdir in $searchdirs; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=\"$searchdir/lib${name}${search_ext}\"\n\t      if test -f \"$lib\"; then\n\t\tif test \"$search_ext\" = \".la\"; then\n\t\t  found=yes\n\t\telse\n\t\t  found=no\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if test \"$found\" != yes; then\n\t    # deplib doesn't seem to be a libtool library\n\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  else # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif func_lalib_p \"$lib\"; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  func_source \"$lib\"\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=\"$l\"\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\" ; then # only static version available\n\t\t    found=no\n\t\t    func_dirname \"$lib\" \"\" \".\"\n\t\t    ladir=\"$func_dirname_result\"\n\t\t    lib=$ladir/$old_library\n\t\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  fi\n\t  ;; # -l\n\t*.ltframework)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$deplib $deplibs\"\n\t    if test \"$linkmode\" = lib ; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test \"$pass\" = conv && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" = conv; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test \"$pass\" = scan; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  *)\n\t    func_warning \"\\`-L' is ignored for archives/objects\"\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test \"$pass\" = link; then\n\t    func_stripname '-R' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    dir=$func_resolve_sysroot_result\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append xrpath \" $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la)\n\t  func_resolve_sysroot \"$deplib\"\n\t  lib=$func_resolve_sysroot_result\n\t  ;;\n\t*.$libext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    # Linking convenience modules into shared libraries is allowed,\n\t    # but linking other static libraries is non-portable.\n\t    case \" $dlpreconveniencelibs \" in\n\t    *\" $deplib \"*) ;;\n\t    *)\n\t      valid_a_lib=no\n\t      case $deplibs_check_method in\n\t\tmatch_pattern*)\n\t\t  set dummy $deplibs_check_method; shift\n\t\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t\t  if eval \"\\$ECHO \\\"$deplib\\\"\" 2>/dev/null | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t    valid_a_lib=yes\n\t\t  fi\n\t\t;;\n\t\tpass_all)\n\t\t  valid_a_lib=yes\n\t\t;;\n\t      esac\n\t      if test \"$valid_a_lib\" != yes; then\n\t\techo\n\t\t$ECHO \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t\techo \"*** that it is just a static archive that I should not use here.\"\n\t      else\n\t\techo\n\t\t$ECHO \"*** Warning: Linking the shared library $output against the\"\n\t\t$ECHO \"*** static library $deplib is not portable!\"\n\t\tdeplibs=\"$deplib $deplibs\"\n\t      fi\n\t      ;;\n\t    esac\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" != link; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test \"$linkmode\" = prog; then\n\t    if test \"$pass\" = dlpreopen || test \"$dlopen_support\" != yes || test \"$build_libtool_libs\" = no; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      func_append newdlprefiles \" $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      func_append newdlfiles \" $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=yes\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\n\tif test \"$found\" = yes || test -f \"$lib\"; then :\n\telse\n\t  func_fatal_error \"cannot find the library \\`$lib' or unhandled argument \\`$deplib'\"\n\tfi\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$lib\" \\\n\t  || func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\n\tfunc_dirname \"$lib\" \"\" \".\"\n\tladir=\"$func_dirname_result\"\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\tinherited_linker_flags=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tfunc_source \"$lib\"\n\n\t# Convert \"-framework foo\" to \"foo.ltframework\"\n\tif test -n \"$inherited_linker_flags\"; then\n\t  tmp_inherited_linker_flags=`$ECHO \"$inherited_linker_flags\" | $SED 's/-framework \\([^ $]*\\)/\\1.ltframework/g'`\n\t  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do\n\t    case \" $new_inherited_linker_flags \" in\n\t      *\" $tmp_inherited_linker_flag \"*) ;;\n\t      *) func_append new_inherited_linker_flags \" $tmp_inherited_linker_flag\";;\n\t    esac\n\t  done\n\tfi\n\tdependency_libs=`$ECHO \" $dependency_libs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tif test \"$linkmode,$pass\" = \"lib,link\" ||\n\t   test \"$linkmode,$pass\" = \"prog,scan\" ||\n\t   { test \"$linkmode\" != prog && test \"$linkmode\" != lib; }; then\n\t  test -n \"$dlopen\" && func_append dlfiles \" $dlopen\"\n\t  test -n \"$dlpreopen\" && func_append dlprefiles \" $dlpreopen\"\n\tfi\n\n\tif test \"$pass\" = conv; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      func_fatal_error \"cannot find name of link library for \\`$lib'\"\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    func_append convenience \" $ladir/$objdir/$old_library\"\n\t    func_append old_convenience \" $ladir/$objdir/$old_library\"\n\t  elif test \"$linkmode\" != prog && test \"$linkmode\" != lib; then\n\t    func_fatal_error \"\\`$lib' is not a convenience library\"\n\t  fi\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    deplibs=\"$deplib $deplibs\"\n\t    if $opt_preserve_dup_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tif test -n \"$old_library\" &&\n\t   { test \"$prefer_static_libs\" = yes ||\n\t     test \"$prefer_static_libs,$installed\" = \"built,no\"; }; then\n\t  linklib=$old_library\n\telse\n\t  for l in $old_library $library_names; do\n\t    linklib=\"$l\"\n\t  done\n\tfi\n\tif test -z \"$linklib\"; then\n\t  func_fatal_error \"cannot find name of link library for \\`$lib'\"\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test \"$pass\" = dlopen; then\n\t  if test -z \"$libdir\"; then\n\t    func_fatal_error \"cannot -dlopen a convenience library: \\`$lib'\"\n\t  fi\n\t  if test -z \"$dlname\" ||\n\t     test \"$dlopen_support\" != yes ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    func_append dlprefiles \" $lib $dependency_libs\"\n\t  else\n\t    func_append newdlfiles \" $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=\"$ladir\" ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    func_warning \"cannot determine absolute directory name of \\`$ladir'\"\n\t    func_warning \"passing it literally to the linker, although it might fail\"\n\t    abs_ladir=\"$ladir\"\n\t  fi\n\t  ;;\n\tesac\n\tfunc_basename \"$lib\"\n\tlaname=\"$func_basename_result\"\n\n\t# Find the relevant object directory and library name.\n\tif test \"X$installed\" = Xyes; then\n\t  if test ! -f \"$lt_sysroot$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    func_warning \"library \\`$lib' was moved.\"\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    libdir=\"$abs_ladir\"\n\t  else\n\t    dir=\"$lt_sysroot$libdir\"\n\t    absdir=\"$lt_sysroot$libdir\"\n\t  fi\n\t  test \"X$hardcode_automatic\" = Xyes && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  else\n\t    dir=\"$ladir/$objdir\"\n\t    absdir=\"$abs_ladir/$objdir\"\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tfunc_stripname 'lib' '.la' \"$laname\"\n\tname=$func_stripname_result\n\n\t# This library was specified with -dlpreopen.\n\tif test \"$pass\" = dlpreopen; then\n\t  if test -z \"$libdir\" && test \"$linkmode\" = prog; then\n\t    func_fatal_error \"only libraries may -dlpreopen a convenience library: \\`$lib'\"\n\t  fi\n\t  case \"$host\" in\n\t    # special handling for platforms with PE-DLLs.\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # Linker will automatically link against shared library if both\n\t      # static and shared are present.  Therefore, ensure we extract\n\t      # symbols from the import library if a shared library is present\n\t      # (otherwise, the dlopen module name will be incorrect).  We do\n\t      # this by putting the import library name into $newdlprefiles.\n\t      # We recover the dlopen module name by 'saving' the la file\n\t      # name in a special purpose variable, and (later) extracting the\n\t      # dlname from the la file.\n\t      if test -n \"$dlname\"; then\n\t        func_tr_sh \"$dir/$linklib\"\n\t        eval \"libfile_$func_tr_sh_result=\\$abs_ladir/\\$laname\"\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      fi\n\t    ;;\n\t    * )\n\t      # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t      # are required to link).\n\t      if test -n \"$old_library\"; then\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t      elif test -n \"$dlname\"; then\n\t        func_append newdlprefiles \" $dir/$dlname\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      fi\n\t    ;;\n\t  esac\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test \"$linkmode\" = lib; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test \"$linkmode\" = prog && test \"$pass\" != link; then\n\t  func_append newlib_search_path \" $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=no\n\t  if test \"$link_all_deplibs\" != no || test -z \"$library_names\" ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    linkalldeplibs=yes\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) func_stripname '-L' '' \"$deplib\"\n\t         func_resolve_sysroot \"$func_stripname_result\"\n\t         func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t\t ;;\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if test \"$linkalldeplibs\" = yes; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if $opt_preserve_dup_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t  if test -n \"$library_names\" &&\n\t     { { test \"$prefer_static_libs\" = no ||\n\t         test \"$prefer_static_libs,$installed\" = \"built,yes\"; } ||\n\t       test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\" ; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case \"$temp_rpath:\" in\n\t      *\"$absdir:\"*) ;;\n\t      *) func_append temp_rpath \"$absdir:\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if test \"$alldeplibs\" = yes &&\n\t     { test \"$deplibs_check_method\" = pass_all ||\n\t       { test \"$build_libtool_libs\" = yes &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test \"$use_static_libs\" = built && test \"$installed\" = yes; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test \"$use_static_libs\" = no || test -z \"$old_library\"; }; then\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc*)\n\t      # No point in relinking DLLs because paths are not encoded\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=no\n\t    ;;\n\t  *)\n\t    if test \"$installed\" = no; then\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=yes\n\t    fi\n\t    ;;\n\t  esac\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on some\n\t  # systems (darwin).  Don't bleat about dlopened modules though!\n\t  dlopenmodule=\"\"\n\t  for dlpremoduletest in $dlprefiles; do\n\t    if test \"X$dlpremoduletest\" = \"X$lib\"; then\n\t      dlopenmodule=\"$dlpremoduletest\"\n\t      break\n\t    fi\n\t  done\n\t  if test -z \"$dlopenmodule\" && test \"$shouldnotlink\" = yes && test \"$pass\" = link; then\n\t    echo\n\t    if test \"$linkmode\" = prog; then\n\t      $ECHO \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $ECHO \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $ECHO \"*** $linklib is not portable!\"\n\t  fi\n\t  if test \"$linkmode\" = lib &&\n\t     test \"$hardcode_into_libs\" = yes; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    shift\n\t    realname=\"$1\"\n\t    shift\n\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=\"$dlname\"\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw* | *cegcc*)\n\t        func_arith $current - $age\n\t\tmajor=$func_arith_result\n\t\tversuffix=\"-$major\"\n\t\t;;\n\t      esac\n\t      eval soname=\\\"$soname_spec\\\"\n\t    else\n\t      soname=\"$realname\"\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=\"$soname\"\n\t    func_basename \"$soroot\"\n\t    soname=\"$func_basename_result\"\n\t    func_stripname 'lib' '.dll' \"$soname\"\n\t    newlib=libimp-$func_stripname_result.a\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      func_verbose \"extracting exported symbol list from \\`$soname'\"\n\t      func_execute_cmds \"$extract_expsyms_cmds\" 'exit $?'\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      func_verbose \"generating import library for \\`$soname'\"\n\t      func_execute_cmds \"$old_archive_from_expsyms_cmds\" 'exit $?'\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test \"$linkmode\" = prog || test \"$opt_mode\" != relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test \"$hardcode_direct\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv4*uw2*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a (non-dlopened) module then we can not\n\t\t    # link against it, someone is ignoring the earlier warnings\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n\t\t\t $GREP \": [^:]* bundle\" >/dev/null ; then\n\t\t      if test \"X$dlopenmodule\" != \"X$lib\"; then\n\t\t\t$ECHO \"*** Warning: lib $linklib is a module, not a shared library\"\n\t\t\tif test -z \"$old_library\" ; then\n\t\t\t  echo\n\t\t\t  echo \"*** And there doesn't seem to be a static archive available\"\n\t\t\t  echo \"*** The link will probably fail, sorry\"\n\t\t\telse\n\t\t\t  add=\"$dir/$old_library\"\n\t\t\tfi\n\t\t      elif test -n \"$old_library\"; then\n\t\t\tadd=\"$dir/$old_library\"\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test \"$hardcode_minus_L\" = no; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=\"$dir\" ;;\n\t\tesac\n\t\tadd_dir=\"-L$dir\"\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = no; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test \"$hardcode_direct\" = yes &&\n\t         test \"$hardcode_direct_absolute\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t      elif test \"$hardcode_minus_L\" = yes; then\n\t\tadd_dir=\"-L$absdir\"\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = yes; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test \"$lib_linked\" != yes; then\n\t      func_fatal_configuration \"unsupported hardcode properties\"\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) func_append compile_shlibpath \"$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test \"$hardcode_direct\" != yes &&\n\t\t test \"$hardcode_minus_L\" != yes &&\n\t\t test \"$hardcode_shlibpath_var\" = yes; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) func_append finalize_shlibpath \"$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test \"$linkmode\" = prog || test \"$opt_mode\" = relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test \"$hardcode_direct\" = yes &&\n\t       test \"$hardcode_direct_absolute\" = no; then\n\t      add=\"$libdir/$linklib\"\n\t    elif test \"$hardcode_minus_L\" = yes; then\n\t      add_dir=\"-L$libdir\"\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_shlibpath_var\" = yes; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) func_append finalize_shlibpath \"$libdir:\" ;;\n\t      esac\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_automatic\" = yes; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\" ; then\n\t\tadd=\"$inst_prefix_dir$libdir/$linklib\"\n\t      else\n\t\tadd=\"$libdir/$linklib\"\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=\"-L$libdir\"\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=\"-l$name\"\n\t    fi\n\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test \"$linkmode\" = prog; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test \"$hardcode_direct\" != unsupported; then\n\t    test -n \"$old_library\" && linklib=\"$old_library\"\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test \"$build_libtool_libs\" = yes; then\n\t  # Not a shared library\n\t  if test \"$deplibs_check_method\" != pass_all; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    echo\n\t    $ECHO \"*** Warning: This system can not link to static lib archive $lib.\"\n\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test \"$module\" = yes; then\n\t      echo \"*** But as you try to build a module library, libtool will still create \"\n\t      echo \"*** a static module, that should work as long as the dlopening application\"\n\t      echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\techo\n\t\techo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\techo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t\techo \"*** not find such a program.  So, this module is probably useless.\"\n\t\techo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test \"$build_old_libs\" = no; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test \"$linkmode\" = lib; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test \"$hardcode_into_libs\" != yes ||\n\t       test \"$build_old_libs\" = yes ||\n\t       test \"$link_static\" = yes; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) func_stripname '-R' '' \"$libdir\"\n\t           temp_xrpath=$func_stripname_result\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) func_append xrpath \" $temp_xrpath\";;\n\t\t   esac;;\n\t      *) func_append temp_deplibs \" $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=\"$temp_deplibs\"\n\t  fi\n\n\t  func_append newlib_search_path \" $absdir\"\n\t  # Link against this library\n\t  test \"$link_static\" = no && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    case $deplib in\n              -L*) func_stripname '-L' '' \"$deplib\"\n                   func_resolve_sysroot \"$func_stripname_result\";;\n              *) func_resolve_sysroot \"$deplib\" ;;\n            esac\n\t    if $opt_preserve_dup_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $func_resolve_sysroot_result \"*)\n                func_append specialdeplibs \" $func_resolve_sysroot_result\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $func_resolve_sysroot_result\"\n\t  done\n\n\t  if test \"$link_all_deplibs\" != no; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      path=\n\t      case $deplib in\n\t      -L*) path=\"$deplib\" ;;\n\t      *.la)\n\t        func_resolve_sysroot \"$deplib\"\n\t        deplib=$func_resolve_sysroot_result\n\t        func_dirname \"$deplib\" \"\" \".\"\n\t\tdir=$func_dirname_result\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=\"$dir\" ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    func_warning \"cannot determine absolute directory name of \\`$dir'\"\n\t\t    absdir=\"$dir\"\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif $GREP \"^installed=no\" $deplib > /dev/null; then\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  depdepl=\n\t\t  eval deplibrary_names=`${SED} -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\" ; then\n\t\t    for tmp in $deplibrary_names ; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$absdir/$objdir/$depdepl\" ; then\n\t\t      depdepl=\"$absdir/$objdir/$depdepl\"\n\t\t      darwin_install_name=`${OTOOL} -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`\n                      if test -z \"$darwin_install_name\"; then\n                          darwin_install_name=`${OTOOL64} -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`\n                      fi\n\t\t      func_append compiler_flags \" ${wl}-dylib_file ${wl}${darwin_install_name}:${depdepl}\"\n\t\t      func_append linker_flags \" -dylib_file ${darwin_install_name}:${depdepl}\"\n\t\t      path=\n\t\t    fi\n\t\t  fi\n\t\t  ;;\n\t\t*)\n\t\t  path=\"-L$absdir/$objdir\"\n\t\t  ;;\n\t\tesac\n\t\telse\n\t\t  eval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  test -z \"$libdir\" && \\\n\t\t    func_fatal_error \"\\`$deplib' is not a valid libtool archive\"\n\t\t  test \"$absdir\" != \"$libdir\" && \\\n\t\t    func_warning \"\\`$deplib' seems to be moved\"\n\n\t\t  path=\"-L$absdir\"\n\t\tfi\n\t\t;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      if test \"$pass\" = link; then\n\tif test \"$linkmode\" = \"prog\"; then\n\t  compile_deplibs=\"$new_inherited_linker_flags $compile_deplibs\"\n\t  finalize_deplibs=\"$new_inherited_linker_flags $finalize_deplibs\"\n\telse\n\t  compiler_flags=\"$compiler_flags \"`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfi\n      fi\n      dependency_libs=\"$newdependency_libs\"\n      if test \"$pass\" = dlpreopen; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test \"$pass\" != dlopen; then\n\tif test \"$pass\" != conv; then\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append lib_search_path \" $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\tfi\n\n\tif test \"$linkmode,$pass\" != \"prog,link\"; then\n\t  vars=\"deplibs\"\n\telse\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\\"\\$$var\\\"\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) func_append tmp_libs \" $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) func_append tmp_libs \" $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\\"$tmp_libs\\\"\n\tdone # for var\n      fi\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs ; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\"\"\n\t  ;;\n\tesac\n\tif test -n \"$i\" ; then\n\t  func_append tmp_libs \" $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test \"$linkmode\" = prog; then\n      dlfiles=\"$newdlfiles\"\n    fi\n    if test \"$linkmode\" = prog || test \"$linkmode\" = lib; then\n      dlprefiles=\"$newdlprefiles\"\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tfunc_warning \"\\`-dlopen' is ignored for archives\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"\\`-l' and \\`-L' are ignored for archives\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"\\`-rpath' is ignored for archives\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"\\`-R' is ignored for archives\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info/-version-number' is ignored for archives\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for archives\"\n\n      test -n \"$export_symbols$export_symbols_regex\" && \\\n\tfunc_warning \"\\`-export-symbols' is ignored for archives\"\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=\"$output\"\n      func_append objs \"$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form `libNAME.la'.\n      case $outputname in\n      lib*)\n\tfunc_stripname 'lib' '.la' \"$outputname\"\n\tname=$func_stripname_result\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\ttest \"$module\" = no && \\\n\t  func_fatal_help \"libtool library \\`$output' must begin with \\`lib'\"\n\n\tif test \"$need_lib_prefix\" != no; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  func_stripname '' '.la' \"$outputname\"\n\t  name=$func_stripname_result\n\t  eval shared_ext=\\\"$shrext_cmds\\\"\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  func_stripname '' '.la' \"$outputname\"\n\t  libname=$func_stripname_result\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test \"$deplibs_check_method\" != pass_all; then\n\t  func_fatal_error \"cannot build libtool library \\`$output' from non-libtool objects on this host:$objs\"\n\telse\n\t  echo\n\t  $ECHO \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $ECHO \"*** objects $objs is not portable!\"\n\t  func_append libobjs \" $objs\"\n\tfi\n      fi\n\n      test \"$dlself\" != no && \\\n\tfunc_warning \"\\`-dlopen self' is ignored for libtool libraries\"\n\n      set dummy $rpath\n      shift\n      test \"$#\" -gt 1 && \\\n\tfunc_warning \"ignoring multiple \\`-rpath's for a libtool library\"\n\n      install_libdir=\"$1\"\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test \"$build_libtool_libs\" = yes; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a `.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\ttest -n \"$vinfo\" && \\\n\t  func_warning \"\\`-version-info/-version-number' is ignored for convenience libraries\"\n\n\ttest -n \"$release\" && \\\n\t  func_warning \"\\`-release' is ignored for convenience libraries\"\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=\"$IFS\"; IFS=':'\n\tset dummy $vinfo 0 0 0\n\tshift\n\tIFS=\"$save_ifs\"\n\n\ttest -n \"$7\" && \\\n\t  func_fatal_help \"too many parameters to \\`-version-info'\"\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=\"$1\"\n\t  number_minor=\"$2\"\n\t  number_revision=\"$3\"\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # which has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  # correct linux to gnu/linux during the next big refactor\n\t  darwin|linux|osf|windows|none)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=\"$number_minor\"\n\t    revision=\"$number_revision\"\n\t    ;;\n\t  freebsd-aout|freebsd-elf|qnx|sunos)\n\t    current=\"$number_major\"\n\t    revision=\"$number_minor\"\n\t    age=\"0\"\n\t    ;;\n\t  irix|nonstopux)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=\"$number_minor\"\n\t    revision=\"$number_minor\"\n\t    lt_irix_increment=no\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=\"$1\"\n\t  revision=\"$2\"\n\t  age=\"$3\"\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"CURRENT \\`$current' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"REVISION \\`$revision' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"AGE \\`$age' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  func_error \"AGE \\`$age' is greater than the current interface number \\`$current'\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\"$major.$age.$revision\"\n\t  # Darwin ld doesn't like 0 for these options...\n\t  func_arith $current + 1\n\t  minor_current=$func_arith_result\n\t  xlcverstring=\"${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision\"\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\";\n\t  ;;\n\n\tfreebsd-elf)\n\t  major=\".$current\"\n\t  versuffix=\".$current\"\n\t  ;;\n\n\tirix | nonstopux)\n\t  if test \"X$lt_irix_increment\" = \"Xno\"; then\n\t    func_arith $current - $age\n\t  else\n\t    func_arith $current - $age + 1\n\t  fi\n\t  major=$func_arith_result\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=\"$verstring_prefix$major.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test \"$loop\" -ne 0; do\n\t    func_arith $revision - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=\"$verstring_prefix$major.$iface:$verstring\"\n\t  done\n\n\t  # Before this point, $major must not contain `.'.\n\t  major=.$major\n\t  versuffix=\"$major.$revision\"\n\t  ;;\n\n\tlinux) # correct to gnu/linux during the next big refactor\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\"$major.$age.$revision\"\n\t  ;;\n\n\tosf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\".$current.$age.$revision\"\n\t  verstring=\"$current.$age.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test \"$loop\" -ne 0; do\n\t    func_arith $current - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=\"$verstring:${iface}.0\"\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  func_append verstring \":${current}.0\"\n\t  ;;\n\n\tqnx)\n\t  major=\".$current\"\n\t  versuffix=\".$current\"\n\t  ;;\n\n\tsunos)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\"\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 filesystems.\n\t  func_arith $current - $age\n\t  major=$func_arith_result\n\t  versuffix=\"-$major\"\n\t  ;;\n\n\t*)\n\t  func_fatal_configuration \"unknown library version type \\`$version_type'\"\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=\"0.0\"\n\t    ;;\n\t  esac\n\t  if test \"$need_version\" = no; then\n\t    versuffix=\n\t  else\n\t    versuffix=\".0.0\"\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test \"$avoid_version\" = yes && test \"$need_version\" = no; then\n\t  major=\n\t  versuffix=\n\t  verstring=\"\"\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test \"$allow_undefined\" = yes; then\n\t  if test \"$allow_undefined_flag\" = unsupported; then\n\t    func_warning \"undefined symbols not allowed in $host shared libraries\"\n\t    build_libtool_libs=no\n\t    build_old_libs=yes\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=\"$no_undefined_flag\"\n\tfi\n\n      fi\n\n      func_generate_dlsyms \"$libname\" \"$libname\" \"yes\"\n      func_append libobjs \" $symfileobj\"\n      test \"X$libobjs\" = \"X \" && libobjs=\n\n      if test \"$opt_mode\" != relink; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$ECHO \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext | *.gcno)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)\n\t       if test \"X$precious_files_regex\" != \"X\"; then\n\t\t if $ECHO \"$p\" | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t\t then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       func_append removelist \" $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\ttest -n \"$removelist\" && \\\n\t  func_show_eval \"${RM}r \\$removelist\"\n      fi\n\n      # Now set the variables for building old libraries.\n      if test \"$build_old_libs\" = yes && test \"$build_libtool_libs\" != convenience ; then\n\tfunc_append oldlibs \" $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.${libext}$/d; $lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      #for path in $notinst_path; do\n      #\tlib_search_path=`$ECHO \"$lib_search_path \" | $SED \"s% $path % %g\"`\n      #\tdeplibs=`$ECHO \"$deplibs \" | $SED \"s% -L$path % %g\"`\n      #\tdependency_libs=`$ECHO \"$dependency_libs \" | $SED \"s% -L$path % %g\"`\n      #done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  func_replace_sysroot \"$libdir\"\n\t  func_append temp_xrpath \" -R$func_replace_sysroot_result\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n\tif test \"$hardcode_into_libs\" != yes || test \"$build_old_libs\" = yes; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=\"$dlfiles\"\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlfiles \" $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=\"$dlprefiles\"\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlprefiles \" $lib\" ;;\n\tesac\n      done\n\n      if test \"$build_libtool_libs\" = yes; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n\t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test \"$build_libtool_need_lc\" = \"yes\"; then\n\t      func_append deplibs \" -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\"\"\n\tversuffix=\"\"\n\tmajor=\"\"\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $opt_dry_run || $RM conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $opt_dry_run || $RM conftest\n\t  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\tif test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    func_append newdeplibs \" $i\"\n\t\t    i=\"\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t\tif test -n \"$i\" ; then\n\t\t  libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t  deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t  set dummy $deplib_matches; shift\n\t\t  deplib_match=$1\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t    func_append newdeplibs \" $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\t$opt_dry_run || $RM conftest\n\t\tif $LTCC $LTCFLAGS -o conftest conftest.c $i; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      func_append newdeplibs \" $i\"\n\t\t      i=\"\"\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\" ; then\n\t\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t    deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t    set dummy $deplib_matches; shift\n\t\t    deplib_match=$1\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t      func_append newdeplibs \" $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      echo\n\t\t      $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  $ECHO \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"*** make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method; shift\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tif test -n \"$file_magic_glob\"; then\n\t\t  libnameglob=`func_echo_all \"$libname\" | $SED -e $file_magic_glob`\n\t\telse\n\t\t  libnameglob=$libname\n\t\tfi\n\t\ttest \"$want_nocaseglob\" = yes && nocaseglob=`shopt -p nocaseglob`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  if test \"$want_nocaseglob\" = yes; then\n\t\t    shopt -s nocaseglob\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t    $nocaseglob\n\t\t  else\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t  fi\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null |\n\t\t\t $GREP \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=\"$potent_lib\"\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=\"$potliblink\";;\n\t\t\t*) potlib=`$ECHO \"$potlib\" | $SED 's,[^/]*$,,'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null |\n\t\t\t $SED -e 10q |\n\t\t\t $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tfunc_append newdeplibs \" $a_deplib\"\n\t\t\ta_deplib=\"\"\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method; shift\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=\"$potent_lib\" # see symlink-check above in file_magic test\n\t\t    if eval \"\\$ECHO \\\"$potent_lib\\\"\" 2>/dev/null | $SED 10q | \\\n\t\t       $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      func_append newdeplibs \" $a_deplib\"\n\t\t      a_deplib=\"\"\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\"\"\n\t  tmp_deplibs=`$ECHO \" $deplibs\" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`\n\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t    for i in $predeps $postdeps ; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$ECHO \" $tmp_deplibs\" | $SED \"s,$i,,\"`\n\t    done\n\t  fi\n\t  case $tmp_deplibs in\n\t  *[!\\\t\\ ]*)\n\t    echo\n\t    if test \"X$deplibs_check_method\" = \"Xnone\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library with the System framework\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t  ;;\n\tesac\n\n\tif test \"$droppeddeps\" = yes; then\n\t  if test \"$module\" = yes; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $ECHO \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test \"$build_old_libs\" = no; then\n\t      oldlibs=\"$output_objdir/$libname.$libext\"\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\n\t    if test \"$allow_undefined\" = no; then\n\t      echo\n\t      echo \"*** Since this library must not contain undefined symbols,\"\n\t      echo \"*** because either the platform does not support them or\"\n\t      echo \"*** it was explicitly requested with -no-undefined,\"\n\t      echo \"*** libtool will only create a static version of it.\"\n\t      if test \"$build_old_libs\" = no; then\n\t\toldlibs=\"$output_objdir/$libname.$libext\"\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n      # Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n      case $host in\n\t*-*-darwin*)\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  new_inherited_linker_flags=`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  deplibs=`$ECHO \" $deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  ;;\n      esac\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      deplibs=\"$new_libs\"\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test \"$build_libtool_libs\" = yes; then\n\t# Remove ${wl} instances when linking with ld.\n\t# FIXME: should test the right _cmds variable.\n\tcase $archive_cmds in\n\t  *\\$LD\\ *) wl= ;;\n        esac\n\tif test \"$hardcode_into_libs\" = yes; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=\"$finalize_rpath\"\n\t  test \"$opt_mode\" != relink && rpath=\"$compile_rpath$rpath\"\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tfunc_replace_sysroot \"$libdir\"\n\t\tlibdir=$func_replace_sysroot_result\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=\"$libdir\"\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    func_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t\tfunc_append dep_rpath \" $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append perm_rpath \" $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=\"$hardcode_libdirs\"\n\t    eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      func_append rpath \"$dir:\"\n\t    done\n\t    eval \"$runpath_var='$rpath\\$$runpath_var'; export $runpath_var\"\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=\"$finalize_shlibpath\"\n\ttest \"$opt_mode\" != relink && shlibpath=\"$compile_shlibpath$shlibpath\"\n\tif test -n \"$shlibpath\"; then\n\t  eval \"$shlibpath_var='$shlibpath\\$$shlibpath_var'; export $shlibpath_var\"\n\tfi\n\n\t# Get the real and link names of the library.\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\tshift\n\trealname=\"$1\"\n\tshift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=\"$realname\"\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=\"$output_objdir/$realname\"\n\tlinknames=\n\tfor link\n\tdo\n\t  func_append linknames \" $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$ECHO \"$libobjs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\ttest \"X$libobjs\" = \"X \" && libobjs=\n\n\tdelfiles=\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $opt_dry_run || cp \"$export_symbols\" \"$output_objdir/$libname.uexp\"\n\t  export_symbols=\"$output_objdir/$libname.uexp\"\n\t  func_append delfiles \" $export_symbols\"\n\tfi\n\n\torig_export_symbols=\n\tcase $host_os in\n\tcygwin* | mingw* | cegcc*)\n\t  if test -n \"$export_symbols\" && test -z \"$export_symbols_regex\"; then\n\t    # exporting using user supplied symfile\n\t    if test \"x`$SED 1q $export_symbols`\" != xEXPORTS; then\n\t      # and it's NOT already a .def file. Must figure out\n\t      # which of the given symbols are data symbols and tag\n\t      # them as such. So, trigger use of export_symbols_cmds.\n\t      # export_symbols gets reassigned inside the \"prepare\n\t      # the list of exported symbols\" if statement, so the\n\t      # include_expsyms logic still works.\n\t      orig_export_symbols=\"$export_symbols\"\n\t      export_symbols=\n\t      always_export_symbols=yes\n\t    fi\n\t  fi\n\t  ;;\n\tesac\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test \"$always_export_symbols\" = yes || test -n \"$export_symbols_regex\"; then\n\t    func_verbose \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $opt_dry_run || $RM $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd1 in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      # Take the normal branch if the nm_file_list_spec branch\n\t      # doesn't work or if tool conversion is not needed.\n\t      case $nm_file_list_spec~$to_tool_file_cmd in\n\t\t*~func_convert_file_noop | *~func_convert_file_msys_to_w32 | ~*)\n\t\t  try_normal_branch=yes\n\t\t  eval cmd=\\\"$cmd1\\\"\n\t\t  func_len \" $cmd\"\n\t\t  len=$func_len_result\n\t\t  ;;\n\t\t*)\n\t\t  try_normal_branch=no\n\t\t  ;;\n\t      esac\n\t      if test \"$try_normal_branch\" = yes \\\n\t\t && { test \"$len\" -lt \"$max_cmd_len\" \\\n\t\t      || test \"$max_cmd_len\" -le -1; }\n\t      then\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\tskipped_export=false\n\t      elif test -n \"$nm_file_list_spec\"; then\n\t\tfunc_basename \"$output\"\n\t\toutput_la=$func_basename_result\n\t\tsave_libobjs=$libobjs\n\t\tsave_output=$output\n\t\toutput=${output_objdir}/${output_la}.nm\n\t\tfunc_to_tool_file \"$output\"\n\t\tlibobjs=$nm_file_list_spec$func_to_tool_file_result\n\t\tfunc_append delfiles \" $output\"\n\t\tfunc_verbose \"creating $NM input file list: $output\"\n\t\tfor obj in $save_libobjs; do\n\t\t  func_to_tool_file \"$obj\"\n\t\t  $ECHO \"$func_to_tool_file_result\"\n\t\tdone > \"$output\"\n\t\teval cmd=\\\"$cmd1\\\"\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\toutput=$save_output\n\t\tlibobjs=$save_libobjs\n\t\tskipped_export=false\n\t      else\n\t\t# The command line is too long to execute in one step.\n\t\tfunc_verbose \"using reloadable object file for export list...\"\n\t\tskipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=\"$save_ifs\"\n\t    if test -n \"$export_symbols_regex\" && test \"X$skipped_export\" != \"X:\"; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  tmp_export_symbols=\"$export_symbols\"\n\t  test -n \"$orig_export_symbols\" && tmp_export_symbols=\"$orig_export_symbols\"\n\t  $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" && test -n \"$orig_export_symbols\"; then\n\t  # The given exports_symbols file has to be filtered, so filter it.\n\t  func_verbose \"filter symbol list for \\`$libname.la' to tag DATA exports\"\n\t  # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t  # 's' commands which not all seds can handle. GNU sed should be fine\n\t  # though. Also, the filter scales superlinearly with the number of\n\t  # global variables. join(1) would be nice here, but unfortunately\n\t  # isn't a blessed tool.\n\t  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t  func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t  export_symbols=$output_objdir/$libname.def\n\t  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t  case \" $convenience \" in\n\t  *\" $test_deplib \"*) ;;\n\t  *)\n\t    func_append tmp_deplibs \" $test_deplib\"\n\t    ;;\n\t  esac\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\" &&\n\t    test \"$compiler_needs_object\" = yes &&\n\t    test -z \"$libobjs\"; then\n\t    # extract the archives, so we have objects to list.\n\t    # TODO: could optimize this to just extract one archive.\n\t    whole_archive_flag_spec=\n\t  fi\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  else\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    func_append generated \" $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    func_append libobjs \" $func_extract_archives_result\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\tfi\n\n\tif test \"$thread_safe\" = yes && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  func_append linker_flags \" $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test \"$opt_mode\" = relink; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U)' || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$module_expsym_cmds\\\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$module_cmds\\\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$archive_expsym_cmds\\\"\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$archive_cmds\\\"\n\t    cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" &&\n\t   func_len \" $test_cmds\" &&\n\t   len=$func_len_result &&\n\t   test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise\n\t  # or, if using GNU ld and skipped_export is not :, use a linker\n\t  # script.\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  func_basename \"$output\"\n\t  output_la=$func_basename_result\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  last_robj=\n\t  k=1\n\n\t  if test -n \"$save_libobjs\" && test \"X$skipped_export\" != \"X:\" && test \"$with_gnu_ld\" = yes; then\n\t    output=${output_objdir}/${output_la}.lnkscript\n\t    func_verbose \"creating GNU ld script: $output\"\n\t    echo 'INPUT (' > $output\n\t    for obj in $save_libobjs\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    echo ')' >> $output\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$func_to_tool_file_result\n\t  elif test -n \"$save_libobjs\" && test \"X$skipped_export\" != \"X:\" && test \"X$file_list_spec\" != X; then\n\t    output=${output_objdir}/${output_la}.lnk\n\t    func_verbose \"creating linker input file list: $output\"\n\t    : > $output\n\t    set x $save_libobjs\n\t    shift\n\t    firstobj=\n\t    if test \"$compiler_needs_object\" = yes; then\n\t      firstobj=\"$1 \"\n\t      shift\n\t    fi\n\t    for obj\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$firstobj\\\"$file_list_spec$func_to_tool_file_result\\\"\n\t  else\n\t    if test -n \"$save_libobjs\"; then\n\t      func_verbose \"creating reloadable object files...\"\n\t      output=$output_objdir/$output_la-${k}.$objext\n\t      eval test_cmds=\\\"$reload_cmds\\\"\n\t      func_len \" $test_cmds\"\n\t      len0=$func_len_result\n\t      len=$len0\n\n\t      # Loop over the list of objects to be linked.\n\t      for obj in $save_libobjs\n\t      do\n\t\tfunc_len \" $obj\"\n\t\tfunc_arith $len + $func_len_result\n\t\tlen=$func_arith_result\n\t\tif test \"X$objlist\" = X ||\n\t\t   test \"$len\" -lt \"$max_cmd_len\"; then\n\t\t  func_append objlist \" $obj\"\n\t\telse\n\t\t  # The command $test_cmds is almost too long, add a\n\t\t  # command to the queue.\n\t\t  if test \"$k\" -eq 1 ; then\n\t\t    # The first file doesn't have a previous command to add.\n\t\t    reload_objs=$objlist\n\t\t    eval concat_cmds=\\\"$reload_cmds\\\"\n\t\t  else\n\t\t    # All subsequent reloadable object files will link in\n\t\t    # the last one created.\n\t\t    reload_objs=\"$objlist $last_robj\"\n\t\t    eval concat_cmds=\\\"\\$concat_cmds~$reload_cmds~\\$RM $last_robj\\\"\n\t\t  fi\n\t\t  last_robj=$output_objdir/$output_la-${k}.$objext\n\t\t  func_arith $k + 1\n\t\t  k=$func_arith_result\n\t\t  output=$output_objdir/$output_la-${k}.$objext\n\t\t  objlist=\" $obj\"\n\t\t  func_len \" $last_robj\"\n\t\t  func_arith $len0 + $func_len_result\n\t\t  len=$func_arith_result\n\t\tfi\n\t      done\n\t      # Handle the remaining objects by creating one last\n\t      # reloadable object file.  All subsequent reloadable object\n\t      # files will link in the last one created.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      reload_objs=\"$objlist $last_robj\"\n\t      eval concat_cmds=\\\"\\${concat_cmds}$reload_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t        eval concat_cmds=\\\"\\${concat_cmds}~\\$RM $last_robj\\\"\n\t      fi\n\t      func_append delfiles \" $output\"\n\n\t    else\n\t      output=\n\t    fi\n\n\t    if ${skipped_export-false}; then\n\t      func_verbose \"generating symbol list for \\`$libname.la'\"\n\t      export_symbols=\"$output_objdir/$libname.exp\"\n\t      $opt_dry_run || $RM $export_symbols\n\t      libobjs=$output\n\t      # Append the command to create the export file.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$export_symbols_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t\teval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t    fi\n\n\t    test -n \"$save_libobjs\" &&\n\t      func_verbose \"creating a temporary reloadable object file: $output\"\n\n\t    # Loop through the commands generated above and execute them.\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $concat_cmds; do\n\t      IFS=\"$save_ifs\"\n\t      $opt_silent || {\n\t\t  func_quote_for_expand \"$cmd\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t      }\n\t      $opt_dry_run || eval \"$cmd\" || {\n\t\tlt_exit=$?\n\n\t\t# Restore the uninstalled library and exit\n\t\tif test \"$opt_mode\" = relink; then\n\t\t  ( cd \"$output_objdir\" && \\\n\t\t    $RM \"${realname}T\" && \\\n\t\t    $MV \"${realname}U\" \"$realname\" )\n\t\tfi\n\n\t\texit $lt_exit\n\t      }\n\t    done\n\t    IFS=\"$save_ifs\"\n\n\t    if test -n \"$export_symbols_regex\" && ${skipped_export-false}; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\n          if ${skipped_export-false}; then\n\t    if test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t      tmp_export_symbols=\"$export_symbols\"\n\t      test -n \"$orig_export_symbols\" && tmp_export_symbols=\"$orig_export_symbols\"\n\t      $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\t    fi\n\n\t    if test -n \"$orig_export_symbols\"; then\n\t      # The given exports_symbols file has to be filtered, so filter it.\n\t      func_verbose \"filter symbol list for \\`$libname.la' to tag DATA exports\"\n\t      # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t      # 's' commands which not all seds can handle. GNU sed should be fine\n\t      # though. Also, the filter scales superlinearly with the number of\n\t      # global variables. join(1) would be nice here, but unfortunately\n\t      # isn't a blessed tool.\n\t      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t      func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t      export_symbols=$output_objdir/$libname.def\n\t      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\t    fi\n\t  fi\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t    if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t      cmds=$archive_expsym_cmds\n\t    else\n\t      cmds=$archive_cmds\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$delfiles\"; then\n\t  # Append the command to remove temporary files to $cmds.\n\t  eval cmds=\\\"\\$cmds~\\$RM $delfiles\\\"\n\tfi\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append libobjs \" $func_extract_archives_result\"\n\t  test \"X$libobjs\" = \"X \" && libobjs=\n\tfi\n\n\tsave_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  eval cmd=\\\"$cmd\\\"\n\t  $opt_silent || {\n\t    func_quote_for_expand \"$cmd\"\n\t    eval \"func_echo $func_quote_for_expand_result\"\n\t  }\n\t  $opt_dry_run || eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test \"$opt_mode\" = relink; then\n\t      ( cd \"$output_objdir\" && \\\n\t        $RM \"${realname}T\" && \\\n\t\t$MV \"${realname}U\" \"$realname\" )\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=\"$save_ifs\"\n\n\t# Restore the uninstalled library and exit\n\tif test \"$opt_mode\" = relink; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname)' || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      func_show_eval '${RM}r \"$gentop\"'\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    func_show_eval '(cd \"$output_objdir\" && $RM \"$linkname\" && $LN_S \"$realname\" \"$linkname\")' 'exit $?'\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test \"$module\" = yes || test \"$export_dynamic\" = yes; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=\"$soname\"\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tfunc_warning \"\\`-dlopen' is ignored for objects\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"\\`-l' and \\`-L' are ignored for objects\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"\\`-rpath' is ignored for objects\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"\\`-R' is ignored for objects\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info' is ignored for objects\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for objects\"\n\n      case $output in\n      *.lo)\n\ttest -n \"$objs$old_deplibs\" && \\\n\t  func_fatal_error \"cannot build library object \\`$output' from non-libtool objects\"\n\n\tlibobj=$output\n\tfunc_lo2o \"$libobj\"\n\tobj=$func_lo2o_result\n\t;;\n      *)\n\tlibobj=\n\tobj=\"$output\"\n\t;;\n      esac\n\n      # Delete the old objects.\n      $opt_dry_run || $RM $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # reload_cmds runs $LD directly, so let us get rid of\n      # -Wl from whole_archive_flag_spec and hope we can get by with\n      # turning comma into space..\n      wl=\n\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval tmp_whole_archive_flags=\\\"$whole_archive_flag_spec\\\"\n\t  reload_conv_objs=$reload_objs\\ `$ECHO \"$tmp_whole_archive_flags\" | $SED 's|,| |g'`\n\telse\n\t  gentop=\"$output_objdir/${obj}x\"\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # If we're not building shared, we need to use non_pic_objs\n      test \"$build_libtool_libs\" != yes && libobjs=\"$non_pic_objects\"\n\n      # Create the old-style object.\n      reload_objs=\"$objs$old_deplibs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.${libext}$/d; /\\.lib$/d; $lo2o\" | $NL2SP`\" $reload_conv_objs\" ### testsuite: skip nested quoting test\n\n      output=\"$obj\"\n      func_execute_cmds \"$reload_cmds\" 'exit $?'\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$build_libtool_libs\" != yes; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $opt_dry_run || eval \"echo timestamp > $libobj\" || exit $?\n\texit $EXIT_SUCCESS\n      fi\n\n      if test -n \"$pic_flag\" || test \"$pic_mode\" != default; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=\"$libobj\"\n\tfunc_execute_cmds \"$reload_cmds\" 'exit $?'\n      fi\n\n      if test -n \"$gentop\"; then\n\tfunc_show_eval '${RM}r \"$gentop\"'\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) func_stripname '' '.exe' \"$output\"\n\t          output=$func_stripname_result.exe;;\n      esac\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info' is ignored for programs\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for programs\"\n\n      test \"$preload\" = yes \\\n        && test \"$dlopen_support\" = unknown \\\n\t&& test \"$dlopen_self\" = unknown \\\n\t&& test \"$dlopen_self_static\" = unknown && \\\n\t  func_warning \"\\`LT_INIT([dlopen])' not used. Assuming no dlopen support.\"\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t;;\n      esac\n\n      case $host in\n      *-*-darwin*)\n\t# Don't allow lazy linking, it breaks C++ global constructors\n\t# But is supposedly fixed on 10.4 or later (yay!).\n\tif test \"$tagname\" = CXX ; then\n\t  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in\n\t    10.[0123])\n\t      func_append compile_command \" ${wl}-bind_at_load\"\n\t      func_append finalize_command \" ${wl}-bind_at_load\"\n\t    ;;\n\t  esac\n\tfi\n\t# Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=\"$new_libs\"\n\n\n      func_append compile_command \" $compile_deplibs\"\n      func_append finalize_command \" $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`${ECHO} \"$libdir\" | ${SED} -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  ::) dllsearchpath=$libdir;;\n\t  *) func_append dllsearchpath \":$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=\"$rpath\"\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=\"$rpath\"\n\n      if test -n \"$libobjs\" && test \"$build_old_libs\" = yes; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$ECHO \"$compile_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$ECHO \"$finalize_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n      fi\n\n      func_generate_dlsyms \"$outputname\" \"@PROGRAM@\" \"no\"\n\n      # template prelinking step\n      if test -n \"$prelink_cmds\"; then\n\tfunc_execute_cmds \"$prelink_cmds\" 'exit $?'\n      fi\n\n      wrappers_required=yes\n      case $host in\n      *cegcc* | *mingw32ce*)\n        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.\n        wrappers_required=no\n        ;;\n      *cygwin* | *mingw* )\n        if test \"$build_libtool_libs\" != yes; then\n          wrappers_required=no\n        fi\n        ;;\n      *)\n        if test \"$need_relink\" = no || test \"$build_libtool_libs\" != yes; then\n          wrappers_required=no\n        fi\n        ;;\n      esac\n      if test \"$wrappers_required\" = no; then\n\t# Replace the output file specification.\n\tcompile_command=`$ECHO \"$compile_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=\"$compile_command$compile_rpath\"\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\texit_status=0\n\tfunc_show_eval \"$link_command\" 'exit_status=$?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\t# Delete the generated files.\n\tif test -f \"$output_objdir/${outputname}S.${objext}\"; then\n\t  func_show_eval '$RM \"$output_objdir/${outputname}S.${objext}\"'\n\tfi\n\n\texit $exit_status\n      fi\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test \"$no_install\" = yes; then\n\t# We don't need to create a wrapper script.\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\t# Replace the output file specification.\n\tlink_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$opt_dry_run || $RM $output\n\t# Link the executable and exit\n\tfunc_show_eval \"$link_command\" 'exit $?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$hardcode_action\" = relink; then\n\t# Fast installation is not supported\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\trelink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\n\tfunc_warning \"this platform does not like uninstalled shared libraries\"\n\tfunc_warning \"\\`$output' will be relinked during installation\"\n      else\n\tif test \"$fast_install\" != no; then\n\t  link_command=\"$finalize_var$compile_command$finalize_rpath\"\n\t  if test \"$fast_install\" = yes; then\n\t    relink_command=`$ECHO \"$compile_var$compile_command$compile_rpath\" | $SED 's%@OUTPUT@%\\$progdir/\\$file%g'`\n\t  else\n\t    # fast_install is set to needless\n\t    relink_command=\n\t  fi\n\telse\n\t  link_command=\"$compile_var$compile_command$compile_rpath\"\n\t  relink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\tfi\n      fi\n\n      # Replace the output file specification.\n      link_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      func_show_eval \"$link_command\" 'exit $?'\n\n      if test -n \"$postlink_cmds\"; then\n\tfunc_to_tool_file \"$output_objdir/$outputname\"\n\tpostlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\tfunc_execute_cmds \"$postlink_cmds\" 'exit $?'\n      fi\n\n      # Now create the wrapper script.\n      func_verbose \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    func_quote_for_eval \"$var_value\"\n\t    relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if not in dry run mode.\n      $opt_dry_run || {\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) func_stripname '' '.exe' \"$output\"\n\t         output=$func_stripname_result ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    func_stripname '' '.exe' \"$outputname\"\n\t    outputname=$func_stripname_result ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    func_dirname_and_basename \"$output\" \"\" \".\"\n\t    output_name=$func_basename_result\n\t    output_path=$func_dirname_result\n\t    cwrappersource=\"$output_path/$objdir/lt-$output_name.c\"\n\t    cwrapper=\"$output_path/$output_name.exe\"\n\t    $RM $cwrappersource $cwrapper\n\t    trap \"$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_cwrapperexe_src > $cwrappersource\n\n\t    # The wrapper executable is built using the $host compiler,\n\t    # because it contains $host paths and files. If cross-\n\t    # compiling, it, like the target executable, must be\n\t    # executed on the $host or under an emulation environment.\n\t    $opt_dry_run || {\n\t      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource\n\t      $STRIP $cwrapper\n\t    }\n\n\t    # Now, create the wrapper script for func_source use:\n\t    func_ltwrapper_scriptname $cwrapper\n\t    $RM $func_ltwrapper_scriptname_result\n\t    trap \"$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE\" 1 2 15\n\t    $opt_dry_run || {\n\t      # note: this script will not be executed, so do not chmod.\n\t      if test \"x$build\" = \"x$host\" ; then\n\t\t$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result\n\t      else\n\t\tfunc_emit_wrapper no > $func_ltwrapper_scriptname_result\n\t      fi\n\t    }\n\t  ;;\n\t  * )\n\t    $RM $output\n\t    trap \"$RM $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_wrapper no > $output\n\t    chmod +x $output\n\t  ;;\n\tesac\n      }\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      if test \"$build_libtool_libs\" = convenience; then\n\toldobjs=\"$libobjs_save $symfileobj\"\n\taddlibs=\"$convenience\"\n\tbuild_libtool_libs=no\n      else\n\tif test \"$build_libtool_libs\" = module; then\n\t  oldobjs=\"$libobjs_save\"\n\t  build_libtool_libs=no\n\telse\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\t  if test \"$preload\" = yes && test -f \"$symfileobj\"; then\n\t    func_append oldobjs \" $symfileobj\"\n\t  fi\n\tfi\n\taddlibs=\"$old_convenience\"\n      fi\n\n      if test -n \"$addlibs\"; then\n\tgentop=\"$output_objdir/${outputname}x\"\n\tfunc_append generated \" $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\tfunc_append oldobjs \" $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test \"$build_libtool_libs\" = yes; then\n\tcmds=$old_archive_from_new_cmds\n      else\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append oldobjs \" $func_extract_archives_result\"\n\tfi\n\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      func_basename \"$obj\"\n\t      $ECHO \"$func_basename_result\"\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  echo \"copying selected object files to avoid basename conflicts...\"\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  func_append generated \" $gentop\"\n\t  func_mkdir_p \"$gentop\"\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_basename \"$obj\"\n\t    objbase=\"$func_basename_result\"\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tfunc_arith $counter + 1\n\t\tcounter=$func_arith_result\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      func_show_eval \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      func_append oldobjs \" $gentop/$newobj\"\n\t      ;;\n\t    *) func_append oldobjs \" $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\tfunc_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n\ttool_oldlib=$func_to_tool_file_result\n\teval cmds=\\\"$old_archive_cmds\\\"\n\n\tfunc_len \" $cmds\"\n\tlen=$func_len_result\n\tif test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telif test -n \"$archiver_list_spec\"; then\n\t  func_verbose \"using command file archive linking...\"\n\t  for obj in $oldobjs\n\t  do\n\t    func_to_tool_file \"$obj\"\n\t    $ECHO \"$func_to_tool_file_result\"\n\t  done > $output_objdir/$libname.libcmd\n\t  func_to_tool_file \"$output_objdir/$libname.libcmd\"\n\t  oldobjs=\" $archiver_list_spec$func_to_tool_file_result\"\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  func_verbose \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  eval test_cmds=\\\"$old_archive_cmds\\\"\n\t  func_len \" $test_cmds\"\n\t  len0=$func_len_result\n\t  len=$len0\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_len \" $obj\"\n\t    func_arith $len + $func_len_result\n\t    len=$func_arith_result\n\t    func_append objlist \" $obj\"\n\t    if test \"$len\" -lt \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\" ; then\n\t\tRANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\${concat_cmds}$old_archive_cmds\\\"\n\t      objlist=\n\t      len=$len0\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test \"X$oldobjs\" = \"X\" ; then\n\t    eval cmds=\\\"\\$concat_cmds\\\"\n\t  else\n\t    eval cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\n\t  fi\n\tfi\n      fi\n      func_execute_cmds \"$cmds\" 'exit $?'\n    done\n\n    test -n \"$generated\" && \\\n      func_show_eval \"${RM}r$generated\"\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test \"$build_old_libs\" = yes && old_library=\"$libname.$libext\"\n      func_verbose \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  func_quote_for_eval \"$var_value\"\n\t  relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      if test \"$hardcode_automatic\" = yes ; then\n\trelink_command=\n      fi\n\n      # Only create the output if not a dry run.\n      $opt_dry_run || {\n\tfor installed in no yes; do\n\t  if test \"$installed\" = yes; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=\"$output_objdir/$outputname\"i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tfunc_basename \"$deplib\"\n\t\tname=\"$func_basename_result\"\n\t\tfunc_resolve_sysroot \"$deplib\"\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $func_resolve_sysroot_result`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$deplib' is not a valid libtool archive\"\n\t\tfunc_append newdependency_libs \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      -L*)\n\t\tfunc_stripname -L '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -L$func_replace_sysroot_result\"\n\t\t;;\n\t      -R*)\n\t\tfunc_stripname -R '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -R$func_replace_sysroot_result\"\n\t\t;;\n\t      *) func_append newdependency_libs \" $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=\"$newdependency_libs\"\n\t    newdlfiles=\n\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t      *.la)\n\t        func_basename \"$lib\"\n\t\tname=\"$func_basename_result\"\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlfiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      *) func_append newdlfiles \" $lib\" ;;\n\t      esac\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t      *.la)\n\t\t# Only pass preopened files to the pseudo-archive (for\n\t\t# eventual linking with the app. that links it) if we\n\t\t# didn't already link the preopened objects directly into\n\t\t# the library:\n\t\tfunc_basename \"$lib\"\n\t\tname=\"$func_basename_result\"\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlprefiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      esac\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlfiles \" $abs\"\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlprefiles \" $abs\"\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  fi\n\t  $RM $output\n\t  # place dlname in correct position for cygwin\n\t  # In fact, it would be nice if we could use this code for all target\n\t  # systems that can't hard-code library paths into their executables\n\t  # and that have no shared library path variable independent of PATH,\n\t  # but it turns out we can't easily determine that from inspecting\n\t  # libtool variables, so we have to hard-code the OSs to which it\n\t  # applies here; at the moment, that means platforms that use the PE\n\t  # object format with DLL files.  See the long comment at the top of\n\t  # tests/bindir.at for full details.\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)\n\t      # If a -bindir argument was supplied, place the dll there.\n\t      if test \"x$bindir\" != x ;\n\t      then\n\t\tfunc_relative_path \"$install_libdir\" \"$bindir\"\n\t\ttdlname=$func_relative_path_result$dlname\n\t      else\n\t\t# Otherwise fall back on heuristic.\n\t\ttdlname=../bin/$dlname\n\t      fi\n\t      ;;\n\t  esac\n\t  $ECHO > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Linker flags that can not go in dependency_libs.\ninherited_linker_flags='$new_inherited_linker_flags'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Names of additional weak libraries provided by this library\nweak_library_names='$weak_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test \"$installed\" = no && test \"$need_relink\" = yes; then\n\t    $ECHO >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      }\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      func_show_eval '( cd \"$output_objdir\" && $RM \"$outputname\" && $LN_S \"../$outputname\" \"$outputname\" )' 'exit $?'\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n}\n\n{ test \"$opt_mode\" = link || test \"$opt_mode\" = relink; } &&\n    func_mode_link ${1+\"$@\"}\n\n\n# func_mode_uninstall arg...\nfunc_mode_uninstall ()\n{\n    $opt_debug\n    RM=\"$nonopt\"\n    files=\n    rmforce=\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    for arg\n    do\n      case $arg in\n      -f) func_append RM \" $arg\"; rmforce=yes ;;\n      -*) func_append RM \" $arg\" ;;\n      *) func_append files \" $arg\" ;;\n      esac\n    done\n\n    test -z \"$RM\" && \\\n      func_fatal_help \"you must specify an RM program\"\n\n    rmdirs=\n\n    for file in $files; do\n      func_dirname \"$file\" \"\" \".\"\n      dir=\"$func_dirname_result\"\n      if test \"X$dir\" = X.; then\n\todir=\"$objdir\"\n      else\n\todir=\"$dir/$objdir\"\n      fi\n      func_basename \"$file\"\n      name=\"$func_basename_result\"\n      test \"$opt_mode\" = uninstall && odir=\"$dir\"\n\n      # Remember odir for removal later, being careful to avoid duplicates\n      if test \"$opt_mode\" = clean; then\n\tcase \" $rmdirs \" in\n\t  *\" $odir \"*) ;;\n\t  *) func_append rmdirs \" $odir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if { test -L \"$file\"; } >/dev/null 2>&1 ||\n\t { test -h \"$file\"; } >/dev/null 2>&1 ||\n\t test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif test \"$rmforce\" = yes; then\n\tcontinue\n      fi\n\n      rmfiles=\"$file\"\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif func_lalib_p \"$file\"; then\n\t  func_source $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    func_append rmfiles \" $odir/$n\"\n\t  done\n\t  test -n \"$old_library\" && func_append rmfiles \" $odir/$old_library\"\n\n\t  case \"$opt_mode\" in\n\t  clean)\n\t    case \" $library_names \" in\n\t    *\" $dlname \"*) ;;\n\t    *) test -n \"$dlname\" && func_append rmfiles \" $odir/$dlname\" ;;\n\t    esac\n\t    test -n \"$libdir\" && func_append rmfiles \" $odir/$name $odir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      func_execute_cmds \"$postuninstall_cmds\" 'test \"$rmforce\" = yes || exit_status=1'\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      func_execute_cmds \"$old_postuninstall_cmds\" 'test \"$rmforce\" = yes || exit_status=1'\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif func_lalib_p \"$file\"; then\n\n\t  # Read the .lo file\n\t  func_source $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" &&\n\t     test \"$pic_object\" != none; then\n\t    func_append rmfiles \" $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" &&\n\t     test \"$non_pic_object\" != none; then\n\t    func_append rmfiles \" $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test \"$opt_mode\" = clean ; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    func_stripname '' '.exe' \"$file\"\n\t    file=$func_stripname_result\n\t    func_stripname '' '.exe' \"$name\"\n\t    noexename=$func_stripname_result\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    func_append rmfiles \" $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if func_ltwrapper_p \"$file\"; then\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      relink_command=\n\t      func_source $func_ltwrapper_scriptname_result\n\t      func_append rmfiles \" $func_ltwrapper_scriptname_result\"\n\t    else\n\t      relink_command=\n\t      func_source $dir/$noexename\n\t    fi\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    func_append rmfiles \" $odir/$name $odir/${name}S.${objext}\"\n\t    if test \"$fast_install\" = yes && test -n \"$relink_command\"; then\n\t      func_append rmfiles \" $odir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\" ; then\n\t      func_append rmfiles \" $odir/lt-${noexename}.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      func_show_eval \"$RM $rmfiles\" 'exit_status=1'\n    done\n\n    # Try to remove the ${objdir}s in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\tfunc_show_eval \"rmdir $dir >/dev/null 2>&1\"\n      fi\n    done\n\n    exit $exit_status\n}\n\n{ test \"$opt_mode\" = uninstall || test \"$opt_mode\" = clean; } &&\n    func_mode_uninstall ${1+\"$@\"}\n\ntest -z \"$opt_mode\" && {\n  help=\"$generic_help\"\n  func_fatal_help \"you must specify a MODE\"\n}\n\ntest -z \"$exec_cmd\" && \\\n  func_fatal_help \"invalid operation mode \\`$opt_mode'\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec \"$exec_cmd\"\n  exit $EXIT_FAILURE\nfi\n\nexit $exit_status\n\n\n# The TAGs below are defined such that we never get into a situation\n# in which we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n# vi:sw=2\n]])\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/libltdl/config/ltmain.sh": "\n# libtool (GNU libtool) 2.4.2\n# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006,\n# 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n# Usage: $progname [OPTION]... [MODE-ARG]...\n#\n# Provide generalized library-building support services.\n#\n#       --config             show all configuration variables\n#       --debug              enable verbose shell tracing\n#   -n, --dry-run            display commands without modifying any files\n#       --features           display basic configuration information and exit\n#       --mode=MODE          use operation mode MODE\n#       --preserve-dup-deps  don't remove duplicate dependency libraries\n#       --quiet, --silent    don't print informational messages\n#       --no-quiet, --no-silent\n#                            print informational messages (default)\n#       --no-warn            don't display warning messages\n#       --tag=TAG            use configuration variables from tag TAG\n#   -v, --verbose            print more informational messages than default\n#       --no-verbose         don't print the extra informational messages\n#       --version            print version information\n#   -h, --help, --help-all   print short, long, or detailed help message\n#\n# MODE must be one of the following:\n#\n#         clean              remove files from the build directory\n#         compile            compile a source file into a libtool object\n#         execute            automatically set library path, then run a program\n#         finish             complete the installation of libtool libraries\n#         install            install libraries or executables\n#         link               create a library or an executable\n#         uninstall          remove libraries from an installed directory\n#\n# MODE-ARGS vary depending on the MODE.  When passed as first option,\n# `--mode=MODE' may be abbreviated as `MODE' or a unique abbreviation of that.\n# Try `$progname --help --mode=MODE' for a more detailed description of MODE.\n#\n# When reporting a bug, please describe a test case to reproduce it and\n# include the following information:\n#\n#         host-triplet:\t$host\n#         shell:\t\t$SHELL\n#         compiler:\t\t$LTCC\n#         compiler flags:\t\t$LTCFLAGS\n#         linker:\t\t$LD (gnu? $with_gnu_ld)\n#         $progname:\t(GNU libtool) 2.4.2\n#         automake:\t$automake_version\n#         autoconf:\t$autoconf_version\n#\n# Report bugs to <bug-libtool@gnu.org>.\n# GNU libtool home page: <http://www.gnu.org/software/libtool/>.\n# General help using GNU software: <http://www.gnu.org/gethelp/>.\n\nPROGRAM=libtool\nPACKAGE=libtool\nVERSION=2.4.2\nTIMESTAMP=\"\"\npackage_revision=1.3337\n\n# Be Bourne compatible\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n}\n\n# NLS nuisances: We save the old values to restore during execute mode.\nlt_user_locale=\nlt_safe_locale=\nfor lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\ndo\n  eval \"if test \\\"\\${$lt_var+set}\\\" = set; then\n          save_$lt_var=\\$$lt_var\n          $lt_var=C\n\t  export $lt_var\n\t  lt_user_locale=\\\"$lt_var=\\\\\\$save_\\$lt_var; \\$lt_user_locale\\\"\n\t  lt_safe_locale=\\\"$lt_var=C; \\$lt_safe_locale\\\"\n\tfi\"\ndone\nLC_ALL=C\nLANGUAGE=C\nexport LANGUAGE LC_ALL\n\n$lt_unset CDPATH\n\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=\"$0\"\n\n\n\n: ${CP=\"cp -f\"}\ntest \"${ECHO+set}\" = set || ECHO=${as_echo-'printf %s\\n'}\n: ${MAKE=\"make\"}\n: ${MKDIR=\"mkdir\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n: ${SHELL=\"${CONFIG_SHELL-/bin/sh}\"}\n: ${Xsed=\"$SED -e 1s/^X//\"}\n\n# Global variables:\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\nEXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.\nEXIT_SKIP=77\t  # $? = 77 is used to indicate a skipped test to automake.\n\nexit_status=$EXIT_SUCCESS\n\n# Make sure IFS has a sensible default\nlt_nl='\n'\nIFS=\" \t$lt_nl\"\n\ndirname=\"s,/[^/]*$,,\"\nbasename=\"s,^.*/,,\"\n\n# func_dirname file append nondir_replacement\n# Compute the dirname of FILE.  If nonempty, add APPEND to the result,\n# otherwise set result to NONDIR_REPLACEMENT.\nfunc_dirname ()\n{\n    func_dirname_result=`$ECHO \"${1}\" | $SED \"$dirname\"`\n    if test \"X$func_dirname_result\" = \"X${1}\"; then\n      func_dirname_result=\"${3}\"\n    else\n      func_dirname_result=\"$func_dirname_result${2}\"\n    fi\n} # func_dirname may be replaced by extended shell implementation\n\n\n# func_basename file\nfunc_basename ()\n{\n    func_basename_result=`$ECHO \"${1}\" | $SED \"$basename\"`\n} # func_basename may be replaced by extended shell implementation\n\n\n# func_dirname_and_basename file append nondir_replacement\n# perform func_basename and func_dirname in a single function\n# call:\n#   dirname:  Compute the dirname of FILE.  If nonempty,\n#             add APPEND to the result, otherwise set result\n#             to NONDIR_REPLACEMENT.\n#             value returned in \"$func_dirname_result\"\n#   basename: Compute filename of FILE.\n#             value retuned in \"$func_basename_result\"\n# Implementation must be kept synchronized with func_dirname\n# and func_basename. For efficiency, we do not delegate to\n# those functions but instead duplicate the functionality here.\nfunc_dirname_and_basename ()\n{\n    # Extract subdirectory from the argument.\n    func_dirname_result=`$ECHO \"${1}\" | $SED -e \"$dirname\"`\n    if test \"X$func_dirname_result\" = \"X${1}\"; then\n      func_dirname_result=\"${3}\"\n    else\n      func_dirname_result=\"$func_dirname_result${2}\"\n    fi\n    func_basename_result=`$ECHO \"${1}\" | $SED -e \"$basename\"`\n} # func_dirname_and_basename may be replaced by extended shell implementation\n\n\n# func_stripname prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n# func_strip_suffix prefix name\nfunc_stripname ()\n{\n    case ${2} in\n      .*) func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%\\\\\\\\${2}\\$%%\"`;;\n      *)  func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%${2}\\$%%\"`;;\n    esac\n} # func_stripname may be replaced by extended shell implementation\n\n\n# These SED scripts presuppose an absolute path with a trailing slash.\npathcar='s,^/\\([^/]*\\).*$,\\1,'\npathcdr='s,^/[^/]*,,'\nremovedotparts=':dotsl\n\t\ts@/\\./@/@g\n\t\tt dotsl\n\t\ts,/\\.$,/,'\ncollapseslashes='s@/\\{1,\\}@/@g'\nfinalslash='s,/*$,/,'\n\n# func_normal_abspath PATH\n# Remove doubled-up and trailing slashes, \".\" path components,\n# and cancel out any \"..\" path components in PATH after making\n# it an absolute path.\n#             value returned in \"$func_normal_abspath_result\"\nfunc_normal_abspath ()\n{\n  # Start from root dir and reassemble the path.\n  func_normal_abspath_result=\n  func_normal_abspath_tpath=$1\n  func_normal_abspath_altnamespace=\n  case $func_normal_abspath_tpath in\n    \"\")\n      # Empty path, that just means $cwd.\n      func_stripname '' '/' \"`pwd`\"\n      func_normal_abspath_result=$func_stripname_result\n      return\n    ;;\n    # The next three entries are used to spot a run of precisely\n    # two leading slashes without using negated character classes;\n    # we take advantage of case's first-match behaviour.\n    ///*)\n      # Unusual form of absolute path, do nothing.\n    ;;\n    //*)\n      # Not necessarily an ordinary path; POSIX reserves leading '//'\n      # and for example Cygwin uses it to access remote file shares\n      # over CIFS/SMB, so we conserve a leading double slash if found.\n      func_normal_abspath_altnamespace=/\n    ;;\n    /*)\n      # Absolute path, do nothing.\n    ;;\n    *)\n      # Relative path, prepend $cwd.\n      func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath\n    ;;\n  esac\n  # Cancel out all the simple stuff to save iterations.  We also want\n  # the path to end with a slash for ease of parsing, so make sure\n  # there is one (and only one) here.\n  func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$removedotparts\" -e \"$collapseslashes\" -e \"$finalslash\"`\n  while :; do\n    # Processed it all yet?\n    if test \"$func_normal_abspath_tpath\" = / ; then\n      # If we ascended to the root using \"..\" the result may be empty now.\n      if test -z \"$func_normal_abspath_result\" ; then\n        func_normal_abspath_result=/\n      fi\n      break\n    fi\n    func_normal_abspath_tcomponent=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$pathcar\"`\n    func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$pathcdr\"`\n    # Figure out what to do with it\n    case $func_normal_abspath_tcomponent in\n      \"\")\n        # Trailing empty path component, ignore it.\n      ;;\n      ..)\n        # Parent dir; strip last assembled component from result.\n        func_dirname \"$func_normal_abspath_result\"\n        func_normal_abspath_result=$func_dirname_result\n      ;;\n      *)\n        # Actual path component, append it.\n        func_normal_abspath_result=$func_normal_abspath_result/$func_normal_abspath_tcomponent\n      ;;\n    esac\n  done\n  # Restore leading double-slash if one was found on entry.\n  func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result\n}\n\n# func_relative_path SRCDIR DSTDIR\n# generates a relative path from SRCDIR to DSTDIR, with a trailing\n# slash if non-empty, suitable for immediately appending a filename\n# without needing to append a separator.\n#             value returned in \"$func_relative_path_result\"\nfunc_relative_path ()\n{\n  func_relative_path_result=\n  func_normal_abspath \"$1\"\n  func_relative_path_tlibdir=$func_normal_abspath_result\n  func_normal_abspath \"$2\"\n  func_relative_path_tbindir=$func_normal_abspath_result\n\n  # Ascend the tree starting from libdir\n  while :; do\n    # check if we have found a prefix of bindir\n    case $func_relative_path_tbindir in\n      $func_relative_path_tlibdir)\n        # found an exact match\n        func_relative_path_tcancelled=\n        break\n        ;;\n      $func_relative_path_tlibdir*)\n        # found a matching prefix\n        func_stripname \"$func_relative_path_tlibdir\" '' \"$func_relative_path_tbindir\"\n        func_relative_path_tcancelled=$func_stripname_result\n        if test -z \"$func_relative_path_result\"; then\n          func_relative_path_result=.\n        fi\n        break\n        ;;\n      *)\n        func_dirname $func_relative_path_tlibdir\n        func_relative_path_tlibdir=${func_dirname_result}\n        if test \"x$func_relative_path_tlibdir\" = x ; then\n          # Have to descend all the way to the root!\n          func_relative_path_result=../$func_relative_path_result\n          func_relative_path_tcancelled=$func_relative_path_tbindir\n          break\n        fi\n        func_relative_path_result=../$func_relative_path_result\n        ;;\n    esac\n  done\n\n  # Now calculate path; take care to avoid doubling-up slashes.\n  func_stripname '' '/' \"$func_relative_path_result\"\n  func_relative_path_result=$func_stripname_result\n  func_stripname '/' '/' \"$func_relative_path_tcancelled\"\n  if test \"x$func_stripname_result\" != x ; then\n    func_relative_path_result=${func_relative_path_result}/${func_stripname_result}\n  fi\n\n  # Normalisation. If bindir is libdir, return empty string,\n  # else relative path ending with a slash; either way, target\n  # file name can be directly appended.\n  if test ! -z \"$func_relative_path_result\"; then\n    func_stripname './' '' \"$func_relative_path_result/\"\n    func_relative_path_result=$func_stripname_result\n  fi\n}\n\n# The name of this program:\nfunc_dirname_and_basename \"$progpath\"\nprogname=$func_basename_result\n\n# Make sure we have an absolute path for reexecution:\ncase $progpath in\n  [\\\\/]*|[A-Za-z]:\\\\*) ;;\n  *[\\\\/]*)\n     progdir=$func_dirname_result\n     progdir=`cd \"$progdir\" && pwd`\n     progpath=\"$progdir/$progname\"\n     ;;\n  *)\n     save_IFS=\"$IFS\"\n     IFS=${PATH_SEPARATOR-:}\n     for progdir in $PATH; do\n       IFS=\"$save_IFS\"\n       test -x \"$progdir/$progname\" && break\n     done\n     IFS=\"$save_IFS\"\n     test -n \"$progdir\" || progdir=`pwd`\n     progpath=\"$progdir/$progname\"\n     ;;\nesac\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed=\"${SED}\"' -e 1s/^X//'\nsed_quote_subst='s/\\([`\"$\\\\]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n\n# Sed substitution that turns a string into a regex matching for the\n# string literally.\nsed_make_literal_regex='s,[].[^$\\\\*\\/],\\\\&,g'\n\n# Sed substitution that converts a w32 file name or path\n# which contains forward slashes, into one that contains\n# (escaped) backslashes.  A very naive implementation.\nlt_sed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n\n# Re-`\\' parameter expansions in output of double_quote_subst that were\n# `\\'-ed in input to the same.  If an odd number of `\\' preceded a '$'\n# in input to double_quote_subst, that '$' was protected from expansion.\n# Since each input `\\' is now two `\\'s, look for any number of runs of\n# four `\\'s followed by two `\\'s and then a '$'.  `\\' that '$'.\nbs='\\\\'\nbs2='\\\\\\\\'\nbs4='\\\\\\\\\\\\\\\\'\ndollar='\\$'\nsed_double_backslash=\"\\\n  s/$bs4/&\\\\\n/g\n  s/^$bs2$dollar/$bs&/\n  s/\\\\([^$bs]\\\\)$bs2$dollar/\\\\1$bs2$bs$dollar/g\n  s/\\n//g\"\n\n# Standard options:\nopt_dry_run=false\nopt_help=false\nopt_quiet=false\nopt_verbose=false\nopt_warning=:\n\n# func_echo arg...\n# Echo program name prefixed message, along with the current mode\n# name if it has been set yet.\nfunc_echo ()\n{\n    $ECHO \"$progname: ${opt_mode+$opt_mode: }$*\"\n}\n\n# func_verbose arg...\n# Echo program name prefixed message in verbose mode only.\nfunc_verbose ()\n{\n    $opt_verbose && func_echo ${1+\"$@\"}\n\n    # A bug in bash halts the script if the last line of a function\n    # fails when set -e is in force, so we need another command to\n    # work around that:\n    :\n}\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\n# func_error arg...\n# Echo program name prefixed message to standard error.\nfunc_error ()\n{\n    $ECHO \"$progname: ${opt_mode+$opt_mode: }\"${1+\"$@\"} 1>&2\n}\n\n# func_warning arg...\n# Echo program name prefixed warning message to standard error.\nfunc_warning ()\n{\n    $opt_warning && $ECHO \"$progname: ${opt_mode+$opt_mode: }warning: \"${1+\"$@\"} 1>&2\n\n    # bash bug again:\n    :\n}\n\n# func_fatal_error arg...\n# Echo program name prefixed message to standard error, and exit.\nfunc_fatal_error ()\n{\n    func_error ${1+\"$@\"}\n    exit $EXIT_FAILURE\n}\n\n# func_fatal_help arg...\n# Echo program name prefixed message to standard error, followed by\n# a help hint, and exit.\nfunc_fatal_help ()\n{\n    func_error ${1+\"$@\"}\n    func_fatal_error \"$help\"\n}\nhelp=\"Try \\`$progname --help' for more information.\"  ## default\n\n\n# func_grep expression filename\n# Check whether EXPRESSION matches any line of FILENAME, without output.\nfunc_grep ()\n{\n    $GREP \"$1\" \"$2\" >/dev/null 2>&1\n}\n\n\n# func_mkdir_p directory-path\n# Make sure the entire path to DIRECTORY-PATH is available.\nfunc_mkdir_p ()\n{\n    my_directory_path=\"$1\"\n    my_dir_list=\n\n    if test -n \"$my_directory_path\" && test \"$opt_dry_run\" != \":\"; then\n\n      # Protect directory names starting with `-'\n      case $my_directory_path in\n        -*) my_directory_path=\"./$my_directory_path\" ;;\n      esac\n\n      # While some portion of DIR does not yet exist...\n      while test ! -d \"$my_directory_path\"; do\n        # ...make a list in topmost first order.  Use a colon delimited\n\t# list incase some portion of path contains whitespace.\n        my_dir_list=\"$my_directory_path:$my_dir_list\"\n\n        # If the last portion added has no slash in it, the list is done\n        case $my_directory_path in */*) ;; *) break ;; esac\n\n        # ...otherwise throw away the child directory and loop\n        my_directory_path=`$ECHO \"$my_directory_path\" | $SED -e \"$dirname\"`\n      done\n      my_dir_list=`$ECHO \"$my_dir_list\" | $SED 's,:*$,,'`\n\n      save_mkdir_p_IFS=\"$IFS\"; IFS=':'\n      for my_dir in $my_dir_list; do\n\tIFS=\"$save_mkdir_p_IFS\"\n        # mkdir can fail with a `File exist' error if two processes\n        # try to create one of the directories concurrently.  Don't\n        # stop in that case!\n        $MKDIR \"$my_dir\" 2>/dev/null || :\n      done\n      IFS=\"$save_mkdir_p_IFS\"\n\n      # Bail out if we (or some other process) failed to create a directory.\n      test -d \"$my_directory_path\" || \\\n        func_fatal_error \"Failed to create \\`$1'\"\n    fi\n}\n\n\n# func_mktempdir [string]\n# Make a temporary directory that won't clash with other running\n# libtool processes, and avoids race conditions if possible.  If\n# given, STRING is the basename for that directory.\nfunc_mktempdir ()\n{\n    my_template=\"${TMPDIR-/tmp}/${1-$progname}\"\n\n    if test \"$opt_dry_run\" = \":\"; then\n      # Return a directory name, but don't create it in dry-run mode\n      my_tmpdir=\"${my_template}-$$\"\n    else\n\n      # If mktemp works, use that first and foremost\n      my_tmpdir=`mktemp -d \"${my_template}-XXXXXXXX\" 2>/dev/null`\n\n      if test ! -d \"$my_tmpdir\"; then\n        # Failing that, at least try and use $RANDOM to avoid a race\n        my_tmpdir=\"${my_template}-${RANDOM-0}$$\"\n\n        save_mktempdir_umask=`umask`\n        umask 0077\n        $MKDIR \"$my_tmpdir\"\n        umask $save_mktempdir_umask\n      fi\n\n      # If we're not in dry-run mode, bomb out on failure\n      test -d \"$my_tmpdir\" || \\\n        func_fatal_error \"cannot create temporary directory \\`$my_tmpdir'\"\n    fi\n\n    $ECHO \"$my_tmpdir\"\n}\n\n\n# func_quote_for_eval arg\n# Aesthetically quote ARG to be evaled later.\n# This function returns two values: FUNC_QUOTE_FOR_EVAL_RESULT\n# is double-quoted, suitable for a subsequent eval, whereas\n# FUNC_QUOTE_FOR_EVAL_UNQUOTED_RESULT has merely all characters\n# which are still active within double quotes backslashified.\nfunc_quote_for_eval ()\n{\n    case $1 in\n      *[\\\\\\`\\\"\\$]*)\n\tfunc_quote_for_eval_unquoted_result=`$ECHO \"$1\" | $SED \"$sed_quote_subst\"` ;;\n      *)\n        func_quote_for_eval_unquoted_result=\"$1\" ;;\n    esac\n\n    case $func_quote_for_eval_unquoted_result in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting, command substitution and and variable\n      # expansion for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        func_quote_for_eval_result=\"\\\"$func_quote_for_eval_unquoted_result\\\"\"\n        ;;\n      *)\n        func_quote_for_eval_result=\"$func_quote_for_eval_unquoted_result\"\n    esac\n}\n\n\n# func_quote_for_expand arg\n# Aesthetically quote ARG to be evaled later; same as above,\n# but do not quote variable references.\nfunc_quote_for_expand ()\n{\n    case $1 in\n      *[\\\\\\`\\\"]*)\n\tmy_arg=`$ECHO \"$1\" | $SED \\\n\t    -e \"$double_quote_subst\" -e \"$sed_double_backslash\"` ;;\n      *)\n        my_arg=\"$1\" ;;\n    esac\n\n    case $my_arg in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting and command substitution for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        my_arg=\"\\\"$my_arg\\\"\"\n        ;;\n    esac\n\n    func_quote_for_expand_result=\"$my_arg\"\n}\n\n\n# func_show_eval cmd [fail_exp]\n# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.\nfunc_show_eval ()\n{\n    my_cmd=\"$1\"\n    my_fail_exp=\"${2-:}\"\n\n    ${opt_silent-false} || {\n      func_quote_for_expand \"$my_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    if ${opt_dry_run-false}; then :; else\n      eval \"$my_cmd\"\n      my_status=$?\n      if test \"$my_status\" -eq 0; then :; else\n\teval \"(exit $my_status); $my_fail_exp\"\n      fi\n    fi\n}\n\n\n# func_show_eval_locale cmd [fail_exp]\n# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.  Use the saved locale for evaluation.\nfunc_show_eval_locale ()\n{\n    my_cmd=\"$1\"\n    my_fail_exp=\"${2-:}\"\n\n    ${opt_silent-false} || {\n      func_quote_for_expand \"$my_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    if ${opt_dry_run-false}; then :; else\n      eval \"$lt_user_locale\n\t    $my_cmd\"\n      my_status=$?\n      eval \"$lt_safe_locale\"\n      if test \"$my_status\" -eq 0; then :; else\n\teval \"(exit $my_status); $my_fail_exp\"\n      fi\n    fi\n}\n\n# func_tr_sh\n# Turn $1 into a string suitable for a shell variable name.\n# Result is stored in $func_tr_sh_result.  All characters\n# not in the set a-zA-Z0-9_ are replaced with '_'. Further,\n# if $1 begins with a digit, a '_' is prepended as well.\nfunc_tr_sh ()\n{\n  case $1 in\n  [0-9]* | *[!a-zA-Z0-9_]*)\n    func_tr_sh_result=`$ECHO \"$1\" | $SED 's/^\\([0-9]\\)/_\\1/; s/[^a-zA-Z0-9_]/_/g'`\n    ;;\n  * )\n    func_tr_sh_result=$1\n    ;;\n  esac\n}\n\n\n# func_version\n# Echo version message to standard output and exit.\nfunc_version ()\n{\n    $opt_debug\n\n    $SED -n '/(C)/!b go\n\t:more\n\t/\\./!{\n\t  N\n\t  s/\\n# / /\n\t  b more\n\t}\n\t:go\n\t/^# '$PROGRAM' (GNU /,/# warranty; / {\n        s/^# //\n\ts/^# *$//\n        s/\\((C)\\)[ 0-9,-]*\\( [1-9][0-9]*\\)/\\1\\2/\n        p\n     }' < \"$progpath\"\n     exit $?\n}\n\n# func_usage\n# Echo short help message to standard output and exit.\nfunc_usage ()\n{\n    $opt_debug\n\n    $SED -n '/^# Usage:/,/^#  *.*--help/ {\n        s/^# //\n\ts/^# *$//\n\ts/\\$progname/'$progname'/\n\tp\n    }' < \"$progpath\"\n    echo\n    $ECHO \"run \\`$progname --help | more' for full usage\"\n    exit $?\n}\n\n# func_help [NOEXIT]\n# Echo long help message to standard output and exit,\n# unless 'noexit' is passed as argument.\nfunc_help ()\n{\n    $opt_debug\n\n    $SED -n '/^# Usage:/,/# Report bugs to/ {\n\t:print\n        s/^# //\n\ts/^# *$//\n\ts*\\$progname*'$progname'*\n\ts*\\$host*'\"$host\"'*\n\ts*\\$SHELL*'\"$SHELL\"'*\n\ts*\\$LTCC*'\"$LTCC\"'*\n\ts*\\$LTCFLAGS*'\"$LTCFLAGS\"'*\n\ts*\\$LD*'\"$LD\"'*\n\ts/\\$with_gnu_ld/'\"$with_gnu_ld\"'/\n\ts/\\$automake_version/'\"`(${AUTOMAKE-automake} --version) 2>/dev/null |$SED 1q`\"'/\n\ts/\\$autoconf_version/'\"`(${AUTOCONF-autoconf} --version) 2>/dev/null |$SED 1q`\"'/\n\tp\n\td\n     }\n     /^# .* home page:/b print\n     /^# General help using/b print\n     ' < \"$progpath\"\n    ret=$?\n    if test -z \"$1\"; then\n      exit $ret\n    fi\n}\n\n# func_missing_arg argname\n# Echo program name prefixed message to standard error and set global\n# exit_cmd.\nfunc_missing_arg ()\n{\n    $opt_debug\n\n    func_error \"missing argument for $1.\"\n    exit_cmd=exit\n}\n\n\n# func_split_short_opt shortopt\n# Set func_split_short_opt_name and func_split_short_opt_arg shell\n# variables after splitting SHORTOPT after the 2nd character.\nfunc_split_short_opt ()\n{\n    my_sed_short_opt='1s/^\\(..\\).*$/\\1/;q'\n    my_sed_short_rest='1s/^..\\(.*\\)$/\\1/;q'\n\n    func_split_short_opt_name=`$ECHO \"$1\" | $SED \"$my_sed_short_opt\"`\n    func_split_short_opt_arg=`$ECHO \"$1\" | $SED \"$my_sed_short_rest\"`\n} # func_split_short_opt may be replaced by extended shell implementation\n\n\n# func_split_long_opt longopt\n# Set func_split_long_opt_name and func_split_long_opt_arg shell\n# variables after splitting LONGOPT at the `=' sign.\nfunc_split_long_opt ()\n{\n    my_sed_long_opt='1s/^\\(--[^=]*\\)=.*/\\1/;q'\n    my_sed_long_arg='1s/^--[^=]*=//'\n\n    func_split_long_opt_name=`$ECHO \"$1\" | $SED \"$my_sed_long_opt\"`\n    func_split_long_opt_arg=`$ECHO \"$1\" | $SED \"$my_sed_long_arg\"`\n} # func_split_long_opt may be replaced by extended shell implementation\n\nexit_cmd=:\n\n\n\n\n\nmagic=\"%%%MAGIC variable%%%\"\nmagic_exe=\"%%%MAGIC EXE variable%%%\"\n\n# Global variables.\nnonopt=\npreserve_args=\nlo2o=\"s/\\\\.lo\\$/.${objext}/\"\no2lo=\"s/\\\\.${objext}\\$/.lo/\"\nextracted_archives=\nextracted_serial=0\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\n# func_append var value\n# Append VALUE to the end of shell variable VAR.\nfunc_append ()\n{\n    eval \"${1}=\\$${1}\\${2}\"\n} # func_append may be replaced by extended shell implementation\n\n# func_append_quoted var value\n# Quote VALUE and append to the end of shell variable VAR, separated\n# by a space.\nfunc_append_quoted ()\n{\n    func_quote_for_eval \"${2}\"\n    eval \"${1}=\\$${1}\\\\ \\$func_quote_for_eval_result\"\n} # func_append_quoted may be replaced by extended shell implementation\n\n\n# func_arith arithmetic-term...\nfunc_arith ()\n{\n    func_arith_result=`expr \"${@}\"`\n} # func_arith may be replaced by extended shell implementation\n\n\n# func_len string\n# STRING may not start with a hyphen.\nfunc_len ()\n{\n    func_len_result=`expr \"${1}\" : \".*\" 2>/dev/null || echo $max_cmd_len`\n} # func_len may be replaced by extended shell implementation\n\n\n# func_lo2o object\nfunc_lo2o ()\n{\n    func_lo2o_result=`$ECHO \"${1}\" | $SED \"$lo2o\"`\n} # func_lo2o may be replaced by extended shell implementation\n\n\n# func_xform libobj-or-source\nfunc_xform ()\n{\n    func_xform_result=`$ECHO \"${1}\" | $SED 's/\\.[^.]*$/.lo/'`\n} # func_xform may be replaced by extended shell implementation\n\n\n# func_fatal_configuration arg...\n# Echo program name prefixed message to standard error, followed by\n# a configuration failure hint, and exit.\nfunc_fatal_configuration ()\n{\n    func_error ${1+\"$@\"}\n    func_error \"See the $PACKAGE documentation for more information.\"\n    func_fatal_error \"Fatal configuration error.\"\n}\n\n\n# func_config\n# Display the configuration for all the tags in this script.\nfunc_config ()\n{\n    re_begincf='^# ### BEGIN LIBTOOL'\n    re_endcf='^# ### END LIBTOOL'\n\n    # Default configuration.\n    $SED \"1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\\$d\" < \"$progpath\"\n\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      $SED -n \"/$re_begincf TAG CONFIG: $tagname\\$/,/$re_endcf TAG CONFIG: $tagname\\$/p\" < \"$progpath\"\n    done\n\n    exit $?\n}\n\n# func_features\n# Display the features supported by this script.\nfunc_features ()\n{\n    echo \"host: $host\"\n    if test \"$build_libtool_libs\" = yes; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test \"$build_old_libs\" = yes; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n\n    exit $?\n}\n\n# func_enable_tag tagname\n# Verify that TAGNAME is valid, and either flag an error and exit, or\n# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist\n# variable here.\nfunc_enable_tag ()\n{\n  # Global variable:\n  tagname=\"$1\"\n\n  re_begincf=\"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\\$\"\n  re_endcf=\"^# ### END LIBTOOL TAG CONFIG: $tagname\\$\"\n  sed_extractcf=\"/$re_begincf/,/$re_endcf/p\"\n\n  # Validate tagname.\n  case $tagname in\n    *[!-_A-Za-z0-9,/]*)\n      func_fatal_error \"invalid tag name: $tagname\"\n      ;;\n  esac\n\n  # Don't test for the \"default\" C tag, as we know it's\n  # there but not specially marked.\n  case $tagname in\n    CC) ;;\n    *)\n      if $GREP \"$re_begincf\" \"$progpath\" >/dev/null 2>&1; then\n\ttaglist=\"$taglist $tagname\"\n\n\t# Evaluate the configuration.  Be careful to quote the path\n\t# and the sed script, to avoid splitting on whitespace, but\n\t# also don't use non-portable quotes within backquotes within\n\t# quotes we have to do it in 2 steps:\n\textractedcf=`$SED -n -e \"$sed_extractcf\" < \"$progpath\"`\n\teval \"$extractedcf\"\n      else\n\tfunc_error \"ignoring unknown tag $tagname\"\n      fi\n      ;;\n  esac\n}\n\n# func_check_version_match\n# Ensure that we are using m4 macros, and libtool script from the same\n# release of libtool.\nfunc_check_version_match ()\n{\n  if test \"$package_revision\" != \"$macro_revision\"; then\n    if test \"$VERSION\" != \"$macro_version\"; then\n      if test -z \"$macro_version\"; then\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from an older release.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n      else\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n      fi\n    else\n      cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,\n$progname: but the definition of this LT_INIT comes from revision $macro_revision.\n$progname: You should recreate aclocal.m4 with macros from revision $package_revision\n$progname: of $PACKAGE $VERSION and run autoconf again.\n_LT_EOF\n    fi\n\n    exit $EXIT_MISMATCH\n  fi\n}\n\n\n# Shorthand for --mode=foo, only valid as the first argument\ncase $1 in\nclean|clea|cle|cl)\n  shift; set dummy --mode clean ${1+\"$@\"}; shift\n  ;;\ncompile|compil|compi|comp|com|co|c)\n  shift; set dummy --mode compile ${1+\"$@\"}; shift\n  ;;\nexecute|execut|execu|exec|exe|ex|e)\n  shift; set dummy --mode execute ${1+\"$@\"}; shift\n  ;;\nfinish|finis|fini|fin|fi|f)\n  shift; set dummy --mode finish ${1+\"$@\"}; shift\n  ;;\ninstall|instal|insta|inst|ins|in|i)\n  shift; set dummy --mode install ${1+\"$@\"}; shift\n  ;;\nlink|lin|li|l)\n  shift; set dummy --mode link ${1+\"$@\"}; shift\n  ;;\nuninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)\n  shift; set dummy --mode uninstall ${1+\"$@\"}; shift\n  ;;\nesac\n\n\n\n# Option defaults:\nopt_debug=:\nopt_dry_run=false\nopt_config=false\nopt_preserve_dup_deps=false\nopt_features=false\nopt_finish=false\nopt_help=false\nopt_help_all=false\nopt_silent=:\nopt_warning=:\nopt_verbose=:\nopt_silent=false\nopt_verbose=false\n\n\n# Parse options once, thoroughly.  This comes as soon as possible in the\n# script to make things like `--version' happen as quickly as we can.\n{\n  # this just eases exit handling\n  while test $# -gt 0; do\n    opt=\"$1\"\n    shift\n    case $opt in\n      --debug|-x)\topt_debug='set -x'\n\t\t\tfunc_echo \"enabling shell trace mode\"\n\t\t\t$opt_debug\n\t\t\t;;\n      --dry-run|--dryrun|-n)\n\t\t\topt_dry_run=:\n\t\t\t;;\n      --config)\n\t\t\topt_config=:\nfunc_config\n\t\t\t;;\n      --dlopen|-dlopen)\n\t\t\toptarg=\"$1\"\n\t\t\topt_dlopen=\"${opt_dlopen+$opt_dlopen\n}$optarg\"\n\t\t\tshift\n\t\t\t;;\n      --preserve-dup-deps)\n\t\t\topt_preserve_dup_deps=:\n\t\t\t;;\n      --features)\n\t\t\topt_features=:\nfunc_features\n\t\t\t;;\n      --finish)\n\t\t\topt_finish=:\nset dummy --mode finish ${1+\"$@\"}; shift\n\t\t\t;;\n      --help)\n\t\t\topt_help=:\n\t\t\t;;\n      --help-all)\n\t\t\topt_help_all=:\nopt_help=': help-all'\n\t\t\t;;\n      --mode)\n\t\t\ttest $# = 0 && func_missing_arg $opt && break\n\t\t\toptarg=\"$1\"\n\t\t\topt_mode=\"$optarg\"\ncase $optarg in\n  # Valid mode arguments:\n  clean|compile|execute|finish|install|link|relink|uninstall) ;;\n\n  # Catch anything else as an error\n  *) func_error \"invalid argument for $opt\"\n     exit_cmd=exit\n     break\n     ;;\nesac\n\t\t\tshift\n\t\t\t;;\n      --no-silent|--no-quiet)\n\t\t\topt_silent=false\nfunc_append preserve_args \" $opt\"\n\t\t\t;;\n      --no-warning|--no-warn)\n\t\t\topt_warning=false\nfunc_append preserve_args \" $opt\"\n\t\t\t;;\n      --no-verbose)\n\t\t\topt_verbose=false\nfunc_append preserve_args \" $opt\"\n\t\t\t;;\n      --silent|--quiet)\n\t\t\topt_silent=:\nfunc_append preserve_args \" $opt\"\n        opt_verbose=false\n\t\t\t;;\n      --verbose|-v)\n\t\t\topt_verbose=:\nfunc_append preserve_args \" $opt\"\nopt_silent=false\n\t\t\t;;\n      --tag)\n\t\t\ttest $# = 0 && func_missing_arg $opt && break\n\t\t\toptarg=\"$1\"\n\t\t\topt_tag=\"$optarg\"\nfunc_append preserve_args \" $opt $optarg\"\nfunc_enable_tag \"$optarg\"\n\t\t\tshift\n\t\t\t;;\n\n      -\\?|-h)\t\tfunc_usage\t\t\t\t;;\n      --help)\t\tfunc_help\t\t\t\t;;\n      --version)\tfunc_version\t\t\t\t;;\n\n      # Separate optargs to long options:\n      --*=*)\n\t\t\tfunc_split_long_opt \"$opt\"\n\t\t\tset dummy \"$func_split_long_opt_name\" \"$func_split_long_opt_arg\" ${1+\"$@\"}\n\t\t\tshift\n\t\t\t;;\n\n      # Separate non-argument short options:\n      -\\?*|-h*|-n*|-v*)\n\t\t\tfunc_split_short_opt \"$opt\"\n\t\t\tset dummy \"$func_split_short_opt_name\" \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n\t\t\tshift\n\t\t\t;;\n\n      --)\t\tbreak\t\t\t\t\t;;\n      -*)\t\tfunc_fatal_help \"unrecognized option \\`$opt'\" ;;\n      *)\t\tset dummy \"$opt\" ${1+\"$@\"};\tshift; break  ;;\n    esac\n  done\n\n  # Validate options:\n\n  # save first non-option argument\n  if test \"$#\" -gt 0; then\n    nonopt=\"$opt\"\n    shift\n  fi\n\n  # preserve --debug\n  test \"$opt_debug\" = : || func_append preserve_args \" --debug\"\n\n  case $host in\n    *cygwin* | *mingw* | *pw32* | *cegcc*)\n      # don't eliminate duplications in $postdeps and $predeps\n      opt_duplicate_compiler_generated_deps=:\n      ;;\n    *)\n      opt_duplicate_compiler_generated_deps=$opt_preserve_dup_deps\n      ;;\n  esac\n\n  $opt_help || {\n    # Sanity checks first:\n    func_check_version_match\n\n    if test \"$build_libtool_libs\" != yes && test \"$build_old_libs\" != yes; then\n      func_fatal_configuration \"not configured to build any kind of library\"\n    fi\n\n    # Darwin sucks\n    eval std_shrext=\\\"$shrext_cmds\\\"\n\n    # Only execute mode is allowed to have -dlopen flags.\n    if test -n \"$opt_dlopen\" && test \"$opt_mode\" != execute; then\n      func_error \"unrecognized option \\`-dlopen'\"\n      $ECHO \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    # Change the help message to a mode-specific one.\n    generic_help=\"$help\"\n    help=\"Try \\`$progname --help --mode=$opt_mode' for more information.\"\n  }\n\n\n  # Bail if the options were screwed\n  $exit_cmd $EXIT_FAILURE\n}\n\n\n\n\n## ----------- ##\n##    Main.    ##\n## ----------- ##\n\n# func_lalib_p file\n# True iff FILE is a libtool `.la' library or `.lo' object file.\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_lalib_p ()\n{\n    test -f \"$1\" &&\n      $SED -e 4q \"$1\" 2>/dev/null \\\n        | $GREP \"^# Generated by .*$PACKAGE\" > /dev/null 2>&1\n}\n\n# func_lalib_unsafe_p file\n# True iff FILE is a libtool `.la' library or `.lo' object file.\n# This function implements the same check as func_lalib_p without\n# resorting to external programs.  To this end, it redirects stdin and\n# closes it afterwards, without saving the original file descriptor.\n# As a safety measure, use it only where a negative result would be\n# fatal anyway.  Works if `file' does not exist.\nfunc_lalib_unsafe_p ()\n{\n    lalib_p=no\n    if test -f \"$1\" && test -r \"$1\" && exec 5<&0 <\"$1\"; then\n\tfor lalib_p_l in 1 2 3 4\n\tdo\n\t    read lalib_p_line\n\t    case \"$lalib_p_line\" in\n\t\t\\#\\ Generated\\ by\\ *$PACKAGE* ) lalib_p=yes; break;;\n\t    esac\n\tdone\n\texec 0<&5 5<&-\n    fi\n    test \"$lalib_p\" = yes\n}\n\n# func_ltwrapper_script_p file\n# True iff FILE is a libtool wrapper script\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_script_p ()\n{\n    func_lalib_p \"$1\"\n}\n\n# func_ltwrapper_executable_p file\n# True iff FILE is a libtool wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_executable_p ()\n{\n    func_ltwrapper_exec_suffix=\n    case $1 in\n    *.exe) ;;\n    *) func_ltwrapper_exec_suffix=.exe ;;\n    esac\n    $GREP \"$magic_exe\" \"$1$func_ltwrapper_exec_suffix\" >/dev/null 2>&1\n}\n\n# func_ltwrapper_scriptname file\n# Assumes file is an ltwrapper_executable\n# uses $file to determine the appropriate filename for a\n# temporary ltwrapper_script.\nfunc_ltwrapper_scriptname ()\n{\n    func_dirname_and_basename \"$1\" \"\" \".\"\n    func_stripname '' '.exe' \"$func_basename_result\"\n    func_ltwrapper_scriptname_result=\"$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper\"\n}\n\n# func_ltwrapper_p file\n# True iff FILE is a libtool wrapper script or wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_p ()\n{\n    func_ltwrapper_script_p \"$1\" || func_ltwrapper_executable_p \"$1\"\n}\n\n\n# func_execute_cmds commands fail_cmd\n# Execute tilde-delimited COMMANDS.\n# If FAIL_CMD is given, eval that upon failure.\n# FAIL_CMD may read-access the current command in variable CMD!\nfunc_execute_cmds ()\n{\n    $opt_debug\n    save_ifs=$IFS; IFS='~'\n    for cmd in $1; do\n      IFS=$save_ifs\n      eval cmd=\\\"$cmd\\\"\n      func_show_eval \"$cmd\" \"${2-:}\"\n    done\n    IFS=$save_ifs\n}\n\n\n# func_source file\n# Source FILE, adding directory component if necessary.\n# Note that it is not necessary on cygwin/mingw to append a dot to\n# FILE even if both FILE and FILE.exe exist: automatic-append-.exe\n# behavior happens only for exec(3), not for open(2)!  Also, sourcing\n# `FILE.' does not work on cygwin managed mounts.\nfunc_source ()\n{\n    $opt_debug\n    case $1 in\n    */* | *\\\\*)\t. \"$1\" ;;\n    *)\t\t. \"./$1\" ;;\n    esac\n}\n\n\n# func_resolve_sysroot PATH\n# Replace a leading = in PATH with a sysroot.  Store the result into\n# func_resolve_sysroot_result\nfunc_resolve_sysroot ()\n{\n  func_resolve_sysroot_result=$1\n  case $func_resolve_sysroot_result in\n  =*)\n    func_stripname '=' '' \"$func_resolve_sysroot_result\"\n    func_resolve_sysroot_result=$lt_sysroot$func_stripname_result\n    ;;\n  esac\n}\n\n# func_replace_sysroot PATH\n# If PATH begins with the sysroot, replace it with = and\n# store the result into func_replace_sysroot_result.\nfunc_replace_sysroot ()\n{\n  case \"$lt_sysroot:$1\" in\n  ?*:\"$lt_sysroot\"*)\n    func_stripname \"$lt_sysroot\" '' \"$1\"\n    func_replace_sysroot_result=\"=$func_stripname_result\"\n    ;;\n  *)\n    # Including no sysroot.\n    func_replace_sysroot_result=$1\n    ;;\n  esac\n}\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    $opt_debug\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n\tfunc_append_quoted CC_quoted \"$arg\"\n      done\n      CC_expanded=`func_echo_all $CC`\n      CC_quoted_expanded=`func_echo_all $CC_quoted`\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n      \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if $GREP \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t      # Double-quote args containing other shell metacharacters.\n\t      func_append_quoted CC_quoted \"$arg\"\n\t    done\n\t    CC_expanded=`func_echo_all $CC`\n\t    CC_quoted_expanded=`func_echo_all $CC_quoted`\n\t    case \"$@ \" in\n\t    \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n\t    \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  func_echo \"unable to infer tagged configuration\"\n\t  func_fatal_error \"specify a tag with \\`--tag'\"\n#\telse\n#\t  func_verbose \"using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n\n# func_write_libtool_object output_name pic_name nonpic_name\n# Create a libtool object file (analogous to a \".la\" file),\n# but don't create it if we're doing a dry run.\nfunc_write_libtool_object ()\n{\n    write_libobj=${1}\n    if test \"$build_libtool_libs\" = yes; then\n      write_lobj=\\'${2}\\'\n    else\n      write_lobj=none\n    fi\n\n    if test \"$build_old_libs\" = yes; then\n      write_oldobj=\\'${3}\\'\n    else\n      write_oldobj=none\n    fi\n\n    $opt_dry_run || {\n      cat >${write_libobj}T <<EOF\n# $write_libobj - a libtool object file\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=$write_lobj\n\n# Name of the non-PIC object\nnon_pic_object=$write_oldobj\n\nEOF\n      $MV \"${write_libobj}T\" \"${write_libobj}\"\n    }\n}\n\n\n##################################################\n# FILE NAME AND PATH CONVERSION HELPER FUNCTIONS #\n##################################################\n\n# func_convert_core_file_wine_to_w32 ARG\n# Helper function used by file name conversion functions when $build is *nix,\n# and $host is mingw, cygwin, or some other w32 environment. Relies on a\n# correctly configured wine environment available, with the winepath program\n# in $build's $PATH.\n#\n# ARG is the $build file name to be converted to w32 format.\n# Result is available in $func_convert_core_file_wine_to_w32_result, and will\n# be empty on error (or when ARG is empty)\nfunc_convert_core_file_wine_to_w32 ()\n{\n  $opt_debug\n  func_convert_core_file_wine_to_w32_result=\"$1\"\n  if test -n \"$1\"; then\n    # Unfortunately, winepath does not exit with a non-zero error code, so we\n    # are forced to check the contents of stdout. On the other hand, if the\n    # command is not found, the shell will set an exit code of 127 and print\n    # *an error message* to stdout. So we must check for both error code of\n    # zero AND non-empty stdout, which explains the odd construction:\n    func_convert_core_file_wine_to_w32_tmp=`winepath -w \"$1\" 2>/dev/null`\n    if test \"$?\" -eq 0 && test -n \"${func_convert_core_file_wine_to_w32_tmp}\"; then\n      func_convert_core_file_wine_to_w32_result=`$ECHO \"$func_convert_core_file_wine_to_w32_tmp\" |\n        $SED -e \"$lt_sed_naive_backslashify\"`\n    else\n      func_convert_core_file_wine_to_w32_result=\n    fi\n  fi\n}\n# end: func_convert_core_file_wine_to_w32\n\n\n# func_convert_core_path_wine_to_w32 ARG\n# Helper function used by path conversion functions when $build is *nix, and\n# $host is mingw, cygwin, or some other w32 environment. Relies on a correctly\n# configured wine environment available, with the winepath program in $build's\n# $PATH. Assumes ARG has no leading or trailing path separator characters.\n#\n# ARG is path to be converted from $build format to win32.\n# Result is available in $func_convert_core_path_wine_to_w32_result.\n# Unconvertible file (directory) names in ARG are skipped; if no directory names\n# are convertible, then the result may be empty.\nfunc_convert_core_path_wine_to_w32 ()\n{\n  $opt_debug\n  # unfortunately, winepath doesn't convert paths, only file names\n  func_convert_core_path_wine_to_w32_result=\"\"\n  if test -n \"$1\"; then\n    oldIFS=$IFS\n    IFS=:\n    for func_convert_core_path_wine_to_w32_f in $1; do\n      IFS=$oldIFS\n      func_convert_core_file_wine_to_w32 \"$func_convert_core_path_wine_to_w32_f\"\n      if test -n \"$func_convert_core_file_wine_to_w32_result\" ; then\n        if test -z \"$func_convert_core_path_wine_to_w32_result\"; then\n          func_convert_core_path_wine_to_w32_result=\"$func_convert_core_file_wine_to_w32_result\"\n        else\n          func_append func_convert_core_path_wine_to_w32_result \";$func_convert_core_file_wine_to_w32_result\"\n        fi\n      fi\n    done\n    IFS=$oldIFS\n  fi\n}\n# end: func_convert_core_path_wine_to_w32\n\n\n# func_cygpath ARGS...\n# Wrapper around calling the cygpath program via LT_CYGPATH. This is used when\n# when (1) $build is *nix and Cygwin is hosted via a wine environment; or (2)\n# $build is MSYS and $host is Cygwin, or (3) $build is Cygwin. In case (1) or\n# (2), returns the Cygwin file name or path in func_cygpath_result (input\n# file name or path is assumed to be in w32 format, as previously converted\n# from $build's *nix or MSYS format). In case (3), returns the w32 file name\n# or path in func_cygpath_result (input file name or path is assumed to be in\n# Cygwin format). Returns an empty string on error.\n#\n# ARGS are passed to cygpath, with the last one being the file name or path to\n# be converted.\n#\n# Specify the absolute *nix (or w32) name to cygpath in the LT_CYGPATH\n# environment variable; do not put it in $PATH.\nfunc_cygpath ()\n{\n  $opt_debug\n  if test -n \"$LT_CYGPATH\" && test -f \"$LT_CYGPATH\"; then\n    func_cygpath_result=`$LT_CYGPATH \"$@\" 2>/dev/null`\n    if test \"$?\" -ne 0; then\n      # on failure, ensure result is empty\n      func_cygpath_result=\n    fi\n  else\n    func_cygpath_result=\n    func_error \"LT_CYGPATH is empty or specifies non-existent file: \\`$LT_CYGPATH'\"\n  fi\n}\n#end: func_cygpath\n\n\n# func_convert_core_msys_to_w32 ARG\n# Convert file name or path ARG from MSYS format to w32 format.  Return\n# result in func_convert_core_msys_to_w32_result.\nfunc_convert_core_msys_to_w32 ()\n{\n  $opt_debug\n  # awkward: cmd appends spaces to result\n  func_convert_core_msys_to_w32_result=`( cmd //c echo \"$1\" ) 2>/dev/null |\n    $SED -e 's/[ ]*$//' -e \"$lt_sed_naive_backslashify\"`\n}\n#end: func_convert_core_msys_to_w32\n\n\n# func_convert_file_check ARG1 ARG2\n# Verify that ARG1 (a file name in $build format) was converted to $host\n# format in ARG2. Otherwise, emit an error message, but continue (resetting\n# func_to_host_file_result to ARG1).\nfunc_convert_file_check ()\n{\n  $opt_debug\n  if test -z \"$2\" && test -n \"$1\" ; then\n    func_error \"Could not determine host file name corresponding to\"\n    func_error \"  \\`$1'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback:\n    func_to_host_file_result=\"$1\"\n  fi\n}\n# end func_convert_file_check\n\n\n# func_convert_path_check FROM_PATHSEP TO_PATHSEP FROM_PATH TO_PATH\n# Verify that FROM_PATH (a path in $build format) was converted to $host\n# format in TO_PATH. Otherwise, emit an error message, but continue, resetting\n# func_to_host_file_result to a simplistic fallback value (see below).\nfunc_convert_path_check ()\n{\n  $opt_debug\n  if test -z \"$4\" && test -n \"$3\"; then\n    func_error \"Could not determine the host path corresponding to\"\n    func_error \"  \\`$3'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback.  This is a deliberately simplistic \"conversion\" and\n    # should not be \"improved\".  See libtool.info.\n    if test \"x$1\" != \"x$2\"; then\n      lt_replace_pathsep_chars=\"s|$1|$2|g\"\n      func_to_host_path_result=`echo \"$3\" |\n        $SED -e \"$lt_replace_pathsep_chars\"`\n    else\n      func_to_host_path_result=\"$3\"\n    fi\n  fi\n}\n# end func_convert_path_check\n\n\n# func_convert_path_front_back_pathsep FRONTPAT BACKPAT REPL ORIG\n# Modifies func_to_host_path_result by prepending REPL if ORIG matches FRONTPAT\n# and appending REPL if ORIG matches BACKPAT.\nfunc_convert_path_front_back_pathsep ()\n{\n  $opt_debug\n  case $4 in\n  $1 ) func_to_host_path_result=\"$3$func_to_host_path_result\"\n    ;;\n  esac\n  case $4 in\n  $2 ) func_append func_to_host_path_result \"$3\"\n    ;;\n  esac\n}\n# end func_convert_path_front_back_pathsep\n\n\n##################################################\n# $build to $host FILE NAME CONVERSION FUNCTIONS #\n##################################################\n# invoked via `$to_host_file_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# Result will be available in $func_to_host_file_result.\n\n\n# func_to_host_file ARG\n# Converts the file name ARG from $build format to $host format. Return result\n# in func_to_host_file_result.\nfunc_to_host_file ()\n{\n  $opt_debug\n  $to_host_file_cmd \"$1\"\n}\n# end func_to_host_file\n\n\n# func_to_tool_file ARG LAZY\n# converts the file name ARG from $build format to toolchain format. Return\n# result in func_to_tool_file_result.  If the conversion in use is listed\n# in (the comma separated) LAZY, no conversion takes place.\nfunc_to_tool_file ()\n{\n  $opt_debug\n  case ,$2, in\n    *,\"$to_tool_file_cmd\",*)\n      func_to_tool_file_result=$1\n      ;;\n    *)\n      $to_tool_file_cmd \"$1\"\n      func_to_tool_file_result=$func_to_host_file_result\n      ;;\n  esac\n}\n# end func_to_tool_file\n\n\n# func_convert_file_noop ARG\n# Copy ARG to func_to_host_file_result.\nfunc_convert_file_noop ()\n{\n  func_to_host_file_result=\"$1\"\n}\n# end func_convert_file_noop\n\n\n# func_convert_file_msys_to_w32 ARG\n# Convert file name ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_msys_to_w32 ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_to_host_file_result=\"$func_convert_core_msys_to_w32_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_w32\n\n\n# func_convert_file_cygwin_to_w32 ARG\n# Convert file name ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_cygwin_to_w32 ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    # because $build is cygwin, we call \"the\" cygpath in $PATH; no need to use\n    # LT_CYGPATH in this case.\n    func_to_host_file_result=`cygpath -m \"$1\"`\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_cygwin_to_w32\n\n\n# func_convert_file_nix_to_w32 ARG\n# Convert file name ARG from *nix to w32 format.  Requires a wine environment\n# and a working winepath. Returns result in func_to_host_file_result.\nfunc_convert_file_nix_to_w32 ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_to_host_file_result=\"$func_convert_core_file_wine_to_w32_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_w32\n\n\n# func_convert_file_msys_to_cygwin ARG\n# Convert file name ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_file_msys_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_file_result=\"$func_cygpath_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_cygwin\n\n\n# func_convert_file_nix_to_cygwin ARG\n# Convert file name ARG from *nix to Cygwin format.  Requires Cygwin installed\n# in a wine environment, working winepath, and LT_CYGPATH set.  Returns result\n# in func_to_host_file_result.\nfunc_convert_file_nix_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    # convert from *nix to w32, then use cygpath to convert from w32 to cygwin.\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_file_wine_to_w32_result\"\n    func_to_host_file_result=\"$func_cygpath_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_cygwin\n\n\n#############################################\n# $build to $host PATH CONVERSION FUNCTIONS #\n#############################################\n# invoked via `$to_host_path_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# The result will be available in $func_to_host_path_result.\n#\n# Path separators are also converted from $build format to $host format.  If\n# ARG begins or ends with a path separator character, it is preserved (but\n# converted to $host format) on output.\n#\n# All path conversion functions are named using the following convention:\n#   file name conversion function    : func_convert_file_X_to_Y ()\n#   path conversion function         : func_convert_path_X_to_Y ()\n# where, for any given $build/$host combination the 'X_to_Y' value is the\n# same.  If conversion functions are added for new $build/$host combinations,\n# the two new functions must follow this pattern, or func_init_to_host_path_cmd\n# will break.\n\n\n# func_init_to_host_path_cmd\n# Ensures that function \"pointer\" variable $to_host_path_cmd is set to the\n# appropriate value, based on the value of $to_host_file_cmd.\nto_host_path_cmd=\nfunc_init_to_host_path_cmd ()\n{\n  $opt_debug\n  if test -z \"$to_host_path_cmd\"; then\n    func_stripname 'func_convert_file_' '' \"$to_host_file_cmd\"\n    to_host_path_cmd=\"func_convert_path_${func_stripname_result}\"\n  fi\n}\n\n\n# func_to_host_path ARG\n# Converts the path ARG from $build format to $host format. Return result\n# in func_to_host_path_result.\nfunc_to_host_path ()\n{\n  $opt_debug\n  func_init_to_host_path_cmd\n  $to_host_path_cmd \"$1\"\n}\n# end func_to_host_path\n\n\n# func_convert_path_noop ARG\n# Copy ARG to func_to_host_path_result.\nfunc_convert_path_noop ()\n{\n  func_to_host_path_result=\"$1\"\n}\n# end func_convert_path_noop\n\n\n# func_convert_path_msys_to_w32 ARG\n# Convert path ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_path_result.\nfunc_convert_path_msys_to_w32 ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from ARG.  MSYS\n    # behavior is inconsistent here; cygpath turns them into '.;' and ';.';\n    # and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=\"$func_convert_core_msys_to_w32_result\"\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_w32\n\n\n# func_convert_path_cygwin_to_w32 ARG\n# Convert path ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_cygwin_to_w32 ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_to_host_path_result=`cygpath -m -p \"$func_to_host_path_tmp1\"`\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_cygwin_to_w32\n\n\n# func_convert_path_nix_to_w32 ARG\n# Convert path ARG from *nix to w32 format.  Requires a wine environment and\n# a working winepath.  Returns result in func_to_host_file_result.\nfunc_convert_path_nix_to_w32 ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=\"$func_convert_core_path_wine_to_w32_result\"\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_w32\n\n\n# func_convert_path_msys_to_cygwin ARG\n# Convert path ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_path_msys_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_path_result=\"$func_cygpath_result\"\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_cygwin\n\n\n# func_convert_path_nix_to_cygwin ARG\n# Convert path ARG from *nix to Cygwin format.  Requires Cygwin installed in a\n# a wine environment, working winepath, and LT_CYGPATH set.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_nix_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from\n    # ARG. msys behavior is inconsistent here, cygpath turns them\n    # into '.;' and ';.', and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_path_wine_to_w32_result\"\n    func_to_host_path_result=\"$func_cygpath_result\"\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_cygwin\n\n\n# func_mode_compile arg...\nfunc_mode_compile ()\n{\n    $opt_debug\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=\"$nonopt\"  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n    pie_flag=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=\"$arg\"\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=\"$arg\"\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  test -n \"$libobj\" && \\\n\t    func_fatal_error \"you cannot specify \\`-o' more than once\"\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-pie | -fpie | -fPIE)\n          func_append pie_flag \" $arg\"\n\t  continue\n\t  ;;\n\n\t-shared | -static | -prefer-pic | -prefer-non-pic)\n\t  func_append later \" $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  func_stripname '-Wc,' '' \"$arg\"\n\t  args=$func_stripname_result\n\t  lastarg=\n\t  save_ifs=\"$IFS\"; IFS=','\n\t  for arg in $args; do\n\t    IFS=\"$save_ifs\"\n\t    func_append_quoted lastarg \"$arg\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\t  func_stripname ' ' '' \"$lastarg\"\n\t  lastarg=$func_stripname_result\n\n\t  # Add the arguments to base_compile.\n\t  func_append base_compile \" $lastarg\"\n\t  continue\n\t  ;;\n\n\t*)\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=\"$srcfile\"\n\t  srcfile=\"$arg\"\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      func_append_quoted base_compile \"$lastarg\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      func_fatal_error \"you must specify an argument for -Xcompile\"\n      ;;\n    target)\n      func_fatal_error \"you must specify a target with \\`-o'\"\n      ;;\n    *)\n      # Get the name of the library object.\n      test -z \"$libobj\" && {\n\tfunc_basename \"$srcfile\"\n\tlibobj=\"$func_basename_result\"\n      }\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    case $libobj in\n    *.[cCFSifmso] | \\\n    *.ada | *.adb | *.ads | *.asm | \\\n    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \\\n    *.[fF][09]? | *.for | *.java | *.go | *.obj | *.sx | *.cu | *.cup)\n      func_xform \"$libobj\"\n      libobj=$func_xform_result\n      ;;\n    esac\n\n    case $libobj in\n    *.lo) func_lo2o \"$libobj\"; obj=$func_lo2o_result ;;\n    *)\n      func_fatal_error \"cannot determine name of library object from \\`$libobj'\"\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -shared)\n\ttest \"$build_libtool_libs\" != yes && \\\n\t  func_fatal_configuration \"can not build a shared library\"\n\tbuild_old_libs=no\n\tcontinue\n\t;;\n\n      -static)\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    func_quote_for_eval \"$libobj\"\n    test \"X$libobj\" != \"X$func_quote_for_eval_result\" \\\n      && $ECHO \"X$libobj\" | $GREP '[]~#^*{};<>?\"'\"'\"'\t &()|`$[]' \\\n      && func_warning \"libobj name \\`$libobj' may not contain shell special characters.\"\n    func_dirname_and_basename \"$obj\" \"/\" \"\"\n    objname=\"$func_basename_result\"\n    xdir=\"$func_dirname_result\"\n    lobj=${xdir}$objdir/$objname\n\n    test -z \"$base_compile\" && \\\n      func_fatal_help \"you must specify a compilation command\"\n\n    # Delete any leftover library objects.\n    if test \"$build_old_libs\" = yes; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2* | cegcc*)\n      pic_mode=default\n      ;;\n    esac\n    if test \"$pic_mode\" = no && test \"$deplibs_check_method\" != pass_all; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test \"$compiler_c_o\" = no; then\n      output_obj=`$ECHO \"$srcfile\" | $SED 's%^.*/%%; s%\\.[^.]*$%%'`.${objext}\n      lockfile=\"$output_obj.lock\"\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test \"$need_locks\" = yes; then\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test \"$need_locks\" = warn; then\n      if test -f \"$lockfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n      func_append removelist \" $output_obj\"\n      $ECHO \"$srcfile\" > \"$lockfile\"\n    fi\n\n    $opt_dry_run || $RM $removelist\n    func_append removelist \" $lockfile\"\n    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15\n\n    func_to_tool_file \"$srcfile\" func_convert_file_msys_to_w32\n    srcfile=$func_to_tool_file_result\n    func_quote_for_eval \"$srcfile\"\n    qsrcfile=$func_quote_for_eval_result\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test \"$build_libtool_libs\" = yes; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test \"$pic_mode\" != no; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      func_mkdir_p \"$xdir$objdir\"\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tfunc_append command \" -o $lobj\"\n      fi\n\n      func_show_eval_locale \"$command\"\t\\\n          'test -n \"$output_obj\" && $RM $removelist; exit $EXIT_FAILURE'\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$lobj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n\n      # Allow error messages only from the first compilation.\n      if test \"$suppress_opt\" = yes; then\n\tsuppress_output=' >/dev/null 2>&1'\n      fi\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test \"$build_old_libs\" = yes; then\n      if test \"$pic_mode\" != yes; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile$pie_flag\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test \"$compiler_c_o\" = yes; then\n\tfunc_append command \" -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      func_append command \"$suppress_output\"\n      func_show_eval_locale \"$command\" \\\n        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$obj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n    fi\n\n    $opt_dry_run || {\n      func_write_libtool_object \"$libobj\" \"$objdir/$objname\" \"$objname\"\n\n      # Unlock the critical section if it was locked\n      if test \"$need_locks\" != no; then\n\tremovelist=$lockfile\n        $RM \"$lockfile\"\n      fi\n    }\n\n    exit $EXIT_SUCCESS\n}\n\n$opt_help || {\n  test \"$opt_mode\" = compile && func_mode_compile ${1+\"$@\"}\n}\n\nfunc_mode_help ()\n{\n    # We need to display help for each of the modes.\n    case $opt_mode in\n      \"\")\n        # Generic help is extracted from the usage comments\n        # at the start of this file.\n        func_help\n        ;;\n\n      clean)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      compile)\n      $ECHO \\\n\"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -no-suppress      do not suppress compiler output for multiple passes\n  -prefer-pic       try to build PIC objects only\n  -prefer-non-pic   try to build non-PIC objects only\n  -shared           do not build a \\`.o' file suitable for static linking\n  -static           only build a \\`.o' file suitable for static linking\n  -Wc,FLAG          pass FLAG directly to the compiler\n\nCOMPILE-COMMAND is a command to be used in creating a \\`standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix \\`.c' with the\nlibrary object suffix, \\`.lo'.\"\n        ;;\n\n      execute)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to \\`-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n        ;;\n\n      finish)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe \\`--dry-run' option if you just want to see what would be executed.\"\n        ;;\n\n      install)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the \\`install' or \\`cp' program.\n\nThe following components of INSTALL-COMMAND are treated specially:\n\n  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n        ;;\n\n      link)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -bindir BINDIR    specify path to binaries directory (for systems where\n                    libraries must be found in the PATH setting at runtime)\n  -dlopen FILE      \\`-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n                    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n                    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  Use a list of object files found in FILE to specify objects\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -shared           only do dynamic linking of libtool libraries\n  -shrext SUFFIX    override the standard shared library file extension\n  -static           do not do any dynamic linking of uninstalled libtool libraries\n  -static-libtool-libs\n                    do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n                    specify library version info [each variable defaults to 0]\n  -weak LIBNAME     declare that the target provides the LIBNAME interface\n  -Wc,FLAG\n  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler\n  -Wl,FLAG\n  -Xlinker FLAG     pass linker-specific FLAG directly to the linker\n  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)\n\nAll other options (arguments beginning with \\`-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in \\`.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in \\`.la', then a libtool library is created,\nonly library objects (\\`.lo' files) may be specified, and \\`-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in \\`.a' or \\`.lib', then a standard library is created\nusing \\`ar' and \\`ranlib', or on Windows using \\`lib'.\n\nIf OUTPUT-FILE ends in \\`.lo' or \\`.${objext}', then a reloadable object file\nis created, otherwise an executable program is created.\"\n        ;;\n\n      uninstall)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      *)\n        func_fatal_help \"invalid operation mode \\`$opt_mode'\"\n        ;;\n    esac\n\n    echo\n    $ECHO \"Try \\`$progname --help' for more information about other modes.\"\n}\n\n# Now that we've collected a possible --mode arg, show help if necessary\nif $opt_help; then\n  if test \"$opt_help\" = :; then\n    func_mode_help\n  else\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\tfunc_mode_help\n      done\n    } | sed -n '1p; 2,$s/^Usage:/  or: /p'\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\techo\n\tfunc_mode_help\n      done\n    } |\n    sed '1d\n      /^When reporting/,/^Report/{\n\tH\n\td\n      }\n      $x\n      /information about other modes/d\n      /more detailed .*MODE/d\n      s/^Usage:.*--mode=\\([^ ]*\\) .*/Description of \\1 mode:/'\n  fi\n  exit $?\nfi\n\n\n# func_mode_execute arg...\nfunc_mode_execute ()\n{\n    $opt_debug\n    # The first argument is the command name.\n    cmd=\"$nonopt\"\n    test -z \"$cmd\" && \\\n      func_fatal_help \"you must specify a COMMAND\"\n\n    # Handle -dlopen flags immediately.\n    for file in $opt_dlopen; do\n      test -f \"$file\" \\\n\t|| func_fatal_help \"\\`$file' is not a file\"\n\n      dir=\n      case $file in\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"\\`$lib' is not a valid libtool archive\"\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\tfunc_source \"$file\"\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && \\\n\t    func_warning \"\\`$file' was not linked with \\`-export-dynamic'\"\n\t  continue\n\tfi\n\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=\"$func_dirname_result\"\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  func_append dir \"/$objdir\"\n\telse\n\t  if test ! -f \"$dir/$dlname\"; then\n\t    func_fatal_error \"cannot find \\`$dlname' in \\`$dir' or \\`$dir/$objdir'\"\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=\"$func_dirname_result\"\n\t;;\n\n      *)\n\tfunc_warning \"\\`-dlopen' is ignored for non-libtool libraries and objects\"\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=\"$absdir\"\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=\"$magic\"\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -* | *.la | *.lo ) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif func_ltwrapper_script_p \"$file\"; then\n\t  func_source \"$file\"\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\telif func_ltwrapper_executable_p \"$file\"; then\n\t  func_ltwrapper_scriptname \"$file\"\n\t  func_source \"$func_ltwrapper_scriptname_result\"\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      func_append_quoted args \"$file\"\n    done\n\n    if test \"X$opt_dry_run\" = Xfalse; then\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\n      do\n\teval \"if test \\\"\\${save_$lt_var+set}\\\" = set; then\n                $lt_var=\\$save_$lt_var; export $lt_var\n\t      else\n\t\t$lt_unset $lt_var\n\t      fi\"\n      done\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\"\\$cmd$args\"\n    else\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$ECHO \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\techo \"export $shlibpath_var\"\n      fi\n      $ECHO \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest \"$opt_mode\" = execute && func_mode_execute ${1+\"$@\"}\n\n\n# func_mode_finish arg...\nfunc_mode_finish ()\n{\n    $opt_debug\n    libs=\n    libdirs=\n    admincmds=\n\n    for opt in \"$nonopt\" ${1+\"$@\"}\n    do\n      if test -d \"$opt\"; then\n\tfunc_append libdirs \" $opt\"\n\n      elif test -f \"$opt\"; then\n\tif func_lalib_unsafe_p \"$opt\"; then\n\t  func_append libs \" $opt\"\n\telse\n\t  func_warning \"\\`$opt' is not a valid libtool archive\"\n\tfi\n\n      else\n\tfunc_fatal_error \"invalid argument \\`$opt'\"\n      fi\n    done\n\n    if test -n \"$libs\"; then\n      if test -n \"$lt_sysroot\"; then\n        sysroot_regex=`$ECHO \"$lt_sysroot\" | $SED \"$sed_make_literal_regex\"`\n        sysroot_cmd=\"s/\\([ ']\\)$sysroot_regex/\\1/g;\"\n      else\n        sysroot_cmd=\n      fi\n\n      # Remove sysroot references\n      if $opt_dry_run; then\n        for lib in $libs; do\n          echo \"removing references to $lt_sysroot and \\`=' prefixes from $lib\"\n        done\n      else\n        tmpdir=`func_mktempdir`\n        for lib in $libs; do\n\t  sed -e \"${sysroot_cmd} s/\\([ ']-[LR]\\)=/\\1/g; s/\\([ ']\\)=/\\1/g\" $lib \\\n\t    > $tmpdir/tmp-la\n\t  mv -f $tmpdir/tmp-la $lib\n\tdone\n        ${RM}r \"$tmpdir\"\n      fi\n    fi\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  func_execute_cmds \"$finish_cmds\" 'admincmds=\"$admincmds\n'\"$cmd\"'\"'\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $opt_dry_run || eval \"$cmds\" || func_append admincmds \"\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    $opt_silent && exit $EXIT_SUCCESS\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      echo \"----------------------------------------------------------------------\"\n      echo \"Libraries have been installed in:\"\n      for libdir in $libdirs; do\n\t$ECHO \"   $libdir\"\n      done\n      echo\n      echo \"If you ever happen to want to link against installed libraries\"\n      echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n      echo \"specify the full pathname of the library, or use the \\`-LLIBDIR'\"\n      echo \"flag during linking and do at least one of the following:\"\n      if test -n \"$shlibpath_var\"; then\n\techo \"   - add LIBDIR to the \\`$shlibpath_var' environment variable\"\n\techo \"     during execution\"\n      fi\n      if test -n \"$runpath_var\"; then\n\techo \"   - add LIBDIR to the \\`$runpath_var' environment variable\"\n\techo \"     during linking\"\n      fi\n      if test -n \"$hardcode_libdir_flag_spec\"; then\n\tlibdir=LIBDIR\n\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n\t$ECHO \"   - use the \\`$flag' linker flag\"\n      fi\n      if test -n \"$admincmds\"; then\n\t$ECHO \"   - have your system administrator run these commands:$admincmds\"\n      fi\n      if test -f /etc/ld.so.conf; then\n\techo \"   - have your system administrator add LIBDIR to \\`/etc/ld.so.conf'\"\n      fi\n      echo\n\n      echo \"See any operating system documentation about shared libraries for\"\n      case $host in\n\tsolaris2.[6789]|solaris2.1[0-9])\n\t  echo \"more information, such as the ld(1), crle(1) and ld.so(8) manual\"\n\t  echo \"pages.\"\n\t  ;;\n\t*)\n\t  echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n\t  ;;\n      esac\n      echo \"----------------------------------------------------------------------\"\n    fi\n    exit $EXIT_SUCCESS\n}\n\ntest \"$opt_mode\" = finish && func_mode_finish ${1+\"$@\"}\n\n\n# func_mode_install arg...\nfunc_mode_install ()\n{\n    $opt_debug\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$nonopt\" = \"$SHELL\" || test \"$nonopt\" = /bin/sh ||\n       # Allow the use of GNU shtool's install command.\n       case $nonopt in *shtool*) :;; *) false;; esac; then\n      # Aesthetically quote it.\n      func_quote_for_eval \"$nonopt\"\n      install_prog=\"$func_quote_for_eval_result \"\n      arg=$1\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    func_quote_for_eval \"$arg\"\n    func_append install_prog \"$func_quote_for_eval_result\"\n    install_shared_prog=$install_prog\n    case \" $install_prog \" in\n      *[\\\\\\ /]cp\\ *) install_cp=: ;;\n      *) install_cp=false ;;\n    esac\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=no\n    stripme=\n    no_mode=:\n    for arg\n    do\n      arg2=\n      if test -n \"$dest\"; then\n\tfunc_append files \" $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=yes ;;\n      -f)\n\tif $install_cp; then :; else\n\t  prev=$arg\n\tfi\n\t;;\n      -g | -m | -o)\n\tprev=$arg\n\t;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  if test \"x$prev\" = x-m && test -n \"$install_override_mode\"; then\n\t    arg2=$install_override_mode\n\t    no_mode=false\n\t  fi\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      func_quote_for_eval \"$arg\"\n      func_append install_prog \" $func_quote_for_eval_result\"\n      if test -n \"$arg2\"; then\n\tfunc_quote_for_eval \"$arg2\"\n      fi\n      func_append install_shared_prog \" $func_quote_for_eval_result\"\n    done\n\n    test -z \"$install_prog\" && \\\n      func_fatal_help \"you must specify an install program\"\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the \\`$prev' option requires an argument\"\n\n    if test -n \"$install_override_mode\" && $no_mode; then\n      if $install_cp; then :; else\n\tfunc_quote_for_eval \"$install_override_mode\"\n\tfunc_append install_shared_prog \" -m $func_quote_for_eval_result\"\n      fi\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\tfunc_fatal_help \"no file or destination specified\"\n      else\n\tfunc_fatal_help \"you must specify a destination\"\n      fi\n    fi\n\n    # Strip any trailing slash from the destination.\n    func_stripname '' '/' \"$dest\"\n    dest=$func_stripname_result\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=yes\n    if test \"$isdir\" = yes; then\n      destdir=\"$dest\"\n      destname=\n    else\n      func_dirname_and_basename \"$dest\" \"\" \".\"\n      destdir=\"$func_dirname_result\"\n      destname=\"$func_basename_result\"\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files; shift\n      test \"$#\" -gt 1 && \\\n\tfunc_fatal_help \"\\`$dest' is not a directory\"\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  func_fatal_help \"\\`$destdir' must be an absolute directory name\"\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tfunc_append staticlibs \" $file\"\n\t;;\n\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"\\`$file' is not a valid libtool archive\"\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\tfunc_source \"$file\"\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append current_libdirs \" $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append future_libdirs \" $libdir\" ;;\n\t  esac\n\tfi\n\n\tfunc_dirname \"$file\" \"/\" \"\"\n\tdir=\"$func_dirname_result\"\n\tfunc_append dir \"$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$ECHO \"$destdir\" | $SED -e \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  test \"$inst_prefix_dir\" = \"$destdir\" && \\\n\t    func_fatal_error \"error: cannot install \\`$file' to a directory not ending in $libdir\"\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  func_warning \"relinking \\`$file'\"\n\t  func_show_eval \"$relink_command\" \\\n\t    'func_fatal_error \"error: relink \\`$file'\\'' with the above command before installing it\"'\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names; shift\n\tif test -n \"$1\"; then\n\t  realname=\"$1\"\n\t  shift\n\n\t  srcname=\"$realname\"\n\t  test -n \"$relink_command\" && srcname=\"$realname\"T\n\n\t  # Install the shared library and build the symlinks.\n\t  func_show_eval \"$install_shared_prog $dir/$srcname $destdir/$realname\" \\\n\t      'exit $?'\n\t  tstripme=\"$stripme\"\n\t  case $host_os in\n\t  cygwin* | mingw* | pw32* | cegcc*)\n\t    case $realname in\n\t    *.dll.a)\n\t      tstripme=\"\"\n\t      ;;\n\t    esac\n\t    ;;\n\t  esac\n\t  if test -n \"$tstripme\" && test -n \"$striplib\"; then\n\t    func_show_eval \"$striplib $destdir/$realname\" 'exit $?'\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try `ln -sf' first, because the `ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      test \"$linkname\" != \"$realname\" \\\n\t\t&& func_show_eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })\"\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=\"$destdir/$realname\"\n\t  func_execute_cmds \"$postinstall_cmds\" 'exit $?'\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tfunc_basename \"$file\"\n\tname=\"$func_basename_result\"\n\tinstname=\"$dir/$name\"i\n\tfunc_show_eval \"$install_prog $instname $destdir/$name\" 'exit $?'\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && func_append staticlibs \" $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  func_basename \"$file\"\n\t  destfile=\"$func_basename_result\"\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  func_lo2o \"$destfile\"\n\t  staticdest=$func_lo2o_result\n\t  ;;\n\t*.$objext)\n\t  staticdest=\"$destfile\"\n\t  destfile=\n\t  ;;\n\t*)\n\t  func_fatal_help \"cannot copy a libtool object to \\`$destfile'\"\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\ttest -n \"$destfile\" && \\\n\t  func_show_eval \"$install_prog $file $destfile\" 'exit $?'\n\n\t# Install the old object if enabled.\n\tif test \"$build_old_libs\" = yes; then\n\t  # Deduce the name of the old-style object file.\n\t  func_lo2o \"$file\"\n\t  staticobj=$func_lo2o_result\n\t  func_show_eval \"$install_prog \\$staticobj \\$staticdest\" 'exit $?'\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  func_basename \"$file\"\n\t  destfile=\"$func_basename_result\"\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\"\"\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      func_stripname '' '.exe' \"$file\"\n\t      file=$func_stripname_result\n\t      stripped_ext=\".exe\"\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin* | *mingw*)\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      wrapper=$func_ltwrapper_scriptname_result\n\t    else\n\t      func_stripname '' '.exe' \"$file\"\n\t      wrapper=$func_stripname_result\n\t    fi\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif func_ltwrapper_script_p \"$wrapper\"; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  func_source \"$wrapper\"\n\n\t  # Check the variables that should have been set.\n\t  test -z \"$generated_by_libtool_version\" && \\\n\t    func_fatal_error \"invalid libtool wrapper script \\`$wrapper'\"\n\n\t  finalize=yes\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      func_source \"$lib\"\n\t    fi\n\t    libfile=\"$libdir/\"`$ECHO \"$lib\" | $SED 's%^.*/%%g'` ### testsuite: skip nested quoting test\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      func_warning \"\\`$lib' has not been installed in \\`$libdir'\"\n\t      finalize=no\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  func_source \"$wrapper\"\n\n\t  outputname=\n\t  if test \"$fast_install\" = no && test -n \"$relink_command\"; then\n\t    $opt_dry_run || {\n\t      if test \"$finalize\" = yes; then\n\t        tmpdir=`func_mktempdir`\n\t\tfunc_basename \"$file$stripped_ext\"\n\t\tfile=\"$func_basename_result\"\n\t        outputname=\"$tmpdir/$file\"\n\t        # Replace the output file specification.\n\t        relink_command=`$ECHO \"$relink_command\" | $SED 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t        $opt_silent || {\n\t          func_quote_for_expand \"$relink_command\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t        }\n\t        if eval \"$relink_command\"; then :\n\t          else\n\t\t  func_error \"error: relink \\`$file' with the above command before installing it\"\n\t\t  $opt_dry_run || ${RM}r \"$tmpdir\"\n\t\t  continue\n\t        fi\n\t        file=\"$outputname\"\n\t      else\n\t        func_warning \"cannot relink \\`$file'\"\n\t      fi\n\t    }\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$ECHO \"$file$stripped_ext\" | $SED \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    func_stripname '' '.exe' \"$destfile\"\n\t    destfile=$func_stripname_result\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tfunc_show_eval \"$install_prog\\$stripme \\$file \\$destfile\" 'exit $?'\n\t$opt_dry_run || if test -n \"$outputname\"; then\n\t  ${RM}r \"$tmpdir\"\n\tfi\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      func_basename \"$file\"\n      name=\"$func_basename_result\"\n\n      # Set up the ranlib parameters.\n      oldlib=\"$destdir/$name\"\n      func_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n      tool_oldlib=$func_to_tool_file_result\n\n      func_show_eval \"$install_prog \\$file \\$oldlib\" 'exit $?'\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\tfunc_show_eval \"$old_striplib $tool_oldlib\" 'exit $?'\n      fi\n\n      # Do each command in the postinstall commands.\n      func_execute_cmds \"$old_postinstall_cmds\" 'exit $?'\n    done\n\n    test -n \"$future_libdirs\" && \\\n      func_warning \"remember to run \\`$progname --finish$future_libdirs'\"\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      $opt_dry_run && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest \"$opt_mode\" = install && func_mode_install ${1+\"$@\"}\n\n\n# func_generate_dlsyms outputname originator pic_p\n# Extract symbols from dlprefiles and create ${outputname}S.o with\n# a dlpreopen symbol table.\nfunc_generate_dlsyms ()\n{\n    $opt_debug\n    my_outputname=\"$1\"\n    my_originator=\"$2\"\n    my_pic_p=\"${3-no}\"\n    my_prefix=`$ECHO \"$my_originator\" | sed 's%[^a-zA-Z0-9]%_%g'`\n    my_dlsyms=\n\n    if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n      if test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\tmy_dlsyms=\"${my_outputname}S.c\"\n      else\n\tfunc_error \"not configured to extract global symbols from dlpreopened files\"\n      fi\n    fi\n\n    if test -n \"$my_dlsyms\"; then\n      case $my_dlsyms in\n      \"\") ;;\n      *.c)\n\t# Discover the nlist of each of the dlfiles.\n\tnlist=\"$output_objdir/${my_outputname}.nm\"\n\n\tfunc_show_eval \"$RM $nlist ${nlist}S ${nlist}T\"\n\n\t# Parse the name list into a source file.\n\tfunc_verbose \"creating $output_objdir/$my_dlsyms\"\n\n\t$opt_dry_run || $ECHO > \"$output_objdir/$my_dlsyms\" \"\\\n/* $my_dlsyms - symbol resolution table for \\`$my_outputname' dlsym emulation. */\n/* Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n#if defined(__GNUC__) && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))\n#pragma GCC diagnostic ignored \\\"-Wstrict-prototypes\\\"\n#endif\n\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined(_WIN32) || defined(__CYGWIN__) || defined(_WIN32_WCE)\n/* DATA imports from DLLs on WIN32 con't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined(__osf__)\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\tif test \"$dlself\" = yes; then\n\t  func_verbose \"generating symbol list for \\`$output'\"\n\n\t  $opt_dry_run || echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t  # Add our own program objects to the symbol list.\n\t  progfiles=`$ECHO \"$objs$old_deplibs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\t  for progfile in $progfiles; do\n\t    func_to_tool_file \"$progfile\" func_convert_file_msys_to_w32\n\t    func_verbose \"extracting global C symbols from \\`$func_to_tool_file_result'\"\n\t    $opt_dry_run || eval \"$NM $func_to_tool_file_result | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  if test -n \"$export_symbols_regex\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  # Prepare the list of exported symbols\n\t  if test -z \"$export_symbols\"; then\n\t    export_symbols=\"$output_objdir/$outputname.exp\"\n\t    $opt_dry_run || {\n\t      $RM $export_symbols\n\t      eval \"${SED} -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n\t      case $host in\n\t      *cygwin* | *mingw* | *cegcc* )\n                eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n                eval 'cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"'\n\t        ;;\n\t      esac\n\t    }\n\t  else\n\t    $opt_dry_run || {\n\t      eval \"${SED} -e 's/\\([].[*^$]\\)/\\\\\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"'\n\t      eval '$GREP -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t      case $host in\n\t        *cygwin* | *mingw* | *cegcc* )\n\t          eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t          eval 'cat \"$nlist\" >> \"$output_objdir/$outputname.def\"'\n\t          ;;\n\t      esac\n\t    }\n\t  fi\n\tfi\n\n\tfor dlprefile in $dlprefiles; do\n\t  func_verbose \"extracting global C symbols from \\`$dlprefile'\"\n\t  func_basename \"$dlprefile\"\n\t  name=\"$func_basename_result\"\n          case $host in\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # if an import library, we need to obtain dlname\n\t      if func_win32_import_lib_p \"$dlprefile\"; then\n\t        func_tr_sh \"$dlprefile\"\n\t        eval \"curr_lafile=\\$libfile_$func_tr_sh_result\"\n\t        dlprefile_dlbasename=\"\"\n\t        if test -n \"$curr_lafile\" && func_lalib_p \"$curr_lafile\"; then\n\t          # Use subshell, to avoid clobbering current variable values\n\t          dlprefile_dlname=`source \"$curr_lafile\" && echo \"$dlname\"`\n\t          if test -n \"$dlprefile_dlname\" ; then\n\t            func_basename \"$dlprefile_dlname\"\n\t            dlprefile_dlbasename=\"$func_basename_result\"\n\t          else\n\t            # no lafile. user explicitly requested -dlpreopen <import library>.\n\t            $sharedlib_from_linklib_cmd \"$dlprefile\"\n\t            dlprefile_dlbasename=$sharedlib_from_linklib_result\n\t          fi\n\t        fi\n\t        $opt_dry_run || {\n\t          if test -n \"$dlprefile_dlbasename\" ; then\n\t            eval '$ECHO \": $dlprefile_dlbasename\" >> \"$nlist\"'\n\t          else\n\t            func_warning \"Could not compute DLL name from $name\"\n\t            eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          fi\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe |\n\t            $SED -e '/I __imp/d' -e 's/I __nm_/D /;s/_nm__//' >> '$nlist'\"\n\t        }\n\t      else # not an import lib\n\t        $opt_dry_run || {\n\t          eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t        }\n\t      fi\n\t    ;;\n\t    *)\n\t      $opt_dry_run || {\n\t        eval '$ECHO \": $name \" >> \"$nlist\"'\n\t        func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t        eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t      }\n\t    ;;\n          esac\n\tdone\n\n\t$opt_dry_run || {\n\t  # Make sure we have at least an empty file.\n\t  test -f \"$nlist\" || : > \"$nlist\"\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t    $MV \"$nlist\"T \"$nlist\"\n\t  fi\n\n\t  # Try sorting and uniquifying the output.\n\t  if $GREP -v \"^: \" < \"$nlist\" |\n\t      if sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\tsort -k 3\n\t      else\n\t\tsort +2\n\t      fi |\n\t      uniq > \"$nlist\"S; then\n\t    :\n\t  else\n\t    $GREP -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t  fi\n\n\t  if test -f \"$nlist\"S; then\n\t    eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$my_dlsyms\"'\n\t  else\n\t    echo '/* NONE */' >> \"$output_objdir/$my_dlsyms\"\n\t  fi\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n\n/* The mapping between symbol names and symbols.  */\ntypedef struct {\n  const char *name;\n  void *address;\n} lt_dlsymlist;\nextern LT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[];\nLT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[] =\n{\\\n  { \\\"$my_originator\\\", (void *) 0 },\"\n\n\t  case $need_lib_prefix in\n\t  no)\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  *)\n\t    eval \"$global_symbol_to_c_name_address_lib_prefix\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  esac\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_${my_prefix}_LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t} # !$opt_dry_run\n\n\tpic_flag_for_symtable=\n\tcase \"$compile_command \" in\n\t*\" -static \"*) ;;\n\t*)\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2.*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\" ;;\n\t  *-*-hpux*)\n\t    pic_flag_for_symtable=\" $pic_flag\"  ;;\n\t  *)\n\t    if test \"X$my_pic_p\" != Xno; then\n\t      pic_flag_for_symtable=\" $pic_flag\"\n\t    fi\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tsymtab_cflags=\n\tfor arg in $LTCFLAGS; do\n\t  case $arg in\n\t  -pie | -fpie | -fPIE) ;;\n\t  *) func_append symtab_cflags \" $arg\" ;;\n\t  esac\n\tdone\n\n\t# Now compile the dynamic symbol file.\n\tfunc_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable \"$my_dlsyms\")' 'exit $?'\n\n\t# Clean up the generated files.\n\tfunc_show_eval '$RM \"$output_objdir/$my_dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\"'\n\n\t# Transform the symbol file into the correct name.\n\tsymfileobj=\"$output_objdir/${my_outputname}S.$objext\"\n\tcase $host in\n\t*cygwin* | *mingw* | *cegcc* )\n\t  if test -f \"$output_objdir/$my_outputname.def\"; then\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t  else\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  fi\n\t  ;;\n\t*)\n\t  compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  ;;\n\tesac\n\t;;\n      *)\n\tfunc_fatal_error \"unknown suffix for \\`$my_dlsyms'\"\n\t;;\n      esac\n    else\n      # We keep going just in case the user didn't refer to\n      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n      # really was required.\n\n      # Nullify the symbol file.\n      compile_command=`$ECHO \"$compile_command\" | $SED \"s% @SYMFILE@%%\"`\n      finalize_command=`$ECHO \"$finalize_command\" | $SED \"s% @SYMFILE@%%\"`\n    fi\n}\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\n# Despite the name, also deal with 64 bit binaries.\nfunc_win32_libid ()\n{\n  $opt_debug\n  win32_libid_type=\"unknown\"\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    # Keep the egrep pattern in sync with the one in _LT_CHECK_MAGIC_METHOD.\n    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |\n       $EGREP 'file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then\n      func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n      win32_nmres=`eval $NM -f posix -A \\\"$func_to_tool_file_result\\\" |\n\t$SED -n -e '\n\t    1,100{\n\t\t/ I /{\n\t\t    s,.*,import,\n\t\t    p\n\t\t    q\n\t\t}\n\t    }'`\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $ECHO \"$win32_libid_type\"\n}\n\n# func_cygming_dll_for_implib ARG\n#\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib ()\n{\n  $opt_debug\n  sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify \"$1\"`\n}\n\n# func_cygming_dll_for_implib_fallback_core SECTION_NAME LIBNAMEs\n#\n# The is the core of a fallback implementation of a\n# platform-specific function to extract the name of the\n# DLL associated with the specified import library LIBNAME.\n#\n# SECTION_NAME is either .idata$6 or .idata$7, depending\n# on the platform and compiler that created the implib.\n#\n# Echos the name of the DLL associated with the\n# specified import library.\nfunc_cygming_dll_for_implib_fallback_core ()\n{\n  $opt_debug\n  match_literal=`$ECHO \"$1\" | $SED \"$sed_make_literal_regex\"`\n  $OBJDUMP -s --section \"$1\" \"$2\" 2>/dev/null |\n    $SED '/^Contents of section '\"$match_literal\"':/{\n      # Place marker at beginning of archive member dllname section\n      s/.*/====MARK====/\n      p\n      d\n    }\n    # These lines can sometimes be longer than 43 characters, but\n    # are always uninteresting\n    /:[\t ]*file format pe[i]\\{,1\\}-/d\n    /^In archive [^:]*:/d\n    # Ensure marker is printed\n    /^====MARK====/p\n    # Remove all lines with less than 43 characters\n    /^.\\{43\\}/!d\n    # From remaining lines, remove first 43 characters\n    s/^.\\{43\\}//' |\n    $SED -n '\n      # Join marker and all lines until next marker into a single line\n      /^====MARK====/ b para\n      H\n      $ b para\n      b\n      :para\n      x\n      s/\\n//g\n      # Remove the marker\n      s/^====MARK====//\n      # Remove trailing dots and whitespace\n      s/[\\. \\t]*$//\n      # Print\n      /./p' |\n    # we now have a list, one entry per line, of the stringified\n    # contents of the appropriate section of all members of the\n    # archive which possess that section. Heuristic: eliminate\n    # all those which have a first or second character that is\n    # a '.' (that is, objdump's representation of an unprintable\n    # character.) This should work for all archives with less than\n    # 0x302f exports -- but will fail for DLLs whose name actually\n    # begins with a literal '.' or a single character followed by\n    # a '.'.\n    #\n    # Of those that remain, print the first one.\n    $SED -e '/^\\./d;/^.\\./d;q'\n}\n\n# func_cygming_gnu_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is a GNU/binutils-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_gnu_implib_p ()\n{\n  $opt_debug\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_gnu_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $EGREP ' (_head_[A-Za-z0-9_]+_[ad]l*|[A-Za-z0-9_]+_[ad]l*_iname)$'`\n  test -n \"$func_cygming_gnu_implib_tmp\"\n}\n\n# func_cygming_ms_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is an MS-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_ms_implib_p ()\n{\n  $opt_debug\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_ms_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $GREP '_NULL_IMPORT_DESCRIPTOR'`\n  test -n \"$func_cygming_ms_implib_tmp\"\n}\n\n# func_cygming_dll_for_implib_fallback ARG\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n#\n# This fallback implementation is for use when $DLLTOOL\n# does not support the --identify-strict option.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib_fallback ()\n{\n  $opt_debug\n  if func_cygming_gnu_implib_p \"$1\" ; then\n    # binutils import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' \"$1\"`\n  elif func_cygming_ms_implib_p \"$1\" ; then\n    # ms-generated import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' \"$1\"`\n  else\n    # unknown\n    sharedlib_from_linklib_result=\"\"\n  fi\n}\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    $opt_debug\n    f_ex_an_ar_dir=\"$1\"; shift\n    f_ex_an_ar_oldlib=\"$1\"\n    if test \"$lock_old_archive_extraction\" = yes; then\n      lockfile=$f_ex_an_ar_oldlib.lock\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    fi\n    func_show_eval \"(cd \\$f_ex_an_ar_dir && $AR x \\\"\\$f_ex_an_ar_oldlib\\\")\" \\\n\t\t   'stat=$?; rm -f \"$lockfile\"; exit $stat'\n    if test \"$lock_old_archive_extraction\" = yes; then\n      $opt_dry_run || rm -f \"$lockfile\"\n    fi\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      func_fatal_error \"object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\"\n    fi\n}\n\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    $opt_debug\n    my_gentop=\"$1\"; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\"\"\n    my_xlib=\"\"\n    my_xabs=\"\"\n    my_xdir=\"\"\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=\"$my_xlib\" ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      func_basename \"$my_xlib\"\n      my_xlib=\"$func_basename_result\"\n      my_xlib_u=$my_xlib\n      while :; do\n        case \" $extracted_archives \" in\n\t*\" $my_xlib_u \"*)\n\t  func_arith $extracted_serial + 1\n\t  extracted_serial=$func_arith_result\n\t  my_xlib_u=lt$extracted_serial-$my_xlib ;;\n\t*) break ;;\n\tesac\n      done\n      extracted_archives=\"$extracted_archives $my_xlib_u\"\n      my_xdir=\"$my_gentop/$my_xlib_u\"\n\n      func_mkdir_p \"$my_xdir\"\n\n      case $host in\n      *-darwin*)\n\tfunc_verbose \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\t$opt_dry_run || {\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  darwin_base_archive=`basename \"$darwin_archive\"`\n\t  darwin_arches=`$LIPO -info \"$darwin_archive\" 2>/dev/null | $GREP Architectures 2>/dev/null || true`\n\t  if test -n \"$darwin_arches\"; then\n\t    darwin_arches=`$ECHO \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    func_verbose \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches ; do\n\t      func_mkdir_p \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      $LIPO -thin $darwin_arch -output \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\" \"${darwin_archive}\"\n\t      cd \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      func_extract_an_archive \"`pwd`\" \"${darwin_base_archive}\"\n\t      cd \"$darwin_curdir\"\n\t      $RM \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\"\n\t    done # $darwin_arches\n            ## Okay now we've a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print | $SED -e \"$basename\" | sort -u`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n\t      $LIPO -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    $RM -rf unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd $darwin_orig_dir\n\t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\t} # !$opt_dry_run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n    done\n\n    func_extract_archives_result=\"$my_oldobjs\"\n}\n\n\n# func_emit_wrapper [arg=no]\n#\n# Emit a libtool wrapper script on stdout.\n# Don't directly open a file because we may want to\n# incorporate the script contents within a cygwin/mingw\n# wrapper executable.  Must ONLY be called from within\n# func_mode_link because it depends on a number of variables\n# set therein.\n#\n# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\n# variable will take.  If 'yes', then the emitted script\n# will assume that the directory in which it is stored is\n# the $objdir directory.  This is a cygwin/mingw-specific\n# behavior.\nfunc_emit_wrapper ()\n{\n\tfunc_emit_wrapper_arg1=${1-no}\n\n\t$ECHO \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='$sed_quote_subst'\n\n# Be Bourne compatible\nif test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variables:\n  generated_by_libtool_version='$macro_version'\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$ECHO are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    file=\\\"\\$0\\\"\"\n\n    qECHO=`$ECHO \"$ECHO\" | $SED \"$sed_quote_subst\"`\n    $ECHO \"\\\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n    ECHO=\\\"$qECHO\\\"\n  fi\n\n# Very basic option parsing. These options are (a) specific to\n# the libtool wrapper, (b) are identical between the wrapper\n# /script/ and the wrapper /executable/ which is used only on\n# windows platforms, and (c) all begin with the string \"--lt-\"\n# (application programs are unlikely to have options which match\n# this pattern).\n#\n# There are only two supported options: --lt-debug and\n# --lt-dump-script. There is, deliberately, no --lt-help.\n#\n# The first argument to this parsing function should be the\n# script's $0 value, followed by \"$@\".\nlt_option_debug=\nfunc_parse_lt_options ()\n{\n  lt_script_arg0=\\$0\n  shift\n  for lt_opt\n  do\n    case \\\"\\$lt_opt\\\" in\n    --lt-debug) lt_option_debug=1 ;;\n    --lt-dump-script)\n        lt_dump_D=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%/[^/]*$%%'\\`\n        test \\\"X\\$lt_dump_D\\\" = \\\"X\\$lt_script_arg0\\\" && lt_dump_D=.\n        lt_dump_F=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%^.*/%%'\\`\n        cat \\\"\\$lt_dump_D/\\$lt_dump_F\\\"\n        exit 0\n      ;;\n    --lt-*)\n        \\$ECHO \\\"Unrecognized --lt- option: '\\$lt_opt'\\\" 1>&2\n        exit 1\n      ;;\n    esac\n  done\n\n  # Print the debug banner immediately:\n  if test -n \\\"\\$lt_option_debug\\\"; then\n    echo \\\"${outputname}:${output}:\\${LINENO}: libtool wrapper (GNU $PACKAGE$TIMESTAMP) $VERSION\\\" 1>&2\n  fi\n}\n\n# Used when --lt-debug. Prints its arguments to stdout\n# (redirection is the responsibility of the caller)\nfunc_lt_dump_args ()\n{\n  lt_dump_args_N=1;\n  for lt_arg\n  do\n    \\$ECHO \\\"${outputname}:${output}:\\${LINENO}: newargv[\\$lt_dump_args_N]: \\$lt_arg\\\"\n    lt_dump_args_N=\\`expr \\$lt_dump_args_N + 1\\`\n  done\n}\n\n# Core function for launching the target application\nfunc_exec_program_core ()\n{\n\"\n  case $host in\n  # Backslashes separate directories on plain windows\n  *-*-mingw | *-*-os2* | *-cegcc*)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"${outputname}:${output}:\\${LINENO}: newargv[0]: \\$progdir\\\\\\\\\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n\n  *)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"${outputname}:${output}:\\${LINENO}: newargv[0]: \\$progdir/\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n  esac\n  $ECHO \"\\\n      \\$ECHO \\\"\\$0: cannot exec \\$program \\$*\\\" 1>&2\n      exit 1\n}\n\n# A function to encapsulate launching the target application\n# Strips options in the --lt-* namespace from \\$@ and\n# launches target application with the remaining arguments.\nfunc_exec_program ()\n{\n  case \\\" \\$* \\\" in\n  *\\\\ --lt-*)\n    for lt_wr_arg\n    do\n      case \\$lt_wr_arg in\n      --lt-*) ;;\n      *) set x \\\"\\$@\\\" \\\"\\$lt_wr_arg\\\"; shift;;\n      esac\n      shift\n    done ;;\n  esac\n  func_exec_program_core \\${1+\\\"\\$@\\\"}\n}\n\n  # Parse options\n  func_parse_lt_options \\\"\\$0\\\" \\${1+\\\"\\$@\\\"}\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  done\n\n  # Usually 'no', except on cygwin/mingw when embedded into\n  # the cwrapper.\n  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1\n  if test \\\"\\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\\\" = \\\"yes\\\"; then\n    # special case for '.'\n    if test \\\"\\$thisdir\\\" = \\\".\\\"; then\n      thisdir=\\`pwd\\`\n    fi\n    # remove .libs from thisdir\n    case \\\"\\$thisdir\\\" in\n    *[\\\\\\\\/]$objdir ) thisdir=\\`\\$ECHO \\\"\\$thisdir\\\" | $SED 's%[\\\\\\\\/][^\\\\\\\\/]*$%%'\\` ;;\n    $objdir )   thisdir=. ;;\n    esac\n  fi\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test \"$fast_install\" = yes; then\n\t  $ECHO \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" ||\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | ${SED} 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $MKDIR \\\"\\$progdir\\\"\n    else\n      $RM \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $ECHO \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\$relink_command 2>&1\\`; then :\n      else\n\t$ECHO \\\"\\$relink_command_output\\\" >&2\n\t$RM \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $RM \\\"\\$progdir/\\$program\\\";\n      $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $RM \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $ECHO \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$ECHO \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# fixup the dll searchpath if we need to.\n\t#\n\t# Fix the DLL searchpath if we need to.  Do this before prepending\n\t# to shlibpath, because on Windows, both are PATH and uninstalled\n\t# libraries must come first.\n\tif test -n \"$dllsearchpath\"; then\n\t  $ECHO \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t# Export our shlibpath_var if we have one.\n\tif test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $ECHO \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" | $SED 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t$ECHO \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n      func_exec_program \\${1+\\\"\\$@\\\"}\n    fi\n  else\n    # The program doesn't exist.\n    \\$ECHO \\\"\\$0: error: \\\\\\`\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$ECHO \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    \\$ECHO \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n}\n\n\n# func_emit_cwrapperexe_src\n# emit the source code for a wrapper executable on stdout\n# Must ONLY be called from within func_mode_link because\n# it depends on a number of variable set therein.\nfunc_emit_cwrapperexe_src ()\n{\n\tcat <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n*/\nEOF\n\t    cat <<\"EOF\"\n#ifdef _MSC_VER\n# define _CRT_SECURE_NO_DEPRECATE 1\n#endif\n#include <stdio.h>\n#include <stdlib.h>\n#ifdef _MSC_VER\n# include <direct.h>\n# include <process.h>\n# include <io.h>\n#else\n# include <unistd.h>\n# include <stdint.h>\n# ifdef __CYGWIN__\n#  include <io.h>\n# endif\n#endif\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <sys/stat.h>\n\n/* declarations of non-ANSI functions */\n#if defined(__MINGW32__)\n# ifdef __STRICT_ANSI__\nint _putenv (const char *);\n# endif\n#elif defined(__CYGWIN__)\n# ifdef __STRICT_ANSI__\nchar *realpath (const char *, char *);\nint putenv (char *);\nint setenv (const char *, const char *, int);\n# endif\n/* #elif defined (other platforms) ... */\n#endif\n\n/* portability defines, excluding path handling macros */\n#if defined(_MSC_VER)\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n# define S_IXUSR _S_IEXEC\n# ifndef _INTPTR_T_DEFINED\n#  define _INTPTR_T_DEFINED\n#  define intptr_t int\n# endif\n#elif defined(__MINGW32__)\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n#elif defined(__CYGWIN__)\n# define HAVE_SETENV\n# define FOPEN_WB \"wb\"\n/* #elif defined (other platforms) ... */\n#endif\n\n#if defined(PATH_MAX)\n# define LT_PATHMAX PATH_MAX\n#elif defined(MAXPATHLEN)\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef S_IXOTH\n# define S_IXOTH 0\n#endif\n#ifndef S_IXGRP\n# define S_IXGRP 0\n#endif\n\n/* path handling portability macros */\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \\\n  defined (__OS2__)\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# define FOPEN_WB \"wb\"\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#ifndef FOPEN_WB\n# define FOPEN_WB \"w\"\n#endif\n#ifndef _O_BINARY\n# define _O_BINARY 0\n#endif\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free ((void *) stale); stale = 0; } \\\n} while (0)\n\n#if defined(LT_DEBUGWRAPPER)\nstatic int lt_debug = 1;\n#else\nstatic int lt_debug = 0;\n#endif\n\nconst char *program_name = \"libtool-wrapper\"; /* in case xstrdup fails */\n\nvoid *xmalloc (size_t num);\nchar *xstrdup (const char *string);\nconst char *base_name (const char *name);\nchar *find_executable (const char *wrapper);\nchar *chase_symlinks (const char *pathspec);\nint make_executable (const char *path);\nint check_executable (const char *path);\nchar *strendzap (char *str, const char *pat);\nvoid lt_debugprintf (const char *file, int line, const char *fmt, ...);\nvoid lt_fatal (const char *file, int line, const char *message, ...);\nstatic const char *nonnull (const char *s);\nstatic const char *nonempty (const char *s);\nvoid lt_setenv (const char *name, const char *value);\nchar *lt_extend_str (const char *orig_value, const char *add, int to_end);\nvoid lt_update_exe_path (const char *name, const char *value);\nvoid lt_update_lib_path (const char *name, const char *value);\nchar **prepare_spawn (char **argv);\nvoid lt_dump_script (FILE *f);\nEOF\n\n\t    cat <<EOF\nvolatile const char * MAGIC_EXE = \"$magic_exe\";\nconst char * LIB_PATH_VARNAME = \"$shlibpath_var\";\nEOF\n\n\t    if test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n              func_to_host_path \"$temp_rpath\"\n\t      cat <<EOF\nconst char * LIB_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * LIB_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test -n \"$dllsearchpath\"; then\n              func_to_host_path \"$dllsearchpath:\"\n\t      cat <<EOF\nconst char * EXE_PATH_VARNAME = \"PATH\";\nconst char * EXE_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * EXE_PATH_VARNAME = \"\";\nconst char * EXE_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test \"$fast_install\" = yes; then\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"lt-$outputname\"; /* hopefully, no .exe */\nEOF\n\t    else\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"$outputname\"; /* hopefully, no .exe */\nEOF\n\t    fi\n\n\n\t    cat <<\"EOF\"\n\n#define LTWRAPPER_OPTION_PREFIX         \"--lt-\"\n\nstatic const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;\nstatic const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX \"dump-script\";\nstatic const char *debug_opt            = LTWRAPPER_OPTION_PREFIX \"debug\";\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int  newargc;\n  char *tmp_pathspec;\n  char *actual_cwrapper_path;\n  char *actual_cwrapper_name;\n  char *target_name;\n  char *lt_argv_zero;\n  intptr_t rval = 127;\n\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  newargz = XMALLOC (char *, argc + 1);\n\n  /* very simple arg parsing; don't want to rely on getopt\n   * also, copy all non cwrapper options to newargz, except\n   * argz[0], which is handled differently\n   */\n  newargc=0;\n  for (i = 1; i < argc; i++)\n    {\n      if (strcmp (argv[i], dumpscript_opt) == 0)\n\t{\nEOF\n\t    case \"$host\" in\n\t      *mingw* | *cygwin* )\n\t\t# make stdout use \"unix\" line endings\n\t\techo \"          setmode(1,_O_BINARY);\"\n\t\t;;\n\t      esac\n\n\t    cat <<\"EOF\"\n\t  lt_dump_script (stdout);\n\t  return 0;\n\t}\n      if (strcmp (argv[i], debug_opt) == 0)\n\t{\n          lt_debug = 1;\n          continue;\n\t}\n      if (strcmp (argv[i], ltwrapper_option_prefix) == 0)\n        {\n          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX\n             namespace, but it is not one of the ones we know about and\n             have already dealt with, above (inluding dump-script), then\n             report an error. Otherwise, targets might begin to believe\n             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX\n             namespace. The first time any user complains about this, we'll\n             need to make LTWRAPPER_OPTION_PREFIX a configure-time option\n             or a configure.ac-settable value.\n           */\n          lt_fatal (__FILE__, __LINE__,\n\t\t    \"unrecognized %s option: '%s'\",\n                    ltwrapper_option_prefix, argv[i]);\n        }\n      /* otherwise ... */\n      newargz[++newargc] = xstrdup (argv[i]);\n    }\n  newargz[++newargc] = NULL;\n\nEOF\n\t    cat <<EOF\n  /* The GNU banner must be the first non-error debug message */\n  lt_debugprintf (__FILE__, __LINE__, \"libtool wrapper (GNU $PACKAGE$TIMESTAMP) $VERSION\\n\");\nEOF\n\t    cat <<\"EOF\"\n  lt_debugprintf (__FILE__, __LINE__, \"(main) argv[0]: %s\\n\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__, \"(main) program_name: %s\\n\", program_name);\n\n  tmp_pathspec = find_executable (argv[0]);\n  if (tmp_pathspec == NULL)\n    lt_fatal (__FILE__, __LINE__, \"couldn't find %s\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (before symlink chase) at: %s\\n\",\n\t\t  tmp_pathspec);\n\n  actual_cwrapper_path = chase_symlinks (tmp_pathspec);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (after symlink chase) at: %s\\n\",\n\t\t  actual_cwrapper_path);\n  XFREE (tmp_pathspec);\n\n  actual_cwrapper_name = xstrdup (base_name (actual_cwrapper_path));\n  strendzap (actual_cwrapper_path, actual_cwrapper_name);\n\n  /* wrapper name transforms */\n  strendzap (actual_cwrapper_name, \".exe\");\n  tmp_pathspec = lt_extend_str (actual_cwrapper_name, \".exe\", 1);\n  XFREE (actual_cwrapper_name);\n  actual_cwrapper_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  /* target_name transforms -- use actual target program name; might have lt- prefix */\n  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));\n  strendzap (target_name, \".exe\");\n  tmp_pathspec = lt_extend_str (target_name, \".exe\", 1);\n  XFREE (target_name);\n  target_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(main) libtool target name: %s\\n\",\n\t\t  target_name);\nEOF\n\n\t    cat <<EOF\n  newargz[0] =\n    XMALLOC (char, (strlen (actual_cwrapper_path) +\n\t\t    strlen (\"$objdir\") + 1 + strlen (actual_cwrapper_name) + 1));\n  strcpy (newargz[0], actual_cwrapper_path);\n  strcat (newargz[0], \"$objdir\");\n  strcat (newargz[0], \"/\");\nEOF\n\n\t    cat <<\"EOF\"\n  /* stop here, and copy so we don't have to do this twice */\n  tmp_pathspec = xstrdup (newargz[0]);\n\n  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */\n  strcat (newargz[0], actual_cwrapper_name);\n\n  /* DO want the lt- prefix here if it exists, so use target_name */\n  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);\n  XFREE (tmp_pathspec);\n  tmp_pathspec = NULL;\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t    cat <<\"EOF\"\n  {\n    char* p;\n    while ((p = strchr (newargz[0], '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n    while ((p = strchr (lt_argv_zero, '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n  }\nEOF\n\t    ;;\n\t    esac\n\n\t    cat <<\"EOF\"\n  XFREE (target_name);\n  XFREE (actual_cwrapper_path);\n  XFREE (actual_cwrapper_name);\n\n  lt_setenv (\"BIN_SH\", \"xpg4\"); /* for Tru64 */\n  lt_setenv (\"DUALCASE\", \"1\");  /* for MSK sh */\n  /* Update the DLL searchpath.  EXE_PATH_VALUE ($dllsearchpath) must\n     be prepended before (that is, appear after) LIB_PATH_VALUE ($temp_rpath)\n     because on Windows, both *_VARNAMEs are PATH but uninstalled\n     libraries must come first. */\n  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);\n  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);\n\n  lt_debugprintf (__FILE__, __LINE__, \"(main) lt_argv_zero: %s\\n\",\n\t\t  nonnull (lt_argv_zero));\n  for (i = 0; i < newargc; i++)\n    {\n      lt_debugprintf (__FILE__, __LINE__, \"(main) newargz[%d]: %s\\n\",\n\t\t      i, nonnull (newargz[i]));\n    }\n\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n  /* execv doesn't actually work on mingw as expected on unix */\n  newargz = prepare_spawn (newargz);\n  rval = _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);\n  if (rval == -1)\n    {\n      /* failed to start process */\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"(main) failed to launch target \\\"%s\\\": %s\\n\",\n\t\t      lt_argv_zero, nonnull (strerror (errno)));\n      return 127;\n    }\n  return rval;\nEOF\n\t\t;;\n\t      *)\n\t\tcat <<\"EOF\"\n  execv (lt_argv_zero, newargz);\n  return rval; /* =127, but avoids unused variable warning */\nEOF\n\t\t;;\n\t    esac\n\n\t    cat <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void *p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (__FILE__, __LINE__, \"memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),\n\t\t\t  string) : NULL;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char) name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable (const char *path)\n{\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(check_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0)\n      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))\n    return 1;\n  else\n    return 0;\n}\n\nint\nmake_executable (const char *path)\n{\n  int rval = 0;\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(make_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if (stat (path, &st) >= 0)\n    {\n      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);\n    }\n  return rval;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise\n   Does not chase symlinks, even on platforms that support them.\n*/\nchar *\nfind_executable (const char *wrapper)\n{\n  int has_slash = 0;\n  const char *p;\n  const char *p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  int tmp_len;\n  char *concat_name;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(find_executable): %s\\n\",\n                  nonempty (wrapper));\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable (concat_name))\n\treturn concat_name;\n      XFREE (concat_name);\n    }\n  else\n    {\n#endif\n      if (IS_DIR_SEPARATOR (wrapper[0]))\n\t{\n\t  concat_name = xstrdup (wrapper);\n\t  if (check_executable (concat_name))\n\t    return concat_name;\n\t  XFREE (concat_name);\n\t}\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n    }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n      {\n\thas_slash = 1;\n\tbreak;\n      }\n  if (!has_slash)\n    {\n      /* no slashes; search PATH */\n      const char *path = getenv (\"PATH\");\n      if (path != NULL)\n\t{\n\t  for (p = path; *p; p = p_next)\n\t    {\n\t      const char *q;\n\t      size_t p_len;\n\t      for (q = p; *q; q++)\n\t\tif (IS_PATH_SEPARATOR (*q))\n\t\t  break;\n\t      p_len = q - p;\n\t      p_next = (*q == '\\0' ? q : q + 1);\n\t      if (p_len == 0)\n\t\t{\n\t\t  /* empty path: current directory */\n\t\t  if (getcwd (tmp, LT_PATHMAX) == NULL)\n\t\t    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n                              nonnull (strerror (errno)));\n\t\t  tmp_len = strlen (tmp);\n\t\t  concat_name =\n\t\t    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, tmp, tmp_len);\n\t\t  concat_name[tmp_len] = '/';\n\t\t  strcpy (concat_name + tmp_len + 1, wrapper);\n\t\t}\n\t      else\n\t\t{\n\t\t  concat_name =\n\t\t    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, p, p_len);\n\t\t  concat_name[p_len] = '/';\n\t\t  strcpy (concat_name + p_len + 1, wrapper);\n\t\t}\n\t      if (check_executable (concat_name))\n\t\treturn concat_name;\n\t      XFREE (concat_name);\n\t    }\n\t}\n      /* not found in PATH; assume curdir */\n    }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n              nonnull (strerror (errno)));\n  tmp_len = strlen (tmp);\n  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable (concat_name))\n    return concat_name;\n  XFREE (concat_name);\n  return NULL;\n}\n\nchar *\nchase_symlinks (const char *pathspec)\n{\n#ifndef S_ISLNK\n  return xstrdup (pathspec);\n#else\n  char buf[LT_PATHMAX];\n  struct stat s;\n  char *tmp_pathspec = xstrdup (pathspec);\n  char *p;\n  int has_symlinks = 0;\n  while (strlen (tmp_pathspec) && !has_symlinks)\n    {\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"checking path component for symlinks: %s\\n\",\n\t\t      tmp_pathspec);\n      if (lstat (tmp_pathspec, &s) == 0)\n\t{\n\t  if (S_ISLNK (s.st_mode) != 0)\n\t    {\n\t      has_symlinks = 1;\n\t      break;\n\t    }\n\n\t  /* search backwards for last DIR_SEPARATOR */\n\t  p = tmp_pathspec + strlen (tmp_pathspec) - 1;\n\t  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    p--;\n\t  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    {\n\t      /* no more DIR_SEPARATORS left */\n\t      break;\n\t    }\n\t  *p = '\\0';\n\t}\n      else\n\t{\n\t  lt_fatal (__FILE__, __LINE__,\n\t\t    \"error accessing file \\\"%s\\\": %s\",\n\t\t    tmp_pathspec, nonnull (strerror (errno)));\n\t}\n    }\n  XFREE (tmp_pathspec);\n\n  if (!has_symlinks)\n    {\n      return xstrdup (pathspec);\n    }\n\n  tmp_pathspec = realpath (pathspec, buf);\n  if (tmp_pathspec == 0)\n    {\n      lt_fatal (__FILE__, __LINE__,\n\t\t\"could not follow symlinks for %s\", pathspec);\n    }\n  return xstrdup (tmp_pathspec);\n#endif\n}\n\nchar *\nstrendzap (char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert (str != NULL);\n  assert (pat != NULL);\n\n  len = strlen (str);\n  patlen = strlen (pat);\n\n  if (patlen <= len)\n    {\n      str += len - patlen;\n      if (strcmp (str, pat) == 0)\n\t*str = '\\0';\n    }\n  return str;\n}\n\nvoid\nlt_debugprintf (const char *file, int line, const char *fmt, ...)\n{\n  va_list args;\n  if (lt_debug)\n    {\n      (void) fprintf (stderr, \"%s:%s:%d: \", program_name, file, line);\n      va_start (args, fmt);\n      (void) vfprintf (stderr, fmt, args);\n      va_end (args);\n    }\n}\n\nstatic void\nlt_error_core (int exit_status, const char *file,\n\t       int line, const char *mode,\n\t       const char *message, va_list ap)\n{\n  fprintf (stderr, \"%s:%s:%d: %s: \", program_name, file, line, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *file, int line, const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, file, line, \"FATAL\", message, ap);\n  va_end (ap);\n}\n\nstatic const char *\nnonnull (const char *s)\n{\n  return s ? s : \"(null)\";\n}\n\nstatic const char *\nnonempty (const char *s)\n{\n  return (s && !*s) ? \"(empty)\" : nonnull (s);\n}\n\nvoid\nlt_setenv (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_setenv) setting '%s' to '%s'\\n\",\n                  nonnull (name), nonnull (value));\n  {\n#ifdef HAVE_SETENV\n    /* always make a copy, for consistency with !HAVE_SETENV */\n    char *str = xstrdup (value);\n    setenv (name, str, 1);\n#else\n    int len = strlen (name) + 1 + strlen (value) + 1;\n    char *str = XMALLOC (char, len);\n    sprintf (str, \"%s=%s\", name, value);\n    if (putenv (str) != EXIT_SUCCESS)\n      {\n        XFREE (str);\n      }\n#endif\n  }\n}\n\nchar *\nlt_extend_str (const char *orig_value, const char *add, int to_end)\n{\n  char *new_value;\n  if (orig_value && *orig_value)\n    {\n      int orig_value_len = strlen (orig_value);\n      int add_len = strlen (add);\n      new_value = XMALLOC (char, add_len + orig_value_len + 1);\n      if (to_end)\n        {\n          strcpy (new_value, orig_value);\n          strcpy (new_value + orig_value_len, add);\n        }\n      else\n        {\n          strcpy (new_value, add);\n          strcpy (new_value + add_len, orig_value);\n        }\n    }\n  else\n    {\n      new_value = xstrdup (add);\n    }\n  return new_value;\n}\n\nvoid\nlt_update_exe_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_exe_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      /* some systems can't cope with a ':'-terminated path #' */\n      int len = strlen (new_value);\n      while (((len = strlen (new_value)) > 0) && IS_PATH_SEPARATOR (new_value[len-1]))\n        {\n          new_value[len-1] = '\\0';\n        }\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nvoid\nlt_update_lib_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_lib_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nEOF\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n\n/* Prepares an argument vector before calling spawn().\n   Note that spawn() does not by itself call the command interpreter\n     (getenv (\"COMSPEC\") != NULL ? getenv (\"COMSPEC\") :\n      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n         GetVersionEx(&v);\n         v.dwPlatformId == VER_PLATFORM_WIN32_NT;\n      }) ? \"cmd.exe\" : \"command.com\").\n   Instead it simply concatenates the arguments, separated by ' ', and calls\n   CreateProcess().  We must quote the arguments since Win32 CreateProcess()\n   interprets characters like ' ', '\\t', '\\\\', '\"' (but not '<' and '>') in a\n   special way:\n   - Space and tab are interpreted as delimiters. They are not treated as\n     delimiters if they are surrounded by double quotes: \"...\".\n   - Unescaped double quotes are removed from the input. Their only effect is\n     that within double quotes, space and tab are treated like normal\n     characters.\n   - Backslashes not followed by double quotes are not special.\n   - But 2*n+1 backslashes followed by a double quote become\n     n backslashes followed by a double quote (n >= 0):\n       \\\" -> \"\n       \\\\\\\" -> \\\"\n       \\\\\\\\\\\" -> \\\\\"\n */\n#define SHELL_SPECIAL_CHARS \"\\\"\\\\ \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\n#define SHELL_SPACE_CHARS \" \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\nchar **\nprepare_spawn (char **argv)\n{\n  size_t argc;\n  char **new_argv;\n  size_t i;\n\n  /* Count number of arguments.  */\n  for (argc = 0; argv[argc] != NULL; argc++)\n    ;\n\n  /* Allocate new argument vector.  */\n  new_argv = XMALLOC (char *, argc + 1);\n\n  /* Put quoted arguments into the new argument vector.  */\n  for (i = 0; i < argc; i++)\n    {\n      const char *string = argv[i];\n\n      if (string[0] == '\\0')\n\tnew_argv[i] = xstrdup (\"\\\"\\\"\");\n      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)\n\t{\n\t  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);\n\t  size_t length;\n\t  unsigned int backslashes;\n\t  const char *s;\n\t  char *quoted_string;\n\t  char *p;\n\n\t  length = 0;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    length++;\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\tlength += backslashes + 1;\n\t      length++;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    length += backslashes + 1;\n\n\t  quoted_string = XMALLOC (char, length + 1);\n\n\t  p = quoted_string;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    *p++ = '\"';\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\t{\n\t\t  unsigned int j;\n\t\t  for (j = backslashes + 1; j > 0; j--)\n\t\t    *p++ = '\\\\';\n\t\t}\n\t      *p++ = c;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    {\n\t      unsigned int j;\n\t      for (j = backslashes; j > 0; j--)\n\t\t*p++ = '\\\\';\n\t      *p++ = '\"';\n\t    }\n\t  *p = '\\0';\n\n\t  new_argv[i] = quoted_string;\n\t}\n      else\n\tnew_argv[i] = (char *) string;\n    }\n  new_argv[argc] = NULL;\n\n  return new_argv;\n}\nEOF\n\t\t;;\n\t    esac\n\n            cat <<\"EOF\"\nvoid lt_dump_script (FILE* f)\n{\nEOF\n\t    func_emit_wrapper yes |\n\t      $SED -n -e '\ns/^\\(.\\{79\\}\\)\\(..*\\)/\\1\\\n\\2/\nh\ns/\\([\\\\\"]\\)/\\\\\\1/g\ns/$/\\\\n/\ns/\\([^\\n]*\\).*/  fputs (\"\\1\", f);/p\ng\nD'\n            cat <<\"EOF\"\n}\nEOF\n}\n# end: func_emit_cwrapperexe_src\n\n# func_win32_import_lib_p ARG\n# True if ARG is an import lib, as indicated by $file_magic_cmd\nfunc_win32_import_lib_p ()\n{\n    $opt_debug\n    case `eval $file_magic_cmd \\\"\\$1\\\" 2>/dev/null | $SED -e 10q` in\n    *import*) : ;;\n    *) false ;;\n    esac\n}\n\n# func_mode_link arg...\nfunc_mode_link ()\n{\n    $opt_debug\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # which system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll which has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=$nonopt\n    base_compile=\"$nonopt $@\"\n    compile_command=$nonopt\n    finalize_command=$nonopt\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n    new_inherited_linker_flags=\n\n    avoid_version=no\n    bindir=\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=no\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n    weak_libs=\n    single_module=\"${wl}-single_module\"\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -shared)\n\ttest \"$build_libtool_libs\" != yes && \\\n\t  func_fatal_configuration \"can not build a shared library\"\n\tbuild_old_libs=no\n\tbreak\n\t;;\n      -all-static | -static | -static-libtool-libs)\n\tcase $arg in\n\t-all-static)\n\t  if test \"$build_libtool_libs\" = yes && test -z \"$link_static_flag\"; then\n\t    func_warning \"complete static linking is impossible in this configuration\"\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\t-static)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\t  ;;\n\t-static-libtool-libs)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\tesac\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=\"$1\"\n      shift\n      func_quote_for_eval \"$arg\"\n      qarg=$func_quote_for_eval_unquoted_result\n      func_append libtool_args \" $func_quote_for_eval_result\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  func_append compile_command \" @OUTPUT@\"\n\t  func_append finalize_command \" @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tbindir)\n\t  bindir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tdlfiles|dlprefiles)\n\t  if test \"$preload\" = no; then\n\t    # Add the symbol object into the linking commands.\n\t    func_append compile_command \" @SYMFILE@\"\n\t    func_append finalize_command \" @SYMFILE@\"\n\t    preload=yes\n\t  fi\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test \"$dlself\" = no; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test \"$prev\" = dlprefiles; then\n\t      dlself=yes\n\t    elif test \"$prev\" = dlfiles && test \"$dlopen_self\" != yes; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test \"$prev\" = dlfiles; then\n\t      func_append dlfiles \" $arg\"\n\t    else\n\t      func_append dlprefiles \" $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=\"$arg\"\n\t  test -f \"$arg\" \\\n\t    || func_fatal_error \"symbol file \\`$arg' does not exist\"\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tframework)\n\t  case $host in\n\t    *-*-darwin*)\n\t      case \"$deplibs \" in\n\t\t*\" $qarg.ltframework \"*) ;;\n\t\t*) func_append deplibs \" $qarg.ltframework\" # this is fixed later\n\t\t   ;;\n\t      esac\n\t      ;;\n\t  esac\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat \"$save_arg\"`\n\t    do\n#\t      func_append moreargs \" $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if func_lalib_unsafe_p \"$arg\"; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\tfunc_source \"$arg\"\n\n\t\tif test -z \"$pic_object\" ||\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test \"$pic_object\" = none &&\n\t\t   test \"$non_pic_object\" = none; then\n\t\t  func_fatal_error \"cannot find name of object for \\`$arg'\"\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\tfunc_dirname \"$arg\" \"/\" \"\"\n\t\txdir=\"$func_dirname_result\"\n\n\t\tif test \"$pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=\"$xdir$pic_object\"\n\n\t\t  if test \"$prev\" = dlfiles; then\n\t\t    if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\t      func_append dlfiles \" $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test \"$prev\" = dlprefiles; then\n\t\t    # Preload the old-style object.\n\t\t    func_append dlprefiles \" $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  arg=\"$pic_object\"\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test \"$non_pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=\"$xdir$non_pic_object\"\n\n\t\t  # A standard non-PIC object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t\t    arg=\"$non_pic_object\"\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=\"$pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif $opt_dry_run; then\n\t\t  # Extract subdirectory from the argument.\n\t\t  func_dirname \"$arg\" \"/\" \"\"\n\t\t  xdir=\"$func_dirname_result\"\n\n\t\t  func_lo2o \"$arg\"\n\t\t  pic_object=$xdir$objdir/$func_lo2o_result\n\t\t  non_pic_object=$xdir$func_lo2o_result\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t        else\n\t\t  func_fatal_error \"\\`$arg' is not a valid libtool object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    func_fatal_error \"link input file \\`$arg' does not exist\"\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=\"-$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    func_fatal_error \"only absolute run-paths are allowed\"\n\t    ;;\n\t  esac\n\t  if test \"$prev\" = rpath; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append rpath \" $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append xrpath \" $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\tshrext)\n\t  shrext_cmds=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tweak)\n\t  func_append weak_libs \" $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\txcclinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txcompiler)\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $wl$qarg\"\n\t  prev=\n\t  func_append compile_command \" $wl$qarg\"\n\t  func_append finalize_command \" $wl$qarg\"\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=\"$arg\"\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  # See comment for -static flag below, for more details.\n\t  func_append compile_command \" $link_static_flag\"\n\t  func_append finalize_command \" $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\tfunc_fatal_error \"\\`-allow-undefined' must not be used because it is the default\"\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -bindir)\n\tprev=bindir\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  func_fatal_error \"more than one -exported-symbols argument is not allowed\"\n\tfi\n\tif test \"X$arg\" = \"X-export-symbols\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n\tprev=framework\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tfunc_stripname \"-L\" '' \"$arg\"\n\tif test -z \"$func_stripname_result\"; then\n\t  if test \"$#\" -gt 0; then\n\t    func_fatal_error \"require no space between \\`-L' and \\`$1'\"\n\t  else\n\t    func_fatal_error \"need path for \\`-L' option\"\n\t  fi\n\tfi\n\tfunc_resolve_sysroot \"$func_stripname_result\"\n\tdir=$func_resolve_sysroot_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  test -z \"$absdir\" && \\\n\t    func_fatal_error \"cannot determine absolute directory name of \\`$dir'\"\n\t  dir=\"$absdir\"\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"* | *\" $arg \"*)\n\t  # Will only happen for absolute or sysroot arguments\n\t  ;;\n\t*)\n\t  # Preserve sysroot, but never include relative directories\n\t  case $dir in\n\t    [\\\\/]* | [A-Za-z]:[\\\\/]* | =*) func_append deplibs \" $arg\" ;;\n\t    *) func_append deplibs \" -L$dir\" ;;\n\t  esac\n\t  func_append lib_search_path \" $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$dir\" | $SED 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  ::) dllsearchpath=$dir;;\n\t  *) func_append dllsearchpath \":$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test \"X$arg\" = \"X-lc\" || test \"X$arg\" = \"X-lm\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  esac\n\telif test \"X$arg\" = \"X-lc_r\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tfunc_append deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      # Darwin uses the -arch flag to determine output architecture.\n      -model|-arch|-isysroot|--sysroot)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n      |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tcase \"$new_inherited_linker_flags \" in\n\t    *\" $arg \"*) ;;\n\t    * ) func_append new_inherited_linker_flags \" $arg\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -multi_module)\n\tsingle_module=\"${wl}-multi_module\"\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # and Darwin in order for the loader to find any dlls it needs.\n\t  func_warning \"\\`-no-install' is ignored for $host\"\n\t  func_warning \"assuming \\`-no-fast-install' instead\"\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tfunc_stripname '-R' '' \"$arg\"\n\tdir=$func_stripname_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t=*)\n\t  func_stripname '=' '' \"$dir\"\n\t  dir=$lt_sysroot$func_stripname_result\n\t  ;;\n\t*)\n\t  func_fatal_error \"only absolute run-paths are allowed\"\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) func_append xrpath \" $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -shared)\n\t# The effects of -shared are defined in a previous loop.\n\tcontinue\n\t;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -static | -static-libtool-libs)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -weak)\n        prev=weak\n\tcontinue\n\t;;\n\n      -Wc,*)\n\tfunc_stripname '-Wc,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=\"$save_ifs\"\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Wl,*)\n\tfunc_stripname '-Wl,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $wl$func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $wl$func_quote_for_eval_result\"\n\t  func_append linker_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=\"$save_ifs\"\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # -msg_* for osf cc\n      -msg_*)\n\tfunc_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n\n      # Flags to be passed through unchanged, with rationale:\n      # -64, -mips[0-9]      enable 64-bit mode for the SGI compiler\n      # -r[0-9][0-9]*        specify processor for the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode for the Sun compiler\n      # +DA*, +DD*           enable 64-bit mode for the HP compiler\n      # -q*                  compiler args for the IBM compiler\n      # -m*, -t[45]*, -txscale* architecture-specific flags for GCC\n      # -F/path              path to uninstalled frameworks, gcc on darwin\n      # -p, -pg, --coverage, -fprofile-*  profiling flags for GCC\n      # @file                GCC response files\n      # -tp=*                Portland pgcc target processor selection\n      # --sysroot=*          for sysroot support\n      # -O*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \\\n      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \\\n      -O*|-flto*|-fwhopr*|-fuse-linker-plugin)\n        func_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n        func_append compile_command \" $arg\"\n        func_append finalize_command \" $arg\"\n        func_append compiler_flags \" $arg\"\n        continue\n        ;;\n\n      # Some other compiler flag.\n      -* | +*)\n        func_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tfunc_append objs \" $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif func_lalib_unsafe_p \"$arg\"; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  func_source \"$arg\"\n\n\t  if test -z \"$pic_object\" ||\n\t     test -z \"$non_pic_object\" ||\n\t     test \"$pic_object\" = none &&\n\t     test \"$non_pic_object\" = none; then\n\t    func_fatal_error \"cannot find name of object for \\`$arg'\"\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  func_dirname \"$arg\" \"/\" \"\"\n\t  xdir=\"$func_dirname_result\"\n\n\t  if test \"$pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=\"$xdir$pic_object\"\n\n\t    if test \"$prev\" = dlfiles; then\n\t      if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\tfunc_append dlfiles \" $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test \"$prev\" = dlprefiles; then\n\t      # Preload the old-style object.\n\t      func_append dlprefiles \" $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    func_append libobjs \" $pic_object\"\n\t    arg=\"$pic_object\"\n\t  fi\n\n\t  # Non-PIC object.\n\t  if test \"$non_pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=\"$xdir$non_pic_object\"\n\n\t    # A standard non-PIC object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t    if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t      arg=\"$non_pic_object\"\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=\"$pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if $opt_dry_run; then\n\t    # Extract subdirectory from the argument.\n\t    func_dirname \"$arg\" \"/\" \"\"\n\t    xdir=\"$func_dirname_result\"\n\n\t    func_lo2o \"$arg\"\n\t    pic_object=$xdir$objdir/$func_lo2o_result\n\t    non_pic_object=$xdir$func_lo2o_result\n\t    func_append libobjs \" $pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  else\n\t    func_fatal_error \"\\`$arg' is not a valid libtool object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tfunc_append deplibs \" $arg\"\n\tfunc_append old_deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tfunc_resolve_sysroot \"$arg\"\n\tif test \"$prev\" = dlfiles; then\n\t  # This library was specified with -dlopen.\n\t  func_append dlfiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telif test \"$prev\" = dlprefiles; then\n\t  # The library was specified with -dlpreopen.\n\t  func_append dlprefiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telse\n\t  func_append deplibs \" $func_resolve_sysroot_result\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\tfunc_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n      fi\n    done # argument parsing loop\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the \\`$prevarg' option requires an argument\"\n\n    if test \"$export_dynamic\" = yes && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      func_append compile_command \" $arg\"\n      func_append finalize_command \" $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    func_basename \"$output\"\n    outputname=\"$func_basename_result\"\n    libobjs_save=\"$libobjs\"\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$ECHO \\\"\\${$shlibpath_var}\\\" \\| \\$SED \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n\n    func_dirname \"$output\" \"/\" \"\"\n    output_objdir=\"$func_dirname_result$objdir\"\n    func_to_tool_file \"$output_objdir/\"\n    tool_output_objdir=$func_to_tool_file_result\n    # Create the object directory.\n    func_mkdir_p \"$output_objdir\"\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      func_fatal_help \"you must specify an output file\"\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if $opt_preserve_dup_deps ; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\tesac\n      fi\n      func_append libs \" $deplib\"\n    done\n\n    if test \"$linkmode\" = lib; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if $opt_duplicate_compiler_generated_deps; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) func_append specialdeplibs \" $pre_post_deps\" ;;\n\t  esac\n\t  func_append pre_post_deps \" $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n\n    case $linkmode in\n    lib)\n\tpasses=\"conv dlpreopen link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    func_fatal_help \"libraries can \\`-dlopen' only libtool libraries: $file\"\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=no\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n\n    for pass in $passes; do\n      # The preopen pass in lib mode reverses $deplibs; put it back here\n      # so that -L comes before libs that need it for instance...\n      if test \"$linkmode,$pass\" = \"lib,link\"; then\n\t## FIXME: Find the place where the list is rebuilt in the wrong\n\t##        order, and fix it there properly\n        tmp_deplibs=\n\tfor deplib in $deplibs; do\n\t  tmp_deplibs=\"$deplib $tmp_deplibs\"\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n      fi\n\n      if test \"$linkmode,$pass\" = \"lib,link\" ||\n\t test \"$linkmode,$pass\" = \"prog,scan\"; then\n\tlibs=\"$deplibs\"\n\tdeplibs=\n      fi\n      if test \"$linkmode\" = prog; then\n\tcase $pass in\n\tdlopen) libs=\"$dlfiles\" ;;\n\tdlpreopen) libs=\"$dlprefiles\" ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test \"$linkmode,$pass\" = \"lib,dlpreopen\"; then\n\t# Collect and forward deplibs of preopened libtool libs\n\tfor lib in $dlprefiles; do\n\t  # Ignore non-libtool-libs\n\t  dependency_libs=\n\t  func_resolve_sysroot \"$lib\"\n\t  case $lib in\n\t  *.la)\tfunc_source \"$func_resolve_sysroot_result\" ;;\n\t  esac\n\n\t  # Collect preopened libtool deplibs, except any this library\n\t  # has declared as weak libs\n\t  for deplib in $dependency_libs; do\n\t    func_basename \"$deplib\"\n            deplib_base=$func_basename_result\n\t    case \" $weak_libs \" in\n\t    *\" $deplib_base \"*) ;;\n\t    *) func_append deplibs \" $deplib\" ;;\n\t    esac\n\t  done\n\tdone\n\tlibs=\"$dlprefiles\"\n      fi\n      if test \"$pass\" = dlopen; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=\"$deplibs\"\n\tdeplibs=\n      fi\n\n      for deplib in $libs; do\n\tlib=\n\tfound=no\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n        |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    func_append compiler_flags \" $deplib\"\n\t    if test \"$linkmode\" = lib ; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test \"$linkmode\" != lib && test \"$linkmode\" != prog; then\n\t    func_warning \"\\`-l' is ignored for archives/objects\"\n\t    continue\n\t  fi\n\t  func_stripname '-l' '' \"$deplib\"\n\t  name=$func_stripname_result\n\t  if test \"$linkmode\" = lib; then\n\t    searchdirs=\"$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path\"\n\t  else\n\t    searchdirs=\"$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path\"\n\t  fi\n\t  for searchdir in $searchdirs; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=\"$searchdir/lib${name}${search_ext}\"\n\t      if test -f \"$lib\"; then\n\t\tif test \"$search_ext\" = \".la\"; then\n\t\t  found=yes\n\t\telse\n\t\t  found=no\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if test \"$found\" != yes; then\n\t    # deplib doesn't seem to be a libtool library\n\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  else # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif func_lalib_p \"$lib\"; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  func_source \"$lib\"\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=\"$l\"\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\" ; then # only static version available\n\t\t    found=no\n\t\t    func_dirname \"$lib\" \"\" \".\"\n\t\t    ladir=\"$func_dirname_result\"\n\t\t    lib=$ladir/$old_library\n\t\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  fi\n\t  ;; # -l\n\t*.ltframework)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$deplib $deplibs\"\n\t    if test \"$linkmode\" = lib ; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test \"$pass\" = conv && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" = conv; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test \"$pass\" = scan; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  *)\n\t    func_warning \"\\`-L' is ignored for archives/objects\"\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test \"$pass\" = link; then\n\t    func_stripname '-R' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    dir=$func_resolve_sysroot_result\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append xrpath \" $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la)\n\t  func_resolve_sysroot \"$deplib\"\n\t  lib=$func_resolve_sysroot_result\n\t  ;;\n\t*.$libext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    # Linking convenience modules into shared libraries is allowed,\n\t    # but linking other static libraries is non-portable.\n\t    case \" $dlpreconveniencelibs \" in\n\t    *\" $deplib \"*) ;;\n\t    *)\n\t      valid_a_lib=no\n\t      case $deplibs_check_method in\n\t\tmatch_pattern*)\n\t\t  set dummy $deplibs_check_method; shift\n\t\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t\t  if eval \"\\$ECHO \\\"$deplib\\\"\" 2>/dev/null | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t    valid_a_lib=yes\n\t\t  fi\n\t\t;;\n\t\tpass_all)\n\t\t  valid_a_lib=yes\n\t\t;;\n\t      esac\n\t      if test \"$valid_a_lib\" != yes; then\n\t\techo\n\t\t$ECHO \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t\techo \"*** that it is just a static archive that I should not use here.\"\n\t      else\n\t\techo\n\t\t$ECHO \"*** Warning: Linking the shared library $output against the\"\n\t\t$ECHO \"*** static library $deplib is not portable!\"\n\t\tdeplibs=\"$deplib $deplibs\"\n\t      fi\n\t      ;;\n\t    esac\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" != link; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test \"$linkmode\" = prog; then\n\t    if test \"$pass\" = dlpreopen || test \"$dlopen_support\" != yes || test \"$build_libtool_libs\" = no; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      func_append newdlprefiles \" $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      func_append newdlfiles \" $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=yes\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\n\tif test \"$found\" = yes || test -f \"$lib\"; then :\n\telse\n\t  func_fatal_error \"cannot find the library \\`$lib' or unhandled argument \\`$deplib'\"\n\tfi\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$lib\" \\\n\t  || func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\n\tfunc_dirname \"$lib\" \"\" \".\"\n\tladir=\"$func_dirname_result\"\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\tinherited_linker_flags=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tfunc_source \"$lib\"\n\n\t# Convert \"-framework foo\" to \"foo.ltframework\"\n\tif test -n \"$inherited_linker_flags\"; then\n\t  tmp_inherited_linker_flags=`$ECHO \"$inherited_linker_flags\" | $SED 's/-framework \\([^ $]*\\)/\\1.ltframework/g'`\n\t  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do\n\t    case \" $new_inherited_linker_flags \" in\n\t      *\" $tmp_inherited_linker_flag \"*) ;;\n\t      *) func_append new_inherited_linker_flags \" $tmp_inherited_linker_flag\";;\n\t    esac\n\t  done\n\tfi\n\tdependency_libs=`$ECHO \" $dependency_libs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tif test \"$linkmode,$pass\" = \"lib,link\" ||\n\t   test \"$linkmode,$pass\" = \"prog,scan\" ||\n\t   { test \"$linkmode\" != prog && test \"$linkmode\" != lib; }; then\n\t  test -n \"$dlopen\" && func_append dlfiles \" $dlopen\"\n\t  test -n \"$dlpreopen\" && func_append dlprefiles \" $dlpreopen\"\n\tfi\n\n\tif test \"$pass\" = conv; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      func_fatal_error \"cannot find name of link library for \\`$lib'\"\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    func_append convenience \" $ladir/$objdir/$old_library\"\n\t    func_append old_convenience \" $ladir/$objdir/$old_library\"\n\t  elif test \"$linkmode\" != prog && test \"$linkmode\" != lib; then\n\t    func_fatal_error \"\\`$lib' is not a convenience library\"\n\t  fi\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    deplibs=\"$deplib $deplibs\"\n\t    if $opt_preserve_dup_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tif test -n \"$old_library\" &&\n\t   { test \"$prefer_static_libs\" = yes ||\n\t     test \"$prefer_static_libs,$installed\" = \"built,no\"; }; then\n\t  linklib=$old_library\n\telse\n\t  for l in $old_library $library_names; do\n\t    linklib=\"$l\"\n\t  done\n\tfi\n\tif test -z \"$linklib\"; then\n\t  func_fatal_error \"cannot find name of link library for \\`$lib'\"\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test \"$pass\" = dlopen; then\n\t  if test -z \"$libdir\"; then\n\t    func_fatal_error \"cannot -dlopen a convenience library: \\`$lib'\"\n\t  fi\n\t  if test -z \"$dlname\" ||\n\t     test \"$dlopen_support\" != yes ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    func_append dlprefiles \" $lib $dependency_libs\"\n\t  else\n\t    func_append newdlfiles \" $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=\"$ladir\" ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    func_warning \"cannot determine absolute directory name of \\`$ladir'\"\n\t    func_warning \"passing it literally to the linker, although it might fail\"\n\t    abs_ladir=\"$ladir\"\n\t  fi\n\t  ;;\n\tesac\n\tfunc_basename \"$lib\"\n\tlaname=\"$func_basename_result\"\n\n\t# Find the relevant object directory and library name.\n\tif test \"X$installed\" = Xyes; then\n\t  if test ! -f \"$lt_sysroot$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    func_warning \"library \\`$lib' was moved.\"\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    libdir=\"$abs_ladir\"\n\t  else\n\t    dir=\"$lt_sysroot$libdir\"\n\t    absdir=\"$lt_sysroot$libdir\"\n\t  fi\n\t  test \"X$hardcode_automatic\" = Xyes && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  else\n\t    dir=\"$ladir/$objdir\"\n\t    absdir=\"$abs_ladir/$objdir\"\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tfunc_stripname 'lib' '.la' \"$laname\"\n\tname=$func_stripname_result\n\n\t# This library was specified with -dlpreopen.\n\tif test \"$pass\" = dlpreopen; then\n\t  if test -z \"$libdir\" && test \"$linkmode\" = prog; then\n\t    func_fatal_error \"only libraries may -dlpreopen a convenience library: \\`$lib'\"\n\t  fi\n\t  case \"$host\" in\n\t    # special handling for platforms with PE-DLLs.\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # Linker will automatically link against shared library if both\n\t      # static and shared are present.  Therefore, ensure we extract\n\t      # symbols from the import library if a shared library is present\n\t      # (otherwise, the dlopen module name will be incorrect).  We do\n\t      # this by putting the import library name into $newdlprefiles.\n\t      # We recover the dlopen module name by 'saving' the la file\n\t      # name in a special purpose variable, and (later) extracting the\n\t      # dlname from the la file.\n\t      if test -n \"$dlname\"; then\n\t        func_tr_sh \"$dir/$linklib\"\n\t        eval \"libfile_$func_tr_sh_result=\\$abs_ladir/\\$laname\"\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      fi\n\t    ;;\n\t    * )\n\t      # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t      # are required to link).\n\t      if test -n \"$old_library\"; then\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t      elif test -n \"$dlname\"; then\n\t        func_append newdlprefiles \" $dir/$dlname\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      fi\n\t    ;;\n\t  esac\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test \"$linkmode\" = lib; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test \"$linkmode\" = prog && test \"$pass\" != link; then\n\t  func_append newlib_search_path \" $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=no\n\t  if test \"$link_all_deplibs\" != no || test -z \"$library_names\" ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    linkalldeplibs=yes\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) func_stripname '-L' '' \"$deplib\"\n\t         func_resolve_sysroot \"$func_stripname_result\"\n\t         func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t\t ;;\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if test \"$linkalldeplibs\" = yes; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if $opt_preserve_dup_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t  if test -n \"$library_names\" &&\n\t     { { test \"$prefer_static_libs\" = no ||\n\t         test \"$prefer_static_libs,$installed\" = \"built,yes\"; } ||\n\t       test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\" ; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case \"$temp_rpath:\" in\n\t      *\"$absdir:\"*) ;;\n\t      *) func_append temp_rpath \"$absdir:\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if test \"$alldeplibs\" = yes &&\n\t     { test \"$deplibs_check_method\" = pass_all ||\n\t       { test \"$build_libtool_libs\" = yes &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test \"$use_static_libs\" = built && test \"$installed\" = yes; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test \"$use_static_libs\" = no || test -z \"$old_library\"; }; then\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc*)\n\t      # No point in relinking DLLs because paths are not encoded\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=no\n\t    ;;\n\t  *)\n\t    if test \"$installed\" = no; then\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=yes\n\t    fi\n\t    ;;\n\t  esac\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on some\n\t  # systems (darwin).  Don't bleat about dlopened modules though!\n\t  dlopenmodule=\"\"\n\t  for dlpremoduletest in $dlprefiles; do\n\t    if test \"X$dlpremoduletest\" = \"X$lib\"; then\n\t      dlopenmodule=\"$dlpremoduletest\"\n\t      break\n\t    fi\n\t  done\n\t  if test -z \"$dlopenmodule\" && test \"$shouldnotlink\" = yes && test \"$pass\" = link; then\n\t    echo\n\t    if test \"$linkmode\" = prog; then\n\t      $ECHO \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $ECHO \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $ECHO \"*** $linklib is not portable!\"\n\t  fi\n\t  if test \"$linkmode\" = lib &&\n\t     test \"$hardcode_into_libs\" = yes; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    shift\n\t    realname=\"$1\"\n\t    shift\n\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=\"$dlname\"\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw* | *cegcc*)\n\t        func_arith $current - $age\n\t\tmajor=$func_arith_result\n\t\tversuffix=\"-$major\"\n\t\t;;\n\t      esac\n\t      eval soname=\\\"$soname_spec\\\"\n\t    else\n\t      soname=\"$realname\"\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=\"$soname\"\n\t    func_basename \"$soroot\"\n\t    soname=\"$func_basename_result\"\n\t    func_stripname 'lib' '.dll' \"$soname\"\n\t    newlib=libimp-$func_stripname_result.a\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      func_verbose \"extracting exported symbol list from \\`$soname'\"\n\t      func_execute_cmds \"$extract_expsyms_cmds\" 'exit $?'\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      func_verbose \"generating import library for \\`$soname'\"\n\t      func_execute_cmds \"$old_archive_from_expsyms_cmds\" 'exit $?'\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test \"$linkmode\" = prog || test \"$opt_mode\" != relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test \"$hardcode_direct\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv4*uw2*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a (non-dlopened) module then we can not\n\t\t    # link against it, someone is ignoring the earlier warnings\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n\t\t\t $GREP \": [^:]* bundle\" >/dev/null ; then\n\t\t      if test \"X$dlopenmodule\" != \"X$lib\"; then\n\t\t\t$ECHO \"*** Warning: lib $linklib is a module, not a shared library\"\n\t\t\tif test -z \"$old_library\" ; then\n\t\t\t  echo\n\t\t\t  echo \"*** And there doesn't seem to be a static archive available\"\n\t\t\t  echo \"*** The link will probably fail, sorry\"\n\t\t\telse\n\t\t\t  add=\"$dir/$old_library\"\n\t\t\tfi\n\t\t      elif test -n \"$old_library\"; then\n\t\t\tadd=\"$dir/$old_library\"\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test \"$hardcode_minus_L\" = no; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=\"$dir\" ;;\n\t\tesac\n\t\tadd_dir=\"-L$dir\"\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = no; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test \"$hardcode_direct\" = yes &&\n\t         test \"$hardcode_direct_absolute\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t      elif test \"$hardcode_minus_L\" = yes; then\n\t\tadd_dir=\"-L$absdir\"\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = yes; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test \"$lib_linked\" != yes; then\n\t      func_fatal_configuration \"unsupported hardcode properties\"\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) func_append compile_shlibpath \"$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test \"$hardcode_direct\" != yes &&\n\t\t test \"$hardcode_minus_L\" != yes &&\n\t\t test \"$hardcode_shlibpath_var\" = yes; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) func_append finalize_shlibpath \"$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test \"$linkmode\" = prog || test \"$opt_mode\" = relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test \"$hardcode_direct\" = yes &&\n\t       test \"$hardcode_direct_absolute\" = no; then\n\t      add=\"$libdir/$linklib\"\n\t    elif test \"$hardcode_minus_L\" = yes; then\n\t      add_dir=\"-L$libdir\"\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_shlibpath_var\" = yes; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) func_append finalize_shlibpath \"$libdir:\" ;;\n\t      esac\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_automatic\" = yes; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\" ; then\n\t\tadd=\"$inst_prefix_dir$libdir/$linklib\"\n\t      else\n\t\tadd=\"$libdir/$linklib\"\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=\"-L$libdir\"\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=\"-l$name\"\n\t    fi\n\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test \"$linkmode\" = prog; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test \"$hardcode_direct\" != unsupported; then\n\t    test -n \"$old_library\" && linklib=\"$old_library\"\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test \"$build_libtool_libs\" = yes; then\n\t  # Not a shared library\n\t  if test \"$deplibs_check_method\" != pass_all; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    echo\n\t    $ECHO \"*** Warning: This system can not link to static lib archive $lib.\"\n\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test \"$module\" = yes; then\n\t      echo \"*** But as you try to build a module library, libtool will still create \"\n\t      echo \"*** a static module, that should work as long as the dlopening application\"\n\t      echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\techo\n\t\techo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\techo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t\techo \"*** not find such a program.  So, this module is probably useless.\"\n\t\techo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test \"$build_old_libs\" = no; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test \"$linkmode\" = lib; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test \"$hardcode_into_libs\" != yes ||\n\t       test \"$build_old_libs\" = yes ||\n\t       test \"$link_static\" = yes; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) func_stripname '-R' '' \"$libdir\"\n\t           temp_xrpath=$func_stripname_result\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) func_append xrpath \" $temp_xrpath\";;\n\t\t   esac;;\n\t      *) func_append temp_deplibs \" $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=\"$temp_deplibs\"\n\t  fi\n\n\t  func_append newlib_search_path \" $absdir\"\n\t  # Link against this library\n\t  test \"$link_static\" = no && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    case $deplib in\n              -L*) func_stripname '-L' '' \"$deplib\"\n                   func_resolve_sysroot \"$func_stripname_result\";;\n              *) func_resolve_sysroot \"$deplib\" ;;\n            esac\n\t    if $opt_preserve_dup_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $func_resolve_sysroot_result \"*)\n                func_append specialdeplibs \" $func_resolve_sysroot_result\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $func_resolve_sysroot_result\"\n\t  done\n\n\t  if test \"$link_all_deplibs\" != no; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      path=\n\t      case $deplib in\n\t      -L*) path=\"$deplib\" ;;\n\t      *.la)\n\t        func_resolve_sysroot \"$deplib\"\n\t        deplib=$func_resolve_sysroot_result\n\t        func_dirname \"$deplib\" \"\" \".\"\n\t\tdir=$func_dirname_result\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=\"$dir\" ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    func_warning \"cannot determine absolute directory name of \\`$dir'\"\n\t\t    absdir=\"$dir\"\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif $GREP \"^installed=no\" $deplib > /dev/null; then\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  depdepl=\n\t\t  eval deplibrary_names=`${SED} -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\" ; then\n\t\t    for tmp in $deplibrary_names ; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$absdir/$objdir/$depdepl\" ; then\n\t\t      depdepl=\"$absdir/$objdir/$depdepl\"\n\t\t      darwin_install_name=`${OTOOL} -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`\n                      if test -z \"$darwin_install_name\"; then\n                          darwin_install_name=`${OTOOL64} -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`\n                      fi\n\t\t      func_append compiler_flags \" ${wl}-dylib_file ${wl}${darwin_install_name}:${depdepl}\"\n\t\t      func_append linker_flags \" -dylib_file ${darwin_install_name}:${depdepl}\"\n\t\t      path=\n\t\t    fi\n\t\t  fi\n\t\t  ;;\n\t\t*)\n\t\t  path=\"-L$absdir/$objdir\"\n\t\t  ;;\n\t\tesac\n\t\telse\n\t\t  eval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  test -z \"$libdir\" && \\\n\t\t    func_fatal_error \"\\`$deplib' is not a valid libtool archive\"\n\t\t  test \"$absdir\" != \"$libdir\" && \\\n\t\t    func_warning \"\\`$deplib' seems to be moved\"\n\n\t\t  path=\"-L$absdir\"\n\t\tfi\n\t\t;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      if test \"$pass\" = link; then\n\tif test \"$linkmode\" = \"prog\"; then\n\t  compile_deplibs=\"$new_inherited_linker_flags $compile_deplibs\"\n\t  finalize_deplibs=\"$new_inherited_linker_flags $finalize_deplibs\"\n\telse\n\t  compiler_flags=\"$compiler_flags \"`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfi\n      fi\n      dependency_libs=\"$newdependency_libs\"\n      if test \"$pass\" = dlpreopen; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test \"$pass\" != dlopen; then\n\tif test \"$pass\" != conv; then\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append lib_search_path \" $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\tfi\n\n\tif test \"$linkmode,$pass\" != \"prog,link\"; then\n\t  vars=\"deplibs\"\n\telse\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\\"\\$$var\\\"\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) func_append tmp_libs \" $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) func_append tmp_libs \" $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\\"$tmp_libs\\\"\n\tdone # for var\n      fi\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs ; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\"\"\n\t  ;;\n\tesac\n\tif test -n \"$i\" ; then\n\t  func_append tmp_libs \" $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test \"$linkmode\" = prog; then\n      dlfiles=\"$newdlfiles\"\n    fi\n    if test \"$linkmode\" = prog || test \"$linkmode\" = lib; then\n      dlprefiles=\"$newdlprefiles\"\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tfunc_warning \"\\`-dlopen' is ignored for archives\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"\\`-l' and \\`-L' are ignored for archives\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"\\`-rpath' is ignored for archives\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"\\`-R' is ignored for archives\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info/-version-number' is ignored for archives\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for archives\"\n\n      test -n \"$export_symbols$export_symbols_regex\" && \\\n\tfunc_warning \"\\`-export-symbols' is ignored for archives\"\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=\"$output\"\n      func_append objs \"$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form `libNAME.la'.\n      case $outputname in\n      lib*)\n\tfunc_stripname 'lib' '.la' \"$outputname\"\n\tname=$func_stripname_result\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\ttest \"$module\" = no && \\\n\t  func_fatal_help \"libtool library \\`$output' must begin with \\`lib'\"\n\n\tif test \"$need_lib_prefix\" != no; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  func_stripname '' '.la' \"$outputname\"\n\t  name=$func_stripname_result\n\t  eval shared_ext=\\\"$shrext_cmds\\\"\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  func_stripname '' '.la' \"$outputname\"\n\t  libname=$func_stripname_result\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test \"$deplibs_check_method\" != pass_all; then\n\t  func_fatal_error \"cannot build libtool library \\`$output' from non-libtool objects on this host:$objs\"\n\telse\n\t  echo\n\t  $ECHO \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $ECHO \"*** objects $objs is not portable!\"\n\t  func_append libobjs \" $objs\"\n\tfi\n      fi\n\n      test \"$dlself\" != no && \\\n\tfunc_warning \"\\`-dlopen self' is ignored for libtool libraries\"\n\n      set dummy $rpath\n      shift\n      test \"$#\" -gt 1 && \\\n\tfunc_warning \"ignoring multiple \\`-rpath's for a libtool library\"\n\n      install_libdir=\"$1\"\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test \"$build_libtool_libs\" = yes; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a `.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\ttest -n \"$vinfo\" && \\\n\t  func_warning \"\\`-version-info/-version-number' is ignored for convenience libraries\"\n\n\ttest -n \"$release\" && \\\n\t  func_warning \"\\`-release' is ignored for convenience libraries\"\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=\"$IFS\"; IFS=':'\n\tset dummy $vinfo 0 0 0\n\tshift\n\tIFS=\"$save_ifs\"\n\n\ttest -n \"$7\" && \\\n\t  func_fatal_help \"too many parameters to \\`-version-info'\"\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=\"$1\"\n\t  number_minor=\"$2\"\n\t  number_revision=\"$3\"\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # which has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  # correct linux to gnu/linux during the next big refactor\n\t  darwin|linux|osf|windows|none)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=\"$number_minor\"\n\t    revision=\"$number_revision\"\n\t    ;;\n\t  freebsd-aout|freebsd-elf|qnx|sunos)\n\t    current=\"$number_major\"\n\t    revision=\"$number_minor\"\n\t    age=\"0\"\n\t    ;;\n\t  irix|nonstopux)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=\"$number_minor\"\n\t    revision=\"$number_minor\"\n\t    lt_irix_increment=no\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=\"$1\"\n\t  revision=\"$2\"\n\t  age=\"$3\"\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"CURRENT \\`$current' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"REVISION \\`$revision' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"AGE \\`$age' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  func_error \"AGE \\`$age' is greater than the current interface number \\`$current'\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\"$major.$age.$revision\"\n\t  # Darwin ld doesn't like 0 for these options...\n\t  func_arith $current + 1\n\t  minor_current=$func_arith_result\n\t  xlcverstring=\"${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision\"\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\";\n\t  ;;\n\n\tfreebsd-elf)\n\t  major=\".$current\"\n\t  versuffix=\".$current\"\n\t  ;;\n\n\tirix | nonstopux)\n\t  if test \"X$lt_irix_increment\" = \"Xno\"; then\n\t    func_arith $current - $age\n\t  else\n\t    func_arith $current - $age + 1\n\t  fi\n\t  major=$func_arith_result\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=\"$verstring_prefix$major.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test \"$loop\" -ne 0; do\n\t    func_arith $revision - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=\"$verstring_prefix$major.$iface:$verstring\"\n\t  done\n\n\t  # Before this point, $major must not contain `.'.\n\t  major=.$major\n\t  versuffix=\"$major.$revision\"\n\t  ;;\n\n\tlinux) # correct to gnu/linux during the next big refactor\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\"$major.$age.$revision\"\n\t  ;;\n\n\tosf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\".$current.$age.$revision\"\n\t  verstring=\"$current.$age.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test \"$loop\" -ne 0; do\n\t    func_arith $current - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=\"$verstring:${iface}.0\"\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  func_append verstring \":${current}.0\"\n\t  ;;\n\n\tqnx)\n\t  major=\".$current\"\n\t  versuffix=\".$current\"\n\t  ;;\n\n\tsunos)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\"\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 filesystems.\n\t  func_arith $current - $age\n\t  major=$func_arith_result\n\t  versuffix=\"-$major\"\n\t  ;;\n\n\t*)\n\t  func_fatal_configuration \"unknown library version type \\`$version_type'\"\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=\"0.0\"\n\t    ;;\n\t  esac\n\t  if test \"$need_version\" = no; then\n\t    versuffix=\n\t  else\n\t    versuffix=\".0.0\"\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test \"$avoid_version\" = yes && test \"$need_version\" = no; then\n\t  major=\n\t  versuffix=\n\t  verstring=\"\"\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test \"$allow_undefined\" = yes; then\n\t  if test \"$allow_undefined_flag\" = unsupported; then\n\t    func_warning \"undefined symbols not allowed in $host shared libraries\"\n\t    build_libtool_libs=no\n\t    build_old_libs=yes\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=\"$no_undefined_flag\"\n\tfi\n\n      fi\n\n      func_generate_dlsyms \"$libname\" \"$libname\" \"yes\"\n      func_append libobjs \" $symfileobj\"\n      test \"X$libobjs\" = \"X \" && libobjs=\n\n      if test \"$opt_mode\" != relink; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$ECHO \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext | *.gcno)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)\n\t       if test \"X$precious_files_regex\" != \"X\"; then\n\t\t if $ECHO \"$p\" | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t\t then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       func_append removelist \" $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\ttest -n \"$removelist\" && \\\n\t  func_show_eval \"${RM}r \\$removelist\"\n      fi\n\n      # Now set the variables for building old libraries.\n      if test \"$build_old_libs\" = yes && test \"$build_libtool_libs\" != convenience ; then\n\tfunc_append oldlibs \" $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.${libext}$/d; $lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      #for path in $notinst_path; do\n      #\tlib_search_path=`$ECHO \"$lib_search_path \" | $SED \"s% $path % %g\"`\n      #\tdeplibs=`$ECHO \"$deplibs \" | $SED \"s% -L$path % %g\"`\n      #\tdependency_libs=`$ECHO \"$dependency_libs \" | $SED \"s% -L$path % %g\"`\n      #done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  func_replace_sysroot \"$libdir\"\n\t  func_append temp_xrpath \" -R$func_replace_sysroot_result\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n\tif test \"$hardcode_into_libs\" != yes || test \"$build_old_libs\" = yes; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=\"$dlfiles\"\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlfiles \" $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=\"$dlprefiles\"\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlprefiles \" $lib\" ;;\n\tesac\n      done\n\n      if test \"$build_libtool_libs\" = yes; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n\t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test \"$build_libtool_need_lc\" = \"yes\"; then\n\t      func_append deplibs \" -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\"\"\n\tversuffix=\"\"\n\tmajor=\"\"\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $opt_dry_run || $RM conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $opt_dry_run || $RM conftest\n\t  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\tif test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    func_append newdeplibs \" $i\"\n\t\t    i=\"\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t\tif test -n \"$i\" ; then\n\t\t  libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t  deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t  set dummy $deplib_matches; shift\n\t\t  deplib_match=$1\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t    func_append newdeplibs \" $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\t$opt_dry_run || $RM conftest\n\t\tif $LTCC $LTCFLAGS -o conftest conftest.c $i; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      func_append newdeplibs \" $i\"\n\t\t      i=\"\"\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\" ; then\n\t\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t    deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t    set dummy $deplib_matches; shift\n\t\t    deplib_match=$1\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t      func_append newdeplibs \" $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      echo\n\t\t      $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  $ECHO \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"*** make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method; shift\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tif test -n \"$file_magic_glob\"; then\n\t\t  libnameglob=`func_echo_all \"$libname\" | $SED -e $file_magic_glob`\n\t\telse\n\t\t  libnameglob=$libname\n\t\tfi\n\t\ttest \"$want_nocaseglob\" = yes && nocaseglob=`shopt -p nocaseglob`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  if test \"$want_nocaseglob\" = yes; then\n\t\t    shopt -s nocaseglob\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t    $nocaseglob\n\t\t  else\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t  fi\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null |\n\t\t\t $GREP \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=\"$potent_lib\"\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=\"$potliblink\";;\n\t\t\t*) potlib=`$ECHO \"$potlib\" | $SED 's,[^/]*$,,'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null |\n\t\t\t $SED -e 10q |\n\t\t\t $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tfunc_append newdeplibs \" $a_deplib\"\n\t\t\ta_deplib=\"\"\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method; shift\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=\"$potent_lib\" # see symlink-check above in file_magic test\n\t\t    if eval \"\\$ECHO \\\"$potent_lib\\\"\" 2>/dev/null | $SED 10q | \\\n\t\t       $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      func_append newdeplibs \" $a_deplib\"\n\t\t      a_deplib=\"\"\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\"\"\n\t  tmp_deplibs=`$ECHO \" $deplibs\" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`\n\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t    for i in $predeps $postdeps ; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$ECHO \" $tmp_deplibs\" | $SED \"s,$i,,\"`\n\t    done\n\t  fi\n\t  case $tmp_deplibs in\n\t  *[!\\\t\\ ]*)\n\t    echo\n\t    if test \"X$deplibs_check_method\" = \"Xnone\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library with the System framework\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t  ;;\n\tesac\n\n\tif test \"$droppeddeps\" = yes; then\n\t  if test \"$module\" = yes; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $ECHO \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test \"$build_old_libs\" = no; then\n\t      oldlibs=\"$output_objdir/$libname.$libext\"\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\n\t    if test \"$allow_undefined\" = no; then\n\t      echo\n\t      echo \"*** Since this library must not contain undefined symbols,\"\n\t      echo \"*** because either the platform does not support them or\"\n\t      echo \"*** it was explicitly requested with -no-undefined,\"\n\t      echo \"*** libtool will only create a static version of it.\"\n\t      if test \"$build_old_libs\" = no; then\n\t\toldlibs=\"$output_objdir/$libname.$libext\"\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n      # Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n      case $host in\n\t*-*-darwin*)\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  new_inherited_linker_flags=`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  deplibs=`$ECHO \" $deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  ;;\n      esac\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      deplibs=\"$new_libs\"\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test \"$build_libtool_libs\" = yes; then\n\t# Remove ${wl} instances when linking with ld.\n\t# FIXME: should test the right _cmds variable.\n\tcase $archive_cmds in\n\t  *\\$LD\\ *) wl= ;;\n        esac\n\tif test \"$hardcode_into_libs\" = yes; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=\"$finalize_rpath\"\n\t  test \"$opt_mode\" != relink && rpath=\"$compile_rpath$rpath\"\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tfunc_replace_sysroot \"$libdir\"\n\t\tlibdir=$func_replace_sysroot_result\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=\"$libdir\"\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    func_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t\tfunc_append dep_rpath \" $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append perm_rpath \" $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=\"$hardcode_libdirs\"\n\t    eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      func_append rpath \"$dir:\"\n\t    done\n\t    eval \"$runpath_var='$rpath\\$$runpath_var'; export $runpath_var\"\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=\"$finalize_shlibpath\"\n\ttest \"$opt_mode\" != relink && shlibpath=\"$compile_shlibpath$shlibpath\"\n\tif test -n \"$shlibpath\"; then\n\t  eval \"$shlibpath_var='$shlibpath\\$$shlibpath_var'; export $shlibpath_var\"\n\tfi\n\n\t# Get the real and link names of the library.\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\tshift\n\trealname=\"$1\"\n\tshift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=\"$realname\"\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=\"$output_objdir/$realname\"\n\tlinknames=\n\tfor link\n\tdo\n\t  func_append linknames \" $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$ECHO \"$libobjs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\ttest \"X$libobjs\" = \"X \" && libobjs=\n\n\tdelfiles=\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $opt_dry_run || cp \"$export_symbols\" \"$output_objdir/$libname.uexp\"\n\t  export_symbols=\"$output_objdir/$libname.uexp\"\n\t  func_append delfiles \" $export_symbols\"\n\tfi\n\n\torig_export_symbols=\n\tcase $host_os in\n\tcygwin* | mingw* | cegcc*)\n\t  if test -n \"$export_symbols\" && test -z \"$export_symbols_regex\"; then\n\t    # exporting using user supplied symfile\n\t    if test \"x`$SED 1q $export_symbols`\" != xEXPORTS; then\n\t      # and it's NOT already a .def file. Must figure out\n\t      # which of the given symbols are data symbols and tag\n\t      # them as such. So, trigger use of export_symbols_cmds.\n\t      # export_symbols gets reassigned inside the \"prepare\n\t      # the list of exported symbols\" if statement, so the\n\t      # include_expsyms logic still works.\n\t      orig_export_symbols=\"$export_symbols\"\n\t      export_symbols=\n\t      always_export_symbols=yes\n\t    fi\n\t  fi\n\t  ;;\n\tesac\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test \"$always_export_symbols\" = yes || test -n \"$export_symbols_regex\"; then\n\t    func_verbose \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $opt_dry_run || $RM $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd1 in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      # Take the normal branch if the nm_file_list_spec branch\n\t      # doesn't work or if tool conversion is not needed.\n\t      case $nm_file_list_spec~$to_tool_file_cmd in\n\t\t*~func_convert_file_noop | *~func_convert_file_msys_to_w32 | ~*)\n\t\t  try_normal_branch=yes\n\t\t  eval cmd=\\\"$cmd1\\\"\n\t\t  func_len \" $cmd\"\n\t\t  len=$func_len_result\n\t\t  ;;\n\t\t*)\n\t\t  try_normal_branch=no\n\t\t  ;;\n\t      esac\n\t      if test \"$try_normal_branch\" = yes \\\n\t\t && { test \"$len\" -lt \"$max_cmd_len\" \\\n\t\t      || test \"$max_cmd_len\" -le -1; }\n\t      then\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\tskipped_export=false\n\t      elif test -n \"$nm_file_list_spec\"; then\n\t\tfunc_basename \"$output\"\n\t\toutput_la=$func_basename_result\n\t\tsave_libobjs=$libobjs\n\t\tsave_output=$output\n\t\toutput=${output_objdir}/${output_la}.nm\n\t\tfunc_to_tool_file \"$output\"\n\t\tlibobjs=$nm_file_list_spec$func_to_tool_file_result\n\t\tfunc_append delfiles \" $output\"\n\t\tfunc_verbose \"creating $NM input file list: $output\"\n\t\tfor obj in $save_libobjs; do\n\t\t  func_to_tool_file \"$obj\"\n\t\t  $ECHO \"$func_to_tool_file_result\"\n\t\tdone > \"$output\"\n\t\teval cmd=\\\"$cmd1\\\"\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\toutput=$save_output\n\t\tlibobjs=$save_libobjs\n\t\tskipped_export=false\n\t      else\n\t\t# The command line is too long to execute in one step.\n\t\tfunc_verbose \"using reloadable object file for export list...\"\n\t\tskipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=\"$save_ifs\"\n\t    if test -n \"$export_symbols_regex\" && test \"X$skipped_export\" != \"X:\"; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  tmp_export_symbols=\"$export_symbols\"\n\t  test -n \"$orig_export_symbols\" && tmp_export_symbols=\"$orig_export_symbols\"\n\t  $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" && test -n \"$orig_export_symbols\"; then\n\t  # The given exports_symbols file has to be filtered, so filter it.\n\t  func_verbose \"filter symbol list for \\`$libname.la' to tag DATA exports\"\n\t  # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t  # 's' commands which not all seds can handle. GNU sed should be fine\n\t  # though. Also, the filter scales superlinearly with the number of\n\t  # global variables. join(1) would be nice here, but unfortunately\n\t  # isn't a blessed tool.\n\t  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t  func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t  export_symbols=$output_objdir/$libname.def\n\t  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t  case \" $convenience \" in\n\t  *\" $test_deplib \"*) ;;\n\t  *)\n\t    func_append tmp_deplibs \" $test_deplib\"\n\t    ;;\n\t  esac\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\" &&\n\t    test \"$compiler_needs_object\" = yes &&\n\t    test -z \"$libobjs\"; then\n\t    # extract the archives, so we have objects to list.\n\t    # TODO: could optimize this to just extract one archive.\n\t    whole_archive_flag_spec=\n\t  fi\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  else\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    func_append generated \" $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    func_append libobjs \" $func_extract_archives_result\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\tfi\n\n\tif test \"$thread_safe\" = yes && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  func_append linker_flags \" $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test \"$opt_mode\" = relink; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U)' || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$module_expsym_cmds\\\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$module_cmds\\\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$archive_expsym_cmds\\\"\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$archive_cmds\\\"\n\t    cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" &&\n\t   func_len \" $test_cmds\" &&\n\t   len=$func_len_result &&\n\t   test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise\n\t  # or, if using GNU ld and skipped_export is not :, use a linker\n\t  # script.\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  func_basename \"$output\"\n\t  output_la=$func_basename_result\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  last_robj=\n\t  k=1\n\n\t  if test -n \"$save_libobjs\" && test \"X$skipped_export\" != \"X:\" && test \"$with_gnu_ld\" = yes; then\n\t    output=${output_objdir}/${output_la}.lnkscript\n\t    func_verbose \"creating GNU ld script: $output\"\n\t    echo 'INPUT (' > $output\n\t    for obj in $save_libobjs\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    echo ')' >> $output\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$func_to_tool_file_result\n\t  elif test -n \"$save_libobjs\" && test \"X$skipped_export\" != \"X:\" && test \"X$file_list_spec\" != X; then\n\t    output=${output_objdir}/${output_la}.lnk\n\t    func_verbose \"creating linker input file list: $output\"\n\t    : > $output\n\t    set x $save_libobjs\n\t    shift\n\t    firstobj=\n\t    if test \"$compiler_needs_object\" = yes; then\n\t      firstobj=\"$1 \"\n\t      shift\n\t    fi\n\t    for obj\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$firstobj\\\"$file_list_spec$func_to_tool_file_result\\\"\n\t  else\n\t    if test -n \"$save_libobjs\"; then\n\t      func_verbose \"creating reloadable object files...\"\n\t      output=$output_objdir/$output_la-${k}.$objext\n\t      eval test_cmds=\\\"$reload_cmds\\\"\n\t      func_len \" $test_cmds\"\n\t      len0=$func_len_result\n\t      len=$len0\n\n\t      # Loop over the list of objects to be linked.\n\t      for obj in $save_libobjs\n\t      do\n\t\tfunc_len \" $obj\"\n\t\tfunc_arith $len + $func_len_result\n\t\tlen=$func_arith_result\n\t\tif test \"X$objlist\" = X ||\n\t\t   test \"$len\" -lt \"$max_cmd_len\"; then\n\t\t  func_append objlist \" $obj\"\n\t\telse\n\t\t  # The command $test_cmds is almost too long, add a\n\t\t  # command to the queue.\n\t\t  if test \"$k\" -eq 1 ; then\n\t\t    # The first file doesn't have a previous command to add.\n\t\t    reload_objs=$objlist\n\t\t    eval concat_cmds=\\\"$reload_cmds\\\"\n\t\t  else\n\t\t    # All subsequent reloadable object files will link in\n\t\t    # the last one created.\n\t\t    reload_objs=\"$objlist $last_robj\"\n\t\t    eval concat_cmds=\\\"\\$concat_cmds~$reload_cmds~\\$RM $last_robj\\\"\n\t\t  fi\n\t\t  last_robj=$output_objdir/$output_la-${k}.$objext\n\t\t  func_arith $k + 1\n\t\t  k=$func_arith_result\n\t\t  output=$output_objdir/$output_la-${k}.$objext\n\t\t  objlist=\" $obj\"\n\t\t  func_len \" $last_robj\"\n\t\t  func_arith $len0 + $func_len_result\n\t\t  len=$func_arith_result\n\t\tfi\n\t      done\n\t      # Handle the remaining objects by creating one last\n\t      # reloadable object file.  All subsequent reloadable object\n\t      # files will link in the last one created.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      reload_objs=\"$objlist $last_robj\"\n\t      eval concat_cmds=\\\"\\${concat_cmds}$reload_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t        eval concat_cmds=\\\"\\${concat_cmds}~\\$RM $last_robj\\\"\n\t      fi\n\t      func_append delfiles \" $output\"\n\n\t    else\n\t      output=\n\t    fi\n\n\t    if ${skipped_export-false}; then\n\t      func_verbose \"generating symbol list for \\`$libname.la'\"\n\t      export_symbols=\"$output_objdir/$libname.exp\"\n\t      $opt_dry_run || $RM $export_symbols\n\t      libobjs=$output\n\t      # Append the command to create the export file.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$export_symbols_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t\teval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t    fi\n\n\t    test -n \"$save_libobjs\" &&\n\t      func_verbose \"creating a temporary reloadable object file: $output\"\n\n\t    # Loop through the commands generated above and execute them.\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $concat_cmds; do\n\t      IFS=\"$save_ifs\"\n\t      $opt_silent || {\n\t\t  func_quote_for_expand \"$cmd\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t      }\n\t      $opt_dry_run || eval \"$cmd\" || {\n\t\tlt_exit=$?\n\n\t\t# Restore the uninstalled library and exit\n\t\tif test \"$opt_mode\" = relink; then\n\t\t  ( cd \"$output_objdir\" && \\\n\t\t    $RM \"${realname}T\" && \\\n\t\t    $MV \"${realname}U\" \"$realname\" )\n\t\tfi\n\n\t\texit $lt_exit\n\t      }\n\t    done\n\t    IFS=\"$save_ifs\"\n\n\t    if test -n \"$export_symbols_regex\" && ${skipped_export-false}; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\n          if ${skipped_export-false}; then\n\t    if test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t      tmp_export_symbols=\"$export_symbols\"\n\t      test -n \"$orig_export_symbols\" && tmp_export_symbols=\"$orig_export_symbols\"\n\t      $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\t    fi\n\n\t    if test -n \"$orig_export_symbols\"; then\n\t      # The given exports_symbols file has to be filtered, so filter it.\n\t      func_verbose \"filter symbol list for \\`$libname.la' to tag DATA exports\"\n\t      # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t      # 's' commands which not all seds can handle. GNU sed should be fine\n\t      # though. Also, the filter scales superlinearly with the number of\n\t      # global variables. join(1) would be nice here, but unfortunately\n\t      # isn't a blessed tool.\n\t      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t      func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t      export_symbols=$output_objdir/$libname.def\n\t      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\t    fi\n\t  fi\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t    if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t      cmds=$archive_expsym_cmds\n\t    else\n\t      cmds=$archive_cmds\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$delfiles\"; then\n\t  # Append the command to remove temporary files to $cmds.\n\t  eval cmds=\\\"\\$cmds~\\$RM $delfiles\\\"\n\tfi\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append libobjs \" $func_extract_archives_result\"\n\t  test \"X$libobjs\" = \"X \" && libobjs=\n\tfi\n\n\tsave_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  eval cmd=\\\"$cmd\\\"\n\t  $opt_silent || {\n\t    func_quote_for_expand \"$cmd\"\n\t    eval \"func_echo $func_quote_for_expand_result\"\n\t  }\n\t  $opt_dry_run || eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test \"$opt_mode\" = relink; then\n\t      ( cd \"$output_objdir\" && \\\n\t        $RM \"${realname}T\" && \\\n\t\t$MV \"${realname}U\" \"$realname\" )\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=\"$save_ifs\"\n\n\t# Restore the uninstalled library and exit\n\tif test \"$opt_mode\" = relink; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname)' || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      func_show_eval '${RM}r \"$gentop\"'\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    func_show_eval '(cd \"$output_objdir\" && $RM \"$linkname\" && $LN_S \"$realname\" \"$linkname\")' 'exit $?'\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test \"$module\" = yes || test \"$export_dynamic\" = yes; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=\"$soname\"\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tfunc_warning \"\\`-dlopen' is ignored for objects\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"\\`-l' and \\`-L' are ignored for objects\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"\\`-rpath' is ignored for objects\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"\\`-R' is ignored for objects\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info' is ignored for objects\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for objects\"\n\n      case $output in\n      *.lo)\n\ttest -n \"$objs$old_deplibs\" && \\\n\t  func_fatal_error \"cannot build library object \\`$output' from non-libtool objects\"\n\n\tlibobj=$output\n\tfunc_lo2o \"$libobj\"\n\tobj=$func_lo2o_result\n\t;;\n      *)\n\tlibobj=\n\tobj=\"$output\"\n\t;;\n      esac\n\n      # Delete the old objects.\n      $opt_dry_run || $RM $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # reload_cmds runs $LD directly, so let us get rid of\n      # -Wl from whole_archive_flag_spec and hope we can get by with\n      # turning comma into space..\n      wl=\n\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval tmp_whole_archive_flags=\\\"$whole_archive_flag_spec\\\"\n\t  reload_conv_objs=$reload_objs\\ `$ECHO \"$tmp_whole_archive_flags\" | $SED 's|,| |g'`\n\telse\n\t  gentop=\"$output_objdir/${obj}x\"\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # If we're not building shared, we need to use non_pic_objs\n      test \"$build_libtool_libs\" != yes && libobjs=\"$non_pic_objects\"\n\n      # Create the old-style object.\n      reload_objs=\"$objs$old_deplibs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.${libext}$/d; /\\.lib$/d; $lo2o\" | $NL2SP`\" $reload_conv_objs\" ### testsuite: skip nested quoting test\n\n      output=\"$obj\"\n      func_execute_cmds \"$reload_cmds\" 'exit $?'\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$build_libtool_libs\" != yes; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $opt_dry_run || eval \"echo timestamp > $libobj\" || exit $?\n\texit $EXIT_SUCCESS\n      fi\n\n      if test -n \"$pic_flag\" || test \"$pic_mode\" != default; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=\"$libobj\"\n\tfunc_execute_cmds \"$reload_cmds\" 'exit $?'\n      fi\n\n      if test -n \"$gentop\"; then\n\tfunc_show_eval '${RM}r \"$gentop\"'\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) func_stripname '' '.exe' \"$output\"\n\t          output=$func_stripname_result.exe;;\n      esac\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info' is ignored for programs\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for programs\"\n\n      test \"$preload\" = yes \\\n        && test \"$dlopen_support\" = unknown \\\n\t&& test \"$dlopen_self\" = unknown \\\n\t&& test \"$dlopen_self_static\" = unknown && \\\n\t  func_warning \"\\`LT_INIT([dlopen])' not used. Assuming no dlopen support.\"\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t;;\n      esac\n\n      case $host in\n      *-*-darwin*)\n\t# Don't allow lazy linking, it breaks C++ global constructors\n\t# But is supposedly fixed on 10.4 or later (yay!).\n\tif test \"$tagname\" = CXX ; then\n\t  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in\n\t    10.[0123])\n\t      func_append compile_command \" ${wl}-bind_at_load\"\n\t      func_append finalize_command \" ${wl}-bind_at_load\"\n\t    ;;\n\t  esac\n\tfi\n\t# Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=\"$new_libs\"\n\n\n      func_append compile_command \" $compile_deplibs\"\n      func_append finalize_command \" $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`${ECHO} \"$libdir\" | ${SED} -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  ::) dllsearchpath=$libdir;;\n\t  *) func_append dllsearchpath \":$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=\"$rpath\"\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=\"$rpath\"\n\n      if test -n \"$libobjs\" && test \"$build_old_libs\" = yes; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$ECHO \"$compile_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$ECHO \"$finalize_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n      fi\n\n      func_generate_dlsyms \"$outputname\" \"@PROGRAM@\" \"no\"\n\n      # template prelinking step\n      if test -n \"$prelink_cmds\"; then\n\tfunc_execute_cmds \"$prelink_cmds\" 'exit $?'\n      fi\n\n      wrappers_required=yes\n      case $host in\n      *cegcc* | *mingw32ce*)\n        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.\n        wrappers_required=no\n        ;;\n      *cygwin* | *mingw* )\n        if test \"$build_libtool_libs\" != yes; then\n          wrappers_required=no\n        fi\n        ;;\n      *)\n        if test \"$need_relink\" = no || test \"$build_libtool_libs\" != yes; then\n          wrappers_required=no\n        fi\n        ;;\n      esac\n      if test \"$wrappers_required\" = no; then\n\t# Replace the output file specification.\n\tcompile_command=`$ECHO \"$compile_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=\"$compile_command$compile_rpath\"\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\texit_status=0\n\tfunc_show_eval \"$link_command\" 'exit_status=$?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\t# Delete the generated files.\n\tif test -f \"$output_objdir/${outputname}S.${objext}\"; then\n\t  func_show_eval '$RM \"$output_objdir/${outputname}S.${objext}\"'\n\tfi\n\n\texit $exit_status\n      fi\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test \"$no_install\" = yes; then\n\t# We don't need to create a wrapper script.\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\t# Replace the output file specification.\n\tlink_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$opt_dry_run || $RM $output\n\t# Link the executable and exit\n\tfunc_show_eval \"$link_command\" 'exit $?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$hardcode_action\" = relink; then\n\t# Fast installation is not supported\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\trelink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\n\tfunc_warning \"this platform does not like uninstalled shared libraries\"\n\tfunc_warning \"\\`$output' will be relinked during installation\"\n      else\n\tif test \"$fast_install\" != no; then\n\t  link_command=\"$finalize_var$compile_command$finalize_rpath\"\n\t  if test \"$fast_install\" = yes; then\n\t    relink_command=`$ECHO \"$compile_var$compile_command$compile_rpath\" | $SED 's%@OUTPUT@%\\$progdir/\\$file%g'`\n\t  else\n\t    # fast_install is set to needless\n\t    relink_command=\n\t  fi\n\telse\n\t  link_command=\"$compile_var$compile_command$compile_rpath\"\n\t  relink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\tfi\n      fi\n\n      # Replace the output file specification.\n      link_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      func_show_eval \"$link_command\" 'exit $?'\n\n      if test -n \"$postlink_cmds\"; then\n\tfunc_to_tool_file \"$output_objdir/$outputname\"\n\tpostlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\tfunc_execute_cmds \"$postlink_cmds\" 'exit $?'\n      fi\n\n      # Now create the wrapper script.\n      func_verbose \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    func_quote_for_eval \"$var_value\"\n\t    relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if not in dry run mode.\n      $opt_dry_run || {\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) func_stripname '' '.exe' \"$output\"\n\t         output=$func_stripname_result ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    func_stripname '' '.exe' \"$outputname\"\n\t    outputname=$func_stripname_result ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    func_dirname_and_basename \"$output\" \"\" \".\"\n\t    output_name=$func_basename_result\n\t    output_path=$func_dirname_result\n\t    cwrappersource=\"$output_path/$objdir/lt-$output_name.c\"\n\t    cwrapper=\"$output_path/$output_name.exe\"\n\t    $RM $cwrappersource $cwrapper\n\t    trap \"$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_cwrapperexe_src > $cwrappersource\n\n\t    # The wrapper executable is built using the $host compiler,\n\t    # because it contains $host paths and files. If cross-\n\t    # compiling, it, like the target executable, must be\n\t    # executed on the $host or under an emulation environment.\n\t    $opt_dry_run || {\n\t      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource\n\t      $STRIP $cwrapper\n\t    }\n\n\t    # Now, create the wrapper script for func_source use:\n\t    func_ltwrapper_scriptname $cwrapper\n\t    $RM $func_ltwrapper_scriptname_result\n\t    trap \"$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE\" 1 2 15\n\t    $opt_dry_run || {\n\t      # note: this script will not be executed, so do not chmod.\n\t      if test \"x$build\" = \"x$host\" ; then\n\t\t$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result\n\t      else\n\t\tfunc_emit_wrapper no > $func_ltwrapper_scriptname_result\n\t      fi\n\t    }\n\t  ;;\n\t  * )\n\t    $RM $output\n\t    trap \"$RM $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_wrapper no > $output\n\t    chmod +x $output\n\t  ;;\n\tesac\n      }\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      if test \"$build_libtool_libs\" = convenience; then\n\toldobjs=\"$libobjs_save $symfileobj\"\n\taddlibs=\"$convenience\"\n\tbuild_libtool_libs=no\n      else\n\tif test \"$build_libtool_libs\" = module; then\n\t  oldobjs=\"$libobjs_save\"\n\t  build_libtool_libs=no\n\telse\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\t  if test \"$preload\" = yes && test -f \"$symfileobj\"; then\n\t    func_append oldobjs \" $symfileobj\"\n\t  fi\n\tfi\n\taddlibs=\"$old_convenience\"\n      fi\n\n      if test -n \"$addlibs\"; then\n\tgentop=\"$output_objdir/${outputname}x\"\n\tfunc_append generated \" $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\tfunc_append oldobjs \" $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test \"$build_libtool_libs\" = yes; then\n\tcmds=$old_archive_from_new_cmds\n      else\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append oldobjs \" $func_extract_archives_result\"\n\tfi\n\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      func_basename \"$obj\"\n\t      $ECHO \"$func_basename_result\"\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  echo \"copying selected object files to avoid basename conflicts...\"\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  func_append generated \" $gentop\"\n\t  func_mkdir_p \"$gentop\"\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_basename \"$obj\"\n\t    objbase=\"$func_basename_result\"\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tfunc_arith $counter + 1\n\t\tcounter=$func_arith_result\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      func_show_eval \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      func_append oldobjs \" $gentop/$newobj\"\n\t      ;;\n\t    *) func_append oldobjs \" $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\tfunc_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n\ttool_oldlib=$func_to_tool_file_result\n\teval cmds=\\\"$old_archive_cmds\\\"\n\n\tfunc_len \" $cmds\"\n\tlen=$func_len_result\n\tif test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telif test -n \"$archiver_list_spec\"; then\n\t  func_verbose \"using command file archive linking...\"\n\t  for obj in $oldobjs\n\t  do\n\t    func_to_tool_file \"$obj\"\n\t    $ECHO \"$func_to_tool_file_result\"\n\t  done > $output_objdir/$libname.libcmd\n\t  func_to_tool_file \"$output_objdir/$libname.libcmd\"\n\t  oldobjs=\" $archiver_list_spec$func_to_tool_file_result\"\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  func_verbose \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  eval test_cmds=\\\"$old_archive_cmds\\\"\n\t  func_len \" $test_cmds\"\n\t  len0=$func_len_result\n\t  len=$len0\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_len \" $obj\"\n\t    func_arith $len + $func_len_result\n\t    len=$func_arith_result\n\t    func_append objlist \" $obj\"\n\t    if test \"$len\" -lt \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\" ; then\n\t\tRANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\${concat_cmds}$old_archive_cmds\\\"\n\t      objlist=\n\t      len=$len0\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test \"X$oldobjs\" = \"X\" ; then\n\t    eval cmds=\\\"\\$concat_cmds\\\"\n\t  else\n\t    eval cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\n\t  fi\n\tfi\n      fi\n      func_execute_cmds \"$cmds\" 'exit $?'\n    done\n\n    test -n \"$generated\" && \\\n      func_show_eval \"${RM}r$generated\"\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test \"$build_old_libs\" = yes && old_library=\"$libname.$libext\"\n      func_verbose \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  func_quote_for_eval \"$var_value\"\n\t  relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      if test \"$hardcode_automatic\" = yes ; then\n\trelink_command=\n      fi\n\n      # Only create the output if not a dry run.\n      $opt_dry_run || {\n\tfor installed in no yes; do\n\t  if test \"$installed\" = yes; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=\"$output_objdir/$outputname\"i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tfunc_basename \"$deplib\"\n\t\tname=\"$func_basename_result\"\n\t\tfunc_resolve_sysroot \"$deplib\"\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $func_resolve_sysroot_result`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$deplib' is not a valid libtool archive\"\n\t\tfunc_append newdependency_libs \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      -L*)\n\t\tfunc_stripname -L '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -L$func_replace_sysroot_result\"\n\t\t;;\n\t      -R*)\n\t\tfunc_stripname -R '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -R$func_replace_sysroot_result\"\n\t\t;;\n\t      *) func_append newdependency_libs \" $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=\"$newdependency_libs\"\n\t    newdlfiles=\n\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t      *.la)\n\t        func_basename \"$lib\"\n\t\tname=\"$func_basename_result\"\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlfiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      *) func_append newdlfiles \" $lib\" ;;\n\t      esac\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t      *.la)\n\t\t# Only pass preopened files to the pseudo-archive (for\n\t\t# eventual linking with the app. that links it) if we\n\t\t# didn't already link the preopened objects directly into\n\t\t# the library:\n\t\tfunc_basename \"$lib\"\n\t\tname=\"$func_basename_result\"\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlprefiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      esac\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlfiles \" $abs\"\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlprefiles \" $abs\"\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  fi\n\t  $RM $output\n\t  # place dlname in correct position for cygwin\n\t  # In fact, it would be nice if we could use this code for all target\n\t  # systems that can't hard-code library paths into their executables\n\t  # and that have no shared library path variable independent of PATH,\n\t  # but it turns out we can't easily determine that from inspecting\n\t  # libtool variables, so we have to hard-code the OSs to which it\n\t  # applies here; at the moment, that means platforms that use the PE\n\t  # object format with DLL files.  See the long comment at the top of\n\t  # tests/bindir.at for full details.\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)\n\t      # If a -bindir argument was supplied, place the dll there.\n\t      if test \"x$bindir\" != x ;\n\t      then\n\t\tfunc_relative_path \"$install_libdir\" \"$bindir\"\n\t\ttdlname=$func_relative_path_result$dlname\n\t      else\n\t\t# Otherwise fall back on heuristic.\n\t\ttdlname=../bin/$dlname\n\t      fi\n\t      ;;\n\t  esac\n\t  $ECHO > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Linker flags that can not go in dependency_libs.\ninherited_linker_flags='$new_inherited_linker_flags'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Names of additional weak libraries provided by this library\nweak_library_names='$weak_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test \"$installed\" = no && test \"$need_relink\" = yes; then\n\t    $ECHO >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      }\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      func_show_eval '( cd \"$output_objdir\" && $RM \"$outputname\" && $LN_S \"../$outputname\" \"$outputname\" )' 'exit $?'\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n}\n\n{ test \"$opt_mode\" = link || test \"$opt_mode\" = relink; } &&\n    func_mode_link ${1+\"$@\"}\n\n\n# func_mode_uninstall arg...\nfunc_mode_uninstall ()\n{\n    $opt_debug\n    RM=\"$nonopt\"\n    files=\n    rmforce=\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    for arg\n    do\n      case $arg in\n      -f) func_append RM \" $arg\"; rmforce=yes ;;\n      -*) func_append RM \" $arg\" ;;\n      *) func_append files \" $arg\" ;;\n      esac\n    done\n\n    test -z \"$RM\" && \\\n      func_fatal_help \"you must specify an RM program\"\n\n    rmdirs=\n\n    for file in $files; do\n      func_dirname \"$file\" \"\" \".\"\n      dir=\"$func_dirname_result\"\n      if test \"X$dir\" = X.; then\n\todir=\"$objdir\"\n      else\n\todir=\"$dir/$objdir\"\n      fi\n      func_basename \"$file\"\n      name=\"$func_basename_result\"\n      test \"$opt_mode\" = uninstall && odir=\"$dir\"\n\n      # Remember odir for removal later, being careful to avoid duplicates\n      if test \"$opt_mode\" = clean; then\n\tcase \" $rmdirs \" in\n\t  *\" $odir \"*) ;;\n\t  *) func_append rmdirs \" $odir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if { test -L \"$file\"; } >/dev/null 2>&1 ||\n\t { test -h \"$file\"; } >/dev/null 2>&1 ||\n\t test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif test \"$rmforce\" = yes; then\n\tcontinue\n      fi\n\n      rmfiles=\"$file\"\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif func_lalib_p \"$file\"; then\n\t  func_source $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    func_append rmfiles \" $odir/$n\"\n\t  done\n\t  test -n \"$old_library\" && func_append rmfiles \" $odir/$old_library\"\n\n\t  case \"$opt_mode\" in\n\t  clean)\n\t    case \" $library_names \" in\n\t    *\" $dlname \"*) ;;\n\t    *) test -n \"$dlname\" && func_append rmfiles \" $odir/$dlname\" ;;\n\t    esac\n\t    test -n \"$libdir\" && func_append rmfiles \" $odir/$name $odir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      func_execute_cmds \"$postuninstall_cmds\" 'test \"$rmforce\" = yes || exit_status=1'\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      func_execute_cmds \"$old_postuninstall_cmds\" 'test \"$rmforce\" = yes || exit_status=1'\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif func_lalib_p \"$file\"; then\n\n\t  # Read the .lo file\n\t  func_source $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" &&\n\t     test \"$pic_object\" != none; then\n\t    func_append rmfiles \" $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" &&\n\t     test \"$non_pic_object\" != none; then\n\t    func_append rmfiles \" $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test \"$opt_mode\" = clean ; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    func_stripname '' '.exe' \"$file\"\n\t    file=$func_stripname_result\n\t    func_stripname '' '.exe' \"$name\"\n\t    noexename=$func_stripname_result\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    func_append rmfiles \" $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if func_ltwrapper_p \"$file\"; then\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      relink_command=\n\t      func_source $func_ltwrapper_scriptname_result\n\t      func_append rmfiles \" $func_ltwrapper_scriptname_result\"\n\t    else\n\t      relink_command=\n\t      func_source $dir/$noexename\n\t    fi\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    func_append rmfiles \" $odir/$name $odir/${name}S.${objext}\"\n\t    if test \"$fast_install\" = yes && test -n \"$relink_command\"; then\n\t      func_append rmfiles \" $odir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\" ; then\n\t      func_append rmfiles \" $odir/lt-${noexename}.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      func_show_eval \"$RM $rmfiles\" 'exit_status=1'\n    done\n\n    # Try to remove the ${objdir}s in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\tfunc_show_eval \"rmdir $dir >/dev/null 2>&1\"\n      fi\n    done\n\n    exit $exit_status\n}\n\n{ test \"$opt_mode\" = uninstall || test \"$opt_mode\" = clean; } &&\n    func_mode_uninstall ${1+\"$@\"}\n\ntest -z \"$opt_mode\" && {\n  help=\"$generic_help\"\n  func_fatal_help \"you must specify a MODE\"\n}\n\ntest -z \"$exec_cmd\" && \\\n  func_fatal_help \"invalid operation mode \\`$opt_mode'\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec \"$exec_cmd\"\n  exit $EXIT_FAILURE\nfi\n\nexit $exit_status\n\n\n# The TAGs below are defined such that we never get into a situation\n# in which we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n# vi:sw=2\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/libltdl/m4/libtool.m4": "# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n#\n#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,\n#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n#                 Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\nm4_define([_LT_COPYING], [dnl\n#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,\n#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n#                 Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from http://www.gnu.org/licenses/gpl.html, or\n# obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n])\n\n# serial 57 LT_INIT\n\n\n# LT_PREREQ(VERSION)\n# ------------------\n# Complain and exit if this libtool version is less that VERSION.\nm4_defun([LT_PREREQ],\n[m4_if(m4_version_compare(m4_defn([LT_PACKAGE_VERSION]), [$1]), -1,\n       [m4_default([$3],\n\t\t   [m4_fatal([Libtool version $1 or higher is required],\n\t\t             63)])],\n       [$2])])\n\n\n# _LT_CHECK_BUILDDIR\n# ------------------\n# Complain if the absolute build directory name contains unusual characters\nm4_defun([_LT_CHECK_BUILDDIR],\n[case `pwd` in\n  *\\ * | *\\\t*)\n    AC_MSG_WARN([Libtool does not cope well with whitespace in `pwd`]) ;;\nesac\n])\n\n\n# LT_INIT([OPTIONS])\n# ------------------\nAC_DEFUN([LT_INIT],\n[AC_PREREQ([2.58])dnl We use AC_INCLUDES_DEFAULT\nAC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\nAC_BEFORE([$0], [LT_LANG])dnl\nAC_BEFORE([$0], [LT_OUTPUT])dnl\nAC_BEFORE([$0], [LTDL_INIT])dnl\nm4_require([_LT_CHECK_BUILDDIR])dnl\n\ndnl Autoconf doesn't catch unexpanded LT_ macros by default:\nm4_pattern_forbid([^_?LT_[A-Z_]+$])dnl\nm4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl\ndnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4\ndnl unless we require an AC_DEFUNed macro:\nAC_REQUIRE([LTOPTIONS_VERSION])dnl\nAC_REQUIRE([LTSUGAR_VERSION])dnl\nAC_REQUIRE([LTVERSION_VERSION])dnl\nAC_REQUIRE([LTOBSOLETE_VERSION])dnl\nm4_require([_LT_PROG_LTMAIN])dnl\n\n_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])\n\ndnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=\"$ltmain\"\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n_LT_SETUP\n\n# Only expand once:\nm4_define([LT_INIT])\n])# LT_INIT\n\n# Old names:\nAU_ALIAS([AC_PROG_LIBTOOL], [LT_INIT])\nAU_ALIAS([AM_PROG_LIBTOOL], [LT_INIT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PROG_LIBTOOL], [])\ndnl AC_DEFUN([AM_PROG_LIBTOOL], [])\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nm4_defun([_LT_CC_BASENAME],\n[for cc_temp in $1\"\"; do\n  case $cc_temp in\n    compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n    distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n    \\-*) ;;\n    *) break;;\n  esac\ndone\ncc_basename=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n])\n\n\n# _LT_FILEUTILS_DEFAULTS\n# ----------------------\n# It is okay to use these file commands and assume they have been set\n# sensibly after `m4_require([_LT_FILEUTILS_DEFAULTS])'.\nm4_defun([_LT_FILEUTILS_DEFAULTS],\n[: ${CP=\"cp -f\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n])# _LT_FILEUTILS_DEFAULTS\n\n\n# _LT_SETUP\n# ---------\nm4_defun([_LT_SETUP],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([_LT_PREPARE_SED_QUOTE_VARS])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\n\n_LT_DECL([], [PATH_SEPARATOR], [1], [The PATH separator for the build system])dnl\ndnl\n_LT_DECL([], [host_alias], [0], [The host system])dnl\n_LT_DECL([], [host], [0])dnl\n_LT_DECL([], [host_os], [0])dnl\ndnl\n_LT_DECL([], [build_alias], [0], [The build system])dnl\n_LT_DECL([], [build], [0])dnl\n_LT_DECL([], [build_os], [0])dnl\ndnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\ndnl\nAC_REQUIRE([AC_PROG_LN_S])dnl\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\n_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl\ndnl\nAC_REQUIRE([LT_CMD_MAX_LEN])dnl\n_LT_DECL([objext], [ac_objext], [0], [Object file suffix (normally \"o\")])dnl\n_LT_DECL([], [exeext], [0], [Executable file suffix (normally \"\")])dnl\ndnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PATH_CONVERSION_FUNCTIONS])dnl\nm4_require([_LT_CMD_RELOAD])dnl\nm4_require([_LT_CHECK_MAGIC_METHOD])dnl\nm4_require([_LT_CHECK_SHAREDLIB_FROM_LINKLIB])dnl\nm4_require([_LT_CMD_OLD_ARCHIVE])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_WITH_SYSROOT])dnl\n\n_LT_CONFIG_LIBTOOL_INIT([\n# See if we are running on zsh, and set the options which allow our\n# commands through without removal of \\ escapes INIT.\nif test -n \"\\${ZSH_VERSION+set}\" ; then\n   setopt NO_GLOB_SUBST\nfi\n])\nif test -n \"${ZSH_VERSION+set}\" ; then\n   setopt NO_GLOB_SUBST\nfi\n\n_LT_CHECK_OBJDIR\n\nm4_require([_LT_TAG_COMPILER])dnl\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test \"X${COLLECT_NAMES+set}\" != Xset; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Global variables:\nofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a `.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\n\nwith_gnu_ld=\"$lt_cv_prog_gnu_ld\"\n\nold_CC=\"$CC\"\nold_CFLAGS=\"$CFLAGS\"\n\n# Set sane defaults for various variables\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$LD\" && LD=ld\ntest -z \"$ac_objext\" && ac_objext=o\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    _LT_PATH_MAGIC\n  fi\n  ;;\nesac\n\n# Use C for the default configuration in the libtool script\nLT_SUPPORTED_TAG([CC])\n_LT_LANG_C_CONFIG\n_LT_LANG_DEFAULT_CONFIG\n_LT_CONFIG_COMMANDS\n])# _LT_SETUP\n\n\n# _LT_PREPARE_SED_QUOTE_VARS\n# --------------------------\n# Define a few sed substitution that help us do robust quoting.\nm4_defun([_LT_PREPARE_SED_QUOTE_VARS],\n[# Backslashify metacharacters that are still active within\n# double-quoted strings.\nsed_quote_subst='s/\\([[\"`$\\\\]]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([[\"`\\\\]]\\)/\\\\\\1/g'\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to delay expansion of an escaped single quote.\ndelay_single_quote_subst='s/'\\''/'\\'\\\\\\\\\\\\\\'\\''/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n])\n\n# _LT_PROG_LTMAIN\n# ---------------\n# Note that this code is called both from `configure', and `config.status'\n# now that we use AC_CONFIG_COMMANDS to generate libtool.  Notably,\n# `config.status' has no value for ac_aux_dir unless we are using Automake,\n# so we pass a copy along to make sure it has a sensible value anyway.\nm4_defun([_LT_PROG_LTMAIN],\n[m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([ltmain.sh])])dnl\n_LT_CONFIG_LIBTOOL_INIT([ac_aux_dir='$ac_aux_dir'])\nltmain=\"$ac_aux_dir/ltmain.sh\"\n])# _LT_PROG_LTMAIN\n\n\n## ------------------------------------- ##\n## Accumulate code for creating libtool. ##\n## ------------------------------------- ##\n\n# So that we can recreate a full libtool script including additional\n# tags, we accumulate the chunks of code to send to AC_CONFIG_COMMANDS\n# in macros and then make a single call at the end using the `libtool'\n# label.\n\n\n# _LT_CONFIG_LIBTOOL_INIT([INIT-COMMANDS])\n# ----------------------------------------\n# Register INIT-COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL_INIT],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_INIT],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_INIT])\n\n\n# _LT_CONFIG_LIBTOOL([COMMANDS])\n# ------------------------------\n# Register COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_COMMANDS],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])\n\n\n# _LT_CONFIG_SAVE_COMMANDS([COMMANDS], [INIT_COMMANDS])\n# -----------------------------------------------------\nm4_defun([_LT_CONFIG_SAVE_COMMANDS],\n[_LT_CONFIG_LIBTOOL([$1])\n_LT_CONFIG_LIBTOOL_INIT([$2])\n])\n\n\n# _LT_FORMAT_COMMENT([COMMENT])\n# -----------------------------\n# Add leading comment marks to the start of each line, and a trailing\n# full-stop to the whole comment if one is not present already.\nm4_define([_LT_FORMAT_COMMENT],\n[m4_ifval([$1], [\nm4_bpatsubst([m4_bpatsubst([$1], [^ *], [# ])],\n              [['`$\\]], [\\\\\\&])]m4_bmatch([$1], [[!?.]$], [], [.])\n)])\n\n\n\n## ------------------------ ##\n## FIXME: Eliminate VARNAME ##\n## ------------------------ ##\n\n\n# _LT_DECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION], [IS-TAGGED?])\n# -------------------------------------------------------------------\n# CONFIGNAME is the name given to the value in the libtool script.\n# VARNAME is the (base) name used in the configure script.\n# VALUE may be 0, 1 or 2 for a computed quote escaped value based on\n# VARNAME.  Any other value will be used directly.\nm4_define([_LT_DECL],\n[lt_if_append_uniq([lt_decl_varnames], [$2], [, ],\n    [lt_dict_add_subkey([lt_decl_dict], [$2], [libtool_name],\n\t[m4_ifval([$1], [$1], [$2])])\n    lt_dict_add_subkey([lt_decl_dict], [$2], [value], [$3])\n    m4_ifval([$4],\n\t[lt_dict_add_subkey([lt_decl_dict], [$2], [description], [$4])])\n    lt_dict_add_subkey([lt_decl_dict], [$2],\n\t[tagged?], [m4_ifval([$5], [yes], [no])])])\n])\n\n\n# _LT_TAGDECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION])\n# --------------------------------------------------------\nm4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])\n\n\n# lt_decl_tag_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_tag_varnames],\n[_lt_decl_filter([tagged?], [yes], $@)])\n\n\n# _lt_decl_filter(SUBKEY, VALUE, [SEPARATOR], [VARNAME1..])\n# ---------------------------------------------------------\nm4_define([_lt_decl_filter],\n[m4_case([$#],\n  [0], [m4_fatal([$0: too few arguments: $#])],\n  [1], [m4_fatal([$0: too few arguments: $#: $1])],\n  [2], [lt_dict_filter([lt_decl_dict], [$1], [$2], [], lt_decl_varnames)],\n  [3], [lt_dict_filter([lt_decl_dict], [$1], [$2], [$3], lt_decl_varnames)],\n  [lt_dict_filter([lt_decl_dict], $@)])[]dnl\n])\n\n\n# lt_decl_quote_varnames([SEPARATOR], [VARNAME1...])\n# --------------------------------------------------\nm4_define([lt_decl_quote_varnames],\n[_lt_decl_filter([value], [1], $@)])\n\n\n# lt_decl_dquote_varnames([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_dquote_varnames],\n[_lt_decl_filter([value], [2], $@)])\n\n\n# lt_decl_varnames_tagged([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_varnames_tagged],\n[m4_assert([$# <= 2])dnl\n_$0(m4_quote(m4_default([$1], [[, ]])),\n    m4_ifval([$2], [[$2]], [m4_dquote(lt_decl_tag_varnames)]),\n    m4_split(m4_normalize(m4_quote(_LT_TAGS)), [ ]))])\nm4_define([_lt_decl_varnames_tagged],\n[m4_ifval([$3], [lt_combine([$1], [$2], [_], $3)])])\n\n\n# lt_decl_all_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_all_varnames],\n[_$0(m4_quote(m4_default([$1], [[, ]])),\n     m4_if([$2], [],\n\t   m4_quote(lt_decl_varnames),\n\tm4_quote(m4_shift($@))))[]dnl\n])\nm4_define([_lt_decl_all_varnames],\n[lt_join($@, lt_decl_varnames_tagged([$1],\n\t\t\tlt_decl_tag_varnames([[, ]], m4_shift($@))))dnl\n])\n\n\n# _LT_CONFIG_STATUS_DECLARE([VARNAME])\n# ------------------------------------\n# Quote a variable value, and forward it to `config.status' so that its\n# declaration there will have the same value as in `configure'.  VARNAME\n# must have a single quote delimited value for this to work.\nm4_define([_LT_CONFIG_STATUS_DECLARE],\n[$1='`$ECHO \"$][$1\" | $SED \"$delay_single_quote_subst\"`'])\n\n\n# _LT_CONFIG_STATUS_DECLARATIONS\n# ------------------------------\n# We delimit libtool config variables with single quotes, so when\n# we write them to config.status, we have to be sure to quote all\n# embedded single quotes properly.  In configure, this macro expands\n# each variable declared with _LT_DECL (and _LT_TAGDECL) into:\n#\n#    <var>='`$ECHO \"$<var>\" | $SED \"$delay_single_quote_subst\"`'\nm4_defun([_LT_CONFIG_STATUS_DECLARATIONS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_all_varnames),\n    [m4_n([_LT_CONFIG_STATUS_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAGS\n# ----------------\n# Output comment and list of tags supported by the script\nm4_defun([_LT_LIBTOOL_TAGS],\n[_LT_FORMAT_COMMENT([The names of the tagged configurations supported by this script])dnl\navailable_tags=\"_LT_TAGS\"dnl\n])\n\n\n# _LT_LIBTOOL_DECLARE(VARNAME, [TAG])\n# -----------------------------------\n# Extract the dictionary values for VARNAME (optionally with TAG) and\n# expand to a commented shell variable setting:\n#\n#    # Some comment about what VAR is for.\n#    visible_name=$lt_internal_name\nm4_define([_LT_LIBTOOL_DECLARE],\n[_LT_FORMAT_COMMENT(m4_quote(lt_dict_fetch([lt_decl_dict], [$1],\n\t\t\t\t\t   [description])))[]dnl\nm4_pushdef([_libtool_name],\n    m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [libtool_name])))[]dnl\nm4_case(m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [value])),\n    [0], [_libtool_name=[$]$1],\n    [1], [_libtool_name=$lt_[]$1],\n    [2], [_libtool_name=$lt_[]$1],\n    [_libtool_name=lt_dict_fetch([lt_decl_dict], [$1], [value])])[]dnl\nm4_ifval([$2], [_$2])[]m4_popdef([_libtool_name])[]dnl\n])\n\n\n# _LT_LIBTOOL_CONFIG_VARS\n# -----------------------\n# Produce commented declarations of non-tagged libtool config variables\n# suitable for insertion in the LIBTOOL CONFIG section of the `libtool'\n# script.  Tagged libtool config variables (even for the LIBTOOL CONFIG\n# section) are produced by _LT_LIBTOOL_TAG_VARS.\nm4_defun([_LT_LIBTOOL_CONFIG_VARS],\n[m4_foreach([_lt_var],\n    m4_quote(_lt_decl_filter([tagged?], [no], [], lt_decl_varnames)),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAG_VARS(TAG)\n# -------------------------\nm4_define([_LT_LIBTOOL_TAG_VARS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_tag_varnames),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var, [$1])])])])\n\n\n# _LT_TAGVAR(VARNAME, [TAGNAME])\n# ------------------------------\nm4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])\n\n\n# _LT_CONFIG_COMMANDS\n# -------------------\n# Send accumulated output to $CONFIG_STATUS.  Thanks to the lists of\n# variables for single and double quote escaping we saved from calls\n# to _LT_DECL, we can put quote escaped variables declarations\n# into `config.status', and then the shell code to quote escape them in\n# for loops in `config.status'.  Finally, any additional code accumulated\n# from calls to _LT_CONFIG_LIBTOOL_INIT is expanded.\nm4_defun([_LT_CONFIG_COMMANDS],\n[AC_PROVIDE_IFELSE([LT_OUTPUT],\n\tdnl If the libtool generation code has been placed in $CONFIG_LT,\n\tdnl instead of duplicating it all over again into config.status,\n\tdnl then we will have config.status run $CONFIG_LT later, so it\n\tdnl needs to know what name is stored there:\n        [AC_CONFIG_COMMANDS([libtool],\n            [$SHELL $CONFIG_LT || AS_EXIT(1)], [CONFIG_LT='$CONFIG_LT'])],\n    dnl If the libtool generation code is destined for config.status,\n    dnl expand the accumulated commands and init code now:\n    [AC_CONFIG_COMMANDS([libtool],\n        [_LT_OUTPUT_LIBTOOL_COMMANDS], [_LT_OUTPUT_LIBTOOL_COMMANDS_INIT])])\n])#_LT_CONFIG_COMMANDS\n\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],\n[\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nsed_quote_subst='$sed_quote_subst'\ndouble_quote_subst='$double_quote_subst'\ndelay_variable_subst='$delay_variable_subst'\n_LT_CONFIG_STATUS_DECLARATIONS\nLTCC='$LTCC'\nLTCFLAGS='$LTCFLAGS'\ncompiler='$compiler_DEFAULT'\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$[]1\n_LTECHO_EOF'\n}\n\n# Quote evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_quote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED \\\\\"\\\\\\$sed_quote_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\"\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n# Double-quote double-evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_dquote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED -e \\\\\"\\\\\\$double_quote_subst\\\\\" -e \\\\\"\\\\\\$sed_quote_subst\\\\\" -e \\\\\"\\\\\\$delay_variable_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\"\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n_LT_OUTPUT_LIBTOOL_INIT\n])\n\n# _LT_GENERATED_FILE_INIT(FILE, [COMMENT])\n# ------------------------------------\n# Generate a child script FILE with all initialization necessary to\n# reuse the environment learned by the parent script, and make the\n# file executable.  If COMMENT is supplied, it is inserted after the\n# `#!' sequence but before initialization text begins.  After this\n# macro, additional text can be appended to FILE to form the body of\n# the child script.  The macro ends with non-zero status if the\n# file could not be fully written (such as if the disk is full).\nm4_ifdef([AS_INIT_GENERATED],\n[m4_defun([_LT_GENERATED_FILE_INIT],[AS_INIT_GENERATED($@)])],\n[m4_defun([_LT_GENERATED_FILE_INIT],\n[m4_require([AS_PREPARE])]dnl\n[m4_pushdef([AS_MESSAGE_LOG_FD])]dnl\n[lt_write_fail=0\ncat >$1 <<_ASEOF || lt_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n$2\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$1 <<\\_ASEOF || lt_write_fail=1\nAS_SHELL_SANITIZE\n_AS_PREPARE\nexec AS_MESSAGE_FD>&1\n_ASEOF\ntest $lt_write_fail = 0 && chmod +x $1[]dnl\nm4_popdef([AS_MESSAGE_LOG_FD])])])# _LT_GENERATED_FILE_INIT\n\n# LT_OUTPUT\n# ---------\n# This macro allows early generation of the libtool script (before\n# AC_OUTPUT is called), incase it is used in configure for compilation\n# tests.\nAC_DEFUN([LT_OUTPUT],\n[: ${CONFIG_LT=./config.lt}\nAC_MSG_NOTICE([creating $CONFIG_LT])\n_LT_GENERATED_FILE_INIT([\"$CONFIG_LT\"],\n[# Run this file to recreate a libtool stub with the current configuration.])\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nlt_cl_silent=false\nexec AS_MESSAGE_LOG_FD>>config.log\n{\n  echo\n  AS_BOX([Running $as_me.])\n} >&AS_MESSAGE_LOG_FD\n\nlt_cl_help=\"\\\n\\`$as_me' creates a local libtool stub from the current configuration,\nfor use in further configure time tests before the real libtool is\ngenerated.\n\nUsage: $[0] [[OPTIONS]]\n\n  -h, --help      print this help, then exit\n  -V, --version   print version number, then exit\n  -q, --quiet     do not print progress messages\n  -d, --debug     don't remove temporary files\n\nReport bugs to <bug-libtool@gnu.org>.\"\n\nlt_cl_version=\"\\\nm4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl\nm4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])\nconfigured by $[0], generated by m4_PACKAGE_STRING.\n\nCopyright (C) 2011 Free Software Foundation, Inc.\nThis config.lt script is free software; the Free Software Foundation\ngives unlimited permision to copy, distribute and modify it.\"\n\nwhile test $[#] != 0\ndo\n  case $[1] in\n    --version | --v* | -V )\n      echo \"$lt_cl_version\"; exit 0 ;;\n    --help | --h* | -h )\n      echo \"$lt_cl_help\"; exit 0 ;;\n    --debug | --d* | -d )\n      debug=: ;;\n    --quiet | --q* | --silent | --s* | -q )\n      lt_cl_silent=: ;;\n\n    -*) AC_MSG_ERROR([unrecognized option: $[1]\nTry \\`$[0] --help' for more information.]) ;;\n\n    *) AC_MSG_ERROR([unrecognized argument: $[1]\nTry \\`$[0] --help' for more information.]) ;;\n  esac\n  shift\ndone\n\nif $lt_cl_silent; then\n  exec AS_MESSAGE_FD>/dev/null\nfi\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<_LTEOF\n_LT_OUTPUT_LIBTOOL_COMMANDS_INIT\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nAC_MSG_NOTICE([creating $ofile])\n_LT_OUTPUT_LIBTOOL_COMMANDS\nAS_EXIT(0)\n_LTEOF\nchmod +x \"$CONFIG_LT\"\n\n# configure is writing to config.log, but config.lt does its own redirection,\n# appending to config.log, which fails on DOS, as config.log is still kept\n# open by configure.  Here we exec the FD to /dev/null, effectively closing\n# config.log, so it can be properly (re)opened and appended to by config.lt.\nlt_cl_success=:\ntest \"$silent\" = yes &&\n  lt_config_lt_args=\"$lt_config_lt_args --quiet\"\nexec AS_MESSAGE_LOG_FD>/dev/null\n$SHELL \"$CONFIG_LT\" $lt_config_lt_args || lt_cl_success=false\nexec AS_MESSAGE_LOG_FD>>config.log\n$lt_cl_success || AS_EXIT(1)\n])# LT_OUTPUT\n\n\n# _LT_CONFIG(TAG)\n# ---------------\n# If TAG is the built-in tag, create an initial libtool script with a\n# default configuration from the untagged config vars.  Otherwise add code\n# to config.status for appending the configuration named by TAG from the\n# matching tagged config vars.\nm4_defun([_LT_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_CONFIG_SAVE_COMMANDS([\n  m4_define([_LT_TAG], m4_if([$1], [], [C], [$1]))dnl\n  m4_if(_LT_TAG, [C], [\n    # See if we are running on zsh, and set the options which allow our\n    # commands through without removal of \\ escapes.\n    if test -n \"${ZSH_VERSION+set}\" ; then\n      setopt NO_GLOB_SUBST\n    fi\n\n    cfgfile=\"${ofile}T\"\n    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n    $RM \"$cfgfile\"\n\n    cat <<_LT_EOF >> \"$cfgfile\"\n#! $SHELL\n\n# `$ECHO \"$ofile\" | sed 's%^.*/%%'` - Provide generalized library-building support services.\n# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION\n# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n#\n_LT_COPYING\n_LT_LIBTOOL_TAGS\n\n# ### BEGIN LIBTOOL CONFIG\n_LT_LIBTOOL_CONFIG_VARS\n_LT_LIBTOOL_TAG_VARS\n# ### END LIBTOOL CONFIG\n\n_LT_EOF\n\n  case $host_os in\n  aix3*)\n    cat <<\\_LT_EOF >> \"$cfgfile\"\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test \"X${COLLECT_NAMES+set}\" != Xset; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\n_LT_EOF\n    ;;\n  esac\n\n  _LT_PROG_LTMAIN\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" \\\n     || (rm -f \"$cfgfile\"; exit 1)\n\n  _LT_PROG_REPLACE_SHELLFNS\n\n   mv -f \"$cfgfile\" \"$ofile\" ||\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n],\n[cat <<_LT_EOF >> \"$ofile\"\n\ndnl Unfortunately we have to use $1 here, since _LT_TAG is not expanded\ndnl in a comment (ie after a #).\n# ### BEGIN LIBTOOL TAG CONFIG: $1\n_LT_LIBTOOL_TAG_VARS(_LT_TAG)\n# ### END LIBTOOL TAG CONFIG: $1\n_LT_EOF\n])dnl /m4_if\n],\n[m4_if([$1], [], [\n    PACKAGE='$PACKAGE'\n    VERSION='$VERSION'\n    TIMESTAMP='$TIMESTAMP'\n    RM='$RM'\n    ofile='$ofile'], [])\n])dnl /_LT_CONFIG_SAVE_COMMANDS\n])# _LT_CONFIG\n\n\n# LT_SUPPORTED_TAG(TAG)\n# ---------------------\n# Trace this macro to discover what tags are supported by the libtool\n# --tag option, using:\n#    autoconf --trace 'LT_SUPPORTED_TAG:$1'\nAC_DEFUN([LT_SUPPORTED_TAG], [])\n\n\n# C support is built-in for now\nm4_define([_LT_LANG_C_enabled], [])\nm4_define([_LT_TAGS], [])\n\n\n# LT_LANG(LANG)\n# -------------\n# Enable libtool support for the given language if not already enabled.\nAC_DEFUN([LT_LANG],\n[AC_BEFORE([$0], [LT_OUTPUT])dnl\nm4_case([$1],\n  [C],\t\t\t[_LT_LANG(C)],\n  [C++],\t\t[_LT_LANG(CXX)],\n  [Go],\t\t\t[_LT_LANG(GO)],\n  [Java],\t\t[_LT_LANG(GCJ)],\n  [Fortran 77],\t\t[_LT_LANG(F77)],\n  [Fortran],\t\t[_LT_LANG(FC)],\n  [Windows Resource],\t[_LT_LANG(RC)],\n  [m4_ifdef([_LT_LANG_]$1[_CONFIG],\n    [_LT_LANG($1)],\n    [m4_fatal([$0: unsupported language: \"$1\"])])])dnl\n])# LT_LANG\n\n\n# _LT_LANG(LANGNAME)\n# ------------------\nm4_defun([_LT_LANG],\n[m4_ifdef([_LT_LANG_]$1[_enabled], [],\n  [LT_SUPPORTED_TAG([$1])dnl\n  m4_append([_LT_TAGS], [$1 ])dnl\n  m4_define([_LT_LANG_]$1[_enabled], [])dnl\n  _LT_LANG_$1_CONFIG($1)])dnl\n])# _LT_LANG\n\n\nm4_ifndef([AC_PROG_GO], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_GO.  When it is available in    #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\nm4_defun([AC_PROG_GO],\n[AC_LANG_PUSH(Go)dnl\nAC_ARG_VAR([GOC],     [Go compiler command])dnl\nAC_ARG_VAR([GOFLAGS], [Go compiler flags])dnl\n_AC_ARG_VAR_LDFLAGS()dnl\nAC_CHECK_TOOL(GOC, gccgo)\nif test -z \"$GOC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    AC_CHECK_PROG(GOC, [${ac_tool_prefix}gccgo], [${ac_tool_prefix}gccgo])\n  fi\nfi\nif test -z \"$GOC\"; then\n  AC_CHECK_PROG(GOC, gccgo, gccgo, false)\nfi\n])#m4_defun\n])#m4_ifndef\n\n\n# _LT_LANG_DEFAULT_CONFIG\n# -----------------------\nm4_defun([_LT_LANG_DEFAULT_CONFIG],\n[AC_PROVIDE_IFELSE([AC_PROG_CXX],\n  [LT_LANG(CXX)],\n  [m4_define([AC_PROG_CXX], defn([AC_PROG_CXX])[LT_LANG(CXX)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_F77],\n  [LT_LANG(F77)],\n  [m4_define([AC_PROG_F77], defn([AC_PROG_F77])[LT_LANG(F77)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_FC],\n  [LT_LANG(FC)],\n  [m4_define([AC_PROG_FC], defn([AC_PROG_FC])[LT_LANG(FC)])])\n\ndnl The call to [A][M_PROG_GCJ] is quoted like that to stop aclocal\ndnl pulling things in needlessly.\nAC_PROVIDE_IFELSE([AC_PROG_GCJ],\n  [LT_LANG(GCJ)],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n    [LT_LANG(GCJ)],\n    [AC_PROVIDE_IFELSE([LT_PROG_GCJ],\n      [LT_LANG(GCJ)],\n      [m4_ifdef([AC_PROG_GCJ],\n\t[m4_define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([A][M_PROG_GCJ],\n\t[m4_define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([LT_PROG_GCJ],\n\t[m4_define([LT_PROG_GCJ], defn([LT_PROG_GCJ])[LT_LANG(GCJ)])])])])])\n\nAC_PROVIDE_IFELSE([AC_PROG_GO],\n  [LT_LANG(GO)],\n  [m4_define([AC_PROG_GO], defn([AC_PROG_GO])[LT_LANG(GO)])])\n\nAC_PROVIDE_IFELSE([LT_PROG_RC],\n  [LT_LANG(RC)],\n  [m4_define([LT_PROG_RC], defn([LT_PROG_RC])[LT_LANG(RC)])])\n])# _LT_LANG_DEFAULT_CONFIG\n\n# Obsolete macros:\nAU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])\nAU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])\nAU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])\nAU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])\nAU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_CXX], [])\ndnl AC_DEFUN([AC_LIBTOOL_F77], [])\ndnl AC_DEFUN([AC_LIBTOOL_FC], [])\ndnl AC_DEFUN([AC_LIBTOOL_GCJ], [])\ndnl AC_DEFUN([AC_LIBTOOL_RC], [])\n\n\n# _LT_TAG_COMPILER\n# ----------------\nm4_defun([_LT_TAG_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n_LT_DECL([LTCC], [CC], [1], [A C compiler])dnl\n_LT_DECL([LTCFLAGS], [CFLAGS], [1], [LTCC compiler flags])dnl\n_LT_TAGDECL([CC], [compiler], [1], [A language specific compiler])dnl\n_LT_TAGDECL([with_gcc], [GCC], [0], [Is the compiler the GNU compiler?])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_TAG_COMPILER\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nm4_defun([_LT_COMPILER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nm4_defun([_LT_LINKER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n])# _LT_LINKER_BOILERPLATE\n\n# _LT_REQUIRED_DARWIN_CHECKS\n# -------------------------\nm4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[\n  case $host_os in\n    rhapsody* | darwin*)\n    AC_CHECK_TOOL([DSYMUTIL], [dsymutil], [:])\n    AC_CHECK_TOOL([NMEDIT], [nmedit], [:])\n    AC_CHECK_TOOL([LIPO], [lipo], [:])\n    AC_CHECK_TOOL([OTOOL], [otool], [:])\n    AC_CHECK_TOOL([OTOOL64], [otool64], [:])\n    _LT_DECL([], [DSYMUTIL], [1],\n      [Tool to manipulate archived DWARF debug symbol files on Mac OS X])\n    _LT_DECL([], [NMEDIT], [1],\n      [Tool to change global to local symbols on Mac OS X])\n    _LT_DECL([], [LIPO], [1],\n      [Tool to manipulate fat objects and archives on Mac OS X])\n    _LT_DECL([], [OTOOL], [1],\n      [ldd/readelf like tool for Mach-O binaries on Mac OS X])\n    _LT_DECL([], [OTOOL64], [1],\n      [ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4])\n\n    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],\n      [lt_cv_apple_cc_single_mod=no\n      if test -z \"${LT_MULTI_MODULE}\"; then\n\t# By default we will add the -single_module flag. You can override\n\t# by either setting the environment variable LT_MULTI_MODULE\n\t# non-empty at configure time, or by adding -multi_module to the\n\t# link flags.\n\trm -rf libconftest.dylib*\n\techo \"int foo(void){return 1;}\" > conftest.c\n\techo \"$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n-dynamiclib -Wl,-single_module conftest.c\" >&AS_MESSAGE_LOG_FD\n\t$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n\t  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err\n        _lt_result=$?\n\t# If there is a non-empty error log, and \"single_module\"\n\t# appears in it, assume the flag caused a linker warning\n        if test -s conftest.err && $GREP single_module conftest.err; then\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\t# Otherwise, if the output was created with a 0 exit code from\n\t# the compiler, it worked.\n\telif test -f libconftest.dylib && test $_lt_result -eq 0; then\n\t  lt_cv_apple_cc_single_mod=yes\n\telse\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\tfi\n\trm -rf libconftest.dylib*\n\trm -f conftest.*\n      fi])\n\n    AC_CACHE_CHECK([for -exported_symbols_list linker flag],\n      [lt_cv_ld_exported_symbols_list],\n      [lt_cv_ld_exported_symbols_list=no\n      save_LDFLAGS=$LDFLAGS\n      echo \"_main\" > conftest.sym\n      LDFLAGS=\"$LDFLAGS -Wl,-exported_symbols_list,conftest.sym\"\n      AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n\t[lt_cv_ld_exported_symbols_list=yes],\n\t[lt_cv_ld_exported_symbols_list=no])\n\tLDFLAGS=\"$save_LDFLAGS\"\n    ])\n\n    AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],\n      [lt_cv_ld_force_load=no\n      cat > conftest.c << _LT_EOF\nint forced_loaded() { return 2;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS -c -o conftest.o conftest.c\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&AS_MESSAGE_LOG_FD\n      echo \"$AR cru libconftest.a conftest.o\" >&AS_MESSAGE_LOG_FD\n      $AR cru libconftest.a conftest.o 2>&AS_MESSAGE_LOG_FD\n      echo \"$RANLIB libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $RANLIB libconftest.a 2>&AS_MESSAGE_LOG_FD\n      cat > conftest.c << _LT_EOF\nint main() { return 0;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err\n      _lt_result=$?\n      if test -s conftest.err && $GREP force_load conftest.err; then\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      elif test -f conftest && test $_lt_result -eq 0 && $GREP forced_load conftest >/dev/null 2>&1 ; then\n\tlt_cv_ld_force_load=yes\n      else\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      fi\n        rm -f conftest.err libconftest.a conftest conftest.c\n        rm -rf conftest.dSYM\n    ])\n    case $host_os in\n    rhapsody* | darwin1.[[012]])\n      _lt_dar_allow_undefined='${wl}-undefined ${wl}suppress' ;;\n    darwin1.*)\n      _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;\n    darwin*) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don't you love it?\n      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n\t10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)\n\t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n\t10.[[012]]*)\n\t  _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;\n\t10.*)\n\t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n      esac\n    ;;\n  esac\n    if test \"$lt_cv_apple_cc_single_mod\" = \"yes\"; then\n      _lt_dar_single_mod='$single_module'\n    fi\n    if test \"$lt_cv_ld_exported_symbols_list\" = \"yes\"; then\n      _lt_dar_export_syms=' ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'\n    else\n      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/${libname}-symbols.expsym ${lib}'\n    fi\n    if test \"$DSYMUTIL\" != \":\" && test \"$lt_cv_ld_force_load\" = \"no\"; then\n      _lt_dsymutil='~$DSYMUTIL $lib || :'\n    else\n      _lt_dsymutil=\n    fi\n    ;;\n  esac\n])\n\n\n# _LT_DARWIN_LINKER_FEATURES([TAG])\n# ---------------------------------\n# Checks for linker and compiler features on darwin\nm4_defun([_LT_DARWIN_LINKER_FEATURES],\n[\n  m4_require([_LT_REQUIRED_DARWIN_CHECKS])\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_automatic, $1)=yes\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  if test \"$lt_cv_ld_force_load\" = \"yes\"; then\n    _LT_TAGVAR(whole_archive_flag_spec, $1)='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience ${wl}-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n    m4_case([$1], [F77], [_LT_TAGVAR(compiler_needs_object, $1)=yes],\n                  [FC],  [_LT_TAGVAR(compiler_needs_object, $1)=yes])\n  else\n    _LT_TAGVAR(whole_archive_flag_spec, $1)=''\n  fi\n  _LT_TAGVAR(link_all_deplibs, $1)=yes\n  _LT_TAGVAR(allow_undefined_flag, $1)=\"$_lt_dar_allow_undefined\"\n  case $cc_basename in\n     ifort*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test \"$_lt_dar_can_shared\" = \"yes\"; then\n    output_verbose_link_cmd=func_echo_all\n    _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod${_lt_dsymutil}\"\n    _LT_TAGVAR(module_cmds, $1)=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags${_lt_dsymutil}\"\n    _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring ${_lt_dar_single_mod}${_lt_dar_export_syms}${_lt_dsymutil}\"\n    _LT_TAGVAR(module_expsym_cmds, $1)=\"sed -e 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags${_lt_dar_export_syms}${_lt_dsymutil}\"\n    m4_if([$1], [CXX],\n[   if test \"$lt_cv_apple_cc_single_mod\" != \"yes\"; then\n      _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -r -keep_private_externs -nostdlib -o \\${lib}-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\${lib}-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring${_lt_dsymutil}\"\n      _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC -r -keep_private_externs -nostdlib -o \\${lib}-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\${lib}-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring${_lt_dar_export_syms}${_lt_dsymutil}\"\n    fi\n],[])\n  else\n  _LT_TAGVAR(ld_shlibs, $1)=no\n  fi\n])\n\n# _LT_SYS_MODULE_PATH_AIX([TAGNAME])\n# ----------------------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\n# Store the results from the different compilers for each TAGNAME.\n# Allow to override them for all tags through lt_cv_aix_libpath.\nm4_defun([_LT_SYS_MODULE_PATH_AIX],\n[m4_require([_LT_DECL_SED])dnl\nif test \"${lt_cv_aix_libpath+set}\" = set; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  AC_CACHE_VAL([_LT_TAGVAR([lt_cv_aix_libpath_], [$1])],\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM],[\n  lt_aix_libpath_sed='[\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }]'\n  _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi],[])\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=\"/usr/lib:/lib\"\n  fi\n  ])\n  aix_libpath=$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\nfi\n])# _LT_SYS_MODULE_PATH_AIX\n\n\n# _LT_SHELL_INIT(ARG)\n# -------------------\nm4_define([_LT_SHELL_INIT],\n[m4_divert_text([M4SH-INIT], [$1\n])])# _LT_SHELL_INIT\n\n\n\n# _LT_PROG_ECHO_BACKSLASH\n# -----------------------\n# Find how we can fake an echo command that does not interpret backslash.\n# In particular, with Autoconf 2.60 or later we add some code to the start\n# of the generated configure script which will find a shell with a builtin\n# printf (which we can use as an echo command).\nm4_defun([_LT_PROG_ECHO_BACKSLASH],\n[ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n\nAC_MSG_CHECKING([how to print strings])\n# Test print first, because it will be a builtin if present.\nif test \"X`( print -r -- -n ) 2>/dev/null`\" = X-n && \\\n   test \"X`print -r -- $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='print -r --'\nelif test \"X`printf %s $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='printf %s\\n'\nelse\n  # Use this function as a fallback that always works.\n  func_fallback_echo ()\n  {\n    eval 'cat <<_LTECHO_EOF\n$[]1\n_LTECHO_EOF'\n  }\n  ECHO='func_fallback_echo'\nfi\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\" \n}\n\ncase \"$ECHO\" in\n  printf*) AC_MSG_RESULT([printf]) ;;\n  print*) AC_MSG_RESULT([print -r]) ;;\n  *) AC_MSG_RESULT([cat]) ;;\nesac\n\nm4_ifdef([_AS_DETECT_SUGGESTED],\n[_AS_DETECT_SUGGESTED([\n  test -n \"${ZSH_VERSION+set}${BASH_VERSION+set}\" || (\n    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n    PATH=/empty FPATH=/empty; export PATH FPATH\n    test \"X`printf %s $ECHO`\" = \"X$ECHO\" \\\n      || test \"X`print -r -- $ECHO`\" = \"X$ECHO\" )])])\n\n_LT_DECL([], [SHELL], [1], [Shell to use when invoking shell scripts])\n_LT_DECL([], [ECHO], [1], [An echo program that protects backslashes])\n])# _LT_PROG_ECHO_BACKSLASH\n\n\n# _LT_WITH_SYSROOT\n# ----------------\nAC_DEFUN([_LT_WITH_SYSROOT],\n[AC_MSG_CHECKING([for sysroot])\nAC_ARG_WITH([sysroot],\n[  --with-sysroot[=DIR] Search for dependent libraries within DIR\n                        (or the compiler's sysroot if not specified).],\n[], [with_sysroot=no])\n\ndnl lt_sysroot will always be passed unquoted.  We quote it here\ndnl in case the user passed a directory name.\nlt_sysroot=\ncase ${with_sysroot} in #(\n yes)\n   if test \"$GCC\" = yes; then\n     lt_sysroot=`$CC --print-sysroot 2>/dev/null`\n   fi\n   ;; #(\n /*)\n   lt_sysroot=`echo \"$with_sysroot\" | sed -e \"$sed_quote_subst\"`\n   ;; #(\n no|'')\n   ;; #(\n *)\n   AC_MSG_RESULT([${with_sysroot}])\n   AC_MSG_ERROR([The sysroot must be an absolute path.])\n   ;;\nesac\n\n AC_MSG_RESULT([${lt_sysroot:-no}])\n_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl\n[dependent libraries, and in which our libraries should be installed.])])\n\n# _LT_ENABLE_LOCK\n# ---------------\nm4_defun([_LT_ENABLE_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n  [AS_HELP_STRING([--disable-libtool-lock],\n    [avoid locking (might break parallel builds)])])\ntest \"x$enable_libtool_lock\" != xno && enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n      *ELF-32*)\n\tHPUX_IA64_MODE=\"32\"\n\t;;\n      *ELF-64*)\n\tHPUX_IA64_MODE=\"64\"\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out which ABI we are using.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    if test \"$lt_cv_prog_gnu_ld\" = yes; then\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -melf32bsmip\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -melf32bmipn32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -melf64bmip\"\n\t;;\n      esac\n    else\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -32\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -n32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -64\"\n\t  ;;\n      esac\n    fi\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*kfreebsd*-gnu|x86_64-*linux*|ppc*-*linux*|powerpc*-*linux*| \\\ns390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n      *32-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_i386\"\n\t    ;;\n\t  ppc64-*linux*|powerpc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32ppclinux\"\n\t    ;;\n\t  s390x-*linux*)\n\t    LD=\"${LD-ld} -m elf_s390\"\n\t    ;;\n\t  sparc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32_sparc\"\n\t    ;;\n\tesac\n\t;;\n      *64-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_x86_64_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_x86_64\"\n\t    ;;\n\t  ppc*-*linux*|powerpc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64ppc\"\n\t    ;;\n\t  s390*-*linux*|s390*-*tpf*)\n\t    LD=\"${LD-ld} -m elf64_s390\"\n\t    ;;\n\t  sparc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64_sparc\"\n\t    ;;\n\tesac\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test x\"$lt_cv_cc_needs_belf\" != x\"yes\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=\"$SAVE_CFLAGS\"\n  fi\n  ;;\n*-*solaris*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*)\n        case $host in\n        i?86-*-solaris*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        sparc*-*-solaris*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n        esac\n        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n          LD=\"${LD-ld}_sol2\"\n        fi\n        ;;\n      *)\n\tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n\t  LD=\"${LD-ld} -64\"\n\tfi\n\t;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\nesac\n\nneed_locks=\"$enable_libtool_lock\"\n])# _LT_ENABLE_LOCK\n\n\n# _LT_PROG_AR\n# -----------\nm4_defun([_LT_PROG_AR],\n[AC_CHECK_TOOLS(AR, [ar], false)\n: ${AR=ar}\n: ${AR_FLAGS=cru}\n_LT_DECL([], [AR], [1], [The archiver])\n_LT_DECL([], [AR_FLAGS], [1], [Flags to create an archive])\n\nAC_CACHE_CHECK([for archiver @FILE support], [lt_cv_ar_at_file],\n  [lt_cv_ar_at_file=no\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM],\n     [echo conftest.$ac_objext > conftest.lst\n      lt_ar_try='$AR $AR_FLAGS libconftest.a @conftest.lst >&AS_MESSAGE_LOG_FD'\n      AC_TRY_EVAL([lt_ar_try])\n      if test \"$ac_status\" -eq 0; then\n\t# Ensure the archiver fails upon bogus file names.\n\trm -f conftest.$ac_objext libconftest.a\n\tAC_TRY_EVAL([lt_ar_try])\n\tif test \"$ac_status\" -ne 0; then\n          lt_cv_ar_at_file=@\n        fi\n      fi\n      rm -f conftest.* libconftest.a\n     ])\n  ])\n\nif test \"x$lt_cv_ar_at_file\" = xno; then\n  archiver_list_spec=\nelse\n  archiver_list_spec=$lt_cv_ar_at_file\nfi\n_LT_DECL([], [archiver_list_spec], [1],\n  [How to feed a file listing to the archiver])\n])# _LT_PROG_AR\n\n\n# _LT_CMD_OLD_ARCHIVE\n# -------------------\nm4_defun([_LT_CMD_OLD_ARCHIVE],\n[_LT_PROG_AR\n\nAC_CHECK_TOOL(STRIP, strip, :)\ntest -z \"$STRIP\" && STRIP=:\n_LT_DECL([], [STRIP], [1], [A symbol stripping program])\n\nAC_CHECK_TOOL(RANLIB, ranlib, :)\ntest -z \"$RANLIB\" && RANLIB=:\n_LT_DECL([], [RANLIB], [1],\n    [Commands used to install an old-style archive])\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$tool_oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$tool_oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$tool_oldlib\"\nfi\n\ncase $host_os in\n  darwin*)\n    lock_old_archive_extraction=yes ;;\n  *)\n    lock_old_archive_extraction=no ;;\nesac\n_LT_DECL([], [old_postinstall_cmds], [2])\n_LT_DECL([], [old_postuninstall_cmds], [2])\n_LT_TAGDECL([], [old_archive_cmds], [2],\n    [Commands used to build an old-style archive])\n_LT_DECL([], [lock_old_archive_extraction], [0],\n    [Whether to use a lock for old archive extraction])\n])# _LT_CMD_OLD_ARCHIVE\n\n\n# _LT_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([_LT_COMPILER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $RM conftest*\n])\n\nif test x\"[$]$2\" = xyes; then\n    m4_if([$5], , :, [$5])\nelse\n    m4_if([$6], , :, [$6])\nfi\n])# _LT_COMPILER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_COMPILER_OPTION], [_LT_COMPILER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [])\n\n\n# _LT_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                  [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------\n# Check whether the given linker option works\nAC_DEFUN([_LT_LINKER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=\"$LDFLAGS\"\n   LDFLAGS=\"$LDFLAGS $3\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=\"$save_LDFLAGS\"\n])\n\nif test x\"[$]$2\" = xyes; then\n    m4_if([$4], , :, [$4])\nelse\n    m4_if([$5], , :, [$5])\nfi\n])# _LT_LINKER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_LINKER_OPTION], [_LT_LINKER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [])\n\n\n# LT_CMD_MAX_LEN\n#---------------\nAC_DEFUN([LT_CMD_MAX_LEN],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=\"ABCD\"\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw* | cegcc*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  mint*)\n    # On MiNT this can take a long time and run out of memory.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  os2*)\n    # The test takes a long time on OS/2.\n    lt_cv_sys_max_cmd_len=8192\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[\t ]]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`\n    if test -n \"$lt_cv_sys_max_cmd_len\"; then\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    else\n      # Make teststring a little bigger before we do anything with it.\n      # a 1K string should be a reasonable start.\n      for i in 1 2 3 4 5 6 7 8 ; do\n        teststring=$teststring$teststring\n      done\n      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n      # If test is not a shell built-in, we'll probably end up computing a\n      # maximum length that is only half of the actual maximum length, but\n      # we can't tell.\n      while { test \"X\"`env echo \"$teststring$teststring\" 2>/dev/null` \\\n\t         = \"X$teststring$teststring\"; } >/dev/null 2>&1 &&\n\t      test $i != 17 # 1/2 MB should be enough\n      do\n        i=`expr $i + 1`\n        teststring=$teststring$teststring\n      done\n      # Only check the string length outside the loop.\n      lt_cv_sys_max_cmd_len=`expr \"X$teststring\" : \".*\" 2>&1`\n      teststring=\n      # Add a significant safety factor because C++ compilers can tack on\n      # massive amounts of additional arguments before passing them to the\n      # linker.  It appears as though 1/2 is a usable value.\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    fi\n    ;;\n  esac\n])\nif test -n $lt_cv_sys_max_cmd_len ; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n_LT_DECL([], [max_cmd_len], [0],\n    [What is the maximum length of a command?])\n])# LT_CMD_MAX_LEN\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_SYS_MAX_CMD_LEN], [LT_CMD_MAX_LEN])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [])\n\n\n# _LT_HEADER_DLFCN\n# ----------------\nm4_defun([_LT_HEADER_DLFCN],\n[AC_CHECK_HEADERS([dlfcn.h], [], [], [AC_INCLUDES_DEFAULT])dnl\n])# _LT_HEADER_DLFCN\n\n\n# _LT_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                      ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ----------------------------------------------------------------\nm4_defun([_LT_TRY_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test \"$cross_compiling\" = yes; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n[#line $LINENO \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisbility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined(__GNUC__) && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\n\nint fnord () { return 42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}]\n_LT_EOF\n  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext} 2>/dev/null; then\n    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_dlunknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_TRY_DLOPEN_SELF\n\n\n# LT_SYS_DLOPEN_SELF\n# ------------------\nAC_DEFUN([LT_SYS_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test \"x$enable_dlopen\" != xyes; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=\"load_add_on\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32* | cegcc*)\n    lt_cv_dlopen=\"LoadLibrary\"\n    lt_cv_dlopen_libs=\n    ;;\n\n  cygwin*)\n    lt_cv_dlopen=\"dlopen\"\n    lt_cv_dlopen_libs=\n    ;;\n\n  darwin*)\n  # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],[\n    lt_cv_dlopen=\"dyld\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n    ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=\"shl_load\"],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=\"shl_load\" lt_cv_dlopen_libs=\"-ldld\"],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=\"dlopen\"],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-lsvld\"],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=\"dld_link\" lt_cv_dlopen_libs=\"-ldld\"])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test \"x$lt_cv_dlopen\" != xno; then\n    enable_dlopen=yes\n  else\n    enable_dlopen=no\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=\"$CPPFLAGS\"\n    test \"x$ac_cv_header_dlfcn_h\" = xyes && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=\"$LDFLAGS\"\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=\"$LIBS\"\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test \"x$lt_cv_dlopen_self\" = xyes; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n\t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=\"$save_CPPFLAGS\"\n    LDFLAGS=\"$save_LDFLAGS\"\n    LIBS=\"$save_LIBS\"\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n_LT_DECL([dlopen_support], [enable_dlopen], [0],\n\t [Whether dlopen is supported])\n_LT_DECL([dlopen_self], [enable_dlopen_self], [0],\n\t [Whether dlopen of programs is supported])\n_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],\n\t [Whether dlopen of statically linked programs is supported])\n])# LT_SYS_DLOPEN_SELF\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [])\n\n\n# _LT_COMPILER_C_O([TAGNAME])\n# ---------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler.\n# This macro does not hard code the compiler like AC_PROG_CC_C_O.\nm4_defun([_LT_COMPILER_C_O],\n[m4_require([_LT_DECL_SED])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w . 2>&AS_MESSAGE_LOG_FD\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n])\n_LT_TAGDECL([compiler_c_o], [lt_cv_prog_compiler_c_o], [1],\n\t[Does compiler simultaneously support -c and -o options?])\n])# _LT_COMPILER_C_O\n\n\n# _LT_COMPILER_FILE_LOCKS([TAGNAME])\n# ----------------------------------\n# Check to see if we can do hard links to lock some files if needed\nm4_defun([_LT_COMPILER_FILE_LOCKS],\n[m4_require([_LT_ENABLE_LOCK])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_COMPILER_C_O([$1])\n\nhard_links=\"nottested\"\nif test \"$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" = no && test \"$need_locks\" != no; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test \"$hard_links\" = no; then\n    AC_MSG_WARN([`$CC' does not support `-c -o', so `make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n_LT_DECL([], [need_locks], [1], [Must we lock files when doing compilation?])\n])# _LT_COMPILER_FILE_LOCKS\n\n\n# _LT_CHECK_OBJDIR\n# ----------------\nm4_defun([_LT_CHECK_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n_LT_DECL([], [objdir], [0],\n         [The name of the directory that contains temporary libtool files])dnl\nm4_pattern_allow([LT_OBJDIR])dnl\nAC_DEFINE_UNQUOTED(LT_OBJDIR, \"$lt_cv_objdir/\",\n  [Define to the sub-directory in which libtool stores uninstalled libraries.])\n])# _LT_CHECK_OBJDIR\n\n\n# _LT_LINKER_HARDCODE_LIBPATH([TAGNAME])\n# --------------------------------------\n# Check hardcoding attributes.\nm4_defun([_LT_LINKER_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\" ||\n   test -n \"$_LT_TAGVAR(runpath_var, $1)\" ||\n   test \"X$_LT_TAGVAR(hardcode_automatic, $1)\" = \"Xyes\" ; then\n\n  # We can hardcode non-existent directories.\n  if test \"$_LT_TAGVAR(hardcode_direct, $1)\" != no &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test \"$_LT_TAGVAR(hardcode_shlibpath_var, $1)\" != no &&\n     test \"$_LT_TAGVAR(hardcode_minus_L, $1)\" != no; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, $1)])\n\nif test \"$_LT_TAGVAR(hardcode_action, $1)\" = relink ||\n   test \"$_LT_TAGVAR(inherit_rpath, $1)\" = yes; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test \"$shlibpath_overrides_runpath\" = yes ||\n     test \"$enable_shared\" = no; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n_LT_TAGDECL([], [hardcode_action], [0],\n    [How to hardcode a shared library path into an executable])\n])# _LT_LINKER_HARDCODE_LIBPATH\n\n\n# _LT_CMD_STRIPLIB\n# ----------------\nm4_defun([_LT_CMD_STRIPLIB],\n[m4_require([_LT_DECL_EGREP])\nstriplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | $GREP \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  AC_MSG_RESULT([yes])\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n  darwin*)\n    if test -n \"$STRIP\" ; then\n      striplib=\"$STRIP -x\"\n      old_striplib=\"$STRIP -S\"\n      AC_MSG_RESULT([yes])\n    else\n      AC_MSG_RESULT([no])\n    fi\n    ;;\n  *)\n    AC_MSG_RESULT([no])\n    ;;\n  esac\nfi\n_LT_DECL([], [old_striplib], [1], [Commands to strip libraries])\n_LT_DECL([], [striplib], [1])\n])# _LT_CMD_STRIPLIB\n\n\n# _LT_SYS_DYNAMIC_LINKER([TAG])\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nm4_defun([_LT_SYS_DYNAMIC_LINKER],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_OBJDUMP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nAC_MSG_CHECKING([dynamic linker characteristics])\nm4_if([$1],\n\t[], [\nif test \"$GCC\" = yes; then\n  case $host_os in\n    darwin*) lt_awk_arg=\"/^libraries:/,/LR/\" ;;\n    *) lt_awk_arg=\"/^libraries:/\" ;;\n  esac\n  case $host_os in\n    mingw* | cegcc*) lt_sed_strip_eq=\"s,=\\([[A-Za-z]]:\\),\\1,g\" ;;\n    *) lt_sed_strip_eq=\"s,=/,/,g\" ;;\n  esac\n  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e \"s/^libraries://\" -e $lt_sed_strip_eq`\n  case $lt_search_path_spec in\n  *\\;*)\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED 's/;/ /g'`\n    ;;\n  *)\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED \"s/$PATH_SEPARATOR/ /g\"`\n    ;;\n  esac\n  # Ok, now we have the path, separated by spaces, we can step through it\n  # and add multilib dir if necessary.\n  lt_tmp_lt_search_path_spec=\n  lt_multi_os_dir=`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`\n  for lt_sys_path in $lt_search_path_spec; do\n    if test -d \"$lt_sys_path/$lt_multi_os_dir\"; then\n      lt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path/$lt_multi_os_dir\"\n    else\n      test -d \"$lt_sys_path\" && \\\n\tlt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path\"\n    fi\n  done\n  lt_search_path_spec=`$ECHO \"$lt_tmp_lt_search_path_spec\" | awk '\nBEGIN {RS=\" \"; FS=\"/|\\n\";} {\n  lt_foo=\"\";\n  lt_count=0;\n  for (lt_i = NF; lt_i > 0; lt_i--) {\n    if ($lt_i != \"\" && $lt_i != \".\") {\n      if ($lt_i == \"..\") {\n        lt_count++;\n      } else {\n        if (lt_count == 0) {\n          lt_foo=\"/\" $lt_i lt_foo;\n        } else {\n          lt_count--;\n        }\n      }\n    }\n  }\n  if (lt_foo != \"\") { lt_freq[[lt_foo]]++; }\n  if (lt_freq[[lt_foo]] == 1) { print lt_foo; }\n}'`\n  # AWK program above erroneously prepends '/' to C:/dos/paths\n  # for these hosts.\n  case $host_os in\n    mingw* | cegcc*) lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" |\\\n      $SED 's,/\\([[A-Za-z]]:\\),\\1,g'` ;;\n  esac\n  sys_lib_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $lt_NL2SP`\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=\".so\"\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\ncase $host_os in\naix3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='${libname}${release}${shared_ext}$major'\n  ;;\n\naix[[4-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test \"$host_cpu\" = ia64; then\n    # AIX 5 supports IA64\n    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line `#! .'.  This would cause the generated library to\n    # depend on `.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | ${CC} -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    if test \"$aix_use_runtimelinking\" = yes; then\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    else\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='${libname}${release}.a $libname.a'\n      soname_spec='${libname}${release}${shared_ext}$major'\n    fi\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; test $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='${libname}${shared_ext}'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=\".dll\"\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$cc_basename in\n  yes,*)\n    # gcc\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\${file}`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\${base_file}'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\nm4_if([$1], [],[\n      sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/lib/w32api\"])\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      ;;\n    esac\n    dynamic_linker='Win32 ld.exe'\n    ;;\n\n  *,cl*)\n    # Native MSVC\n    libname_spec='$name'\n    soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n    library_names_spec='${libname}.dll.lib'\n\n    case $build_os in\n    mingw*)\n      sys_lib_search_path_spec=\n      lt_save_ifs=$IFS\n      IFS=';'\n      for lt_path in $LIB\n      do\n        IFS=$lt_save_ifs\n        # Let DOS variable expansion print the short 8.3 style file name.\n        lt_path=`cd \"$lt_path\" 2>/dev/null && cmd //C \"for %i in (\".\") do @echo %~si\"`\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec $lt_path\"\n      done\n      IFS=$lt_save_ifs\n      # Convert to MSYS style.\n      sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | sed -e 's|\\\\\\\\|/|g' -e 's| \\\\([[a-zA-Z]]\\\\):| /\\\\1|g' -e 's|^ ||'`\n      ;;\n    cygwin*)\n      # Convert to unix form, then to dos form, then back to unix form\n      # but this time dos style (no spaces!) so that the unix form looks\n      # like /cygdrive/c/PROGRA~1:/cygdr...\n      sys_lib_search_path_spec=`cygpath --path --unix \"$LIB\"`\n      sys_lib_search_path_spec=`cygpath --path --dos \"$sys_lib_search_path_spec\" 2>/dev/null`\n      sys_lib_search_path_spec=`cygpath --path --unix \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      ;;\n    *)\n      sys_lib_search_path_spec=\"$LIB\"\n      if $ECHO \"$sys_lib_search_path_spec\" | [$GREP ';[c-zC-Z]:/' >/dev/null]; then\n        # It is most probably a Windows format PATH.\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      # FIXME: find the short name or the path components, as spaces are\n      # common. (e.g. \"Program Files\" -> \"PROGRA~1\")\n      ;;\n    esac\n\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\${file}`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\${base_file}'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n    dynamic_linker='Win32 link.exe'\n    ;;\n\n  *)\n    # Assume MSVC wrapper\n    library_names_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext} $libname.lib'\n    dynamic_linker='Win32 ld.exe'\n    ;;\n  esac\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${major}$shared_ext ${libname}$shared_ext'\n  soname_spec='${libname}${release}${major}$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\nm4_if([$1], [],[\n  sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/local/lib\"])\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[[23]].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \\\n  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\ngnu*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nhaiku*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    if test \"X$HPUX_IA64_MODE\" = X32; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n    fi\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[[3-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test \"$lt_cv_prog_gnu_ld\" = yes; then\n\t\tversion_type=linux # correct to gnu/linux during the next big refactor\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib${libsuff} /lib${libsuff}\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  AC_CACHE_VAL([lt_cv_shlibpath_overrides_runpath],\n    [lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$_LT_TAGVAR(lt_prog_compiler_wl, $1)\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\\\"\"\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n      [AS_IF([ ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null],\n\t [lt_cv_shlibpath_overrides_runpath=yes])])\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n    ])\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Append ld.so.conf contents to the search path\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=\"/usr/lib\"\n  need_lib_prefix=no\n  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.\n  case $host_os in\n    openbsd3.3 | openbsd3.3.*)\tneed_version=yes ;;\n    *)\t\t\t\tneed_version=no  ;;\n  esac\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    case $host_os in\n      openbsd2.[[89]] | openbsd2.[[89]].*)\n\tshlibpath_overrides_runpath=no\n\t;;\n      *)\n\tshlibpath_overrides_runpath=yes\n\t;;\n      esac\n  else\n    shlibpath_overrides_runpath=yes\n  fi\n  ;;\n\nos2*)\n  libname_spec='$name'\n  shrext_cmds=\".dll\"\n  need_lib_prefix=no\n  library_names_spec='$libname${shared_ext} $libname.a'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=LIBPATH\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=\"$sys_lib_search_path_spec\"\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test \"$with_gnu_ld\" = yes; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec ;then\n    version_type=linux # correct to gnu/linux during the next big refactor\n    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'\n    soname_spec='$libname${shared_ext}.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=freebsd-elf\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test \"$with_gnu_ld\" = yes; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest \"$dynamic_linker\" = no && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test \"$GCC\" = yes; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test \"${lt_cv_sys_lib_search_path_spec+set}\" = set; then\n  sys_lib_search_path_spec=\"$lt_cv_sys_lib_search_path_spec\"\nfi\nif test \"${lt_cv_sys_lib_dlsearch_path_spec+set}\" = set; then\n  sys_lib_dlsearch_path_spec=\"$lt_cv_sys_lib_dlsearch_path_spec\"\nfi\n\n_LT_DECL([], [variables_saved_for_relink], [1],\n    [Variables whose values should be saved in libtool wrapper scripts and\n    restored at link time])\n_LT_DECL([], [need_lib_prefix], [0],\n    [Do we need the \"lib\" prefix for modules?])\n_LT_DECL([], [need_version], [0], [Do we need a version for libraries?])\n_LT_DECL([], [version_type], [0], [Library versioning type])\n_LT_DECL([], [runpath_var], [0],  [Shared library runtime path variable])\n_LT_DECL([], [shlibpath_var], [0],[Shared library path variable])\n_LT_DECL([], [shlibpath_overrides_runpath], [0],\n    [Is shlibpath searched before the hard-coded library search path?])\n_LT_DECL([], [libname_spec], [1], [Format of library name prefix])\n_LT_DECL([], [library_names_spec], [1],\n    [[List of archive names.  First name is the real one, the rest are links.\n    The last name is the one that the linker finds with -lNAME]])\n_LT_DECL([], [soname_spec], [1],\n    [[The coded name of the library, if different from the real name]])\n_LT_DECL([], [install_override_mode], [1],\n    [Permission mode override for installation of shared libraries])\n_LT_DECL([], [postinstall_cmds], [2],\n    [Command to use after installation of a shared archive])\n_LT_DECL([], [postuninstall_cmds], [2],\n    [Command to use after uninstallation of a shared archive])\n_LT_DECL([], [finish_cmds], [2],\n    [Commands used to finish a libtool library installation in a directory])\n_LT_DECL([], [finish_eval], [1],\n    [[As \"finish_cmds\", except a single script fragment to be evaled but\n    not shown]])\n_LT_DECL([], [hardcode_into_libs], [0],\n    [Whether we should hardcode library paths into libraries])\n_LT_DECL([], [sys_lib_search_path_spec], [2],\n    [Compile-time system search path for libraries])\n_LT_DECL([], [sys_lib_dlsearch_path_spec], [2],\n    [Run-time system search path for libraries])\n])# _LT_SYS_DYNAMIC_LINKER\n\n\n# _LT_PATH_TOOL_PREFIX(TOOL)\n# --------------------------\n# find a file program which can recognize shared library\nAC_DEFUN([_LT_PATH_TOOL_PREFIX],\n[m4_require([_LT_DECL_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=\"$MAGIC_CMD\" # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=\"$MAGIC_CMD\"\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"m4_if([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f $ac_dir/$1; then\n      lt_cv_path_MAGIC_CMD=\"$ac_dir/$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n  MAGIC_CMD=\"$lt_save_MAGIC_CMD\"\n  ;;\nesac])\nMAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n_LT_DECL([], [MAGIC_CMD], [0],\n\t [Used to examine libraries when file_magic_cmd begins with \"file\"])dnl\n])# _LT_PATH_TOOL_PREFIX\n\n# Old name:\nAU_ALIAS([AC_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PATH_TOOL_PREFIX], [])\n\n\n# _LT_PATH_MAGIC\n# --------------\n# find a file program which can recognize a shared library\nm4_defun([_LT_PATH_MAGIC],\n[_LT_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    _LT_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# _LT_PATH_MAGIC\n\n\n# LT_PATH_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([LT_PATH_LD],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PROG_ECHO_BACKSLASH])dnl\n\nAC_ARG_WITH([gnu-ld],\n    [AS_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test \"$withval\" = no || with_gnu_ld=yes],\n    [with_gnu_ld=no])dnl\n\nac_prog=ld\nif test \"$GCC\" = yes; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=\"$ac_prog\"\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test \"$with_gnu_ld\" = yes; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=\"$ac_dir/$ac_prog\"\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest \"$with_gnu_ld\" != no && break\n\t;;\n      *)\n\ttest \"$with_gnu_ld\" != yes && break\n\t;;\n      esac\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\nelse\n  lt_cv_path_LD=\"$LD\" # Let the user override the test with a path.\nfi])\nLD=\"$lt_cv_path_LD\"\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n_LT_PATH_LD_GNU\nAC_SUBST([LD])\n\n_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])\n])# LT_PATH_LD\n\n# Old names:\nAU_ALIAS([AM_PROG_LD], [LT_PATH_LD])\nAU_ALIAS([AC_PROG_LD], [LT_PATH_LD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_LD], [])\ndnl AC_DEFUN([AC_PROG_LD], [])\n\n\n# _LT_PATH_LD_GNU\n#- --------------\nm4_defun([_LT_PATH_LD_GNU],\n[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# _LT_PATH_LD_GNU\n\n\n# _LT_CMD_RELOAD\n# --------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nm4_defun([_LT_CMD_RELOAD],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    if test \"$GCC\" != yes; then\n      reload_cmds=false\n    fi\n    ;;\n  darwin*)\n    if test \"$GCC\" = yes; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n_LT_TAGDECL([], [reload_flag], [1], [How to create reloadable object files])dnl\n_LT_TAGDECL([], [reload_cmds], [2])dnl\n])# _LT_CMD_RELOAD\n\n\n# _LT_CHECK_MAGIC_METHOD\n# ----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_MAGIC_METHOD],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nAC_CACHE_CHECK([how to recognize dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# `unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# which responds to the $file_magic_cmd with a given extended regex.\n# If you have `file' or equivalent on your system and you're not sure\n# whether `pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix[[4-9]]*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump',\n  # unless we find 'file', for example because we are cross-compiling.\n  # func_win32_libid assumes BSD nm, so disallow it if using MS dumpbin.\n  if ( test \"$lt_cv_nm_interface\" = \"BSD nm\" && file / ) >/dev/null 2>&1; then\n    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n    lt_cv_file_magic_cmd='func_win32_libid'\n  else\n    # Keep this pattern in sync with the one in func_win32_libid.\n    lt_cv_deplibs_check_method='file_magic file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)'\n    lt_cv_file_magic_cmd='$OBJDUMP -f'\n  fi\n  ;;\n\ncegcc*)\n  # use the weaker test based on 'objdump'. See mingw*.\n  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | dragonfly*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\ngnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhaiku*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\\.[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]]\\.[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix[[3-9]]*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\n*nto* | *qnx*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nopenbsd*)\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nrdos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\ntpf*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\n\nfile_magic_glob=\nwant_nocaseglob=no\nif test \"$build\" = \"$host\"; then\n  case $host_os in\n  mingw* | pw32*)\n    if ( shopt | grep nocaseglob ) >/dev/null 2>&1; then\n      want_nocaseglob=yes\n    else\n      file_magic_glob=`echo aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ | $SED -e \"s/\\(..\\)/s\\/[[\\1]]\\/[[\\1]]\\/g;/g\"`\n    fi\n    ;;\n  esac\nfi\n\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n\n_LT_DECL([], [deplibs_check_method], [1],\n    [Method to check whether dependent libraries are shared objects])\n_LT_DECL([], [file_magic_cmd], [1],\n    [Command to use when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [file_magic_glob], [1],\n    [How to find potential files when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [want_nocaseglob], [1],\n    [Find potential files using nocaseglob when deplibs_check_method = \"file_magic\"])\n])# _LT_CHECK_MAGIC_METHOD\n\n\n# LT_PATH_NM\n# ----------\n# find the pathname to a BSD- or MS-compatible name lister\nAC_DEFUN([LT_PATH_NM],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=\"$NM\"\nelse\n  lt_nm_to_check=\"${ac_tool_prefix}nm\"\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then\n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=\"$lt_save_ifs\"\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=\"$ac_dir/$lt_tmp_nm\"\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\" ; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the `sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\tcase `\"$tmp_nm\" -B /dev/null 2>&1 | sed '1q'` in\n\t*/dev/null* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=\"$lt_save_ifs\"\n  done\n  : ${lt_cv_path_NM=no}\nfi])\nif test \"$lt_cv_path_NM\" != \"no\"; then\n  NM=\"$lt_cv_path_NM\"\nelse\n  # Didn't find any BSD compatible name lister, look for dumpbin.\n  if test -n \"$DUMPBIN\"; then :\n    # Let the user override the test.\n  else\n    AC_CHECK_TOOLS(DUMPBIN, [dumpbin \"link -dump\"], :)\n    case `$DUMPBIN -symbols /dev/null 2>&1 | sed '1q'` in\n    *COFF*)\n      DUMPBIN=\"$DUMPBIN -symbols\"\n      ;;\n    *)\n      DUMPBIN=:\n      ;;\n    esac\n  fi\n  AC_SUBST([DUMPBIN])\n  if test \"$DUMPBIN\" != \":\"; then\n    NM=\"$DUMPBIN\"\n  fi\nfi\ntest -z \"$NM\" && NM=nm\nAC_SUBST([NM])\n_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl\n\nAC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],\n  [lt_cv_nm_interface=\"BSD nm\"\n  echo \"int some_variable = 0;\" > conftest.$ac_ext\n  (eval echo \"\\\"\\$as_me:$LINENO: $ac_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$ac_compile\" 2>conftest.err)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: output\\\"\" >&AS_MESSAGE_LOG_FD)\n  cat conftest.out >&AS_MESSAGE_LOG_FD\n  if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n    lt_cv_nm_interface=\"MS dumpbin\"\n  fi\n  rm -f conftest*])\n])# LT_PATH_NM\n\n# Old names:\nAU_ALIAS([AM_PROG_NM], [LT_PATH_NM])\nAU_ALIAS([AC_PROG_NM], [LT_PATH_NM])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_NM], [])\ndnl AC_DEFUN([AC_PROG_NM], [])\n\n# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n# --------------------------------\n# how to determine the name of the shared library\n# associated with a specific link library.\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_SHAREDLIB_FROM_LINKLIB],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nm4_require([_LT_DECL_DLLTOOL])\nAC_CACHE_CHECK([how to associate runtime and link libraries],\nlt_cv_sharedlib_from_linklib_cmd,\n[lt_cv_sharedlib_from_linklib_cmd='unknown'\n\ncase $host_os in\ncygwin* | mingw* | pw32* | cegcc*)\n  # two different shell functions defined in ltmain.sh\n  # decide which to use based on capabilities of $DLLTOOL\n  case `$DLLTOOL --help 2>&1` in\n  *--identify-strict*)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib\n    ;;\n  *)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback\n    ;;\n  esac\n  ;;\n*)\n  # fallback: assume linklib IS sharedlib\n  lt_cv_sharedlib_from_linklib_cmd=\"$ECHO\"\n  ;;\nesac\n])\nsharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd\ntest -z \"$sharedlib_from_linklib_cmd\" && sharedlib_from_linklib_cmd=$ECHO\n\n_LT_DECL([], [sharedlib_from_linklib_cmd], [1],\n    [Command to associate shared and link libraries])\n])# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n\n\n# _LT_PATH_MANIFEST_TOOL\n# ----------------------\n# locate the manifest tool\nm4_defun([_LT_PATH_MANIFEST_TOOL],\n[AC_CHECK_TOOL(MANIFEST_TOOL, mt, :)\ntest -z \"$MANIFEST_TOOL\" && MANIFEST_TOOL=mt\nAC_CACHE_CHECK([if $MANIFEST_TOOL is a manifest tool], [lt_cv_path_mainfest_tool],\n  [lt_cv_path_mainfest_tool=no\n  echo \"$as_me:$LINENO: $MANIFEST_TOOL '-?'\" >&AS_MESSAGE_LOG_FD\n  $MANIFEST_TOOL '-?' 2>conftest.err > conftest.out\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  if $GREP 'Manifest Tool' conftest.out > /dev/null; then\n    lt_cv_path_mainfest_tool=yes\n  fi\n  rm -f conftest*])\nif test \"x$lt_cv_path_mainfest_tool\" != xyes; then\n  MANIFEST_TOOL=:\nfi\n_LT_DECL([], [MANIFEST_TOOL], [1], [Manifest tool])dnl\n])# _LT_PATH_MANIFEST_TOOL\n\n\n# LT_LIB_M\n# --------\n# check for math library\nAC_DEFUN([LT_LIB_M],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=\"-lmw\")\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=\"-lm\")\n  ;;\nesac\nAC_SUBST([LIBM])\n])# LT_LIB_M\n\n# Old name:\nAU_ALIAS([AC_CHECK_LIBM], [LT_LIB_M])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_CHECK_LIBM], [])\n\n\n# _LT_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------\nm4_defun([_LT_COMPILER_NO_RTTI],\n[m4_require([_LT_TAG_COMPILER])dnl\n\n_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test \"$GCC\" = yes; then\n  case $cc_basename in\n  nvcc*)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -Xcompiler -fno-builtin' ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin' ;;\n  esac\n\n  _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n_LT_TAGDECL([no_builtin_flag], [lt_prog_compiler_no_builtin_flag], [1],\n\t[Compiler flag to turn off builtin functions])\n])# _LT_COMPILER_NO_RTTI\n\n\n# _LT_CMD_GLOBAL_SYMBOLS\n# ----------------------\nm4_defun([_LT_CMD_GLOBAL_SYMBOLS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_TAG_COMPILER])dnl\n\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32* | cegcc*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*)\n  if test \"$host_cpu\" = ia64; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris*)\n  symcode='[[BDRT]]'\n  ;;\nsco3.2v5*)\n  symcode='[[DT]]'\n  ;;\nsysv4.2uw2*)\n  symcode='[[DT]]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[[ABDT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\n# Transform an extracted symbol line into a proper C declaration.\n# Some systems (esp. on ia64) link data and code symbols differently,\n# so use this general approach.\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n -e 's/^T .* \\(.*\\)$/extern int \\1();/p' -e 's/^$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n -e 's/^: \\([[^ ]]*\\)[[ ]]*$/  {\\\\\\\"\\1\\\\\\\", (void *) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/p'\"\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix=\"sed -n -e 's/^: \\([[^ ]]*\\)[[ ]]*$/  {\\\\\\\"\\1\\\\\\\", (void *) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\(lib[[^ ]]*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"lib\\2\\\", (void *) \\&\\2},/p'\"\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`$ECHO 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# Try without a prefix underscore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  if test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n    # Fake it for dumpbin and say T for any non-static function\n    # and D for any global variable.\n    # Also find C++ and __fastcall symbols from MSVC++,\n    # which start with @ or ?.\n    lt_cv_sys_global_symbol_pipe=\"$AWK ['\"\\\n\"     {last_section=section; section=\\$ 3};\"\\\n\"     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};\"\\\n\"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};\"\\\n\"     \\$ 0!~/External *\\|/{next};\"\\\n\"     / 0+ UNDEF /{next}; / UNDEF \\([^|]\\)*()/{next};\"\\\n\"     {if(hide[section]) next};\"\\\n\"     {f=0}; \\$ 0~/\\(\\).*\\|/{f=1}; {printf f ? \\\"T \\\" : \\\"D \\\"};\"\\\n\"     {split(\\$ 0, a, /\\||\\r/); split(a[2], s)};\"\\\n\"     s[1]~/^[@?]/{print s[1], s[1]; next};\"\\\n\"     s[1]~prfx {split(s[1],t,\\\"@\\\"); print t[1], substr(t[1],length(prfx))}\"\\\n\"     ' prfx=^$ac_symprfx]\"\n  else\n    lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[\t ]]\\($symcode$symcode*\\)[[\t ]][[\t ]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n  fi\n  lt_cv_sys_global_symbol_pipe=\"$lt_cv_sys_global_symbol_pipe | sed '/ __gnu_lto/d'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<_LT_EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(void);\nvoid nm_test_func(void){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\n_LT_EOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| \"$lt_cv_sys_global_symbol_pipe\" \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if $GREP ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif $GREP ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<_LT_EOF > conftest.$ac_ext\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined(_WIN32) || defined(__CYGWIN__) || defined(_WIN32_WCE)\n/* DATA imports from DLLs on WIN32 con't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT@&t@_DLSYM_CONST\n#elif defined(__osf__)\n/* This system does not cope well with relocations in const data.  */\n# define LT@&t@_DLSYM_CONST\n#else\n# define LT@&t@_DLSYM_CONST const\n#endif\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n_LT_EOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | $GREP -v main >> conftest.$ac_ext'\n\n\t  cat <<_LT_EOF >> conftest.$ac_ext\n\n/* The mapping between symbol names and symbols.  */\nLT@&t@_DLSYM_CONST struct {\n  const char *name;\n  void       *address;\n}\nlt__PROGRAM__LTX_preloaded_symbols[[]] =\n{\n  { \"@PROGRAM@\", (void *) 0 },\n_LT_EOF\n\t  $SED \"s/^$symcode$symcode* \\(.*\\) \\(.*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/\" < \"$nlist\" | $GREP -v main >> conftest.$ac_ext\n\t  cat <<\\_LT_EOF >> conftest.$ac_ext\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt__PROGRAM__LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n_LT_EOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_globsym_save_LIBS=$LIBS\n\t  lt_globsym_save_CFLAGS=$CFLAGS\n\t  LIBS=\"conftstm.$ac_objext\"\n\t  CFLAGS=\"$CFLAGS$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext}; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=$lt_globsym_save_LIBS\n\t  CFLAGS=$lt_globsym_save_CFLAGS\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -rf conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test \"$pipe_works\" = yes; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n\n# Response file support.\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  nm_file_list_spec='@'\nelif $NM --help 2>/dev/null | grep '[[@]]FILE' >/dev/null; then\n  nm_file_list_spec='@'\nfi\n\n_LT_DECL([global_symbol_pipe], [lt_cv_sys_global_symbol_pipe], [1],\n    [Take the output of nm and produce a listing of raw symbols and C names])\n_LT_DECL([global_symbol_to_cdecl], [lt_cv_sys_global_symbol_to_cdecl], [1],\n    [Transform the output of nm in a proper C declaration])\n_LT_DECL([global_symbol_to_c_name_address],\n    [lt_cv_sys_global_symbol_to_c_name_address], [1],\n    [Transform the output of nm in a C name address pair])\n_LT_DECL([global_symbol_to_c_name_address_lib_prefix],\n    [lt_cv_sys_global_symbol_to_c_name_address_lib_prefix], [1],\n    [Transform the output of nm in a C name address pair when lib prefix is needed])\n_LT_DECL([], [nm_file_list_spec], [1],\n    [Specify filename containing input files for $NM])\n]) # _LT_CMD_GLOBAL_SYMBOLS\n\n\n# _LT_COMPILER_PIC([TAGNAME])\n# ---------------------------\nm4_defun([_LT_COMPILER_PIC],\n[m4_require([_LT_TAG_COMPILER])dnl\n_LT_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_TAGVAR(lt_prog_compiler_static, $1)=\n\nm4_if([$1], [CXX], [\n  # C++ specific cases for pic, static, wl, etc.\n  if test \"$GXX\" = yes; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the `-m68020' flag to GCC prevents building anything better,\n            # like `-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | cygwin* | os2* | pw32* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *qnx* | *nto*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix[[4-9]]*)\n\t# All AIX code is PIC.\n\tif test \"$host_cpu\" = ia64; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n      mingw* | cygwin* | os2* | pw32* | cegcc*)\n\t# This hack is so that the source file can tell whether it is being\n\t# built for inclusion in a dll (and should export symbols for example).\n\tm4_if([$1], [GCJ], [],\n\t  [_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n\t;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n\t    if test \"$host_cpu\" != ia64; then\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux* | k*bsd*-gnu | kopensolaris*-gnu)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  ecpc* )\n\t    # old Intel C++ for x86_64 which still supported -KPIC.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  icpc* )\n\t    # Intel C++, used to be incompatible with GCC.\n\t    # ICC 10 doesn't accept -KPIC any more.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC* | pgcpp*)\n\t    # Portland Group C++ compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  xlc* | xlC* | bgxl[[cC]]* | mpixl[[cC]]*)\n\t    # IBM XL 8.0, 9.0 on PPC and BlueGene\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd*)\n\t;;\n      *qnx* | *nto*)\n        # QNX uses GNU C++, but need to define -shared option too, otherwise\n        # it will coredump.\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n        ;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test \"$GCC\" = yes; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the `-m68020' flag to GCC prevents building anything better,\n            # like `-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n\n    case $cc_basename in\n    nvcc*) # Cuda Compiler Driver 2.2\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Xlinker '\n      if test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"-Xcompiler $_LT_TAGVAR(lt_prog_compiler_pic, $1)\"\n      fi\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    linux* | k*bsd*-gnu | kopensolaris*-gnu)\n      case $cc_basename in\n      # old Intel for x86_64 which still supported -KPIC.\n      ecc*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # Lahey Fortran 8.1.\n      lf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='--shared'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='--static'\n\t;;\n      nagfor*)\n\t# NAG Fortran compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t;;\n      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      ccc*)\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      xl* | bgxl* | bgf* | mpixl*)\n\t# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t;;\n      *)\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ Ceres\\ Fortran* | *Sun*Fortran*\\ [[1-7]].* | *Sun*Fortran*\\ 8.[[0-3]]*)\n\t  # Sun Fortran 8.3 passes all unrecognized flags to the linker\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)=''\n\t  ;;\n\t*Sun\\ F* | *Sun*Fortran*)\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t  ;;\n\t*Sun\\ C*)\n\t  # Sun C 5.9\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  ;;\n        *Intel*\\ [[CF]]*Compiler*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t  ;;\n\t*Portland\\ Group*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  ;;\n\tesac\n\t;;\n      esac\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    rdos*)\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95* | sunf77* | sunf90* | sunf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec ;then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    unicos*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\ncase $host_os in\n  # For platforms which do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\n\nAC_CACHE_CHECK([for $compiler option to produce PIC],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_prog_compiler_pic, $1)])\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, $1) works],\n    [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, $1)],\n    [$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\n_LT_TAGDECL([pic_flag], [lt_prog_compiler_pic], [1],\n\t[Additional compiler flags for building library objects])\n\n_LT_TAGDECL([wl], [lt_prog_compiler_wl], [1],\n\t[How to pass a linker flag through the compiler])\n#\n# Check to make sure the static flag actually works.\n#\nwl=$_LT_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\\\"$_LT_TAGVAR(lt_prog_compiler_static, $1)\\\"\n_LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],\n  _LT_TAGVAR(lt_cv_prog_compiler_static_works, $1),\n  $lt_tmp_static_flag,\n  [],\n  [_LT_TAGVAR(lt_prog_compiler_static, $1)=])\n_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],\n\t[Compiler flag to prevent dynamic linking])\n])# _LT_COMPILER_PIC\n\n\n# _LT_LINKER_SHLIBS([TAGNAME])\n# ----------------------------\n# See if the linker supports building shared libraries.\nm4_defun([_LT_LINKER_SHLIBS],\n[AC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nm4_if([$1], [CXX], [\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  case $host_os in\n  aix[[4-9]]*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to AIX nm, but means don't demangle with GNU nm\n    # Also, AIX nm treats weak defined symbols like other global defined\n    # symbols, whereas GNU nm marks them as \"W\".\n    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_TAGVAR(export_symbols_cmds, $1)=\"$ltdll_cmds\"\n    ;;\n  cygwin* | mingw* | cegcc*)\n    case $cc_basename in\n    cl*)\n      _LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n      ;;\n    *)\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n      ;;\n    esac\n    ;;\n  *)\n    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n    ;;\n  esac\n], [\n  runpath_var=\n  _LT_TAGVAR(allow_undefined_flag, $1)=\n  _LT_TAGVAR(always_export_symbols, $1)=no\n  _LT_TAGVAR(archive_cmds, $1)=\n  _LT_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_TAGVAR(compiler_needs_object, $1)=no\n  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(hardcode_automatic, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_TAGVAR(inherit_rpath, $1)=no\n  _LT_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_TAGVAR(module_cmds, $1)=\n  _LT_TAGVAR(module_expsym_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_new_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ` (' and `)$', so one must not match beginning or\n  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',\n  # as well as any symbol that contains `d'.\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  # Exclude shared library initialization/finalization symbols.\ndnl Note also adjust exclude_expsyms for C++ above.\n  extract_expsyms_cmds=\n\n  case $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test \"$GCC\" != yes; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd*)\n    with_gnu_ld=no\n    ;;\n  esac\n\n  _LT_TAGVAR(ld_shlibs, $1)=yes\n\n  # On some targets, GNU ld is compatible enough with the native linker\n  # that we're better off using the native interface for both.\n  lt_use_gnu_ld_interface=no\n  if test \"$with_gnu_ld\" = yes; then\n    case $host_os in\n      aix*)\n\t# The AIX port of GNU ld has always aspired to compatibility\n\t# with the native linker.  However, as the warning in the GNU ld\n\t# block says, versions before 2.19.5* couldn't really create working\n\t# shared libraries, regardless of the interface used.\n\tcase `$LD -v 2>&1` in\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.19.5*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.[[2-9]]*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ [[3-9]]*) ;;\n\t  *)\n\t    lt_use_gnu_ld_interface=yes\n\t    ;;\n\tesac\n\t;;\n      *)\n\tlt_use_gnu_ld_interface=yes\n\t;;\n    esac\n  fi\n\n  if test \"$lt_use_gnu_ld_interface\" = yes; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='${wl}'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n    else\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v 2>&1` in\n      *GNU\\ gold*) supports_anon_versioning=yes ;;\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix[[3-9]]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test \"$host_cpu\" != ia64; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.19, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to install binutils\n*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.\n*** You will then need to restart the configuration process.\n\n_LT_EOF\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-all-symbols'\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=no\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n\n      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file (1st line\n\t# is EXPORTS), use it as is; otherwise, prepend...\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t  cp $export_symbols $output_objdir/$soname.def;\n\telse\n\t  echo EXPORTS > $output_objdir/$soname.def;\n\t  cat $export_symbols >> $output_objdir/$soname.def;\n\tfi~\n\t$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    haiku*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    interix[[3-9]]*)\n      _LT_TAGVAR(hardcode_direct, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s,^,_,\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)\n      tmp_diet=no\n      if test \"$host_os\" = linux-dietlibc; then\n\tcase $cc_basename in\n\t  diet\\ *) tmp_diet=yes;;\t# linux-dietlibc with static linking (!diet-dyn)\n\tesac\n      fi\n      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n\t && test \"$tmp_diet\" = no\n      then\n\ttmp_addflag=' $pic_flag'\n\ttmp_sharedflag='-shared'\n\tcase $cc_basename,$host_cpu in\n        pgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95* | pgfortran*)\n\t\t\t\t\t# Portland Group f77 and f90 compilers\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tlf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n\t  tmp_sharedflag='--shared' ;;\n\txl[[cC]]* | bgxl[[cC]]* | mpixl[[cC]]*) # IBM XL C 8.0 on PPC (deal with xlf below)\n\t  tmp_sharedflag='-qmkshrobj'\n\t  tmp_addflag= ;;\n\tnvcc*)\t# Cuda Compiler Driver 2.2\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  ;;\n\tesac\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ C*)\t\t\t# Sun C 5.9\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  tmp_sharedflag='-G' ;;\n\t*Sun\\ F*)\t\t\t# Sun Fortran 8.3\n\t  tmp_sharedflag='-G' ;;\n\tesac\n\t_LT_TAGVAR(archive_cmds, $1)='$CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\n        if test \"x$supports_anon_versioning\" = xyes; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t    cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t    echo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t    $CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'\n        fi\n\n\tcase $cc_basename in\n\txlf* | bgf* | bgxlf* | mpixlf*)\n\t  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='--whole-archive$convenience --no-whole-archive'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'\n\t  if test \"x$supports_anon_versioning\" = xyes; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t      cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t      echo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t      $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'\n\t  fi\n\t  ;;\n\tesac\n      else\n        _LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | $GREP 'BFD 2\\.8' > /dev/null; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.1[[0-5]].*)\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  # For security reasons, it is highly recommended that you always\n\t  # use absolute paths for naming shared libraries, and exclude the\n\t  # DT_RUNPATH tag from executables and libraries.  But doing so\n\t  # requires that you compile everything twice, which is a pain.\n\t  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test \"$_LT_TAGVAR(ld_shlibs, $1)\" = no; then\n      runpath_var=\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      if test \"$GCC\" = yes && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix[[4-9]]*)\n      if test \"$host_cpu\" = ia64; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\"\"\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to AIX nm, but means don't demangle with GNU nm\n\t# Also, AIX nm treats weak defined symbols like other global\n\t# defined symbols, whereas GNU nm marks them as \"W\".\n\tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# need to do runtime linking.\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t  for ld_flag in $LDFLAGS; do\n\t  if (test $ld_flag = \"-brtl\" || test $ld_flag = \"-Wl,-brtl\"); then\n\t    aix_use_runtimelinking=yes\n\t    break\n\t  fi\n\t  done\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_TAGVAR(archive_cmds, $1)=''\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(file_list_spec, $1)='${wl}-f,'\n\n      if test \"$GCC\" = yes; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`${CC} -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t   strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t  # We have reworked collect2\n\t  :\n\t  else\n\t  # We have old collect2\n\t  _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test \"$aix_use_runtimelinking\" = yes; then\n\t  shared_flag=\"$shared_flag \"'${wl}-G'\n\tfi\n      else\n\t# not using gcc\n\tif test \"$host_cpu\" = ia64; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test \"$aix_use_runtimelinking\" = yes; then\n\t    shared_flag='${wl}-G'\n\t  else\n\t    shared_flag='${wl}-bM:SRE'\n\t  fi\n\tfi\n      fi\n\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-bexpall'\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      if test \"$aix_use_runtimelinking\" = yes; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n        # Determine the default libpath from the value encoded in an\n        # empty executable.\n        _LT_SYS_MODULE_PATH_AIX([$1])\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then func_echo_all \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n      else\n\tif test \"$host_cpu\" = ia64; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an\n\t # empty executable.\n\t _LT_SYS_MODULE_PATH_AIX([$1])\n\t _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t  if test \"$with_gnu_ld\" = yes; then\n\t    # We only use this code for GNU lds that support --whole-archive.\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t  else\n\t    # Exported symbols can be pulled into shared objects from archives\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t  fi\n\t  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  # This is similar to how AIX traditionally builds its shared libraries.\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    bsdi[[45]]*)\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      case $cc_basename in\n      cl*)\n\t# Native MSVC\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t_LT_TAGVAR(always_export_symbols, $1)=yes\n\t_LT_TAGVAR(file_list_spec, $1)='@'\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=\".dll\"\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t    sed -n -e 's/\\\\\\\\\\\\\\(.*\\\\\\\\\\\\\\)/-link\\\\\\ -EXPORT:\\\\\\\\\\\\\\1/' -e '1\\\\\\!p' < $export_symbols > $output_objdir/$soname.exp;\n\t  else\n\t    sed -e 's/\\\\\\\\\\\\\\(.*\\\\\\\\\\\\\\)/-link\\\\\\ -EXPORT:\\\\\\\\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;\n\t  fi~\n\t  $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n\t  linknames='\n\t# The linker will not automatically build a static lib if we build a DLL.\n\t# _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t_LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n\t_LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1,DATA/'\\'' | $SED -e '\\''/^[[AITW]][[ ]]/s/.*[[ ]]//'\\'' | sort | uniq > $export_symbols'\n\t# Don't use ranlib\n\t_LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t_LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n\t  lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n\t  case $lt_outputfile in\n\t    *.exe|*.EXE) ;;\n\t    *)\n\t      lt_outputfile=\"$lt_outputfile.exe\"\n\t      lt_tool_outputfile=\"$lt_tool_outputfile.exe\"\n\t      ;;\n\t  esac~\n\t  if test \"$MANIFEST_TOOL\" != \":\" && test -f \"$lt_outputfile.manifest\"; then\n\t    $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n\t    $RM \"$lt_outputfile.manifest\";\n\t  fi'\n\t;;\n      *)\n\t# Assume MSVC wrapper\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=\".dll\"\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all \"$deplibs\" | $SED '\\''s/ -lc$//'\\''` -link -dll~linknames='\n\t# The linker will automatically build a .lib file if we build a DLL.\n\t_LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t# FIXME: Should let the user specify the lib program.\n\t_LT_TAGVAR(old_archive_cmds, $1)='lib -OUT:$oldlib$oldobjs$old_deplibs'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      _LT_DARWIN_LINKER_FEATURES($1)\n      ;;\n\n    dgux*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2.*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | dragonfly*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared $pic_flag ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      ;;\n\n    hpux10*)\n      if test \"$GCC\" = yes && test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test \"$GCC\" = yes && test \"$with_gnu_ld\" = no; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\tm4_if($1, [], [\n\t  # Older versions of the 11.00 compiler do not understand -b yet\n\t  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)\n\t  _LT_LINKER_OPTION([if $CC understands -b],\n\t    _LT_TAGVAR(lt_cv_prog_compiler__b, $1), [-b],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],\n\t  [_LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'])\n\t  ;;\n\tesac\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t# Try to use the -exported_symbol ld option, if it does not\n\t# work, assume that -exports_file does not work either and\n\t# implicitly export all symbols.\n\t# This should be the same for all languages, so no per-tag cache variable.\n\tAC_CACHE_CHECK([whether the $host_os linker accepts -exported_symbol],\n\t  [lt_cv_irix_exported_symbol],\n\t  [save_LDFLAGS=\"$LDFLAGS\"\n\t   LDFLAGS=\"$LDFLAGS -shared ${wl}-exported_symbol ${wl}foo ${wl}-update_registry ${wl}/dev/null\"\n\t   AC_LINK_IFELSE(\n\t     [AC_LANG_SOURCE(\n\t        [AC_LANG_CASE([C], [[int foo (void) { return 0; }]],\n\t\t\t      [C++], [[int foo (void) { return 0; }]],\n\t\t\t      [Fortran 77], [[\n      subroutine foo\n      end]],\n\t\t\t      [Fortran], [[\n      subroutine foo\n      end]])])],\n\t      [lt_cv_irix_exported_symbol=yes],\n\t      [lt_cv_irix_exported_symbol=no])\n           LDFLAGS=\"$save_LDFLAGS\"])\n\tif test \"$lt_cv_irix_exported_symbol\" = yes; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations ${wl}-exports_file ${wl}$export_symbols -o $lib'\n\tfi\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -exports_file $export_symbols -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(inherit_rpath, $1)=yes\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *nto* | *qnx*)\n      ;;\n\n    openbsd*)\n      if test -f /usr/libexec/ld.so; then\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\tif test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\telse\n\t  case $host_os in\n\t   openbsd[[01]].* | openbsd2.[[0-7]] | openbsd2.[[0-7]].*)\n\t     _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n\t     _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t     ;;\n\t   *)\n\t     _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t     _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t     ;;\n\t  esac\n\tfi\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY $libname INITINSTANCE\" > $output_objdir/$libname.def~$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~echo DATA >> $output_objdir/$libname.def~echo \" SINGLE NONSHARED\" >> $output_objdir/$libname.def~echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_from_new_cmds, $1)='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'\n      ;;\n\n    osf3*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $pic_flag $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; printf \"%s\\\\n\" \"-hidden\">> $lib.exp~\n\t$CC -shared${allow_undefined_flag} ${wl}-input ${wl}$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib~$RM $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(no_undefined_flag, $1)=' -z defs'\n      if test \"$GCC\" = yes; then\n\twlarc='${wl}'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}-z ${wl}text ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $CC -shared $pic_flag ${wl}-z ${wl}text ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n      else\n\tcase `$CC -V 2>&1` in\n\t*\"Compilers 5.0\"*)\n\t  wlarc=''\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'\n\t  ;;\n\t*)\n\t  wlarc='${wl}'\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $CC -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n\t  ;;\n\tesac\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n\t# The compiler driver will combine and reorder linker options,\n\t# but understands `-z linker_flag'.  GCC discards it without `$wl',\n\t# but is careful enough not to reorder.\n\t# Supported since Solaris 2.6 (maybe 2.5.1?)\n\tif test \"$GCC\" = yes; then\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'\n\telse\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\tfi\n\t;;\n      esac\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test \"x$host_vendor\" = xsequent; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We can NOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R,$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n\n    if test x$host_vendor = xsni; then\n      case $host in\n      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Blargedynsym'\n\t;;\n      esac\n    fi\n  fi\n])\nAC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\ntest \"$_LT_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n_LT_TAGVAR(with_gnu_ld, $1)=$with_gnu_ld\n\n_LT_DECL([], [libext], [0], [Old archive suffix (normally \"a\")])dnl\n_LT_DECL([], [shrext_cmds], [1], [Shared library suffix (normally \".so\")])dnl\n_LT_DECL([], [extract_expsyms_cmds], [2],\n    [The commands to extract the exported symbol list from a shared archive])\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test \"$enable_shared\" = yes && test \"$GCC\" = yes; then\n    case $_LT_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_CACHE_CHECK([whether -lc should be explicitly linked in],\n\t[lt_cv_]_LT_TAGVAR(archive_cmds_need_lc, $1),\n\t[$RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$_LT_TAGVAR(lt_prog_compiler_wl, $1)\n\t  pic_flag=$_LT_TAGVAR(lt_prog_compiler_pic, $1)\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$_LT_TAGVAR(allow_undefined_flag, $1)\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\n\t  if AC_TRY_EVAL(_LT_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n\t  then\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t  else\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  fi\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\t])\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=$lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n_LT_TAGDECL([build_libtool_need_lc], [archive_cmds_need_lc], [0],\n    [Whether or not to add -lc for building shared libraries])\n_LT_TAGDECL([allow_libtool_libs_with_static_runtimes],\n    [enable_shared_with_static_runtimes], [0],\n    [Whether or not to disallow shared libs when runtime libs are static])\n_LT_TAGDECL([], [export_dynamic_flag_spec], [1],\n    [Compiler flag to allow reflexive dlopens])\n_LT_TAGDECL([], [whole_archive_flag_spec], [1],\n    [Compiler flag to generate shared objects directly from archives])\n_LT_TAGDECL([], [compiler_needs_object], [1],\n    [Whether the compiler copes with passing no objects directly])\n_LT_TAGDECL([], [old_archive_from_new_cmds], [2],\n    [Create an old-style archive from a shared archive])\n_LT_TAGDECL([], [old_archive_from_expsyms_cmds], [2],\n    [Create a temporary old-style archive to link instead of a shared archive])\n_LT_TAGDECL([], [archive_cmds], [2], [Commands used to build a shared archive])\n_LT_TAGDECL([], [archive_expsym_cmds], [2])\n_LT_TAGDECL([], [module_cmds], [2],\n    [Commands used to build a loadable module if different from building\n    a shared archive.])\n_LT_TAGDECL([], [module_expsym_cmds], [2])\n_LT_TAGDECL([], [with_gnu_ld], [1],\n    [Whether we are building with GNU ld or not])\n_LT_TAGDECL([], [allow_undefined_flag], [1],\n    [Flag that allows shared libraries with undefined symbols to be built])\n_LT_TAGDECL([], [no_undefined_flag], [1],\n    [Flag that enforces no undefined symbols])\n_LT_TAGDECL([], [hardcode_libdir_flag_spec], [1],\n    [Flag to hardcode $libdir into a binary during linking.\n    This must work even if $libdir does not exist])\n_LT_TAGDECL([], [hardcode_libdir_separator], [1],\n    [Whether we need a single \"-rpath\" flag with a separated argument])\n_LT_TAGDECL([], [hardcode_direct], [0],\n    [Set to \"yes\" if using DIR/libNAME${shared_ext} during linking hardcodes\n    DIR into the resulting binary])\n_LT_TAGDECL([], [hardcode_direct_absolute], [0],\n    [Set to \"yes\" if using DIR/libNAME${shared_ext} during linking hardcodes\n    DIR into the resulting binary and the resulting library dependency is\n    \"absolute\", i.e impossible to change by setting ${shlibpath_var} if the\n    library is relocated])\n_LT_TAGDECL([], [hardcode_minus_L], [0],\n    [Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_shlibpath_var], [0],\n    [Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_automatic], [0],\n    [Set to \"yes\" if building a shared library automatically hardcodes DIR\n    into the library and all subsequent libraries and executables linked\n    against it])\n_LT_TAGDECL([], [inherit_rpath], [0],\n    [Set to yes if linker adds runtime paths of dependent libraries\n    to runtime path list])\n_LT_TAGDECL([], [link_all_deplibs], [0],\n    [Whether libtool must link a program against all its dependency libraries])\n_LT_TAGDECL([], [always_export_symbols], [0],\n    [Set to \"yes\" if exported symbols are required])\n_LT_TAGDECL([], [export_symbols_cmds], [2],\n    [The commands to list exported symbols])\n_LT_TAGDECL([], [exclude_expsyms], [1],\n    [Symbols that should not be listed in the preloaded symbols])\n_LT_TAGDECL([], [include_expsyms], [1],\n    [Symbols that must always be exported])\n_LT_TAGDECL([], [prelink_cmds], [2],\n    [Commands necessary for linking programs (against libraries) with templates])\n_LT_TAGDECL([], [postlink_cmds], [2],\n    [Commands necessary for finishing linking programs])\n_LT_TAGDECL([], [file_list_spec], [1],\n    [Specify filename containing input files])\ndnl FIXME: Not yet implemented\ndnl _LT_TAGDECL([], [thread_safe_flag_spec], [1],\ndnl    [Compiler flag to generate thread safe objects])\n])# _LT_LINKER_SHLIBS\n\n\n# _LT_LANG_C_CONFIG([TAG])\n# ------------------------\n# Ensure that the configuration variables for a C compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_C_CONFIG],\n[m4_require([_LT_DECL_EGREP])dnl\nlt_save_CC=\"$CC\"\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}'\n\n_LT_TAG_COMPILER\n# Save the default compiler, since it gets overwritten when the other\n# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.\ncompiler_DEFAULT=$CC\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_SYS_DYNAMIC_LINKER($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n  LT_SYS_DLOPEN_SELF\n  _LT_CMD_STRIPLIB\n\n  # Report which library types will actually be built\n  AC_MSG_CHECKING([if libtool supports shared libraries])\n  AC_MSG_RESULT([$can_build_shared])\n\n  AC_MSG_CHECKING([whether to build shared libraries])\n  test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n  # On AIX, shared libraries and static libraries use the same namespace, and\n  # are all built from PIC.\n  case $host_os in\n  aix3*)\n    test \"$enable_shared\" = yes && enable_static=no\n    if test -n \"$RANLIB\"; then\n      archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n      postinstall_cmds='$RANLIB $lib'\n    fi\n    ;;\n\n  aix[[4-9]]*)\n    if test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n      test \"$enable_shared\" = yes && enable_static=no\n    fi\n    ;;\n  esac\n  AC_MSG_RESULT([$enable_shared])\n\n  AC_MSG_CHECKING([whether to build static libraries])\n  # Make sure either enable_shared or enable_static is yes.\n  test \"$enable_shared\" = yes || enable_static=yes\n  AC_MSG_RESULT([$enable_static])\n\n  _LT_CONFIG($1)\nfi\nAC_LANG_POP\nCC=\"$lt_save_CC\"\n])# _LT_LANG_C_CONFIG\n\n\n# _LT_LANG_CXX_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a C++ compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_CXX_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nif test -n \"$CXX\" && ( test \"X$CXX\" != \"Xno\" &&\n    ( (test \"X$CXX\" = \"Xg++\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test \"X$CXX\" != \"Xg++\"))) ; then\n  AC_PROG_CXXCPP\nelse\n  _lt_caught_CXX_error=yes\nfi\n\nAC_LANG_PUSH(C++)\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(compiler_needs_object, $1)=no\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the CXX compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_caught_CXX_error\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"int some_variable = 0;\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_CFLAGS=$CFLAGS\n  lt_save_LD=$LD\n  lt_save_GCC=$GCC\n  GCC=$GXX\n  lt_save_with_gnu_ld=$with_gnu_ld\n  lt_save_path_LD=$lt_cv_path_LD\n  if test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\n  else\n    $as_unset lt_cv_prog_gnu_ld\n  fi\n  if test -n \"${lt_cv_path_LDCXX+set}\"; then\n    lt_cv_path_LD=$lt_cv_path_LDCXX\n  else\n    $as_unset lt_cv_path_LD\n  fi\n  test -z \"${LDCXX+set}\" || LD=$LDCXX\n  CC=${CXX-\"c++\"}\n  CFLAGS=$CXXFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    # We don't want -fno-exception when compiling C++ code, so set the\n    # no_builtin_flag separately\n    if test \"$GXX\" = yes; then\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n    else\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n    fi\n\n    if test \"$GXX\" = yes; then\n      # Set up default GNU C++ configuration\n\n      LT_PATH_LD\n\n      # Check if GNU C++ uses GNU ld as the underlying linker, since the\n      # archiving commands below assume that GNU ld is being used.\n      if test \"$with_gnu_ld\" = yes; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n        # If archive_cmds runs LD, not CC, wlarc should be empty\n        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n        #     investigate it a little bit more. (MM)\n        wlarc='${wl}'\n\n        # ancient GNU ld didn't support --whole-archive et. al.\n        if eval \"`$CC -print-prog-name=ld` --help 2>&1\" |\n\t  $GREP 'no-whole-archive' > /dev/null; then\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n        else\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\n        fi\n      else\n        with_gnu_ld=no\n        wlarc=\n\n        # A generic and very simple default shared library creation\n        # command for GNU C++ for the case where it uses the native\n        # linker, instead of GNU ld.  If possible, this setting should\n        # overridden to take advantage of the native linker features on\n        # the platform it is being used on.\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n      fi\n\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n    else\n      GXX=no\n      with_gnu_ld=no\n      wlarc=\n    fi\n\n    # PORTME: fill in a description of your system's C++ link characteristics\n    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n    _LT_TAGVAR(ld_shlibs, $1)=yes\n    case $host_os in\n      aix3*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n      aix[[4-9]]*)\n        if test \"$host_cpu\" = ia64; then\n          # On IA64, the linker does run time linking by default, so we don't\n          # have to do anything special.\n          aix_use_runtimelinking=no\n          exp_sym_flag='-Bexport'\n          no_entry_flag=\"\"\n        else\n          aix_use_runtimelinking=no\n\n          # Test if we are trying to use run time linking or normal\n          # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n          # need to do runtime linking.\n          case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t    for ld_flag in $LDFLAGS; do\n\t      case $ld_flag in\n\t      *-brtl*)\n\t        aix_use_runtimelinking=yes\n\t        break\n\t        ;;\n\t      esac\n\t    done\n\t    ;;\n          esac\n\n          exp_sym_flag='-bexport'\n          no_entry_flag='-bnoentry'\n        fi\n\n        # When large executables or shared objects are built, AIX ld can\n        # have problems creating the table of contents.  If linking a library\n        # or program results in \"error TOC overflow\" add -mminimal-toc to\n        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n        _LT_TAGVAR(archive_cmds, $1)=''\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        _LT_TAGVAR(file_list_spec, $1)='${wl}-f,'\n\n        if test \"$GXX\" = yes; then\n          case $host_os in aix4.[[012]]|aix4.[[012]].*)\n          # We only want to do this on AIX 4.2 and lower, the check\n          # below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`${CC} -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t     strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t    # We have reworked collect2\n\t    :\n\t  else\n\t    # We have old collect2\n\t    _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t    # It fails to find uninstalled libraries when the uninstalled\n\t    # path is not listed in the libpath.  Setting hardcode_minus_L\n\t    # to unsupported forces relinking\n\t    _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n          esac\n          shared_flag='-shared'\n\t  if test \"$aix_use_runtimelinking\" = yes; then\n\t    shared_flag=\"$shared_flag \"'${wl}-G'\n\t  fi\n        else\n          # not using gcc\n          if test \"$host_cpu\" = ia64; then\n\t  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t  # chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n          else\n\t    if test \"$aix_use_runtimelinking\" = yes; then\n\t      shared_flag='${wl}-G'\n\t    else\n\t      shared_flag='${wl}-bM:SRE'\n\t    fi\n          fi\n        fi\n\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-bexpall'\n        # It seems that -bexpall does not export symbols beginning with\n        # underscore (_), so it is better to generate a list of symbols to\n\t# export.\n        _LT_TAGVAR(always_export_symbols, $1)=yes\n        if test \"$aix_use_runtimelinking\" = yes; then\n          # Warning - without using the other runtime loading flags (-brtl),\n          # -berok will link without error, but may produce a broken library.\n          _LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n          # Determine the default libpath from the value encoded in an empty\n          # executable.\n          _LT_SYS_MODULE_PATH_AIX([$1])\n          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then func_echo_all \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n        else\n          if test \"$host_cpu\" = ia64; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$exp_sym_flag:\\$export_symbols\"\n          else\n\t    # Determine the default libpath from the value encoded in an\n\t    # empty executable.\n\t    _LT_SYS_MODULE_PATH_AIX([$1])\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t    # Warning - without using the other run time loading flags,\n\t    # -berok will link without error, but may produce a broken library.\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t    if test \"$with_gnu_ld\" = yes; then\n\t      # We only use this code for GNU lds that support --whole-archive.\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t    else\n\t      # Exported symbols can be pulled into shared objects from archives\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t    fi\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t    # This is similar to how AIX traditionally builds its shared\n\t    # libraries.\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n          fi\n        fi\n        ;;\n\n      beos*)\n\tif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t  # support --undefined.  This deserves some investigation.  FIXME\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      chorus*)\n        case $cc_basename in\n          *)\n\t  # FIXME: insert proper C++ library support\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\t  ;;\n        esac\n        ;;\n\n      cygwin* | mingw* | pw32* | cegcc*)\n\tcase $GXX,$cc_basename in\n\t,cl* | no,cl*)\n\t  # Native MSVC\n\t  # hardcode_libdir_flag_spec is actually meaningless, as there is\n\t  # no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=yes\n\t  _LT_TAGVAR(file_list_spec, $1)='@'\n\t  # Tell ltmain to make .lib files, not .a files.\n\t  libext=lib\n\t  # Tell ltmain to make .dll files, not .so files.\n\t  shrext_cmds=\".dll\"\n\t  # FIXME: Setting linknames here is a bad hack.\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t      $SED -n -e 's/\\\\\\\\\\\\\\(.*\\\\\\\\\\\\\\)/-link\\\\\\ -EXPORT:\\\\\\\\\\\\\\1/' -e '1\\\\\\!p' < $export_symbols > $output_objdir/$soname.exp;\n\t    else\n\t      $SED -e 's/\\\\\\\\\\\\\\(.*\\\\\\\\\\\\\\)/-link\\\\\\ -EXPORT:\\\\\\\\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;\n\t    fi~\n\t    $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n\t    linknames='\n\t  # The linker will not automatically build a static lib if we build a DLL.\n\t  # _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t  # Don't use ranlib\n\t  _LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t  _LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n\t    lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n\t    case $lt_outputfile in\n\t      *.exe|*.EXE) ;;\n\t      *)\n\t\tlt_outputfile=\"$lt_outputfile.exe\"\n\t\tlt_tool_outputfile=\"$lt_tool_outputfile.exe\"\n\t\t;;\n\t    esac~\n\t    func_to_tool_file \"$lt_outputfile\"~\n\t    if test \"$MANIFEST_TOOL\" != \":\" && test -f \"$lt_outputfile.manifest\"; then\n\t      $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n\t      $RM \"$lt_outputfile.manifest\";\n\t    fi'\n\t  ;;\n\t*)\n\t  # g++\n\t  # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n\t  # as there is no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-all-symbols'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=no\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n\t  if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t    # If the export-symbols file already is a .def file (1st line\n\t    # is EXPORTS), use it as is; otherwise, prepend...\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t      cp $export_symbols $output_objdir/$soname.def;\n\t    else\n\t      echo EXPORTS > $output_objdir/$soname.def;\n\t      cat $export_symbols >> $output_objdir/$soname.def;\n\t    fi~\n\t    $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t  ;;\n\tesac\n\t;;\n      darwin* | rhapsody*)\n        _LT_DARWIN_LINKER_FEATURES($1)\n\t;;\n\n      dgux*)\n        case $cc_basename in\n          ec++*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          ghcx*)\n\t    # Green Hills C++ Compiler\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      freebsd2.*)\n        # C++ shared libraries reported to be fairly broken before\n\t# switch to ELF\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      freebsd-elf*)\n        _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n        ;;\n\n      freebsd* | dragonfly*)\n        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n        # conventions\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n        ;;\n\n      gnu*)\n        ;;\n\n      haiku*)\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        ;;\n\n      hpux9*)\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t             # but as the default\n\t\t\t\t             # location of the library.\n\n        case $cc_basename in\n          CC*)\n            # FIXME: insert proper C++ library support\n            _LT_TAGVAR(ld_shlibs, $1)=no\n            ;;\n          aCC*)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n            # Commands to make compiler produce verbose output that lists\n            # what \"hidden\" libraries, object files and flags are used when\n            # linking a shared library.\n            #\n            # There doesn't appear to be a way to prevent this compiler from\n            # explicitly linking system object files so we need to strip them\n            # from the output so that they don't get included in the library\n            # dependencies.\n            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP \"\\-L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n            ;;\n          *)\n            if test \"$GXX\" = yes; then\n              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib $pic_flag ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n            else\n              # FIXME: insert proper C++ library support\n              _LT_TAGVAR(ld_shlibs, $1)=no\n            fi\n            ;;\n        esac\n        ;;\n\n      hpux10*|hpux11*)\n        if test $with_gnu_ld = no; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n          case $host_cpu in\n            hppa*64*|ia64*)\n              ;;\n            *)\n\t      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n              ;;\n          esac\n        fi\n        case $host_cpu in\n          hppa*64*|ia64*)\n            _LT_TAGVAR(hardcode_direct, $1)=no\n            _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n            ;;\n          *)\n            _LT_TAGVAR(hardcode_direct, $1)=yes\n            _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t         # but as the default\n\t\t\t\t\t         # location of the library.\n            ;;\n        esac\n\n        case $cc_basename in\n          CC*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          aCC*)\n\t    case $host_cpu in\n\t      hppa*64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      ia64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      *)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t    esac\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP \"\\-L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n          *)\n\t    if test \"$GXX\" = yes; then\n\t      if test $with_gnu_ld = no; then\n\t        case $host_cpu in\n\t          hppa*64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          ia64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          *)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t        esac\n\t      fi\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      interix[[3-9]]*)\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n\t# Instead, shared libraries are loaded at an image base (0x10000000 by\n\t# default) and relocated if they conflict, which is a slow very memory\n\t# consuming and fragmenting process.  To avoid this, we pick a random,\n\t# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n\t# time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s,^,_,\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t;;\n      irix5* | irix6*)\n        case $cc_basename in\n          CC*)\n\t    # SGI C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    if test \"$GXX\" = yes; then\n\t      if test \"$with_gnu_ld\" = no; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t      else\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` -o $lib'\n\t      fi\n\t    fi\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\t    ;;\n        esac\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(inherit_rpath, $1)=yes\n        ;;\n\n      linux* | k*bsd*-gnu | kopensolaris*-gnu)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib ${wl}-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP \"ld\"`; rm -f libconftest$shared_ext; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t    ;;\n\t  icpc* | ecpc* )\n\t    # Intel C++\n\t    with_gnu_ld=yes\n\t    # version 8.0 and above of icpc choke on multiply defined symbols\n\t    # if we add $predep_objects and $postdep_objects, however 7.1 and\n\t    # earlier do not add the objects themselves.\n\t    case `$CC -V 2>&1` in\n\t      *\"Version 7.\"*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t      *)  # Version 8.0 or newer\n\t        tmp_idyn=\n\t        case $host_cpu in\n\t\t  ia64*) tmp_idyn=' -i_dynamic';;\n\t\tesac\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t    esac\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t    ;;\n          pgCC* | pgcpp*)\n            # Portland Group C++ compiler\n\t    case `$CC -V` in\n\t    *pgCC\\ [[1-5]].* | *pgcpp\\ [[1-5]].*)\n\t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n\t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n\t\t$RANLIB $oldlib'\n\t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n\t      ;;\n\t    *) # Version 6 and above use weak symbols\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n\t      ;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n            ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname  -o $lib ${wl}-retain-symbols-file $wl$export_symbols'\n\n\t    runpath_var=LD_RUN_PATH\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"X$list\" | $Xsed'\n\t    ;;\n\t  xl* | mpixl* | bgxl*)\n\t    # IBM XL 8.0 on PPC, with GNU ld\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    if test \"x$supports_anon_versioning\" = xyes; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t\tcat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t\techo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t\t$CC -qmkshrobj $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'\n\t    fi\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G${allow_undefined_flag} -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file ${wl}$export_symbols'\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t      _LT_TAGVAR(compiler_needs_object, $1)=yes\n\n\t      # Not sure whether something based on\n\t      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1\n\t      # would be better.\n\t      output_verbose_link_cmd='func_echo_all'\n\n\t      # Archives containing C++ object files must be created using\n\t      # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t      # necessary to make sure instantiated templates are included\n\t      # in the archive.\n\t      _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n\n      lynxos*)\n        # FIXME: insert proper C++ library support\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      m88k*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      mvs*)\n        case $cc_basename in\n          cxx*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\t  *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\tesac\n\t;;\n\n      netbsd*)\n        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n\t  wlarc=\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tfi\n\t# Workaround some broken pre-1.5 toolchains\n\toutput_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n\t;;\n\n      *nto* | *qnx*)\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n\t;;\n\n      openbsd2*)\n        # C++ shared libraries are fairly broken\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      openbsd*)\n\tif test -f /usr/libexec/ld.so; then\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file,$export_symbols -o $lib'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n\t  fi\n\t  output_verbose_link_cmd=func_echo_all\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      osf3* | osf4* | osf5*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo \"$lib\" | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Archives containing C++ object files must be created using\n\t    # the KAI C++ compiler.\n\t    case $host in\n\t      osf3*) _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs' ;;\n\t      *) _LT_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs' ;;\n\t    esac\n\t    ;;\n          RCC*)\n\t    # Rational C++ 2.4.1\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          cxx*)\n\t    case $host in\n\t      osf3*)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t\t;;\n\t      *)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n\t          echo \"-hidden\">> $lib.exp~\n\t          $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname ${wl}-input ${wl}$lib.exp  `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib~\n\t          $RM $lib.exp'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t\t;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\" | $GREP -v \"ld:\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n\t  *)\n\t    if test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t      _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t      case $host in\n\t        osf3*)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t\t  ;;\n\t        *)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t\t  ;;\n\t      esac\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t      # Commands to make compiler produce verbose output that lists\n\t      # what \"hidden\" libraries, object files and flags are used when\n\t      # linking a shared library.\n\t      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      psos*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      sunos4*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.x\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          lcc*)\n\t    # Lucid\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      solaris*)\n        case $cc_basename in\n          CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n            _LT_TAGVAR(archive_cmds_need_lc,$1)=yes\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag}  -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t      $CC -G${allow_undefined_flag} ${wl}-M ${wl}$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t    _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t    case $host_os in\n\t      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t      *)\n\t\t# The compiler driver will combine and reorder linker options,\n\t\t# but understands `-z linker_flag'.\n\t        # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t\t_LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\t        ;;\n\t    esac\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\n\t    output_verbose_link_cmd='func_echo_all'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t    ;;\n          gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\n\t    # The C++ compiler must be used to create the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    # GNU C++ compiler with Solaris linker\n\t    if test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-z ${wl}defs'\n\t      if $CC --version | $GREP -v '^2\\.7' > /dev/null; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t\t  $CC -shared $pic_flag -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      else\n\t        # g++ 2.7 appears to require `-G' NOT `-shared' on this\n\t        # platform.\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t\t  $CC -G -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      fi\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $wl$libdir'\n\t      case $host_os in\n\t\tsolaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t\t*)\n\t\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'\n\t\t  ;;\n\t      esac\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      case $cc_basename in\n        CC*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n      esac\n      ;;\n\n      sysv5* | sco3.2v5* | sco5v6*)\n\t# Note: We can NOT use -z defs as we might desire, because we do not\n\t# link with -lc, and that would cause any symbols used from libc to\n\t# always be unresolved, which means just about no library would\n\t# ever link correctly.  If we're not using GNU ld we use -z text\n\t# though, which does catch some bad symbols but isn't as heavy-handed\n\t# as -z defs.\n\t_LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n\t_LT_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'\n\t_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R,$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n\t_LT_TAGVAR(link_all_deplibs, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n\trunpath_var='LD_RUN_PATH'\n\n\tcase $cc_basename in\n          CC*)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~\n\t      '\"$_LT_TAGVAR(old_archive_cmds, $1)\"\n\t    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~\n\t      '\"$_LT_TAGVAR(reload_cmds, $1)\"\n\t    ;;\n\t  *)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    ;;\n\tesac\n      ;;\n\n      tandem*)\n        case $cc_basename in\n          NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      vxworks*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      *)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n    esac\n\n    AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\n    test \"$_LT_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n    _LT_TAGVAR(GCC, $1)=\"$GXX\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\n  LDCXX=$LD\n  LD=$lt_save_LD\n  GCC=$lt_save_GCC\n  with_gnu_ld=$lt_save_with_gnu_ld\n  lt_cv_path_LDCXX=$lt_cv_path_LD\n  lt_cv_path_LD=$lt_save_path_LD\n  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\n  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\nfi # test \"$_lt_caught_CXX_error\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_CXX_CONFIG\n\n\n# _LT_FUNC_STRIPNAME_CNF\n# ----------------------\n# func_stripname_cnf prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n#\n# This function is identical to the (non-XSI) version of func_stripname,\n# except this one can be used by m4 code that may be executed by configure,\n# rather than the libtool script.\nm4_defun([_LT_FUNC_STRIPNAME_CNF],[dnl\nAC_REQUIRE([_LT_DECL_SED])\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])\nfunc_stripname_cnf ()\n{\n  case ${2} in\n  .*) func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%\\\\\\\\${2}\\$%%\"`;;\n  *)  func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%${2}\\$%%\"`;;\n  esac\n} # func_stripname_cnf\n])# _LT_FUNC_STRIPNAME_CNF\n\n# _LT_SYS_HIDDEN_LIBDEPS([TAGNAME])\n# ---------------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nm4_defun([_LT_SYS_HIDDEN_LIBDEPS],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nAC_REQUIRE([_LT_FUNC_STRIPNAME_CNF])dnl\n# Dependencies to place before and after the object being linked:\n_LT_TAGVAR(predep_objects, $1)=\n_LT_TAGVAR(postdep_objects, $1)=\n_LT_TAGVAR(predeps, $1)=\n_LT_TAGVAR(postdeps, $1)=\n_LT_TAGVAR(compiler_lib_search_path, $1)=\n\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nm4_if([$1], [], [cat > conftest.$ac_ext <<_LT_EOF\nint a;\nvoid foo (void) { a = 0; }\n_LT_EOF\n], [$1], [CXX], [cat > conftest.$ac_ext <<_LT_EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\n_LT_EOF\n], [$1], [F77], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [FC], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [GCJ], [cat > conftest.$ac_ext <<_LT_EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\n_LT_EOF\n], [$1], [GO], [cat > conftest.$ac_ext <<_LT_EOF\npackage foo\nfunc foo() {\n}\n_LT_EOF\n])\n\n_lt_libdeps_save_CFLAGS=$CFLAGS\ncase \"$CC $CFLAGS \" in #(\n*\\ -flto*\\ *) CFLAGS=\"$CFLAGS -fno-lto\" ;;\n*\\ -fwhopr*\\ *) CFLAGS=\"$CFLAGS -fno-whopr\" ;;\n*\\ -fuse-linker-plugin*\\ *) CFLAGS=\"$CFLAGS -fno-use-linker-plugin\" ;;\nesac\n\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  for p in `eval \"$output_verbose_link_cmd\"`; do\n    case ${prev}${p} in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test $p = \"-L\" ||\n          test $p = \"-R\"; then\n\t prev=$p\n\t continue\n       fi\n\n       # Expand the sysroot to ease extracting the directories later.\n       if test -z \"$prev\"; then\n         case $p in\n         -L*) func_stripname_cnf '-L' '' \"$p\"; prev=-L; p=$func_stripname_result ;;\n         -R*) func_stripname_cnf '-R' '' \"$p\"; prev=-R; p=$func_stripname_result ;;\n         -l*) func_stripname_cnf '-l' '' \"$p\"; prev=-l; p=$func_stripname_result ;;\n         esac\n       fi\n       case $p in\n       =*) func_stripname_cnf '=' '' \"$p\"; p=$lt_sysroot$func_stripname_result ;;\n       esac\n       if test \"$pre_test_object_deps_done\" = no; then\n\t case ${prev} in\n\t -L | -R)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${prev}${p}\"\n\t   else\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_TAGVAR(compiler_lib_search_path, $1)} ${prev}${p}\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_TAGVAR(postdeps, $1)\"; then\n\t   _LT_TAGVAR(postdeps, $1)=\"${prev}${p}\"\n\t else\n\t   _LT_TAGVAR(postdeps, $1)=\"${_LT_TAGVAR(postdeps, $1)} ${prev}${p}\"\n\t fi\n       fi\n       prev=\n       ;;\n\n    *.lto.$objext) ;; # Ignore GCC LTO objects\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test \"$pre_test_object_deps_done\" = no; then\n\t if test -z \"$_LT_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_TAGVAR(predep_objects, $1)=\"$p\"\n\t else\n\t   _LT_TAGVAR(predep_objects, $1)=\"$_LT_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$p\"\n\t else\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$_LT_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$RM -f confest.$objext\nCFLAGS=$_lt_libdeps_save_CFLAGS\n\n# PORTME: override above test on systems where it is broken\nm4_if([$1], [CXX],\n[case $host_os in\ninterix[[3-9]]*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  _LT_TAGVAR(predep_objects,$1)=\n  _LT_TAGVAR(postdep_objects,$1)=\n  _LT_TAGVAR(postdeps,$1)=\n  ;;\n\nlinux*)\n  case `$CC -V 2>&1 | sed 5q` in\n  *Sun\\ C*)\n    # Sun C++ 5.9\n\n    # The more standards-conforming stlport4 library is\n    # incompatible with the Cstd library. Avoid specifying\n    # it if it's in CXXFLAGS. Ignore libCrun as\n    # -library=stlport4 depends on it.\n    case \" $CXX $CXXFLAGS \" in\n    *\" -library=stlport4 \"*)\n      solaris_use_stlport4=yes\n      ;;\n    esac\n\n    if test \"$solaris_use_stlport4\" != yes; then\n      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'\n    fi\n    ;;\n  esac\n  ;;\n\nsolaris*)\n  case $cc_basename in\n  CC* | sunCC*)\n    # The more standards-conforming stlport4 library is\n    # incompatible with the Cstd library. Avoid specifying\n    # it if it's in CXXFLAGS. Ignore libCrun as\n    # -library=stlport4 depends on it.\n    case \" $CXX $CXXFLAGS \" in\n    *\" -library=stlport4 \"*)\n      solaris_use_stlport4=yes\n      ;;\n    esac\n\n    # Adding this requires a known-good setup of shared libraries for\n    # Sun compiler versions before 5.6, else PIC objects from an old\n    # archive will be linked into the output, leading to subtle bugs.\n    if test \"$solaris_use_stlport4\" != yes; then\n      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'\n    fi\n    ;;\n  esac\n  ;;\nesac\n])\n\ncase \" $_LT_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=\nif test -n \"${_LT_TAGVAR(compiler_lib_search_path, $1)}\"; then\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo \" ${_LT_TAGVAR(compiler_lib_search_path, $1)}\" | ${SED} -e 's! -L! !g' -e 's!^ !!'`\nfi\n_LT_TAGDECL([], [compiler_lib_search_dirs], [1],\n    [The directories searched by this compiler when creating a shared library])\n_LT_TAGDECL([], [predep_objects], [1],\n    [Dependencies to place before and after the objects being linked to\n    create a shared library])\n_LT_TAGDECL([], [postdep_objects], [1])\n_LT_TAGDECL([], [predeps], [1])\n_LT_TAGDECL([], [postdeps], [1])\n_LT_TAGDECL([], [compiler_lib_search_path], [1],\n    [The library search path used internally by the compiler when linking\n    a shared library])\n])# _LT_SYS_HIDDEN_LIBDEPS\n\n\n# _LT_LANG_F77_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a Fortran 77 compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_F77_CONFIG],\n[AC_LANG_PUSH(Fortran 77)\nif test -z \"$F77\" || test \"X$F77\" = \"Xno\"; then\n  _lt_disable_F77=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the F77 compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_disable_F77\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=\"$CC\"\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${F77-\"f77\"}\n  CFLAGS=$FFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n  GCC=$G77\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test \"$enable_shared\" = yes && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n\t  test \"$enable_shared\" = yes && enable_static=no\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test \"$enable_shared\" = yes || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=\"$G77\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=\"$lt_save_CC\"\n  CFLAGS=\"$lt_save_CFLAGS\"\nfi # test \"$_lt_disable_F77\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_F77_CONFIG\n\n\n# _LT_LANG_FC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for a Fortran compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_FC_CONFIG],\n[AC_LANG_PUSH(Fortran)\n\nif test -z \"$FC\" || test \"X$FC\" = \"Xno\"; then\n  _lt_disable_FC=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for fc test sources.\nac_ext=${ac_fc_srcext-f}\n\n# Object file extension for compiled fc test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the FC compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_disable_FC\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=\"$CC\"\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${FC-\"f95\"}\n  CFLAGS=$FCFLAGS\n  compiler=$CC\n  GCC=$ac_cv_fc_compiler_gnu\n\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test \"$enable_shared\" = yes && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n\t  test \"$enable_shared\" = yes && enable_static=no\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test \"$enable_shared\" = yes || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=\"$ac_cv_fc_compiler_gnu\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test \"$_lt_disable_FC\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_FC_CONFIG\n\n\n# _LT_LANG_GCJ_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Java Compiler compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_GCJ_CONFIG],\n[AC_REQUIRE([LT_PROG_GCJ])dnl\nAC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GCJ-\"gcj\"}\nCFLAGS=$GCJFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=\"$LD\"\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GCJ_CONFIG\n\n\n# _LT_LANG_GO_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Go compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_GO_CONFIG],\n[AC_REQUIRE([LT_PROG_GO])dnl\nAC_LANG_SAVE\n\n# Source file extension for Go test sources.\nac_ext=go\n\n# Object file extension for compiled Go test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"package main; func main() { }\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='package main; func main() { }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GOC-\"gccgo\"}\nCFLAGS=$GOFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=\"$LD\"\n_LT_CC_BASENAME([$compiler])\n\n# Go did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GO_CONFIG\n\n\n# _LT_LANG_RC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for the Windows resource compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_RC_CONFIG],\n[AC_REQUIRE([LT_PROG_RC])dnl\nAC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=\"$lt_simple_compile_test_code\"\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=\nCC=${RC-\"windres\"}\nCFLAGS=\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nif test -n \"$compiler\"; then\n  :\n  _LT_CONFIG($1)\nfi\n\nGCC=$lt_save_GCC\nAC_LANG_RESTORE\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_RC_CONFIG\n\n\n# LT_PROG_GCJ\n# -----------\nAC_DEFUN([LT_PROG_GCJ],\n[m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],\n  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],\n    [AC_CHECK_TOOL(GCJ, gcj,)\n      test \"x${GCJFLAGS+set}\" = xset || GCJFLAGS=\"-g -O2\"\n      AC_SUBST(GCJFLAGS)])])[]dnl\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_GCJ], [LT_PROG_GCJ])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_GCJ], [])\n\n\n# LT_PROG_GO\n# ----------\nAC_DEFUN([LT_PROG_GO],\n[AC_CHECK_TOOL(GOC, gccgo,)\n])\n\n\n# LT_PROG_RC\n# ----------\nAC_DEFUN([LT_PROG_RC],\n[AC_CHECK_TOOL(RC, windres,)\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_RC], [LT_PROG_RC])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_RC], [])\n\n\n# _LT_DECL_EGREP\n# --------------\n# If we don't have a new enough Autoconf to choose the best grep\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_EGREP],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_REQUIRE([AC_PROG_FGREP])dnl\ntest -z \"$GREP\" && GREP=grep\n_LT_DECL([], [GREP], [1], [A grep program that handles long lines])\n_LT_DECL([], [EGREP], [1], [An ERE matcher])\n_LT_DECL([], [FGREP], [1], [A literal string matcher])\ndnl Non-bleeding-edge autoconf doesn't subst GREP, so do it here too\nAC_SUBST([GREP])\n])\n\n\n# _LT_DECL_OBJDUMP\n# --------------\n# If we don't have a new enough Autoconf to choose the best objdump\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_OBJDUMP],\n[AC_CHECK_TOOL(OBJDUMP, objdump, false)\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [An object symbol dumper])\nAC_SUBST([OBJDUMP])\n])\n\n# _LT_DECL_DLLTOOL\n# ----------------\n# Ensure DLLTOOL variable is set.\nm4_defun([_LT_DECL_DLLTOOL],\n[AC_CHECK_TOOL(DLLTOOL, dlltool, false)\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])\nAC_SUBST([DLLTOOL])\n])\n\n# _LT_DECL_SED\n# ------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nm4_defun([_LT_DECL_SED],\n[AC_PROG_SED\ntest -z \"$SED\" && SED=sed\nXsed=\"$SED -e 1s/^X//\"\n_LT_DECL([], [SED], [1], [A sed program that does not truncate output])\n_LT_DECL([], [Xsed], [\"\\$SED -e 1s/^X//\"],\n    [Sed that helps us avoid accidentally triggering echo(1) options like -n])\n])# _LT_DECL_SED\n\nm4_ifndef([AC_PROG_SED], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\n\nm4_defun([AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nIFS=$as_save_IFS\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f $lt_ac_sed && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test $lt_ac_count -gt 10 && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test $lt_ac_count -gt $lt_ac_max; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_SUBST([SED])\nAC_MSG_RESULT([$SED])\n])#AC_PROG_SED\n])#m4_ifndef\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_SED], [AC_PROG_SED])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_SED], [])\n\n\n# _LT_CHECK_SHELL_FEATURES\n# ------------------------\n# Find out whether the shell is Bourne or XSI compatible,\n# or has some other useful features.\nm4_defun([_LT_CHECK_SHELL_FEATURES],\n[AC_MSG_CHECKING([whether the shell understands some XSI constructs])\n# Try some XSI features\nxsi_shell=no\n( _lt_dummy=\"a/b/c\"\n  test \"${_lt_dummy##*/},${_lt_dummy%/*},${_lt_dummy#??}\"${_lt_dummy%\"$_lt_dummy\"}, \\\n      = c,a/b,b/c, \\\n    && eval 'test $(( 1 + 1 )) -eq 2 \\\n    && test \"${#_lt_dummy}\" -eq 5' ) >/dev/null 2>&1 \\\n  && xsi_shell=yes\nAC_MSG_RESULT([$xsi_shell])\n_LT_CONFIG_LIBTOOL_INIT([xsi_shell='$xsi_shell'])\n\nAC_MSG_CHECKING([whether the shell understands \"+=\"])\nlt_shell_append=no\n( foo=bar; set foo baz; eval \"$[1]+=\\$[2]\" && test \"$foo\" = barbaz ) \\\n    >/dev/null 2>&1 \\\n  && lt_shell_append=yes\nAC_MSG_RESULT([$lt_shell_append])\n_LT_CONFIG_LIBTOOL_INIT([lt_shell_append='$lt_shell_append'])\n\nif ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then\n  lt_unset=unset\nelse\n  lt_unset=false\nfi\n_LT_DECL([], [lt_unset], [0], [whether the shell understands \"unset\"])dnl\n\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  lt_SP2NL='tr \\040 \\012'\n  lt_NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  lt_SP2NL='tr \\100 \\n'\n  lt_NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n_LT_DECL([SP2NL], [lt_SP2NL], [1], [turn spaces into newlines])dnl\n_LT_DECL([NL2SP], [lt_NL2SP], [1], [turn newlines into spaces])dnl\n])# _LT_CHECK_SHELL_FEATURES\n\n\n# _LT_PROG_FUNCTION_REPLACE (FUNCNAME, REPLACEMENT-BODY)\n# ------------------------------------------------------\n# In `$cfgfile', look for function FUNCNAME delimited by `^FUNCNAME ()$' and\n# '^} FUNCNAME ', and replace its body with REPLACEMENT-BODY.\nm4_defun([_LT_PROG_FUNCTION_REPLACE],\n[dnl {\nsed -e '/^$1 ()$/,/^} # $1 /c\\\n$1 ()\\\n{\\\nm4_bpatsubsts([$2], [$], [\\\\], [^\\([\t ]\\)], [\\\\\\1])\n} # Extended-shell $1 implementation' \"$cfgfile\" > $cfgfile.tmp \\\n  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\ntest 0 -eq $? || _lt_function_replace_fail=:\n])\n\n\n# _LT_PROG_REPLACE_SHELLFNS\n# -------------------------\n# Replace existing portable implementations of several shell functions with\n# equivalent extended shell implementations where those features are available..\nm4_defun([_LT_PROG_REPLACE_SHELLFNS],\n[if test x\"$xsi_shell\" = xyes; then\n  _LT_PROG_FUNCTION_REPLACE([func_dirname], [dnl\n    case ${1} in\n      */*) func_dirname_result=\"${1%/*}${2}\" ;;\n      *  ) func_dirname_result=\"${3}\" ;;\n    esac])\n\n  _LT_PROG_FUNCTION_REPLACE([func_basename], [dnl\n    func_basename_result=\"${1##*/}\"])\n\n  _LT_PROG_FUNCTION_REPLACE([func_dirname_and_basename], [dnl\n    case ${1} in\n      */*) func_dirname_result=\"${1%/*}${2}\" ;;\n      *  ) func_dirname_result=\"${3}\" ;;\n    esac\n    func_basename_result=\"${1##*/}\"])\n\n  _LT_PROG_FUNCTION_REPLACE([func_stripname], [dnl\n    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\n    # positional parameters, so assign one to ordinary parameter first.\n    func_stripname_result=${3}\n    func_stripname_result=${func_stripname_result#\"${1}\"}\n    func_stripname_result=${func_stripname_result%\"${2}\"}])\n\n  _LT_PROG_FUNCTION_REPLACE([func_split_long_opt], [dnl\n    func_split_long_opt_name=${1%%=*}\n    func_split_long_opt_arg=${1#*=}])\n\n  _LT_PROG_FUNCTION_REPLACE([func_split_short_opt], [dnl\n    func_split_short_opt_arg=${1#??}\n    func_split_short_opt_name=${1%\"$func_split_short_opt_arg\"}])\n\n  _LT_PROG_FUNCTION_REPLACE([func_lo2o], [dnl\n    case ${1} in\n      *.lo) func_lo2o_result=${1%.lo}.${objext} ;;\n      *)    func_lo2o_result=${1} ;;\n    esac])\n\n  _LT_PROG_FUNCTION_REPLACE([func_xform], [    func_xform_result=${1%.*}.lo])\n\n  _LT_PROG_FUNCTION_REPLACE([func_arith], [    func_arith_result=$(( $[*] ))])\n\n  _LT_PROG_FUNCTION_REPLACE([func_len], [    func_len_result=${#1}])\nfi\n\nif test x\"$lt_shell_append\" = xyes; then\n  _LT_PROG_FUNCTION_REPLACE([func_append], [    eval \"${1}+=\\\\${2}\"])\n\n  _LT_PROG_FUNCTION_REPLACE([func_append_quoted], [dnl\n    func_quote_for_eval \"${2}\"\ndnl m4 expansion turns \\\\\\\\ into \\\\, and then the shell eval turns that into \\\n    eval \"${1}+=\\\\\\\\ \\\\$func_quote_for_eval_result\"])\n\n  # Save a `func_append' function call where possible by direct use of '+='\n  sed -e 's%func_append \\([[a-zA-Z_]]\\{1,\\}\\) \"%\\1+=\"%g' $cfgfile > $cfgfile.tmp \\\n    && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n      || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n  test 0 -eq $? || _lt_function_replace_fail=:\nelse\n  # Save a `func_append' function call even when '+=' is not available\n  sed -e 's%func_append \\([[a-zA-Z_]]\\{1,\\}\\) \"%\\1=\"$\\1%g' $cfgfile > $cfgfile.tmp \\\n    && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n      || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n  test 0 -eq $? || _lt_function_replace_fail=:\nfi\n\nif test x\"$_lt_function_replace_fail\" = x\":\"; then\n  AC_MSG_WARN([Unable to substitute extended shell functions in $ofile])\nfi\n])\n\n# _LT_PATH_CONVERSION_FUNCTIONS\n# -----------------------------\n# Determine which file name conversion functions should be used by\n# func_to_host_file (and, implicitly, by func_to_host_path).  These are needed\n# for certain cross-compile configurations and native mingw.\nm4_defun([_LT_PATH_CONVERSION_FUNCTIONS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_MSG_CHECKING([how to convert $build file names to $host format])\nAC_CACHE_VAL(lt_cv_to_host_file_cmd,\n[case $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_w32\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_w32\n        ;;\n    esac\n    ;;\n  *-*-cygwin* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_cygwin\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_noop\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_cygwin\n        ;;\n    esac\n    ;;\n  * ) # unhandled hosts (and \"normal\" native builds)\n    lt_cv_to_host_file_cmd=func_convert_file_noop\n    ;;\nesac\n])\nto_host_file_cmd=$lt_cv_to_host_file_cmd\nAC_MSG_RESULT([$lt_cv_to_host_file_cmd])\n_LT_DECL([to_host_file_cmd], [lt_cv_to_host_file_cmd],\n         [0], [convert $build file names to $host format])dnl\n\nAC_MSG_CHECKING([how to convert $build file names to toolchain format])\nAC_CACHE_VAL(lt_cv_to_tool_file_cmd,\n[#assume ordinary cross tools, or native build.\nlt_cv_to_tool_file_cmd=func_convert_file_noop\ncase $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_tool_file_cmd=func_convert_file_msys_to_w32\n        ;;\n    esac\n    ;;\nesac\n])\nto_tool_file_cmd=$lt_cv_to_tool_file_cmd\nAC_MSG_RESULT([$lt_cv_to_tool_file_cmd])\n_LT_DECL([to_tool_file_cmd], [lt_cv_to_tool_file_cmd],\n         [0], [convert $build files to toolchain format])dnl\n])# _LT_PATH_CONVERSION_FUNCTIONS\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/libltdl/m4/ltdl.m4": "# ltdl.m4 - Configure ltdl for the target system. -*-Autoconf-*-\n#\n#   Copyright (C) 1999-2006, 2007, 2008, 2011 Free Software Foundation, Inc.\n#   Written by Thomas Tanner, 1999\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\n# serial 18 LTDL_INIT\n\n# LT_CONFIG_LTDL_DIR(DIRECTORY, [LTDL-MODE])\n# ------------------------------------------\n# DIRECTORY contains the libltdl sources.  It is okay to call this\n# function multiple times, as long as the same DIRECTORY is always given.\nAC_DEFUN([LT_CONFIG_LTDL_DIR],\n[AC_BEFORE([$0], [LTDL_INIT])\n_$0($*)\n])# LT_CONFIG_LTDL_DIR\n\n# We break this out into a separate macro, so that we can call it safely\n# internally without being caught accidentally by the sed scan in libtoolize.\nm4_defun([_LT_CONFIG_LTDL_DIR],\n[dnl remove trailing slashes\nm4_pushdef([_ARG_DIR], m4_bpatsubst([$1], [/*$]))\nm4_case(_LTDL_DIR,\n\t[], [dnl only set lt_ltdl_dir if _ARG_DIR is not simply `.'\n\t     m4_if(_ARG_DIR, [.],\n\t             [],\n\t\t [m4_define([_LTDL_DIR], _ARG_DIR)\n\t          _LT_SHELL_INIT([lt_ltdl_dir=']_ARG_DIR['])])],\n    [m4_if(_ARG_DIR, _LTDL_DIR,\n\t    [],\n\t[m4_fatal([multiple libltdl directories: `]_LTDL_DIR[', `]_ARG_DIR['])])])\nm4_popdef([_ARG_DIR])\n])# _LT_CONFIG_LTDL_DIR\n\n# Initialise:\nm4_define([_LTDL_DIR], [])\n\n\n# _LT_BUILD_PREFIX\n# ----------------\n# If Autoconf is new enough, expand to `${top_build_prefix}', otherwise\n# to `${top_builddir}/'.\nm4_define([_LT_BUILD_PREFIX],\n[m4_ifdef([AC_AUTOCONF_VERSION],\n   [m4_if(m4_version_compare(m4_defn([AC_AUTOCONF_VERSION]), [2.62]),\n\t  [-1], [m4_ifdef([_AC_HAVE_TOP_BUILD_PREFIX],\n\t\t\t  [${top_build_prefix}],\n\t\t\t  [${top_builddir}/])],\n\t  [${top_build_prefix}])],\n   [${top_builddir}/])[]dnl\n])\n\n\n# LTDL_CONVENIENCE\n# ----------------\n# sets LIBLTDL to the link flags for the libltdl convenience library and\n# LTDLINCL to the include flags for the libltdl header and adds\n# --enable-ltdl-convenience to the configure arguments.  Note that\n# AC_CONFIG_SUBDIRS is not called here.  LIBLTDL will be prefixed with\n# '${top_build_prefix}' if available, otherwise with '${top_builddir}/',\n# and LTDLINCL will be prefixed with '${top_srcdir}/' (note the single\n# quotes!).  If your package is not flat and you're not using automake,\n# define top_build_prefix, top_builddir, and top_srcdir appropriately\n# in your Makefiles.\nAC_DEFUN([LTDL_CONVENIENCE],\n[AC_BEFORE([$0], [LTDL_INIT])dnl\ndnl Although the argument is deprecated and no longer documented,\ndnl LTDL_CONVENIENCE used to take a DIRECTORY orgument, if we have one\ndnl here make sure it is the same as any other declaration of libltdl's\ndnl location!  This also ensures lt_ltdl_dir is set when configure.ac is\ndnl not yet using an explicit LT_CONFIG_LTDL_DIR.\nm4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl\n_$0()\n])# LTDL_CONVENIENCE\n\n# AC_LIBLTDL_CONVENIENCE accepted a directory argument in older libtools,\n# now we have LT_CONFIG_LTDL_DIR:\nAU_DEFUN([AC_LIBLTDL_CONVENIENCE],\n[_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])\n_LTDL_CONVENIENCE])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBLTDL_CONVENIENCE], [])\n\n\n# _LTDL_CONVENIENCE\n# -----------------\n# Code shared by LTDL_CONVENIENCE and LTDL_INIT([convenience]).\nm4_defun([_LTDL_CONVENIENCE],\n[case $enable_ltdl_convenience in\n  no) AC_MSG_ERROR([this package needs a convenience libltdl]) ;;\n  \"\") enable_ltdl_convenience=yes\n      ac_configure_args=\"$ac_configure_args --enable-ltdl-convenience\" ;;\nesac\nLIBLTDL='_LT_BUILD_PREFIX'\"${lt_ltdl_dir+$lt_ltdl_dir/}libltdlc.la\"\nLTDLDEPS=$LIBLTDL\nLTDLINCL='-I${top_srcdir}'\"${lt_ltdl_dir+/$lt_ltdl_dir}\"\n\nAC_SUBST([LIBLTDL])\nAC_SUBST([LTDLDEPS])\nAC_SUBST([LTDLINCL])\n\n# For backwards non-gettext consistent compatibility...\nINCLTDL=\"$LTDLINCL\"\nAC_SUBST([INCLTDL])\n])# _LTDL_CONVENIENCE\n\n\n# LTDL_INSTALLABLE\n# ----------------\n# sets LIBLTDL to the link flags for the libltdl installable library\n# and LTDLINCL to the include flags for the libltdl header and adds\n# --enable-ltdl-install to the configure arguments.  Note that\n# AC_CONFIG_SUBDIRS is not called from here.  If an installed libltdl\n# is not found, LIBLTDL will be prefixed with '${top_build_prefix}' if\n# available, otherwise with '${top_builddir}/', and LTDLINCL will be\n# prefixed with '${top_srcdir}/' (note the single quotes!).  If your\n# package is not flat and you're not using automake, define top_build_prefix,\n# top_builddir, and top_srcdir appropriately in your Makefiles.\n# In the future, this macro may have to be called after LT_INIT.\nAC_DEFUN([LTDL_INSTALLABLE],\n[AC_BEFORE([$0], [LTDL_INIT])dnl\ndnl Although the argument is deprecated and no longer documented,\ndnl LTDL_INSTALLABLE used to take a DIRECTORY orgument, if we have one\ndnl here make sure it is the same as any other declaration of libltdl's\ndnl location!  This also ensures lt_ltdl_dir is set when configure.ac is\ndnl not yet using an explicit LT_CONFIG_LTDL_DIR.\nm4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl\n_$0()\n])# LTDL_INSTALLABLE\n\n# AC_LIBLTDL_INSTALLABLE accepted a directory argument in older libtools,\n# now we have LT_CONFIG_LTDL_DIR:\nAU_DEFUN([AC_LIBLTDL_INSTALLABLE],\n[_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])\n_LTDL_INSTALLABLE])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBLTDL_INSTALLABLE], [])\n\n\n# _LTDL_INSTALLABLE\n# -----------------\n# Code shared by LTDL_INSTALLABLE and LTDL_INIT([installable]).\nm4_defun([_LTDL_INSTALLABLE],\n[if test -f $prefix/lib/libltdl.la; then\n  lt_save_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"-L$prefix/lib $LDFLAGS\"\n  AC_CHECK_LIB([ltdl], [lt_dlinit], [lt_lib_ltdl=yes])\n  LDFLAGS=\"$lt_save_LDFLAGS\"\n  if test x\"${lt_lib_ltdl-no}\" = xyes; then\n    if test x\"$enable_ltdl_install\" != xyes; then\n      # Don't overwrite $prefix/lib/libltdl.la without --enable-ltdl-install\n      AC_MSG_WARN([not overwriting libltdl at $prefix, force with `--enable-ltdl-install'])\n      enable_ltdl_install=no\n    fi\n  elif test x\"$enable_ltdl_install\" = xno; then\n    AC_MSG_WARN([libltdl not installed, but installation disabled])\n  fi\nfi\n\n# If configure.ac declared an installable ltdl, and the user didn't override\n# with --disable-ltdl-install, we will install the shipped libltdl.\ncase $enable_ltdl_install in\n  no) ac_configure_args=\"$ac_configure_args --enable-ltdl-install=no\"\n      LIBLTDL=\"-lltdl\"\n      LTDLDEPS=\n      LTDLINCL=\n      ;;\n  *)  enable_ltdl_install=yes\n      ac_configure_args=\"$ac_configure_args --enable-ltdl-install\"\n      LIBLTDL='_LT_BUILD_PREFIX'\"${lt_ltdl_dir+$lt_ltdl_dir/}libltdl.la\"\n      LTDLDEPS=$LIBLTDL\n      LTDLINCL='-I${top_srcdir}'\"${lt_ltdl_dir+/$lt_ltdl_dir}\"\n      ;;\nesac\n\nAC_SUBST([LIBLTDL])\nAC_SUBST([LTDLDEPS])\nAC_SUBST([LTDLINCL])\n\n# For backwards non-gettext consistent compatibility...\nINCLTDL=\"$LTDLINCL\"\nAC_SUBST([INCLTDL])\n])# LTDL_INSTALLABLE\n\n\n# _LTDL_MODE_DISPATCH\n# -------------------\nm4_define([_LTDL_MODE_DISPATCH],\n[dnl If _LTDL_DIR is `.', then we are configuring libltdl itself:\nm4_if(_LTDL_DIR, [],\n\t[],\n    dnl if _LTDL_MODE was not set already, the default value is `subproject':\n    [m4_case(m4_default(_LTDL_MODE, [subproject]),\n\t  [subproject], [AC_CONFIG_SUBDIRS(_LTDL_DIR)\n\t\t\t  _LT_SHELL_INIT([lt_dlopen_dir=\"$lt_ltdl_dir\"])],\n\t  [nonrecursive], [_LT_SHELL_INIT([lt_dlopen_dir=\"$lt_ltdl_dir\"; lt_libobj_prefix=\"$lt_ltdl_dir/\"])],\n\t  [recursive], [],\n\t[m4_fatal([unknown libltdl mode: ]_LTDL_MODE)])])dnl\ndnl Be careful not to expand twice:\nm4_define([$0], [])\n])# _LTDL_MODE_DISPATCH\n\n\n# _LT_LIBOBJ(MODULE_NAME)\n# -----------------------\n# Like AC_LIBOBJ, except that MODULE_NAME goes into _LT_LIBOBJS instead\n# of into LIBOBJS.\nAC_DEFUN([_LT_LIBOBJ], [\n  m4_pattern_allow([^_LT_LIBOBJS$])\n  _LT_LIBOBJS=\"$_LT_LIBOBJS $1.$ac_objext\"\n])# _LT_LIBOBJS\n\n\n# LTDL_INIT([OPTIONS])\n# --------------------\n# Clients of libltdl can use this macro to allow the installer to\n# choose between a shipped copy of the ltdl sources or a preinstalled\n# version of the library.  If the shipped ltdl sources are not in a\n# subdirectory named libltdl, the directory name must be given by\n# LT_CONFIG_LTDL_DIR.\nAC_DEFUN([LTDL_INIT],\n[dnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\ndnl We need to keep our own list of libobjs separate from our parent project,\ndnl and the easiest way to do that is redefine the AC_LIBOBJs macro while\ndnl we look for our own LIBOBJs.\nm4_pushdef([AC_LIBOBJ], m4_defn([_LT_LIBOBJ]))\nm4_pushdef([AC_LIBSOURCES])\n\ndnl If not otherwise defined, default to the 1.5.x compatible subproject mode:\nm4_if(_LTDL_MODE, [],\n        [m4_define([_LTDL_MODE], m4_default([$2], [subproject]))\n        m4_if([-1], [m4_bregexp(_LTDL_MODE, [\\(subproject\\|\\(non\\)?recursive\\)])],\n                [m4_fatal([unknown libltdl mode: ]_LTDL_MODE)])])\n\nAC_ARG_WITH([included_ltdl],\n    [AS_HELP_STRING([--with-included-ltdl],\n                    [use the GNU ltdl sources included here])])\n\nif test \"x$with_included_ltdl\" != xyes; then\n  # We are not being forced to use the included libltdl sources, so\n  # decide whether there is a useful installed version we can use.\n  AC_CHECK_HEADER([ltdl.h],\n      [AC_CHECK_DECL([lt_dlinterface_register],\n\t   [AC_CHECK_LIB([ltdl], [lt_dladvise_preload],\n\t       [with_included_ltdl=no],\n\t       [with_included_ltdl=yes])],\n\t   [with_included_ltdl=yes],\n\t   [AC_INCLUDES_DEFAULT\n\t    #include <ltdl.h>])],\n      [with_included_ltdl=yes],\n      [AC_INCLUDES_DEFAULT]\n  )\nfi\n\ndnl If neither LT_CONFIG_LTDL_DIR, LTDL_CONVENIENCE nor LTDL_INSTALLABLE\ndnl was called yet, then for old times' sake, we assume libltdl is in an\ndnl eponymous directory:\nAC_PROVIDE_IFELSE([LT_CONFIG_LTDL_DIR], [], [_LT_CONFIG_LTDL_DIR([libltdl])])\n\nAC_ARG_WITH([ltdl_include],\n    [AS_HELP_STRING([--with-ltdl-include=DIR],\n                    [use the ltdl headers installed in DIR])])\n\nif test -n \"$with_ltdl_include\"; then\n  if test -f \"$with_ltdl_include/ltdl.h\"; then :\n  else\n    AC_MSG_ERROR([invalid ltdl include directory: `$with_ltdl_include'])\n  fi\nelse\n  with_ltdl_include=no\nfi\n\nAC_ARG_WITH([ltdl_lib],\n    [AS_HELP_STRING([--with-ltdl-lib=DIR],\n                    [use the libltdl.la installed in DIR])])\n\nif test -n \"$with_ltdl_lib\"; then\n  if test -f \"$with_ltdl_lib/libltdl.la\"; then :\n  else\n    AC_MSG_ERROR([invalid ltdl library directory: `$with_ltdl_lib'])\n  fi\nelse\n  with_ltdl_lib=no\nfi\n\ncase ,$with_included_ltdl,$with_ltdl_include,$with_ltdl_lib, in\n  ,yes,no,no,)\n\tm4_case(m4_default(_LTDL_TYPE, [convenience]),\n\t    [convenience], [_LTDL_CONVENIENCE],\n\t    [installable], [_LTDL_INSTALLABLE],\n\t  [m4_fatal([unknown libltdl build type: ]_LTDL_TYPE)])\n\t;;\n  ,no,no,no,)\n\t# If the included ltdl is not to be used, then use the\n\t# preinstalled libltdl we found.\n\tAC_DEFINE([HAVE_LTDL], [1],\n\t  [Define this if a modern libltdl is already installed])\n\tLIBLTDL=-lltdl\n\tLTDLDEPS=\n\tLTDLINCL=\n\t;;\n  ,no*,no,*)\n\tAC_MSG_ERROR([`--with-ltdl-include' and `--with-ltdl-lib' options must be used together])\n\t;;\n  *)\twith_included_ltdl=no\n\tLIBLTDL=\"-L$with_ltdl_lib -lltdl\"\n\tLTDLDEPS=\n\tLTDLINCL=\"-I$with_ltdl_include\"\n\t;;\nesac\nINCLTDL=\"$LTDLINCL\"\n\n# Report our decision...\nAC_MSG_CHECKING([where to find libltdl headers])\nAC_MSG_RESULT([$LTDLINCL])\nAC_MSG_CHECKING([where to find libltdl library])\nAC_MSG_RESULT([$LIBLTDL])\n\n_LTDL_SETUP\n\ndnl restore autoconf definition.\nm4_popdef([AC_LIBOBJ])\nm4_popdef([AC_LIBSOURCES])\n\nAC_CONFIG_COMMANDS_PRE([\n    _ltdl_libobjs=\n    _ltdl_ltlibobjs=\n    if test -n \"$_LT_LIBOBJS\"; then\n      # Remove the extension.\n      _lt_sed_drop_objext='s/\\.o$//;s/\\.obj$//'\n      for i in `for i in $_LT_LIBOBJS; do echo \"$i\"; done | sed \"$_lt_sed_drop_objext\" | sort -u`; do\n        _ltdl_libobjs=\"$_ltdl_libobjs $lt_libobj_prefix$i.$ac_objext\"\n        _ltdl_ltlibobjs=\"$_ltdl_ltlibobjs $lt_libobj_prefix$i.lo\"\n      done\n    fi\n    AC_SUBST([ltdl_LIBOBJS], [$_ltdl_libobjs])\n    AC_SUBST([ltdl_LTLIBOBJS], [$_ltdl_ltlibobjs])\n])\n\n# Only expand once:\nm4_define([LTDL_INIT])\n])# LTDL_INIT\n\n# Old names:\nAU_DEFUN([AC_LIB_LTDL], [LTDL_INIT($@)])\nAU_DEFUN([AC_WITH_LTDL], [LTDL_INIT($@)])\nAU_DEFUN([LT_WITH_LTDL], [LTDL_INIT($@)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIB_LTDL], [])\ndnl AC_DEFUN([AC_WITH_LTDL], [])\ndnl AC_DEFUN([LT_WITH_LTDL], [])\n\n\n# _LTDL_SETUP\n# -----------\n# Perform all the checks necessary for compilation of the ltdl objects\n#  -- including compiler checks and header checks.  This is a public\n# interface  mainly for the benefit of libltdl's own configure.ac, most\n# other users should call LTDL_INIT instead.\nAC_DEFUN([_LTDL_SETUP],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_SYS_MODULE_EXT])dnl\nAC_REQUIRE([LT_SYS_MODULE_PATH])dnl\nAC_REQUIRE([LT_SYS_DLSEARCH_PATH])dnl\nAC_REQUIRE([LT_LIB_DLLOAD])dnl\nAC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl\nAC_REQUIRE([LT_FUNC_DLSYM_USCORE])dnl\nAC_REQUIRE([LT_SYS_DLOPEN_DEPLIBS])dnl\nAC_REQUIRE([gl_FUNC_ARGZ])dnl\n\nm4_require([_LT_CHECK_OBJDIR])dnl\nm4_require([_LT_HEADER_DLFCN])dnl\nm4_require([_LT_CHECK_DLPREOPEN])dnl\nm4_require([_LT_DECL_SED])dnl\n\ndnl Don't require this, or it will be expanded earlier than the code\ndnl that sets the variables it relies on:\n_LT_ENABLE_INSTALL\n\ndnl _LTDL_MODE specific code must be called at least once:\n_LTDL_MODE_DISPATCH\n\n# In order that ltdl.c can compile, find out the first AC_CONFIG_HEADERS\n# the user used.  This is so that ltdl.h can pick up the parent projects\n# config.h file, The first file in AC_CONFIG_HEADERS must contain the\n# definitions required by ltdl.c.\n# FIXME: Remove use of undocumented AC_LIST_HEADERS (2.59 compatibility).\nAC_CONFIG_COMMANDS_PRE([dnl\nm4_pattern_allow([^LT_CONFIG_H$])dnl\nm4_ifset([AH_HEADER],\n    [LT_CONFIG_H=AH_HEADER],\n    [m4_ifset([AC_LIST_HEADERS],\n\t    [LT_CONFIG_H=`echo \"AC_LIST_HEADERS\" | $SED 's,^[[      ]]*,,;s,[[ :]].*$,,'`],\n\t[])])])\nAC_SUBST([LT_CONFIG_H])\n\nAC_CHECK_HEADERS([unistd.h dl.h sys/dl.h dld.h mach-o/dyld.h dirent.h],\n\t[], [], [AC_INCLUDES_DEFAULT])\n\nAC_CHECK_FUNCS([closedir opendir readdir], [], [AC_LIBOBJ([lt__dirent])])\nAC_CHECK_FUNCS([strlcat strlcpy], [], [AC_LIBOBJ([lt__strl])])\n\nm4_pattern_allow([LT_LIBEXT])dnl\nAC_DEFINE_UNQUOTED([LT_LIBEXT],[\"$libext\"],[The archive extension])\n\nname=\neval \"lt_libprefix=\\\"$libname_spec\\\"\"\nm4_pattern_allow([LT_LIBPREFIX])dnl\nAC_DEFINE_UNQUOTED([LT_LIBPREFIX],[\"$lt_libprefix\"],[The archive prefix])\n\nname=ltdl\neval \"LTDLOPEN=\\\"$libname_spec\\\"\"\nAC_SUBST([LTDLOPEN])\n])# _LTDL_SETUP\n\n\n# _LT_ENABLE_INSTALL\n# ------------------\nm4_define([_LT_ENABLE_INSTALL],\n[AC_ARG_ENABLE([ltdl-install],\n    [AS_HELP_STRING([--enable-ltdl-install], [install libltdl])])\n\ncase ,${enable_ltdl_install},${enable_ltdl_convenience} in\n  *yes*) ;;\n  *) enable_ltdl_convenience=yes ;;\nesac\n\nm4_ifdef([AM_CONDITIONAL],\n[AM_CONDITIONAL(INSTALL_LTDL, test x\"${enable_ltdl_install-no}\" != xno)\n AM_CONDITIONAL(CONVENIENCE_LTDL, test x\"${enable_ltdl_convenience-no}\" != xno)])\n])# _LT_ENABLE_INSTALL\n\n\n# LT_SYS_DLOPEN_DEPLIBS\n# ---------------------\nAC_DEFUN([LT_SYS_DLOPEN_DEPLIBS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_CACHE_CHECK([whether deplibs are loaded by dlopen],\n  [lt_cv_sys_dlopen_deplibs],\n  [# PORTME does your system automatically load deplibs for dlopen?\n  # or its logical equivalent (e.g. shl_load for HP-UX < 11)\n  # For now, we just catch OSes we know something about -- in the\n  # future, we'll try test this programmatically.\n  lt_cv_sys_dlopen_deplibs=unknown\n  case $host_os in\n  aix3*|aix4.1.*|aix4.2.*)\n    # Unknown whether this is true for these versions of AIX, but\n    # we want this `case' here to explicitly catch those versions.\n    lt_cv_sys_dlopen_deplibs=unknown\n    ;;\n  aix[[4-9]]*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  amigaos*)\n    case $host_cpu in\n    powerpc)\n      lt_cv_sys_dlopen_deplibs=no\n      ;;\n    esac\n    ;;\n  darwin*)\n    # Assuming the user has installed a libdl from somewhere, this is true\n    # If you are looking for one http://www.opendarwin.org/projects/dlcompat\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  freebsd* | dragonfly*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  gnu* | linux* | k*bsd*-gnu | kopensolaris*-gnu)\n    # GNU and its variants, using gnu ld.so (Glibc)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  hpux10*|hpux11*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  interix*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  irix[[12345]]*|irix6.[[01]]*)\n    # Catch all versions of IRIX before 6.2, and indicate that we don't\n    # know how it worked for any of those versions.\n    lt_cv_sys_dlopen_deplibs=unknown\n    ;;\n  irix*)\n    # The case above catches anything before 6.2, and it's known that\n    # at 6.2 and later dlopen does load deplibs.\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  netbsd*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  openbsd*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  osf[[1234]]*)\n    # dlopen did load deplibs (at least at 4.x), but until the 5.x series,\n    # it did *not* use an RPATH in a shared library to find objects the\n    # library depends on, so we explicitly say `no'.\n    lt_cv_sys_dlopen_deplibs=no\n    ;;\n  osf5.0|osf5.0a|osf5.1)\n    # dlopen *does* load deplibs and with the right loader patch applied\n    # it even uses RPATH in a shared library to search for shared objects\n    # that the library depends on, but there's no easy way to know if that\n    # patch is installed.  Since this is the case, all we can really\n    # say is unknown -- it depends on the patch being installed.  If\n    # it is, this changes to `yes'.  Without it, it would be `no'.\n    lt_cv_sys_dlopen_deplibs=unknown\n    ;;\n  osf*)\n    # the two cases above should catch all versions of osf <= 5.1.  Read\n    # the comments above for what we know about them.\n    # At > 5.1, deplibs are loaded *and* any RPATH in a shared library\n    # is used to find them so we can finally say `yes'.\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  qnx*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  solaris*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n    libltdl_cv_sys_dlopen_deplibs=yes\n    ;;\n  esac\n  ])\nif test \"$lt_cv_sys_dlopen_deplibs\" != yes; then\n AC_DEFINE([LTDL_DLOPEN_DEPLIBS], [1],\n    [Define if the OS needs help to load dependent libraries for dlopen().])\nfi\n])# LT_SYS_DLOPEN_DEPLIBS\n\n# Old name:\nAU_ALIAS([AC_LTDL_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [])\n\n\n# LT_SYS_MODULE_EXT\n# -----------------\nAC_DEFUN([LT_SYS_MODULE_EXT],\n[m4_require([_LT_SYS_DYNAMIC_LINKER])dnl\nAC_CACHE_CHECK([which extension is used for runtime loadable modules],\n  [libltdl_cv_shlibext],\n[\nmodule=yes\neval libltdl_cv_shlibext=$shrext_cmds\nmodule=no\neval libltdl_cv_shrext=$shrext_cmds\n  ])\nif test -n \"$libltdl_cv_shlibext\"; then\n  m4_pattern_allow([LT_MODULE_EXT])dnl\n  AC_DEFINE_UNQUOTED([LT_MODULE_EXT], [\"$libltdl_cv_shlibext\"],\n    [Define to the extension used for runtime loadable modules, say, \".so\".])\nfi\nif test \"$libltdl_cv_shrext\" != \"$libltdl_cv_shlibext\"; then\n  m4_pattern_allow([LT_SHARED_EXT])dnl\n  AC_DEFINE_UNQUOTED([LT_SHARED_EXT], [\"$libltdl_cv_shrext\"],\n    [Define to the shared library suffix, say, \".dylib\".])\nfi\n])# LT_SYS_MODULE_EXT\n\n# Old name:\nAU_ALIAS([AC_LTDL_SHLIBEXT], [LT_SYS_MODULE_EXT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SHLIBEXT], [])\n\n\n# LT_SYS_MODULE_PATH\n# ------------------\nAC_DEFUN([LT_SYS_MODULE_PATH],\n[m4_require([_LT_SYS_DYNAMIC_LINKER])dnl\nAC_CACHE_CHECK([which variable specifies run-time module search path],\n  [lt_cv_module_path_var], [lt_cv_module_path_var=\"$shlibpath_var\"])\nif test -n \"$lt_cv_module_path_var\"; then\n  m4_pattern_allow([LT_MODULE_PATH_VAR])dnl\n  AC_DEFINE_UNQUOTED([LT_MODULE_PATH_VAR], [\"$lt_cv_module_path_var\"],\n    [Define to the name of the environment variable that determines the run-time module search path.])\nfi\n])# LT_SYS_MODULE_PATH\n\n# Old name:\nAU_ALIAS([AC_LTDL_SHLIBPATH], [LT_SYS_MODULE_PATH])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SHLIBPATH], [])\n\n\n# LT_SYS_DLSEARCH_PATH\n# --------------------\nAC_DEFUN([LT_SYS_DLSEARCH_PATH],\n[m4_require([_LT_SYS_DYNAMIC_LINKER])dnl\nAC_CACHE_CHECK([for the default library search path],\n  [lt_cv_sys_dlsearch_path],\n  [lt_cv_sys_dlsearch_path=\"$sys_lib_dlsearch_path_spec\"])\nif test -n \"$lt_cv_sys_dlsearch_path\"; then\n  sys_dlsearch_path=\n  for dir in $lt_cv_sys_dlsearch_path; do\n    if test -z \"$sys_dlsearch_path\"; then\n      sys_dlsearch_path=\"$dir\"\n    else\n      sys_dlsearch_path=\"$sys_dlsearch_path$PATH_SEPARATOR$dir\"\n    fi\n  done\n  m4_pattern_allow([LT_DLSEARCH_PATH])dnl\n  AC_DEFINE_UNQUOTED([LT_DLSEARCH_PATH], [\"$sys_dlsearch_path\"],\n    [Define to the system default library search path.])\nfi\n])# LT_SYS_DLSEARCH_PATH\n\n# Old name:\nAU_ALIAS([AC_LTDL_SYSSEARCHPATH], [LT_SYS_DLSEARCH_PATH])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SYSSEARCHPATH], [])\n\n\n# _LT_CHECK_DLPREOPEN\n# -------------------\nm4_defun([_LT_CHECK_DLPREOPEN],\n[m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nAC_CACHE_CHECK([whether libtool supports -dlopen/-dlpreopen],\n  [libltdl_cv_preloaded_symbols],\n  [if test -n \"$lt_cv_sys_global_symbol_pipe\"; then\n    libltdl_cv_preloaded_symbols=yes\n  else\n    libltdl_cv_preloaded_symbols=no\n  fi\n  ])\nif test x\"$libltdl_cv_preloaded_symbols\" = xyes; then\n  AC_DEFINE([HAVE_PRELOADED_SYMBOLS], [1],\n    [Define if libtool can extract symbol lists from object files.])\nfi\n])# _LT_CHECK_DLPREOPEN\n\n\n# LT_LIB_DLLOAD\n# -------------\nAC_DEFUN([LT_LIB_DLLOAD],\n[m4_pattern_allow([^LT_DLLOADERS$])\nLT_DLLOADERS=\nAC_SUBST([LT_DLLOADERS])\n\nAC_LANG_PUSH([C])\n\nLIBADD_DLOPEN=\nAC_SEARCH_LIBS([dlopen], [dl],\n\t[AC_DEFINE([HAVE_LIBDL], [1],\n\t\t   [Define if you have the libdl library or equivalent.])\n\tif test \"$ac_cv_search_dlopen\" != \"none required\" ; then\n\t  LIBADD_DLOPEN=\"-ldl\"\n\tfi\n\tlibltdl_cv_lib_dl_dlopen=\"yes\"\n\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la\"],\n    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#if HAVE_DLFCN_H\n#  include <dlfcn.h>\n#endif\n    ]], [[dlopen(0, 0);]])],\n\t    [AC_DEFINE([HAVE_LIBDL], [1],\n\t\t       [Define if you have the libdl library or equivalent.])\n\t    libltdl_cv_func_dlopen=\"yes\"\n\t    LT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la\"],\n\t[AC_CHECK_LIB([svld], [dlopen],\n\t\t[AC_DEFINE([HAVE_LIBDL], [1],\n\t\t\t [Define if you have the libdl library or equivalent.])\n\t        LIBADD_DLOPEN=\"-lsvld\" libltdl_cv_func_dlopen=\"yes\"\n\t\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la\"])])])\nif test x\"$libltdl_cv_func_dlopen\" = xyes || test x\"$libltdl_cv_lib_dl_dlopen\" = xyes\nthen\n  lt_save_LIBS=\"$LIBS\"\n  LIBS=\"$LIBS $LIBADD_DLOPEN\"\n  AC_CHECK_FUNCS([dlerror])\n  LIBS=\"$lt_save_LIBS\"\nfi\nAC_SUBST([LIBADD_DLOPEN])\n\nLIBADD_SHL_LOAD=\nAC_CHECK_FUNC([shl_load],\n\t[AC_DEFINE([HAVE_SHL_LOAD], [1],\n\t\t   [Define if you have the shl_load function.])\n\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la\"],\n    [AC_CHECK_LIB([dld], [shl_load],\n\t    [AC_DEFINE([HAVE_SHL_LOAD], [1],\n\t\t       [Define if you have the shl_load function.])\n\t    LT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la\"\n\t    LIBADD_SHL_LOAD=\"-ldld\"])])\nAC_SUBST([LIBADD_SHL_LOAD])\n\ncase $host_os in\ndarwin[[1567]].*)\n# We only want this for pre-Mac OS X 10.4.\n  AC_CHECK_FUNC([_dyld_func_lookup],\n\t[AC_DEFINE([HAVE_DYLD], [1],\n\t\t   [Define if you have the _dyld_func_lookup function.])\n\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dyld.la\"])\n  ;;\nbeos*)\n  LT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}load_add_on.la\"\n  ;;\ncygwin* | mingw* | os2* | pw32*)\n  AC_CHECK_DECLS([cygwin_conv_path], [], [], [[#include <sys/cygwin.h>]])\n  LT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}loadlibrary.la\"\n  ;;\nesac\n\nAC_CHECK_LIB([dld], [dld_link],\n\t[AC_DEFINE([HAVE_DLD], [1],\n\t\t   [Define if you have the GNU dld library.])\n\t\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dld_link.la\"])\nAC_SUBST([LIBADD_DLD_LINK])\n\nm4_pattern_allow([^LT_DLPREOPEN$])\nLT_DLPREOPEN=\nif test -n \"$LT_DLLOADERS\"\nthen\n  for lt_loader in $LT_DLLOADERS; do\n    LT_DLPREOPEN=\"$LT_DLPREOPEN-dlpreopen $lt_loader \"\n  done\n  AC_DEFINE([HAVE_LIBDLLOADER], [1],\n            [Define if libdlloader will be built on this platform])\nfi\nAC_SUBST([LT_DLPREOPEN])\n\ndnl This isn't used anymore, but set it for backwards compatibility\nLIBADD_DL=\"$LIBADD_DLOPEN $LIBADD_SHL_LOAD\"\nAC_SUBST([LIBADD_DL])\n\nAC_LANG_POP\n])# LT_LIB_DLLOAD\n\n# Old name:\nAU_ALIAS([AC_LTDL_DLLIB], [LT_LIB_DLLOAD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_DLLIB], [])\n\n\n# LT_SYS_SYMBOL_USCORE\n# --------------------\n# does the compiler prefix global symbols with an underscore?\nAC_DEFUN([LT_SYS_SYMBOL_USCORE],\n[m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nAC_CACHE_CHECK([for _ prefix in compiled symbols],\n  [lt_cv_sys_symbol_underscore],\n  [lt_cv_sys_symbol_underscore=no\n  cat > conftest.$ac_ext <<_LT_EOF\nvoid nm_test_func(){}\nint main(){nm_test_func;return 0;}\n_LT_EOF\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    ac_nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| $lt_cv_sys_global_symbol_pipe \\> $ac_nlist) && test -s \"$ac_nlist\"; then\n      # See whether the symbols have a leading underscore.\n      if grep '^. _nm_test_func' \"$ac_nlist\" >/dev/null; then\n        lt_cv_sys_symbol_underscore=yes\n      else\n        if grep '^. nm_test_func ' \"$ac_nlist\" >/dev/null; then\n\t  :\n        else\n\t  echo \"configure: cannot find nm_test_func in $ac_nlist\" >&AS_MESSAGE_LOG_FD\n        fi\n      fi\n    else\n      echo \"configure: cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"configure: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.c >&AS_MESSAGE_LOG_FD\n  fi\n  rm -rf conftest*\n  ])\n  sys_symbol_underscore=$lt_cv_sys_symbol_underscore\n  AC_SUBST([sys_symbol_underscore])\n])# LT_SYS_SYMBOL_USCORE\n\n# Old name:\nAU_ALIAS([AC_LTDL_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SYMBOL_USCORE], [])\n\n\n# LT_FUNC_DLSYM_USCORE\n# --------------------\nAC_DEFUN([LT_FUNC_DLSYM_USCORE],\n[AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl\nif test x\"$lt_cv_sys_symbol_underscore\" = xyes; then\n  if test x\"$libltdl_cv_func_dlopen\" = xyes ||\n     test x\"$libltdl_cv_lib_dl_dlopen\" = xyes ; then\n\tAC_CACHE_CHECK([whether we have to add an underscore for dlsym],\n\t  [libltdl_cv_need_uscore],\n\t  [libltdl_cv_need_uscore=unknown\n          save_LIBS=\"$LIBS\"\n          LIBS=\"$LIBS $LIBADD_DLOPEN\"\n\t  _LT_TRY_DLOPEN_SELF(\n\t    [libltdl_cv_need_uscore=no], [libltdl_cv_need_uscore=yes],\n\t    [],\t\t\t\t [libltdl_cv_need_uscore=cross])\n\t  LIBS=\"$save_LIBS\"\n\t])\n  fi\nfi\n\nif test x\"$libltdl_cv_need_uscore\" = xyes; then\n  AC_DEFINE([NEED_USCORE], [1],\n    [Define if dlsym() requires a leading underscore in symbol names.])\nfi\n])# LT_FUNC_DLSYM_USCORE\n\n# Old name:\nAU_ALIAS([AC_LTDL_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_DLSYM_USCORE], [])\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/libltdl/loaders/dyld.c": "/* loader-dyld.c -- dynamic linking on darwin and OS X\n\n   Copyright (C) 1998, 1999, 2000, 2004, 2006,\n                 2007, 2008 Free Software Foundation, Inc.\n   Written by Peter O'Gorman, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_dlloader.h\"\n\n/* Use the preprocessor to rename non-static symbols to avoid namespace\n   collisions when the loader code is statically linked into libltdl.\n   Use the \"<module_name>_LTX_\" prefix so that the symbol addresses can\n   be fetched from the preloaded symbol list by lt_dlsym():  */\n#define get_vtable\tdyld_LTX_get_vtable\n\nLT_BEGIN_C_DECLS\nLT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);\nLT_END_C_DECLS\n\n\n/* Boilerplate code to set up the vtable for hooking this loader into\n   libltdl's loader list:  */\nstatic int\t vl_init  (lt_user_data loader_data);\nstatic int\t vl_exit  (lt_user_data loader_data);\nstatic lt_module vm_open  (lt_user_data loader_data, const char *filename,\n                           lt_dladvise advise);\nstatic int\t vm_close (lt_user_data loader_data, lt_module module);\nstatic void *\t vm_sym   (lt_user_data loader_data, lt_module module,\n\t\t\t  const char *symbolname);\n\nstatic lt_dlvtable *vtable = 0;\n\n/* Return the vtable for this loader, only the name and sym_prefix\n   attributes (plus the virtual function implementations, obviously)\n   change between loaders.  */\nlt_dlvtable *\nget_vtable (lt_user_data loader_data)\n{\n  if (!vtable)\n    {\n      vtable = lt__zalloc (sizeof *vtable);\n    }\n\n  if (vtable && !vtable->name)\n    {\n      vtable->name\t\t= \"lt_dyld\";\n      vtable->sym_prefix\t= \"_\";\n      vtable->dlloader_init\t= vl_init;\n      vtable->module_open\t= vm_open;\n      vtable->module_close\t= vm_close;\n      vtable->find_sym\t\t= vm_sym;\n      vtable->dlloader_exit\t= vl_exit;\n      vtable->dlloader_data\t= loader_data;\n      vtable->priority\t\t= LT_DLLOADER_APPEND;\n    }\n\n  if (vtable && (vtable->dlloader_data != loader_data))\n    {\n      LT__SETERROR (INIT_LOADER);\n      return 0;\n    }\n\n  return vtable;\n}\n\n\n\n/* --- IMPLEMENTATION --- */\n\n\n#if defined(HAVE_MACH_O_DYLD_H)\n#  if !defined(__APPLE_CC__) && !defined(__MWERKS__) && !defined(__private_extern__)\n  /* Is this correct? Does it still function properly? */\n#    define __private_extern__ extern\n#  endif\n#  include <mach-o/dyld.h>\n#endif\n\n#include <mach-o/getsect.h>\n\n/* We have to put some stuff here that isn't in older dyld.h files */\n#if !defined(ENUM_DYLD_BOOL)\n# define ENUM_DYLD_BOOL\n# undef FALSE\n# undef TRUE\n enum DYLD_BOOL {\n    FALSE,\n    TRUE\n };\n#endif\n#if !defined(LC_REQ_DYLD)\n# define LC_REQ_DYLD 0x80000000\n#endif\n#if !defined(LC_LOAD_WEAK_DYLIB)\n# define LC_LOAD_WEAK_DYLIB (0x18 | LC_REQ_DYLD)\n#endif\n\n#if !defined(NSADDIMAGE_OPTION_NONE)\n#  define NSADDIMAGE_OPTION_NONE                          0x0\n#endif\n#if !defined(NSADDIMAGE_OPTION_RETURN_ON_ERROR)\n#  define NSADDIMAGE_OPTION_RETURN_ON_ERROR               0x1\n#endif\n#if !defined(NSADDIMAGE_OPTION_WITH_SEARCHING)\n#  define NSADDIMAGE_OPTION_WITH_SEARCHING                0x2\n#endif\n#if !defined(NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED)\n#  define NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED         0x4\n#endif\n#if !defined(NSADDIMAGE_OPTION_MATCH_FILENAME_BY_INSTALLNAME)\n#  define NSADDIMAGE_OPTION_MATCH_FILENAME_BY_INSTALLNAME 0x8\n#endif\n\n#if !defined(NSLOOKUPSYMBOLINIMAGE_OPTION_BIND)\n#  define NSLOOKUPSYMBOLINIMAGE_OPTION_BIND               0x0\n#endif\n#if !defined(NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW)\n#  define NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW           0x1\n#endif\n#if !defined(NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_FULLY)\n#  define NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_FULLY         0x2\n#endif\n#if !defined(NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR)\n#  define NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR    0x4\n#endif\n\n#define LT__SYMLOOKUP_OPTS\t(NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW \\\n\t\t\t\t| NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR)\n\n#if defined(__BIG_ENDIAN__)\n#  define LT__MAGIC\tMH_MAGIC\n#else\n#  define LT__MAGIC\tMH_CIGAM\n#endif\n\n#define DYLD__SETMYERROR(errmsg)    LT__SETERRORSTR (dylderror (errmsg))\n#define DYLD__SETERROR(errcode)\t    DYLD__SETMYERROR (LT__STRERROR (errcode))\n\ntypedef struct mach_header mach_header;\ntypedef struct dylib_command dylib_command;\n\nstatic const char *dylderror (const char *errmsg);\nstatic const mach_header *lt__nsmodule_get_header (NSModule module);\nstatic const char *lt__header_get_instnam (const mach_header *mh);\nstatic const mach_header *lt__match_loadedlib (const char *name);\nstatic NSSymbol lt__linkedlib_symbol (const char *symname, const mach_header *mh);\n\nstatic const mach_header *(*lt__addimage)\t(const char *image_name,\n\t\t\t\t\t\t unsigned long options) = 0;\nstatic NSSymbol\t(*lt__image_symbol)\t\t(const mach_header *image,\n\t\t\t\t\t\t const char *symbolName,\n\t\t\t\t\t\t unsigned long options) = 0;\nstatic enum DYLD_BOOL (*lt__image_symbol_p)\t(const mach_header *image,\n\t\t\t\t\t\t const char *symbolName) = 0;\nstatic enum DYLD_BOOL (*lt__module_export)\t(NSModule module) = 0;\n\nstatic int dyld_cannot_close\t\t\t\t  = 0;\n\n\n/* A function called through the vtable when this loader is no\n   longer needed by the application.  */\nstatic int\nvl_exit (lt_user_data LT__UNUSED loader_data)\n{\n  vtable = NULL;\n  return 0;\n}\n\n/* A function called through the vtable to initialise this loader.  */\nstatic int\nvl_init (lt_user_data loader_data)\n{\n  int errors = 0;\n\n  if (! dyld_cannot_close)\n    {\n      if (!_dyld_present ())\n\t{\n\t  ++errors;\n\t}\n      else\n\t{\n\t  (void) _dyld_func_lookup (\"__dyld_NSAddImage\",\n\t\t\t\t    (unsigned long*) &lt__addimage);\n\t  (void) _dyld_func_lookup (\"__dyld_NSLookupSymbolInImage\",\n\t\t\t\t    (unsigned long*)&lt__image_symbol);\n\t  (void) _dyld_func_lookup (\"__dyld_NSIsSymbolNameDefinedInImage\",\n\t\t\t\t    (unsigned long*) &lt__image_symbol_p);\n\t  (void) _dyld_func_lookup (\"__dyld_NSMakePrivateModulePublic\",\n\t\t\t\t    (unsigned long*) &lt__module_export);\n\t  dyld_cannot_close = lt_dladderror (\"can't close a dylib\");\n\t}\n    }\n\n  return errors;\n}\n\n\n/* A function called through the vtable to open a module with this\n   loader.  Returns an opaque representation of the newly opened\n   module for processing with this loader's other vtable functions.  */\nstatic lt_module\nvm_open (lt_user_data loader_data, const char *filename,\n         lt_dladvise LT__UNUSED advise)\n{\n  lt_module module = 0;\n  NSObjectFileImage ofi = 0;\n\n  if (!filename)\n    {\n      return (lt_module) -1;\n    }\n\n  switch (NSCreateObjectFileImageFromFile (filename, &ofi))\n    {\n    case NSObjectFileImageSuccess:\n      module = NSLinkModule (ofi, filename, NSLINKMODULE_OPTION_RETURN_ON_ERROR\n\t\t\t     \t\t    | NSLINKMODULE_OPTION_PRIVATE\n\t\t\t     \t\t    | NSLINKMODULE_OPTION_BINDNOW);\n      NSDestroyObjectFileImage (ofi);\n\n      if (module)\n\t{\n\t  lt__module_export (module);\n\t}\n      break;\n\n    case NSObjectFileImageInappropriateFile:\n      if (lt__image_symbol_p && lt__image_symbol)\n\t{\n\t  module = (lt_module) lt__addimage(filename,\n\t\t\t\t\t    NSADDIMAGE_OPTION_RETURN_ON_ERROR);\n\t}\n      break;\n\n    case NSObjectFileImageFailure:\n    case NSObjectFileImageArch:\n    case NSObjectFileImageFormat:\n    case NSObjectFileImageAccess:\n      /*NOWORK*/\n      break;\n    }\n\n  if (!module)\n    {\n      DYLD__SETERROR (CANNOT_OPEN);\n    }\n\n  return module;\n}\n\n\n/* A function called through the vtable when a particular module\n   should be unloaded.  */\nstatic int\nvm_close (lt_user_data loader_data, lt_module module)\n{\n  int errors = 0;\n\n  if (module != (lt_module) -1)\n    {\n      const mach_header *mh = (const mach_header *) module;\n      int flags = 0;\n      if (mh->magic == LT__MAGIC)\n\t{\n\t  lt_dlseterror (dyld_cannot_close);\n\t  ++errors;\n\t}\n      else\n\t{\n\t  /* Currently, if a module contains c++ static destructors and it\n\t     is unloaded, we get a segfault in atexit(), due to compiler and\n\t     dynamic loader differences of opinion, this works around that.  */\n\t  if ((const struct section *) NULL !=\n\t      getsectbynamefromheader (lt__nsmodule_get_header (module),\n\t\t\t\t       \"__DATA\", \"__mod_term_func\"))\n\t    {\n\t      flags |= NSUNLINKMODULE_OPTION_KEEP_MEMORY_MAPPED;\n\t    }\n#if defined(__ppc__)\n\t  flags |= NSUNLINKMODULE_OPTION_RESET_LAZY_REFERENCES;\n#endif\n\t  if (!NSUnLinkModule (module, flags))\n\t    {\n\t      DYLD__SETERROR (CANNOT_CLOSE);\n\t      ++errors;\n\t    }\n\t}\n    }\n\n  return errors;\n}\n\n/* A function called through the vtable to get the address of\n   a symbol loaded from a particular module.  */\nstatic void *\nvm_sym (lt_user_data loader_data, lt_module module, const char *name)\n{\n  NSSymbol *nssym = 0;\n  const mach_header *mh = (const mach_header *) module;\n  char saveError[256] = \"Symbol not found\";\n\n  if (module == (lt_module) -1)\n    {\n      void *address, *unused;\n      _dyld_lookup_and_bind (name, (unsigned long*) &address, &unused);\n      return address;\n    }\n\n  if (mh->magic == LT__MAGIC)\n    {\n      if (lt__image_symbol_p && lt__image_symbol)\n\t{\n\t  if (lt__image_symbol_p (mh, name))\n\t    {\n\t      nssym = lt__image_symbol (mh, name, LT__SYMLOOKUP_OPTS);\n\t    }\n\t}\n\n    }\n  else\n    {\n      nssym = NSLookupSymbolInModule (module, name);\n    }\n\n  if (!nssym)\n    {\n      strncpy (saveError, dylderror (LT__STRERROR (SYMBOL_NOT_FOUND)), 255);\n      saveError[255] = 0;\n      if (!mh)\n\t{\n\t  mh = (mach_header *)lt__nsmodule_get_header (module);\n\t}\n      nssym = lt__linkedlib_symbol (name, mh);\n    }\n\n  if (!nssym)\n    {\n      LT__SETERRORSTR (saveError);\n    }\n\n  return nssym ? NSAddressOfSymbol (nssym) : 0;\n}\n\n\n\n\n/* --- HELPER FUNCTIONS --- */\n\n\n/* Return the dyld error string, or the passed in error string if none. */\nstatic const char *\ndylderror (const char *errmsg)\n{\n  NSLinkEditErrors ler;\n  int lerno;\n  const char *file;\n  const char *errstr;\n\n  NSLinkEditError (&ler, &lerno, &file, &errstr);\n\n  if (! (errstr && *errstr))\n    {\n      errstr = errmsg;\n    }\n\n  return errstr;\n}\n\n/* There should probably be an apple dyld api for this. */\nstatic const mach_header *\nlt__nsmodule_get_header (NSModule module)\n{\n  int i = _dyld_image_count();\n  const char *modname = NSNameOfModule (module);\n  const mach_header *mh = 0;\n\n  if (!modname)\n    return NULL;\n\n  while (i > 0)\n    {\n      --i;\n      if (strneq (_dyld_get_image_name (i), modname))\n\t{\n\t  mh = _dyld_get_image_header (i);\n\t  break;\n\t}\n    }\n\n  return mh;\n}\n\n/* NSAddImage is also used to get the loaded image, but it only works if\n   the lib is installed, for uninstalled libs we need to check the\n   install_names against each other.  Note that this is still broken if\n   DYLD_IMAGE_SUFFIX is set and a different lib was loaded as a result.  */\nstatic const char *\nlt__header_get_instnam (const mach_header *mh)\n{\n  unsigned long offset = sizeof(mach_header);\n  const char* result   = 0;\n  int j;\n\n  for (j = 0; j < mh->ncmds; j++)\n    {\n      struct load_command *lc;\n\n      lc = (struct load_command*) (((unsigned long) mh) + offset);\n      if (LC_ID_DYLIB == lc->cmd)\n\t{\n\t  result=(char*)(((dylib_command*) lc)->dylib.name.offset +\n\t\t\t (unsigned long) lc);\n\t}\n      offset += lc->cmdsize;\n    }\n\n  return result;\n}\n\nstatic const mach_header *\nlt__match_loadedlib (const char *name)\n{\n  const mach_header *mh\t= 0;\n  int i = _dyld_image_count();\n\n  while (i > 0)\n    {\n      const char *id;\n\n      --i;\n      id = lt__header_get_instnam (_dyld_get_image_header (i));\n      if (id && strneq (id, name))\n\t{\n\t  mh = _dyld_get_image_header (i);\n\t  break;\n\t}\n    }\n\n  return mh;\n}\n\n/* Safe to assume our mh is good. */\nstatic NSSymbol\nlt__linkedlib_symbol (const char *symname, const mach_header *mh)\n{\n  NSSymbol symbol = 0;\n\n  if (lt__image_symbol && NSIsSymbolNameDefined (symname))\n    {\n      unsigned long offset = sizeof(mach_header);\n      struct load_command *lc;\n      int j;\n\n      for (j = 0; j < mh->ncmds; j++)\n\t{\n\t  lc = (struct load_command*) (((unsigned long) mh) + offset);\n\t  if ((LC_LOAD_DYLIB == lc->cmd) || (LC_LOAD_WEAK_DYLIB == lc->cmd))\n\t    {\n\t      unsigned long base = ((dylib_command *) lc)->dylib.name.offset;\n\t      char *name = (char *) (base + (unsigned long) lc);\n\t      const mach_header *mh1 = lt__match_loadedlib (name);\n\n\t      if (!mh1)\n\t\t{\n\t\t  /* Maybe NSAddImage can find it */\n\t\t  mh1 = lt__addimage (name,\n\t\t\t\t      NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED\n\t\t\t\t      | NSADDIMAGE_OPTION_WITH_SEARCHING\n\t\t\t\t      | NSADDIMAGE_OPTION_RETURN_ON_ERROR);\n\t\t}\n\n\t      if (mh1)\n\t\t{\n\t\t  symbol = lt__image_symbol (mh1, symname, LT__SYMLOOKUP_OPTS);\n\t\t  if (symbol)\n\t\t    break;\n\t\t}\n\t    }\n\n\t  offset += lc->cmdsize;\n\t}\n    }\n\n  return symbol;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/libltdl/loaders/loadlibrary.c": "/* loader-loadlibrary.c --  dynamic linking for Win32\n\n   Copyright (C) 1998, 1999, 2000, 2004, 2005, 2006,\n                 2007, 2008, 2010 Free Software Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_dlloader.h\"\n\n#if defined(__CYGWIN__)\n# include <sys/cygwin.h>\n#endif\n\n/* Use the preprocessor to rename non-static symbols to avoid namespace\n   collisions when the loader code is statically linked into libltdl.\n   Use the \"<module_name>_LTX_\" prefix so that the symbol addresses can\n   be fetched from the preloaded symbol list by lt_dlsym():  */\n#define get_vtable\tloadlibrary_LTX_get_vtable\n\nLT_BEGIN_C_DECLS\nLT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);\nLT_END_C_DECLS\n\n\n/* Boilerplate code to set up the vtable for hooking this loader into\n   libltdl's loader list:  */\nstatic int\t vl_exit  (lt_user_data loader_data);\nstatic lt_module vm_open  (lt_user_data loader_data, const char *filename,\n                           lt_dladvise advise);\nstatic int\t vm_close (lt_user_data loader_data, lt_module module);\nstatic void *\t vm_sym   (lt_user_data loader_data, lt_module module,\n\t\t\t  const char *symbolname);\n\nstatic lt_dlinterface_id iface_id = 0;\nstatic lt_dlvtable *vtable = 0;\n\n/* Return the vtable for this loader, only the name and sym_prefix\n   attributes (plus the virtual function implementations, obviously)\n   change between loaders.  */\nlt_dlvtable *\nget_vtable (lt_user_data loader_data)\n{\n  if (!vtable)\n    {\n      vtable = (lt_dlvtable *) lt__zalloc (sizeof *vtable);\n      iface_id = lt_dlinterface_register (\"ltdl loadlibrary\", NULL);\n    }\n\n  if (vtable && !vtable->name)\n    {\n      vtable->name\t\t= \"lt_loadlibrary\";\n      vtable->module_open\t= vm_open;\n      vtable->module_close\t= vm_close;\n      vtable->find_sym\t\t= vm_sym;\n      vtable->dlloader_exit\t= vl_exit;\n      vtable->dlloader_data\t= loader_data;\n      vtable->priority\t\t= LT_DLLOADER_APPEND;\n    }\n\n  if (vtable && (vtable->dlloader_data != loader_data))\n    {\n      LT__SETERROR (INIT_LOADER);\n      return 0;\n    }\n\n  return vtable;\n}\n\n\n\n/* --- IMPLEMENTATION --- */\n\n\n#include <windows.h>\n\n#define LOCALFREE(mem)\t\t\t\t\t     LT_STMT_START { \\\n\tif (mem) { LocalFree ((void *)mem); mem = NULL; }    } LT_STMT_END\n#define LOADLIB__SETERROR(errmsg) LT__SETERRORSTR (loadlibraryerror (errmsg))\n#define LOADLIB_SETERROR(errcode) LOADLIB__SETERROR (LT__STRERROR (errcode))\n\nstatic const char *loadlibraryerror (const char *default_errmsg);\nstatic DWORD WINAPI wrap_getthreaderrormode (void);\nstatic DWORD WINAPI fallback_getthreaderrormode (void);\nstatic BOOL WINAPI wrap_setthreaderrormode (DWORD mode, DWORD *oldmode);\nstatic BOOL WINAPI fallback_setthreaderrormode (DWORD mode, DWORD *oldmode);\n\ntypedef DWORD (WINAPI getthreaderrormode_type) (void);\ntypedef BOOL (WINAPI setthreaderrormode_type) (DWORD, DWORD *);\n\nstatic getthreaderrormode_type *getthreaderrormode = wrap_getthreaderrormode;\nstatic setthreaderrormode_type *setthreaderrormode = wrap_setthreaderrormode;\nstatic char *error_message = 0;\n\n\n/* A function called through the vtable when this loader is no\n   longer needed by the application.  */\nstatic int\nvl_exit (lt_user_data LT__UNUSED loader_data)\n{\n  vtable = NULL;\n  LOCALFREE (error_message);\n  return 0;\n}\n\n/* A function called through the vtable to open a module with this\n   loader.  Returns an opaque representation of the newly opened\n   module for processing with this loader's other vtable functions.  */\nstatic lt_module\nvm_open (lt_user_data LT__UNUSED loader_data, const char *filename,\n         lt_dladvise LT__UNUSED advise)\n{\n  lt_module\tmodule\t   = 0;\n  char\t\t*ext;\n  char\t\twpath[MAX_PATH];\n  size_t\tlen;\n\n  if (!filename)\n    {\n      /* Get the name of main module */\n      *wpath = 0;\n      GetModuleFileName (NULL, wpath, sizeof (wpath));\n      filename = wpath;\n    }\n  else\n    {\n      len = LT_STRLEN (filename);\n\n      if (len >= MAX_PATH)\n        {\n\t  LT__SETERROR (CANNOT_OPEN);\n\t  return 0;\n\t}\n\n#if HAVE_DECL_CYGWIN_CONV_PATH\n      if (cygwin_conv_path (CCP_POSIX_TO_WIN_A, filename, wpath, MAX_PATH))\n\t{\n\t  LT__SETERROR (CANNOT_OPEN);\n\t  return 0;\n\t}\n      len = 0;\n#elif defined(__CYGWIN__)\n      cygwin_conv_to_full_win32_path (filename, wpath);\n      len = 0;\n#else\n      strcpy(wpath, filename);\n#endif\n\n      ext = strrchr (wpath, '.');\n      if (!ext)\n\t{\n\t  /* Append a `.' to stop Windows from adding an\n\t     implicit `.dll' extension. */\n\t  if (!len)\n\t    len = strlen (wpath);\n\n\t  if (len + 1 >= MAX_PATH)\n\t    {\n\t      LT__SETERROR (CANNOT_OPEN);\n\t      return 0;\n\t    }\n\n\t  wpath[len] = '.';\n\t  wpath[len+1] = '\\0';\n\t}\n    }\n\n  {\n    /* Silence dialog from LoadLibrary on some failures. */\n    DWORD errormode = getthreaderrormode ();\n    DWORD last_error;\n\n    setthreaderrormode (errormode | SEM_FAILCRITICALERRORS, NULL);\n\n    module = LoadLibrary (wpath);\n\n    /* Restore the error mode. */\n    last_error = GetLastError ();\n    setthreaderrormode (errormode, NULL);\n    SetLastError (last_error);\n  }\n\n  /* libltdl expects this function to fail if it is unable\n     to physically load the library.  Sadly, LoadLibrary\n     will search the loaded libraries for a match and return\n     one of them if the path search load fails.\n\n     We check whether LoadLibrary is returning a handle to\n     an already loaded module, and simulate failure if we\n     find one. */\n  {\n    lt_dlhandle cur = 0;\n\n    while ((cur = lt_dlhandle_iterate (iface_id, cur)))\n      {\n        if (!cur->module)\n          {\n            cur = 0;\n            break;\n          }\n\n        if (cur->module == module)\n          {\n            break;\n          }\n      }\n\n    if (!module)\n      LOADLIB_SETERROR (CANNOT_OPEN);\n    else if (cur)\n      {\n        LT__SETERROR (CANNOT_OPEN);\n        module = 0;\n      }\n  }\n\n  return module;\n}\n\n\n/* A function called through the vtable when a particular module\n   should be unloaded.  */\nstatic int\nvm_close (lt_user_data LT__UNUSED loader_data, lt_module module)\n{\n  int errors = 0;\n\n  if (FreeLibrary ((HMODULE) module) == 0)\n    {\n      LOADLIB_SETERROR (CANNOT_CLOSE);\n      ++errors;\n    }\n\n  return errors;\n}\n\n\n/* A function called through the vtable to get the address of\n   a symbol loaded from a particular module.  */\nstatic void *\nvm_sym (lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)\n{\n  void *address = (void *) GetProcAddress ((HMODULE) module, name);\n\n  if (!address)\n    {\n      LOADLIB_SETERROR (SYMBOL_NOT_FOUND);\n    }\n\n  return address;\n}\n\n\n\n/* --- HELPER FUNCTIONS --- */\n\n\n/* Return the windows error message, or the passed in error message on\n   failure. */\nstatic const char *\nloadlibraryerror (const char *default_errmsg)\n{\n  size_t len;\n  LOCALFREE (error_message);\n\n  FormatMessageA (FORMAT_MESSAGE_ALLOCATE_BUFFER |\n                  FORMAT_MESSAGE_FROM_SYSTEM |\n                  FORMAT_MESSAGE_IGNORE_INSERTS,\n                  NULL,\n                  GetLastError (),\n                  0,\n                  (char *) &error_message,\n                  0, NULL);\n\n  /* Remove trailing CRNL */\n  len = LT_STRLEN (error_message);\n  if (len && error_message[len - 1] == '\\n')\n    error_message[--len] = LT_EOS_CHAR;\n  if (len && error_message[len - 1] == '\\r')\n    error_message[--len] = LT_EOS_CHAR;\n\n  return len ? error_message : default_errmsg;\n}\n\n/* A function called through the getthreaderrormode variable which checks\n   if the system supports GetThreadErrorMode (or GetErrorMode) and arranges\n   for it or a fallback implementation to be called directly in the future.\n   The selected version is then called. */\nstatic DWORD WINAPI\nwrap_getthreaderrormode (void)\n{\n  HMODULE kernel32 = GetModuleHandleA (\"kernel32.dll\");\n  getthreaderrormode\n    = (getthreaderrormode_type *) GetProcAddress (kernel32,\n\t\t\t\t\t\t  \"GetThreadErrorMode\");\n  if (!getthreaderrormode)\n    getthreaderrormode\n      = (getthreaderrormode_type *) GetProcAddress (kernel32,\n\t\t\t\t\t\t    \"GetErrorMode\");\n  if (!getthreaderrormode)\n    getthreaderrormode = fallback_getthreaderrormode;\n  return getthreaderrormode ();\n}\n\n/* A function called through the getthreaderrormode variable for cases\n   where the system does not support GetThreadErrorMode or GetErrorMode */\nstatic DWORD WINAPI\nfallback_getthreaderrormode (void)\n{\n  /* Prior to Windows Vista, the only way to get the current error\n     mode was to set a new one. In our case, we are setting a new\n     error mode right after \"getting\" it while ignoring the error\n     mode in effect when setting the new error mode, so that's\n     fairly ok. */\n  return (DWORD) SetErrorMode (SEM_FAILCRITICALERRORS);\n}\n\n/* A function called through the setthreaderrormode variable which checks\n   if the system supports SetThreadErrorMode and arranges for it or a\n   fallback implementation to be called directly in the future.\n   The selected version is then called. */\nstatic BOOL WINAPI\nwrap_setthreaderrormode (DWORD mode, DWORD *oldmode)\n{\n  HMODULE kernel32 = GetModuleHandleA (\"kernel32.dll\");\n  setthreaderrormode\n    = (setthreaderrormode_type *) GetProcAddress (kernel32,\n\t\t\t\t\t\t  \"SetThreadErrorMode\");\n  if (!setthreaderrormode)\n    setthreaderrormode = fallback_setthreaderrormode;\n  return setthreaderrormode (mode, oldmode);\n}\n\n/* A function called through the setthreaderrormode variable for cases\n   where the system does not support SetThreadErrorMode. */\nstatic BOOL WINAPI\nfallback_setthreaderrormode (DWORD mode, DWORD *oldmode)\n{\n  /* Prior to Windows 7, there was no way to set the thread local error\n     mode, so set the process global error mode instead. */\n  DWORD old = (DWORD) SetErrorMode (mode);\n  if (oldmode)\n    *oldmode = old;\n  return TRUE;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/libltdl/loaders/shl_load.c": "/* loader-shl_load.c --  dynamic linking with shl_load (HP-UX)\n\n   Copyright (C) 1998, 1999, 2000, 2004, 2006,\n                 2007, 2008 Free Software Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_dlloader.h\"\n\n/* Use the preprocessor to rename non-static symbols to avoid namespace\n   collisions when the loader code is statically linked into libltdl.\n   Use the \"<module_name>_LTX_\" prefix so that the symbol addresses can\n   be fetched from the preloaded symbol list by lt_dlsym():  */\n#define get_vtable\tshl_load_LTX_get_vtable\n\nLT_BEGIN_C_DECLS\nLT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);\nLT_END_C_DECLS\n\n\n/* Boilerplate code to set up the vtable for hooking this loader into\n   libltdl's loader list:  */\nstatic int\t vl_exit  (lt_user_data loader_data);\nstatic lt_module vm_open  (lt_user_data loader_data, const char *filename,\n                           lt_dladvise advise);\nstatic int\t vm_close (lt_user_data loader_data, lt_module module);\nstatic void *\t vm_sym   (lt_user_data loader_data, lt_module module,\n\t\t\t  const char *symbolname);\n\nstatic lt_dlvtable *vtable = 0;\n\n/* Return the vtable for this loader, only the name and sym_prefix\n   attributes (plus the virtual function implementations, obviously)\n   change between loaders.  */\nlt_dlvtable *\nget_vtable (lt_user_data loader_data)\n{\n  if (!vtable)\n    {\n      vtable = lt__zalloc (sizeof *vtable);\n    }\n\n  if (vtable && !vtable->name)\n    {\n      vtable->name\t\t= \"lt_shl_load\";\n      vtable->module_open\t= vm_open;\n      vtable->module_close\t= vm_close;\n      vtable->find_sym\t\t= vm_sym;\n      vtable->dlloader_exit\t= vl_exit;\n      vtable->dlloader_data\t= loader_data;\n      vtable->priority\t\t= LT_DLLOADER_APPEND;\n    }\n\n  if (vtable && (vtable->dlloader_data != loader_data))\n    {\n      LT__SETERROR (INIT_LOADER);\n      return 0;\n    }\n\n  return vtable;\n}\n\n\n\n/* --- IMPLEMENTATION --- */\n\n\n#if defined(HAVE_DL_H)\n#  include <dl.h>\n#endif\n\n/* some flags are missing on some systems, so we provide\n * harmless defaults.\n *\n * Mandatory:\n * BIND_IMMEDIATE  - Resolve symbol references when the library is loaded.\n * BIND_DEFERRED   - Delay code symbol resolution until actual reference.\n *\n * Optionally:\n * BIND_FIRST\t   - Place the library at the head of the symbol search\n * \t\t     order.\n * BIND_NONFATAL   - The default BIND_IMMEDIATE behavior is to treat all\n * \t\t     unsatisfied symbols as fatal.  This flag allows\n * \t\t     binding of unsatisfied code symbols to be deferred\n * \t\t     until use.\n *\t\t     [Perl: For certain libraries, like DCE, deferred\n *\t\t     binding often causes run time problems. Adding\n *\t\t     BIND_NONFATAL to BIND_IMMEDIATE still allows\n *\t\t     unresolved references in situations like this.]\n * BIND_NOSTART\t   - Do not call the initializer for the shared library\n *\t\t     when the library is loaded, nor on a future call to\n *\t\t     shl_unload().\n * BIND_VERBOSE\t   - Print verbose messages concerning possible\n *\t\t     unsatisfied symbols.\n *\n * hp9000s700/hp9000s800:\n * BIND_RESTRICTED - Restrict symbols visible by the library to those\n *\t\t     present at library load time.\n * DYNAMIC_PATH\t   - Allow the loader to dynamically search for the\n *\t\t     library specified by the path argument.\n */\n\n#if !defined(DYNAMIC_PATH)\n#  define DYNAMIC_PATH\t\t0\n#endif\n#if !defined(BIND_RESTRICTED)\n#  define BIND_RESTRICTED\t0\n#endif\n\n#define\tLT_BIND_FLAGS\t(BIND_IMMEDIATE | BIND_NONFATAL | DYNAMIC_PATH)\n\n\n/* A function called through the vtable when this loader is no\n   longer needed by the application.  */\nstatic int\nvl_exit (lt_user_data LT__UNUSED loader_data)\n{\n  vtable = NULL;\n  return 0;\n}\n\n/* A function called through the vtable to open a module with this\n   loader.  Returns an opaque representation of the newly opened\n   module for processing with this loader's other vtable functions.  */\nstatic lt_module\nvm_open (lt_user_data LT__UNUSED loader_data, const char *filename,\n         lt_dladvise LT__UNUSED advise)\n{\n  static shl_t self = (shl_t) 0;\n  lt_module module = shl_load (filename, LT_BIND_FLAGS, 0L);\n\n  /* Since searching for a symbol against a NULL module handle will also\n     look in everything else that was already loaded and exported with\n     the -E compiler flag, we always cache a handle saved before any\n     modules are loaded.  */\n  if (!self)\n    {\n      void *address;\n      shl_findsym (&self, \"main\", TYPE_UNDEFINED, &address);\n    }\n\n  if (!filename)\n    {\n      module = self;\n    }\n  else\n    {\n      module = shl_load (filename, LT_BIND_FLAGS, 0L);\n\n      if (!module)\n\t{\n\t  LT__SETERROR (CANNOT_OPEN);\n\t}\n    }\n\n  return module;\n}\n\n/* A function called through the vtable when a particular module\n   should be unloaded.  */\nstatic int\nvm_close (lt_user_data LT__UNUSED loader_data, lt_module module)\n{\n  int errors = 0;\n\n  if (module && (shl_unload ((shl_t) (module)) != 0))\n    {\n      LT__SETERROR (CANNOT_CLOSE);\n      ++errors;\n    }\n\n  return errors;\n}\n\n\n/* A function called through the vtable to get the address of\n   a symbol loaded from a particular module.  */\nstatic void *\nvm_sym (lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)\n{\n  void *address = 0;\n\n  /* sys_shl_open should never return a NULL module handle */\n  if (module == (lt_module) 0)\n  {\n    LT__SETERROR (INVALID_HANDLE);\n  }\n  else if (!shl_findsym((shl_t*) &module, name, TYPE_UNDEFINED, &address))\n    {\n      if (!address)\n\t{\n\t  LT__SETERROR (SYMBOL_NOT_FOUND);\n\t}\n    }\n\n  return address;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/libltdl/loaders/load_add_on.c": "/* loader-load_add_on.c --  dynamic linking for BeOS\n\n   Copyright (C) 1998, 1999, 2000, 2004, 2006,\n                 2007, 2008 Free Software Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_dlloader.h\"\n\n/* Use the preprocessor to rename non-static symbols to avoid namespace\n   collisions when the loader code is statically linked into libltdl.\n   Use the \"<module_name>_LTX_\" prefix so that the symbol addresses can\n   be fetched from the preloaded symbol list by lt_dlsym():  */\n#define get_vtable\tload_add_on_LTX_get_vtable\n\nLT_BEGIN_C_DECLS\nLT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);\nLT_END_C_DECLS\n\n\n/* Boilerplate code to set up the vtable for hooking this loader into\n   libltdl's loader list:  */\nstatic int\t vl_exit  (lt_user_data loader_data);\nstatic lt_module vm_open  (lt_user_data loader_data, const char *filename,\n                           lt_dladvise advise);\nstatic int\t vm_close (lt_user_data loader_data, lt_module module);\nstatic void *\t vm_sym   (lt_user_data loader_data, lt_module module,\n\t\t\t  const char *symbolname);\n\nstatic lt_dlvtable *vtable = 0;\n\n/* Return the vtable for this loader, only the name and sym_prefix\n   attributes (plus the virtual function implementations, obviously)\n   change between loaders.  */\nlt_dlvtable *\nget_vtable (lt_user_data loader_data)\n{\n  if (!vtable)\n    {\n      vtable = lt__zalloc (sizeof *vtable);\n    }\n\n  if (vtable && !vtable->name)\n    {\n      vtable->name\t\t= \"lt_load_add_on\";\n      vtable->module_open\t= vm_open;\n      vtable->module_close\t= vm_close;\n      vtable->find_sym\t\t= vm_sym;\n      vtable->dlloader_exit\t= vl_exit;\n      vtable->dlloader_data\t= loader_data;\n      vtable->priority\t\t= LT_DLLOADER_APPEND;\n    }\n\n  if (vtable && (vtable->dlloader_data != loader_data))\n    {\n      LT__SETERROR (INIT_LOADER);\n      return 0;\n    }\n\n  return vtable;\n}\n\n\n\n/* --- IMPLEMENTATION --- */\n\n\n#include <kernel/image.h>\n\n/* A function called through the vtable when this loader is no\n   longer needed by the application.  */\nstatic int\nvl_exit (lt_user_data LT__UNUSED loader_data)\n{\n  vtable = NULL;\n  return 0;\n}\n\n/* A function called through the vtable to open a module with this\n   loader.  Returns an opaque representation of the newly opened\n   module for processing with this loader's other vtable functions.  */\nstatic lt_module\nvm_open (lt_user_data LT__UNUSED loader_data, const char *filename,\n         lt_dladvise LT__UNUSED advise)\n{\n  image_id image = 0;\n\n  if (filename)\n    {\n      image = load_add_on (filename);\n    }\n  else\n    {\n      image_info info;\n      int32 cookie = 0;\n      if (get_next_image_info (0, &cookie, &info) == B_OK)\n\timage = load_add_on (info.name);\n    }\n\n  if (image <= 0)\n    {\n      LT__SETERROR (CANNOT_OPEN);\n      image = 0;\n    }\n\n  return (lt_module) image;\n}\n\n\n/* A function called through the vtable when a particular module\n   should be unloaded.  */\nstatic int\nvm_close (lt_user_data LT__UNUSED loader_data, lt_module module)\n{\n  int errors = 0;\n\n  if (unload_add_on ((image_id) module) != B_OK)\n    {\n      LT__SETERROR (CANNOT_CLOSE);\n      ++errors;\n    }\n\n  return errors;\n}\n\n\n/* A function called through the vtable to get the address of\n   a symbol loaded from a particular module.  */\nstatic void *\nvm_sym (lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)\n{\n  void *address = 0;\n  image_id image = (image_id) module;\n\n  if (get_image_symbol (image, name, B_SYMBOL_TYPE_ANY, address) != B_OK)\n    {\n      LT__SETERROR (SYMBOL_NOT_FOUND);\n      address = 0;\n    }\n\n  return address;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/libltdl/loaders/dld_link.c": "/* loader-dld_link.c -- dynamic linking with dld\n\n   Copyright (C) 1998, 1999, 2000, 2004, 2006,\n                 2007, 2008 Free Software Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_dlloader.h\"\n\n/* Use the preprocessor to rename non-static symbols to avoid namespace\n   collisions when the loader code is statically linked into libltdl.\n   Use the \"<module_name>_LTX_\" prefix so that the symbol addresses can\n   be fetched from the preloaded symbol list by lt_dlsym():  */\n#define get_vtable\tdld_link_LTX_get_vtable\n\nLT_BEGIN_C_DECLS\nLT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);\nLT_END_C_DECLS\n\n\n/* Boilerplate code to set up the vtable for hooking this loader into\n   libltdl's loader list:  */\nstatic int\t vl_exit  (lt_user_data loader_data);\nstatic lt_module vm_open  (lt_user_data loader_data, const char *filename,\n                           lt_dladvise advise);\nstatic int\t vm_close (lt_user_data loader_data, lt_module module);\nstatic void *\t vm_sym   (lt_user_data loader_data, lt_module module,\n\t\t\t  const char *symbolname);\n\nstatic lt_dlvtable *vtable = 0;\n\n/* Return the vtable for this loader, only the name and sym_prefix\n   attributes (plus the virtual function implementations, obviously)\n   change between loaders.  */\nlt_dlvtable *\nget_vtable (lt_user_data loader_data)\n{\n  if (!vtable)\n    {\n      vtable = lt__zalloc (sizeof *vtable);\n    }\n\n  if (vtable && !vtable->name)\n    {\n      vtable->name\t\t= \"lt_dld_link\";\n      vtable->module_open\t= vm_open;\n      vtable->module_close\t= vm_close;\n      vtable->find_sym\t\t= vm_sym;\n      vtable->dlloader_exit\t= vl_exit;\n      vtable->dlloader_data\t= loader_data;\n      vtable->priority\t\t= LT_DLLOADER_APPEND;\n    }\n\n  if (vtable && (vtable->dlloader_data != loader_data))\n    {\n      LT__SETERROR (INIT_LOADER);\n      return 0;\n    }\n\n  return vtable;\n}\n\n\n\n/* --- IMPLEMENTATION --- */\n\n\n#if defined(HAVE_DLD_H)\n#  include <dld.h>\n#endif\n\n/* A function called through the vtable when this loader is no\n   longer needed by the application.  */\nstatic int\nvl_exit (lt_user_data LT__UNUSED loader_data)\n{\n  vtable = NULL;\n  return 0;\n}\n\n/* A function called through the vtable to open a module with this\n   loader.  Returns an opaque representation of the newly opened\n   module for processing with this loader's other vtable functions.  */\nstatic lt_module\nvm_open (lt_user_data LT__UNUSED loader_data, const char *filename,\n         lt_dladvise LT__UNUSED advise)\n{\n  lt_module module = lt__strdup (filename);\n\n  if (dld_link (filename) != 0)\n    {\n      LT__SETERROR (CANNOT_OPEN);\n      FREE (module);\n    }\n\n  return module;\n}\n\n/* A function called through the vtable when a particular module\n   should be unloaded.  */\nstatic int\nvm_close (lt_user_data LT__UNUSED loader_data, lt_module module)\n{\n  int errors = 0;\n\n  if (dld_unlink_by_file ((char*)(module), 1) != 0)\n    {\n      LT__SETERROR (CANNOT_CLOSE);\n      ++errors;\n    }\n  else\n    {\n      FREE (module);\n    }\n\n  return errors;\n}\n\n/* A function called through the vtable to get the address of\n   a symbol loaded from a particular module.  */\nstatic void *\nvm_sym (lt_user_data LT__UNUSED loader_data, lt_module LT__UNUSED module,\n\tconst char *name)\n{\n  void *address = dld_get_func (name);\n\n  if (!address)\n    {\n      LT__SETERROR (SYMBOL_NOT_FOUND);\n    }\n\n  return address;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/libltdl/loaders/preopen.c": "/* loader-preopen.c -- emulate dynamic linking using preloaded_symbols\n\n   Copyright (C) 1998, 1999, 2000, 2004, 2006,\n                 2007, 2008 Free Software Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_dlloader.h\"\n\n/* Use the preprocessor to rename non-static symbols to avoid namespace\n   collisions when the loader code is statically linked into libltdl.\n   Use the \"<module_name>_LTX_\" prefix so that the symbol addresses can\n   be fetched from the preloaded symbol list by lt_dlsym():  */\n#define get_vtable\tpreopen_LTX_get_vtable\n\nLT_BEGIN_C_DECLS\nLT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);\nLT_END_C_DECLS\n\n\n/* Boilerplate code to set up the vtable for hooking this loader into\n   libltdl's loader list:  */\nstatic int\t vl_init  (lt_user_data loader_data);\nstatic int\t vl_exit  (lt_user_data loader_data);\nstatic lt_module vm_open  (lt_user_data loader_data, const char *filename,\n                           lt_dladvise advise);\nstatic int\t vm_close (lt_user_data loader_data, lt_module module);\nstatic void *\t vm_sym   (lt_user_data loader_data, lt_module module,\n\t\t\t  const char *symbolname);\n\nstatic lt_dlvtable *vtable = 0;\n\n/* Return the vtable for this loader, only the name and sym_prefix\n   attributes (plus the virtual function implementations, obviously)\n   change between loaders.  */\nlt_dlvtable *\nget_vtable (lt_user_data loader_data)\n{\n  if (!vtable)\n    {\n      vtable = (lt_dlvtable *) lt__zalloc (sizeof *vtable);\n    }\n\n  if (vtable && !vtable->name)\n    {\n      vtable->name\t\t= \"lt_preopen\";\n      vtable->sym_prefix\t= 0;\n      vtable->module_open\t= vm_open;\n      vtable->module_close\t= vm_close;\n      vtable->find_sym\t\t= vm_sym;\n      vtable->dlloader_init\t= vl_init;\n      vtable->dlloader_exit\t= vl_exit;\n      vtable->dlloader_data\t= loader_data;\n      vtable->priority\t\t= LT_DLLOADER_PREPEND;\n    }\n\n  if (vtable && (vtable->dlloader_data != loader_data))\n    {\n      LT__SETERROR (INIT_LOADER);\n      return 0;\n    }\n\n  return vtable;\n}\n\n\n\n/* --- IMPLEMENTATION --- */\n\n\n/* Wrapper type to chain together symbol lists of various origins.  */\ntypedef struct symlist_chain\n{\n  struct symlist_chain *next;\n  const lt_dlsymlist   *symlist;\n} symlist_chain;\n\n\nstatic int add_symlist   (const lt_dlsymlist *symlist);\nstatic int free_symlists (void);\n\n/* The start of the symbol lists chain.  */\nstatic symlist_chain\t       *preloaded_symlists\t\t= 0;\n\n/* A symbol list preloaded before lt_init() was called.  */\nstatic const\tlt_dlsymlist   *default_preloaded_symbols\t= 0;\n\n\n/* A function called through the vtable to initialise this loader.  */\nstatic int\nvl_init (lt_user_data LT__UNUSED loader_data)\n{\n  int errors = 0;\n\n  preloaded_symlists = 0;\n  if (default_preloaded_symbols)\n    {\n      errors = lt_dlpreload (default_preloaded_symbols);\n    }\n\n  return errors;\n}\n\n\n/* A function called through the vtable when this loader is no\n   longer needed by the application.  */\nstatic int\nvl_exit (lt_user_data LT__UNUSED loader_data)\n{\n  vtable = NULL;\n  free_symlists ();\n  return 0;\n}\n\n\n/* A function called through the vtable to open a module with this\n   loader.  Returns an opaque representation of the newly opened\n   module for processing with this loader's other vtable functions.  */\nstatic lt_module\nvm_open (lt_user_data LT__UNUSED loader_data, const char *filename,\n         lt_dladvise LT__UNUSED advise)\n{\n  symlist_chain *lists;\n  lt_module\t module = 0;\n\n  if (!preloaded_symlists)\n    {\n      LT__SETERROR (NO_SYMBOLS);\n      goto done;\n    }\n\n  /* Can't use NULL as the reflective symbol header, as NULL is\n     used to mark the end of the entire symbol list.  Self-dlpreopened\n     symbols follow this magic number, chosen to be an unlikely\n     clash with a real module name.  */\n  if (!filename)\n    {\n      filename = \"@PROGRAM@\";\n    }\n\n  for (lists = preloaded_symlists; lists; lists = lists->next)\n    {\n      const lt_dlsymlist *symbol;\n      for (symbol= lists->symlist; symbol->name; ++symbol)\n\t{\n\t  if (!symbol->address && streq (symbol->name, filename))\n\t    {\n\t      /* If the next symbol's name and address is 0, it means\n\t\t the module just contains the originator and no symbols.\n\t\t In this case we pretend that we never saw the module and\n\t         hope that some other loader will be able to load the module\n\t         and have access to its symbols */\n\t      const lt_dlsymlist *next_symbol = symbol +1;\n\t      if (next_symbol->address && next_symbol->name)\n\t\t{\n\t          module = (lt_module) lists->symlist;\n\t          goto done;\n\t\t}\n\t    }\n\t}\n    }\n\n  LT__SETERROR (FILE_NOT_FOUND);\n\n done:\n  return module;\n}\n\n\n/* A function called through the vtable when a particular module\n   should be unloaded.  */\nstatic int\nvm_close (lt_user_data LT__UNUSED loader_data, lt_module LT__UNUSED module)\n{\n  /* Just to silence gcc -Wall */\n  module = 0;\n  return 0;\n}\n\n\n/* A function called through the vtable to get the address of\n   a symbol loaded from a particular module.  */\nstatic void *\nvm_sym (lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)\n{\n  lt_dlsymlist\t       *symbol = (lt_dlsymlist*) module;\n\n  symbol +=2;\t\t\t/* Skip header (originator then libname). */\n\n  while (symbol->name)\n    {\n      if (streq (symbol->name, name))\n\t{\n\t  return symbol->address;\n\t}\n\n    ++symbol;\n  }\n\n  LT__SETERROR (SYMBOL_NOT_FOUND);\n\n  return 0;\n}\n\n\n\n/* --- HELPER FUNCTIONS --- */\n\n\n/* The symbol lists themselves are not allocated from the heap, but\n   we can unhook them and free up the chain of links between them.  */\nstatic int\nfree_symlists (void)\n{\n  symlist_chain *lists;\n\n  lists = preloaded_symlists;\n  while (lists)\n    {\n      symlist_chain *next = lists->next;\n      FREE (lists);\n      lists = next;\n    }\n  preloaded_symlists = 0;\n\n  return 0;\n}\n\n/* Add a new symbol list to the global chain.  */\nstatic int\nadd_symlist (const lt_dlsymlist *symlist)\n{\n  symlist_chain *lists;\n  int\t\t errors   = 0;\n\n  /* Search for duplicate entries:  */\n  for (lists = preloaded_symlists;\n       lists && lists->symlist != symlist; lists = lists->next)\n    /*NOWORK*/;\n\n  /* Don't add the same list twice:  */\n  if (!lists)\n    {\n      symlist_chain *tmp = (symlist_chain *) lt__zalloc (sizeof *tmp);\n\n      if (tmp)\n\t{\n\t  tmp->symlist = symlist;\n\t  tmp->next = preloaded_symlists;\n\t  preloaded_symlists = tmp;\n\t}\n      else\n\t{\n\t  ++errors;\n\t}\n    }\n\n  return errors;\n}\n\n\n\n/* --- PRELOADING API CALL IMPLEMENTATIONS --- */\n\n\n/* Save a default symbol list for later.  */\nint\nlt_dlpreload_default (const lt_dlsymlist *preloaded)\n{\n  default_preloaded_symbols = preloaded;\n  return 0;\n}\n\n\n/* Add a symbol list to the global chain, or with a NULL argument,\n   revert to just the default list.  */\nint\nlt_dlpreload (const lt_dlsymlist *preloaded)\n{\n  int errors = 0;\n\n  if (preloaded)\n    {\n      errors = add_symlist (preloaded);\n    }\n  else\n    {\n      free_symlists();\n\n      if (default_preloaded_symbols)\n\t{\n\t  errors = lt_dlpreload (default_preloaded_symbols);\n\t}\n    }\n\n  return errors;\n}\n\n\n/* Open all the preloaded modules from the named originator, executing\n   a callback for each one.  If ORIGINATOR is NULL, then call FUNC for\n   each preloaded module from the program itself.  */\nint\nlt_dlpreload_open (const char *originator, lt_dlpreload_callback_func *func)\n{\n  symlist_chain *list;\n  int\t\t errors = 0;\n  int\t\t found  = 0;\n\n  /* For each symlist in the chain...  */\n  for (list = preloaded_symlists; list; list = list->next)\n    {\n      /* ...that was preloaded by the requesting ORIGINATOR... */\n      if ((originator && streq (list->symlist->name, originator))\n          || (!originator && streq (list->symlist->name, \"@PROGRAM@\")))\n\t{\n\t  const lt_dlsymlist *symbol;\n\t  unsigned int idx = 0;\n\n\t  ++found;\n\n\t  /* ...load the symbols per source compilation unit:\n\t     (we preincrement the index to skip over the originator entry)  */\n\t  while ((symbol = &list->symlist[++idx])->name != 0)\n\t    {\n\t      if ((symbol->address == 0)\n\t\t  && (strneq (symbol->name, \"@PROGRAM@\")))\n\t\t{\n\t\t  lt_dlhandle handle = lt_dlopen (symbol->name);\n\t\t  if (handle == 0)\n\t\t    {\n\t\t      ++errors;\n\t\t    }\n\t\t  else\n\t\t    {\n\t\t      errors += (*func) (handle);\n\t\t    }\n\t\t}\n\t    }\n\t}\n    }\n\n  if (!found)\n    {\n      LT__SETERROR(CANNOT_OPEN);\n      ++errors;\n    }\n\n  return errors;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/libltdl/loaders/dlopen.c": "/* loader-dlopen.c --  dynamic linking with dlopen/dlsym\n\n   Copyright (C) 1998, 1999, 2000, 2004, 2006,\n                 2007, 2008 Free Software Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_dlloader.h\"\n\n/* Use the preprocessor to rename non-static symbols to avoid namespace\n   collisions when the loader code is statically linked into libltdl.\n   Use the \"<module_name>_LTX_\" prefix so that the symbol addresses can\n   be fetched from the preloaded symbol list by lt_dlsym():  */\n#define get_vtable\tdlopen_LTX_get_vtable\n\nLT_BEGIN_C_DECLS\nLT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);\nLT_END_C_DECLS\n\n\n/* Boilerplate code to set up the vtable for hooking this loader into\n   libltdl's loader list:  */\nstatic int\t vl_exit  (lt_user_data loader_data);\nstatic lt_module vm_open  (lt_user_data loader_data, const char *filename,\n                           lt_dladvise advise);\nstatic int\t vm_close (lt_user_data loader_data, lt_module module);\nstatic void *\t vm_sym   (lt_user_data loader_data, lt_module module,\n\t\t\t  const char *symbolname);\n\nstatic lt_dlvtable *vtable = 0;\n\n/* Return the vtable for this loader, only the name and sym_prefix\n   attributes (plus the virtual function implementations, obviously)\n   change between loaders.  */\nlt_dlvtable *\nget_vtable (lt_user_data loader_data)\n{\n  if (!vtable)\n    {\n      vtable = (lt_dlvtable *) lt__zalloc (sizeof *vtable);\n    }\n\n  if (vtable && !vtable->name)\n    {\n      vtable->name\t\t= \"lt_dlopen\";\n#if defined(DLSYM_USCORE)\n      vtable->sym_prefix\t= \"_\";\n#endif\n      vtable->module_open\t= vm_open;\n      vtable->module_close\t= vm_close;\n      vtable->find_sym\t\t= vm_sym;\n      vtable->dlloader_exit\t= vl_exit;\n      vtable->dlloader_data\t= loader_data;\n      vtable->priority\t\t= LT_DLLOADER_PREPEND;\n    }\n\n  if (vtable && (vtable->dlloader_data != loader_data))\n    {\n      LT__SETERROR (INIT_LOADER);\n      return 0;\n    }\n\n  return vtable;\n}\n\n\n\n/* --- IMPLEMENTATION --- */\n\n\n#if defined(HAVE_DLFCN_H)\n#  include <dlfcn.h>\n#endif\n\n#if defined(HAVE_SYS_DL_H)\n#  include <sys/dl.h>\n#endif\n\n\n/* We may have to define LT_LAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#if !defined(LT_LAZY_OR_NOW)\n#  if defined(RTLD_LAZY)\n#    define LT_LAZY_OR_NOW\tRTLD_LAZY\n#  else\n#    if defined(DL_LAZY)\n#      define LT_LAZY_OR_NOW\tDL_LAZY\n#    endif\n#  endif /* !RTLD_LAZY */\n#endif\n#if !defined(LT_LAZY_OR_NOW)\n#  if defined(RTLD_NOW)\n#    define LT_LAZY_OR_NOW\tRTLD_NOW\n#  else\n#    if defined(DL_NOW)\n#      define LT_LAZY_OR_NOW\tDL_NOW\n#    endif\n#  endif /* !RTLD_NOW */\n#endif\n#if !defined(LT_LAZY_OR_NOW)\n#  define LT_LAZY_OR_NOW\t0\n#endif /* !LT_LAZY_OR_NOW */\n\n/* We only support local and global symbols from modules for loaders\n   that provide such a thing, otherwise the system default is used.  */\n#if !defined(RTLD_GLOBAL)\n#  if defined(DL_GLOBAL)\n#    define RTLD_GLOBAL\t\tDL_GLOBAL\n#  endif\n#endif /* !RTLD_GLOBAL */\n#if !defined(RTLD_LOCAL)\n#  if defined(DL_LOCAL)\n#    define RTLD_LOCAL\t\tDL_LOCAL\n#  endif\n#endif /* !RTLD_LOCAL */\n\n#if defined(HAVE_DLERROR)\n#  define DLERROR(arg)\tdlerror ()\n#else\n#  define DLERROR(arg)\tLT__STRERROR (arg)\n#endif\n\n#define DL__SETERROR(errorcode) \\\n\tLT__SETERRORSTR (DLERROR (errorcode))\n\n\n/* A function called through the vtable when this loader is no\n   longer needed by the application.  */\nstatic int\nvl_exit (lt_user_data LT__UNUSED loader_data)\n{\n  vtable = NULL;\n  return 0;\n}\n\n\n/* A function called through the vtable to open a module with this\n   loader.  Returns an opaque representation of the newly opened\n   module for processing with this loader's other vtable functions.  */\nstatic lt_module\nvm_open (lt_user_data LT__UNUSED loader_data, const char *filename,\n         lt_dladvise advise)\n{\n  int\t\tmodule_flags = LT_LAZY_OR_NOW;\n  lt_module\tmodule;\n\n  if (advise)\n    {\n#ifdef RTLD_GLOBAL\n      /* If there is some means of asking for global symbol resolution,\n         do so.  */\n      if (advise->is_symglobal)\n        module_flags |= RTLD_GLOBAL;\n#else\n      /* Otherwise, reset that bit so the caller can tell it wasn't\n         acted on.  */\n      advise->is_symglobal = 0;\n#endif\n\n/* And similarly for local only symbol resolution.  */\n#ifdef RTLD_LOCAL\n      if (advise->is_symlocal)\n        module_flags |= RTLD_LOCAL;\n#else\n      advise->is_symlocal = 0;\n#endif\n    }\n\n  module = dlopen (filename, module_flags);\n\n  if (!module)\n    {\n      DL__SETERROR (CANNOT_OPEN);\n    }\n\n  return module;\n}\n\n\n/* A function called through the vtable when a particular module\n   should be unloaded.  */\nstatic int\nvm_close (lt_user_data LT__UNUSED loader_data, lt_module module)\n{\n  int errors = 0;\n\n  if (dlclose (module) != 0)\n    {\n      DL__SETERROR (CANNOT_CLOSE);\n      ++errors;\n    }\n\n  return errors;\n}\n\n\n/* A function called through the vtable to get the address of\n   a symbol loaded from a particular module.  */\nstatic void *\nvm_sym (lt_user_data LT__UNUSED loader_data, lt_module module, const char *name)\n{\n  void *address = dlsym (module, name);\n\n  if (!address)\n    {\n      DL__SETERROR (SYMBOL_NOT_FOUND);\n    }\n\n  return address;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/doc/libtool.1": ".\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.40.4.\n.TH LIBTOOL \"1\" \"October 2011\" \"libtool 2.4.2\" \"User Commands\"\n.SH NAME\nlibtool \\- manual page for libtool 2.4.2\n.SH SYNOPSIS\n.B libtool\n[\\fIOPTION\\fR]... [\\fIMODE-ARG\\fR]...\n.br\n.B libtool\n[\\fIOPTION\\fR]... \\fI--mode=compile COMPILE-COMMAND\\fR... \\fISOURCEFILE\\fR\n.br\n.B libtool\n[\\fIOPTION\\fR]... \\fI--mode=link LINK-COMMAND\\fR...\n.br\n.B libtool\n[\\fIOPTION\\fR]... \\fI--mode=execute COMMAND \\fR[\\fIARGS\\fR]...\n.br\n.B libtool\n[\\fIOPTION\\fR]... \\fI--mode=install INSTALL-COMMAND\\fR...\n.br\n.B libtool\n[\\fIOPTION\\fR]... \\fI--mode=finish \\fR[\\fILIBDIR\\fR]...\n.br\n.B libtool\n[\\fIOPTION\\fR]... \\fI--mode=uninstall RM \\fR[\\fIRM-OPTION\\fR]... \\fIFILE\\fR...\n.br\n.B libtool\n[\\fIOPTION\\fR]... \\fI--mode=clean RM \\fR[\\fIRM-OPTION\\fR]... \\fIFILE\\fR...\n.SH DESCRIPTION\nProvide generalized library\\-building support services.\n.TP\n\\fB\\-\\-config\\fR\nshow all configuration variables\n.TP\n\\fB\\-\\-debug\\fR\nenable verbose shell tracing\n.TP\n\\fB\\-n\\fR, \\fB\\-\\-dry\\-run\\fR\ndisplay commands without modifying any files\n.TP\n\\fB\\-\\-features\\fR\ndisplay basic configuration information and exit\n.TP\n\\fB\\-\\-mode\\fR=\\fIMODE\\fR\nuse operation mode MODE\n.TP\n\\fB\\-\\-preserve\\-dup\\-deps\\fR\ndon't remove duplicate dependency libraries\n.TP\n\\fB\\-\\-quiet\\fR, \\fB\\-\\-silent\\fR\ndon't print informational messages\n.TP\n\\fB\\-\\-no\\-quiet\\fR, \\fB\\-\\-no\\-silent\\fR\nprint informational messages (default)\n.TP\n\\fB\\-\\-no\\-warn\\fR\ndon't display warning messages\n.TP\n\\fB\\-\\-tag\\fR=\\fITAG\\fR\nuse configuration variables from tag TAG\n.TP\n\\fB\\-v\\fR, \\fB\\-\\-verbose\\fR\nprint more informational messages than default\n.TP\n\\fB\\-\\-no\\-verbose\\fR\ndon't print the extra informational messages\n.TP\n\\fB\\-\\-version\\fR\nprint version information\n.TP\n\\fB\\-h\\fR, \\fB\\-\\-help\\fR, \\fB\\-\\-help\\-all\\fR\nprint short, long, or detailed help message\n.PP\nMODE must be one of the following:\n.TP\nclean\nremove files from the build directory\n.TP\ncompile\ncompile a source file into a libtool object\n.TP\nexecute\nautomatically set library path, then run a program\n.TP\nfinish\ncomplete the installation of libtool libraries\n.TP\ninstall\ninstall libraries or executables\n.TP\nlink\ncreate a library or an executable\n.TP\nuninstall\nremove libraries from an installed directory\n.PP\nMODE\\-ARGS vary depending on the MODE.  When passed as first option,\n`\\-\\-mode=MODE' may be abbreviated as `MODE' or a unique abbreviation of that.\n.PP\nGNU libtool home page: <http://www.gnu.org/software/libtool/>.\nGeneral help using GNU software: <http://www.gnu.org/gethelp/>.\n.PP\nDescription of compile mode:\n.PP\nCompile a source file into a libtool library object.\n.PP\nThis mode accepts the following additional options:\n.TP\n\\fB\\-o\\fR OUTPUT\\-FILE\nset the output file name to OUTPUT\\-FILE\n.TP\n\\fB\\-no\\-suppress\\fR\ndo not suppress compiler output for multiple passes\n.TP\n\\fB\\-prefer\\-pic\\fR\ntry to build PIC objects only\n.TP\n\\fB\\-prefer\\-non\\-pic\\fR\ntry to build non\\-PIC objects only\n.TP\n\\fB\\-shared\\fR\ndo not build a `.o' file suitable for static linking\n.TP\n\\fB\\-static\\fR\nonly build a `.o' file suitable for static linking\n.TP\n\\fB\\-Wc\\fR,FLAG\npass FLAG directly to the compiler\n.PP\nCOMPILE\\-COMMAND is a command to be used in creating a `standard' object file\nfrom the given SOURCEFILE.\n.PP\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix `.c' with the\nlibrary object suffix, `.lo'.\n.PP\nDescription of link mode:\n.PP\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n.PP\nLINK\\-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n.PP\nThe following components of LINK\\-COMMAND are treated specially:\n.TP\n\\fB\\-all\\-static\\fR\ndo not do any dynamic linking at all\n.TP\n\\fB\\-avoid\\-version\\fR\ndo not add a version suffix if possible\n.TP\n\\fB\\-bindir\\fR BINDIR\nspecify path to binaries directory (for systems where\nlibraries must be found in the PATH setting at runtime)\n.TP\n\\fB\\-dlopen\\fR FILE\n`\\-dlpreopen' FILE if it cannot be dlopened at runtime\n.TP\n\\fB\\-dlpreopen\\fR FILE\nlink in FILE and add its symbols to lt_preloaded_symbols\n.TP\n\\fB\\-export\\-dynamic\\fR\nallow symbols from OUTPUT\\-FILE to be resolved with dlsym(3)\n.TP\n\\fB\\-export\\-symbols\\fR SYMFILE\ntry to export only the symbols listed in SYMFILE\n.TP\n\\fB\\-export\\-symbols\\-regex\\fR REGEX\ntry to export only the symbols matching REGEX\n.TP\n\\fB\\-LLIBDIR\\fR\nsearch LIBDIR for required installed libraries\n.TP\n\\fB\\-lNAME\\fR\nOUTPUT\\-FILE requires the installed library libNAME\n.TP\n\\fB\\-module\\fR\nbuild a library that can dlopened\n.TP\n\\fB\\-no\\-fast\\-install\\fR\ndisable the fast\\-install mode\n.TP\n\\fB\\-no\\-install\\fR\nlink a not\\-installable executable\n.TP\n\\fB\\-no\\-undefined\\fR\ndeclare that a library does not refer to external symbols\n.TP\n\\fB\\-o\\fR OUTPUT\\-FILE\ncreate OUTPUT\\-FILE from the specified objects\n.TP\n\\fB\\-objectlist\\fR FILE\nUse a list of object files found in FILE to specify objects\n.TP\n\\fB\\-precious\\-files\\-regex\\fR REGEX\ndon't remove output files matching REGEX\n.TP\n\\fB\\-release\\fR RELEASE\nspecify package release information\n.TP\n\\fB\\-rpath\\fR LIBDIR\nthe created library will eventually be installed in LIBDIR\n.TP\n\\fB\\-R[\\fR ]LIBDIR\nadd LIBDIR to the runtime path of programs and libraries\n.TP\n\\fB\\-shared\\fR\nonly do dynamic linking of libtool libraries\n.TP\n\\fB\\-shrext\\fR SUFFIX\noverride the standard shared library file extension\n.TP\n\\fB\\-static\\fR\ndo not do any dynamic linking of uninstalled libtool libraries\n.TP\n\\fB\\-static\\-libtool\\-libs\\fR\ndo not do any dynamic linking of libtool libraries\n.TP\n\\fB\\-version\\-info\\fR CURRENT[:REVISION[:AGE]]\nspecify library version info [each variable defaults to 0]\n.TP\n\\fB\\-weak\\fR LIBNAME\ndeclare that the target provides the LIBNAME interface\n.HP\n\\fB\\-Wc\\fR,FLAG\n.TP\n\\fB\\-Xcompiler\\fR FLAG\npass linker\\-specific FLAG directly to the compiler\n.HP\n\\fB\\-Wl\\fR,FLAG\n.TP\n\\fB\\-Xlinker\\fR FLAG\npass linker\\-specific FLAG directly to the linker\n.TP\n\\fB\\-XCClinker\\fR FLAG\npass link\\-specific FLAG to the compiler driver (CC)\n.PP\nAll other options (arguments beginning with `\\-') are ignored.\n.PP\nEvery other argument is treated as a filename.  Files ending in `.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n.PP\nIf the OUTPUT\\-FILE ends in `.la', then a libtool library is created,\nonly library objects (`.lo' files) may be specified, and `\\-rpath' is\nrequired, except when creating a convenience library.\n.PP\nIf OUTPUT\\-FILE ends in `.a' or `.lib', then a standard library is created\nusing `ar' and `ranlib', or on Windows using `lib'.\n.PP\nIf OUTPUT\\-FILE ends in `.lo' or `.o', then a reloadable object file\nis created, otherwise an executable program is created.\n.PP\nDescription of execute mode:\n.PP\nAutomatically set library path, then run a program.\n.PP\nThis mode accepts the following additional options:\n.TP\n\\fB\\-dlopen\\fR FILE\nadd the directory containing FILE to the library path\n.PP\nThis mode sets the library path environment variable according to `\\-dlopen'\nflags.\n.PP\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n.PP\nThen, COMMAND is executed, with ARGS as arguments.\n.PP\nDescription of install mode:\n.PP\nInstall executables or libraries.\n.PP\nINSTALL\\-COMMAND is the installation command.  The first component should be\neither the `install' or `cp' program.\n.PP\nThe following components of INSTALL\\-COMMAND are treated specially:\n.TP\n\\fB\\-inst\\-prefix\\-dir\\fR PREFIX\\-DIR\nUse PREFIX\\-DIR as a staging area for installation\n.PP\nThe rest of the components are interpreted as arguments to that command (only\nBSD\\-compatible install options are recognized).\n.PP\nDescription of finish mode:\n.PP\nComplete the installation of libtool libraries.\n.PP\nEach LIBDIR is a directory that contains libtool libraries.\n.PP\nThe commands that this mode executes may require superuser privileges.  Use\nthe `\\-\\-dry\\-run' option if you just want to see what would be executed.\n.PP\nDescription of uninstall mode:\n.PP\nRemove libraries from an installation directory.\n.PP\nRM is the name of the program to use to delete files associated with each FILE\n(typically `/bin/rm').  RM\\-OPTIONS are options (such as `\\-f') to be passed\nto RM.\n.PP\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\n.PP\nDescription of clean mode:\n.PP\nRemove files from the build directory.\n.PP\nRM is the name of the program to use to delete files associated with each FILE\n(typically `/bin/rm').  RM\\-OPTIONS are options (such as `\\-f') to be passed\nto RM.\n.PP\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\n.PP\nWhen reporting a bug, please describe a test case to reproduce it and\ninclude the following information:\n.TP\nhost\\-triplet:\nx86_64\\-apple\\-darwin11.2.0\n.TP\nshell:\n/bin/sh\n.TP\ncompiler:\ngcc\n.TP\ncompiler flags:\n\\fB\\-g\\fR \\fB\\-O2\\fR\n.TP\nlinker:\n/usr/llvm\\-gcc\\-4.2/libexec/gcc/i686\\-apple\\-darwin11/4.2.1/ld (gnu? no)\n.TP\nlibtool:\n(GNU libtool) 2.4.2\n.TP\nautomake:\nautomake (GNU automake) 1.11.1\n.TP\nautoconf:\nautoconf (GNU Autoconf) 2.68\n.SH AUTHOR\nWritten by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n.SH \"REPORTING BUGS\"\nReport bugs to <bug\\-libtool@gnu.org>.\n.SH COPYRIGHT\nCopyright \\(co 2011 Free Software Foundation, Inc.\n.br\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n.SH \"SEE ALSO\"\nThe full documentation for\n.B libtool\nis maintained as a Texinfo manual.  If the\n.B info\nand\n.B libtool\nprograms are properly installed at your site, the command\n.IP\n.B info libtool\n.PP\nshould give you access to the complete manual.\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/doc/libtool.info-2": "This is doc/libtool.info, produced by makeinfo version 4.13 from\n./doc/libtool.texi.\n\nINFO-DIR-SECTION GNU programming tools\nSTART-INFO-DIR-ENTRY\n* Libtool: (libtool).           Generic shared library support script.\nEND-INFO-DIR-ENTRY\n\nINFO-DIR-SECTION Individual utilities\nSTART-INFO-DIR-ENTRY\n* libtool-invocation: (libtool)Invoking libtool.\n                                                Running the `libtool' script.\n* libtoolize: (libtool)Invoking libtoolize.     Adding libtool support.\nEND-INFO-DIR-ENTRY\n\n   This file documents GNU Libtool 2.4.2\n\n   Copyright (C) 1996-2011 Free Software Foundation, Inc.\n\n   Permission is granted to copy, distribute and/or modify this document\nunder the terms of the GNU Free Documentation License, Version 1.3 or\nany later version published by the Free Software Foundation; with no\nInvariant Sections, with no Front-Cover Texts, and with no Back-Cover\nTexts.  A copy of the license is included in the section entitled \"GNU\nFree Documentation License\".\n\n\u001f\nFile: libtool.info,  Node: GNU Free Documentation License,  Next: Combined Index,  Prev: Maintaining,  Up: Top\n\nAppendix A GNU Free Documentation License\n*****************************************\n\n                     Version 1.3, 3 November 2008\n\n     Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.\n     `http://fsf.org/'\n\n     Everyone is permitted to copy and distribute verbatim copies\n     of this license document, but changing it is not allowed.\n\n  0. PREAMBLE\n\n     The purpose of this License is to make a manual, textbook, or other\n     functional and useful document \"free\" in the sense of freedom: to\n     assure everyone the effective freedom to copy and redistribute it,\n     with or without modifying it, either commercially or\n     noncommercially.  Secondarily, this License preserves for the\n     author and publisher a way to get credit for their work, while not\n     being considered responsible for modifications made by others.\n\n     This License is a kind of \"copyleft\", which means that derivative\n     works of the document must themselves be free in the same sense.\n     It complements the GNU General Public License, which is a copyleft\n     license designed for free software.\n\n     We have designed this License in order to use it for manuals for\n     free software, because free software needs free documentation: a\n     free program should come with manuals providing the same freedoms\n     that the software does.  But this License is not limited to\n     software manuals; it can be used for any textual work, regardless\n     of subject matter or whether it is published as a printed book.\n     We recommend this License principally for works whose purpose is\n     instruction or reference.\n\n  1. APPLICABILITY AND DEFINITIONS\n\n     This License applies to any manual or other work, in any medium,\n     that contains a notice placed by the copyright holder saying it\n     can be distributed under the terms of this License.  Such a notice\n     grants a world-wide, royalty-free license, unlimited in duration,\n     to use that work under the conditions stated herein.  The\n     \"Document\", below, refers to any such manual or work.  Any member\n     of the public is a licensee, and is addressed as \"you\".  You\n     accept the license if you copy, modify or distribute the work in a\n     way requiring permission under copyright law.\n\n     A \"Modified Version\" of the Document means any work containing the\n     Document or a portion of it, either copied verbatim, or with\n     modifications and/or translated into another language.\n\n     A \"Secondary Section\" is a named appendix or a front-matter section\n     of the Document that deals exclusively with the relationship of the\n     publishers or authors of the Document to the Document's overall\n     subject (or to related matters) and contains nothing that could\n     fall directly within that overall subject.  (Thus, if the Document\n     is in part a textbook of mathematics, a Secondary Section may not\n     explain any mathematics.)  The relationship could be a matter of\n     historical connection with the subject or with related matters, or\n     of legal, commercial, philosophical, ethical or political position\n     regarding them.\n\n     The \"Invariant Sections\" are certain Secondary Sections whose\n     titles are designated, as being those of Invariant Sections, in\n     the notice that says that the Document is released under this\n     License.  If a section does not fit the above definition of\n     Secondary then it is not allowed to be designated as Invariant.\n     The Document may contain zero Invariant Sections.  If the Document\n     does not identify any Invariant Sections then there are none.\n\n     The \"Cover Texts\" are certain short passages of text that are\n     listed, as Front-Cover Texts or Back-Cover Texts, in the notice\n     that says that the Document is released under this License.  A\n     Front-Cover Text may be at most 5 words, and a Back-Cover Text may\n     be at most 25 words.\n\n     A \"Transparent\" copy of the Document means a machine-readable copy,\n     represented in a format whose specification is available to the\n     general public, that is suitable for revising the document\n     straightforwardly with generic text editors or (for images\n     composed of pixels) generic paint programs or (for drawings) some\n     widely available drawing editor, and that is suitable for input to\n     text formatters or for automatic translation to a variety of\n     formats suitable for input to text formatters.  A copy made in an\n     otherwise Transparent file format whose markup, or absence of\n     markup, has been arranged to thwart or discourage subsequent\n     modification by readers is not Transparent.  An image format is\n     not Transparent if used for any substantial amount of text.  A\n     copy that is not \"Transparent\" is called \"Opaque\".\n\n     Examples of suitable formats for Transparent copies include plain\n     ASCII without markup, Texinfo input format, LaTeX input format,\n     SGML or XML using a publicly available DTD, and\n     standard-conforming simple HTML, PostScript or PDF designed for\n     human modification.  Examples of transparent image formats include\n     PNG, XCF and JPG.  Opaque formats include proprietary formats that\n     can be read and edited only by proprietary word processors, SGML or\n     XML for which the DTD and/or processing tools are not generally\n     available, and the machine-generated HTML, PostScript or PDF\n     produced by some word processors for output purposes only.\n\n     The \"Title Page\" means, for a printed book, the title page itself,\n     plus such following pages as are needed to hold, legibly, the\n     material this License requires to appear in the title page.  For\n     works in formats which do not have any title page as such, \"Title\n     Page\" means the text near the most prominent appearance of the\n     work's title, preceding the beginning of the body of the text.\n\n     The \"publisher\" means any person or entity that distributes copies\n     of the Document to the public.\n\n     A section \"Entitled XYZ\" means a named subunit of the Document\n     whose title either is precisely XYZ or contains XYZ in parentheses\n     following text that translates XYZ in another language.  (Here XYZ\n     stands for a specific section name mentioned below, such as\n     \"Acknowledgements\", \"Dedications\", \"Endorsements\", or \"History\".)\n     To \"Preserve the Title\" of such a section when you modify the\n     Document means that it remains a section \"Entitled XYZ\" according\n     to this definition.\n\n     The Document may include Warranty Disclaimers next to the notice\n     which states that this License applies to the Document.  These\n     Warranty Disclaimers are considered to be included by reference in\n     this License, but only as regards disclaiming warranties: any other\n     implication that these Warranty Disclaimers may have is void and\n     has no effect on the meaning of this License.\n\n  2. VERBATIM COPYING\n\n     You may copy and distribute the Document in any medium, either\n     commercially or noncommercially, provided that this License, the\n     copyright notices, and the license notice saying this License\n     applies to the Document are reproduced in all copies, and that you\n     add no other conditions whatsoever to those of this License.  You\n     may not use technical measures to obstruct or control the reading\n     or further copying of the copies you make or distribute.  However,\n     you may accept compensation in exchange for copies.  If you\n     distribute a large enough number of copies you must also follow\n     the conditions in section 3.\n\n     You may also lend copies, under the same conditions stated above,\n     and you may publicly display copies.\n\n  3. COPYING IN QUANTITY\n\n     If you publish printed copies (or copies in media that commonly\n     have printed covers) of the Document, numbering more than 100, and\n     the Document's license notice requires Cover Texts, you must\n     enclose the copies in covers that carry, clearly and legibly, all\n     these Cover Texts: Front-Cover Texts on the front cover, and\n     Back-Cover Texts on the back cover.  Both covers must also clearly\n     and legibly identify you as the publisher of these copies.  The\n     front cover must present the full title with all words of the\n     title equally prominent and visible.  You may add other material\n     on the covers in addition.  Copying with changes limited to the\n     covers, as long as they preserve the title of the Document and\n     satisfy these conditions, can be treated as verbatim copying in\n     other respects.\n\n     If the required texts for either cover are too voluminous to fit\n     legibly, you should put the first ones listed (as many as fit\n     reasonably) on the actual cover, and continue the rest onto\n     adjacent pages.\n\n     If you publish or distribute Opaque copies of the Document\n     numbering more than 100, you must either include a\n     machine-readable Transparent copy along with each Opaque copy, or\n     state in or with each Opaque copy a computer-network location from\n     which the general network-using public has access to download\n     using public-standard network protocols a complete Transparent\n     copy of the Document, free of added material.  If you use the\n     latter option, you must take reasonably prudent steps, when you\n     begin distribution of Opaque copies in quantity, to ensure that\n     this Transparent copy will remain thus accessible at the stated\n     location until at least one year after the last time you\n     distribute an Opaque copy (directly or through your agents or\n     retailers) of that edition to the public.\n\n     It is requested, but not required, that you contact the authors of\n     the Document well before redistributing any large number of\n     copies, to give them a chance to provide you with an updated\n     version of the Document.\n\n  4. MODIFICATIONS\n\n     You may copy and distribute a Modified Version of the Document\n     under the conditions of sections 2 and 3 above, provided that you\n     release the Modified Version under precisely this License, with\n     the Modified Version filling the role of the Document, thus\n     licensing distribution and modification of the Modified Version to\n     whoever possesses a copy of it.  In addition, you must do these\n     things in the Modified Version:\n\n       A. Use in the Title Page (and on the covers, if any) a title\n          distinct from that of the Document, and from those of\n          previous versions (which should, if there were any, be listed\n          in the History section of the Document).  You may use the\n          same title as a previous version if the original publisher of\n          that version gives permission.\n\n       B. List on the Title Page, as authors, one or more persons or\n          entities responsible for authorship of the modifications in\n          the Modified Version, together with at least five of the\n          principal authors of the Document (all of its principal\n          authors, if it has fewer than five), unless they release you\n          from this requirement.\n\n       C. State on the Title page the name of the publisher of the\n          Modified Version, as the publisher.\n\n       D. Preserve all the copyright notices of the Document.\n\n       E. Add an appropriate copyright notice for your modifications\n          adjacent to the other copyright notices.\n\n       F. Include, immediately after the copyright notices, a license\n          notice giving the public permission to use the Modified\n          Version under the terms of this License, in the form shown in\n          the Addendum below.\n\n       G. Preserve in that license notice the full lists of Invariant\n          Sections and required Cover Texts given in the Document's\n          license notice.\n\n       H. Include an unaltered copy of this License.\n\n       I. Preserve the section Entitled \"History\", Preserve its Title,\n          and add to it an item stating at least the title, year, new\n          authors, and publisher of the Modified Version as given on\n          the Title Page.  If there is no section Entitled \"History\" in\n          the Document, create one stating the title, year, authors,\n          and publisher of the Document as given on its Title Page,\n          then add an item describing the Modified Version as stated in\n          the previous sentence.\n\n       J. Preserve the network location, if any, given in the Document\n          for public access to a Transparent copy of the Document, and\n          likewise the network locations given in the Document for\n          previous versions it was based on.  These may be placed in\n          the \"History\" section.  You may omit a network location for a\n          work that was published at least four years before the\n          Document itself, or if the original publisher of the version\n          it refers to gives permission.\n\n       K. For any section Entitled \"Acknowledgements\" or \"Dedications\",\n          Preserve the Title of the section, and preserve in the\n          section all the substance and tone of each of the contributor\n          acknowledgements and/or dedications given therein.\n\n       L. Preserve all the Invariant Sections of the Document,\n          unaltered in their text and in their titles.  Section numbers\n          or the equivalent are not considered part of the section\n          titles.\n\n       M. Delete any section Entitled \"Endorsements\".  Such a section\n          may not be included in the Modified Version.\n\n       N. Do not retitle any existing section to be Entitled\n          \"Endorsements\" or to conflict in title with any Invariant\n          Section.\n\n       O. Preserve any Warranty Disclaimers.\n\n     If the Modified Version includes new front-matter sections or\n     appendices that qualify as Secondary Sections and contain no\n     material copied from the Document, you may at your option\n     designate some or all of these sections as invariant.  To do this,\n     add their titles to the list of Invariant Sections in the Modified\n     Version's license notice.  These titles must be distinct from any\n     other section titles.\n\n     You may add a section Entitled \"Endorsements\", provided it contains\n     nothing but endorsements of your Modified Version by various\n     parties--for example, statements of peer review or that the text\n     has been approved by an organization as the authoritative\n     definition of a standard.\n\n     You may add a passage of up to five words as a Front-Cover Text,\n     and a passage of up to 25 words as a Back-Cover Text, to the end\n     of the list of Cover Texts in the Modified Version.  Only one\n     passage of Front-Cover Text and one of Back-Cover Text may be\n     added by (or through arrangements made by) any one entity.  If the\n     Document already includes a cover text for the same cover,\n     previously added by you or by arrangement made by the same entity\n     you are acting on behalf of, you may not add another; but you may\n     replace the old one, on explicit permission from the previous\n     publisher that added the old one.\n\n     The author(s) and publisher(s) of the Document do not by this\n     License give permission to use their names for publicity for or to\n     assert or imply endorsement of any Modified Version.\n\n  5. COMBINING DOCUMENTS\n\n     You may combine the Document with other documents released under\n     this License, under the terms defined in section 4 above for\n     modified versions, provided that you include in the combination\n     all of the Invariant Sections of all of the original documents,\n     unmodified, and list them all as Invariant Sections of your\n     combined work in its license notice, and that you preserve all\n     their Warranty Disclaimers.\n\n     The combined work need only contain one copy of this License, and\n     multiple identical Invariant Sections may be replaced with a single\n     copy.  If there are multiple Invariant Sections with the same name\n     but different contents, make the title of each such section unique\n     by adding at the end of it, in parentheses, the name of the\n     original author or publisher of that section if known, or else a\n     unique number.  Make the same adjustment to the section titles in\n     the list of Invariant Sections in the license notice of the\n     combined work.\n\n     In the combination, you must combine any sections Entitled\n     \"History\" in the various original documents, forming one section\n     Entitled \"History\"; likewise combine any sections Entitled\n     \"Acknowledgements\", and any sections Entitled \"Dedications\".  You\n     must delete all sections Entitled \"Endorsements.\"\n\n  6. COLLECTIONS OF DOCUMENTS\n\n     You may make a collection consisting of the Document and other\n     documents released under this License, and replace the individual\n     copies of this License in the various documents with a single copy\n     that is included in the collection, provided that you follow the\n     rules of this License for verbatim copying of each of the\n     documents in all other respects.\n\n     You may extract a single document from such a collection, and\n     distribute it individually under this License, provided you insert\n     a copy of this License into the extracted document, and follow\n     this License in all other respects regarding verbatim copying of\n     that document.\n\n  7. AGGREGATION WITH INDEPENDENT WORKS\n\n     A compilation of the Document or its derivatives with other\n     separate and independent documents or works, in or on a volume of\n     a storage or distribution medium, is called an \"aggregate\" if the\n     copyright resulting from the compilation is not used to limit the\n     legal rights of the compilation's users beyond what the individual\n     works permit.  When the Document is included in an aggregate, this\n     License does not apply to the other works in the aggregate which\n     are not themselves derivative works of the Document.\n\n     If the Cover Text requirement of section 3 is applicable to these\n     copies of the Document, then if the Document is less than one half\n     of the entire aggregate, the Document's Cover Texts may be placed\n     on covers that bracket the Document within the aggregate, or the\n     electronic equivalent of covers if the Document is in electronic\n     form.  Otherwise they must appear on printed covers that bracket\n     the whole aggregate.\n\n  8. TRANSLATION\n\n     Translation is considered a kind of modification, so you may\n     distribute translations of the Document under the terms of section\n     4.  Replacing Invariant Sections with translations requires special\n     permission from their copyright holders, but you may include\n     translations of some or all Invariant Sections in addition to the\n     original versions of these Invariant Sections.  You may include a\n     translation of this License, and all the license notices in the\n     Document, and any Warranty Disclaimers, provided that you also\n     include the original English version of this License and the\n     original versions of those notices and disclaimers.  In case of a\n     disagreement between the translation and the original version of\n     this License or a notice or disclaimer, the original version will\n     prevail.\n\n     If a section in the Document is Entitled \"Acknowledgements\",\n     \"Dedications\", or \"History\", the requirement (section 4) to\n     Preserve its Title (section 1) will typically require changing the\n     actual title.\n\n  9. TERMINATION\n\n     You may not copy, modify, sublicense, or distribute the Document\n     except as expressly provided under this License.  Any attempt\n     otherwise to copy, modify, sublicense, or distribute it is void,\n     and will automatically terminate your rights under this License.\n\n     However, if you cease all violation of this License, then your\n     license from a particular copyright holder is reinstated (a)\n     provisionally, unless and until the copyright holder explicitly\n     and finally terminates your license, and (b) permanently, if the\n     copyright holder fails to notify you of the violation by some\n     reasonable means prior to 60 days after the cessation.\n\n     Moreover, your license from a particular copyright holder is\n     reinstated permanently if the copyright holder notifies you of the\n     violation by some reasonable means, this is the first time you have\n     received notice of violation of this License (for any work) from\n     that copyright holder, and you cure the violation prior to 30 days\n     after your receipt of the notice.\n\n     Termination of your rights under this section does not terminate\n     the licenses of parties who have received copies or rights from\n     you under this License.  If your rights have been terminated and\n     not permanently reinstated, receipt of a copy of some or all of\n     the same material does not give you any rights to use it.\n\n 10. FUTURE REVISIONS OF THIS LICENSE\n\n     The Free Software Foundation may publish new, revised versions of\n     the GNU Free Documentation License from time to time.  Such new\n     versions will be similar in spirit to the present version, but may\n     differ in detail to address new problems or concerns.  See\n     `http://www.gnu.org/copyleft/'.\n\n     Each version of the License is given a distinguishing version\n     number.  If the Document specifies that a particular numbered\n     version of this License \"or any later version\" applies to it, you\n     have the option of following the terms and conditions either of\n     that specified version or of any later version that has been\n     published (not as a draft) by the Free Software Foundation.  If\n     the Document does not specify a version number of this License,\n     you may choose any version ever published (not as a draft) by the\n     Free Software Foundation.  If the Document specifies that a proxy\n     can decide which future versions of this License can be used, that\n     proxy's public statement of acceptance of a version permanently\n     authorizes you to choose that version for the Document.\n\n 11. RELICENSING\n\n     \"Massive Multiauthor Collaboration Site\" (or \"MMC Site\") means any\n     World Wide Web server that publishes copyrightable works and also\n     provides prominent facilities for anybody to edit those works.  A\n     public wiki that anybody can edit is an example of such a server.\n     A \"Massive Multiauthor Collaboration\" (or \"MMC\") contained in the\n     site means any set of copyrightable works thus published on the MMC\n     site.\n\n     \"CC-BY-SA\" means the Creative Commons Attribution-Share Alike 3.0\n     license published by Creative Commons Corporation, a not-for-profit\n     corporation with a principal place of business in San Francisco,\n     California, as well as future copyleft versions of that license\n     published by that same organization.\n\n     \"Incorporate\" means to publish or republish a Document, in whole or\n     in part, as part of another Document.\n\n     An MMC is \"eligible for relicensing\" if it is licensed under this\n     License, and if all works that were first published under this\n     License somewhere other than this MMC, and subsequently\n     incorporated in whole or in part into the MMC, (1) had no cover\n     texts or invariant sections, and (2) were thus incorporated prior\n     to November 1, 2008.\n\n     The operator of an MMC Site may republish an MMC contained in the\n     site under CC-BY-SA on the same site at any time before August 1,\n     2009, provided the MMC is eligible for relicensing.\n\n\nADDENDUM: How to use this License for your documents\n====================================================\n\nTo use this License in a document you have written, include a copy of\nthe License in the document and put the following copyright and license\nnotices just after the title page:\n\n       Copyright (C)  YEAR  YOUR NAME.\n       Permission is granted to copy, distribute and/or modify this document\n       under the terms of the GNU Free Documentation License, Version 1.3\n       or any later version published by the Free Software Foundation;\n       with no Invariant Sections, no Front-Cover Texts, and no Back-Cover\n       Texts.  A copy of the license is included in the section entitled ``GNU\n       Free Documentation License''.\n\n   If you have Invariant Sections, Front-Cover Texts and Back-Cover\nTexts, replace the \"with...Texts.\" line with this:\n\n         with the Invariant Sections being LIST THEIR TITLES, with\n         the Front-Cover Texts being LIST, and with the Back-Cover Texts\n         being LIST.\n\n   If you have Invariant Sections without Cover Texts, or some other\ncombination of the three, merge those two alternatives to suit the\nsituation.\n\n   If your document contains nontrivial examples of program code, we\nrecommend releasing these examples in parallel under your choice of\nfree software license, such as the GNU General Public License, to\npermit their use in free software.\n\n\u001f\nFile: libtool.info,  Node: Combined Index,  Prev: GNU Free Documentation License,  Up: Top\n\nCombined Index\n**************\n\n\u0000\b[index\u0000\b]\n* Menu:\n\n* -no-suppress, libtool compile mode option: Creating object files.\n                                                              (line  92)\n* -weak option:                          Linking with dlopened modules.\n                                                              (line  94)\n* .la files:                             Linking libraries.   (line  24)\n* .libs subdirectory:                    Linking libraries.   (line  77)\n* .lo files:                             Creating object files.\n                                                              (line  28)\n* AC_CONFIG_AUX_DIR:                     Invoking libtoolize. (line 157)\n* AC_CONFIG_MACRO_DIR:                   Invoking libtoolize. (line 136)\n* AC_DISABLE_FAST_INSTALL:               LT_INIT.             (line 185)\n* AC_DISABLE_SHARED:                     LT_INIT.             (line 189)\n* AC_DISABLE_STATIC:                     LT_INIT.             (line 206)\n* AC_ENABLE_SHARED:                      LT_INIT.             (line 197)\n* AC_ENABLE_STATIC:                      LT_INIT.             (line 214)\n* AC_LIBLTDL_CONVENIENCE:                Distributing libltdl.\n                                                              (line 302)\n* AC_LIBLTDL_INSTALLABLE:                Distributing libltdl.\n                                                              (line 297)\n* AC_LIBTOOL_DLOPEN:                     LT_INIT.             (line 177)\n* AC_LIBTOOL_WIN32_DLL:                  LT_INIT.             (line 181)\n* AC_PROG_LIBTOOL:                       LT_INIT.             (line  22)\n* AC_WITH_LTDL:                          Distributing libltdl.\n                                                              (line  42)\n* aclocal:                               LT_INIT.             (line 322)\n* allow_undefined_flag:                  libtool script contents.\n                                                              (line  76)\n* always_export_symbols:                 libtool script contents.\n                                                              (line  83)\n* AM_DISABLE_SHARED:                     LT_INIT.             (line 190)\n* AM_DISABLE_STATIC:                     LT_INIT.             (line 207)\n* AM_ENABLE_SHARED:                      LT_INIT.             (line 198)\n* AM_ENABLE_STATIC:                      LT_INIT.             (line 215)\n* AM_PROG_LIBTOOL:                       LT_INIT.             (line  23)\n* application-level dynamic linking <1>: Dlopened modules.    (line   6)\n* application-level dynamic linking:     Using libltdl.       (line   6)\n* ar:                                    Linking libraries.   (line   6)\n* AR:                                    libtool script contents.\n                                                              (line  30)\n* archive_cmds:                          libtool script contents.\n                                                              (line  88)\n* archive_expsym_cmds:                   libtool script contents.\n                                                              (line  89)\n* archiver_list_spec:                    libtool script contents.\n                                                              (line  94)\n* AS:                                    LT_INIT.             (line 278)\n* autoconf traces:                       Trace interface.     (line   6)\n* avoiding shared libraries:             Static-only libraries.\n                                                              (line   6)\n* bug reports:                           Reporting bugs.      (line   6)\n* buggy system linkers:                  Linking executables. (line  11)\n* bugs, subtle ones caused by buggy linkers: Linking executables.\n                                                              (line  16)\n* build:                                 libtool script contents.\n                                                              (line 118)\n* build_alias:                           libtool script contents.\n                                                              (line 119)\n* build_libtool_libs:                    libtool script contents.\n                                                              (line 124)\n* build_old_libs:                        libtool script contents.\n                                                              (line 128)\n* build_os:                              libtool script contents.\n                                                              (line 120)\n* C header files, portable:              C header files.      (line   6)\n* C++, pitfalls:                         C++ libraries.       (line   6)\n* C++, using:                            Other languages.     (line   6)\n* C, not using:                          Other languages.     (line   6)\n* CC <1>:                                LT_INIT.             (line 228)\n* CC:                                    libtool script contents.\n                                                              (line  33)\n* cdemo-conf.test:                       Test descriptions.   (line  21)\n* cdemo-exec.test:                       Test descriptions.   (line  21)\n* cdemo-make.test:                       Test descriptions.   (line  21)\n* cdemo-shared-exec.test:                Test descriptions.   (line  21)\n* cdemo-shared-make.test:                Test descriptions.   (line  21)\n* cdemo-shared.test:                     Test descriptions.   (line  21)\n* cdemo-static-exec.test:                Test descriptions.   (line  21)\n* cdemo-static-make.test:                Test descriptions.   (line  21)\n* cdemo-static.test:                     Test descriptions.   (line  21)\n* cdemo-undef-exec.test:                 Test descriptions.   (line  21)\n* cdemo-undef-make.test:                 Test descriptions.   (line  21)\n* cdemo-undef.test:                      Test descriptions.   (line  21)\n* CFLAGS:                                LT_INIT.             (line 232)\n* check-interactive:                     Test descriptions.   (line 334)\n* check-noninteractive:                  Test descriptions.   (line 334)\n* clean mode:                            Clean mode.          (line   6)\n* command options, libtool:              Invoking libtool.    (line   6)\n* command options, libtoolize:           Invoking libtoolize. (line   6)\n* compile mode:                          Compile mode.        (line   6)\n* compiler_c_o:                          libtool script contents.\n                                                              (line 132)\n* compiler_needs_object:                 libtool script contents.\n                                                              (line 136)\n* compiling object files:                Creating object files.\n                                                              (line   6)\n* complexity of library systems:         Postmortem.          (line  11)\n* config.guess:                          Distributing.        (line  10)\n* config.sub:                            Distributing.        (line  13)\n* configuring libtool:                   Configuring.         (line   6)\n* convenience libraries:                 Static libraries.    (line   6)\n* CPPFLAGS:                              LT_INIT.             (line 237)\n* cross compile:                         Cross compiling.     (line   6)\n* Cygwin to MinGW Cross:                 Cygwin to MinGW Cross.\n                                                              (line   6)\n* debugging libraries:                   Static-only libraries.\n                                                              (line   6)\n* definition of libraries:               Libtool paradigm.    (line  11)\n* demo-conf.test:                        Test descriptions.   (line  66)\n* demo-deplibs.test:                     Test descriptions.   (line  84)\n* demo-exec.test:                        Test descriptions.   (line  66)\n* demo-hardcode.test:                    Test descriptions.   (line  90)\n* demo-inst.test:                        Test descriptions.   (line  66)\n* demo-make.test:                        Test descriptions.   (line  66)\n* demo-nofast-exec.test:                 Test descriptions.   (line  66)\n* demo-nofast-inst.test:                 Test descriptions.   (line  66)\n* demo-nofast-make.test:                 Test descriptions.   (line  66)\n* demo-nofast-unst.test:                 Test descriptions.   (line  66)\n* demo-nofast.test:                      Test descriptions.   (line  66)\n* demo-noinst-link.test:                 Test descriptions.   (line 104)\n* demo-nopic-exec.test:                  Test descriptions.   (line  66)\n* demo-nopic-make.test:                  Test descriptions.   (line  66)\n* demo-nopic.test:                       Test descriptions.   (line  66)\n* demo-pic-exec.test:                    Test descriptions.   (line  66)\n* demo-pic-make.test:                    Test descriptions.   (line  66)\n* demo-pic.test:                         Test descriptions.   (line  66)\n* demo-relink.test:                      Test descriptions.   (line  99)\n* demo-shared-exec.test:                 Test descriptions.   (line  66)\n* demo-shared-inst.test:                 Test descriptions.   (line  66)\n* demo-shared-make.test:                 Test descriptions.   (line  66)\n* demo-shared-unst.test:                 Test descriptions.   (line  66)\n* demo-shared.test:                      Test descriptions.   (line  66)\n* demo-static-exec.test:                 Test descriptions.   (line  66)\n* demo-static-inst.test:                 Test descriptions.   (line  66)\n* demo-static-make.test:                 Test descriptions.   (line  66)\n* demo-static-unst.test:                 Test descriptions.   (line  66)\n* demo-static.test:                      Test descriptions.   (line  66)\n* demo-unst.test:                        Test descriptions.   (line  66)\n* depdemo-conf.test:                     Test descriptions.   (line 128)\n* depdemo-exec.test:                     Test descriptions.   (line 128)\n* depdemo-inst.test:                     Test descriptions.   (line 128)\n* depdemo-make.test:                     Test descriptions.   (line 128)\n* depdemo-nofast-exec.test:              Test descriptions.   (line 128)\n* depdemo-nofast-inst.test:              Test descriptions.   (line 128)\n* depdemo-nofast-make.test:              Test descriptions.   (line 128)\n* depdemo-nofast-unst.test:              Test descriptions.   (line 128)\n* depdemo-nofast.test:                   Test descriptions.   (line 128)\n* depdemo-relink.test:                   Test descriptions.   (line  99)\n* depdemo-shared-exec.test:              Test descriptions.   (line 128)\n* depdemo-shared-inst.test:              Test descriptions.   (line 128)\n* depdemo-shared-make.test:              Test descriptions.   (line 128)\n* depdemo-shared-unst.test:              Test descriptions.   (line 128)\n* depdemo-shared.test:                   Test descriptions.   (line 128)\n* depdemo-static-exec.test:              Test descriptions.   (line 128)\n* depdemo-static-inst.test:              Test descriptions.   (line 128)\n* depdemo-static-make.test:              Test descriptions.   (line 128)\n* depdemo-static-unst.test:              Test descriptions.   (line 128)\n* depdemo-static.test:                   Test descriptions.   (line 128)\n* depdemo-unst.test:                     Test descriptions.   (line 128)\n* dependencies between libraries:        Inter-library dependencies.\n                                                              (line   6)\n* dependency versioning:                 Versioning.          (line   6)\n* deplibs_check_method:                  Porting inter-library dependencies.\n                                                              (line   6)\n* design issues:                         Issues.              (line   6)\n* design of library interfaces:          Library tips.        (line   6)\n* design philosophy:                     Motivation.          (line   6)\n* developing libraries:                  Static-only libraries.\n                                                              (line   6)\n* dlclose <1>:                           Dlopened modules.    (line   6)\n* dlclose:                               Using libltdl.       (line   6)\n* dlerror:                               Using libltdl.       (line   6)\n* DLLTOOL:                               LT_INIT.             (line 270)\n* dlopen <1>:                            Dlopened modules.    (line   6)\n* dlopen:                                Using libltdl.       (line   6)\n* dlopen_self:                           libtool script contents.\n                                                              (line 146)\n* dlopen_self_static:                    libtool script contents.\n                                                              (line 150)\n* dlopen_support:                        libtool script contents.\n                                                              (line 142)\n* dlopening modules <1>:                 Dlopened modules.    (line   6)\n* dlopening modules:                     Using libltdl.       (line   6)\n* dlopening, pitfalls:                   Dlopen issues.       (line   6)\n* dlsym <1>:                             Dlopened modules.    (line   6)\n* dlsym:                                 Using libltdl.       (line   6)\n* double-compilation, avoiding:          Static-only libraries.\n                                                              (line   6)\n* dynamic dependencies:                  Versioning.          (line   6)\n* dynamic linking, applications <1>:     Using libltdl.       (line   6)\n* dynamic linking, applications:         Dlopened modules.    (line   6)\n* dynamic modules, names:                Finding the dlname.  (line   6)\n* ECHO:                                  libtool script contents.\n                                                              (line  38)\n* eliding shared libraries:              Static-only libraries.\n                                                              (line   6)\n* examples of using libtool:             Using libtool.       (line   6)\n* exclude_expsyms:                       libtool script contents.\n                                                              (line 154)\n* execute mode:                          Execute mode.        (line   6)\n* export_dynamic_flag_spec:              libtool script contents.\n                                                              (line 157)\n* export_symbols_cmds:                   libtool script contents.\n                                                              (line 161)\n* extract_expsyms_cmds:                  libtool script contents.\n                                                              (line 165)\n* f77demo-conf.test:                     Test descriptions.   (line 263)\n* f77demo-exec.test:                     Test descriptions.   (line 263)\n* f77demo-make.test:                     Test descriptions.   (line 263)\n* f77demo-shared-exec.test:              Test descriptions.   (line 263)\n* f77demo-shared-make.test:              Test descriptions.   (line 263)\n* f77demo-shared.test:                   Test descriptions.   (line 263)\n* f77demo-static-exec.test:              Test descriptions.   (line 263)\n* f77demo-static-make.test:              Test descriptions.   (line 263)\n* f77demo-static.test:                   Test descriptions.   (line 263)\n* failed tests:                          When tests fail.     (line   6)\n* fast_install:                          libtool script contents.\n                                                              (line 172)\n* fcdemo-conf.test:                      Test descriptions.   (line 281)\n* fcdemo-exec.test:                      Test descriptions.   (line 281)\n* fcdemo-make.test:                      Test descriptions.   (line 281)\n* fcdemo-shared-exec.test:               Test descriptions.   (line 281)\n* fcdemo-shared-make.test:               Test descriptions.   (line 281)\n* fcdemo-shared.test:                    Test descriptions.   (line 281)\n* fcdemo-static-exec.test:               Test descriptions.   (line 281)\n* fcdemo-static-make.test:               Test descriptions.   (line 281)\n* fcdemo-static.test:                    Test descriptions.   (line 281)\n* FDL, GNU Free Documentation License:   GNU Free Documentation License.\n                                                              (line   6)\n* file name conversion:                  File name conversion.\n                                                              (line   6)\n* File Name Conversion - Cygwin to Windows: Cygwin/Windows File Name Conversion.\n                                                              (line   6)\n* File Name Conversion - Failure:        File Name Conversion Failure.\n                                                              (line   6)\n* File Name Conversion - MinGW:          Native MinGW File Name Conversion.\n                                                              (line   6)\n* File Name Conversion - Unix to Windows: Unix/Windows File Name Conversion.\n                                                              (line   6)\n* file_magic:                            Porting inter-library dependencies.\n                                                              (line  18)\n* file_magic_cmd:                        Porting inter-library dependencies.\n                                                              (line  18)\n* file_magic_glob:                       libtool script contents.\n                                                              (line 194)\n* file_magic_test_file:                  Porting inter-library dependencies.\n                                                              (line  18)\n* finish mode:                           Finish mode.         (line   6)\n* finish_cmds:                           libtool script contents.\n                                                              (line 203)\n* finish_eval:                           libtool script contents.\n                                                              (line 207)\n* formal versioning:                     Libtool versioning.  (line   6)\n* func_convert_file_cygwin_to_w32:       Cygwin to MinGW Cross.\n                                                              (line  61)\n* global functions:                      Library tips.        (line  45)\n* global_symbol_pipe:                    libtool script contents.\n                                                              (line 210)\n* global_symbol_to_cdecl:                libtool script contents.\n                                                              (line 224)\n* hardcode_action:                       libtool script contents.\n                                                              (line 230)\n* hardcode_direct:                       libtool script contents.\n                                                              (line 235)\n* hardcode_direct_absolute:              libtool script contents.\n                                                              (line 241)\n* hardcode_into_libs:                    libtool script contents.\n                                                              (line 247)\n* hardcode_libdir_flag_spec:             libtool script contents.\n                                                              (line 253)\n* hardcode_libdir_separator:             libtool script contents.\n                                                              (line 259)\n* hardcode_minus_L:                      libtool script contents.\n                                                              (line 264)\n* hardcode_shlibpath_var:                libtool script contents.\n                                                              (line 269)\n* header files:                          Library tips.        (line  39)\n* host:                                  libtool script contents.\n                                                              (line 276)\n* host_alias:                            libtool script contents.\n                                                              (line 277)\n* host_os:                               libtool script contents.\n                                                              (line 278)\n* implementation of libtool:             libtool script contents.\n                                                              (line   6)\n* include files, portable:               C header files.      (line   6)\n* include_expsyms:                       libtool script contents.\n                                                              (line 282)\n* inferring tags:                        Tags.                (line   6)\n* inherit_rpath:                         libtool script contents.\n                                                              (line 286)\n* install:                               Installing libraries.\n                                                              (line  19)\n* install mode:                          Install mode.        (line   6)\n* install-sh:                            Distributing.        (line  16)\n* install_override_mode:                 libtool script contents.\n                                                              (line 291)\n* installation, finishing:               Installing libraries.\n                                                              (line  54)\n* inter-library dependencies:            Inter-library dependencies.\n                                                              (line   6)\n* inter-library dependency:              Porting inter-library dependencies.\n                                                              (line   6)\n* language names:                        Tags.                (line   6)\n* languages, non-C:                      Other languages.     (line   6)\n* LD <1>:                                LT_INIT.             (line 242)\n* LD:                                    libtool script contents.\n                                                              (line  43)\n* LDFLAGS:                               LT_INIT.             (line 247)\n* libext:                                libtool script contents.\n                                                              (line 299)\n* libltdl:                               Using libltdl.       (line   6)\n* libname_spec:                          libtool script contents.\n                                                              (line 302)\n* libraries, definition of:              Libtool paradigm.    (line  11)\n* libraries, finishing installation:     Installing libraries.\n                                                              (line  54)\n* libraries, stripping:                  Installing libraries.\n                                                              (line  44)\n* library interfaces:                    Interfaces.          (line   6)\n* library interfaces, design:            Library tips.        (line   6)\n* library object file:                   Creating object files.\n                                                              (line  28)\n* library_names_spec:                    libtool script contents.\n                                                              (line 307)\n* LIBS:                                  LT_INIT.             (line 253)\n* libtool:                               Invoking libtool.    (line   6)\n* libtool command options:               Invoking libtool.    (line   6)\n* libtool examples:                      Using libtool.       (line   6)\n* libtool implementation:                libtool script contents.\n                                                              (line   6)\n* libtool libraries:                     Linking libraries.   (line  24)\n* libtool library versions:              Libtool versioning.  (line   6)\n* libtool specifications:                Motivation.          (line  20)\n* libtoolize:                            Invoking libtoolize. (line   6)\n* libtoolize command options:            Invoking libtoolize. (line   6)\n* LIBTOOLIZE_OPTIONS:                    Invoking libtoolize. (line 120)\n* link mode:                             Link mode.           (line   6)\n* link-2.test:                           Test descriptions.   (line 198)\n* link.test:                             Test descriptions.   (line 194)\n* link_all_deplibs:                      libtool script contents.\n                                                              (line 312)\n* link_static_flag:                      libtool script contents.\n                                                              (line 317)\n* linking against installed libraries:   Linking executables. (line   6)\n* linking against uninstalled libraries: Linking executables. (line  25)\n* linking with installed libtool libraries: Linking executables.\n                                                              (line  50)\n* linking, dlopen:                       Linking with dlopened modules.\n                                                              (line   6)\n* linking, dlpreopen:                    Linking with dlopened modules.\n                                                              (line   6)\n* linking, partial:                      Link mode.           (line 207)\n* LN_S:                                  LT_INIT.             (line 265)\n* lock_old_archive_extraction:           libtool script contents.\n                                                              (line 114)\n* LT_CMD_MAX_LEN:                        Autoconf macros.     (line  15)\n* LT_CONFIG_LTDL_DIR:                    Distributing libltdl.\n                                                              (line  32)\n* lt_cv_to_host_file_cmd:                Cygwin to MinGW Cross.\n                                                              (line  61)\n* lt_cv_to_tool_file_cmd:                Cygwin to MinGW Cross.\n                                                              (line  61)\n* LT_CYGPATH:                            LT_CYGPATH.          (line   6)\n* LT_DIRSEP_CHAR:                        Libltdl interface.   (line  40)\n* lt_dladderror:                         Module loaders for libltdl.\n                                                              (line 191)\n* lt_dladdsearchdir:                     Libltdl interface.   (line 244)\n* lt_dladvise:                           Libltdl interface.   (line  50)\n* lt_dladvise_destroy:                   Libltdl interface.   (line 147)\n* lt_dladvise_ext:                       Libltdl interface.   (line 154)\n* lt_dladvise_global:                    Libltdl interface.   (line 179)\n* lt_dladvise_init:                      Libltdl interface.   (line 137)\n* lt_dladvise_local:                     Libltdl interface.   (line 196)\n* lt_dladvise_preload:                   Libltdl interface.   (line 222)\n* lt_dladvise_resident:                  Libltdl interface.   (line 213)\n* lt_dlcaller_get_data:                  User defined module data.\n                                                              (line 154)\n* lt_dlcaller_set_data:                  User defined module data.\n                                                              (line 128)\n* lt_dlclose:                            Libltdl interface.   (line 228)\n* lt_dlerror:                            Libltdl interface.   (line 238)\n* lt_dlexit:                             Libltdl interface.   (line  66)\n* lt_dlforeachfile:                      Libltdl interface.   (line 264)\n* lt_dlgetinfo:                          User defined module data.\n                                                              (line  26)\n* lt_dlgetsearchpath:                    Libltdl interface.   (line 260)\n* lt_dlhandle:                           Libltdl interface.   (line  46)\n* lt_dlhandle_fetch:                     User defined module data.\n                                                              (line 112)\n* lt_dlhandle_interface:                 User defined module data.\n                                                              (line  40)\n* lt_dlhandle_iterate:                   User defined module data.\n                                                              (line  97)\n* lt_dlhandle_map:                       User defined module data.\n                                                              (line  86)\n* lt_dlinfo:                             User defined module data.\n                                                              (line  12)\n* lt_dlinit:                             Libltdl interface.   (line  61)\n* lt_dlinsertsearchdir:                  Libltdl interface.   (line 249)\n* lt_dlinterface_free:                   User defined module data.\n                                                              (line  82)\n* lt_dlinterface_id:                     User defined module data.\n                                                              (line  35)\n* lt_dlinterface_register:               User defined module data.\n                                                              (line  74)\n* lt_dlisresident:                       Libltdl interface.   (line 292)\n* lt_dlloader:                           Module loaders for libltdl.\n                                                              (line  45)\n* lt_dlloader_add:                       Module loaders for libltdl.\n                                                              (line 132)\n* lt_dlloader_data:                      Module loaders for libltdl.\n                                                              (line 182)\n* lt_dlloader_exit:                      Module loaders for libltdl.\n                                                              (line  86)\n* lt_dlloader_find:                      Module loaders for libltdl.\n                                                              (line 164)\n* lt_dlloader_name:                      Module loaders for libltdl.\n                                                              (line 176)\n* lt_dlloader_next:                      Module loaders for libltdl.\n                                                              (line 155)\n* lt_dlloader_remove:                    Module loaders for libltdl.\n                                                              (line 145)\n* lt_dlmakeresident:                     Libltdl interface.   (line 282)\n* lt_dlopen:                             Libltdl interface.   (line  72)\n* lt_dlopenadvise:                       Libltdl interface.   (line 127)\n* lt_dlopenext:                          Libltdl interface.   (line 110)\n* lt_dlpreload:                          Dlpreopening.        (line  69)\n* lt_dlpreload_callback_func:            Dlpreopening.        (line  97)\n* lt_dlpreload_default:                  Dlpreopening.        (line  75)\n* lt_dlpreload_open:                     Dlpreopening.        (line 103)\n* lt_dlseterror:                         Module loaders for libltdl.\n                                                              (line 203)\n* lt_dlsetsearchpath:                    Libltdl interface.   (line 255)\n* lt_dlsym:                              Libltdl interface.   (line 233)\n* lt_dlsymlist <1>:                      Dlpreopening.        (line  42)\n* lt_dlsymlist:                          Libltdl interface.   (line  55)\n* lt_find_sym:                           Module loaders for libltdl.\n                                                              (line  79)\n* LT_FUNC_DLSYM_USCORE:                  Autoconf macros.     (line  24)\n* LT_INIT:                               LT_INIT.             (line  21)\n* LT_LANG:                               LT_INIT.             (line 155)\n* LT_LIB_DLLOAD:                         Autoconf macros.     (line  35)\n* LT_LIB_M:                              Autoconf macros.     (line  31)\n* lt_module:                             Module loaders for libltdl.\n                                                              (line  41)\n* lt_module_close:                       Module loaders for libltdl.\n                                                              (line  72)\n* lt_module_open:                        Module loaders for libltdl.\n                                                              (line  61)\n* LT_OUTPUT:                             LT_INIT.             (line 309)\n* LT_PATH_LD:                            Autoconf macros.     (line  51)\n* LT_PATH_NM:                            Autoconf macros.     (line  57)\n* LT_PATHSEP_CHAR:                       Libltdl interface.   (line  36)\n* lt_preloaded_symbols:                  Dlpreopening.        (line  47)\n* LT_PREREQ:                             LT_INIT.             (line  13)\n* LT_SUPPORTED_TAG:                      Trace interface.     (line  13)\n* LT_SYS_DLOPEN_DEPLIBS:                 Autoconf macros.     (line  70)\n* LT_SYS_DLOPEN_SELF:                    Autoconf macros.     (line  64)\n* LT_SYS_DLSEARCH_PATH:                  Autoconf macros.     (line  75)\n* LT_SYS_MODULE_EXT:                     Autoconf macros.     (line  79)\n* LT_SYS_MODULE_PATH:                    Autoconf macros.     (line  85)\n* LT_SYS_SYMBOL_USCORE:                  Autoconf macros.     (line  90)\n* lt_user_data:                          Module loaders for libltdl.\n                                                              (line  48)\n* lt_user_dlloader:                      Module loaders for libltdl.\n                                                              (line  53)\n* LT_WITH_LTDL:                          Distributing libltdl.\n                                                              (line  41)\n* LTCC:                                  libtool script contents.\n                                                              (line  47)\n* LTCFLAGS:                              libtool script contents.\n                                                              (line  48)\n* LTDL_CONVENIENCE:                      Distributing libltdl.\n                                                              (line 301)\n* LTDL_INIT:                             Distributing libltdl.\n                                                              (line  40)\n* LTDL_INSTALLABLE:                      Distributing libltdl.\n                                                              (line 296)\n* LTDL_SET_PRELOADED_SYMBOLS:            Dlpreopening.        (line  85)\n* LTLIBOBJS:                             Autoconf and LTLIBOBJS.\n                                                              (line   8)\n* LTLIBRARIES:                           Using Automake.      (line   6)\n* ltmain.sh:                             Distributing.        (line  19)\n* macro_revision:                        libtool script contents.\n                                                              (line 322)\n* macro_version:                         libtool script contents.\n                                                              (line 321)\n* Makefile:                              Makefile rules.      (line   6)\n* Makefile.am:                           Makefile rules.      (line   6)\n* Makefile.in:                           Makefile rules.      (line   6)\n* MANIFEST_TOOL:                         LT_INIT.             (line 282)\n* max_cmd_len:                           libtool script contents.\n                                                              (line 327)\n* mdemo-conf.test:                       Test descriptions.   (line 161)\n* mdemo-dryrun.test:                     Test descriptions.   (line 180)\n* mdemo-exec.test:                       Test descriptions.   (line 161)\n* mdemo-inst.test:                       Test descriptions.   (line 161)\n* mdemo-make.test:                       Test descriptions.   (line 161)\n* mdemo-shared-exec.test:                Test descriptions.   (line 161)\n* mdemo-shared-inst.test:                Test descriptions.   (line 161)\n* mdemo-shared-make.test:                Test descriptions.   (line 161)\n* mdemo-shared-unst.test:                Test descriptions.   (line 161)\n* mdemo-shared.test:                     Test descriptions.   (line 161)\n* mdemo-static-exec.test:                Test descriptions.   (line 161)\n* mdemo-static-inst.test:                Test descriptions.   (line 161)\n* mdemo-static-make.test:                Test descriptions.   (line 161)\n* mdemo-static-unst.test:                Test descriptions.   (line 161)\n* mdemo-static.test:                     Test descriptions.   (line 161)\n* mdemo-unst.test:                       Test descriptions.   (line 161)\n* mdemo2-conf.test:                      Test descriptions.   (line 185)\n* mdemo2-exec.test:                      Test descriptions.   (line 185)\n* mdemo2-make.test:                      Test descriptions.   (line 185)\n* mode, clean:                           Clean mode.          (line   6)\n* mode, compile:                         Compile mode.        (line   6)\n* mode, execute:                         Execute mode.        (line   6)\n* mode, finish:                          Finish mode.         (line   6)\n* mode, install:                         Install mode.        (line   6)\n* mode, link:                            Link mode.           (line   6)\n* mode, uninstall:                       Uninstall mode.      (line   6)\n* modules, dynamic <1>:                  Dlopened modules.    (line   6)\n* modules, dynamic:                      Using libltdl.       (line   6)\n* motivation for writing libtool:        Motivation.          (line   6)\n* MSYS:                                  Native MinGW File Name Conversion.\n                                                              (line   6)\n* names of dynamic modules:              Finding the dlname.  (line   6)\n* need_lib_prefix:                       libtool script contents.\n                                                              (line 331)\n* need_locks:                            libtool script contents.\n                                                              (line 344)\n* need_version:                          libtool script contents.\n                                                              (line 338)\n* NM <1>:                                LT_INIT.             (line 259)\n* NM:                                    libtool script contents.\n                                                              (line  52)\n* nm_file_list_spec:                     libtool script contents.\n                                                              (line 348)\n* no_builtin_flag:                       libtool script contents.\n                                                              (line 351)\n* no_undefined_flag:                     libtool script contents.\n                                                              (line 355)\n* nomode.test:                           Test descriptions.   (line 202)\n* none:                                  Porting inter-library dependencies.\n                                                              (line  38)\n* objdir:                                libtool script contents.\n                                                              (line 360)\n* OBJDUMP:                               LT_INIT.             (line 274)\n* object files, compiling:               Creating object files.\n                                                              (line   6)\n* object files, library:                 Creating object files.\n                                                              (line  28)\n* objectlist.test:                       Test descriptions.   (line 205)\n* objext:                                libtool script contents.\n                                                              (line 363)\n* old_archive_cmds:                      libtool script contents.\n                                                              (line  90)\n* old_archive_from_expsyms_cmds:         libtool script contents.\n                                                              (line 103)\n* old_archive_from_new_cmds:             libtool script contents.\n                                                              (line  97)\n* old_postinstall_cmds:                  libtool script contents.\n                                                              (line 370)\n* old_postuninstall_cmds:                libtool script contents.\n                                                              (line 375)\n* old_striplib:                          libtool script contents.\n                                                              (line 415)\n* opaque data types:                     Library tips.        (line  28)\n* options, libtool command:              Invoking libtool.    (line   6)\n* options, libtoolize command:           Invoking libtoolize. (line   6)\n* other implementations, flaws in:       Postmortem.          (line   6)\n* partial linking:                       Link mode.           (line 207)\n* pass_all:                              Porting inter-library dependencies.\n                                                              (line  32)\n* path conversion:                       File name conversion.\n                                                              (line   6)\n* Path Conversion - Cygwin to Windows:   Cygwin/Windows File Name Conversion.\n                                                              (line   6)\n* Path Conversion - Failure:             File Name Conversion Failure.\n                                                              (line   6)\n* Path Conversion - MinGW:               Native MinGW File Name Conversion.\n                                                              (line   6)\n* Path Conversion - Unix to Windows:     Unix/Windows File Name Conversion.\n                                                              (line   6)\n* pdemo-conf.test:                       Test descriptions.   (line 211)\n* pdemo-exec.test:                       Test descriptions.   (line 211)\n* pdemo-inst.test:                       Test descriptions.   (line 211)\n* pdemo-make.test:                       Test descriptions.   (line 211)\n* PIC (position-independent code):       Creating object files.\n                                                              (line  23)\n* pic_flag:                              libtool script contents.\n                                                              (line 366)\n* pitfalls using C++:                    C++ libraries.       (line   6)\n* pitfalls with dlopen:                  Dlopen issues.       (line   6)\n* portable C headers:                    C header files.      (line   6)\n* position-independent code:             Creating object files.\n                                                              (line  23)\n* postinstall_cmds:                      libtool script contents.\n                                                              (line 369)\n* postinstallation:                      Installing libraries.\n                                                              (line  54)\n* postlink_cmds:                         libtool script contents.\n                                                              (line 379)\n* postuninstall_cmds:                    libtool script contents.\n                                                              (line 374)\n* problem reports:                       Reporting bugs.      (line   6)\n* problems, blaming somebody else for:   Troubleshooting.     (line   6)\n* problems, solving:                     Troubleshooting.     (line   6)\n* program wrapper executables:           Wrapper executables. (line   6)\n* program wrapper scripts:               Linking executables. (line  71)\n* quote.test:                            Test descriptions.   (line 220)\n* ranlib:                                Linking libraries.   (line  12)\n* RANLIB <1>:                            LT_INIT.             (line 262)\n* RANLIB:                                libtool script contents.\n                                                              (line  73)\n* reload_cmds:                           libtool script contents.\n                                                              (line 388)\n* reload_flag:                           libtool script contents.\n                                                              (line 389)\n* renaming interface functions:          Library tips.        (line  21)\n* reporting bugs:                        Reporting bugs.      (line   6)\n* reusability of library systems:        Postmortem.          (line   6)\n* runpath_var:                           libtool script contents.\n                                                              (line 393)\n* saving time:                           Static-only libraries.\n                                                              (line   6)\n* security problems with buggy linkers:  Linking executables. (line  16)\n* sh.test:                               Test descriptions.   (line 223)\n* shared libraries, not using:           Static-only libraries.\n                                                              (line   6)\n* shared library versions:               Versioning.          (line   6)\n* shl_load <1>:                          Dlopened modules.    (line   6)\n* shl_load:                              Using libltdl.       (line   6)\n* shlibpath_overrides_runpath:           libtool script contents.\n                                                              (line 397)\n* shlibpath_var:                         libtool script contents.\n                                                              (line 406)\n* solving problems:                      Troubleshooting.     (line   6)\n* soname_spec:                           libtool script contents.\n                                                              (line 410)\n* specifications for libtool:            Motivation.          (line  20)\n* standalone binaries:                   Static libraries.    (line  64)\n* static linking:                        Static libraries.    (line   6)\n* strip:                                 Installing libraries.\n                                                              (line   6)\n* striplib:                              libtool script contents.\n                                                              (line 414)\n* stripping libraries:                   Installing libraries.\n                                                              (line  44)\n* su:                                    Installing libraries.\n                                                              (line   9)\n* suffix.test:                           Test descriptions.   (line 227)\n* sys_lib_dlsearch_path_spec:            libtool script contents.\n                                                              (line 421)\n* sys_lib_search_path_spec:              libtool script contents.\n                                                              (line 426)\n* tag names:                             Tags.                (line   6)\n* tagdemo-conf.test:                     Test descriptions.   (line 245)\n* tagdemo-exec.test:                     Test descriptions.   (line 245)\n* tagdemo-make.test:                     Test descriptions.   (line 245)\n* tagdemo-shared-exec.test:              Test descriptions.   (line 245)\n* tagdemo-shared-make.test:              Test descriptions.   (line 245)\n* tagdemo-shared.test:                   Test descriptions.   (line 245)\n* tagdemo-static-exec.test:              Test descriptions.   (line 245)\n* tagdemo-static-make.test:              Test descriptions.   (line 245)\n* tagdemo-static.test:                   Test descriptions.   (line 245)\n* tagdemo-undef-exec.test:               Test descriptions.   (line 245)\n* tagdemo-undef-make.test:               Test descriptions.   (line 245)\n* tagdemo-undef.test:                    Test descriptions.   (line 245)\n* test suite:                            Libtool test suite.  (line   6)\n* test_compile:                          Porting inter-library dependencies.\n                                                              (line  26)\n* tests, failed:                         When tests fail.     (line   6)\n* thread_safe_flag_spec:                 libtool script contents.\n                                                              (line 435)\n* time, saving:                          Static-only libraries.\n                                                              (line   6)\n* to_host_file_cmd:                      libtool script contents.\n                                                              (line 439)\n* to_tool_file_cmd:                      libtool script contents.\n                                                              (line 450)\n* trace interface:                       Trace interface.     (line   6)\n* tricky design issues:                  Issues.              (line   6)\n* trouble with C++:                      C++ libraries.       (line   6)\n* trouble with dlopen:                   Dlopen issues.       (line   6)\n* troubleshooting:                       Troubleshooting.     (line   6)\n* undefined symbols, allowing:           Link mode.           (line  14)\n* uninstall mode:                        Uninstall mode.      (line   6)\n* unknown:                               Porting inter-library dependencies.\n                                                              (line  43)\n* unresolved symbols, allowing:          Link mode.           (line  14)\n* using shared libraries, not:           Static-only libraries.\n                                                              (line   6)\n* version_type:                          libtool script contents.\n                                                              (line 458)\n* versioning, formal:                    Libtool versioning.  (line   6)\n* want_nocaseglob:                       libtool script contents.\n                                                              (line 463)\n* whole_archive_flag_spec:               libtool script contents.\n                                                              (line 469)\n* Windows DLLs:                          Windows DLLs.        (line   6)\n* wl:                                    libtool script contents.\n                                                              (line 472)\n* wrapper executables for uninstalled programs: Wrapper executables.\n                                                              (line   6)\n* wrapper scripts for programs:          Linking executables. (line  71)\n\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/doc/libtool.texi": "\\input texinfo   @c -*-texinfo-*-\n@c %**start of header\n@setfilename libtool.info\n@settitle Libtool\n@c For double-sided printing, uncomment:\n@c @setchapternewpage odd\n@c %**end of header\n\n@include version.texi\n@set BUGADDR the Libtool bug reporting address @email{bug-libtool@@gnu.org}\n@set MAILLIST the Libtool mailing list @email{libtool@@gnu.org}\n@set objdir .libs\n\n@dircategory GNU programming tools\n@direntry\n* Libtool: (libtool).           Generic shared library support script.\n@end direntry\n\n@dircategory Individual utilities\n@direntry\n* libtool-invocation: (libtool)Invoking libtool.\n                                                Running the @code{libtool} script.\n* libtoolize: (libtool)Invoking libtoolize.     Adding libtool support.\n@end direntry\n\n@ifnottex\nThis file documents GNU Libtool @value{VERSION}\n\nCopyright (C) 1996-2011 Free Software Foundation, Inc.\n\nPermission is granted to copy, distribute and/or modify this document\nunder the terms of the GNU Free Documentation License, Version 1.3\nor any later version published by the Free Software Foundation;\nwith no Invariant Sections, with no Front-Cover Texts,\nand with no Back-Cover Texts.  A copy of the license is included in\nthe section entitled \"GNU Free Documentation License\".\n\n@ignore\nPermission is granted to process this file through TeX and print the\nresults, provided the printed document carries copying permission notice\nidentical to this one except for the removal of this paragraph\n\n@end ignore\n@end ifnottex\n\n@titlepage\n@title GNU Libtool\n@subtitle For version @value{VERSION}, @value{UPDATED}\n@author Gordon Matzigkeit\n@author Alexandre Oliva\n@author Thomas Tanner\n@author Gary V. Vaughan\n\n@page\n@vskip 0pt plus 1filll\nCopyright @copyright{} 1996-2011 Free Software Foundation, Inc.\n\nPermission is granted to copy, distribute and/or modify this document\nunder the terms of the GNU Free Documentation License, Version 1.3\nor any later version published by the Free Software Foundation;\nwith no Invariant Sections, with no Front-Cover Texts,\nand with no Back-Cover Texts.  A copy of the license is included in\nthe section entitled \"GNU Free Documentation License\".\n\n@end titlepage\n\n@c Put everything in one index (arbitrarily chosen to be the concept index).\n@syncodeindex vr cp\n@syncodeindex fn cp\n@syncodeindex tp cp\n@synindex pg cp\n\n@contents\n\n@ifnottex\n@node Top, Introduction, (dir), (dir)\n@comment  node-name,  next,  previous,  up\n@top Shared library support for GNU\n\nThis file documents GNU Libtool, a script that allows package developers\nto provide generic shared library support.  This edition documents\nversion @value{VERSION}.\n\n@xref{Reporting bugs}, for information on how to report problems with\nGNU Libtool.\n\n@menu\n* Introduction::                What the heck is libtool?\n* Libtool paradigm::            How libtool's view of libraries is different.\n* Using libtool::               Example of using libtool to build libraries.\n* Invoking libtool::            Running the @code{libtool} script.\n* Integrating libtool::         Using libtool in your own packages.\n* Other languages::             Using libtool without a C compiler.\n* Versioning::                  Using library interface versions.\n* Library tips::                Tips for library interface design.\n* Inter-library dependencies::  Libraries that depend on other libraries.\n* Dlopened modules::            @code{dlopen}ing libtool-created libraries.\n* Using libltdl::               Libtool's portable @code{dlopen} wrapper library.\n* Trace interface::             Libtool's trace interface.\n* FAQ::                         Frequently Asked Questions\n* Troubleshooting::             When libtool doesn't work as advertised.\n* Maintaining::                 Information used by the libtool maintainer.\n* GNU Free Documentation License::  License for this manual.\n* Combined Index::              Full index.\n\n@detailmenu\n --- The Detailed Node Listing ---\n\nIntroduction\n\n* Motivation::                  Why does GNU need a libtool?\n* Issues::                      The problems that need to be addressed.\n* Other implementations::       How other people have solved these issues.\n* Postmortem::                  Learning from past difficulties.\n\nUsing libtool\n\n* Creating object files::       Compiling object files for libraries.\n* Linking libraries::           Creating libraries from object files.\n* Linking executables::         Linking object files against libtool libraries.\n* Debugging executables::       Running GDB on libtool-generated programs.\n* Installing libraries::        Making libraries available to users.\n* Installing executables::      Making programs available to users.\n* Static libraries::            When shared libraries are not wanted.\n\nLinking executables\n\n* Wrapper executables::         Wrapper executables for some platforms.\n\nInvoking @command{libtool}\n\n* Compile mode::                Creating library object files.\n* Link mode::                   Generating executables and libraries.\n* Execute mode::                Debugging libtool-generated programs.\n* Install mode::                Making libraries and executables public.\n* Finish mode::                 Completing a library installation.\n* Uninstall mode::              Removing installed executables and libraries.\n* Clean mode::                  Removing uninstalled executables and libraries.\n\nIntegrating libtool with your package\n\n* Autoconf macros::             Autoconf macros exported by libtool.\n* Makefile rules::              Writing @file{Makefile} rules for libtool.\n* Using Automake::              Automatically supporting libtool.\n* Configuring::                 Configuring libtool for a host system.\n* Distributing::                What files to distribute with your package.\n* Static-only libraries::       Sometimes shared libraries are just a pain.\n\nConfiguring libtool\n\n* LT_INIT::                     Configuring @code{libtool} in @file{configure.ac}.\n* Configure notes::             Platform-specific notes for configuration.\n\nIncluding libtool in your package\n\n* Invoking libtoolize::         @code{libtoolize} command line options.\n* Autoconf and LTLIBOBJS::      Autoconf automates LTLIBOBJS generation.\n\nUsing libtool with other languages\n\n* C++ libraries::               Writing libraries for C++\n* Tags::                        Tags\n\nLibrary interface versions\n\n* Interfaces::                  What are library interfaces?\n* Libtool versioning::          Libtool's versioning system.\n* Updating version info::       Changing version information before releases.\n* Release numbers::             Breaking binary compatibility for aesthetics.\n\nTips for interface design\n\n* C header files::              How to write portable include files.\n\nDlopened modules\n\n* Building modules::            Creating dlopenable objects and libraries.\n* Dlpreopening::                Dlopening that works on static platforms.\n* Linking with dlopened modules::  Using dlopenable modules in libraries.\n* Finding the dlname::          Choosing the right file to @code{dlopen}.\n* Dlopen issues::               Unresolved problems that need your attention.\n\nUsing libltdl\n\n* Libltdl interface::           How to use libltdl in your programs.\n* Modules for libltdl::         Creating modules that can be @code{dlopen}ed.\n* Thread Safety in libltdl::    Registering callbacks for multi-thread safety.\n* User defined module data::    Associating data with loaded modules.\n* Module loaders for libltdl::  Creating user defined module loaders.\n* Distributing libltdl::        How to distribute libltdl with your package.\n\nFrequently Asked Questions about libtool\n\n* Stripped link flags::         Dropped flags when creating a library\n\nTroubleshooting\n\n* Libtool test suite::          Libtool's self-tests.\n* Reporting bugs::              How to report problems with libtool.\n\nThe libtool test suite\n\n* Test descriptions::           The contents of the old test suite.\n* When tests fail::             What to do when a test fails.\n\nMaintenance notes for libtool\n\n* New ports::                   How to port libtool to new systems.\n* Tested platforms::            When libtool was last tested.\n* Platform quirks::             Information about different library systems.\n* libtool script contents::     Configuration information that libtool uses.\n* Cheap tricks::                Making libtool maintainership easier.\n\nPorting libtool to new systems\n\n* Information sources::         Where to find relevant documentation\n* Porting inter-library dependencies::  Implementation details explained\n\nPlatform quirks\n\n* References::                  Finding more information.\n* Compilers::                   Creating object files from source files.\n* Reloadable objects::          Binding object files together.\n* Multiple dependencies::       Removing duplicate dependent libraries.\n* Archivers::                   Programs that create static archives.\n* Cross compiling::             Issues that arise when cross compiling.\n* File name conversion::        Converting file names between platforms.\n* Windows DLLs::                Windows header defines.\n\nFile name conversion\n\n* File Name Conversion Failure::  What happens when file name conversion fails\n* Native MinGW File Name Conversion::  MSYS file name conversion idiosyncrasies\n* Cygwin/Windows File Name Conversion::  Using @command{cygpath} to convert Cygwin file names\n* Unix/Windows File Name Conversion::  Using Wine to convert Unix paths\n* LT_CYGPATH::                  Invoking @command{cygpath} from other environments\n* Cygwin to MinGW Cross::       Other notes concerning MinGW cross\n\n@end detailmenu\n@end menu\n\n@end ifnottex\n\n@node Introduction\n@chapter Introduction\n\nIn the past, if you were a source code package developer and wanted to\ntake advantage of the power of shared libraries, you needed to write\ncustom support code for each platform on which your package ran.  You\nalso had to design a configuration interface so that the package\ninstaller could choose what sort of libraries were built.\n\nGNU Libtool simplifies your job by encapsulating both the\nplatform-specific dependencies, and the user interface, in a single\nscript.  GNU Libtool is designed so that the complete functionality of\neach host type is available via a generic interface, but nasty quirks\nare hidden from the programmer.\n\nGNU Libtool's consistent interface is reassuring@dots{} users don't need\nto read obscure documentation in order to have their favorite source\npackage build shared libraries.  They just run your package\n@code{configure} script (or equivalent), and libtool does all the dirty\nwork.\n\nThere are several examples throughout this document.  All assume the\nsame environment: we want to build a library, @file{libhello}, in a\ngeneric way.\n\n@file{libhello} could be a shared library, a static library, or\nboth@dots{} whatever is available on the host system, as long as libtool\nhas been ported to it.\n\nThis chapter explains the original design philosophy of libtool.  Feel\nfree to skip to the next chapter, unless you are interested in history,\nor want to write code to extend libtool in a consistent way.\n\n@menu\n* Motivation::                  Why does GNU need a libtool?\n* Issues::                      The problems that need to be addressed.\n* Other implementations::       How other people have solved these issues.\n* Postmortem::                  Learning from past difficulties.\n@end menu\n\n@node Motivation\n@section Motivation for writing libtool\n\n@cindex motivation for writing libtool\n@cindex design philosophy\nSince early 1995, several different GNU developers have recognized the\nimportance of having shared library support for their packages.  The\nprimary motivation for such a change is to encourage modularity and\nreuse of code (both conceptually and physically) in GNU programs.\n\nSuch a demand means that the way libraries are built in GNU packages\nneeds to be general, to allow for any library type the package installer\nmight want.  The problem is compounded by the absence of a standard\nprocedure for creating shared libraries on different platforms.\n\nThe following sections outline the major issues facing shared library\nsupport in GNU, and how shared library support could be standardized\nwith libtool.\n\n@cindex specifications for libtool\n@cindex libtool specifications\nThe following specifications were used in developing and evaluating this\nsystem:\n\n@enumerate\n@item\nThe system must be as elegant as possible.\n\n@item\nThe system must be fully integrated with the GNU Autoconf and Automake\nutilities, so that it will be easy for GNU maintainers to use.  However,\nthe system must not require these tools, so that it can be used by\nnon-GNU packages.\n\n@item\nPortability to other (non-GNU) architectures and tools is desirable.\n@end enumerate\n\n@node Issues\n@section Implementation issues\n\n@cindex tricky design issues\n@cindex design issues\nThe following issues need to be addressed in any reusable shared library\nsystem, specifically libtool:\n\n@enumerate\n@item\nThe package installer should be able to control what sort of libraries\nare built.\n\n@item\nIt can be tricky to run dynamically linked programs whose libraries have\nnot yet been installed.  @code{LD_LIBRARY_PATH} must be set properly (if\nit is supported), or programs fail to run.\n\n@item\nThe system must operate consistently even on hosts that don't support\nshared libraries.\n\n@item\nThe commands required to build shared libraries may differ wildly from\nhost to host.  These need to be determined at configure time in\na consistent way.\n\n@item\nIt is not always obvious with what prefix or suffix a shared library\nshould be installed.  This makes it difficult for @file{Makefile} rules,\nsince they generally assume that file names are the same from host to\nhost.\n\n@item\nThe system needs a simple library version number abstraction, so that\nshared libraries can be upgraded in place.  The programmer should be\ninformed how to design the interfaces to the library to maximize binary\ncompatibility.\n\n@item\nThe install @file{Makefile} target should warn the package installer to set\nthe proper environment variables (@code{LD_LIBRARY_PATH} or equivalent),\nor run @command{ldconfig}.\n@end enumerate\n\n@node Other implementations\n@section Other implementations\n\nEven before libtool was developed, many free software packages built and\ninstalled their own shared libraries.  At first, these packages were\nexamined to avoid reinventing existing features.\n\nNow it is clear that none of these packages have documented the details\nof shared library systems that libtool requires.  So, other packages\nhave been more or less abandoned as influences.\n\n@node Postmortem\n@section A postmortem analysis of other implementations\n\n@cindex other implementations, flaws in\n@cindex reusability of library systems\nIn all fairness, each of the implementations that were examined do the\njob that they were intended to do, for a number of different host\nsystems.  However, none of these solutions seem to function well as a\ngeneralized, reusable component.\n\n@cindex complexity of library systems\nMost were too complex to use (much less modify) without understanding\nexactly what the implementation does, and they were generally not\ndocumented.\n\nThe main difficulty is that different vendors have different views of\nwhat libraries are, and none of the packages that were examined seemed\nto be confident enough to settle on a single paradigm that just\n@emph{works}.\n\nIdeally, libtool would be a standard that would be implemented as series\nof extensions and modifications to existing library systems to make them\nwork consistently.  However, it is not an easy task to convince\noperating system developers to mend their evil ways, and people want to\nbuild shared libraries right now, even on buggy, broken, confused\noperating systems.\n\nFor this reason, libtool was designed as an independent shell script.\nIt isolates the problems and inconsistencies in library building that\nplague @file{Makefile} writers by wrapping the compiler suite on\ndifferent platforms with a consistent, powerful interface.\n\nWith luck, libtool will be useful to and used by the GNU community, and\nthat the lessons that were learned in writing it will be taken up by\ndesigners of future library systems.\n\n@node Libtool paradigm\n@chapter The libtool paradigm\n\nAt first, libtool was designed to support an arbitrary number of library\nobject types.  After libtool was ported to more platforms, a new\nparadigm gradually developed for describing the relationship between\nlibraries and programs.\n\n@cindex definition of libraries\n@cindex libraries, definition of\nIn summary, ``libraries are programs with multiple entry points, and\nmore formally defined interfaces.''\n\nVersion 0.7 of libtool was a complete redesign and rewrite of libtool to\nreflect this new paradigm.  So far, it has proved to be successful:\nlibtool is simpler and more useful than before.\n\nThe best way to introduce the libtool paradigm is to contrast it with\nthe paradigm of existing library systems, with examples from each.  It\nis a new way of thinking, so it may take a little time to absorb, but\nwhen you understand it, the world becomes simpler.\n\n@node Using libtool\n@chapter Using libtool\n\n@cindex examples of using libtool\n@cindex libtool examples\nIt makes little sense to talk about using libtool in your own packages\nuntil you have seen how it makes your life simpler.  The examples in\nthis chapter introduce the main features of libtool by comparing the\nstandard library building procedure to libtool's operation on two\ndifferent platforms:\n\n@table @samp\n@item a23\nAn Ultrix 4.2 platform with only static libraries.\n\n@item burger\nA NetBSD/i386 1.2 platform with shared libraries.\n@end table\n\nYou can follow these examples on your own platform, using the\npreconfigured libtool script that was installed with libtool\n(@pxref{Configuring}).\n\nSource files for the following examples are taken from the @file{demo}\nsubdirectory of the libtool distribution.  Assume that we are building a\nlibrary, @file{libhello}, out of the files @file{foo.c} and\n@file{hello.c}.\n\nNote that the @file{foo.c} source file uses the @code{cos} math library\nfunction, which is usually found in the standalone math library, and not\nthe C library (@pxref{Trig Functions, , Trigonometric Functions, libc,\nThe GNU C Library Reference Manual}).  So, we need to add @option{-lm} to\nthe end of the link line whenever we link @file{foo.lo} into an\nexecutable or a library (@pxref{Inter-library dependencies}).\n\nThe same rule applies whenever you use functions that don't appear in\nthe standard C library@dots{} you need to add the appropriate\n@option{-l@var{name}} flag to the end of the link line when you link\nagainst those objects.\n\nAfter we have built that library, we want to create a program by linking\n@file{main.o} against @file{libhello}.\n\n@menu\n* Creating object files::       Compiling object files for libraries.\n* Linking libraries::           Creating libraries from object files.\n* Linking executables::         Linking object files against libtool libraries.\n* Debugging executables::       Running GDB on libtool-generated programs.\n* Installing libraries::        Making libraries available to users.\n* Installing executables::      Making programs available to users.\n* Static libraries::            When shared libraries are not wanted.\n@end menu\n\n@node Creating object files\n@section Creating object files\n\n@cindex compiling object files\n@cindex object files, compiling\nTo create an object file from a source file, the compiler is invoked\nwith the @option{-c} flag (and any other desired flags):\n\n@example\nburger$ @kbd{gcc -g -O -c main.c}\nburger$\n@end example\n\nThe above compiler command produces an object file, usually named\n@file{main.o}, from the source file @file{main.c}.\n\nFor most library systems, creating object files that become part of a\nstatic library is as simple as creating object files that are linked to\nform an executable:\n\n@example\nburger$ @kbd{gcc -g -O -c foo.c}\nburger$ @kbd{gcc -g -O -c hello.c}\nburger$\n@end example\n\n@cindex position-independent code\n@cindex PIC (position-independent code)\nShared libraries, however, may only be built from\n@dfn{position-independent code} (PIC).  So, special flags must be passed\nto the compiler to tell it to generate PIC rather than the standard\nposition-dependent code.\n\n@cindex library object file\n@cindex @file{.lo} files\n@cindex object files, library\nSince this is a library implementation detail, libtool hides the\ncomplexity of PIC compiler flags and uses separate library object files\n(the PIC one lives in the @file{@value{objdir}} subdirectory and the\nstatic one lives in the current directory).  On systems without shared\nlibraries, the PIC library object files are not created, whereas on\nsystems where all code is PIC, such as AIX, the static ones are not\ncreated.\n\nTo create library object files for @file{foo.c} and @file{hello.c},\nsimply invoke libtool with the standard compilation command as\narguments (@pxref{Compile mode}):\n\n@example\na23$ @kbd{libtool --mode=compile gcc -g -O -c foo.c}\ngcc -g -O -c foo.c -o foo.o\na23$ @kbd{libtool --mode=compile gcc -g -O -c hello.c}\ngcc -g -O -c hello.c -o hello.o\na23$\n@end example\n\nNote that libtool silently creates an additional control file on each\n@samp{compile} invocation.  The @file{.lo} file is the libtool object,\nwhich Libtool uses to determine what object file may be built into a\nshared library.  On @samp{a23}, only static libraries are supported so\nthe library objects look like this:\n\n@example\n# foo.lo - a libtool object file\n# Generated by ltmain.sh (GNU libtool) @value{VERSION}\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=none\n\n# Name of the non-PIC object.\nnon_pic_object='foo.o'\n@end example\n\nOn shared library systems, libtool automatically generates an\nadditional PIC object by inserting the appropriate PIC generation\nflags into the compilation command:\n\n@example\nburger$ @kbd{libtool --mode=compile gcc -g -O -c foo.c}\nmkdir @value{objdir}\ngcc -g -O -c foo.c  -fPIC -DPIC -o @value{objdir}/foo.o\ngcc -g -O -c foo.c -o foo.o >/dev/null 2>&1\nburger$\n@end example\n\nNote that Libtool automatically created @file{@value{objdir}} directory\nupon its first execution, where PIC library object files will be stored.\n\nSince @samp{burger} supports shared libraries, and requires PIC\nobjects to build them, Libtool has compiled a PIC object this time,\nand made a note of it in the libtool object:\n\n@example\n# foo.lo - a libtool object file\n# Generated by ltmain.sh (GNU libtool) @value{VERSION}\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object='@value{objdir}/foo.o'\n\n# Name of the non-PIC object.\nnon_pic_object='foo.o'\n@end example\n\n@cindex @option{-no-suppress}, libtool compile mode option\nNotice that the second run of GCC has its output discarded.  This is\ndone so that compiler warnings aren't annoyingly duplicated.  If you\nneed to see both sets of warnings (you might have conditional code\ninside @samp{#ifdef PIC} for example), you can turn off suppression with\nthe @option{-no-suppress} option to libtool's compile mode:\n\n@example\nburger$ @kbd{libtool --mode=compile gcc -no-suppress -g -O -c hello.c}\ngcc -g -O -c hello.c  -fPIC -DPIC -o @value{objdir}/hello.o\ngcc -g -O -c hello.c -o hello.o\nburger$\n@end example\n\n\n@node Linking libraries\n@section Linking libraries\n\n@pindex ar\nWithout libtool, the programmer would invoke the @command{ar} command to\ncreate a static library:\n\n@example\nburger$ @kbd{ar cru libhello.a hello.o foo.o}\nburger$\n@end example\n\n@pindex ranlib\nBut of course, that would be too simple, so many systems require that\nyou run the @code{ranlib} command on the resulting library (to give it\nbetter karma, or something):\n\n@example\nburger$ @kbd{ranlib libhello.a}\nburger$\n@end example\n\nIt seems more natural to use the C compiler for this task, given\nlibtool's ``libraries are programs'' approach.  So, on platforms without\nshared libraries, libtool simply acts as a wrapper for the system\n@command{ar} (and possibly @code{ranlib}) commands.\n\n@cindex libtool libraries\n@cindex @file{.la} files\nAgain, the libtool control file name (@file{.la} suffix) differs from\nthe standard library name (@file{.a} suffix).  The arguments to\nlibtool are the same ones you would use to produce an executable named\n@file{libhello.la} with your compiler (@pxref{Link mode}):\n\n@example\na23$ @kbd{libtool --mode=link gcc -g -O -o libhello.la foo.o hello.o}\n*** Warning: Linking the shared library libhello.la against the\n*** non-libtool objects foo.o hello.o is not portable!\nar cru .libs/libhello.a\nranlib .libs/libhello.a\ncreating libhello.la\n(cd .libs && rm -f libhello.la && ln -s ../libhello.la libhello.la)\na23$\n@end example\n\nAha!  Libtool caught a common error@dots{} trying to build a library\nfrom standard objects instead of special @file{.lo} object files.  This\ndoesn't matter so much for static libraries, but on shared library\nsystems, it is of great importance.  (Note that you may replace\n@file{libhello.la} with @file{libhello.a} in which case libtool won't\nissue the warning any more.  But although this method works, this is\nnot intended to be used because it makes you lose the benefits of\nusing Libtool.)\n\nSo, let's try again, this time with the library object files.  Remember\nalso that we need to add @option{-lm} to the link command line because\n@file{foo.c} uses the @code{cos} math library function (@pxref{Using\nlibtool}).\n\nAnother complication in building shared libraries is that we need to\nspecify the path to the directory in which they (eventually) will be\ninstalled (in this case, @file{/usr/local/lib})@footnote{If you don't\nspecify an @code{rpath}, then libtool builds a libtool convenience\narchive, not a shared library (@pxref{Static libraries}).}:\n\n@example\na23$ @kbd{libtool --mode=link gcc -g -O -o libhello.la foo.lo hello.lo \\\n                -rpath /usr/local/lib -lm}\nar cru @value{objdir}/libhello.a foo.o hello.o\nranlib @value{objdir}/libhello.a\ncreating libhello.la\n(cd @value{objdir} && rm -f libhello.la && ln -s ../libhello.la libhello.la)\na23$\n@end example\n\nNow, let's try the same trick on the shared library platform:\n\n@example\nburger$ @kbd{libtool --mode=link gcc -g -O -o libhello.la foo.lo hello.lo \\\n                -rpath /usr/local/lib -lm}\nrm -fr  @value{objdir}/libhello.a @value{objdir}/libhello.la\nld -Bshareable -o @value{objdir}/libhello.so.0.0 @value{objdir}/foo.o @value{objdir}/hello.o -lm\nar cru @value{objdir}/libhello.a foo.o hello.o\nranlib @value{objdir}/libhello.a\ncreating libhello.la\n(cd @value{objdir} && rm -f libhello.la && ln -s ../libhello.la libhello.la)\nburger$\n@end example\n\nNow that's significantly cooler@dots{} Libtool just ran an obscure\n@command{ld} command to create a shared library, as well as the static\nlibrary.\n\n@cindex @file{@value{objdir}} subdirectory\nNote how libtool creates extra files in the @file{@value{objdir}}\nsubdirectory, rather than the current directory.  This feature is to\nmake it easier to clean up the build directory, and to help ensure that\nother programs fail horribly if you accidentally forget to use libtool\nwhen you should.\n\nAgain, you may want to have a look at the @file{.la} file in order\nto see what Libtool stores in it.  In particular, you will see that\nLibtool uses this file to remember the destination directory for the\nlibrary (the argument to @option{-rpath}) as well as the dependency\non the math library (@samp{-lm}).\n\n@node Linking executables\n@section Linking executables\n\n@cindex linking against installed libraries\nIf you choose at this point to @dfn{install} the library (put it in a\npermanent location) before linking executables against it, then you\ndon't need to use libtool to do the linking.  Simply use the appropriate\n@option{-L} and @option{-l} flags to specify the library's location.\n\n@cindex buggy system linkers\nSome system linkers insist on encoding the full directory name of each\nshared library in the resulting executable.  Libtool has to work around\nthis misfeature by special magic to ensure that only permanent directory\nnames are put into installed executables.\n\n@cindex security problems with buggy linkers\n@cindex bugs, subtle ones caused by buggy linkers\nThe importance of this bug must not be overlooked: it won't cause\nprograms to crash in obvious ways.  It creates a security hole,\nand possibly even worse, if you are modifying the library source code\nafter you have installed the package, you will change the behaviour of\nthe installed programs!\n\nSo, if you want to link programs against the library before you install\nit, you must use libtool to do the linking.\n\n@cindex linking against uninstalled libraries\nHere's the old way of linking against an uninstalled library:\n\n@example\nburger$ @kbd{gcc -g -O -o hell.old main.o libhello.a -lm}\nburger$\n@end example\n\nLibtool's way is almost the same@footnote{However, you should avoid using\n@option{-L} or @option{-l} flags to link against an uninstalled libtool\nlibrary.  Just specify the relative path to the @file{.la} file, such as\n@file{../intl/libintl.la}.  This is a design decision to eliminate any\nambiguity when linking against uninstalled shared libraries.}\n(@pxref{Link mode}):\n\n@example\na23$ @kbd{libtool --mode=link gcc -g -O -o hell main.o libhello.la}\ngcc -g -O -o hell main.o  ./@value{objdir}/libhello.a -lm\na23$\n@end example\n\nThat looks too simple to be true.  All libtool did was transform\n@file{libhello.la} to @file{./@value{objdir}/libhello.a}, but remember\nthat @samp{a23} has no shared libraries.  Notice that Libtool also\nremembered that @file{libhello.la} depends on @option{-lm}, so even\nthough we didn't specify @option{-lm} on the libtool command\nline@footnote{\n@c\nAnd why should we? @file{main.o} doesn't directly depend on @option{-lm}\nafter all.\n@c\n} Libtool has added it to the @command{gcc} link line for us.\n\nOn @samp{burger} Libtool links against the uninstalled shared library:\n\n@example\nburger$ @kbd{libtool --mode=link gcc -g -O -o hell main.o libhello.la}\ngcc -g -O -o @value{objdir}/hell main.o -L./@value{objdir} -R/usr/local/lib -lhello -lm\ncreating hell\nburger$\n@end example\n\n@cindex linking with installed libtool libraries\nNow assume @file{libhello.la} had already been installed, and you want\nto link a new program with it.  You could figure out where it lives by\nyourself, then run:\n\n@example\nburger$ @kbd{gcc -g -O -o test test.o -L/usr/local/lib -lhello -lm}\n@end example\n\nHowever, unless @file{/usr/local/lib} is in the standard library search\npath, you won't be able to run @code{test}.  However, if you use libtool\nto link the already-installed libtool library, it will do The Right\nThing (TM) for you:\n\n@example\nburger$ @kbd{libtool --mode=link gcc -g -O -o test test.o \\\n                /usr/local/lib/libhello.la}\ngcc -g -O -o @value{objdir}/test test.o -Wl,--rpath \\\n        -Wl,/usr/local/lib /usr/local/lib/libhello.a -lm\ncreating test\nburger$\n@end example\n\nNote that libtool added the necessary run-time path flag, as well as\n@option{-lm}, the library libhello.la depended upon.  Nice, huh?\n\n@cindex wrapper scripts for programs\n@cindex program wrapper scripts\nNotice that the executable, @code{hell}, was actually created in the\n@file{@value{objdir}} subdirectory.  Then, a wrapper script (or, on\ncertain platforms, a wrapper executable @pxref{Wrapper executables}) was\ncreated in the current directory.\n\nSince libtool created a wrapper script, you should use libtool to\ninstall it and debug it too.  However, since the program does not depend\non any uninstalled libtool library, it is probably usable even without\nthe wrapper script.\n\nOn NetBSD 1.2, libtool encodes the installation directory of\n@file{libhello}, by using the @samp{-R/usr/local/lib} compiler flag.\nThen, the wrapper script guarantees that the executable finds the\ncorrect shared library (the one in @file{./@value{objdir}}) until it is\nproperly installed.\n\nLet's compare the two different programs:\n\n@example\nburger$ @kbd{time ./hell.old}\nWelcome to GNU Hell!\n** This is not GNU Hello.  There is no built-in mail reader. **\n        0.21 real         0.02 user         0.08 sys\nburger$ @kbd{time ./hell}\nWelcome to GNU Hell!\n** This is not GNU Hello.  There is no built-in mail reader. **\n        0.63 real         0.09 user         0.59 sys\nburger$\n@end example\n\nThe wrapper script takes significantly longer to execute, but at least\nthe results are correct, even though the shared library hasn't been\ninstalled yet.\n\nSo, what about all the space savings that shared libraries are supposed\nto yield?\n\n@example\nburger$ @kbd{ls -l hell.old libhello.a}\n-rwxr-xr-x  1 gord  gord  15481 Nov 14 12:11 hell.old\n-rw-r--r--  1 gord  gord   4274 Nov 13 18:02 libhello.a\nburger$ @kbd{ls -l @value{objdir}/hell @value{objdir}/libhello.*}\n-rwxr-xr-x  1 gord  gord  11647 Nov 14 12:10 @value{objdir}/hell\n-rw-r--r--  1 gord  gord   4274 Nov 13 18:44 @value{objdir}/libhello.a\n-rwxr-xr-x  1 gord  gord  12205 Nov 13 18:44 @value{objdir}/libhello.so.0.0\nburger$\n@end example\n\nWell, that sucks.  Maybe I should just scrap this project and take up\nbasket weaving.\n\nActually, it just proves an important point: shared libraries incur\noverhead because of their (relative) complexity.  In this situation, the\nprice of being dynamic is eight kilobytes, and the payoff is about four\nkilobytes.  So, having a shared @file{libhello} won't be an advantage\nuntil we link it against at least a few more programs.\n\n@menu\n* Wrapper executables::         Wrapper executables for some platforms.\n@end menu\n\n@node Wrapper executables\n@subsection Wrapper executables for uninstalled programs\n@cindex wrapper executables for uninstalled programs\n@cindex program wrapper executables\n\nSome platforms, notably those hosted on Windows such as Cygwin\nand MinGW, use a wrapper executable rather than a wrapper script\nto ensure proper operation of uninstalled programs linked by libtool\nagainst uninstalled shared libraries. The wrapper executable thus\nperforms the same function as the wrapper script used on other\nplatforms, but allows to satisfy the @command{make} rules for the\nprogram, whose name ends in @code{$(EXEEXT)}. The actual program\nexecutable is created below @value{objdir}, and its name will end\nin @code{$(EXEEXT)} and may or may not contain an @code{lt-} prefix.\nThis wrapper executable sets various environment values so that the\nprogram executable may locate its (uninstalled) shared libraries,\nand then launches the program executable.\n\nThe wrapper executable provides a debug mode, enabled by passing the\ncommand-line option @code{--lt-debug} (see below). When executing in\ndebug mode, diagnostic information will be printed to @code{stderr}\nbefore the program executable is launched.\n\nFinally, the wrapper executable supports a number of command line\noptions that may be useful when debugging the operation of the wrapper\nsystem. All of these options begin with @code{--lt-}, and if present\nthey and their arguments will be removed from the argument list passed\non to the program executable.  Therefore, the program executable may not\nemploy command line options that begin with @code{--lt-}. (In fact, the\nwrapper executable will detect any command line options that begin with\n@code{--lt-} and abort with an error message if the option is not\nrecognized). If this presents a problem, please contact the Libtool\nteam at @value{BUGADDR}.\n\nThese command line options include:\n\n@table @option\n@item --lt-dump-script\nCauses the wrapper to print a copy of the wrapper @emph{script}\nto @code{stdout}, and exit.\n\n@item --lt-debug\nCauses the wrapper to print diagnostic information to @code{stdout},\nbefore launching the program executable.\n\n@end table\n\nFor consistency, both the wrapper @emph{script} and the wrapper\n@emph{executable} support these options.\n\n@node Debugging executables\n@section Debugging executables\n\nIf @file{hell} was a complicated program, you would certainly want to\ntest and debug it before installing it on your system.  In the above\nsection, you saw how the libtool wrapper script makes it possible to run\nthe program directly, but unfortunately, this mechanism interferes with\nthe debugger:\n\n@example\nburger$ @kbd{gdb hell}\nGDB is free software and you are welcome to distribute copies of it\n under certain conditions; type \"show copying\" to see the conditions.\nThere is no warranty for GDB; type \"show warranty\" for details.\nGDB 4.16 (i386-unknown-netbsd), (C) 1996 Free Software Foundation, Inc.\n\n\"hell\": not in executable format: File format not recognized\n\n(gdb) @kbd{quit}\nburger$\n@end example\n\nSad.  It doesn't work because GDB doesn't know where the executable\nlives.  So, let's try again, by invoking GDB directly on the executable:\n\n@example\nburger$ @kbd{gdb @value{objdir}/hell}\nGNU gdb 5.3 (i386-unknown-netbsd)\nCopyright 2002 Free Software Foundation, Inc.\nGDB is free software, covered by the GNU General Public License,\nand you are welcome to change it and/or distribute copies of it\nunder certain conditions.  Type \"show copying\" to see the conditions.\nThere is no warranty for GDB.  Type \"show warranty\" for details.\n(gdb) @kbd{break main}\nBreakpoint 1 at 0x8048547: file main.c, line 29.\n(gdb) @kbd{run}\nStarting program: /home/src/libtool/demo/.libs/hell\n/home/src/libtool/demo/.libs/hell: can't load library 'libhello.so.0'\n\nProgram exited with code 020.\n(gdb) @kbd{quit}\nburger$\n@end example\n\nArgh.  Now GDB complains because it cannot find the shared library that\n@file{hell} is linked against.  So, we must use libtool in order to\nproperly set the library path and run the debugger.  Fortunately, we can\nforget all about the @file{@value{objdir}} directory, and just run it on\nthe executable wrapper (@pxref{Execute mode}):\n\n@example\nburger$ @kbd{libtool --mode=execute gdb hell}\nGNU gdb 5.3 (i386-unknown-netbsd)\nCopyright 2002 Free Software Foundation, Inc.\nGDB is free software, covered by the GNU General Public License,\nand you are welcome to change it and/or distribute copies of it\nunder certain conditions.  Type \"show copying\" to see the conditions.\nThere is no warranty for GDB.  Type \"show warranty\" for details.\n(gdb) @kbd{break main}\nBreakpoint 1 at 0x8048547: file main.c, line 29.\n(gdb) @kbd{run}\nStarting program: /home/src/libtool/demo/.libs/hell\n\nBreakpoint 1, main (argc=1, argv=0xbffffc40) at main.c:29\n29        printf (\"Welcome to GNU Hell!\\n\");\n(gdb) @kbd{quit}\nThe program is running.  Quit anyway (and kill it)? (y or n) @kbd{y}\nburger$\n@end example\n\n@node Installing libraries\n@section Installing libraries\n\n@pindex strip\nInstalling libraries on a non-libtool system is quite\nstraightforward@dots{} just copy them into place:@footnote{Don't\nstrip static libraries though, or they will be unusable.}\n\n@pindex su\n@example\nburger$ @kbd{su}\nPassword: @kbd{********}\nburger# @kbd{cp libhello.a /usr/local/lib/libhello.a}\nburger#\n@end example\n\nOops, don't forget the @command{ranlib} command:\n\n@example\nburger# @kbd{ranlib /usr/local/lib/libhello.a}\nburger#\n@end example\n\n@pindex install\nLibtool installation is quite simple, as well.  Just use the\n@command{install} or @command{cp} command that you normally would\n(@pxref{Install mode}):\n\n@example\na23# @kbd{libtool --mode=install cp libhello.la /usr/local/lib/libhello.la}\ncp libhello.la /usr/local/lib/libhello.la\ncp @value{objdir}/libhello.a /usr/local/lib/libhello.a\nranlib /usr/local/lib/libhello.a\na23#\n@end example\n\nNote that the libtool library @file{libhello.la} is also installed, to\nhelp libtool with uninstallation (@pxref{Uninstall mode}) and linking\n(@pxref{Linking executables}) and to help programs with dlopening\n(@pxref{Dlopened modules}).\n\nHere is the shared library example:\n\n@example\nburger# @kbd{libtool --mode=install install -c libhello.la \\\n                /usr/local/lib/libhello.la}\ninstall -c @value{objdir}/libhello.so.0.0 /usr/local/lib/libhello.so.0.0\ninstall -c libhello.la /usr/local/lib/libhello.la\ninstall -c @value{objdir}/libhello.a /usr/local/lib/libhello.a\nranlib /usr/local/lib/libhello.a\nburger#\n@end example\n\n@cindex stripping libraries\n@cindex libraries, stripping\nIt is safe to specify the @option{-s} (strip symbols) flag if you use a\nBSD-compatible install program when installing libraries.\nLibtool will either ignore the @option{-s} flag, or will run a program\nthat will strip only debugging and compiler symbols from the library.\n\nOnce the libraries have been put in place, there may be some additional\nconfiguration that you need to do before using them.  First, you must\nmake sure that where the library is installed actually agrees with the\n@option{-rpath} flag you used to build it.\n\n@cindex postinstallation\n@cindex installation, finishing\n@cindex libraries, finishing installation\nThen, running @samp{libtool -n finish @var{libdir}} can give you\nfurther hints on what to do (@pxref{Finish mode}):\n\n@example\nburger# @kbd{libtool -n finish /usr/local/lib}\nPATH=\"$PATH:/sbin\" ldconfig -m /usr/local/lib\n-----------------------------------------------------------------\nLibraries have been installed in:\n   /usr/local/lib\n\nTo link against installed libraries in a given directory, LIBDIR,\nyou must use the `-LLIBDIR' flag during linking.\n\n You will also need to do one of the following:\n   - add LIBDIR to the `LD_LIBRARY_PATH' environment variable\n     during execution\n   - add LIBDIR to the `LD_RUN_PATH' environment variable\n     during linking\n   - use the `-RLIBDIR' linker flag\n\nSee any operating system documentation about shared libraries for\nmore information, such as the ld and ld.so manual pages.\n-----------------------------------------------------------------\nburger#\n@end example\n\nAfter you have completed these steps, you can go on to begin using the\ninstalled libraries.  You may also install any executables that depend\non libraries you created.\n\n@node Installing executables\n@section Installing executables\n\nIf you used libtool to link any executables against uninstalled libtool\nlibraries (@pxref{Linking executables}), you need to use libtool to\ninstall the executables after the libraries have been installed\n(@pxref{Installing libraries}).\n\nSo, for our Ultrix example, we would run:\n\n@example\na23# libtool --mode=install -c hell /usr/local/bin/hell\ninstall -c hell /usr/local/bin/hell\na23#\n@end example\n\nOn shared library systems that require wrapper scripts, libtool just\nignores the wrapper script and installs the correct binary:\n\n@example\nburger# libtool --mode=install -c hell /usr/local/bin/hell\ninstall -c @value{objdir}/hell /usr/local/bin/hell\nburger#\n@end example\n\n\n@node Static libraries\n@section Linking static libraries\n\n@cindex static linking\n@cindex convenience libraries\nWhy return to @command{ar} and @command{ranlib} silliness when you've had a\ntaste of libtool?  Well, sometimes it is desirable to create a static\narchive that can never be shared.  The most frequent case is when you\nhave a set of object files that you use to build several different\nlibraries.  You can create a ``convenience library'' out of those\nobjects, and link against that with the other libraries, instead of\nlisting all the object files every time.\n\nIf you just want to link this convenience library into programs, then\nyou could just ignore libtool entirely, and use the old @command{ar} and\n@command{ranlib} commands (or the corresponding GNU Automake\n@samp{_LIBRARIES} rules).  You can even install a convenience library\nusing GNU Libtool, though you probably don't want to and hence GNU\nAutomake doesn't allow you to do so.\n\n@example\nburger$ @kbd{libtool --mode=install ./install-sh -c libhello.a \\\n                /local/lib/libhello.a}\n./install-sh -c libhello.a /local/lib/libhello.a\nranlib /local/lib/libhello.a\nburger$\n@end example\n\nUsing libtool for static library installation protects your library from\nbeing accidentally stripped (if the installer used the @option{-s} flag),\nas well as automatically running the correct @command{ranlib} command.\n\nBut libtool libraries are more than just collections of object files:\nthey can also carry library dependency information, which old archives\ndo not.  If you want to create a libtool static convenience library, you\ncan omit the @option{-rpath} flag and use @option{-static} to indicate that\nyou're only interested in a static library.  When you link a program\nwith such a library, libtool will actually link all object files and\ndependency libraries into the program.\n\nIf you omit both @option{-rpath} and @option{-static}, libtool will create a\nconvenience library that can be used to create other libtool\nlibraries, even shared ones.  Just like in the static case, the library\nbehaves as an alias to a set of object files and dependency libraries,\nbut in this case the object files are suitable for inclusion in shared\nlibraries.  But be careful not to link a single convenience library,\ndirectly or indirectly, into a single program or library, otherwise you\nmay get errors about symbol redefinitions.\n\nThe key is remembering that a convenience library contains PIC\nobjects, and can be linked where a list of PIC objects makes sense;\ni.e.@: into a shared library.  A static convenience library contains\nnon-PIC objects, so can be linked into an old static library, or\na program.\n\nWhen GNU Automake is used, you should use @code{noinst_LTLIBRARIES}\ninstead of @code{lib_LTLIBRARIES} for convenience libraries, so that\nthe @option{-rpath} option is not passed when they are linked.\n\nAs a rule of thumb, link a libtool convenience library into at most one\nlibtool library, and never into a program, and link libtool static\nconvenience libraries only into programs, and only if you need to carry\nlibrary dependency information to the user of the static convenience\nlibrary.\n\n@cindex standalone binaries\nAnother common situation where static linking is desirable is in\ncreating a standalone binary.  Use libtool to do the linking and add the\n@option{-all-static} flag.\n\n@node Invoking libtool\n@chapter Invoking @command{libtool}\n@pindex libtool\n@cindex libtool command options\n@cindex options, libtool command\n@cindex command options, libtool\n\nThe @command{libtool} program has the following synopsis:\n\n@example\nlibtool [@var{option}]@dots{} [@var{mode-arg}]@dots{}\n@end example\n\n@noindent\nand accepts the following options:\n\n@table @option\n@item --config\nDisplay libtool configuration variables and exit.\n\n@item --debug\nDump a trace of shell script execution to standard output.  This\nproduces a lot of output, so you may wish to pipe it to @command{less} (or\n@command{more}) or redirect to a file.\n\n@item -n\n@itemx --dry-run\nDon't create, modify, or delete any files, just show what commands would\nbe executed by libtool.\n\n@item --features\nDisplay basic configuration options.  This provides a way for packages\nto determine whether shared or static libraries will be built.\n\n@item --finish\nSame as @option{--mode=finish}.\n\n@item -h\nDisplay short help message.\n\n@item --help\nDisplay a help message and exit.  If @option{--mode=@var{mode}} is\nspecified, then detailed help for @var{mode} is displayed.\n\n@item --help-all\nDisplay help for the general options as well as detailed help for each\noperation mode, and exit.\n\n@item --mode=@var{mode}\nUse @var{mode} as the operation mode.  When using libtool from the\ncommand line, you can give just @var{mode} (or a unique abbreviation\nof it) as the first argument as a shorthand for the full\n@option{--mode=@var{mode}}.  For example, the following are equivalent:\n\n@example\n$ @kbd{libtool --mode=execute --dry-run gdb prog.exe}\n$ @kbd{libtool        execute --dry-run gdb prog.exe}\n$ @kbd{libtool        exe     --dry-run gdb prog.exe}\n$ @kbd{libtool        e       --dry-run gdb prog.exe}\n@end example\n\n@noindent\n@var{mode} must be set to one of the following:\n\n@table @option\n@item compile\nCompile a source file into a libtool object.\n\n@item execute\nAutomatically set the library path so that another program can use\nuninstalled libtool-generated programs or libraries.\n\n@item link\nCreate a library or an executable.\n\n@item install\nInstall libraries or executables.\n\n@item finish\nComplete the installation of libtool libraries on the system.\n\n@item uninstall\nDelete installed libraries or executables.\n\n@item clean\nDelete uninstalled libraries or executables.\n@end table\n\n@item --tag=@var{tag}\nUse configuration variables from tag @var{tag} (@pxref{Tags}).\n\n@item --preserve-dup-deps\nDo not remove duplicate dependencies in libraries.  When building packages\nwith static libraries, the libraries may depend circularly on each other\n(shared libs can too, but for those it doesn't matter), so there are\nsituations, where -la -lb -la is required, and the second -la may not be\nstripped or the link will fail.  In cases where these duplications are\nrequired, this option will preserve them, only stripping the libraries\nthat libtool knows it can safely.\n\n@item --quiet\n@itemx --silent\nDo not print out any progress or informational messages.\n\n@item -v\n@itemx --verbose\nPrint out progress and informational messages (enabled by default),\nas well as additional messages not ordinary seen by default.\n\n@item --no-quiet\n@itemx --no-silent\nPrint out the progress and informational messages that are seen\nby default. This option has no effect on whether the additional\nmessages seen in @option{--verbose} mode are shown.\n\n@item --no-verbose\nDo not print out any additional informational messages beyond\nthose ordinarily seen by default. This option has no effect\non whether the ordinary progress and informational messages\nenabled by @option{--no-quiet} are shown.\n\nThus, there are now three different message levels (not counting\n@option{--debug}), depending on whether the normal messages and/or\nthe additional verbose messages are displayed.  Note that there is\nno mechanism to diplay verbose messages, without also displaying\nnormal messages.\n\n@table @strong\n@item default\nNormal messages are displayed, verbose messages are not displayed.\nIn addition to being the default mode, it can be forcibly achieved\nby using both option @option{--no-verbose} and either option\n@option{--no-silent} or option @option{--no-quiet}.\n\n@item silent\nNeither normal messages nor verbose messages are displayed. This\nmode can be achieved using either option @option{--silent} or\noption @option{--quiet}.\n\n@item verbose\nBoth normal messages and verbose messages are displayed. This mode\ncan be achieved using either option @option{-v} or option\n@option{--verbose}.\n@end table\n\n@item --version\nPrint libtool version information and exit.\n@end table\n\nThe current @command{libtool} implementation is done with a shell script\nthat needs to be invoked by the shell which @command{configure} chose for\nconfiguring @command{libtool} (@pxref{config.status Invocation, , The\nAutoconf Manual, autoconf, The Autoconf Manual}).  This shell is set in\nthe she-bang (@samp{#!}) line of the @command{libtool} script.  Using a\ndifferent shell may cause undefined behavior.\n\nThe @var{mode-args} are a variable number of arguments, depending on the\nselected operation mode.  In general, each @var{mode-arg} is interpreted\nby programs libtool invokes, rather than libtool itself.\n\n@menu\n* Compile mode::                Creating library object files.\n* Link mode::                   Generating executables and libraries.\n* Execute mode::                Debugging libtool-generated programs.\n* Install mode::                Making libraries and executables public.\n* Finish mode::                 Completing a library installation.\n* Uninstall mode::              Removing installed executables and libraries.\n* Clean mode::                  Removing uninstalled executables and libraries.\n@end menu\n\n@node Compile mode\n@section Compile mode\n@cindex mode, compile\n@cindex compile mode\n\nFor @dfn{compile} mode, @var{mode-args} is a compiler command to be used\nin creating a ``standard'' object file.  These arguments should begin with\nthe name of the C compiler, and contain the @option{-c} compiler flag so\nthat only an object file is created.\n\nLibtool determines the name of the output file by removing the directory\ncomponent from the source file name, then substituting the source code\nsuffix (e.g.@: @samp{.c} for C source code) with the library object suffix,\n@samp{.lo}.\n\nIf shared libraries are being built, any necessary PIC generation flags\nare substituted into the compilation command.\n\nThe following components of @var{mode-args} are treated specially:\n\n@table @option\n@item -o\nNote that the @option{-o} option is now fully supported.  It is emulated\non the platforms that don't support it (by locking and moving the\nobjects), so it is really easy to use libtool, just with minor\nmodifications to your Makefiles.  Typing for example\n@example\nlibtool --mode=compile gcc -c foo/x.c -o foo/x.lo\n@end example\nwill do what you expect.\n\nNote, however, that, if the compiler does not support @option{-c} and\n@option{-o}, it is impossible to compile @file{foo/x.c} without\noverwriting an existing @file{./x.o}.  Therefore, if you do have a\nsource file @file{./x.c}, make sure you introduce dependencies in your\n@file{Makefile} to make sure @file{./x.o} (or @file{./x.lo}) is\nre-created after any sub-directory's @file{x.lo}:\n\n@example\nx.o x.lo: foo/x.lo bar/x.lo\n@end example\n\n@noindent\nThis will also ensure that make won't try to use a temporarily corrupted\n@file{x.o} to create a program or library.  It may cause needless\nrecompilation on platforms that support @option{-c} and @option{-o}\ntogether, but it's the only way to make it safe for those that don't.\n\n@item -no-suppress\nIf both PIC and non-PIC objects are being built, libtool will normally\nsuppress the compiler output for the PIC object compilation to save\nshowing very similar, if not identical duplicate output for each\nobject.  If the @option{-no-suppress} option is given in compile mode,\nlibtool will show the compiler output for both objects.\n\n@item -prefer-pic\nLibtool will try to build only PIC objects.\n\n@item -prefer-non-pic\nLibtool will try to build only non-PIC objects.\n\n@item -shared\nEven if Libtool was configured with @option{--enable-static}, the object\nfile Libtool builds will not be suitable for static linking.  Libtool\nwill signal an error if it was configured with @option{--disable-shared},\nor if the host does not support shared libraries.\n\n@item -static\nEven if libtool was configured with @option{--disable-static}, the\nobject file Libtool builds @strong{will} be suitable for static\nlinking.\n\n@item -Wc,@var{flag}\n@itemx -Xcompiler @var{flag}\nPass a flag directly to the compiler.  With @code{-Wc,}, multiple flags\nmay be separated by commas, whereas @code{-Xcompiler } passes through\ncommas unchanged.\n@end table\n\n@node Link mode\n@section Link mode\n@cindex link mode\n@cindex mode, link\n\n@dfn{Link} mode links together object files (including library\nobjects) to form another library or to create an executable program.\n\n@var{mode-args} consist of a command using the C compiler to create an\noutput file (with the @option{-o} flag) from several object files.\n\nThe following components of @var{mode-args} are treated specially:\n\n@table @option\n@cindex undefined symbols, allowing\n@cindex unresolved symbols, allowing\n@item -all-static\nIf @var{output-file} is a program, then do not link it against any\nshared libraries at all.  If @var{output-file} is a library, then only\ncreate a static library.  In general, this flag cannot be used together\nwith @samp{disable-static} (@pxref{LT_INIT}).\n\n@item -avoid-version\nTries to avoid versioning (@pxref{Versioning}) for libraries and modules,\ni.e.@: no version information is stored and no symbolic links are created.\nIf the platform requires versioning, this option has no effect.\n\n@item -bindir\nPass the absolute name of the directory for installing executable\nprograms (@pxref{Directory Variables, , Directory Variables, standards,\nThe GNU Coding Standards}).  @command{libtool} may use this value to\ninstall shared libraries there on systems that do not provide for any\nlibrary hardcoding and use the directory of a program and the @env{PATH}\nvariable as library search path.  This is typically used for DLLs on\nWindows or other systems using the PE (Portable Executable) format.\nOn other systems, @option{-bindir} is ignored.  The default value used\nis @file{@var{libdir}/../bin} for libraries installed to\n@file{@var{libdir}}.  You should not use @option{-bindir} for modules.\n\n@item -dlopen @var{file}\nSame as @option{-dlpreopen @var{file}}, if native dlopening is not\nsupported on the host platform (@pxref{Dlopened modules}) or if\nthe program is linked with @option{-static},\n@option{-static-libtool-libs}, or @option{-all-static}.  Otherwise, no\neffect.  If @var{file} is @code{self} Libtool will make sure that the\nprogram can @code{dlopen} itself, either by enabling\n@option{-export-dynamic} or by falling back to @option{-dlpreopen self}.\n\n@item -dlpreopen @var{file}\nLink @var{file} into the output program, and add its symbols to the\nlist of preloaded symbols (@pxref{Dlpreopening}).  If @var{file} is\n@code{self}, the symbols of the program itself will be added to\npreloaded symbol lists.  If @var{file} is @code{force} Libtool will\nmake sure that a preloaded symbol list is always @emph{defined},\nregardless of whether it's empty or not.\n\n@item -export-dynamic\nAllow symbols from @var{output-file} to be resolved with @code{dlsym}\n(@pxref{Dlopened modules}).\n\n@item -export-symbols @var{symfile}\nTells the linker to export only the symbols listed in @var{symfile}.\nThe symbol file should end in @file{.sym} and must contain the name of one\nsymbol per line.  This option has no effect on some platforms.\nBy default all symbols are exported.\n\n@item -export-symbols-regex @var{regex}\nSame as @option{-export-symbols}, except that only symbols matching\nthe regular expression @var{regex} are exported.\nBy default all symbols are exported.\n\n@item -L@var{libdir}\nSearch @var{libdir} for required libraries that have already been\ninstalled.\n\n@item -l@var{name}\n@var{output-file} requires the installed library @file{lib@var{name}}.\nThis option is required even when @var{output-file} is not an\nexecutable.\n\n@item -module\nCreates a library that can be dlopened (@pxref{Dlopened modules}).\nThis option doesn't work for programs.\nModule names don't need to be prefixed with @samp{lib}.\nIn order to prevent name clashes, however, @file{lib@var{name}} and @file{@var{name}}\nmust not be used at the same time in your package.\n\n@item -no-fast-install\nDisable fast-install mode for the executable @var{output-file}.  Useful\nif the program won't be necessarily installed.\n\n@item -no-install\nLink an executable @var{output-file} that can't be installed and\ntherefore doesn't need a wrapper script on systems that allow hardcoding\nof library paths.  Useful if the program is only used in the build tree,\ne.g., for testing or generating other files.\n\n@item -no-undefined\nDeclare that @var{output-file} does not depend on any libraries other\nthan the ones listed on the command line, i.e., after linking, it will\nnot have unresolved symbols.  Some platforms require all symbols in\nshared libraries to be resolved at library creation (@pxref{Inter-library\ndependencies}), and using this parameter allows @command{libtool} to\nassume that this will not happen.\n\n@item -o @var{output-file}\nCreate @var{output-file} from the specified objects and libraries.\n\n@item -objectlist @var{file}\nUse a list of object files found in @var{file} to specify objects.\n\n@item -precious-files-regex @var{regex}\nPrevents removal of files from the temporary output directory whose\nnames match this regular expression.  You might specify @samp{\\.bbg?$}\nto keep those files created with @code{gcc -ftest-coverage} for example.\n\n@item -release @var{release}\nSpecify that the library was generated by release @var{release} of your\npackage, so that users can easily tell which versions are newer than\nothers.  Be warned that no two releases of your package will be binary\ncompatible if you use this flag.  If you want binary compatibility, use\nthe @option{-version-info} flag instead (@pxref{Versioning}).\n\n@item -rpath @var{libdir}\nIf @var{output-file} is a library, it will eventually be installed in\n@var{libdir}.  If @var{output-file} is a program, add @var{libdir} to\nthe run-time path of the program.  On platforms that don't support\nhardcoding library paths into executables and only search PATH for\nshared libraries, such as when @var{output-file} is a Windows (or\nother PE platform) DLL, the @file{.la} control file will be installed in\n@var{libdir}, but see @option{-bindir} above for the eventual destination\nof the @file{.dll} or other library file itself.\n\n@item -R @var{libdir}\nIf @var{output-file} is a program, add @var{libdir} to its run-time\npath.  If @var{output-file} is a library, add @option{-R@var{libdir}} to its\n@var{dependency_libs}, so that, whenever the library is linked into a\nprogram, @var{libdir} will be added to its run-time path.\n\n@item -shared\nIf @var{output-file} is a program, then link it against any\nuninstalled shared libtool libraries (this is the default behavior).\nIf @var{output-file} is a library, then only create a shared library.\nIn the later case, libtool will signal an error if it was configured\nwith @option{--disable-shared}, or if the host does not support shared\nlibraries.\n\n@item -shrext @var{suffix}\nIf @var{output-file} is a libtool library, replace the system's standard\nfile name extension for shared libraries with @var{suffix} (most systems\nuse @file{.so} here).  This option is helpful in certain cases where an\napplication requires that shared libraries (typically modules) have an\nextension other than the default one.  Please note you must supply the\nfull file name extension including any leading dot.\n\n@item -static\nIf @var{output-file} is a program, then do not link it against any\nuninstalled shared libtool libraries.  If @var{output-file} is a\nlibrary, then only create a static library.\n\n@item -static-libtool-libs\nIf @var{output-file} is a program, then do not link it against any\nshared libtool libraries.  If @var{output-file} is a library, then only\ncreate a static library.\n\n@item -version-info @var{current}[:@var{revision}[:@var{age}]]\nIf @var{output-file} is a libtool library, use interface version\ninformation @var{current}, @var{revision}, and @var{age} to build it\n(@pxref{Versioning}).  Do @strong{not} use this flag to specify package\nrelease information, rather see the @option{-release} flag.\n\n@item -version-number @var{major}[:@var{minor}[:@var{revision}]]\nIf @var{output-file} is a libtool library, compute interface version\ninformation so that the resulting library uses the specified major, minor and\nrevision numbers.  This is designed to permit libtool to be used with\nexisting projects where identical version numbers are already used across\noperating systems.  New projects should use the @option{-version-info} flag\ninstead.\n\n@item -weak @var{libname}\nif @var{output-file} is a libtool library, declare that it provides a\nweak @var{libname} interface.  This is a hint to libtool that there is\nno need to append @var{libname} to the list of dependency libraries of\n@var{output-file}, because linking against @var{output-file} already\nsupplies the same interface (@pxref{Linking with dlopened modules}).\n\n@item -Wc,@var{flag}\n@itemx -Xcompiler @var{flag}\nPass a linker-specific flag directly to the compiler.  With @code{-Wc,},\nmultiple flags may be separated by commas, whereas @code{-Xcompiler }\npasses through commas unchanged.\n\n@item -Wl,@var{flag}\n@itemx -Xlinker @var{flag}\nPass a linker-specific flag directly to the linker.\n\n@item -XCClinker @var{flag}\nPass a link-specific flag to the compiler driver (@code{CC}) during linking.\n@end table\n\nIf the @var{output-file} ends in @file{.la}, then a libtool library is\ncreated, which must be built only from library objects (@file{.lo} files).\nThe @option{-rpath} option is required.  In the current implementation,\nlibtool libraries may not depend on other uninstalled libtool libraries\n(@pxref{Inter-library dependencies}).\n\nIf the @var{output-file} ends in @file{.a}, then a standard library is\ncreated using @code{ar} and possibly @code{ranlib}.\n\n@cindex partial linking\n@cindex linking, partial\nIf @var{output-file} ends in @file{.o} or @file{.lo}, then a reloadable object\nfile is created from the input files (generally using @samp{ld -r}).\nThis method is often called @dfn{partial linking}.\n\nOtherwise, an executable program is created.\n\n@node Execute mode\n@section Execute mode\n@cindex execute mode\n@cindex mode, execute\n\nFor @dfn{execute} mode, the library path is automatically set, then a\nprogram is executed.\n\nThe first of the @var{mode-args} is treated as a program name, with the\nrest as arguments to that program.\n\nThe following components of @var{mode-args} are treated specially:\n\n@table @option\n@item -dlopen @var{file}\nAdd the directory containing @var{file} to the library path.\n@end table\n\nThis mode sets the library path environment variable according to any\n@option{-dlopen} flags.\n\nIf any of the @var{args} are libtool executable wrappers, then they are\ntranslated into the name of their corresponding uninstalled binary, and\nany of their required library directories are added to the library path.\n\n@node Install mode\n@section Install mode\n@cindex install mode\n@cindex mode, install\n\nIn @dfn{install} mode, libtool interprets most of the elements of\n@var{mode-args} as an installation command beginning with\n@command{cp}, or a BSD-compatible @command{install} program.\n\nThe following components of @var{mode-args} are treated specially:\n\n@table @option\n@item -inst-prefix-dir @var{inst-prefix-dir}\nWhen installing into a temporary staging area, rather than the\nfinal @code{prefix}, this argument is used to reflect the\ntemporary path, in much the same way @command{automake} uses\n@env{DESTDIR}.  For instance, if @code{prefix} is @file{/usr/local},\nbut @var{inst-prefix-dir} is @file{/tmp}, then the object will be\ninstalled under @file{/tmp/usr/local/}.  If the installed object\nis a libtool library, then the internal fields of that library\nwill reflect only @code{prefix}, not @var{inst-prefix-dir}:\n\n@example\n# Directory that this library needs to be installed in:\nlibdir='/usr/local/lib'\n@end example\n\nnot\n\n@example\n# Directory that this library needs to be installed in:\nlibdir='/tmp/usr/local/lib'\n@end example\n\n@code{inst-prefix} is also used to insure that if the installed\nobject must be relinked upon installation, that it is relinked\nagainst the libraries in @var{inst-prefix-dir}/@code{prefix},\nnot @code{prefix}.\n\nIn truth, this option is not really intended for use when calling\nlibtool directly; it is automatically used when @code{libtool --mode=install}\ncalls @code{libtool --mode=relink}.  Libtool does this by\nanalyzing the destination path given in the original\n@code{libtool --mode=install} command and comparing it to the\nexpected installation path established during @code{libtool --mode=link}.\n\nThus, end-users need change nothing, and @command{automake}-style\n@code{make install DESTDIR=/tmp} will Just Work(tm) most of the time.\nFor systems where fast installation can not be turned on, relinking\nmay be needed.  In this case, a @samp{DESTDIR} install will fail.\n\nCurrently it is not generally possible to install into a temporary\nstaging area that contains needed third-party libraries which are\nnot yet visible at their final location.\n@end table\n\nThe rest of the @var{mode-args} are interpreted as arguments to the\n@command{cp} or @command{install} command.\n\nThe command is run, and any necessary unprivileged post-installation\ncommands are also completed.\n\n@node Finish mode\n@section Finish mode\n@cindex finish mode\n@cindex mode, finish\n\n@dfn{Finish} mode has two functions.  One is to help system administrators\ninstall libtool libraries so that they can be located and linked into\nuser programs.  To invoke this functionality, pass the name of a library\ndirectory as @var{mode-arg}.  Running this command may require superuser\nprivileges, and the @option{--dry-run} option may be useful.\n\nThe second is to facilitate transferring libtool libraries to a native\ncompilation environment after they were built in a cross-compilation\nenvironment.  Cross-compilation environments may rely on recent libtool\nfeatures, and running libtool in finish mode will make it easier to\nwork with older versions of libtool.  This task is performed whenever\nthe @var{mode-arg} is a @file{.la} file.\n\n@node Uninstall mode\n@section Uninstall mode\n@cindex uninstall mode\n@cindex mode, uninstall\n\n@dfn{Uninstall} mode deletes installed libraries, executables and objects.\n\nThe first @var{mode-arg} is the name of the program to use to delete\nfiles (typically @command{/bin/rm}).\n\nThe remaining @var{mode-args} are either flags for the deletion program\n(beginning with a @samp{-}), or the names of files to delete.\n\n@node Clean mode\n@section Clean mode\n@cindex clean mode\n@cindex mode, clean\n\n@dfn{Clean} mode deletes uninstalled libraries, executables, objects\nand libtool's temporary files associated with them.\n\nThe first @var{mode-arg} is the name of the program to use to delete\nfiles (typically @command{/bin/rm}).\n\nThe remaining @var{mode-args} are either flags for the deletion program\n(beginning with a @samp{-}), or the names of files to delete.\n\n@node Integrating libtool\n@chapter Integrating libtool with your package\n\nThis chapter describes how to integrate libtool with your packages so\nthat your users can install hassle-free shared libraries.\n\nThere are several ways in which Libtool may be integrated in your\npackage, described in the following sections.  Typically, the Libtool\nmacro files as well as @file{ltmain.sh} are copied into your package\nusing @command{libtoolize} and @command{aclocal} after setting up the\n@file{configure.ac} and toplevel @file{Makefile.am}, then\n@command{autoconf} adds the needed tests to the @file{configure} script.\nThese individual steps are often automated with @command{autoreconf}.\n\nHere is a diagram showing how such a typical Libtool configuration works\nwhen preparing a package for distribution, assuming that @file{m4} has\nbeen chosen as location for additional Autoconf macros, and\n@file{build-aux} as location for auxiliary build tools (@pxref{Input,,\nThe Autoconf Manual, autoconf, The Autoconf Manual}):\n\n@example\n@group\nlibtool.m4 -----.                .--> aclocal.m4 -----.\nltoptions.m4 ---+  .-> aclocal* -+                    +--> autoconf*\nltversion.m4 ---+--+             `--> [copy in m4/] --+       |\nltsugar.m4 -----+  |                    ^             |       \\/\nlt~obsolete.m4 -+  +-> libtoolize* -----'             |    configure\n[ltdl.m4] ------+  |                                  |\n                   `----------------------------------'\n\nltmain.sh -----------> libtoolize* -> [copy in build-aux/]\n@end group\n@end example\n\nDuring configuration, the @file{libtool} script is generated either\nthrough @command{config.status} or @command{config.lt}:\n\n@example\n@group\n             .--> config.status* --.\nconfigure* --+                     +--> libtool\n             `--> [config.lt*] ----'      ^\n                                          |\nltmain.sh --------------------------------'\n@end group\n@end example\n\nAt @command{make} run time, @command{libtool} is then invoked as needed\nas a wrapper around compilers, linkers, install and cleanup programs.\n\nThere are alternatives choices to several parts of the setup; for\nexample, the Libtool macro files can either be copied or symlinked into\nthe package, or copied into @file{aclocal.m4}.  As another example, an\nexternal, pre-configured @command{libtool} script may be used,\nby-passing most of the tests and package-specific setup for Libtool.\n\n@menu\n* Autoconf macros::             Autoconf macros exported by libtool.\n* Makefile rules::              Writing @file{Makefile} rules for libtool.\n* Using Automake::              Automatically supporting libtool.\n* Configuring::                 Configuring libtool for a host system.\n* Distributing::                What files to distribute with your package.\n* Static-only libraries::       Sometimes shared libraries are just a pain.\n@end menu\n\n@node Autoconf macros\n@section Autoconf macros exported by libtool\n\nLibtool uses a number of macros to interrogate the host system when it\nis being built, and you can use some of them yourself too.  Although\nthere are a great many other macros in the libtool installed m4 files,\nthese do not form part of the published interface, and are subject to\nchange between releases.\n\n@noindent\nMacros in the @samp{LT_CMD_} namespace check for various shell\ncommands:\n\n@defmac LT_CMD_MAX_LEN\nFinds the longest command line that can be safely passed to\n@samp{$SHELL} without being truncated, and store in the shell variable\n@samp{$max_cmd_len}.  It is only an approximate value, but command\nlines of this length or shorter are guaranteed not to be truncated.\n@end defmac\n\n@noindent\nMacros in the @samp{LT_FUNC_} namespace check characteristics of\nlibrary functions:\n\n@defmac LT_FUNC_DLSYM_USCORE\n@samp{AC_DEFINE} the preprocessor symbol @samp{DLSYM_USCORE} if we\nhave to add an underscore to symbol-names passed in to @samp{dlsym}.\n@end defmac\n\n@noindent\nMacros in the @samp{LT_LIB_} namespace check characteristics of system\nlibraries:\n\n@defmac LT_LIB_M\nSet @samp{LIBM} to the math library or libraries required on this\nmachine, if any.\n@end defmac\n\n@defmac LT_LIB_DLLOAD\nThis is the macro used by @samp{libltdl} to determine which dlloaders\nto use on this machine, if any.  Several shell variables are set (and\n@samp{AC_SUBST}ed) depending on the dlload interfaces are available on\nthis machine.  @samp{LT_DLLOADERS} contains a list of libtool\nlibraries that can be used, and if necessary also sets\n@samp{LIBADD_DLOPEN} if additional system libraries are required by\nthe @samp{dlopen} loader, and @samp{LIBADD_SHL_LOAD} if additional\nsystem libraries are required by the @samp{shl_load} loader,\nrespectively.  Finally some symbols are set in @file{config.h}\ndepending on the loaders that are found to work: @samp{HAVE_LIBDL},\n@samp{HAVE_SHL_LOAD}, @samp{HAVE_DYLD}, @samp{HAVE_DLD}.\n@end defmac\n\n@noindent\nMacros in the @samp{LT_PATH_} namespace search the system for the full\npath to particular system commands:\n\n@defmac LT_PATH_LD\nAdd a @option{--with-gnu-ld} option to @file{configure}.  Try to find\nthe path to the linker used by @samp{$CC}, and whether it is the\nGNU linker.  The result is stored in the shell variable\n@samp{$LD}, which is @code{AC_SUBST}ed.\n@end defmac\n\n@defmac LT_PATH_NM\nTry to find a BSD-compatible @command{nm} or a MS-compatible\n@command{dumpbin} command on this machine.  The result is stored in the\nshell variable @samp{$NM}, which is @code{AC_SUBST}ed.\n@end defmac\n\n@noindent\nMacros in the @samp{LT_SYS_} namespace probe for system\ncharacteristics:\n\n@defmac LT_SYS_DLOPEN_SELF\nTests whether a program can dlopen itself, and then also whether the\nsame program can still dlopen itself when statically linked.  Results\nare stored in the shell variables @samp{$enable_dlopen_self} and\n@samp{enable_dlopen_self_static} respectively.\n@end defmac\n\n@defmac LT_SYS_DLOPEN_DEPLIBS\nDefine the preprocessor symbol @samp{LTDL_DLOPEN_DEPLIBS} if the\nOS needs help to load dependent libraries for @samp{dlopen} (or\nequivalent).\n@end defmac\n\n@defmac LT_SYS_DLSEARCH_PATH\nDefine the preprocessor symbol @samp{LT_DLSEARCH_PATH} to the system\ndefault library search path.\n@end defmac\n\n@defmac LT_SYS_MODULE_EXT\nDefine the preprocessor symbol @samp{LT_MODULE_EXT} to the extension\nused for runtime loadable modules.  If you use libltdl to open\nmodules, then you can simply use the libtool library extension,\n@file{.la}.\n@end defmac\n\n@defmac LT_SYS_MODULE_PATH\nDefine the preprocessor symbol @samp{LT_MODULE_PATH_VAR} to the name\nof the shell environment variable that determines the run-time module\nsearch path.\n@end defmac\n\n@defmac LT_SYS_SYMBOL_USCORE\nSet the shell variable @samp{sys_symbol_underscore} to @samp{no}\nunless the compiler prefixes global symbols with an underscore.\n@end defmac\n\n\n@node Makefile rules\n@section Writing @file{Makefile} rules for libtool\n@cindex Makefile\n@cindex Makefile.am\n@cindex Makefile.in\n\nLibtool is fully integrated with Automake (@pxref{Top,, Introduction,\nautomake, The Automake Manual}), starting with Automake version 1.2.\n\nIf you want to use libtool in a regular @file{Makefile} (or\n@file{Makefile.in}), you are on your own.  If you're not using\nAutomake, and you don't know how to incorporate libtool into your\npackage you need to do one of the following:\n\n@enumerate 1\n@item\nDownload the latest Automake distribution from your nearest GNU\nmirror, install it, and start using it.\n\n@item\nLearn how to write @file{Makefile} rules by hand.  They're sometimes complex,\nbut if you're clever enough to write rules for compiling your old\nlibraries, then you should be able to figure out new rules for libtool\nlibraries (hint: examine the @file{Makefile.in} in the @file{tests/demo}\nsubdirectory of the libtool distribution@dots{} note especially that it\nwas automatically generated from the @file{Makefile.am} by Automake).\n@end enumerate\n\n@node Using Automake\n@section Using Automake with libtool\n\n@vindex LTLIBRARIES\nLibtool library support is implemented under the @samp{LTLIBRARIES}\nprimary.\n\nHere are some samples from the Automake @file{Makefile.am} in the\nlibtool distribution's @file{demo} subdirectory.\n\nFirst, to link a program against a libtool library, just use the\n@samp{program_LDADD}@footnote{@c\n@c\nSince GNU Automake 1.5, the flags @option{-dlopen}\nor @option{-dlpreopen} (@pxref{Link mode}) can be employed with the\n@samp{program_LDADD} variable.  Unfortunately, older releases didn't\naccept these flags, so if you are stuck with an ancient Automake, we\nrecommend quoting the flag itself, and setting\n@samp{program_DEPENDENCIES} too:\n\n@example\nprogram_LDADD = \"-dlopen\" libfoo.la\nprogram_DEPENDENCIES = libfoo.la\n@end example\n@c\n} variable:\n\n@example\nbin_PROGRAMS = hell hell_static\n\n# Build hell from main.c and libhello.la\nhell_SOURCES = main.c\nhell_LDADD = libhello.la\n\n# Create a statically linked version of hell.\nhell_static_SOURCES = main.c\nhell_static_LDADD = libhello.la\nhell_static_LDFLAGS = -static\n@end example\n\nYou may use the @samp{program_LDFLAGS} variable to stuff in any flags\nyou want to pass to libtool while linking @file{program} (such as\n@option{-static} to avoid linking uninstalled shared libtool libraries).\n\nBuilding a libtool library is almost as trivial@dots{} note the use of\n@samp{libhello_la_LDFLAGS} to pass the @option{-version-info}\n(@pxref{Versioning}) option to libtool:\n\n@example\n# Build a libtool library, libhello.la for installation in libdir.\nlib_LTLIBRARIES = libhello.la\nlibhello_la_SOURCES = hello.c foo.c\nlibhello_la_LDFLAGS = -version-info 3:12:1\n@end example\n\nThe @option{-rpath} option is passed automatically by Automake (except for\nlibraries listed as @code{noinst_LTLIBRARIES}), so you\nshould not specify it.\n\n@xref{A Shared Library, Building a Shared Library, The Automake Manual,\nautomake, The Automake Manual}, for more information.\n\n@node Configuring\n@section Configuring libtool\n@cindex configuring libtool\n\nLibtool requires intimate knowledge of your compiler suite and operating\nsystem in order to be able to create shared libraries and link against\nthem properly.  When you install the libtool distribution, a\nsystem-specific libtool script is installed into your binary directory.\n\nHowever, when you distribute libtool with your own packages\n(@pxref{Distributing}), you do not always know the compiler suite and\noperating system that are used to compile your package.\n\nFor this reason, libtool must be @dfn{configured} before it can be\nused.  This idea should be familiar to anybody who has used a GNU\n@code{configure} script.  @code{configure} runs a number of tests for\nsystem features, then generates the @file{Makefile}s (and possibly a\n@file{config.h} header file), after which you can run @code{make} and\nbuild the package.\n\nLibtool adds its own tests to your @code{configure} script in order to\ngenerate a libtool script for the installer's host machine.\n\n@menu\n* LT_INIT::                     Configuring @code{libtool} in @file{configure.ac}.\n* Configure notes::             Platform-specific notes for configuration.\n@end menu\n\n@node LT_INIT\n@subsection The @code{LT_INIT} macro\n\nIf you are using GNU Autoconf (or Automake), you should add a call to\n@code{LT_INIT} to your @file{configure.ac} file.  This macro\nadds many new tests to the @code{configure} script so that the generated\nlibtool script will understand the characteristics of the host.  It's the\nmost important of a number of macros defined by Libtool:\n\n@defmac LT_PREREQ (@var{version})\nEnsure that a recent enough version of Libtool is being used.  If the\nversion of Libtool used for @code{LT_INIT} is earlier than\n@var{version}, print an error message to the standard\nerror output and exit with failure (exit status is 63).  For example:\n\n@example\nLT_PREREQ([@value{VERSION}])\n@end example\n@end defmac\n\n@defmac LT_INIT (@var{options})\n@defmacx AC_PROG_LIBTOOL\n@defmacx AM_PROG_LIBTOOL\nAdd support for the @option{--enable-shared}, @option{--disable-shared},\n@option{--enable-static}, @option{--disable-static}, @option{--with-pic}, and\n@option{--without-pic} @code{configure} flags.@footnote{@code{LT_INIT} requires\nthat you define the @file{Makefile} variable @code{top_builddir} in your\n@file{Makefile.in}.  Automake does this automatically, but Autoconf\nusers should set it to the relative path to the top of your build\ndirectory (@file{../..}, for example).}  @code{AC_PROG_LIBTOOL} and\n@code{AM_PROG_LIBTOOL} are deprecated names for older versions of this macro;\n@code{autoupdate} will upgrade your @file{configure.ac} files.\n\nBy default, this macro turns on shared libraries if they are available,\nand also enables static libraries if they don't conflict with the shared\nlibraries.  You can modify these defaults by passing either\n@code{disable-shared} or @code{disable-static} in the option list to\n@code{LT_INIT}, or using @code{AC_DISABLE_SHARED} or @code{AC_DISABLE_STATIC}.\n\n@example\n# Turn off shared libraries during beta-testing, since they\n# make the build process take too long.\nLT_INIT([disable-shared])\n@end example\n\nThe user may specify modified forms of the configure flags\n@option{--enable-shared} and @option{--enable-static} to choose whether\nshared or static libraries are built based on the name of the package.\nFor example, to have shared @samp{bfd} and @samp{gdb} libraries built,\nbut not shared @samp{libg++}, you can run all three @code{configure}\nscripts as follows:\n\n@example\ntrick$ ./configure --enable-shared=bfd,gdb\n@end example\n\nIn general, specifying @option{--enable-shared=@var{pkgs}} is the same as\nconfiguring with @option{--enable-shared} every package named in the\ncomma-separated @var{pkgs} list, and every other package with\n@option{--disable-shared}.  The @option{--enable-static=@var{pkgs}} flag\nbehaves similarly, but it uses @option{--enable-static} and\n@option{--disable-static}.  The same applies to the\n@option{--enable-fast-install=@var{pkgs}} flag, which uses\n@option{--enable-fast-install} and @option{--disable-fast-install}.\n\nThe package name @samp{default} matches any packages that have not set\ntheir name in the @code{PACKAGE} environment variable.\n\nThe @option{--with-pic} and @option{--without-pic} configure flags can be used\nto specify whether or not @command{libtool} uses PIC objects.  By default,\n@command{libtool} uses PIC objects for shared libraries and non-PIC objects for\nstatic libraries.  The @option{--with-pic} option also accepts a comma-separated\nlist of package names.  Specifying @option{--with-pic=@var{pkgs}} is the same\nas configuring every package in @var{pkgs} with @option{--with-pic} and every\nother package with the default configuration.  The package name @samp{default}\nis treated the same as for @option{--enable-shared} and\n@option{--enable-static}.\n\nThis macro also sets the shell variable @code{LIBTOOL_DEPS}, that you\ncan use to automatically update the libtool script if it becomes\nout-of-date.  In order to do that, add to your @file{configure.ac}:\n\n@example\nLT_INIT\nAC_SUBST([LIBTOOL_DEPS])\n@end example\n\nand, to @file{Makefile.in} or @file{Makefile.am}:\n\n@example\nLIBTOOL_DEPS = @@LIBTOOL_DEPS@@\nlibtool: $(LIBTOOL_DEPS)\n        $(SHELL) ./config.status libtool\n@end example\n\nIf you are using GNU Automake, you can omit the assignment, as Automake\nwill take care of it.  You'll obviously have to create some dependency\non @file{libtool}.\n\nAside from @code{disable-static} and @code{disable-shared}, there are\nother options that you can pass to @code{LT_INIT} to modify its\nbehaviour.  Here is a full list:\n\n@table @samp\n@item dlopen\nEnable checking for dlopen support.  This option should be used if\nthe package makes use of the @option{-dlopen} and @option{-dlpreopen}\nlibtool flags, otherwise libtool will assume that the system does not\nsupport dlopening.\n\n@item win32-dll\nThis option should be used if the package has been ported to build clean\ndlls on win32 platforms.  Usually this means that any library data items\nare exported with @code{__declspec(dllexport)} and imported with\n@code{__declspec(dllimport)}.  If this macro is not used, libtool will\nassume that the package libraries are not dll clean and will build only\nstatic libraries on win32 hosts.\n\nProvision must be made to pass @option{-no-undefined} to @code{libtool}\nin link mode from the package @code{Makefile}.  Naturally, if you pass\n@option{-no-undefined}, you must ensure that all the library symbols\n@strong{really are} defined at link time!\n\n@item disable-fast-install\nChange the default behaviour for @code{LT_INIT} to disable\noptimization for fast installation.  The user may still override this\ndefault, depending on platform support, by specifying\n@option{--enable-fast-install} to @command{configure}.\n\n@item shared\nChange the default behaviour for @code{LT_INIT} to enable\nshared libraries.  This is the default on all systems where\nLibtool knows how to create shared libraries.\nThe user may still override this default by specifying\n@option{--disable-shared} to @command{configure}.\n\n@item disable-shared\nChange the default behaviour for @code{LT_INIT} to disable\nshared libraries.  The user may still override this default by\nspecifying @option{--enable-shared} to @command{configure}.\n\n@item static\nChange the default behaviour for @code{LT_INIT} to enable\nstatic libraries.  This is the default on all systems where\nshared libraries have been disabled for some reason, and on\nmost systems where shared libraries have been enabled.\nIf shared libraries are enabled, the user may still override\nthis default by specifying @option{--disable-static} to\n@command{configure}.\n\n@item disable-static\nChange the default behaviour for @code{LT_INIT} to disable\nstatic libraries.  The user may still override this default by\nspecifying @option{--enable-static} to @command{configure}.\n\n@item pic-only\nChange the default behaviour for @command{libtool} to try to use only\nPIC objects.  The user may still override this default by specifying\n@option{--without-pic} to @command{configure}.\n\n@item no-pic\nChange the default behaviour of @command{libtool} to try to use only\nnon-PIC objects.  The user may still override this default by\nspecifying @option{--with-pic} to @command{configure}.\n\n@end table\n\n@end defmac\n\n@defmac LT_LANG (@var{language})\nEnable @command{libtool} support for the language given if it\nhas not yet already been enabled.  Languages accepted are ``C++'',\n``Fortran 77'', ``Java'', ``Go'', and ``Windows Resource''.\n\nIf Autoconf language support macros such as @code{AC_PROG_CXX} are\nused in your @file{configure.ac}, Libtool language support will automatically\nbe enabled.\n\nConversely using @code{LT_LANG} to enable language support for Libtool\nwill automatically enable Autoconf language support as well.\n\nBoth of the following examples are therefore valid ways of adding C++\nlanguage support to Libtool.\n\n@example\nLT_INIT\nLT_LANG([C++])\n@end example\n\n@example\nLT_INIT\nAC_PROG_CXX\n@end example\n\n@end defmac\n\n@defmac AC_LIBTOOL_DLOPEN\nThis macro is deprecated, the @samp{dlopen} option to @code{LT_INIT} should be\nused instead.\n@end defmac\n\n@defmac AC_LIBTOOL_WIN32_DLL\nThis macro is deprecated, the @samp{win32-dll} option to @code{LT_INIT} should\nbe used instead.\n@end defmac\n\n@defmac AC_DISABLE_FAST_INSTALL\nThis macro is deprecated, the @samp{disable-fast-install} option to @code{LT_INIT}\nshould be used instead.\n@end defmac\n\n@defmac AC_DISABLE_SHARED\n@defmacx AM_DISABLE_SHARED\nChange the default behaviour for @code{LT_INIT} to disable shared libraries.\nThe user may still override this default by specifying @samp{--enable-shared}.\nThe option @samp{disable-shared} to @code{LT_INIT} is a shorthand for this.\n@code{AM_DISABLE_SHARED} is a deprecated alias for @code{AC_DISABLE_SHARED}.\n@end defmac\n\n@defmac AC_ENABLE_SHARED\n@defmacx AM_ENABLE_SHARED\nChange the default behaviour for @code{LT_INIT} to enable shared libraries.\nThis is the default on all systems where Libtool knows how to create\nshared libraries.  The user may still override this default by specifying\n@samp{--disable-shared}.  The option @samp{shared} to @code{LT_INIT} is a\nshorthand for this.\n@code{AM_ENABLE_SHARED} is a deprecated alias for @code{AC_ENABLE_SHARED}.\n@end defmac\n\n@defmac AC_DISABLE_STATIC\n@defmacx AM_DISABLE_STATIC\nChange the default behaviour for @code{LT_INIT} to disable static libraries.\nThe user may still override this default by specifying @samp{--enable-static}.\nThe option @samp{disable-static} to @code{LT_INIT} is a shorthand for this.\n@code{AM_DISABLE_STATIC} is a deprecated alias for @code{AC_DISABLE_STATIC}.\n@end defmac\n\n@defmac AC_ENABLE_STATIC\n@defmacx AM_ENABLE_STATIC\nChange the default behaviour for @code{LT_INIT} to enable static libraries.\nThis is the default on all systems where shared libraries have been disabled\nfor some reason, and on most systems where shared libraries have been enabled.\nIf shared libraries are enabled, the user may still override this default by\nspecifying @samp{--disable-static}.  The option @samp{static} to @code{LT_INIT}\nis a shorthand for this.\n@code{AM_ENABLE_STATIC} is a deprecated alias for @code{AC_ENABLE_STATIC}.\n@end defmac\n\nThe tests in @code{LT_INIT} also recognize the following\nenvironment variables:\n\n@defvar CC\nThe C compiler that will be used by the generated @code{libtool}.  If\nthis is not set, @code{LT_INIT} will look for @command{gcc} or\n@command{cc}.\n@end defvar\n\n@defvar CFLAGS\nCompiler flags used to generate standard object files.  If this is not\nset, @code{LT_INIT} will not use any such flags.  It affects\nonly the way @code{LT_INIT} runs tests, not the produced\n@code{libtool}.\n@end defvar\n\n@defvar CPPFLAGS\nC preprocessor flags.  If this is not set, @code{LT_INIT} will\nnot use any such flags.  It affects only the way @code{LT_INIT}\nruns tests, not the produced @code{libtool}.\n@end defvar\n\n@defvar LD\nThe system linker to use (if the generated @code{libtool} requires one).\nIf this is not set, @code{LT_INIT} will try to find out what is\nthe linker used by @code{CC}.\n@end defvar\n\n@defvar LDFLAGS\nThe flags to be used by @code{libtool} when it links a program.  If\nthis is not set, @code{LT_INIT} will not use any such flags.  It\naffects only the way @code{LT_INIT} runs tests, not the produced\n@code{libtool}.\n@end defvar\n\n@defvar LIBS\nThe libraries to be used by @code{LT_INIT} when it links a\nprogram.  If this is not set, @code{LT_INIT} will not use any\nsuch flags.  It affects only the way @code{LT_INIT} runs tests,\nnot the produced @code{libtool}.\n@end defvar\n\n@defvar NM\nProgram to use rather than checking for @command{nm}.\n@end defvar\n\n@defvar RANLIB\nProgram to use rather than checking for @command{ranlib}.\n@end defvar\n\n@defvar LN_S\nA command that creates a link of a program, a soft-link if possible, a\nhard-link otherwise.  @code{LT_INIT} will check for a suitable\nprogram if this variable is not set.\n@end defvar\n\n@defvar DLLTOOL\nProgram to use rather than checking for @command{dlltool}.  Only meaningful\nfor Cygwin/MS-Windows.\n@end defvar\n\n@defvar OBJDUMP\nProgram to use rather than checking for @command{objdump}.  Only meaningful\nfor Cygwin/MS-Windows.\n@end defvar\n\n@defvar AS\nProgram to use rather than checking for @command{as}.  Only used on\nCygwin/MS-Windows at the moment.\n@end defvar\n\n@defvar MANIFEST_TOOL\nProgram to use rather than checking for @command{mt}, the Manifest Tool.\nOnly used on Cygwin/MS-Windows at the moment.\n@end defvar\n\nWith 1.3 era libtool, if you wanted to know any details of what\nlibtool had discovered about your architecture and environment, you\nhad to run the script with @option{--config} and grep through the\nresults.  This idiom was supported up to and including 1.5.x era\nlibtool, where it was possible to call the generated libtool script\nfrom @file{configure.ac} as soon as @code{LT_INIT} had\ncompleted.  However, one of the features of libtool 1.4 was that the\nlibtool configuration was migrated out of a separate @file{ltconfig}\nfile, and added to the @code{LT_INIT} macro (nee @code{AC_PROG_LIBTOOL}),\nso the results of the configuration tests were available directly to code in\n@file{configure.ac}, rendering the call out to the generated libtool\nscript obsolete.\n\nStarting with libtool 2.0, the multipass generation of the libtool\nscript has been consolidated into a single @file{config.status} pass,\nwhich happens after all the code in @file{configure.ac} has\ncompleted.  The implication of this is that the libtool script does\nnot exist during execution of code from @file{configure.ac}, and so\nobviously it cannot be called for @option{--config} details anymore.  If\nyou are upgrading projects that used this idiom to libtool 2.0 or\nnewer, you should replace those calls with direct references to the\nequivalent Autoconf shell variables that are set by the configure time\ntests before being passed to @file{config.status} for inclusion in the\ngenerated libtool script.\n\n@defmac LT_OUTPUT\nBy default, the configured @file{libtool} script is generated by the\ncall to @code{AC_OUTPUT} command, and there is rarely any need to use\n@file{libtool} from @file{configure}.  However, sometimes it is\nnecessary to run configure time compile and link tests using\n@file{libtool}.  You can add @code{LT_OUTPUT} to your\n@file{configure.ac} any time after @code{LT_INIT} and any\n@code{LT_LANG} calls; that done, @file{libtool} will be created by a\nspecially generated @file{config.lt} file, and available for use in\nlater tests.\n\nAlso, when @code{LT_OUTPUT} is used, for backwards compatibility with\nAutomake regeneration rules, @file{config.status} will call\n@file{config.lt} to regenerate @file{libtool}, rather than generating\nthe file itself.\n@end defmac\n\n@pindex aclocal\nWhen you invoke the @command{libtoolize} program (@pxref{Invoking\nlibtoolize}), it will tell you where to find a definition of\n@code{LT_INIT}.  If you use Automake, the @command{aclocal} program\nwill automatically add @code{LT_INIT} support to your\n@file{configure} script when it sees the invocation of @code{LT_INIT}\nin @file{configure.ac}.\n\nBecause of these changes, and the runtime version compatibility checks\nLibtool now executes, we now advise @strong{against} including a copy of\n@file{libtool.m4} (and brethren) in @file{acinclude.m4}.  Instead,\nyou should set your project macro directory with\n@code{AC_CONFIG_MACRO_DIR}.  When you @command{libtoolize} your\nproject, a copy of the relevant macro definitions will be placed in\nyour @code{AC_CONFIG_MACRO_DIR}, where @command{aclocal} can reference\nthem directly from @file{aclocal.m4}.\n\n\n@node Configure notes\n@subsection Platform-specific configuration notes\n\nWhile Libtool tries to hide as many platform-specific features as possible,\nsome have to be taken into account when configuring either the Libtool package\nor a libtoolized package.\n\n@include notes.texi\n\n\n@node Distributing\n@section Including libtool in your package\n\nIn order to use libtool, you need to include the following files with\nyour package:\n\n@table @file\n@item config.guess\n@pindex config.guess\nAttempt to guess a canonical system name.\n\n@item config.sub\n@pindex config.sub\nCanonical system name validation subroutine script.\n\n@item install-sh\n@pindex install-sh\nBSD-compatible @command{install} replacement script.\n\n@item ltmain.sh\n@pindex ltmain.sh\nA generic script implementing basic libtool functionality.\n@end table\n\nNote that the libtool script itself should @emph{not} be included with\nyour package.  @xref{Configuring}.\n\nYou should use the @command{libtoolize} program, rather than manually\ncopying these files into your package.\n\n@menu\n* Invoking libtoolize::         @code{libtoolize} command line options.\n* Autoconf and LTLIBOBJS::      Autoconf automates LTLIBOBJS generation.\n@end menu\n\n@node Invoking libtoolize\n@subsection Invoking @command{libtoolize}\n@pindex libtoolize\n@cindex libtoolize command options\n@cindex command options, libtoolize\n@cindex options, libtoolize command\n\nThe @command{libtoolize} program provides a standard way to add libtool\nsupport to your package.  In the future, it may implement better usage\nchecking, or other features to make libtool even easier to use.\n\nThe @command{libtoolize} program has the following synopsis:\n\n@example\nlibtoolize [@var{option}]@dots{}\n@end example\n\n@noindent\nand accepts the following options:\n\n@table @option\n\n@item --copy\n@itemx -c\nCopy files from the libtool data directory rather than creating\nsymlinks.\n\n@item --debug\nDump a trace of shell script execution to standard output.  This\nproduces a lot of output, so you may wish to pipe it to @command{less} (or\n@command{more}) or redirect to a file.\n\n@item --dry-run\n@itemx -n\nDon't run any commands that modify the file system, just print them\nout.\n\n@item --force\n@itemx -f\nReplace existing libtool files.  By default, @command{libtoolize} won't\noverwrite existing files.\n\n@item --help\nDisplay a help message and exit.\n\n@item --ltdl [@var{target-directory-name}]\nInstall libltdl in the @var{target-directory-name} subdirectory of\nyour package.  Normally, the directory is extracted from the argument\nto @code{LT_CONFIG_LTDL_DIR} in @file{configure.ac}, though you can\nalso specify a subdirectory name here if you are not using Autoconf\nfor example.  If @command{libtoolize} can't determine the target\ndirectory, @samp{libltdl} is used as the default.\n\n@item --no-warn\nNormally, Libtoolize tries to diagnose use of deprecated libtool macros\nand other stylistic issues.  If you are deliberately using outdated\ncalling conventions, this option prevents Libtoolize from explaining\nhow to update your project's Libtool conventions.\n\n@item --nonrecursive\nIf passed in conjunction with @option{--ltdl}, this option will cause\nthe @command{libltdl} installed by @samp{libtoolize} to be set up for\nuse with a non-recursive @command{automake} build.  To make use of it,\nyou will need to add the following to the @file{Makefile.am} of the\nparent project:\n\n@example\n## libltdl/Makefile.inc @r{appends to the following variables}\n## @r{so we set them here before including it:}\nBUILT_SOURCES   =\n\nAM_CPPFLAGS        =\nAM_LDFLAGS         =\n\ninclude_HEADERS    =\nnoinst_LTLIBRARIES =\nlib_LTLIBRARIES   =\nEXTRA_LTLIBRARIES  =\n\nEXTRA_DIST   =\n\nCLEANFILES   =\nMOSTLYCLEANFILES   =\n\ninclude libltdl/Makefile.inc\n@end example\n\n@noindent\n\n@item --quiet\n@itemx -q\nWork silently.  @samp{libtoolize --quiet} is used by GNU Automake\nto add libtool files to your package if necessary.\n\n@item --recursive\nIf passed in conjunction with @option{--ltdl}, this option will cause\nthe @command{libtoolize} installed @samp{libltdl} to be set up for use\nwith a recursive @command{automake} build.  To make use of it, you\nwill need to adjust the parent project's @file{configure.ac}:\n\n@example\nAC_CONFIG_FILES([libltdl/Makefile])\n@end example\n\n@noindent\nand @file{Makefile.am}:\n\n@example\nSUBDIRS += libltdl\n@end example\n\n@item --subproject\nIf passed in conjunction with @option{--ltdl}, this option will cause\nthe @command{libtoolize} installed @samp{libltdl} to be set up for\nindependent configuration and compilation as a self-contained\nsubproject.  To make use of it, you should arrange for your build to\ncall @command{libltdl/configure}, and then run @command{make} in the\n@file{libltdl} directory (or the subdirectory you put libltdl into).\nIf your project uses Autoconf, you can use the supplied\n@samp{LT_WITH_LTDL} macro, or else call @samp{AC_CONFIG_SUBDIRS}\ndirectly.\n\nPrevious releases of @samp{libltdl} built exclusively in this mode,\nbut now it is the default mode both for backwards compatibility and\nbecause, for example, it is suitable for use in projects that wish to\nuse @samp{libltdl}, but not use the Autotools for their own build\nprocess.\n\n@item --verbose\n@itemx -v\nWork noisily!  Give a blow by blow account of what\n@command{libtoolize} is doing.\n\n@item --version\nPrint @command{libtoolize} version information and exit.\n@end table\n\n@cindex LIBTOOLIZE_OPTIONS\nSometimes it can be useful to pass options to @command{libtoolize} even\nthough it is called by another program, such as @command{autoreconf}.  A\nlimited number of options are parsed from the environment variable\n@code{LIBTOOLIZE_OPTIONS}: currently @option{--debug}, @option{--no-warn},\n@option{--quiet} and @option{--verbose}.  Multiple options passed in\n@code{LIBTOOLIZE_OPTIONS} must be separated with a space, comma or a\ncolon.\n\nBy default, a warning is issued for unknown options found in\n@code{LIBTOOLIZE_OPTIONS} unless the first such option is\n@option{--no-warn}.  Where @command{libtoolize} has always quit\non receipt of an unknown option at the command line, this and all\nprevious releases of @command{libtoolize} will continue unabated whatever\nthe content of @code{LIBTOOLIZE_OPTIONS} (modulo some possible warning\nmessages).\n\n@example\ntrick$ @kbd{LIBTOOLIZE_OPTIONS=--no-warn,--quiet autoreconf --install}\n@end example\n\n@findex AC_CONFIG_MACRO_DIR\nIf @command{libtoolize} detects an explicit call to\n@code{AC_CONFIG_MACRO_DIR} (@pxref{Input, , The Autoconf Manual,\nautoconf, The Autoconf Manual}) in your @file{configure.ac}, it will\nput the Libtool macros in the specified directory.\n\nIn the future other Autotools will automatically check the contents of\n@code{AC_CONFIG_MACRO_DIR}, but at the moment it is more portable to\nadd the macro directory to @code{ACLOCAL_AMFLAGS} in\n@file{Makefile.am}, which is where the tools currently look.  If\n@command{libtoolize} doesn't see @code{AC_CONFIG_MACRO_DIR}, it too\nwill honour the first @samp{-I} argument in @code{ACLOCAL_AMFLAGS}\nwhen choosing a directory to store libtool configuration macros in.\nIt is perfectly sensible to use both @code{AC_CONFIG_MACRO_DIR} and\n@code{ACLOCAL_AMFLAGS}, as long as they are kept in synchronisation.\n\n@example\nACLOCAL_AMFLAGS = -I m4\n@end example\n\nWhen you bootstrap your project with @command{aclocal}, then you will\nneed to explicitly pass the same macro directory with\n@command{aclocal}'s @samp{-I} flag:\n\n@example\ntrick$ @kbd{aclocal -I m4}\n@end example\n\n@findex AC_CONFIG_AUX_DIR\nIf @command{libtoolize} detects an explicit call to\n@code{AC_CONFIG_AUX_DIR} (@pxref{Input, , The Autoconf Manual,\nautoconf, The Autoconf Manual}) in your @file{configure.ac}, it\nwill put the other support files in the specified directory.\nOtherwise they too end up in the project root directory.\n\nUnless @option{--no-warn} is passed, @command{libtoolize} displays\nhints for adding libtool support to your package, as well.\n\n@node Autoconf and LTLIBOBJS\n@subsection Autoconf and @code{LTLIBOBJS}\n\nPeople used to add code like the following to their\n@file{configure.ac}:\n\n@cindex LTLIBOBJS\n@example\nLTLIBOBJS=`echo \"$LIBOBJS\" | sed 's/\\.[^.]* /.lo /g;s/\\.[^.]*$/.lo/'`\nAC_SUBST([LTLIBOBJS])\n@end example\n\n@noindent\nThis is no longer required (since Autoconf 2.54), and doesn't take\nAutomake's deansification support into account either, so doesn't work\ncorrectly even with ancient Autoconfs!\n\nProvided you are using a recent (2.54 or better) incarnation of\nAutoconf, the call to @code{AC_OUTPUT} takes care of setting\n@code{LTLIBOBJS} up correctly, so you can simply delete such snippets\nfrom your @file{configure.ac} if you had them.\n\n\n@node Static-only libraries\n@section Static-only libraries\n@cindex debugging libraries\n@cindex developing libraries\n@cindex double-compilation, avoiding\n@cindex avoiding shared libraries\n@cindex eliding shared libraries\n@cindex using shared libraries, not\n@cindex shared libraries, not using\n@cindex time, saving\n@cindex saving time\n\nWhen you are developing a package, it is often worthwhile to configure\nyour package with the @option{--disable-shared} flag, or to override the\ndefaults for @code{LT_INIT} by using the @code{disable-shared} option\n(@pxref{LT_INIT, , The @code{LT_INIT} macro}).  This prevents libtool\nfrom building shared libraries, which has several advantages:\n\n@itemize @bullet\n@item\ncompilation is twice as fast, which can speed up your development cycle,\n\n@item\ndebugging is easier because you don't need to deal with any complexities\nadded by shared libraries, and\n\n@item\nyou can see how libtool behaves on static-only platforms.\n@end itemize\n\nYou may want to put a small note in your package @file{README} to let\nother developers know that @option{--disable-shared} can save them time.\nThe following example note is taken from the GIMP@footnote{GNU Image\nManipulation Program, for those who haven't taken the plunge.  See\n@url{http://www.gimp.org/}.} distribution @file{README}:\n\n@example\nThe GIMP uses GNU Libtool in order to build shared libraries on a\nvariety of systems.  While this is very nice for making usable\nbinaries, it can be a pain when trying to debug a program.  For that\nreason, compilation of shared libraries can be turned off by\nspecifying the @option{--disable-shared} option to @file{configure}.\n@end example\n\n\n@node Other languages\n@chapter Using libtool with other languages\n@cindex C, not using\n@cindex languages, non-C\n@cindex C++, using\n\nLibtool was first implemented in order to add support for writing shared\nlibraries in the C language.  However, over time, libtool is being\nintegrated with other languages, so that programmers are free to reap\nthe benefits of shared libraries in their favorite programming language.\n\nThis chapter describes how libtool interacts with other languages,\nand what special considerations you need to make if you do not use C.\n\n@menu\n* C++ libraries::               Writing libraries for C++\n* Tags::                        Tags\n@end menu\n\n@node C++ libraries\n@section Writing libraries for C++\n@c FIXME: in the TOC, the ++ is too large (seems to be math mode)\n@cindex trouble with C++\n@cindex pitfalls using C++\n@cindex C++, pitfalls\n\nCreating libraries of C++ code should be a fairly straightforward\nprocess, because its object files differ from C ones in only three ways:\n\n@enumerate 1\n@item\nBecause of name mangling, C++ libraries are only usable by the C++\ncompiler that created them.  This decision was made by the designers of\nC++ in order to protect users from conflicting implementations of\nfeatures such as constructors, exception handling, and RTTI.\n\n@item\nOn some systems, the C++ compiler must take special actions for the\ndynamic linker to run dynamic (i.e., run-time) initializers.  This means\nthat we should not call @command{ld} directly to link such libraries, and\nwe should use the C++ compiler instead.\n\n@item\nC++ compilers will link some Standard C++ library in by default, but\nlibtool does not know which are these libraries, so it cannot even run\nthe inter-library dependence analyzer to check how to link it in.\nTherefore, running @command{ld} to link a C++ program or library is deemed\nto fail.\n@end enumerate\n\nBecause of these three issues, Libtool has been designed to always use\nthe C++ compiler to compile and link C++ programs and libraries.  In\nsome instances the @code{main()} function of a program must also be\ncompiled with the C++ compiler for static C++ objects to be properly\ninitialized.\n\n@node Tags\n@section Tags\n@cindex tag names\n@cindex language names\n@cindex inferring tags\n\nLibtool supports multiple languages through the use of tags.  Technically\na tag corresponds to a set of configuration variables associated with a\nlanguage.  These variables tell @command{libtool} how it should create\nobjects and libraries for each language.\n\nTags are defined at @command{configure}-time for each language activated\nin the package (see @code{LT_LANG} in @ref{LT_INIT}).  Here is the\ncorrespondence between language names and tags names.\n\n@multitable {Windows Resource} {Tag name}\n@item Language name    @tab Tag name\n@item C                @tab CC\n@item C++              @tab CXX\n@item Java             @tab GCJ\n@item Fortran 77       @tab F77\n@item Fortran          @tab FC\n@item Go               @tab GO\n@item Windows Resource @tab RC\n@end multitable\n\n@command{libtool} tries to automatically infer which tag to use from\nthe compiler command being used to compile or link.  If it can't infer\na tag, then it defaults to the configuration for the @code{C} language.\n\nThe tag can also be specified using @command{libtool}'s\n@option{--tag=@var{tag}} option (@pxref{Invoking libtool}).  It is a good\nidea to do so in @file{Makefile} rules, because that will allow users to\nsubstitute the compiler without relying on @command{libtool} inference\nheuristics.  When no tag is specified, @command{libtool} will default\nto @code{CC}; this tag always exists.\n\nFinally, the set of tags available in a particular project can be\nretrieved by tracing for the @code{LT_SUPPORTED_TAG} macro (@pxref{Trace\ninterface}).\n\n@node Versioning\n@chapter Library interface versions\n@cindex dynamic dependencies\n@cindex dependency versioning\n@cindex shared library versions\n\nThe most difficult issue introduced by shared libraries is that of\ncreating and resolving runtime dependencies.  Dependencies on programs\nand libraries are often described in terms of a single name, such as\n@command{sed}.  So, one may say ``libtool depends on sed,'' and that is\ngood enough for most purposes.\n\nHowever, when an interface changes regularly, we need to be more\nspecific: ``Gnus 5.1 requires Emacs 19.28 or above.''  Here, the\ndescription of an interface consists of a name, and a ``version\nnumber.''\n\nEven that sort of description is not accurate enough for some purposes.\nWhat if Emacs 20 changes enough to break Gnus 5.1?\n\nThe same problem exists in shared libraries: we require a formal version\nsystem to describe the sorts of dependencies that programs have on\nshared libraries, so that the dynamic linker can guarantee that programs\nare linked only against libraries that provide the interface they\nrequire.\n\n@menu\n* Interfaces::                  What are library interfaces?\n* Libtool versioning::          Libtool's versioning system.\n* Updating version info::       Changing version information before releases.\n* Release numbers::             Breaking binary compatibility for aesthetics.\n@end menu\n\n@node Interfaces\n@section What are library interfaces?\n@cindex library interfaces\n\nInterfaces for libraries may be any of the following (and more):\n\n@itemize @bullet\n@item\nglobal variables: both names and types\n\n@item\nglobal functions: argument types and number, return types, and function names\n\n@item\nstandard input, standard output, standard error, and file formats\n\n@item\nsockets, pipes, and other inter-process communication protocol formats\n@end itemize\n\nNote that static functions do not count as interfaces, because they are\nnot directly available to the user of the library.\n\n@node Libtool versioning\n@section Libtool's versioning system\n@cindex libtool library versions\n@cindex formal versioning\n@cindex versioning, formal\n\nLibtool has its own formal versioning system.  It is not as flexible as\nsome, but it is definitely the simplest of the more powerful versioning\nsystems.\n\nThink of a library as exporting several sets of interfaces, arbitrarily\nrepresented by integers.  When a program is linked against a library, it\nmay use any subset of those interfaces.\n\nLibtool's description of the interfaces that a program uses is simple:\nit encodes the least and the greatest interface numbers in the resulting\nbinary (@var{first-interface}, @var{last-interface}).\n\nThe dynamic linker is guaranteed that if a library supports @emph{every}\ninterface number between @var{first-interface} and @var{last-interface},\nthen the program can be relinked against that library.\n\nNote that this can cause problems because libtool's compatibility\nrequirements are actually stricter than is necessary.\n\nSay @file{libhello} supports interfaces 5, 16, 17, 18, and 19, and that\nlibtool is used to link @file{test} against @file{libhello}.\n\nLibtool encodes the numbers 5 and 19 in @file{test}, and the dynamic\nlinker will only link @file{test} against libraries that support\n@emph{every} interface between 5 and 19.  So, the dynamic linker refuses\nto link @file{test} against @file{libhello}!\n\nIn order to eliminate this problem, libtool only allows libraries to\ndeclare consecutive interface numbers.  So, @file{libhello} can declare at\nmost that it supports interfaces 16 through 19.  Then, the dynamic\nlinker will link @file{test} against @file{libhello}.\n\nSo, libtool library versions are described by three integers:\n\n@table @var\n@item current\nThe most recent interface number that this library implements.\n\n@item revision\nThe implementation number of the @var{current} interface.\n\n@item age\nThe difference between the newest and oldest interfaces that this\nlibrary implements.  In other words, the library implements all the\ninterface numbers in the range from number @code{@var{current} -\n@var{age}} to @code{@var{current}}.\n@end table\n\nIf two libraries have identical @var{current} and @var{age} numbers,\nthen the dynamic linker chooses the library with the greater\n@var{revision} number.\n\n@node Updating version info\n@section Updating library version information\n\nIf you want to use libtool's versioning system, then you must specify\nthe version information to libtool using the @option{-version-info} flag\nduring link mode (@pxref{Link mode}).\n\nThis flag accepts an argument of the form\n@samp{@var{current}[:@var{revision}[:@var{age}]]}.  So, passing\n@option{-version-info 3:12:1} sets @var{current} to 3, @var{revision} to\n12, and @var{age} to 1.\n\nIf either @var{revision} or @var{age} are omitted, they default to 0.\nAlso note that @var{age} must be less than or equal to the @var{current}\ninterface number.\n\nHere are a set of rules to help you update your library version\ninformation:\n\n@enumerate 1\n@item\nStart with version information of @samp{0:0:0} for each libtool library.\n\n@item\nUpdate the version information only immediately before a public release\nof your software.  More frequent updates are unnecessary, and only\nguarantee that the current interface number gets larger faster.\n\n@item\nIf the library source code has changed at all since the last update,\nthen increment @var{revision} (@samp{@var{c}:@var{r}:@var{a}} becomes\n@samp{@var{c}:@math{r+1}:@var{a}}).\n\n@item\nIf any interfaces have been added, removed, or changed since the last\nupdate, increment @var{current}, and set @var{revision} to 0.\n\n@item\nIf any interfaces have been added since the last public release, then\nincrement @var{age}.\n\n@item\nIf any interfaces have been removed or changed since the last public\nrelease, then set @var{age} to 0.\n@end enumerate\n\n@strong{@emph{Never}} try to set the interface numbers so that they\ncorrespond to the release number of your package.  This is an abuse that\nonly fosters misunderstanding of the purpose of library versions.\nInstead, use the @option{-release} flag (@pxref{Release numbers}), but be\nwarned that every release of your package will not be binary compatible\nwith any other release.\n\nThe following explanation may help to understand the above rules a bit\nbetter: consider that there are three possible kinds of reactions from\nusers of your library to changes in a shared library:\n\n@enumerate 1\n@item\nPrograms using the previous version may use the new version as\ndrop-in replacement, and programs using the new version can also work\nwith the previous one.  In other words, no recompiling nor relinking\nis needed.  In this case, bump @var{revision} only, don't touch\n@var{current} nor @var{age}.\n\n@item\nPrograms using the previous version may use the new version as\ndrop-in replacement, but programs using the new version may use APIs not\npresent in the previous one.  In other words, a program linking against\nthe new version may fail with ``unresolved symbols'' if linking against\nthe old version at runtime: set @var{revision} to 0, bump @var{current}\nand @var{age}.\n\n@item\nPrograms may need to be changed, recompiled, relinked in order to use\nthe new version.  Bump @var{current}, set @var{revision} and @var{age}\nto 0.\n@end enumerate\n\n@noindent\nIn the above description, @emph{programs} using the library in question\nmay also be replaced by other libraries using it.\n\n\n@node Release numbers\n@section Managing release information\n\nOften, people want to encode the name of the package release into the\nshared library so that it is obvious to the user which package their\nprograms are linked against.  This convention is used especially on\nGNU/Linux:\n\n@example\ntrick$ @kbd{ls /usr/lib/libbfd*}\n/usr/lib/libbfd.a           /usr/lib/libbfd.so.2.7.0.2\n/usr/lib/libbfd.so\ntrick$\n@end example\n\nOn @samp{trick}, @file{/usr/lib/libbfd.so} is a symbolic link to\n@file{libbfd.so.2.7.0.2}, which was distributed as a part of\n@samp{binutils-2.7.0.2}.\n\nUnfortunately, this convention conflicts directly with libtool's idea of\nlibrary interface versions, because the library interface rarely changes\nat the same time that the release number does, and the library suffix is\nnever the same across all platforms.\n\nSo, in order to accommodate both views, you can use the @option{-release}\nflag in order to set release information for libraries for which you do not\nwant to use @option{-version-info}.  For the @file{libbfd} example, the\nnext release that uses libtool should be built with @samp{-release\n2.9.0}, which will produce the following files on GNU/Linux:\n\n@example\ntrick$ @kbd{ls /usr/lib/libbfd*}\n/usr/lib/libbfd-2.9.0.so     /usr/lib/libbfd.a\n/usr/lib/libbfd.so\ntrick$\n@end example\n\nIn this case, @file{/usr/lib/libbfd.so} is a symbolic link to\n@file{libbfd-2.9.0.so}.  This makes it obvious that the user is dealing\nwith @samp{binutils-2.9.0}, without compromising libtool's idea of\ninterface versions.\n\nNote that this option causes a modification of the library name, so do\nnot use it unless you want to break binary compatibility with any past\nlibrary releases.  In general, you should only use @option{-release} for\npackage-internal libraries or for ones whose interfaces change very\nfrequently.\n\n@node Library tips\n@chapter Tips for interface design\n@cindex library interfaces, design\n@cindex design of library interfaces\n\nWriting a good library interface takes a lot of practice and thorough\nunderstanding of the problem that the library is intended to solve.\n\nIf you design a good interface, it won't have to change often, you won't\nhave to keep updating documentation, and users won't have to keep\nrelearning how to use the library.\n\nHere is a brief list of tips for library interface design that may\nhelp you in your exploits:\n\n@table @asis\n@item Plan ahead\nTry to make every interface truly minimal, so that you won't need to\ndelete entry points very often.\n\n@item Avoid interface changes\n@cindex renaming interface functions\nSome people love redesigning and changing entry points just for the heck\nof it (note: @emph{renaming} a function is considered changing an entry\npoint).  Don't be one of those people.  If you must redesign an\ninterface, then try to leave compatibility functions behind so that\nusers don't need to rewrite their existing code.\n\n@item Use opaque data types\n@cindex opaque data types\nThe fewer data type definitions a library user has access to, the\nbetter.  If possible, design your functions to accept a generic pointer\n(that you can cast to an internal data type), and provide access\nfunctions rather than allowing the library user to directly manipulate\nthe data.\nThat way, you have the freedom to change the data structures without\nchanging the interface.\n\nThis is essentially the same thing as using abstract data types and\ninheritance in an object-oriented system.\n\n@item Use header files\n@cindex header files\nIf you are careful to document each of your library's global functions\nand variables in header files, and include them in your library source\nfiles, then the compiler will let you know if you make any interface\nchanges by accident (@pxref{C header files}).\n\n@item Use the @code{static} keyword (or equivalent) whenever possible\n@cindex global functions\nThe fewer global functions your library has, the more flexibility you'll\nhave in changing them.  Static functions and variables may change forms\nas often as you like@dots{} your users cannot access them, so they\naren't interface changes.\n\n@item Be careful with array dimensions\nThe number of elements in a global array is part of an interface, even\nif the header just declares @code{extern int foo[];}.  This is because\non i386 and some other SVR4/ELF systems, when an application\nreferences data in a shared library the size of that data (whatever\nits type) is included in the application executable.  If you might\nwant to change the size of an array or string then provide a pointer\nnot the actual array.\n@end table\n\n@menu\n* C header files::              How to write portable include files.\n@end menu\n\n@node C header files\n@section Writing C header files\n@cindex portable C headers\n@cindex C header files, portable\n@cindex include files, portable\n\nWriting portable C header files can be difficult, since they may be read\nby different types of compilers:\n\n@table @asis\n@item C++ compilers\nC++ compilers require that functions be declared with full prototypes,\nsince C++ is more strongly typed than C@.  C functions and variables also\nneed to be declared with the @code{extern \"C\"} directive, so that the\nnames aren't mangled.  @xref{C++ libraries}, for other issues relevant\nto using C++ with libtool.\n\n@item ANSI C compilers\nANSI C compilers are not as strict as C++ compilers, but functions\nshould be prototyped to avoid unnecessary warnings when the header file\nis @code{#include}d.\n\n@item non-ANSI C compilers\nNon-ANSI compilers will report errors if functions are prototyped.\n@end table\n\nThese complications mean that your library interface headers must use\nsome C preprocessor magic in order to be usable by each of the above\ncompilers.\n\n@file{foo.h} in the @file{tests/demo} subdirectory of the libtool\ndistribution serves as an example for how to write a header file that\ncan be safely installed in a system directory.\n\nHere are the relevant portions of that file:\n\n@example\n/* BEGIN_C_DECLS should be used at the beginning of your declarations,\n   so that C++ compilers don't mangle their names.  Use END_C_DECLS at\n   the end of C declarations. */\n#undef BEGIN_C_DECLS\n#undef END_C_DECLS\n#ifdef __cplusplus\n# define BEGIN_C_DECLS extern \"C\" @{\n# define END_C_DECLS @}\n#else\n# define BEGIN_C_DECLS /* empty */\n# define END_C_DECLS /* empty */\n#endif\n\n/* PARAMS is a macro used to wrap function prototypes, so that\n   compilers that don't understand ANSI C prototypes still work,\n   and ANSI C compilers can issue warnings about type mismatches. */\n#undef PARAMS\n#if defined (__STDC__) || defined (_AIX) \\\n        || (defined (__mips) && defined (_SYSTYPE_SVR4)) \\\n        || defined(WIN32) || defined(__cplusplus)\n# define PARAMS(protos) protos\n#else\n# define PARAMS(protos) ()\n#endif\n@end example\n\nThese macros are used in @file{foo.h} as follows:\n\n@example\n#ifndef FOO_H\n#define FOO_H 1\n\n/* The above macro definitions. */\n#include \"@dots{}\"\n\nBEGIN_C_DECLS\n\nint foo PARAMS((void));\nint hello PARAMS((void));\n\nEND_C_DECLS\n\n#endif /* !FOO_H */\n@end example\n\nNote that the @file{#ifndef FOO_H} prevents the body of @file{foo.h}\nfrom being read more than once in a given compilation.\n\nAlso the only thing that must go outside the\n@code{BEGIN_C_DECLS}/@code{END_C_DECLS} pair are @code{#include} lines.\nStrictly speaking it is only C symbol names that need to be protected,\nbut your header files will be more maintainable if you have a single\npair of these macros around the majority of the header contents.\n\nYou should use these definitions of @code{PARAMS}, @code{BEGIN_C_DECLS},\nand @code{END_C_DECLS} into your own headers.  Then, you may use them to\ncreate header files that are valid for C++, ANSI, and non-ANSI\ncompilers@footnote{We used to recommend @code{__P},\n@code{__BEGIN_DECLS} and @code{__END_DECLS}.  This was bad advice since\nsymbols (even preprocessor macro names) that begin with an underscore\nare reserved for the use of the compiler.}.\n\nDo not be naive about writing portable code.  Following the tips given\nabove will help you miss the most obvious problems, but there are\ndefinitely other subtle portability issues.  You may need to cope with\nsome of the following issues:\n\n@itemize @bullet\n@item\nPre-ANSI compilers do not always support the @code{void *} generic\npointer type, and so need to use @code{char *} in its place.\n\n@item\nThe @code{const}, @code{inline} and @code{signed} keywords are not\nsupported by some compilers, especially pre-ANSI compilers.\n\n@item\nThe @code{long double} type is not supported by many compilers.\n@end itemize\n\n\n@node Inter-library dependencies\n@chapter Inter-library dependencies\n@cindex dependencies between libraries\n@cindex inter-library dependencies\n\nBy definition, every shared library system provides a way for\nexecutables to depend on libraries, so that symbol resolution is\ndeferred until runtime.\n\nAn @dfn{inter-library dependency} is one in which a library depends on\nother libraries.  For example, if the libtool library @file{libhello}\nuses the @code{cos} function, then it has an inter-library dependency\non @file{libm}, the math library that implements @code{cos}.\n\nSome shared library systems provide this feature in an\ninternally-consistent way: these systems allow chains of dependencies of\npotentially infinite length.\n\nHowever, most shared library systems are restricted in that they only\nallow a single level of dependencies.  In these systems, programs may\ndepend on shared libraries, but shared libraries may not depend on other\nshared libraries.\n\nIn any event, libtool provides a simple mechanism for you to declare\ninter-library dependencies: for every library @file{lib@var{name}} that\nyour own library depends on, simply add a corresponding\n@code{-l@var{name}} option to the link line when you create your\nlibrary.  To make an example of our @file{libhello} that depends on\n@file{libm}:\n\n@example\nburger$ @kbd{libtool --mode=link gcc -g -O -o libhello.la foo.lo hello.lo \\\n                -rpath /usr/local/lib -lm}\nburger$\n@end example\n\nWhen you link a program against @file{libhello}, you don't need to\nspecify the same @samp{-l} options again: libtool will do that for you,\nin order to guarantee that all the required libraries are found.  This\nrestriction is only necessary to preserve compatibility with static\nlibrary systems and simple dynamic library systems.\n\nSome platforms, such as Windows, do not even allow you this\nflexibility.  In order to build a shared library, it must be entirely\nself-contained or it must have dependencies known at link time (that is,\nhave references only to symbols that are found in the @file{.lo} files\nor the specified @samp{-l} libraries), and you need to specify the\n@option{-no-undefined} flag.  By default, libtool builds only static\nlibraries on these kinds of platforms.\n\nThe simple-minded inter-library dependency tracking code of libtool\nreleases prior to 1.2 was disabled because it was not clear when it was\npossible to link one library with another, and complex failures would\noccur.  A more complex implementation of this concept was re-introduced\nbefore release 1.3, but it has not been ported to all platforms that\nlibtool supports.  The default, conservative behavior is to avoid\nlinking one library with another, introducing their inter-dependencies\nonly when a program is linked with them.\n\n@node Dlopened modules\n@chapter Dlopened modules\n@findex dlopen\n@findex dlsym\n@findex dlclose\n@findex shl_load\n@cindex dynamic linking, applications\n@cindex dlopening modules\n@cindex modules, dynamic\n@cindex application-level dynamic linking\n\nIt can sometimes be confusing to discuss @dfn{dynamic linking}, because\nthe term is used to refer to two different concepts:\n\n@enumerate 1\n@item\nCompiling and linking a program against a shared library, which is\nresolved automatically at run time by the dynamic linker.  In this\nprocess, dynamic linking is transparent to the application.\n\n@item\nThe application calling functions such as @code{dlopen} that load\narbitrary, user-specified modules at runtime.  This type of dynamic\nlinking is explicitly controlled by the application.\n@end enumerate\n\nTo mitigate confusion, this manual refers to the second type of dynamic\nlinking as @dfn{dlopening} a module.\n\nThe main benefit to dlopening object modules is the ability to access\ncompiled object code to extend your program, rather than using an\ninterpreted language.  In fact, dlopen calls are frequently used in\nlanguage interpreters to provide an efficient way to extend the\nlanguage.\n\nLibtool provides support for dlopened modules.  However, you should\nindicate that your package is willing to use such support, by using the\n@code{LT_INIT} option @samp{dlopen} in @file{configure.ac}.  If this\noption is not given, libtool will assume no dlopening mechanism is\navailable, and will try to simulate it.\n\nThis chapter discusses how you as a dlopen application developer might\nuse libtool to generate dlopen-accessible modules.\n\n@menu\n* Building modules::            Creating dlopenable objects and libraries.\n* Dlpreopening::                Dlopening that works on static platforms.\n* Linking with dlopened modules::  Using dlopenable modules in libraries.\n* Finding the dlname::          Choosing the right file to @code{dlopen}.\n* Dlopen issues::               Unresolved problems that need your attention.\n@end menu\n\n@node Building modules\n@section Building modules to dlopen\n\nOn some operating systems, a program symbol must be specially declared\nin order to be dynamically resolved with the @code{dlsym} (or\nequivalent) function.  Libtool provides the @option{-export-dynamic} and\n@option{-module} link flags (@pxref{Link mode}), for you to make that\ndeclaration.  You need to use these flags if you are linking an\napplication program that dlopens other modules or a libtool library\nthat will also be dlopened.\n\nFor example, if we wanted to build a shared library, @file{hello},\nthat would later be dlopened by an application, we would add\n@option{-module} to the other link flags:\n\n@example\nburger$ @kbd{libtool --mode=link gcc -module -o hello.la foo.lo \\\n                hello.lo -rpath /usr/local/lib -lm}\nburger$\n@end example\n\nIf symbols from your @emph{executable} are needed to satisfy unresolved\nreferences in a library you want to dlopen you will have to use the flag\n@option{-export-dynamic}.  You should use @option{-export-dynamic} while\nlinking the executable that calls dlopen:\n\n@example\nburger$ @kbd{libtool --mode=link gcc -export-dynamic -o helldl main.o}\nburger$\n@end example\n\n@node Dlpreopening\n@section Dlpreopening\n\nLibtool provides special support for dlopening libtool object and\nlibtool library files, so that their symbols can be resolved\n@emph{even on platforms without any @code{dlopen} and @code{dlsym}\nfunctions}.\n\nConsider the following alternative ways of loading code into your\nprogram, in order of increasing ``laziness'':\n\n@enumerate 1\n@item\nLinking against object files that become part of the program executable,\nwhether or not they are referenced.  If an object file cannot be found,\nthen the compile time linker refuses to create the executable.\n\n@item\nDeclaring a static library to the linker, so that it is searched at link\ntime in order to satisfy any undefined references in the above object\nfiles.  If the static library cannot be found, then the compile time\nlinker refuses to create the executable.\n\n@item\nDeclaring a shared library to the runtime linker, so that it is searched\nat runtime in order to satisfy any undefined references in the above\nfiles.  If the shared library cannot be found, then the dynamic linker\naborts the program before it runs.\n\n@item\nDlopening a module, so that the application can resolve its own,\ndynamically-computed references.  If there is an error opening the\nmodule, or the module is not found, then the application can recover\nwithout crashing.\n@end enumerate\n\nLibtool emulates @option{-dlopen} on static platforms by linking objects\ninto the program at compile time, and creating data structures that\nrepresent the program's symbol table.  In order to use this feature,\nyou must declare the objects you want your application to dlopen by\nusing the @option{-dlopen} or @option{-dlpreopen} flags when you link your\nprogram (@pxref{Link mode}).\n\n@deftp {Data Type} {lt_dlsymlist} typedef struct @\n  @{ @w{const char *@var{name};} @w{void *@var{address};} @} lt_dlsymlist\nThe @var{name} attribute is a null-terminated character string of the\nsymbol name, such as @code{\"fprintf\"}.  The @var{address} attribute is a\ngeneric pointer to the appropriate object, such as @code{&fprintf}.\n@end deftp\n\n@deftypevar {const lt_dlsymlist } lt_preloaded_symbols[]\nAn array of @code{lt_dlsymlist} structures, representing all the preloaded\nsymbols linked into the program proper.  For each module\n@option{-dlpreopen}ed by the Libtool linked program\nthere is an element with the @var{name} of the module and an @var{address}\nof @code{0}, followed by all symbols exported from this file.\nFor the executable itself the special name @samp{@@PROGRAM@@} is used.\nThe last element of all has a @var{name} and @var{address} of\n@code{0}.\n\nTo facilitate inclusion of symbol lists into libraries,\n@code{lt_preloaded_symbols} is @samp{#define}d to a suitably unique name\nin @file{ltdl.h}.\n\nThis variable may not be declared @code{const} on some systems due to\nrelocation issues.\n@end deftypevar\n\nSome compilers may allow identifiers that are not valid in ANSI C, such\nas dollar signs.  Libtool only recognizes valid ANSI C symbols (an\ninitial ASCII letter or underscore, followed by zero or more ASCII\nletters, digits, and underscores), so non-ANSI symbols will not appear\nin @code{lt_preloaded_symbols}.\n\n@deftypefun int lt_dlpreload (const lt_dlsymlist *@var{preloaded})\nRegister the list of preloaded modules @var{preloaded}.\nIf @var{preloaded} is @code{NULL}, then all previously registered\nsymbol lists, except the list set by @code{lt_dlpreload_default},\nare deleted.  Return 0 on success.\n@end deftypefun\n\n@deftypefun int lt_dlpreload_default (const lt_dlsymlist *@var{preloaded})\nSet the default list of preloaded modules to @var{preloaded}, which\nwon't be deleted by @code{lt_dlpreload}.  Note that this function does\n@emph{not} require libltdl to be initialized using @code{lt_dlinit} and\ncan be used in the program to register the default preloaded modules.\nInstead of calling this function directly, most programs will use the\nmacro @code{LTDL_SET_PRELOADED_SYMBOLS}.\n\nReturn 0 on success.\n@end deftypefun\n\n@defmac LTDL_SET_PRELOADED_SYMBOLS\nSet the default list of preloaded symbols.\nShould be used in your program to initialize libltdl's\nlist of preloaded modules.\n\n@example\n#include <ltdl.h>\n\nint main() @{\n  /* ... */\n  LTDL_SET_PRELOADED_SYMBOLS();\n  /* ... */\n@}\n@end example\n@end defmac\n\n@deftypefn {Function Type} {int} lt_dlpreload_callback_func (lt_dlhandle @var{handle})\nFunctions of this type can be passed to @code{lt_dlpreload_open},\nwhich in turn will call back into a function thus passed for each\npreloaded module that it opens.\n@end deftypefn\n\n@deftypefun int lt_dlpreload_open (@w{const char *@var{originator},} @w{lt_dlpreload_callback_func *@var{func})}\nLoad all of the preloaded modules for @var{originator}.  For every\nmodule opened in this way, call @var{func}.\n\n@noindent\nTo open all of the modules preloaded into @file{libhell.la}\n(presumably from within the @file{libhell.a} initialisation code):\n\n@example\n#define preloaded_symbols lt_libhell_LTX_preloaded_symbols\n\nstatic int hell_preload_callback (lt_dlhandle handle);\n\nint\nhell_init (void)\n@{\n  @dots{}\n  if (lt_dlpreload (&preloaded_symbols) == 0)\n    @{\n      lt_dlpreload_open (\"libhell\", preload_callback);\n    @}\n  @dots{}\n@}\n@end example\n\n@noindent\nNote that to prevent clashes between multiple preloaded modules, the\npreloaded symbols are accessed via a mangled symbol name: to get the\nsymbols preloaded into @samp{libhell}, you must prefix\n@samp{preloaded_symbols} with @samp{lt_}; the originator name,\n@samp{libhell} in this case; and @samp{_LTX_}.  That is,\n@samp{lt_libhell_LTX_preloaded_symbols} here.\n@end deftypefun\n\n\n@node Linking with dlopened modules\n@section Linking with dlopened modules\n@cindex linking, dlopen\n@cindex linking, dlpreopen\n\nWhen, say, an interpreter application uses dlopened modules to extend\nthe list of methods it provides, an obvious abstraction for the\nmaintainers of the interpreter is to have all methods (including the\nbuilt in ones supplied with the interpreter) accessed through\ndlopen.  For one thing, the dlopening functionality will be tested\neven during routine invocations.  For another, only one subsystem has\nto be written for getting methods into the interpreter.\n\nThe downside of this abstraction is, of course, that environments that\nprovide only static linkage can't even load the intrinsic interpreter\nmethods.  Not so!  We can statically link those methods by\n@strong{dlpreopening} them.\n\nUnfortunately, since platforms such as AIX and cygwin require\nthat all library symbols must be resolved at compile time, the\ninterpreter maintainers will need to provide a library to both its own\ndlpreopened modules, and third-party modules loaded by dlopen.  In\nitself, that is not so bad, except that the interpreter too must\nprovide those same symbols otherwise it will be impossible to resolve\nall the symbols required by the modules as they are loaded.  Things\nare even worse if the code that loads the modules for the interpreter\nis itself in a library -- and that is usually the case for any\nnon-trivial application.  Modern platforms take care of this by\nautomatically loading all of a module's dependency libraries as the\nmodule is loaded (libltdl can do this even on platforms that can't do\nit by themselves).  In the end, this leads to problems with duplicated\nsymbols and prevents modules from loading, and prevents the\napplication from compiling when modules are preloaded.\n\n@example\n,-------------.    ,------------------.    ,-----------------.\n| Interpreter |---->     Module------------>   Third-party   |\n`-------------'    |     Loader       |    |Dlopened Modules |\n                   |        |         |    `-----------------'\n                   |,-------v--------.|             |\n                   ||  Dlpreopened   ||             |\n                   ||    Modules     ||             |\n                   |`----------------'|             |\n                   |        |         |             |\n                   |,-------v--------.|    ,--------v--------.\n                   ||Module Interface||    |Module Interface |\n                   ||    Library     ||    |     Library     |\n                   |`----------------'|    `-----------------'\n                   `------------------'\n@end example\n\nLibtool has the concept of @dfn{weak library interfaces} to circumvent\nthis problem.  Recall that the code that dlopens method-provider\nmodules for the interpreter application resides in a library: All of\nthe modules and the dlopener library itself should be linked against\nthe common library that resolves the module symbols at compile time.\nTo guard against duplicate symbol definitions, and for dlpreopened\nmodules to work at all in this scenario, the dlopener library must\ndeclare that it provides a weak library interface to the common\nsymbols in the library it shares with the modules.  That way, when\n@command{libtool} links the @strong{Module Loader} library with some\n@strong{Dlpreopened Modules} that were in turn linked against the\n@strong{Module Interface Library}, it knows that the @strong{Module\nLoader} provides an already loaded @strong{Module Interface Library}\nto resolve symbols for the @strong{Dlpreopened Modules}, and doesn't\nask the compiler driver to link an identical @strong{Module Interface\nLibrary} dependency library too.\n\nIn conjunction with Automake, the @file{Makefile.am} for the\n@strong{Module Loader} might look like this:\n\n@example\nlib_LTLIBRARIES = libinterface.la libloader.la\n\nlibinterface_la_SOURCES = interface.c interface.h\nlibinterface_la_LDFLAGS = -version-info 3:2:1\n\nlibloader_la_SOURCES    = loader.c\nlibloader_la_LDFLAGS    = -weak libinterface.la \\\n                          -version-info 3:2:1 \\\n                          -dlpreopen ../modules/intrinsics.la\nlibloader_la_LIBADD     = $(libinterface_la_OBJECTS)\n@end example\n\nAnd the @file{Makefile.am} for the @file{intrinsics.la} module in a\nsibling @file{modules} directory might look like this:\n\n@example\nAM_CPPFLAGS             = -I$(srcdir)/../libloader\nAM_LDFLAGS              = -no-undefined -module -avoid-version \\\n                          -export-dynamic\n\nnoinst_LTLIBRARIES      = intrinsics.la\n\nintrinsics_la_LIBADD    = ../libloader/libinterface.la\n\n../libloader/libinterface.la:\n        cd ../libloader && $(MAKE) $(AM_MAKEFLAGS) libinterface.la\n@end example\n\n@cindex @option{-weak} option\nFor a more complex example, see the sources of @file{libltdl} in the\nLibtool distribution, which is built with the help of the @option{-weak}\noption.\n\n\n@node Finding the dlname\n@section Finding the correct name to dlopen\n@cindex names of dynamic modules\n@cindex dynamic modules, names\n\nAfter a library has been linked with @option{-module}, it can be dlopened.\nUnfortunately, because of the variation in library names,\nyour package needs to determine the correct file to dlopen.\n\nThe most straightforward and flexible implementation is to determine the\nname at runtime, by finding the installed @file{.la} file, and searching\nit for the following lines:\n\n@example\n# The name that we can @code{dlopen}.\ndlname='@var{dlname}'\n@end example\n\nIf @var{dlname} is empty, then the library cannot be dlopened.\nOtherwise, it gives the dlname of the library.  So, if the library was\ninstalled as @file{/usr/local/lib/libhello.la}, and the @var{dlname} was\n@file{libhello.so.3}, then @file{/usr/local/lib/libhello.so.3} should be\ndlopened.\n\nIf your program uses this approach, then it should search the\ndirectories listed in the @code{LD_LIBRARY_PATH}@footnote{@code{LIBPATH}\non AIX, and @code{SHLIB_PATH} on HP-UX.} environment variable, as well as\nthe directory where libraries will eventually be installed.  Searching\nthis variable (or equivalent) will guarantee that your program can find\nits dlopened modules, even before installation, provided you have linked\nthem using libtool.\n\n@node Dlopen issues\n@section Unresolved dlopen issues\n@cindex pitfalls with dlopen\n@cindex dlopening, pitfalls\n@cindex trouble with dlopen\n\nThe following problems are not solved by using libtool's dlopen support:\n\n@itemize @bullet\n@item\nDlopen functions are generally only available on shared library\nplatforms.  If you want your package to be portable to static platforms,\nyou have to use either libltdl (@pxref{Using libltdl}) or develop your\nown alternatives to dlopening dynamic code.\nMost reasonable solutions involve writing wrapper functions for the\n@code{dlopen} family, which do package-specific tricks when dlopening\nis unsupported or not available on a given platform.\n\n@item\nThere are major differences in implementations of the @code{dlopen}\nfamily of functions.  Some platforms do not even use the same function\nnames (notably HP-UX, with its @code{shl_load} family).\n\n@item\nThe application developer must write a custom search function in order\nto discover the correct module filename to supply to @code{dlopen}.\n@end itemize\n\n@node Using libltdl\n@chapter Using libltdl\n@findex libltdl\n@findex dlopen\n@findex dlsym\n@findex dlclose\n@findex dlerror\n@findex shl_load\n@cindex dynamic linking, applications\n@cindex dlopening modules\n@cindex modules, dynamic\n@cindex application-level dynamic linking\n\nLibtool provides a small library, called @file{libltdl}, that aims at\nhiding the various difficulties of dlopening libraries from programmers.\nIt consists of a few headers and small C source files that can be\ndistributed with applications that need dlopening functionality.  On\nsome platforms, whose dynamic linkers are too limited for a simple\nimplementation of @file{libltdl} services, it requires GNU DLD, or it\nwill only emulate dynamic linking with libtool's dlpreopening mechanism.\n\n@noindent\nlibltdl supports currently the following dynamic linking mechanisms:\n\n@itemize @bullet\n@item\n@code{dlopen} (POSIX compliant systems, GNU/Linux, etc.)\n@item\n@code{shl_load} (HP-UX)\n@item\n@code{LoadLibrary} (Win16 and Win32)\n@item\n@code{load_add_on} (BeOS)\n@item\n@code{NSAddImage} or @code{NSLinkModule} (Darwin and Mac OS X)\n@item\nGNU DLD (emulates dynamic linking for static libraries)\n@item\nlibtool's dlpreopen (see @pxref{Dlpreopening})\n@end itemize\n\n@noindent\nlibltdl is licensed under the terms of the GNU Lesser General\nPublic License, with the following exception:\n\n@quotation\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include it under the same\ndistribution terms that you use for the rest of that program.\n@end quotation\n\n@menu\n* Libltdl interface::           How to use libltdl in your programs.\n* Modules for libltdl::         Creating modules that can be @code{dlopen}ed.\n* Thread Safety in libltdl::    Registering callbacks for multi-thread safety.\n* User defined module data::    Associating data with loaded modules.\n* Module loaders for libltdl::  Creating user defined module loaders.\n* Distributing libltdl::        How to distribute libltdl with your package.\n@end menu\n\n@node Libltdl interface\n@section How to use libltdl in your programs\n\n@noindent\nThe libltdl API is similar to the POSIX dlopen interface,\nwhich is very simple but powerful.\n\n@noindent\nTo use libltdl in your program you have to include the header file @file{ltdl.h}:\n\n@example\n#include <ltdl.h>\n@end example\n\n@noindent\nThe early releases of libltdl used some symbols that violated the\nPOSIX namespace conventions.  These symbols are now deprecated,\nand have been replaced by those described here.  If you have code that\nrelies on the old deprecated symbol names, defining\n@samp{LT_NON_POSIX_NAMESPACE} before you include @file{ltdl.h} provides\nconversion macros.  Whichever set of symbols you use, the new API is\nnot binary compatible with the last, so you will need to recompile\nyour application in order to use this version of libltdl.\n\n@noindent\nNote that libltdl is not well tested in a multithreaded environment,\nthough the intention is that it should work (@pxref{Thread Safety\nin libltdl, , Using libltdl in a multi threaded environment}).  It was\nreported that GNU/Linux's glibc 2.0's @code{dlopen} with\n@samp{RTLD_LAZY} (which libltdl uses by default) is not thread-safe,\nbut this problem is supposed to be fixed in glibc 2.1.  On the other\nhand, @samp{RTLD_NOW} was reported to introduce problems in\nmulti-threaded applications on FreeBSD@.  Working around these problems\nis left as an exercise for the reader; contributions are certainly\nwelcome.\n\n@noindent\nThe following macros are defined by including @file{ltdl.h}:\n\n@defmac LT_PATHSEP_CHAR\n@code{LT_PATHSEP_CHAR} is the system-dependent path separator,\nthat is, @samp{;} on Windows and @samp{:} everywhere else.\n@end defmac\n\n@defmac LT_DIRSEP_CHAR\nIf @code{LT_DIRSEP_CHAR} is defined, it can be used as directory\nseparator in addition to @samp{/}.  On Windows, this contains\n@samp{\\}.\n@end defmac\n\n\n@noindent\nThe following types are defined in @file{ltdl.h}:\n\n@deftp {Type} lt_dlhandle\n@code{lt_dlhandle} is a module ``handle''.\nEvery lt_dlopened module has a handle associated with it.\n@end deftp\n\n@deftp {Type} lt_dladvise\n@code{lt_dladvise} is used to control optional module loading modes.\nIf it is not used, the default mode of the underlying system module\nloader is used.\n@end deftp\n\n@deftp {Type} lt_dlsymlist\n@code{lt_dlsymlist} is a symbol list for dlpreopened modules.\nThis structure is described in @pxref{Dlpreopening}.\n@end deftp\n\n@page\n@noindent\nlibltdl provides the following functions:\n\n@deftypefun int lt_dlinit (void)\nInitialize libltdl.\nThis function must be called before using libltdl\nand may be called several times.\nReturn 0 on success, otherwise the number of errors.\n@end deftypefun\n\n@deftypefun int lt_dlexit (void)\nShut down libltdl and close all modules.\nThis function will only then shut down libltdl when it was called as\nmany times as @code{lt_dlinit} has been successfully called.\nReturn 0 on success, otherwise the number of errors.\n@end deftypefun\n\n@deftypefun lt_dlhandle lt_dlopen (const char *@var{filename})\nOpen the module with the file name @var{filename} and return a\nhandle for it.  @code{lt_dlopen} is able to open libtool dynamic\nmodules, preloaded static modules, the program itself and\nnative dynamic modules@footnote{Some platforms, notably Mac OS X,\ndifferentiate between a runtime library that cannot be opened by\n@code{lt_dlopen} and a dynamic module that can.  For maximum\nportability you should try to ensure that you only pass\n@code{lt_dlopen} objects that have been compiled with libtool's\n@option{-module} flag.}.\n\nUnresolved symbols in the module are resolved using its dependency\nlibraries and previously dlopened modules.  If the executable using\nthis module was linked with the @option{-export-dynamic} flag, then the\nglobal symbols in the executable will also be used to resolve\nreferences in the module.\n\nIf @var{filename} is @code{NULL} and the program was linked with\n@option{-export-dynamic} or @option{-dlopen self}, @code{lt_dlopen} will\nreturn a handle for the program itself, which can be used to access its\nsymbols.\n\nIf libltdl cannot find the library and the file name @var{filename} does\nnot have a directory component it will additionally look in the\nfollowing search paths for the module (in the following order):\n\n@enumerate 1\n@item user-defined search path:\nThis search path can be changed by the program using the\nfunctions @code{lt_dlsetsearchpath}, @code{lt_dladdsearchdir} and\n@code{lt_dlinsertsearchdir}.\n\n@item libltdl's search path:\nThis search path is the value of the environment variable\n@env{LTDL_LIBRARY_PATH}.\n\n@item system library search path:\nThe system dependent library search path\n(e.g.@: on GNU/Linux it is @env{LD_LIBRARY_PATH}).\n@end enumerate\n\nEach search path must be a list of absolute directories separated by\n@code{LT_PATHSEP_CHAR}, for example, @code{\"/usr/lib/mypkg:/lib/foo\"}.\nThe directory names may not contain the path separator.\n\nIf the same module is loaded several times, the same handle is returned.\nIf @code{lt_dlopen} fails for any reason, it returns @code{NULL}.\n@end deftypefun\n\n@deftypefun lt_dlhandle lt_dlopenext (const char *@var{filename})\nThe same as @code{lt_dlopen}, except that it tries to append\ndifferent file name extensions to the file name.\nIf the file with the file name @var{filename} cannot be found\nlibltdl tries to append the following extensions:\n\n@enumerate 1\n@item the libtool archive extension @file{.la}\n@item the extension used for native dynamically loadable modules on the host platform, e.g., @file{.so}, @file{.sl}, etc.\n@end enumerate\n\nThis lookup strategy was designed to allow programs that don't\nhave knowledge about native dynamic libraries naming conventions\nto be able to @code{dlopen} such libraries as well as libtool modules\ntransparently.\n@end deftypefun\n\n@deftypefun lt_dlhandle lt_dlopenadvise (const char *@var{filename}, @w{lt_dladvise @var{advise}})\nThe same as @code{lt_dlopen}, except that it also requires an additional\nargument which may contain additional hints to the underlying system\nmodule loader.  The @var{advise} parameter is opaque and can only be\naccessed with the functions documented below.\n\nNote that this function does not change the content of @var{advise}, so\nunlike the other calls in this API takes a direct @code{lt_dladvise}\ntype, and not a pointer to the same.\n@end deftypefun\n\n@deftypefun int lt_dladvise_init (lt_dladvise *@var{advise})\nThe @var{advise} parameter can be used to pass hints to the module\nloader when using @code{lt_dlopenadvise} to perform the loading.\nThe @var{advise} parameter needs to be initialised by this function\nbefore it can be used.  Any memory used by @var{advise} needs to be\nrecycled with @code{lt_dladvise_destroy} when it is no longer needed.\n\nOn failure, @code{lt_dladvise_init} returns non-zero and sets an error\nmessage that can be retrieved with @code{lt_dlerror}.\n@end deftypefun\n\n@deftypefun int lt_dladvise_destroy (lt_dladvise *@var{advise})\nRecycle the memory used by @var{advise}.  For an example, see the\ndocumentation for @code{lt_dladvise_ext}.\n\nOn failure, @code{lt_dladvise_destroy} returns non-zero and sets an error\nmessage that can be retrieved with @code{lt_dlerror}.\n@end deftypefun\n\n@deftypefun int lt_dladvise_ext (lt_dladvise *@var{advise})\nSet the @code{ext} hint on @var{advise}.  Passing an @var{advise}\nparameter to @code{lt_dlopenadvise} with this hint set causes it to\ntry to append different file name extensions like @code{lt_dlopenext}.\n\nThe following example is equivalent to calling\n@code{lt_dlopenext (filename)}:\n\n@example\nlt_dlhandle\nmy_dlopenext (const char *filename)\n@{\n  lt_dlhandle handle = 0;\n  lt_dladvise advise;\n\n  if (!lt_dladvise_init (&advise) && !lt_dladvise_ext (&advise))\n    handle = lt_dlopenadvise (filename, advise);\n\n  lt_dladvise_destroy (&advise);\n\n  return handle;\n@}\n@end example\n\nOn failure, @code{lt_dladvise_ext} returns non-zero and sets an error\nmessage that can be retrieved with @code{lt_dlerror}.\n@end deftypefun\n\n@deftypefun int lt_dladvise_global (lt_dladvise *@var{advise})\nSet the @code{symglobal} hint on @var{advise}.  Passing an @var{advise}\nparameter to @code{lt_dlopenadvise} with this hint set causes it to try\nto make the loaded module's symbols globally available for resolving\nunresolved symbols in subsequently loaded modules.\n\nIf neither the @code{symglobal} nor the @code{symlocal} hints are set,\nor if a module is loaded without using the @code{lt_dlopenadvise} call\nin any case, then the visibility of the module's symbols will be as per\nthe default for the underlying module loader and OS.  Even if a\nsuitable hint is passed, not all loaders are able to act upon it in\nwhich case @code{lt_dlgetinfo} will reveal whether the hint was actually\nfollowed.\n\nOn failure, @code{lt_dladvise_global} returns non-zero and sets an error\nmessage that can be retrieved with @code{lt_dlerror}.\n@end deftypefun\n\n@deftypefun int lt_dladvise_local (lt_dladvise *@var{advise})\nSet the @code{symlocal} hint on @var{advise}.  Passing an @var{advise}\nparameter to @code{lt_dlopenadvise} with this hint set causes it to try\nto keep the loaded module's symbols hidden so that they are not\nvisible to subsequently loaded modules.\n\nIf neither the @code{symglobal} nor the @code{symlocal} hints are set,\nor if a module is loaded without using the @code{lt_dlopenadvise} call\nin any case, then the visibility of the module's symbols will be as per\nthe default for the underlying module loader and OS.  Even if a\nsuitable hint is passed, not all loaders are able to act upon it in\nwhich case @code{lt_dlgetinfo} will reveal whether the hint was actually\nfollowed.\n\nOn failure, @code{lt_dladvise_local} returns non-zero and sets an error\nmessage that can be retrieved with @code{lt_dlerror}.\n@end deftypefun\n\n@deftypefun int lt_dladvise_resident (lt_dladvise *@var{advise})\nSet the @code{resident} hint on @var{advise}.  Passing an @var{advise}\nparameter to @code{lt_dlopenadvise} with this hint set causes it to try\nto make the loaded module resident in memory, so that it cannot be\nunloaded with a later call to @code{lt_dlclose}.\n\nOn failure, @code{lt_dladvise_resident} returns non-zero and sets an error\nmessage that can be retrieved with @code{lt_dlerror}.\n@end deftypefun\n\n@deftypefun int lt_dladvise_preload (lt_dladvise *@var{advise})\nSet the @code{preload} hint on @var{advise}.  Passing an @var{advise}\nparameter to @code{lt_dlopenadvise} with this hint set causes it to\nload only preloaded modules, so that if a suitable preloaded module is\nnot found, @code{lt_dlopenadvise} will return @code{NULL}.\n@end deftypefun\n\n@deftypefun int lt_dlclose (lt_dlhandle @var{handle})\nDecrement the reference count on the module @var{handle}.\nIf it drops to zero and no other module depends on this module,\nthen the module is unloaded.\nReturn 0 on success.\n@end deftypefun\n\n@deftypefun {void *} lt_dlsym (lt_dlhandle @var{handle}, const char *@var{name})\nReturn the address in the module @var{handle}, where the symbol given\nby the null-terminated string @var{name} is loaded.\nIf the symbol cannot be found, @code{NULL} is returned.\n@end deftypefun\n\n@deftypefun {const char *} lt_dlerror (void)\nReturn a human readable string describing the most\nrecent error that occurred from any of libltdl's functions.\nReturn @code{NULL} if no errors have occurred since initialization\nor since it was last called.\n@end deftypefun\n\n@deftypefun int lt_dladdsearchdir (const char *@var{search_dir})\nAppend the search directory @var{search_dir} to the current user-defined\nlibrary search path.  Return 0 on success.\n@end deftypefun\n\n@deftypefun int lt_dlinsertsearchdir (@w{const char *@var{before}}, @w{const char *@var{search_dir}})\nInsert the search directory @var{search_dir} into the user-defined library\nsearch path, immediately before the element starting at address\n@var{before}.  If @var{before} is @samp{NULL}, then @var{search_dir} is\nappending as if @code{lt_dladdsearchdir} had been called.  Return 0 on success.\n@end deftypefun\n\n@deftypefun int lt_dlsetsearchpath (const char *@var{search_path})\nReplace the current user-defined library search path with\n@var{search_path}, which must be a list of absolute directories separated\nby @code{LT_PATHSEP_CHAR}.  Return 0 on success.\n@end deftypefun\n\n@deftypefun {const char *} lt_dlgetsearchpath (void)\nReturn the current user-defined library search path.\n@end deftypefun\n\n@deftypefun int lt_dlforeachfile (@w{const char *@var{search_path}}, @w{int (*@var{func}) (const char *@var{filename}, void * @var{data})}, @w{void * @var{data}})\nIn some applications you may not want to load individual modules with\nknown names, but rather find all of the modules in a set of\ndirectories and load them all during initialisation.  With this function\nyou can have libltdl scan the @code{LT_PATHSEP_CHAR}-delimited directory list\nin @var{search_path} for candidates, and pass them, along with\n@var{data} to your own callback function, @var{func}.  If @var{search_path} is\n@samp{NULL}, then search all of the standard locations that\n@code{lt_dlopen} would examine.  This function will continue to make\ncalls to @var{func} for each file that it discovers in @var{search_path}\nuntil one of these calls returns non-zero, or until the files are\nexhausted.  @samp{lt_dlforeachfile} returns the value returned by the last\ncall made to @var{func}.\n\nFor example you could define @var{func} to build an ordered\n@dfn{argv}-like vector of files using @var{data} to hold the address of\nthe start of the vector.\n@end deftypefun\n\n@deftypefun int lt_dlmakeresident (lt_dlhandle @var{handle})\nMark a module so that it cannot be @samp{lt_dlclose}d.  This can be\nuseful if a module implements some core functionality in your project\nthat would cause your code to crash if removed.  Return 0 on success.\n\nIf you use @samp{lt_dlopen (NULL)} to get a @var{handle} for the running\nbinary, that handle will always be marked as resident, and consequently\ncannot be successfully @samp{lt_dlclose}d.\n@end deftypefun\n\n@deftypefun int lt_dlisresident (lt_dlhandle @var{handle})\nCheck whether a particular module has been marked as resident, returning 1\nif it has or 0 otherwise.  If there is an error while executing this\nfunction, return -1 and set an error message for retrieval with\n@code{lt_dlerror}.\n@end deftypefun\n\n@node Modules for libltdl\n@section Creating modules that can be @code{dlopen}ed\n\nLibtool modules are created like normal libtool libraries with a few\nexceptions:\n\nYou have to link the module with libtool's @option{-module} switch,\nand you should link any program that is intended to dlopen the module with\n@option{-dlopen @var{modulename.la}} where possible, so that libtool can\ndlpreopen the module on platforms that do not support dlopening.  If\nthe module depends on any other libraries, make sure you specify them\neither when you link the module or when you link programs that dlopen it.\nIf you want to disable versioning (@pxref{Versioning}) for a specific module\nyou should link it with the @option{-avoid-version} switch.\nNote that libtool modules don't need to have a \"lib\" prefix.\nHowever, Automake 1.4 or higher is required to build such modules.\n\nUsually a set of modules provide the same interface, i.e.@: exports the same\nsymbols, so that a program can dlopen them without having to know more\nabout their internals: In order to avoid symbol conflicts all exported\nsymbols must be prefixed with \"modulename_LTX_\" (@var{modulename} is\nthe name of the module).  Internal symbols must be named in such a way\nthat they won't conflict with other modules, for example, by prefixing\nthem with \"_modulename_\".  Although some platforms support having the\nsame symbols defined more than once it is generally not portable and\nit makes it impossible to dlpreopen such modules.\n\nlibltdl will automatically cut the prefix off to get the real name of\nthe symbol.  Additionally, it supports modules that do not use a\nprefix so that you can also dlopen non-libtool modules.\n\n@file{foo1.c} gives an example of a portable libtool module.\nExported symbols are prefixed with \"foo1_LTX_\", internal symbols\nwith \"_foo1_\".  Aliases are defined at the beginning so that the code\nis more readable.\n\n@example\n/* aliases for the exported symbols */\n#define foo  foo1_LTX_foo\n#define bar  foo1_LTX_bar\n\n/* a global variable definition */\nint bar = 1;\n\n/* a private function */\nint _foo1_helper() @{\n  return bar;\n@}\n\n/* an exported function */\nint foo() @{\n  return _foo1_helper();\n@}\n@end example\n\n@noindent\nThe @file{Makefile.am} contains the necessary rules to build the\nmodule @file{foo1.la}:\n\n@example\n...\nlib_LTLIBRARIES = foo1.la\n\nfoo1_la_SOURCES = foo1.c\nfoo1_la_LDFLAGS = -module\n...\n@end example\n\n\n@node Thread Safety in libltdl\n@section Using libltdl in a multi threaded environment\n\nLibltdl provides a wrapper around whatever dynamic run-time object\nloading mechanisms are provided by the host system, many of which are\nthemselves not thread safe.  Consequently libltdl cannot itself be\nconsistently thread safe.\n\nIf you wish to use libltdl in a multithreaded environment, then you\nmust mutex lock around libltdl calls, since they may in turn be calling\nnon-thread-safe system calls on some target hosts.\n\nSome old releases of libtool provided a mutex locking API that\nwas unusable with POSIX threads, so callers were forced to lock around\nall libltdl API calls anyway.  That mutex locking API was\nnext to useless, and is not present in current releases.\n\nSome future release of libtool may provide a new POSIX thread\ncompliant mutex locking API.\n\n@node User defined module data\n@section Data associated with loaded modules\n\nSome of the internal information about each loaded module that is\nmaintained by libltdl is available to the user, in the form of this\nstructure:\n\n@deftypefn {Type} {struct} lt_dlinfo @{ @w{char *@var{filename};} @\n  @w{char *@var{name};} @w{int @var{ref_count};} @\n  @w{int @var{is_resident};} @w{int @var{is_symglobal};} @\n  @w{int @var{is_symlocal};}@}\n@code{lt_dlinfo} is used to store information about a module.\nThe @var{filename} attribute is a null-terminated character string of\nthe real module file name.  If the module is a libtool module then\n@var{name} is its module name (e.g.@: @code{\"libfoo\"} for\n@code{\"dir/libfoo.la\"}), otherwise it is set to @code{NULL}.  The\n@var{ref_count} attribute is a reference counter that describes how\noften the same module is currently loaded. The remaining fields can\nbe compared to any hints that were passed to @code{lt_dlopenadvise}\nto determine whether the underlying loader was able to follow them.\n@end deftypefn\n\nThe following function will return a pointer to libltdl's internal copy\nof this structure for the given @var{handle}:\n\n@deftypefun {const lt_dlinfo *} lt_dlgetinfo (@w{lt_dlhandle @var{handle}})\nReturn a pointer to a struct that contains some information about\nthe module @var{handle}.  The contents of the struct must not be modified.\nReturn @code{NULL} on failure.\n@end deftypefun\n\nFurthermore, in order to save you from having to keep a list of the\nhandles of all the modules you have loaded, these functions allow you to\niterate over libltdl's list of loaded modules:\n\n@deftp {Type} lt_dlinterface_id\nThe opaque type used to hold the module interface details for each\nregistered libltdl client.\n@end deftp\n\n@deftypefn {Type} int lt_dlhandle_interface (@w{lt_dlhandle @var{handle},} @\n  @w{const char *@var{id_string}})\nFunctions of this type are called to check that a handle conforms to a\nlibrary's expected module interface when iterating over the global\nhandle list.  You should be careful to write a callback function of\nthis type that can correctly identify modules that belong to this\nclient, both to prevent other clients from accidentally finding your\nloaded modules with the iterator functions below, and vice versa.  The\nbest way to do this is to check that module @var{handle} conforms\nto the interface specification of your loader using @code{lt_dlsym}.\n\nThe callback may be given @strong{every} module loaded by all the\nlibltdl module clients in the current address space, including any\nmodules loaded by other libraries such as libltdl itself, and should\nreturn non-zero if that module does not fulfill the interface\nrequirements of your loader.\n\n@example\nint\nmy_interface_cb (lt_dlhandle handle, const char *id_string)\n@{\n  char *(*module_id) (void) = NULL;\n\n  /* @r{A valid my_module must provide all of these symbols.}  */\n  if (!((module_id = (char*(*)(void)) lt_dlsym (\"module_version\"))\n        && lt_dlsym (\"my_module_entrypoint\")))\n      return 1;\n\n  if (strcmp (id_string, module_id()) != 0)\n      return 1;\n\n  return 0;\n@}\n@end example\n@end deftypefn\n\n@deftypefun lt_dlinterface_id lt_dlinterface_register @\n  (@w{const char *@var{id_string}}, @w{lt_dlhandle_interface *@var{iface}})\nUse this function to register your interface validator with libltdl,\nand in return obtain a unique key to store and retrieve per-module data.\nYou supply an @var{id_string} and @var{iface} so that the resulting\n@code{lt_dlinterface_id} can be used to filter the module handles\nreturned by the iteration functions below.  If @var{iface} is @code{NULL},\nall modules will be matched.\n@end deftypefun\n\n@deftypefun void lt_dlinterface_free (@w{lt_dlinterface_id @var{iface}})\nRelease the data associated with @var{iface}.\n@end deftypefun\n\n@deftypefun int lt_dlhandle_map (@w{lt_dlinterface_id @var{iface}}, @\n  @w{int (*@var{func}) (lt_dlhandle @var{handle}, void * @var{data})}, @\n  @w{void * @var{data}})\nFor each module that matches @var{iface}, call the function\n@var{func}.  When writing the @var{func} callback function, the\nargument @var{handle} is the handle of a loaded module, and\n@var{data} is the last argument passed to @code{lt_dlhandle_map}. As\nsoon as @var{func} returns a non-zero value for one of the handles,\n@code{lt_dlhandle_map} will stop calling @var{func} and immediately\nreturn that non-zero value.  Otherwise 0 is eventually returned when\n@var{func} has been successfully called for all matching modules.\n@end deftypefun\n\n@deftypefun lt_dlhandle lt_dlhandle_iterate (@w{lt_dlinterface_id @\n  @var{iface}}, @w{lt_dlhandle @var{place}})\nIterate over the module handles loaded by @var{iface}, returning the\nfirst matching handle in the list if @var{place} is @code{NULL}, and\nthe next one on subsequent calls.  If @var{place} is the last element\nin the list of eligible modules, this function returns @code{NULL}.\n\n@example\nlt_dlhandle handle = 0;\nlt_dlinterface_id iface = my_interface_id;\n\nwhile ((handle = lt_dlhandle_iterate (iface, handle)))\n  @{\n    @dots{}\n  @}\n@end example\n@end deftypefun\n\n@deftypefun lt_dlhandle lt_dlhandle_fetch (@w{lt_dlinterface_id @var{iface}}, @w{const char *@var{module_name}})\nSearch through the module handles loaded by @var{iface} for a module named\n@var{module_name}, returning its handle if found or else @code{NULL}\nif no such named module has been loaded by @var{iface}.\n@end deftypefun\n\nHowever, you might still need to maintain your own list of loaded\nmodule handles (in parallel with the list maintained inside libltdl)\nif there were any other data that your application wanted to associate\nwith each open module.  Instead, you can use the following API\ncalls to do that for you.  You must first obtain a unique interface id\nfrom libltdl as described above, and subsequently always use it to\nretrieve the data you stored earlier.  This allows different libraries\nto each store their own data against loaded modules, without\ninterfering with one another.\n\n@deftypefun {void *} lt_dlcaller_set_data (@w{lt_dlinterface_id @var{key}}, @w{lt_dlhandle @var{handle}}, @w{void * @var{data}})\nSet @var{data} as the set of data uniquely associated with @var{key} and\n@var{handle} for later retrieval.  This function returns the @var{data}\npreviously associated with @var{key} and @var{handle} if any.  A result of\n0, may indicate that a diagnostic for the last error (if any) is available\nfrom @code{lt_dlerror()}.\n\nFor example, to correctly remove some associated data:\n\n@example\nvoid *stale = lt_dlcaller_set_data (key, handle, 0);\nif (stale != NULL)\n  @{\n    free (stale);\n  @}\nelse\n  @{\n    char *error_msg = lt_dlerror ();\n\n    if (error_msg != NULL)\n      @{\n        my_error_handler (error_msg);\n        return STATUS_FAILED;\n      @}\n  @}\n@end example\n@end deftypefun\n\n@deftypefun {void *} lt_dlcaller_get_data (@w{lt_dlinterface_id @var{key}}, @w{lt_dlhandle @var{handle}})\nReturn the address of the data associated with @var{key} and\n@var{handle}, or else @code{NULL} if there is none.\n@end deftypefun\n\nOld versions of libltdl also provided a simpler, but similar, API\nbased around @code{lt_dlcaller_id}.  Unfortunately, it had no\nprovision for detecting whether a module belonged to a particular\ninterface as libltdl didn't support multiple loaders in the same\naddress space at that time.  Those APIs are no longer supported\nas there would be no way to stop clients of the old APIs from\nseeing (and accidentally altering) modules loaded by other libraries.\n\n\n@node Module loaders for libltdl\n@section How to create and register new module loaders\n\nSometimes libltdl's many ways of gaining access to modules are not\nsufficient for the purposes of a project.  You can write your own\nloader, and register it with libltdl so that @code{lt_dlopen} will be\nable to use it.\n\nWriting a loader involves writing at least three functions that can be\ncalled by @code{lt_dlopen}, @code{lt_dlsym} and @code{lt_dlclose}.\nOptionally, you can provide a finalisation function to perform any\ncleanup operations when @code{lt_dlexit} executes, and a symbol prefix\nstring that will be prepended to any symbols passed to @code{lt_dlsym}.\nThese functions must match the function pointer types below, after\nwhich they can be allocated to an instance of @code{lt_user_dlloader}\nand registered.\n\nRegistering the loader requires that you choose a name for it, so that it\ncan be recognised by @code{lt_dlloader_find} and removed with\n@code{lt_dlloader_remove}.  The name you choose must be unique, and not\nalready in use by libltdl's builtin loaders:\n\n@table @asis\n@item \"dlopen\"\nThe system dynamic library loader, if one exists.\n@item \"dld\"\nThe GNU dld loader, if @file{libdld} was installed when libltdl was\nbuilt.\n@item \"dlpreload\"\nThe loader for @code{lt_dlopen}ing of preloaded static modules.\n@end table\n\nThe prefix \"dl\" is reserved for loaders supplied with future versions of\nlibltdl, so you should not use that for your own loader names.\n\n@noindent\nThe following types are defined in @file{ltdl.h}:\n\n@deftp {Type} lt_module\n@code{lt_module} is a dlloader dependent module.\nThe dynamic module loader extensions communicate using these low\nlevel types.\n@end deftp\n\n@deftp {Type} lt_dlloader\n@code{lt_dlloader} is a handle for module loader types.\n@end deftp\n\n@deftp {Type} lt_user_data\n@code{lt_user_data} is used for specifying loader instance data.\n@end deftp\n\n@deftypefn {Type} {struct} lt_user_dlloader @{@w{const char *@var{sym_prefix};} @w{lt_module_open *@var{module_open};} @w{lt_module_close *@var{module_close};} @w{lt_find_sym *@var{find_sym};} @w{lt_dlloader_exit *@var{dlloader_exit};} @}\nIf you want to define a new way to open dynamic modules, and have the\n@code{lt_dlopen} API use it, you need to instantiate one of these\nstructures and pass it to @code{lt_dlloader_add}.  You can pass whatever\nyou like in the @var{dlloader_data} field, and it will be passed back as\nthe value of the first parameter to each of the functions specified in\nthe function pointer fields.\n@end deftypefn\n\n@deftypefn {Type} lt_module lt_module_open (@w{const char *@var{filename}})\nThe type of the loader function for an @code{lt_dlloader} module\nloader.  The value set in the dlloader_data field of the @code{struct\nlt_user_dlloader} structure will be passed into this function in the\n@var{loader_data} parameter.  Implementation of such a function should\nattempt to load the named module, and return an @code{lt_module}\nsuitable for passing in to the associated @code{lt_module_close} and\n@code{lt_sym_find} function pointers.  If the function fails it should\nreturn @code{NULL}, and set the error message with @code{lt_dlseterror}.\n@end deftypefn\n\n@deftypefn {Type} int lt_module_close (@w{lt_user_data @var{loader_data},} @w{lt_module @var{module}})\nThe type of the unloader function for a user defined module loader.\nImplementation of such a function should attempt to release\nany resources tied up by the @var{module} module, and then unload it\nfrom memory.  If the function fails for some reason, set the error\nmessage with @code{lt_dlseterror} and return non-zero.\n@end deftypefn\n\n@deftypefn {Type} {void *} lt_find_sym (@w{lt_module @var{module},} @w{const char *@var{symbol}})\nThe type of the symbol lookup function for a user defined module loader.\nImplementation of such a function should return the address of the named\n@var{symbol} in the module @var{module}, or else set the error message\nwith @code{lt_dlseterror} and return @code{NULL} if lookup fails.\n@end deftypefn\n\n@deftypefn {Type} int lt_dlloader_exit (@w{lt_user_data @var{loader_data}})\nThe type of the finalisation function for a user defined module loader.\nImplementation of such a function should free any resources associated\nwith the loader, including any user specified data in the\n@code{dlloader_data} field of the @code{lt_user_dlloader}.  If non-@code{NULL},\nthe function will be called by @code{lt_dlexit}, and\n@code{lt_dlloader_remove}.\n@end deftypefn\n\nFor example:\n\n@example\nint\nregister_myloader (void)\n@{\n  lt_user_dlloader dlloader;\n\n  /* User modules are responsible for their own initialisation. */\n  if (myloader_init () != 0)\n    return MYLOADER_INIT_ERROR;\n\n  dlloader.sym_prefix    = NULL;\n  dlloader.module_open   = myloader_open;\n  dlloader.module_close  = myloader_close;\n  dlloader.find_sym      = myloader_find_sym;\n  dlloader.dlloader_exit = myloader_exit;\n  dlloader.dlloader_data = (lt_user_data)myloader_function;\n\n  /* Add my loader as the default module loader. */\n  if (lt_dlloader_add (lt_dlloader_next (NULL), &dlloader,\n                       \"myloader\") != 0)\n    return ERROR;\n\n  return OK;\n@}\n@end example\n\nNote that if there is any initialisation required for the loader,\nit must be performed manually before the loader is registered --\nlibltdl doesn't handle user loader initialisation.\n\nFinalisation @emph{is} handled by libltdl however, and it is important\nto ensure the @code{dlloader_exit} callback releases any resources claimed\nduring the initialisation phase.\n\n@page\n@noindent\nlibltdl provides the following functions for writing your own module\nloaders:\n\n@deftypefun int lt_dlloader_add (@w{lt_dlloader *@var{place},} @\n  @w{lt_user_dlloader *@var{dlloader},} @w{const char *@var{loader_name}})\nAdd a new module loader to the list of all loaders, either as the\nlast loader (if @var{place} is @code{NULL}), else immediately before the\nloader passed as @var{place}.  @var{loader_name} will be returned by\n@code{lt_dlloader_name} if it is subsequently passed a newly\nregistered loader.  These @var{loader_name}s must be unique, or\n@code{lt_dlloader_remove} and @code{lt_dlloader_find} cannot\nwork.  Returns 0 for success.\n\n@example\n/* Make myloader be the last one. */\nif (lt_dlloader_add (NULL, myloader) != 0)\n  perror (lt_dlerror ());\n@end example\n@end deftypefun\n\n@deftypefun int lt_dlloader_remove (@w{const char *@var{loader_name}})\nRemove the loader identified by the unique name, @var{loader_name}.\nBefore this can succeed, all modules opened by the named loader must\nhave been closed.  Returns 0 for success, otherwise an error message can\nbe obtained from @code{lt_dlerror}.\n\n@example\n/* Remove myloader. */\nif (lt_dlloader_remove (\"myloader\") != 0)\n  perror (lt_dlerror ());\n@end example\n@end deftypefun\n\n@deftypefun {lt_dlloader *} lt_dlloader_next (@w{lt_dlloader *@var{place}})\nIterate over the module loaders, returning the first loader if @var{place} is\n@code{NULL}, and the next one on subsequent calls.  The handle is for use with\n@code{lt_dlloader_add}.\n\n@example\n/* Make myloader be the first one. */\nif (lt_dlloader_add (lt_dlloader_next (NULL), myloader) != 0)\n  return ERROR;\n@end example\n@end deftypefun\n\n@deftypefun {lt_dlloader *} lt_dlloader_find (@w{const char *@var{loader_name}})\nReturn the first loader with a matching @var{loader_name} identifier, or else\n@code{NULL}, if the identifier is not found.\n\nThe identifiers that may be used by libltdl itself, if the host\narchitecture supports them are @dfn{dlopen}@footnote{This is used for\nthe host dependent module loading API -- @code{shl_load} and\n@code{LoadLibrary} for example}, @dfn{dld} and @dfn{dlpreload}.\n\n@example\n/* Add a user loader as the next module loader to be tried if\n   the standard dlopen loader were to fail when lt_dlopening. */\nif (lt_dlloader_add (lt_dlloader_find (\"dlopen\"), myloader) != 0)\n  return ERROR;\n@end example\n@end deftypefun\n\n@deftypefun {const char *} lt_dlloader_name (@w{lt_dlloader *@var{place}})\nReturn the identifying name of @var{place}, as obtained from\n@code{lt_dlloader_next} or @code{lt_dlloader_find}.  If this function fails,\nit will return @code{NULL} and set an error for retrieval with\n@code{lt_dlerror}.\n@end deftypefun\n\n@deftypefun {lt_user_data *} lt_dlloader_data (@w{lt_dlloader *@var{place}})\nReturn the address of the @code{dlloader_data} of @var{place}, as\nobtained from @code{lt_dlloader_next} or @code{lt_dlloader_find}.  If\nthis function fails, it will return @code{NULL} and set an error for\nretrieval with @code{lt_dlerror}.\n@end deftypefun\n\n@subsection Error handling within user module loaders\n\n@deftypefun int lt_dladderror (@w{const char *@var{diagnostic}})\nThis function allows you to integrate your own error messages into\n@code{lt_dlerror}.  Pass in a suitable diagnostic message for return by\n@code{lt_dlerror}, and an error identifier for use with\n@code{lt_dlseterror} is returned.\n\nIf the allocation of an identifier fails, this function returns -1.\n\n@example\nint myerror = lt_dladderror (\"Doh!\");\nif (myerror < 0)\n  perror (lt_dlerror ());\n@end example\n@end deftypefun\n\n@deftypefun int lt_dlseterror (@w{int @var{errorcode}})\nWhen writing your own module loaders, you should use this function to\nraise errors so that they are propagated through the @code{lt_dlerror}\ninterface.  All of the standard errors used by libltdl are declared in\n@file{ltdl.h}, or you can add more of your own with\n@code{lt_dladderror}.  This function returns 0 on success.\n\n@example\nif (lt_dlseterror (LTDL_ERROR_NO_MEMORY) != 0)\n  perror (lt_dlerror ());\n@end example\n@end deftypefun\n\n@node Distributing libltdl\n@section How to distribute libltdl with your package\n\nEven though libltdl is installed together with libtool, you may wish\nto include libltdl in the distribution of your package, for the\nconvenience of users of your package that don't have libtool or\nlibltdl installed, or if you are using features of a very new version\nof libltdl that you don't expect your users to have yet.  In such\ncases, you must decide which flavor of libltdl you want to use: a\nconvenience library or an installable libtool library.\n\nThe most simplistic way to add @code{libltdl} to your package is to\ncopy all the @file{libltdl} source files to a subdirectory within\nyour package and to build and link them along with the rest of your\nsources.  To help you do this, the m4 macros for Autoconf are\navailable in @file{ltdl.m4}.  You must ensure that they are available\nin @file{aclocal.m4} before you run Autoconf@footnote{@c\n@c\nWe used to recommend adding the contents of @file{ltdl.m4} to\n@file{acinclude.m4}, but with @command{aclocal} from a modern\nAutomake (1.8 or newer) and this release of libltdl that is not only\nunnecessary but makes it easy to forget to upgrade @file{acinclude.m4}\nif you move to a different release of libltdl.\n@c\n}.  Having made the macros available, you must add a call to the\n@samp{LTDL_INIT} macro (after the call to @samp{LT_INIT})\nto your package's @file{configure.ac} to\nperform the configure time checks required to build the library\ncorrectly.  Unfortunately, this method has problems if you then try to\nlink the package binaries with an installed libltdl, or a library that\ndepends on libltdl, because of the duplicate symbol definitions.  For\nexample, ultimately linking against two different versions of libltdl,\nor against both a local convenience library and an installed libltdl\nis bad.  Ensuring that only one copy of the libltdl sources are linked\ninto any program is left as an exercise for the reader.\n\n@defmac LT_CONFIG_LTDL_DIR (@var{directory})\nDeclare @var{directory} to be the location of the @code{libltdl}\nsource files, for @command{libtoolize --ltdl} to place\nthem. @xref{Invoking libtoolize}, for more details.  Provided that you\nadd an appropriate @code{LT_CONFIG_LTDL_DIR} call in your\n@file{configure.ac} before calling @command{libtoolize}, the\nappropriate @code{libltdl} files will be installed automatically.\n@end defmac\n\n@defmac LTDL_INIT (@var{options})\n@defmacx LT_WITH_LTDL\n@defmacx AC_WITH_LTDL\n@code{AC_WITH_LTDL} and @code{LT_WITH_LTDL} are deprecated names for\nolder versions of this macro; @command{autoupdate} will update your\n@file{configure.ac} file.\n\nThis macro adds the following options to the @command{configure}\nscript:\n\n@table @option\n@item --with-ltdl-include @var{installed-ltdl-header-dir}\nThe @code{LTDL_INIT} macro will look in the standard header file\nlocations to find the installed @code{libltdl} headers.  If\n@code{LTDL_INIT} can't find them by itself, the person who builds\nyour package can use this option to tell @command{configure} where\nthe installed @code{libltdl} headers are.\n\n@item --with-ltdl-lib @var{installed-ltdl-library-dir}\nSimilarly, the person building your package can use this option to\nhelp @command{configure} find the installed @file{libltdl.la}.\n\n@item --with-included-ltdl\nIf there is no installed @code{libltdl}, or in any case if the\nperson building your package would rather use the @code{libltdl}\nsources shipped with the package in the subdirectory named by\n@code{LT_CONFIG_LTDL_DIR}, they should pass this option to\n@command{configure}.\n@end table\n\nIf the @option{--with-included-ltdl} is not passed at\nconfigure time, and an installed @code{libltdl} is not\nfound@footnote{@c\n@c\nEven if libltdl is installed, @samp{LTDL_INIT} may fail\nto detect it if libltdl depends on symbols provided by libraries\nother than the C library.\n@c\n}, then @command{configure} will exit immediately with an error that\nasks the user to either specify the location of an installed\n@code{libltdl} using the @option{--with-ltdl-include} and\n@option{--with-ltdl-lib} options, or to build with the\n@code{libltdl} sources shipped with the package by passing\n@option{--with-included-ltdl}.\n\nIf an installed @code{libltdl} is found, then @code{LIBLTDL} is set to\nthe link flags needed to use it, and @code{LTDLINCL} to the preprocessor\nflags needed to find the installed headers, and @code{LTDLDEPS} will\nbe empty.  Note, however, that no version checking is performed.  You\nshould manually check for the @code{libltdl} features you need in\n@file{configure.ac}:\n\n@example\nLT_INIT([dlopen])\nLTDL_INIT\n\n# The lt_dladvise_init symbol was added with libtool-2.2\nif test \"x$with_included_ltdl\" != \"xyes\"; then\n  save_CFLAGS=\"$CFLAGS\"\n  save_LDFLAGS=\"$LDFLAGS\"\n  CFLAGS=\"$CFLAGS $LTDLINCL\"\n  LDFLAGS=\"$LDFLAGS $LIBLTDL\"\n  AC_CHECK_LIB([ltdl], [lt_dladvise_init],\n                [],\n        [AC_MSG_ERROR([installed libltdl is too old])])\n  LDFLAGS=\"$save_LDFLAGS\"\n  CFLAGS=\"$save_CFLAGS\"\nfi\n@end example\n\n@var{options} may include no more than one of the following build\nmodes depending on how you want your project to build @code{libltdl}:\n@samp{nonrecursive}, @samp{recursive}, or @samp{subproject}.  In order\nfor @command{libtoolize} to detect this option correctly, if you\nsupply one of these arguments, they must be given literally (i.e.,\nmacros or shell variables that expand to the correct ltdl mode will not\nwork).\n\n@table @samp\n@item nonrecursive\nThis is how the Libtool project distribution builds the @code{libltdl}\nwe ship and install.  If you wish to use Automake to build\n@code{libltdl} without invoking a recursive make to descend into the\n@code{libltdl} subdirectory, then use this option.  You will need to set\nyour configuration up carefully to make this work properly, and you will\nneed releases of Autoconf and Automake that support\n@code{subdir-objects} and @code{LIBOBJDIR} properly.  In your\n@file{configure.ac}, add:\n\n@example\nAM_INIT_AUTOMAKE([subdir-objects])\nAC_CONFIG_HEADERS([config.h])\nLT_CONFIG_LTDL_DIR([libltdl])\nLT_INIT([dlopen])\nLTDL_INIT([nonrecursive])\n@end example\n\n@noindent\nYou @emph{have to} use a config header, but it may have a name different\nthan @file{config.h}.\n\nAlso, add the following near the top of your @file{Makefile.am}:\n\n@example\nAM_CPPFLAGS =\nAM_LDFLAGS =\n\nBUILT_SOURCES =\nEXTRA_DIST =\nCLEANFILES =\nMOSTLYCLEANFILES =\n\ninclude_HEADERS =\nnoinst_LTLIBRARIES =\nlib_LTLIBRARIES =\nEXTRA_LTLIBRARIES =\n\ninclude libltdl/Makefile.inc\n@end example\n\n@noindent\nUnless you build no other libraries from this @file{Makefile.am},\nyou will also need to change @code{lib_LTLIBRARIES} to assign with\n@samp{+=} so that the @code{libltdl} targets declared in\n@file{Makefile.inc} are not overwritten.\n\n@item recursive\nThis build mode still requires that you use Automake, but (in contrast\nwith @samp{nonrecursive}) uses the more usual device of starting another\n@code{make} process in the @file{libltdl} subdirectory.  To use this\nmode, you should add to your @file{configure.ac}:\n\n@example\nAM_INIT_AUTOMAKE\nAC_CONFIG_HEADERS([config.h])\nLT_CONFIG_LTDL_DIR([libltdl])\nLT_INIT([dlopen])\nLTDL_INIT([recursive])\nAC_CONFIG_FILES([libltdl/Makefile])\n@end example\n\n@noindent\nAgain, you @emph{have to} use a config header, but it may have a name\ndifferent than @file{config.h} if you like.\n\nAlso, add this to your @file{Makefile.am}:\n\n@example\nSUBDIRS = libltdl\n@end example\n\n@item subproject\nThis mode is the default unless you explicitly add @code{recursive} or\n@code{nonrecursive} to your @code{LTDL_INIT} options;  @code{subproject}\nis the only mode supported by previous releases of libltdl.  Even if you\ndo not use Autoconf in the parent project, then, in @samp{subproject}\nmode, still @code{libltdl} contains all the necessary files to configure\nand build itself -- you just need to arrange for your build system to\ncall @file{libltdl/configure} with appropriate options, and then run\n@code{make} in the @code{libltdl} subdirectory.\n\nIf you @emph{are} using Autoconf and Automake, then you will need to add\nthe following to your @file{configure.ac}:\n\n@example\nLT_CONFIG_LTDL_DIR([libltdl])\nLTDL_INIT\n@end example\n\n@noindent\nand to @file{Makefile.am}:\n\n@example\nSUBDIRS = libltdl\n@end example\n@end table\n\nAside from setting the libltdl build mode, there are other keywords\nthat you can pass to @code{LTDL_INIT} to modify its behavior when\n@option{--with-included-ltdl} has been given:\n\n@table @samp\n@item convenience\nThis is the default unless you explicitly add @code{installable} to\nyour @code{LTDL_INIT} options.\n\nThis keyword will cause options to be passed to the @command{configure}\nscript in the subdirectory named by @code{LT_CONFIG_LTDL_DIR} in order\nto cause it to be built as a convenience library.  If you're not\nusing automake, you will need to define @code{top_build_prefix},\n@code{top_builddir}, and @code{top_srcdir} in your makefile so that\n@code{LIBLTDL}, @code{LTDLDEPS}, and @code{LTDLINCL} expand correctly.\n\nOne advantage of the convenience library is that it is not installed,\nso the fact that you use @code{libltdl} will not be apparent to the\nuser, and it won't overwrite a pre-installed version of\n@code{libltdl} the system might already have in the installation\ndirectory.  On the other hand, if you want to upgrade @code{libltdl}\nfor any reason (e.g.@: a bugfix) you'll have to recompile your package\ninstead of just replacing the shared installed version of\n@code{libltdl}.  However, if your programs or libraries are linked\nwith other libraries that use such a pre-installed version of\n@code{libltdl}, you may get linker errors or run-time crashes.\nAnother problem is that you cannot link the convenience library into\nmore than one libtool library, then link a single program with those\nlibraries, because you may get duplicate symbols.  In general you can\nsafely use the convenience library in programs that don't depend on\nother libraries that might use @code{libltdl} too.\n\n@item installable\nThis keyword will pass options to the @command{configure}\nscript in the subdirectory named by @code{LT_CONFIG_LTDL_DIR} in order\nto cause it to be built as an installable library.  If you're not\nusing automake, you will need to define @code{top_build_prefix},\n@code{top_builddir} and @code{top_srcdir} in your makefile so that\n@code{LIBLTDL}, @code{LTDLDEPS}, and @code{LTDLINCL} are expanded\nproperly.\n\nBe aware that you could overwrite another @code{libltdl} already\ninstalled to the same directory if you use this option.\n@end table\n@end defmac\n\nWhatever method you use, @samp{LTDL_INIT} will define the shell variable\n@code{LIBLTDL} to the link flag that you should use to link with\n@code{libltdl}, the shell variable @code{LTDLDEPS} to the files that\ncan be used as a dependency in @file{Makefile} rules, and the shell\nvariable @code{LTDLINCL} to the preprocessor flag that you should use to\ncompile programs that include @file{ltdl.h}. So, when you want to link a\nprogram with libltdl, be it a convenience, installed or installable\nlibrary, just use @samp{$(LTDLINCL)} for preprocessing and compilation,\nand @samp{$(LIBLTDL)} for linking.\n\n@itemize @bullet\n@item\nIf your package is built using an installed version of @code{libltdl},\n@code{LIBLTDL} will be set to the compiler flags needed to link against\nthe installed library, @code{LTDLDEPS} will be empty, and @code{LTDLINCL}\nwill be set to the compiler flags needed to find the @code{libltdl}\nheader files.\n\n@item\nIf your package is built using the convenience libltdl, @code{LIBLTDL}\nand @code{LTDLDEPS} will be the pathname for the convenience version of\nlibltdl (starting with @samp{$@{top_builddir@}/} or\n@samp{$@{top_build_prefix@}}) and @code{LTDLINCL} will be @option{-I}\nfollowed by the directory that contains @file{ltdl.h} (starting with\n@samp{$@{top_srcdir@}/}).\n\n@item\nIf an installable version of the included @code{libltdl} is being\nbuilt, its pathname starting with @samp{$@{top_builddir@}/} or\n@samp{$@{top_build_prefix@}}, will be stored in @code{LIBLTDL} and\n@code{LTDLDEPS}, and @code{LTDLINCL} will be set just like in the case of\nconvenience library.\n@end itemize\n\nYou should probably also use the @samp{dlopen} option to @code{LT_INIT}\nin your @file{configure.ac}, otherwise libtool will assume no dlopening\nmechanism is supported, and revert to dlpreopening, which is probably not\nwhat you want.  Avoid using the @option{-static},\n@option{-static-libtool-libs}, or @option{-all-static}\nswitches when linking programs with libltdl.  This will not work on\nall platforms, because the dlopening functions may not be available\nfor static linking.\n\nThe following example shows you how to embed an installable libltdl in\nyour package.  In order to use the convenience variant, just replace the\n@code{LTDL_INIT} option @samp{installable} with @samp{convenience}.  We\nassume that libltdl was embedded using @samp{libtoolize --ltdl}.\n\nconfigure.ac:\n@example\n...\n# Name the subdirectory that contains libltdl sources\nLT_CONFIG_LTDL_DIR([libltdl])\n\n# Configure libtool with dlopen support if possible\nLT_INIT([dlopen])\n\n# Enable building of the installable libltdl library\nLTDL_INIT([installable])\n...\n@end example\n\nMakefile.am:\n@example\n...\nSUBDIRS = libltdl\n\nAM_CPPFLAGS = $(LTDLINCL)\n\nmyprog_LDFLAGS = -export-dynamic\nmyprog_LDADD = $(LIBLTDL) -dlopen self -dlopen foo1.la\nmyprog_DEPENDENCIES = $(LTDLDEPS) foo1.la\n...\n@end example\n\n@defmac LTDL_INSTALLABLE\n@defmacx AC_LIBLTDL_INSTALLABLE\nThese macros are deprecated, the @samp{installable} option to\n@code{LTDL_INIT} should be used instead.\n@end defmac\n\n@defmac LTDL_CONVENIENCE\n@defmacx AC_LIBLTDL_CONVENIENCE\nThese macros are deprecated, the @samp{convenience} option to\n@code{LTDL_INIT} should be used instead.\n@end defmac\n\n\n@node Trace interface\n@chapter Libtool's trace interface\n@cindex trace interface\n@cindex autoconf traces\n\nThis section describes macros whose sole purpose is to be traced using\nAutoconf's @option{--trace} option (@pxref{autoconf Invocation, , The\nAutoconf Manual, autoconf, The Autoconf Manual}) to query the Libtool\nconfiguration of a project.  These macros are called by Libtool\ninternals and should never be called by user code; they should only be\ntraced.\n\n@defmac LT_SUPPORTED_TAG (@var{tag})\nThis macro is called once for each language enabled in the package.  Its\nonly argument, @var{tag}, is the tag-name corresponding to the language\n(@pxref{Tags}).\n\nYou can therefore retrieve the list of all tags enabled in a project\nusing the following command:\n@example\nautoconf --trace 'LT_SUPPORTED_TAG:$1'\n@end example\n@end defmac\n\n\n@node FAQ\n@chapter Frequently Asked Questions about libtool\n\nThis chapter covers some questions that often come up on the mailing\nlists.\n\n@menu\n* Stripped link flags::         Dropped flags when creating a library\n@end menu\n\n@node Stripped link flags\n@section Why does libtool strip link flags when creating a library?\n\nWhen creating a shared library, but not when compiling or creating\na program, @command{libtool} drops some flags from the command line\nprovided by the user.  This is done because flags unknown to\n@command{libtool} may interfere with library creation or require\nadditional support from @command{libtool}, and because omitting\nflags is usually the conservative choice for a successful build.\n\nIf you encounter flags that you think are useful to pass, as a\nwork-around you can prepend flags with @code{-Wc,} or @code{-Xcompiler }\nto allow them to be passed through to the compiler driver\n(@pxref{Link mode}).  Another possibility is to add flags already\nto the compiler command at @command{configure} run time:\n\n@example\n./configure CC='gcc -m64'\n@end example\n\nIf you think @command{libtool} should let some flag through by default,\nhere's how you can test such an inclusion: grab the Libtool development\ntree, edit the @file{ltmain.m4sh} file in the @file{libltdl/config}\nsubdirectory to pass through the flag (search for @samp{Flags to be\npassed through}), re-bootstrap and build with the flags in question\nadded to @code{LDFLAGS}, @code{CFLAGS}, @code{CXXFLAGS}, etc. on the\n@command{configure} command line as appropriate.  Run the testsuite\nas described in the @file{README} file and report results to\n@value{BUGADDR}.\n\n@node Troubleshooting\n@chapter Troubleshooting\n@cindex troubleshooting\n@cindex problems, solving\n@cindex solving problems\n@cindex problems, blaming somebody else for\n\nLibtool is under constant development, changing to remain up-to-date\nwith modern operating systems.  If libtool doesn't work the way you\nthink it should on your platform, you should read this chapter to help\ndetermine what the problem is, and how to resolve it.\n\n@menu\n* Libtool test suite::          Libtool's self-tests.\n* Reporting bugs::              How to report problems with libtool.\n@end menu\n\n@node Libtool test suite\n@section The libtool test suite\n@cindex test suite\n\nLibtool comes with two integrated sets of tests to check that your build\nis sane, that test its capabilities, and report obvious bugs in the\nlibtool program.  These tests, too, are constantly evolving, based on\npast problems with libtool, and known deficiencies in other operating\nsystems.\n\nAs described in the @file{README} file, you may run @kbd{make -k check}\nafter you have built libtool (possibly before you install it) in order\nto make sure that it meets basic functional requirements.\n\n@menu\n* Test descriptions::           The contents of the old test suite.\n* When tests fail::             What to do when a test fails.\n@end menu\n\n@node Test descriptions\n@subsection Description of test suite\n\nHere is a list of the current programs in the old test suite, and what\nthey test for:\n\n@table @file\n\n@item cdemo-conf.test\n@itemx cdemo-make.test\n@itemx cdemo-exec.test\n@itemx cdemo-static.test\n@itemx cdemo-static-make.test\n@itemx cdemo-static-exec.test\n@itemx cdemo-shared.test\n@itemx cdemo-shared-make.test\n@itemx cdemo-shared-exec.test\n@itemx cdemo-undef.test\n@itemx cdemo-undef-make.test\n@itemx cdemo-undef-exec.test\n@pindex cdemo-conf.test\n@pindex cdemo-make.test\n@pindex cdemo-exec.test\n@pindex cdemo-static.test\n@pindex cdemo-static-make.test\n@pindex cdemo-static-exec.test\n@pindex cdemo-shared.test\n@pindex cdemo-shared-make.test\n@pindex cdemo-shared-exec.test\n@pindex cdemo-undef.test\n@pindex cdemo-undef-make.test\n@pindex cdemo-undef-exec.test\nThese programs check to see that the @file{tests/cdemo} subdirectory of\nthe libtool distribution can be configured and built correctly.\n\nThe @file{tests/cdemo} subdirectory contains a demonstration of libtool\nconvenience libraries, a mechanism that allows build-time static\nlibraries to be created, in a way that their components can be later\nlinked into programs or other libraries, even shared ones.\n\nThe tests matching @file{cdemo-*make.test} and @file{cdemo-*exec.test}\nare executed three times, under three different libtool configurations:\n@file{cdemo-conf.test} configures @file{cdemo/libtool} to build both\nstatic and shared libraries (the default for platforms that support\nboth), @file{cdemo-static.test} builds only static libraries\n(@samp{--disable-shared}), and @file{cdemo-shared.test} builds only\nshared libraries (@samp{--disable-static}).\n\nThe test @file{cdemo-undef.test} tests the generation of shared\nlibraries with undefined symbols on systems that allow this.\n\n@item demo-conf.test\n@itemx demo-make.test\n@itemx demo-exec.test\n@itemx demo-inst.test\n@itemx demo-unst.test\n@itemx demo-static.test\n@itemx demo-static-make.test\n@itemx demo-static-exec.test\n@itemx demo-static-inst.test\n@itemx demo-static-unst.test\n@itemx demo-shared.test\n@itemx demo-shared-make.test\n@itemx demo-shared-exec.test\n@itemx demo-shared-inst.test\n@itemx demo-shared-unst.test\n@itemx demo-nofast.test\n@itemx demo-nofast-make.test\n@itemx demo-nofast-exec.test\n@itemx demo-nofast-inst.test\n@itemx demo-nofast-unst.test\n@itemx demo-pic.test\n@itemx demo-pic-make.test\n@itemx demo-pic-exec.test\n@itemx demo-nopic.test\n@itemx demo-nopic-make.test\n@itemx demo-nopic-exec.test\n@pindex demo-conf.test\n@pindex demo-make.test\n@pindex demo-exec.test\n@pindex demo-inst.test\n@pindex demo-unst.test\n@pindex demo-static.test\n@pindex demo-static-make.test\n@pindex demo-static-exec.test\n@pindex demo-static-inst.test\n@pindex demo-static-unst.test\n@pindex demo-shared.test\n@pindex demo-shared-make.test\n@pindex demo-shared-exec.test\n@pindex demo-shared-inst.test\n@pindex demo-shared-unst.test\n@pindex demo-nofast.test\n@pindex demo-nofast-make.test\n@pindex demo-nofast-exec.test\n@pindex demo-nofast-inst.test\n@pindex demo-nofast-unst.test\n@pindex demo-pic.test\n@pindex demo-pic-make.test\n@pindex demo-pic-exec.test\n@pindex demo-nopic.test\n@pindex demo-nopic-make.test\n@pindex demo-nopic-exec.test\nThese programs check to see that the @file{tests/demo} subdirectory of\nthe libtool distribution can be configured, built, installed, and\nuninstalled correctly.\n\nThe @file{tests/demo} subdirectory contains a demonstration of a trivial\npackage that uses libtool.  The tests matching @file{demo-*make.test},\n@file{demo-*exec.test}, @file{demo-*inst.test} and\n@file{demo-*unst.test} are executed four times, under four different\nlibtool configurations: @file{demo-conf.test} configures\n@file{demo/libtool} to build both static and shared libraries,\n@file{demo-static.test} builds only static libraries\n(@option{--disable-shared}), and @file{demo-shared.test} builds only\nshared libraries (@option{--disable-static}).\n@file{demo-nofast.test} configures @file{demo/libtool} to\ndisable the fast-install mode (@option{--enable-fast-install=no}).\n@file{demo-pic.test} configures @file{demo/libtool} to\nprefer building PIC code (@option{--with-pic}), @file{demo-nopic.test}\nto prefer non-PIC code (@option{--without-pic}).\n\n@item demo-deplibs.test\n@pindex demo-deplibs.test\nMany systems cannot link static libraries into shared libraries.\nlibtool uses a @code{deplibs_check_method} to prevent such cases.\nThis tests checks whether libtool's @code{deplibs_check_method}\nworks properly.\n\n@item demo-hardcode.test\n@pindex demo-hardcode.test\nOn all systems with shared libraries, the location of the library can be\nencoded in executables that are linked against it @pxref{Linking\nexecutables}.  This test checks the conditions under which your system\nlinker hardcodes the library location, and guarantees that they\ncorrespond to libtool's own notion of how your linker behaves.\n\n@item demo-relink.test\n@itemx depdemo-relink.test\n@pindex demo-relink.test\n@pindex depdemo-relink.test\nThese tests check whether variable @code{shlibpath_overrides_runpath} is\nproperly set.  If the test fails, it will indicate what the variable should\nhave been set to.\n\n@item demo-noinst-link.test\n@pindex demo-noinst-link.test\nChecks whether libtool will not try to link with a previously installed\nversion of a library when it should be linking with a just-built one.\n\n@item depdemo-conf.test\n@itemx depdemo-make.test\n@itemx depdemo-exec.test\n@itemx depdemo-inst.test\n@itemx depdemo-unst.test\n@itemx depdemo-static.test\n@itemx depdemo-static-make.test\n@itemx depdemo-static-exec.test\n@itemx depdemo-static-inst.test\n@itemx depdemo-static-unst.test\n@itemx depdemo-shared.test\n@itemx depdemo-shared-make.test\n@itemx depdemo-shared-exec.test\n@itemx depdemo-shared-inst.test\n@itemx depdemo-shared-unst.test\n@itemx depdemo-nofast.test\n@itemx depdemo-nofast-make.test\n@itemx depdemo-nofast-exec.test\n@itemx depdemo-nofast-inst.test\n@itemx depdemo-nofast-unst.test\n@pindex depdemo-conf.test\n@pindex depdemo-make.test\n@pindex depdemo-exec.test\n@pindex depdemo-inst.test\n@pindex depdemo-unst.test\n@pindex depdemo-static.test\n@pindex depdemo-static-make.test\n@pindex depdemo-static-exec.test\n@pindex depdemo-static-inst.test\n@pindex depdemo-static-unst.test\n@pindex depdemo-shared.test\n@pindex depdemo-shared-make.test\n@pindex depdemo-shared-exec.test\n@pindex depdemo-shared-inst.test\n@pindex depdemo-shared-unst.test\n@pindex depdemo-nofast.test\n@pindex depdemo-nofast-make.test\n@pindex depdemo-nofast-exec.test\n@pindex depdemo-nofast-inst.test\n@pindex depdemo-nofast-unst.test\nThese programs check to see that the @file{tests/depdemo} subdirectory\nof the libtool distribution can be configured, built, installed, and\nuninstalled correctly.\n\nThe @file{tests/depdemo} subdirectory contains a demonstration of\ninter-library dependencies with libtool.  The test programs link some\ninterdependent libraries.\n\nThe tests matching @file{depdemo-*make.test}, @file{depdemo-*exec.test},\n@file{depdemo-*inst.test} and @file{depdemo-*unst.test} are executed\nfour times, under four different libtool configurations:\n@file{depdemo-conf.test} configures @file{depdemo/libtool} to build both\nstatic and shared libraries, @file{depdemo-static.test} builds only static\nlibraries (@option{--disable-shared}), and @file{depdemo-shared.test} builds\nonly shared libraries (@option{--disable-static}).\n@file{depdemo-nofast.test} configures @file{depdemo/libtool} to\ndisable the fast-install mode (@option{--enable-fast-install=no}).\n\n@item mdemo-conf.test\n@itemx mdemo-make.test\n@itemx mdemo-exec.test\n@itemx mdemo-inst.test\n@itemx mdemo-unst.test\n@itemx mdemo-static.test\n@itemx mdemo-static-make.test\n@itemx mdemo-static-exec.test\n@itemx mdemo-static-inst.test\n@itemx mdemo-static-unst.test\n@itemx mdemo-shared.test\n@itemx mdemo-shared-make.test\n@itemx mdemo-shared-exec.test\n@itemx mdemo-shared-inst.test\n@itemx mdemo-shared-unst.test\n@pindex mdemo-conf.test\n@pindex mdemo-make.test\n@pindex mdemo-exec.test\n@pindex mdemo-inst.test\n@pindex mdemo-unst.test\n@pindex mdemo-static.test\n@pindex mdemo-static-make.test\n@pindex mdemo-static-exec.test\n@pindex mdemo-static-inst.test\n@pindex mdemo-static-unst.test\n@pindex mdemo-shared.test\n@pindex mdemo-shared-make.test\n@pindex mdemo-shared-exec.test\n@pindex mdemo-shared-inst.test\n@pindex mdemo-shared-unst.test\nThese programs check to see that the @file{tests/mdemo} subdirectory of\nthe libtool distribution can be configured, built, installed, and\nuninstalled correctly.\n\nThe @file{tests/mdemo} subdirectory contains a demonstration of a\npackage that uses libtool and the system independent dlopen wrapper\n@file{libltdl} to load modules.  The library @file{libltdl} provides a\ndlopen wrapper for various platforms (POSIX)\nincluding support for dlpreopened modules (@pxref{Dlpreopening}).\n\nThe tests matching @file{mdemo-*make.test}, @file{mdemo-*exec.test},\n@file{mdemo-*inst.test} and @file{mdemo-*unst.test} are executed\nthree times, under three different libtool configurations:\n@file{mdemo-conf.test} configures @file{mdemo/libtool} to build both\nstatic and shared libraries, @file{mdemo-static.test} builds only static\nlibraries (@option{--disable-shared}), and @file{mdemo-shared.test} builds\nonly shared libraries (@option{--disable-static}).\n\n@item mdemo-dryrun.test\n@pindex mdemo-dryrun.test\nThis test checks whether libtool's @option{--dry-run} mode works properly.\n\n@item mdemo2-conf.test\n@itemx mdemo2-exec.test\n@itemx mdemo2-make.test\n@pindex mdemo2-conf.test\n@pindex mdemo2-exec.test\n@pindex mdemo2-make.test\nThese programs check to see that the @file{tests/mdemo2} subdirectory of\nthe libtool distribution can be configured, built, and executed\ncorrectly.\n\nThe @file{tests/mdemo2} directory contains a demonstration of a package\nthat attempts to link with a library (from the @file{tests/mdemo}\ndirectory) that itself does dlopening of libtool modules.\n\n@item link.test\n@pindex link.test\nThis test guarantees that linking directly against a non-libtool static\nlibrary works properly.\n\n@item link-2.test\n@pindex link-2.test\nThis test makes sure that files ending in @file{.lo} are never linked\ndirectly into a program file.\n\n@item nomode.test\n@pindex nomode.test\nCheck whether we can actually get help for libtool.\n\n@item objectlist.test\n@pindex objectlist.test\nCheck that a nonexistent objectlist file is properly detected.\n\n@item pdemo-conf.test\n@itemx pdemo-make.test\n@itemx pdemo-exec.test\n@itemx pdemo-inst.test\n@pindex pdemo-conf.test\n@pindex pdemo-make.test\n@pindex pdemo-exec.test\n@pindex pdemo-inst.test\nThese programs check to see that the @file{tests/pdemo} subdirectory of\nthe libtool distribution can be configured, built, and executed\ncorrectly.\n\nThe @file{pdemo-conf.test} lowers the @code{max_cmd_len} variable in the\ngenerated libtool script to test the measures to evade command line\nlength limitations.\n\n@item quote.test\n@pindex quote.test\nThis program checks libtool's metacharacter quoting.\n\n@item sh.test\n@pindex sh.test\nChecks for some nonportable or dubious or undesired shell constructs in\nshell scripts.\n\n@item suffix.test\n@pindex suffix.test\nWhen other programming languages are used with libtool (@pxref{Other\nlanguages}), the source files may end in suffixes other than @file{.c}.\nThis test validates that libtool can handle suffixes for all the file\ntypes that it supports, and that it fails when the suffix is invalid.\n\n@item tagdemo-conf.test\n@itemx tagdemo-make.test\n@itemx tagdemo-exec.test\n@itemx tagdemo-static.test\n@itemx tagdemo-static-make.test\n@itemx tagdemo-static-exec.test\n@itemx tagdemo-shared.test\n@itemx tagdemo-shared-make.test\n@itemx tagdemo-shared-exec.test\n@itemx tagdemo-undef.test\n@itemx tagdemo-undef-make.test\n@itemx tagdemo-undef-exec.test\n@pindex tagdemo-conf.test\n@pindex tagdemo-make.test\n@pindex tagdemo-exec.test\n@pindex tagdemo-static.test\n@pindex tagdemo-static-make.test\n@pindex tagdemo-static-exec.test\n@pindex tagdemo-shared.test\n@pindex tagdemo-shared-make.test\n@pindex tagdemo-shared-exec.test\n@pindex tagdemo-undef.test\n@pindex tagdemo-undef-make.test\n@pindex tagdemo-undef-exec.test\nThese programs check to see that the @file{tests/tagdemo} subdirectory\nof the libtool distribution can be configured, built, and executed\ncorrectly.\n\nThe @file{tests/tagdemo} directory contains a demonstration of a package\nthat uses libtool's multi-language support through configuration tags.\nIt generates a library from C++ sources, which is then linked to a C++\nprogram.\n\n@item f77demo-conf.test\n@itemx f77demo-make.test\n@itemx f77demo-exec.test\n@itemx f77demo-static.test\n@itemx f77demo-static-make.test\n@itemx f77demo-static-exec.test\n@itemx f77demo-shared.test\n@itemx f77demo-shared-make.test\n@itemx f77demo-shared-exec.test\n@pindex f77demo-conf.test\n@pindex f77demo-make.test\n@pindex f77demo-exec.test\n@pindex f77demo-static.test\n@pindex f77demo-static-make.test\n@pindex f77demo-static-exec.test\n@pindex f77demo-shared.test\n@pindex f77demo-shared-make.test\n@pindex f77demo-shared-exec.test\nThese programs check to see that the @file{tests/f77demo} subdirectory\nof the libtool distribution can be configured, built, and executed\ncorrectly.\n\nThe @file{tests/f77demo} tests test Fortran 77 support in libtool by\ncreating libraries from Fortran 77 sources, and mixed Fortran and C\nsources, and a Fortran 77 program to use the former library, and a C\nprogram to use the latter library.\n\n@item fcdemo-conf.test\n@itemx fcdemo-make.test\n@itemx fcdemo-exec.test\n@itemx fcdemo-static.test\n@itemx fcdemo-static-make.test\n@itemx fcdemo-static-exec.test\n@itemx fcdemo-shared.test\n@itemx fcdemo-shared-make.test\n@itemx fcdemo-shared-exec.test\n@pindex fcdemo-conf.test\n@pindex fcdemo-make.test\n@pindex fcdemo-exec.test\n@pindex fcdemo-static.test\n@pindex fcdemo-static-make.test\n@pindex fcdemo-static-exec.test\n@pindex fcdemo-shared.test\n@pindex fcdemo-shared-make.test\n@pindex fcdemo-shared-exec.test\nThese programs check to see that the @file{tests/fcdemo} subdirectory\nof the libtool distribution can be configured, built, and executed\ncorrectly.\n\nThe @file{tests/fcdemo} is similar to the @file{tests/f77demo}\ndirectory, except that Fortran 90 is used in combination with the\n@samp{FC} interface provided by Autoconf and Automake.\n\n@end table\n\nThe new, Autotest-based test suite uses keywords to classify certain\ntest groups:\n\n@table @samp\n@item CXX\n@itemx F77\n@itemx FC\n@itemx GCJ\nThe test group exercises one of these @command{libtool} language tags.\n\n@item autoconf\n@itemx automake\nThese keywords denote that the respective external program is needed\nby the test group.  The tests are typically skipped if the program is\nnot installed.  The @samp{automake} keyword may also denote use of the\n@command{aclocal} program.\n\n@item interactive\nThis test group may require user interaction on some systems.  Typically,\nthis means closing a popup window about a DLL load error on Windows.\n\n@item libltdl\nDenote that the @file{libltdl} library is exercised by the test group.\n\n@item libtool\n@itemx libtoolize\nDenote that the @command{libtool} or @command{libtoolize} scripts are\nexercised by the test group, respectively.\n\n@item recursive\nDenote that this test group may recursively re-invoke the test suite\nitself, with changed settings and maybe a changed @command{libtool}\nscript.  You may use the @env{INNER_TESTSUITEFLAGS} variable to pass\nadditional settings to this recursive invocation.  Typically, recursive\ninvocations delimit the set of tests with another keyword, for example\nby passing @code{-k libtool} right before the expansion of the\n@env{INNER_TESTSUITEFLAGS} variable (without an intervening space, so\nyou get the chance for further delimitation).\n\nTest groups with the keyword @samp{recursive} should not be denoted with\nkeywords, in order to avoid infinite recursion.  As a consequence,\nrecursive test groups themselves should never require user interaction,\nwhile the test groups they invoke may do so.\n@end table\n\n@cindex @samp{check-interactive}\n@cindex @samp{check-noninteractive}\nThere is a convenience target @samp{check-noninteractive} that runs\nall tests from both test suites that do not cause user interaction on\nWindows.  Conversely, the target @samp{check-interactive} runs the\ncomplement of tests and might require closing popup windows about DLL\nload errors on Windows.\n\n\n@node When tests fail\n@subsection When tests fail\n@cindex failed tests\n@cindex tests, failed\n\nWhen the tests in the old test suite are run via @command{make check},\noutput is caught in per-test @file{tests/@var{test-name}.log} files\nand summarized in the @file{test-suite.log} file.  The exit status of each\nprogram tells the @file{Makefile} whether or not the test succeeded.\n\nIf a test fails, it means that there is either a programming error in\nlibtool, or in the test program itself.\n\nTo investigate a particular test, you may run it directly, as you would\na normal program.  When the test is invoked in this way, it produces\noutput that may be useful in determining what the problem is.\n\nThe new, Autotest-based test suite produces as output a file\n@file{tests/testsuite.log} which contains information about failed\ntests.\n\nYou can pass options to the test suite through the @command{make}\nvariable @env{TESTSUITEFLAGS} (@pxref{testsuite Invocation, ,\nThe Autoconf Manual, autoconf, The Autoconf Manual}).\n\n\n@node Reporting bugs\n@section Reporting bugs\n@cindex bug reports\n@cindex reporting bugs\n@cindex problem reports\n\nIf you think you have discovered a bug in libtool, you should think\ntwice: the libtool maintainer is notorious for passing the buck (or\nmaybe that should be ``passing the bug'').  Libtool was invented to fix\nknown deficiencies in shared library implementations, so, in a way, most\nof the bugs in libtool are actually bugs in other operating systems.\nHowever, the libtool maintainer would definitely be happy to add support\nfor somebody else's buggy operating system.  [I wish there was a good\nway to do winking smiley-faces in Texinfo.]\n\nGenuine bugs in libtool include problems with shell script portability,\ndocumentation errors, and failures in the test suite (@pxref{Libtool\ntest suite}).\n\nFirst, check the documentation and help screens to make sure that the\nbehaviour you think is a problem is not already mentioned as a feature.\n\nThen, you should read the Emacs guide to reporting bugs (@pxref{Bugs, ,\nReporting Bugs, emacs, The Emacs Manual}).  Some of the details\nlisted there are specific to Emacs, but the principle behind them is a\ngeneral one.\n\nFinally, send a bug report to @value{BUGADDR} with any appropriate\n@emph{facts}, such as test suite output (@pxref{When tests fail}), all\nthe details needed to reproduce the bug, and a brief description of why\nyou think the behaviour is a bug.  Be sure to include the word\n``libtool'' in the subject line, as well as the version number you are\nusing (which can be found by typing @kbd{libtool --version}).\n\n@node Maintaining\n@chapter Maintenance notes for libtool\n\nThis chapter contains information that the libtool maintainer finds\nimportant.  It will be of no use to you unless you are considering\nporting libtool to new systems, or writing your own libtool.\n\n@menu\n* New ports::                   How to port libtool to new systems.\n* Tested platforms::            When libtool was last tested.\n* Platform quirks::             Information about different library systems.\n* libtool script contents::     Configuration information that libtool uses.\n* Cheap tricks::                Making libtool maintainership easier.\n@end menu\n\n@node New ports\n@section Porting libtool to new systems\n\nBefore you embark on porting libtool to an unsupported system, it is\nworthwhile to send e-mail to @value{MAILLIST}, to make sure that you are\nnot duplicating existing work.\n\nIf you find that any porting documentation is missing, please complain!\nComplaints with patches and improvements to the documentation, or to\nlibtool itself, are more than welcome.\n\n@menu\n* Information sources::         Where to find relevant documentation\n* Porting inter-library dependencies::  Implementation details explained\n@end menu\n\n@node Information sources\n@subsection Information sources\n\nOnce it is clear that a new port is necessary, you'll generally need the\nfollowing information:\n\n@table @asis\n@item canonical system name\nYou need the output of @code{config.guess} for this system, so that you\ncan make changes to the libtool configuration process without affecting\nother systems.\n\n@item man pages for @command{ld} and @command{cc}\nThese generally describe what flags are used to generate PIC, to create\nshared libraries, and to link against only static libraries.  You may\nneed to follow some cross references to find the information that is\nrequired.\n\n@item man pages for @command{ld.so}, @command{rtld}, or equivalent\nThese are a valuable resource for understanding how shared libraries are\nloaded on the system.\n\n@item man page for @command{ldconfig}, or equivalent\nThis page usually describes how to install shared libraries.\n\n@item output from @kbd{ls -l /lib /usr/lib}\nThis shows the naming convention for shared libraries on the system,\nincluding which names should be symbolic links.\n\n@item any additional documentation\nSome systems have special documentation on how to build and install\nshared libraries.\n@end table\n\nIf you know how to program the Bourne shell, then you can complete the\nport yourself; otherwise, you'll have to find somebody with the relevant\nskills who will do the work.  People on the libtool mailing list are\nusually willing to volunteer to help you with new ports, so you can send\nthe information to them.\n\nTo do the port yourself, you'll definitely need to modify the\n@code{libtool.m4} macros in order to make platform-specific changes to\nthe configuration process.  You should search that file for the\n@code{PORTME} keyword, which will give you some hints on what you'll\nneed to change.  In general, all that is involved is modifying the\nappropriate configuration variables (@pxref{libtool script contents}).\n\nYour best bet is to find an already-supported system that is similar to\nyours, and make your changes based on that.  In some cases, however,\nyour system will differ significantly from every other supported system,\nand it may be necessary to add new configuration variables, and modify\nthe @code{ltmain.in} script accordingly.  Be sure to write to the\nmailing list before you make changes to @code{ltmain.in}, since they may\nhave advice on the most effective way of accomplishing what you want.\n\n@node Porting inter-library dependencies\n@subsection Porting inter-library dependencies support\n@cindex inter-library dependency\n@vindex deplibs_check_method\n\nSince version 1.2c, libtool has re-introduced the ability to do\ninter-library dependency on some platforms, thanks to a patch by Toshio\nKuratomi @email{badger@@prtr-13.ucsc.edu}.  Here's a shortened version\nof the message that contained his patch:\n\nThe basic architecture is this: in @file{libtool.m4}, the person who\nwrites libtool makes sure @samp{$deplibs} is included in\n@samp{$archive_cmds} somewhere and also sets the variable\n@samp{$deplibs_check_method}, and maybe @samp{$file_magic_cmd} when\n@samp{deplibs_check_method} is file_magic.\n\n@samp{deplibs_check_method} can be one of five things:\n@table @samp\n@item file_magic [@var{regex}]\n@vindex file_magic\n@vindex file_magic_cmd\n@vindex file_magic_test_file\nlooks in the library link path for libraries that have the right\nlibname.  Then it runs @samp{$file_magic_cmd} on the library and checks\nfor a match against the extended regular expression @var{regex}.  When\n@code{file_magic_test_file} is set by @file{libtool.m4}, it is used as an\nargument to @samp{$file_magic_cmd} in order to verify whether the\nregular expression matches its output, and warn the user otherwise.\n\n@item test_compile\n@vindex test_compile\njust checks whether it is possible to link a program out of a list of\nlibraries, and checks which of those are listed in the output of\n@code{ldd}.  It is currently unused, and will probably be dropped in the\nfuture.\n\n@item pass_all\n@vindex pass_all\nwill pass everything without any checking.  This may work on platforms\nin which code is position-independent by default and inter-library\ndependencies are properly supported by the dynamic linker, for example,\non DEC OSF/1 3 and 4.\n\n@item none\n@vindex none\nIt causes deplibs to be reassigned @samp{deplibs=\"\"}.  That way\n@samp{archive_cmds} can contain deplibs on all platforms, but not have\ndeplibs used unless needed.\n\n@item unknown\n@vindex unknown\nis the default for all systems unless overridden in @file{libtool.m4}.\nIt is the same as @samp{none}, but it documents that we really don't\nknow what the correct value should be, and we welcome patches that\nimprove it.\n@end table\n\nThen in @file{ltmain.in} we have the real workhorse: a little\ninitialization and postprocessing (to setup/release variables for use\nwith eval echo libname_spec etc.) and a case statement that decides\nthe method that is being used.  This is the real code@dots{} I wish I could\ncondense it a little more, but I don't think I can without function\ncalls.  I've mostly optimized it (moved things out of loops, etc.) but\nthere is probably some fat left.  I thought I should stop while I was\nahead, work on whatever bugs you discover, etc.@: before thinking about\nmore than obvious optimizations.\n\n@node Tested platforms\n@section Tested platforms\n\nThis table describes when libtool was last known to be tested on\nplatforms where it claims to support shared libraries:\n\n@example\n@include PLATFORMS\n@end example\n\nNote: The vendor-distributed HP-UX @command{sed}(1) programs are horribly\nbroken, and cannot handle libtool's requirements, so users may report\nunusual problems.  There is no workaround except to install a working\n@command{sed} (such as GNU @command{sed}) on these systems.\n\nNote: The vendor-distributed NCR MP-RAS @command{cc} programs emits\ncopyright on standard error that confuse tests on size of\n@file{conftest.err}.  The workaround is to specify @code{CC}\nwhen run @code{configure} with @kbd{CC='cc -Hnocopyr'}.\n\n@node Platform quirks\n@section Platform quirks\n\nThis section is dedicated to the sanity of the libtool maintainers.  It\ndescribes the programs that libtool uses, how they vary from system to\nsystem, and how to test for them.\n\nBecause libtool is a shell script, it can be difficult to understand\njust by reading it from top to bottom.  This section helps show why\nlibtool does things a certain way.  Combined with the scripts\nthemselves, you should have a better sense of how to improve libtool, or\nwrite your own.\n\n@menu\n* References::                  Finding more information.\n* Compilers::                   Creating object files from source files.\n* Reloadable objects::          Binding object files together.\n* Multiple dependencies::       Removing duplicate dependent libraries.\n* Archivers::                   Programs that create static archives.\n* Cross compiling::             Issues that arise when cross compiling.\n* File name conversion::        Converting file names between platforms.\n* Windows DLLs::                Windows header defines.\n@end menu\n\n@node References\n@subsection References\n\nThe following is a list of valuable documentation references:\n\n@itemize @bullet\n@item\nSGI's IRIX Manual Pages can be found at@*\n@url{http://techpubs.sgi.com/cgi-bin/infosrch.cgi?cmd=browse&db=man}.\n\n@item\nSun's free service area\n(@url{http://www.sun.com/service/online/free.html}) and documentation\nserver (@url{http://docs.sun.com/}).\n\n@item\nCompaq's Tru64 UNIX online documentation is at@*\n(@url{http://tru64unix.compaq.com/faqs/publications/pub_page/doc_list.html})\nwith C++ documentation at@*\n(@url{http://tru64unix.compaq.com/cplus/docs/index.htm}).\n\n@item\nHewlett-Packard has online documentation at\n(@url{http://docs.hp.com/index.html}).\n\n@item\nIBM has online documentation at\n(@url{http://www.rs6000.ibm.com/resource/aix_resource/Pubs/}).\n@end itemize\n\n@node Compilers\n@subsection Compilers\n\nThe only compiler characteristics that affect libtool are the flags\nneeded (if any) to generate PIC objects.  In general, if a C compiler\nsupports certain PIC flags, then any derivative compilers support the\nsame flags.  Until there are some noteworthy exceptions to this rule,\nthis section will document only C compilers.\n\nThe following C compilers have standard command line options, regardless\nof the platform:\n\n@table @code\n@item gcc\n\nThis is the GNU C compiler, which is also the system compiler for many\nfree operating systems (FreeBSD, GNU/Hurd, GNU/Linux, Lites, NetBSD, and\nOpenBSD, to name a few).\n\nThe @option{-fpic} or @option{-fPIC} flags can be used to generate\nposition-independent code.  @option{-fPIC} is guaranteed to generate\nworking code, but the code is slower on m68k, m88k, and Sparc chips.\nHowever, using @option{-fpic} on those chips imposes arbitrary size limits\non the shared libraries.\n@end table\n\nThe rest of this subsection lists compilers by the operating system that\nthey are bundled with:\n\n@c FIXME these should all be better-documented\n\n@table @code\n@item aix3*\n@itemx aix4*\nMost AIX compilers have no PIC flags, since AIX (with the exception of\nAIX for IA-64) runs on PowerPC and RS/6000 chips. @footnote{All code compiled\nfor the PowerPC and RS/6000 chips (@code{powerpc-*-*}, @code{powerpcle-*-*},\nand @code{rs6000-*-*}) is position-independent, regardless of the operating\nsystem or compiler suite.  So, ``regular objects'' can be used to build\nshared libraries on these systems and no special PIC compiler flags are\nrequired.}\n\n@item hpux10*\nUse @samp{+Z} to generate PIC.\n\n@item osf3*\nDigital/UNIX 3.x does not have PIC flags, at least not on the PowerPC\nplatform.\n\n@item solaris2*\nUse @option{-KPIC} to generate PIC.\n\n@item sunos4*\nUse @option{-PIC} to generate PIC.\n@end table\n\n@node Reloadable objects\n@subsection Reloadable objects\n\nOn all known systems, a reloadable object can be created by running\n@kbd{ld -r -o @var{output}.o @var{input1}.o @var{input2}.o}.  This\nreloadable object may be treated as exactly equivalent to other\nobjects.\n\n@node Multiple dependencies\n@subsection Multiple dependencies\n\nOn most modern platforms the order in which dependent libraries are listed\nhas no effect on object generation.  In theory, there are platforms\nthat require libraries that provide missing symbols to other libraries\nto be listed after those libraries whose symbols they provide.\n\nParticularly, if a pair of static archives each resolve some of the\nother's symbols, it might be necessary to list one of those archives\nboth before and after the other one.  Libtool does not currently cope\nwith this situation well, since duplicate libraries are removed from\nthe link line by default.  Libtool provides the command line option\n@option{--preserve-dup-deps} to preserve all duplicate dependencies\nin cases where it is necessary.\n\n@node Archivers\n@subsection Archivers\n\nOn all known systems, building a static library can be accomplished by\nrunning @kbd{ar cru lib@var{name}.a @var{obj1}.o @var{obj2}.o @dots{}},\nwhere the @file{.a} file is the output library, and each @file{.o} file is an\nobject file.\n\nOn all known systems, if there is a program named @command{ranlib}, then it\nmust be used to ``bless'' the created library before linking against it,\nwith the @kbd{ranlib lib@var{name}.a} command.  Some systems, like Irix,\nuse the @code{ar ts} command, instead.\n\n@node Cross compiling\n@subsection Cross compiling\n@cindex cross compile\n\nMost build systems support the ability to compile libraries and applications\non one platform for use on a different platform, provided a compiler capable\nof generating the appropriate output is available.  In such cross compiling\nscenarios, the platform on which the libraries or applications are compiled\nis called the @dfn{build platform}, while the platform on which the libraries\nor applications are intended to be used or executed is called the\n@dfn{host platform}.\n@ref{GNU Build System,, The GNU Build System, automake, The Automake Manual},\nof which libtool is a part, supports cross compiling via arguments passed to\nthe configure script: @option{--build=...} and @option{--host=...}. However,\nwhen the build platform and host platform are very different, libtool is\nrequired to make certain accommodations to support these scenarios.\n\nIn most cases, because the build platform and host platform differ, the\ncross-compiled libraries and executables can't be executed or tested on the\nbuild platform where they were compiled.  The testsuites of most build systems\nwill often skip any tests that involve executing such foreign executables when\ncross-compiling.  However, if the build platform and host platform are\nsufficiently similar, it is often possible to run cross-compiled applications.\nLibtool's own testsuite often attempts to execute cross-compiled tests, but\nwill mark any failures as @emph{skipped} since the failure might simply be due\nto the differences between the two platforms.\n\nIn addition to cases where the host platform and build platform are extremely\nsimilar (e.g. @samp{i586-pc-linux-gnu} and @samp{i686-pc-linux-gnu}), there is\nanother case in which cross-compiled host applications may be executed on the\nbuild platform.  This is possible when the build platform supports an emulation\nor API-enhanced environment for the host platform.  One example of this\nsituation would be if the build platform were MinGW, and the host platform were\nCygwin (or vice versa).  Both of these platforms can actually operate within a\nsingle Windows instance, so Cygwin applications can be launched from a MinGW\ncontext, and vice versa---provided certain care is taken.  Another example\nwould be if the build platform were GNU/Linux on an x86 32bit processor, and\nthe host platform were MinGW.  In this situation, the\n@uref{http://www.winehq.org/, Wine} environment can be used to launch Windows\napplications from the GNU/Linux operating system; again, provided certain care\nis taken.\n\nOne particular issue occurs when a Windows platform such as MinGW, Cygwin, or\nMSYS is the host or build platform, while the other platform is a Unix-style\nsystem.  In these cases, there are often conflicts between the format of the\nfile names and paths expected within host platform libraries and executables,\nand those employed on the build platform.\n\nThis situation is best described using a concrete example: suppose the build\nplatform is GNU/Linux with canonical triplet @samp{i686-pc-linux-gnu}.  Suppose\nfurther that the host platform is MinGW with canonical triplet\n@samp{i586-pc-mingw32}.  On the GNU/Linux platform there is a cross compiler\nfollowing the usual naming conventions of such compilers, where the compiler\nname is prefixed by the host canonical triplet (or suitable alias).  (For more\ninformation concerning canonical triplets and platform aliases, see\n@ref{Specifying Target Triplets,, Specifying Target Triplets, autoconf,\nThe Autoconf Manual} and @ref{Canonicalizing,, Canonicalizing, autoconf,\nThe Autoconf Manual})  In this case, the C compiler is named\n@samp{i586-pc-mingw32-gcc}.\n\nAs described in @ref{Wrapper executables}, for the MinGW host platform libtool\nuses a wrapper executable to set various environment variables before launching\nthe actual program executable.  Like the program executable, the wrapper\nexecutable is cross-compiled for the host platform (that is, for MinGW).  As\ndescribed above, ordinarily a host platform executable cannot be executed on\nthe build platform, but in this case the Wine environment could be used to\nlaunch the MinGW application from GNU/Linux.  However, the wrapper executable,\nas a host platform (MinGW) application, must set the @env{PATH} variable so\nthat the true application's dependent libraries can be located---but the\ncontents of the @env{PATH} variable must be structured for MinGW.  Libtool\nmust use the Wine file name mapping facilities to determine the correct value\nso that the wrapper executable can set the @env{PATH} variable to point to the\ncorrect location.\n\nFor example, suppose we are compiling an application in @file{/var/tmp} on\nGNU/Linux, using separate source code and build directories:\n\n@example\n@multitable @columnfractions 0.5 0.5\n@item @file{/var/tmp/foo-1.2.3/app/} @tab (application source code)\n@item @file{/var/tmp/foo-1.2.3/lib/} @tab (library source code)\n@item @file{/var/tmp/BUILD/app/} @tab (application build objects here)\n@item @file{/var/tmp/BUILD/lib/} @tab (library build objects here)\n@end multitable\n@end example\n\nSince the library will be built in @file{/var/tmp/BUILD/lib}, the wrapper\nexecutable (which will be in @file{/var/tmp/BUILD/app}) must add that\ndirectory to @env{PATH} (actually, it must add the directory named\n@var{objdir} under @file{/var/tmp/BUILD/lib}, but we'll ignore that detail\nfor now).  However, Windows does not have a concept of Unix-style file or\ndirectory names such as @file{/var/tmp/BUILD/lib}.  Therefore, Wine provides\na mapping from Windows file names such as @file{C:\\Program Files} to specific\nUnix-style file names.  Wine also provides a utility that can be used to map\nUnix-style file names to Windows file names.\n\nIn this case, the wrapper executable should actually add the value\n\n@example\nZ:\\var\\tmp\\BUILD\\lib\n@end example\n\n@noindent\nto the @env{PATH}.  libtool contains support for path conversions of this\ntype, for a certain limited set of build and host platform combinations. In\nthis case, libtool will invoke Wine's @command{winepath} utility to ensure that\nthe correct @env{PATH} value is used.  For more information, see\n@pxref{File name conversion}.\n\n@node File name conversion\n@subsection File name conversion\n@cindex file name conversion\n@cindex path conversion\n\nIn certain situations, libtool must convert file names and paths between\nformats appropriate to different platforms.  Usually this occurs when\ncross-compiling, and affects only the ability to launch host platform\nexecutables on the build platform using an emulation or API-enhancement\nenvironment such as Wine.  Failure to convert paths\n(@pxref{File Name Conversion Failure}) will cause a warning to be issued, but\nrarely causes the build to fail---and should have no affect on the compiled\nproducts, once installed properly on the host platform.  For more information,\n@pxref{Cross compiling}.\n\nHowever, file name conversion may also occur in another scenario: when using a\nUnix emulation system on Windows (such as Cygwin or MSYS), combined with a\nnative Windows compiler such as MinGW or MSVC.  Only a limited set of such\nscenarios are currently supported; in other cases file name conversion is\nskipped.  The lack of file name conversion usually means that uninstalled\nexecutables can't be launched, but only rarely causes the build to fail\n(@pxref{File Name Conversion Failure}).\n\nlibtool supports file name conversion in the following scenarios:\n\n@multitable @columnfractions .25 .25 .5\n@headitem build platform @tab host platform @tab Notes\n@item MinGW (MSYS) @tab MinGW (Windows)\n@tab @pxref{Native MinGW File Name Conversion}\n\n@item Cygwin @tab MinGW (Windows)\n@tab @pxref{Cygwin/Windows File Name Conversion}\n\n@item Unix + Wine @tab MinGW (Windows)\n@tab Requires Wine. @pxref{Unix/Windows File Name Conversion}\n\n@item MinGW (MSYS) @tab Cygwin\n@tab Requires @env{LT_CYGPATH}. @pxref{LT_CYGPATH}. Provided for testing\npurposes only.\n\n@item Unix + Wine @tab Cygwin\n@tab Requires both Wine and @env{LT_CYGPATH}, but does not yet work with\nCygwin 1.7.7 and Wine-1.2.\nSee @pxref{Unix/Windows File Name Conversion} and @pxref{LT_CYGPATH}.\n@end multitable\n\n@menu\n* File Name Conversion Failure::  What happens when file name conversion fails\n* Native MinGW File Name Conversion::  MSYS file name conversion idiosyncrasies\n* Cygwin/Windows File Name Conversion::  Using @command{cygpath} to convert Cygwin file names\n* Unix/Windows File Name Conversion::  Using Wine to convert Unix paths\n* LT_CYGPATH::                  Invoking @command{cygpath} from other environments\n* Cygwin to MinGW Cross::       Other notes concerning MinGW cross\n@end menu\n\n@node File Name Conversion Failure\n@subsubsection File Name Conversion Failure\n@cindex File Name Conversion - Failure\n@cindex Path Conversion - Failure\n\nIn most cases, file name conversion is not needed or attempted.  However, when\nlibtool detects that a specific combination of build and host platform does\nrequire file name conversion, it is possible that the conversion may fail.\nIn these cases, you may see a warning such as the following:\n\n@example\nCould not determine the host file name corresponding to\n  `... a file name ...'\nContinuing, but uninstalled executables may not work.\n@end example\n\n@noindent\nor\n\n@example\nCould not determine the host path corresponding to\n  `... a path ...'\nContinuing, but uninstalled executables may not work.\n@end example\n\n@noindent\nThis should not cause the build to fail.  At worst, it means that the wrapper\nexecutable will specify file names or paths appropriate for the build platform.\nSince those are not appropriate for the host platform, the uninstalled\nexecutables would not operate correctly, even when the wrapper executable is\nlaunched via the appropriate emulation or API-enhancement (e.g. Wine).  Simply\ninstall the executables on the host platform, and execute them there.\n\n@node Native MinGW File Name Conversion\n@subsubsection Native MinGW File Name Conversion\n@cindex File Name Conversion - MinGW\n@cindex Path Conversion - MinGW\n@cindex MSYS\n\nMSYS is a Unix emulation environment for Windows, and is specifically designed\nsuch that in normal usage it @emph{pretends} to be MinGW or native Windows,\nbut understands Unix-style file names and paths, and supports standard Unix\ntools and shells.  Thus, ``native'' MinGW builds are actually an odd sort of\ncross-compile, from an MSYS Unix emulation environment ``pretending'' to be\nMinGW, to actual native Windows.\n\nWhen an MSYS shell launches a native Windows executable (as opposed to other\n@emph{MSYS} executables), it uses a system of heuristics to detect any\ncommand-line arguments that contain file names or paths.  It automatically\nconverts these file names from the MSYS (Unix-like) format, to the\ncorresponding Windows file name, before launching the executable.  However,\nthis auto-conversion facility is only available when using the MSYS runtime\nlibrary.  The wrapper executable itself is a MinGW application (that is, it\ndoes not use the MSYS runtime library).  The wrapper executable must set\n@env{PATH} to, and call @code{_spawnv} with, values that have already been\nconverted from MSYS format to Windows.  Thus, when libtool writes the source\ncode for the wrapper executable, it must manually convert MSYS paths to\nWindows format, so that the Windows values can be hard-coded into the wrapper\nexecutable.\n\n@node Cygwin/Windows File Name Conversion\n@subsubsection Cygwin/Windows File Name Conversion\n@cindex File Name Conversion - Cygwin to Windows\n@cindex Path Conversion - Cygwin to Windows\n\nCygwin provides a Unix emulation environment for Windows.  As part of that\nemulation, it provides a file system mapping that presents the Windows file\nsystem in a Unix-compatible manner.  Cygwin also provides a utility\n@command{cygpath} that can be used to convert file names and paths between\nthe two representations.  In a correctly configured Cygwin installation,\n@command{cygpath} is always present, and is in the @env{PATH}.\n\nLibtool uses @command{cygpath} to convert from Cygwin (Unix-style) file names\nand paths to Windows format when the build platform is Cygwin and the host\nplatform is MinGW.\n\nWhen the host platform is Cygwin, but the build platform is MSYS or some Unix\nsystem, libtool also uses @command{cygpath} to convert from Windows to Cygwin\nformat (after first converting from the build platform format to Windows format;\nsee @pxref{Native MinGW File Name Conversion} and\n@pxref{Unix/Windows File Name Conversion}).  Because the build platform is not\nCygwin, @command{cygpath} is not (and should not be) in the @env{PATH}.\nTherefore, in this configuration the environment variable @env{LT_CYGPATH} is\nrequired. @xref{LT_CYGPATH}.\n\n@node Unix/Windows File Name Conversion\n@subsubsection Unix/Windows File Name Conversion\n@cindex File Name Conversion - Unix to Windows\n@cindex Path Conversion - Unix to Windows\n\n\n@uref{http://www.winehq.org/, Wine} provides an interpretation environment for\nsome Unix platforms in which Windows applications can be executed.  It provides\na mapping between the Unix file system and a virtual Windows file system used\nby the Windows programs.  For the file name conversion to work, Wine must be\ninstalled and properly configured on the build platform, and the\n@command{winepath} application must be in the build platform's @env{PATH}.  In\naddition, on 32bit GNU/Linux it is usually helpful if the binfmt extension is\nenabled.\n\n@node LT_CYGPATH\n@subsubsection LT_CYGPATH\n@cindex LT_CYGPATH\n\nFor some cross-compile configurations (where the host platform is Cygwin), the\n@command{cygpath} program is used to convert file names from the build platform\nnotation to the Cygwin form (technically, this conversion is from Windows\nnotation to Cygwin notation; the conversion from the build platform format\nto Windows notation is performed via other means).  However, because the\n@command{cygpath} program is not (and should not be) in the @env{PATH} on\nthe build platform, @env{LT_CYGPATH} must specify the full build platform\nfile name (that is, the full Unix or MSYS file name) of the @command{cygpath}\nprogram.\n\nThe reason @command{cygpath} should not be in the build platform @env{PATH} is\ntwofold: first, @command{cygpath} is usually installed in the same directory as\nmany other Cygwin executables, such as @command{sed}, @command{cp}, etc.  If\nthe build platform environment had this directory in its @env{PATH}, then these\nCygwin versions of common Unix utilities might be used in preference to the\nones provided by the build platform itself, with deleterious effects.  Second,\nespecially when Cygwin-1.7 or later is used, multiple Cygwin installations can\ncoexist within the same Windows instance.  Each installation will have separate\n``mount tables'' specified in @file{@var{CYGROOT-N}/etc/fstab}.  These\n@dfn{mount tables} control how that instance of Cygwin will map Windows file\nnames and paths to Cygwin form.  Each installation's @command{cygpath} utility\nautomatically deduces the appropriate @file{/etc/fstab} file.  Since each\n@file{@var{CYGROOT-N}/etc/fstab} mount table may specify different mappings, it\nmatters which @command{cygpath} is used.\n\nNote that @command{cygpath} is a Cygwin application; to execute this tool from\nUnix requires a working and properly configured Wine installation, as well\nas enabling the GNU/Linux @code{binfmt} extension.  Furthermore, the Cygwin\n@command{setup.exe} tool should have been used, via Wine, to properly install\nCygwin into the Wine file system (and registry).\n\nUnfortunately, Wine support for Cygwin is intermittent.  Recent releases of\nCygwin (1.7 and above) appear to require more Windows API support than Wine\nprovides (as of Wine version 1.2); most Cygwin applications fail to execute.\nThis includes @command{cygpath} itself.  Hence, it is best @emph{not} to use\nthe LT_CYGPATH machinery in libtool when performing Unix to Cygwin\ncross-compiles.  Similarly, it is best @emph{not} to enable the GNU/Linux binfmt\nsupport in this configuration, because while Wine will fail to execute the\ncompiled Cygwin applications, it will still exit with status zero.  This tends\nto confuse build systems and test suites (including libtool's own testsuite,\nresulting in spurious reported failures).  Wine support for the older\nCygwin-1.5 series appears satisfactory, but the Cygwin team no longer supports\nCygwin-1.5.  It is hoped that Wine will eventually be improved such that\nCygwin-1.7 will again operate correctly under Wine.  Until then, libtool will\nreport warnings as described in @pxref{File Name Conversion Failure} in these\nscenarios.\n\nHowever, @env{LT_CYGPATH} is also used for the MSYS to Cygwin cross compile\nscenario, and operates as expected.\n\n@node Cygwin to MinGW Cross\n@subsubsection Cygwin to MinGW Cross\n@cindex Cygwin to MinGW Cross\n\nThere are actually three different scenarios that could all legitimately be\ncalled a ``Cygwin to MinGW'' cross compile.  The current (and standard)\ndefinition is when there is a compiler that produces native Windows libraries\nand applications, but which itself is a Cygwin application, just as would be\nexpected in any other cross compile setup.\n\nHowever, historically there were two other definitions, which we will refer\nto as the @emph{fake} one, and the @emph{lying} one.\n\nIn the @emph{fake} Cygwin to MinGW cross compile case, you actually use a\nnative MinGW compiler, but you do so from within a Cygwin environment:\n\n@example\n@kbd{export PATH=\"/c/MinGW/bin:$@{PATH@}\"}\n@kbd{configure --build=i686-pc-cygwin \\\n\t--host=mingw32 \\\n\tNM=/c/MinGW/bin/nm.exe}\n@end example\n\nIn this way, the build system ``knows'' that you are cross compiling, and the\nfile name conversion logic will be used.  However, because the tools\n(@command{mingw32-gcc}, @command{nm}, @command{ar}) used are actually native\nWindows applications, they will not understand any Cygwin (that is, Unix-like)\nabsolute file names passed as command line arguments (and, unlike MSYS, Cygwin\ndoes not automatically convert such arguments).  However, so long as only\nrelative file names are used in the build system, and non-Windows-supported\nUnix idioms such as symlinks and mount points are avoided, this scenario should\nwork.\n\nIf you must use absolute file names, you will have to force Libtool to convert\nfile names for the toolchain in this case, by doing the following before you\nrun configure:\n\n@example\n@kbd{export lt_cv_to_tool_file_cmd=func_convert_file_cygwin_to_w32}\n@end example\n@cindex lt_cv_to_tool_file_cmd\n@cindex func_convert_file_cygwin_to_w32\n\nIn the @emph{lying} Cygwin to MinGW cross compile case, you lie to the\nbuild system:\n\n@example\n@kbd{export PATH=\"/c/MinGW/bin:$@{PATH@}\"}\n@kbd{configure --build=i686-pc-mingw32 \\\n\t--host=i686-pc-mingw32 \\\n\t--disable-dependency-tracking}\n@end example\n\n@noindent\nand claim that the build platform is MinGW, even though you are actually\nrunning under @emph{Cygwin} and not MinGW.  In this case, libtool does\n@emph{not} know that you are performing a cross compile, and thinks instead\nthat you are performing a native MinGW build.  However, as described in\n(@pxref{Native MinGW File Name Conversion}), that scenario triggers an ``MSYS\nto Windows'' file name conversion.  This, of course, is the wrong conversion\nsince we are actually running under Cygwin.  Also, the toolchain is expecting\nWindows file names (not Cygwin) but unless told so Libtool will feed Cygwin\nfile names to the toolchain in this case.  To force the correct file name\nconversions in this situation, you should do the following @emph{before}\nrunning configure:\n\n@example\n@kbd{export lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32}\n@kbd{export lt_cv_to_tool_file_cmd=func_convert_file_cygwin_to_w32}\n@end example\n@cindex lt_cv_to_host_file_cmd\n@cindex lt_cv_to_tool_file_cmd\n@cindex func_convert_file_cygwin_to_w32\n\nNote that this relies on internal implementation details of libtool, and\nis subject to change.  Also, @code{--disable-dependency-tracking} is required,\nbecause otherwise the MinGW GCC will generate dependency files that contain\nWindows file names.  This, in turn, will confuse the Cygwin @command{make}\nprogram, which does not accept Windows file names:\n\n@example\nMakefile:1: *** target pattern contains no `%'.  Stop.\n@end example\n\nThere have also always been a number of other details required for the\n@emph{lying} case to operate correctly, such as the use of so-called\n@dfn{identity mounts}:\n\n@example\n# @var{cygwin-root}/etc/fstab\nD:/foo    /foo     some_fs binary 0 0\nD:/bar    /bar     some_fs binary 0 0\nE:/grill  /grill   some_fs binary 0 0\n@end example\n\nIn this way, top-level directories of each drive are available using\nidentical names within Cygwin.\n\nNote that you also need to ensure that the standard Unix directories\n(like @file{/bin}, @file{/lib}, @file{/usr}, @file{/etc}) appear in the root\nof a drive.  This means that you must install Cygwin itself into the @file{C:/}\nroot directory (or @file{D:/}, or @file{E:/}, etc)---instead of the\nrecommended installation into @file{C:/cygwin/}.  In addition, all file names\nused in the build system must be relative, symlinks should not be used within\nthe source or build directory trees, and all @option{-M*} options to\n@command{gcc} except @option{-MMD} must be avoided.\n\nThis is quite a fragile setup, but it has been in historical use, and so is\ndocumented here.\n\n@node Windows DLLs\n@subsection Windows DLLs\n@cindex Windows DLLs\n\nThis topic describes a couple of ways to portably create Windows Dynamic\nLink Libraries (DLLs).  Libtool knows how to create DLLs using GNU tools\nand using Microsoft tools.\n\nA typical library has a ``hidden'' implementation with an interface\ndescribed in a header file.  On just about every system, the interface\ncould be something like this:\n\nExample @file{foo.h}:\n\n@example\n#ifndef FOO_H\n#define FOO_H\n\nint one (void);\nint two (void);\nextern int three;\n\n#endif /* FOO_H */\n@end example\n\n@noindent\nAnd the implementation could be something like this:\n\nExample @file{foo.c}:\n\n@example\n#include \"foo.h\"\n\nint one (void)\n@{\n  return 1;\n@}\n\nint two (void)\n@{\n  return three - one ();\n@}\n\nint three = 3;\n@end example\n\nWhen using contemporary GNU tools to create the Windows DLL, the above\ncode will work there too, thanks to its auto-import/auto-export\nfeatures.  But that is not the case when using older GNU tools or perhaps\nmore interestingly when using proprietary tools.  In those cases the code\nwill need additional decorations on the interface symbols with\n@code{__declspec(dllimport)} and @code{__declspec(dllexport)} depending\non whether the library is built or it's consumed and how it's built and\nconsumed.  However, it should be noted that it would have worked also\nwith Microsoft tools, if only the variable @code{three} hadn't been\nthere, due to the fact the Microsoft tools will automatically import\nfunctions (but sadly not variables) and Libtool will automatically export\nnon-static symbols as described next.\n\nWith Microsoft tools, Libtool digs through the object files that make up\nthe library, looking for non-static symbols to automatically export.\nI.e., Libtool with Microsoft tools tries to mimic the auto-export feature\nof contemporary GNU tools.  It should be noted that the GNU auto-export\nfeature is turned off when an explicit @code{__declspec(dllexport)} is\nseen.  The GNU tools do this to not make more symbols visible for projects\nthat have already taken the trouble to decorate symbols.  There is no\nsimilar way to limit which symbols are visible in the code when Libtool\nis using Microsoft tools.  In order to limit symbol visibility in that\ncase you need to use one of the options @option{-export-symbols} or\n@option{-export-symbols-regex}.\n\nNo matching help with auto-import is provided by Libtool, which is why\nvariables must be decorated to import them from a DLL for everything but\ncontemporary GNU tools.  As stated above, functions are automatically\nimported by both contemporary GNU tools and Microsoft tools, but for\nother proprietary tools the auto-import status of functions is unknown.\n\nWhen the objects that form the library are built, there are generally\ntwo copies built for each object.  One copy is used when linking the DLL\nand one copy is used for the static library.  On Windows systems, a pair\nof defines are commonly used to discriminate how the interface symbols\nshould be decorated.  The first define is @samp{-DDLL_EXPORT} which is\nautomatically provided by Libtool when @command{libtool} builds the copy\nof the object that is destined for the DLL.  The second define is\n@samp{-DLIBFOO_BUILD} (or similar) which is often added by the package\nproviding the library and is used when building the library, but not\nwhen consuming the library.\n\nHowever, the matching double compile is not performed when consuming\nlibraries.  It is therefore not possible to reliably distinguish if the\nconsumer is importing from a DLL or if it is going to use a static\nlibrary.\n\nWith contemporary GNU tools, auto-import often saves the day, but see\nthe GNU ld documentation and its @option{--enable-auto-import} option\nfor some corner cases when it does not\n(@pxref{Options, @option{--enable-auto-import}, Options specific to\ni386 PE targets, ld, Using ld@comma{} the GNU linker}).\n\nWith Microsoft tools you typically get away with always compiling the\ncode such that variables are expected to be imported from a DLL and\nfunctions are expected to be found in a static library.  The tools will\nthen automatically import the function from a DLL if that is where they\nare found.  If the variables are not imported from a DLL as expected, but\nare found in a static library that is otherwise pulled in by some\nfunction, the linker will issue a warning (LNK4217) that a locally\ndefined symbol is imported, but it still works.  In other words, this\nscheme will not work to only consume variables from a library.  There is\nalso a price connected to this liberal use of imports in that an extra\nindirection is introduced when you are consuming the static version of\nthe library.  That extra indirection is unavoidable when the DLL is\nconsumed, but it is not needed when consuming the static library.\n\nFor older GNU tools and other proprietary tools there is no generic way\nto make it possible to consume either of the DLL or the static library\nwithout user intervention, the tools need to be told what is intended.\nOne common assumption is that if a DLL is being built (@samp{DLL_EXPORT}\nis defined) then that DLL is going to consume any dependent libraries as\nDLLs.  If that assumption is made everywhere, it is possible to select\nhow an end-user application is consuming libraries by adding a single\nflag @samp{-DDLL_EXPORT} when a DLL build is required.  This is of course\nan all or nothing deal, either everything as DLLs or everything as static\nlibraries.\n\nTo sum up the above, the header file of the foo library needs to be\nchanged into something like this:\n\nModified @file{foo.h}:\n\n@example\n#ifndef FOO_H\n#define FOO_H\n\n#if defined _WIN32 && !defined __GNUC__\n# ifdef LIBFOO_BUILD\n#  ifdef DLL_EXPORT\n#   define LIBFOO_SCOPE            __declspec (dllexport)\n#   define LIBFOO_SCOPE_VAR extern __declspec (dllexport)\n#  endif\n# elif defined _MSC_VER\n#  define LIBFOO_SCOPE\n#  define LIBFOO_SCOPE_VAR  extern __declspec (dllimport)\n# elif defined DLL_EXPORT\n#  define LIBFOO_SCOPE             __declspec (dllimport)\n#  define LIBFOO_SCOPE_VAR  extern __declspec (dllimport)\n# endif\n#endif\n#ifndef LIBFOO_SCOPE\n# define LIBFOO_SCOPE\n# define LIBFOO_SCOPE_VAR extern\n#endif\n\nLIBFOO_SCOPE     int one (void);\nLIBFOO_SCOPE     int two (void);\nLIBFOO_SCOPE_VAR int three;\n\n#endif /* FOO_H */\n@end example\n\nWhen the targets are limited to contemporary GNU tools and Microsoft\ntools, the above can be simplified to the following:\n\nSimplified @file{foo.h}:\n\n@example\n#ifndef FOO_H\n#define FOO_H\n\n#if defined _WIN32 && !defined __GNUC__ && !defined LIBFOO_BUILD\n# define LIBFOO_SCOPE_VAR extern __declspec (dllimport)\n#else\n# define LIBFOO_SCOPE_VAR extern\n#endif\n\nint one (void);\nint two (void);\nLIBFOO_SCOPE_VAR int three;\n\n#endif /* FOO_H */\n@end example\n\nThis last simplified version can of course only work when Libtool is\nused to build the DLL, as no symbols would be exported otherwise (i.e.,\nwhen using Microsoft tools).\n\nIt should be noted that there are various projects that attempt to relax\nthese requirements by various low level tricks, but they are not\ndiscussed here.\nExamples are\n@uref{http://alain.frisch.fr/@/flexdll.html, FlexDLL} and\n@uref{http://edll.sourceforge.net/, edll}.\n\n\n@node libtool script contents\n@section @code{libtool} script contents\n@cindex implementation of libtool\n@cindex libtool implementation\n\nSince version 1.4, the @code{libtool} script is generated by\n@code{configure} (@pxref{Configuring}).  In earlier versions,\n@code{configure} achieved this by calling a helper script called\n@file{ltconfig}.  From libtool version 0.7 to 1.0, this script\nsimply set shell variables, then sourced the libtool backend,\n@code{ltmain.sh}.  @code{ltconfig} from libtool version 1.1 through 1.3\ninlined the contents of @code{ltmain.sh} into the generated\n@code{libtool}, which improved performance on many systems.  The tests\nthat @file{ltconfig} used to perform are now kept in @file{libtool.m4}\nwhere they can be written using Autoconf.  This has the runtime\nperformance benefits of inlined @code{ltmain.sh}, @emph{and} improves\nthe build time a little while considerably easing the amount of raw\nshell code that used to need maintaining.\n\nThe convention used for naming variables that hold shell commands for\ndelayed evaluation, is to use the suffix @code{_cmd} where a single\nline of valid shell script is needed, and the suffix @code{_cmds} where\nmultiple lines of shell script @strong{may} be delayed for later\nevaluation.  By convention, @code{_cmds} variables delimit the\nevaluation units with the @code{~} character where necessary.\n\nHere is a listing of each of the configuration variables, and how they\nare used within @code{ltmain.sh} (@pxref{Configuring}):\n\n@defvar AR\nThe name of the system library archiver.\n@end defvar\n\n@defvar CC\nThe name of the compiler used to configure libtool.  This will always\ncontain the compiler for the current language (@pxref{Tags}).\n@end defvar\n\n@defvar ECHO\nAn @command{echo} program that does not interpret backslashes as an\nescape character.  It may be given only one argument, so due quoting\nis necessary.\n@end defvar\n\n@defvar LD\nThe name of the linker that libtool should use internally for reloadable\nlinking and possibly shared libraries.\n@end defvar\n\n@defvar LTCC\n@defvarx LTCFLAGS\nThe name of the C compiler and C compiler flags used to configure\nlibtool.\n@end defvar\n\n@defvar NM\nThe name of a BSD- or MS-compatible program that produces listings of\nglobal symbols.\nFor BSD @command{nm}, the symbols should be in one the following formats:\n\n@example\n@var{address} C @var{global-variable-name}\n@var{address} D @var{global-variable-name}\n@var{address} T @var{global-function-name}\n@end example\n\nFor MS @command{dumpbin}, the symbols should be in one of the following\nformats:\n\n@example\n@var{counter} @var{size}    UNDEF    notype       External     | @var{global-var}\n@var{counter} @var{address} @var{section}  notype       External     | @var{global-var}\n@var{counter} @var{address} @var{section}  notype ()    External     | @var{global-func}\n@end example\n\nThe @var{size} of the global variables are not zero and the @var{section}\nof the global functions are not \"UNDEF\". Symbols in \"pick any\" sections\n(\"pick any\" appears in the section header) are not global either.\n@end defvar\n\n@defvar RANLIB\nSet to the name of the @command{ranlib} program, if any.\n@end defvar\n\n@defvar allow_undefined_flag\nThe flag that is used by @samp{archive_cmds} in order to declare that\nthere will be unresolved symbols in the resulting shared library.\nEmpty, if no such flag is required.  Set to @samp{unsupported} if there\nis no way to generate a shared library with references to symbols that\naren't defined in that library.\n@end defvar\n\n@defvar always_export_symbols\nWhether libtool should automatically generate a list of exported symbols\nusing @code{export_symbols_cmds} before linking an archive.\nSet to @samp{yes} or @samp{no}.  Default is @samp{no}.\n@end defvar\n\n@defvar archive_cmds\n@defvarx archive_expsym_cmds\n@defvarx old_archive_cmds\nCommands used to create shared libraries, shared libraries with\n@option{-export-symbols} and static libraries, respectively.\n@end defvar\n\n@defvar archiver_list_spec\nSpecify filename containing input files for @code{AR}.\n@end defvar\n\n@defvar old_archive_from_new_cmds\nIf the shared library depends on a static library,\n@samp{old_archive_from_new_cmds} contains the commands used to create that\nstatic library.  If this variable is not empty, @samp{old_archive_cmds} is\nnot used.\n@end defvar\n\n@defvar old_archive_from_expsyms_cmds\nIf a static library must be created from the export symbol list in order to\ncorrectly link with a shared library, @samp{old_archive_from_expsyms_cmds}\ncontains the commands needed to create that static library.  When these\ncommands are executed, the variable @code{soname} contains the name of the\nshared library in question, and the @samp{$objdir/$newlib} contains the\npath of the static library these commands should build.  After executing\nthese commands, libtool will proceed to link against @samp{$objdir/$newlib}\ninstead of @code{soname}.\n@end defvar\n\n@defvar lock_old_archive_extraction\nSet to @samp{yes} if the extraction of a static library requires locking\nthe library file.  This is required on Darwin.\n@end defvar\n\n@defvar build\n@defvarx build_alias\n@defvarx build_os\nSet to the specified and canonical names of the system that libtool was\nbuilt on.\n@end defvar\n\n@defvar build_libtool_libs\nWhether libtool should build shared libraries on this system.  Set to\n@samp{yes} or @samp{no}.\n@end defvar\n\n@defvar build_old_libs\nWhether libtool should build static libraries on this system.  Set to\n@samp{yes} or @samp{no}.\n@end defvar\n\n@defvar compiler_c_o\nWhether the compiler supports the @option{-c} and @option{-o} options\nsimultaneously.  Set to @samp{yes} or @samp{no}.\n@end defvar\n\n@defvar compiler_needs_object\nWhether the compiler has to see an object listed on the command line in\norder to successfully invoke the linker.  If @samp{no}, then a set of\nconvenience archives or a set of object file names can be passed via\nlinker-specific options or linker scripts.\n@end defvar\n\n@defvar dlopen_support\nWhether @code{dlopen} is supported on the platform.\nSet to @samp{yes} or @samp{no}.\n@end defvar\n\n@defvar dlopen_self\nWhether it is possible to @code{dlopen} the executable itself.\nSet to @samp{yes} or @samp{no}.\n@end defvar\n\n@defvar dlopen_self_static\nWhether it is possible to @code{dlopen} the executable itself, when it\nis linked statically (@option{-all-static}).  Set to @samp{yes} or\n@samp{no}.\n@end defvar\n\n@defvar exclude_expsyms\nList of symbols that should not be listed in the preloaded symbols.\n@end defvar\n\n@defvar export_dynamic_flag_spec\nCompiler link flag that allows a dlopened shared library to reference\nsymbols that are defined in the program.\n@end defvar\n\n@defvar export_symbols_cmds\nCommands to extract exported symbols from @code{libobjs} to the\nfile @code{export_symbols}.\n@end defvar\n\n@defvar extract_expsyms_cmds\nCommands to extract the exported symbols list from a shared library.\nThese commands are executed if there is no file @samp{$objdir/$soname-def},\nand should write the names of the exported symbols to that file, for\nthe use of @samp{old_archive_from_expsyms_cmds}.\n@end defvar\n\n@defvar fast_install\nDetermines whether libtool will privilege the installer or the\ndeveloper.  The assumption is that installers will seldom run programs\nin the build tree, and the developer will seldom install.  This is only\nmeaningful on platforms where @code{shlibpath_overrides_runpath} is\nnot @samp{yes}, so @code{fast_install} will be set to @samp{needless} in\nthis case.  If @code{fast_install} set to @samp{yes}, libtool will create\nprograms that search for installed libraries, and, if a program is run\nin the build tree, a new copy will be linked on-demand to use the\nyet-to-be-installed libraries.  If set to @samp{no}, libtool will create\nprograms that use the yet-to-be-installed libraries, and will link\na new copy of the program at install time.  The default value is\n@samp{yes} or @samp{needless}, depending on platform and configuration\nflags, and it can be turned from @samp{yes} to @samp{no} with the\nconfigure flag @option{--disable-fast-install}.\n\nOn some systems, the linker always hardcodes paths to dependent libraries\ninto the output.  In this case, @code{fast_install} is never set to @samp{yes},\nand relinking at install time is triggered.  This also means that @env{DESTDIR}\ninstallation does not work as expected.\n@end defvar\n\n@defvar file_magic_glob\nHow to find potential files when @code{deplibs_check_method} is\n@samp{file_magic}. @code{file_magic_glob} is a @code{sed} expression,\nand the @code{sed} instance is fed potential file names that are\ntransformed by the @code{file_magic_glob} expression. Useful when the\nshell does not support the shell option @code{nocaseglob}, making\n@code{want_nocaseglob} inappropriate. Normally disabled (i.e.\n@code{file_magic_glob} is empty).\n@end defvar\n\n@defvar finish_cmds\nCommands to tell the dynamic linker how to find shared libraries in a\nspecific directory.\n@end defvar\n\n@defvar finish_eval\nSame as @code{finish_cmds}, except the commands are not displayed.\n@end defvar\n\n@defvar global_symbol_pipe\nA pipeline that takes the output of @code{NM}, and produces a listing of\nraw symbols followed by their C names.  For example:\n\n@example\n$ @kbd{eval \"$NM progname | $global_symbol_pipe\"}\nD @var{symbol1} @var{C-symbol1}\nT @var{symbol2} @var{C-symbol2}\nC @var{symbol3} @var{C-symbol3}\n@dots{}\n$\n@end example\n\nThe first column contains the symbol type (used to tell data from code)\nbut its meaning is system dependent.\n@end defvar\n\n@defvar global_symbol_to_cdecl\nA pipeline that translates the output of @code{global_symbol_pipe} into\nproper C declarations.  Since some platforms, such as HP/UX, have\nlinkers that differentiate code from data, data symbols are declared\nas data, and code symbols are declared as functions.\n@end defvar\n\n@defvar hardcode_action\nEither @samp{immediate} or @samp{relink}, depending on whether shared\nlibrary paths can be hardcoded into executables before they are installed,\nor if they need to be relinked.\n@end defvar\n\n@defvar hardcode_direct\nSet to @samp{yes} or @samp{no}, depending on whether the linker\nhardcodes directories if a library is directly specified on the command\nline (such as @samp{@var{dir}/lib@var{name}.a}) when\n@code{hardcode_libdir_flag_spec} is specified.\n@end defvar\n\n@defvar hardcode_direct_absolute\nSome architectures hardcode \"absolute\" library directories that can not\nbe overridden by @code{shlibpath_var} when @code{hardcode_direct} is\n@samp{yes}.  In that case set @code{hardcode_direct_absolute} to\n@samp{yes}, or otherwise @samp{no}.\n@end defvar\n\n@defvar hardcode_into_libs\nWhether the platform supports hardcoding of run-paths into libraries.\nIf enabled, linking of programs will be much simpler but libraries will\nneed to be relinked during installation.  Set to @samp{yes} or @samp{no}.\n@end defvar\n\n@defvar hardcode_libdir_flag_spec\nFlag to hardcode a @code{libdir} variable into a binary, so that the\ndynamic linker searches @code{libdir} for shared libraries at runtime.\nIf it is empty, libtool will try to use some other hardcoding mechanism.\n@end defvar\n\n@defvar hardcode_libdir_separator\nIf the compiler only accepts a single @code{hardcode_libdir_flag}, then\nthis variable contains the string that should separate multiple\narguments to that flag.\n@end defvar\n\n@defvar hardcode_minus_L\nSet to @samp{yes} or @samp{no}, depending on whether the linker\nhardcodes directories specified by @option{-L} flags into the resulting\nexecutable when @code{hardcode_libdir_flag_spec} is specified.\n@end defvar\n\n@defvar hardcode_shlibpath_var\nSet to @samp{yes} or @samp{no}, depending on whether the linker\nhardcodes directories by writing the contents of @samp{$shlibpath_var}\ninto the resulting executable when @code{hardcode_libdir_flag_spec} is\nspecified.  Set to @samp{unsupported} if directories specified by\n@samp{$shlibpath_var} are searched at run time, but not at link time.\n@end defvar\n\n@defvar host\n@defvarx host_alias\n@defvarx host_os\nSet to the specified and canonical names of the system that libtool was\nconfigured for.\n@end defvar\n\n@defvar include_expsyms\nList of symbols that must always be exported when using @code{export_symbols}.\n@end defvar\n\n@defvar inherit_rpath\nWhether the linker adds runtime paths of dependency libraries to the\nruntime path list, requiring libtool to relink the output when installing.\nSet to @samp{yes} or @samp{no}.  Default is @samp{no}.\n@end defvar\n\n@defvar install_override_mode\nPermission mode override for installation of shared libraries.  If the\nruntime linker fails to load libraries with wrong permissions, then it\nmay fail to execute programs that are needed during installation,\nbecause these need the library that has just been installed.  In this\ncase, it is necessary to pass the mode to @command{install} with\n@option{-m @var{install_override_mode}}.\n@end defvar\n\n@defvar libext\nThe standard old archive suffix (normally @samp{a}).\n@end defvar\n\n@defvar libname_spec\nThe format of a library name prefix.  On all Unix systems, static\nlibraries are called @samp{lib@var{name}.a}, but on some systems (such\nas OS/2 or MS-DOS), the library is just called @samp{@var{name}.a}.\n@end defvar\n\n@defvar library_names_spec\nA list of shared library names.  The first is the name of the file,\nthe rest are symbolic links to the file.  The name in the list is\nthe file name that the linker finds when given @option{-l@var{name}}.\n@end defvar\n\n@defvar link_all_deplibs\nWhether libtool must link a program against all its dependency libraries.\nSet to @samp{yes} or @samp{no}.  Default is @samp{unknown}, which is\na synonym for @samp{yes}.\n@end defvar\n\n@defvar link_static_flag\nLinker flag (passed through the C compiler) used to prevent dynamic\nlinking.\n@end defvar\n\n@defvar macro_version\n@defvarx macro_revision\nThe release and revision from which the libtool.m4 macros were\ntaken.  This is used to ensure that macros and @code{ltmain.sh}\ncorrespond to the same Libtool version.\n@end defvar\n\n@defvar max_cmd_len\nThe approximate longest command line that can be passed to @samp{$SHELL}\nwithout being truncated, as computed by @samp{LT_CMD_MAX_LEN}.\n@end defvar\n\n@defvar need_lib_prefix\nWhether we can @code{dlopen} modules without a @samp{lib} prefix.\nSet to @samp{yes} or @samp{no}.  By default, it is @samp{unknown}, which\nmeans the same as @samp{yes}, but documents that we are not really sure\nabout it.  @samp{no} means that it is possible to @code{dlopen} a\nmodule without the @samp{lib} prefix.\n@end defvar\n\n@defvar need_version\nWhether versioning is required for libraries, i.e.@: whether the\ndynamic linker requires a version suffix for all libraries.\nSet to @samp{yes} or @samp{no}.  By default, it is @samp{unknown}, which\nmeans the same as @samp{yes}, but documents that we are not really sure\nabout it.\n@end defvar\n\n@defvar need_locks\nWhether files must be locked to prevent conflicts when compiling\nsimultaneously.  Set to @samp{yes} or @samp{no}.\n@end defvar\n\n@defvar nm_file_list_spec\nSpecify filename containing input files for @code{NM}.\n@end defvar\n\n@defvar no_builtin_flag\nCompiler flag to disable builtin functions that conflict with declaring\nexternal global symbols as @code{char}.\n@end defvar\n\n@defvar no_undefined_flag\nThe flag that is used by @samp{archive_cmds} in order to declare that\nthere will be no unresolved symbols in the resulting shared library.\nEmpty, if no such flag is required.\n@end defvar\n\n@defvar objdir\nThe name of the directory that contains temporary libtool files.\n@end defvar\n\n@defvar objext\nThe standard object file suffix (normally @samp{o}).\n@end defvar\n\n@defvar pic_flag\nAny additional compiler flags for building library object files.\n@end defvar\n\n@defvar postinstall_cmds\n@defvarx old_postinstall_cmds\nCommands run after installing a shared or static library, respectively.\n@end defvar\n\n@defvar postuninstall_cmds\n@defvarx old_postuninstall_cmds\nCommands run after uninstalling a shared or static library, respectively.\n@end defvar\n\n@defvar postlink_cmds\nCommands necessary for finishing linking programs. @code{postlink_cmds}\nare executed immediately after the program is linked.  Any occurrence of\nthe string @code{@@OUTPUT@@} in @code{postlink_cmds} is replaced by the\nname of the created executable (i.e.@: not the wrapper, if a wrapper is\ngenerated) prior to execution.  Similarly, @code{@@TOOL_OUTPUT@@} is\nreplaced by the toolchain format of @code{@@OUTPUT@@}.  Normally disabled\n(i.e.@: @code{postlink_cmds} empty).\n@end defvar\n\n@defvar reload_cmds\n@defvarx reload_flag\nCommands to create a reloadable object.  Set @code{reload_cmds} to\n@samp{false} on systems that cannot create reloadable objects.\n@end defvar\n\n@defvar runpath_var\nThe environment variable that tells the linker which directories to\nhardcode in the resulting executable.\n@end defvar\n\n@defvar shlibpath_overrides_runpath\nIndicates whether it is possible to override the hard-coded library\nsearch path of a program with an environment variable.  If this is set\nto no, libtool may have to create two copies of a program in the build\ntree, one to be installed and one to be run in the build tree only.\nWhen each of these copies is created depends on the value of\n@code{fast_install}.  The default value is @samp{unknown}, which is\nequivalent to @samp{no}.\n@end defvar\n\n@defvar shlibpath_var\nThe environment variable that tells the dynamic linker where to find\nshared libraries.\n@end defvar\n\n@defvar soname_spec\nThe name coded into shared libraries, if different from the real name of\nthe file.\n@end defvar\n\n@defvar striplib\n@defvarx old_striplib\nCommand to strip a shared (@code{striplib}) or static (@code{old_striplib})\nlibrary, respectively.  If these variables are empty, the strip flag\nin the install mode will be ignored for libraries (@pxref{Install mode}).\n@end defvar\n\n@defvar sys_lib_dlsearch_path_spec\nExpression to get the run-time system library search path.  Directories\nthat appear in this list are never hard-coded into executables.\n@end defvar\n\n@defvar sys_lib_search_path_spec\nExpression to get the compile-time system library search path.  This\nvariable is used by libtool when it has to test whether a certain\nlibrary is shared or static.  The directories listed in\n@code{shlibpath_var} are automatically appended to this list, every time\nlibtool runs (i.e., not at configuration time), because some linkers use\nthis variable to extend the library search path.  Linker switches such\nas @option{-L} also augment the search path.\n@end defvar\n\n@defvar thread_safe_flag_spec\nLinker flag (passed through the C compiler) used to generate thread-safe\nlibraries.\n@end defvar\n\n@defvar to_host_file_cmd\nIf the toolchain is not native to the build platform (e.g.@: if you are using\nMSYS to drive the scripting, but are using the MinGW native Windows compiler)\nthis variable describes how to convert file names from the format used by the\nbuild platform to the format used by host platform.  Normally set to\n@samp{func_convert_file_noop}, libtool will autodetect most cases in which\nother values should be used.  On rare occasions, it may be necessary to override\nthe autodetected value (@pxref{Cygwin to MinGW Cross}).\n@end defvar\n\n@defvar to_tool_file_cmd\nIf the toolchain is not native to the build platform (e.g.@: if you are using\nsome Unix to drive the scripting together with a Windows toolchain running\nin Wine) this variable describes how to convert file names from the format\nused by the build platform to the format used by the toolchain.  Normally set\nto @samp{func_convert_file_noop}.\n@end defvar\n\n@defvar version_type\nThe library version numbering type.  One of @samp{libtool},\n@samp{freebsd-aout}, @samp{freebsd-elf}, @samp{irix}, @samp{linux},\n@samp{osf}, @samp{sunos}, @samp{windows}, or @samp{none}.\n@end defvar\n\n@defvar want_nocaseglob\nFind potential files using the shell option @code{nocaseglob}, when\n@code{deplibs_check_method} is @samp{file_magic}. Normally set to\n@samp{no}. Set to @samp{yes} to enable the @code{nocaseglob} shell\noption when looking for potential file names in a case-insensitive\nmanner.\n@end defvar\n\n@defvar whole_archive_flag_spec\nCompiler flag to generate shared objects from convenience archives.\n@end defvar\n\n@defvar wl\nThe C compiler flag that allows libtool to pass a flag directly to the\nlinker.  Used as: @code{$@{wl@}@var{some-flag}}.\n@end defvar\n\nVariables ending in @samp{_cmds} or @samp{_eval} contain a\n@samp{~}-separated list of commands that are @code{eval}ed one after\nanother.  If any of the commands return a nonzero exit status, libtool\ngenerally exits with an error message.\n\nVariables ending in @samp{_spec} are @code{eval}ed before being used by\nlibtool.\n\n@node Cheap tricks\n@section Cheap tricks\n\nHere are a few tricks that you can use in order to make maintainership\neasier:\n\n@itemize @bullet\n@item\nWhen people report bugs, ask them to use the @option{--config},\n@option{--debug}, or @option{--features} flags, if you think they will help\nyou.  These flags are there to help you get information directly, rather\nthan having to trust second-hand observation.\n\n@item\nRather than reconfiguring libtool every time I make a change to\n@code{ltmain.in}, I keep a permanent @code{libtool} script in my\n@env{PATH}, which sources @code{ltmain.in} directly.\n\nThe following steps describe how to create such a script, where\n@code{/home/src/libtool} is the directory containing the libtool source\ntree, @code{/home/src/libtool/libtool} is a libtool script that has been\nconfigured for your platform, and @code{~/bin} is a directory in your\n@env{PATH}:\n\n@smallexample\ntrick$ cd ~/bin\ntrick$ sed 's%^\\(macro_version=\\).*$%\\1@@VERSION@@%;\n            s%^\\(macro_revision=\\).*$%\\1@@package_revision@@%;\n            /^# ltmain\\.sh/q' /home/src/libtool/libtool > libtool\ntrick$ echo '. /home/src/libtool/ltmain.in' >> libtool\ntrick$ chmod +x libtool\ntrick$ libtool --version\nltmain.sh (GNU @@PACKAGE@@@@TIMESTAMP@@) @@VERSION@@\n\nCopyright (C) 2011 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\ntrick$\n@end smallexample\n@end itemize\n\nThe output of the final @samp{libtool --version} command shows that the\n@code{ltmain.in} script is being used directly.  Now, modify\n@code{~/bin/libtool} or @code{/home/src/libtool/ltmain.in} directly in\norder to test new changes without having to rerun @code{configure}.\n\n@node GNU Free Documentation License\n@appendix GNU Free Documentation License\n\n@cindex FDL, GNU Free Documentation License\n\n@include fdl.texi\n\n@page\n@node Combined Index\n@unnumbered Combined Index\n\n@printindex cp\n\n@bye\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/doc/libtool.info-1": "This is doc/libtool.info, produced by makeinfo version 4.13 from\n./doc/libtool.texi.\n\nINFO-DIR-SECTION GNU programming tools\nSTART-INFO-DIR-ENTRY\n* Libtool: (libtool).           Generic shared library support script.\nEND-INFO-DIR-ENTRY\n\nINFO-DIR-SECTION Individual utilities\nSTART-INFO-DIR-ENTRY\n* libtool-invocation: (libtool)Invoking libtool.\n                                                Running the `libtool' script.\n* libtoolize: (libtool)Invoking libtoolize.     Adding libtool support.\nEND-INFO-DIR-ENTRY\n\n   This file documents GNU Libtool 2.4.2\n\n   Copyright (C) 1996-2011 Free Software Foundation, Inc.\n\n   Permission is granted to copy, distribute and/or modify this document\nunder the terms of the GNU Free Documentation License, Version 1.3 or\nany later version published by the Free Software Foundation; with no\nInvariant Sections, with no Front-Cover Texts, and with no Back-Cover\nTexts.  A copy of the license is included in the section entitled \"GNU\nFree Documentation License\".\n\n\u001f\nFile: libtool.info,  Node: Top,  Next: Introduction,  Prev: (dir),  Up: (dir)\n\nShared library support for GNU\n******************************\n\nThis file documents GNU Libtool, a script that allows package developers\nto provide generic shared library support.  This edition documents\nversion 2.4.2.\n\n   *Note Reporting bugs::, for information on how to report problems\nwith GNU Libtool.\n\n* Menu:\n\n* Introduction::                What the heck is libtool?\n* Libtool paradigm::            How libtool's view of libraries is different.\n* Using libtool::               Example of using libtool to build libraries.\n* Invoking libtool::            Running the `libtool' script.\n* Integrating libtool::         Using libtool in your own packages.\n* Other languages::             Using libtool without a C compiler.\n* Versioning::                  Using library interface versions.\n* Library tips::                Tips for library interface design.\n* Inter-library dependencies::  Libraries that depend on other libraries.\n* Dlopened modules::            `dlopen'ing libtool-created libraries.\n* Using libltdl::               Libtool's portable `dlopen' wrapper library.\n* Trace interface::             Libtool's trace interface.\n* FAQ::                         Frequently Asked Questions\n* Troubleshooting::             When libtool doesn't work as advertised.\n* Maintaining::                 Information used by the libtool maintainer.\n* GNU Free Documentation License::  License for this manual.\n* Combined Index::              Full index.\n\n --- The Detailed Node Listing ---\n\nIntroduction\n\n* Motivation::                  Why does GNU need a libtool?\n* Issues::                      The problems that need to be addressed.\n* Other implementations::       How other people have solved these issues.\n* Postmortem::                  Learning from past difficulties.\n\nUsing libtool\n\n* Creating object files::       Compiling object files for libraries.\n* Linking libraries::           Creating libraries from object files.\n* Linking executables::         Linking object files against libtool libraries.\n* Debugging executables::       Running GDB on libtool-generated programs.\n* Installing libraries::        Making libraries available to users.\n* Installing executables::      Making programs available to users.\n* Static libraries::            When shared libraries are not wanted.\n\nLinking executables\n\n* Wrapper executables::         Wrapper executables for some platforms.\n\nInvoking `libtool'\n\n* Compile mode::                Creating library object files.\n* Link mode::                   Generating executables and libraries.\n* Execute mode::                Debugging libtool-generated programs.\n* Install mode::                Making libraries and executables public.\n* Finish mode::                 Completing a library installation.\n* Uninstall mode::              Removing installed executables and libraries.\n* Clean mode::                  Removing uninstalled executables and libraries.\n\nIntegrating libtool with your package\n\n* Autoconf macros::             Autoconf macros exported by libtool.\n* Makefile rules::              Writing `Makefile' rules for libtool.\n* Using Automake::              Automatically supporting libtool.\n* Configuring::                 Configuring libtool for a host system.\n* Distributing::                What files to distribute with your package.\n* Static-only libraries::       Sometimes shared libraries are just a pain.\n\nConfiguring libtool\n\n* LT_INIT::                     Configuring `libtool' in `configure.ac'.\n* Configure notes::             Platform-specific notes for configuration.\n\nIncluding libtool in your package\n\n* Invoking libtoolize::         `libtoolize' command line options.\n* Autoconf and LTLIBOBJS::      Autoconf automates LTLIBOBJS generation.\n\nUsing libtool with other languages\n\n* C++ libraries::               Writing libraries for C++\n* Tags::                        Tags\n\nLibrary interface versions\n\n* Interfaces::                  What are library interfaces?\n* Libtool versioning::          Libtool's versioning system.\n* Updating version info::       Changing version information before releases.\n* Release numbers::             Breaking binary compatibility for aesthetics.\n\nTips for interface design\n\n* C header files::              How to write portable include files.\n\nDlopened modules\n\n* Building modules::            Creating dlopenable objects and libraries.\n* Dlpreopening::                Dlopening that works on static platforms.\n* Linking with dlopened modules::  Using dlopenable modules in libraries.\n* Finding the dlname::          Choosing the right file to `dlopen'.\n* Dlopen issues::               Unresolved problems that need your attention.\n\nUsing libltdl\n\n* Libltdl interface::           How to use libltdl in your programs.\n* Modules for libltdl::         Creating modules that can be `dlopen'ed.\n* Thread Safety in libltdl::    Registering callbacks for multi-thread safety.\n* User defined module data::    Associating data with loaded modules.\n* Module loaders for libltdl::  Creating user defined module loaders.\n* Distributing libltdl::        How to distribute libltdl with your package.\n\nFrequently Asked Questions about libtool\n\n* Stripped link flags::         Dropped flags when creating a library\n\nTroubleshooting\n\n* Libtool test suite::          Libtool's self-tests.\n* Reporting bugs::              How to report problems with libtool.\n\nThe libtool test suite\n\n* Test descriptions::           The contents of the old test suite.\n* When tests fail::             What to do when a test fails.\n\nMaintenance notes for libtool\n\n* New ports::                   How to port libtool to new systems.\n* Tested platforms::            When libtool was last tested.\n* Platform quirks::             Information about different library systems.\n* libtool script contents::     Configuration information that libtool uses.\n* Cheap tricks::                Making libtool maintainership easier.\n\nPorting libtool to new systems\n\n* Information sources::         Where to find relevant documentation\n* Porting inter-library dependencies::  Implementation details explained\n\nPlatform quirks\n\n* References::                  Finding more information.\n* Compilers::                   Creating object files from source files.\n* Reloadable objects::          Binding object files together.\n* Multiple dependencies::       Removing duplicate dependent libraries.\n* Archivers::                   Programs that create static archives.\n* Cross compiling::             Issues that arise when cross compiling.\n* File name conversion::        Converting file names between platforms.\n* Windows DLLs::                Windows header defines.\n\nFile name conversion\n\n* File Name Conversion Failure::  What happens when file name conversion fails\n* Native MinGW File Name Conversion::  MSYS file name conversion idiosyncrasies\n* Cygwin/Windows File Name Conversion::  Using `cygpath' to convert Cygwin file names\n* Unix/Windows File Name Conversion::  Using Wine to convert Unix paths\n* LT_CYGPATH::                  Invoking `cygpath' from other environments\n* Cygwin to MinGW Cross::       Other notes concerning MinGW cross\n\n\u001f\nFile: libtool.info,  Node: Introduction,  Next: Libtool paradigm,  Prev: Top,  Up: Top\n\n1 Introduction\n**************\n\nIn the past, if you were a source code package developer and wanted to\ntake advantage of the power of shared libraries, you needed to write\ncustom support code for each platform on which your package ran.  You\nalso had to design a configuration interface so that the package\ninstaller could choose what sort of libraries were built.\n\n   GNU Libtool simplifies your job by encapsulating both the\nplatform-specific dependencies, and the user interface, in a single\nscript.  GNU Libtool is designed so that the complete functionality of\neach host type is available via a generic interface, but nasty quirks\nare hidden from the programmer.\n\n   GNU Libtool's consistent interface is reassuring... users don't need\nto read obscure documentation in order to have their favorite source\npackage build shared libraries.  They just run your package `configure'\nscript (or equivalent), and libtool does all the dirty work.\n\n   There are several examples throughout this document.  All assume the\nsame environment: we want to build a library, `libhello', in a generic\nway.\n\n   `libhello' could be a shared library, a static library, or both...\nwhatever is available on the host system, as long as libtool has been\nported to it.\n\n   This chapter explains the original design philosophy of libtool.\nFeel free to skip to the next chapter, unless you are interested in\nhistory, or want to write code to extend libtool in a consistent way.\n\n* Menu:\n\n* Motivation::                  Why does GNU need a libtool?\n* Issues::                      The problems that need to be addressed.\n* Other implementations::       How other people have solved these issues.\n* Postmortem::                  Learning from past difficulties.\n\n\u001f\nFile: libtool.info,  Node: Motivation,  Next: Issues,  Up: Introduction\n\n1.1 Motivation for writing libtool\n==================================\n\nSince early 1995, several different GNU developers have recognized the\nimportance of having shared library support for their packages.  The\nprimary motivation for such a change is to encourage modularity and\nreuse of code (both conceptually and physically) in GNU programs.\n\n   Such a demand means that the way libraries are built in GNU packages\nneeds to be general, to allow for any library type the package installer\nmight want.  The problem is compounded by the absence of a standard\nprocedure for creating shared libraries on different platforms.\n\n   The following sections outline the major issues facing shared library\nsupport in GNU, and how shared library support could be standardized\nwith libtool.\n\n   The following specifications were used in developing and evaluating\nthis system:\n\n  1. The system must be as elegant as possible.\n\n  2. The system must be fully integrated with the GNU Autoconf and\n     Automake utilities, so that it will be easy for GNU maintainers to\n     use.  However, the system must not require these tools, so that it\n     can be used by non-GNU packages.\n\n  3. Portability to other (non-GNU) architectures and tools is\n     desirable.\n\n\u001f\nFile: libtool.info,  Node: Issues,  Next: Other implementations,  Prev: Motivation,  Up: Introduction\n\n1.2 Implementation issues\n=========================\n\nThe following issues need to be addressed in any reusable shared library\nsystem, specifically libtool:\n\n  1. The package installer should be able to control what sort of\n     libraries are built.\n\n  2. It can be tricky to run dynamically linked programs whose\n     libraries have not yet been installed.  `LD_LIBRARY_PATH' must be\n     set properly (if it is supported), or programs fail to run.\n\n  3. The system must operate consistently even on hosts that don't\n     support shared libraries.\n\n  4. The commands required to build shared libraries may differ wildly\n     from host to host.  These need to be determined at configure time\n     in a consistent way.\n\n  5. It is not always obvious with what prefix or suffix a shared\n     library should be installed.  This makes it difficult for\n     `Makefile' rules, since they generally assume that file names are\n     the same from host to host.\n\n  6. The system needs a simple library version number abstraction, so\n     that shared libraries can be upgraded in place.  The programmer\n     should be informed how to design the interfaces to the library to\n     maximize binary compatibility.\n\n  7. The install `Makefile' target should warn the package installer to\n     set the proper environment variables (`LD_LIBRARY_PATH' or\n     equivalent), or run `ldconfig'.\n\n\u001f\nFile: libtool.info,  Node: Other implementations,  Next: Postmortem,  Prev: Issues,  Up: Introduction\n\n1.3 Other implementations\n=========================\n\nEven before libtool was developed, many free software packages built and\ninstalled their own shared libraries.  At first, these packages were\nexamined to avoid reinventing existing features.\n\n   Now it is clear that none of these packages have documented the\ndetails of shared library systems that libtool requires.  So, other\npackages have been more or less abandoned as influences.\n\n\u001f\nFile: libtool.info,  Node: Postmortem,  Prev: Other implementations,  Up: Introduction\n\n1.4 A postmortem analysis of other implementations\n==================================================\n\nIn all fairness, each of the implementations that were examined do the\njob that they were intended to do, for a number of different host\nsystems.  However, none of these solutions seem to function well as a\ngeneralized, reusable component.\n\n   Most were too complex to use (much less modify) without understanding\nexactly what the implementation does, and they were generally not\ndocumented.\n\n   The main difficulty is that different vendors have different views of\nwhat libraries are, and none of the packages that were examined seemed\nto be confident enough to settle on a single paradigm that just _works_.\n\n   Ideally, libtool would be a standard that would be implemented as\nseries of extensions and modifications to existing library systems to\nmake them work consistently.  However, it is not an easy task to\nconvince operating system developers to mend their evil ways, and\npeople want to build shared libraries right now, even on buggy, broken,\nconfused operating systems.\n\n   For this reason, libtool was designed as an independent shell script.\nIt isolates the problems and inconsistencies in library building that\nplague `Makefile' writers by wrapping the compiler suite on different\nplatforms with a consistent, powerful interface.\n\n   With luck, libtool will be useful to and used by the GNU community,\nand that the lessons that were learned in writing it will be taken up by\ndesigners of future library systems.\n\n\u001f\nFile: libtool.info,  Node: Libtool paradigm,  Next: Using libtool,  Prev: Introduction,  Up: Top\n\n2 The libtool paradigm\n**********************\n\nAt first, libtool was designed to support an arbitrary number of library\nobject types.  After libtool was ported to more platforms, a new\nparadigm gradually developed for describing the relationship between\nlibraries and programs.\n\n   In summary, \"libraries are programs with multiple entry points, and\nmore formally defined interfaces.\"\n\n   Version 0.7 of libtool was a complete redesign and rewrite of\nlibtool to reflect this new paradigm.  So far, it has proved to be\nsuccessful: libtool is simpler and more useful than before.\n\n   The best way to introduce the libtool paradigm is to contrast it with\nthe paradigm of existing library systems, with examples from each.  It\nis a new way of thinking, so it may take a little time to absorb, but\nwhen you understand it, the world becomes simpler.\n\n\u001f\nFile: libtool.info,  Node: Using libtool,  Next: Invoking libtool,  Prev: Libtool paradigm,  Up: Top\n\n3 Using libtool\n***************\n\nIt makes little sense to talk about using libtool in your own packages\nuntil you have seen how it makes your life simpler.  The examples in\nthis chapter introduce the main features of libtool by comparing the\nstandard library building procedure to libtool's operation on two\ndifferent platforms:\n\n`a23'\n     An Ultrix 4.2 platform with only static libraries.\n\n`burger'\n     A NetBSD/i386 1.2 platform with shared libraries.\n\n   You can follow these examples on your own platform, using the\npreconfigured libtool script that was installed with libtool (*note\nConfiguring::).\n\n   Source files for the following examples are taken from the `demo'\nsubdirectory of the libtool distribution.  Assume that we are building a\nlibrary, `libhello', out of the files `foo.c' and `hello.c'.\n\n   Note that the `foo.c' source file uses the `cos' math library\nfunction, which is usually found in the standalone math library, and not\nthe C library (*note Trigonometric Functions: (libc)Trig Functions.).\nSo, we need to add `-lm' to the end of the link line whenever we link\n`foo.lo' into an executable or a library (*note Inter-library\ndependencies::).\n\n   The same rule applies whenever you use functions that don't appear in\nthe standard C library... you need to add the appropriate `-lNAME' flag\nto the end of the link line when you link against those objects.\n\n   After we have built that library, we want to create a program by\nlinking `main.o' against `libhello'.\n\n* Menu:\n\n* Creating object files::       Compiling object files for libraries.\n* Linking libraries::           Creating libraries from object files.\n* Linking executables::         Linking object files against libtool libraries.\n* Debugging executables::       Running GDB on libtool-generated programs.\n* Installing libraries::        Making libraries available to users.\n* Installing executables::      Making programs available to users.\n* Static libraries::            When shared libraries are not wanted.\n\n\u001f\nFile: libtool.info,  Node: Creating object files,  Next: Linking libraries,  Up: Using libtool\n\n3.1 Creating object files\n=========================\n\nTo create an object file from a source file, the compiler is invoked\nwith the `-c' flag (and any other desired flags):\n\n     burger$ gcc -g -O -c main.c\n     burger$\n\n   The above compiler command produces an object file, usually named\n`main.o', from the source file `main.c'.\n\n   For most library systems, creating object files that become part of a\nstatic library is as simple as creating object files that are linked to\nform an executable:\n\n     burger$ gcc -g -O -c foo.c\n     burger$ gcc -g -O -c hello.c\n     burger$\n\n   Shared libraries, however, may only be built from\n\"position-independent code\" (PIC).  So, special flags must be passed to\nthe compiler to tell it to generate PIC rather than the standard\nposition-dependent code.\n\n   Since this is a library implementation detail, libtool hides the\ncomplexity of PIC compiler flags and uses separate library object files\n(the PIC one lives in the `.libs' subdirectory and the static one lives\nin the current directory).  On systems without shared libraries, the\nPIC library object files are not created, whereas on systems where all\ncode is PIC, such as AIX, the static ones are not created.\n\n   To create library object files for `foo.c' and `hello.c', simply\ninvoke libtool with the standard compilation command as arguments\n(*note Compile mode::):\n\n     a23$ libtool --mode=compile gcc -g -O -c foo.c\n     gcc -g -O -c foo.c -o foo.o\n     a23$ libtool --mode=compile gcc -g -O -c hello.c\n     gcc -g -O -c hello.c -o hello.o\n     a23$\n\n   Note that libtool silently creates an additional control file on each\n`compile' invocation.  The `.lo' file is the libtool object, which\nLibtool uses to determine what object file may be built into a shared\nlibrary.  On `a23', only static libraries are supported so the library\nobjects look like this:\n\n     # foo.lo - a libtool object file\n     # Generated by ltmain.sh (GNU libtool) 2.4.2\n     #\n     # Please DO NOT delete this file!\n     # It is necessary for linking the library.\n\n     # Name of the PIC object.\n     pic_object=none\n\n     # Name of the non-PIC object.\n     non_pic_object='foo.o'\n\n   On shared library systems, libtool automatically generates an\nadditional PIC object by inserting the appropriate PIC generation flags\ninto the compilation command:\n\n     burger$ libtool --mode=compile gcc -g -O -c foo.c\n     mkdir .libs\n     gcc -g -O -c foo.c  -fPIC -DPIC -o .libs/foo.o\n     gcc -g -O -c foo.c -o foo.o >/dev/null 2>&1\n     burger$\n\n   Note that Libtool automatically created `.libs' directory upon its\nfirst execution, where PIC library object files will be stored.\n\n   Since `burger' supports shared libraries, and requires PIC objects\nto build them, Libtool has compiled a PIC object this time, and made a\nnote of it in the libtool object:\n\n     # foo.lo - a libtool object file\n     # Generated by ltmain.sh (GNU libtool) 2.4.2\n     #\n     # Please DO NOT delete this file!\n     # It is necessary for linking the library.\n\n     # Name of the PIC object.\n     pic_object='.libs/foo.o'\n\n     # Name of the non-PIC object.\n     non_pic_object='foo.o'\n\n   Notice that the second run of GCC has its output discarded.  This is\ndone so that compiler warnings aren't annoyingly duplicated.  If you\nneed to see both sets of warnings (you might have conditional code\ninside `#ifdef PIC' for example), you can turn off suppression with the\n`-no-suppress' option to libtool's compile mode:\n\n     burger$ libtool --mode=compile gcc -no-suppress -g -O -c hello.c\n     gcc -g -O -c hello.c  -fPIC -DPIC -o .libs/hello.o\n     gcc -g -O -c hello.c -o hello.o\n     burger$\n\n\u001f\nFile: libtool.info,  Node: Linking libraries,  Next: Linking executables,  Prev: Creating object files,  Up: Using libtool\n\n3.2 Linking libraries\n=====================\n\nWithout libtool, the programmer would invoke the `ar' command to create\na static library:\n\n     burger$ ar cru libhello.a hello.o foo.o\n     burger$\n\n   But of course, that would be too simple, so many systems require that\nyou run the `ranlib' command on the resulting library (to give it\nbetter karma, or something):\n\n     burger$ ranlib libhello.a\n     burger$\n\n   It seems more natural to use the C compiler for this task, given\nlibtool's \"libraries are programs\" approach.  So, on platforms without\nshared libraries, libtool simply acts as a wrapper for the system `ar'\n(and possibly `ranlib') commands.\n\n   Again, the libtool control file name (`.la' suffix) differs from the\nstandard library name (`.a' suffix).  The arguments to libtool are the\nsame ones you would use to produce an executable named `libhello.la'\nwith your compiler (*note Link mode::):\n\n     a23$ libtool --mode=link gcc -g -O -o libhello.la foo.o hello.o\n     *** Warning: Linking the shared library libhello.la against the\n     *** non-libtool objects foo.o hello.o is not portable!\n     ar cru .libs/libhello.a\n     ranlib .libs/libhello.a\n     creating libhello.la\n     (cd .libs && rm -f libhello.la && ln -s ../libhello.la libhello.la)\n     a23$\n\n   Aha!  Libtool caught a common error... trying to build a library\nfrom standard objects instead of special `.lo' object files.  This\ndoesn't matter so much for static libraries, but on shared library\nsystems, it is of great importance.  (Note that you may replace\n`libhello.la' with `libhello.a' in which case libtool won't issue the\nwarning any more.  But although this method works, this is not intended\nto be used because it makes you lose the benefits of using Libtool.)\n\n   So, let's try again, this time with the library object files.\nRemember also that we need to add `-lm' to the link command line because\n`foo.c' uses the `cos' math library function (*note Using libtool::).\n\n   Another complication in building shared libraries is that we need to\nspecify the path to the directory in which they (eventually) will be\ninstalled (in this case, `/usr/local/lib')(1):\n\n     a23$ libtool --mode=link gcc -g -O -o libhello.la foo.lo hello.lo \\\n                     -rpath /usr/local/lib -lm\n     ar cru .libs/libhello.a foo.o hello.o\n     ranlib .libs/libhello.a\n     creating libhello.la\n     (cd .libs && rm -f libhello.la && ln -s ../libhello.la libhello.la)\n     a23$\n\n   Now, let's try the same trick on the shared library platform:\n\n     burger$ libtool --mode=link gcc -g -O -o libhello.la foo.lo hello.lo \\\n                     -rpath /usr/local/lib -lm\n     rm -fr  .libs/libhello.a .libs/libhello.la\n     ld -Bshareable -o .libs/libhello.so.0.0 .libs/foo.o .libs/hello.o -lm\n     ar cru .libs/libhello.a foo.o hello.o\n     ranlib .libs/libhello.a\n     creating libhello.la\n     (cd .libs && rm -f libhello.la && ln -s ../libhello.la libhello.la)\n     burger$\n\n   Now that's significantly cooler... Libtool just ran an obscure `ld'\ncommand to create a shared library, as well as the static library.\n\n   Note how libtool creates extra files in the `.libs' subdirectory,\nrather than the current directory.  This feature is to make it easier\nto clean up the build directory, and to help ensure that other programs\nfail horribly if you accidentally forget to use libtool when you should.\n\n   Again, you may want to have a look at the `.la' file in order to see\nwhat Libtool stores in it.  In particular, you will see that Libtool\nuses this file to remember the destination directory for the library\n(the argument to `-rpath') as well as the dependency on the math\nlibrary (`-lm').\n\n   ---------- Footnotes ----------\n\n   (1) If you don't specify an `rpath', then libtool builds a libtool\nconvenience archive, not a shared library (*note Static libraries::).\n\n\u001f\nFile: libtool.info,  Node: Linking executables,  Next: Debugging executables,  Prev: Linking libraries,  Up: Using libtool\n\n3.3 Linking executables\n=======================\n\nIf you choose at this point to \"install\" the library (put it in a\npermanent location) before linking executables against it, then you\ndon't need to use libtool to do the linking.  Simply use the appropriate\n`-L' and `-l' flags to specify the library's location.\n\n   Some system linkers insist on encoding the full directory name of\neach shared library in the resulting executable.  Libtool has to work\naround this misfeature by special magic to ensure that only permanent\ndirectory names are put into installed executables.\n\n   The importance of this bug must not be overlooked: it won't cause\nprograms to crash in obvious ways.  It creates a security hole, and\npossibly even worse, if you are modifying the library source code after\nyou have installed the package, you will change the behaviour of the\ninstalled programs!\n\n   So, if you want to link programs against the library before you\ninstall it, you must use libtool to do the linking.\n\n   Here's the old way of linking against an uninstalled library:\n\n     burger$ gcc -g -O -o hell.old main.o libhello.a -lm\n     burger$\n\n   Libtool's way is almost the same(1) (*note Link mode::):\n\n     a23$ libtool --mode=link gcc -g -O -o hell main.o libhello.la\n     gcc -g -O -o hell main.o  ./.libs/libhello.a -lm\n     a23$\n\n   That looks too simple to be true.  All libtool did was transform\n`libhello.la' to `./.libs/libhello.a', but remember that `a23' has no\nshared libraries.  Notice that Libtool also remembered that\n`libhello.la' depends on `-lm', so even though we didn't specify `-lm'\non the libtool command line(2) Libtool has added it to the `gcc' link\nline for us.\n\n   On `burger' Libtool links against the uninstalled shared library:\n\n     burger$ libtool --mode=link gcc -g -O -o hell main.o libhello.la\n     gcc -g -O -o .libs/hell main.o -L./.libs -R/usr/local/lib -lhello -lm\n     creating hell\n     burger$\n\n   Now assume `libhello.la' had already been installed, and you want to\nlink a new program with it.  You could figure out where it lives by\nyourself, then run:\n\n     burger$ gcc -g -O -o test test.o -L/usr/local/lib -lhello -lm\n\n   However, unless `/usr/local/lib' is in the standard library search\npath, you won't be able to run `test'.  However, if you use libtool to\nlink the already-installed libtool library, it will do The Right Thing\n(TM) for you:\n\n     burger$ libtool --mode=link gcc -g -O -o test test.o \\\n                     /usr/local/lib/libhello.la\n     gcc -g -O -o .libs/test test.o -Wl,--rpath \\\n             -Wl,/usr/local/lib /usr/local/lib/libhello.a -lm\n     creating test\n     burger$\n\n   Note that libtool added the necessary run-time path flag, as well as\n`-lm', the library libhello.la depended upon.  Nice, huh?\n\n   Notice that the executable, `hell', was actually created in the\n`.libs' subdirectory.  Then, a wrapper script (or, on certain\nplatforms, a wrapper executable *note Wrapper executables::) was\ncreated in the current directory.\n\n   Since libtool created a wrapper script, you should use libtool to\ninstall it and debug it too.  However, since the program does not depend\non any uninstalled libtool library, it is probably usable even without\nthe wrapper script.\n\n   On NetBSD 1.2, libtool encodes the installation directory of\n`libhello', by using the `-R/usr/local/lib' compiler flag.  Then, the\nwrapper script guarantees that the executable finds the correct shared\nlibrary (the one in `./.libs') until it is properly installed.\n\n   Let's compare the two different programs:\n\n     burger$ time ./hell.old\n     Welcome to GNU Hell!\n     ** This is not GNU Hello.  There is no built-in mail reader. **\n             0.21 real         0.02 user         0.08 sys\n     burger$ time ./hell\n     Welcome to GNU Hell!\n     ** This is not GNU Hello.  There is no built-in mail reader. **\n             0.63 real         0.09 user         0.59 sys\n     burger$\n\n   The wrapper script takes significantly longer to execute, but at\nleast the results are correct, even though the shared library hasn't\nbeen installed yet.\n\n   So, what about all the space savings that shared libraries are\nsupposed to yield?\n\n     burger$ ls -l hell.old libhello.a\n     -rwxr-xr-x  1 gord  gord  15481 Nov 14 12:11 hell.old\n     -rw-r--r--  1 gord  gord   4274 Nov 13 18:02 libhello.a\n     burger$ ls -l .libs/hell .libs/libhello.*\n     -rwxr-xr-x  1 gord  gord  11647 Nov 14 12:10 .libs/hell\n     -rw-r--r--  1 gord  gord   4274 Nov 13 18:44 .libs/libhello.a\n     -rwxr-xr-x  1 gord  gord  12205 Nov 13 18:44 .libs/libhello.so.0.0\n     burger$\n\n   Well, that sucks.  Maybe I should just scrap this project and take up\nbasket weaving.\n\n   Actually, it just proves an important point: shared libraries incur\noverhead because of their (relative) complexity.  In this situation, the\nprice of being dynamic is eight kilobytes, and the payoff is about four\nkilobytes.  So, having a shared `libhello' won't be an advantage until\nwe link it against at least a few more programs.\n\n* Menu:\n\n* Wrapper executables::         Wrapper executables for some platforms.\n\n   ---------- Footnotes ----------\n\n   (1) However, you should avoid using `-L' or `-l' flags to link\nagainst an uninstalled libtool library.  Just specify the relative path\nto the `.la' file, such as `../intl/libintl.la'.  This is a design\ndecision to eliminate any ambiguity when linking against uninstalled\nshared libraries.\n\n   (2) And why should we? `main.o' doesn't directly depend on `-lm'\nafter all.\n\n\u001f\nFile: libtool.info,  Node: Wrapper executables,  Up: Linking executables\n\n3.3.1 Wrapper executables for uninstalled programs\n--------------------------------------------------\n\nSome platforms, notably those hosted on Windows such as Cygwin and\nMinGW, use a wrapper executable rather than a wrapper script to ensure\nproper operation of uninstalled programs linked by libtool against\nuninstalled shared libraries. The wrapper executable thus performs the\nsame function as the wrapper script used on other platforms, but allows\nto satisfy the `make' rules for the program, whose name ends in\n`$(EXEEXT)'. The actual program executable is created below .libs, and\nits name will end in `$(EXEEXT)' and may or may not contain an `lt-'\nprefix.  This wrapper executable sets various environment values so\nthat the program executable may locate its (uninstalled) shared\nlibraries, and then launches the program executable.\n\n   The wrapper executable provides a debug mode, enabled by passing the\ncommand-line option `--lt-debug' (see below). When executing in debug\nmode, diagnostic information will be printed to `stderr' before the\nprogram executable is launched.\n\n   Finally, the wrapper executable supports a number of command line\noptions that may be useful when debugging the operation of the wrapper\nsystem. All of these options begin with `--lt-', and if present they\nand their arguments will be removed from the argument list passed on to\nthe program executable.  Therefore, the program executable may not\nemploy command line options that begin with `--lt-'. (In fact, the\nwrapper executable will detect any command line options that begin with\n`--lt-' and abort with an error message if the option is not\nrecognized). If this presents a problem, please contact the Libtool\nteam at the Libtool bug reporting address <bug-libtool@gnu.org>.\n\n   These command line options include:\n\n`--lt-dump-script'\n     Causes the wrapper to print a copy of the wrapper _script_ to\n     `stdout', and exit.\n\n`--lt-debug'\n     Causes the wrapper to print diagnostic information to `stdout',\n     before launching the program executable.\n\n\n   For consistency, both the wrapper _script_ and the wrapper\n_executable_ support these options.\n\n\u001f\nFile: libtool.info,  Node: Debugging executables,  Next: Installing libraries,  Prev: Linking executables,  Up: Using libtool\n\n3.4 Debugging executables\n=========================\n\nIf `hell' was a complicated program, you would certainly want to test\nand debug it before installing it on your system.  In the above\nsection, you saw how the libtool wrapper script makes it possible to run\nthe program directly, but unfortunately, this mechanism interferes with\nthe debugger:\n\n     burger$ gdb hell\n     GDB is free software and you are welcome to distribute copies of it\n      under certain conditions; type \"show copying\" to see the conditions.\n     There is no warranty for GDB; type \"show warranty\" for details.\n     GDB 4.16 (i386-unknown-netbsd), (C) 1996 Free Software Foundation, Inc.\n\n     \"hell\": not in executable format: File format not recognized\n\n     (gdb) quit\n     burger$\n\n   Sad.  It doesn't work because GDB doesn't know where the executable\nlives.  So, let's try again, by invoking GDB directly on the executable:\n\n     burger$ gdb .libs/hell\n     GNU gdb 5.3 (i386-unknown-netbsd)\n     Copyright 2002 Free Software Foundation, Inc.\n     GDB is free software, covered by the GNU General Public License,\n     and you are welcome to change it and/or distribute copies of it\n     under certain conditions.  Type \"show copying\" to see the conditions.\n     There is no warranty for GDB.  Type \"show warranty\" for details.\n     (gdb) break main\n     Breakpoint 1 at 0x8048547: file main.c, line 29.\n     (gdb) run\n     Starting program: /home/src/libtool/demo/.libs/hell\n     /home/src/libtool/demo/.libs/hell: can't load library 'libhello.so.0'\n\n     Program exited with code 020.\n     (gdb) quit\n     burger$\n\n   Argh.  Now GDB complains because it cannot find the shared library\nthat `hell' is linked against.  So, we must use libtool in order to\nproperly set the library path and run the debugger.  Fortunately, we can\nforget all about the `.libs' directory, and just run it on the\nexecutable wrapper (*note Execute mode::):\n\n     burger$ libtool --mode=execute gdb hell\n     GNU gdb 5.3 (i386-unknown-netbsd)\n     Copyright 2002 Free Software Foundation, Inc.\n     GDB is free software, covered by the GNU General Public License,\n     and you are welcome to change it and/or distribute copies of it\n     under certain conditions.  Type \"show copying\" to see the conditions.\n     There is no warranty for GDB.  Type \"show warranty\" for details.\n     (gdb) break main\n     Breakpoint 1 at 0x8048547: file main.c, line 29.\n     (gdb) run\n     Starting program: /home/src/libtool/demo/.libs/hell\n\n     Breakpoint 1, main (argc=1, argv=0xbffffc40) at main.c:29\n     29        printf (\"Welcome to GNU Hell!\\n\");\n     (gdb) quit\n     The program is running.  Quit anyway (and kill it)? (y or n) y\n     burger$\n\n\u001f\nFile: libtool.info,  Node: Installing libraries,  Next: Installing executables,  Prev: Debugging executables,  Up: Using libtool\n\n3.5 Installing libraries\n========================\n\nInstalling libraries on a non-libtool system is quite\nstraightforward... just copy them into place:(1)\n\n     burger$ su\n     Password: ********\n     burger# cp libhello.a /usr/local/lib/libhello.a\n     burger#\n\n   Oops, don't forget the `ranlib' command:\n\n     burger# ranlib /usr/local/lib/libhello.a\n     burger#\n\n   Libtool installation is quite simple, as well.  Just use the\n`install' or `cp' command that you normally would (*note Install\nmode::):\n\n     a23# libtool --mode=install cp libhello.la /usr/local/lib/libhello.la\n     cp libhello.la /usr/local/lib/libhello.la\n     cp .libs/libhello.a /usr/local/lib/libhello.a\n     ranlib /usr/local/lib/libhello.a\n     a23#\n\n   Note that the libtool library `libhello.la' is also installed, to\nhelp libtool with uninstallation (*note Uninstall mode::) and linking\n(*note Linking executables::) and to help programs with dlopening\n(*note Dlopened modules::).\n\n   Here is the shared library example:\n\n     burger# libtool --mode=install install -c libhello.la \\\n                     /usr/local/lib/libhello.la\n     install -c .libs/libhello.so.0.0 /usr/local/lib/libhello.so.0.0\n     install -c libhello.la /usr/local/lib/libhello.la\n     install -c .libs/libhello.a /usr/local/lib/libhello.a\n     ranlib /usr/local/lib/libhello.a\n     burger#\n\n   It is safe to specify the `-s' (strip symbols) flag if you use a\nBSD-compatible install program when installing libraries.  Libtool will\neither ignore the `-s' flag, or will run a program that will strip only\ndebugging and compiler symbols from the library.\n\n   Once the libraries have been put in place, there may be some\nadditional configuration that you need to do before using them.  First,\nyou must make sure that where the library is installed actually agrees\nwith the `-rpath' flag you used to build it.\n\n   Then, running `libtool -n finish LIBDIR' can give you further hints\non what to do (*note Finish mode::):\n\n     burger# libtool -n finish /usr/local/lib\n     PATH=\"$PATH:/sbin\" ldconfig -m /usr/local/lib\n     -----------------------------------------------------------------\n     Libraries have been installed in:\n        /usr/local/lib\n\n     To link against installed libraries in a given directory, LIBDIR,\n     you must use the `-LLIBDIR' flag during linking.\n\n      You will also need to do one of the following:\n        - add LIBDIR to the `LD_LIBRARY_PATH' environment variable\n          during execution\n        - add LIBDIR to the `LD_RUN_PATH' environment variable\n          during linking\n        - use the `-RLIBDIR' linker flag\n\n     See any operating system documentation about shared libraries for\n     more information, such as the ld and ld.so manual pages.\n     -----------------------------------------------------------------\n     burger#\n\n   After you have completed these steps, you can go on to begin using\nthe installed libraries.  You may also install any executables that\ndepend on libraries you created.\n\n   ---------- Footnotes ----------\n\n   (1) Don't strip static libraries though, or they will be unusable.\n\n\u001f\nFile: libtool.info,  Node: Installing executables,  Next: Static libraries,  Prev: Installing libraries,  Up: Using libtool\n\n3.6 Installing executables\n==========================\n\nIf you used libtool to link any executables against uninstalled libtool\nlibraries (*note Linking executables::), you need to use libtool to\ninstall the executables after the libraries have been installed (*note\nInstalling libraries::).\n\n   So, for our Ultrix example, we would run:\n\n     a23# libtool --mode=install -c hell /usr/local/bin/hell\n     install -c hell /usr/local/bin/hell\n     a23#\n\n   On shared library systems that require wrapper scripts, libtool just\nignores the wrapper script and installs the correct binary:\n\n     burger# libtool --mode=install -c hell /usr/local/bin/hell\n     install -c .libs/hell /usr/local/bin/hell\n     burger#\n\n\u001f\nFile: libtool.info,  Node: Static libraries,  Prev: Installing executables,  Up: Using libtool\n\n3.7 Linking static libraries\n============================\n\nWhy return to `ar' and `ranlib' silliness when you've had a taste of\nlibtool?  Well, sometimes it is desirable to create a static archive\nthat can never be shared.  The most frequent case is when you have a\nset of object files that you use to build several different libraries.\nYou can create a \"convenience library\" out of those objects, and link\nagainst that with the other libraries, instead of listing all the\nobject files every time.\n\n   If you just want to link this convenience library into programs, then\nyou could just ignore libtool entirely, and use the old `ar' and\n`ranlib' commands (or the corresponding GNU Automake `_LIBRARIES'\nrules).  You can even install a convenience library using GNU Libtool,\nthough you probably don't want to and hence GNU Automake doesn't allow\nyou to do so.\n\n     burger$ libtool --mode=install ./install-sh -c libhello.a \\\n                     /local/lib/libhello.a\n     ./install-sh -c libhello.a /local/lib/libhello.a\n     ranlib /local/lib/libhello.a\n     burger$\n\n   Using libtool for static library installation protects your library\nfrom being accidentally stripped (if the installer used the `-s' flag),\nas well as automatically running the correct `ranlib' command.\n\n   But libtool libraries are more than just collections of object files:\nthey can also carry library dependency information, which old archives\ndo not.  If you want to create a libtool static convenience library, you\ncan omit the `-rpath' flag and use `-static' to indicate that you're\nonly interested in a static library.  When you link a program with such\na library, libtool will actually link all object files and dependency\nlibraries into the program.\n\n   If you omit both `-rpath' and `-static', libtool will create a\nconvenience library that can be used to create other libtool libraries,\neven shared ones.  Just like in the static case, the library behaves as\nan alias to a set of object files and dependency libraries, but in this\ncase the object files are suitable for inclusion in shared libraries.\nBut be careful not to link a single convenience library, directly or\nindirectly, into a single program or library, otherwise you may get\nerrors about symbol redefinitions.\n\n   The key is remembering that a convenience library contains PIC\nobjects, and can be linked where a list of PIC objects makes sense;\ni.e. into a shared library.  A static convenience library contains\nnon-PIC objects, so can be linked into an old static library, or a\nprogram.\n\n   When GNU Automake is used, you should use `noinst_LTLIBRARIES'\ninstead of `lib_LTLIBRARIES' for convenience libraries, so that the\n`-rpath' option is not passed when they are linked.\n\n   As a rule of thumb, link a libtool convenience library into at most\none libtool library, and never into a program, and link libtool static\nconvenience libraries only into programs, and only if you need to carry\nlibrary dependency information to the user of the static convenience\nlibrary.\n\n   Another common situation where static linking is desirable is in\ncreating a standalone binary.  Use libtool to do the linking and add the\n`-all-static' flag.\n\n\u001f\nFile: libtool.info,  Node: Invoking libtool,  Next: Integrating libtool,  Prev: Using libtool,  Up: Top\n\n4 Invoking `libtool'\n********************\n\nThe `libtool' program has the following synopsis:\n\n     libtool [OPTION]... [MODE-ARG]...\n\nand accepts the following options:\n\n`--config'\n     Display libtool configuration variables and exit.\n\n`--debug'\n     Dump a trace of shell script execution to standard output.  This\n     produces a lot of output, so you may wish to pipe it to `less' (or\n     `more') or redirect to a file.\n\n`-n'\n`--dry-run'\n     Don't create, modify, or delete any files, just show what commands\n     would be executed by libtool.\n\n`--features'\n     Display basic configuration options.  This provides a way for\n     packages to determine whether shared or static libraries will be\n     built.\n\n`--finish'\n     Same as `--mode=finish'.\n\n`-h'\n     Display short help message.\n\n`--help'\n     Display a help message and exit.  If `--mode=MODE' is specified,\n     then detailed help for MODE is displayed.\n\n`--help-all'\n     Display help for the general options as well as detailed help for\n     each operation mode, and exit.\n\n`--mode=MODE'\n     Use MODE as the operation mode.  When using libtool from the\n     command line, you can give just MODE (or a unique abbreviation of\n     it) as the first argument as a shorthand for the full\n     `--mode=MODE'.  For example, the following are equivalent:\n\n          $ libtool --mode=execute --dry-run gdb prog.exe\n          $ libtool        execute --dry-run gdb prog.exe\n          $ libtool        exe     --dry-run gdb prog.exe\n          $ libtool        e       --dry-run gdb prog.exe\n\n     MODE must be set to one of the following:\n\n    `compile'\n          Compile a source file into a libtool object.\n\n    `execute'\n          Automatically set the library path so that another program\n          can use uninstalled libtool-generated programs or libraries.\n\n    `link'\n          Create a library or an executable.\n\n    `install'\n          Install libraries or executables.\n\n    `finish'\n          Complete the installation of libtool libraries on the system.\n\n    `uninstall'\n          Delete installed libraries or executables.\n\n    `clean'\n          Delete uninstalled libraries or executables.\n\n`--tag=TAG'\n     Use configuration variables from tag TAG (*note Tags::).\n\n`--preserve-dup-deps'\n     Do not remove duplicate dependencies in libraries.  When building\n     packages with static libraries, the libraries may depend\n     circularly on each other (shared libs can too, but for those it\n     doesn't matter), so there are situations, where -la -lb -la is\n     required, and the second -la may not be stripped or the link will\n     fail.  In cases where these duplications are required, this option\n     will preserve them, only stripping the libraries that libtool\n     knows it can safely.\n\n`--quiet'\n`--silent'\n     Do not print out any progress or informational messages.\n\n`-v'\n`--verbose'\n     Print out progress and informational messages (enabled by default),\n     as well as additional messages not ordinary seen by default.\n\n`--no-quiet'\n`--no-silent'\n     Print out the progress and informational messages that are seen by\n     default. This option has no effect on whether the additional\n     messages seen in `--verbose' mode are shown.\n\n`--no-verbose'\n     Do not print out any additional informational messages beyond\n     those ordinarily seen by default. This option has no effect on\n     whether the ordinary progress and informational messages enabled\n     by `--no-quiet' are shown.\n\n     Thus, there are now three different message levels (not counting\n     `--debug'), depending on whether the normal messages and/or the\n     additional verbose messages are displayed.  Note that there is no\n     mechanism to diplay verbose messages, without also displaying\n     normal messages.\n\n    *default*\n          Normal messages are displayed, verbose messages are not\n          displayed.  In addition to being the default mode, it can be\n          forcibly achieved by using both option `--no-verbose' and\n          either option `--no-silent' or option `--no-quiet'.\n\n    *silent*\n          Neither normal messages nor verbose messages are displayed.\n          This mode can be achieved using either option `--silent' or\n          option `--quiet'.\n\n    *verbose*\n          Both normal messages and verbose messages are displayed. This\n          mode can be achieved using either option `-v' or option\n          `--verbose'.\n\n`--version'\n     Print libtool version information and exit.\n\n   The current `libtool' implementation is done with a shell script\nthat needs to be invoked by the shell which `configure' chose for\nconfiguring `libtool' (*note The Autoconf Manual:\n(autoconf)config.status Invocation.).  This shell is set in the\nshe-bang (`#!') line of the `libtool' script.  Using a different shell\nmay cause undefined behavior.\n\n   The MODE-ARGS are a variable number of arguments, depending on the\nselected operation mode.  In general, each MODE-ARG is interpreted by\nprograms libtool invokes, rather than libtool itself.\n\n* Menu:\n\n* Compile mode::                Creating library object files.\n* Link mode::                   Generating executables and libraries.\n* Execute mode::                Debugging libtool-generated programs.\n* Install mode::                Making libraries and executables public.\n* Finish mode::                 Completing a library installation.\n* Uninstall mode::              Removing installed executables and libraries.\n* Clean mode::                  Removing uninstalled executables and libraries.\n\n\u001f\nFile: libtool.info,  Node: Compile mode,  Next: Link mode,  Up: Invoking libtool\n\n4.1 Compile mode\n================\n\nFor \"compile\" mode, MODE-ARGS is a compiler command to be used in\ncreating a \"standard\" object file.  These arguments should begin with\nthe name of the C compiler, and contain the `-c' compiler flag so that\nonly an object file is created.\n\n   Libtool determines the name of the output file by removing the\ndirectory component from the source file name, then substituting the\nsource code suffix (e.g. `.c' for C source code) with the library\nobject suffix, `.lo'.\n\n   If shared libraries are being built, any necessary PIC generation\nflags are substituted into the compilation command.\n\n   The following components of MODE-ARGS are treated specially:\n\n`-o'\n     Note that the `-o' option is now fully supported.  It is emulated\n     on the platforms that don't support it (by locking and moving the\n     objects), so it is really easy to use libtool, just with minor\n     modifications to your Makefiles.  Typing for example\n          libtool --mode=compile gcc -c foo/x.c -o foo/x.lo\n     will do what you expect.\n\n     Note, however, that, if the compiler does not support `-c' and\n     `-o', it is impossible to compile `foo/x.c' without overwriting an\n     existing `./x.o'.  Therefore, if you do have a source file\n     `./x.c', make sure you introduce dependencies in your `Makefile'\n     to make sure `./x.o' (or `./x.lo') is re-created after any\n     sub-directory's `x.lo':\n\n          x.o x.lo: foo/x.lo bar/x.lo\n\n     This will also ensure that make won't try to use a temporarily\n     corrupted `x.o' to create a program or library.  It may cause\n     needless recompilation on platforms that support `-c' and `-o'\n     together, but it's the only way to make it safe for those that\n     don't.\n\n`-no-suppress'\n     If both PIC and non-PIC objects are being built, libtool will\n     normally suppress the compiler output for the PIC object\n     compilation to save showing very similar, if not identical\n     duplicate output for each object.  If the `-no-suppress' option is\n     given in compile mode, libtool will show the compiler output for\n     both objects.\n\n`-prefer-pic'\n     Libtool will try to build only PIC objects.\n\n`-prefer-non-pic'\n     Libtool will try to build only non-PIC objects.\n\n`-shared'\n     Even if Libtool was configured with `--enable-static', the object\n     file Libtool builds will not be suitable for static linking.\n     Libtool will signal an error if it was configured with\n     `--disable-shared', or if the host does not support shared\n     libraries.\n\n`-static'\n     Even if libtool was configured with `--disable-static', the object\n     file Libtool builds *will* be suitable for static linking.\n\n`-Wc,FLAG'\n`-Xcompiler FLAG'\n     Pass a flag directly to the compiler.  With `-Wc,', multiple flags\n     may be separated by commas, whereas `-Xcompiler ' passes through\n     commas unchanged.\n\n\u001f\nFile: libtool.info,  Node: Link mode,  Next: Execute mode,  Prev: Compile mode,  Up: Invoking libtool\n\n4.2 Link mode\n=============\n\n\"Link\" mode links together object files (including library objects) to\nform another library or to create an executable program.\n\n   MODE-ARGS consist of a command using the C compiler to create an\noutput file (with the `-o' flag) from several object files.\n\n   The following components of MODE-ARGS are treated specially:\n\n`-all-static'\n     If OUTPUT-FILE is a program, then do not link it against any\n     shared libraries at all.  If OUTPUT-FILE is a library, then only\n     create a static library.  In general, this flag cannot be used\n     together with `disable-static' (*note LT_INIT::).\n\n`-avoid-version'\n     Tries to avoid versioning (*note Versioning::) for libraries and\n     modules, i.e. no version information is stored and no symbolic\n     links are created.  If the platform requires versioning, this\n     option has no effect.\n\n`-bindir'\n     Pass the absolute name of the directory for installing executable\n     programs (*note Directory Variables: (standards)Directory\n     Variables.).  `libtool' may use this value to install shared\n     libraries there on systems that do not provide for any library\n     hardcoding and use the directory of a program and the `PATH'\n     variable as library search path.  This is typically used for DLLs\n     on Windows or other systems using the PE (Portable Executable)\n     format.  On other systems, `-bindir' is ignored.  The default\n     value used is `LIBDIR/../bin' for libraries installed to `LIBDIR'.\n     You should not use `-bindir' for modules.\n\n`-dlopen FILE'\n     Same as `-dlpreopen FILE', if native dlopening is not supported on\n     the host platform (*note Dlopened modules::) or if the program is\n     linked with `-static', `-static-libtool-libs', or `-all-static'.\n     Otherwise, no effect.  If FILE is `self' Libtool will make sure\n     that the program can `dlopen' itself, either by enabling\n     `-export-dynamic' or by falling back to `-dlpreopen self'.\n\n`-dlpreopen FILE'\n     Link FILE into the output program, and add its symbols to the list\n     of preloaded symbols (*note Dlpreopening::).  If FILE is `self',\n     the symbols of the program itself will be added to preloaded\n     symbol lists.  If FILE is `force' Libtool will make sure that a\n     preloaded symbol list is always _defined_, regardless of whether\n     it's empty or not.\n\n`-export-dynamic'\n     Allow symbols from OUTPUT-FILE to be resolved with `dlsym' (*note\n     Dlopened modules::).\n\n`-export-symbols SYMFILE'\n     Tells the linker to export only the symbols listed in SYMFILE.\n     The symbol file should end in `.sym' and must contain the name of\n     one symbol per line.  This option has no effect on some platforms.\n     By default all symbols are exported.\n\n`-export-symbols-regex REGEX'\n     Same as `-export-symbols', except that only symbols matching the\n     regular expression REGEX are exported.  By default all symbols are\n     exported.\n\n`-LLIBDIR'\n     Search LIBDIR for required libraries that have already been\n     installed.\n\n`-lNAME'\n     OUTPUT-FILE requires the installed library `libNAME'.  This option\n     is required even when OUTPUT-FILE is not an executable.\n\n`-module'\n     Creates a library that can be dlopened (*note Dlopened modules::).\n     This option doesn't work for programs.  Module names don't need to\n     be prefixed with `lib'.  In order to prevent name clashes,\n     however, `libNAME' and `NAME' must not be used at the same time in\n     your package.\n\n`-no-fast-install'\n     Disable fast-install mode for the executable OUTPUT-FILE.  Useful\n     if the program won't be necessarily installed.\n\n`-no-install'\n     Link an executable OUTPUT-FILE that can't be installed and\n     therefore doesn't need a wrapper script on systems that allow\n     hardcoding of library paths.  Useful if the program is only used\n     in the build tree, e.g., for testing or generating other files.\n\n`-no-undefined'\n     Declare that OUTPUT-FILE does not depend on any libraries other\n     than the ones listed on the command line, i.e., after linking, it\n     will not have unresolved symbols.  Some platforms require all\n     symbols in shared libraries to be resolved at library creation\n     (*note Inter-library dependencies::), and using this parameter\n     allows `libtool' to assume that this will not happen.\n\n`-o OUTPUT-FILE'\n     Create OUTPUT-FILE from the specified objects and libraries.\n\n`-objectlist FILE'\n     Use a list of object files found in FILE to specify objects.\n\n`-precious-files-regex REGEX'\n     Prevents removal of files from the temporary output directory whose\n     names match this regular expression.  You might specify `\\.bbg?$'\n     to keep those files created with `gcc -ftest-coverage' for example.\n\n`-release RELEASE'\n     Specify that the library was generated by release RELEASE of your\n     package, so that users can easily tell which versions are newer\n     than others.  Be warned that no two releases of your package will\n     be binary compatible if you use this flag.  If you want binary\n     compatibility, use the `-version-info' flag instead (*note\n     Versioning::).\n\n`-rpath LIBDIR'\n     If OUTPUT-FILE is a library, it will eventually be installed in\n     LIBDIR.  If OUTPUT-FILE is a program, add LIBDIR to the run-time\n     path of the program.  On platforms that don't support hardcoding\n     library paths into executables and only search PATH for shared\n     libraries, such as when OUTPUT-FILE is a Windows (or other PE\n     platform) DLL, the `.la' control file will be installed in LIBDIR,\n     but see `-bindir' above for the eventual destination of the `.dll'\n     or other library file itself.\n\n`-R LIBDIR'\n     If OUTPUT-FILE is a program, add LIBDIR to its run-time path.  If\n     OUTPUT-FILE is a library, add `-RLIBDIR' to its DEPENDENCY_LIBS,\n     so that, whenever the library is linked into a program, LIBDIR\n     will be added to its run-time path.\n\n`-shared'\n     If OUTPUT-FILE is a program, then link it against any uninstalled\n     shared libtool libraries (this is the default behavior).  If\n     OUTPUT-FILE is a library, then only create a shared library.  In\n     the later case, libtool will signal an error if it was configured\n     with `--disable-shared', or if the host does not support shared\n     libraries.\n\n`-shrext SUFFIX'\n     If OUTPUT-FILE is a libtool library, replace the system's standard\n     file name extension for shared libraries with SUFFIX (most systems\n     use `.so' here).  This option is helpful in certain cases where an\n     application requires that shared libraries (typically modules)\n     have an extension other than the default one.  Please note you\n     must supply the full file name extension including any leading dot.\n\n`-static'\n     If OUTPUT-FILE is a program, then do not link it against any\n     uninstalled shared libtool libraries.  If OUTPUT-FILE is a\n     library, then only create a static library.\n\n`-static-libtool-libs'\n     If OUTPUT-FILE is a program, then do not link it against any\n     shared libtool libraries.  If OUTPUT-FILE is a library, then only\n     create a static library.\n\n`-version-info CURRENT[:REVISION[:AGE]]'\n     If OUTPUT-FILE is a libtool library, use interface version\n     information CURRENT, REVISION, and AGE to build it (*note\n     Versioning::).  Do *not* use this flag to specify package release\n     information, rather see the `-release' flag.\n\n`-version-number MAJOR[:MINOR[:REVISION]]'\n     If OUTPUT-FILE is a libtool library, compute interface version\n     information so that the resulting library uses the specified\n     major, minor and revision numbers.  This is designed to permit\n     libtool to be used with existing projects where identical version\n     numbers are already used across operating systems.  New projects\n     should use the `-version-info' flag instead.\n\n`-weak LIBNAME'\n     if OUTPUT-FILE is a libtool library, declare that it provides a\n     weak LIBNAME interface.  This is a hint to libtool that there is\n     no need to append LIBNAME to the list of dependency libraries of\n     OUTPUT-FILE, because linking against OUTPUT-FILE already supplies\n     the same interface (*note Linking with dlopened modules::).\n\n`-Wc,FLAG'\n`-Xcompiler FLAG'\n     Pass a linker-specific flag directly to the compiler.  With `-Wc,',\n     multiple flags may be separated by commas, whereas `-Xcompiler '\n     passes through commas unchanged.\n\n`-Wl,FLAG'\n`-Xlinker FLAG'\n     Pass a linker-specific flag directly to the linker.\n\n`-XCClinker FLAG'\n     Pass a link-specific flag to the compiler driver (`CC') during\n     linking.\n\n   If the OUTPUT-FILE ends in `.la', then a libtool library is created,\nwhich must be built only from library objects (`.lo' files).  The\n`-rpath' option is required.  In the current implementation, libtool\nlibraries may not depend on other uninstalled libtool libraries (*note\nInter-library dependencies::).\n\n   If the OUTPUT-FILE ends in `.a', then a standard library is created\nusing `ar' and possibly `ranlib'.\n\n   If OUTPUT-FILE ends in `.o' or `.lo', then a reloadable object file\nis created from the input files (generally using `ld -r').  This method\nis often called \"partial linking\".\n\n   Otherwise, an executable program is created.\n\n\u001f\nFile: libtool.info,  Node: Execute mode,  Next: Install mode,  Prev: Link mode,  Up: Invoking libtool\n\n4.3 Execute mode\n================\n\nFor \"execute\" mode, the library path is automatically set, then a\nprogram is executed.\n\n   The first of the MODE-ARGS is treated as a program name, with the\nrest as arguments to that program.\n\n   The following components of MODE-ARGS are treated specially:\n\n`-dlopen FILE'\n     Add the directory containing FILE to the library path.\n\n   This mode sets the library path environment variable according to any\n`-dlopen' flags.\n\n   If any of the ARGS are libtool executable wrappers, then they are\ntranslated into the name of their corresponding uninstalled binary, and\nany of their required library directories are added to the library path.\n\n\u001f\nFile: libtool.info,  Node: Install mode,  Next: Finish mode,  Prev: Execute mode,  Up: Invoking libtool\n\n4.4 Install mode\n================\n\nIn \"install\" mode, libtool interprets most of the elements of MODE-ARGS\nas an installation command beginning with `cp', or a BSD-compatible\n`install' program.\n\n   The following components of MODE-ARGS are treated specially:\n\n`-inst-prefix-dir INST-PREFIX-DIR'\n     When installing into a temporary staging area, rather than the\n     final `prefix', this argument is used to reflect the temporary\n     path, in much the same way `automake' uses `DESTDIR'.  For\n     instance, if `prefix' is `/usr/local', but INST-PREFIX-DIR is\n     `/tmp', then the object will be installed under `/tmp/usr/local/'.\n     If the installed object is a libtool library, then the internal\n     fields of that library will reflect only `prefix', not\n     INST-PREFIX-DIR:\n\n          # Directory that this library needs to be installed in:\n          libdir='/usr/local/lib'\n\n     not\n\n          # Directory that this library needs to be installed in:\n          libdir='/tmp/usr/local/lib'\n\n     `inst-prefix' is also used to insure that if the installed object\n     must be relinked upon installation, that it is relinked against\n     the libraries in INST-PREFIX-DIR/`prefix', not `prefix'.\n\n     In truth, this option is not really intended for use when calling\n     libtool directly; it is automatically used when `libtool\n     --mode=install' calls `libtool --mode=relink'.  Libtool does this\n     by analyzing the destination path given in the original `libtool\n     --mode=install' command and comparing it to the expected\n     installation path established during `libtool --mode=link'.\n\n     Thus, end-users need change nothing, and `automake'-style `make\n     install DESTDIR=/tmp' will Just Work(tm) most of the time.  For\n     systems where fast installation can not be turned on, relinking\n     may be needed.  In this case, a `DESTDIR' install will fail.\n\n     Currently it is not generally possible to install into a temporary\n     staging area that contains needed third-party libraries which are\n     not yet visible at their final location.\n\n   The rest of the MODE-ARGS are interpreted as arguments to the `cp'\nor `install' command.\n\n   The command is run, and any necessary unprivileged post-installation\ncommands are also completed.\n\n\u001f\nFile: libtool.info,  Node: Finish mode,  Next: Uninstall mode,  Prev: Install mode,  Up: Invoking libtool\n\n4.5 Finish mode\n===============\n\n\"Finish\" mode has two functions.  One is to help system administrators\ninstall libtool libraries so that they can be located and linked into\nuser programs.  To invoke this functionality, pass the name of a library\ndirectory as MODE-ARG.  Running this command may require superuser\nprivileges, and the `--dry-run' option may be useful.\n\n   The second is to facilitate transferring libtool libraries to a\nnative compilation environment after they were built in a\ncross-compilation environment.  Cross-compilation environments may rely\non recent libtool features, and running libtool in finish mode will\nmake it easier to work with older versions of libtool.  This task is\nperformed whenever the MODE-ARG is a `.la' file.\n\n\u001f\nFile: libtool.info,  Node: Uninstall mode,  Next: Clean mode,  Prev: Finish mode,  Up: Invoking libtool\n\n4.6 Uninstall mode\n==================\n\n\"Uninstall\" mode deletes installed libraries, executables and objects.\n\n   The first MODE-ARG is the name of the program to use to delete files\n(typically `/bin/rm').\n\n   The remaining MODE-ARGS are either flags for the deletion program\n(beginning with a `-'), or the names of files to delete.\n\n\u001f\nFile: libtool.info,  Node: Clean mode,  Prev: Uninstall mode,  Up: Invoking libtool\n\n4.7 Clean mode\n==============\n\n\"Clean\" mode deletes uninstalled libraries, executables, objects and\nlibtool's temporary files associated with them.\n\n   The first MODE-ARG is the name of the program to use to delete files\n(typically `/bin/rm').\n\n   The remaining MODE-ARGS are either flags for the deletion program\n(beginning with a `-'), or the names of files to delete.\n\n\u001f\nFile: libtool.info,  Node: Integrating libtool,  Next: Other languages,  Prev: Invoking libtool,  Up: Top\n\n5 Integrating libtool with your package\n***************************************\n\nThis chapter describes how to integrate libtool with your packages so\nthat your users can install hassle-free shared libraries.\n\n   There are several ways in which Libtool may be integrated in your\npackage, described in the following sections.  Typically, the Libtool\nmacro files as well as `ltmain.sh' are copied into your package using\n`libtoolize' and `aclocal' after setting up the `configure.ac' and\ntoplevel `Makefile.am', then `autoconf' adds the needed tests to the\n`configure' script.  These individual steps are often automated with\n`autoreconf'.\n\n   Here is a diagram showing how such a typical Libtool configuration\nworks when preparing a package for distribution, assuming that `m4' has\nbeen chosen as location for additional Autoconf macros, and `build-aux'\nas location for auxiliary build tools (*note The Autoconf Manual:\n(autoconf)Input.):\n\n     libtool.m4 -----.                .--> aclocal.m4 -----.\n     ltoptions.m4 ---+  .-> aclocal* -+                    +--> autoconf*\n     ltversion.m4 ---+--+             `--> [copy in m4/] --+       |\n     ltsugar.m4 -----+  |                    ^             |       \\/\n     lt~obsolete.m4 -+  +-> libtoolize* -----'             |    configure\n     [ltdl.m4] ------+  |                                  |\n                        `----------------------------------'\n\n     ltmain.sh -----------> libtoolize* -> [copy in build-aux/]\n\n   During configuration, the `libtool' script is generated either\nthrough `config.status' or `config.lt':\n\n                  .--> config.status* --.\n     configure* --+                     +--> libtool\n                  `--> [config.lt*] ----'      ^\n                                               |\n     ltmain.sh --------------------------------'\n\n   At `make' run time, `libtool' is then invoked as needed as a wrapper\naround compilers, linkers, install and cleanup programs.\n\n   There are alternatives choices to several parts of the setup; for\nexample, the Libtool macro files can either be copied or symlinked into\nthe package, or copied into `aclocal.m4'.  As another example, an\nexternal, pre-configured `libtool' script may be used, by-passing most\nof the tests and package-specific setup for Libtool.\n\n* Menu:\n\n* Autoconf macros::             Autoconf macros exported by libtool.\n* Makefile rules::              Writing `Makefile' rules for libtool.\n* Using Automake::              Automatically supporting libtool.\n* Configuring::                 Configuring libtool for a host system.\n* Distributing::                What files to distribute with your package.\n* Static-only libraries::       Sometimes shared libraries are just a pain.\n\n\u001f\nFile: libtool.info,  Node: Autoconf macros,  Next: Makefile rules,  Up: Integrating libtool\n\n5.1 Autoconf macros exported by libtool\n=======================================\n\nLibtool uses a number of macros to interrogate the host system when it\nis being built, and you can use some of them yourself too.  Although\nthere are a great many other macros in the libtool installed m4 files,\nthese do not form part of the published interface, and are subject to\nchange between releases.\n\nMacros in the `LT_CMD_' namespace check for various shell commands:\n\n -- Macro: LT_CMD_MAX_LEN\n     Finds the longest command line that can be safely passed to\n     `$SHELL' without being truncated, and store in the shell variable\n     `$max_cmd_len'.  It is only an approximate value, but command\n     lines of this length or shorter are guaranteed not to be truncated.\n\nMacros in the `LT_FUNC_' namespace check characteristics of library\nfunctions:\n\n -- Macro: LT_FUNC_DLSYM_USCORE\n     `AC_DEFINE' the preprocessor symbol `DLSYM_USCORE' if we have to\n     add an underscore to symbol-names passed in to `dlsym'.\n\nMacros in the `LT_LIB_' namespace check characteristics of system\nlibraries:\n\n -- Macro: LT_LIB_M\n     Set `LIBM' to the math library or libraries required on this\n     machine, if any.\n\n -- Macro: LT_LIB_DLLOAD\n     This is the macro used by `libltdl' to determine which dlloaders\n     to use on this machine, if any.  Several shell variables are set\n     (and `AC_SUBST'ed) depending on the dlload interfaces are\n     available on this machine.  `LT_DLLOADERS' contains a list of\n     libtool libraries that can be used, and if necessary also sets\n     `LIBADD_DLOPEN' if additional system libraries are required by the\n     `dlopen' loader, and `LIBADD_SHL_LOAD' if additional system\n     libraries are required by the `shl_load' loader, respectively.\n     Finally some symbols are set in `config.h' depending on the\n     loaders that are found to work: `HAVE_LIBDL', `HAVE_SHL_LOAD',\n     `HAVE_DYLD', `HAVE_DLD'.\n\nMacros in the `LT_PATH_' namespace search the system for the full path\nto particular system commands:\n\n -- Macro: LT_PATH_LD\n     Add a `--with-gnu-ld' option to `configure'.  Try to find the path\n     to the linker used by `$CC', and whether it is the GNU linker.\n     The result is stored in the shell variable `$LD', which is\n     `AC_SUBST'ed.\n\n -- Macro: LT_PATH_NM\n     Try to find a BSD-compatible `nm' or a MS-compatible `dumpbin'\n     command on this machine.  The result is stored in the shell\n     variable `$NM', which is `AC_SUBST'ed.\n\nMacros in the `LT_SYS_' namespace probe for system characteristics:\n\n -- Macro: LT_SYS_DLOPEN_SELF\n     Tests whether a program can dlopen itself, and then also whether\n     the same program can still dlopen itself when statically linked.\n     Results are stored in the shell variables `$enable_dlopen_self' and\n     `enable_dlopen_self_static' respectively.\n\n -- Macro: LT_SYS_DLOPEN_DEPLIBS\n     Define the preprocessor symbol `LTDL_DLOPEN_DEPLIBS' if the OS\n     needs help to load dependent libraries for `dlopen' (or\n     equivalent).\n\n -- Macro: LT_SYS_DLSEARCH_PATH\n     Define the preprocessor symbol `LT_DLSEARCH_PATH' to the system\n     default library search path.\n\n -- Macro: LT_SYS_MODULE_EXT\n     Define the preprocessor symbol `LT_MODULE_EXT' to the extension\n     used for runtime loadable modules.  If you use libltdl to open\n     modules, then you can simply use the libtool library extension,\n     `.la'.\n\n -- Macro: LT_SYS_MODULE_PATH\n     Define the preprocessor symbol `LT_MODULE_PATH_VAR' to the name of\n     the shell environment variable that determines the run-time module\n     search path.\n\n -- Macro: LT_SYS_SYMBOL_USCORE\n     Set the shell variable `sys_symbol_underscore' to `no' unless the\n     compiler prefixes global symbols with an underscore.\n\n\u001f\nFile: libtool.info,  Node: Makefile rules,  Next: Using Automake,  Prev: Autoconf macros,  Up: Integrating libtool\n\n5.2 Writing `Makefile' rules for libtool\n========================================\n\nLibtool is fully integrated with Automake (*note Introduction:\n(automake)Top.), starting with Automake version 1.2.\n\n   If you want to use libtool in a regular `Makefile' (or\n`Makefile.in'), you are on your own.  If you're not using Automake, and\nyou don't know how to incorporate libtool into your package you need to\ndo one of the following:\n\n  1. Download the latest Automake distribution from your nearest GNU\n     mirror, install it, and start using it.\n\n  2. Learn how to write `Makefile' rules by hand.  They're sometimes\n     complex, but if you're clever enough to write rules for compiling\n     your old libraries, then you should be able to figure out new\n     rules for libtool libraries (hint: examine the `Makefile.in' in\n     the `tests/demo' subdirectory of the libtool distribution... note\n     especially that it was automatically generated from the\n     `Makefile.am' by Automake).\n\n\u001f\nFile: libtool.info,  Node: Using Automake,  Next: Configuring,  Prev: Makefile rules,  Up: Integrating libtool\n\n5.3 Using Automake with libtool\n===============================\n\nLibtool library support is implemented under the `LTLIBRARIES' primary.\n\n   Here are some samples from the Automake `Makefile.am' in the libtool\ndistribution's `demo' subdirectory.\n\n   First, to link a program against a libtool library, just use the\n`program_LDADD'(1) variable:\n\n     bin_PROGRAMS = hell hell_static\n\n     # Build hell from main.c and libhello.la\n     hell_SOURCES = main.c\n     hell_LDADD = libhello.la\n\n     # Create a statically linked version of hell.\n     hell_static_SOURCES = main.c\n     hell_static_LDADD = libhello.la\n     hell_static_LDFLAGS = -static\n\n   You may use the `program_LDFLAGS' variable to stuff in any flags you\nwant to pass to libtool while linking `program' (such as `-static' to\navoid linking uninstalled shared libtool libraries).\n\n   Building a libtool library is almost as trivial... note the use of\n`libhello_la_LDFLAGS' to pass the `-version-info' (*note Versioning::)\noption to libtool:\n\n     # Build a libtool library, libhello.la for installation in libdir.\n     lib_LTLIBRARIES = libhello.la\n     libhello_la_SOURCES = hello.c foo.c\n     libhello_la_LDFLAGS = -version-info 3:12:1\n\n   The `-rpath' option is passed automatically by Automake (except for\nlibraries listed as `noinst_LTLIBRARIES'), so you should not specify it.\n\n   *Note Building a Shared Library: (automake)A Shared Library, for\nmore information.\n\n   ---------- Footnotes ----------\n\n   (1) Since GNU Automake 1.5, the flags `-dlopen' or `-dlpreopen'\n(*note Link mode::) can be employed with the `program_LDADD' variable.\nUnfortunately, older releases didn't accept these flags, so if you are\nstuck with an ancient Automake, we recommend quoting the flag itself,\nand setting `program_DEPENDENCIES' too:\n\n     program_LDADD = \"-dlopen\" libfoo.la\n     program_DEPENDENCIES = libfoo.la\n\n\u001f\nFile: libtool.info,  Node: Configuring,  Next: Distributing,  Prev: Using Automake,  Up: Integrating libtool\n\n5.4 Configuring libtool\n=======================\n\nLibtool requires intimate knowledge of your compiler suite and operating\nsystem in order to be able to create shared libraries and link against\nthem properly.  When you install the libtool distribution, a\nsystem-specific libtool script is installed into your binary directory.\n\n   However, when you distribute libtool with your own packages (*note\nDistributing::), you do not always know the compiler suite and\noperating system that are used to compile your package.\n\n   For this reason, libtool must be \"configured\" before it can be used.\nThis idea should be familiar to anybody who has used a GNU `configure'\nscript.  `configure' runs a number of tests for system features, then\ngenerates the `Makefile's (and possibly a `config.h' header file),\nafter which you can run `make' and build the package.\n\n   Libtool adds its own tests to your `configure' script in order to\ngenerate a libtool script for the installer's host machine.\n\n* Menu:\n\n* LT_INIT::                     Configuring `libtool' in `configure.ac'.\n* Configure notes::             Platform-specific notes for configuration.\n\n\u001f\nFile: libtool.info,  Node: LT_INIT,  Next: Configure notes,  Up: Configuring\n\n5.4.1 The `LT_INIT' macro\n-------------------------\n\nIf you are using GNU Autoconf (or Automake), you should add a call to\n`LT_INIT' to your `configure.ac' file.  This macro adds many new tests\nto the `configure' script so that the generated libtool script will\nunderstand the characteristics of the host.  It's the most important of\na number of macros defined by Libtool:\n\n -- Macro: LT_PREREQ (VERSION)\n     Ensure that a recent enough version of Libtool is being used.  If\n     the version of Libtool used for `LT_INIT' is earlier than VERSION,\n     print an error message to the standard error output and exit with\n     failure (exit status is 63).  For example:\n\n          LT_PREREQ([2.4.2])\n\n -- Macro: LT_INIT (OPTIONS)\n -- Macro: AC_PROG_LIBTOOL\n -- Macro: AM_PROG_LIBTOOL\n     Add support for the `--enable-shared', `--disable-shared',\n     `--enable-static', `--disable-static', `--with-pic', and\n     `--without-pic' `configure' flags.(1)  `AC_PROG_LIBTOOL' and\n     `AM_PROG_LIBTOOL' are deprecated names for older versions of this\n     macro; `autoupdate' will upgrade your `configure.ac' files.\n\n     By default, this macro turns on shared libraries if they are\n     available, and also enables static libraries if they don't\n     conflict with the shared libraries.  You can modify these defaults\n     by passing either `disable-shared' or `disable-static' in the\n     option list to `LT_INIT', or using `AC_DISABLE_SHARED' or\n     `AC_DISABLE_STATIC'.\n\n          # Turn off shared libraries during beta-testing, since they\n          # make the build process take too long.\n          LT_INIT([disable-shared])\n\n     The user may specify modified forms of the configure flags\n     `--enable-shared' and `--enable-static' to choose whether shared\n     or static libraries are built based on the name of the package.\n     For example, to have shared `bfd' and `gdb' libraries built, but\n     not shared `libg++', you can run all three `configure' scripts as\n     follows:\n\n          trick$ ./configure --enable-shared=bfd,gdb\n\n     In general, specifying `--enable-shared=PKGS' is the same as\n     configuring with `--enable-shared' every package named in the\n     comma-separated PKGS list, and every other package with\n     `--disable-shared'.  The `--enable-static=PKGS' flag behaves\n     similarly, but it uses `--enable-static' and `--disable-static'.\n     The same applies to the `--enable-fast-install=PKGS' flag, which\n     uses `--enable-fast-install' and `--disable-fast-install'.\n\n     The package name `default' matches any packages that have not set\n     their name in the `PACKAGE' environment variable.\n\n     The `--with-pic' and `--without-pic' configure flags can be used\n     to specify whether or not `libtool' uses PIC objects.  By default,\n     `libtool' uses PIC objects for shared libraries and non-PIC\n     objects for static libraries.  The `--with-pic' option also\n     accepts a comma-separated list of package names.  Specifying\n     `--with-pic=PKGS' is the same as configuring every package in PKGS\n     with `--with-pic' and every other package with the default\n     configuration.  The package name `default' is treated the same as\n     for `--enable-shared' and `--enable-static'.\n\n     This macro also sets the shell variable `LIBTOOL_DEPS', that you\n     can use to automatically update the libtool script if it becomes\n     out-of-date.  In order to do that, add to your `configure.ac':\n\n          LT_INIT\n          AC_SUBST([LIBTOOL_DEPS])\n\n     and, to `Makefile.in' or `Makefile.am':\n\n          LIBTOOL_DEPS = @LIBTOOL_DEPS@\n          libtool: $(LIBTOOL_DEPS)\n                  $(SHELL) ./config.status libtool\n\n     If you are using GNU Automake, you can omit the assignment, as\n     Automake will take care of it.  You'll obviously have to create\n     some dependency on `libtool'.\n\n     Aside from `disable-static' and `disable-shared', there are other\n     options that you can pass to `LT_INIT' to modify its behaviour.\n     Here is a full list:\n\n    `dlopen'\n          Enable checking for dlopen support.  This option should be\n          used if the package makes use of the `-dlopen' and\n          `-dlpreopen' libtool flags, otherwise libtool will assume\n          that the system does not support dlopening.\n\n    `win32-dll'\n          This option should be used if the package has been ported to\n          build clean dlls on win32 platforms.  Usually this means that\n          any library data items are exported with\n          `__declspec(dllexport)' and imported with\n          `__declspec(dllimport)'.  If this macro is not used, libtool\n          will assume that the package libraries are not dll clean and\n          will build only static libraries on win32 hosts.\n\n          Provision must be made to pass `-no-undefined' to `libtool'\n          in link mode from the package `Makefile'.  Naturally, if you\n          pass `-no-undefined', you must ensure that all the library\n          symbols *really are* defined at link time!\n\n    `disable-fast-install'\n          Change the default behaviour for `LT_INIT' to disable\n          optimization for fast installation.  The user may still\n          override this default, depending on platform support, by\n          specifying `--enable-fast-install' to `configure'.\n\n    `shared'\n          Change the default behaviour for `LT_INIT' to enable shared\n          libraries.  This is the default on all systems where Libtool\n          knows how to create shared libraries.  The user may still\n          override this default by specifying `--disable-shared' to\n          `configure'.\n\n    `disable-shared'\n          Change the default behaviour for `LT_INIT' to disable shared\n          libraries.  The user may still override this default by\n          specifying `--enable-shared' to `configure'.\n\n    `static'\n          Change the default behaviour for `LT_INIT' to enable static\n          libraries.  This is the default on all systems where shared\n          libraries have been disabled for some reason, and on most\n          systems where shared libraries have been enabled.  If shared\n          libraries are enabled, the user may still override this\n          default by specifying `--disable-static' to `configure'.\n\n    `disable-static'\n          Change the default behaviour for `LT_INIT' to disable static\n          libraries.  The user may still override this default by\n          specifying `--enable-static' to `configure'.\n\n    `pic-only'\n          Change the default behaviour for `libtool' to try to use only\n          PIC objects.  The user may still override this default by\n          specifying `--without-pic' to `configure'.\n\n    `no-pic'\n          Change the default behaviour of `libtool' to try to use only\n          non-PIC objects.  The user may still override this default by\n          specifying `--with-pic' to `configure'.\n\n\n\n -- Macro: LT_LANG (LANGUAGE)\n     Enable `libtool' support for the language given if it has not yet\n     already been enabled.  Languages accepted are \"C++\", \"Fortran 77\",\n     \"Java\", \"Go\", and \"Windows Resource\".\n\n     If Autoconf language support macros such as `AC_PROG_CXX' are used\n     in your `configure.ac', Libtool language support will automatically\n     be enabled.\n\n     Conversely using `LT_LANG' to enable language support for Libtool\n     will automatically enable Autoconf language support as well.\n\n     Both of the following examples are therefore valid ways of adding\n     C++ language support to Libtool.\n\n          LT_INIT\n          LT_LANG([C++])\n\n          LT_INIT\n          AC_PROG_CXX\n\n\n -- Macro: AC_LIBTOOL_DLOPEN\n     This macro is deprecated, the `dlopen' option to `LT_INIT' should\n     be used instead.\n\n -- Macro: AC_LIBTOOL_WIN32_DLL\n     This macro is deprecated, the `win32-dll' option to `LT_INIT'\n     should be used instead.\n\n -- Macro: AC_DISABLE_FAST_INSTALL\n     This macro is deprecated, the `disable-fast-install' option to\n     `LT_INIT' should be used instead.\n\n -- Macro: AC_DISABLE_SHARED\n -- Macro: AM_DISABLE_SHARED\n     Change the default behaviour for `LT_INIT' to disable shared\n     libraries.  The user may still override this default by specifying\n     `--enable-shared'.  The option `disable-shared' to `LT_INIT' is a\n     shorthand for this.  `AM_DISABLE_SHARED' is a deprecated alias for\n     `AC_DISABLE_SHARED'.\n\n -- Macro: AC_ENABLE_SHARED\n -- Macro: AM_ENABLE_SHARED\n     Change the default behaviour for `LT_INIT' to enable shared\n     libraries.  This is the default on all systems where Libtool knows\n     how to create shared libraries.  The user may still override this\n     default by specifying `--disable-shared'.  The option `shared' to\n     `LT_INIT' is a shorthand for this.  `AM_ENABLE_SHARED' is a\n     deprecated alias for `AC_ENABLE_SHARED'.\n\n -- Macro: AC_DISABLE_STATIC\n -- Macro: AM_DISABLE_STATIC\n     Change the default behaviour for `LT_INIT' to disable static\n     libraries.  The user may still override this default by specifying\n     `--enable-static'.  The option `disable-static' to `LT_INIT' is a\n     shorthand for this.  `AM_DISABLE_STATIC' is a deprecated alias for\n     `AC_DISABLE_STATIC'.\n\n -- Macro: AC_ENABLE_STATIC\n -- Macro: AM_ENABLE_STATIC\n     Change the default behaviour for `LT_INIT' to enable static\n     libraries.  This is the default on all systems where shared\n     libraries have been disabled for some reason, and on most systems\n     where shared libraries have been enabled.  If shared libraries are\n     enabled, the user may still override this default by specifying\n     `--disable-static'.  The option `static' to `LT_INIT' is a\n     shorthand for this.  `AM_ENABLE_STATIC' is a deprecated alias for\n     `AC_ENABLE_STATIC'.\n\n   The tests in `LT_INIT' also recognize the following environment\nvariables:\n\n -- Variable: CC\n     The C compiler that will be used by the generated `libtool'.  If\n     this is not set, `LT_INIT' will look for `gcc' or `cc'.\n\n -- Variable: CFLAGS\n     Compiler flags used to generate standard object files.  If this is\n     not set, `LT_INIT' will not use any such flags.  It affects only\n     the way `LT_INIT' runs tests, not the produced `libtool'.\n\n -- Variable: CPPFLAGS\n     C preprocessor flags.  If this is not set, `LT_INIT' will not use\n     any such flags.  It affects only the way `LT_INIT' runs tests, not\n     the produced `libtool'.\n\n -- Variable: LD\n     The system linker to use (if the generated `libtool' requires one).\n     If this is not set, `LT_INIT' will try to find out what is the\n     linker used by `CC'.\n\n -- Variable: LDFLAGS\n     The flags to be used by `libtool' when it links a program.  If\n     this is not set, `LT_INIT' will not use any such flags.  It\n     affects only the way `LT_INIT' runs tests, not the produced\n     `libtool'.\n\n -- Variable: LIBS\n     The libraries to be used by `LT_INIT' when it links a program.  If\n     this is not set, `LT_INIT' will not use any such flags.  It\n     affects only the way `LT_INIT' runs tests, not the produced\n     `libtool'.\n\n -- Variable: NM\n     Program to use rather than checking for `nm'.\n\n -- Variable: RANLIB\n     Program to use rather than checking for `ranlib'.\n\n -- Variable: LN_S\n     A command that creates a link of a program, a soft-link if\n     possible, a hard-link otherwise.  `LT_INIT' will check for a\n     suitable program if this variable is not set.\n\n -- Variable: DLLTOOL\n     Program to use rather than checking for `dlltool'.  Only meaningful\n     for Cygwin/MS-Windows.\n\n -- Variable: OBJDUMP\n     Program to use rather than checking for `objdump'.  Only meaningful\n     for Cygwin/MS-Windows.\n\n -- Variable: AS\n     Program to use rather than checking for `as'.  Only used on\n     Cygwin/MS-Windows at the moment.\n\n -- Variable: MANIFEST_TOOL\n     Program to use rather than checking for `mt', the Manifest Tool.\n     Only used on Cygwin/MS-Windows at the moment.\n\n   With 1.3 era libtool, if you wanted to know any details of what\nlibtool had discovered about your architecture and environment, you had\nto run the script with `--config' and grep through the results.  This\nidiom was supported up to and including 1.5.x era libtool, where it was\npossible to call the generated libtool script from `configure.ac' as\nsoon as `LT_INIT' had completed.  However, one of the features of\nlibtool 1.4 was that the libtool configuration was migrated out of a\nseparate `ltconfig' file, and added to the `LT_INIT' macro (nee\n`AC_PROG_LIBTOOL'), so the results of the configuration tests were\navailable directly to code in `configure.ac', rendering the call out to\nthe generated libtool script obsolete.\n\n   Starting with libtool 2.0, the multipass generation of the libtool\nscript has been consolidated into a single `config.status' pass, which\nhappens after all the code in `configure.ac' has completed.  The\nimplication of this is that the libtool script does not exist during\nexecution of code from `configure.ac', and so obviously it cannot be\ncalled for `--config' details anymore.  If you are upgrading projects\nthat used this idiom to libtool 2.0 or newer, you should replace those\ncalls with direct references to the equivalent Autoconf shell variables\nthat are set by the configure time tests before being passed to\n`config.status' for inclusion in the generated libtool script.\n\n -- Macro: LT_OUTPUT\n     By default, the configured `libtool' script is generated by the\n     call to `AC_OUTPUT' command, and there is rarely any need to use\n     `libtool' from `configure'.  However, sometimes it is necessary to\n     run configure time compile and link tests using `libtool'.  You\n     can add `LT_OUTPUT' to your `configure.ac' any time after\n     `LT_INIT' and any `LT_LANG' calls; that done, `libtool' will be\n     created by a specially generated `config.lt' file, and available\n     for use in later tests.\n\n     Also, when `LT_OUTPUT' is used, for backwards compatibility with\n     Automake regeneration rules, `config.status' will call `config.lt'\n     to regenerate `libtool', rather than generating the file itself.\n\n   When you invoke the `libtoolize' program (*note Invoking\nlibtoolize::), it will tell you where to find a definition of\n`LT_INIT'.  If you use Automake, the `aclocal' program will\nautomatically add `LT_INIT' support to your `configure' script when it\nsees the invocation of `LT_INIT' in `configure.ac'.\n\n   Because of these changes, and the runtime version compatibility\nchecks Libtool now executes, we now advise *against* including a copy of\n`libtool.m4' (and brethren) in `acinclude.m4'.  Instead, you should set\nyour project macro directory with `AC_CONFIG_MACRO_DIR'.  When you\n`libtoolize' your project, a copy of the relevant macro definitions\nwill be placed in your `AC_CONFIG_MACRO_DIR', where `aclocal' can\nreference them directly from `aclocal.m4'.\n\n   ---------- Footnotes ----------\n\n   (1) `LT_INIT' requires that you define the `Makefile' variable\n`top_builddir' in your `Makefile.in'.  Automake does this\nautomatically, but Autoconf users should set it to the relative path to\nthe top of your build directory (`../..', for example).\n\n\u001f\nFile: libtool.info,  Node: Configure notes,  Prev: LT_INIT,  Up: Configuring\n\n5.4.2 Platform-specific configuration notes\n-------------------------------------------\n\nWhile Libtool tries to hide as many platform-specific features as\npossible, some have to be taken into account when configuring either\nthe Libtool package or a libtoolized package.\n\n   * You currently need GNU make to build the Libtool package itself.\n\n   * On AIX there are two different styles of shared linking, one in\n     which symbols are bound at link-time and one in which symbols are\n     bound at runtime only, similar to ELF.  In case of doubt use\n     `LDFLAGS=-Wl,-brtl' for the latter style.\n\n   * On AIX, native tools are to be preferred over binutils; especially\n     for C++ code, if using the AIX Toolbox GCC 4.0 and binutils,\n     configure with `AR=/usr/bin/ar LD=/usr/bin/ld NM='/usr/bin/nm -B''.\n\n   * On AIX, the `/bin/sh' is very slow due to its inefficient handling\n     of here-documents.  A modern shell is preferable:\n          CONFIG_SHELL=/bin/bash; export $CONFIG_SHELL\n          $CONFIG_SHELL ./configure [...]\n\n   * For C++ code with templates, it may be necessary to specify the\n     way the compiler will generate the instantiations.  For Portland\n     pgCC version5, use `CXX='pgCC --one_instantiation_per_object'' and\n     avoid parallel `make'.\n\n   * On Darwin, for C++ code with templates you need two level shared\n     libraries.  Libtool builds these by default if\n     `MACOSX_DEPLOYMENT_TARGET' is set to 10.3 or later at `configure'\n     time.  See `rdar://problem/4135857' for more information on this\n     issue.\n\n   * The default shell on UNICOS 9, a ksh 88e variant, is too buggy to\n     correctly execute the libtool script.  Users are advised to\n     install a modern shell such as GNU bash.\n\n   * Some HP-UX `sed' programs are horribly broken, and cannot handle\n     libtool's requirements, so users may report unusual problems.\n     There is no workaround except to install a working `sed' (such as\n     GNU sed) on these systems.\n\n   * The vendor-distributed NCR MP-RAS `cc' programs emits copyright on\n     standard error that confuse tests on size of `conftest.err'.  The\n     workaround is to specify `CC' when run configure with `CC='cc\n     -Hnocopyr''.\n\n   * Any earlier DG/UX system with ELF executables, such as R3.10 or\n     R4.10, is also likely to work, but hasn't been explicitly tested.\n\n   * On Reliant Unix libtool has only been tested with the Siemens\n     C-compiler and an old version of `gcc' provided by Marco Walther.\n\n   * `libtool.m4', `ltdl.m4' and the `configure.ac' files are marked to\n     use autoconf-mode, which is distributed with GNU Emacs 21,\n     Autoconf itself, and all recent releases of XEmacs.\n\n   * When building on some GNU/Linux systems for multilib targets\n     `libtool' sometimes guesses the wrong paths that the linker and\n     dynamic linker search by default. If this occurs, you may override\n     libtool's guesses at `configure' time by setting the `autoconf'\n     cache variables `lt_cv_sys_lib_search_path_spec' and\n     `lt_cv_sys_lib_dlsearch_path_spec' respectively to the correct\n     search paths.\n\n\n\u001f\nFile: libtool.info,  Node: Distributing,  Next: Static-only libraries,  Prev: Configuring,  Up: Integrating libtool\n\n5.5 Including libtool in your package\n=====================================\n\nIn order to use libtool, you need to include the following files with\nyour package:\n\n`config.guess'\n     Attempt to guess a canonical system name.\n\n`config.sub'\n     Canonical system name validation subroutine script.\n\n`install-sh'\n     BSD-compatible `install' replacement script.\n\n`ltmain.sh'\n     A generic script implementing basic libtool functionality.\n\n   Note that the libtool script itself should _not_ be included with\nyour package.  *Note Configuring::.\n\n   You should use the `libtoolize' program, rather than manually\ncopying these files into your package.\n\n* Menu:\n\n* Invoking libtoolize::         `libtoolize' command line options.\n* Autoconf and LTLIBOBJS::      Autoconf automates LTLIBOBJS generation.\n\n\u001f\nFile: libtool.info,  Node: Invoking libtoolize,  Next: Autoconf and LTLIBOBJS,  Up: Distributing\n\n5.5.1 Invoking `libtoolize'\n---------------------------\n\nThe `libtoolize' program provides a standard way to add libtool support\nto your package.  In the future, it may implement better usage\nchecking, or other features to make libtool even easier to use.\n\n   The `libtoolize' program has the following synopsis:\n\n     libtoolize [OPTION]...\n\nand accepts the following options:\n\n`--copy'\n`-c'\n     Copy files from the libtool data directory rather than creating\n     symlinks.\n\n`--debug'\n     Dump a trace of shell script execution to standard output.  This\n     produces a lot of output, so you may wish to pipe it to `less' (or\n     `more') or redirect to a file.\n\n`--dry-run'\n`-n'\n     Don't run any commands that modify the file system, just print them\n     out.\n\n`--force'\n`-f'\n     Replace existing libtool files.  By default, `libtoolize' won't\n     overwrite existing files.\n\n`--help'\n     Display a help message and exit.\n\n`--ltdl [TARGET-DIRECTORY-NAME]'\n     Install libltdl in the TARGET-DIRECTORY-NAME subdirectory of your\n     package.  Normally, the directory is extracted from the argument\n     to `LT_CONFIG_LTDL_DIR' in `configure.ac', though you can also\n     specify a subdirectory name here if you are not using Autoconf for\n     example.  If `libtoolize' can't determine the target directory,\n     `libltdl' is used as the default.\n\n`--no-warn'\n     Normally, Libtoolize tries to diagnose use of deprecated libtool\n     macros and other stylistic issues.  If you are deliberately using\n     outdated calling conventions, this option prevents Libtoolize from\n     explaining how to update your project's Libtool conventions.\n\n`--nonrecursive'\n     If passed in conjunction with `--ltdl', this option will cause the\n     `libltdl' installed by `libtoolize' to be set up for use with a\n     non-recursive `automake' build.  To make use of it, you will need\n     to add the following to the `Makefile.am' of the parent project:\n\n          ## libltdl/Makefile.inc appends to the following variables\n          ## so we set them here before including it:\n          BUILT_SOURCES   =\n\n          AM_CPPFLAGS        =\n          AM_LDFLAGS         =\n\n          include_HEADERS    =\n          noinst_LTLIBRARIES =\n          lib_LTLIBRARIES   =\n          EXTRA_LTLIBRARIES  =\n\n          EXTRA_DIST   =\n\n          CLEANFILES   =\n          MOSTLYCLEANFILES   =\n\n          include libltdl/Makefile.inc\n\n\n`--quiet'\n`-q'\n     Work silently.  `libtoolize --quiet' is used by GNU Automake to\n     add libtool files to your package if necessary.\n\n`--recursive'\n     If passed in conjunction with `--ltdl', this option will cause the\n     `libtoolize' installed `libltdl' to be set up for use with a\n     recursive `automake' build.  To make use of it, you will need to\n     adjust the parent project's `configure.ac':\n\n          AC_CONFIG_FILES([libltdl/Makefile])\n\n     and `Makefile.am':\n\n          SUBDIRS += libltdl\n\n`--subproject'\n     If passed in conjunction with `--ltdl', this option will cause the\n     `libtoolize' installed `libltdl' to be set up for independent\n     configuration and compilation as a self-contained subproject.  To\n     make use of it, you should arrange for your build to call\n     `libltdl/configure', and then run `make' in the `libltdl'\n     directory (or the subdirectory you put libltdl into).  If your\n     project uses Autoconf, you can use the supplied `LT_WITH_LTDL'\n     macro, or else call `AC_CONFIG_SUBDIRS' directly.\n\n     Previous releases of `libltdl' built exclusively in this mode, but\n     now it is the default mode both for backwards compatibility and\n     because, for example, it is suitable for use in projects that wish\n     to use `libltdl', but not use the Autotools for their own build\n     process.\n\n`--verbose'\n`-v'\n     Work noisily!  Give a blow by blow account of what `libtoolize' is\n     doing.\n\n`--version'\n     Print `libtoolize' version information and exit.\n\n   Sometimes it can be useful to pass options to `libtoolize' even\nthough it is called by another program, such as `autoreconf'.  A\nlimited number of options are parsed from the environment variable\n`LIBTOOLIZE_OPTIONS': currently `--debug', `--no-warn', `--quiet' and\n`--verbose'.  Multiple options passed in `LIBTOOLIZE_OPTIONS' must be\nseparated with a space, comma or a colon.\n\n   By default, a warning is issued for unknown options found in\n`LIBTOOLIZE_OPTIONS' unless the first such option is `--no-warn'.\nWhere `libtoolize' has always quit on receipt of an unknown option at\nthe command line, this and all previous releases of `libtoolize' will\ncontinue unabated whatever the content of `LIBTOOLIZE_OPTIONS' (modulo\nsome possible warning messages).\n\n     trick$ LIBTOOLIZE_OPTIONS=--no-warn,--quiet autoreconf --install\n\n   If `libtoolize' detects an explicit call to `AC_CONFIG_MACRO_DIR'\n(*note The Autoconf Manual: (autoconf)Input.) in your `configure.ac',\nit will put the Libtool macros in the specified directory.\n\n   In the future other Autotools will automatically check the contents\nof `AC_CONFIG_MACRO_DIR', but at the moment it is more portable to add\nthe macro directory to `ACLOCAL_AMFLAGS' in `Makefile.am', which is\nwhere the tools currently look.  If `libtoolize' doesn't see\n`AC_CONFIG_MACRO_DIR', it too will honour the first `-I' argument in\n`ACLOCAL_AMFLAGS' when choosing a directory to store libtool\nconfiguration macros in.  It is perfectly sensible to use both\n`AC_CONFIG_MACRO_DIR' and `ACLOCAL_AMFLAGS', as long as they are kept\nin synchronisation.\n\n     ACLOCAL_AMFLAGS = -I m4\n\n   When you bootstrap your project with `aclocal', then you will need\nto explicitly pass the same macro directory with `aclocal''s `-I' flag:\n\n     trick$ aclocal -I m4\n\n   If `libtoolize' detects an explicit call to `AC_CONFIG_AUX_DIR'\n(*note The Autoconf Manual: (autoconf)Input.) in your `configure.ac', it\nwill put the other support files in the specified directory.  Otherwise\nthey too end up in the project root directory.\n\n   Unless `--no-warn' is passed, `libtoolize' displays hints for adding\nlibtool support to your package, as well.\n\n\u001f\nFile: libtool.info,  Node: Autoconf and LTLIBOBJS,  Prev: Invoking libtoolize,  Up: Distributing\n\n5.5.2 Autoconf and `LTLIBOBJS'\n------------------------------\n\nPeople used to add code like the following to their `configure.ac':\n\n     LTLIBOBJS=`echo \"$LIBOBJS\" | sed 's/\\.[^.]* /.lo /g;s/\\.[^.]*$/.lo/'`\n     AC_SUBST([LTLIBOBJS])\n\nThis is no longer required (since Autoconf 2.54), and doesn't take\nAutomake's deansification support into account either, so doesn't work\ncorrectly even with ancient Autoconfs!\n\n   Provided you are using a recent (2.54 or better) incarnation of\nAutoconf, the call to `AC_OUTPUT' takes care of setting `LTLIBOBJS' up\ncorrectly, so you can simply delete such snippets from your\n`configure.ac' if you had them.\n\n\u001f\nFile: libtool.info,  Node: Static-only libraries,  Prev: Distributing,  Up: Integrating libtool\n\n5.6 Static-only libraries\n=========================\n\nWhen you are developing a package, it is often worthwhile to configure\nyour package with the `--disable-shared' flag, or to override the\ndefaults for `LT_INIT' by using the `disable-shared' option (*note The\n`LT_INIT' macro: LT_INIT.).  This prevents libtool from building shared\nlibraries, which has several advantages:\n\n   * compilation is twice as fast, which can speed up your development\n     cycle,\n\n   * debugging is easier because you don't need to deal with any\n     complexities added by shared libraries, and\n\n   * you can see how libtool behaves on static-only platforms.\n\n   You may want to put a small note in your package `README' to let\nother developers know that `--disable-shared' can save them time.  The\nfollowing example note is taken from the GIMP(1) distribution `README':\n\n     The GIMP uses GNU Libtool in order to build shared libraries on a\n     variety of systems.  While this is very nice for making usable\n     binaries, it can be a pain when trying to debug a program.  For that\n     reason, compilation of shared libraries can be turned off by\n     specifying the `--disable-shared' option to `configure'.\n\n   ---------- Footnotes ----------\n\n   (1) GNU Image Manipulation Program, for those who haven't taken the\nplunge.  See `http://www.gimp.org/'.\n\n\u001f\nFile: libtool.info,  Node: Other languages,  Next: Versioning,  Prev: Integrating libtool,  Up: Top\n\n6 Using libtool with other languages\n************************************\n\nLibtool was first implemented in order to add support for writing shared\nlibraries in the C language.  However, over time, libtool is being\nintegrated with other languages, so that programmers are free to reap\nthe benefits of shared libraries in their favorite programming language.\n\n   This chapter describes how libtool interacts with other languages,\nand what special considerations you need to make if you do not use C.\n\n* Menu:\n\n* C++ libraries::               Writing libraries for C++\n* Tags::                        Tags\n\n\u001f\nFile: libtool.info,  Node: C++ libraries,  Next: Tags,  Up: Other languages\n\n6.1 Writing libraries for C++\n=============================\n\nCreating libraries of C++ code should be a fairly straightforward\nprocess, because its object files differ from C ones in only three ways:\n\n  1. Because of name mangling, C++ libraries are only usable by the C++\n     compiler that created them.  This decision was made by the\n     designers of C++ in order to protect users from conflicting\n     implementations of features such as constructors, exception\n     handling, and RTTI.\n\n  2. On some systems, the C++ compiler must take special actions for the\n     dynamic linker to run dynamic (i.e., run-time) initializers.  This\n     means that we should not call `ld' directly to link such\n     libraries, and we should use the C++ compiler instead.\n\n  3. C++ compilers will link some Standard C++ library in by default,\n     but libtool does not know which are these libraries, so it cannot\n     even run the inter-library dependence analyzer to check how to\n     link it in.  Therefore, running `ld' to link a C++ program or\n     library is deemed to fail.\n\n   Because of these three issues, Libtool has been designed to always\nuse the C++ compiler to compile and link C++ programs and libraries.  In\nsome instances the `main()' function of a program must also be compiled\nwith the C++ compiler for static C++ objects to be properly initialized.\n\n\u001f\nFile: libtool.info,  Node: Tags,  Prev: C++ libraries,  Up: Other languages\n\n6.2 Tags\n========\n\nLibtool supports multiple languages through the use of tags.\nTechnically a tag corresponds to a set of configuration variables\nassociated with a language.  These variables tell `libtool' how it\nshould create objects and libraries for each language.\n\n   Tags are defined at `configure'-time for each language activated in\nthe package (see `LT_LANG' in *note LT_INIT::).  Here is the\ncorrespondence between language names and tags names.\n\nLanguage name      Tag name\nC                  CC\nC++                CXX\nJava               GCJ\nFortran 77         F77\nFortran            FC\nGo                 GO\nWindows Resource   RC\n\n   `libtool' tries to automatically infer which tag to use from the\ncompiler command being used to compile or link.  If it can't infer a\ntag, then it defaults to the configuration for the `C' language.\n\n   The tag can also be specified using `libtool''s `--tag=TAG' option\n(*note Invoking libtool::).  It is a good idea to do so in `Makefile'\nrules, because that will allow users to substitute the compiler without\nrelying on `libtool' inference heuristics.  When no tag is specified,\n`libtool' will default to `CC'; this tag always exists.\n\n   Finally, the set of tags available in a particular project can be\nretrieved by tracing for the `LT_SUPPORTED_TAG' macro (*note Trace\ninterface::).\n\n\u001f\nFile: libtool.info,  Node: Versioning,  Next: Library tips,  Prev: Other languages,  Up: Top\n\n7 Library interface versions\n****************************\n\nThe most difficult issue introduced by shared libraries is that of\ncreating and resolving runtime dependencies.  Dependencies on programs\nand libraries are often described in terms of a single name, such as\n`sed'.  So, one may say \"libtool depends on sed,\" and that is good\nenough for most purposes.\n\n   However, when an interface changes regularly, we need to be more\nspecific: \"Gnus 5.1 requires Emacs 19.28 or above.\"  Here, the\ndescription of an interface consists of a name, and a \"version number.\"\n\n   Even that sort of description is not accurate enough for some\npurposes.  What if Emacs 20 changes enough to break Gnus 5.1?\n\n   The same problem exists in shared libraries: we require a formal\nversion system to describe the sorts of dependencies that programs have\non shared libraries, so that the dynamic linker can guarantee that\nprograms are linked only against libraries that provide the interface\nthey require.\n\n* Menu:\n\n* Interfaces::                  What are library interfaces?\n* Libtool versioning::          Libtool's versioning system.\n* Updating version info::       Changing version information before releases.\n* Release numbers::             Breaking binary compatibility for aesthetics.\n\n\u001f\nFile: libtool.info,  Node: Interfaces,  Next: Libtool versioning,  Up: Versioning\n\n7.1 What are library interfaces?\n================================\n\nInterfaces for libraries may be any of the following (and more):\n\n   * global variables: both names and types\n\n   * global functions: argument types and number, return types, and\n     function names\n\n   * standard input, standard output, standard error, and file formats\n\n   * sockets, pipes, and other inter-process communication protocol\n     formats\n\n   Note that static functions do not count as interfaces, because they\nare not directly available to the user of the library.\n\n\u001f\nFile: libtool.info,  Node: Libtool versioning,  Next: Updating version info,  Prev: Interfaces,  Up: Versioning\n\n7.2 Libtool's versioning system\n===============================\n\nLibtool has its own formal versioning system.  It is not as flexible as\nsome, but it is definitely the simplest of the more powerful versioning\nsystems.\n\n   Think of a library as exporting several sets of interfaces,\narbitrarily represented by integers.  When a program is linked against\na library, it may use any subset of those interfaces.\n\n   Libtool's description of the interfaces that a program uses is\nsimple: it encodes the least and the greatest interface numbers in the\nresulting binary (FIRST-INTERFACE, LAST-INTERFACE).\n\n   The dynamic linker is guaranteed that if a library supports _every_\ninterface number between FIRST-INTERFACE and LAST-INTERFACE, then the\nprogram can be relinked against that library.\n\n   Note that this can cause problems because libtool's compatibility\nrequirements are actually stricter than is necessary.\n\n   Say `libhello' supports interfaces 5, 16, 17, 18, and 19, and that\nlibtool is used to link `test' against `libhello'.\n\n   Libtool encodes the numbers 5 and 19 in `test', and the dynamic\nlinker will only link `test' against libraries that support _every_\ninterface between 5 and 19.  So, the dynamic linker refuses to link\n`test' against `libhello'!\n\n   In order to eliminate this problem, libtool only allows libraries to\ndeclare consecutive interface numbers.  So, `libhello' can declare at\nmost that it supports interfaces 16 through 19.  Then, the dynamic\nlinker will link `test' against `libhello'.\n\n   So, libtool library versions are described by three integers:\n\nCURRENT\n     The most recent interface number that this library implements.\n\nREVISION\n     The implementation number of the CURRENT interface.\n\nAGE\n     The difference between the newest and oldest interfaces that this\n     library implements.  In other words, the library implements all the\n     interface numbers in the range from number `CURRENT - AGE' to\n     `CURRENT'.\n\n   If two libraries have identical CURRENT and AGE numbers, then the\ndynamic linker chooses the library with the greater REVISION number.\n\n\u001f\nFile: libtool.info,  Node: Updating version info,  Next: Release numbers,  Prev: Libtool versioning,  Up: Versioning\n\n7.3 Updating library version information\n========================================\n\nIf you want to use libtool's versioning system, then you must specify\nthe version information to libtool using the `-version-info' flag\nduring link mode (*note Link mode::).\n\n   This flag accepts an argument of the form\n`CURRENT[:REVISION[:AGE]]'.  So, passing `-version-info 3:12:1' sets\nCURRENT to 3, REVISION to 12, and AGE to 1.\n\n   If either REVISION or AGE are omitted, they default to 0.  Also note\nthat AGE must be less than or equal to the CURRENT interface number.\n\n   Here are a set of rules to help you update your library version\ninformation:\n\n  1. Start with version information of `0:0:0' for each libtool library.\n\n  2. Update the version information only immediately before a public\n     release of your software.  More frequent updates are unnecessary,\n     and only guarantee that the current interface number gets larger\n     faster.\n\n  3. If the library source code has changed at all since the last\n     update, then increment REVISION (`C:R:A' becomes `C:r+1:A').\n\n  4. If any interfaces have been added, removed, or changed since the\n     last update, increment CURRENT, and set REVISION to 0.\n\n  5. If any interfaces have been added since the last public release,\n     then increment AGE.\n\n  6. If any interfaces have been removed or changed since the last\n     public release, then set AGE to 0.\n\n   *_Never_* try to set the interface numbers so that they correspond\nto the release number of your package.  This is an abuse that only\nfosters misunderstanding of the purpose of library versions.  Instead,\nuse the `-release' flag (*note Release numbers::), but be warned that\nevery release of your package will not be binary compatible with any\nother release.\n\n   The following explanation may help to understand the above rules a\nbit better: consider that there are three possible kinds of reactions\nfrom users of your library to changes in a shared library:\n\n  1. Programs using the previous version may use the new version as\n     drop-in replacement, and programs using the new version can also\n     work with the previous one.  In other words, no recompiling nor\n     relinking is needed.  In this case, bump REVISION only, don't touch\n     CURRENT nor AGE.\n\n  2. Programs using the previous version may use the new version as\n     drop-in replacement, but programs using the new version may use\n     APIs not present in the previous one.  In other words, a program\n     linking against the new version may fail with \"unresolved symbols\"\n     if linking against the old version at runtime: set REVISION to 0,\n     bump CURRENT and AGE.\n\n  3. Programs may need to be changed, recompiled, relinked in order to\n     use the new version.  Bump CURRENT, set REVISION and AGE to 0.\n\nIn the above description, _programs_ using the library in question may\nalso be replaced by other libraries using it.\n\n\u001f\nFile: libtool.info,  Node: Release numbers,  Prev: Updating version info,  Up: Versioning\n\n7.4 Managing release information\n================================\n\nOften, people want to encode the name of the package release into the\nshared library so that it is obvious to the user which package their\nprograms are linked against.  This convention is used especially on\nGNU/Linux:\n\n     trick$ ls /usr/lib/libbfd*\n     /usr/lib/libbfd.a           /usr/lib/libbfd.so.2.7.0.2\n     /usr/lib/libbfd.so\n     trick$\n\n   On `trick', `/usr/lib/libbfd.so' is a symbolic link to\n`libbfd.so.2.7.0.2', which was distributed as a part of\n`binutils-2.7.0.2'.\n\n   Unfortunately, this convention conflicts directly with libtool's\nidea of library interface versions, because the library interface\nrarely changes at the same time that the release number does, and the\nlibrary suffix is never the same across all platforms.\n\n   So, in order to accommodate both views, you can use the `-release'\nflag in order to set release information for libraries for which you do\nnot want to use `-version-info'.  For the `libbfd' example, the next\nrelease that uses libtool should be built with `-release 2.9.0', which\nwill produce the following files on GNU/Linux:\n\n     trick$ ls /usr/lib/libbfd*\n     /usr/lib/libbfd-2.9.0.so     /usr/lib/libbfd.a\n     /usr/lib/libbfd.so\n     trick$\n\n   In this case, `/usr/lib/libbfd.so' is a symbolic link to\n`libbfd-2.9.0.so'.  This makes it obvious that the user is dealing with\n`binutils-2.9.0', without compromising libtool's idea of interface\nversions.\n\n   Note that this option causes a modification of the library name, so\ndo not use it unless you want to break binary compatibility with any\npast library releases.  In general, you should only use `-release' for\npackage-internal libraries or for ones whose interfaces change very\nfrequently.\n\n\u001f\nFile: libtool.info,  Node: Library tips,  Next: Inter-library dependencies,  Prev: Versioning,  Up: Top\n\n8 Tips for interface design\n***************************\n\nWriting a good library interface takes a lot of practice and thorough\nunderstanding of the problem that the library is intended to solve.\n\n   If you design a good interface, it won't have to change often, you\nwon't have to keep updating documentation, and users won't have to keep\nrelearning how to use the library.\n\n   Here is a brief list of tips for library interface design that may\nhelp you in your exploits:\n\nPlan ahead\n     Try to make every interface truly minimal, so that you won't need\n     to delete entry points very often.\n\nAvoid interface changes\n     Some people love redesigning and changing entry points just for\n     the heck of it (note: _renaming_ a function is considered changing\n     an entry point).  Don't be one of those people.  If you must\n     redesign an interface, then try to leave compatibility functions\n     behind so that users don't need to rewrite their existing code.\n\nUse opaque data types\n     The fewer data type definitions a library user has access to, the\n     better.  If possible, design your functions to accept a generic\n     pointer (that you can cast to an internal data type), and provide\n     access functions rather than allowing the library user to directly\n     manipulate the data.  That way, you have the freedom to change the\n     data structures without changing the interface.\n\n     This is essentially the same thing as using abstract data types and\n     inheritance in an object-oriented system.\n\nUse header files\n     If you are careful to document each of your library's global\n     functions and variables in header files, and include them in your\n     library source files, then the compiler will let you know if you\n     make any interface changes by accident (*note C header files::).\n\nUse the `static' keyword (or equivalent) whenever possible\n     The fewer global functions your library has, the more flexibility\n     you'll have in changing them.  Static functions and variables may\n     change forms as often as you like... your users cannot access\n     them, so they aren't interface changes.\n\nBe careful with array dimensions\n     The number of elements in a global array is part of an interface,\n     even if the header just declares `extern int foo[];'.  This is\n     because on i386 and some other SVR4/ELF systems, when an\n     application references data in a shared library the size of that\n     data (whatever its type) is included in the application\n     executable.  If you might want to change the size of an array or\n     string then provide a pointer not the actual array.\n\n* Menu:\n\n* C header files::              How to write portable include files.\n\n\u001f\nFile: libtool.info,  Node: C header files,  Up: Library tips\n\n8.1 Writing C header files\n==========================\n\nWriting portable C header files can be difficult, since they may be read\nby different types of compilers:\n\nC++ compilers\n     C++ compilers require that functions be declared with full\n     prototypes, since C++ is more strongly typed than C.  C functions\n     and variables also need to be declared with the `extern \"C\"'\n     directive, so that the names aren't mangled.  *Note C++\n     libraries::, for other issues relevant to using C++ with libtool.\n\nANSI C compilers\n     ANSI C compilers are not as strict as C++ compilers, but functions\n     should be prototyped to avoid unnecessary warnings when the header\n     file is `#include'd.\n\nnon-ANSI C compilers\n     Non-ANSI compilers will report errors if functions are prototyped.\n\n   These complications mean that your library interface headers must use\nsome C preprocessor magic in order to be usable by each of the above\ncompilers.\n\n   `foo.h' in the `tests/demo' subdirectory of the libtool distribution\nserves as an example for how to write a header file that can be safely\ninstalled in a system directory.\n\n   Here are the relevant portions of that file:\n\n     /* BEGIN_C_DECLS should be used at the beginning of your declarations,\n        so that C++ compilers don't mangle their names.  Use END_C_DECLS at\n        the end of C declarations. */\n     #undef BEGIN_C_DECLS\n     #undef END_C_DECLS\n     #ifdef __cplusplus\n     # define BEGIN_C_DECLS extern \"C\" {\n     # define END_C_DECLS }\n     #else\n     # define BEGIN_C_DECLS /* empty */\n     # define END_C_DECLS /* empty */\n     #endif\n\n     /* PARAMS is a macro used to wrap function prototypes, so that\n        compilers that don't understand ANSI C prototypes still work,\n        and ANSI C compilers can issue warnings about type mismatches. */\n     #undef PARAMS\n     #if defined (__STDC__) || defined (_AIX) \\\n             || (defined (__mips) && defined (_SYSTYPE_SVR4)) \\\n             || defined(WIN32) || defined(__cplusplus)\n     # define PARAMS(protos) protos\n     #else\n     # define PARAMS(protos) ()\n     #endif\n\n   These macros are used in `foo.h' as follows:\n\n     #ifndef FOO_H\n     #define FOO_H 1\n\n     /* The above macro definitions. */\n     #include \"...\"\n\n     BEGIN_C_DECLS\n\n     int foo PARAMS((void));\n     int hello PARAMS((void));\n\n     END_C_DECLS\n\n     #endif /* !FOO_H */\n\n   Note that the `#ifndef FOO_H' prevents the body of `foo.h' from\nbeing read more than once in a given compilation.\n\n   Also the only thing that must go outside the\n`BEGIN_C_DECLS'/`END_C_DECLS' pair are `#include' lines.  Strictly\nspeaking it is only C symbol names that need to be protected, but your\nheader files will be more maintainable if you have a single pair of\nthese macros around the majority of the header contents.\n\n   You should use these definitions of `PARAMS', `BEGIN_C_DECLS', and\n`END_C_DECLS' into your own headers.  Then, you may use them to create\nheader files that are valid for C++, ANSI, and non-ANSI compilers(1).\n\n   Do not be naive about writing portable code.  Following the tips\ngiven above will help you miss the most obvious problems, but there are\ndefinitely other subtle portability issues.  You may need to cope with\nsome of the following issues:\n\n   * Pre-ANSI compilers do not always support the `void *' generic\n     pointer type, and so need to use `char *' in its place.\n\n   * The `const', `inline' and `signed' keywords are not supported by\n     some compilers, especially pre-ANSI compilers.\n\n   * The `long double' type is not supported by many compilers.\n\n   ---------- Footnotes ----------\n\n   (1) We used to recommend `__P', `__BEGIN_DECLS' and `__END_DECLS'.\nThis was bad advice since symbols (even preprocessor macro names) that\nbegin with an underscore are reserved for the use of the compiler.\n\n\u001f\nFile: libtool.info,  Node: Inter-library dependencies,  Next: Dlopened modules,  Prev: Library tips,  Up: Top\n\n9 Inter-library dependencies\n****************************\n\nBy definition, every shared library system provides a way for\nexecutables to depend on libraries, so that symbol resolution is\ndeferred until runtime.\n\n   An \"inter-library dependency\" is one in which a library depends on\nother libraries.  For example, if the libtool library `libhello' uses\nthe `cos' function, then it has an inter-library dependency on `libm',\nthe math library that implements `cos'.\n\n   Some shared library systems provide this feature in an\ninternally-consistent way: these systems allow chains of dependencies of\npotentially infinite length.\n\n   However, most shared library systems are restricted in that they only\nallow a single level of dependencies.  In these systems, programs may\ndepend on shared libraries, but shared libraries may not depend on other\nshared libraries.\n\n   In any event, libtool provides a simple mechanism for you to declare\ninter-library dependencies: for every library `libNAME' that your own\nlibrary depends on, simply add a corresponding `-lNAME' option to the\nlink line when you create your library.  To make an example of our\n`libhello' that depends on `libm':\n\n     burger$ libtool --mode=link gcc -g -O -o libhello.la foo.lo hello.lo \\\n                     -rpath /usr/local/lib -lm\n     burger$\n\n   When you link a program against `libhello', you don't need to\nspecify the same `-l' options again: libtool will do that for you, in\norder to guarantee that all the required libraries are found.  This\nrestriction is only necessary to preserve compatibility with static\nlibrary systems and simple dynamic library systems.\n\n   Some platforms, such as Windows, do not even allow you this\nflexibility.  In order to build a shared library, it must be entirely\nself-contained or it must have dependencies known at link time (that is,\nhave references only to symbols that are found in the `.lo' files or\nthe specified `-l' libraries), and you need to specify the\n`-no-undefined' flag.  By default, libtool builds only static libraries\non these kinds of platforms.\n\n   The simple-minded inter-library dependency tracking code of libtool\nreleases prior to 1.2 was disabled because it was not clear when it was\npossible to link one library with another, and complex failures would\noccur.  A more complex implementation of this concept was re-introduced\nbefore release 1.3, but it has not been ported to all platforms that\nlibtool supports.  The default, conservative behavior is to avoid\nlinking one library with another, introducing their inter-dependencies\nonly when a program is linked with them.\n\n\u001f\nFile: libtool.info,  Node: Dlopened modules,  Next: Using libltdl,  Prev: Inter-library dependencies,  Up: Top\n\n10 Dlopened modules\n*******************\n\nIt can sometimes be confusing to discuss \"dynamic linking\", because the\nterm is used to refer to two different concepts:\n\n  1. Compiling and linking a program against a shared library, which is\n     resolved automatically at run time by the dynamic linker.  In this\n     process, dynamic linking is transparent to the application.\n\n  2. The application calling functions such as `dlopen' that load\n     arbitrary, user-specified modules at runtime.  This type of dynamic\n     linking is explicitly controlled by the application.\n\n   To mitigate confusion, this manual refers to the second type of\ndynamic linking as \"dlopening\" a module.\n\n   The main benefit to dlopening object modules is the ability to access\ncompiled object code to extend your program, rather than using an\ninterpreted language.  In fact, dlopen calls are frequently used in\nlanguage interpreters to provide an efficient way to extend the\nlanguage.\n\n   Libtool provides support for dlopened modules.  However, you should\nindicate that your package is willing to use such support, by using the\n`LT_INIT' option `dlopen' in `configure.ac'.  If this option is not\ngiven, libtool will assume no dlopening mechanism is available, and\nwill try to simulate it.\n\n   This chapter discusses how you as a dlopen application developer\nmight use libtool to generate dlopen-accessible modules.\n\n* Menu:\n\n* Building modules::            Creating dlopenable objects and libraries.\n* Dlpreopening::                Dlopening that works on static platforms.\n* Linking with dlopened modules::  Using dlopenable modules in libraries.\n* Finding the dlname::          Choosing the right file to `dlopen'.\n* Dlopen issues::               Unresolved problems that need your attention.\n\n\u001f\nFile: libtool.info,  Node: Building modules,  Next: Dlpreopening,  Up: Dlopened modules\n\n10.1 Building modules to dlopen\n===============================\n\nOn some operating systems, a program symbol must be specially declared\nin order to be dynamically resolved with the `dlsym' (or equivalent)\nfunction.  Libtool provides the `-export-dynamic' and `-module' link\nflags (*note Link mode::), for you to make that declaration.  You need\nto use these flags if you are linking an application program that\ndlopens other modules or a libtool library that will also be dlopened.\n\n   For example, if we wanted to build a shared library, `hello', that\nwould later be dlopened by an application, we would add `-module' to\nthe other link flags:\n\n     burger$ libtool --mode=link gcc -module -o hello.la foo.lo \\\n                     hello.lo -rpath /usr/local/lib -lm\n     burger$\n\n   If symbols from your _executable_ are needed to satisfy unresolved\nreferences in a library you want to dlopen you will have to use the flag\n`-export-dynamic'.  You should use `-export-dynamic' while linking the\nexecutable that calls dlopen:\n\n     burger$ libtool --mode=link gcc -export-dynamic -o helldl main.o\n     burger$\n\n\u001f\nFile: libtool.info,  Node: Dlpreopening,  Next: Linking with dlopened modules,  Prev: Building modules,  Up: Dlopened modules\n\n10.2 Dlpreopening\n=================\n\nLibtool provides special support for dlopening libtool object and\nlibtool library files, so that their symbols can be resolved _even on\nplatforms without any `dlopen' and `dlsym' functions_.\n\n   Consider the following alternative ways of loading code into your\nprogram, in order of increasing \"laziness\":\n\n  1. Linking against object files that become part of the program\n     executable, whether or not they are referenced.  If an object file\n     cannot be found, then the compile time linker refuses to create\n     the executable.\n\n  2. Declaring a static library to the linker, so that it is searched\n     at link time in order to satisfy any undefined references in the\n     above object files.  If the static library cannot be found, then\n     the compile time linker refuses to create the executable.\n\n  3. Declaring a shared library to the runtime linker, so that it is\n     searched at runtime in order to satisfy any undefined references\n     in the above files.  If the shared library cannot be found, then\n     the dynamic linker aborts the program before it runs.\n\n  4. Dlopening a module, so that the application can resolve its own,\n     dynamically-computed references.  If there is an error opening the\n     module, or the module is not found, then the application can\n     recover without crashing.\n\n   Libtool emulates `-dlopen' on static platforms by linking objects\ninto the program at compile time, and creating data structures that\nrepresent the program's symbol table.  In order to use this feature,\nyou must declare the objects you want your application to dlopen by\nusing the `-dlopen' or `-dlpreopen' flags when you link your program\n(*note Link mode::).\n\n -- Data Type: lt_dlsymlist typedef struct { const char *NAME;\n          void *ADDRESS; } lt_dlsymlist\n     The NAME attribute is a null-terminated character string of the\n     symbol name, such as `\"fprintf\"'.  The ADDRESS attribute is a\n     generic pointer to the appropriate object, such as `&fprintf'.\n\n -- Variable: const lt_dlsymlist  lt_preloaded_symbols[]\n     An array of `lt_dlsymlist' structures, representing all the\n     preloaded symbols linked into the program proper.  For each module\n     `-dlpreopen'ed by the Libtool linked program there is an element\n     with the NAME of the module and an ADDRESS of `0', followed by all\n     symbols exported from this file.  For the executable itself the\n     special name `@PROGRAM@' is used.  The last element of all has a\n     NAME and ADDRESS of `0'.\n\n     To facilitate inclusion of symbol lists into libraries,\n     `lt_preloaded_symbols' is `#define'd to a suitably unique name in\n     `ltdl.h'.\n\n     This variable may not be declared `const' on some systems due to\n     relocation issues.\n\n   Some compilers may allow identifiers that are not valid in ANSI C,\nsuch as dollar signs.  Libtool only recognizes valid ANSI C symbols (an\ninitial ASCII letter or underscore, followed by zero or more ASCII\nletters, digits, and underscores), so non-ANSI symbols will not appear\nin `lt_preloaded_symbols'.\n\n -- Function: int lt_dlpreload (const lt_dlsymlist *PRELOADED)\n     Register the list of preloaded modules PRELOADED.  If PRELOADED is\n     `NULL', then all previously registered symbol lists, except the\n     list set by `lt_dlpreload_default', are deleted.  Return 0 on\n     success.\n\n -- Function: int lt_dlpreload_default (const lt_dlsymlist *PRELOADED)\n     Set the default list of preloaded modules to PRELOADED, which\n     won't be deleted by `lt_dlpreload'.  Note that this function does\n     _not_ require libltdl to be initialized using `lt_dlinit' and can\n     be used in the program to register the default preloaded modules.\n     Instead of calling this function directly, most programs will use\n     the macro `LTDL_SET_PRELOADED_SYMBOLS'.\n\n     Return 0 on success.\n\n -- Macro: LTDL_SET_PRELOADED_SYMBOLS\n     Set the default list of preloaded symbols.  Should be used in your\n     program to initialize libltdl's list of preloaded modules.\n\n          #include <ltdl.h>\n\n          int main() {\n            /* ... */\n            LTDL_SET_PRELOADED_SYMBOLS();\n            /* ... */\n          }\n\n -- Function Type: int lt_dlpreload_callback_func (lt_dlhandle HANDLE)\n     Functions of this type can be passed to `lt_dlpreload_open', which\n     in turn will call back into a function thus passed for each\n     preloaded module that it opens.\n\n -- Function: int lt_dlpreload_open (const char *ORIGINATOR,\n          lt_dlpreload_callback_func *FUNC)\n     Load all of the preloaded modules for ORIGINATOR.  For every\n     module opened in this way, call FUNC.\n\n     To open all of the modules preloaded into `libhell.la' (presumably\n     from within the `libhell.a' initialisation code):\n\n          #define preloaded_symbols lt_libhell_LTX_preloaded_symbols\n\n          static int hell_preload_callback (lt_dlhandle handle);\n\n          int\n          hell_init (void)\n          {\n            ...\n            if (lt_dlpreload (&preloaded_symbols) == 0)\n              {\n                lt_dlpreload_open (\"libhell\", preload_callback);\n              }\n            ...\n          }\n\n     Note that to prevent clashes between multiple preloaded modules,\n     the preloaded symbols are accessed via a mangled symbol name: to\n     get the symbols preloaded into `libhell', you must prefix\n     `preloaded_symbols' with `lt_'; the originator name, `libhell' in\n     this case; and `_LTX_'.  That is,\n     `lt_libhell_LTX_preloaded_symbols' here.\n\n\u001f\nFile: libtool.info,  Node: Linking with dlopened modules,  Next: Finding the dlname,  Prev: Dlpreopening,  Up: Dlopened modules\n\n10.3 Linking with dlopened modules\n==================================\n\nWhen, say, an interpreter application uses dlopened modules to extend\nthe list of methods it provides, an obvious abstraction for the\nmaintainers of the interpreter is to have all methods (including the\nbuilt in ones supplied with the interpreter) accessed through dlopen.\nFor one thing, the dlopening functionality will be tested even during\nroutine invocations.  For another, only one subsystem has to be written\nfor getting methods into the interpreter.\n\n   The downside of this abstraction is, of course, that environments\nthat provide only static linkage can't even load the intrinsic\ninterpreter methods.  Not so!  We can statically link those methods by\n*dlpreopening* them.\n\n   Unfortunately, since platforms such as AIX and cygwin require that\nall library symbols must be resolved at compile time, the interpreter\nmaintainers will need to provide a library to both its own dlpreopened\nmodules, and third-party modules loaded by dlopen.  In itself, that is\nnot so bad, except that the interpreter too must provide those same\nsymbols otherwise it will be impossible to resolve all the symbols\nrequired by the modules as they are loaded.  Things are even worse if\nthe code that loads the modules for the interpreter is itself in a\nlibrary - and that is usually the case for any non-trivial application.\nModern platforms take care of this by automatically loading all of a\nmodule's dependency libraries as the module is loaded (libltdl can do\nthis even on platforms that can't do it by themselves).  In the end,\nthis leads to problems with duplicated symbols and prevents modules\nfrom loading, and prevents the application from compiling when modules\nare preloaded.\n\n     ,-------------.    ,------------------.    ,-----------------.\n     | Interpreter |---->     Module------------>   Third-party   |\n     `-------------'    |     Loader       |    |Dlopened Modules |\n                        |        |         |    `-----------------'\n                        |,-------v--------.|             |\n                        ||  Dlpreopened   ||             |\n                        ||    Modules     ||             |\n                        |`----------------'|             |\n                        |        |         |             |\n                        |,-------v--------.|    ,--------v--------.\n                        ||Module Interface||    |Module Interface |\n                        ||    Library     ||    |     Library     |\n                        |`----------------'|    `-----------------'\n                        `------------------'\n\n   Libtool has the concept of \"weak library interfaces\" to circumvent\nthis problem.  Recall that the code that dlopens method-provider\nmodules for the interpreter application resides in a library: All of\nthe modules and the dlopener library itself should be linked against\nthe common library that resolves the module symbols at compile time.\nTo guard against duplicate symbol definitions, and for dlpreopened\nmodules to work at all in this scenario, the dlopener library must\ndeclare that it provides a weak library interface to the common symbols\nin the library it shares with the modules.  That way, when `libtool'\nlinks the *Module Loader* library with some *Dlpreopened Modules* that\nwere in turn linked against the *Module Interface Library*, it knows\nthat the *Module Loader* provides an already loaded *Module Interface\nLibrary* to resolve symbols for the *Dlpreopened Modules*, and doesn't\nask the compiler driver to link an identical *Module Interface Library*\ndependency library too.\n\n   In conjunction with Automake, the `Makefile.am' for the *Module\nLoader* might look like this:\n\n     lib_LTLIBRARIES = libinterface.la libloader.la\n\n     libinterface_la_SOURCES = interface.c interface.h\n     libinterface_la_LDFLAGS = -version-info 3:2:1\n\n     libloader_la_SOURCES    = loader.c\n     libloader_la_LDFLAGS    = -weak libinterface.la \\\n                               -version-info 3:2:1 \\\n                               -dlpreopen ../modules/intrinsics.la\n     libloader_la_LIBADD     = $(libinterface_la_OBJECTS)\n\n   And the `Makefile.am' for the `intrinsics.la' module in a sibling\n`modules' directory might look like this:\n\n     AM_CPPFLAGS             = -I$(srcdir)/../libloader\n     AM_LDFLAGS              = -no-undefined -module -avoid-version \\\n                               -export-dynamic\n\n     noinst_LTLIBRARIES      = intrinsics.la\n\n     intrinsics_la_LIBADD    = ../libloader/libinterface.la\n\n     ../libloader/libinterface.la:\n             cd ../libloader && $(MAKE) $(AM_MAKEFLAGS) libinterface.la\n\n   For a more complex example, see the sources of `libltdl' in the\nLibtool distribution, which is built with the help of the `-weak'\noption.\n\n\u001f\nFile: libtool.info,  Node: Finding the dlname,  Next: Dlopen issues,  Prev: Linking with dlopened modules,  Up: Dlopened modules\n\n10.4 Finding the correct name to dlopen\n=======================================\n\nAfter a library has been linked with `-module', it can be dlopened.\nUnfortunately, because of the variation in library names, your package\nneeds to determine the correct file to dlopen.\n\n   The most straightforward and flexible implementation is to determine\nthe name at runtime, by finding the installed `.la' file, and searching\nit for the following lines:\n\n     # The name that we can `dlopen'.\n     dlname='DLNAME'\n\n   If DLNAME is empty, then the library cannot be dlopened.  Otherwise,\nit gives the dlname of the library.  So, if the library was installed\nas `/usr/local/lib/libhello.la', and the DLNAME was `libhello.so.3',\nthen `/usr/local/lib/libhello.so.3' should be dlopened.\n\n   If your program uses this approach, then it should search the\ndirectories listed in the `LD_LIBRARY_PATH'(1) environment variable, as\nwell as the directory where libraries will eventually be installed.\nSearching this variable (or equivalent) will guarantee that your\nprogram can find its dlopened modules, even before installation,\nprovided you have linked them using libtool.\n\n   ---------- Footnotes ----------\n\n   (1) `LIBPATH' on AIX, and `SHLIB_PATH' on HP-UX.\n\n\u001f\nFile: libtool.info,  Node: Dlopen issues,  Prev: Finding the dlname,  Up: Dlopened modules\n\n10.5 Unresolved dlopen issues\n=============================\n\nThe following problems are not solved by using libtool's dlopen support:\n\n   * Dlopen functions are generally only available on shared library\n     platforms.  If you want your package to be portable to static\n     platforms, you have to use either libltdl (*note Using libltdl::)\n     or develop your own alternatives to dlopening dynamic code.  Most\n     reasonable solutions involve writing wrapper functions for the\n     `dlopen' family, which do package-specific tricks when dlopening\n     is unsupported or not available on a given platform.\n\n   * There are major differences in implementations of the `dlopen'\n     family of functions.  Some platforms do not even use the same\n     function names (notably HP-UX, with its `shl_load' family).\n\n   * The application developer must write a custom search function in\n     order to discover the correct module filename to supply to\n     `dlopen'.\n\n\u001f\nFile: libtool.info,  Node: Using libltdl,  Next: Trace interface,  Prev: Dlopened modules,  Up: Top\n\n11 Using libltdl\n****************\n\nLibtool provides a small library, called `libltdl', that aims at hiding\nthe various difficulties of dlopening libraries from programmers.  It\nconsists of a few headers and small C source files that can be\ndistributed with applications that need dlopening functionality.  On\nsome platforms, whose dynamic linkers are too limited for a simple\nimplementation of `libltdl' services, it requires GNU DLD, or it will\nonly emulate dynamic linking with libtool's dlpreopening mechanism.\n\nlibltdl supports currently the following dynamic linking mechanisms:\n\n   * `dlopen' (POSIX compliant systems, GNU/Linux, etc.)\n\n   * `shl_load' (HP-UX)\n\n   * `LoadLibrary' (Win16 and Win32)\n\n   * `load_add_on' (BeOS)\n\n   * `NSAddImage' or `NSLinkModule' (Darwin and Mac OS X)\n\n   * GNU DLD (emulates dynamic linking for static libraries)\n\n   * libtool's dlpreopen (see *note Dlpreopening::)\n\nlibltdl is licensed under the terms of the GNU Lesser General Public\nLicense, with the following exception:\n\n     As a special exception to the GNU Lesser General Public License,\n     if you distribute this file as part of a program or library that\n     is built using GNU Libtool, you may include it under the same\n     distribution terms that you use for the rest of that program.\n\n* Menu:\n\n* Libltdl interface::           How to use libltdl in your programs.\n* Modules for libltdl::         Creating modules that can be `dlopen'ed.\n* Thread Safety in libltdl::    Registering callbacks for multi-thread safety.\n* User defined module data::    Associating data with loaded modules.\n* Module loaders for libltdl::  Creating user defined module loaders.\n* Distributing libltdl::        How to distribute libltdl with your package.\n\n\u001f\nFile: libtool.info,  Node: Libltdl interface,  Next: Modules for libltdl,  Up: Using libltdl\n\n11.1 How to use libltdl in your programs\n========================================\n\nThe libltdl API is similar to the POSIX dlopen interface, which is very\nsimple but powerful.\n\nTo use libltdl in your program you have to include the header file\n`ltdl.h':\n\n     #include <ltdl.h>\n\nThe early releases of libltdl used some symbols that violated the POSIX\nnamespace conventions.  These symbols are now deprecated, and have been\nreplaced by those described here.  If you have code that relies on the\nold deprecated symbol names, defining `LT_NON_POSIX_NAMESPACE' before\nyou include `ltdl.h' provides conversion macros.  Whichever set of\nsymbols you use, the new API is not binary compatible with the last, so\nyou will need to recompile your application in order to use this\nversion of libltdl.\n\nNote that libltdl is not well tested in a multithreaded environment,\nthough the intention is that it should work (*note Using libltdl in a\nmulti threaded environment: Thread Safety in libltdl.).  It was\nreported that GNU/Linux's glibc 2.0's `dlopen' with `RTLD_LAZY' (which\nlibltdl uses by default) is not thread-safe, but this problem is\nsupposed to be fixed in glibc 2.1.  On the other hand, `RTLD_NOW' was\nreported to introduce problems in multi-threaded applications on\nFreeBSD.  Working around these problems is left as an exercise for the\nreader; contributions are certainly welcome.\n\nThe following macros are defined by including `ltdl.h':\n\n -- Macro: LT_PATHSEP_CHAR\n     `LT_PATHSEP_CHAR' is the system-dependent path separator, that is,\n     `;' on Windows and `:' everywhere else.\n\n -- Macro: LT_DIRSEP_CHAR\n     If `LT_DIRSEP_CHAR' is defined, it can be used as directory\n     separator in addition to `/'.  On Windows, this contains `\\'.\n\nThe following types are defined in `ltdl.h':\n\n -- Type: lt_dlhandle\n     `lt_dlhandle' is a module \"handle\".  Every lt_dlopened module has\n     a handle associated with it.\n\n -- Type: lt_dladvise\n     `lt_dladvise' is used to control optional module loading modes.\n     If it is not used, the default mode of the underlying system module\n     loader is used.\n\n -- Type: lt_dlsymlist\n     `lt_dlsymlist' is a symbol list for dlpreopened modules.  This\n     structure is described in *note Dlpreopening::.\n\nlibltdl provides the following functions:\n\n -- Function: int lt_dlinit (void)\n     Initialize libltdl.  This function must be called before using\n     libltdl and may be called several times.  Return 0 on success,\n     otherwise the number of errors.\n\n -- Function: int lt_dlexit (void)\n     Shut down libltdl and close all modules.  This function will only\n     then shut down libltdl when it was called as many times as\n     `lt_dlinit' has been successfully called.  Return 0 on success,\n     otherwise the number of errors.\n\n -- Function: lt_dlhandle lt_dlopen (const char *FILENAME)\n     Open the module with the file name FILENAME and return a handle\n     for it.  `lt_dlopen' is able to open libtool dynamic modules,\n     preloaded static modules, the program itself and native dynamic\n     modules(1).\n\n     Unresolved symbols in the module are resolved using its dependency\n     libraries and previously dlopened modules.  If the executable using\n     this module was linked with the `-export-dynamic' flag, then the\n     global symbols in the executable will also be used to resolve\n     references in the module.\n\n     If FILENAME is `NULL' and the program was linked with\n     `-export-dynamic' or `-dlopen self', `lt_dlopen' will return a\n     handle for the program itself, which can be used to access its\n     symbols.\n\n     If libltdl cannot find the library and the file name FILENAME does\n     not have a directory component it will additionally look in the\n     following search paths for the module (in the following order):\n\n       1. user-defined search path: This search path can be changed by\n          the program using the functions `lt_dlsetsearchpath',\n          `lt_dladdsearchdir' and `lt_dlinsertsearchdir'.\n\n       2. libltdl's search path: This search path is the value of the\n          environment variable `LTDL_LIBRARY_PATH'.\n\n       3. system library search path: The system dependent library\n          search path (e.g. on GNU/Linux it is `LD_LIBRARY_PATH').\n\n     Each search path must be a list of absolute directories separated\n     by `LT_PATHSEP_CHAR', for example, `\"/usr/lib/mypkg:/lib/foo\"'.\n     The directory names may not contain the path separator.\n\n     If the same module is loaded several times, the same handle is\n     returned.  If `lt_dlopen' fails for any reason, it returns `NULL'.\n\n -- Function: lt_dlhandle lt_dlopenext (const char *FILENAME)\n     The same as `lt_dlopen', except that it tries to append different\n     file name extensions to the file name.  If the file with the file\n     name FILENAME cannot be found libltdl tries to append the\n     following extensions:\n\n       1. the libtool archive extension `.la'\n\n       2. the extension used for native dynamically loadable modules on\n          the host platform, e.g., `.so', `.sl', etc.\n\n     This lookup strategy was designed to allow programs that don't\n     have knowledge about native dynamic libraries naming conventions\n     to be able to `dlopen' such libraries as well as libtool modules\n     transparently.\n\n -- Function: lt_dlhandle lt_dlopenadvise (const char *FILENAME,\n          lt_dladvise ADVISE)\n     The same as `lt_dlopen', except that it also requires an additional\n     argument which may contain additional hints to the underlying\n     system module loader.  The ADVISE parameter is opaque and can only\n     be accessed with the functions documented below.\n\n     Note that this function does not change the content of ADVISE, so\n     unlike the other calls in this API takes a direct `lt_dladvise'\n     type, and not a pointer to the same.\n\n -- Function: int lt_dladvise_init (lt_dladvise *ADVISE)\n     The ADVISE parameter can be used to pass hints to the module\n     loader when using `lt_dlopenadvise' to perform the loading.  The\n     ADVISE parameter needs to be initialised by this function before\n     it can be used.  Any memory used by ADVISE needs to be recycled\n     with `lt_dladvise_destroy' when it is no longer needed.\n\n     On failure, `lt_dladvise_init' returns non-zero and sets an error\n     message that can be retrieved with `lt_dlerror'.\n\n -- Function: int lt_dladvise_destroy (lt_dladvise *ADVISE)\n     Recycle the memory used by ADVISE.  For an example, see the\n     documentation for `lt_dladvise_ext'.\n\n     On failure, `lt_dladvise_destroy' returns non-zero and sets an\n     error message that can be retrieved with `lt_dlerror'.\n\n -- Function: int lt_dladvise_ext (lt_dladvise *ADVISE)\n     Set the `ext' hint on ADVISE.  Passing an ADVISE parameter to\n     `lt_dlopenadvise' with this hint set causes it to try to append\n     different file name extensions like `lt_dlopenext'.\n\n     The following example is equivalent to calling `lt_dlopenext\n     (filename)':\n\n          lt_dlhandle\n          my_dlopenext (const char *filename)\n          {\n            lt_dlhandle handle = 0;\n            lt_dladvise advise;\n\n            if (!lt_dladvise_init (&advise) && !lt_dladvise_ext (&advise))\n              handle = lt_dlopenadvise (filename, advise);\n\n            lt_dladvise_destroy (&advise);\n\n            return handle;\n          }\n\n     On failure, `lt_dladvise_ext' returns non-zero and sets an error\n     message that can be retrieved with `lt_dlerror'.\n\n -- Function: int lt_dladvise_global (lt_dladvise *ADVISE)\n     Set the `symglobal' hint on ADVISE.  Passing an ADVISE parameter\n     to `lt_dlopenadvise' with this hint set causes it to try to make\n     the loaded module's symbols globally available for resolving\n     unresolved symbols in subsequently loaded modules.\n\n     If neither the `symglobal' nor the `symlocal' hints are set, or if\n     a module is loaded without using the `lt_dlopenadvise' call in any\n     case, then the visibility of the module's symbols will be as per\n     the default for the underlying module loader and OS.  Even if a\n     suitable hint is passed, not all loaders are able to act upon it in\n     which case `lt_dlgetinfo' will reveal whether the hint was actually\n     followed.\n\n     On failure, `lt_dladvise_global' returns non-zero and sets an error\n     message that can be retrieved with `lt_dlerror'.\n\n -- Function: int lt_dladvise_local (lt_dladvise *ADVISE)\n     Set the `symlocal' hint on ADVISE.  Passing an ADVISE parameter to\n     `lt_dlopenadvise' with this hint set causes it to try to keep the\n     loaded module's symbols hidden so that they are not visible to\n     subsequently loaded modules.\n\n     If neither the `symglobal' nor the `symlocal' hints are set, or if\n     a module is loaded without using the `lt_dlopenadvise' call in any\n     case, then the visibility of the module's symbols will be as per\n     the default for the underlying module loader and OS.  Even if a\n     suitable hint is passed, not all loaders are able to act upon it in\n     which case `lt_dlgetinfo' will reveal whether the hint was actually\n     followed.\n\n     On failure, `lt_dladvise_local' returns non-zero and sets an error\n     message that can be retrieved with `lt_dlerror'.\n\n -- Function: int lt_dladvise_resident (lt_dladvise *ADVISE)\n     Set the `resident' hint on ADVISE.  Passing an ADVISE parameter to\n     `lt_dlopenadvise' with this hint set causes it to try to make the\n     loaded module resident in memory, so that it cannot be unloaded\n     with a later call to `lt_dlclose'.\n\n     On failure, `lt_dladvise_resident' returns non-zero and sets an\n     error message that can be retrieved with `lt_dlerror'.\n\n -- Function: int lt_dladvise_preload (lt_dladvise *ADVISE)\n     Set the `preload' hint on ADVISE.  Passing an ADVISE parameter to\n     `lt_dlopenadvise' with this hint set causes it to load only\n     preloaded modules, so that if a suitable preloaded module is not\n     found, `lt_dlopenadvise' will return `NULL'.\n\n -- Function: int lt_dlclose (lt_dlhandle HANDLE)\n     Decrement the reference count on the module HANDLE.  If it drops\n     to zero and no other module depends on this module, then the\n     module is unloaded.  Return 0 on success.\n\n -- Function: void * lt_dlsym (lt_dlhandle HANDLE, const char *NAME)\n     Return the address in the module HANDLE, where the symbol given by\n     the null-terminated string NAME is loaded.  If the symbol cannot\n     be found, `NULL' is returned.\n\n -- Function: const char * lt_dlerror (void)\n     Return a human readable string describing the most recent error\n     that occurred from any of libltdl's functions.  Return `NULL' if\n     no errors have occurred since initialization or since it was last\n     called.\n\n -- Function: int lt_dladdsearchdir (const char *SEARCH_DIR)\n     Append the search directory SEARCH_DIR to the current user-defined\n     library search path.  Return 0 on success.\n\n -- Function: int lt_dlinsertsearchdir (const char *BEFORE,\n          const char *SEARCH_DIR)\n     Insert the search directory SEARCH_DIR into the user-defined\n     library search path, immediately before the element starting at\n     address BEFORE.  If BEFORE is `NULL', then SEARCH_DIR is appending\n     as if `lt_dladdsearchdir' had been called.  Return 0 on success.\n\n -- Function: int lt_dlsetsearchpath (const char *SEARCH_PATH)\n     Replace the current user-defined library search path with\n     SEARCH_PATH, which must be a list of absolute directories separated\n     by `LT_PATHSEP_CHAR'.  Return 0 on success.\n\n -- Function: const char * lt_dlgetsearchpath (void)\n     Return the current user-defined library search path.\n\n -- Function: int lt_dlforeachfile (const char *SEARCH_PATH,\n          int (*FUNC) (const char *FILENAME, void * DATA), void * DATA)\n     In some applications you may not want to load individual modules\n     with known names, but rather find all of the modules in a set of\n     directories and load them all during initialisation.  With this\n     function you can have libltdl scan the `LT_PATHSEP_CHAR'-delimited\n     directory list in SEARCH_PATH for candidates, and pass them, along\n     with DATA to your own callback function, FUNC.  If SEARCH_PATH is\n     `NULL', then search all of the standard locations that `lt_dlopen'\n     would examine.  This function will continue to make calls to FUNC\n     for each file that it discovers in SEARCH_PATH until one of these\n     calls returns non-zero, or until the files are exhausted.\n     `lt_dlforeachfile' returns the value returned by the last call\n     made to FUNC.\n\n     For example you could define FUNC to build an ordered \"argv\"-like\n     vector of files using DATA to hold the address of the start of the\n     vector.\n\n -- Function: int lt_dlmakeresident (lt_dlhandle HANDLE)\n     Mark a module so that it cannot be `lt_dlclose'd.  This can be\n     useful if a module implements some core functionality in your\n     project that would cause your code to crash if removed.  Return 0\n     on success.\n\n     If you use `lt_dlopen (NULL)' to get a HANDLE for the running\n     binary, that handle will always be marked as resident, and\n     consequently cannot be successfully `lt_dlclose'd.\n\n -- Function: int lt_dlisresident (lt_dlhandle HANDLE)\n     Check whether a particular module has been marked as resident,\n     returning 1 if it has or 0 otherwise.  If there is an error while\n     executing this function, return -1 and set an error message for\n     retrieval with `lt_dlerror'.\n\n   ---------- Footnotes ----------\n\n   (1) Some platforms, notably Mac OS X, differentiate between a\nruntime library that cannot be opened by `lt_dlopen' and a dynamic\nmodule that can.  For maximum portability you should try to ensure that\nyou only pass `lt_dlopen' objects that have been compiled with libtool's\n`-module' flag.\n\n\u001f\nFile: libtool.info,  Node: Modules for libltdl,  Next: Thread Safety in libltdl,  Prev: Libltdl interface,  Up: Using libltdl\n\n11.2 Creating modules that can be `dlopen'ed\n============================================\n\nLibtool modules are created like normal libtool libraries with a few\nexceptions:\n\n   You have to link the module with libtool's `-module' switch, and you\nshould link any program that is intended to dlopen the module with\n`-dlopen MODULENAME.LA' where possible, so that libtool can dlpreopen\nthe module on platforms that do not support dlopening.  If the module\ndepends on any other libraries, make sure you specify them either when\nyou link the module or when you link programs that dlopen it.  If you\nwant to disable versioning (*note Versioning::) for a specific module\nyou should link it with the `-avoid-version' switch.  Note that libtool\nmodules don't need to have a \"lib\" prefix.  However, Automake 1.4 or\nhigher is required to build such modules.\n\n   Usually a set of modules provide the same interface, i.e. exports\nthe same symbols, so that a program can dlopen them without having to\nknow more about their internals: In order to avoid symbol conflicts all\nexported symbols must be prefixed with \"modulename_LTX_\" (MODULENAME is\nthe name of the module).  Internal symbols must be named in such a way\nthat they won't conflict with other modules, for example, by prefixing\nthem with \"_modulename_\".  Although some platforms support having the\nsame symbols defined more than once it is generally not portable and it\nmakes it impossible to dlpreopen such modules.\n\n   libltdl will automatically cut the prefix off to get the real name of\nthe symbol.  Additionally, it supports modules that do not use a prefix\nso that you can also dlopen non-libtool modules.\n\n   `foo1.c' gives an example of a portable libtool module.  Exported\nsymbols are prefixed with \"foo1_LTX_\", internal symbols with \"_foo1_\".\nAliases are defined at the beginning so that the code is more readable.\n\n     /* aliases for the exported symbols */\n     #define foo  foo1_LTX_foo\n     #define bar  foo1_LTX_bar\n\n     /* a global variable definition */\n     int bar = 1;\n\n     /* a private function */\n     int _foo1_helper() {\n       return bar;\n     }\n\n     /* an exported function */\n     int foo() {\n       return _foo1_helper();\n     }\n\nThe `Makefile.am' contains the necessary rules to build the module\n`foo1.la':\n\n     ...\n     lib_LTLIBRARIES = foo1.la\n\n     foo1_la_SOURCES = foo1.c\n     foo1_la_LDFLAGS = -module\n     ...\n\n\u001f\nFile: libtool.info,  Node: Thread Safety in libltdl,  Next: User defined module data,  Prev: Modules for libltdl,  Up: Using libltdl\n\n11.3 Using libltdl in a multi threaded environment\n==================================================\n\nLibltdl provides a wrapper around whatever dynamic run-time object\nloading mechanisms are provided by the host system, many of which are\nthemselves not thread safe.  Consequently libltdl cannot itself be\nconsistently thread safe.\n\n   If you wish to use libltdl in a multithreaded environment, then you\nmust mutex lock around libltdl calls, since they may in turn be calling\nnon-thread-safe system calls on some target hosts.\n\n   Some old releases of libtool provided a mutex locking API that was\nunusable with POSIX threads, so callers were forced to lock around all\nlibltdl API calls anyway.  That mutex locking API was next to useless,\nand is not present in current releases.\n\n   Some future release of libtool may provide a new POSIX thread\ncompliant mutex locking API.\n\n\u001f\nFile: libtool.info,  Node: User defined module data,  Next: Module loaders for libltdl,  Prev: Thread Safety in libltdl,  Up: Using libltdl\n\n11.4 Data associated with loaded modules\n========================================\n\nSome of the internal information about each loaded module that is\nmaintained by libltdl is available to the user, in the form of this\nstructure:\n\n -- Type: struct lt_dlinfo { char *FILENAME; char *NAME; int REF_COUNT;\n          int IS_RESIDENT; int IS_SYMGLOBAL; int IS_SYMLOCAL;}\n     `lt_dlinfo' is used to store information about a module.  The\n     FILENAME attribute is a null-terminated character string of the\n     real module file name.  If the module is a libtool module then\n     NAME is its module name (e.g. `\"libfoo\"' for `\"dir/libfoo.la\"'),\n     otherwise it is set to `NULL'.  The REF_COUNT attribute is a\n     reference counter that describes how often the same module is\n     currently loaded. The remaining fields can be compared to any\n     hints that were passed to `lt_dlopenadvise' to determine whether\n     the underlying loader was able to follow them.\n\n   The following function will return a pointer to libltdl's internal\ncopy of this structure for the given HANDLE:\n\n -- Function: const lt_dlinfo * lt_dlgetinfo (lt_dlhandle HANDLE)\n     Return a pointer to a struct that contains some information about\n     the module HANDLE.  The contents of the struct must not be\n     modified.  Return `NULL' on failure.\n\n   Furthermore, in order to save you from having to keep a list of the\nhandles of all the modules you have loaded, these functions allow you to\niterate over libltdl's list of loaded modules:\n\n -- Type: lt_dlinterface_id\n     The opaque type used to hold the module interface details for each\n     registered libltdl client.\n\n -- Type: int lt_dlhandle_interface (lt_dlhandle HANDLE,\n          const char *ID_STRING)\n     Functions of this type are called to check that a handle conforms\n     to a library's expected module interface when iterating over the\n     global handle list.  You should be careful to write a callback\n     function of this type that can correctly identify modules that\n     belong to this client, both to prevent other clients from\n     accidentally finding your loaded modules with the iterator\n     functions below, and vice versa.  The best way to do this is to\n     check that module HANDLE conforms to the interface specification\n     of your loader using `lt_dlsym'.\n\n     The callback may be given *every* module loaded by all the libltdl\n     module clients in the current address space, including any modules\n     loaded by other libraries such as libltdl itself, and should\n     return non-zero if that module does not fulfill the interface\n     requirements of your loader.\n\n          int\n          my_interface_cb (lt_dlhandle handle, const char *id_string)\n          {\n            char *(*module_id) (void) = NULL;\n\n            /* A valid my_module must provide all of these symbols.  */\n            if (!((module_id = (char*(*)(void)) lt_dlsym (\"module_version\"))\n                  && lt_dlsym (\"my_module_entrypoint\")))\n                return 1;\n\n            if (strcmp (id_string, module_id()) != 0)\n                return 1;\n\n            return 0;\n          }\n\n -- Function: lt_dlinterface_id lt_dlinterface_register\n          (const char *ID_STRING, lt_dlhandle_interface *IFACE)\n     Use this function to register your interface validator with\n     libltdl, and in return obtain a unique key to store and retrieve\n     per-module data.  You supply an ID_STRING and IFACE so that the\n     resulting `lt_dlinterface_id' can be used to filter the module\n     handles returned by the iteration functions below.  If IFACE is\n     `NULL', all modules will be matched.\n\n -- Function: void lt_dlinterface_free (lt_dlinterface_id IFACE)\n     Release the data associated with IFACE.\n\n -- Function: int lt_dlhandle_map (lt_dlinterface_id IFACE,\n          int (*FUNC) (lt_dlhandle HANDLE, void * DATA), void * DATA)\n     For each module that matches IFACE, call the function FUNC.  When\n     writing the FUNC callback function, the argument HANDLE is the\n     handle of a loaded module, and DATA is the last argument passed to\n     `lt_dlhandle_map'. As soon as FUNC returns a non-zero value for\n     one of the handles, `lt_dlhandle_map' will stop calling FUNC and\n     immediately return that non-zero value.  Otherwise 0 is eventually\n     returned when FUNC has been successfully called for all matching\n     modules.\n\n -- Function: lt_dlhandle lt_dlhandle_iterate\n          (lt_dlinterface_id  IFACE, lt_dlhandle PLACE)\n     Iterate over the module handles loaded by IFACE, returning the\n     first matching handle in the list if PLACE is `NULL', and the next\n     one on subsequent calls.  If PLACE is the last element in the list\n     of eligible modules, this function returns `NULL'.\n\n          lt_dlhandle handle = 0;\n          lt_dlinterface_id iface = my_interface_id;\n\n          while ((handle = lt_dlhandle_iterate (iface, handle)))\n            {\n              ...\n            }\n\n -- Function: lt_dlhandle lt_dlhandle_fetch (lt_dlinterface_id IFACE,\n          const char *MODULE_NAME)\n     Search through the module handles loaded by IFACE for a module\n     named MODULE_NAME, returning its handle if found or else `NULL' if\n     no such named module has been loaded by IFACE.\n\n   However, you might still need to maintain your own list of loaded\nmodule handles (in parallel with the list maintained inside libltdl) if\nthere were any other data that your application wanted to associate\nwith each open module.  Instead, you can use the following API calls to\ndo that for you.  You must first obtain a unique interface id from\nlibltdl as described above, and subsequently always use it to retrieve\nthe data you stored earlier.  This allows different libraries to each\nstore their own data against loaded modules, without interfering with\none another.\n\n -- Function: void * lt_dlcaller_set_data (lt_dlinterface_id KEY,\n          lt_dlhandle HANDLE, void * DATA)\n     Set DATA as the set of data uniquely associated with KEY and\n     HANDLE for later retrieval.  This function returns the DATA\n     previously associated with KEY and HANDLE if any.  A result of 0,\n     may indicate that a diagnostic for the last error (if any) is\n     available from `lt_dlerror()'.\n\n     For example, to correctly remove some associated data:\n\n          void *stale = lt_dlcaller_set_data (key, handle, 0);\n          if (stale != NULL)\n            {\n              free (stale);\n            }\n          else\n            {\n              char *error_msg = lt_dlerror ();\n\n              if (error_msg != NULL)\n                {\n                  my_error_handler (error_msg);\n                  return STATUS_FAILED;\n                }\n            }\n\n -- Function: void * lt_dlcaller_get_data (lt_dlinterface_id KEY,\n          lt_dlhandle HANDLE)\n     Return the address of the data associated with KEY and HANDLE, or\n     else `NULL' if there is none.\n\n   Old versions of libltdl also provided a simpler, but similar, API\nbased around `lt_dlcaller_id'.  Unfortunately, it had no provision for\ndetecting whether a module belonged to a particular interface as\nlibltdl didn't support multiple loaders in the same address space at\nthat time.  Those APIs are no longer supported as there would be no way\nto stop clients of the old APIs from seeing (and accidentally altering)\nmodules loaded by other libraries.\n\n\u001f\nFile: libtool.info,  Node: Module loaders for libltdl,  Next: Distributing libltdl,  Prev: User defined module data,  Up: Using libltdl\n\n11.5 How to create and register new module loaders\n==================================================\n\nSometimes libltdl's many ways of gaining access to modules are not\nsufficient for the purposes of a project.  You can write your own\nloader, and register it with libltdl so that `lt_dlopen' will be able\nto use it.\n\n   Writing a loader involves writing at least three functions that can\nbe called by `lt_dlopen', `lt_dlsym' and `lt_dlclose'.  Optionally, you\ncan provide a finalisation function to perform any cleanup operations\nwhen `lt_dlexit' executes, and a symbol prefix string that will be\nprepended to any symbols passed to `lt_dlsym'.  These functions must\nmatch the function pointer types below, after which they can be\nallocated to an instance of `lt_user_dlloader' and registered.\n\n   Registering the loader requires that you choose a name for it, so\nthat it can be recognised by `lt_dlloader_find' and removed with\n`lt_dlloader_remove'.  The name you choose must be unique, and not\nalready in use by libltdl's builtin loaders:\n\n\"dlopen\"\n     The system dynamic library loader, if one exists.\n\n\"dld\"\n     The GNU dld loader, if `libdld' was installed when libltdl was\n     built.\n\n\"dlpreload\"\n     The loader for `lt_dlopen'ing of preloaded static modules.\n\n   The prefix \"dl\" is reserved for loaders supplied with future\nversions of libltdl, so you should not use that for your own loader\nnames.\n\nThe following types are defined in `ltdl.h':\n\n -- Type: lt_module\n     `lt_module' is a dlloader dependent module.  The dynamic module\n     loader extensions communicate using these low level types.\n\n -- Type: lt_dlloader\n     `lt_dlloader' is a handle for module loader types.\n\n -- Type: lt_user_data\n     `lt_user_data' is used for specifying loader instance data.\n\n -- Type: struct lt_user_dlloader {const char *SYM_PREFIX;\n          lt_module_open *MODULE_OPEN; lt_module_close *MODULE_CLOSE;\n          lt_find_sym *FIND_SYM; lt_dlloader_exit *DLLOADER_EXIT; }\n     If you want to define a new way to open dynamic modules, and have\n     the `lt_dlopen' API use it, you need to instantiate one of these\n     structures and pass it to `lt_dlloader_add'.  You can pass whatever\n     you like in the DLLOADER_DATA field, and it will be passed back as\n     the value of the first parameter to each of the functions\n     specified in the function pointer fields.\n\n -- Type: lt_module lt_module_open (const char *FILENAME)\n     The type of the loader function for an `lt_dlloader' module\n     loader.  The value set in the dlloader_data field of the `struct\n     lt_user_dlloader' structure will be passed into this function in\n     the LOADER_DATA parameter.  Implementation of such a function\n     should attempt to load the named module, and return an `lt_module'\n     suitable for passing in to the associated `lt_module_close' and\n     `lt_sym_find' function pointers.  If the function fails it should\n     return `NULL', and set the error message with `lt_dlseterror'.\n\n -- Type: int lt_module_close (lt_user_data LOADER_DATA,\n          lt_module MODULE)\n     The type of the unloader function for a user defined module loader.\n     Implementation of such a function should attempt to release any\n     resources tied up by the MODULE module, and then unload it from\n     memory.  If the function fails for some reason, set the error\n     message with `lt_dlseterror' and return non-zero.\n\n -- Type: void * lt_find_sym (lt_module MODULE, const char *SYMBOL)\n     The type of the symbol lookup function for a user defined module\n     loader.  Implementation of such a function should return the\n     address of the named SYMBOL in the module MODULE, or else set the\n     error message with `lt_dlseterror' and return `NULL' if lookup\n     fails.\n\n -- Type: int lt_dlloader_exit (lt_user_data LOADER_DATA)\n     The type of the finalisation function for a user defined module\n     loader.  Implementation of such a function should free any\n     resources associated with the loader, including any user specified\n     data in the `dlloader_data' field of the `lt_user_dlloader'.  If\n     non-`NULL', the function will be called by `lt_dlexit', and\n     `lt_dlloader_remove'.\n\n   For example:\n\n     int\n     register_myloader (void)\n     {\n       lt_user_dlloader dlloader;\n\n       /* User modules are responsible for their own initialisation. */\n       if (myloader_init () != 0)\n         return MYLOADER_INIT_ERROR;\n\n       dlloader.sym_prefix    = NULL;\n       dlloader.module_open   = myloader_open;\n       dlloader.module_close  = myloader_close;\n       dlloader.find_sym      = myloader_find_sym;\n       dlloader.dlloader_exit = myloader_exit;\n       dlloader.dlloader_data = (lt_user_data)myloader_function;\n\n       /* Add my loader as the default module loader. */\n       if (lt_dlloader_add (lt_dlloader_next (NULL), &dlloader,\n                            \"myloader\") != 0)\n         return ERROR;\n\n       return OK;\n     }\n\n   Note that if there is any initialisation required for the loader, it\nmust be performed manually before the loader is registered - libltdl\ndoesn't handle user loader initialisation.\n\n   Finalisation _is_ handled by libltdl however, and it is important to\nensure the `dlloader_exit' callback releases any resources claimed\nduring the initialisation phase.\n\nlibltdl provides the following functions for writing your own module\nloaders:\n\n -- Function: int lt_dlloader_add (lt_dlloader *PLACE,\n          lt_user_dlloader *DLLOADER, const char *LOADER_NAME)\n     Add a new module loader to the list of all loaders, either as the\n     last loader (if PLACE is `NULL'), else immediately before the\n     loader passed as PLACE.  LOADER_NAME will be returned by\n     `lt_dlloader_name' if it is subsequently passed a newly registered\n     loader.  These LOADER_NAMEs must be unique, or\n     `lt_dlloader_remove' and `lt_dlloader_find' cannot work.  Returns\n     0 for success.\n\n          /* Make myloader be the last one. */\n          if (lt_dlloader_add (NULL, myloader) != 0)\n            perror (lt_dlerror ());\n\n -- Function: int lt_dlloader_remove (const char *LOADER_NAME)\n     Remove the loader identified by the unique name, LOADER_NAME.\n     Before this can succeed, all modules opened by the named loader\n     must have been closed.  Returns 0 for success, otherwise an error\n     message can be obtained from `lt_dlerror'.\n\n          /* Remove myloader. */\n          if (lt_dlloader_remove (\"myloader\") != 0)\n            perror (lt_dlerror ());\n\n -- Function: lt_dlloader * lt_dlloader_next (lt_dlloader *PLACE)\n     Iterate over the module loaders, returning the first loader if\n     PLACE is `NULL', and the next one on subsequent calls.  The handle\n     is for use with `lt_dlloader_add'.\n\n          /* Make myloader be the first one. */\n          if (lt_dlloader_add (lt_dlloader_next (NULL), myloader) != 0)\n            return ERROR;\n\n -- Function: lt_dlloader * lt_dlloader_find (const char *LOADER_NAME)\n     Return the first loader with a matching LOADER_NAME identifier, or\n     else `NULL', if the identifier is not found.\n\n     The identifiers that may be used by libltdl itself, if the host\n     architecture supports them are \"dlopen\"(1), \"dld\" and \"dlpreload\".\n\n          /* Add a user loader as the next module loader to be tried if\n             the standard dlopen loader were to fail when lt_dlopening. */\n          if (lt_dlloader_add (lt_dlloader_find (\"dlopen\"), myloader) != 0)\n            return ERROR;\n\n -- Function: const char * lt_dlloader_name (lt_dlloader *PLACE)\n     Return the identifying name of PLACE, as obtained from\n     `lt_dlloader_next' or `lt_dlloader_find'.  If this function fails,\n     it will return `NULL' and set an error for retrieval with\n     `lt_dlerror'.\n\n -- Function: lt_user_data * lt_dlloader_data (lt_dlloader *PLACE)\n     Return the address of the `dlloader_data' of PLACE, as obtained\n     from `lt_dlloader_next' or `lt_dlloader_find'.  If this function\n     fails, it will return `NULL' and set an error for retrieval with\n     `lt_dlerror'.\n\n11.5.1 Error handling within user module loaders\n------------------------------------------------\n\n -- Function: int lt_dladderror (const char *DIAGNOSTIC)\n     This function allows you to integrate your own error messages into\n     `lt_dlerror'.  Pass in a suitable diagnostic message for return by\n     `lt_dlerror', and an error identifier for use with `lt_dlseterror'\n     is returned.\n\n     If the allocation of an identifier fails, this function returns -1.\n\n          int myerror = lt_dladderror (\"Doh!\");\n          if (myerror < 0)\n            perror (lt_dlerror ());\n\n -- Function: int lt_dlseterror (int ERRORCODE)\n     When writing your own module loaders, you should use this function\n     to raise errors so that they are propagated through the\n     `lt_dlerror' interface.  All of the standard errors used by\n     libltdl are declared in `ltdl.h', or you can add more of your own\n     with `lt_dladderror'.  This function returns 0 on success.\n\n          if (lt_dlseterror (LTDL_ERROR_NO_MEMORY) != 0)\n            perror (lt_dlerror ());\n\n---------- Footnotes ----------\n\n   (1) This is used for the host dependent module loading API -\n`shl_load' and `LoadLibrary' for example\n\n\u001f\nFile: libtool.info,  Node: Distributing libltdl,  Prev: Module loaders for libltdl,  Up: Using libltdl\n\n11.6 How to distribute libltdl with your package\n================================================\n\nEven though libltdl is installed together with libtool, you may wish to\ninclude libltdl in the distribution of your package, for the\nconvenience of users of your package that don't have libtool or libltdl\ninstalled, or if you are using features of a very new version of\nlibltdl that you don't expect your users to have yet.  In such cases,\nyou must decide which flavor of libltdl you want to use: a convenience\nlibrary or an installable libtool library.\n\n   The most simplistic way to add `libltdl' to your package is to copy\nall the `libltdl' source files to a subdirectory within your package\nand to build and link them along with the rest of your sources.  To\nhelp you do this, the m4 macros for Autoconf are available in\n`ltdl.m4'.  You must ensure that they are available in `aclocal.m4'\nbefore you run Autoconf(1).  Having made the macros available, you must\nadd a call to the `LTDL_INIT' macro (after the call to `LT_INIT') to\nyour package's `configure.ac' to perform the configure time checks\nrequired to build the library correctly.  Unfortunately, this method\nhas problems if you then try to link the package binaries with an\ninstalled libltdl, or a library that depends on libltdl, because of the\nduplicate symbol definitions.  For example, ultimately linking against\ntwo different versions of libltdl, or against both a local convenience\nlibrary and an installed libltdl is bad.  Ensuring that only one copy\nof the libltdl sources are linked into any program is left as an\nexercise for the reader.\n\n -- Macro: LT_CONFIG_LTDL_DIR (DIRECTORY)\n     Declare DIRECTORY to be the location of the `libltdl' source\n     files, for `libtoolize --ltdl' to place them. *Note Invoking\n     libtoolize::, for more details.  Provided that you add an\n     appropriate `LT_CONFIG_LTDL_DIR' call in your `configure.ac'\n     before calling `libtoolize', the appropriate `libltdl' files will\n     be installed automatically.\n\n -- Macro: LTDL_INIT (OPTIONS)\n -- Macro: LT_WITH_LTDL\n -- Macro: AC_WITH_LTDL\n     `AC_WITH_LTDL' and `LT_WITH_LTDL' are deprecated names for older\n     versions of this macro; `autoupdate' will update your\n     `configure.ac' file.\n\n     This macro adds the following options to the `configure' script:\n\n    `--with-ltdl-include INSTALLED-LTDL-HEADER-DIR'\n          The `LTDL_INIT' macro will look in the standard header file\n          locations to find the installed `libltdl' headers.  If\n          `LTDL_INIT' can't find them by itself, the person who builds\n          your package can use this option to tell `configure' where\n          the installed `libltdl' headers are.\n\n    `--with-ltdl-lib INSTALLED-LTDL-LIBRARY-DIR'\n          Similarly, the person building your package can use this\n          option to help `configure' find the installed `libltdl.la'.\n\n    `--with-included-ltdl'\n          If there is no installed `libltdl', or in any case if the\n          person building your package would rather use the `libltdl'\n          sources shipped with the package in the subdirectory named by\n          `LT_CONFIG_LTDL_DIR', they should pass this option to\n          `configure'.\n\n     If the `--with-included-ltdl' is not passed at configure time, and\n     an installed `libltdl' is not found(2), then `configure' will exit\n     immediately with an error that asks the user to either specify the\n     location of an installed `libltdl' using the `--with-ltdl-include'\n     and `--with-ltdl-lib' options, or to build with the `libltdl'\n     sources shipped with the package by passing `--with-included-ltdl'.\n\n     If an installed `libltdl' is found, then `LIBLTDL' is set to the\n     link flags needed to use it, and `LTDLINCL' to the preprocessor\n     flags needed to find the installed headers, and `LTDLDEPS' will be\n     empty.  Note, however, that no version checking is performed.  You\n     should manually check for the `libltdl' features you need in\n     `configure.ac':\n\n          LT_INIT([dlopen])\n          LTDL_INIT\n\n          # The lt_dladvise_init symbol was added with libtool-2.2\n          if test \"x$with_included_ltdl\" != \"xyes\"; then\n            save_CFLAGS=\"$CFLAGS\"\n            save_LDFLAGS=\"$LDFLAGS\"\n            CFLAGS=\"$CFLAGS $LTDLINCL\"\n            LDFLAGS=\"$LDFLAGS $LIBLTDL\"\n            AC_CHECK_LIB([ltdl], [lt_dladvise_init],\n                          [],\n                  [AC_MSG_ERROR([installed libltdl is too old])])\n            LDFLAGS=\"$save_LDFLAGS\"\n            CFLAGS=\"$save_CFLAGS\"\n          fi\n\n     OPTIONS may include no more than one of the following build modes\n     depending on how you want your project to build `libltdl':\n     `nonrecursive', `recursive', or `subproject'.  In order for\n     `libtoolize' to detect this option correctly, if you supply one of\n     these arguments, they must be given literally (i.e., macros or\n     shell variables that expand to the correct ltdl mode will not\n     work).\n\n    `nonrecursive'\n          This is how the Libtool project distribution builds the\n          `libltdl' we ship and install.  If you wish to use Automake\n          to build `libltdl' without invoking a recursive make to\n          descend into the `libltdl' subdirectory, then use this\n          option.  You will need to set your configuration up carefully\n          to make this work properly, and you will need releases of\n          Autoconf and Automake that support `subdir-objects' and\n          `LIBOBJDIR' properly.  In your `configure.ac', add:\n\n               AM_INIT_AUTOMAKE([subdir-objects])\n               AC_CONFIG_HEADERS([config.h])\n               LT_CONFIG_LTDL_DIR([libltdl])\n               LT_INIT([dlopen])\n               LTDL_INIT([nonrecursive])\n\n          You _have to_ use a config header, but it may have a name\n          different than `config.h'.\n\n          Also, add the following near the top of your `Makefile.am':\n\n               AM_CPPFLAGS =\n               AM_LDFLAGS =\n\n               BUILT_SOURCES =\n               EXTRA_DIST =\n               CLEANFILES =\n               MOSTLYCLEANFILES =\n\n               include_HEADERS =\n               noinst_LTLIBRARIES =\n               lib_LTLIBRARIES =\n               EXTRA_LTLIBRARIES =\n\n               include libltdl/Makefile.inc\n\n          Unless you build no other libraries from this `Makefile.am',\n          you will also need to change `lib_LTLIBRARIES' to assign with\n          `+=' so that the `libltdl' targets declared in `Makefile.inc'\n          are not overwritten.\n\n    `recursive'\n          This build mode still requires that you use Automake, but (in\n          contrast with `nonrecursive') uses the more usual device of\n          starting another `make' process in the `libltdl'\n          subdirectory.  To use this mode, you should add to your\n          `configure.ac':\n\n               AM_INIT_AUTOMAKE\n               AC_CONFIG_HEADERS([config.h])\n               LT_CONFIG_LTDL_DIR([libltdl])\n               LT_INIT([dlopen])\n               LTDL_INIT([recursive])\n               AC_CONFIG_FILES([libltdl/Makefile])\n\n          Again, you _have to_ use a config header, but it may have a\n          name different than `config.h' if you like.\n\n          Also, add this to your `Makefile.am':\n\n               SUBDIRS = libltdl\n\n    `subproject'\n          This mode is the default unless you explicitly add\n          `recursive' or `nonrecursive' to your `LTDL_INIT' options;\n          `subproject' is the only mode supported by previous releases\n          of libltdl.  Even if you do not use Autoconf in the parent\n          project, then, in `subproject' mode, still `libltdl' contains\n          all the necessary files to configure and build itself - you\n          just need to arrange for your build system to call\n          `libltdl/configure' with appropriate options, and then run\n          `make' in the `libltdl' subdirectory.\n\n          If you _are_ using Autoconf and Automake, then you will need\n          to add the following to your `configure.ac':\n\n               LT_CONFIG_LTDL_DIR([libltdl])\n               LTDL_INIT\n\n          and to `Makefile.am':\n\n               SUBDIRS = libltdl\n\n     Aside from setting the libltdl build mode, there are other keywords\n     that you can pass to `LTDL_INIT' to modify its behavior when\n     `--with-included-ltdl' has been given:\n\n    `convenience'\n          This is the default unless you explicitly add `installable' to\n          your `LTDL_INIT' options.\n\n          This keyword will cause options to be passed to the\n          `configure' script in the subdirectory named by\n          `LT_CONFIG_LTDL_DIR' in order to cause it to be built as a\n          convenience library.  If you're not using automake, you will\n          need to define `top_build_prefix', `top_builddir', and\n          `top_srcdir' in your makefile so that `LIBLTDL', `LTDLDEPS',\n          and `LTDLINCL' expand correctly.\n\n          One advantage of the convenience library is that it is not\n          installed, so the fact that you use `libltdl' will not be\n          apparent to the user, and it won't overwrite a pre-installed\n          version of `libltdl' the system might already have in the\n          installation directory.  On the other hand, if you want to\n          upgrade `libltdl' for any reason (e.g. a bugfix) you'll have\n          to recompile your package instead of just replacing the\n          shared installed version of `libltdl'.  However, if your\n          programs or libraries are linked with other libraries that\n          use such a pre-installed version of `libltdl', you may get\n          linker errors or run-time crashes.  Another problem is that\n          you cannot link the convenience library into more than one\n          libtool library, then link a single program with those\n          libraries, because you may get duplicate symbols.  In general\n          you can safely use the convenience library in programs that\n          don't depend on other libraries that might use `libltdl' too.\n\n    `installable'\n          This keyword will pass options to the `configure' script in\n          the subdirectory named by `LT_CONFIG_LTDL_DIR' in order to\n          cause it to be built as an installable library.  If you're not\n          using automake, you will need to define `top_build_prefix',\n          `top_builddir' and `top_srcdir' in your makefile so that\n          `LIBLTDL', `LTDLDEPS', and `LTDLINCL' are expanded properly.\n\n          Be aware that you could overwrite another `libltdl' already\n          installed to the same directory if you use this option.\n\n   Whatever method you use, `LTDL_INIT' will define the shell variable\n`LIBLTDL' to the link flag that you should use to link with `libltdl',\nthe shell variable `LTDLDEPS' to the files that can be used as a\ndependency in `Makefile' rules, and the shell variable `LTDLINCL' to\nthe preprocessor flag that you should use to compile programs that\ninclude `ltdl.h'. So, when you want to link a program with libltdl, be\nit a convenience, installed or installable library, just use\n`$(LTDLINCL)' for preprocessing and compilation, and `$(LIBLTDL)' for\nlinking.\n\n   * If your package is built using an installed version of `libltdl',\n     `LIBLTDL' will be set to the compiler flags needed to link against\n     the installed library, `LTDLDEPS' will be empty, and `LTDLINCL'\n     will be set to the compiler flags needed to find the `libltdl'\n     header files.\n\n   * If your package is built using the convenience libltdl, `LIBLTDL'\n     and `LTDLDEPS' will be the pathname for the convenience version of\n     libltdl (starting with `${top_builddir}/' or\n     `${top_build_prefix}') and `LTDLINCL' will be `-I' followed by the\n     directory that contains `ltdl.h' (starting with `${top_srcdir}/').\n\n   * If an installable version of the included `libltdl' is being\n     built, its pathname starting with `${top_builddir}/' or\n     `${top_build_prefix}', will be stored in `LIBLTDL' and `LTDLDEPS',\n     and `LTDLINCL' will be set just like in the case of convenience\n     library.\n\n   You should probably also use the `dlopen' option to `LT_INIT' in\nyour `configure.ac', otherwise libtool will assume no dlopening\nmechanism is supported, and revert to dlpreopening, which is probably\nnot what you want.  Avoid using the `-static', `-static-libtool-libs',\nor `-all-static' switches when linking programs with libltdl.  This\nwill not work on all platforms, because the dlopening functions may not\nbe available for static linking.\n\n   The following example shows you how to embed an installable libltdl\nin your package.  In order to use the convenience variant, just replace\nthe `LTDL_INIT' option `installable' with `convenience'.  We assume\nthat libltdl was embedded using `libtoolize --ltdl'.\n\n   configure.ac:\n     ...\n     # Name the subdirectory that contains libltdl sources\n     LT_CONFIG_LTDL_DIR([libltdl])\n\n     # Configure libtool with dlopen support if possible\n     LT_INIT([dlopen])\n\n     # Enable building of the installable libltdl library\n     LTDL_INIT([installable])\n     ...\n\n   Makefile.am:\n     ...\n     SUBDIRS = libltdl\n\n     AM_CPPFLAGS = $(LTDLINCL)\n\n     myprog_LDFLAGS = -export-dynamic\n     myprog_LDADD = $(LIBLTDL) -dlopen self -dlopen foo1.la\n     myprog_DEPENDENCIES = $(LTDLDEPS) foo1.la\n     ...\n\n -- Macro: LTDL_INSTALLABLE\n -- Macro: AC_LIBLTDL_INSTALLABLE\n     These macros are deprecated, the `installable' option to\n     `LTDL_INIT' should be used instead.\n\n -- Macro: LTDL_CONVENIENCE\n -- Macro: AC_LIBLTDL_CONVENIENCE\n     These macros are deprecated, the `convenience' option to\n     `LTDL_INIT' should be used instead.\n\n   ---------- Footnotes ----------\n\n   (1) We used to recommend adding the contents of `ltdl.m4' to\n`acinclude.m4', but with `aclocal' from a modern Automake (1.8 or\nnewer) and this release of libltdl that is not only unnecessary but\nmakes it easy to forget to upgrade `acinclude.m4' if you move to a\ndifferent release of libltdl.\n\n   (2) Even if libltdl is installed, `LTDL_INIT' may fail to detect it\nif libltdl depends on symbols provided by libraries other than the C\nlibrary.\n\n\u001f\nFile: libtool.info,  Node: Trace interface,  Next: FAQ,  Prev: Using libltdl,  Up: Top\n\n12 Libtool's trace interface\n****************************\n\nThis section describes macros whose sole purpose is to be traced using\nAutoconf's `--trace' option (*note The Autoconf Manual:\n(autoconf)autoconf Invocation.) to query the Libtool configuration of a\nproject.  These macros are called by Libtool internals and should never\nbe called by user code; they should only be traced.\n\n -- Macro: LT_SUPPORTED_TAG (TAG)\n     This macro is called once for each language enabled in the\n     package.  Its only argument, TAG, is the tag-name corresponding to\n     the language (*note Tags::).\n\n     You can therefore retrieve the list of all tags enabled in a\n     project using the following command:\n          autoconf --trace 'LT_SUPPORTED_TAG:$1'\n\n\u001f\nFile: libtool.info,  Node: FAQ,  Next: Troubleshooting,  Prev: Trace interface,  Up: Top\n\n13 Frequently Asked Questions about libtool\n*******************************************\n\nThis chapter covers some questions that often come up on the mailing\nlists.\n\n* Menu:\n\n* Stripped link flags::         Dropped flags when creating a library\n\n\u001f\nFile: libtool.info,  Node: Stripped link flags,  Up: FAQ\n\n13.1 Why does libtool strip link flags when creating a library?\n===============================================================\n\nWhen creating a shared library, but not when compiling or creating a\nprogram, `libtool' drops some flags from the command line provided by\nthe user.  This is done because flags unknown to `libtool' may\ninterfere with library creation or require additional support from\n`libtool', and because omitting flags is usually the conservative\nchoice for a successful build.\n\n   If you encounter flags that you think are useful to pass, as a\nwork-around you can prepend flags with `-Wc,' or `-Xcompiler ' to allow\nthem to be passed through to the compiler driver (*note Link mode::).\nAnother possibility is to add flags already to the compiler command at\n`configure' run time:\n\n     ./configure CC='gcc -m64'\n\n   If you think `libtool' should let some flag through by default,\nhere's how you can test such an inclusion: grab the Libtool development\ntree, edit the `ltmain.m4sh' file in the `libltdl/config' subdirectory\nto pass through the flag (search for `Flags to be passed through'),\nre-bootstrap and build with the flags in question added to `LDFLAGS',\n`CFLAGS', `CXXFLAGS', etc. on the `configure' command line as\nappropriate.  Run the testsuite as described in the `README' file and\nreport results to the Libtool bug reporting address\n<bug-libtool@gnu.org>.\n\n\u001f\nFile: libtool.info,  Node: Troubleshooting,  Next: Maintaining,  Prev: FAQ,  Up: Top\n\n14 Troubleshooting\n******************\n\nLibtool is under constant development, changing to remain up-to-date\nwith modern operating systems.  If libtool doesn't work the way you\nthink it should on your platform, you should read this chapter to help\ndetermine what the problem is, and how to resolve it.\n\n* Menu:\n\n* Libtool test suite::          Libtool's self-tests.\n* Reporting bugs::              How to report problems with libtool.\n\n\u001f\nFile: libtool.info,  Node: Libtool test suite,  Next: Reporting bugs,  Up: Troubleshooting\n\n14.1 The libtool test suite\n===========================\n\nLibtool comes with two integrated sets of tests to check that your build\nis sane, that test its capabilities, and report obvious bugs in the\nlibtool program.  These tests, too, are constantly evolving, based on\npast problems with libtool, and known deficiencies in other operating\nsystems.\n\n   As described in the `README' file, you may run `make -k check' after\nyou have built libtool (possibly before you install it) in order to\nmake sure that it meets basic functional requirements.\n\n* Menu:\n\n* Test descriptions::           The contents of the old test suite.\n* When tests fail::             What to do when a test fails.\n\n\u001f\nFile: libtool.info,  Node: Test descriptions,  Next: When tests fail,  Up: Libtool test suite\n\n14.1.1 Description of test suite\n--------------------------------\n\nHere is a list of the current programs in the old test suite, and what\nthey test for:\n\n`cdemo-conf.test'\n`cdemo-make.test'\n`cdemo-exec.test'\n`cdemo-static.test'\n`cdemo-static-make.test'\n`cdemo-static-exec.test'\n`cdemo-shared.test'\n`cdemo-shared-make.test'\n`cdemo-shared-exec.test'\n`cdemo-undef.test'\n`cdemo-undef-make.test'\n`cdemo-undef-exec.test'\n     These programs check to see that the `tests/cdemo' subdirectory of\n     the libtool distribution can be configured and built correctly.\n\n     The `tests/cdemo' subdirectory contains a demonstration of libtool\n     convenience libraries, a mechanism that allows build-time static\n     libraries to be created, in a way that their components can be\n     later linked into programs or other libraries, even shared ones.\n\n     The tests matching `cdemo-*make.test' and `cdemo-*exec.test' are\n     executed three times, under three different libtool configurations:\n     `cdemo-conf.test' configures `cdemo/libtool' to build both static\n     and shared libraries (the default for platforms that support\n     both), `cdemo-static.test' builds only static libraries\n     (`--disable-shared'), and `cdemo-shared.test' builds only shared\n     libraries (`--disable-static').\n\n     The test `cdemo-undef.test' tests the generation of shared\n     libraries with undefined symbols on systems that allow this.\n\n`demo-conf.test'\n`demo-make.test'\n`demo-exec.test'\n`demo-inst.test'\n`demo-unst.test'\n`demo-static.test'\n`demo-static-make.test'\n`demo-static-exec.test'\n`demo-static-inst.test'\n`demo-static-unst.test'\n`demo-shared.test'\n`demo-shared-make.test'\n`demo-shared-exec.test'\n`demo-shared-inst.test'\n`demo-shared-unst.test'\n`demo-nofast.test'\n`demo-nofast-make.test'\n`demo-nofast-exec.test'\n`demo-nofast-inst.test'\n`demo-nofast-unst.test'\n`demo-pic.test'\n`demo-pic-make.test'\n`demo-pic-exec.test'\n`demo-nopic.test'\n`demo-nopic-make.test'\n`demo-nopic-exec.test'\n     These programs check to see that the `tests/demo' subdirectory of\n     the libtool distribution can be configured, built, installed, and\n     uninstalled correctly.\n\n     The `tests/demo' subdirectory contains a demonstration of a trivial\n     package that uses libtool.  The tests matching `demo-*make.test',\n     `demo-*exec.test', `demo-*inst.test' and `demo-*unst.test' are\n     executed four times, under four different libtool configurations:\n     `demo-conf.test' configures `demo/libtool' to build both static\n     and shared libraries, `demo-static.test' builds only static\n     libraries (`--disable-shared'), and `demo-shared.test' builds only\n     shared libraries (`--disable-static').  `demo-nofast.test'\n     configures `demo/libtool' to disable the fast-install mode\n     (`--enable-fast-install=no').  `demo-pic.test' configures\n     `demo/libtool' to prefer building PIC code (`--with-pic'),\n     `demo-nopic.test' to prefer non-PIC code (`--without-pic').\n\n`demo-deplibs.test'\n     Many systems cannot link static libraries into shared libraries.\n     libtool uses a `deplibs_check_method' to prevent such cases.  This\n     tests checks whether libtool's `deplibs_check_method' works\n     properly.\n\n`demo-hardcode.test'\n     On all systems with shared libraries, the location of the library\n     can be encoded in executables that are linked against it *note\n     Linking executables::.  This test checks the conditions under\n     which your system linker hardcodes the library location, and\n     guarantees that they correspond to libtool's own notion of how\n     your linker behaves.\n\n`demo-relink.test'\n`depdemo-relink.test'\n     These tests check whether variable `shlibpath_overrides_runpath' is\n     properly set.  If the test fails, it will indicate what the\n     variable should have been set to.\n\n`demo-noinst-link.test'\n     Checks whether libtool will not try to link with a previously\n     installed version of a library when it should be linking with a\n     just-built one.\n\n`depdemo-conf.test'\n`depdemo-make.test'\n`depdemo-exec.test'\n`depdemo-inst.test'\n`depdemo-unst.test'\n`depdemo-static.test'\n`depdemo-static-make.test'\n`depdemo-static-exec.test'\n`depdemo-static-inst.test'\n`depdemo-static-unst.test'\n`depdemo-shared.test'\n`depdemo-shared-make.test'\n`depdemo-shared-exec.test'\n`depdemo-shared-inst.test'\n`depdemo-shared-unst.test'\n`depdemo-nofast.test'\n`depdemo-nofast-make.test'\n`depdemo-nofast-exec.test'\n`depdemo-nofast-inst.test'\n`depdemo-nofast-unst.test'\n     These programs check to see that the `tests/depdemo' subdirectory\n     of the libtool distribution can be configured, built, installed,\n     and uninstalled correctly.\n\n     The `tests/depdemo' subdirectory contains a demonstration of\n     inter-library dependencies with libtool.  The test programs link\n     some interdependent libraries.\n\n     The tests matching `depdemo-*make.test', `depdemo-*exec.test',\n     `depdemo-*inst.test' and `depdemo-*unst.test' are executed four\n     times, under four different libtool configurations:\n     `depdemo-conf.test' configures `depdemo/libtool' to build both\n     static and shared libraries, `depdemo-static.test' builds only\n     static libraries (`--disable-shared'), and `depdemo-shared.test'\n     builds only shared libraries (`--disable-static').\n     `depdemo-nofast.test' configures `depdemo/libtool' to disable the\n     fast-install mode (`--enable-fast-install=no').\n\n`mdemo-conf.test'\n`mdemo-make.test'\n`mdemo-exec.test'\n`mdemo-inst.test'\n`mdemo-unst.test'\n`mdemo-static.test'\n`mdemo-static-make.test'\n`mdemo-static-exec.test'\n`mdemo-static-inst.test'\n`mdemo-static-unst.test'\n`mdemo-shared.test'\n`mdemo-shared-make.test'\n`mdemo-shared-exec.test'\n`mdemo-shared-inst.test'\n`mdemo-shared-unst.test'\n     These programs check to see that the `tests/mdemo' subdirectory of\n     the libtool distribution can be configured, built, installed, and\n     uninstalled correctly.\n\n     The `tests/mdemo' subdirectory contains a demonstration of a\n     package that uses libtool and the system independent dlopen wrapper\n     `libltdl' to load modules.  The library `libltdl' provides a\n     dlopen wrapper for various platforms (POSIX) including support for\n     dlpreopened modules (*note Dlpreopening::).\n\n     The tests matching `mdemo-*make.test', `mdemo-*exec.test',\n     `mdemo-*inst.test' and `mdemo-*unst.test' are executed three\n     times, under three different libtool configurations:\n     `mdemo-conf.test' configures `mdemo/libtool' to build both static\n     and shared libraries, `mdemo-static.test' builds only static\n     libraries (`--disable-shared'), and `mdemo-shared.test' builds\n     only shared libraries (`--disable-static').\n\n`mdemo-dryrun.test'\n     This test checks whether libtool's `--dry-run' mode works properly.\n\n`mdemo2-conf.test'\n`mdemo2-exec.test'\n`mdemo2-make.test'\n     These programs check to see that the `tests/mdemo2' subdirectory of\n     the libtool distribution can be configured, built, and executed\n     correctly.\n\n     The `tests/mdemo2' directory contains a demonstration of a package\n     that attempts to link with a library (from the `tests/mdemo'\n     directory) that itself does dlopening of libtool modules.\n\n`link.test'\n     This test guarantees that linking directly against a non-libtool\n     static library works properly.\n\n`link-2.test'\n     This test makes sure that files ending in `.lo' are never linked\n     directly into a program file.\n\n`nomode.test'\n     Check whether we can actually get help for libtool.\n\n`objectlist.test'\n     Check that a nonexistent objectlist file is properly detected.\n\n`pdemo-conf.test'\n`pdemo-make.test'\n`pdemo-exec.test'\n`pdemo-inst.test'\n     These programs check to see that the `tests/pdemo' subdirectory of\n     the libtool distribution can be configured, built, and executed\n     correctly.\n\n     The `pdemo-conf.test' lowers the `max_cmd_len' variable in the\n     generated libtool script to test the measures to evade command line\n     length limitations.\n\n`quote.test'\n     This program checks libtool's metacharacter quoting.\n\n`sh.test'\n     Checks for some nonportable or dubious or undesired shell\n     constructs in shell scripts.\n\n`suffix.test'\n     When other programming languages are used with libtool (*note\n     Other languages::), the source files may end in suffixes other\n     than `.c'.  This test validates that libtool can handle suffixes\n     for all the file types that it supports, and that it fails when\n     the suffix is invalid.\n\n`tagdemo-conf.test'\n`tagdemo-make.test'\n`tagdemo-exec.test'\n`tagdemo-static.test'\n`tagdemo-static-make.test'\n`tagdemo-static-exec.test'\n`tagdemo-shared.test'\n`tagdemo-shared-make.test'\n`tagdemo-shared-exec.test'\n`tagdemo-undef.test'\n`tagdemo-undef-make.test'\n`tagdemo-undef-exec.test'\n     These programs check to see that the `tests/tagdemo' subdirectory\n     of the libtool distribution can be configured, built, and executed\n     correctly.\n\n     The `tests/tagdemo' directory contains a demonstration of a package\n     that uses libtool's multi-language support through configuration\n     tags.  It generates a library from C++ sources, which is then\n     linked to a C++ program.\n\n`f77demo-conf.test'\n`f77demo-make.test'\n`f77demo-exec.test'\n`f77demo-static.test'\n`f77demo-static-make.test'\n`f77demo-static-exec.test'\n`f77demo-shared.test'\n`f77demo-shared-make.test'\n`f77demo-shared-exec.test'\n     These programs check to see that the `tests/f77demo' subdirectory\n     of the libtool distribution can be configured, built, and executed\n     correctly.\n\n     The `tests/f77demo' tests test Fortran 77 support in libtool by\n     creating libraries from Fortran 77 sources, and mixed Fortran and C\n     sources, and a Fortran 77 program to use the former library, and a\n     C program to use the latter library.\n\n`fcdemo-conf.test'\n`fcdemo-make.test'\n`fcdemo-exec.test'\n`fcdemo-static.test'\n`fcdemo-static-make.test'\n`fcdemo-static-exec.test'\n`fcdemo-shared.test'\n`fcdemo-shared-make.test'\n`fcdemo-shared-exec.test'\n     These programs check to see that the `tests/fcdemo' subdirectory\n     of the libtool distribution can be configured, built, and executed\n     correctly.\n\n     The `tests/fcdemo' is similar to the `tests/f77demo' directory,\n     except that Fortran 90 is used in combination with the `FC'\n     interface provided by Autoconf and Automake.\n\n\n   The new, Autotest-based test suite uses keywords to classify certain\ntest groups:\n\n`CXX'\n`F77'\n`FC'\n`GCJ'\n     The test group exercises one of these `libtool' language tags.\n\n`autoconf'\n`automake'\n     These keywords denote that the respective external program is\n     needed by the test group.  The tests are typically skipped if the\n     program is not installed.  The `automake' keyword may also denote\n     use of the `aclocal' program.\n\n`interactive'\n     This test group may require user interaction on some systems.\n     Typically, this means closing a popup window about a DLL load\n     error on Windows.\n\n`libltdl'\n     Denote that the `libltdl' library is exercised by the test group.\n\n`libtool'\n`libtoolize'\n     Denote that the `libtool' or `libtoolize' scripts are exercised by\n     the test group, respectively.\n\n`recursive'\n     Denote that this test group may recursively re-invoke the test\n     suite itself, with changed settings and maybe a changed `libtool'\n     script.  You may use the `INNER_TESTSUITEFLAGS' variable to pass\n     additional settings to this recursive invocation.  Typically,\n     recursive invocations delimit the set of tests with another\n     keyword, for example by passing `-k libtool' right before the\n     expansion of the `INNER_TESTSUITEFLAGS' variable (without an\n     intervening space, so you get the chance for further delimitation).\n\n     Test groups with the keyword `recursive' should not be denoted with\n     keywords, in order to avoid infinite recursion.  As a consequence,\n     recursive test groups themselves should never require user\n     interaction, while the test groups they invoke may do so.\n\n   There is a convenience target `check-noninteractive' that runs all\ntests from both test suites that do not cause user interaction on\nWindows.  Conversely, the target `check-interactive' runs the\ncomplement of tests and might require closing popup windows about DLL\nload errors on Windows.\n\n\u001f\nFile: libtool.info,  Node: When tests fail,  Prev: Test descriptions,  Up: Libtool test suite\n\n14.1.2 When tests fail\n----------------------\n\nWhen the tests in the old test suite are run via `make check', output\nis caught in per-test `tests/TEST-NAME.log' files and summarized in the\n`test-suite.log' file.  The exit status of each program tells the\n`Makefile' whether or not the test succeeded.\n\n   If a test fails, it means that there is either a programming error in\nlibtool, or in the test program itself.\n\n   To investigate a particular test, you may run it directly, as you\nwould a normal program.  When the test is invoked in this way, it\nproduces output that may be useful in determining what the problem is.\n\n   The new, Autotest-based test suite produces as output a file\n`tests/testsuite.log' which contains information about failed tests.\n\n   You can pass options to the test suite through the `make' variable\n`TESTSUITEFLAGS' (*note The Autoconf Manual: (autoconf)testsuite\nInvocation.).\n\n\u001f\nFile: libtool.info,  Node: Reporting bugs,  Prev: Libtool test suite,  Up: Troubleshooting\n\n14.2 Reporting bugs\n===================\n\nIf you think you have discovered a bug in libtool, you should think\ntwice: the libtool maintainer is notorious for passing the buck (or\nmaybe that should be \"passing the bug\").  Libtool was invented to fix\nknown deficiencies in shared library implementations, so, in a way, most\nof the bugs in libtool are actually bugs in other operating systems.\nHowever, the libtool maintainer would definitely be happy to add support\nfor somebody else's buggy operating system.  [I wish there was a good\nway to do winking smiley-faces in Texinfo.]\n\n   Genuine bugs in libtool include problems with shell script\nportability, documentation errors, and failures in the test suite\n(*note Libtool test suite::).\n\n   First, check the documentation and help screens to make sure that the\nbehaviour you think is a problem is not already mentioned as a feature.\n\n   Then, you should read the Emacs guide to reporting bugs (*note\nReporting Bugs: (emacs)Bugs.).  Some of the details listed there are\nspecific to Emacs, but the principle behind them is a general one.\n\n   Finally, send a bug report to the Libtool bug reporting address\n<bug-libtool@gnu.org> with any appropriate _facts_, such as test suite\noutput (*note When tests fail::), all the details needed to reproduce\nthe bug, and a brief description of why you think the behaviour is a\nbug.  Be sure to include the word \"libtool\" in the subject line, as\nwell as the version number you are using (which can be found by typing\n`libtool --version').\n\n\u001f\nFile: libtool.info,  Node: Maintaining,  Next: GNU Free Documentation License,  Prev: Troubleshooting,  Up: Top\n\n15 Maintenance notes for libtool\n********************************\n\nThis chapter contains information that the libtool maintainer finds\nimportant.  It will be of no use to you unless you are considering\nporting libtool to new systems, or writing your own libtool.\n\n* Menu:\n\n* New ports::                   How to port libtool to new systems.\n* Tested platforms::            When libtool was last tested.\n* Platform quirks::             Information about different library systems.\n* libtool script contents::     Configuration information that libtool uses.\n* Cheap tricks::                Making libtool maintainership easier.\n\n\u001f\nFile: libtool.info,  Node: New ports,  Next: Tested platforms,  Up: Maintaining\n\n15.1 Porting libtool to new systems\n===================================\n\nBefore you embark on porting libtool to an unsupported system, it is\nworthwhile to send e-mail to the Libtool mailing list\n<libtool@gnu.org>, to make sure that you are not duplicating existing\nwork.\n\n   If you find that any porting documentation is missing, please\ncomplain!  Complaints with patches and improvements to the\ndocumentation, or to libtool itself, are more than welcome.\n\n* Menu:\n\n* Information sources::         Where to find relevant documentation\n* Porting inter-library dependencies::  Implementation details explained\n\n\u001f\nFile: libtool.info,  Node: Information sources,  Next: Porting inter-library dependencies,  Up: New ports\n\n15.1.1 Information sources\n--------------------------\n\nOnce it is clear that a new port is necessary, you'll generally need the\nfollowing information:\n\ncanonical system name\n     You need the output of `config.guess' for this system, so that you\n     can make changes to the libtool configuration process without\n     affecting other systems.\n\nman pages for `ld' and `cc'\n     These generally describe what flags are used to generate PIC, to\n     create shared libraries, and to link against only static\n     libraries.  You may need to follow some cross references to find\n     the information that is required.\n\nman pages for `ld.so', `rtld', or equivalent\n     These are a valuable resource for understanding how shared\n     libraries are loaded on the system.\n\nman page for `ldconfig', or equivalent\n     This page usually describes how to install shared libraries.\n\noutput from `ls -l /lib /usr/lib'\n     This shows the naming convention for shared libraries on the\n     system, including which names should be symbolic links.\n\nany additional documentation\n     Some systems have special documentation on how to build and install\n     shared libraries.\n\n   If you know how to program the Bourne shell, then you can complete\nthe port yourself; otherwise, you'll have to find somebody with the\nrelevant skills who will do the work.  People on the libtool mailing\nlist are usually willing to volunteer to help you with new ports, so\nyou can send the information to them.\n\n   To do the port yourself, you'll definitely need to modify the\n`libtool.m4' macros in order to make platform-specific changes to the\nconfiguration process.  You should search that file for the `PORTME'\nkeyword, which will give you some hints on what you'll need to change.\nIn general, all that is involved is modifying the appropriate\nconfiguration variables (*note libtool script contents::).\n\n   Your best bet is to find an already-supported system that is similar\nto yours, and make your changes based on that.  In some cases, however,\nyour system will differ significantly from every other supported system,\nand it may be necessary to add new configuration variables, and modify\nthe `ltmain.in' script accordingly.  Be sure to write to the mailing\nlist before you make changes to `ltmain.in', since they may have advice\non the most effective way of accomplishing what you want.\n\n\u001f\nFile: libtool.info,  Node: Porting inter-library dependencies,  Prev: Information sources,  Up: New ports\n\n15.1.2 Porting inter-library dependencies support\n-------------------------------------------------\n\nSince version 1.2c, libtool has re-introduced the ability to do\ninter-library dependency on some platforms, thanks to a patch by Toshio\nKuratomi <badger@prtr-13.ucsc.edu>.  Here's a shortened version of the\nmessage that contained his patch:\n\n   The basic architecture is this: in `libtool.m4', the person who\nwrites libtool makes sure `$deplibs' is included in `$archive_cmds'\nsomewhere and also sets the variable `$deplibs_check_method', and maybe\n`$file_magic_cmd' when `deplibs_check_method' is file_magic.\n\n   `deplibs_check_method' can be one of five things:\n`file_magic [REGEX]'\n     looks in the library link path for libraries that have the right\n     libname.  Then it runs `$file_magic_cmd' on the library and checks\n     for a match against the extended regular expression REGEX.  When\n     `file_magic_test_file' is set by `libtool.m4', it is used as an\n     argument to `$file_magic_cmd' in order to verify whether the\n     regular expression matches its output, and warn the user otherwise.\n\n`test_compile'\n     just checks whether it is possible to link a program out of a list\n     of libraries, and checks which of those are listed in the output of\n     `ldd'.  It is currently unused, and will probably be dropped in the\n     future.\n\n`pass_all'\n     will pass everything without any checking.  This may work on\n     platforms in which code is position-independent by default and\n     inter-library dependencies are properly supported by the dynamic\n     linker, for example, on DEC OSF/1 3 and 4.\n\n`none'\n     It causes deplibs to be reassigned `deplibs=\"\"'.  That way\n     `archive_cmds' can contain deplibs on all platforms, but not have\n     deplibs used unless needed.\n\n`unknown'\n     is the default for all systems unless overridden in `libtool.m4'.\n     It is the same as `none', but it documents that we really don't\n     know what the correct value should be, and we welcome patches that\n     improve it.\n\n   Then in `ltmain.in' we have the real workhorse: a little\ninitialization and postprocessing (to setup/release variables for use\nwith eval echo libname_spec etc.) and a case statement that decides the\nmethod that is being used.  This is the real code... I wish I could\ncondense it a little more, but I don't think I can without function\ncalls.  I've mostly optimized it (moved things out of loops, etc.) but\nthere is probably some fat left.  I thought I should stop while I was\nahead, work on whatever bugs you discover, etc. before thinking about\nmore than obvious optimizations.\n\n\u001f\nFile: libtool.info,  Node: Tested platforms,  Next: Platform quirks,  Prev: New ports,  Up: Maintaining\n\n15.2 Tested platforms\n=====================\n\nThis table describes when libtool was last known to be tested on\nplatforms where it claims to support shared libraries:\n\n     -------------------------------------------------------\n     canonical host name          compiler  libtool results\n       (tools versions)                     release\n     -------------------------------------------------------\n     alpha-dec-osf5.1\t\tcc\t 1.3e\t  ok (1.910)\n     alpha-dec-osf4.0f               gcc      1.3e     ok (1.910)\n     alpha-dec-osf4.0f               cc       1.3e     ok (1.910)\n     alpha-dec-osf3.2                gcc      0.8      ok\n     alpha-dec-osf3.2                cc       0.8      ok\n     alpha-dec-osf2.1                gcc      1.2f     NS\n     alpha*-unknown-linux-gnu        gcc      1.3b     ok\n       (egcs-1.1.2, GNU ld 2.9.1.0.23)\n     hppa2.0w-hp-hpux11.00           cc       1.2f     ok\n     hppa2.0-hp-hpux10.20            cc       1.3.2    ok\n     hppa1.1-hp-hpux10.20            gcc      1.2f     ok\n     hppa1.1-hp-hpux10.20            cc       1.3c     ok (1.821)\n     hppa1.1-hp-hpux10.10            gcc      1.2f     ok\n     hppa1.1-hp-hpux10.10            cc       1.2f     ok\n     hppa1.1-hp-hpux9.07             gcc      1.2f     ok\n     hppa1.1-hp-hpux9.07             cc       1.2f     ok\n     hppa1.1-hp-hpux9.05             gcc      1.2f     ok\n     hppa1.1-hp-hpux9.05             cc       1.2f     ok\n     hppa1.1-hp-hpux9.01             gcc      1.2f     ok\n     hppa1.1-hp-hpux9.01             cc       1.2f     ok\n     i*86-*-beos                     gcc      1.2f     ok\n     i*86-*-bsdi4.0.1                gcc      1.3c     ok\n       (gcc-2.7.2.1)\n     i*86-*-bsdi4.0                  gcc      1.2f     ok\n     i*86-*-bsdi3.1                  gcc      1.2e     NS\n     i*86-*-bsdi3.0                  gcc      1.2e     NS\n     i*86-*-bsdi2.1                  gcc      1.2e     NS\n     i*86-pc-cygwin                  gcc      1.3b     NS\n       (egcs-1.1 stock b20.1 compiler)\n     i*86-*-dguxR4.20MU01            gcc      1.2      ok\n     i*86-*-freebsd4.3\t\tgcc      1.3e     ok (1.912)\n     i*86-*-freebsdelf4.0            gcc      1.3c     ok\n       (egcs-1.1.2)\n     i*86-*-freebsdelf3.2            gcc      1.3c     ok\n       (gcc-2.7.2.1)\n     i*86-*-freebsdelf3.1            gcc      1.3c     ok\n       (gcc-2.7.2.1)\n     i*86-*-freebsdelf3.0            gcc      1.3c     ok\n     i*86-*-freebsd3.0               gcc      1.2e     ok\n     i*86-*-freebsd2.2.8             gcc      1.3c     ok\n       (gcc-2.7.2.1)\n     i*86-*-freebsd2.2.6             gcc      1.3b     ok\n       (egcs-1.1 & gcc-2.7.2.1, native ld)\n     i*86-*-freebsd2.1.5             gcc      0.5      ok\n     i*86-*-netbsd1.5                gcc      1.3e     ok (1.901)\n       (egcs-1.1.2)\n     i*86-*-netbsd1.4                gcc      1.3c     ok\n       (egcs-1.1.1)\n     i*86-*-netbsd1.4.3A             gcc      1.3e     ok (1.901)\n     i*86-*-netbsd1.3.3              gcc      1.3c     ok\n       (gcc-2.7.2.2+myc2)\n     i*86-*-netbsd1.3.2              gcc      1.2e     ok\n     i*86-*-netbsd1.3I               gcc      1.2e     ok\n       (egcs 1.1?)\n     i*86-*-netbsd1.2                gcc      0.9g     ok\n     i*86-*-linux-gnu\t\tgcc\t 1.3e\t  ok (1.901)\n       (Red Hat 7.0, gcc \"2.96\")\n     i*86-*-linux-gnu\t\tgcc\t 1.3e\t  ok (1.911)\n       (SuSE 7.0, gcc 2.95.2)\n     i*86-*-linux-gnulibc1           gcc      1.2f     ok\n     i*86-*-openbsd2.5               gcc      1.3c     ok\n       (gcc-2.8.1)\n     i*86-*-openbsd2.4               gcc      1.3c     ok\n       (gcc-2.8.1)\n     i*86-*-solaris2.7               gcc      1.3b     ok\n       (egcs-1.1.2, native ld)\n     i*86-*-solaris2.6               gcc      1.2f     ok\n     i*86-*-solaris2.5.1             gcc      1.2f     ok\n     i*86-ncr-sysv4.3.03             gcc      1.2f     ok\n     i*86-ncr-sysv4.3.03             cc       1.2e     ok\n       (cc -Hnocopyr)\n     i*86-pc-sco3.2v5.0.5\t\tcc\t 1.3c\t  ok\n     i*86-pc-sco3.2v5.0.5\t\tgcc\t 1.3c\t  ok\n       (gcc 95q4c)\n     i*86-pc-sco3.2v5.0.5\t\tgcc\t 1.3c\t  ok\n       (egcs-1.1.2)\n     i*86-sco-sysv5uw7.1.1\t\tgcc\t 1.3e\t  ok (1.901)\n       (gcc-2.95.2, SCO linker)\n     i*86-UnixWare7.1.0-sysv5\tcc\t 1.3c\t  ok\n     i*86-UnixWare7.1.0-sysv5\tgcc\t 1.3c\t  ok\n       (egcs-1.1.1)\n     m68k-next-nextstep3             gcc      1.2f     NS\n     m68k-sun-sunos4.1.1             gcc      1.2f     NS\n       (gcc-2.5.7)\n     m88k-dg-dguxR4.12TMU01          gcc      1.2      ok\n     m88k-motorola-sysv4             gcc      1.3      ok\n       (egcs-1.1.2)\n     mips-sgi-irix6.5                gcc      1.2f     ok\n       (gcc-2.8.1)\n     mips-sgi-irix6.4                gcc      1.2f     ok\n     mips-sgi-irix6.3                gcc      1.3b     ok\n       (egcs-1.1.2, native ld)\n     mips-sgi-irix6.3                cc       1.3b     ok\n       (cc 7.0)\n     mips-sgi-irix6.2                gcc      1.2f     ok\n     mips-sgi-irix6.2                cc       0.9      ok\n     mips-sgi-irix5.3                gcc      1.2f     ok\n       (egcs-1.1.1)\n     mips-sgi-irix5.3                gcc      1.2f     NS\n       (gcc-2.6.3)\n     mips-sgi-irix5.3                cc       0.8      ok\n     mips-sgi-irix5.2                gcc      1.3b     ok\n       (egcs-1.1.2, native ld)\n     mips-sgi-irix5.2                cc       1.3b     ok\n       (cc 3.18)\n     mips-sni-sysv4\t\t\tcc       1.3.5    ok\n       (Siemens C-compiler)\n     mips-sni-sysv4\t\t\tgcc      1.3.5    ok\n       (gcc-2.7.2.3, GNU assembler 2.8.1, native ld)\n     mipsel-unknown-openbsd2.1       gcc      1.0      ok\n     powerpc-apple-darwin6.4         gcc      1.5      ok\n     (apple dev tools released 12/2002)\n     powerpc-ibm-aix4.3.1.0          gcc      1.2f     ok\n       (egcs-1.1.1)\n     powerpc-ibm-aix4.2.1.0          gcc      1.2f     ok\n       (egcs-1.1.1)\n     powerpc-ibm-aix4.1.5.0          gcc      1.2f     ok\n       (egcs-1.1.1)\n     powerpc-ibm-aix4.1.5.0          gcc      1.2f     NS\n       (gcc-2.8.1)\n     powerpc-ibm-aix4.1.4.0          gcc      1.0      ok\n     powerpc-ibm-aix4.1.4.0          xlc      1.0i     ok\n     rs6000-ibm-aix4.1.5.0           gcc      1.2f     ok\n       (gcc-2.7.2)\n     rs6000-ibm-aix4.1.4.0           gcc      1.2f     ok\n       (gcc-2.7.2)\n     rs6000-ibm-aix3.2.5             gcc      1.0i     ok\n     rs6000-ibm-aix3.2.5             xlc      1.0i     ok\n     sparc-sun-solaris2.8\t\tgcc\t 1.3e\t  ok (1.913)\n       (gcc-2.95.3 & native ld)\n     sparc-sun-solaris2.7            gcc      1.3e     ok (1.913)\n       (gcc-2.95.3 & native ld)\n     sparc-sun-solaris2.6            gcc      1.3e     ok (1.913)\n       (gcc-2.95.3 & native ld)\n     sparc-sun-solaris2.5.1          gcc      1.3e     ok (1.911)\n     sparc-sun-solaris2.5            gcc      1.3b     ok\n       (egcs-1.1.2, GNU ld 2.9.1 & native ld)\n     sparc-sun-solaris2.5            cc       1.3b     ok\n       (SC 3.0.1)\n     sparc-sun-solaris2.4            gcc      1.0a     ok\n     sparc-sun-solaris2.4            cc       1.0a     ok\n     sparc-sun-solaris2.3            gcc      1.2f     ok\n     sparc-sun-sunos4.1.4            gcc      1.2f     ok\n     sparc-sun-sunos4.1.4            cc       1.0f     ok\n     sparc-sun-sunos4.1.3_U1         gcc      1.2f     ok\n     sparc-sun-sunos4.1.3C           gcc      1.2f     ok\n     sparc-sun-sunos4.1.3            gcc      1.3b     ok\n       (egcs-1.1.2, GNU ld 2.9.1 & native ld)\n     sparc-sun-sunos4.1.3            cc       1.3b     ok\n     sparc-unknown-bsdi4.0           gcc      1.2c     ok\n     sparc-unknown-linux-gnulibc1    gcc      1.2f     ok\n     sparc-unknown-linux-gnu         gcc      1.3b     ok\n       (egcs-1.1.2, GNU ld 2.9.1.0.23)\n     sparc64-unknown-linux-gnu       gcc      1.2f     ok\n\n     Notes:\n     - \"ok\" means \"all tests passed\".\n     - \"NS\" means \"Not Shared\", but OK for static libraries\n\n   Note: The vendor-distributed HP-UX `sed'(1) programs are horribly\nbroken, and cannot handle libtool's requirements, so users may report\nunusual problems.  There is no workaround except to install a working\n`sed' (such as GNU `sed') on these systems.\n\n   Note: The vendor-distributed NCR MP-RAS `cc' programs emits\ncopyright on standard error that confuse tests on size of\n`conftest.err'.  The workaround is to specify `CC' when run `configure'\nwith `CC='cc -Hnocopyr''.\n\n\u001f\nFile: libtool.info,  Node: Platform quirks,  Next: libtool script contents,  Prev: Tested platforms,  Up: Maintaining\n\n15.3 Platform quirks\n====================\n\nThis section is dedicated to the sanity of the libtool maintainers.  It\ndescribes the programs that libtool uses, how they vary from system to\nsystem, and how to test for them.\n\n   Because libtool is a shell script, it can be difficult to understand\njust by reading it from top to bottom.  This section helps show why\nlibtool does things a certain way.  Combined with the scripts\nthemselves, you should have a better sense of how to improve libtool, or\nwrite your own.\n\n* Menu:\n\n* References::                  Finding more information.\n* Compilers::                   Creating object files from source files.\n* Reloadable objects::          Binding object files together.\n* Multiple dependencies::       Removing duplicate dependent libraries.\n* Archivers::                   Programs that create static archives.\n* Cross compiling::             Issues that arise when cross compiling.\n* File name conversion::        Converting file names between platforms.\n* Windows DLLs::                Windows header defines.\n\n\u001f\nFile: libtool.info,  Node: References,  Next: Compilers,  Up: Platform quirks\n\n15.3.1 References\n-----------------\n\nThe following is a list of valuable documentation references:\n\n   * SGI's IRIX Manual Pages can be found at\n     `http://techpubs.sgi.com/cgi-bin/infosrch.cgi?cmd=browse&db=man'.\n\n   * Sun's free service area\n     (`http://www.sun.com/service/online/free.html') and documentation\n     server (`http://docs.sun.com/').\n\n   * Compaq's Tru64 UNIX online documentation is at\n     (`http://tru64unix.compaq.com/faqs/publications/pub_page/doc_list.html')\n     with C++ documentation at\n     (`http://tru64unix.compaq.com/cplus/docs/index.htm').\n\n   * Hewlett-Packard has online documentation at\n     (`http://docs.hp.com/index.html').\n\n   * IBM has online documentation at\n     (`http://www.rs6000.ibm.com/resource/aix_resource/Pubs/').\n\n\u001f\nFile: libtool.info,  Node: Compilers,  Next: Reloadable objects,  Prev: References,  Up: Platform quirks\n\n15.3.2 Compilers\n----------------\n\nThe only compiler characteristics that affect libtool are the flags\nneeded (if any) to generate PIC objects.  In general, if a C compiler\nsupports certain PIC flags, then any derivative compilers support the\nsame flags.  Until there are some noteworthy exceptions to this rule,\nthis section will document only C compilers.\n\n   The following C compilers have standard command line options,\nregardless of the platform:\n\n`gcc'\n     This is the GNU C compiler, which is also the system compiler for\n     many free operating systems (FreeBSD, GNU/Hurd, GNU/Linux, Lites,\n     NetBSD, and OpenBSD, to name a few).\n\n     The `-fpic' or `-fPIC' flags can be used to generate\n     position-independent code.  `-fPIC' is guaranteed to generate\n     working code, but the code is slower on m68k, m88k, and Sparc\n     chips.  However, using `-fpic' on those chips imposes arbitrary\n     size limits on the shared libraries.\n\n   The rest of this subsection lists compilers by the operating system\nthat they are bundled with:\n\n`aix3*'\n`aix4*'\n     Most AIX compilers have no PIC flags, since AIX (with the\n     exception of AIX for IA-64) runs on PowerPC and RS/6000 chips. (1)\n\n`hpux10*'\n     Use `+Z' to generate PIC.\n\n`osf3*'\n     Digital/UNIX 3.x does not have PIC flags, at least not on the\n     PowerPC platform.\n\n`solaris2*'\n     Use `-KPIC' to generate PIC.\n\n`sunos4*'\n     Use `-PIC' to generate PIC.\n\n   ---------- Footnotes ----------\n\n   (1) All code compiled for the PowerPC and RS/6000 chips\n(`powerpc-*-*', `powerpcle-*-*', and `rs6000-*-*') is\nposition-independent, regardless of the operating system or compiler\nsuite.  So, \"regular objects\" can be used to build shared libraries on\nthese systems and no special PIC compiler flags are required.\n\n\u001f\nFile: libtool.info,  Node: Reloadable objects,  Next: Multiple dependencies,  Prev: Compilers,  Up: Platform quirks\n\n15.3.3 Reloadable objects\n-------------------------\n\nOn all known systems, a reloadable object can be created by running `ld\n-r -o OUTPUT.o INPUT1.o INPUT2.o'.  This reloadable object may be\ntreated as exactly equivalent to other objects.\n\n\u001f\nFile: libtool.info,  Node: Multiple dependencies,  Next: Archivers,  Prev: Reloadable objects,  Up: Platform quirks\n\n15.3.4 Multiple dependencies\n----------------------------\n\nOn most modern platforms the order in which dependent libraries are\nlisted has no effect on object generation.  In theory, there are\nplatforms that require libraries that provide missing symbols to other\nlibraries to be listed after those libraries whose symbols they provide.\n\n   Particularly, if a pair of static archives each resolve some of the\nother's symbols, it might be necessary to list one of those archives\nboth before and after the other one.  Libtool does not currently cope\nwith this situation well, since duplicate libraries are removed from\nthe link line by default.  Libtool provides the command line option\n`--preserve-dup-deps' to preserve all duplicate dependencies in cases\nwhere it is necessary.\n\n\u001f\nFile: libtool.info,  Node: Archivers,  Next: Cross compiling,  Prev: Multiple dependencies,  Up: Platform quirks\n\n15.3.5 Archivers\n----------------\n\nOn all known systems, building a static library can be accomplished by\nrunning `ar cru libNAME.a OBJ1.o OBJ2.o ...', where the `.a' file is\nthe output library, and each `.o' file is an object file.\n\n   On all known systems, if there is a program named `ranlib', then it\nmust be used to \"bless\" the created library before linking against it,\nwith the `ranlib libNAME.a' command.  Some systems, like Irix, use the\n`ar ts' command, instead.\n\n\u001f\nFile: libtool.info,  Node: Cross compiling,  Next: File name conversion,  Prev: Archivers,  Up: Platform quirks\n\n15.3.6 Cross compiling\n----------------------\n\nMost build systems support the ability to compile libraries and\napplications on one platform for use on a different platform, provided\na compiler capable of generating the appropriate output is available.\nIn such cross compiling scenarios, the platform on which the libraries\nor applications are compiled is called the \"build platform\", while the\nplatform on which the libraries or applications are intended to be used\nor executed is called the \"host platform\".  *note The GNU Build System:\n(automake)GNU Build System, of which libtool is a part, supports cross\ncompiling via arguments passed to the configure script: `--build=...'\nand `--host=...'. However, when the build platform and host platform\nare very different, libtool is required to make certain accommodations\nto support these scenarios.\n\n   In most cases, because the build platform and host platform differ,\nthe cross-compiled libraries and executables can't be executed or\ntested on the build platform where they were compiled.  The testsuites\nof most build systems will often skip any tests that involve executing\nsuch foreign executables when cross-compiling.  However, if the build\nplatform and host platform are sufficiently similar, it is often\npossible to run cross-compiled applications.  Libtool's own testsuite\noften attempts to execute cross-compiled tests, but will mark any\nfailures as _skipped_ since the failure might simply be due to the\ndifferences between the two platforms.\n\n   In addition to cases where the host platform and build platform are\nextremely similar (e.g. `i586-pc-linux-gnu' and `i686-pc-linux-gnu'),\nthere is another case in which cross-compiled host applications may be\nexecuted on the build platform.  This is possible when the build\nplatform supports an emulation or API-enhanced environment for the host\nplatform.  One example of this situation would be if the build platform\nwere MinGW, and the host platform were Cygwin (or vice versa).  Both of\nthese platforms can actually operate within a single Windows instance,\nso Cygwin applications can be launched from a MinGW context, and vice\nversa--provided certain care is taken.  Another example would be if the\nbuild platform were GNU/Linux on an x86 32bit processor, and the host\nplatform were MinGW.  In this situation, the Wine\n(http://www.winehq.org/) environment can be used to launch Windows\napplications from the GNU/Linux operating system; again, provided\ncertain care is taken.\n\n   One particular issue occurs when a Windows platform such as MinGW,\nCygwin, or MSYS is the host or build platform, while the other platform\nis a Unix-style system.  In these cases, there are often conflicts\nbetween the format of the file names and paths expected within host\nplatform libraries and executables, and those employed on the build\nplatform.\n\n   This situation is best described using a concrete example: suppose\nthe build platform is GNU/Linux with canonical triplet\n`i686-pc-linux-gnu'.  Suppose further that the host platform is MinGW\nwith canonical triplet `i586-pc-mingw32'.  On the GNU/Linux platform\nthere is a cross compiler following the usual naming conventions of\nsuch compilers, where the compiler name is prefixed by the host\ncanonical triplet (or suitable alias).  (For more information\nconcerning canonical triplets and platform aliases, see *note\nSpecifying Target Triplets: (autoconf)Specifying Target Triplets. and\n*note Canonicalizing: (autoconf)Canonicalizing.)  In this case, the C\ncompiler is named `i586-pc-mingw32-gcc'.\n\n   As described in *note Wrapper executables::, for the MinGW host\nplatform libtool uses a wrapper executable to set various environment\nvariables before launching the actual program executable.  Like the\nprogram executable, the wrapper executable is cross-compiled for the\nhost platform (that is, for MinGW).  As described above, ordinarily a\nhost platform executable cannot be executed on the build platform, but\nin this case the Wine environment could be used to launch the MinGW\napplication from GNU/Linux.  However, the wrapper executable, as a host\nplatform (MinGW) application, must set the `PATH' variable so that the\ntrue application's dependent libraries can be located--but the contents\nof the `PATH' variable must be structured for MinGW.  Libtool must use\nthe Wine file name mapping facilities to determine the correct value so\nthat the wrapper executable can set the `PATH' variable to point to the\ncorrect location.\n\n   For example, suppose we are compiling an application in `/var/tmp' on\nGNU/Linux, using separate source code and build directories:\n\n     `/var/tmp/foo-1.2.3/app/'          (application source code)\n     `/var/tmp/foo-1.2.3/lib/'          (library source code)\n     `/var/tmp/BUILD/app/'              (application build objects here)\n     `/var/tmp/BUILD/lib/'              (library build objects here)\n\n   Since the library will be built in `/var/tmp/BUILD/lib', the wrapper\nexecutable (which will be in `/var/tmp/BUILD/app') must add that\ndirectory to `PATH' (actually, it must add the directory named OBJDIR\nunder `/var/tmp/BUILD/lib', but we'll ignore that detail for now).\nHowever, Windows does not have a concept of Unix-style file or\ndirectory names such as `/var/tmp/BUILD/lib'.  Therefore, Wine provides\na mapping from Windows file names such as `C:\\Program Files' to specific\nUnix-style file names.  Wine also provides a utility that can be used\nto map Unix-style file names to Windows file names.\n\n   In this case, the wrapper executable should actually add the value\n\n     Z:\\var\\tmp\\BUILD\\lib\n\nto the `PATH'.  libtool contains support for path conversions of this\ntype, for a certain limited set of build and host platform\ncombinations. In this case, libtool will invoke Wine's `winepath'\nutility to ensure that the correct `PATH' value is used.  For more\ninformation, see *note File name conversion::.\n\n\u001f\nFile: libtool.info,  Node: File name conversion,  Next: Windows DLLs,  Prev: Cross compiling,  Up: Platform quirks\n\n15.3.7 File name conversion\n---------------------------\n\nIn certain situations, libtool must convert file names and paths between\nformats appropriate to different platforms.  Usually this occurs when\ncross-compiling, and affects only the ability to launch host platform\nexecutables on the build platform using an emulation or API-enhancement\nenvironment such as Wine.  Failure to convert paths (*note File Name\nConversion Failure::) will cause a warning to be issued, but rarely\ncauses the build to fail--and should have no affect on the compiled\nproducts, once installed properly on the host platform.  For more\ninformation, *note Cross compiling::.\n\n   However, file name conversion may also occur in another scenario:\nwhen using a Unix emulation system on Windows (such as Cygwin or MSYS),\ncombined with a native Windows compiler such as MinGW or MSVC.  Only a\nlimited set of such scenarios are currently supported; in other cases\nfile name conversion is skipped.  The lack of file name conversion\nusually means that uninstalled executables can't be launched, but only\nrarely causes the build to fail (*note File Name Conversion Failure::).\n\n   libtool supports file name conversion in the following scenarios:\n\nbuild platform     host platform      Notes\n--------------------------------------------------------------------------- \nMinGW (MSYS)       MinGW (Windows)    *note Native MinGW File Name\n                                      Conversion::\nCygwin             MinGW (Windows)    *note Cygwin/Windows File Name\n                                      Conversion::\nUnix + Wine        MinGW (Windows)    Requires Wine. *note Unix/Windows\n                                      File Name Conversion::\nMinGW (MSYS)       Cygwin             Requires `LT_CYGPATH'. *note\n                                      LT_CYGPATH::. Provided for testing\n                                      purposes only.\nUnix + Wine        Cygwin             Requires both Wine and\n                                      `LT_CYGPATH', but does not yet work\n                                      with Cygwin 1.7.7 and Wine-1.2.\n                                      See *note Unix/Windows File Name\n                                      Conversion:: and *note LT_CYGPATH::.\n\n* Menu:\n\n* File Name Conversion Failure::  What happens when file name conversion fails\n* Native MinGW File Name Conversion::  MSYS file name conversion idiosyncrasies\n* Cygwin/Windows File Name Conversion::  Using `cygpath' to convert Cygwin file names\n* Unix/Windows File Name Conversion::  Using Wine to convert Unix paths\n* LT_CYGPATH::                  Invoking `cygpath' from other environments\n* Cygwin to MinGW Cross::       Other notes concerning MinGW cross\n\n\u001f\nFile: libtool.info,  Node: File Name Conversion Failure,  Next: Native MinGW File Name Conversion,  Up: File name conversion\n\n15.3.7.1 File Name Conversion Failure\n.....................................\n\nIn most cases, file name conversion is not needed or attempted.\nHowever, when libtool detects that a specific combination of build and\nhost platform does require file name conversion, it is possible that\nthe conversion may fail.  In these cases, you may see a warning such as\nthe following:\n\n     Could not determine the host file name corresponding to\n       `... a file name ...'\n     Continuing, but uninstalled executables may not work.\n\nor\n\n     Could not determine the host path corresponding to\n       `... a path ...'\n     Continuing, but uninstalled executables may not work.\n\nThis should not cause the build to fail.  At worst, it means that the\nwrapper executable will specify file names or paths appropriate for the\nbuild platform.  Since those are not appropriate for the host platform,\nthe uninstalled executables would not operate correctly, even when the\nwrapper executable is launched via the appropriate emulation or\nAPI-enhancement (e.g. Wine).  Simply install the executables on the\nhost platform, and execute them there.\n\n\u001f\nFile: libtool.info,  Node: Native MinGW File Name Conversion,  Next: Cygwin/Windows File Name Conversion,  Prev: File Name Conversion Failure,  Up: File name conversion\n\n15.3.7.2 Native MinGW File Name Conversion\n..........................................\n\nMSYS is a Unix emulation environment for Windows, and is specifically\ndesigned such that in normal usage it _pretends_ to be MinGW or native\nWindows, but understands Unix-style file names and paths, and supports\nstandard Unix tools and shells.  Thus, \"native\" MinGW builds are\nactually an odd sort of cross-compile, from an MSYS Unix emulation\nenvironment \"pretending\" to be MinGW, to actual native Windows.\n\n   When an MSYS shell launches a native Windows executable (as opposed\nto other _MSYS_ executables), it uses a system of heuristics to detect\nany command-line arguments that contain file names or paths.  It\nautomatically converts these file names from the MSYS (Unix-like)\nformat, to the corresponding Windows file name, before launching the\nexecutable.  However, this auto-conversion facility is only available\nwhen using the MSYS runtime library.  The wrapper executable itself is\na MinGW application (that is, it does not use the MSYS runtime\nlibrary).  The wrapper executable must set `PATH' to, and call\n`_spawnv' with, values that have already been converted from MSYS\nformat to Windows.  Thus, when libtool writes the source code for the\nwrapper executable, it must manually convert MSYS paths to Windows\nformat, so that the Windows values can be hard-coded into the wrapper\nexecutable.\n\n\u001f\nFile: libtool.info,  Node: Cygwin/Windows File Name Conversion,  Next: Unix/Windows File Name Conversion,  Prev: Native MinGW File Name Conversion,  Up: File name conversion\n\n15.3.7.3 Cygwin/Windows File Name Conversion\n............................................\n\nCygwin provides a Unix emulation environment for Windows.  As part of\nthat emulation, it provides a file system mapping that presents the\nWindows file system in a Unix-compatible manner.  Cygwin also provides\na utility `cygpath' that can be used to convert file names and paths\nbetween the two representations.  In a correctly configured Cygwin\ninstallation, `cygpath' is always present, and is in the `PATH'.\n\n   Libtool uses `cygpath' to convert from Cygwin (Unix-style) file names\nand paths to Windows format when the build platform is Cygwin and the\nhost platform is MinGW.\n\n   When the host platform is Cygwin, but the build platform is MSYS or\nsome Unix system, libtool also uses `cygpath' to convert from Windows\nto Cygwin format (after first converting from the build platform format\nto Windows format; see *note Native MinGW File Name Conversion:: and\n*note Unix/Windows File Name Conversion::).  Because the build platform\nis not Cygwin, `cygpath' is not (and should not be) in the `PATH'.\nTherefore, in this configuration the environment variable `LT_CYGPATH'\nis required. *Note LT_CYGPATH::.\n\n\u001f\nFile: libtool.info,  Node: Unix/Windows File Name Conversion,  Next: LT_CYGPATH,  Prev: Cygwin/Windows File Name Conversion,  Up: File name conversion\n\n15.3.7.4 Unix/Windows File Name Conversion\n..........................................\n\nWine (http://www.winehq.org/) provides an interpretation environment for\nsome Unix platforms in which Windows applications can be executed.  It\nprovides a mapping between the Unix file system and a virtual Windows\nfile system used by the Windows programs.  For the file name conversion\nto work, Wine must be installed and properly configured on the build\nplatform, and the `winepath' application must be in the build\nplatform's `PATH'.  In addition, on 32bit GNU/Linux it is usually\nhelpful if the binfmt extension is enabled.\n\n\u001f\nFile: libtool.info,  Node: LT_CYGPATH,  Next: Cygwin to MinGW Cross,  Prev: Unix/Windows File Name Conversion,  Up: File name conversion\n\n15.3.7.5 LT_CYGPATH\n...................\n\nFor some cross-compile configurations (where the host platform is\nCygwin), the `cygpath' program is used to convert file names from the\nbuild platform notation to the Cygwin form (technically, this\nconversion is from Windows notation to Cygwin notation; the conversion\nfrom the build platform format to Windows notation is performed via\nother means).  However, because the `cygpath' program is not (and\nshould not be) in the `PATH' on the build platform, `LT_CYGPATH' must\nspecify the full build platform file name (that is, the full Unix or\nMSYS file name) of the `cygpath' program.\n\n   The reason `cygpath' should not be in the build platform `PATH' is\ntwofold: first, `cygpath' is usually installed in the same directory as\nmany other Cygwin executables, such as `sed', `cp', etc.  If the build\nplatform environment had this directory in its `PATH', then these\nCygwin versions of common Unix utilities might be used in preference to\nthe ones provided by the build platform itself, with deleterious\neffects.  Second, especially when Cygwin-1.7 or later is used, multiple\nCygwin installations can coexist within the same Windows instance.\nEach installation will have separate \"mount tables\" specified in\n`CYGROOT-N/etc/fstab'.  These \"mount tables\" control how that instance\nof Cygwin will map Windows file names and paths to Cygwin form.  Each\ninstallation's `cygpath' utility automatically deduces the appropriate\n`/etc/fstab' file.  Since each `CYGROOT-N/etc/fstab' mount table may\nspecify different mappings, it matters which `cygpath' is used.\n\n   Note that `cygpath' is a Cygwin application; to execute this tool\nfrom Unix requires a working and properly configured Wine installation,\nas well as enabling the GNU/Linux `binfmt' extension.  Furthermore, the\nCygwin `setup.exe' tool should have been used, via Wine, to properly\ninstall Cygwin into the Wine file system (and registry).\n\n   Unfortunately, Wine support for Cygwin is intermittent.  Recent\nreleases of Cygwin (1.7 and above) appear to require more Windows API\nsupport than Wine provides (as of Wine version 1.2); most Cygwin\napplications fail to execute.  This includes `cygpath' itself.  Hence,\nit is best _not_ to use the LT_CYGPATH machinery in libtool when\nperforming Unix to Cygwin cross-compiles.  Similarly, it is best _not_\nto enable the GNU/Linux binfmt support in this configuration, because\nwhile Wine will fail to execute the compiled Cygwin applications, it\nwill still exit with status zero.  This tends to confuse build systems\nand test suites (including libtool's own testsuite, resulting in\nspurious reported failures).  Wine support for the older Cygwin-1.5\nseries appears satisfactory, but the Cygwin team no longer supports\nCygwin-1.5.  It is hoped that Wine will eventually be improved such that\nCygwin-1.7 will again operate correctly under Wine.  Until then,\nlibtool will report warnings as described in *note File Name Conversion\nFailure:: in these scenarios.\n\n   However, `LT_CYGPATH' is also used for the MSYS to Cygwin cross\ncompile scenario, and operates as expected.\n\n\u001f\nFile: libtool.info,  Node: Cygwin to MinGW Cross,  Prev: LT_CYGPATH,  Up: File name conversion\n\n15.3.7.6 Cygwin to MinGW Cross\n..............................\n\nThere are actually three different scenarios that could all\nlegitimately be called a \"Cygwin to MinGW\" cross compile.  The current\n(and standard) definition is when there is a compiler that produces\nnative Windows libraries and applications, but which itself is a Cygwin\napplication, just as would be expected in any other cross compile setup.\n\n   However, historically there were two other definitions, which we\nwill refer to as the _fake_ one, and the _lying_ one.\n\n   In the _fake_ Cygwin to MinGW cross compile case, you actually use a\nnative MinGW compiler, but you do so from within a Cygwin environment:\n\n     export PATH=\"/c/MinGW/bin:${PATH}\"\n     configure --build=i686-pc-cygwin \\\n     \t--host=mingw32 \\\n     \tNM=/c/MinGW/bin/nm.exe\n\n   In this way, the build system \"knows\" that you are cross compiling,\nand the file name conversion logic will be used.  However, because the\ntools (`mingw32-gcc', `nm', `ar') used are actually native Windows\napplications, they will not understand any Cygwin (that is, Unix-like)\nabsolute file names passed as command line arguments (and, unlike MSYS,\nCygwin does not automatically convert such arguments).  However, so\nlong as only relative file names are used in the build system, and\nnon-Windows-supported Unix idioms such as symlinks and mount points are\navoided, this scenario should work.\n\n   If you must use absolute file names, you will have to force Libtool\nto convert file names for the toolchain in this case, by doing the\nfollowing before you run configure:\n\n     export lt_cv_to_tool_file_cmd=func_convert_file_cygwin_to_w32\n   \n   In the _lying_ Cygwin to MinGW cross compile case, you lie to the\nbuild system:\n\n     export PATH=\"/c/MinGW/bin:${PATH}\"\n     configure --build=i686-pc-mingw32 \\\n     \t--host=i686-pc-mingw32 \\\n     \t--disable-dependency-tracking\n\nand claim that the build platform is MinGW, even though you are actually\nrunning under _Cygwin_ and not MinGW.  In this case, libtool does _not_\nknow that you are performing a cross compile, and thinks instead that\nyou are performing a native MinGW build.  However, as described in\n(*note Native MinGW File Name Conversion::), that scenario triggers an\n\"MSYS to Windows\" file name conversion.  This, of course, is the wrong\nconversion since we are actually running under Cygwin.  Also, the\ntoolchain is expecting Windows file names (not Cygwin) but unless told\nso Libtool will feed Cygwin file names to the toolchain in this case.\nTo force the correct file name conversions in this situation, you\nshould do the following _before_ running configure:\n\n     export lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32\n     export lt_cv_to_tool_file_cmd=func_convert_file_cygwin_to_w32\n   \n   Note that this relies on internal implementation details of libtool,\nand is subject to change.  Also, `--disable-dependency-tracking' is\nrequired, because otherwise the MinGW GCC will generate dependency\nfiles that contain Windows file names.  This, in turn, will confuse the\nCygwin `make' program, which does not accept Windows file names:\n\n     Makefile:1: *** target pattern contains no `%'.  Stop.\n\n   There have also always been a number of other details required for\nthe _lying_ case to operate correctly, such as the use of so-called\n\"identity mounts\":\n\n     # CYGWIN-ROOT/etc/fstab\n     D:/foo    /foo     some_fs binary 0 0\n     D:/bar    /bar     some_fs binary 0 0\n     E:/grill  /grill   some_fs binary 0 0\n\n   In this way, top-level directories of each drive are available using\nidentical names within Cygwin.\n\n   Note that you also need to ensure that the standard Unix directories\n(like `/bin', `/lib', `/usr', `/etc') appear in the root of a drive.\nThis means that you must install Cygwin itself into the `C:/' root\ndirectory (or `D:/', or `E:/', etc)--instead of the recommended\ninstallation into `C:/cygwin/'.  In addition, all file names used in\nthe build system must be relative, symlinks should not be used within\nthe source or build directory trees, and all `-M*' options to `gcc'\nexcept `-MMD' must be avoided.\n\n   This is quite a fragile setup, but it has been in historical use,\nand so is documented here.\n\n\u001f\nFile: libtool.info,  Node: Windows DLLs,  Prev: File name conversion,  Up: Platform quirks\n\n15.3.8 Windows DLLs\n-------------------\n\nThis topic describes a couple of ways to portably create Windows Dynamic\nLink Libraries (DLLs).  Libtool knows how to create DLLs using GNU tools\nand using Microsoft tools.\n\n   A typical library has a \"hidden\" implementation with an interface\ndescribed in a header file.  On just about every system, the interface\ncould be something like this:\n\n   Example `foo.h':\n\n     #ifndef FOO_H\n     #define FOO_H\n\n     int one (void);\n     int two (void);\n     extern int three;\n\n     #endif /* FOO_H */\n\nAnd the implementation could be something like this:\n\n   Example `foo.c':\n\n     #include \"foo.h\"\n\n     int one (void)\n     {\n       return 1;\n     }\n\n     int two (void)\n     {\n       return three - one ();\n     }\n\n     int three = 3;\n\n   When using contemporary GNU tools to create the Windows DLL, the\nabove code will work there too, thanks to its auto-import/auto-export\nfeatures.  But that is not the case when using older GNU tools or\nperhaps more interestingly when using proprietary tools.  In those\ncases the code will need additional decorations on the interface\nsymbols with `__declspec(dllimport)' and `__declspec(dllexport)'\ndepending on whether the library is built or it's consumed and how it's\nbuilt and consumed.  However, it should be noted that it would have\nworked also with Microsoft tools, if only the variable `three' hadn't\nbeen there, due to the fact the Microsoft tools will automatically\nimport functions (but sadly not variables) and Libtool will\nautomatically export non-static symbols as described next.\n\n   With Microsoft tools, Libtool digs through the object files that\nmake up the library, looking for non-static symbols to automatically\nexport.  I.e., Libtool with Microsoft tools tries to mimic the\nauto-export feature of contemporary GNU tools.  It should be noted that\nthe GNU auto-export feature is turned off when an explicit\n`__declspec(dllexport)' is seen.  The GNU tools do this to not make\nmore symbols visible for projects that have already taken the trouble\nto decorate symbols.  There is no similar way to limit which symbols\nare visible in the code when Libtool is using Microsoft tools.  In\norder to limit symbol visibility in that case you need to use one of\nthe options `-export-symbols' or `-export-symbols-regex'.\n\n   No matching help with auto-import is provided by Libtool, which is\nwhy variables must be decorated to import them from a DLL for\neverything but contemporary GNU tools.  As stated above, functions are\nautomatically imported by both contemporary GNU tools and Microsoft\ntools, but for other proprietary tools the auto-import status of\nfunctions is unknown.\n\n   When the objects that form the library are built, there are generally\ntwo copies built for each object.  One copy is used when linking the DLL\nand one copy is used for the static library.  On Windows systems, a pair\nof defines are commonly used to discriminate how the interface symbols\nshould be decorated.  The first define is `-DDLL_EXPORT' which is\nautomatically provided by Libtool when `libtool' builds the copy of the\nobject that is destined for the DLL.  The second define is\n`-DLIBFOO_BUILD' (or similar) which is often added by the package\nproviding the library and is used when building the library, but not\nwhen consuming the library.\n\n   However, the matching double compile is not performed when consuming\nlibraries.  It is therefore not possible to reliably distinguish if the\nconsumer is importing from a DLL or if it is going to use a static\nlibrary.\n\n   With contemporary GNU tools, auto-import often saves the day, but see\nthe GNU ld documentation and its `--enable-auto-import' option for some\ncorner cases when it does not (*note `--enable-auto-import':\n(ld)Options.).\n\n   With Microsoft tools you typically get away with always compiling the\ncode such that variables are expected to be imported from a DLL and\nfunctions are expected to be found in a static library.  The tools will\nthen automatically import the function from a DLL if that is where they\nare found.  If the variables are not imported from a DLL as expected,\nbut are found in a static library that is otherwise pulled in by some\nfunction, the linker will issue a warning (LNK4217) that a locally\ndefined symbol is imported, but it still works.  In other words, this\nscheme will not work to only consume variables from a library.  There is\nalso a price connected to this liberal use of imports in that an extra\nindirection is introduced when you are consuming the static version of\nthe library.  That extra indirection is unavoidable when the DLL is\nconsumed, but it is not needed when consuming the static library.\n\n   For older GNU tools and other proprietary tools there is no generic\nway to make it possible to consume either of the DLL or the static\nlibrary without user intervention, the tools need to be told what is\nintended.  One common assumption is that if a DLL is being built\n(`DLL_EXPORT' is defined) then that DLL is going to consume any\ndependent libraries as DLLs.  If that assumption is made everywhere, it\nis possible to select how an end-user application is consuming\nlibraries by adding a single flag `-DDLL_EXPORT' when a DLL build is\nrequired.  This is of course an all or nothing deal, either everything\nas DLLs or everything as static libraries.\n\n   To sum up the above, the header file of the foo library needs to be\nchanged into something like this:\n\n   Modified `foo.h':\n\n     #ifndef FOO_H\n     #define FOO_H\n\n     #if defined _WIN32 && !defined __GNUC__\n     # ifdef LIBFOO_BUILD\n     #  ifdef DLL_EXPORT\n     #   define LIBFOO_SCOPE            __declspec (dllexport)\n     #   define LIBFOO_SCOPE_VAR extern __declspec (dllexport)\n     #  endif\n     # elif defined _MSC_VER\n     #  define LIBFOO_SCOPE\n     #  define LIBFOO_SCOPE_VAR  extern __declspec (dllimport)\n     # elif defined DLL_EXPORT\n     #  define LIBFOO_SCOPE             __declspec (dllimport)\n     #  define LIBFOO_SCOPE_VAR  extern __declspec (dllimport)\n     # endif\n     #endif\n     #ifndef LIBFOO_SCOPE\n     # define LIBFOO_SCOPE\n     # define LIBFOO_SCOPE_VAR extern\n     #endif\n\n     LIBFOO_SCOPE     int one (void);\n     LIBFOO_SCOPE     int two (void);\n     LIBFOO_SCOPE_VAR int three;\n\n     #endif /* FOO_H */\n\n   When the targets are limited to contemporary GNU tools and Microsoft\ntools, the above can be simplified to the following:\n\n   Simplified `foo.h':\n\n     #ifndef FOO_H\n     #define FOO_H\n\n     #if defined _WIN32 && !defined __GNUC__ && !defined LIBFOO_BUILD\n     # define LIBFOO_SCOPE_VAR extern __declspec (dllimport)\n     #else\n     # define LIBFOO_SCOPE_VAR extern\n     #endif\n\n     int one (void);\n     int two (void);\n     LIBFOO_SCOPE_VAR int three;\n\n     #endif /* FOO_H */\n\n   This last simplified version can of course only work when Libtool is\nused to build the DLL, as no symbols would be exported otherwise (i.e.,\nwhen using Microsoft tools).\n\n   It should be noted that there are various projects that attempt to\nrelax these requirements by various low level tricks, but they are not\ndiscussed here.  Examples are FlexDLL\n(http://alain.frisch.fr/flexdll.html) and edll\n(http://edll.sourceforge.net/).\n\n\u001f\nFile: libtool.info,  Node: libtool script contents,  Next: Cheap tricks,  Prev: Platform quirks,  Up: Maintaining\n\n15.4 `libtool' script contents\n==============================\n\nSince version 1.4, the `libtool' script is generated by `configure'\n(*note Configuring::).  In earlier versions, `configure' achieved this\nby calling a helper script called `ltconfig'.  From libtool version 0.7\nto 1.0, this script simply set shell variables, then sourced the\nlibtool backend, `ltmain.sh'.  `ltconfig' from libtool version 1.1\nthrough 1.3 inlined the contents of `ltmain.sh' into the generated\n`libtool', which improved performance on many systems.  The tests that\n`ltconfig' used to perform are now kept in `libtool.m4' where they can\nbe written using Autoconf.  This has the runtime performance benefits\nof inlined `ltmain.sh', _and_ improves the build time a little while\nconsiderably easing the amount of raw shell code that used to need\nmaintaining.\n\n   The convention used for naming variables that hold shell commands for\ndelayed evaluation, is to use the suffix `_cmd' where a single line of\nvalid shell script is needed, and the suffix `_cmds' where multiple\nlines of shell script *may* be delayed for later evaluation.  By\nconvention, `_cmds' variables delimit the evaluation units with the `~'\ncharacter where necessary.\n\n   Here is a listing of each of the configuration variables, and how\nthey are used within `ltmain.sh' (*note Configuring::):\n\n -- Variable: AR\n     The name of the system library archiver.\n\n -- Variable: CC\n     The name of the compiler used to configure libtool.  This will\n     always contain the compiler for the current language (*note\n     Tags::).\n\n -- Variable: ECHO\n     An `echo' program that does not interpret backslashes as an escape\n     character.  It may be given only one argument, so due quoting is\n     necessary.\n\n -- Variable: LD\n     The name of the linker that libtool should use internally for\n     reloadable linking and possibly shared libraries.\n\n -- Variable: LTCC\n -- Variable: LTCFLAGS\n     The name of the C compiler and C compiler flags used to configure\n     libtool.\n\n -- Variable: NM\n     The name of a BSD- or MS-compatible program that produces listings\n     of global symbols.  For BSD `nm', the symbols should be in one the\n     following formats:\n\n          ADDRESS C GLOBAL-VARIABLE-NAME\n          ADDRESS D GLOBAL-VARIABLE-NAME\n          ADDRESS T GLOBAL-FUNCTION-NAME\n\n     For MS `dumpbin', the symbols should be in one of the following\n     formats:\n\n          COUNTER SIZE    UNDEF    notype       External     | GLOBAL-VAR\n          COUNTER ADDRESS SECTION  notype       External     | GLOBAL-VAR\n          COUNTER ADDRESS SECTION  notype ()    External     | GLOBAL-FUNC\n\n     The SIZE of the global variables are not zero and the SECTION of\n     the global functions are not \"UNDEF\". Symbols in \"pick any\"\n     sections (\"pick any\" appears in the section header) are not global\n     either.\n\n -- Variable: RANLIB\n     Set to the name of the `ranlib' program, if any.\n\n -- Variable: allow_undefined_flag\n     The flag that is used by `archive_cmds' in order to declare that\n     there will be unresolved symbols in the resulting shared library.\n     Empty, if no such flag is required.  Set to `unsupported' if there\n     is no way to generate a shared library with references to symbols\n     that aren't defined in that library.\n\n -- Variable: always_export_symbols\n     Whether libtool should automatically generate a list of exported\n     symbols using `export_symbols_cmds' before linking an archive.\n     Set to `yes' or `no'.  Default is `no'.\n\n -- Variable: archive_cmds\n -- Variable: archive_expsym_cmds\n -- Variable: old_archive_cmds\n     Commands used to create shared libraries, shared libraries with\n     `-export-symbols' and static libraries, respectively.\n\n -- Variable: archiver_list_spec\n     Specify filename containing input files for `AR'.\n\n -- Variable: old_archive_from_new_cmds\n     If the shared library depends on a static library,\n     `old_archive_from_new_cmds' contains the commands used to create\n     that static library.  If this variable is not empty,\n     `old_archive_cmds' is not used.\n\n -- Variable: old_archive_from_expsyms_cmds\n     If a static library must be created from the export symbol list in\n     order to correctly link with a shared library,\n     `old_archive_from_expsyms_cmds' contains the commands needed to\n     create that static library.  When these commands are executed, the\n     variable `soname' contains the name of the shared library in\n     question, and the `$objdir/$newlib' contains the path of the\n     static library these commands should build.  After executing these\n     commands, libtool will proceed to link against `$objdir/$newlib'\n     instead of `soname'.\n\n -- Variable: lock_old_archive_extraction\n     Set to `yes' if the extraction of a static library requires locking\n     the library file.  This is required on Darwin.\n\n -- Variable: build\n -- Variable: build_alias\n -- Variable: build_os\n     Set to the specified and canonical names of the system that\n     libtool was built on.\n\n -- Variable: build_libtool_libs\n     Whether libtool should build shared libraries on this system.  Set\n     to `yes' or `no'.\n\n -- Variable: build_old_libs\n     Whether libtool should build static libraries on this system.  Set\n     to `yes' or `no'.\n\n -- Variable: compiler_c_o\n     Whether the compiler supports the `-c' and `-o' options\n     simultaneously.  Set to `yes' or `no'.\n\n -- Variable: compiler_needs_object\n     Whether the compiler has to see an object listed on the command\n     line in order to successfully invoke the linker.  If `no', then a\n     set of convenience archives or a set of object file names can be\n     passed via linker-specific options or linker scripts.\n\n -- Variable: dlopen_support\n     Whether `dlopen' is supported on the platform.  Set to `yes' or\n     `no'.\n\n -- Variable: dlopen_self\n     Whether it is possible to `dlopen' the executable itself.  Set to\n     `yes' or `no'.\n\n -- Variable: dlopen_self_static\n     Whether it is possible to `dlopen' the executable itself, when it\n     is linked statically (`-all-static').  Set to `yes' or `no'.\n\n -- Variable: exclude_expsyms\n     List of symbols that should not be listed in the preloaded symbols.\n\n -- Variable: export_dynamic_flag_spec\n     Compiler link flag that allows a dlopened shared library to\n     reference symbols that are defined in the program.\n\n -- Variable: export_symbols_cmds\n     Commands to extract exported symbols from `libobjs' to the file\n     `export_symbols'.\n\n -- Variable: extract_expsyms_cmds\n     Commands to extract the exported symbols list from a shared\n     library.  These commands are executed if there is no file\n     `$objdir/$soname-def', and should write the names of the exported\n     symbols to that file, for the use of\n     `old_archive_from_expsyms_cmds'.\n\n -- Variable: fast_install\n     Determines whether libtool will privilege the installer or the\n     developer.  The assumption is that installers will seldom run\n     programs in the build tree, and the developer will seldom install.\n     This is only meaningful on platforms where\n     `shlibpath_overrides_runpath' is not `yes', so `fast_install' will\n     be set to `needless' in this case.  If `fast_install' set to\n     `yes', libtool will create programs that search for installed\n     libraries, and, if a program is run in the build tree, a new copy\n     will be linked on-demand to use the yet-to-be-installed libraries.\n     If set to `no', libtool will create programs that use the\n     yet-to-be-installed libraries, and will link a new copy of the\n     program at install time.  The default value is `yes' or\n     `needless', depending on platform and configuration flags, and it\n     can be turned from `yes' to `no' with the configure flag\n     `--disable-fast-install'.\n\n     On some systems, the linker always hardcodes paths to dependent\n     libraries into the output.  In this case, `fast_install' is never\n     set to `yes', and relinking at install time is triggered.  This\n     also means that `DESTDIR' installation does not work as expected.\n\n -- Variable: file_magic_glob\n     How to find potential files when `deplibs_check_method' is\n     `file_magic'. `file_magic_glob' is a `sed' expression, and the\n     `sed' instance is fed potential file names that are transformed by\n     the `file_magic_glob' expression. Useful when the shell does not\n     support the shell option `nocaseglob', making `want_nocaseglob'\n     inappropriate. Normally disabled (i.e.  `file_magic_glob' is\n     empty).\n\n -- Variable: finish_cmds\n     Commands to tell the dynamic linker how to find shared libraries\n     in a specific directory.\n\n -- Variable: finish_eval\n     Same as `finish_cmds', except the commands are not displayed.\n\n -- Variable: global_symbol_pipe\n     A pipeline that takes the output of `NM', and produces a listing of\n     raw symbols followed by their C names.  For example:\n\n          $ eval \"$NM progname | $global_symbol_pipe\"\n          D SYMBOL1 C-SYMBOL1\n          T SYMBOL2 C-SYMBOL2\n          C SYMBOL3 C-SYMBOL3\n          ...\n          $\n\n     The first column contains the symbol type (used to tell data from\n     code) but its meaning is system dependent.\n\n -- Variable: global_symbol_to_cdecl\n     A pipeline that translates the output of `global_symbol_pipe' into\n     proper C declarations.  Since some platforms, such as HP/UX, have\n     linkers that differentiate code from data, data symbols are\n     declared as data, and code symbols are declared as functions.\n\n -- Variable: hardcode_action\n     Either `immediate' or `relink', depending on whether shared\n     library paths can be hardcoded into executables before they are\n     installed, or if they need to be relinked.\n\n -- Variable: hardcode_direct\n     Set to `yes' or `no', depending on whether the linker hardcodes\n     directories if a library is directly specified on the command line\n     (such as `DIR/libNAME.a') when `hardcode_libdir_flag_spec' is\n     specified.\n\n -- Variable: hardcode_direct_absolute\n     Some architectures hardcode \"absolute\" library directories that\n     can not be overridden by `shlibpath_var' when `hardcode_direct' is\n     `yes'.  In that case set `hardcode_direct_absolute' to `yes', or\n     otherwise `no'.\n\n -- Variable: hardcode_into_libs\n     Whether the platform supports hardcoding of run-paths into\n     libraries.  If enabled, linking of programs will be much simpler\n     but libraries will need to be relinked during installation.  Set\n     to `yes' or `no'.\n\n -- Variable: hardcode_libdir_flag_spec\n     Flag to hardcode a `libdir' variable into a binary, so that the\n     dynamic linker searches `libdir' for shared libraries at runtime.\n     If it is empty, libtool will try to use some other hardcoding\n     mechanism.\n\n -- Variable: hardcode_libdir_separator\n     If the compiler only accepts a single `hardcode_libdir_flag', then\n     this variable contains the string that should separate multiple\n     arguments to that flag.\n\n -- Variable: hardcode_minus_L\n     Set to `yes' or `no', depending on whether the linker hardcodes\n     directories specified by `-L' flags into the resulting executable\n     when `hardcode_libdir_flag_spec' is specified.\n\n -- Variable: hardcode_shlibpath_var\n     Set to `yes' or `no', depending on whether the linker hardcodes\n     directories by writing the contents of `$shlibpath_var' into the\n     resulting executable when `hardcode_libdir_flag_spec' is\n     specified.  Set to `unsupported' if directories specified by\n     `$shlibpath_var' are searched at run time, but not at link time.\n\n -- Variable: host\n -- Variable: host_alias\n -- Variable: host_os\n     Set to the specified and canonical names of the system that\n     libtool was configured for.\n\n -- Variable: include_expsyms\n     List of symbols that must always be exported when using\n     `export_symbols'.\n\n -- Variable: inherit_rpath\n     Whether the linker adds runtime paths of dependency libraries to\n     the runtime path list, requiring libtool to relink the output when\n     installing.  Set to `yes' or `no'.  Default is `no'.\n\n -- Variable: install_override_mode\n     Permission mode override for installation of shared libraries.  If\n     the runtime linker fails to load libraries with wrong permissions,\n     then it may fail to execute programs that are needed during\n     installation, because these need the library that has just been\n     installed.  In this case, it is necessary to pass the mode to\n     `install' with `-m INSTALL_OVERRIDE_MODE'.\n\n -- Variable: libext\n     The standard old archive suffix (normally `a').\n\n -- Variable: libname_spec\n     The format of a library name prefix.  On all Unix systems, static\n     libraries are called `libNAME.a', but on some systems (such as\n     OS/2 or MS-DOS), the library is just called `NAME.a'.\n\n -- Variable: library_names_spec\n     A list of shared library names.  The first is the name of the file,\n     the rest are symbolic links to the file.  The name in the list is\n     the file name that the linker finds when given `-lNAME'.\n\n -- Variable: link_all_deplibs\n     Whether libtool must link a program against all its dependency\n     libraries.  Set to `yes' or `no'.  Default is `unknown', which is\n     a synonym for `yes'.\n\n -- Variable: link_static_flag\n     Linker flag (passed through the C compiler) used to prevent dynamic\n     linking.\n\n -- Variable: macro_version\n -- Variable: macro_revision\n     The release and revision from which the libtool.m4 macros were\n     taken.  This is used to ensure that macros and `ltmain.sh'\n     correspond to the same Libtool version.\n\n -- Variable: max_cmd_len\n     The approximate longest command line that can be passed to `$SHELL'\n     without being truncated, as computed by `LT_CMD_MAX_LEN'.\n\n -- Variable: need_lib_prefix\n     Whether we can `dlopen' modules without a `lib' prefix.  Set to\n     `yes' or `no'.  By default, it is `unknown', which means the same\n     as `yes', but documents that we are not really sure about it.\n     `no' means that it is possible to `dlopen' a module without the\n     `lib' prefix.\n\n -- Variable: need_version\n     Whether versioning is required for libraries, i.e. whether the\n     dynamic linker requires a version suffix for all libraries.  Set\n     to `yes' or `no'.  By default, it is `unknown', which means the\n     same as `yes', but documents that we are not really sure about it.\n\n -- Variable: need_locks\n     Whether files must be locked to prevent conflicts when compiling\n     simultaneously.  Set to `yes' or `no'.\n\n -- Variable: nm_file_list_spec\n     Specify filename containing input files for `NM'.\n\n -- Variable: no_builtin_flag\n     Compiler flag to disable builtin functions that conflict with\n     declaring external global symbols as `char'.\n\n -- Variable: no_undefined_flag\n     The flag that is used by `archive_cmds' in order to declare that\n     there will be no unresolved symbols in the resulting shared\n     library.  Empty, if no such flag is required.\n\n -- Variable: objdir\n     The name of the directory that contains temporary libtool files.\n\n -- Variable: objext\n     The standard object file suffix (normally `o').\n\n -- Variable: pic_flag\n     Any additional compiler flags for building library object files.\n\n -- Variable: postinstall_cmds\n -- Variable: old_postinstall_cmds\n     Commands run after installing a shared or static library,\n     respectively.\n\n -- Variable: postuninstall_cmds\n -- Variable: old_postuninstall_cmds\n     Commands run after uninstalling a shared or static library,\n     respectively.\n\n -- Variable: postlink_cmds\n     Commands necessary for finishing linking programs. `postlink_cmds'\n     are executed immediately after the program is linked.  Any\n     occurrence of the string `@OUTPUT@' in `postlink_cmds' is replaced\n     by the name of the created executable (i.e. not the wrapper, if a\n     wrapper is generated) prior to execution.  Similarly,\n     `@TOOL_OUTPUT@' is replaced by the toolchain format of `@OUTPUT@'.\n     Normally disabled (i.e. `postlink_cmds' empty).\n\n -- Variable: reload_cmds\n -- Variable: reload_flag\n     Commands to create a reloadable object.  Set `reload_cmds' to\n     `false' on systems that cannot create reloadable objects.\n\n -- Variable: runpath_var\n     The environment variable that tells the linker which directories to\n     hardcode in the resulting executable.\n\n -- Variable: shlibpath_overrides_runpath\n     Indicates whether it is possible to override the hard-coded library\n     search path of a program with an environment variable.  If this is\n     set to no, libtool may have to create two copies of a program in\n     the build tree, one to be installed and one to be run in the build\n     tree only.  When each of these copies is created depends on the\n     value of `fast_install'.  The default value is `unknown', which is\n     equivalent to `no'.\n\n -- Variable: shlibpath_var\n     The environment variable that tells the dynamic linker where to\n     find shared libraries.\n\n -- Variable: soname_spec\n     The name coded into shared libraries, if different from the real\n     name of the file.\n\n -- Variable: striplib\n -- Variable: old_striplib\n     Command to strip a shared (`striplib') or static (`old_striplib')\n     library, respectively.  If these variables are empty, the strip\n     flag in the install mode will be ignored for libraries (*note\n     Install mode::).\n\n -- Variable: sys_lib_dlsearch_path_spec\n     Expression to get the run-time system library search path.\n     Directories that appear in this list are never hard-coded into\n     executables.\n\n -- Variable: sys_lib_search_path_spec\n     Expression to get the compile-time system library search path.\n     This variable is used by libtool when it has to test whether a\n     certain library is shared or static.  The directories listed in\n     `shlibpath_var' are automatically appended to this list, every time\n     libtool runs (i.e., not at configuration time), because some\n     linkers use this variable to extend the library search path.\n     Linker switches such as `-L' also augment the search path.\n\n -- Variable: thread_safe_flag_spec\n     Linker flag (passed through the C compiler) used to generate\n     thread-safe libraries.\n\n -- Variable: to_host_file_cmd\n     If the toolchain is not native to the build platform (e.g. if you\n     are using MSYS to drive the scripting, but are using the MinGW\n     native Windows compiler) this variable describes how to convert\n     file names from the format used by the build platform to the\n     format used by host platform.  Normally set to\n     `func_convert_file_noop', libtool will autodetect most cases in\n     which other values should be used.  On rare occasions, it may be\n     necessary to override the autodetected value (*note Cygwin to\n     MinGW Cross::).\n\n -- Variable: to_tool_file_cmd\n     If the toolchain is not native to the build platform (e.g. if you\n     are using some Unix to drive the scripting together with a Windows\n     toolchain running in Wine) this variable describes how to convert\n     file names from the format used by the build platform to the\n     format used by the toolchain.  Normally set to\n     `func_convert_file_noop'.\n\n -- Variable: version_type\n     The library version numbering type.  One of `libtool',\n     `freebsd-aout', `freebsd-elf', `irix', `linux', `osf', `sunos',\n     `windows', or `none'.\n\n -- Variable: want_nocaseglob\n     Find potential files using the shell option `nocaseglob', when\n     `deplibs_check_method' is `file_magic'. Normally set to `no'. Set\n     to `yes' to enable the `nocaseglob' shell option when looking for\n     potential file names in a case-insensitive manner.\n\n -- Variable: whole_archive_flag_spec\n     Compiler flag to generate shared objects from convenience archives.\n\n -- Variable: wl\n     The C compiler flag that allows libtool to pass a flag directly to\n     the linker.  Used as: `${wl}SOME-FLAG'.\n\n   Variables ending in `_cmds' or `_eval' contain a `~'-separated list\nof commands that are `eval'ed one after another.  If any of the\ncommands return a nonzero exit status, libtool generally exits with an\nerror message.\n\n   Variables ending in `_spec' are `eval'ed before being used by\nlibtool.\n\n\u001f\nFile: libtool.info,  Node: Cheap tricks,  Prev: libtool script contents,  Up: Maintaining\n\n15.5 Cheap tricks\n=================\n\nHere are a few tricks that you can use in order to make maintainership\neasier:\n\n   * When people report bugs, ask them to use the `--config',\n     `--debug', or `--features' flags, if you think they will help you.\n     These flags are there to help you get information directly, rather\n     than having to trust second-hand observation.\n\n   * Rather than reconfiguring libtool every time I make a change to\n     `ltmain.in', I keep a permanent `libtool' script in my `PATH',\n     which sources `ltmain.in' directly.\n\n     The following steps describe how to create such a script, where\n     `/home/src/libtool' is the directory containing the libtool source\n     tree, `/home/src/libtool/libtool' is a libtool script that has been\n     configured for your platform, and `~/bin' is a directory in your\n     `PATH':\n\n          trick$ cd ~/bin\n          trick$ sed 's%^\\(macro_version=\\).*$%\\1@VERSION@%;\n                      s%^\\(macro_revision=\\).*$%\\1@package_revision@%;\n                      /^# ltmain\\.sh/q' /home/src/libtool/libtool > libtool\n          trick$ echo '. /home/src/libtool/ltmain.in' >> libtool\n          trick$ chmod +x libtool\n          trick$ libtool --version\n          ltmain.sh (GNU @PACKAGE@@TIMESTAMP@) @VERSION@\n\n          Copyright (C) 2011 Free Software Foundation, Inc.\n          This is free software; see the source for copying conditions.  There is NO\n          warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n          trick$\n\n   The output of the final `libtool --version' command shows that the\n`ltmain.in' script is being used directly.  Now, modify `~/bin/libtool'\nor `/home/src/libtool/ltmain.in' directly in order to test new changes\nwithout having to rerun `configure'.\n\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/ChangeLog.1997",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/ChangeLog.1998",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/ChangeLog.1999",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-2.4.2-sxwzdb5m73bsczjwmmyahdehl3jni5d3/spack-src/ChangeLog.2002"
    ],
    "total_files": 375
}