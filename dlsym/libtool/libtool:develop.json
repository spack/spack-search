{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/tests/resident.at": "# resident.at -- test resident modules              -*- Autotest -*-\n\n#   Copyright (C) 2010-2019 Free Software Foundation, Inc.\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\n# Ensure resident modules are not unloaded at program exit:\n# they need to be able to invoke atexit handlers.\n\nAT_SETUP([resident modules])\nAT_KEYWORDS([libltdl])\n\nAT_DATA([main.c],\n[[#include <ltdl.h>\n#include <stdio.h>\n\nint\nmain (int argc, char* argv[])\n{\n  int err = 0;\n  lt_dlhandle plugin_handle;\n  lt_dladvise advise;\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n\n  if (argc < 2)\n    {\n      fprintf (stderr, \"usage: %s plugin\\n\", argv[0]);\n      return 1;\n    }\n\n  lt_dlinit ();\n  if (lt_dladvise_init (&advise) != 0\n      || lt_dladvise_ext (&advise) != 0\n      || lt_dladvise_resident (&advise) != 0)\n    {\n      printf (\"advise failure: %s\\n\", lt_dlerror ());\n      err = 1;\n    }\n  else\n    {\n      plugin_handle = lt_dlopenadvise (argv[1], advise);\n      if (NULL != plugin_handle)\n\t{\n\t  int (*pf) (void);\n\t  printf (\"plugin opened successfully!\\n\");\n\t  pf = (int (*) (void)) lt_dlsym (plugin_handle, \"setup_plugin\");\n\t  if (pf)\n\t    pf ();\n\t  else\n\t    {\n\t      printf (\"dlsym failure: %s\\n\", lt_dlerror ());\n\t      err = 1;\n\t    }\n\t  if (!lt_dlisresident (plugin_handle))\n\t    {\n\t      printf (\"module wrongly not marked resident\\n\");\n\t      err = 1;\n\t    }\n\t  if (lt_dlclose (plugin_handle) != 0)\n\t    {\n\t      printf (\"close failure (expected): %s\\n\", lt_dlerror ());\n\t    }\n\t  else\n\t    {\n\t      printf (\"wrongly closed resident module\\n\");\n\t      err = 1;\n\t    }\n\t}\n      else\n\t{\n\t  printf (\"plugin failed to open: %s\\n\", lt_dlerror ());\n\t  err = 1;\n\t}\n      if (lt_dladvise_destroy (&advise) != 0)\n\t{\n\t  printf (\"advise destroy failure: %s\\n\", lt_dlerror ());\n\t  err = 1;\n\t}\n    }\n  lt_dlexit ();\n  return err;\n}\n]])\n\nAT_DATA([plugin.c],\n[[#include <stdlib.h>\n#include <stdio.h>\n\nvoid\nbye (void)\n{\n  puts (\"called from atexit handler\");\n}\n\n#ifdef __cplusplus\nextern \"C\"\n#endif\nint\nsetup_plugin (void)\n{\n  atexit (bye);\n}\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f \"$LIBLTDL\" || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS -no-undefined\"\ninst=`pwd`/inst\nlibdir=$inst/lib\n\nAT_CHECK([$CC $CPPFLAGS $CFLAGS -c main.c], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c plugin.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o plugin.la -rpath $libdir ]dnl\n\t [-module -avoid-version plugin.lo], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o main$EXEEXT main.$OBJEXT ]dnl\n\t [-dlopen plugin.la $LIBLTDL],\n\t [], [ignore], [ignore])\nLT_AT_EXEC_CHECK([./main], [], [stdout], [ignore], [./plugin.la])\nAT_CHECK([$GREP 'called from atexit handler' stdout], [], [ignore])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/tests/configure-iface.at": "# configure-iface.at -- test ltdl configure interface         -*- Autotest -*-\n#\n#   Copyright (C) 2007-2008, 2011-2019 Free Software Foundation, Inc.\n#   Written by Gary V. Vaughan, 2007\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_BANNER([configure interface to libltdl.])\n\n# _LT_AT_LTDL_SETUP\n# -----------------\nm4_pushdef([_LT_AT_LTDL_SETUP],\n[AT_DATA([main.c],\n[[#include <ltdl.h>\n#include <stdio.h>\n\ntypedef int funcp (void);\n\nstatic int errors = 0;\n\nint\nmain (void)\n{\n  lt_dlhandle handle;\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n\n  if (lt_dlinit () != 0)\n    {\n      fprintf (stderr, \"error during initialization: %s\\n\", lt_dlerror ());\n      return 1;\n    }\n\n  handle = lt_dlopenext (\"libmodule\");\n  if (!handle)\n    {\n      fprintf (stderr, \"can't open libmodule: %s\\n\", lt_dlerror ());\n      ++errors;\n    }\n\n  {\n    funcp *f = (funcp *) lt_dlsym (handle, \"f\");\n\n    if (f)\n      {\n        printf (\"%d\\n\", f ());\n      }\n    else\n      {\n        fprintf (stderr, \"function 'f' not found: %s\\n\", lt_dlerror ());\n        ++errors;\n      }\n  }\n\n  if (lt_dlexit () != 0)\n    {\n      fprintf (stderr, \"error during exit: %s\\n\", lt_dlerror ());\n      ++errors;\n    }\n\n  return (errors != 0);\n}\n]])\n\nAT_DATA([libmodule.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\nint f (void) { return 5150; }\n#ifdef __cplusplus\n}\n#endif\n]])\n\nLT_AT_HOST_DATA([expout],\n[[5150\n]])\n])# _LT_AT_LTDL_SETUP\n\n\n## -------------------- ##\n## Installable libltdl. ##\n## -------------------- ##\n\nAT_SETUP([installable libltdl])\nAT_KEYWORDS([libltdl])\n\n_LT_AT_LTDL_SETUP\n\nAT_DATA([configure.ac],\n[[AC_INIT([installable-ltdl-demo], ]AT_PACKAGE_VERSION[, ]AT_PACKAGE_BUGREPORT[)\nAC_CONFIG_AUX_DIR([libltdl/config])\nAC_CONFIG_MACRO_DIRS([libltdl/m4])\nAC_CONFIG_HEADERS([config.h:config.hin])\nLT_CONFIG_LTDL_DIR([libltdl])\nAM_INIT_AUTOMAKE([foreign])\nAC_PROG_CC\nAM_PROG_CC_C_O\nLT_INIT([dlopen])\nLTDL_INIT([installable])\nAC_CONFIG_FILES([Makefile])\nAC_OUTPUT\n]])\n\nAT_DATA([Makefile.am],\n[[AUTOMAKE_OPTIONS\t= 1.7\n\nSUBDIRS\t\t\t= libltdl\n\nAM_CPPFLAGS\t\t= $(LTDLINCL)\n\nlib_LTLIBRARIES\t\t= libmodule.la\n# Automake < 1.8 will use libmodule.la.c as default source,\n# while newer will choose libmodule.c; so specify it here.\nlibmodule_la_SOURCES\t= libmodule.c\nlibmodule_la_LDFLAGS\t= -module\n\nbin_PROGRAMS\t\t= main\nmain_LDFLAGS\t\t= -dlopen libmodule.la\nmain_LDADD\t\t= $(LIBLTDL)\nmain_DEPENDENCIES\t= $(LTDLDEPS) libmodule.la\n]])\n\n# Install everything!\nprefix=`pwd`/_inst\n\nLT_AT_BOOTSTRAP([--ltdl], [-I libltdl/m4], [], [--add-missing], [],\n        [--with-included-ltdl --prefix=$prefix], [all install])\n\n# TODO: Check that the installed program 'main' is linked against our libltdl\nAT_CHECK([test -f \"$prefix/lib/libltdl.la\"])\nAT_CHECK([test -f \"$prefix/include/ltdl.h\"])\n\n# Check that main is rebuilt if libltdl.la is newer\nrm -f libltdl/libltdl.la\nAT_CHECK([$MAKE -q main$EXEEXT || exit 1], [1], [ignore], [ignore])\n\nAT_CLEANUP\n\n\n## ------------------------------- ##\n## Link against installed libltdl. ##\n## ------------------------------- ##\n\nAT_SETUP([--with-ltdl-include/lib])\nAT_KEYWORDS([libltdl])\n\n# Install libltdl\nprefix=`pwd`/_inst\n\nLT_AT_LIBTOOLIZE([--copy --ltdl=ltdl])\n\n(cd ltdl\nLT_AT_CONFIGURE([--enable-ltdl-install --prefix=$prefix])\nLT_AT_MAKE([all install])\n)\n\n# Remove build files\nrm -rf ltdl/\n\nAT_CHECK([test -f \"$prefix/lib/libltdl.la\"])\nAT_CHECK([test -f \"$prefix/include/ltdl.h\"])\n\n_LT_AT_LTDL_SETUP\n\nAT_DATA([configure.ac],\n[[AC_INIT([configure-iface-demo], ]AT_PACKAGE_VERSION[, ]AT_PACKAGE_BUGREPORT[)\nAC_CONFIG_MACRO_DIRS([_inst/aclocal])\nAC_CONFIG_HEADERS([config.h:config.hin])\nAM_INIT_AUTOMAKE([foreign])\nAC_PROG_CC\nAM_PROG_CC_C_O\nLT_INIT([dlopen])\nLTDL_INIT\nAC_CONFIG_FILES([Makefile])\nAC_OUTPUT\n]])\n\nAT_DATA([Makefile.am],\n[[AUTOMAKE_OPTIONS\t= 1.7\n\nAM_CPPFLAGS\t\t= $(LTDLINCL)\n\nlib_LTLIBRARIES\t\t= libmodule.la\n# Automake < 1.8 will use libmodule.la.c as default source,\n# while newer will choose libmodule.c; so specify it here.\nlibmodule_la_SOURCES\t= libmodule.c\nlibmodule_la_LDFLAGS\t= -module\n\nbin_PROGRAMS\t\t= main\nmain_LDFLAGS\t\t= -dlopen libmodule.la\nmain_LDADD\t\t= $(LIBLTDL)\nmain_DEPENDENCIES\t= $(LTDLDEPS) libmodule.la\n]])\n\n## Try to avoid linking against a previously installed libltdl found\n## with an explicit -L/path.\nsave_LDFLAGS=$LDFLAGS\nLDFLAGS=\nfor l in $save_LDFLAGS\ndo\n  case $l in\n  -L*) ;;\n  *) LDFLAGS=\"$LDFLAGS $l\" ;;\n  esac\ndone\n\n# We don't use 'libtoolize --ltdl', so that we get an error if the test\n# tries to build and link against its own ltdl sources:\nLT_AT_BOOTSTRAP([], [-I _inst/aclocal], [], [--add-missing], [],\n\t[--with-ltdl-lib=$prefix/lib --with-ltdl-include=$prefix/include],\n\t[all])\n\n## TODO: portable ldd check for correct libltdl\n## Currently, this test doesn't fail if 'main' ends up linking against a\n## previously installed system libltdl.\nLT_AT_NOINST_EXEC_CHECK([./main], [-dlopen libmodule.la], [], [expout], [])\n\nAT_CLEANUP\n\n\n## ------------------------------------- ##\n## Link against shipped libltdl sources. ##\n## ------------------------------------- ##\n\nAT_SETUP([--with-included-ltdl])\nAT_KEYWORDS([libltdl])\n\n_LT_AT_LTDL_SETUP\n\nAT_DATA([configure.ac],\n[[AC_INIT([configure-iface-demo], ]AT_PACKAGE_VERSION[, ]AT_PACKAGE_BUGREPORT[)\nAC_CONFIG_AUX_DIR([libltdl/config])\nAC_CONFIG_MACRO_DIRS([libltdl/m4])\nAC_CONFIG_HEADERS([config.h:config.hin])\nLT_CONFIG_LTDL_DIR([libltdl])\nAM_INIT_AUTOMAKE([foreign])\nAC_PROG_CC\nAM_PROG_CC_C_O\nLT_INIT([dlopen])\nLTDL_INIT\nAC_CONFIG_FILES([Makefile])\nAC_OUTPUT\n]])\n\nAT_DATA([Makefile.am],\n[[AUTOMAKE_OPTIONS\t= 1.7\n\nSUBDIRS\t\t\t= libltdl\n\nAM_CPPFLAGS\t\t= $(LTDLINCL)\n\nlib_LTLIBRARIES\t\t= libmodule.la\n# Automake < 1.8 will use libmodule.la.c as default source,\n# while newer will choose libmodule.c; so specify it here.\nlibmodule_la_SOURCES\t= libmodule.c\nlibmodule_la_LDFLAGS\t= -module\n\nbin_PROGRAMS\t\t= main\nmain_LDFLAGS\t\t= -dlopen libmodule.la\nmain_LDADD\t\t= $(LIBLTDL)\nmain_DEPENDENCIES\t= $(LTDLDEPS) libmodule.la\n]])\n\nLT_AT_BOOTSTRAP([--ltdl], [-I libltdl/m4], [], [--add-missing], [],\n        [--with-included-ltdl], [all])\n\n# --with-included-ltdl should build a convenience lib by default\nAT_CHECK([test -f libltdl/libltdlc.la])\n\n## TODO: portable ldd check for correct libltdl\n## Currently, this test doesn't fail if 'main' ends up linking against a\n## previously installed system libltdl.\nLT_AT_NOINST_EXEC_CHECK([./main], [-dlopen libmodule.la], [], [expout], [])\n\n# Check that main is rebuilt if libltdlc.la is newer\nrm -f libltdl/libltdlc.la\nAT_CHECK([$MAKE -q main$EXEEXT || exit 1], [1], [ignore], [ignore])\n\nAT_CLEANUP\n\n\n## -------------------- ##\n## Convenience libltdl. ##\n## -------------------- ##\n\nAT_SETUP([convenience libltdl])\n\nAT_DATA([configure.ac],\n[[AC_INIT\nAC_CONFIG_AUX_DIR([libltdl/config])\nAC_LIBLTDL_CONVENIENCE\nAC_LIBTOOL_DLOPEN\nAC_PROG_LIBTOOL\nAC_CONFIG_FILES(Makefile)\nAC_OUTPUT\n]])\nAT_DATA([Makefile.in],\n[[LIBLTDL = @LIBLTDL@\nprint-ltdl:\n\techo $(LIBLTDL)\n]])\n\nLT_AT_BOOTSTRAP([--ltdl], [-I libltdl/m4], [ignore], [ignore], [], [], [ignore])\nAT_CHECK([$MAKE print-ltdl], [], [stdout], [ignore])\nAT_CHECK([$GREP libltdl/libltdlc.la stdout], [], [ignore])\n\nAT_CLEANUP\n\ndnl Be careful not to let the definition leak into other tests\nm4_popdef([_LT_AT_LTDL_SETUP])\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/tests/dlloader-api.at": "# dlloader.at -- test dlloader functionality                -*- Autotest -*-\n#\n#   Copyright (C) 2010-2019 Free Software Foundation, Inc.\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_SETUP([dlloader API])\nAT_KEYWORDS([libltdl])\n\nAT_DATA([main.c],\n[[#include <ltdl.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nstatic int\nfirst_init (lt_user_data data)\n{\n  const char *ctx = (const char *) data;\n\n  printf (\"first_init: %s\\n\", ctx);\n\n  return 0;\n}\n\nstatic lt_module\nfirst_open (lt_user_data data, const char *filename, lt_dladvise advise)\n{\n  static const char *first_module = \"first\";\n  const char *ctx = (const char *) data;\n\n  /* Use a magic string to avoid possible interactions with file system\n   * objects.  Prepend '/' to short-circuit libltdl's search of\n   * $shlibpath_var (e.g. PATH, LD_LIBRARY_PATH, or similar).\n   */\n  if (!filename || strcmp (filename, \"/libltdl_dlloader_api_test_first\"))\n    {\n      printf (\"first_open denies a request\\n\");\n      lt_dlseterror (LT_ERROR_FILE_NOT_FOUND);\n      return NULL;\n    }\n\n  printf (\"first_open (\\\"%s\\\"): %s\\n\", filename, ctx);\n\n  return (lt_module) first_module;\n}\n\nstatic const char *\nfirst_symbol (void)\n{\n  return \"first_symbol\";\n}\n\nstatic void *\nfirst_sym (lt_user_data data, lt_module module, const char *symbolname)\n{\n  const char *ctx = (const char *) data;\n  const char *filename = (const char *) module;\n\n  printf (\"first_sym (%s): %s\\n\", filename, ctx);\n\n  return (void *) first_symbol;\n}\n\nstatic int\nfirst_close (lt_user_data data, lt_module module)\n{\n  const char *ctx = (const char *) data;\n  const char *filename = (const char *) module;\n\n  printf (\"first_close (%s): %s\\n\", filename, ctx);\n\n  return 0;\n}\n\nstatic int\nfirst_exit (lt_user_data data)\n{\n  const char *ctx = (const char *) data;\n\n  printf (\"first_exit: %s\\n\", ctx);\n\n  return 0;\n}\n\nstatic int\nlast_init (lt_user_data data)\n{\n  const char *ctx = (const char *) data;\n\n  printf (\"last_init: %s\\n\", ctx);\n\n  return 0;\n}\n\nstatic lt_module\nlast_open (lt_user_data data, const char *filename, lt_dladvise advise)\n{\n  static const char *last_module = \"last\";\n  const char *ctx = (const char *) data;\n\n  /* Use a magic string to avoid possible interactions with file system\n   * objects.  Prepend '/' to short-circuit libltdl's search of\n   * $shlibpath_var (e.g. PATH, LD_LIBRARY_PATH, or similar).\n   */\n  if (!filename || strcmp (filename, \"/libltdl_dlloader_api_test_last\"))\n    {\n      printf (\"last_open denies a request\\n\");\n      lt_dlseterror (LT_ERROR_FILE_NOT_FOUND);\n      return NULL;\n    }\n\n  printf (\"last_open (\\\"%s\\\"): %s\\n\", filename, ctx);\n\n  return (lt_module) last_module;\n}\n\nstatic const char *\nlast_symbol (void)\n{\n  return \"last_symbol\";\n}\n\nstatic void *\nlast_sym (lt_user_data data, lt_module module, const char *symbolname)\n{\n  const char *ctx = (const char *) data;\n  const char *filename = (const char *) module;\n\n  printf (\"last_sym (%s): %s\\n\", filename, ctx);\n\n  return (void *) last_symbol;\n}\n\nstatic int\nlast_close (lt_user_data data, lt_module module)\n{\n  const char *ctx = (const char *) data;\n  const char *filename = (const char *) module;\n\n  printf (\"last_close (%s): %s\\n\", filename, ctx);\n\n  return 0;\n}\n\nstatic int\nlast_exit (lt_user_data data)\n{\n  const char *ctx = (const char *) data;\n\n  printf (\"last_exit: %s\\n\", ctx);\n\n  return 0;\n}\n\ntypedef const char *module_func (void);\n\nint\nmain (int argc, char* argv[])\n{\n  int err = 0;\n  lt_dlvtable *first;\n  lt_dlvtable *last;\n  lt_dlhandle module = NULL;\n  module_func *symbol;\n  const char *first_ctx = \"first_ctx\";\n  const char *last_ctx = \"last_ctx\";\n  const lt_dlvtable *finder;\n\n  LTDL_SET_PRELOADED_SYMBOLS ();\n\n  if (lt_dlinit ())\n    {\n      printf (\"lt_dlinit failed\\n\");\n      return 1;\n    }\n\n  first = (lt_dlvtable *) malloc (sizeof (*first));\n  if (!first)\n    {\n      printf (\"malloc failed\\n\");\n      err = 1;\n      goto cleanup;\n    }\n\n  first->name = \"first\";\n  first->sym_prefix = NULL;\n  first->module_open = first_open;\n  first->module_close = first_close;\n  first->find_sym = first_sym;\n  first->dlloader_init = first_init; /* test that it isn't called twice */\n  first->dlloader_exit = first_exit;\n  first->dlloader_data = (lt_user_data) first_ctx;\n  first->priority = LT_DLLOADER_PREPEND;\n\n  if (first_init (first->dlloader_data))\n    {\n      printf (\"first_init failed\\n\");\n      err = 1;\n      goto cleanup;\n    }\n\n  if (lt_dlloader_add (first))\n    {\n      printf (\"lt_dlloader_add failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  finder = lt_dlloader_find (\"first\");\n\n  if (!finder)\n    {\n      printf (\"lt_dlloader_find failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  printf (\"Found loader \\\"%s\\\"\\n\", finder->name);\n\n  last = (lt_dlvtable *) malloc (sizeof (*last));\n  if (!last)\n    {\n      printf (\"malloc failed\\n\");\n      err = 1;\n      goto cleanup;\n    }\n\n  last->name = \"last\";\n  last->sym_prefix = NULL;\n  last->module_open = last_open;\n  last->module_close = last_close;\n  last->find_sym = last_sym;\n  last->dlloader_init = last_init; /* test that it isn't called twice */\n  last->dlloader_exit = last_exit;\n  last->dlloader_data = (lt_user_data) last_ctx;\n  last->priority = LT_DLLOADER_APPEND;\n\n  if (last_init (last->dlloader_data))\n    {\n      printf (\"last_init failed\\n\");\n      err = 1;\n      goto cleanup;\n    }\n\n  if (lt_dlloader_add (last))\n    {\n      printf (\"lt_dlloader_add failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  finder = lt_dlloader_find (\"last\");\n\n  if (!finder)\n    {\n      printf (\"lt_dlloader_find failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  printf (\"Found loader \\\"%s\\\"\\n\", finder->name);\n\n  /* Use a magic string to avoid possible interactions with file system\n   * objects.  Prepend '/' to short-circuit libltdl's search of\n   * $shlibpath_var (e.g. PATH, LD_LIBRARY_PATH, or similar).\n   */\n  module = lt_dlopen (\"/libltdl_dlloader_api_test_first\");\n\n  if (!module)\n    {\n      printf (\"lt_dlopen failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  symbol = (module_func *) lt_dlsym (module, \"symbol\");\n\n  if (!symbol)\n    {\n      printf (\"lt_dlsym failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  printf (\"result: %s\\n\", symbol ());\n\n  lt_dlclose (module);\n  module = lt_dlopen (\"./module.la\");\n\n  if (!module)\n    {\n      printf (\"lt_dlopen failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  symbol = (module_func *) lt_dlsym (module, \"symbol\");\n\n  if (!symbol)\n    {\n      printf (\"lt_dlsym failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  printf (\"result: %s\\n\", symbol ());\n\n  lt_dlclose (module);\n\n  /* Use a magic string to avoid possible interactions with file system\n   * objects.  Prepend '/' to short-circuit libltdl's search of\n   * $shlibpath_var (e.g. PATH, LD_LIBRARY_PATH, or similar).\n   */\n  module = lt_dlopen (\"/libltdl_dlloader_api_test_last\");\n\n  if (!module)\n    {\n      printf (\"lt_dlopen failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  symbol = (module_func *) lt_dlsym (module, \"symbol\");\n\n  if (!symbol)\n    {\n      printf (\"lt_dlsym failed: %s\\n\", lt_dlerror ());\n      err = 1;\n      goto cleanup;\n    }\n\n  printf (\"result: %s\\n\", symbol ());\n\n  if (lt_dlopen (\"no-module\"))\n    {\n      printf (\"lt_dlopen unexpectedly opened \\\"no-module\\\"\\n\");\n      err = 1;\n      goto cleanup;\n    }\n\n  if (lt_dlloader_remove (\"first\") != first)\n    {\n      printf (\"vtable of first loader has changed\\n\");\n      err = 1;\n      goto cleanup;\n    }\n\n  free (first);\n\ncleanup:\n  if (module)\n    {\n      lt_dlclose (module);\n    }\n  lt_dlexit ();\n  return err;\n}\n]])\n\nAT_DATA([module.c],\n[[\n#ifdef __cplusplus\nextern \"C\"\n#endif\nconst char *symbol (void);\nconst char *\nsymbol (void)\n{\n  return \"module_symbol\";\n}\n]])\n\nLT_AT_HOST_DATA(expout,\n[[first_init: first_ctx\nFound loader \"first\"\nlast_init: last_ctx\nFound loader \"last\"\nfirst_open (\"/libltdl_dlloader_api_test_first\"): first_ctx\nfirst_sym (first): first_ctx\nresult: first_symbol\nfirst_close (first): first_ctx\nfirst_open denies a request\nresult: module_symbol\nfirst_open denies a request\nlast_open (\"/libltdl_dlloader_api_test_last\"): last_ctx\nlast_sym (last): last_ctx\nresult: last_symbol\nfirst_open denies a request\nlast_open denies a request\nfirst_exit: first_ctx\nlast_close (last): last_ctx\nlast_exit: last_ctx\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f \"$LIBLTDL\" || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\n\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c module.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o module.la ]dnl\n\t [-rpath /nowhere -module -avoid-version -no-undefined ]dnl\n\t [module.lo],\n\t [], [ignore], [ignore])\n\ndnl Not possible to override the preopen loader, so skip if not shared.\n. ./module.la\nAT_CHECK([test -n \"$dlname\" || (exit 77)])\n\nAT_CHECK([$CC $CPPFLAGS $CFLAGS -c main.c], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o main$EXEEXT ]dnl\n\t [main.$OBJEXT -dlopen module.la $LIBLTDL],\n\t [], [ignore], [ignore])\n\nLT_AT_EXEC_CHECK([./main], [], [expout], [ignore], [])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/tests/darwin.at": "# darwin.at - tests specific to Mac OS X\n#\n#   Copyright (C) 2008-2009, 2011-2019 Free Software Foundation, Inc.\n#   Written by Peter O'Gorman, 2008\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_BANNER([Mac OS X tests])\nAT_SETUP([darwin fat compile])\nnoskip=:\ncase $host_os in\ndarwin*) ;;\n*) noskip=false ;;\nesac\n\nAT_DATA([simple.c] ,[[\nint main() { return 0;}\n]])\n\n$noskip && {\n$CC $CPPFLAGS $CFLAGS -arch x86_64 -arch i386 -o simple simple.c 2>&1 > /dev/null || noskip=false\nrm -f simple\n}\n\nAT_CHECK([$noskip || (exit 77)])\n\nAT_DATA([foo.c],[[\nint x=0;\n]])\n\nAT_DATA([baz.c],[[\nint y=0;\n]])\n\nAT_DATA([bar.c],[[\nextern int x;\nint bar(void);\nint bar() { return x;}\n]])\n\nAT_DATA([main.c],[[\nextern int x;\nextern int y;\n\nint main() {\nreturn x+y;\n}\n]])\n\nmkdir bin\nAT_DATA([bin/basename],[[\n#! /bin/sh\n\nusage=\"usage: $0 argument\"\nif test $# != 1; then\n                  echo $usage >&2\n                  exit 1\nfi\n\necho $1 | $SED \"s|^.*/||\"\n]])\n\nchmod +x bin/basename\nsave_PATH=$PATH\nPATH=`pwd`/bin:$PATH\nexport PATH\n\nAT_CHECK([$LIBTOOL --mode=compile --tag=CC $CC -c -o foo.lo $CPPFLAGS $CFLAGS -arch x86_64 -arch i386 foo.c],[0],[ignore],[ignore])\n\nAT_CHECK([$LIBTOOL --mode=compile --tag=CC $CC -c -o baz.lo $CPPFLAGS $CFLAGS -arch x86_64 -arch i386 baz.c],[0],[ignore],[ignore])\n\nAT_CHECK([$LIBTOOL --mode=link --tag=CC $CC -o libfoo.la $CPPFLAGS $CFLAGS $LDFLAGS -arch x86_64 -arch i386 foo.lo baz.lo],[0],[ignore],[ignore])\n\nAT_CHECK([$LIBTOOL --mode=compile --tag=CC $CC -c -o bar.lo $CPPFLAGS $CFLAGS -arch x86_64 -arch i386 bar.c],[0],[ignore],[ignore])\n\nAT_CHECK([$LIBTOOL --mode=link --tag=CC $CC  -o libbar.la $CPPFLAGS $CFLAGS $LDFLAGS -arch x86_64 -arch i386 bar.lo libfoo.la -rpath /nonexistent],[0],[ignore],[ignore])\n\nAT_CHECK([$LIBTOOL --mode=compile --tag=CC $CC -c -o main.lo $CPPFLAGS $CFLAGS -arch x86_64 -arch i386 main.c],[0],[ignore],[ignore])\n\nAT_CHECK([$LIBTOOL --mode=link --tag=CC $CC  -o main$EXEEXT $CPPFLAGS $CFLAGS $LDFLAGS -arch x86_64 -arch i386 main.lo libbar.la],[0],[ignore],[ignore])\n\nPATH=$save_PATH\nAT_CLEANUP\n\n\nAT_SETUP([darwin concurrent library extraction])\n\nAT_DATA([foo.c], [[\nint foo (void) { return 0; }\n]])\n\nAT_DATA([bar.c], [[\nextern int foo1 (void);\nint bar (void) { return foo1 (); }\n]])\ncp bar.c baz.c\n\nobjects=\nfor obj in 1 2 3 4 5 6 7 8; do\n  $SED \"s/foo/foo$obj/\" < foo.c > foo$obj.c\n  AT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c foo$obj.c],\n\t   [], [ignore], [ignore])\n  objects=\"$objects foo$obj.lo\"\ndone\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c bar.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c baz.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o libfoo.la $objects],\n\t [], [ignore], [ignore])\n\n# Hypothesis: concurrent convenience archive extraction works.\nfor i in 1 2 3 4 5; do\n  rm -f libbar.la libbaz.la\n  AT_CHECK([($LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS ]dnl\n\t   [  -o libbar.la bar.lo -rpath /foo libfoo.la) & ]dnl\n\t   [($LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS ]dnl\n\t   [  -o libbaz.la baz.lo -rpath /foo libfoo.la) & ]dnl\n\t   [wait; test -f libbar.la && test -f libbaz.la],\n\t   [], [ignore], [ignore])\ndone\n\n# Hypothesis: the lock is not used in dry run mode.\neval \"`$LIBTOOL --config | $EGREP '^(objdir)='`\"\n# Next line is internal detail.\nlockfile=$objdir/libfoo.a.lock\necho stamp > $lockfile\nAT_CHECK([$LIBTOOL --dry-run --mode=link $CC $CFLAGS $LDFLAGS ]dnl\n\t [ -o libbar.la bar.lo -rpath /foo libfoo.la],\n\t [], [ignore], [ignore])\nAT_CHECK([$GREP stamp $lockfile], [], [ignore])\n\nAT_CLEANUP\n\nAT_SETUP([darwin gdb debug information])\n\nAT_CHECK([gdb --version || (exit 77)],[ignore],[ignore],[ignore])\n\nAT_DATA([foo.c], [[\nint foo (void) { return 0; }\n]])\n\nAT_DATA([bar.c], [[\nextern int foo (void);\nint bar (void) { return foo (); }\n]])\n\nAT_DATA([main.c], [[\nextern int bar(void);\n\nint main() { return bar();}\n]])\n\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c bar.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c foo.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c main.c],\n\t [], [ignore], [ignore])\n\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o libfoo.la foo.lo],\n\t [], [ignore], [ignore])\n\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS ]dnl\n\t [  -o libbar.la bar.lo -rpath /foo libfoo.la ],\n\t [], [ignore], [ignore])\n\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS ]dnl\n\t [  -o main main.lo libbar.la],[], [ignore], [ignore])\nAT_CHECK([echo quit | $LIBTOOL --mode=execute gdb main],\n\t [ignore], [ignore], [stderr])\n\nAT_CHECK([$GREP 'Could not find object file' stderr],[1],[ignore],[ignore])\n\nAT_XFAIL_IF([\neval \"`$LIBTOOL --config | $EGREP '^(whole_archive_flag_spec)='`\"\ncase $whole_archive_flag_spec:$host_os in\n:darwin*) : ;;\n*) false ;;\nesac ])\n\n# Remove any dSYM bundle\nrm -rf .libs/*.dSYM\n\nAT_CHECK([echo quit | $LIBTOOL --mode=execute gdb main],\n\t [ignore], [ignore], [stderr])\nAT_CHECK([$GREP 'Could not find object file' stderr],[1],[ignore],[ignore])\n\nAT_CLEANUP\n\nAT_SETUP([darwin ld warnings changing configure results])\n\nAT_DATA([configure.ac],\n[[AC_INIT([ld-stderr], ]AT_PACKAGE_VERSION[, ]AT_PACKAGE_BUGREPORT[)\nAC_CONFIG_MACRO_DIRS([m4])\nAM_INIT_AUTOMAKE([foreign])\nAC_PROG_CC\nLT_INIT\nAC_CONFIG_FILES([Makefile])\nAC_OUTPUT\n]])\n\nAT_DATA([Makefile.am],[\nACLOCAL_AMFLAGS = -I m4\n])\nLT_AT_LIBTOOLIZE([--copy --force])\nLT_AT_AUTORECONF([--force --install])\nLT_AT_CONFIGURE\nAT_CHECK([./libtool --config],[ignore],[stdout],[ignore])\nmv stdout expout\nLT_AT_CONFIGURE([LDFLAGS=-L/there/is/no/dir/here])\nAT_CHECK([./libtool --config],[ignore],[expout],[ignore])\nAT_CLEANUP\n\nAT_SETUP([darwin can lt_dlopen .dylib and .so files])\n\nAT_KEYWORDS([libltdl dylib])\n\n# This test requires shared library support.\nAT_CHECK([$LIBTOOL --features | $GREP 'enable shared libraries' || exit 77],\n\t [], [ignore])\n\neval `$LIBTOOL --config | $EGREP '^shrext_cmds='`\n\nmodule=no\neval shared_ext=\\\"$shrext_cmds\\\"\nmodule=yes\neval module_ext=\\\"$shrext_cmds\\\"\n\n# Only bother with this test if module extension is different from\n# shared extension\nAT_CHECK([test \"$shared_ext\" != \"$module_ext\" || exit 77])\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f \"$LIBLTDL\" || (exit 77) ;;\nesac], [], [ignore])\n\nprefix=`pwd`/inst\nlibdir=$prefix/lib\nbindir=$prefix/bin\nmkdir $prefix $libdir $bindir\n\n# This code is copied from the Autobook:\n# <http://sources.redhat.com/autobook/autobook/autobook_169.html>\n# so if it needs changes, be sure to notify the Autobook authors\n# about them.\n\nAT_DATA([simple-module.c],\n[[\n#include <stdio.h>\n\n#ifdef __cplusplus\nextern \"C\"\n#endif\nint\nrun (const char *argument)\n{\n  printf (\"Hello, %s!\\n\", argument);\n  return 0;\n}\n]])\n\nAT_DATA([ltdl-loader.c],\n[[\n#include <stdio.h>\n#include <stdlib.h>\n#ifndef EXIT_FAILURE\n#  define EXIT_FAILURE        1\n#  define EXIT_SUCCESS        0\n#endif\n\n#include <limits.h>\n#ifndef PATH_MAX\n#  define PATH_MAX 255\n#endif\n\n#include <string.h>\n#include <ltdl.h>\n\n#ifndef MODULE_PATH_ENV\n#  define MODULE_PATH_ENV        \"MODULE_PATH\"\n#endif\n\ntypedef int entrypoint (const char *argument);\n\n/* Save and return a copy of the dlerror() error  message,\n   since the next API call may overwrite the original. */\nstatic char *dlerrordup (char *errormsg);\n\nint\nmain (int argc, const char *argv[])\n{\n  char *errormsg = NULL;\n  lt_dlhandle module = NULL;\n  entrypoint *run = NULL;\n  int errors = 0;\n\n  if (argc != 3)\n    {\n      fprintf (stderr, \"USAGE: main MODULENAME ARGUMENT\\n\");\n      exit (EXIT_FAILURE);\n    }\n\n  /* Initialise libltdl. */\n  errors = lt_dlinit ();\n\n  /* Set the module search path. */\n  if (!errors)\n    {\n      const char *path = getenv (MODULE_PATH_ENV);\n\n      if (path != NULL)\n        errors = lt_dlsetsearchpath (path);\n    }\n\n  /* Load the module. */\n  if (!errors)\n    module = lt_dlopenext (argv[1]);\n\n  /* Find the entry point. */\n  if (module)\n    {\n      run = (entrypoint *) lt_dlsym (module, \"run\");\n\n      /* In principle, run might legitimately be NULL, so\n         I don't use run == NULL as an error indicator\n         in general. */\n      errormsg = dlerrordup (errormsg);\n      if (errormsg != NULL)\n        {\n          errors = lt_dlclose (module);\n          module = NULL;\n        }\n    }\n  else\n    errors = 1;\n\n  /* Call the entry point function. */\n  if (!errors)\n    {\n      int result = (*run) (argv[2]);\n      if (result < 0)\n        errormsg = strdup (\"module entry point execution failed\");\n      else\n        printf (\"\\t=> %d\\n\", result);\n    }\n\n  /* Unload the module, now that we are done with it. */\n  if (!errors)\n    errors = lt_dlclose (module);\n\n  if (errors)\n    {\n      /* Diagnose the encountered error. */\n      errormsg = dlerrordup (errormsg);\n\n      if (!errormsg)\n        {\n          fprintf (stderr, \"%s: dlerror() failed.\\n\", argv[0]);\n          return EXIT_FAILURE;\n        }\n    }\n\n  /* Finished with ltdl now. */\n  if (!errors)\n    if (lt_dlexit () != 0)\n      errormsg = dlerrordup (errormsg);\n\n  if (errormsg)\n    {\n      fprintf (stderr, \"%s: %s.\\n\", argv[0], errormsg);\n      free (errormsg);\n      exit (EXIT_FAILURE);\n    }\n\n  return EXIT_SUCCESS;\n}\n\n/* Be careful to save a copy of the error message,\n   since the  next API call may overwrite the original. */\nstatic char *\ndlerrordup (char *errormsg)\n{\n  char *error = (char *) lt_dlerror ();\n  if (error && !errormsg)\n    errormsg = strdup (error);\n  return errormsg;\n}\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS -no-undefined\"\n\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c simple-module.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o simple-module.la ]dnl\n\t [simple-module.lo -rpath $libdir -module -avoid-version],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o libsimple-dylib.la ]dnl\n\t [simple-module.lo -rpath $libdir -avoid-version],\n\t [], [ignore], [ignore])\nAT_CHECK([$CC $CPPFLAGS $CFLAGS -c ltdl-loader.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o ltdl-loader$EXEEXT ]dnl\n\t [ltdl-loader.$OBJEXT -dlopen self $LIBLTDL],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp simple-module.la $libdir/simple-module.la], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp libsimple-dylib.la $libdir/libsimple-dylib.la], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=clean rm -f simple-module.la], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=clean rm -f libsimple-dylib.la], [], [ignore], [ignore])\n\nrm $libdir/simple-module.la\nrm $libdir/libsimple-dylib.la\n\nfor dir in inst/lib \"$libdir\"; do\n  LT_AT_EXEC_CHECK([./ltdl-loader], [], [stdout], [ignore],\n\t    [$dir/simple-module World])\n  AT_CHECK([$GREP \"Hello, World\" stdout], [], [ignore])\n  LT_AT_EXEC_CHECK([./ltdl-loader], [], [stdout], [ignore],\n\t    [$dir/libsimple-dylib World])\n  AT_CHECK([$GREP \"Hello, World\" stdout], [], [ignore])\ndone\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/tests/ltdl-libdir.at": "# ltdl-libdir.at -- test libltdl functionality             -*- Autotest -*-\n#\n#   Copyright (C) 2010-2019 Free Software Foundation, Inc.\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_SETUP([libdir of installed modules])\nAT_KEYWORDS([libltdl])\n\n# This test requires shared library support.\nAT_CHECK([$LIBTOOL --features | $GREP 'enable shared libraries' || exit 77],\n\t [], [ignore])\n\n# With MinGW, try Windows-style paths only.\nif pwd -W >/dev/null 2>&1; then\n  prefix=`pwd -W`/inst\nelse\n  prefix=`pwd`/inst\nfi\nlibdir=$prefix/lib\nbindir=$prefix/bin\nmkdir $prefix $libdir $bindir\n\nAT_DATA([a.c],\n[[#ifdef __cplusplus\nextern \"C\"\n#endif\nint f (void)\n{\n  return 42;\n}\n]])\n\nAT_DATA([m.c],\n[[\n#include <stdio.h>\n#include <ltdl.h>\n\ntypedef int func_f(void);\n\nint\nmain (int argc, const char *argv[])\n{\n  lt_dlhandle module = NULL;\n  func_f *f = NULL;\n\n  if (lt_dlinit()) {\n    fprintf(stderr, \"lt_dlinit failed '%s'\\n\", lt_dlerror());\n    return 1;\n  }\n\n  module = lt_dlopen(\"./a.la\");\n\n  if (!module) {\n    fprintf(stderr, \"lt_dlopen failed '%s'\\n\", lt_dlerror());\n    return 1;\n  }\n\n  f = (func_f *)lt_dlsym(module, \"f\");\n\n  if (!f) {\n    fprintf(stderr, \"lt_dlsym failed '%s'\\n\", lt_dlerror());\n    return 1;\n  }\n\n  if (f() != 42) {\n    fprintf(stderr, \"f did not return 42\\n\");\n    return 1;\n  }\n\n  lt_dlclose(module);\n  lt_dlexit();\n  return 0;\n}\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip installcheck if --disable-ltdl-install was used.\nAT_CHECK([test -f \"$LIBLTDL\" || exit 77])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS -no-undefined\"\n\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c a.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o a.la ]dnl\n\t [a.lo -rpath $libdir -module -shared -avoid-version],\n\t [], [ignore], [ignore])\nAT_CHECK([$CC $CPPFLAGS $CFLAGS -c m.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o m$EXEEXT ]dnl\n\t [m.$OBJEXT $LIBLTDL],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp a.la $libdir/a.la],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp m$EXEEXT $bindir/m$EXEEXT],\n\t [], [ignore], [ignore])\n\n# Try finding the module via the libdir entry in a misplaced .la file.\n\nmv $libdir/a.la $bindir/a.la\ncd $bindir\nLT_AT_EXEC_CHECK([./m],\n\t\t [], [ignore], [ignore])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/tests/mdemo.at": "# demo.at -- Dynamic ltdl runtime loading -*- Autotest -*-\n#\n#   Copyright (C) 1998, 2002-2004, 2011-2019 Free Software Foundation,\n#   Inc.\n#   Written by Thomas Tanner, 1998\n#   Written by Greg Eisenhauer, 2002\n#   Rewritten by Gary V. Vaughan, 2003\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\n\nAT_BANNER([Dynamic ltdl runtime loading.])\n\n# _LT_SETUP\n# ---------\nm4_define([_LT_SETUP],\n[dnl We can't use AT_DATA here, because we need an unquoted here-\ndnl document to splice in the path to the top level libltdl directory,\ndnl but, we do need to double m4-quote to prevent premature expansion\ndnl of any active m4 symbols in the here-doc content, and to maintain\ndnl the square-bracket symbols as is.\n[cat >configure.ac <<_EOT_\nAC_INIT([mdemo], ]AT_PACKAGE_VERSION[, ]AT_PACKAGE_BUGREPORT[)\nAC_CONFIG_AUX_DIR([build-aux])\nAC_CONFIG_MACRO_DIRS([m4])\nLT_CONFIG_LTDL_DIR([libltdl])\nAM_INIT_AUTOMAKE\nAC_PROG_CC\nLT_INIT([dlopen win32-dll])\nLTDL_INIT([nonrecursive convenience])\nAC_SUBST([LIBTOOL_DEPS])\nAC_SUBST([INCLTDL])\nAC_SUBST([LIBLTDL])\nSTATIC=\ntest yes = \"$enable_static\" && STATIC=-static\nAC_SUBST([STATIC])\nLT_LIB_M\nAC_CONFIG_FILES([Makefile])\nAC_CONFIG_HEADERS([config.h:config.in.h])\nAC_OUTPUT\n_EOT_]\n\n\n[cat >Makefile.am <<_EOT_\nAUTOMAKE_OPTIONS = no-dependencies subdir-objects foreign\nACLOCAL_AMFLAGS = -I m4\nAM_CPPFLAGS = \\$(INCLTDL)\nAM_LDFLAGS =\n\nnoinst_LTLIBRARIES =\nEXTRA_LTLIBRARIES =\n\ninclude_HEADERS =\n\nEXTRA_DIST =\n\nBUILT_SOURCES =\nCLEANFILES =\nMOSTLYCLEANFILES =\n\nlib_LTLIBRARIES = libsub.la foo1.la libfoo2.la libmlib.la\n\nfoo1_la_SOURCES = foo1.c\nfoo1_la_LIBADD = \\$(LIBM) libsub.la\nfoo1_la_LDFLAGS = -no-undefined -module -avoid-version\n\nlibfoo2_la_SOURCES = foo2.c\nlibfoo2_la_LIBADD = \\$(LIBM) libsub.la\nlibfoo2_la_LDFLAGS = -no-undefined -module -export-symbols-regex \"libfoo2.*\"\n\nlibsub_la_SOURCES = sub.c\nlibsub_la_LDFLAGS = -no-undefined\n\n## Use -export-symbols-regex here explicitly because libltdl marks\n## its exported symbols, and we use libltdl as a convenience archive.\n## Thus, on w32, auto-exporting is turned off.\nlibmlib_la_SOURCES = mlib.c\nlibmlib_la_LIBADD = \\$(LIBLTDL) \"-dlopen\" foo1.la \"-dlopen\" libfoo2.la\nlibmlib_la_LDFLAGS = -no-undefined -export-symbols-regex \".*\"\nlibmlib_la_DEPENDENCIES = \\$(LIBLTDL) libsub.la foo1.la libfoo2.la\n\nnoinst_HEADERS = foo.h\n\nbin_PROGRAMS = mdemo mdemo_static\n\n# Create a version of mdemo that does dlopen.\nmdemo_SOURCES = main.c\nmdemo_LDFLAGS = -export-dynamic\n## The quotes around -dlopen below fool automake into accepting it\nmdemo_LDADD = \\$(LIBLTDL) libsub.la \"-dlopen\" self \\\n\t\t\"-dlopen\" foo1.la \"-dlopen\" libfoo2.la\nmdemo_DEPENDENCIES = \\$(LIBLTDL) libsub.la foo1.la libfoo2.la\n\n# Create a statically linked version of mdemo.\nmdemo_static_SOURCES = \\$(mdemo_SOURCES)\nmdemo_static_LDFLAGS = \\$(STATIC) \\$(mdemo_LDFLAGS)\nmdemo_static_LDADD = \\$(mdemo_LDADD)\nmdemo_static_DEPENDENCIES = \\$(mdemo_DEPENDENCIES)\n\nlibtool: \\$(LIBTOOL_DEPS)\n\t\\$(SHELL) ./config.status --recheck\n\ninclude \\$(srcdir)/libltdl/ltdl.mk\ninclude \\$(srcdir)/mdemo.mk\n_EOT_]\n\nAT_DATA([mdemo.mk],\n[[# Don't abort for lack of mdemo.mk\n]])\n\nAT_DATA([foo.h],\n[[#ifndef FOO_H\n#define FOO_H\n\n/* Silly constants that the functions return. */\n#define HELLO_RET 0xe110\n#define FOO_RET 0xf00\n\nint sub (void);\n\n#endif\n]])\n\nAT_DATA([foo1.c],\n[[#include <config.h>\n#include <stdio.h>\n#include <math.h>\n\n#include \"foo.h\"\n\n#define nothing foo1_LTX_nothing\n#define foo1    foo1_LTX_foo1\n#define hello   foo1_LTX_hello\n\n/* Give a global variable definition. */\nint nothing = FOO_RET;\n\n/* private function */\nint _foo1_helper (void) {\n  sub ();\n  return FOO_RET;\n}\n\n/* export functions */\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\nint foo1 (void) {\n    printf (\"cos (0.0) = %g\\n\", (double) cos ((double) 0.0));\n    return _foo1_helper ();\n}\n\nint hello () {\n    printf (\"** This is foolib 1 **\\n\");\n    return HELLO_RET;\n}\n\n#ifdef __cplusplus\n}\n#endif\n]])\n\nAT_DATA([foo2.c],\n[[#include <config.h>\n#include <stdio.h>\n#include <math.h>\n\n#include \"foo.h\"\n\n#define nothing libfoo2_LTX_nothing\n#define foo2    libfoo2_LTX_foo2\n#define hello   libfoo2_LTX_hello\n\n/* Give a global variable definition. */\nint nothing;\n\n/* private function */\nint _foo2_helper (void) {\n  sub ();\n  return FOO_RET;\n}\n\n/* export functions */\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\nint foo2 (void) {\n    printf (\"sin (0.0) = %g\\n\", (double) sin ((double) 0.0));\n    return _foo2_helper ();\n}\n\nint hello () {\n    printf (\"** This is foolib 2 **\\n\");\n    return HELLO_RET;\n}\n\n#ifdef __cplusplus\n}\n#endif\n]])\n\nAT_DATA([mlib.c],\n[[#include <config.h>\n#include <stdio.h>\n\n#include \"foo.h\"\n#include \"ltdl.h\"\n\nint test_dl (char *filename) {\n  lt_dlhandle handle;\n  const lt_dlinfo *info;\n  int (*pfoo1)() = 0;\n  int (*pfoo2)() = 0;\n  int (*phello)() = 0;\n  int *pnothing = 0;\n  int ret = 0;\n\n  handle = lt_dlopen(filename);\n  if (!handle) {\n    fprintf (stderr, \"can't open the module %s!\\n\", filename);\n    fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n    return 1;\n  }\n\n  info = lt_dlgetinfo(handle);\n  if (!info) {\n    fprintf (stderr, \"can't get module info: %s\\n\", lt_dlerror());\n    return 1;\n  }\n  if (info->name) {\n    printf (\"module name: %s\\n\", info->name);\n  } else {\n    printf (\"module is not a libtool module\\n\");\n  }\n  printf (\"module filename: %s\\n\", info->filename);\n  printf (\"module reference count: %i\\n\", info->ref_count);\n\n  phello = (int(*)())lt_dlsym(handle, \"hello\");\n  if (phello)\n    {\n      int value = (*phello) ();\n\n      printf (\"hello returned: %i\\n\", value);\n      if (value == HELLO_RET)\n        printf(\"hello is ok!\\n\");\n    }\n  else\n    {\n      fprintf (stderr, \"did not find the 'hello' function\\n\");\n      fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n      ret = 1;\n    }\n\n  pnothing = (int*)lt_dlsym(handle, \"nothing\");\n  /* Try assigning to the nothing variable. */\n  if (pnothing)\n    *pnothing = 1;\n  else\n    {\n      fprintf (stderr, \"did not find the 'nothing' variable\\n\");\n      fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n      ret = 1;\n    }\n\n  pfoo1 = (int(*)())lt_dlsym(handle, \"foo1\");\n  /* Just call the functions and check return values. */\n  if (pfoo1)\n    {\n      if ((*pfoo1) () == FOO_RET)\n        printf(\"foo1 is ok!\\n\");\n      else\n\tret = 1;\n    }\n  else {\n    pfoo2 = (int(*)())lt_dlsym(handle, \"foo2\");\n    if (pfoo2)\n      {\n        if ((*pfoo2) () == FOO_RET)\n          printf(\"foo2 is ok!\\n\");\n        else ret = 1;\n      }\n    else\n      {\n        fprintf (stderr, \"did not find any of the 'foo' functions\\n\");\n        fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n        ret = 1;\n      }\n  }\n  lt_dlclose(handle);\n  return ret;\n}\n\nint\nmlib_func (int argc, char **argv)\n{\n  int ret = 0;\n  int i;\n  /*\n   * Would be nice if this somehow worked for libraries, not just executables.\n   * LTDL_SET_PRELOADED_SYMBOLS();\n   */\n  if (lt_dlinit() != 0) {\n    fprintf (stderr, \"error during initialization: %s\\n\", lt_dlerror());\n    return 1;\n  }\n\n  for (i = 1; i < argc; i++)\n    if (test_dl(argv[i]))\n       ret = 1;\n\n  lt_dlexit();\n  return ret;\n}\n]])\n\nAT_DATA([sub.c],\n[[#include <config.h>\n#include <stdio.h>\nvoid sub (void) { printf (\"sub() called\\n\"); }\n]])\n\nAT_DATA([main.c],\n[[#include <config.h>\n#include <stdio.h>\n#include <string.h>\n\n#include \"foo.h\"\n#include \"ltdl.h\"\n\n#ifdef __cplusplus\n#  define EXPORT extern \"C\"\n#else\n#  define EXPORT extern\n#endif\n\nEXPORT int myfunc (void);\n\nint\ntest_dl (char *filename, int test_ext)\n{\n  lt_dlhandle handle;\n  const lt_dlinfo *info;\n  int (*pfoo1)() = 0;\n  int (*pfoo2)() = 0;\n  int (*phello)() = 0;\n  int *pnothing = 0;\n  int ret = 0;\n\n  if (test_ext)\n    handle = lt_dlopenext (filename);\n  else\n    handle = lt_dlopen (filename);\n\n  if (!handle) {\n    fprintf (stderr, \"can't open the module %s!\\n\", filename);\n    fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n    return 1;\n  }\n\n  info = lt_dlgetinfo(handle);\n  if (!info) {\n    fprintf (stderr, \"can't get module info: %s\\n\", lt_dlerror());\n    return 1;\n  }\n  if (info->name) {\n    printf (\"module name: %s\\n\", info->name);\n  } else {\n    printf (\"module is not a libtool module\\n\");\n  }\n  printf (\"module filename: %s\\n\", info->filename);\n  printf (\"module reference count: %i\\n\", info->ref_count);\n\n  phello = (int(*)())lt_dlsym(handle, \"hello\");\n  if (phello)\n    {\n      int value = (*phello) ();\n\n      printf (\"hello returned: %i\\n\", value);\n      if (value == HELLO_RET)\n        printf(\"hello is ok!\\n\");\n    }\n  else\n    {\n      fprintf (stderr, \"did not find the 'hello' function\\n\");\n      fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n      ret = 1;\n    }\n\n  pnothing = (int*)lt_dlsym(handle, \"nothing\");\n  /* Try assigning to the nothing variable. */\n  if (pnothing)\n    *pnothing = 1;\n  else\n    {\n      fprintf (stderr, \"did not find the 'nothing' variable\\n\");\n      fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n      ret = 1;\n    }\n\n  pfoo1 = (int(*)())lt_dlsym(handle, \"foo1\");\n  /* Just call the functions and check return values. */\n  if (pfoo1)\n    {\n      if ((*pfoo1) () == FOO_RET)\n        printf(\"foo1 is ok!\\n\");\n      else\n\tret = 1;\n    }\n  else {\n    pfoo2 = (int(*)())lt_dlsym(handle, \"foo2\");\n    if (pfoo2)\n      {\n        if ((*pfoo2) () == FOO_RET)\n          printf(\"foo2 is ok!\\n\");\n        else ret = 1;\n      }\n    else\n      {\n        fprintf (stderr, \"did not find any of the 'foo' functions\\n\");\n        fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n        ret = 1;\n      }\n  }\n  lt_dlclose(handle);\n  return ret;\n}\n\nint\nmyfunc ()\n{\n  return HELLO_RET;\n}\n\nint myvar;\n\nint\ntest_dlself ()\n{\n  lt_dlhandle handle;\n  int (*pmyfunc)() = 0;\n  int *pmyvar = 0;\n  int ret = 0;\n\n  handle = lt_dlopen(0);\n  if (!handle) {\n    fprintf (stderr, \"can't dlopen the program!\\n\");\n    fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n    return 1;\n  }\n\n  pmyfunc = (int(*)())lt_dlsym(handle, \"myfunc\");\n  if (pmyfunc)\n    {\n      int value = (*pmyfunc) ();\n\n      printf (\"myfunc returned: %i\\n\", value);\n      if (value == HELLO_RET)\n        printf(\"myfunc is ok!\\n\");\n    }\n  else\n    {\n      fprintf (stderr, \"did not find the 'myfunc' function\\n\");\n      fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n      ret = 1;\n    }\n\n  pmyvar = (int*)lt_dlsym(handle, \"myvar\");\n  /* Try assigning to the variable. */\n  if (pmyvar)\n    *pmyvar = 1;\n  else\n    {\n      fprintf (stderr, \"did not find the 'myvar' variable\\n\");\n      fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n      ret = 1;\n    }\n\n  lt_dlclose(handle);\n  return ret;\n}\n\nstatic int\ncallback (const char *filename, void *data)\n{\n  printf (\"%s: %s\\n\", (char *)data, filename);\n  return 0;\n}\n\nstatic int\ntry_iterate (const char *search_path)\n{\n  char *s = \"try_iterate\";\n  return lt_dlforeachfile (search_path, callback, s);\n}\n\n/* cheap dirname clone.  We require a '/' separator, nonempty and large\n   enough input, not ending with '/', and we will overwrite the input. */\nstatic char *\nmy_dirname (char *path)\n{\n  char *p = strrchr (path, '/');\n  if (p)\n    *p = '\\0';\n  else\n    {\n      path[0] = '.';\n      path[1] = '\\0';\n    }\n  return path;\n}\n\nint\nmain (int argc, char **argv)\n{\n  int i;\n  int ret = 0;\n  char *p;\n\n  printf (\"Welcome to GNU libtool mdemo!\\n\");\n\n  if (argc < 2) {\n    fprintf (stderr, \"usage: %s module [module...]\\n\", argv[0]);\n  }\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n  if (lt_dlinit() != 0) {\n    fprintf (stderr, \"error during initialization: %s\\n\", lt_dlerror());\n    return 1;\n  }\n\n  for (i = 1; i < argc; i++)\n  {\n    if (test_dl(argv[i], 0))\n       ret = 1;\n    p = strrchr(argv[i], '.');\n    if (p)\n      {\n\t*p = '\\0';\n\tif (test_dl(argv[i], 1))\n\t  ret = 1;\n\t*p = '.';\n      }\n  }\n\n  if (test_dlself())\n    ret = 1;\n\n  for (i = 1; i < argc; i++)\n    if (argv[i][0] != '\\0')\n      {\n\tmy_dirname (argv[i]);\n\tif (try_iterate (argv[i]))\n\t  ret = 1;\n      }\n\n  lt_dlexit();\n  return ret;\n}\n]])\n\nLT_AT_HOST_DATA([expout],\n[[Welcome to GNU Hell!\ncos (0.0) = 1\n** This is not GNU Hello. There is no built-in mail reader. **\n]])\n\nprefix=`pwd`/_inst\n]) # _LT_SETUP\n\n\n# _LT_CHECK_EXECUTE\n# -----------------\n# Run the listed make rules, and check that the built binaries work.\nm4_define([_LT_CHECK_EXECUTE],\n[LT_AT_MAKE\nLT_AT_EXEC_CHECK([./mdemo_static], 0, [ignore], [],\n    [./foo1.la ./libfoo2.la | $GREP '^try_iterate: '])\nLT_AT_EXEC_CHECK([./mdemo], 0, [ignore], [],\n    [./foo1.la ./libfoo2.la | $GREP '^try_iterate: '])\nLT_AT_EXEC_CHECK([./mdemo_static], 0, [ignore], [],\n    [`pwd`/foo1.la `pwd`/libfoo2.la | $GREP '^try_iterate: '])\nLT_AT_EXEC_CHECK([./mdemo], 0, [ignore], [],\n    [`pwd`/foo1.la `pwd`/libfoo2.la | $GREP '^try_iterate: '])\n])\n\n# _LT_CHECK_INSTALL\n# -----------------\n# Run the make install rule, and check that installed binaries work too.\nm4_define([_LT_CHECK_INSTALL],\n[LT_AT_MAKE([install])\n\n# Windows hosts search for dlls in the command path.\nPATH=$prefix/lib:$PATH\n\nLT_AT_EXEC_CHECK([$prefix/bin/mdemo_static], 0, [ignore], [],\n    [$prefix/lib/foo1.la $prefix/lib/libfoo2.la | $GREP '^try_iterate: '])\nLT_AT_EXEC_CHECK([$prefix/bin/mdemo], 0, [ignore], [],\n    [$prefix/lib/foo1.la $prefix/lib/libfoo2.la | $GREP '^try_iterate: '])\n])\n\n\n## ------------- ##\n## Mdemo static. ##\n## ------------- ##\n\nAT_SETUP([dynamically ltdl preload static modules])\n\n_LT_SETUP\n\nLT_AT_CHECK_CONFIG([--with-included-ltdl --disable-shared],\n                   [^build_old_libs=yes], [^build_libtool_libs=no])\n_LT_CHECK_EXECUTE\n_LT_CHECK_INSTALL\nLT_AT_CHECK_UNINSTALL\n\nAT_CLEANUP\n\n\n## ------------- ##\n## Mdemo shared. ##\n## ------------- ##\n\nAT_SETUP([dynamically ltdl load a shared module])\n\n_LT_SETUP\n\nLT_AT_CHECK_CONFIG([--with-included-ltdl --disable-static],\n                   [^build_old_libs=no], [^build_libtool_libs=yes])\n_LT_CHECK_EXECUTE\n_LT_CHECK_INSTALL\nLT_AT_CHECK_UNINSTALL\n\nAT_CLEANUP\n\n\n## ----------- ##\n## Mdemo conf. ##\n## ----------- ##\n\nAT_SETUP([ltdl load shared and static modules])\n\n_LT_SETUP\n\nLT_AT_CHECK_CONFIG([--with-included-ltdl],\n                   [^build_old_libs=yes], [^build_libtool_libs=yes])\n_LT_CHECK_EXECUTE\n_LT_CHECK_INSTALL\nLT_AT_CHECK_UNINSTALL\n\nAT_CLEANUP\n\n\n## ------------- ##\n## Mdemo dryrun. ##\n## ------------- ##\n\nAT_SETUP([ltdl dryrun])\n\n_LT_SETUP\n\nLT_AT_CHECK_CONFIG([--with-included-ltdl])\nLT_AT_MAKE([all-local libltdl/libltdlc.la])\n\n# create 'before' and 'after' in a directory deep within objdir,\n# so that their creation and removal does not modify even a timestamp\n# in the output of 'ls -l . $objdir'\n$lt_INSTALL -d \"$objdir/temp/temp\"\nbefore=$objdir/temp/temp/before\nafter=$objdir/temp/temp/after\n\n# Create a new libtool script that will enter dry run if the environment\n# variable force_dry_run is set\n$SED 's|^[[\t ]]*opt_dry_run=.*$|opt_dry_run=$force_dry_run|' libtool > ltnew && mv ltnew libtool\nexport force_dry_run\n\n# main.o is not compiled with libtool, but it depends on it, so make\n# sure it is up-to-date.  libfoo2.la is linked with libsub.la, so make\n# sure it exists, otherwise libtool will complain.\nforce_dry_run=false\nLT_AT_MAKE([main.$objext])\n\n# Making object files\n# ls -l in MSYS sometimes shows year, not time, for really fresh files.\nsleep 1\nls -l . \"$objdir\" | $EGREP -v '(^total|testsuite.log$)' > \"$before\"\nforce_dry_run=:\nLT_AT_MAKE([foo1.lo foo2.lo libsub.la])\nls -l . \"$objdir\" | $EGREP -v '(^total|testsuite.log$)' > \"$after\"\nAT_CHECK([cmp \"$before\" \"$after\"], 0, [ignore])\n\n# Now really make them\nforce_dry_run=false\nLT_AT_MAKE([foo1.lo foo2.lo libsub.la])\n\n# Making libraries\nsleep 1 # for MSYS\nls -l . \"$objdir\" | $EGREP -v '(^total|testsuite.log$)' > \"$before\"\nforce_dry_run=:\nLT_AT_MAKE([foo1.la libfoo2.la])\nls -l . \"$objdir\" | $EGREP -v '(^total|testsuite.log$)' > \"$after\"\nAT_CHECK([cmp \"$before\" \"$after\"], 0, [ignore])\n\n# Now really make them\nforce_dry_run=false\nLT_AT_MAKE([foo1.la libfoo2.la])\n\n# Making programs\nsleep 1 # for MSYS\nls -l . \"$objdir\" | $EGREP -v '(^total|testsuite.log$)' > \"$before\"\nforce_dry_run=:\nLT_AT_MAKE([mdemo$EXEEXT mdemo_static$EXEEXT])\nls -l . \"$objdir\" | $EGREP -v '(^total|testsuite.log$)' > \"$after\"\nAT_CHECK([cmp \"$before\" \"$after\"], 0, [ignore])\n\n# Running $MAKE install\n# Libtool does not create these directories\n$lt_INSTALL -d \"$prefix/bin\"\n$lt_INSTALL -d \"$prefix/include\"\n$lt_INSTALL -d \"$prefix/lib\"\n\nsleep 1 # for MSYS\nls -l . \"$objdir\" | $EGREP -v '(^total|testsuite.log$)' > \"$before\"\nls -lR \"$prefix\" | $EGREP -v '(^total|testsuite.log$)' >> \"$before\"\nforce_dry_run=:\nLT_AT_MAKE([install])\n\nls -l . \"$objdir\" | $EGREP -v '(^total|testsuite.log$)' > \"$after\"\nls -lR \"$prefix\" | $EGREP -v '(^total|testsuite.log$)' >> \"$after\"\nAT_CHECK([cmp \"$before\" \"$after\"], 0, [ignore])\n\n# Now really install\nforce_dry_run=false\nLT_AT_MAKE([install])\n\n# Running $MAKE uninstall\n# Libtool does not uninstall the programs, remove them first\nrm -f \"$prefix/bin/mdemo$EXEEXT\" \"$prefix/bin/mdemo_static$EXEEXT\"\n\nsleep 1 # for MSYS\nls -l . \"$objdir\" | $EGREP -v '(^total|testsuite.log$)' > \"$before\"\nls -lR \"$prefix\" | $EGREP -v '(^total|testsuite.log$)' >> \"$before\"\nforce_dry_run=:\nLT_AT_MAKE([uninstall])\nls -l . \"$objdir\" | $EGREP -v '(^total|testsuite.log$)' > \"$after\"\nls -lR \"$prefix\" | $EGREP -v '(^total|testsuite.log$)' >> \"$after\"\nAT_CHECK([cmp \"$before\" \"$after\"], 0, [ignore])\n\n# Now really uninstall\nforce_dry_run=false\nLT_AT_CHECK_UNINSTALL\n\nAT_CLEANUP\n\n## ------- ##\n## Mdemo2. ##\n## ------- ##\n\nAT_SETUP([link with library that loads ltdl modules])\n\n_LT_SETUP\n\nAT_DATA([mdemo.mk],\n[[bin_PROGRAMS += mdemo2 mdemo2_static\n\n# Create a version of mdemo2 that links a library that does dlopen.\nmdemo2_LDFLAGS = -export-dynamic \"-dlopen\" force\nmdemo2_LDADD = libmlib.la\n\n# Create a statically linked version of mdemo.\nmdemo2_static_SOURCES = mdemo2.c\nmdemo2_static_LDFLAGS = $(STATIC) $(mdemo2_LDFLAGS)\nmdemo2_static_LDADD = $(mdemo2_LDADD)\nmdemo2_static_DEPENDENCIES = $(mdemo2_DEPENDENCIES)\n]])\n\nAT_DATA([mdemo2.c],\n[[#include <stdio.h>\n#include \"ltdl.h\"\n\nextern int mlib_func (int, char **);\n\nint main (int argc, char **argv)\n{\n  int ret = 0;\n\n  printf (\"Welcome to GNU libtool mdemo2!\\n\");\n  if (argc < 2) {\n    fprintf (stderr, \"usage: %s module [module...]\\n\", argv[0]);\n  }\n\n  /* This must be called in the program to get the preloaded symbols */\n  LTDL_SET_PRELOADED_SYMBOLS();\n\n  ret = mlib_func(argc, argv);\n\n  return ret;\n}\n]])\n\n# Normalize line endings after $EGREP instead of using LT_AT_HOST_DATA\n# here, since $EGREP *may* normalize line endings for us.\nAT_DATA([expout],\n[[Welcome to GNU libtool mdemo2!\nmodule name: foo1\nmodule reference count: 1\n** This is foolib 1 **\nhello returned: 57616\nhello is ok!\ncos (0.0) = 1\nsub() called\nfoo1 is ok!\nmodule name: libfoo2\nmodule reference count: 1\n** This is foolib 2 **\nhello returned: 57616\nhello is ok!\nsin (0.0) = 0\nsub() called\nfoo2 is ok!\n]])\n\nLT_AT_CHECK_CONFIG([--with-included-ltdl])\n\nLT_AT_MAKE\n\nLT_AT_EXEC_CHECK([./mdemo2_static], 0, [stdout], [],\n    [./foo1.la ./libfoo2.la | $EGREP -v '^module filename: '])\nLT_AT_UNIFY_NL([stdout])\nLT_AT_CHECK([diff expout stdout])\n\nLT_AT_EXEC_CHECK([./mdemo2], 0, [stdout], [],\n    [./foo1.la ./libfoo2.la | $EGREP -v '^module filename: '])\nLT_AT_UNIFY_NL([stdout])\nLT_AT_CHECK([diff expout stdout])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/tests/lt_dladvise.at": "# lt_dladvise.at -- test libltdl functionality                -*- Autotest -*-\n#\n#   Copyright (C) 2007-2009, 2011-2019 Free Software Foundation, Inc.\n#   Written by Gary V. Vaughan, 2007\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\n# Try to keep the new interfaces of HEAD separate from those of\n# branch-1-5 to facilitate testing of older releases.\n\nAT_SETUP([lt_dlopenadvise library loading])\nAT_KEYWORDS([libltdl])\n\nAT_DATA([main.c],\n[[#include <ltdl.h>\n#include <stdio.h>\n\ntypedef int funcp (int);\n\nstatic int errors = 0;\n\nstatic void\ncomplain (const char *msg)\n{\n  const char *errmsg = lt_dlerror ();\n  fprintf (stderr, \"%s\", msg);\n  if (errmsg)\n    fprintf (stderr, \": %s\\n\", errmsg);\n  else\n    fprintf (stderr, \".\\n\");\n  ++errors;\n}\n\nstatic lt_dlhandle\nmoduleopen (const char *filename, lt_dladvise advise)\n{\n  lt_dlhandle handle;\n\n  handle = lt_dlopenadvise (filename, advise);\n  if (!handle)\n    {\n      fprintf (stderr, \"can't open the module %s!\\n\", filename);\n      complain (\"error was\");\n    }\n\n  return handle;\n}\n\nstatic int\nmoduletest (lt_dlhandle handle, const char *fname, const char *vname)\n{\n  funcp *f = (funcp *) lt_dlsym (handle, fname);\n  int   *v = (int *)   lt_dlsym (handle, vname);\n\n  if (!f)\n    {\n      fprintf (stderr, \"function '%s' not found\\n\", fname);\n      ++errors;\n      return -1;\n    }\n  if (!v)\n    {\n      fprintf (stderr, \"variable '%s' not found\\n\", vname);\n      ++errors;\n      return -1;\n    }\n  return f (*v);\n}\n\nvoid\nhint_ext (void)\n{\n  lt_dlhandle handle;\n  lt_dladvise advise;\n\n  if (lt_dladvise_init (&advise) || lt_dladvise_ext (&advise))\n    complain (\"error setting advise ext\");\n\n  handle = moduleopen (\"libdepend\", advise);\n\n  if (handle)\n    printf (\"depend: %d\\n\", moduletest (handle, \"g\", \"j\"));\n\n  lt_dladvise_destroy (&advise);\n}\n\nvoid\nhint_resident (void)\n{\n  const lt_dlinfo *info;\n  lt_dlhandle handle;\n  lt_dladvise advise;\n\n  if (lt_dladvise_init (&advise) || lt_dladvise_resident (&advise))\n    complain (\"error setting advise resident\");\n\n  handle = moduleopen (\"libresident.la\", advise);\n\n  if (handle)\n    {\n      info = lt_dlgetinfo (handle);\n      if (!info->is_resident)\n\tcomplain (\"error taking advise resident\");\n\n      /* cannot close resident modules */\n      if (lt_dlclose (handle) == 0)\n\tcomplain (\"successfully unloaded resident module\");\n\n      printf (\"resident: %d\\n\", moduletest (handle, \"func\", \"numb\"));\n    }\n\n  lt_dladvise_destroy (&advise);\n}\n\nvoid\nhint_local (void)\n{\n  const lt_dlinfo *info;\n  lt_dlhandle handle;\n  lt_dladvise advise;\n\n  if (lt_dladvise_init (&advise) || lt_dladvise_local (&advise))\n    complain (\"error setting advise local\");\n\n  handle = moduleopen (\"liblocal.la\", advise);\n\n  if (handle)\n    {\n      info = lt_dlgetinfo (handle);\n      printf (\"local: %d\\n\", moduletest (handle, \"f\", \"i\"));\n\n      /* If the symlocal hint was taken, don't unload this module\n         and test that our local symbolnames won't clash with modglobal.  */\n      if (!info->is_symlocal && lt_dlclose (handle))\n\tcomplain (\"error unloading modlocal\");\n    }\n\n  lt_dladvise_destroy (&advise);\n}\n\nvoid\nhint_global (void)\n{\n  const lt_dlinfo *info;\n  lt_dlhandle handle;\n  lt_dladvise advise;\n\n  if (lt_dladvise_init (&advise) || lt_dladvise_global (&advise))\n    complain (\"error setting advise global\");\n\n  handle = moduleopen (\"libglobal.la\", advise);\n\n  if (handle)\n    {\n      info = lt_dlgetinfo (handle);\n      printf (\"global: %d\\n\", moduletest (handle, \"f\", \"i\"));\n\n      /* Don't attempt to load moddepend unless modglobal was successfully\n         loaded and the symglobal hint was taken, and the system allows to\n\t have undefined symbols.  */\n      if (info && info->is_symglobal && HAVE_UNDEFINED_SYMBOLS)\n        {\n          hint_ext ();\n        }\n      else\n        {\n          /* Fake the output so the test won't fail when using a dlloader\n             unable to take symglobal hints.  */\n          printf (\"depend: 5\\n\");\n        }\n    }\n\n  lt_dladvise_destroy (&advise);\n}\n\nvoid\nhint_preload (void)\n{\n  lt_dlhandle handle;\n  lt_dladvise advise;\n\n  if (lt_dladvise_init (&advise) || lt_dladvise_preload (&advise))\n    complain (\"error setting advise preload\");\n\n  handle = moduleopen (\"libpreload.la\", advise);\n\n  if (handle)\n    {\n      printf(\"preload: %d\\n\", moduletest (handle, \"h\", \"k\"));\n    }\n\n  lt_dladvise_destroy (&advise);\n}\n\nint\nmain (void)\n{\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n\n  if (lt_dlinit() != 0)\n    {\n      fprintf (stderr, \"error during initialization: %s\\n\", lt_dlerror());\n      return 1;\n    }\n\n  hint_resident ();\n  hint_local ();\n#ifdef HAVE_SHARED\n  hint_global ();\n#else\n  /* This ugly hack is because we have symbols with the same name in both the\n     global module and the local one, we can't lt_dlopen the local module\n     locally and then later load the global module globally because of this.\n     Instead of skipping the test entirely, we test what we can and\n     have this hack. */\n  printf (\"global: 4\\n\");\n  printf (\"depend: 5\\n\");\n#endif\n  hint_preload ();\n\n  if (lt_dlexit () != 0)\n    complain (\"error during exit\");\n\n  return (errors != 0);\n}\n]])\n\nAT_DATA([modresident.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\nint func (int x) { return x / 3; }\nint numb = 7;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nAT_DATA([modlocal.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\nint f (int x) { return (x * x) / 10; }\nint i = 6;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nAT_DATA([modglobal.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\nint f (int x) { return x - 1; }\nint i = 5;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nAT_DATA([moddepend.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\nextern int f (int), i;\nint g (int x) { return f (i) + x - 3; }\nint j = 4;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nAT_DATA([modpreload.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\nint h (int x) { return 2 * x; }\nint k = 3;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nLT_AT_HOST_DATA([expout],\n[[resident: 2\nlocal: 3\nglobal: 4\ndepend: 5\npreload: 6\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f \"$LIBLTDL\" || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\n\ndlopenable='resident local global'\ndlpreloadable='preload'\n\n# ------------------------------------------------------------------------- #\n# The depend test makes no sense unless compiled without -no-undefined. By  #\n# not building the depend module in that case, when this test passes we can #\n# be sure that hint_global() above, is being correctly informed those hosts #\n# are reporting not able to accept the global hint to lt_dlopenadvise().    #\n# ------------------------------------------------------------------------- #\n\nhave_shared=false\n$LIBTOOL --features | $GREP 'enable shared libraries' >/dev/null && have_shared=:\n\ncase $host_os,$have_shared in\ncygwin* | mingw* | cegcc* | *,false)\n  # These hosts do not support linking without -no-undefined\n  CPPFLAGS=\"$CPPFLAGS -DHAVE_UNDEFINED_SYMBOLS=0\"\n  ;;\n*)\n  CPPFLAGS=\"$CPPFLAGS -DHAVE_UNDEFINED_SYMBOLS=1\"\n  dlopenable=\"$dlopen depend\"\n  $LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c moddepend.c\n  AT_CHECK([$LIBTOOL --mode=link $CC -module $CFLAGS $LDFLAGS -o libdepend.la ]dnl\n           [moddepend.lo -rpath /foo -avoid-version], [], [ignore], [ignore])\n  ;;\nesac\n\n$have_shared && CPPFLAGS=\"$CPPFLAGS -DHAVE_SHARED\"\n\n# ------------------------------------------------------------------------- #\n# Other modules can be tested correctly even when built with -no-undefined. #\n# ------------------------------------------------------------------------- #\n\nLDFLAGS=\"$LDFLAGS -no-undefined\"\n\n$CC $CPPFLAGS $CFLAGS -c main.c\nfor name in resident local global preload; do\n  # FIXME: adding -static to libpreload shouldn't be necessary.\n  #        Fix this properly in ltmain, then remove this workaround.\n  if test preload = \"$name\"; then\n    st=-static\n  else\n    st=\n  fi\n  $LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c mod$name.c\n  AT_CHECK([$LIBTOOL --mode=link $CC -module $CFLAGS $LDFLAGS -o lib$name.la ]dnl\n           [mod$name.lo $st -rpath /foo -avoid-version], [], [ignore], [ignore])\ndone\n\npreloaded=\nfor module in $dlpreloadable; do\n  preloaded=\"${preloaded+$preloaded }-dlpreopen lib$module.la\"\ndone\n\nmodules=\nfor module in $dlopenable; do\n  modules=\"${modules+$modules }-dlopen lib$module.la\"\ndone\n\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o main$EXEEXT main.$OBJEXT $preloaded $modules $LIBLTDL],\n\t [], [ignore], [ignore])\n\n# Remove loadable libpreload module, so we know it is the preloaded module\n# that is being executed by a successful test invocation:\nAT_CHECK([$LIBTOOL --mode=clean rm -f libpreload.la], [], [ignore], [ignore])\n\nLT_AT_NOINST_EXEC_CHECK([./main], [$modules], [], [expout], [])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/tests/loadlibrary.at": "# loadlibrary.at -- test loadlibrary functionality          -*- Autotest -*-\n#\n#   Copyright (C) 2010-2019 Free Software Foundation, Inc.\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_SETUP([loadlibrary error messages])\nAT_KEYWORDS([libltdl])\n\neval \"`$LIBTOOL --config | $EGREP '^(objdir)='`\"\n\nAT_DATA([main.c],\n[[#include <ltdl.h>\n#include <stdio.h>\n\nstatic int\nstandard_error_message(const char *error)\n{\n  int error_number;\n\n  for (error_number = 0; error_number < LT_ERROR_MAX; ++error_number)\n    {\n      lt_dlseterror (error_number);\n      if (error == lt_dlerror ())\n\t{\n\t  return 1;\n\t}\n    }\n\n  lt_dlseterror (LT_ERROR_UNKNOWN);\n  return 0;\n}\n\nint\nmain (int argc, char* argv[])\n{\n  int err = 0;\n  lt_dlhandle module = NULL;\n  const lt_dlvtable *loadlibrary;\n  const lt_dlvtable *preopen;\n  lt_dlloader loader = NULL;\n  lt_dlloader next;\n  const lt_dlvtable *vtable;\n  void *symbol;\n  const char *error;\n\n  if (argc < 2)\n    {\n      fprintf (stderr, \"usage: %s plugin [symbol]\\n\", argv[0]);\n      return 1;\n    }\n\n  lt_dlinit ();\n\n  loadlibrary = lt_dlloader_find (\"lt_loadlibrary\");\n  if (!loadlibrary)\n    {\n      /* Skip if the loadlibrary loader isn't supported */\n      printf (\"loadlibrary loader not found\\n\");\n      err = 77;\n      goto cleanup;\n    }\n\n  preopen = lt_dlloader_find (\"lt_preopen\");\n  if (!loadlibrary)\n    {\n      printf (\"preopen loader not found\\n\");\n      err = 2;\n      goto cleanup;\n    }\n\n  /* Remove all loaders except the preopen and loadlibrary loaders. */\n  while (next = lt_dlloader_next (loader))\n    {\n      if (lt_dlloader_get (next) == loadlibrary)\n\t{\n\t  loader = next;\n\t  continue;\n\t}\n\n      if (lt_dlloader_get (next) == preopen)\n\t{\n\t  loader = next;\n\t  continue;\n\t}\n\n      lt_dlloader_remove (lt_dlloader_get (next)->name);\n    }\n\n  module = lt_dlopen (argv[1]);\n  error = lt_dlerror ();\n\n  if (module)\n    {\n      printf (\"lt_dlopen: success!\\n\");\n\n      if (argc == 2)\n\t{\n\t  /* But failure was the desired result... */\n\t  printf (\"expected failure\\n\");\n\t  err = 2;\n\t  goto cleanup;\n\t}\n    }\n  else if (argc > 2)\n    {\n      /* Didn't expect failure... */\n      printf (\"lt_dlopen: failure: %s\\n\", error);\n      err = 2;\n      goto cleanup;\n    }\n  else if (standard_error_message (error))\n    {\n      /* Expected custom error message... */\n      printf (\"lt_dlopen: standard error (bad): %s\\n\", error);\n      err = 1;\n      goto cleanup;\n    }\n  else\n    {\n      printf (\"lt_dlopen: custom error (good): %s\\n\", error);\n      goto cleanup;\n    }\n\n  symbol = lt_dlsym (module, argv[2]);\n  error = lt_dlerror ();\n\n  if (symbol)\n    {\n      printf (\"lt_dlsym: success!\\n\");\n    }\n  else if (standard_error_message (error))\n    {\n      /* Expected custom failure message... */\n      printf (\"lt_dlsym: standard error (bad): %s\\n\", error);\n      err = 1;\n    }\n  else\n    {\n      printf (\"lt_dlsym: custom error (good): %s\\n\", error);\n    }\n\ncleanup:\n  if (module)\n    {\n      lt_dlclose (module);\n    }\n  lt_dlexit ();\n  return err;\n}\n]])\n\nAT_DATA([foomod.c],\n[[\n#ifdef __cplusplus\nextern \"C\"\n#endif\nint foosym (void);\nint\nfoosym (void)\n{\n  return 0;\n}\n]])\n\nAT_DATA([bardep.c],\n[[\n#ifdef __cplusplus\nextern \"C\"\n#endif\nint bardep (void);\nint\nbardep (void)\n{\n  return 0;\n}\n]])\n\nAT_DATA([barmod.c],\n[[\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nint bardep (void);\nint barsym (void);\n#ifdef __cplusplus\n}\n#endif\nint\nbarsym (void)\n{\n  return bardep ();\n}\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f \"$LIBLTDL\" || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\ninst=`pwd`/inst\nlibdir=$inst/lib\n\nAT_CHECK([$CC $CPPFLAGS $CFLAGS -c main.c], [], [ignore], [ignore])\nfor file in foomod.c bardep.c barmod.c; do\n  AT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c $file],\n\t   [], [ignore], [ignore])\ndone\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o foomod.la ]dnl\n\t [-rpath $libdir -module -avoid-version -no-undefined ]dnl\n\t [foomod.lo],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o libbardep.la ]dnl\n\t [-rpath $libdir -avoid-version -no-undefined ]dnl\n\t [bardep.lo],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o barmod.la ]dnl\n\t [-rpath $libdir -module -avoid-version -no-undefined ]dnl\n\t [barmod.lo ./libbardep.la],\n\t [], [ignore], [ignore])\n\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o main$EXEEXT ]dnl\n\t [main.$OBJEXT $LIBLTDL],\n\t [], [ignore], [ignore])\n\n. ./foomod.la\nAT_CHECK([test -n \"$dlname\" || (exit 77)])\n\nLT_AT_EXEC_CHECK([./main], [], [ignore], [ignore], [./foomod.la no_symbol])\n\n#   chmod -x doesn't appear to work in MSYS, and Wine can load no-exec dlls.\ndnl chmod -x $objdir/$dlname\ndnl LT_AT_EXEC_CHECK([./main], [], [ignore], [ignore], [./foomod.la])\n\nrm -f $objdir/$dlname\nLT_AT_EXEC_CHECK([./main], [], [ignore], [ignore], [./foomod.la])\n\nLT_AT_EXEC_CHECK([./main], [], [ignore], [ignore], [./barmod.la no_symbol])\n\n. ./libbardep.la\n#   chmod -x doesn't appear to work in MSYS, and Wine can load no-exec dlls.\ndnl chmod -x $objdir/$dlname\ndnl LT_AT_EXEC_CHECK([./main], [], [ignore], [ignore], [./barmod.la])\n\nrm -f $objdir/$dlname\nLT_AT_EXEC_CHECK([./main], [], [ignore], [ignore], [./barmod.la])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/tests/lt_dlopenext.at": "# lt_dlopenext.at -- test libltdl functionality             -*- Autotest -*-\n#\n#   Copyright (C) 2009-2019 Free Software Foundation, Inc.\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_SETUP([lt_dlopenext error messages])\nAT_KEYWORDS([libltdl])\n\n# This test requires shared library support.\nAT_CHECK([$LIBTOOL --features | $GREP 'enable shared libraries' || exit 77],\n\t [], [ignore])\n\nprefix=`pwd`/inst\nlibdir=$prefix/lib\nbindir=$prefix/bin\nmkdir $prefix $libdir $bindir\n\n# This code is copied from the Autobook:\n# <http://sources.redhat.com/autobook/autobook/autobook_169.html>\n# so if it needs changes, be sure to notify the Autobook authors\n# about them.\n\nAT_DATA([simple-module.c],\n[[\n#include <stdio.h>\n\n#ifdef __cplusplus\nextern \"C\"\n#endif\nint\nrun (const char *argument)\n{\n  printf (\"Hello, %s!\\n\", argument);\n  return 0;\n}\n]])\n\nAT_DATA([ltdl-loader.c],\n[[\n#include <stdio.h>\n#include <stdlib.h>\n#ifndef EXIT_FAILURE\n#  define EXIT_FAILURE        1\n#  define EXIT_SUCCESS        0\n#endif\n\n#include <limits.h>\n#ifndef PATH_MAX\n#  define PATH_MAX 255\n#endif\n\n#include <string.h>\n#include <ltdl.h>\n\n#ifndef MODULE_PATH_ENV\n#  define MODULE_PATH_ENV        \"MODULE_PATH\"\n#endif\n\ntypedef int entrypoint (const char *argument);\n\n/* Save and return a copy of the dlerror() error  message,\n   since the next API call may overwrite the original. */\nstatic char *dlerrordup (char *errormsg);\n\nint\nmain (int argc, const char *argv[])\n{\n  char *errormsg = NULL;\n  lt_dlhandle module = NULL;\n  entrypoint *run = NULL;\n  int errors = 0;\n\n  if (argc != 3)\n    {\n      fprintf (stderr, \"USAGE: main MODULENAME ARGUMENT\\n\");\n      exit (EXIT_FAILURE);\n    }\n\n  /* Initialise libltdl. */\n  errors = lt_dlinit ();\n\n  /* Set the module search path. */\n  if (!errors)\n    {\n      const char *path = getenv (MODULE_PATH_ENV);\n\n      if (path != NULL)\n        errors = lt_dlsetsearchpath (path);\n    }\n\n  /* Load the module. */\n  if (!errors)\n    module = lt_dlopenext (argv[1]);\n\n  /* Find the entry point. */\n  if (module)\n    {\n      run = (entrypoint *) lt_dlsym (module, \"run\");\n\n      /* In principle, run might legitimately be NULL, so\n         I don't use run == NULL as an error indicator\n         in general. */\n      errormsg = dlerrordup (errormsg);\n      if (errormsg != NULL)\n        {\n          errors = lt_dlclose (module);\n          module = NULL;\n        }\n    }\n  else\n    errors = 1;\n\n  /* Call the entry point function. */\n  if (!errors)\n    {\n      int result = (*run) (argv[2]);\n      if (result < 0)\n        errormsg = strdup (\"module entry point execution failed\");\n      else\n        printf (\"\\t=> %d\\n\", result);\n    }\n\n  /* Unload the module, now that we are done with it. */\n  if (!errors)\n    errors = lt_dlclose (module);\n\n  if (errors)\n    {\n      /* Diagnose the encountered error. */\n      errormsg = dlerrordup (errormsg);\n\n      if (!errormsg)\n        {\n          fprintf (stderr, \"%s: dlerror() failed.\\n\", argv[0]);\n          return EXIT_FAILURE;\n        }\n    }\n\n  /* Finished with ltdl now. */\n  if (!errors)\n    if (lt_dlexit () != 0)\n      errormsg = dlerrordup (errormsg);\n\n  if (errormsg)\n    {\n      fprintf (stderr, \"%s: %s.\\n\", argv[0], errormsg);\n      free (errormsg);\n      exit (EXIT_FAILURE);\n    }\n\n  return EXIT_SUCCESS;\n}\n\n/* Be careful to save a copy of the error message,\n   since the  next API call may overwrite the original. */\nstatic char *\ndlerrordup (char *errormsg)\n{\n  char *error = (char *) lt_dlerror ();\n  if (error && !errormsg)\n    errormsg = strdup (error);\n  return errormsg;\n}\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f \"$LIBLTDL\" || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS -no-undefined\"\n\nAT_CHECK([$LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c simple-module.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o simple-module.la ]dnl\n\t [simple-module.lo -rpath $libdir -module -avoid-version],\n\t [], [ignore], [ignore])\nAT_CHECK([$CC $CPPFLAGS $CFLAGS -c ltdl-loader.c],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o ltdl-loader$EXEEXT ]dnl\n\t [ltdl-loader.$OBJEXT -dlopen self $LIBLTDL],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp simple-module.la $libdir/simple-module.la], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=clean rm -f simple-module.la], [], [ignore], [ignore])\n\n# Try finding the module with and without the .la file, with absolute\n# path, relative path, or one of the path variables.  Do not override\n# $PATH for w32, see shlibpath.at for the hacks this requires.\n#\n# Finding the module without the .la file will not work if MODULE_EXT\n# aka. shared_ext is empty.\n\neval `$LIBTOOL --config | $EGREP '^(shlibpath_var|shrext_cmds)='`\n\nmodule=no\neval shared_ext=\\\"$shrext_cmds\\\"\nif test -n \"$shared_ext\"; then\n  have_lafile=\"with without\"\nelse\n  have=with\nfi\n\nif test PATH = \"$shlibpath_var\"; then\n  $unset shlibpath_var || shlibpath_var=\nfi\n\nfor lafile in $have_lafile; do\n  if test without = \"$lafile\"; then\n    rm $libdir/simple-module.la\n  fi\n\n  for dir in inst/lib \"$libdir\"; do\n    LT_AT_EXEC_CHECK([./ltdl-loader], [], [stdout], [ignore],\n\t\t     [$dir/simple-module World])\n    AT_CHECK([$GREP \"Hello, World\" stdout], [], [ignore])\n\n    for var in MODULE_PATH LTDL_LIBRARY_PATH $shlibpath_var\n    do\n      eval $var=\\$dir\n      export $var\n      LT_AT_EXEC_CHECK([./ltdl-loader], [], [stdout], [ignore],\n\t\t       [simple-module World])\n      AT_CHECK([$GREP \"Hello, World\" stdout], [], [ignore])\n      $unset $var || eval $var=\n    done\n  done\ndone\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/tests/need_lib_prefix.at": "# need-lib-prefix.at -- test libltdl functionality            -*- Autotest -*-\n#\n#   Copyright (C) 2007-2008, 2010-2019 Free Software Foundation, Inc.\n#   Written by Gary V. Vaughan, 2007\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_SETUP([enforced lib prefix])\nAT_KEYWORDS([libltdl libtool])\n\n# Originally written to simulate a failure visible on systems\n# that need a library prefix like 'lib', such as BeOS.  Currently\n# the prefix is hardcoded as 'lib', so systems that require a\n# different prefix skips the test.\n\nAT_DATA([main.c],\n[[#include <ltdl.h>\n#include <stdio.h>\n\ntypedef int fun (int);\n\nstatic int errors = 0;\n\nstatic void\ncomplain (const char *msg)\n{\n  const char *errmsg = lt_dlerror ();\n  fprintf (stderr, \"%s\", msg);\n  if (errmsg)\n    fprintf (stderr, \": %s\\n\", errmsg);\n  else\n    fprintf (stderr, \".\\n\");\n  ++errors;\n}\n\nstatic lt_dlhandle\nmoduleopen (const char *filename)\n{\n  lt_dlhandle handle;\n\n  handle = lt_dlopen (filename);\n  if (!handle)\n    {\n      fprintf (stderr, \"can't open the module %s!\\n\", filename);\n      complain (\"error was\");\n    }\n\n  return handle;\n}\n\nstatic int\nmoduletest (lt_dlhandle handle)\n{\n  const lt_dlinfo *info = lt_dlgetinfo (handle);\n  fun *f = (fun *) lt_dlsym (handle, \"f\");\n  int *v = (int *) lt_dlsym (handle, \"i\");\n\n  if (!f)\n    {\n      complain (\"function 'f' not found\");\n      return 1;\n    }\n  if (!v)\n    {\n      complain (\"variable 'i' not found\");\n      return 1;\n    }\n  printf (\"%s: %d\\n\", info->name, f (*v));\n\n  return 0;\n}\n\nint\nmain (int argc, char **argv)\n{\n  lt_dlhandle handle;\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n\n  if (lt_dlinit() != 0)\n    {\n      fprintf (stderr, \"error during initialization: %s\\n\", lt_dlerror());\n      return 1;\n    }\n\n  if (lt_dlpreload_open (0, moduletest) != 0)\n    complain (\"error during preloading\");\n\n  if (lt_dlexit () != 0)\n    complain (\"error during exit\");\n\n  return (errors != 0);\n}\n]])\n\nAT_DATA([foo1.c],\n[[#define f foo1_LTX_f\n#define i foo1_LTX_i\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nint f (int x) { return x / 3; }\nint i = 7;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nAT_DATA([foo2.c],\n[[#define f libfoo2_LTX_f\n#define i libfoo2_LTX_i\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nint f (int x) { return (x * x) / 10; }\nint i = 6;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nLT_AT_HOST_DATA([expout],\n[[libfoo1: 2\nlibfoo2: 3\n]])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f \"$LIBLTDL\" || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\nLDFLAGS=$LDFLAGS\n\n# Skip this test when libraries are not normally prefixed with lib.\n# E.g., for MSVC and OS/2.\neval \"`$LIBTOOL --config | $EGREP '^(libname_spec)='`\"\nname=\neval libname=\\\"$libname_spec\\\"\nAT_CHECK([test lib = \"$libname\" || exit 77])\n\n# Create our own libtool, forcing need_lib_prefix setting\n$SED 's|^\\(need_lib_prefix\\)=.*$|\\1=unknown|' $LIBTOOL > ./libtool\nLIBTOOL=\"$SHELL ./libtool\"\n\n# Installation directory:\ninstdir=`pwd`/_inst\n\n$CC $CPPFLAGS $CFLAGS -c main.c\nfor file in foo1 foo2; do\n  $LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c $file.c\ndone\n\nAT_CHECK([$LIBTOOL --mode=link $CC -module -avoid-version $CFLAGS $LDFLAGS -o foo1.la foo1.lo -rpath $instdir/lib],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC -module -avoid-version $CFLAGS $LDFLAGS -o libfoo2.la foo2.lo -rpath $instdir/lib],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o main$EXEEXT main.$OBJEXT -dlpreopen foo1.la -dlpreopen libfoo2.la $LIBLTDL],\n          [], [ignore], [ignore])\n\nLT_AT_NOINST_EXEC_CHECK([./main], [-dlopen foo1.la -dlopen libfoo2.la],\n\t      [], [expout], [])\n\n# Install the libraries.\nmkdir $instdir\nmkdir $instdir/lib\n$LIBTOOL --mode=install cp foo1.la $instdir/lib/foo1.la\n$LIBTOOL --mode=install cp libfoo2.la $instdir/lib/libfoo2.la\n\n# Install the binary\nmkdir $instdir/bin\n$LIBTOOL --mode=install cp main$EXEEXT $instdir/bin/main$EXEEXT\n\nLT_AT_EXEC_CHECK([$instdir/bin/main], [], [expout], [])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/tests/lt_dlexit.at": "# lt_dlexit.at -- test libltdl functionality                  -*- Autotest -*-\n#\n#   Copyright (C) 2007-2008, 2010-2019 Free Software Foundation, Inc.\n#   Written by Dave Brolley & Ralf Wildenhues, 2007\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\n# Try to keep the new interfaces of HEAD separate from those of\n# branch-1-5 to facilitate testing of older releases.\n\nAT_BANNER([Libltdl functionality.])\n\nAT_SETUP([lt_dlexit unloading libs])\nAT_KEYWORDS([libltdl])\n\n# Test for\n# http://lists.gnu.org/archive/html/bug-libtool/2007-01/msg00014.html\n# http://lists.gnu.org/archive/html/bug-libtool/2008-03/msg00013.html\n\nAT_DATA([main.c],\n[[#include <ltdl.h>\n#include <stdio.h>\n#include <string.h>\n\ntypedef int (*pfun_T) (int);\ntypedef int *pvar_T;\n\n/* lt_dlopen wrapper */\nstatic lt_dlhandle\nxdlopen (const char *filename)\n{\n  lt_dlhandle handle = lt_dlopen (filename);\n  if (!handle) {\n    fprintf (stderr, \"can't open the module %s!\\n\", filename);\n    fprintf (stderr, \"error was: %s\\n\", lt_dlerror());\n  }\n  return handle;\n}\n\n/* lt_dlsym wrapper: try one function and one variable */\nstatic int\nxdlsymtest (lt_dlhandle handle, const char *func, const char *var)\n{\n  pfun_T pf = (pfun_T) lt_dlsym (handle, func);\n  pvar_T pv = (pvar_T) lt_dlsym (handle, var);\n  if (pf == NULL) {\n    fprintf (stderr, \"function '%s' not found\\n\", func);\n    return 1;\n  }\n  if (pv == NULL) {\n    fprintf (stderr, \"variable '%s' not found\\n\", var);\n    return 1;\n  }\n  return (*pf) (*pv);\n}\n\nint\nmain (void)\n{\n  lt_dlhandle b1;\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n  if (lt_dlinit() != 0) {\n    fprintf (stderr, \"error during initialization: %s\\n\", lt_dlerror());\n    return 1;\n  }\n  if (lt_dlexit() != 0) {\n    fprintf (stderr, \"error during first lt_dlexit: %s\\n\", lt_dlerror());\n    return 1;\n  }\n  if (lt_dlinit() != 0) {\n    fprintf (stderr, \"error during second initialization: %s\\n\", lt_dlerror());\n    return 1;\n  }\n  if (!(b1 = xdlopen (\"modb1.la\"))) return 1;\n  if (xdlsymtest (b1, \"fb1\", \"vb1\")) return 1;\n  /* do not lt_dlclose here on purpose.  */\n\n  if (lt_dlexit() != 0) {\n    fprintf (stderr, \"error during exit: %s\\n\", lt_dlerror());\n    return 1;\n  }\n  return 0;\n}\n]])\n\n\nAT_DATA([a1.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\nint f1 (int x) { return x - 1; }\nint v1 = 1;\n#ifdef __cplusplus\n}\n#endif\n]])\n\nAT_DATA([b1.c],\n[[#ifdef __cplusplus\nextern \"C\" {\n#endif\n#if defined DLL_EXPORT && defined _WIN32 && defined _MSC_VER\n#  define LIBA1_SCOPE extern __declspec (dllimport)\n#endif\n#if !defined LIBA1_SCOPE\n#  define LIBA1_SCOPE extern\n#endif\nLIBA1_SCOPE int f1 (int);\nLIBA1_SCOPE int v1;\nint fb1 (int x) { return f1 (v1) + x - 3; }\nint vb1 = 3;\n#ifdef __cplusplus\n}\n#endif\n]])\n\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f \"$LIBLTDL\" || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS -no-undefined\"\n\nfor file in a1 b1; do\n  $LIBTOOL --mode=compile $CC $CPPFLAGS $CFLAGS -c $file.c\ndone\n$CC $CPPFLAGS $CFLAGS -c main.c\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o liba1.la a1.lo \\\n          -rpath /foo -avoid-version], [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o modb1.la b1.lo \\\n          -rpath /foo -module -avoid-version liba1.la], [], [ignore], [ignore])\n\n# TODO: test -dlpreopen\nfor dlopen in -dlopen; do\n  AT_CHECK([$LIBTOOL --mode=link $CC $CFLAGS $LDFLAGS -o main$EXEEXT main.$OBJEXT \\\n           $dlopen modb1.la $LIBLTDL], [], [ignore], [ignore])\n  LT_AT_NOINST_EXEC_CHECK([./main], [-dlopen modb1.la])\ndone\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/tests/exceptions.at": "# exception.at -- test C++ exception handling with libtool  -*- Autotest -*-\n#\n#   Copyright (C) 2010-2019 Free Software Foundation, Inc.\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nAT_SETUP([C++ exception handling])\nAT_KEYWORDS([libtool])\nAT_KEYWORDS([libltdl])\n\n: ${LTDLINCL=\"-I$abs_top_srcdir/libltdl\"}\n: ${LIBLTDL=\"$abs_builddir/../libltdl/libltdlc.la\"}\n\n# Skip this test when called from:\n#    make distcheck DISTCHECK_CONFIGURE_FLAGS=--disable-ltdl-install\nAT_CHECK([case $LIBLTDL in #(\n */_inst/lib/*) test -f \"$LIBLTDL\" || (exit 77) ;;\nesac], [], [ignore])\n\nCPPFLAGS=\"$LTDLINCL $CPPFLAGS\"\n\n# Win32 (and cygwin) notes\n# ------------------------\n# When using C++ and Win32 DLLs, data types used in the DLL's interface\n# that are other-than-POD, must have vtables, typeinfo, and other\n# elements resolved when the client is linked.  This includes exception\n# classes.  Therefore, the exception class \"modexc\" thrown by the\n# dynamically-loaded module must be defined in a separate DLL, to which\n# both that module and main must be directly linked; hence, the 'common'\n# library. Not using a 'common' library in this manner represents an\n# ODR violation, unless the platform's runtime loader is capable of\n# rationalizing vague linkage items such as vtables, typeinfo, and\n# typename elements) at runtime.  The Win32 loader is not capable of\n# this, but some ELF loaders appear to be.\n#\n# Similar treatment is not necessary for liba (e.g. the libexc\n# exception class), because that library is not dynamically loaded. As a\n# consequence, vague linkage items for the class libexc are resolved at\n# link time using the vague linkage rules, for both Win32 and other\n# (e.g. ELF) platforms.\n#\n# Also, when linking a C++ DLL with another C++ DLL, some versions of\n# the GNU toolchain on Win32 (or cygwin) mistakenly re-export symbols\n# that were imported from the other DLL, when the client DLL is linked\n# using -export-all-symbols.  Similar issues MAY also arise with those\n# versions of the GNU toolchain if using the libtool link flags\n# -export-symbols LIST or -export-symbols-regex REGEX, if any symbols\n# from the dependency, rather than client, library are listed (or match\n# the regex).  However, in this test, none of these situations apply,\n# so we don't directly address it.  Otherwise, the correct mechanism\n# would be to avoid all of those flags, and instead explicitly decorate\n# all symbols with appropriate __declspec (dllexport) or\n# __declspec (dllimport) flags when building the DLLs and the clients.\n#\n# For more information, see these two threads:\n#   http://lists.gnu.org/archive/html/bug-libtool/2010-06/msg00069.html\n#   http://cygwin.com/ml/cygwin/2010-06/msg00392.html\n# To sum up: C++ is complicated.\nAT_DATA([common.h],\n[[#ifndef LIBTOOL_TEST_COMMON_HEADER\n#define LIBTOOL_TEST_COMMON_HEADER\n\n#include <exception>\n#include <string>\n\n#if defined __CYGWIN__ || defined _WIN32\n# if defined DLL_EXPORT || defined USING_COMMON_DLL\n#  if defined LIBTOOL_TEST_IN_COMMON\n#   define COMMON_IMPEXP __declspec (dllexport)\n#  else\n#   define COMMON_IMPEXP __declspec (dllimport)\n#  endif\n# else\n#  define COMMON_IMPEXP\n# endif\n#else\n# define COMMON_IMPEXP\n#endif\n\nclass COMMON_IMPEXP modexc : public std::exception {\npublic:\n  modexc (std::string str) : message (str) { }\n  ~modexc () throw () { }\n  virtual const char *what () const throw ()\n  {\n    return message.c_str ();\n  }\nprivate:\n  std::string message;\n};\n\nextern \"C\" int COMMON_IMPEXP common_dummy (void);\n#endif\n]])\n\nAT_DATA([common.cpp],\n[[#define LIBTOOL_TEST_IN_COMMON\n#include \"common.h\"\n\nextern \"C\"\nint common_dummy (void)\n{\n  return 0;\n}\n]])\n\nAT_DATA([module.h],\n[[#include \"common.h\"\n\n#if defined __CYGWIN__ || defined _WIN32\n# if defined DLL_EXPORT || defined USING_MODULE_DLL\n#  if defined LIBTOOL_TEST_IN_MODULE\n#   define MODULE_IMPEXP __declspec (dllexport)\n#  else\n#   define MODULE_IMPEXP __declspec (dllimport)\n#  endif\n# else\n#  define MODULE_IMPEXP\n# endif\n#else\n# define MODULE_IMPEXP\n#endif\n\nextern \"C\" int MODULE_IMPEXP modfoo () throw (modexc);\n]])\n\nAT_DATA([module.cpp],\n[[#include <iostream>\n#define LIBTOOL_TEST_IN_MODULE\n#include \"module.h\"\n\nint modbar (void) throw (modexc)\n{\n  throw modexc (\"exception in module\");\n}\n\nextern \"C\"\nint modfoo (void) throw (modexc)\n{\n  try {\n    modbar ();\n  }\n  catch (modexc e) {\n    std::cerr << \"caught inside module: \" << e.what () << '\\n';\n    throw modexc (\"exception from module\");\n  }\n  return 0;\n}\n]])\n\nAT_DATA([lib.h],\n[[#include <exception>\n#include <string>\n\n\n#if defined __CYGWIN__ || defined _WIN32\n# if defined DLL_EXPORT || defined USING_LIB_DLL\n#  if defined LIBTOOL_TEST_IN_LIB\n#   define LIB_IMPEXP __declspec (dllexport)\n#  else\n#   define LIB_IMPEXP __declspec (dllimport)\n#  endif\n# else\n#  define LIB_IMPEXP\n# endif\n#else\n# define LIB_IMPEXP\n#endif\n\nclass LIB_IMPEXP libexc : public std::exception {\npublic:\n  libexc (std::string str) : message (str) { }\n  ~libexc () throw () { }\n  virtual const char *what () const throw ()\n  {\n    return message.c_str ();\n  }\nprivate:\n  std::string message;\n};\nint LIB_IMPEXP libfoo () throw (libexc);\n]])\n\nAT_DATA([lib.cpp],\n[[#include <iostream>\n#define LIBTOOL_TEST_IN_LIB\n#include \"lib.h\"\n\nint libbar (void) throw (libexc)\n{\n  throw libexc (\"exception in library\");\n}\n\nint libfoo (void) throw (libexc)\n{\n  try {\n    libbar ();\n  }\n  catch (libexc e) {\n    std::cerr << \"caught inside lib: \" << e.what () << '\\n';\n    throw libexc (\"exception from library\");\n  }\n  return 0;\n}\n]])\n\nAT_DATA([main.cpp],\n[[#include <ltdl.h>\n#include <cstdlib>\n#include <iostream>\n#include <exception>\n#include <string>\n#include \"common.h\"\n#include \"lib.h\"\n#include \"module.h\"\n\nclass exc : public std::exception {\npublic:\n  exc (std::string str) : message (str) { }\n  ~exc () throw () { }\n  virtual const char *what () const throw ()\n  {\n    return message.c_str ();\n  }\nprivate:\n  std::string message;\n};\n\nint foo (void) throw (exc)\n{\n  throw exc (\"exception in program\");\n  return 0;\n}\n\nint exceptions_in_prog (void)\n{\n  std::cerr << \"exceptions_in_prog\\n\";\n  try {\n    foo ();\n  }\n  catch (exc e) {\n     std::cerr << \"caught: \" << e.what () << '\\n';\n    return 0;\n  }\n  return 1;\n}\n\nint exceptions_in_lib (void)\n{\n  std::cerr << \"exceptions_in_lib\\n\";\n  try {\n    libfoo ();\n  }\n  catch (libexc e) {\n     std::cerr << \"caught: \" << e.what () << '\\n';\n    return 0;\n  }\n  return 1;\n}\n\nint exceptions_in_module (void)\n{\n  std::cerr << \"exceptions_in_module\\n\";\n\n  if (lt_dlinit ())\n    {\n      std::cerr << \"init error: \" << lt_dlerror () << '\\n';\n      return 1;\n    }\n\n  // Some systems need RTLD_GLOBAL for exceptions to work in modules.\n  lt_dladvise advise;\n  if (lt_dladvise_init (&advise) || lt_dladvise_global (&advise))\n    {\n      std::cerr << \"error setting advise global\\n\";\n      return 1;\n    }\n\n  lt_dlhandle handle = lt_dlopenadvise (\"module.la\", advise);\n  if (handle == NULL)\n    {\n      std::cerr << \"dlopen failed: \" << lt_dlerror () << '\\n';\n      return 1;\n    }\n  lt_dladvise_destroy (&advise);\n\n  typedef int (*pfun) (void);\n  pfun pf = (pfun) lt_dlsym (handle, \"modfoo\");\n  if (pf == NULL)\n    {\n      std::cerr << \"dlsym failed: \" << lt_dlerror () << '\\n';\n      return 1;\n    }\n\n  bool exception_caught = false;\n  try {\n    (*pf) ();\n  }\n  catch (modexc e) {\n    std::cerr << \"caught: \" << e.what () << '\\n';\n    exception_caught = true;\n  }\n\n  /* Only close the module after all of its objects have gone out of scope. */\n  if (exception_caught)\n  {\n    if (lt_dlclose (handle))\n      {\n        std::cerr << \"dlclose failed: \" << lt_dlerror () << '\\n';\n\treturn 1;\n      }\n    if (lt_dlexit ())\n      {\n        std::cerr << \"lt_dlexit failed: \" << lt_dlerror () << '\\n';\n\treturn 1;\n      }\n    return 0;\n  }\n  return 1;\n}\n\nint main (void)\n{\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n\n  if (exceptions_in_prog ())\n    return 1;\n  if (exceptions_in_lib ())\n    return 1;\n  if (exceptions_in_module ())\n    return 1;\n  return 0;\n}\n]])\n\ninst=`pwd`/inst\nlibdir=$inst/lib\nbindir=$inst/bin\nmoddir=$inst/mod\nmkdir l m $inst $libdir $bindir $moddir\n\n# If the C++ compiler isn't capable, don't bother.\nAT_CHECK([$CXX $CPPFLAGS $CXXFLAGS -DUSING_COMMON_DLL -DUSING_MODULE_DLL -DUSING_LIB_DLL -c main.cpp || exit 77], [], [ignore], [ignore])\n\nAT_CHECK([$LIBTOOL --mode=compile --tag=CXX $CXX $CPPFLAGS $CXXFLAGS -c common.cpp],\n\t   [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=compile --tag=CXX $CXX $CPPFLAGS $CXXFLAGS -c lib.cpp],\n\t   [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=compile --tag=CXX $CXX $CPPFLAGS $CXXFLAGS -DUSING_COMMON_DLL -c module.cpp],\n\t   [], [ignore], [ignore])\n\nAT_CHECK([$LIBTOOL --mode=link --tag=CXX $CXX $CXXFLAGS $LDFLAGS -o l/libcommon.la ]dnl\n\t [common.lo -no-undefined -version-info 1:0:0 -rpath $libdir],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link --tag=CXX $CXX $CXXFLAGS $LDFLAGS -o l/liba.la ]dnl\n\t [lib.lo -no-undefined -version-info 1:0:0 -rpath $libdir],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=link --tag=CXX $CXX $CXXFLAGS $LDFLAGS -o m/module.la ]dnl\n\t [module.lo l/libcommon.la -module -avoid-version -no-undefined -rpath $moddir],\n\t [], [ignore], [ignore])\n\n# We need -export-dynamic for the exception handling in modules to work.\nAT_CHECK([$LIBTOOL --mode=link --tag=CXX $CXX $CXXFLAGS $LDFLAGS -o main$EXEEXT ]dnl\n\t [main.$OBJEXT l/liba.la l/libcommon.la -dlopen m/module.la $LIBLTDL -export-dynamic],\n\t [], [ignore], [ignore])\n\nLT_AT_NOINST_EXEC_CHECK([./main], [-dlopen m/module.la], [], [ignore], [ignore])\n\nAT_CHECK([$LIBTOOL --mode=install cp l/libcommon.la $libdir],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp l/liba.la $libdir],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp m/module.la $moddir],\n\t [], [ignore], [ignore])\nAT_CHECK([$LIBTOOL --mode=install cp main$EXEEXT $bindir],\n\t [], [ignore], [ignore])\nrm -rf l m main$EXEEXT\n\nLTDL_LIBRARY_PATH=$moddir\nexport LTDL_LIBRARY_PATH\nLT_AT_EXEC_CHECK([$bindir/main], [], [ignore], [ignore])\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/tests/testsuite.at": "# Process with autom4te to create an -*- Autotest -*- test suite.\n#\n#   Copyright (C) 2004-2019 Free Software Foundation, Inc.\n#   Written by Gary V. Vaughan, 2004\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\nm4_divert_push([PREPARE_TESTS])dnl\n: ${tst_dist=dist}\n: ${ACLOCAL=aclocal}\n: ${AUTOHEADER=autoheader}\n: ${AUTOCONF=autoconf}\n: ${AUTOMAKE=automake}\n: ${AUTORECONF=autoreconf}\ntest set = \"${ECHO+set}\" || ECHO=${as_echo-'printf %s\\n'}\n: ${ECHO=$as_echo}\nfor tool in ACLOCAL AUTOHEADER AUTOCONF AUTOMAKE AUTORECONF; do\n  if eval \\$$tool --version >/dev/null 2>&1; then :; else eval $tool=no; fi\ndone\nexport ACLOCAL AUTOHEADER AUTOCONF AUTOMAKE AUTORECONF\neval `$LIBTOOL --config | $EGREP '^(objdir|objext)'`\neval `$LIBTOOL --config | $EGREP '^(host|host_os|host_alias|build|build_alias|to_host_file_cmd|to_tool_file_cmd)='`\nconfigure_options=--prefix=/nonexistent\nif test -n \"$host_alias\"; then\n  configure_options=\"$configure_options --host $host_alias\"\nfi\nif test -n \"$build_alias\"; then\n  configure_options=\"$configure_options --build $build_alias\"\nfi\nif test -n \"$to_host_file_cmd\"; then\n  configure_options=\"$configure_options lt_cv_to_host_file_cmd=$to_host_file_cmd\"\nfi\nif test -n \"$to_tool_file_cmd\"; then\n  configure_options=\"$configure_options lt_cv_to_tool_file_cmd=$to_tool_file_cmd\"\nfi\n: ${mkdir_p=\"$abs_top_srcdir/build-aux/install-sh -d\"}\n# Fix relative paths in $lt_INSTALL\ncase $lt_INSTALL in\n  *build-aux/install-sh*)\n    lt_INSTALL=$abs_top_srcdir/build-aux/install-sh\n    ;;\nesac\n\n# func_extract_trace support\n. \"$abs_top_srcdir/build-aux/funclib.sh\"\n. \"$abs_top_srcdir/build-aux/extract-trace\"\n\n\n# Unset some MAKE... variables that may cause $MAKE to act like a\n# recursively invoked sub-make.  Any $MAKE invocation in a test is\n# conceptually an independent invocation.\nunset MFLAGS MAKEFLAGS MAKELEVEL __MKLVL__ MAKE_JOBS_FIFO\n\n# On AIX, shared libraries remain loaded in memory after use if they\n# are world-readable, until root issues slibclean.  On NFS, this causes\n# a testsuite rerun to fail to clean up test group directories.  Avoid\n# this with a suitable umask.  Do not do this on other systems, for\n# example HP-UX suffers unless shared libraries are mode 555.\ncase $host_os in\naix*) umask o-rwx ;;\nesac\nm4_divert_pop([PREPARE_TESTS])dnl\n\n\n# LT_AT_LIBTOOLIZE([ARGS])\n# ------------------------\nm4_define([LT_AT_LIBTOOLIZE],\n[$LIBTOOLIZE $1\nAT_KEYWORDS([libtoolize])\n])\n\n\n# _LIBTOOLIZE_TRANSFORM(FILE)\n# ---------------------------\n# Fix the expected output of installed libtoolize in presence of --program-*.\nm4_define([_LIBTOOLIZE_TRANSFORM],\n[lt_name=`$ECHO \"$LIBTOOLIZE\" | $SED \"s|^.*/||\"`\n$SED \"s/libtoolize/$lt_name/g\ns|/usr/local/share/aclocal/|${tst_aclocaldir-$abs_top_srcdir/libltdl/m4}/|\" < $1 > $1.t\nmv -f $1.t $1\n])dnl\n\n\n# LT_AT_CHECK_LIBTOOLIZE(ARGS, [EXIT-STATUS = 0], [STDOUT = ''], [STDERR = ''])\n# -----------------------------------------------------------------------------\nm4_define([LT_AT_CHECK_LIBTOOLIZE],\n[m4_if([$3], [expout], [_LIBTOOLIZE_TRANSFORM([$3])])dnl\nm4_if([$4], [experr], [_LIBTOOLIZE_TRANSFORM([$4])])dnl\nAT_CHECK([LT_AT_LIBTOOLIZE([$1])],\n  [$2], [$3], [$4])\n])\n\n\n# LT_AT_ACLOCAL([OPTIONS])\n# --------------------------\nm4_pattern_allow([^(m4_define|m4_defn|m4_ifndef)$])\nm4_define([LT_AT_ACLOCAL],\n[macro_dir=\nfunc_extract_trace AC_CONFIG_MACRO_DIRS\ntest -n \"$func_extract_trace_result\" \\\n    || func_extract_trace AC_CONFIG_MACRO_DIR\ntest -n \"$func_extract_trace_result\" \\\n    && macro_dir=\" -I $func_extract_trace_result\"\nAT_DATA([acinclude.m4],\n[[m4_ifndef([AC_CONFIG_MACRO_DIRS],\n\t  [m4_define([AC_CONFIG_MACRO_DIRS], m4_defn([AC_CONFIG_MACRO_DIR]))])\n]])\nLT_AT_CHECK([$ACLOCAL $1$macro_dir], [0], [ignore], [ignore])\n# After the 'aclocal' run sleep 1 second to guarantee that aclocal.m4 is going\n# to have older timestamp than other autotools later-generated files (concretely\n# for libtool case, we speak about config.h.in generated autoheader).\n# Autoreconf does the same (after the first aclocal run).\nsleep 1\nAT_XFAIL_IF([test no = \"$ACLOCAL\"])\nAT_KEYWORDS([automake])\n])\n\n\n# LT_AT_AUTOCONF([OPTIONS])\n# --------------------------\nm4_define([LT_AT_AUTOCONF],\n[AT_CHECK([$AUTOCONF $1], [0], [ignore], [ignore])\nAT_XFAIL_IF([test no = \"$AUTOCONF\"])\nAT_KEYWORDS([autoconf])\n])\n\n\n# LT_AT_AUTOMAKE([OPTIONS])\n# --------------------------\nm4_define([LT_AT_AUTOMAKE],\n[AT_CHECK([$AUTOMAKE $1], [0], [ignore], [stderr],\n  [AT_CHECK([$GREP 'require .*but have' stderr && (exit 77)], [1])])\nAT_XFAIL_IF([test no = \"$AUTOMAKE\"])\nAT_KEYWORDS([automake])\n])\n\n\n# LT_AT_AUTOHEADER([OPTIONS])\n# ---------------------------\nm4_define([LT_AT_AUTOHEADER],\n[AT_CHECK([$AUTOHEADER $1], [0], [ignore], [ignore])\nAT_XFAIL_IF([test no = \"$AUTOHEADER\"])\nAT_KEYWORDS([autoconf])\n])\n\n\n# LT_AT_AUTORECONF([OPTIONS])\n# --------------------------\nm4_define([LT_AT_AUTORECONF],\n[AT_DATA([acinclude.m4],\n[[m4_ifndef([AC_CONFIG_MACRO_DIRS],\n\t  [m4_define([AC_CONFIG_MACRO_DIRS], m4_defn([AC_CONFIG_MACRO_DIR]))])\n]])\nAT_CHECK([$AUTORECONF $1], [0], [ignore], [stderr],\n  [AT_CHECK([$GREP 'require .*but have' stderr && (exit 77)], [1])])\nAT_XFAIL_IF(\n  [case ,$AUTORECONF,$AUTOCONF,$AUTOHEADER,$ACLOCAL,$AUTOMAKE, in *,no,*) :;; *) false;; esac])\nAT_KEYWORDS([autoconf automake])\n])\n\n\n# LT_AT_CONFIGURE([OPTIONS], [CONFIGURE-SCRIPT])\n# ----------------------------------------------\n# Configure CONFIGURE-SCRIPT, defaulting to ./configure, with\n# additional OPTIONS.\nm4_define([LT_AT_CONFIGURE],\n[AT_CHECK([: ${CONFIG_SHELL=/bin/sh}; export CONFIG_SHELL; ]dnl\n\t  [$CONFIG_SHELL m4_default([$2], [./configure]) $configure_options ]dnl\n          [--prefix=\"$prefix\" --exec-prefix=\"$prefix\" --bindir=\"$prefix/bin\" --libdir=\"$prefix/lib\" $1],\n\t  [0], [ignore], [ignore])\n])\n\n\n# LT_AT_MAKE([TGTS], [VARS])\n# --------------------------\nm4_define([LT_AT_MAKE],\n[for target in m4_default([$1], [all])\ndo\n  AT_CHECK([$as_unset LIBTOOL; $as_unset LIBTOOLIZE; $MAKE $target $2], [0], [ignore], [ignore])\ndone\n])\n\n\n# LT_AT_BOOTSTRAP([LIBTOOLIZE-ARGS], [ACLOCAL-ARGS], [AUTOHEADER-ARGS],\n#\t[AUTOMAKE-ARGS], [AUTOCONF-ARGS], [CONFIGURE-ARGS], [MAKE-ARGS])\n# ----------------------------------------------------------------------\nm4_define([LT_AT_BOOTSTRAP],\n[m4_if([$1], [ignore], [], [LT_AT_LIBTOOLIZE([$1])])\nm4_if([$2], [ignore], [], [LT_AT_ACLOCAL([$2])])\nm4_if([$3], [ignore], [], [LT_AT_AUTOHEADER([$3])])\nm4_if([$4], [ignore], [], [LT_AT_AUTOMAKE([$4])])\nm4_if([$5], [ignore], [], [LT_AT_AUTOCONF([$5])])\nm4_if([$6], [ignore], [], [LT_AT_CONFIGURE([$6])])\nm4_if([$7], [ignore], [], [LT_AT_MAKE([$7])])\n])\n\n\n# LT_ESCAPE(ARG)\n# --------------\n# Escape command for output (expand only parameters).\nm4_define([LT_ESCAPE],\n[m4_bpatsubst([$1],\n\t     m4_dquote(m4_default([$2], [\\\"`])),\n\t     [\\\\\\&])])\n\n\n# LT_AT_CHECK\n# -----------\n# Wrapper around AT_CHECK that outputs the command first, with\n# parameters expanded.\nm4_define([LT_AT_CHECK],\n[echo \"LT_ESCAPE([$1])\"; AT_CHECK($@)])\n\n\n# LT_AT_CHECK_CONFIG (CONFIGURE-ARGS, [GREP-EXPRESSION], ...)\n# -----------------------------------------------------------\n# Bootstrap and configure the project, and check each GREP-EXPRESSION\n# works on the resulting libtool script.\nm4_define([LT_AT_CHECK_CONFIG],\n[LT_AT_BOOTSTRAP([], [-I m4], [], [--add-missing], [], [$1], [ignore])\nm4_if([$#], 0, [],\n      [$#], 1, [], [$0_(m4_shift($@))])\n])\nm4_define([LT_AT_CHECK_CONFIG_],\n[AT_CHECK([$EGREP '$1' libtool], 0, [ignore])\n m4_if([$#], 1, [], [$0(m4_shift($@))])\n])\n\n\n# LT_AT_CHECK_EXECUTE([TARGETS], [PROGRAM], ...)\n# ----------------------------------------------\n# Run the listed make rules, and check that the following PROGRAMs work.\nm4_define([LT_AT_CHECK_EXECUTE],\n[LT_AT_MAKE([$1])\nm4_if([$#], 0, [],\n      [$#], 1, [], [$0_(m4_shift($@))])\n])\nm4_define([LT_AT_CHECK_EXECUTE_],\n[LT_AT_EXEC_CHECK([$1], 0, [expout])\nm4_if([$#], 1, [], [$0(m4_shift($@))])\n])\n\n\n# LT_AT_CHECK_UNINSTALL\n# ---------------------\n# Make sure uninstallation is complete.\nm4_define([LT_AT_CHECK_UNINSTALL],\n[LT_AT_MAKE([uninstall])\n\nleftovers=`find $prefix ! -type d ! -name '.*' -print`\nAT_CHECK([test -z \"$leftovers\"])\n])\n\n\n# LT_AT_HOST_DATA(FILE, CONTENTS)\n# -------------------------------\n# Ensure correct line ending for expected output of host executables.\nm4_define([LT_AT_HOST_DATA],\n[AT_DATA([$1], [$2])\ncase $host_os in mingw*)\n  awk '{printf (\"%s\\r\\n\", [$]0);}' < $1 > $1.t && mv -f $1.t $1 ;;\nesac])\n\n\n# LT_AT_UNIFY_NL(FILE, [RESULT-FILE])\n# -----------------------------------\n# Ensure (text) FILE has predictable line endings.\n# If RESULT-FILE is given, FILE is left untouched. If not, convert in-place.\nm4_define([LT_AT_UNIFY_NL],\n[case $host_os in\n  mingw*)\n    tr -d '\\015' < $1 > m4_ifval([$2], [$2], [$1.t\n    mv -f $1.t $1]) ;; m4_ifval([$2], [\n  *)\n    cp $1 $2 ;;])\nesac])\n\n\n# LT_AT_NORMALIZE_COMPILER_OUTPUT(FILE, [RESULT-FILE])\n# ----------------------------------------------------\n# Normalize differences in compiler output stemming from, e.g.,\n# - distcc process numbers,\n# - ccache file location,\n# - newline encoding,\n# - location of the libtool script,\n# - error messages involving unstable temporary file names.\nm4_define([LT_AT_NORMALIZE_COMPILER_OUTPUT],\n[_ltbase=`$ECHO \"$LIBTOOL\" | $SED 's|^.*/||'`\n[$SED \"/^distcc\\[[0-9]*\\]/d\n      /^$_ltbase: compile/d\n      s/\\(tmp\\/\\{1,\\}cc\\)\\([a-zA-Z0-9_]\\{1,\\}\\)/\\1-normalized-tmpname/g\" < $1 > $1.t]\nLT_AT_UNIFY_NL([$1.t], [m4_default([$2], [$1])])[]dnl\n])\n\n\n# LT_AT_EXEC_CHECK(EXECUTABLE, [STATUS = 0], [STDOUT], [STDERR],\n#\t\t   [ARGS-OR-STATUS-ADJUST])\n# --------------------------------------------------------------\n# Run EXECUTABLE ARGS-OR-STATUS-ADJUST.  STATUS, STDOUT, and STDERR are\n# handled as in AT_CHECK.\n# However, if we are cross-compiling, then SKIP instead of FAIL.\n# ARGS-OR-STATUS-ADJUST can also contain code like '|| (exit 1)'\n# to unify different possible exit status values.\nm4_define([LT_AT_EXEC_CHECK],\n[lt_exe=$1; if test -f \"$1$EXEEXT\"; then lt_exe=$lt_exe$EXEEXT; fi\nAT_CHECK([if \"$lt_exe\" $5; then :; else lt_status=$?; ]dnl\n\t [  m4_ifval([$2], [test \"$lt_status\" != $2 && ])]dnl\n\t [  test \"X$host\" != \"X$build\" && test -x \"$lt_exe\" && exit 77; ]dnl\n\t [  exit $lt_status; fi],[$2],[$3],[$4])\n])\n\n\n# LT_AT_NOINST_EXEC_CHECK(EXECUTABLE, [NOINST-MODULES],\n#\t\t\t  [STATUS = 0], [STDOUT], [STDERR],\n#\t\t\t  [ARGS-OR-STATUS-ADJUST])\n# ---------------------------------------------------------\n# Run EXECUTABLE ARGS-OR-STATUS-ADJUST using 'libtool --mode=execute'\n# with '-dlopen' arguments in NOINST_MODULES.  STATUS, STDOUT, and\n# STDERR are handled as in AT_CHECK.\n# However, if we are cross-compiling, then SKIP instead of FAIL.\n# ARGS-OR-STATUS-ADJUST can also contain code like '|| (exit 1)'\n# to unify different possible exit status values.\nm4_define([LT_AT_NOINST_EXEC_CHECK],\n[lt_exe=$1; if test -f \"$1$EXEEXT\"; then lt_exe=$lt_exe$EXEEXT; fi\nAT_CHECK([if $LIBTOOL --mode=execute $2 \"$lt_exe\" $6; then :; else lt_status=$?; ]dnl\n\t [  m4_ifval([$3], [test \"$lt_status\" != $3 && ])]dnl\n\t [  test \"X$host\" != \"X$build\" && test -x \"$lt_exe\" && exit 77; ]dnl\n\t [  exit $lt_status; fi],[$3],[$4],[$5])\n])\n\n\n# LT_AT_TAG(TAG)\n# --------------\n# Declare that the language TAG will be used in this test.\n# Skips the test if the compiler is apparently not functional.\nm4_define([LT_AT_TAG],\n[AT_KEYWORDS([$1])\nAT_CHECK([{ test -n \"[$]$1\" && test \"X[$]$1\" != Xno; } || (exit 77)])\nm4_case([$1],\n  [CXX],\n  [AT_CHECK([test g++ != \"$CXX\" || (g++ -v >/dev/null 2>&1) || (exit 77)])],\n  [FC],\n  [# Autoconf will accept f77 or similar as a valid FC, but often f77\n   # will not compile fortran90 code; in that case skip the FC checks.\n   AT_DATA([fc_test.f90],\n[[\tprogram main\n\n\tend\n]])\n   AT_CHECK([$FC $FCFLAGS fc_test.f90 || exit 77], [], [ignore], [ignore])],\n  [GCJ],\n  [# There are just too many broken gcj installations out there, either missing\n   # libgcj.spec or unable to find it.  Skip the test for them.\n   AT_DATA([gcj_test.java],\n[[public class gcj_test {\n    public static void main(String[] argv) { }\n  }\n]])\n   AT_CHECK([$GCJ $GCJFLAGS -c gcj_test.java || exit 77],\n\t    [], [ignore], [ignore])])\n])\n\n\n# LT_AT_EXEC_TAG([TAG])\n# ---------------------\n# Declare that the language TAG will be used and compiled programs may be run.\n# Skips the test if the compiler is apparently not functional.\nm4_define([LT_AT_EXEC_TAG],\n[LT_AT_TAG([$1])\nm4_case([$1],\n  [GCJ],\n  [AT_CHECK([$GCJ $GCJFLAGS --main=gcj_test -o gcj_test$EXEEXT gcj_test.java ]dnl\n\t    [|| exit 77], [], [ignore], [ignore])\n   AT_CHECK([./gcj_test$EXEEXT || exit 77], [], [ignore], [ignore])])\n])\n\n\n# LT_AT_MVDIR(SRC, DEST)\n# ----------------------\n# Move contents of a directory recursively.\n# Avoid 'mv DIR ...' due to issues with non-deletable shared libraries\n# on AIX on NFS mounts.  We cannot use slibclean as non-superuser.\nm4_define([LT_AT_MVDIR],\n[$mkdir_p $2\n(cd $1 && find . -type d) | (cd $2 && xargs $mkdir_p)\nfor file in `cd $1 && find . -type f -print -o -type l -print`\ndo\n  mv $1/$file $2/$file\ndone\nrm -rf $1\n])\n\n## ------------------------------- ##\n## Files for a small ltdl project. ##\n## ------------------------------- ##\n\n# _LTDL_PROJECT_FILES([LTDL-DIR])\n# -------------------------------\n# LTDL-DIR is needed to generate a correct Makefile.  If the argument\n# is omitted, then no Makefile is created.\nm4_define([_LTDL_PROJECT_FILES],\n[AT_DATA([module.c],\n[[#ifdef __cplusplus\nextern \"C\"\n#endif\nconst char *\nhello (void)\n{\n  return \"Hello!\";\n}\n]])\n\nAT_DATA([main.c],\n[[#include <stdio.h>\n#include \"ltdl.h\"\n\nint\nmain ()\n{\n  lt_dlhandle module;\n  const char *(*func) (void) = 0;\n  int status = 1;\n\n  LTDL_SET_PRELOADED_SYMBOLS();\n  if (lt_dlinit() != 0) {\n    fprintf (stderr, \"error during initialisation: %s\\n\", lt_dlerror());\n    return 1;\n  }\n\n  module = lt_dlopen(\"./module.la\");\n  if (!module) {\n    fprintf (stderr, \"error dlopening ./module.la: %s\\n\", lt_dlerror());\n    goto finish;\n  }\n\n  func = (const char *(*)(void)) lt_dlsym (module, \"hello\");\n  if (!func) {\n    fprintf (stderr, \"error fetching func: %s\\n\", lt_dlerror());\n    goto finish;\n  }\n\n  printf (\"%s\\n\", (*func) ());\n  status = 0;\n\nfinish:\n  if (lt_dlexit() != 0) {\n    fprintf (stderr, \"error during finalisation: %s\\n\", lt_dlerror());\n    status = 1;\n  }\n\n  return status;\n}\n]])\n\nm4_pushdef([_ARG_DIR], m4_bpatsubst([$1], [/*$]))\nm4_ifval([$1],\n[AT_DATA([Makefile],\n[[top_builddir\t= .\nLIBTOOL\t\t= ./]_ARG_DIR[/libtool\nINCLUDES\t= -I./]_ARG_DIR[\nMODFLAGS\t= -module -avoid-version -no-undefined\n\nLTCOMPILE = $(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=compile \\\n        $(CC) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)\nLTLINK    = $(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=link \\\n        $(CC) $(CFLAGS) $(LDFLAGS)\n\nTARGETS\t\t= ]_ARG_DIR[/libltdlc.la module.la ltdldemo$(EXEEXT)\n\nall: $(TARGETS)\n\n]_ARG_DIR[/libltdlc.la: $(LIBTOOL) ]_ARG_DIR[/Makefile\n\tMAKE='$(MAKE)'; test -n \"$$MAKE\" || MAKE=make; \\\n\tcd ]_ARG_DIR[ && $$MAKE CC=\"$(CC)\" LIBTOOLFLAGS=\"$(LIBTOOLFLAGS)\" \\\n\t  CPPFLAGS=\"$(CPPFLAGS)\" CFLAGS=\"$(CFLAGS)\" LDFLAGS=\"$(LDFLAGS)\" \\\n          CONFIGURE_OPTIONS=\"$(CONFIGURE_OPTIONS)\"\n\n$(LIBTOOL): ]_ARG_DIR[/Makefile\n\n]_ARG_DIR[/Makefile:\n\tcd ]_ARG_DIR[ && CONFIG_SHELL=\"$(SHELL)\" $(SHELL) ./configure $(CONFIGURE_OPTIONS)\n\nltdldemo$(EXEEXT): $(LIBTOOL) module.la ]_ARG_DIR[/libltdlc.la main.lo\n\t$(LTLINK) -o ltdldemo$(EXEEXT) main.lo -dlopen module.la ./]_ARG_DIR[/libltdlc.la\n\nmain.lo: $(LIBTOOL) main.c\n\t$(LTCOMPILE) -c main.c\n\nmodule.la: $(LIBTOOL) module.lo\n\t$(LTLINK) -o module.la module.lo $(MODFLAGS) -rpath /dev/null\n\nmodule.lo: $(LIBTOOL) module.c\n\t$(LTCOMPILE) -c module.c\n]])\ncat >> Makefile <<EOF\nSHELL = $SHELL\nEOF\n])\nm4_popdef([_ARG_DIR])\n])# _LTDL_PROJECT_FILES\n\n\n# We use 'dnl' in zillions of places...\nm4_pattern_allow([^dnl$])\n\n# We exercise these tools.\ndnl AT_TESTED([grep autoreconf autom4te automake])\n\n# Enable colored output if available.\nm4_ifdef([AT_COLOR_TESTS], [AT_COLOR_TESTS])\n\nAT_INIT\n\n## ----------- ##\n## The suite.  ##\n## ----------- ##\n\n# Tests will be appended here by the Makefile rule.\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/tests/demo.at": "# demo.at -- Linking and loading. -*- Autotest -*-\n#\n#   Copyright (C) 2003-2004, 2011-2019 Free Software Foundation, Inc.\n#   Written by Gary V. Vaughan, 2003\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from  http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n####\n\n\nAT_BANNER([Linking and loading.])\n\n## ------------------------------------------- ##\n## Some functions shared by later tests cases. ##\n## ------------------------------------------- ##\n\n# This function needs to be used, rather than 'exit', when a 'trap' handler is\n# in effect that refers to $?.\nfunc_exit ()\n{\n  (exit $1); exit $1\n}\n\nfunc_restore_files ()\n{\n    test -n \"$objdir\" || exit 1\n    mv -f \"$objdir\"/temp/libs/* \"$objdir\"\n    mv -f \"$objdir/temp/libhello.la\" .\n    rm -rf \"$objdir/temp\"\n}\n\nfunc_save_files ()\n{\n    test -n \"$objdir\" || exit 1\n    $lt_INSTALL -d \"$objdir/temp/libs\"\n    cp -f libhello.la \"$objdir/temp\"\n    cp -f \"$objdir\"/libhello.* \"$objdir/lt-hell$EXEEXT\" \"$objdir/temp/libs\"\n}\n\n\n# _LT_DEMO_SETUP\n# --------------\nm4_define([_LT_DEMO_SETUP],\n[AT_DATA([configure.ac],\n[[AC_INIT([demo], ]AT_PACKAGE_VERSION[, ]AT_PACKAGE_BUGREPORT[)\nAC_CONFIG_AUX_DIR([build-aux])\nAC_CONFIG_MACRO_DIRS([m4])\nAM_INIT_AUTOMAKE\nAC_PROG_CC\n\nLT_INIT([dlopen win32-dll])\nAC_SUBST([LIBTOOL_DEPS])\nSTATIC=\ntest yes = \"$enable_static\" && STATIC=-static\nAC_SUBST([STATIC])\n\ncase $lt_cv_sys_global_symbol_pipe in\n  ?*) binary_helldl=yes ;;\nesac\nAM_CONDITIONAL([BINARY_HELLDL], [test yes = \"$binary_helldl\"])\n\nLT_LIB_M\nAC_CONFIG_FILES([Makefile])\nAC_CONFIG_HEADERS([config.h:config.in.h])\nAC_OUTPUT\n]])\n\nAT_DATA([Makefile.am],\n[[AUTOMAKE_OPTIONS = no-dependencies foreign\nACLOCAL_AMFLAGS = -I m4\n\n# Build a libtool library, libhello.la for installation in libdir.\nlib_LTLIBRARIES = libhello.la\nlibhello_la_SOURCES = hello.c foo.c\nlibhello_la_LIBADD = $(LIBM)\nlibhello_la_LDFLAGS = -no-undefined -version-info 3:12:1\nlibhello_la_CPPFLAGS = $(AM_CPPFLAGS) -DBUILDING_LIBHELLO\n\ninclude_HEADERS = foo.h\n\nif BINARY_HELLDL\nBUILD_helldl = helldl\nelse\nBUILD_helldl =\nendif\n\nbin_PROGRAMS = hell hell_static $(BUILD_helldl)\n\n# Build hell from main.c and libhello.la\nhell_SOURCES = main.c\nhell_LDADD = libhello.la\n\n# Create a statically linked version of hell.\nhell_static_SOURCES = main.c\nhell_static_LDADD = libhello.la\nhell_static_LDFLAGS = $(STATIC)\n\nif BINARY_HELLDL\n\n# Create a version of hell that does a preloaded dlopen.\nhelldl_SOURCES = dlmain.c\nhelldl_LDFLAGS = -export-dynamic -dlpreopen libhello.la\nhelldl_DEPENDENCIES = libhello.la\n\nelse\n\n# Create a script that says that -dlopen is not supported.\nbin_SCRIPTS = helldl\nhelldl helldl$(EXEEXT):\n\trm -rf $@\n\techo '#! /bin/sh' > $@\n\techo 'echo sorry, -dlopen is unsupported' >> $@\n\tchmod +x $@\n\nendif\n\nlibtool: $(LIBTOOL_DEPS)\n\t$(SHELL) ./config.status --recheck\n\ninclude $(srcdir)/demo.mk\n]])\n\nAT_DATA([demo.mk],\n[[## Don't abort for lack of demo.mk\n]])\n\nAT_DATA([foo.h],\n[[#ifndef FOO_H\n#define FOO_H\n\n/* At some point, cygwin will stop defining __CYGWIN32__, but b19 and\n * earlier do not define __CYGWIN__.  This snippet allows us to check\n * for __CYGWIN__ reliably for both current, old, and (probable) future\n * releases.\n */\n#ifdef __CYGWIN32__\n#  ifndef __CYGWIN__\n#    define __CYGWIN__\n#  endif\n#endif\n\n#if (defined _WIN32 || defined _WIN32_WCE) && !defined __GNUC__\n# ifdef BUILDING_LIBHELLO\n#  ifdef DLL_EXPORT\n#   define LIBHELLO_SCOPE extern __declspec (dllexport)\n#  endif\n# else\n#  define LIBHELLO_SCOPE extern __declspec (dllimport)\n# endif\n#endif\n#ifndef LIBHELLO_SCOPE\n# define LIBHELLO_SCOPE extern\n#endif\n\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n/* Silly constants that the functions return. */\n#define HELLO_RET 0xe110\n#define FOO_RET 0xf00\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\nint foo (void);\nint hello (void);\nLIBHELLO_SCOPE int nothing;\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif\n]])\n\nAT_DATA([foo.c],\n[[#include <config.h>\n#include <stdio.h>\n#include <math.h>\n\n#include \"foo.h\"\n\n/* Give a global variable definition. */\nint nothing = FOO_RET;\n\nint foo (void) {\n  printf (\"cos (0.0) = %g\\n\", (double) cos ((double) 0.0));\n  return FOO_RET;\n}\n]])\n\nAT_DATA([hell1.c],\n[[#include <config.h>\nint hell1 (void) { return 1; }\n]])\n\nAT_DATA([hell2.c],\n[[#include <config.h>\nint hell2 (void) { return 2; }\n]])\n\nAT_DATA([hello.c],\n[[#include <config.h>\n#include <stdio.h>\n\n#include \"foo.h\"\n\nint hello (void) {\n  printf (\"** This is not GNU Hello. There is no built-in mail reader. **\\n\");\n  return HELLO_RET;\n}\n]])\n\nAT_DATA([main.c],\n[[#include <config.h>\n#include <stdio.h>\n\n#include \"foo.h\"\n\nint main ()\n{\n  printf (\"Welcome to GNU Hell!\\n\");\n\n  /* Try assigning to the nothing variable. */\n  nothing = 1;\n\n  /* Just call the functions and check return values. */\n  if (foo () != FOO_RET)\n    return 1;\n\n  if (hello () != HELLO_RET)\n    return 2;\n\n  return 0;\n}\n]])\n\nAT_DATA([dlmain.c],\n[[#include <config.h>\n#include <stdio.h>\n#include <string.h>\n\n#include \"foo.h\"\n\n#define STREQ !strcmp\n\n#define lt_preloaded_symbols lt__PROGRAM__LTX_preloaded_symbols\n\ntypedef struct\n{\n  const char *name;\n  void *address;\n} lt_dlsymlist;\n\nextern LT_DLSYM_CONST lt_dlsymlist lt_preloaded_symbols[];\n\nint main ()\n{\n  const lt_dlsymlist *s;\n  int (*pfoo)() = 0;\n  int (*phello)() = 0;\n  int *pnothing = 0;\n\n  printf (\"Welcome to *modular* GNU Hell!\\n\");\n\n  /* Look up the symbols we require for this demonstration. */\n  s = lt_preloaded_symbols;\n  while (s->name)\n    {\n      if (s->address) {\n        const char *name = s->name;\n        printf (\"found symbol: %s\\n\", name);\n        if (STREQ (\"@INIT@\", name))\n\t  ((void(*)())s->address)();\n        if (STREQ (\"hello\", name))\n\t  phello = (int(*)())s->address;\n        else if (STREQ (\"foo\", name))\n\t  pfoo = (int(*)())s->address;\n        else if (STREQ (\"nothing\", name))\n#ifndef _WIN32\n\t  /* In an ideal world we could do this... */\n\t  pnothing = (int*)s->address;\n#else /* !_WIN32 */\n\t  /* In an ideal world a shared lib would be able to export data */\n\t  pnothing = (int*)&nothing;\n#endif\n      } else\n        printf (\"found file: %s\\n\", s->name);\n      s ++;\n    }\n\n  /* Try assigning to the nothing variable. */\n  if (pnothing)\n    *pnothing = 1;\n  else\n    fprintf (stderr, \"did not find the 'nothing' variable\\n\");\n\n  /* Just call the functions and check return values. */\n  if (pfoo)\n    {\n      if ((*pfoo) () != FOO_RET)\n\treturn 1;\n    }\n  else\n    fprintf (stderr, \"did not find the 'foo' function\\n\");\n\n  if (phello)\n    {\n      if ((*phello) () != HELLO_RET)\n\treturn 3;\n    }\n  else\n    fprintf (stderr, \"did not find the 'hello' function\\n\");\n\n  return 0;\n}\n]])\n\nLT_AT_HOST_DATA([expout],\n[[Welcome to GNU Hell!\ncos (0.0) = 1\n** This is not GNU Hello. There is no built-in mail reader. **\n]])\n\nprefix=`pwd`/_inst\n]) # _LT_DEMO_SETUP\n\n\n# _LT_CHECK_EXECUTE([TARGETS])\n# ----------------------------\n# Run the listed make rules, and check that the built binaries work.\nm4_define([_LT_CHECK_EXECUTE],\n[LT_AT_CHECK_EXECUTE([$1],\n        [./hell_static], [./hell])\nAT_CHECK([./helldl$EXEEXT |\n    $EGREP '(Welcome to .*GNU Hell|unsupported)'], 0, [ignore])\n])\n\n\n# _LT_CHECK_INSTALL\n# -----------------\n# Run the make install rule, and check that installed binaries work too.\nm4_define([_LT_CHECK_INSTALL],\n[# Windows hosts search for dlls in the command path.\nPATH=$prefix/lib:$PATH\n\nLT_AT_CHECK_EXECUTE([install],\n        [$prefix/bin/hell_static], [$prefix/bin/hell])\nAT_CHECK([$prefix/bin/helldl$EXEEXT |\n    $EGREP '(Welcome to .*GNU Hell|unsupported)'], 0, [ignore])\n])\n\n\n## ------------ ##\n## Demo static. ##\n## ------------ ##\n\nAT_SETUP([link against a preloaded static library])\n\n_LT_DEMO_SETUP\n\nLT_AT_CHECK_CONFIG([--disable-shared],\n                   [^build_old_libs=yes], [^build_libtool_libs=no])\n_LT_CHECK_EXECUTE\n_LT_CHECK_INSTALL\nLT_AT_CHECK_UNINSTALL\n\nAT_CLEANUP\n\n\n## ------------ ##\n## Demo shared. ##\n## ------------ ##\n\nAT_SETUP([build and dynamically load a module])\n\n_LT_DEMO_SETUP\n\nLT_AT_CHECK_CONFIG([--disable-static],\n                   [^build_old_libs=no], [^build_libtool_libs=yes])\n_LT_CHECK_EXECUTE\n_LT_CHECK_INSTALL\nLT_AT_CHECK_UNINSTALL\n\nAT_CLEANUP\n\n\n## ---------- ##\n## Demo conf. ##\n## ---------- ##\n\nAT_SETUP([preload static and dynamic module])\n\n_LT_DEMO_SETUP\n\nLT_AT_CHECK_CONFIG([],\n                   [^build_old_libs=yes], [^build_libtool_libs=yes])\n_LT_CHECK_EXECUTE\n_LT_CHECK_INSTALL\nLT_AT_CHECK_UNINSTALL\n\nAT_CLEANUP\n\n\n## ------------ ##\n## Demo deplib. ##\n## ------------ ##\n\n# This is one of the essential tests for deplibs_check_method=pass_all.\n# If this one passes with pass_all, it is likely that pass_all works.\n\nAT_SETUP([deplibs_check_method])\n\n_LT_DEMO_SETUP\n\nAT_DATA([demo.mk],\n[[EXTRA_LIBRARIES = libhell0.a\nlibhell0_a_SOURCES =\nlibhell0_a_LIBADD = hello.$(OBJEXT) foo.$(OBJEXT)\nEXTRA_LTLIBRARIES = libhell1.la libhell2.la\nlibhell1_la_SOURCES = hell1.c\nlibhell1_la_LIBADD = -L. -lhell0\nlibhell1_la_LDFLAGS = -no-undefined -rpath $(libdir)\nlibhell1_la_DEPENDENCIES = libhell0.a\nlibhell2_la_SOURCES = hell2.c\nlibhell2_la_LIBADD = -L. -lhell0\nlibhell2_la_LDFLAGS = -no-undefined -rpath $(libdir)\nlibhell2_la_DEPENDENCIES = libhell0.a\nEXTRA_PROGRAMS = hell0\nhell0_SOURCES = main.c\nhell0_LDADD = libhell1.la libhell2.la $(LIBM)\n\n# 'hell0' in EXTRA_PROGRAMS gets translated to 'hell0.exe'; but we\n# must explicitly list the wrapper script 'hell0'.  (bin_PROGRAMS\n# are handled seamlessly by automake rules; the extra step is only\n# necessary for EXTRA_PROGRAMS)\nCLEANFILES = $(EXTRA_LIBRARIES) $(EXTRA_LTLIBRARIES) $(EXTRA_PROGRAMS) hell0\n\ndeplibs-check: hell0$(EXEEXT)\n]])\n\nLT_AT_CHECK_CONFIG([--disable-static])\nLT_AT_MAKE([deplibs-check])\nLT_AT_EXEC_CHECK([./hell0], 0, [expout])\n\nAT_CLEANUP\n\n\n## ------------ ##\n## Demo nofast. ##\n## ------------ ##\n\nAT_SETUP([disable fast install])\n\n_LT_DEMO_SETUP\n\nLT_AT_CHECK_CONFIG([--enable-fast-install=no])\nAT_CHECK([$EGREP '^hardcode_action=relink' libtool && (exit 77)], 1)\n\n_LT_CHECK_EXECUTE\n_LT_CHECK_INSTALL\nLT_AT_CHECK_UNINSTALL\n\nAT_CLEANUP\n\n\n## --------- ##\n## Demo pic. ##\n## --------- ##\n\nAT_SETUP([force PIC objects])\n\n_LT_DEMO_SETUP\n\nLT_AT_CHECK_CONFIG([--with-pic])\n_LT_CHECK_EXECUTE\n\nAT_CLEANUP\n\n\n## ----------- ##\n## Demo nopic. ##\n## ----------- ##\n\nAT_SETUP([force non-PIC objects])\n\nAT_CHECK([case $host in\nhppa*|x86_64*|s390*)\n  # These hosts cannot use non-PIC shared libs\n  exit 77 ;;\n*-solaris*|*-sunos*)\n  # Libtool does not build non-PIC shared libs on these hosts\n  exit 77 ;;\nesac\n\nif test \"X$build\" = \"X$host\" && test -d \"/etc/selinux\"; then\n\t_selinux=`getenforce 2>/dev/null || echo \"Disabled\"`\n\tcase $_selinux in\n\t*Enforcing)\n\t\t_sebool_allow_execmod=`getsebool allow_execmod 2>/dev/null`\n\t\tcase $_sebool_allow_execmod in\n\t\t*off)\n\t\t\t# SELinux policy disallows non-PIC\n\t\t\texit 77\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tesac\nfi\n])\n\n_LT_DEMO_SETUP\nLT_AT_CHECK_CONFIG([--with-pic=no])\n_LT_CHECK_EXECUTE\n\nAT_CLEANUP\n\n\n## -------------- ##\n## Demo hardcode. ##\n## -------------- ##\n\nAT_SETUP([hardcoding library path])\n\n_LT_DEMO_SETUP\n\nAT_DATA([demo.mk],\n[[hardcode_tests = hc-direct hc-libflag hc-libpath hc-minusL\nCLEANFILES = $(hardcode_tests)\n\n# Unfortunately, in order to test libtool thoroughly, we need access\n# to its private directory.\nobjdir = `$(LIBTOOL) --config | $(SED) -n -e 's/^objdir=\\(.*\\)$$/\\1/p'`\n\n# Test programs to see what gets hardcoded.\n.PHONY: hardcode\nhardcode: $(hardcode_tests)\nSET_HARDCODE_FLAGS = \\\n  eval `$(LIBTOOL) --config | $(SED) -n -e '/^hardcode_.*=/p; /^wl=/p'`\nhc-direct: $(hell_OBJECTS) $(hell_DEPENDENCIES) $(libdir)/libhello.la\n\t@rm -f hc-direct\n\t@echo \"You may ignore any linking errors from the following command:\"\n\t@shlib=./$(objdir)/libhello.a; \\\n\t  eval \"`$(GREP) '^library_names' libhello.la`\"; \\\n\t  for lib in $$library_names; do \\\n\t    shlib=\"./$(objdir)/$$lib\"; \\\n\t  done; \\\n\t  $(SET_HARDCODE_FLAGS); \\\n\t  libdir=$(libdir); \\\n\t  flag=`eval echo \\\"$$hardcode_libdir_flag_spec\\\"`; \\\n\t  echo \"$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(hell_OBJECTS) $$shlib $(LIBS) $(LIBM) $$flag || echo unsupported > $@\"; \\\n\t  eval \"$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(hell_OBJECTS) $$shlib $(LIBS) $(LIBM) $$flag || echo unsupported > $@\"\n\nhc-libflag: $(hell_OBJECTS) $(hell_DEPENDENCIES) $(libdir)/libhello.la\n\t@$(SET_HARDCODE_FLAGS); \\\n\t  libdir=`pwd`/$(objdir); \\\n\t  flag=`eval echo \\\"$$hardcode_libdir_flag_spec\\\"`; \\\n\t  if test -z \"$$flag\"; then \\\n\t    echo \"echo unsupported > $@\"; \\\n\t    echo unsupported > $@ || status=\"$$?\"; \\\n\t  else \\\n\t    echo \"$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(hell_OBJECTS) $$flag -L$(libdir) -lhello $(LIBS) $(LIBM)\"; \\\n\t    $(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(hell_OBJECTS) $$flag -L$(libdir) -lhello $(LIBS) $(LIBM) || status=\"$$?\"; \\\n\t  fi; \\\n\t  exit $$status\n\nhc-libpath: $(hell_OBJECTS) $(hell_DEPENDENCIES) $(libdir)/libhello.la\n\t@rm -f hc-libpath\n\t@echo \"You may ignore any linking errors from the following command:\"\n\t@$(SET_HARDCODE_FLAGS); \\\n\t  eval `$(LIBTOOL) --config | $(GREP) '^shlibpath_var='`; \\\n\t  libdir=$(libdir); \\\n\t  flag=`eval echo \\\"$$hardcode_libdir_flag_spec\\\"`; \\\n\t  echo \"$$shlibpath_var=./$(objdir) $(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(hell_OBJECTS) -lhello $(LIBS) $(LIBM) $$flag || echo unsupported > $@\"; \\\n\t  eval \"$$shlibpath_var=./$(objdir) $(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(hell_OBJECTS) -lhello $(LIBS) $(LIBM) $$flag || echo unsupported > $@\"\n\nhc-minusL: $(hell_OBJECTS) $(hell_DEPENDENCIES)\n\t@rm -f hc-minusL\n\t@$(SET_HARDCODE_FLAGS); \\\n\t  libdir=$(libdir); \\\n\t  flag=`eval echo \\\"$$hardcode_libdir_flag_spec\\\"`; \\\n\t  echo \"$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(hell_OBJECTS) -L./$(objdir) -lhello $(LIBS) $(LIBM) $$flag || echo unsupported > $@\"; \\\n\t  eval \"$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(hell_OBJECTS) -L./$(objdir) -lhello $(LIBS) $(LIBM) $$flag || echo unsupported > $@\"\n]])\n\nLT_AT_CHECK_CONFIG([--disable-static])\n_LT_CHECK_EXECUTE\n_LT_CHECK_INSTALL\n\neval `$EGREP '^library_names=' libhello.la`\nAT_CHECK([test -n \"$library_names\" || (exit 77)])\n\n# Extra tools we may need\n: ${DUMPSTABS=\"dumpstabs\"}\n\nLT_AT_MAKE([hardcode])\n\neval \"`$LIBTOOL --config | $EGREP '^hardcode_(direct|minus_L|shlibpath_var|libdir_flag_spec)='`\"\n\nAT_CHECK([[exit_status=0\nfunc_hardcode_filter_fp ()\n{\n  $FGREP -v \"LT_OBJDIR \\\"$objdir/\\\"\" 2>/dev/null\n}\nfor file in hc-*; do\n  case $file in\n  hc-direct)  expected=\"$hardcode_direct\" ;;\n  hc-libpath) expected=\"$hardcode_shlibpath_var\" ;;\n  hc-minusL)  expected=\"$hardcode_minus_L\" ;;\n\n  hc-libflag)\n    if test -n \"$hardcode_libdir_flag_spec\"; then\n      expected=yes\n    else\n      expected=unsupported\n    fi\n    ;;\n\n  *)\n    continue\n    ;;\n  esac\n\n  # Discover whether the objdir really was hardcoded.\n  hardcoded=no\n\n  # Solaris cc may store the command line in a debugging section,\n  # which leads to false positives.  Unfortunately, Solaris strip\n  # is not capable to remove the section (unlike GNU binutils strip).\n  # So we use dumpstabs if it seems to work.\n  if { $DUMPSTABS -d $file; } >/dev/null 2>&1; then\n    if $DUMPSTABS -d $file 2>/dev/null | $FGREP \"$objdir\" >/dev/null 2>&1; then\n      hardcoded=yes\n    else\n      hardcoded=no\n    fi\n\n  # At least AIX fgrep doesn't work for binary files, and AIX also\n  # doesn't have strings(1), so we need this strange conversion\n  # (which only works on ASCII).\n  # AIX fgrep also has a limited line length, so we turn unprintable\n  # characters into newlines.\n  elif cat $file | (tr '\\000-\\037\\200-\\377' '\\n' || cat) 2>/dev/null \\\n                 | func_hardcode_filter_fp | $FGREP \"$objdir\" > /dev/null 2>&1; then\n    hardcoded=yes\n\n  elif cat $file | func_hardcode_filter_fp | $FGREP \"$objdir\" > /dev/null 2>&1; then\n    # We retry fgrep without tr, in case the above lead to a false negative.\n    hardcoded=yes\n  elif ($SED -e '1!d' $file | $GREP 'unsupported') >/dev/null 2>&1; then\n    hardcoded=unsupported\n  fi\n\n  # Check the result.\n  case $hardcoded in\n  yes)\n    if test yes = \"$expected\"; then\n      echo \"$objdir was hardcoded in '$file', as libtool expected\"\n    else\n      echo \"$objdir was hardcoded in '$file', which fooled libtool\" 1>&2\n      exit_status=1\n    fi\n    ;;\n\n  no)\n    if test no = \"$expected\"; then\n      echo \"$objdir was not hardcoded in '$file', as libtool expected\"\n    else\n      echo \"$objdir was not hardcoded in '$file', which fooled libtool\" 1>&2\n      exit_status=1\n    fi\n    ;;\n\n  unsupported)\n    if test unsupported = \"$expected\"; then\n      echo \"'$file' was not linked properly, as libtool expected\"\n    else\n      echo \"'$file' was not linked properly, which fooled libtool\" 1>&2\n      exit_status=1\n    fi\n    ;;\n  esac\ndone\n]], 0, [ignore])\n\nAT_CLEANUP\n\n\n## ------------ ##\n## Demo relink. ##\n## ------------ ##\n\nAT_SETUP([binary relinking at install time])\nAT_KEYWORDS([interactive])dnl This test causes a popup on Windows\n\n_LT_DEMO_SETUP\n\nLT_AT_CHECK_CONFIG\n_LT_CHECK_EXECUTE\n_LT_CHECK_INSTALL\n\n# Check to make sure we have a dynamic library.\neval `$EGREP '^library_names=' libhello.la`\nAT_CHECK([test -n \"$library_names\" || (exit 77)])\n\nfunc_save_files\n# AIX 5.3 '/bin/sh' will invoke the trap for 0 at the end of a\n# function, so we set the trap outside of a function to be portable.\ntrap func_restore_files 0 1 2 13 15\n\neval \"`$LIBTOOL --config | $EGREP '^shlibpath_overrides_runpath='`\"\neval \"`$LIBTOOL --config | $EGREP '^hardcode_(action|direct|into_libs)='`\"\n\n# Allow the binary to link on-demand if need be.\n./hell$EXEEXT >/dev/null || :\n\n# Remove libhello.la from build tree.\nrm -f libhello.la \"$objdir\"/libhello.*\n\n# Either uninstalled ./hell will run using the just installed libraries\n# when the uninstalled libs are missing, or relinking at install time\n# is necessary, and the uninstalled ./hell has only the uninstalled\n# library paths hardcoded.\nAT_CHECK([./hell$EXEEXT >/dev/null || test relink,yes = \"$hardcode_action,$hardcode_direct\"])\n\n# Link an incomplete libhello.la.\nLT_AT_MAKE([libhello.la], [libhello_la_OBJECTS=hello.lo])\nAT_CHECK([test -f libhello.la])\n\n# Try running uninstalled ./hell with only broken libhello.la in build tree.\n# If the following has normal exit status, shlibpath_overrides_runpath is\n# wrong, and should be set to 'no' on this host.\n# The unusual '|| (exit 1)' is to normalize all non-zero exit statuses.\nLT_AT_CHECK([./hell || (exit 1)], 1, [ignore], [ignore])\n\ntest relink = \"$hardcode_action\" ||\ntest yes = \"$shlibpath_overrides_runpath\" ||\n{\n    AT_CHECK([rm -f $objdir/lt-hell$EXEEXT])\n    AT_CHECK([cp $objdir/hell$EXEEXT $objdir/lt-hell$EXEEXT])\n\n    # Running demo/hell with installed libhello.la.\n    # If the following check fails, then shlibpath_overrides_runpath is\n    # wrong, and should be set to 'yes' on this host.\n    LT_AT_CHECK([./hell], 0, [expout])\n}\n\nfunc_restore_files\n\n# Undo the effect of the previous 'trap' command. Some shellology:\n# We cannot use \"trap - 0 1 2 3 13 15\", because Solaris sh would attempt to\n# execute the command \"-\". \"trap '' ...\" is fine only for signal 0 (= normal\n# exit); for the others we need to call 'exit' explicitly. The value of $? is\n# 128 + signal number and is set before the trap-registered command is run.\ntrap '' 0\ntrap 'func_exit $?' 1 2 3 13 15\n\nAT_CLEANUP\n\n\n## ----------------- ##\n## Demo noinst link. ##\n## ----------------- ##\n\nAT_SETUP([uninstalled libraries have priority])\n\n_LT_DEMO_SETUP\n\nLT_AT_CHECK_CONFIG\n_LT_CHECK_EXECUTE\n_LT_CHECK_INSTALL\n\n# Remove libhello.la and hell from build tree.\nrm -f libhello.la \"hell$EXEEXT\"\n\n# If this check fails (i.e. the make succeeds), then the installed library\n# was used, which is wrong.\nAT_CHECK([$as_unset LIBTOOL; $as_unset LIBTOOLIZE; $MAKE hell$EXEEXT libhello_la_OBJECTS=hello.lo || (exit 1)],\n         [1], [ignore], [ignore])\n\nAT_CLEANUP\n\n\n## ----------- ##\n## Pdemo conf. ##\n## ----------- ##\n\nAT_SETUP([linking with long file names])\n\n_LT_DEMO_SETUP\n\nAT_DATA([Makefile.am],\n[[AUTOMAKE_OPTIONS = no-dependencies foreign\nACLOCAL_AMFLAGS = -I m4\n\n# Build a libtool library, libhello.la for installation in libdir.\nlib_LTLIBRARIES = libhello.la\nlibhello_la_SOURCES = longer_file_name_hello.c longer_file_name_foo.c longer_file_name_foo2.c\nlibhello_la_LIBADD = $(LIBM)\nlibhello_la_LDFLAGS = -no-undefined -version-info 3:12:1\nlibhello_la_CPPFLAGS = $(AM_CPPFLAGS) -DBUILDING_LIBHELLO\n\ninclude_HEADERS = foo.h\n\nif BINARY_HELLDL\nBUILD_helldl = helldl\nelse\nBUILD_helldl =\nendif\n\nbin_PROGRAMS = hell hell_static $(BUILD_helldl)\n\n# Build hell from longer_file_name_main.c and libhello.la\nhell_SOURCES = longer_file_name_main.c\nhell_LDADD = libhello.la\n\n# Create a statically linked version of hell.\nhell_static_SOURCES = longer_file_name_main.c\nhell_static_LDADD = libhello.la\nhell_static_LDFLAGS = $(STATIC)\n\nif BINARY_HELLDL\n\n# Create a version of hell that does a preloaded dlopen.\nhelldl_SOURCES = longer_file_name_dlmain.c\nhelldl_LDFLAGS = -export-dynamic -dlpreopen libhello.la\nhelldl_DEPENDENCIES = libhello.la\n\nelse\n\n# Create a script that says that -dlopen is not supported.\nbin_SCRIPTS = helldl\nhelldl helldl$(EXEEXT):\n\trm -rf $@\n\techo '#! /bin/sh' > $@\n\techo 'echo sorry, -dlopen is unsupported' >> $@\n\tchmod +x $@\n\nendif\n\nlibtool: $(LIBTOOL_DEPS)\n\t$(SHELL) ./config.status --recheck\n]])\n\nAT_DATA([main.c],\n[[#include <config.h>\n#include <stdio.h>\n\n#include \"foo.h\"\n\nint main ()\n{\n  printf (\"Welcome to GNU Hell!\\n\");\n\n  /* Try assigning to the nothing variable. */\n  nothing = 1;\n\n  /* Just call the functions and check return values. */\n  if (foo () != FOO_RET)\n    return 1;\n\n  if (foo2 () != FOO_RET)\n    return 1;\n\n  if (hello () != HELLO_RET)\n    return 2;\n\n  return 0;\n}\n]])\n\nAT_DATA([foo.h],\n[[#ifndef FOO_H\n#define FOO_H\n\n/* At some point, cygwin will stop defining __CYGWIN32__, but b19 and\n * earlier do not define __CYGWIN__.  This snippet allows us to check\n * for __CYGWIN__ reliably for both current, old, and (probable) future\n * releases.\n */\n#ifdef __CYGWIN32__\n#  ifndef __CYGWIN__\n#    define __CYGWIN__\n#  endif\n#endif\n\n#if (defined _WIN32 || defined _WIN32_WCE) && !defined __GNUC__\n# ifdef BUILDING_LIBHELLO\n#  ifdef DLL_EXPORT\n#   define LIBHELLO_SCOPE extern __declspec (dllexport)\n#  endif\n# else\n#  define LIBHELLO_SCOPE extern __declspec (dllimport)\n# endif\n#endif\n#ifndef LIBHELLO_SCOPE\n# define LIBHELLO_SCOPE extern\n#endif\n\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n/* Silly constants that the functions return. */\n#define HELLO_RET 0xe110\n#define FOO_RET 0xf00\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\nint foo (void);\nint foo2 (void);\nint hello (void);\nLIBHELLO_SCOPE int nothing;\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif\n]])\n\nAT_DATA([foo2.c],\n[[#include <config.h>\n#include <stdio.h>\n#include <math.h>\n\n#include \"foo.h\"\n\nint foo2 (void) {\n  printf (\"foo2 cos (0.0) = %g\\n\", (double) cos ((double) 0.0));\n  return FOO_RET;\n}\n]])\n\nLT_AT_HOST_DATA([expout],\n[[Welcome to GNU Hell!\ncos (0.0) = 1\nfoo2 cos (0.0) = 1\n** This is not GNU Hello. There is no built-in mail reader. **\n]])\n\nfor file in dlmain.c foo.c foo2.c hello.c main.c; do\n  mv $file longer_file_name_$file\ndone\n\nLT_AT_CHECK_CONFIG\n_LT_CHECK_EXECUTE\n_LT_CHECK_INSTALL\n\nAT_CLEANUP\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/m4/libtool.m4": "# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n#\n#   Copyright (C) 1996-2001, 2003-2019 Free Software Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\nm4_define([_LT_COPYING], [dnl\n# Copyright (C) 2014 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program or library that is built\n# using GNU Libtool, you may include this file under the  same\n# distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n])\n\n# serial 58 LT_INIT\n\n\n# LT_PREREQ(VERSION)\n# ------------------\n# Complain and exit if this libtool version is less that VERSION.\nm4_defun([LT_PREREQ],\n[m4_if(m4_version_compare(m4_defn([LT_PACKAGE_VERSION]), [$1]), -1,\n       [m4_default([$3],\n\t\t   [m4_fatal([Libtool version $1 or higher is required],\n\t\t             63)])],\n       [$2])])\n\n\n# _LT_CHECK_BUILDDIR\n# ------------------\n# Complain if the absolute build directory name contains unusual characters\nm4_defun([_LT_CHECK_BUILDDIR],\n[case `pwd` in\n  *\\ * | *\\\t*)\n    AC_MSG_WARN([Libtool does not cope well with whitespace in `pwd`]) ;;\nesac\n])\n\n\n# LT_INIT([OPTIONS])\n# ------------------\nAC_DEFUN([LT_INIT],\n[AC_PREREQ([2.62])dnl We use AC_PATH_PROGS_FEATURE_CHECK\nAC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\nAC_BEFORE([$0], [LT_LANG])dnl\nAC_BEFORE([$0], [LT_OUTPUT])dnl\nAC_BEFORE([$0], [LTDL_INIT])dnl\nm4_require([_LT_CHECK_BUILDDIR])dnl\n\ndnl Autoconf doesn't catch unexpanded LT_ macros by default:\nm4_pattern_forbid([^_?LT_[A-Z_]+$])dnl\nm4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl\ndnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4\ndnl unless we require an AC_DEFUNed macro:\nAC_REQUIRE([LTOPTIONS_VERSION])dnl\nAC_REQUIRE([LTSUGAR_VERSION])dnl\nAC_REQUIRE([LTVERSION_VERSION])dnl\nAC_REQUIRE([LTOBSOLETE_VERSION])dnl\nm4_require([_LT_PROG_LTMAIN])dnl\n\n_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])\n\ndnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=$ltmain\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n_LT_SETUP\n\n# Only expand once:\nm4_define([LT_INIT])\n])# LT_INIT\n\n# Old names:\nAU_ALIAS([AC_PROG_LIBTOOL], [LT_INIT])\nAU_ALIAS([AM_PROG_LIBTOOL], [LT_INIT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PROG_LIBTOOL], [])\ndnl AC_DEFUN([AM_PROG_LIBTOOL], [])\n\n\n# _LT_PREPARE_CC_BASENAME\n# -----------------------\nm4_defun([_LT_PREPARE_CC_BASENAME], [\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nfunc_cc_basename ()\n{\n    for cc_temp in @S|@*\"\"; do\n      case $cc_temp in\n        compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n        distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n        \\-*) ;;\n        *) break;;\n      esac\n    done\n    func_cc_basename_result=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n}\n])# _LT_PREPARE_CC_BASENAME\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# It would be clearer to call AC_REQUIREs from _LT_PREPARE_CC_BASENAME,\n# but that macro is also expanded into generated libtool script, which\n# arranges for $SED and $ECHO to be set by different means.\nm4_defun([_LT_CC_BASENAME],\n[m4_require([_LT_PREPARE_CC_BASENAME])dnl\nAC_REQUIRE([_LT_DECL_SED])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\nfunc_cc_basename $1\ncc_basename=$func_cc_basename_result\n])\n\n\n# _LT_FILEUTILS_DEFAULTS\n# ----------------------\n# It is okay to use these file commands and assume they have been set\n# sensibly after 'm4_require([_LT_FILEUTILS_DEFAULTS])'.\nm4_defun([_LT_FILEUTILS_DEFAULTS],\n[: ${CP=\"cp -f\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n])# _LT_FILEUTILS_DEFAULTS\n\n\n# _LT_SETUP\n# ---------\nm4_defun([_LT_SETUP],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([_LT_PREPARE_SED_QUOTE_VARS])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\n\n_LT_DECL([], [PATH_SEPARATOR], [1], [The PATH separator for the build system])dnl\ndnl\n_LT_DECL([], [host_alias], [0], [The host system])dnl\n_LT_DECL([], [host], [0])dnl\n_LT_DECL([], [host_os], [0])dnl\ndnl\n_LT_DECL([], [build_alias], [0], [The build system])dnl\n_LT_DECL([], [build], [0])dnl\n_LT_DECL([], [build_os], [0])dnl\ndnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\ndnl\nAC_REQUIRE([AC_PROG_LN_S])dnl\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\n_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl\ndnl\nAC_REQUIRE([LT_CMD_MAX_LEN])dnl\n_LT_DECL([objext], [ac_objext], [0], [Object file suffix (normally \"o\")])dnl\n_LT_DECL([], [exeext], [0], [Executable file suffix (normally \"\")])dnl\ndnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PATH_CONVERSION_FUNCTIONS])dnl\nm4_require([_LT_CMD_RELOAD])dnl\nm4_require([_LT_CHECK_MAGIC_METHOD])dnl\nm4_require([_LT_CHECK_SHAREDLIB_FROM_LINKLIB])dnl\nm4_require([_LT_CMD_OLD_ARCHIVE])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_WITH_SYSROOT])dnl\nm4_require([_LT_CMD_TRUNCATE])dnl\n\n_LT_CONFIG_LIBTOOL_INIT([\n# See if we are running on zsh, and set the options that allow our\n# commands through without removal of \\ escapes INIT.\nif test -n \"\\${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n])\nif test -n \"${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n\n_LT_CHECK_OBJDIR\n\nm4_require([_LT_TAG_COMPILER])dnl\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test set != \"${COLLECT_NAMES+set}\"; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Global variables:\nofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a '.a' archive for static linking (except MSVC and\n# ICC, which need '.lib').\nlibext=a\n\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n\nold_CC=$CC\nold_CFLAGS=$CFLAGS\n\n# Set sane defaults for various variables\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$LD\" && LD=ld\ntest -z \"$ac_objext\" && ac_objext=o\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    _LT_PATH_MAGIC\n  fi\n  ;;\nesac\n\n# Use C for the default configuration in the libtool script\nLT_SUPPORTED_TAG([CC])\n_LT_LANG_C_CONFIG\n_LT_LANG_DEFAULT_CONFIG\n_LT_CONFIG_COMMANDS\n])# _LT_SETUP\n\n\n# _LT_PREPARE_SED_QUOTE_VARS\n# --------------------------\n# Define a few sed substitution that help us do robust quoting.\nm4_defun([_LT_PREPARE_SED_QUOTE_VARS],\n[# Backslashify metacharacters that are still active within\n# double-quoted strings.\nsed_quote_subst='s/\\([[\"`$\\\\]]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([[\"`\\\\]]\\)/\\\\\\1/g'\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to delay expansion of an escaped single quote.\ndelay_single_quote_subst='s/'\\''/'\\'\\\\\\\\\\\\\\'\\''/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n])\n\n# _LT_PROG_LTMAIN\n# ---------------\n# Note that this code is called both from 'configure', and 'config.status'\n# now that we use AC_CONFIG_COMMANDS to generate libtool.  Notably,\n# 'config.status' has no value for ac_aux_dir unless we are using Automake,\n# so we pass a copy along to make sure it has a sensible value anyway.\nm4_defun([_LT_PROG_LTMAIN],\n[m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([ltmain.sh])])dnl\n_LT_CONFIG_LIBTOOL_INIT([ac_aux_dir='$ac_aux_dir'])\nltmain=$ac_aux_dir/ltmain.sh\n])# _LT_PROG_LTMAIN\n\n\n## ------------------------------------- ##\n## Accumulate code for creating libtool. ##\n## ------------------------------------- ##\n\n# So that we can recreate a full libtool script including additional\n# tags, we accumulate the chunks of code to send to AC_CONFIG_COMMANDS\n# in macros and then make a single call at the end using the 'libtool'\n# label.\n\n\n# _LT_CONFIG_LIBTOOL_INIT([INIT-COMMANDS])\n# ----------------------------------------\n# Register INIT-COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL_INIT],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_INIT],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_INIT])\n\n\n# _LT_CONFIG_LIBTOOL([COMMANDS])\n# ------------------------------\n# Register COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_COMMANDS],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])\n\n\n# _LT_CONFIG_SAVE_COMMANDS([COMMANDS], [INIT_COMMANDS])\n# -----------------------------------------------------\nm4_defun([_LT_CONFIG_SAVE_COMMANDS],\n[_LT_CONFIG_LIBTOOL([$1])\n_LT_CONFIG_LIBTOOL_INIT([$2])\n])\n\n\n# _LT_FORMAT_COMMENT([COMMENT])\n# -----------------------------\n# Add leading comment marks to the start of each line, and a trailing\n# full-stop to the whole comment if one is not present already.\nm4_define([_LT_FORMAT_COMMENT],\n[m4_ifval([$1], [\nm4_bpatsubst([m4_bpatsubst([$1], [^ *], [# ])],\n              [['`$\\]], [\\\\\\&])]m4_bmatch([$1], [[!?.]$], [], [.])\n)])\n\n\n\n## ------------------------ ##\n## FIXME: Eliminate VARNAME ##\n## ------------------------ ##\n\n\n# _LT_DECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION], [IS-TAGGED?])\n# -------------------------------------------------------------------\n# CONFIGNAME is the name given to the value in the libtool script.\n# VARNAME is the (base) name used in the configure script.\n# VALUE may be 0, 1 or 2 for a computed quote escaped value based on\n# VARNAME.  Any other value will be used directly.\nm4_define([_LT_DECL],\n[lt_if_append_uniq([lt_decl_varnames], [$2], [, ],\n    [lt_dict_add_subkey([lt_decl_dict], [$2], [libtool_name],\n\t[m4_ifval([$1], [$1], [$2])])\n    lt_dict_add_subkey([lt_decl_dict], [$2], [value], [$3])\n    m4_ifval([$4],\n\t[lt_dict_add_subkey([lt_decl_dict], [$2], [description], [$4])])\n    lt_dict_add_subkey([lt_decl_dict], [$2],\n\t[tagged?], [m4_ifval([$5], [yes], [no])])])\n])\n\n\n# _LT_TAGDECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION])\n# --------------------------------------------------------\nm4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])\n\n\n# lt_decl_tag_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_tag_varnames],\n[_lt_decl_filter([tagged?], [yes], $@)])\n\n\n# _lt_decl_filter(SUBKEY, VALUE, [SEPARATOR], [VARNAME1..])\n# ---------------------------------------------------------\nm4_define([_lt_decl_filter],\n[m4_case([$#],\n  [0], [m4_fatal([$0: too few arguments: $#])],\n  [1], [m4_fatal([$0: too few arguments: $#: $1])],\n  [2], [lt_dict_filter([lt_decl_dict], [$1], [$2], [], lt_decl_varnames)],\n  [3], [lt_dict_filter([lt_decl_dict], [$1], [$2], [$3], lt_decl_varnames)],\n  [lt_dict_filter([lt_decl_dict], $@)])[]dnl\n])\n\n\n# lt_decl_quote_varnames([SEPARATOR], [VARNAME1...])\n# --------------------------------------------------\nm4_define([lt_decl_quote_varnames],\n[_lt_decl_filter([value], [1], $@)])\n\n\n# lt_decl_dquote_varnames([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_dquote_varnames],\n[_lt_decl_filter([value], [2], $@)])\n\n\n# lt_decl_varnames_tagged([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_varnames_tagged],\n[m4_assert([$# <= 2])dnl\n_$0(m4_quote(m4_default([$1], [[, ]])),\n    m4_ifval([$2], [[$2]], [m4_dquote(lt_decl_tag_varnames)]),\n    m4_split(m4_normalize(m4_quote(_LT_TAGS)), [ ]))])\nm4_define([_lt_decl_varnames_tagged],\n[m4_ifval([$3], [lt_combine([$1], [$2], [_], $3)])])\n\n\n# lt_decl_all_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_all_varnames],\n[_$0(m4_quote(m4_default([$1], [[, ]])),\n     m4_if([$2], [],\n\t   m4_quote(lt_decl_varnames),\n\tm4_quote(m4_shift($@))))[]dnl\n])\nm4_define([_lt_decl_all_varnames],\n[lt_join($@, lt_decl_varnames_tagged([$1],\n\t\t\tlt_decl_tag_varnames([[, ]], m4_shift($@))))dnl\n])\n\n\n# _LT_CONFIG_STATUS_DECLARE([VARNAME])\n# ------------------------------------\n# Quote a variable value, and forward it to 'config.status' so that its\n# declaration there will have the same value as in 'configure'.  VARNAME\n# must have a single quote delimited value for this to work.\nm4_define([_LT_CONFIG_STATUS_DECLARE],\n[$1='`$ECHO \"$][$1\" | $SED \"$delay_single_quote_subst\"`'])\n\n\n# _LT_CONFIG_STATUS_DECLARATIONS\n# ------------------------------\n# We delimit libtool config variables with single quotes, so when\n# we write them to config.status, we have to be sure to quote all\n# embedded single quotes properly.  In configure, this macro expands\n# each variable declared with _LT_DECL (and _LT_TAGDECL) into:\n#\n#    <var>='`$ECHO \"$<var>\" | $SED \"$delay_single_quote_subst\"`'\nm4_defun([_LT_CONFIG_STATUS_DECLARATIONS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_all_varnames),\n    [m4_n([_LT_CONFIG_STATUS_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAGS\n# ----------------\n# Output comment and list of tags supported by the script\nm4_defun([_LT_LIBTOOL_TAGS],\n[_LT_FORMAT_COMMENT([The names of the tagged configurations supported by this script])dnl\navailable_tags='_LT_TAGS'dnl\n])\n\n\n# _LT_LIBTOOL_DECLARE(VARNAME, [TAG])\n# -----------------------------------\n# Extract the dictionary values for VARNAME (optionally with TAG) and\n# expand to a commented shell variable setting:\n#\n#    # Some comment about what VAR is for.\n#    visible_name=$lt_internal_name\nm4_define([_LT_LIBTOOL_DECLARE],\n[_LT_FORMAT_COMMENT(m4_quote(lt_dict_fetch([lt_decl_dict], [$1],\n\t\t\t\t\t   [description])))[]dnl\nm4_pushdef([_libtool_name],\n    m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [libtool_name])))[]dnl\nm4_case(m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [value])),\n    [0], [_libtool_name=[$]$1],\n    [1], [_libtool_name=$lt_[]$1],\n    [2], [_libtool_name=$lt_[]$1],\n    [_libtool_name=lt_dict_fetch([lt_decl_dict], [$1], [value])])[]dnl\nm4_ifval([$2], [_$2])[]m4_popdef([_libtool_name])[]dnl\n])\n\n\n# _LT_LIBTOOL_CONFIG_VARS\n# -----------------------\n# Produce commented declarations of non-tagged libtool config variables\n# suitable for insertion in the LIBTOOL CONFIG section of the 'libtool'\n# script.  Tagged libtool config variables (even for the LIBTOOL CONFIG\n# section) are produced by _LT_LIBTOOL_TAG_VARS.\nm4_defun([_LT_LIBTOOL_CONFIG_VARS],\n[m4_foreach([_lt_var],\n    m4_quote(_lt_decl_filter([tagged?], [no], [], lt_decl_varnames)),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAG_VARS(TAG)\n# -------------------------\nm4_define([_LT_LIBTOOL_TAG_VARS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_tag_varnames),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var, [$1])])])])\n\n\n# _LT_TAGVAR(VARNAME, [TAGNAME])\n# ------------------------------\nm4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])\n\n\n# _LT_CONFIG_COMMANDS\n# -------------------\n# Send accumulated output to $CONFIG_STATUS.  Thanks to the lists of\n# variables for single and double quote escaping we saved from calls\n# to _LT_DECL, we can put quote escaped variables declarations\n# into 'config.status', and then the shell code to quote escape them in\n# for loops in 'config.status'.  Finally, any additional code accumulated\n# from calls to _LT_CONFIG_LIBTOOL_INIT is expanded.\nm4_defun([_LT_CONFIG_COMMANDS],\n[AC_PROVIDE_IFELSE([LT_OUTPUT],\n\tdnl If the libtool generation code has been placed in $CONFIG_LT,\n\tdnl instead of duplicating it all over again into config.status,\n\tdnl then we will have config.status run $CONFIG_LT later, so it\n\tdnl needs to know what name is stored there:\n        [AC_CONFIG_COMMANDS([libtool],\n            [$SHELL $CONFIG_LT || AS_EXIT(1)], [CONFIG_LT='$CONFIG_LT'])],\n    dnl If the libtool generation code is destined for config.status,\n    dnl expand the accumulated commands and init code now:\n    [AC_CONFIG_COMMANDS([libtool],\n        [_LT_OUTPUT_LIBTOOL_COMMANDS], [_LT_OUTPUT_LIBTOOL_COMMANDS_INIT])])\n])#_LT_CONFIG_COMMANDS\n\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],\n[\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nsed_quote_subst='$sed_quote_subst'\ndouble_quote_subst='$double_quote_subst'\ndelay_variable_subst='$delay_variable_subst'\n_LT_CONFIG_STATUS_DECLARATIONS\nLTCC='$LTCC'\nLTCFLAGS='$LTCFLAGS'\ncompiler='$compiler_DEFAULT'\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$[]1\n_LTECHO_EOF'\n}\n\n# Quote evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_quote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED \\\\\"\\\\\\$sed_quote_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n# Double-quote double-evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_dquote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED -e \\\\\"\\\\\\$double_quote_subst\\\\\" -e \\\\\"\\\\\\$sed_quote_subst\\\\\" -e \\\\\"\\\\\\$delay_variable_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n_LT_OUTPUT_LIBTOOL_INIT\n])\n\n# _LT_GENERATED_FILE_INIT(FILE, [COMMENT])\n# ------------------------------------\n# Generate a child script FILE with all initialization necessary to\n# reuse the environment learned by the parent script, and make the\n# file executable.  If COMMENT is supplied, it is inserted after the\n# '#!' sequence but before initialization text begins.  After this\n# macro, additional text can be appended to FILE to form the body of\n# the child script.  The macro ends with non-zero status if the\n# file could not be fully written (such as if the disk is full).\nm4_ifdef([AS_INIT_GENERATED],\n[m4_defun([_LT_GENERATED_FILE_INIT],[AS_INIT_GENERATED($@)])],\n[m4_defun([_LT_GENERATED_FILE_INIT],\n[m4_require([AS_PREPARE])]dnl\n[m4_pushdef([AS_MESSAGE_LOG_FD])]dnl\n[lt_write_fail=0\ncat >$1 <<_ASEOF || lt_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n$2\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$1 <<\\_ASEOF || lt_write_fail=1\nAS_SHELL_SANITIZE\n_AS_PREPARE\nexec AS_MESSAGE_FD>&1\n_ASEOF\ntest 0 = \"$lt_write_fail\" && chmod +x $1[]dnl\nm4_popdef([AS_MESSAGE_LOG_FD])])])# _LT_GENERATED_FILE_INIT\n\n# LT_OUTPUT\n# ---------\n# This macro allows early generation of the libtool script (before\n# AC_OUTPUT is called), incase it is used in configure for compilation\n# tests.\nAC_DEFUN([LT_OUTPUT],\n[: ${CONFIG_LT=./config.lt}\nAC_MSG_NOTICE([creating $CONFIG_LT])\n_LT_GENERATED_FILE_INIT([\"$CONFIG_LT\"],\n[# Run this file to recreate a libtool stub with the current configuration.])\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nlt_cl_silent=false\nexec AS_MESSAGE_LOG_FD>>config.log\n{\n  echo\n  AS_BOX([Running $as_me.])\n} >&AS_MESSAGE_LOG_FD\n\nlt_cl_help=\"\\\n'$as_me' creates a local libtool stub from the current configuration,\nfor use in further configure time tests before the real libtool is\ngenerated.\n\nUsage: $[0] [[OPTIONS]]\n\n  -h, --help      print this help, then exit\n  -V, --version   print version number, then exit\n  -q, --quiet     do not print progress messages\n  -d, --debug     don't remove temporary files\n\nReport bugs to <bug-libtool@gnu.org>.\"\n\nlt_cl_version=\"\\\nm4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl\nm4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])\nconfigured by $[0], generated by m4_PACKAGE_STRING.\n\nCopyright (C) 2011 Free Software Foundation, Inc.\nThis config.lt script is free software; the Free Software Foundation\ngives unlimited permision to copy, distribute and modify it.\"\n\nwhile test 0 != $[#]\ndo\n  case $[1] in\n    --version | --v* | -V )\n      echo \"$lt_cl_version\"; exit 0 ;;\n    --help | --h* | -h )\n      echo \"$lt_cl_help\"; exit 0 ;;\n    --debug | --d* | -d )\n      debug=: ;;\n    --quiet | --q* | --silent | --s* | -q )\n      lt_cl_silent=: ;;\n\n    -*) AC_MSG_ERROR([unrecognized option: $[1]\nTry '$[0] --help' for more information.]) ;;\n\n    *) AC_MSG_ERROR([unrecognized argument: $[1]\nTry '$[0] --help' for more information.]) ;;\n  esac\n  shift\ndone\n\nif $lt_cl_silent; then\n  exec AS_MESSAGE_FD>/dev/null\nfi\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<_LTEOF\n_LT_OUTPUT_LIBTOOL_COMMANDS_INIT\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nAC_MSG_NOTICE([creating $ofile])\n_LT_OUTPUT_LIBTOOL_COMMANDS\nAS_EXIT(0)\n_LTEOF\nchmod +x \"$CONFIG_LT\"\n\n# configure is writing to config.log, but config.lt does its own redirection,\n# appending to config.log, which fails on DOS, as config.log is still kept\n# open by configure.  Here we exec the FD to /dev/null, effectively closing\n# config.log, so it can be properly (re)opened and appended to by config.lt.\nlt_cl_success=:\ntest yes = \"$silent\" &&\n  lt_config_lt_args=\"$lt_config_lt_args --quiet\"\nexec AS_MESSAGE_LOG_FD>/dev/null\n$SHELL \"$CONFIG_LT\" $lt_config_lt_args || lt_cl_success=false\nexec AS_MESSAGE_LOG_FD>>config.log\n$lt_cl_success || AS_EXIT(1)\n])# LT_OUTPUT\n\n\n# _LT_CONFIG(TAG)\n# ---------------\n# If TAG is the built-in tag, create an initial libtool script with a\n# default configuration from the untagged config vars.  Otherwise add code\n# to config.status for appending the configuration named by TAG from the\n# matching tagged config vars.\nm4_defun([_LT_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_CONFIG_SAVE_COMMANDS([\n  m4_define([_LT_TAG], m4_if([$1], [], [C], [$1]))dnl\n  m4_if(_LT_TAG, [C], [\n    # See if we are running on zsh, and set the options that allow our\n    # commands through without removal of \\ escapes.\n    if test -n \"${ZSH_VERSION+set}\"; then\n      setopt NO_GLOB_SUBST\n    fi\n\n    cfgfile=${ofile}T\n    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n    $RM \"$cfgfile\"\n\n    cat <<_LT_EOF >> \"$cfgfile\"\n#! $SHELL\n# Generated automatically by $as_me ($PACKAGE) $VERSION\n# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit, 1996\n\n_LT_COPYING\n_LT_LIBTOOL_TAGS\n\n# Configured defaults for sys_lib_dlsearch_path munging.\n: \\${LT_SYS_LIBRARY_PATH=\"$configure_time_lt_sys_library_path\"}\n\n# ### BEGIN LIBTOOL CONFIG\n_LT_LIBTOOL_CONFIG_VARS\n_LT_LIBTOOL_TAG_VARS\n# ### END LIBTOOL CONFIG\n\n_LT_EOF\n\n    cat <<'_LT_EOF' >> \"$cfgfile\"\n\n# ### BEGIN FUNCTIONS SHARED WITH CONFIGURE\n\n_LT_PREPARE_MUNGE_PATH_LIST\n_LT_PREPARE_CC_BASENAME\n\n# ### END FUNCTIONS SHARED WITH CONFIGURE\n\n_LT_EOF\n\n  case $host_os in\n  aix3*)\n    cat <<\\_LT_EOF >> \"$cfgfile\"\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test set != \"${COLLECT_NAMES+set}\"; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\n_LT_EOF\n    ;;\n  esac\n\n  _LT_PROG_LTMAIN\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" \\\n     || (rm -f \"$cfgfile\"; exit 1)\n\n   mv -f \"$cfgfile\" \"$ofile\" ||\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n],\n[cat <<_LT_EOF >> \"$ofile\"\n\ndnl Unfortunately we have to use $1 here, since _LT_TAG is not expanded\ndnl in a comment (ie after a #).\n# ### BEGIN LIBTOOL TAG CONFIG: $1\n_LT_LIBTOOL_TAG_VARS(_LT_TAG)\n# ### END LIBTOOL TAG CONFIG: $1\n_LT_EOF\n])dnl /m4_if\n],\n[m4_if([$1], [], [\n    PACKAGE='$PACKAGE'\n    VERSION='$VERSION'\n    RM='$RM'\n    ofile='$ofile'], [])\n])dnl /_LT_CONFIG_SAVE_COMMANDS\n])# _LT_CONFIG\n\n\n# LT_SUPPORTED_TAG(TAG)\n# ---------------------\n# Trace this macro to discover what tags are supported by the libtool\n# --tag option, using:\n#    autoconf --trace 'LT_SUPPORTED_TAG:$1'\nAC_DEFUN([LT_SUPPORTED_TAG], [])\n\n\n# C support is built-in for now\nm4_define([_LT_LANG_C_enabled], [])\nm4_define([_LT_TAGS], [])\n\n\n# LT_LANG(LANG)\n# -------------\n# Enable libtool support for the given language if not already enabled.\nAC_DEFUN([LT_LANG],\n[AC_BEFORE([$0], [LT_OUTPUT])dnl\nm4_case([$1],\n  [C],\t\t\t[_LT_LANG(C)],\n  [C++],\t\t[_LT_LANG(CXX)],\n  [Go],\t\t\t[_LT_LANG(GO)],\n  [Java],\t\t[_LT_LANG(GCJ)],\n  [Fortran 77],\t\t[_LT_LANG(F77)],\n  [Fortran],\t\t[_LT_LANG(FC)],\n  [Windows Resource],\t[_LT_LANG(RC)],\n  [m4_ifdef([_LT_LANG_]$1[_CONFIG],\n    [_LT_LANG($1)],\n    [m4_fatal([$0: unsupported language: \"$1\"])])])dnl\n])# LT_LANG\n\n\n# _LT_LANG(LANGNAME)\n# ------------------\nm4_defun([_LT_LANG],\n[m4_ifdef([_LT_LANG_]$1[_enabled], [],\n  [LT_SUPPORTED_TAG([$1])dnl\n  m4_append([_LT_TAGS], [$1 ])dnl\n  m4_define([_LT_LANG_]$1[_enabled], [])dnl\n  _LT_LANG_$1_CONFIG($1)])dnl\n])# _LT_LANG\n\n\nm4_ifndef([AC_PROG_GO], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_GO.  When it is available in    #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\nm4_defun([AC_PROG_GO],\n[AC_LANG_PUSH(Go)dnl\nAC_ARG_VAR([GOC],     [Go compiler command])dnl\nAC_ARG_VAR([GOFLAGS], [Go compiler flags])dnl\n_AC_ARG_VAR_LDFLAGS()dnl\nAC_CHECK_TOOL(GOC, gccgo)\nif test -z \"$GOC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    AC_CHECK_PROG(GOC, [${ac_tool_prefix}gccgo], [${ac_tool_prefix}gccgo])\n  fi\nfi\nif test -z \"$GOC\"; then\n  AC_CHECK_PROG(GOC, gccgo, gccgo, false)\nfi\n])#m4_defun\n])#m4_ifndef\n\n\n# _LT_LANG_DEFAULT_CONFIG\n# -----------------------\nm4_defun([_LT_LANG_DEFAULT_CONFIG],\n[AC_PROVIDE_IFELSE([AC_PROG_CXX],\n  [LT_LANG(CXX)],\n  [m4_define([AC_PROG_CXX], defn([AC_PROG_CXX])[LT_LANG(CXX)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_F77],\n  [LT_LANG(F77)],\n  [m4_define([AC_PROG_F77], defn([AC_PROG_F77])[LT_LANG(F77)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_FC],\n  [LT_LANG(FC)],\n  [m4_define([AC_PROG_FC], defn([AC_PROG_FC])[LT_LANG(FC)])])\n\ndnl The call to [A][M_PROG_GCJ] is quoted like that to stop aclocal\ndnl pulling things in needlessly.\nAC_PROVIDE_IFELSE([AC_PROG_GCJ],\n  [LT_LANG(GCJ)],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n    [LT_LANG(GCJ)],\n    [AC_PROVIDE_IFELSE([LT_PROG_GCJ],\n      [LT_LANG(GCJ)],\n      [m4_ifdef([AC_PROG_GCJ],\n\t[m4_define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([A][M_PROG_GCJ],\n\t[m4_define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([LT_PROG_GCJ],\n\t[m4_define([LT_PROG_GCJ], defn([LT_PROG_GCJ])[LT_LANG(GCJ)])])])])])\n\nAC_PROVIDE_IFELSE([AC_PROG_GO],\n  [LT_LANG(GO)],\n  [m4_define([AC_PROG_GO], defn([AC_PROG_GO])[LT_LANG(GO)])])\n\nAC_PROVIDE_IFELSE([LT_PROG_RC],\n  [LT_LANG(RC)],\n  [m4_define([LT_PROG_RC], defn([LT_PROG_RC])[LT_LANG(RC)])])\n])# _LT_LANG_DEFAULT_CONFIG\n\n# Obsolete macros:\nAU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])\nAU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])\nAU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])\nAU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])\nAU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_CXX], [])\ndnl AC_DEFUN([AC_LIBTOOL_F77], [])\ndnl AC_DEFUN([AC_LIBTOOL_FC], [])\ndnl AC_DEFUN([AC_LIBTOOL_GCJ], [])\ndnl AC_DEFUN([AC_LIBTOOL_RC], [])\n\n\n# _LT_TAG_COMPILER\n# ----------------\nm4_defun([_LT_TAG_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n_LT_DECL([LTCC], [CC], [1], [A C compiler])dnl\n_LT_DECL([LTCFLAGS], [CFLAGS], [1], [LTCC compiler flags])dnl\n_LT_TAGDECL([CC], [compiler], [1], [A language specific compiler])dnl\n_LT_TAGDECL([with_gcc], [GCC], [0], [Is the compiler the GNU compiler?])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_TAG_COMPILER\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nm4_defun([_LT_COMPILER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nm4_defun([_LT_LINKER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n])# _LT_LINKER_BOILERPLATE\n\n# _LT_REQUIRED_DARWIN_CHECKS\n# -------------------------\nm4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[\n  case $host_os in\n    rhapsody* | darwin*)\n    AC_CHECK_TOOL([DSYMUTIL], [dsymutil], [:])\n    AC_CHECK_TOOL([NMEDIT], [nmedit], [:])\n    AC_CHECK_TOOL([LIPO], [lipo], [:])\n    AC_CHECK_TOOL([OTOOL], [otool], [:])\n    AC_CHECK_TOOL([OTOOL64], [otool64], [:])\n    _LT_DECL([], [DSYMUTIL], [1],\n      [Tool to manipulate archived DWARF debug symbol files on Mac OS X])\n    _LT_DECL([], [NMEDIT], [1],\n      [Tool to change global to local symbols on Mac OS X])\n    _LT_DECL([], [LIPO], [1],\n      [Tool to manipulate fat objects and archives on Mac OS X])\n    _LT_DECL([], [OTOOL], [1],\n      [ldd/readelf like tool for Mach-O binaries on Mac OS X])\n    _LT_DECL([], [OTOOL64], [1],\n      [ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4])\n\n    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],\n      [lt_cv_apple_cc_single_mod=no\n      if test -z \"$LT_MULTI_MODULE\"; then\n\t# By default we will add the -single_module flag. You can override\n\t# by either setting the environment variable LT_MULTI_MODULE\n\t# non-empty at configure time, or by adding -multi_module to the\n\t# link flags.\n\trm -rf libconftest.dylib*\n\techo \"int foo(void){return 1;}\" > conftest.c\n\techo \"$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n-dynamiclib -Wl,-single_module conftest.c\" >&AS_MESSAGE_LOG_FD\n\t$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n\t  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err\n        _lt_result=$?\n\t# If there is a non-empty error log, and \"single_module\"\n\t# appears in it, assume the flag caused a linker warning\n        if test -s conftest.err && $GREP single_module conftest.err; then\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\t# Otherwise, if the output was created with a 0 exit code from\n\t# the compiler, it worked.\n\telif test -f libconftest.dylib && test 0 = \"$_lt_result\"; then\n\t  lt_cv_apple_cc_single_mod=yes\n\telse\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\tfi\n\trm -rf libconftest.dylib*\n\trm -f conftest.*\n      fi])\n\n    AC_CACHE_CHECK([for -exported_symbols_list linker flag],\n      [lt_cv_ld_exported_symbols_list],\n      [lt_cv_ld_exported_symbols_list=no\n      save_LDFLAGS=$LDFLAGS\n      echo \"_main\" > conftest.sym\n      LDFLAGS=\"$LDFLAGS -Wl,-exported_symbols_list,conftest.sym\"\n      AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n\t[lt_cv_ld_exported_symbols_list=yes],\n\t[lt_cv_ld_exported_symbols_list=no])\n\tLDFLAGS=$save_LDFLAGS\n    ])\n\n    AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],\n      [lt_cv_ld_force_load=no\n      cat > conftest.c << _LT_EOF\nint forced_loaded() { return 2;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS -c -o conftest.o conftest.c\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&AS_MESSAGE_LOG_FD\n      echo \"$AR $AR_FLAGS libconftest.a conftest.o\" >&AS_MESSAGE_LOG_FD\n      $AR $AR_FLAGS libconftest.a conftest.o 2>&AS_MESSAGE_LOG_FD\n      echo \"$RANLIB libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $RANLIB libconftest.a 2>&AS_MESSAGE_LOG_FD\n      cat > conftest.c << _LT_EOF\nint main() { return 0;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err\n      _lt_result=$?\n      if test -s conftest.err && $GREP force_load conftest.err; then\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      elif test -f conftest && test 0 = \"$_lt_result\" && $GREP forced_load conftest >/dev/null 2>&1; then\n\tlt_cv_ld_force_load=yes\n      else\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      fi\n        rm -f conftest.err libconftest.a conftest conftest.c\n        rm -rf conftest.dSYM\n    ])\n    case $host_os in\n    rhapsody* | darwin1.[[012]])\n      _lt_dar_allow_undefined='$wl-undefined ${wl}suppress' ;;\n    darwin1.*)\n      _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n    darwin*) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don't you love it?\n      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n\t10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n\t10.[[012]][[,.]]*)\n\t  _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n\t10.*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n      esac\n    ;;\n  esac\n    if test yes = \"$lt_cv_apple_cc_single_mod\"; then\n      _lt_dar_single_mod='$single_module'\n    fi\n    if test yes = \"$lt_cv_ld_exported_symbols_list\"; then\n      _lt_dar_export_syms=' $wl-exported_symbols_list,$output_objdir/$libname-symbols.expsym'\n    else\n      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/$libname-symbols.expsym $lib'\n    fi\n    if test : != \"$DSYMUTIL\" && test no = \"$lt_cv_ld_force_load\"; then\n      _lt_dsymutil='~$DSYMUTIL $lib || :'\n    else\n      _lt_dsymutil=\n    fi\n    ;;\n  esac\n])\n\n\n# _LT_DARWIN_LINKER_FEATURES([TAG])\n# ---------------------------------\n# Checks for linker and compiler features on darwin\nm4_defun([_LT_DARWIN_LINKER_FEATURES],\n[\n  m4_require([_LT_REQUIRED_DARWIN_CHECKS])\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_automatic, $1)=yes\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  if test yes = \"$lt_cv_ld_force_load\"; then\n    _LT_TAGVAR(whole_archive_flag_spec, $1)='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience $wl-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n    m4_case([$1], [F77], [_LT_TAGVAR(compiler_needs_object, $1)=yes],\n                  [FC],  [_LT_TAGVAR(compiler_needs_object, $1)=yes])\n  else\n    _LT_TAGVAR(whole_archive_flag_spec, $1)=''\n  fi\n  _LT_TAGVAR(link_all_deplibs, $1)=yes\n  _LT_TAGVAR(allow_undefined_flag, $1)=$_lt_dar_allow_undefined\n  case $cc_basename in\n     ifort*|nagfor*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test yes = \"$_lt_dar_can_shared\"; then\n    output_verbose_link_cmd=func_echo_all\n    _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dsymutil\"\n    _LT_TAGVAR(module_cmds, $1)=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dsymutil\"\n    _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dar_export_syms$_lt_dsymutil\"\n    _LT_TAGVAR(module_expsym_cmds, $1)=\"sed -e 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dar_export_syms$_lt_dsymutil\"\n    m4_if([$1], [CXX],\n[   if test yes != \"$lt_cv_apple_cc_single_mod\"; then\n      _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dsymutil\"\n      _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dar_export_syms$_lt_dsymutil\"\n    fi\n],[])\n  else\n  _LT_TAGVAR(ld_shlibs, $1)=no\n  fi\n])\n\n# _LT_SYS_MODULE_PATH_AIX([TAGNAME])\n# ----------------------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\n# Store the results from the different compilers for each TAGNAME.\n# Allow to override them for all tags through lt_cv_aix_libpath.\nm4_defun([_LT_SYS_MODULE_PATH_AIX],\n[m4_require([_LT_DECL_SED])dnl\nif test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  AC_CACHE_VAL([_LT_TAGVAR([lt_cv_aix_libpath_], [$1])],\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM],[\n  lt_aix_libpath_sed='[\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }]'\n  _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi],[])\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=/usr/lib:/lib\n  fi\n  ])\n  aix_libpath=$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\nfi\n])# _LT_SYS_MODULE_PATH_AIX\n\n\n# _LT_SHELL_INIT(ARG)\n# -------------------\nm4_define([_LT_SHELL_INIT],\n[m4_divert_text([M4SH-INIT], [$1\n])])# _LT_SHELL_INIT\n\n\n\n# _LT_PROG_ECHO_BACKSLASH\n# -----------------------\n# Find how we can fake an echo command that does not interpret backslash.\n# In particular, with Autoconf 2.60 or later we add some code to the start\n# of the generated configure script that will find a shell with a builtin\n# printf (that we can use as an echo command).\nm4_defun([_LT_PROG_ECHO_BACKSLASH],\n[ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n\nAC_MSG_CHECKING([how to print strings])\n# Test print first, because it will be a builtin if present.\nif test \"X`( print -r -- -n ) 2>/dev/null`\" = X-n && \\\n   test \"X`print -r -- $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='print -r --'\nelif test \"X`printf %s $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='printf %s\\n'\nelse\n  # Use this function as a fallback that always works.\n  func_fallback_echo ()\n  {\n    eval 'cat <<_LTECHO_EOF\n$[]1\n_LTECHO_EOF'\n  }\n  ECHO='func_fallback_echo'\nfi\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\ncase $ECHO in\n  printf*) AC_MSG_RESULT([printf]) ;;\n  print*) AC_MSG_RESULT([print -r]) ;;\n  *) AC_MSG_RESULT([cat]) ;;\nesac\n\nm4_ifdef([_AS_DETECT_SUGGESTED],\n[_AS_DETECT_SUGGESTED([\n  test -n \"${ZSH_VERSION+set}${BASH_VERSION+set}\" || (\n    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n    PATH=/empty FPATH=/empty; export PATH FPATH\n    test \"X`printf %s $ECHO`\" = \"X$ECHO\" \\\n      || test \"X`print -r -- $ECHO`\" = \"X$ECHO\" )])])\n\n_LT_DECL([], [SHELL], [1], [Shell to use when invoking shell scripts])\n_LT_DECL([], [ECHO], [1], [An echo program that protects backslashes])\n])# _LT_PROG_ECHO_BACKSLASH\n\n\n# _LT_WITH_SYSROOT\n# ----------------\nAC_DEFUN([_LT_WITH_SYSROOT],\n[AC_MSG_CHECKING([for sysroot])\nAC_ARG_WITH([sysroot],\n[AS_HELP_STRING([--with-sysroot@<:@=DIR@:>@],\n  [Search for dependent libraries within DIR (or the compiler's sysroot\n   if not specified).])],\n[], [with_sysroot=no])\n\ndnl lt_sysroot will always be passed unquoted.  We quote it here\ndnl in case the user passed a directory name.\nlt_sysroot=\ncase $with_sysroot in #(\n yes)\n   if test yes = \"$GCC\"; then\n     lt_sysroot=`$CC --print-sysroot 2>/dev/null`\n   fi\n   ;; #(\n /*)\n   lt_sysroot=`echo \"$with_sysroot\" | sed -e \"$sed_quote_subst\"`\n   ;; #(\n no|'')\n   ;; #(\n *)\n   AC_MSG_RESULT([$with_sysroot])\n   AC_MSG_ERROR([The sysroot must be an absolute path.])\n   ;;\nesac\n\n AC_MSG_RESULT([${lt_sysroot:-no}])\n_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl\n[dependent libraries, and where our libraries should be installed.])])\n\n# _LT_ENABLE_LOCK\n# ---------------\nm4_defun([_LT_ENABLE_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n  [AS_HELP_STRING([--disable-libtool-lock],\n    [avoid locking (might break parallel builds)])])\ntest no = \"$enable_libtool_lock\" || enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out what ABI is being produced by ac_compile, and set mode\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n      *ELF-32*)\n\tHPUX_IA64_MODE=32\n\t;;\n      *ELF-64*)\n\tHPUX_IA64_MODE=64\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    if test yes = \"$lt_cv_prog_gnu_ld\"; then\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -melf32bsmip\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -melf32bmipn32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -melf64bmip\"\n\t;;\n      esac\n    else\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -32\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -n32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -64\"\n\t  ;;\n      esac\n    fi\n  fi\n  rm -rf conftest*\n  ;;\n\nmips64*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    emul=elf\n    case `/usr/bin/file conftest.$ac_objext` in\n      *32-bit*)\n\temul=\"${emul}32\"\n\t;;\n      *64-bit*)\n\temul=\"${emul}64\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *MSB*)\n\temul=\"${emul}btsmip\"\n\t;;\n      *LSB*)\n\temul=\"${emul}ltsmip\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *N32*)\n\temul=\"${emul}n32\"\n\t;;\n    esac\n    LD=\"${LD-ld} -m $emul\"\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*| \\\ns390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.  Note that the listed cases only cover the\n  # situations where additional linker options are needed (such as when\n  # doing 32-bit compilation for a host where ld defaults to 64-bit, or\n  # vice versa); the common cases where no linker options are needed do\n  # not appear in the list.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n      *32-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    case `/usr/bin/file conftest.o` in\n\t      *x86-64*)\n\t\tLD=\"${LD-ld} -m elf32_x86_64\"\n\t\t;;\n\t      *)\n\t\tLD=\"${LD-ld} -m elf_i386\"\n\t\t;;\n\t    esac\n\t    ;;\n\t  powerpc64le-*linux*)\n\t    LD=\"${LD-ld} -m elf32lppclinux\"\n\t    ;;\n\t  powerpc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32ppclinux\"\n\t    ;;\n\t  s390x-*linux*)\n\t    LD=\"${LD-ld} -m elf_s390\"\n\t    ;;\n\t  sparc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32_sparc\"\n\t    ;;\n\tesac\n\t;;\n      *64-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_x86_64_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_x86_64\"\n\t    ;;\n\t  powerpcle-*linux*)\n\t    LD=\"${LD-ld} -m elf64lppc\"\n\t    ;;\n\t  powerpc-*linux*)\n\t    LD=\"${LD-ld} -m elf64ppc\"\n\t    ;;\n\t  s390*-*linux*|s390*-*tpf*)\n\t    LD=\"${LD-ld} -m elf64_s390\"\n\t    ;;\n\t  sparc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64_sparc\"\n\t    ;;\n\tesac\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=$CFLAGS\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test yes != \"$lt_cv_cc_needs_belf\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=$SAVE_CFLAGS\n  fi\n  ;;\n*-*solaris*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*)\n        case $host in\n        i?86-*-solaris*|x86_64-*-solaris*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        sparc*-*-solaris*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n        esac\n        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n          LD=${LD-ld}_sol2\n        fi\n        ;;\n      *)\n\tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n\t  LD=\"${LD-ld} -64\"\n\tfi\n\t;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\nesac\n\nneed_locks=$enable_libtool_lock\n])# _LT_ENABLE_LOCK\n\n\n# _LT_PROG_AR\n# -----------\nm4_defun([_LT_PROG_AR],\n[AC_CHECK_TOOLS(AR, [ar], false)\n: ${AR=ar}\n_LT_DECL([], [AR], [1], [The archiver])\n\n# Use ARFLAGS variable as AR's operation code to sync the variable naming with\n# Automake.  If both AR_FLAGS and ARFLAGS are specified, AR_FLAGS should have\n# higher priority because thats what people were doing historically (setting\n# ARFLAGS for automake and AR_FLAGS for libtool).  FIXME: Make the AR_FLAGS\n# variable obsoleted/removed.\n\ntest ${AR_FLAGS+y} || AR_FLAGS=${ARFLAGS-cr}\nlt_ar_flags=$AR_FLAGS\n_LT_DECL([], [lt_ar_flags], [0], [Flags to create an archive (by configure)])\n\n# Make AR_FLAGS overridable by 'make ARFLAGS='.  Don't try to run-time override\n# by AR_FLAGS because that was never working and AR_FLAGS is about to die.\n_LT_DECL([], [AR_FLAGS], [\\@S|@{ARFLAGS-\"\\@S|@lt_ar_flags\"}],\n         [Flags to create an archive])\n\nAC_CACHE_CHECK([for archiver @FILE support], [lt_cv_ar_at_file],\n  [lt_cv_ar_at_file=no\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM],\n     [echo conftest.$ac_objext > conftest.lst\n      lt_ar_try='$AR $AR_FLAGS libconftest.a @conftest.lst >&AS_MESSAGE_LOG_FD'\n      AC_TRY_EVAL([lt_ar_try])\n      if test 0 -eq \"$ac_status\"; then\n\t# Ensure the archiver fails upon bogus file names.\n\trm -f conftest.$ac_objext libconftest.a\n\tAC_TRY_EVAL([lt_ar_try])\n\tif test 0 -ne \"$ac_status\"; then\n          lt_cv_ar_at_file=@\n        fi\n      fi\n      rm -f conftest.* libconftest.a\n     ])\n  ])\n\nif test no = \"$lt_cv_ar_at_file\"; then\n  archiver_list_spec=\nelse\n  archiver_list_spec=$lt_cv_ar_at_file\nfi\n_LT_DECL([], [archiver_list_spec], [1],\n  [How to feed a file listing to the archiver])\n])# _LT_PROG_AR\n\n\n# _LT_CMD_OLD_ARCHIVE\n# -------------------\nm4_defun([_LT_CMD_OLD_ARCHIVE],\n[_LT_PROG_AR\n\nAC_CHECK_TOOL(STRIP, strip, :)\ntest -z \"$STRIP\" && STRIP=:\n_LT_DECL([], [STRIP], [1], [A symbol stripping program])\n\nAC_CHECK_TOOL(RANLIB, ranlib, :)\ntest -z \"$RANLIB\" && RANLIB=:\n_LT_DECL([], [RANLIB], [1],\n    [Commands used to install an old-style archive])\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  bitrig* | openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$tool_oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$tool_oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$tool_oldlib\"\nfi\n\ncase $host_os in\n  darwin*)\n    lock_old_archive_extraction=yes ;;\n  *)\n    lock_old_archive_extraction=no ;;\nesac\n_LT_DECL([], [old_postinstall_cmds], [2])\n_LT_DECL([], [old_postuninstall_cmds], [2])\n_LT_TAGDECL([], [old_archive_cmds], [2],\n    [Commands used to build an old-style archive])\n_LT_DECL([], [lock_old_archive_extraction], [0],\n    [Whether to use a lock for old archive extraction])\n])# _LT_CMD_OLD_ARCHIVE\n\n\n# _LT_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([_LT_COMPILER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"  ## exclude from sc_useless_quotes_in_assignment\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $RM conftest*\n])\n\nif test yes = \"[$]$2\"; then\n    m4_if([$5], , :, [$5])\nelse\n    m4_if([$6], , :, [$6])\nfi\n])# _LT_COMPILER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_COMPILER_OPTION], [_LT_COMPILER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [])\n\n\n# _LT_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                  [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------\n# Check whether the given linker option works\nAC_DEFUN([_LT_LINKER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS $3\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=$save_LDFLAGS\n])\n\nif test yes = \"[$]$2\"; then\n    m4_if([$4], , :, [$4])\nelse\n    m4_if([$5], , :, [$5])\nfi\n])# _LT_LINKER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_LINKER_OPTION], [_LT_LINKER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [])\n\n\n# LT_CMD_MAX_LEN\n#---------------\nAC_DEFUN([LT_CMD_MAX_LEN],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=ABCD\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw* | cegcc*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  mint*)\n    # On MiNT this can take a long time and run out of memory.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  os2*)\n    # The test takes a long time on OS/2.\n    lt_cv_sys_max_cmd_len=8192\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[\t ]]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`\n    if test -n \"$lt_cv_sys_max_cmd_len\" && \\\n       test undefined != \"$lt_cv_sys_max_cmd_len\"; then\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    else\n      # Make teststring a little bigger before we do anything with it.\n      # a 1K string should be a reasonable start.\n      for i in 1 2 3 4 5 6 7 8; do\n        teststring=$teststring$teststring\n      done\n      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n      # If test is not a shell built-in, we'll probably end up computing a\n      # maximum length that is only half of the actual maximum length, but\n      # we can't tell.\n      while { test X`env echo \"$teststring$teststring\" 2>/dev/null` \\\n\t         = \"X$teststring$teststring\"; } >/dev/null 2>&1 &&\n\t      test 17 != \"$i\" # 1/2 MB should be enough\n      do\n        i=`expr $i + 1`\n        teststring=$teststring$teststring\n      done\n      # Only check the string length outside the loop.\n      lt_cv_sys_max_cmd_len=`expr \"X$teststring\" : \".*\" 2>&1`\n      teststring=\n      # Add a significant safety factor because C++ compilers can tack on\n      # massive amounts of additional arguments before passing them to the\n      # linker.  It appears as though 1/2 is a usable value.\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    fi\n    ;;\n  esac\n])\nif test -n \"$lt_cv_sys_max_cmd_len\"; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n_LT_DECL([], [max_cmd_len], [0],\n    [What is the maximum length of a command?])\n])# LT_CMD_MAX_LEN\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_SYS_MAX_CMD_LEN], [LT_CMD_MAX_LEN])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [])\n\n\n# _LT_HEADER_DLFCN\n# ----------------\nm4_defun([_LT_HEADER_DLFCN],\n[AC_CHECK_HEADERS([dlfcn.h], [], [], [AC_INCLUDES_DEFAULT])dnl\n])# _LT_HEADER_DLFCN\n\n\n# _LT_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                      ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ----------------------------------------------------------------\nm4_defun([_LT_TRY_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test yes = \"$cross_compiling\"; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n[#line $LINENO \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisibility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\n\nint fnord () { return 42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}]\n_LT_EOF\n  if AC_TRY_EVAL(ac_link) && test -s \"conftest$ac_exeext\" 2>/dev/null; then\n    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_dlunknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_TRY_DLOPEN_SELF\n\n\n# LT_SYS_DLOPEN_SELF\n# ------------------\nAC_DEFUN([LT_SYS_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test yes != \"$enable_dlopen\"; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=load_add_on\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32* | cegcc*)\n    lt_cv_dlopen=LoadLibrary\n    lt_cv_dlopen_libs=\n    ;;\n\n  cygwin*)\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    ;;\n\n  darwin*)\n    # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],[\n    lt_cv_dlopen=dyld\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n    ;;\n\n  tpf*)\n    # Don't try to run any link tests for TPF.  We know it's impossible\n    # because TPF is a cross-compiler, and we know how we open DSOs.\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=no\n    ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=shl_load],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=dlopen],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test no = \"$lt_cv_dlopen\"; then\n    enable_dlopen=no\n  else\n    enable_dlopen=yes\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=$CPPFLAGS\n    test yes = \"$ac_cv_header_dlfcn_h\" && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=$LDFLAGS\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=$LIBS\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test yes = \"$lt_cv_dlopen_self\"; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n\t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=$save_CPPFLAGS\n    LDFLAGS=$save_LDFLAGS\n    LIBS=$save_LIBS\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n_LT_DECL([dlopen_support], [enable_dlopen], [0],\n\t [Whether dlopen is supported])\n_LT_DECL([dlopen_self], [enable_dlopen_self], [0],\n\t [Whether dlopen of programs is supported])\n_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],\n\t [Whether dlopen of statically linked programs is supported])\n])# LT_SYS_DLOPEN_SELF\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [])\n\n\n# _LT_COMPILER_C_O([TAGNAME])\n# ---------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler.\n# This macro does not hard code the compiler like AC_PROG_CC_C_O.\nm4_defun([_LT_COMPILER_C_O],\n[m4_require([_LT_DECL_SED])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w . 2>&AS_MESSAGE_LOG_FD\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n])\n_LT_TAGDECL([compiler_c_o], [lt_cv_prog_compiler_c_o], [1],\n\t[Does compiler simultaneously support -c and -o options?])\n])# _LT_COMPILER_C_O\n\n\n# _LT_COMPILER_FILE_LOCKS([TAGNAME])\n# ----------------------------------\n# Check to see if we can do hard links to lock some files if needed\nm4_defun([_LT_COMPILER_FILE_LOCKS],\n[m4_require([_LT_ENABLE_LOCK])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_COMPILER_C_O([$1])\n\nhard_links=nottested\nif test no = \"$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" && test no != \"$need_locks\"; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test no = \"$hard_links\"; then\n    AC_MSG_WARN(['$CC' does not support '-c -o', so 'make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n_LT_DECL([], [need_locks], [1], [Must we lock files when doing compilation?])\n])# _LT_COMPILER_FILE_LOCKS\n\n\n# _LT_CHECK_OBJDIR\n# ----------------\nm4_defun([_LT_CHECK_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n_LT_DECL([], [objdir], [0],\n         [The name of the directory that contains temporary libtool files])dnl\nm4_pattern_allow([LT_OBJDIR])dnl\nAC_DEFINE_UNQUOTED([LT_OBJDIR], \"$lt_cv_objdir/\",\n  [Define to the sub-directory where libtool stores uninstalled libraries.])\n])# _LT_CHECK_OBJDIR\n\n\n# _LT_LINKER_HARDCODE_LIBPATH([TAGNAME])\n# --------------------------------------\n# Check hardcoding attributes.\nm4_defun([_LT_LINKER_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\" ||\n   test -n \"$_LT_TAGVAR(runpath_var, $1)\" ||\n   test yes = \"$_LT_TAGVAR(hardcode_automatic, $1)\"; then\n\n  # We can hardcode non-existent directories.\n  if test no != \"$_LT_TAGVAR(hardcode_direct, $1)\" &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test no != \"$_LT_TAGVAR(hardcode_shlibpath_var, $1)\" &&\n     test no != \"$_LT_TAGVAR(hardcode_minus_L, $1)\"; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, $1)])\n\nif test relink = \"$_LT_TAGVAR(hardcode_action, $1)\" ||\n   test yes = \"$_LT_TAGVAR(inherit_rpath, $1)\"; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test yes = \"$shlibpath_overrides_runpath\" ||\n     test no = \"$enable_shared\"; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n_LT_TAGDECL([], [hardcode_action], [0],\n    [How to hardcode a shared library path into an executable])\n])# _LT_LINKER_HARDCODE_LIBPATH\n\n\n# _LT_CMD_STRIPLIB\n# ----------------\nm4_defun([_LT_CMD_STRIPLIB],\n[m4_require([_LT_DECL_EGREP])\nstriplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -z \"$STRIP\"; then\n  AC_MSG_RESULT([no])\nelse\n  if $STRIP -V 2>&1 | $GREP \"GNU strip\" >/dev/null; then\n    old_striplib=\"$STRIP --strip-debug\"\n    striplib=\"$STRIP --strip-unneeded\"\n    AC_MSG_RESULT([yes])\n  else\n    case $host_os in\n    darwin*)\n      # FIXME - insert some real tests, host_os isn't really good enough\n      striplib=\"$STRIP -x\"\n      old_striplib=\"$STRIP -S\"\n      AC_MSG_RESULT([yes])\n      ;;\n    freebsd*)\n      if $STRIP -V 2>&1 | $GREP \"elftoolchain\" >/dev/null; then\n        old_striplib=\"$STRIP --strip-debug\"\n        striplib=\"$STRIP --strip-unneeded\"\n        AC_MSG_RESULT([yes])\n      else\n        AC_MSG_RESULT([no])\n      fi\n      ;;\n    *)\n      AC_MSG_RESULT([no])\n      ;;\n    esac\n  fi\nfi\n_LT_DECL([], [old_striplib], [1], [Commands to strip libraries])\n_LT_DECL([], [striplib], [1])\n])# _LT_CMD_STRIPLIB\n\n\n# _LT_PREPARE_MUNGE_PATH_LIST\n# ---------------------------\n# Make sure func_munge_path_list() is defined correctly.\nm4_defun([_LT_PREPARE_MUNGE_PATH_LIST],\n[[# func_munge_path_list VARIABLE PATH\n# -----------------------------------\n# VARIABLE is name of variable containing _space_ separated list of\n# directories to be munged by the contents of PATH, which is string\n# having a format:\n# \"DIR[:DIR]:\"\n#       string \"DIR[ DIR]\" will be prepended to VARIABLE\n# \":DIR[:DIR]\"\n#       string \"DIR[ DIR]\" will be appended to VARIABLE\n# \"DIRP[:DIRP]::[DIRA:]DIRA\"\n#       string \"DIRP[ DIRP]\" will be prepended to VARIABLE and string\n#       \"DIRA[ DIRA]\" will be appended to VARIABLE\n# \"DIR[:DIR]\"\n#       VARIABLE will be replaced by \"DIR[ DIR]\"\nfunc_munge_path_list ()\n{\n    case x@S|@2 in\n    x)\n        ;;\n    *:)\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED 's/:/ /g'` \\@S|@@S|@1\\\"\n        ;;\n    x:*)\n        eval @S|@1=\\\"\\@S|@@S|@1 `$ECHO @S|@2 | $SED 's/:/ /g'`\\\"\n        ;;\n    *::*)\n        eval @S|@1=\\\"\\@S|@@S|@1\\ `$ECHO @S|@2 | $SED -e 's/.*:://' -e 's/:/ /g'`\\\"\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED -e 's/::.*//' -e 's/:/ /g'`\\ \\@S|@@S|@1\\\"\n        ;;\n    *)\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED 's/:/ /g'`\\\"\n        ;;\n    esac\n}\n]])# _LT_PREPARE_PATH_LIST\n\n\n# _LT_SYS_DYNAMIC_LINKER([TAG])\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nm4_defun([_LT_SYS_DYNAMIC_LINKER],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_OBJDUMP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PREPARE_MUNGE_PATH_LIST])dnl\nAC_MSG_CHECKING([dynamic linker characteristics])\nm4_if([$1],\n\t[], [\nif test yes = \"$GCC\"; then\n  case $host_os in\n    darwin*) lt_awk_arg='/^libraries:/,/LR/' ;;\n    *) lt_awk_arg='/^libraries:/' ;;\n  esac\n  case $host_os in\n    mingw* | cegcc*) lt_sed_strip_eq='s|=\\([[A-Za-z]]:\\)|\\1|g' ;;\n    *) lt_sed_strip_eq='s|=/|/|g' ;;\n  esac\n  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e \"s/^libraries://\" -e $lt_sed_strip_eq`\n  case $lt_search_path_spec in\n  *\\;*)\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED 's/;/ /g'`\n    ;;\n  *)\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED \"s/$PATH_SEPARATOR/ /g\"`\n    ;;\n  esac\n  # Ok, now we have the path, separated by spaces, we can step through it\n  # and add multilib dir if necessary...\n  lt_tmp_lt_search_path_spec=\n  lt_multi_os_dir=/`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`\n  # ...but if some path component already ends with the multilib dir we assume\n  # that all is fine and trust -print-search-dirs as is (GCC 4.2? or newer).\n  case \"$lt_multi_os_dir; $lt_search_path_spec \" in\n  \"/; \"* | \"/.; \"* | \"/./; \"* | *\"$lt_multi_os_dir \"* | *\"$lt_multi_os_dir/ \"*)\n    lt_multi_os_dir=\n    ;;\n  esac\n  for lt_sys_path in $lt_search_path_spec; do\n    if test -d \"$lt_sys_path$lt_multi_os_dir\"; then\n      lt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path$lt_multi_os_dir\"\n    elif test -n \"$lt_multi_os_dir\"; then\n      test -d \"$lt_sys_path\" && \\\n\tlt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path\"\n    fi\n  done\n  lt_search_path_spec=`$ECHO \"$lt_tmp_lt_search_path_spec\" | awk '\nBEGIN {RS = \" \"; FS = \"/|\\n\";} {\n  lt_foo = \"\";\n  lt_count = 0;\n  for (lt_i = NF; lt_i > 0; lt_i--) {\n    if ($lt_i != \"\" && $lt_i != \".\") {\n      if ($lt_i == \"..\") {\n        lt_count++;\n      } else {\n        if (lt_count == 0) {\n          lt_foo = \"/\" $lt_i lt_foo;\n        } else {\n          lt_count--;\n        }\n      }\n    }\n  }\n  if (lt_foo != \"\") { lt_freq[[lt_foo]]++; }\n  if (lt_freq[[lt_foo]] == 1) { print lt_foo; }\n}'`\n  # AWK program above erroneously prepends '/' to C:/dos/paths\n  # for these hosts.\n  case $host_os in\n    mingw* | cegcc*) lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" |\\\n      $SED 's|/\\([[A-Za-z]]:\\)|\\1|g'` ;;\n  esac\n  sys_lib_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $lt_NL2SP`\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=.so\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\nAC_ARG_VAR([LT_SYS_LIBRARY_PATH],\n[User-defined run-time library search path.])\n\ncase $host_os in\naix3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='$libname$release$shared_ext$major'\n  ;;\n\naix[[4-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test ia64 = \"$host_cpu\"; then\n    # AIX 5 supports IA64\n    library_names_spec='$libname$release$shared_ext$major $libname$release$shared_ext$versuffix $libname$shared_ext'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line '#! .'.  This would cause the generated library to\n    # depend on '.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | $CC -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # Using Import Files as archive members, it is possible to support\n    # filename-based versioning of shared library archives on AIX. While\n    # this would work for both with and without runtime linking, it will\n    # prevent static linking of such archives. So we do filename-based\n    # shared library versioning with .so extension only, which is used\n    # when both runtime linking and shared linking is enabled.\n    # Unfortunately, runtime linking may impact performance, so we do\n    # not want this to be the default eventually. Also, we use the\n    # versioned .so libs for executables only if there is the -brtl\n    # linker flag in LDFLAGS as well, or --with-aix-soname=svr4 only.\n    # To allow for filename-based versioning support, we need to create\n    # libNAME.so.V as an archive file, containing:\n    # *) an Import File, referring to the versioned filename of the\n    #    archive as well as the shared archive member, telling the\n    #    bitwidth (32 or 64) of that shared object, and providing the\n    #    list of exported symbols of that shared object, eventually\n    #    decorated with the 'weak' keyword\n    # *) the shared object with the F_LOADONLY flag set, to really avoid\n    #    it being seen by the linker.\n    # At run time we better use the real file rather than another symlink,\n    # but for link time we create the symlink libNAME.so -> libNAME.so.V\n\n    case $with_aix_soname,$aix_use_runtimelinking in\n    # AIX (on Power*) has no versioning support, so currently we cannot hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    aix,yes) # traditional libtool\n      dynamic_linker='AIX unversionable lib.so'\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      ;;\n    aix,no) # traditional AIX only\n      dynamic_linker='AIX lib.a[(]lib.so.V[)]'\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      ;;\n    svr4,*) # full svr4 only\n      dynamic_linker=\"AIX lib.so.V[(]$shared_archive_member_spec.o[)]\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,yes) # both, prefer svr4\n      dynamic_linker=\"AIX lib.so.V[(]$shared_archive_member_spec.o[)], lib.a[(]lib.so.V[)]\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # unpreferred sharedlib libNAME.a needs extra handling\n      postinstall_cmds='test -n \"$linkname\" || linkname=\"$realname\"~func_stripname \"\" \".so\" \"$linkname\"~$install_shared_prog \"$dir/$func_stripname_result.$libext\" \"$destdir/$func_stripname_result.$libext\"~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib \"$destdir/$func_stripname_result.$libext\"'\n      postuninstall_cmds='for n in $library_names $old_library; do :; done~func_stripname \"\" \".so\" \"$n\"~test \"$func_stripname_result\" = \"$n\" || func_append rmfiles \" $odir/$func_stripname_result.$libext\"'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,no) # both, prefer aix\n      dynamic_linker=\"AIX lib.a[(]lib.so.V[)], lib.so.V[(]$shared_archive_member_spec.o[)]\"\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      # unpreferred sharedlib libNAME.so.V and symlink libNAME.so need extra handling\n      postinstall_cmds='test -z \"$dlname\" || $install_shared_prog $dir/$dlname $destdir/$dlname~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib $destdir/$dlname~test -n \"$linkname\" || linkname=$realname~func_stripname \"\" \".a\" \"$linkname\"~(cd \"$destdir\" && $LN_S -f $dlname $func_stripname_result.so)'\n      postuninstall_cmds='test -z \"$dlname\" || func_append rmfiles \" $odir/$dlname\"~for n in $old_library $library_names; do :; done~func_stripname \"\" \".a\" \"$n\"~func_append rmfiles \" $odir/$func_stripname_result.so\"'\n      ;;\n    esac\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='$libname$shared_ext'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$cc_basename in\n  yes,*)\n    # gcc\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo $libname | sed -e 's/^lib/cyg/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\nm4_if([$1], [],[\n      sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/lib/w32api\"])\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo $libname | sed -e 's/^lib/pw/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n      ;;\n    esac\n    dynamic_linker='Win32 ld.exe'\n    ;;\n\n  *,cl* | *,icl*)\n    # Native MSVC or ICC\n    libname_spec='$name'\n    soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n    library_names_spec='$libname.dll.lib'\n\n    case $build_os in\n    mingw*)\n      sys_lib_search_path_spec=\n      lt_save_ifs=$IFS\n      IFS=';'\n      for lt_path in $LIB\n      do\n        IFS=$lt_save_ifs\n        # Let DOS variable expansion print the short 8.3 style file name.\n        lt_path=`cd \"$lt_path\" 2>/dev/null && cmd //C \"for %i in (\".\") do @echo %~si\"`\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec $lt_path\"\n      done\n      IFS=$lt_save_ifs\n      # Convert to MSYS style.\n      sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | sed -e 's|\\\\\\\\|/|g' -e 's| \\\\([[a-zA-Z]]\\\\):| /\\\\1|g' -e 's|^ ||'`\n      ;;\n    cygwin*)\n      # Convert to unix form, then to dos form, then back to unix form\n      # but this time dos style (no spaces!) so that the unix form looks\n      # like /cygdrive/c/PROGRA~1:/cygdr...\n      sys_lib_search_path_spec=`cygpath --path --unix \"$LIB\"`\n      sys_lib_search_path_spec=`cygpath --path --dos \"$sys_lib_search_path_spec\" 2>/dev/null`\n      sys_lib_search_path_spec=`cygpath --path --unix \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      ;;\n    *)\n      sys_lib_search_path_spec=$LIB\n      if $ECHO \"$sys_lib_search_path_spec\" | [$GREP ';[c-zC-Z]:/' >/dev/null]; then\n        # It is most probably a Windows format PATH.\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      # FIXME: find the short name or the path components, as spaces are\n      # common. (e.g. \"Program Files\" -> \"PROGRA~1\")\n      ;;\n    esac\n\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n    dynamic_linker='Win32 link.exe'\n    ;;\n\n  *)\n    # Assume MSVC and ICC wrapper\n    library_names_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext $libname.lib'\n    dynamic_linker='Win32 ld.exe'\n    ;;\n  esac\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$major$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\nm4_if([$1], [],[\n  sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/local/lib\"])\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[[23]].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      soname_spec='$libname$release$shared_ext$major'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \\\n  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\nhaiku*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    if test 32 = \"$HPUX_IA64_MODE\"; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux32\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux64\n    fi\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[[3-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test yes = \"$lt_cv_prog_gnu_ld\"; then\n\t\tversion_type=linux # correct to gnu/linux during the next big refactor\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$release$shared_ext $libname$shared_ext'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib$libsuff /lib$libsuff /usr/local/lib$libsuff\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib$libsuff /lib$libsuff\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\nlinux*android*)\n  version_type=none # Android doesn't support versioned libraries.\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext'\n  soname_spec='$libname$release$shared_ext'\n  finish_cmds=\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  dynamic_linker='Android linker'\n  # Don't embed -rpath directories since the linker doesn't support them.\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  AC_CACHE_VAL([lt_cv_shlibpath_overrides_runpath],\n    [lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$_LT_TAGVAR(lt_prog_compiler_wl, $1)\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\\\"\"\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n      [AS_IF([ ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null],\n\t [lt_cv_shlibpath_overrides_runpath=yes])])\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n    ])\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Ideally, we could use ldconfig to report *all* directores which are\n  # searched for libraries, however this is still not possible.  Aside from not\n  # being certain /sbin/ldconfig is available, command\n  # 'ldconfig -N -X -v | grep ^/' on 64bit Fedora does not report /usr/lib64,\n  # even though it is searched at run-time.  Try to do the best guess by\n  # appending ld.so.conf contents (and includes) to the search path.\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd* | bitrig*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=/usr/lib\n  need_lib_prefix=no\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    need_version=no\n  else\n    need_version=yes\n  fi\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nos2*)\n  libname_spec='$name'\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n  # OS/2 can only load a DLL with a base name of 8 characters or less.\n  soname_spec='`test -n \"$os2dllname\" && libname=\"$os2dllname\";\n    v=$($ECHO $release$versuffix | tr -d .-);\n    n=$($ECHO $libname | cut -b -$((8 - ${#v})) | tr . _);\n    $ECHO $n$v`$shared_ext'\n  library_names_spec='${libname}_dll.$libext'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=BEGINLIBPATH\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  postinstall_cmds='base_file=`basename \\$file`~\n    dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; $ECHO \\$dlname'\\''`~\n    dldir=$destdir/`dirname \\$dlpath`~\n    test -d \\$dldir || mkdir -p \\$dldir~\n    $install_prog $dir/$dlname \\$dldir/$dlname~\n    chmod a+x \\$dldir/$dlname~\n    if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n      eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n    fi'\n  postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; $ECHO \\$dlname'\\''`~\n    dlpath=$dir/\\$dldll~\n    $RM \\$dlpath'\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test yes = \"$with_gnu_ld\"; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec; then\n    version_type=linux # correct to gnu/linux during the next big refactor\n    library_names_spec='$libname$shared_ext.$versuffix $libname$shared_ext.$major $libname$shared_ext'\n    soname_spec='$libname$shared_ext.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=sco\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test yes = \"$with_gnu_ld\"; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest no = \"$dynamic_linker\" && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test yes = \"$GCC\"; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test set = \"${lt_cv_sys_lib_search_path_spec+set}\"; then\n  sys_lib_search_path_spec=$lt_cv_sys_lib_search_path_spec\nfi\n\nif test set = \"${lt_cv_sys_lib_dlsearch_path_spec+set}\"; then\n  sys_lib_dlsearch_path_spec=$lt_cv_sys_lib_dlsearch_path_spec\nfi\n\n# remember unaugmented sys_lib_dlsearch_path content for libtool script decls...\nconfigure_time_dlsearch_path=$sys_lib_dlsearch_path_spec\n\n# ... but it needs LT_SYS_LIBRARY_PATH munging for other configure-time code\nfunc_munge_path_list sys_lib_dlsearch_path_spec \"$LT_SYS_LIBRARY_PATH\"\n\n# to be used as default LT_SYS_LIBRARY_PATH value in generated libtool\nconfigure_time_lt_sys_library_path=$LT_SYS_LIBRARY_PATH\n\n_LT_DECL([], [variables_saved_for_relink], [1],\n    [Variables whose values should be saved in libtool wrapper scripts and\n    restored at link time])\n_LT_DECL([], [need_lib_prefix], [0],\n    [Do we need the \"lib\" prefix for modules?])\n_LT_DECL([], [need_version], [0], [Do we need a version for libraries?])\n_LT_DECL([], [version_type], [0], [Library versioning type])\n_LT_DECL([], [runpath_var], [0],  [Shared library runtime path variable])\n_LT_DECL([], [shlibpath_var], [0],[Shared library path variable])\n_LT_DECL([], [shlibpath_overrides_runpath], [0],\n    [Is shlibpath searched before the hard-coded library search path?])\n_LT_DECL([], [libname_spec], [1], [Format of library name prefix])\n_LT_DECL([], [library_names_spec], [1],\n    [[List of archive names.  First name is the real one, the rest are links.\n    The last name is the one that the linker finds with -lNAME]])\n_LT_DECL([], [soname_spec], [1],\n    [[The coded name of the library, if different from the real name]])\n_LT_DECL([], [install_override_mode], [1],\n    [Permission mode override for installation of shared libraries])\n_LT_DECL([], [postinstall_cmds], [2],\n    [Command to use after installation of a shared archive])\n_LT_DECL([], [postuninstall_cmds], [2],\n    [Command to use after uninstallation of a shared archive])\n_LT_DECL([], [finish_cmds], [2],\n    [Commands used to finish a libtool library installation in a directory])\n_LT_DECL([], [finish_eval], [1],\n    [[As \"finish_cmds\", except a single script fragment to be evaled but\n    not shown]])\n_LT_DECL([], [hardcode_into_libs], [0],\n    [Whether we should hardcode library paths into libraries])\n_LT_DECL([], [sys_lib_search_path_spec], [2],\n    [Compile-time system search path for libraries])\n_LT_DECL([sys_lib_dlsearch_path_spec], [configure_time_dlsearch_path], [2],\n    [Detected run-time system search path for libraries])\n_LT_DECL([], [configure_time_lt_sys_library_path], [2],\n    [Explicit LT_SYS_LIBRARY_PATH set during ./configure time])\n])# _LT_SYS_DYNAMIC_LINKER\n\n\n# _LT_PATH_TOOL_PREFIX(TOOL)\n# --------------------------\n# find a file program that can recognize shared library\nAC_DEFUN([_LT_PATH_TOOL_PREFIX],\n[m4_require([_LT_DECL_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=$MAGIC_CMD\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"m4_if([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$1\"; then\n      lt_cv_path_MAGIC_CMD=$ac_dir/\"$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=$lt_cv_path_MAGIC_CMD\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=$lt_save_ifs\n  MAGIC_CMD=$lt_save_MAGIC_CMD\n  ;;\nesac])\nMAGIC_CMD=$lt_cv_path_MAGIC_CMD\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n_LT_DECL([], [MAGIC_CMD], [0],\n\t [Used to examine libraries when file_magic_cmd begins with \"file\"])dnl\n])# _LT_PATH_TOOL_PREFIX\n\n# Old name:\nAU_ALIAS([AC_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PATH_TOOL_PREFIX], [])\n\n\n# _LT_PATH_MAGIC\n# --------------\n# find a file program that can recognize a shared library\nm4_defun([_LT_PATH_MAGIC],\n[_LT_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    _LT_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# _LT_PATH_MAGIC\n\n\n# LT_PATH_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([LT_PATH_LD],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PROG_ECHO_BACKSLASH])dnl\n\nAC_ARG_WITH([gnu-ld],\n    [AS_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test no = \"$withval\" || with_gnu_ld=yes],\n    [with_gnu_ld=no])dnl\n\nac_prog=ld\nif test yes = \"$GCC\"; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return, which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=$ac_prog\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test yes = \"$with_gnu_ld\"; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=$ac_dir/$ac_prog\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest no != \"$with_gnu_ld\" && break\n\t;;\n      *)\n\ttest yes != \"$with_gnu_ld\" && break\n\t;;\n      esac\n    fi\n  done\n  IFS=$lt_save_ifs\nelse\n  lt_cv_path_LD=$LD # Let the user override the test with a path.\nfi])\nLD=$lt_cv_path_LD\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n_LT_PATH_LD_GNU\nAC_SUBST([LD])\n\n_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])\n])# LT_PATH_LD\n\n# Old names:\nAU_ALIAS([AM_PROG_LD], [LT_PATH_LD])\nAU_ALIAS([AC_PROG_LD], [LT_PATH_LD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_LD], [])\ndnl AC_DEFUN([AC_PROG_LD], [])\n\n\n# _LT_PATH_LD_GNU\n#- --------------\nm4_defun([_LT_PATH_LD_GNU],\n[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# _LT_PATH_LD_GNU\n\n\n# _LT_CMD_RELOAD\n# --------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nm4_defun([_LT_CMD_RELOAD],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    if test yes != \"$GCC\"; then\n      reload_cmds=false\n    fi\n    ;;\n  darwin*)\n    if test yes = \"$GCC\"; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib $wl-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n_LT_TAGDECL([], [reload_flag], [1], [How to create reloadable object files])dnl\n_LT_TAGDECL([], [reload_cmds], [2])dnl\n])# _LT_CMD_RELOAD\n\n\n# _LT_PATH_DD\n# -----------\n# find a working dd\nm4_defun([_LT_PATH_DD],\n[AC_CACHE_CHECK([for a working dd], [ac_cv_path_lt_DD],\n[printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\n: ${lt_DD:=$DD}\nAC_PATH_PROGS_FEATURE_CHECK([lt_DD], [dd],\n[if \"$ac_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && ac_cv_path_lt_DD=\"$ac_path_lt_DD\" ac_path_lt_DD_found=:\nfi])\nrm -f conftest.i conftest2.i conftest.out])\n])# _LT_PATH_DD\n\n\n# _LT_CMD_TRUNCATE\n# ----------------\n# find command to truncate a binary pipe\nm4_defun([_LT_CMD_TRUNCATE],\n[m4_require([_LT_PATH_DD])\nAC_CACHE_CHECK([how to truncate binary pipes], [lt_cv_truncate_bin],\n[printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\nlt_cv_truncate_bin=\nif \"$ac_cv_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && lt_cv_truncate_bin=\"$ac_cv_path_lt_DD bs=4096 count=1\"\nfi\nrm -f conftest.i conftest2.i conftest.out\ntest -z \"$lt_cv_truncate_bin\" && lt_cv_truncate_bin=\"$SED -e 4q\"])\n_LT_DECL([lt_truncate_bin], [lt_cv_truncate_bin], [1],\n  [Command to truncate a binary pipe])\n])# _LT_CMD_TRUNCATE\n\n\n# _LT_CHECK_MAGIC_METHOD\n# ----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_MAGIC_METHOD],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nAC_CACHE_CHECK([how to recognize dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# 'unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# that responds to the $file_magic_cmd with a given extended regex.\n# If you have 'file' or equivalent on your system and you're not sure\n# whether 'pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix[[4-9]]*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump',\n  # unless we find 'file', for example because we are cross-compiling.\n  if ( file / ) >/dev/null 2>&1; then\n    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n    lt_cv_file_magic_cmd='func_win32_libid'\n  else\n    # Keep this pattern in sync with the one in func_win32_libid.\n    lt_cv_deplibs_check_method='file_magic file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)'\n    lt_cv_file_magic_cmd='$OBJDUMP -f'\n  fi\n  ;;\n\ncegcc*)\n  # use the weaker test based on 'objdump'. See mingw*.\n  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | dragonfly*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\nhaiku*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\\.[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]]\\.[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix[[3-9]]*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\n*nto* | *qnx*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nopenbsd* | bitrig*)\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nrdos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\ntpf*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nos2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\n\nfile_magic_glob=\nwant_nocaseglob=no\nif test \"$build\" = \"$host\"; then\n  case $host_os in\n  mingw* | pw32*)\n    if ( shopt | grep nocaseglob ) >/dev/null 2>&1; then\n      want_nocaseglob=yes\n    else\n      file_magic_glob=`echo aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ | $SED -e \"s/\\(..\\)/s\\/[[\\1]]\\/[[\\1]]\\/g;/g\"`\n    fi\n    ;;\n  esac\nfi\n\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n\n_LT_DECL([], [deplibs_check_method], [1],\n    [Method to check whether dependent libraries are shared objects])\n_LT_DECL([], [file_magic_cmd], [1],\n    [Command to use when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [file_magic_glob], [1],\n    [How to find potential files when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [want_nocaseglob], [1],\n    [Find potential files using nocaseglob when deplibs_check_method = \"file_magic\"])\n])# _LT_CHECK_MAGIC_METHOD\n\n\n# LT_PATH_NM\n# ----------\n# find the pathname to a BSD- or MS-compatible name lister\nAC_DEFUN([LT_PATH_NM],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=$NM\nelse\n  lt_nm_to_check=${ac_tool_prefix}nm\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then\n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=$lt_save_ifs\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=$ac_dir/$lt_tmp_nm\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\"; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the 'sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\t# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty\n\tcase $build_os in\n\tmingw*) lt_bad_file=conftest.nm/nofile ;;\n\t*) lt_bad_file=/dev/null ;;\n\tesac\n\tcase `\"$tmp_nm\" -B $lt_bad_file 2>&1 | sed '1q'` in\n\t*$lt_bad_file* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break 2\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break 2\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=$lt_save_ifs\n  done\n  : ${lt_cv_path_NM=no}\nfi])\nif test no != \"$lt_cv_path_NM\"; then\n  NM=$lt_cv_path_NM\nelse\n  # Didn't find any BSD compatible name lister, look for dumpbin.\n  if test -n \"$DUMPBIN\"; then :\n    # Let the user override the test.\n  else\n    AC_CHECK_TOOLS(DUMPBIN, [dumpbin \"link -dump\"], :)\n    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | sed '1q'` in\n    *COFF*)\n      DUMPBIN=\"$DUMPBIN -symbols -headers\"\n      ;;\n    *)\n      DUMPBIN=:\n      ;;\n    esac\n  fi\n  AC_SUBST([DUMPBIN])\n  if test : != \"$DUMPBIN\"; then\n    NM=$DUMPBIN\n  fi\nfi\ntest -z \"$NM\" && NM=nm\nAC_SUBST([NM])\n_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl\n\nAC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],\n  [lt_cv_nm_interface=\"BSD nm\"\n  echo \"int some_variable = 0;\" > conftest.$ac_ext\n  (eval echo \"\\\"\\$as_me:$LINENO: $ac_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$ac_compile\" 2>conftest.err)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: output\\\"\" >&AS_MESSAGE_LOG_FD)\n  cat conftest.out >&AS_MESSAGE_LOG_FD\n  if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n    lt_cv_nm_interface=\"MS dumpbin\"\n  fi\n  rm -f conftest*])\n])# LT_PATH_NM\n\n# Old names:\nAU_ALIAS([AM_PROG_NM], [LT_PATH_NM])\nAU_ALIAS([AC_PROG_NM], [LT_PATH_NM])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_NM], [])\ndnl AC_DEFUN([AC_PROG_NM], [])\n\n# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n# --------------------------------\n# how to determine the name of the shared library\n# associated with a specific link library.\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_SHAREDLIB_FROM_LINKLIB],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nm4_require([_LT_DECL_DLLTOOL])\nAC_CACHE_CHECK([how to associate runtime and link libraries],\nlt_cv_sharedlib_from_linklib_cmd,\n[lt_cv_sharedlib_from_linklib_cmd='unknown'\n\ncase $host_os in\ncygwin* | mingw* | pw32* | cegcc*)\n  # two different shell functions defined in ltmain.sh;\n  # decide which one to use based on capabilities of $DLLTOOL\n  case `$DLLTOOL --help 2>&1` in\n  *--identify-strict*)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib\n    ;;\n  *)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback\n    ;;\n  esac\n  ;;\n*)\n  # fallback: assume linklib IS sharedlib\n  lt_cv_sharedlib_from_linklib_cmd=$ECHO\n  ;;\nesac\n])\nsharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd\ntest -z \"$sharedlib_from_linklib_cmd\" && sharedlib_from_linklib_cmd=$ECHO\n\n_LT_DECL([], [sharedlib_from_linklib_cmd], [1],\n    [Command to associate shared and link libraries])\n])# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n\n\n# _LT_PATH_MANIFEST_TOOL\n# ----------------------\n# locate the manifest tool\nm4_defun([_LT_PATH_MANIFEST_TOOL],\n[AC_CHECK_TOOL(MANIFEST_TOOL, mt, :)\ntest -z \"$MANIFEST_TOOL\" && MANIFEST_TOOL=mt\nAC_CACHE_CHECK([if $MANIFEST_TOOL is a manifest tool], [lt_cv_path_mainfest_tool],\n  [lt_cv_path_mainfest_tool=no\n  echo \"$as_me:$LINENO: $MANIFEST_TOOL '-?'\" >&AS_MESSAGE_LOG_FD\n  $MANIFEST_TOOL '-?' 2>conftest.err > conftest.out\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  if $GREP 'Manifest Tool' conftest.out > /dev/null; then\n    lt_cv_path_mainfest_tool=yes\n  fi\n  rm -f conftest*])\nif test yes != \"$lt_cv_path_mainfest_tool\"; then\n  MANIFEST_TOOL=:\nfi\n_LT_DECL([], [MANIFEST_TOOL], [1], [Manifest tool])dnl\n])# _LT_PATH_MANIFEST_TOOL\n\n\n# _LT_DLL_DEF_P([FILE])\n# ---------------------\n# True iff FILE is a Windows DLL '.def' file.\n# Keep in sync with func_dll_def_p in the libtool script\nAC_DEFUN([_LT_DLL_DEF_P],\n[dnl\n  test DEF = \"`$SED -n dnl\n    -e '\\''s/^[[\t ]]*//'\\'' dnl Strip leading whitespace\n    -e '\\''/^\\(;.*\\)*$/d'\\'' dnl      Delete empty lines and comments\n    -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([[\t ]].*\\)*$/DEF/p'\\'' dnl\n    -e q dnl                          Only consider the first \"real\" line\n    $1`\" dnl\n])# _LT_DLL_DEF_P\n\n\n# LT_LIB_M\n# --------\n# check for math library\nAC_DEFUN([LT_LIB_M],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=-lmw)\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=-lm)\n  ;;\nesac\nAC_SUBST([LIBM])\n])# LT_LIB_M\n\n# Old name:\nAU_ALIAS([AC_CHECK_LIBM], [LT_LIB_M])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_CHECK_LIBM], [])\n\n\n# _LT_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------\nm4_defun([_LT_COMPILER_NO_RTTI],\n[m4_require([_LT_TAG_COMPILER])dnl\n\n_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test yes = \"$GCC\"; then\n  case $cc_basename in\n  nvcc*)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -Xcompiler -fno-builtin' ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin' ;;\n  esac\n\n  _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n_LT_TAGDECL([no_builtin_flag], [lt_prog_compiler_no_builtin_flag], [1],\n\t[Compiler flag to turn off builtin functions])\n])# _LT_COMPILER_NO_RTTI\n\n\n# _LT_CMD_GLOBAL_SYMBOLS\n# ----------------------\nm4_defun([_LT_CMD_GLOBAL_SYMBOLS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_TAG_COMPILER])dnl\n\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32* | cegcc*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*)\n  if test ia64 = \"$host_cpu\"; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris*)\n  symcode='[[BDRT]]'\n  ;;\nsco3.2v5*)\n  symcode='[[DT]]'\n  ;;\nsysv4.2uw2*)\n  symcode='[[DT]]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[[ABDT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  # Gets list of data symbols to import.\n  lt_cv_sys_global_symbol_to_import=\"sed -n -e 's/^I .* \\(.*\\)$/\\1/p'\"\n  # Adjust the below global symbol transforms to fixup imported variables.\n  lt_cdecl_hook=\" -e 's/^I .* \\(.*\\)$/extern __declspec(dllimport) char \\1;/p'\"\n  lt_c_name_hook=\" -e 's/^I .* \\(.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\"\n  lt_c_name_lib_hook=\"\\\n  -e 's/^I .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\\\n  -e 's/^I .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) 0},/p'\"\nelse\n  # Disable hooks by default.\n  lt_cv_sys_global_symbol_to_import=\n  lt_cdecl_hook=\n  lt_c_name_hook=\n  lt_c_name_lib_hook=\nfi\n\n# Transform an extracted symbol line into a proper C declaration.\n# Some systems (esp. on ia64) link data and code symbols differently,\n# so use this general approach.\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n\"\\\n$lt_cdecl_hook\\\n\" -e 's/^T .* \\(.*\\)$/extern int \\1();/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n\"\\\n$lt_c_name_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\n\n# Transform an extracted symbol line into symbol name with lib prefix and\n# symbol address.\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix=\"sed -n\"\\\n$lt_c_name_lib_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) \\&\\1},/p'\"\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`$ECHO 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# Try without a prefix underscore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  if test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n    # Fake it for dumpbin and say T for any non-static function,\n    # D for any global variable and I for any imported variable.\n    # Also find C++ and __fastcall symbols from MSVC++ or ICC,\n    # which start with @ or ?.\n    lt_cv_sys_global_symbol_pipe=\"$AWK ['\"\\\n\"     {last_section=section; section=\\$ 3};\"\\\n\"     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};\"\\\n\"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};\"\\\n\"     /^ *Symbol name *: /{split(\\$ 0,sn,\\\":\\\"); si=substr(sn[2],2)};\"\\\n\"     /^ *Type *: code/{print \\\"T\\\",si,substr(si,length(prfx))};\"\\\n\"     /^ *Type *: data/{print \\\"I\\\",si,substr(si,length(prfx))};\"\\\n\"     \\$ 0!~/External *\\|/{next};\"\\\n\"     / 0+ UNDEF /{next}; / UNDEF \\([^|]\\)*()/{next};\"\\\n\"     {if(hide[section]) next};\"\\\n\"     {f=\\\"D\\\"}; \\$ 0~/\\(\\).*\\|/{f=\\\"T\\\"};\"\\\n\"     {split(\\$ 0,a,/\\||\\r/); split(a[2],s)};\"\\\n\"     s[1]~/^[@?]/{print f,s[1],s[1]; next};\"\\\n\"     s[1]~prfx {split(s[1],t,\\\"@\\\"); print f,t[1],substr(t[1],length(prfx))}\"\\\n\"     ' prfx=^$ac_symprfx]\"\n  else\n    lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[\t ]]\\($symcode$symcode*\\)[[\t ]][[\t ]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n  fi\n  lt_cv_sys_global_symbol_pipe=\"$lt_cv_sys_global_symbol_pipe | sed '/ __gnu_lto/d'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<_LT_EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(void);\nvoid nm_test_func(void){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\n_LT_EOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| \"$lt_cv_sys_global_symbol_pipe\" \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if $GREP ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif $GREP ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<_LT_EOF > conftest.$ac_ext\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT@&t@_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT@&t@_DLSYM_CONST\n#else\n# define LT@&t@_DLSYM_CONST const\n#endif\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n_LT_EOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | $GREP -v main >> conftest.$ac_ext'\n\n\t  cat <<_LT_EOF >> conftest.$ac_ext\n\n/* The mapping between symbol names and symbols.  */\nLT@&t@_DLSYM_CONST struct {\n  const char *name;\n  void       *address;\n}\nlt__PROGRAM__LTX_preloaded_symbols[[]] =\n{\n  { \"@PROGRAM@\", (void *) 0 },\n_LT_EOF\n\t  $SED \"s/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/\" < \"$nlist\" | $GREP -v main >> conftest.$ac_ext\n\t  cat <<\\_LT_EOF >> conftest.$ac_ext\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt__PROGRAM__LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n_LT_EOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_globsym_save_LIBS=$LIBS\n\t  lt_globsym_save_CFLAGS=$CFLAGS\n\t  LIBS=conftstm.$ac_objext\n\t  CFLAGS=\"$CFLAGS$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest$ac_exeext; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=$lt_globsym_save_LIBS\n\t  CFLAGS=$lt_globsym_save_CFLAGS\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -rf conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test yes = \"$pipe_works\"; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n\n# Response file support.\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  nm_file_list_spec='@'\nelif $NM --help 2>/dev/null | grep '[[@]]FILE' >/dev/null; then\n  nm_file_list_spec='@'\nfi\n\n_LT_DECL([global_symbol_pipe], [lt_cv_sys_global_symbol_pipe], [1],\n    [Take the output of nm and produce a listing of raw symbols and C names])\n_LT_DECL([global_symbol_to_cdecl], [lt_cv_sys_global_symbol_to_cdecl], [1],\n    [Transform the output of nm in a proper C declaration])\n_LT_DECL([global_symbol_to_import], [lt_cv_sys_global_symbol_to_import], [1],\n    [Transform the output of nm into a list of symbols to manually relocate])\n_LT_DECL([global_symbol_to_c_name_address],\n    [lt_cv_sys_global_symbol_to_c_name_address], [1],\n    [Transform the output of nm in a C name address pair])\n_LT_DECL([global_symbol_to_c_name_address_lib_prefix],\n    [lt_cv_sys_global_symbol_to_c_name_address_lib_prefix], [1],\n    [Transform the output of nm in a C name address pair when lib prefix is needed])\n_LT_DECL([nm_interface], [lt_cv_nm_interface], [1],\n    [The name lister interface])\n_LT_DECL([], [nm_file_list_spec], [1],\n    [Specify filename containing input files for $NM])\n]) # _LT_CMD_GLOBAL_SYMBOLS\n\n\n# _LT_COMPILER_PIC([TAGNAME])\n# ---------------------------\nm4_defun([_LT_COMPILER_PIC],\n[m4_require([_LT_TAG_COMPILER])dnl\n_LT_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_TAGVAR(lt_prog_compiler_static, $1)=\n\nm4_if([$1], [CXX], [\n  # C++ specific cases for pic, static, wl, etc.\n  if test yes = \"$GXX\"; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | cygwin* | os2* | pw32* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *qnx* | *nto*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix[[4-9]]*)\n\t# All AIX code is PIC.\n\tif test ia64 = \"$host_cpu\"; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n      mingw* | cygwin* | os2* | pw32* | cegcc*)\n\t# This hack is so that the source file can tell whether it is being\n\t# built for inclusion in a dll (and should export symbols for example).\n\tm4_if([$1], [GCJ], [],\n\t  [_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n\t;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n\t    if test ia64 != \"$host_cpu\"; then\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  ecpc* )\n\t    # old Intel C++ for x86_64, which still supported -KPIC.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  icpc* )\n\t    # Intel C++, used to be incompatible with GCC.\n\t    # ICC 10 doesn't accept -KPIC any more.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC* | pgcpp*)\n\t    # Portland Group C++ compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  xlc* | xlC* | bgxl[[cC]]* | mpixl[[cC]]*)\n\t    # IBM XL 8.0, 9.0 on PPC and BlueGene\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd*)\n\t;;\n      *qnx* | *nto*)\n        # QNX uses GNU C++, but need to define -shared option too, otherwise\n        # it will coredump.\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n        ;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test yes = \"$GCC\"; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n\n    case $cc_basename in\n    nvcc*) # Cuda Compiler Driver 2.2\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Xlinker '\n      if test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"-Xcompiler $_LT_TAGVAR(lt_prog_compiler_pic, $1)\"\n      fi\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      case $cc_basename in\n      nagfor*)\n        # NAG Fortran compiler\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      esac\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n      case $cc_basename in\n      # old Intel for x86_64, which still supported -KPIC.\n      ecc*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # Lahey Fortran 8.1.\n      lf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='--shared'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='--static'\n\t;;\n      nagfor*)\n\t# NAG Fortran compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t;;\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t;;\n      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      ccc*)\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      xl* | bgxl* | bgf* | mpixl*)\n\t# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t;;\n      *)\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ Ceres\\ Fortran* | *Sun*Fortran*\\ [[1-7]].* | *Sun*Fortran*\\ 8.[[0-3]]*)\n\t  # Sun Fortran 8.3 passes all unrecognized flags to the linker\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)=''\n\t  ;;\n\t*Sun\\ F* | *Sun*Fortran*)\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t  ;;\n\t*Sun\\ C*)\n\t  # Sun C 5.9\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  ;;\n        *Intel*\\ [[CF]]*Compiler*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t  ;;\n\t*Portland\\ Group*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  ;;\n\tesac\n\t;;\n      esac\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    rdos*)\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95* | sunf77* | sunf90* | sunf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    unicos*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\ncase $host_os in\n  # For platforms that do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\n\nAC_CACHE_CHECK([for $compiler option to produce PIC],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_prog_compiler_pic, $1)])\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, $1) works],\n    [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, $1)],\n    [$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\n_LT_TAGDECL([pic_flag], [lt_prog_compiler_pic], [1],\n\t[Additional compiler flags for building library objects])\n\n_LT_TAGDECL([wl], [lt_prog_compiler_wl], [1],\n\t[How to pass a linker flag through the compiler])\n#\n# Check to make sure the static flag actually works.\n#\nwl=$_LT_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\\\"$_LT_TAGVAR(lt_prog_compiler_static, $1)\\\"\n_LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],\n  _LT_TAGVAR(lt_cv_prog_compiler_static_works, $1),\n  $lt_tmp_static_flag,\n  [],\n  [_LT_TAGVAR(lt_prog_compiler_static, $1)=])\n_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],\n\t[Compiler flag to prevent dynamic linking])\n])# _LT_COMPILER_PIC\n\n\n# _LT_LINKER_SHLIBS([TAGNAME])\n# ----------------------------\n# See if the linker supports building shared libraries.\nm4_defun([_LT_LINKER_SHLIBS],\n[AC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nm4_if([$1], [CXX], [\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  case $host_os in\n  aix[[4-9]]*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to GNU nm, but means don't demangle to AIX nm.\n    # Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n    # weak defined symbols like other global defined symbols, whereas\n    # GNU nm marks them as \"W\".\n    # While the 'weak' keyword is ignored in the Export File, we need\n    # it in the Import File for the 'aix-soname' feature, so we have\n    # to replace the \"-B\" option with \"-P\" for AIX nm.\n    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\\''s/B\\([[^B]]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && ([substr](\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_TAGVAR(export_symbols_cmds, $1)=$ltdll_cmds\n    ;;\n  cygwin* | mingw* | cegcc*)\n    case $cc_basename in\n    cl* | icl*)\n      _LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n      ;;\n    *)\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n      ;;\n    esac\n    ;;\n  *)\n    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n    ;;\n  esac\n], [\n  runpath_var=\n  _LT_TAGVAR(allow_undefined_flag, $1)=\n  _LT_TAGVAR(always_export_symbols, $1)=no\n  _LT_TAGVAR(archive_cmds, $1)=\n  _LT_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_TAGVAR(compiler_needs_object, $1)=no\n  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(hardcode_automatic, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_TAGVAR(inherit_rpath, $1)=no\n  _LT_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_TAGVAR(module_cmds, $1)=\n  _LT_TAGVAR(module_expsym_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_new_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ' (' and ')$', so one must not match beginning or\n  # end of line.  Example: 'a|bc|.*d.*' will exclude the symbols 'a' and 'bc',\n  # as well as any symbol that contains 'd'.\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  # Exclude shared library initialization/finalization symbols.\ndnl Note also adjust exclude_expsyms for C++ above.\n  extract_expsyms_cmds=\n\n  case $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ and ICC port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++ or Intel C++ Compiler.\n    if test yes != \"$GCC\"; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++ or ICC)\n    with_gnu_ld=yes\n    ;;\n  openbsd* | bitrig*)\n    with_gnu_ld=no\n    ;;\n  esac\n\n  _LT_TAGVAR(ld_shlibs, $1)=yes\n\n  # On some targets, GNU ld is compatible enough with the native linker\n  # that we're better off using the native interface for both.\n  lt_use_gnu_ld_interface=no\n  if test yes = \"$with_gnu_ld\"; then\n    case $host_os in\n      aix*)\n\t# The AIX port of GNU ld has always aspired to compatibility\n\t# with the native linker.  However, as the warning in the GNU ld\n\t# block says, versions before 2.19.5* couldn't really create working\n\t# shared libraries, regardless of the interface used.\n\tcase `$LD -v 2>&1` in\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.19.5*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.[[2-9]]*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ [[3-9]]*) ;;\n\t  *)\n\t    lt_use_gnu_ld_interface=yes\n\t    ;;\n\tesac\n\t;;\n      *)\n\tlt_use_gnu_ld_interface=yes\n\t;;\n    esac\n  fi\n\n  if test yes = \"$lt_use_gnu_ld_interface\"; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='$wl'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n    else\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v | $SED -e 's/([^)]\\+)\\s\\+//' 2>&1` in\n      *GNU\\ gold*) supports_anon_versioning=yes ;;\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix[[3-9]]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test ia64 != \"$host_cpu\"; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.19, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to install binutils\n*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.\n*** You will then need to restart the configuration process.\n\n_LT_EOF\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=no\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n\n      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file, use it as\n\t# is; otherwise, prepend EXPORTS...\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n          cp $export_symbols $output_objdir/$soname.def;\n        else\n          echo EXPORTS > $output_objdir/$soname.def;\n          cat $export_symbols >> $output_objdir/$soname.def;\n        fi~\n        $CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    haiku*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      shrext_cmds=.dll\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_TAGVAR(file_list_spec, $1)='@'\n      ;;\n\n    interix[[3-9]]*)\n      _LT_TAGVAR(hardcode_direct, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)\n      tmp_diet=no\n      if test linux-dietlibc = \"$host_os\"; then\n\tcase $cc_basename in\n\t  diet\\ *) tmp_diet=yes;;\t# linux-dietlibc with static linking (!diet-dyn)\n\tesac\n      fi\n      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n\t && test no = \"$tmp_diet\"\n      then\n\ttmp_addflag=' $pic_flag'\n\ttmp_sharedflag='-shared'\n\tcase $cc_basename,$host_cpu in\n        pgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95* | pgfortran*)\n\t\t\t\t\t# Portland Group f77 and f90 compilers\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tlf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n\t  tmp_sharedflag='--shared' ;;\n        nagfor*)                        # NAGFOR 5.3\n          tmp_sharedflag='-Wl,-shared' ;;\n\txl[[cC]]* | bgxl[[cC]]* | mpixl[[cC]]*) # IBM XL C 8.0 on PPC (deal with xlf below)\n\t  tmp_sharedflag='-qmkshrobj'\n\t  tmp_addflag= ;;\n\tnvcc*)\t# Cuda Compiler Driver 2.2\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  ;;\n\tesac\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ C*)\t\t\t# Sun C 5.9\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  tmp_sharedflag='-G' ;;\n\t*Sun\\ F*)\t\t\t# Sun Fortran 8.3\n\t  tmp_sharedflag='-G' ;;\n\tesac\n\t_LT_TAGVAR(archive_cmds, $1)='$CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\n        if test yes = \"$supports_anon_versioning\"; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n            cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n            echo \"local: *; };\" >> $output_objdir/$libname.ver~\n            $CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n        fi\n\n\tcase $cc_basename in\n\ttcc*)\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='-rdynamic'\n\t  ;;\n\txlf* | bgf* | bgxlf* | mpixlf*)\n\t  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='--whole-archive$convenience --no-whole-archive'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'\n\t  if test yes = \"$supports_anon_versioning\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n              cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n              echo \"local: *; };\" >> $output_objdir/$libname.ver~\n              $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'\n\t  fi\n\t  ;;\n\tesac\n      else\n        _LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | $GREP 'BFD 2\\.8' > /dev/null; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.1[[0-5]].*)\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 cannot\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  # For security reasons, it is highly recommended that you always\n\t  # use absolute paths for naming shared libraries, and exclude the\n\t  # DT_RUNPATH tag from executables and libraries.  But doing so\n\t  # requires that you compile everything twice, which is a pain.\n\t  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test no = \"$_LT_TAGVAR(ld_shlibs, $1)\"; then\n      runpath_var=\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      if test yes = \"$GCC\" && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix[[4-9]]*)\n      if test ia64 = \"$host_cpu\"; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to GNU nm, but means don't demangle to AIX nm.\n\t# Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n\t# weak defined symbols like other global defined symbols, whereas\n\t# GNU nm marks them as \"W\".\n\t# While the 'weak' keyword is ignored in the Export File, we need\n\t# it in the Import File for the 'aix-soname' feature, so we have\n\t# to replace the \"-B\" option with \"-P\" for AIX nm.\n\tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\\''s/B\\([[^B]]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && ([substr](\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# have runtime linking enabled, and use it for executables.\n\t# For shared libraries, we enable/disable runtime linking\n\t# depending on the kind of the shared library created -\n\t# when \"with_aix_soname,aix_use_runtimelinking\" is:\n\t# \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\t# \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n\t#            lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a(lib.so.V) shared, rtl:no\n\t# \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t  for ld_flag in $LDFLAGS; do\n\t  if (test x-brtl = \"x$ld_flag\" || test x-Wl,-brtl = \"x$ld_flag\"); then\n\t    aix_use_runtimelinking=yes\n\t    break\n\t  fi\n\t  done\n\t  if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t    # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t    # so we don't have lib.a shared libs to link our executables.\n\t    # We have to force runtime linking in this case.\n\t    aix_use_runtimelinking=yes\n\t    LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t  fi\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_TAGVAR(archive_cmds, $1)=''\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(file_list_spec, $1)='$wl-f,'\n      case $with_aix_soname,$aix_use_runtimelinking in\n      aix,*) ;; # traditional, no import file\n      svr4,* | *,yes) # use import file\n\t# The Import File defines what to hardcode.\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n\t;;\n      esac\n\n      if test yes = \"$GCC\"; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t   strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t  # We have reworked collect2\n\t  :\n\t  else\n\t  # We have old collect2\n\t  _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test yes = \"$aix_use_runtimelinking\"; then\n\t  shared_flag=\"$shared_flag \"'$wl-G'\n\tfi\n\t# Need to ensure runtime linking is disabled for the traditional\n\t# shared library, or the linker may eventually find shared libraries\n\t# /with/ Import File - we do not want to mix them.\n\tshared_flag_aix='-shared'\n\tshared_flag_svr4='-shared $wl-G'\n      else\n\t# not using gcc\n\tif test ia64 = \"$host_cpu\"; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag='$wl-G'\n\t  else\n\t    shared_flag='$wl-bM:SRE'\n\t  fi\n\t  shared_flag_aix='$wl-bM:SRE'\n\t  shared_flag_svr4='$wl-G'\n\tfi\n      fi\n\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      if test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n        # Determine the default libpath from the value encoded in an\n        # empty executable.\n        _LT_SYS_MODULE_PATH_AIX([$1])\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n      else\n\tif test ia64 = \"$host_cpu\"; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an\n\t # empty executable.\n\t _LT_SYS_MODULE_PATH_AIX([$1])\n\t _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'\n\t  if test yes = \"$with_gnu_ld\"; then\n\t    # We only use this code for GNU lds that support --whole-archive.\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t  else\n\t    # Exported symbols can be pulled into shared objects from archives\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t  fi\n\t  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t  # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t  compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([[, ]]\\\\)%-berok\\\\1%g\"`'\n\t  if test svr4 != \"$with_aix_soname\"; then\n\t    # This is similar to how AIX traditionally builds its shared libraries.\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t  fi\n\t  if test aix != \"$with_aix_soname\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t  else\n\t    # used by -dlpreopen to get the symbols\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t  fi\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$RM -r $output_objdir/$realname.d'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    bsdi[[45]]*)\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++ or Intel C++ Compiler.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      case $cc_basename in\n      cl* | icl*)\n\t# Native MSVC or ICC\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t_LT_TAGVAR(always_export_symbols, $1)=yes\n\t_LT_TAGVAR(file_list_spec, $1)='@'\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n            cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n            echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n          else\n            $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n          fi~\n          $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n          linknames='\n\t# The linker will not automatically build a static lib if we build a DLL.\n\t# _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t_LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n\t_LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1,DATA/'\\'' | $SED -e '\\''/^[[AITW]][[ ]]/s/.*[[ ]]//'\\'' | sort | uniq > $export_symbols'\n\t# Don't use ranlib\n\t_LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t_LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n          lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n          case $lt_outputfile in\n            *.exe|*.EXE) ;;\n            *)\n              lt_outputfile=$lt_outputfile.exe\n              lt_tool_outputfile=$lt_tool_outputfile.exe\n              ;;\n          esac~\n          if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n            $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n            $RM \"$lt_outputfile.manifest\";\n          fi'\n\t;;\n      *)\n\t# Assume MSVC and ICC wrapper\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all \"$deplibs\" | $SED '\\''s/ -lc$//'\\''` -link -dll~linknames='\n\t# The linker will automatically build a .lib file if we build a DLL.\n\t_LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t# FIXME: Should let the user specify the lib program.\n\t_LT_TAGVAR(old_archive_cmds, $1)='lib -OUT:$oldlib$oldobjs$old_deplibs'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      _LT_DARWIN_LINKER_FEATURES($1)\n      ;;\n\n    dgux*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2.*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | dragonfly*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n      ;;\n\n    hpux10*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\tm4_if($1, [], [\n\t  # Older versions of the 11.00 compiler do not understand -b yet\n\t  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)\n\t  _LT_LINKER_OPTION([if $CC understands -b],\n\t    _LT_TAGVAR(lt_cv_prog_compiler__b, $1), [-b],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],\n\t  [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'])\n\t  ;;\n\tesac\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t# Try to use the -exported_symbol ld option, if it does not\n\t# work, assume that -exports_file does not work either and\n\t# implicitly export all symbols.\n\t# This should be the same for all languages, so no per-tag cache variable.\n\tAC_CACHE_CHECK([whether the $host_os linker accepts -exported_symbol],\n\t  [lt_cv_irix_exported_symbol],\n\t  [save_LDFLAGS=$LDFLAGS\n\t   LDFLAGS=\"$LDFLAGS -shared $wl-exported_symbol ${wl}foo $wl-update_registry $wl/dev/null\"\n\t   AC_LINK_IFELSE(\n\t     [AC_LANG_SOURCE(\n\t        [AC_LANG_CASE([C], [[int foo (void) { return 0; }]],\n\t\t\t      [C++], [[int foo (void) { return 0; }]],\n\t\t\t      [Fortran 77], [[\n      subroutine foo\n      end]],\n\t\t\t      [Fortran], [[\n      subroutine foo\n      end]])])],\n\t      [lt_cv_irix_exported_symbol=yes],\n\t      [lt_cv_irix_exported_symbol=no])\n           LDFLAGS=$save_LDFLAGS])\n\tif test yes = \"$lt_cv_irix_exported_symbol\"; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations $wl-exports_file $wl$export_symbols -o $lib'\n\tfi\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -exports_file $export_symbols -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(inherit_rpath, $1)=yes\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    linux*)\n      case $cc_basename in\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n      esac\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *nto* | *qnx*)\n      ;;\n\n    openbsd* | bitrig*)\n      if test -f /usr/libexec/ld.so; then\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\tif test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags $wl-retain-symbols-file,$export_symbols'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\telse\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\tfi\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      shrext_cmds=.dll\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_TAGVAR(file_list_spec, $1)='@'\n      ;;\n\n    osf3*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $pic_flag $libobjs $deplibs $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; printf \"%s\\\\n\" \"-hidden\">> $lib.exp~\n          $CC -shared$allow_undefined_flag $wl-input $wl$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~$RM $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(no_undefined_flag, $1)=' -z defs'\n      if test yes = \"$GCC\"; then\n\twlarc='$wl'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl-z ${wl}text $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n          $CC -shared $pic_flag $wl-z ${wl}text $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n      else\n\tcase `$CC -V 2>&1` in\n\t*\"Compilers 5.0\"*)\n\t  wlarc=''\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $LD -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'\n\t  ;;\n\t*)\n\t  wlarc='$wl'\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $CC -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n\t  ;;\n\tesac\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n\t# The compiler driver will combine and reorder linker options,\n\t# but understands '-z linker_flag'.  GCC discards it without '$wl',\n\t# but is careful enough not to reorder.\n\t# Supported since Solaris 2.6 (maybe 2.5.1?)\n\tif test yes = \"$GCC\"; then\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\telse\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\tfi\n\t;;\n      esac\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test sequent = \"$host_vendor\"; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We CANNOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n\n    if test sni = \"$host_vendor\"; then\n      case $host in\n      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Blargedynsym'\n\t;;\n      esac\n    fi\n  fi\n])\nAC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\ntest no = \"$_LT_TAGVAR(ld_shlibs, $1)\" && can_build_shared=no\n\n_LT_TAGVAR(with_gnu_ld, $1)=$with_gnu_ld\n\n_LT_DECL([], [libext], [0], [Old archive suffix (normally \"a\")])dnl\n_LT_DECL([], [shrext_cmds], [1], [Shared library suffix (normally \".so\")])dnl\n_LT_DECL([], [extract_expsyms_cmds], [2],\n    [The commands to extract the exported symbol list from a shared archive])\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test yes,yes = \"$GCC,$enable_shared\"; then\n    case $_LT_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_CACHE_CHECK([whether -lc should be explicitly linked in],\n\t[lt_cv_]_LT_TAGVAR(archive_cmds_need_lc, $1),\n\t[$RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$_LT_TAGVAR(lt_prog_compiler_wl, $1)\n\t  pic_flag=$_LT_TAGVAR(lt_prog_compiler_pic, $1)\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$_LT_TAGVAR(allow_undefined_flag, $1)\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\n\t  if AC_TRY_EVAL(_LT_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n\t  then\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t  else\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  fi\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\t])\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=$lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n_LT_TAGDECL([build_libtool_need_lc], [archive_cmds_need_lc], [0],\n    [Whether or not to add -lc for building shared libraries])\n_LT_TAGDECL([allow_libtool_libs_with_static_runtimes],\n    [enable_shared_with_static_runtimes], [0],\n    [Whether or not to disallow shared libs when runtime libs are static])\n_LT_TAGDECL([], [export_dynamic_flag_spec], [1],\n    [Compiler flag to allow reflexive dlopens])\n_LT_TAGDECL([], [whole_archive_flag_spec], [1],\n    [Compiler flag to generate shared objects directly from archives])\n_LT_TAGDECL([], [compiler_needs_object], [1],\n    [Whether the compiler copes with passing no objects directly])\n_LT_TAGDECL([], [old_archive_from_new_cmds], [2],\n    [Create an old-style archive from a shared archive])\n_LT_TAGDECL([], [old_archive_from_expsyms_cmds], [2],\n    [Create a temporary old-style archive to link instead of a shared archive])\n_LT_TAGDECL([], [archive_cmds], [2], [Commands used to build a shared archive])\n_LT_TAGDECL([], [archive_expsym_cmds], [2])\n_LT_TAGDECL([], [module_cmds], [2],\n    [Commands used to build a loadable module if different from building\n    a shared archive.])\n_LT_TAGDECL([], [module_expsym_cmds], [2])\n_LT_TAGDECL([], [with_gnu_ld], [1],\n    [Whether we are building with GNU ld or not])\n_LT_TAGDECL([], [allow_undefined_flag], [1],\n    [Flag that allows shared libraries with undefined symbols to be built])\n_LT_TAGDECL([], [no_undefined_flag], [1],\n    [Flag that enforces no undefined symbols])\n_LT_TAGDECL([], [hardcode_libdir_flag_spec], [1],\n    [Flag to hardcode $libdir into a binary during linking.\n    This must work even if $libdir does not exist])\n_LT_TAGDECL([], [hardcode_libdir_separator], [1],\n    [Whether we need a single \"-rpath\" flag with a separated argument])\n_LT_TAGDECL([], [hardcode_direct], [0],\n    [Set to \"yes\" if using DIR/libNAME$shared_ext during linking hardcodes\n    DIR into the resulting binary])\n_LT_TAGDECL([], [hardcode_direct_absolute], [0],\n    [Set to \"yes\" if using DIR/libNAME$shared_ext during linking hardcodes\n    DIR into the resulting binary and the resulting library dependency is\n    \"absolute\", i.e impossible to change by setting $shlibpath_var if the\n    library is relocated])\n_LT_TAGDECL([], [hardcode_minus_L], [0],\n    [Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_shlibpath_var], [0],\n    [Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_automatic], [0],\n    [Set to \"yes\" if building a shared library automatically hardcodes DIR\n    into the library and all subsequent libraries and executables linked\n    against it])\n_LT_TAGDECL([], [inherit_rpath], [0],\n    [Set to yes if linker adds runtime paths of dependent libraries\n    to runtime path list])\n_LT_TAGDECL([], [link_all_deplibs], [0],\n    [Whether libtool must link a program against all its dependency libraries])\n_LT_TAGDECL([], [always_export_symbols], [0],\n    [Set to \"yes\" if exported symbols are required])\n_LT_TAGDECL([], [export_symbols_cmds], [2],\n    [The commands to list exported symbols])\n_LT_TAGDECL([], [exclude_expsyms], [1],\n    [Symbols that should not be listed in the preloaded symbols])\n_LT_TAGDECL([], [include_expsyms], [1],\n    [Symbols that must always be exported])\n_LT_TAGDECL([], [prelink_cmds], [2],\n    [Commands necessary for linking programs (against libraries) with templates])\n_LT_TAGDECL([], [postlink_cmds], [2],\n    [Commands necessary for finishing linking programs])\n_LT_TAGDECL([], [file_list_spec], [1],\n    [Specify filename containing input files])\ndnl FIXME: Not yet implemented\ndnl _LT_TAGDECL([], [thread_safe_flag_spec], [1],\ndnl    [Compiler flag to generate thread safe objects])\n])# _LT_LINKER_SHLIBS\n\n\n# _LT_LANG_C_CONFIG([TAG])\n# ------------------------\n# Ensure that the configuration variables for a C compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_C_CONFIG],\n[m4_require([_LT_DECL_EGREP])dnl\nlt_save_CC=$CC\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}'\n\n_LT_TAG_COMPILER\n# Save the default compiler, since it gets overwritten when the other\n# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.\ncompiler_DEFAULT=$CC\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_SYS_DYNAMIC_LINKER($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n  LT_SYS_DLOPEN_SELF\n  _LT_CMD_STRIPLIB\n\n  # Report what library types will actually be built\n  AC_MSG_CHECKING([if libtool supports shared libraries])\n  AC_MSG_RESULT([$can_build_shared])\n\n  AC_MSG_CHECKING([whether to build shared libraries])\n  test no = \"$can_build_shared\" && enable_shared=no\n\n  # On AIX, shared libraries and static libraries use the same namespace, and\n  # are all built from PIC.\n  case $host_os in\n  aix3*)\n    test yes = \"$enable_shared\" && enable_static=no\n    if test -n \"$RANLIB\"; then\n      archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n      postinstall_cmds='$RANLIB $lib'\n    fi\n    ;;\n\n  aix[[4-9]]*)\n    if test ia64 != \"$host_cpu\"; then\n      case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n      yes,aix,yes) ;;\t\t\t# shared object as lib.so file only\n      yes,svr4,*) ;;\t\t\t# shared object as lib.so archive member only\n      yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n      esac\n    fi\n    ;;\n  esac\n  AC_MSG_RESULT([$enable_shared])\n\n  AC_MSG_CHECKING([whether to build static libraries])\n  # Make sure either enable_shared or enable_static is yes.\n  test yes = \"$enable_shared\" || enable_static=yes\n  AC_MSG_RESULT([$enable_static])\n\n  _LT_CONFIG($1)\nfi\nAC_LANG_POP\nCC=$lt_save_CC\n])# _LT_LANG_C_CONFIG\n\n\n# _LT_LANG_CXX_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a C++ compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_CXX_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nif test -n \"$CXX\" && ( test no != \"$CXX\" &&\n    ( (test g++ = \"$CXX\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test g++ != \"$CXX\"))); then\n  AC_PROG_CXXCPP\nelse\n  _lt_caught_CXX_error=yes\nfi\n\nAC_LANG_PUSH(C++)\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(compiler_needs_object, $1)=no\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the CXX compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_caught_CXX_error\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"int some_variable = 0;\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_CFLAGS=$CFLAGS\n  lt_save_LD=$LD\n  lt_save_GCC=$GCC\n  GCC=$GXX\n  lt_save_with_gnu_ld=$with_gnu_ld\n  lt_save_path_LD=$lt_cv_path_LD\n  if test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\n  else\n    $as_unset lt_cv_prog_gnu_ld\n  fi\n  if test -n \"${lt_cv_path_LDCXX+set}\"; then\n    lt_cv_path_LD=$lt_cv_path_LDCXX\n  else\n    $as_unset lt_cv_path_LD\n  fi\n  test -z \"${LDCXX+set}\" || LD=$LDCXX\n  CC=${CXX-\"c++\"}\n  CFLAGS=$CXXFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    # We don't want -fno-exception when compiling C++ code, so set the\n    # no_builtin_flag separately\n    if test yes = \"$GXX\"; then\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n    else\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n    fi\n\n    if test yes = \"$GXX\"; then\n      # Set up default GNU C++ configuration\n\n      LT_PATH_LD\n\n      # Check if GNU C++ uses GNU ld as the underlying linker, since the\n      # archiving commands below assume that GNU ld is being used.\n      if test yes = \"$with_gnu_ld\"; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\n        # If archive_cmds runs LD, not CC, wlarc should be empty\n        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n        #     investigate it a little bit more. (MM)\n        wlarc='$wl'\n\n        # ancient GNU ld didn't support --whole-archive et. al.\n        if eval \"`$CC -print-prog-name=ld` --help 2>&1\" |\n\t  $GREP 'no-whole-archive' > /dev/null; then\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n        else\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\n        fi\n      else\n        with_gnu_ld=no\n        wlarc=\n\n        # A generic and very simple default shared library creation\n        # command for GNU C++ for the case where it uses the native\n        # linker, instead of GNU ld.  If possible, this setting should\n        # overridden to take advantage of the native linker features on\n        # the platform it is being used on.\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n      fi\n\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n    else\n      GXX=no\n      with_gnu_ld=no\n      wlarc=\n    fi\n\n    # PORTME: fill in a description of your system's C++ link characteristics\n    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n    _LT_TAGVAR(ld_shlibs, $1)=yes\n    case $host_os in\n      aix3*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n      aix[[4-9]]*)\n        if test ia64 = \"$host_cpu\"; then\n          # On IA64, the linker does run time linking by default, so we don't\n          # have to do anything special.\n          aix_use_runtimelinking=no\n          exp_sym_flag='-Bexport'\n          no_entry_flag=\n        else\n          aix_use_runtimelinking=no\n\n          # Test if we are trying to use run time linking or normal\n          # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n          # have runtime linking enabled, and use it for executables.\n          # For shared libraries, we enable/disable runtime linking\n          # depending on the kind of the shared library created -\n          # when \"with_aix_soname,aix_use_runtimelinking\" is:\n          # \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n          #            lib.a           static archive\n          # \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n          #            lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a(lib.so.V) shared, rtl:no\n          # \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a           static archive\n          case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t    for ld_flag in $LDFLAGS; do\n\t      case $ld_flag in\n\t      *-brtl*)\n\t        aix_use_runtimelinking=yes\n\t        break\n\t        ;;\n\t      esac\n\t    done\n\t    if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t      # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t      # so we don't have lib.a shared libs to link our executables.\n\t      # We have to force runtime linking in this case.\n\t      aix_use_runtimelinking=yes\n\t      LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t    fi\n\t    ;;\n          esac\n\n          exp_sym_flag='-bexport'\n          no_entry_flag='-bnoentry'\n        fi\n\n        # When large executables or shared objects are built, AIX ld can\n        # have problems creating the table of contents.  If linking a library\n        # or program results in \"error TOC overflow\" add -mminimal-toc to\n        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n        _LT_TAGVAR(archive_cmds, $1)=''\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        _LT_TAGVAR(file_list_spec, $1)='$wl-f,'\n        case $with_aix_soname,$aix_use_runtimelinking in\n        aix,*) ;;\t# no import file\n        svr4,* | *,yes) # use import file\n          # The Import File defines what to hardcode.\n          _LT_TAGVAR(hardcode_direct, $1)=no\n          _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n          ;;\n        esac\n\n        if test yes = \"$GXX\"; then\n          case $host_os in aix4.[[012]]|aix4.[[012]].*)\n          # We only want to do this on AIX 4.2 and lower, the check\n          # below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t     strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t    # We have reworked collect2\n\t    :\n\t  else\n\t    # We have old collect2\n\t    _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t    # It fails to find uninstalled libraries when the uninstalled\n\t    # path is not listed in the libpath.  Setting hardcode_minus_L\n\t    # to unsupported forces relinking\n\t    _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n          esac\n          shared_flag='-shared'\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag=$shared_flag' $wl-G'\n\t  fi\n\t  # Need to ensure runtime linking is disabled for the traditional\n\t  # shared library, or the linker may eventually find shared libraries\n\t  # /with/ Import File - we do not want to mix them.\n\t  shared_flag_aix='-shared'\n\t  shared_flag_svr4='-shared $wl-G'\n        else\n          # not using gcc\n          if test ia64 = \"$host_cpu\"; then\n\t  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t  # chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n          else\n\t    if test yes = \"$aix_use_runtimelinking\"; then\n\t      shared_flag='$wl-G'\n\t    else\n\t      shared_flag='$wl-bM:SRE'\n\t    fi\n\t    shared_flag_aix='$wl-bM:SRE'\n\t    shared_flag_svr4='$wl-G'\n          fi\n        fi\n\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'\n        # It seems that -bexpall does not export symbols beginning with\n        # underscore (_), so it is better to generate a list of symbols to\n\t# export.\n        _LT_TAGVAR(always_export_symbols, $1)=yes\n\tif test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n          # Warning - without using the other runtime loading flags (-brtl),\n          # -berok will link without error, but may produce a broken library.\n          # The \"-G\" linker flag allows undefined symbols.\n          _LT_TAGVAR(no_undefined_flag, $1)='-bernotok'\n          # Determine the default libpath from the value encoded in an empty\n          # executable.\n          _LT_SYS_MODULE_PATH_AIX([$1])\n          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n        else\n          if test ia64 = \"$host_cpu\"; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n          else\n\t    # Determine the default libpath from the value encoded in an\n\t    # empty executable.\n\t    _LT_SYS_MODULE_PATH_AIX([$1])\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t    # Warning - without using the other run time loading flags,\n\t    # -berok will link without error, but may produce a broken library.\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'\n\t    if test yes = \"$with_gnu_ld\"; then\n\t      # We only use this code for GNU lds that support --whole-archive.\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    else\n\t      # Exported symbols can be pulled into shared objects from archives\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t    fi\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t    # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t    compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([[, ]]\\\\)%-berok\\\\1%g\"`'\n\t    if test svr4 != \"$with_aix_soname\"; then\n\t      # This is similar to how AIX traditionally builds its shared\n\t      # libraries. Need -bnortl late, we may have -brtl in LDFLAGS.\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t    fi\n\t    if test aix != \"$with_aix_soname\"; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t    else\n\t      # used by -dlpreopen to get the symbols\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t    fi\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$RM -r $output_objdir/$realname.d'\n          fi\n        fi\n        ;;\n\n      beos*)\n\tif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t  # support --undefined.  This deserves some investigation.  FIXME\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      chorus*)\n        case $cc_basename in\n          *)\n\t  # FIXME: insert proper C++ library support\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\t  ;;\n        esac\n        ;;\n\n      cygwin* | mingw* | pw32* | cegcc*)\n\tcase $GXX,$cc_basename in\n\t,cl* | no,cl* | ,icl* | no,icl*)\n\t  # Native MSVC or ICC\n\t  # hardcode_libdir_flag_spec is actually meaningless, as there is\n\t  # no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=yes\n\t  _LT_TAGVAR(file_list_spec, $1)='@'\n\t  # Tell ltmain to make .lib files, not .a files.\n\t  libext=lib\n\t  # Tell ltmain to make .dll files, not .so files.\n\t  shrext_cmds=.dll\n\t  # FIXME: Setting linknames here is a bad hack.\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n              cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n              echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n            else\n              $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n            fi~\n            $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n            linknames='\n\t  # The linker will not automatically build a static lib if we build a DLL.\n\t  # _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t  # Don't use ranlib\n\t  _LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t  _LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n            lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n            case $lt_outputfile in\n              *.exe|*.EXE) ;;\n              *)\n                lt_outputfile=$lt_outputfile.exe\n                lt_tool_outputfile=$lt_tool_outputfile.exe\n                ;;\n            esac~\n            func_to_tool_file \"$lt_outputfile\"~\n            if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n              $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n              $RM \"$lt_outputfile.manifest\";\n            fi'\n\t  ;;\n\t*)\n\t  # g++\n\t  # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n\t  # as there is no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=no\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n\t  if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t    # If the export-symbols file already is a .def file, use it as\n\t    # is; otherwise, prepend EXPORTS...\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n              cp $export_symbols $output_objdir/$soname.def;\n            else\n              echo EXPORTS > $output_objdir/$soname.def;\n              cat $export_symbols >> $output_objdir/$soname.def;\n            fi~\n            $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t  ;;\n\tesac\n\t;;\n      darwin* | rhapsody*)\n        _LT_DARWIN_LINKER_FEATURES($1)\n\t;;\n\n      os2*)\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\tshrext_cmds=.dll\n\t_LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  emxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  prefix_cmds=\"$SED\"~\n\t  if test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t    prefix_cmds=\"$prefix_cmds -e 1d\";\n\t  fi~\n\t  prefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\t  cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\t_LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t_LT_TAGVAR(file_list_spec, $1)='@'\n\t;;\n\n      dgux*)\n        case $cc_basename in\n          ec++*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          ghcx*)\n\t    # Green Hills C++ Compiler\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      freebsd2.*)\n        # C++ shared libraries reported to be fairly broken before\n\t# switch to ELF\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      freebsd-elf*)\n        _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n        ;;\n\n      freebsd* | dragonfly*)\n        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n        # conventions\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n        ;;\n\n      haiku*)\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        ;;\n\n      hpux9*)\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t             # but as the default\n\t\t\t\t             # location of the library.\n\n        case $cc_basename in\n          CC*)\n            # FIXME: insert proper C++ library support\n            _LT_TAGVAR(ld_shlibs, $1)=no\n            ;;\n          aCC*)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            # Commands to make compiler produce verbose output that lists\n            # what \"hidden\" libraries, object files and flags are used when\n            # linking a shared library.\n            #\n            # There doesn't appear to be a way to prevent this compiler from\n            # explicitly linking system object files so we need to strip them\n            # from the output so that they don't get included in the library\n            # dependencies.\n            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP \"\\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n            ;;\n          *)\n            if test yes = \"$GXX\"; then\n              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            else\n              # FIXME: insert proper C++ library support\n              _LT_TAGVAR(ld_shlibs, $1)=no\n            fi\n            ;;\n        esac\n        ;;\n\n      hpux10*|hpux11*)\n        if test no = \"$with_gnu_ld\"; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n          case $host_cpu in\n            hppa*64*|ia64*)\n              ;;\n            *)\n\t      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n              ;;\n          esac\n        fi\n        case $host_cpu in\n          hppa*64*|ia64*)\n            _LT_TAGVAR(hardcode_direct, $1)=no\n            _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n            ;;\n          *)\n            _LT_TAGVAR(hardcode_direct, $1)=yes\n            _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t         # but as the default\n\t\t\t\t\t         # location of the library.\n            ;;\n        esac\n\n        case $cc_basename in\n          CC*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          aCC*)\n\t    case $host_cpu in\n\t      hppa*64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      ia64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      *)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t    esac\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP \"\\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        case $host_cpu in\n\t          hppa*64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          ia64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          *)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t        esac\n\t      fi\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      interix[[3-9]]*)\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n\t# Instead, shared libraries are loaded at an image base (0x10000000 by\n\t# default) and relocated if they conflict, which is a slow very memory\n\t# consuming and fragmenting process.  To avoid this, we pick a random,\n\t# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n\t# time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t;;\n      irix5* | irix6*)\n        case $cc_basename in\n          CC*)\n\t    # SGI C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t      else\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` -o $lib'\n\t      fi\n\t    fi\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\t    ;;\n        esac\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(inherit_rpath, $1)=yes\n        ;;\n\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib $wl-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP \"ld\"`; rm -f libconftest$shared_ext; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t    ;;\n\t  icpc* | ecpc* )\n\t    # Intel C++\n\t    with_gnu_ld=yes\n\t    # version 8.0 and above of icpc choke on multiply defined symbols\n\t    # if we add $predep_objects and $postdep_objects, however 7.1 and\n\t    # earlier do not add the objects themselves.\n\t    case `$CC -V 2>&1` in\n\t      *\"Version 7.\"*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t      *)  # Version 8.0 or newer\n\t        tmp_idyn=\n\t        case $host_cpu in\n\t\t  ia64*) tmp_idyn=' -i_dynamic';;\n\t\tesac\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t    esac\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    ;;\n          pgCC* | pgcpp*)\n            # Portland Group C++ compiler\n\t    case `$CC -V` in\n\t    *pgCC\\ [[1-5]].* | *pgcpp\\ [[1-5]].*)\n\t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n               rm -rf $tpldir~\n               $CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n               compile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n\t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n                $AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n                $RANLIB $oldlib'\n\t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    *) # Version 6 and above use weak symbols\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl--rpath $wl$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n            ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname  -o $lib $wl-retain-symbols-file $wl$export_symbols'\n\n\t    runpath_var=LD_RUN_PATH\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"X$list\" | $Xsed'\n\t    ;;\n\t  xl* | mpixl* | bgxl*)\n\t    # IBM XL 8.0 on PPC, with GNU ld\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    if test yes = \"$supports_anon_versioning\"; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n                cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n                echo \"local: *; };\" >> $output_objdir/$libname.ver~\n                $CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n\t    fi\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file $wl$export_symbols'\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t      _LT_TAGVAR(compiler_needs_object, $1)=yes\n\n\t      # Not sure whether something based on\n\t      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1\n\t      # would be better.\n\t      output_verbose_link_cmd='func_echo_all'\n\n\t      # Archives containing C++ object files must be created using\n\t      # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t      # necessary to make sure instantiated templates are included\n\t      # in the archive.\n\t      _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n\n      lynxos*)\n        # FIXME: insert proper C++ library support\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      m88k*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      mvs*)\n        case $cc_basename in\n          cxx*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\t  *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\tesac\n\t;;\n\n      netbsd*)\n        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n\t  wlarc=\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tfi\n\t# Workaround some broken pre-1.5 toolchains\n\toutput_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n\t;;\n\n      *nto* | *qnx*)\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n\t;;\n\n      openbsd* | bitrig*)\n\tif test -f /usr/libexec/ld.so; then\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file,$export_symbols -o $lib'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n\t  fi\n\t  output_verbose_link_cmd=func_echo_all\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      osf3* | osf4* | osf5*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo \"$lib\" | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Archives containing C++ object files must be created using\n\t    # the KAI C++ compiler.\n\t    case $host in\n\t      osf3*) _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs' ;;\n\t      *) _LT_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs' ;;\n\t    esac\n\t    ;;\n          RCC*)\n\t    # Rational C++ 2.4.1\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          cxx*)\n\t    case $host in\n\t      osf3*)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t\t;;\n\t      *)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n                  echo \"-hidden\">> $lib.exp~\n                  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname $wl-input $wl$lib.exp  `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~\n                  $RM $lib.exp'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t\t;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\" | $GREP -v \"ld:\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n\t  *)\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t      case $host in\n\t        osf3*)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t        *)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t      esac\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t      # Commands to make compiler produce verbose output that lists\n\t      # what \"hidden\" libraries, object files and flags are used when\n\t      # linking a shared library.\n\t      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      psos*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      sunos4*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.x\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          lcc*)\n\t    # Lucid\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      solaris*)\n        case $cc_basename in\n          CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n            _LT_TAGVAR(archive_cmds_need_lc,$1)=yes\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n              $CC -G$allow_undefined_flag $wl-M $wl$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t    _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t    case $host_os in\n\t      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t      *)\n\t\t# The compiler driver will combine and reorder linker options,\n\t\t# but understands '-z linker_flag'.\n\t        # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t\t_LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\t        ;;\n\t    esac\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\n\t    output_verbose_link_cmd='func_echo_all'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t    ;;\n          gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\n\t    # The C++ compiler must be used to create the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    # GNU C++ compiler with Solaris linker\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' $wl-z ${wl}defs'\n\t      if $CC --version | $GREP -v '^2\\.7' > /dev/null; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -shared $pic_flag -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      else\n\t        # g++ 2.7 appears to require '-G' NOT '-shared' on this\n\t        # platform.\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -G -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      fi\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $wl$libdir'\n\t      case $host_os in\n\t\tsolaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t\t*)\n\t\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\t\t  ;;\n\t      esac\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      case $cc_basename in\n        CC*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n      esac\n      ;;\n\n      sysv5* | sco3.2v5* | sco5v6*)\n\t# Note: We CANNOT use -z defs as we might desire, because we do not\n\t# link with -lc, and that would cause any symbols used from libc to\n\t# always be unresolved, which means just about no library would\n\t# ever link correctly.  If we're not using GNU ld we use -z text\n\t# though, which does catch some bad symbols but isn't as heavy-handed\n\t# as -z defs.\n\t_LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n\t_LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'\n\t_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n\t_LT_TAGVAR(link_all_deplibs, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'\n\trunpath_var='LD_RUN_PATH'\n\n\tcase $cc_basename in\n          CC*)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~\n              '\"$_LT_TAGVAR(old_archive_cmds, $1)\"\n\t    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~\n              '\"$_LT_TAGVAR(reload_cmds, $1)\"\n\t    ;;\n\t  *)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    ;;\n\tesac\n      ;;\n\n      tandem*)\n        case $cc_basename in\n          NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      vxworks*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      *)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n    esac\n\n    AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\n    test no = \"$_LT_TAGVAR(ld_shlibs, $1)\" && can_build_shared=no\n\n    _LT_TAGVAR(GCC, $1)=$GXX\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\n  LDCXX=$LD\n  LD=$lt_save_LD\n  GCC=$lt_save_GCC\n  with_gnu_ld=$lt_save_with_gnu_ld\n  lt_cv_path_LDCXX=$lt_cv_path_LD\n  lt_cv_path_LD=$lt_save_path_LD\n  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\n  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\nfi # test yes != \"$_lt_caught_CXX_error\"\n\nAC_LANG_POP\n])# _LT_LANG_CXX_CONFIG\n\n\n# _LT_FUNC_STRIPNAME_CNF\n# ----------------------\n# func_stripname_cnf prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n#\n# This function is identical to the (non-XSI) version of func_stripname,\n# except this one can be used by m4 code that may be executed by configure,\n# rather than the libtool script.\nm4_defun([_LT_FUNC_STRIPNAME_CNF],[dnl\nAC_REQUIRE([_LT_DECL_SED])\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])\nfunc_stripname_cnf ()\n{\n  case @S|@2 in\n  .*) func_stripname_result=`$ECHO \"@S|@3\" | $SED \"s%^@S|@1%%; s%\\\\\\\\@S|@2\\$%%\"`;;\n  *)  func_stripname_result=`$ECHO \"@S|@3\" | $SED \"s%^@S|@1%%; s%@S|@2\\$%%\"`;;\n  esac\n} # func_stripname_cnf\n])# _LT_FUNC_STRIPNAME_CNF\n\n\n# _LT_SYS_HIDDEN_LIBDEPS([TAGNAME])\n# ---------------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nm4_defun([_LT_SYS_HIDDEN_LIBDEPS],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nAC_REQUIRE([_LT_FUNC_STRIPNAME_CNF])dnl\n# Dependencies to place before and after the object being linked:\n_LT_TAGVAR(predep_objects, $1)=\n_LT_TAGVAR(postdep_objects, $1)=\n_LT_TAGVAR(predeps, $1)=\n_LT_TAGVAR(postdeps, $1)=\n_LT_TAGVAR(compiler_lib_search_path, $1)=\n\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nm4_if([$1], [], [cat > conftest.$ac_ext <<_LT_EOF\nint a;\nvoid foo (void) { a = 0; }\n_LT_EOF\n], [$1], [CXX], [cat > conftest.$ac_ext <<_LT_EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\n_LT_EOF\n], [$1], [F77], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [FC], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [GCJ], [cat > conftest.$ac_ext <<_LT_EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\n_LT_EOF\n], [$1], [GO], [cat > conftest.$ac_ext <<_LT_EOF\npackage foo\nfunc foo() {\n}\n_LT_EOF\n])\n\n_lt_libdeps_save_CFLAGS=$CFLAGS\ncase \"$CC $CFLAGS \" in #(\n*\\ -flto*\\ *) CFLAGS=\"$CFLAGS -fno-lto\" ;;\n*\\ -fwhopr*\\ *) CFLAGS=\"$CFLAGS -fno-whopr\" ;;\n*\\ -fuse-linker-plugin*\\ *) CFLAGS=\"$CFLAGS -fno-use-linker-plugin\" ;;\nesac\n\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  for p in `eval \"$output_verbose_link_cmd\"`; do\n    case $prev$p in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test x-L = \"$p\" ||\n          test x-R = \"$p\"; then\n\t prev=$p\n\t continue\n       fi\n\n       # Expand the sysroot to ease extracting the directories later.\n       if test -z \"$prev\"; then\n         case $p in\n         -L*) func_stripname_cnf '-L' '' \"$p\"; prev=-L; p=$func_stripname_result ;;\n         -R*) func_stripname_cnf '-R' '' \"$p\"; prev=-R; p=$func_stripname_result ;;\n         -l*) func_stripname_cnf '-l' '' \"$p\"; prev=-l; p=$func_stripname_result ;;\n         esac\n       fi\n       case $p in\n       =*) func_stripname_cnf '=' '' \"$p\"; p=$lt_sysroot$func_stripname_result ;;\n       esac\n       if test no = \"$pre_test_object_deps_done\"; then\n\t case $prev in\n\t -L | -R)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=$prev$p\n\t   else\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_TAGVAR(compiler_lib_search_path, $1)} $prev$p\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_TAGVAR(postdeps, $1)\"; then\n\t   _LT_TAGVAR(postdeps, $1)=$prev$p\n\t else\n\t   _LT_TAGVAR(postdeps, $1)=\"${_LT_TAGVAR(postdeps, $1)} $prev$p\"\n\t fi\n       fi\n       prev=\n       ;;\n\n    *.lto.$objext) ;; # Ignore GCC LTO objects\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test no = \"$pre_test_object_deps_done\"; then\n\t if test -z \"$_LT_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_TAGVAR(predep_objects, $1)=$p\n\t else\n\t   _LT_TAGVAR(predep_objects, $1)=\"$_LT_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_TAGVAR(postdep_objects, $1)=$p\n\t else\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$_LT_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$RM -f confest.$objext\nCFLAGS=$_lt_libdeps_save_CFLAGS\n\n# PORTME: override above test on systems where it is broken\nm4_if([$1], [CXX],\n[case $host_os in\ninterix[[3-9]]*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  _LT_TAGVAR(predep_objects,$1)=\n  _LT_TAGVAR(postdep_objects,$1)=\n  _LT_TAGVAR(postdeps,$1)=\n  ;;\nesac\n])\n\ncase \" $_LT_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=\nif test -n \"${_LT_TAGVAR(compiler_lib_search_path, $1)}\"; then\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo \" ${_LT_TAGVAR(compiler_lib_search_path, $1)}\" | $SED -e 's! -L! !g' -e 's!^ !!'`\nfi\n_LT_TAGDECL([], [compiler_lib_search_dirs], [1],\n    [The directories searched by this compiler when creating a shared library])\n_LT_TAGDECL([], [predep_objects], [1],\n    [Dependencies to place before and after the objects being linked to\n    create a shared library])\n_LT_TAGDECL([], [postdep_objects], [1])\n_LT_TAGDECL([], [predeps], [1])\n_LT_TAGDECL([], [postdeps], [1])\n_LT_TAGDECL([], [compiler_lib_search_path], [1],\n    [The library search path used internally by the compiler when linking\n    a shared library])\n])# _LT_SYS_HIDDEN_LIBDEPS\n\n\n# _LT_LANG_F77_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a Fortran 77 compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_F77_CONFIG],\n[AC_LANG_PUSH(Fortran 77)\nif test -z \"$F77\" || test no = \"$F77\"; then\n  _lt_disable_F77=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the F77 compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_disable_F77\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${F77-\"f77\"}\n  CFLAGS=$FFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n  GCC=$G77\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test no = \"$can_build_shared\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test yes = \"$enable_shared\" && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test ia64 != \"$host_cpu\"; then\n\t  case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n\t  yes,aix,yes) ;;\t\t# shared object as lib.so file only\n\t  yes,svr4,*) ;;\t\t# shared object as lib.so archive member only\n\t  yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n\t  esac\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test yes = \"$enable_shared\" || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=$G77\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test yes != \"$_lt_disable_F77\"\n\nAC_LANG_POP\n])# _LT_LANG_F77_CONFIG\n\n\n# _LT_LANG_FC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for a Fortran compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_FC_CONFIG],\n[AC_LANG_PUSH(Fortran)\n\nif test -z \"$FC\" || test no = \"$FC\"; then\n  _lt_disable_FC=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for fc test sources.\nac_ext=${ac_fc_srcext-f}\n\n# Object file extension for compiled fc test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the FC compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_disable_FC\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${FC-\"f95\"}\n  CFLAGS=$FCFLAGS\n  compiler=$CC\n  GCC=$ac_cv_fc_compiler_gnu\n\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test no = \"$can_build_shared\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test yes = \"$enable_shared\" && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test ia64 != \"$host_cpu\"; then\n\t  case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n\t  yes,aix,yes) ;;\t\t# shared object as lib.so file only\n\t  yes,svr4,*) ;;\t\t# shared object as lib.so archive member only\n\t  yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n\t  esac\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test yes = \"$enable_shared\" || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=$ac_cv_fc_compiler_gnu\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test yes != \"$_lt_disable_FC\"\n\nAC_LANG_POP\n])# _LT_LANG_FC_CONFIG\n\n\n# _LT_LANG_GCJ_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Java Compiler compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_GCJ_CONFIG],\n[AC_REQUIRE([LT_PROG_GCJ])dnl\nAC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GCJ-\"gcj\"}\nCFLAGS=$GCJFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=$LD\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GCJ_CONFIG\n\n\n# _LT_LANG_GO_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Go compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_GO_CONFIG],\n[AC_REQUIRE([LT_PROG_GO])dnl\nAC_LANG_SAVE\n\n# Source file extension for Go test sources.\nac_ext=go\n\n# Object file extension for compiled Go test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"package main; func main() { }\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='package main; func main() { }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GOC-\"gccgo\"}\nCFLAGS=$GOFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=$LD\n_LT_CC_BASENAME([$compiler])\n\n# Go did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GO_CONFIG\n\n\n# _LT_LANG_RC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for the Windows resource compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_RC_CONFIG],\n[AC_REQUIRE([LT_PROG_RC])dnl\nAC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=$lt_simple_compile_test_code\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=\nCC=${RC-\"windres\"}\nCFLAGS=\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nif test -n \"$compiler\"; then\n  :\n  _LT_CONFIG($1)\nfi\n\nGCC=$lt_save_GCC\nAC_LANG_RESTORE\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_RC_CONFIG\n\n\n# LT_PROG_GCJ\n# -----------\nAC_DEFUN([LT_PROG_GCJ],\n[m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],\n  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],\n    [AC_CHECK_TOOL(GCJ, gcj,)\n      test set = \"${GCJFLAGS+set}\" || GCJFLAGS=\"-g -O2\"\n      AC_SUBST(GCJFLAGS)])])[]dnl\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_GCJ], [LT_PROG_GCJ])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_GCJ], [])\n\n\n# LT_PROG_GO\n# ----------\nAC_DEFUN([LT_PROG_GO],\n[AC_CHECK_TOOL(GOC, gccgo,)\n])\n\n\n# LT_PROG_RC\n# ----------\nAC_DEFUN([LT_PROG_RC],\n[AC_CHECK_TOOL(RC, windres,)\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_RC], [LT_PROG_RC])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_RC], [])\n\n\n# _LT_DECL_EGREP\n# --------------\n# If we don't have a new enough Autoconf to choose the best grep\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_EGREP],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_REQUIRE([AC_PROG_FGREP])dnl\ntest -z \"$GREP\" && GREP=grep\n_LT_DECL([], [GREP], [1], [A grep program that handles long lines])\n_LT_DECL([], [EGREP], [1], [An ERE matcher])\n_LT_DECL([], [FGREP], [1], [A literal string matcher])\ndnl Non-bleeding-edge autoconf doesn't subst GREP, so do it here too\nAC_SUBST([GREP])\n])\n\n\n# _LT_DECL_OBJDUMP\n# --------------\n# If we don't have a new enough Autoconf to choose the best objdump\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_OBJDUMP],\n[AC_CHECK_TOOL(OBJDUMP, objdump, false)\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [An object symbol dumper])\nAC_SUBST([OBJDUMP])\n])\n\n# _LT_DECL_DLLTOOL\n# ----------------\n# Ensure DLLTOOL variable is set.\nm4_defun([_LT_DECL_DLLTOOL],\n[AC_CHECK_TOOL(DLLTOOL, dlltool, false)\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])\nAC_SUBST([DLLTOOL])\n])\n\n# _LT_DECL_SED\n# ------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nm4_defun([_LT_DECL_SED],\n[AC_PROG_SED\ntest -z \"$SED\" && SED=sed\nXsed=\"$SED -e 1s/^X//\"\n_LT_DECL([], [SED], [1], [A sed program that does not truncate output])\n_LT_DECL([], [Xsed], [\"\\$SED -e 1s/^X//\"],\n    [Sed that helps us avoid accidentally triggering echo(1) options like -n])\n])# _LT_DECL_SED\n\nm4_ifndef([AC_PROG_SED], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\n\nm4_defun([AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nIFS=$as_save_IFS\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f \"$lt_ac_sed\" && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test 10 -lt \"$lt_ac_count\" && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test \"$lt_ac_count\" -gt \"$lt_ac_max\"; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_SUBST([SED])\nAC_MSG_RESULT([$SED])\n])#AC_PROG_SED\n])#m4_ifndef\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_SED], [AC_PROG_SED])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_SED], [])\n\n\n# _LT_CHECK_SHELL_FEATURES\n# ------------------------\n# Find out whether the shell is Bourne or XSI compatible,\n# or has some other useful features.\nm4_defun([_LT_CHECK_SHELL_FEATURES],\n[if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then\n  lt_unset=unset\nelse\n  lt_unset=false\nfi\n_LT_DECL([], [lt_unset], [0], [whether the shell understands \"unset\"])dnl\n\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  lt_SP2NL='tr \\040 \\012'\n  lt_NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  lt_SP2NL='tr \\100 \\n'\n  lt_NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n_LT_DECL([SP2NL], [lt_SP2NL], [1], [turn spaces into newlines])dnl\n_LT_DECL([NL2SP], [lt_NL2SP], [1], [turn newlines into spaces])dnl\n])# _LT_CHECK_SHELL_FEATURES\n\n\n# _LT_PATH_CONVERSION_FUNCTIONS\n# -----------------------------\n# Determine what file name conversion functions should be used by\n# func_to_host_file (and, implicitly, by func_to_host_path).  These are needed\n# for certain cross-compile configurations and native mingw.\nm4_defun([_LT_PATH_CONVERSION_FUNCTIONS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_MSG_CHECKING([how to convert $build file names to $host format])\nAC_CACHE_VAL(lt_cv_to_host_file_cmd,\n[case $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_w32\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_w32\n        ;;\n    esac\n    ;;\n  *-*-cygwin* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_cygwin\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_noop\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_cygwin\n        ;;\n    esac\n    ;;\n  * ) # unhandled hosts (and \"normal\" native builds)\n    lt_cv_to_host_file_cmd=func_convert_file_noop\n    ;;\nesac\n])\nto_host_file_cmd=$lt_cv_to_host_file_cmd\nAC_MSG_RESULT([$lt_cv_to_host_file_cmd])\n_LT_DECL([to_host_file_cmd], [lt_cv_to_host_file_cmd],\n         [0], [convert $build file names to $host format])dnl\n\nAC_MSG_CHECKING([how to convert $build file names to toolchain format])\nAC_CACHE_VAL(lt_cv_to_tool_file_cmd,\n[#assume ordinary cross tools, or native build.\nlt_cv_to_tool_file_cmd=func_convert_file_noop\ncase $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_tool_file_cmd=func_convert_file_msys_to_w32\n        ;;\n    esac\n    ;;\nesac\n])\nto_tool_file_cmd=$lt_cv_to_tool_file_cmd\nAC_MSG_RESULT([$lt_cv_to_tool_file_cmd])\n_LT_DECL([to_tool_file_cmd], [lt_cv_to_tool_file_cmd],\n         [0], [convert $build files to toolchain format])dnl\n])# _LT_PATH_CONVERSION_FUNCTIONS\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/m4/ltdl.m4": "# ltdl.m4 - Configure ltdl for the target system. -*-Autoconf-*-\n#\n#   Copyright (C) 1999-2008, 2011-2019 Free Software Foundation, Inc.\n#   Written by Thomas Tanner, 1999\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\n# serial 20 LTDL_INIT\n\n# LT_CONFIG_LTDL_DIR(DIRECTORY, [LTDL-MODE])\n# ------------------------------------------\n# DIRECTORY contains the libltdl sources.  It is okay to call this\n# function multiple times, as long as the same DIRECTORY is always given.\nAC_DEFUN([LT_CONFIG_LTDL_DIR],\n[AC_BEFORE([$0], [LTDL_INIT])\n_$0($*)\n])# LT_CONFIG_LTDL_DIR\n\n# We break this out into a separate macro, so that we can call it safely\n# internally without being caught accidentally by the sed scan in libtoolize.\nm4_defun([_LT_CONFIG_LTDL_DIR],\n[dnl remove trailing slashes\nm4_pushdef([_ARG_DIR], m4_bpatsubst([$1], [/*$]))\nm4_case(_LTDL_DIR,\n\t[], [dnl only set lt_ltdl_dir if _ARG_DIR is not simply '.'\n\t     m4_if(_ARG_DIR, [.],\n\t             [],\n\t\t [m4_define([_LTDL_DIR], _ARG_DIR)\n\t          _LT_SHELL_INIT([lt_ltdl_dir=']_ARG_DIR['])])],\n    [m4_if(_ARG_DIR, _LTDL_DIR,\n\t    [],\n\t[m4_fatal([multiple libltdl directories: ']_LTDL_DIR[', ']_ARG_DIR['])])])\nm4_popdef([_ARG_DIR])\n])# _LT_CONFIG_LTDL_DIR\n\n# Initialise:\nm4_define([_LTDL_DIR], [])\n\n\n# _LT_BUILD_PREFIX\n# ----------------\n# If Autoconf is new enough, expand to '$(top_build_prefix)', otherwise\n# to '$(top_builddir)/'.\nm4_define([_LT_BUILD_PREFIX],\n[m4_ifdef([AC_AUTOCONF_VERSION],\n   [m4_if(m4_version_compare(m4_defn([AC_AUTOCONF_VERSION]), [2.62]),\n\t  [-1], [m4_ifdef([_AC_HAVE_TOP_BUILD_PREFIX],\n\t\t\t  [$(top_build_prefix)],\n\t\t\t  [$(top_builddir)/])],\n\t  [$(top_build_prefix)])],\n   [$(top_builddir)/])[]dnl\n])\n\n\n# LTDL_CONVENIENCE\n# ----------------\n# sets LIBLTDL to the link flags for the libltdl convenience library and\n# LTDLINCL to the include flags for the libltdl header and adds\n# --enable-ltdl-convenience to the configure arguments.  Note that\n# AC_CONFIG_SUBDIRS is not called here.  LIBLTDL will be prefixed with\n# '$(top_build_prefix)' if available, otherwise with '$(top_builddir)/',\n# and LTDLINCL will be prefixed with '$(top_srcdir)/' (note the single\n# quotes!).  If your package is not flat and you're not using automake,\n# define top_build_prefix, top_builddir, and top_srcdir appropriately\n# in your Makefiles.\nAC_DEFUN([LTDL_CONVENIENCE],\n[AC_BEFORE([$0], [LTDL_INIT])dnl\ndnl Although the argument is deprecated and no longer documented,\ndnl LTDL_CONVENIENCE used to take a DIRECTORY orgument, if we have one\ndnl here make sure it is the same as any other declaration of libltdl's\ndnl location!  This also ensures lt_ltdl_dir is set when configure.ac is\ndnl not yet using an explicit LT_CONFIG_LTDL_DIR.\nm4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl\n_$0()\n])# LTDL_CONVENIENCE\n\n# AC_LIBLTDL_CONVENIENCE accepted a directory argument in older libtools,\n# now we have LT_CONFIG_LTDL_DIR:\nAU_DEFUN([AC_LIBLTDL_CONVENIENCE],\n[_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])\n_LTDL_CONVENIENCE])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBLTDL_CONVENIENCE], [])\n\n\n# _LTDL_CONVENIENCE\n# -----------------\n# Code shared by LTDL_CONVENIENCE and LTDL_INIT([convenience]).\nm4_defun([_LTDL_CONVENIENCE],\n[case $enable_ltdl_convenience in\n  no) AC_MSG_ERROR([this package needs a convenience libltdl]) ;;\n  \"\") enable_ltdl_convenience=yes\n      ac_configure_args=\"$ac_configure_args --enable-ltdl-convenience\" ;;\nesac\nLIBLTDL='_LT_BUILD_PREFIX'\"${lt_ltdl_dir+$lt_ltdl_dir/}libltdlc.la\"\nLTDLDEPS=$LIBLTDL\nLTDLINCL='-I$(top_srcdir)'\"${lt_ltdl_dir+/$lt_ltdl_dir}\"\n\nAC_SUBST([LIBLTDL])\nAC_SUBST([LTDLDEPS])\nAC_SUBST([LTDLINCL])\n\n# For backwards non-gettext consistent compatibility...\nINCLTDL=$LTDLINCL\nAC_SUBST([INCLTDL])\n])# _LTDL_CONVENIENCE\n\n\n# LTDL_INSTALLABLE\n# ----------------\n# sets LIBLTDL to the link flags for the libltdl installable library\n# and LTDLINCL to the include flags for the libltdl header and adds\n# --enable-ltdl-install to the configure arguments.  Note that\n# AC_CONFIG_SUBDIRS is not called from here.  If an installed libltdl\n# is not found, LIBLTDL will be prefixed with '$(top_build_prefix)' if\n# available, otherwise with '$(top_builddir)/', and LTDLINCL will be\n# prefixed with '$(top_srcdir)/' (note the single quotes!).  If your\n# package is not flat and you're not using automake, define top_build_prefix,\n# top_builddir, and top_srcdir appropriately in your Makefiles.\n# In the future, this macro may have to be called after LT_INIT.\nAC_DEFUN([LTDL_INSTALLABLE],\n[AC_BEFORE([$0], [LTDL_INIT])dnl\ndnl Although the argument is deprecated and no longer documented,\ndnl LTDL_INSTALLABLE used to take a DIRECTORY orgument, if we have one\ndnl here make sure it is the same as any other declaration of libltdl's\ndnl location!  This also ensures lt_ltdl_dir is set when configure.ac is\ndnl not yet using an explicit LT_CONFIG_LTDL_DIR.\nm4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl\n_$0()\n])# LTDL_INSTALLABLE\n\n# AC_LIBLTDL_INSTALLABLE accepted a directory argument in older libtools,\n# now we have LT_CONFIG_LTDL_DIR:\nAU_DEFUN([AC_LIBLTDL_INSTALLABLE],\n[_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])\n_LTDL_INSTALLABLE])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBLTDL_INSTALLABLE], [])\n\n\n# _LTDL_INSTALLABLE\n# -----------------\n# Code shared by LTDL_INSTALLABLE and LTDL_INIT([installable]).\nm4_defun([_LTDL_INSTALLABLE],\n[if test -f \"$prefix/lib/libltdl.la\"; then\n  lt_save_LDFLAGS=$LDFLAGS\n  LDFLAGS=\"-L$prefix/lib $LDFLAGS\"\n  AC_CHECK_LIB([ltdl], [lt_dlinit], [lt_lib_ltdl=yes])\n  LDFLAGS=$lt_save_LDFLAGS\n  if test yes = \"${lt_lib_ltdl-no}\"; then\n    if test yes != \"$enable_ltdl_install\"; then\n      # Don't overwrite $prefix/lib/libltdl.la without --enable-ltdl-install\n      AC_MSG_WARN([not overwriting libltdl at $prefix, force with '--enable-ltdl-install'])\n      enable_ltdl_install=no\n    fi\n  elif test no = \"$enable_ltdl_install\"; then\n    AC_MSG_WARN([libltdl not installed, but installation disabled])\n  fi\nfi\n\n# If configure.ac declared an installable ltdl, and the user didn't override\n# with --disable-ltdl-install, we will install the shipped libltdl.\ncase $enable_ltdl_install in\n  no) ac_configure_args=\"$ac_configure_args --enable-ltdl-install=no\"\n      LIBLTDL=-lltdl\n      LTDLDEPS=\n      LTDLINCL=\n      ;;\n  *)  enable_ltdl_install=yes\n      ac_configure_args=\"$ac_configure_args --enable-ltdl-install\"\n      LIBLTDL='_LT_BUILD_PREFIX'\"${lt_ltdl_dir+$lt_ltdl_dir/}libltdl.la\"\n      LTDLDEPS=$LIBLTDL\n      LTDLINCL='-I$(top_srcdir)'\"${lt_ltdl_dir+/$lt_ltdl_dir}\"\n      ;;\nesac\n\nAC_SUBST([LIBLTDL])\nAC_SUBST([LTDLDEPS])\nAC_SUBST([LTDLINCL])\n\n# For backwards non-gettext consistent compatibility...\nINCLTDL=$LTDLINCL\nAC_SUBST([INCLTDL])\n])# LTDL_INSTALLABLE\n\n\n# _LTDL_MODE_DISPATCH\n# -------------------\nm4_define([_LTDL_MODE_DISPATCH],\n[dnl If _LTDL_DIR is '.', then we are configuring libltdl itself:\nm4_if(_LTDL_DIR, [],\n\t[],\n    dnl if _LTDL_MODE was not set already, the default value is 'subproject':\n    [m4_case(m4_default(_LTDL_MODE, [subproject]),\n\t  [subproject], [AC_CONFIG_SUBDIRS(_LTDL_DIR)\n\t\t\t  _LT_SHELL_INIT([lt_dlopen_dir=$lt_ltdl_dir])],\n\t  [nonrecursive], [_LT_SHELL_INIT([lt_dlopen_dir=$lt_ltdl_dir; lt_libobj_prefix=$lt_ltdl_dir/])],\n\t  [recursive], [],\n\t[m4_fatal([unknown libltdl mode: ]_LTDL_MODE)])])dnl\ndnl Be careful not to expand twice:\nm4_define([$0], [])\n])# _LTDL_MODE_DISPATCH\n\n\n# _LT_LIBOBJ(MODULE_NAME)\n# -----------------------\n# Like AC_LIBOBJ, except that MODULE_NAME goes into _LT_LIBOBJS instead\n# of into LIBOBJS.\nAC_DEFUN([_LT_LIBOBJ], [\n  m4_pattern_allow([^_LT_LIBOBJS$])\n  _LT_LIBOBJS=\"$_LT_LIBOBJS $1.$ac_objext\"\n])# _LT_LIBOBJS\n\n\n# LTDL_INIT([OPTIONS])\n# --------------------\n# Clients of libltdl can use this macro to allow the installer to\n# choose between a shipped copy of the ltdl sources or a preinstalled\n# version of the library.  If the shipped ltdl sources are not in a\n# subdirectory named libltdl, the directory name must be given by\n# LT_CONFIG_LTDL_DIR.\nAC_DEFUN([LTDL_INIT],\n[dnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\ndnl We need to keep our own list of libobjs separate from our parent project,\ndnl and the easiest way to do that is redefine the AC_LIBOBJs macro while\ndnl we look for our own LIBOBJs.\nm4_pushdef([AC_LIBOBJ], m4_defn([_LT_LIBOBJ]))\nm4_pushdef([AC_LIBSOURCES])\n\ndnl If not otherwise defined, default to the 1.5.x compatible subproject mode:\nm4_if(_LTDL_MODE, [],\n        [m4_define([_LTDL_MODE], m4_default([$2], [subproject]))\n        m4_if([-1], [m4_bregexp(_LTDL_MODE, [\\(subproject\\|\\(non\\)?recursive\\)])],\n                [m4_fatal([unknown libltdl mode: ]_LTDL_MODE)])])\n\nAC_ARG_WITH([included_ltdl],\n    [AS_HELP_STRING([--with-included-ltdl],\n                    [use the GNU ltdl sources included here])])\n\nif test yes != \"$with_included_ltdl\"; then\n  # We are not being forced to use the included libltdl sources, so\n  # decide whether there is a useful installed version we can use.\n  AC_CHECK_HEADER([ltdl.h],\n      [AC_CHECK_DECL([lt_dlinterface_register],\n\t   [AC_CHECK_LIB([ltdl], [lt_dladvise_preload],\n\t       [with_included_ltdl=no],\n\t       [with_included_ltdl=yes])],\n\t   [with_included_ltdl=yes],\n\t   [AC_INCLUDES_DEFAULT\n\t    #include <ltdl.h>])],\n      [with_included_ltdl=yes],\n      [AC_INCLUDES_DEFAULT]\n  )\nfi\n\ndnl If neither LT_CONFIG_LTDL_DIR, LTDL_CONVENIENCE nor LTDL_INSTALLABLE\ndnl was called yet, then for old times' sake, we assume libltdl is in an\ndnl eponymous directory:\nAC_PROVIDE_IFELSE([LT_CONFIG_LTDL_DIR], [], [_LT_CONFIG_LTDL_DIR([libltdl])])\n\nAC_ARG_WITH([ltdl_include],\n    [AS_HELP_STRING([--with-ltdl-include=DIR],\n                    [use the ltdl headers installed in DIR])])\n\nif test -n \"$with_ltdl_include\"; then\n  if test -f \"$with_ltdl_include/ltdl.h\"; then :\n  else\n    AC_MSG_ERROR([invalid ltdl include directory: '$with_ltdl_include'])\n  fi\nelse\n  with_ltdl_include=no\nfi\n\nAC_ARG_WITH([ltdl_lib],\n    [AS_HELP_STRING([--with-ltdl-lib=DIR],\n                    [use the libltdl.la installed in DIR])])\n\nif test -n \"$with_ltdl_lib\"; then\n  if test -f \"$with_ltdl_lib/libltdl.la\"; then :\n  else\n    AC_MSG_ERROR([invalid ltdl library directory: '$with_ltdl_lib'])\n  fi\nelse\n  with_ltdl_lib=no\nfi\n\ncase ,$with_included_ltdl,$with_ltdl_include,$with_ltdl_lib, in\n  ,yes,no,no,)\n\tm4_case(m4_default(_LTDL_TYPE, [convenience]),\n\t    [convenience], [_LTDL_CONVENIENCE],\n\t    [installable], [_LTDL_INSTALLABLE],\n\t  [m4_fatal([unknown libltdl build type: ]_LTDL_TYPE)])\n\t;;\n  ,no,no,no,)\n\t# If the included ltdl is not to be used, then use the\n\t# preinstalled libltdl we found.\n\tAC_DEFINE([HAVE_LTDL], [1],\n\t  [Define this if a modern libltdl is already installed])\n\tLIBLTDL=-lltdl\n\tLTDLDEPS=\n\tLTDLINCL=\n\t;;\n  ,no*,no,*)\n\tAC_MSG_ERROR(['--with-ltdl-include' and '--with-ltdl-lib' options must be used together])\n\t;;\n  *)\twith_included_ltdl=no\n\tLIBLTDL=\"-L$with_ltdl_lib -lltdl\"\n\tLTDLDEPS=\n\tLTDLINCL=-I$with_ltdl_include\n\t;;\nesac\nINCLTDL=$LTDLINCL\n\n# Report our decision...\nAC_MSG_CHECKING([where to find libltdl headers])\nAC_MSG_RESULT([$LTDLINCL])\nAC_MSG_CHECKING([where to find libltdl library])\nAC_MSG_RESULT([$LIBLTDL])\n\n_LTDL_SETUP\n\ndnl restore autoconf definition.\nm4_popdef([AC_LIBOBJ])\nm4_popdef([AC_LIBSOURCES])\n\nAC_CONFIG_COMMANDS_PRE([\n    _ltdl_libobjs=\n    _ltdl_ltlibobjs=\n    if test -n \"$_LT_LIBOBJS\"; then\n      # Remove the extension.\n      _lt_sed_drop_objext='s/\\.o$//;s/\\.obj$//'\n      for i in `for i in $_LT_LIBOBJS; do echo \"$i\"; done | sed \"$_lt_sed_drop_objext\" | sort -u`; do\n        _ltdl_libobjs=\"$_ltdl_libobjs $lt_libobj_prefix$i.$ac_objext\"\n        _ltdl_ltlibobjs=\"$_ltdl_ltlibobjs $lt_libobj_prefix$i.lo\"\n      done\n    fi\n    AC_SUBST([ltdl_LIBOBJS], [$_ltdl_libobjs])\n    AC_SUBST([ltdl_LTLIBOBJS], [$_ltdl_ltlibobjs])\n])\n\n# Only expand once:\nm4_define([LTDL_INIT])\n])# LTDL_INIT\n\n# Old names:\nAU_DEFUN([AC_LIB_LTDL], [LTDL_INIT($@)])\nAU_DEFUN([AC_WITH_LTDL], [LTDL_INIT($@)])\nAU_DEFUN([LT_WITH_LTDL], [LTDL_INIT($@)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIB_LTDL], [])\ndnl AC_DEFUN([AC_WITH_LTDL], [])\ndnl AC_DEFUN([LT_WITH_LTDL], [])\n\n\n# _LTDL_SETUP\n# -----------\n# Perform all the checks necessary for compilation of the ltdl objects\n#  -- including compiler checks and header checks.  This is a public\n# interface  mainly for the benefit of libltdl's own configure.ac, most\n# other users should call LTDL_INIT instead.\nAC_DEFUN([_LTDL_SETUP],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_SYS_MODULE_EXT])dnl\nAC_REQUIRE([LT_SYS_MODULE_PATH])dnl\nAC_REQUIRE([LT_SYS_DLSEARCH_PATH])dnl\nAC_REQUIRE([LT_LIB_DLLOAD])dnl\nAC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl\nAC_REQUIRE([LT_FUNC_DLSYM_USCORE])dnl\nAC_REQUIRE([LT_SYS_DLOPEN_DEPLIBS])dnl\nAC_REQUIRE([LT_FUNC_ARGZ])dnl\n\nm4_require([_LT_CHECK_OBJDIR])dnl\nm4_require([_LT_HEADER_DLFCN])dnl\nm4_require([_LT_CHECK_DLPREOPEN])dnl\nm4_require([_LT_DECL_SED])dnl\n\ndnl Don't require this, or it will be expanded earlier than the code\ndnl that sets the variables it relies on:\n_LT_ENABLE_INSTALL\n\ndnl _LTDL_MODE specific code must be called at least once:\n_LTDL_MODE_DISPATCH\n\n# In order that ltdl.c can compile, find out the first AC_CONFIG_HEADERS\n# the user used.  This is so that ltdl.h can pick up the parent projects\n# config.h file, The first file in AC_CONFIG_HEADERS must contain the\n# definitions required by ltdl.c.\n# FIXME: Remove use of undocumented AC_LIST_HEADERS (2.59 compatibility).\nAC_CONFIG_COMMANDS_PRE([dnl\nm4_pattern_allow([^LT_CONFIG_H$])dnl\nm4_ifset([AH_HEADER],\n    [LT_CONFIG_H=AH_HEADER],\n    [m4_ifset([AC_LIST_HEADERS],\n\t    [LT_CONFIG_H=`echo \"AC_LIST_HEADERS\" | $SED 's|^[[      ]]*||;s|[[ :]].*$||'`],\n\t[])])])\nAC_SUBST([LT_CONFIG_H])\n\nAC_CHECK_HEADERS([unistd.h dl.h sys/dl.h dld.h mach-o/dyld.h dirent.h],\n\t[], [], [AC_INCLUDES_DEFAULT])\n\nAC_CHECK_FUNCS([closedir opendir readdir], [], [AC_LIBOBJ([lt__dirent])])\nAC_CHECK_FUNCS([strlcat strlcpy], [], [AC_LIBOBJ([lt__strl])])\n\nm4_pattern_allow([LT_LIBEXT])dnl\nAC_DEFINE_UNQUOTED([LT_LIBEXT],[\"$libext\"],[The archive extension])\n\nname=\neval \"lt_libprefix=\\\"$libname_spec\\\"\"\nm4_pattern_allow([LT_LIBPREFIX])dnl\nAC_DEFINE_UNQUOTED([LT_LIBPREFIX],[\"$lt_libprefix\"],[The archive prefix])\n\nname=ltdl\neval \"LTDLOPEN=\\\"$libname_spec\\\"\"\nAC_SUBST([LTDLOPEN])\n])# _LTDL_SETUP\n\n\n# _LT_ENABLE_INSTALL\n# ------------------\nm4_define([_LT_ENABLE_INSTALL],\n[AC_ARG_ENABLE([ltdl-install],\n    [AS_HELP_STRING([--enable-ltdl-install], [install libltdl])])\n\ncase ,$enable_ltdl_install,$enable_ltdl_convenience in\n  *yes*) ;;\n  *) enable_ltdl_convenience=yes ;;\nesac\n\nm4_ifdef([AM_CONDITIONAL],\n[AM_CONDITIONAL(INSTALL_LTDL, test no != \"${enable_ltdl_install-no}\")\n AM_CONDITIONAL(CONVENIENCE_LTDL, test no != \"${enable_ltdl_convenience-no}\")])\n])# _LT_ENABLE_INSTALL\n\n\n# LT_SYS_DLOPEN_DEPLIBS\n# ---------------------\nAC_DEFUN([LT_SYS_DLOPEN_DEPLIBS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_CACHE_CHECK([whether deplibs are loaded by dlopen],\n  [lt_cv_sys_dlopen_deplibs],\n  [# PORTME does your system automatically load deplibs for dlopen?\n  # or its logical equivalent (e.g. shl_load for HP-UX < 11)\n  # For now, we just catch OSes we know something about -- in the\n  # future, we'll try test this programmatically.\n  lt_cv_sys_dlopen_deplibs=unknown\n  case $host_os in\n  aix3*|aix4.1.*|aix4.2.*)\n    # Unknown whether this is true for these versions of AIX, but\n    # we want this 'case' here to explicitly catch those versions.\n    lt_cv_sys_dlopen_deplibs=unknown\n    ;;\n  aix[[4-9]]*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  amigaos*)\n    case $host_cpu in\n    powerpc)\n      lt_cv_sys_dlopen_deplibs=no\n      ;;\n    esac\n    ;;\n  bitrig*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  darwin*)\n    # Assuming the user has installed a libdl from somewhere, this is true\n    # If you are looking for one http://www.opendarwin.org/projects/dlcompat\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  freebsd* | dragonfly*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  gnu* | linux* | k*bsd*-gnu | kopensolaris*-gnu)\n    # GNU and its variants, using gnu ld.so (Glibc)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  hpux10*|hpux11*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  interix*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  irix[[12345]]*|irix6.[[01]]*)\n    # Catch all versions of IRIX before 6.2, and indicate that we don't\n    # know how it worked for any of those versions.\n    lt_cv_sys_dlopen_deplibs=unknown\n    ;;\n  irix*)\n    # The case above catches anything before 6.2, and it's known that\n    # at 6.2 and later dlopen does load deplibs.\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  netbsd*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  openbsd*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  osf[[1234]]*)\n    # dlopen did load deplibs (at least at 4.x), but until the 5.x series,\n    # it did *not* use an RPATH in a shared library to find objects the\n    # library depends on, so we explicitly say 'no'.\n    lt_cv_sys_dlopen_deplibs=no\n    ;;\n  osf5.0|osf5.0a|osf5.1)\n    # dlopen *does* load deplibs and with the right loader patch applied\n    # it even uses RPATH in a shared library to search for shared objects\n    # that the library depends on, but there's no easy way to know if that\n    # patch is installed.  Since this is the case, all we can really\n    # say is unknown -- it depends on the patch being installed.  If\n    # it is, this changes to 'yes'.  Without it, it would be 'no'.\n    lt_cv_sys_dlopen_deplibs=unknown\n    ;;\n  osf*)\n    # the two cases above should catch all versions of osf <= 5.1.  Read\n    # the comments above for what we know about them.\n    # At > 5.1, deplibs are loaded *and* any RPATH in a shared library\n    # is used to find them so we can finally say 'yes'.\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  qnx*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  solaris*)\n    lt_cv_sys_dlopen_deplibs=yes\n    ;;\n  sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n    libltdl_cv_sys_dlopen_deplibs=yes\n    ;;\n  esac\n  ])\nif test yes != \"$lt_cv_sys_dlopen_deplibs\"; then\n AC_DEFINE([LTDL_DLOPEN_DEPLIBS], [1],\n    [Define if the OS needs help to load dependent libraries for dlopen().])\nfi\n])# LT_SYS_DLOPEN_DEPLIBS\n\n# Old name:\nAU_ALIAS([AC_LTDL_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [])\n\n\n# LT_SYS_MODULE_EXT\n# -----------------\nAC_DEFUN([LT_SYS_MODULE_EXT],\n[m4_require([_LT_SYS_DYNAMIC_LINKER])dnl\nAC_CACHE_CHECK([what extension is used for runtime loadable modules],\n  [libltdl_cv_shlibext],\n[\nmodule=yes\neval libltdl_cv_shlibext=$shrext_cmds\nmodule=no\neval libltdl_cv_shrext=$shrext_cmds\n  ])\nif test -n \"$libltdl_cv_shlibext\"; then\n  m4_pattern_allow([LT_MODULE_EXT])dnl\n  AC_DEFINE_UNQUOTED([LT_MODULE_EXT], [\"$libltdl_cv_shlibext\"],\n    [Define to the extension used for runtime loadable modules, say, \".so\".])\nfi\nif test \"$libltdl_cv_shrext\" != \"$libltdl_cv_shlibext\"; then\n  m4_pattern_allow([LT_SHARED_EXT])dnl\n  AC_DEFINE_UNQUOTED([LT_SHARED_EXT], [\"$libltdl_cv_shrext\"],\n    [Define to the shared library suffix, say, \".dylib\".])\nfi\nif test -n \"$shared_archive_member_spec\"; then\n  m4_pattern_allow([LT_SHARED_LIB_MEMBER])dnl\n  AC_DEFINE_UNQUOTED([LT_SHARED_LIB_MEMBER], [\"($shared_archive_member_spec.o)\"],\n    [Define to the shared archive member specification, say \"(shr.o)\".])\nfi\n])# LT_SYS_MODULE_EXT\n\n# Old name:\nAU_ALIAS([AC_LTDL_SHLIBEXT], [LT_SYS_MODULE_EXT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SHLIBEXT], [])\n\n\n# LT_SYS_MODULE_PATH\n# ------------------\nAC_DEFUN([LT_SYS_MODULE_PATH],\n[m4_require([_LT_SYS_DYNAMIC_LINKER])dnl\nAC_CACHE_CHECK([what variable specifies run-time module search path],\n  [lt_cv_module_path_var], [lt_cv_module_path_var=$shlibpath_var])\nif test -n \"$lt_cv_module_path_var\"; then\n  m4_pattern_allow([LT_MODULE_PATH_VAR])dnl\n  AC_DEFINE_UNQUOTED([LT_MODULE_PATH_VAR], [\"$lt_cv_module_path_var\"],\n    [Define to the name of the environment variable that determines the run-time module search path.])\nfi\n])# LT_SYS_MODULE_PATH\n\n# Old name:\nAU_ALIAS([AC_LTDL_SHLIBPATH], [LT_SYS_MODULE_PATH])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SHLIBPATH], [])\n\n\n# LT_SYS_DLSEARCH_PATH\n# --------------------\nAC_DEFUN([LT_SYS_DLSEARCH_PATH],\n[m4_require([_LT_SYS_DYNAMIC_LINKER])dnl\nAC_CACHE_CHECK([for the default library search path],\n  [lt_cv_sys_dlsearch_path],\n  [lt_cv_sys_dlsearch_path=$sys_lib_dlsearch_path_spec])\nif test -n \"$lt_cv_sys_dlsearch_path\"; then\n  sys_dlsearch_path=\n  for dir in $lt_cv_sys_dlsearch_path; do\n    if test -z \"$sys_dlsearch_path\"; then\n      sys_dlsearch_path=$dir\n    else\n      sys_dlsearch_path=$sys_dlsearch_path$PATH_SEPARATOR$dir\n    fi\n  done\n  m4_pattern_allow([LT_DLSEARCH_PATH])dnl\n  AC_DEFINE_UNQUOTED([LT_DLSEARCH_PATH], [\"$sys_dlsearch_path\"],\n    [Define to the system default library search path.])\nfi\n])# LT_SYS_DLSEARCH_PATH\n\n# Old name:\nAU_ALIAS([AC_LTDL_SYSSEARCHPATH], [LT_SYS_DLSEARCH_PATH])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SYSSEARCHPATH], [])\n\n\n# _LT_CHECK_DLPREOPEN\n# -------------------\nm4_defun([_LT_CHECK_DLPREOPEN],\n[m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nAC_CACHE_CHECK([whether libtool supports -dlopen/-dlpreopen],\n  [libltdl_cv_preloaded_symbols],\n  [if test -n \"$lt_cv_sys_global_symbol_pipe\"; then\n    libltdl_cv_preloaded_symbols=yes\n  else\n    libltdl_cv_preloaded_symbols=no\n  fi\n  ])\nif test yes = \"$libltdl_cv_preloaded_symbols\"; then\n  AC_DEFINE([HAVE_PRELOADED_SYMBOLS], [1],\n    [Define if libtool can extract symbol lists from object files.])\nfi\n])# _LT_CHECK_DLPREOPEN\n\n\n# LT_LIB_DLLOAD\n# -------------\nAC_DEFUN([LT_LIB_DLLOAD],\n[m4_pattern_allow([^LT_DLLOADERS$])\nLT_DLLOADERS=\nAC_SUBST([LT_DLLOADERS])\n\nAC_LANG_PUSH([C])\nlt_dlload_save_LIBS=$LIBS\n\nLIBADD_DLOPEN=\nAC_SEARCH_LIBS([dlopen], [dl],\n\t[AC_DEFINE([HAVE_LIBDL], [1],\n\t\t   [Define if you have the libdl library or equivalent.])\n\tif test \"$ac_cv_search_dlopen\" != \"none required\"; then\n\t  LIBADD_DLOPEN=-ldl\n\tfi\n\tlibltdl_cv_lib_dl_dlopen=yes\n\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la\"],\n    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#if HAVE_DLFCN_H\n#  include <dlfcn.h>\n#endif\n    ]], [[dlopen(0, 0);]])],\n\t    [AC_DEFINE([HAVE_LIBDL], [1],\n\t\t       [Define if you have the libdl library or equivalent.])\n\t    libltdl_cv_func_dlopen=yes\n\t    LT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la\"],\n\t[AC_CHECK_LIB([svld], [dlopen],\n\t\t[AC_DEFINE([HAVE_LIBDL], [1],\n\t\t\t [Define if you have the libdl library or equivalent.])\n\t        LIBADD_DLOPEN=-lsvld libltdl_cv_func_dlopen=yes\n\t\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la\"])])])\nif test yes = \"$libltdl_cv_func_dlopen\" || test yes = \"$libltdl_cv_lib_dl_dlopen\"\nthen\n  lt_save_LIBS=$LIBS\n  LIBS=\"$LIBS $LIBADD_DLOPEN\"\n  AC_CHECK_FUNCS([dlerror])\n  LIBS=$lt_save_LIBS\nfi\nAC_SUBST([LIBADD_DLOPEN])\n\nLIBADD_SHL_LOAD=\nAC_CHECK_FUNC([shl_load],\n\t[AC_DEFINE([HAVE_SHL_LOAD], [1],\n\t\t   [Define if you have the shl_load function.])\n\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la\"],\n    [AC_CHECK_LIB([dld], [shl_load],\n\t    [AC_DEFINE([HAVE_SHL_LOAD], [1],\n\t\t       [Define if you have the shl_load function.])\n\t    LT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la\"\n\t    LIBADD_SHL_LOAD=-ldld])])\nAC_SUBST([LIBADD_SHL_LOAD])\n\ncase $host_os in\ndarwin[[1567]].*)\n# We only want this for pre-Mac OS X 10.4.\n  AC_CHECK_FUNC([_dyld_func_lookup],\n\t[AC_DEFINE([HAVE_DYLD], [1],\n\t\t   [Define if you have the _dyld_func_lookup function.])\n\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dyld.la\"])\n  ;;\nbeos*)\n  LT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}load_add_on.la\"\n  ;;\ncygwin* | mingw* | pw32*)\n  AC_CHECK_DECLS([cygwin_conv_path], [], [], [[#include <sys/cygwin.h>]])\n  LT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}loadlibrary.la\"\n  ;;\nesac\n\nAC_CHECK_LIB([dld], [dld_link],\n\t[AC_DEFINE([HAVE_DLD], [1],\n\t\t   [Define if you have the GNU dld library.])\n\t\tLT_DLLOADERS=\"$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dld_link.la\"])\nAC_SUBST([LIBADD_DLD_LINK])\n\nm4_pattern_allow([^LT_DLPREOPEN$])\nLT_DLPREOPEN=\nif test -n \"$LT_DLLOADERS\"\nthen\n  for lt_loader in $LT_DLLOADERS; do\n    LT_DLPREOPEN=\"$LT_DLPREOPEN-dlpreopen $lt_loader \"\n  done\n  AC_DEFINE([HAVE_LIBDLLOADER], [1],\n            [Define if libdlloader will be built on this platform])\nfi\nAC_SUBST([LT_DLPREOPEN])\n\ndnl This isn't used anymore, but set it for backwards compatibility\nLIBADD_DL=\"$LIBADD_DLOPEN $LIBADD_SHL_LOAD\"\nAC_SUBST([LIBADD_DL])\n\nLIBS=$lt_dlload_save_LIBS\nAC_LANG_POP\n])# LT_LIB_DLLOAD\n\n# Old name:\nAU_ALIAS([AC_LTDL_DLLIB], [LT_LIB_DLLOAD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_DLLIB], [])\n\n\n# LT_SYS_SYMBOL_USCORE\n# --------------------\n# does the compiler prefix global symbols with an underscore?\nAC_DEFUN([LT_SYS_SYMBOL_USCORE],\n[m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nAC_CACHE_CHECK([for _ prefix in compiled symbols],\n  [lt_cv_sys_symbol_underscore],\n  [lt_cv_sys_symbol_underscore=no\n  cat > conftest.$ac_ext <<_LT_EOF\nvoid nm_test_func(){}\nint main(){nm_test_func;return 0;}\n_LT_EOF\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    ac_nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| $lt_cv_sys_global_symbol_pipe \\> $ac_nlist) && test -s \"$ac_nlist\"; then\n      # See whether the symbols have a leading underscore.\n      if grep '^. _nm_test_func' \"$ac_nlist\" >/dev/null; then\n        lt_cv_sys_symbol_underscore=yes\n      else\n        if grep '^. nm_test_func ' \"$ac_nlist\" >/dev/null; then\n\t  :\n        else\n\t  echo \"configure: cannot find nm_test_func in $ac_nlist\" >&AS_MESSAGE_LOG_FD\n        fi\n      fi\n    else\n      echo \"configure: cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"configure: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.c >&AS_MESSAGE_LOG_FD\n  fi\n  rm -rf conftest*\n  ])\n  sys_symbol_underscore=$lt_cv_sys_symbol_underscore\n  AC_SUBST([sys_symbol_underscore])\n])# LT_SYS_SYMBOL_USCORE\n\n# Old name:\nAU_ALIAS([AC_LTDL_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_SYMBOL_USCORE], [])\n\n\n# LT_FUNC_DLSYM_USCORE\n# --------------------\nAC_DEFUN([LT_FUNC_DLSYM_USCORE],\n[AC_REQUIRE([_LT_COMPILER_PIC])dnl\tfor lt_prog_compiler_wl\nAC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl\tfor lt_cv_sys_symbol_underscore\nAC_REQUIRE([LT_SYS_MODULE_EXT])dnl\tfor libltdl_cv_shlibext\nif test yes = \"$lt_cv_sys_symbol_underscore\"; then\n  if test yes = \"$libltdl_cv_func_dlopen\" || test yes = \"$libltdl_cv_lib_dl_dlopen\"; then\n    AC_CACHE_CHECK([whether we have to add an underscore for dlsym],\n      [libltdl_cv_need_uscore],\n      [libltdl_cv_need_uscore=unknown\n      dlsym_uscore_save_LIBS=$LIBS\n      LIBS=\"$LIBS $LIBADD_DLOPEN\"\n      libname=conftmod # stay within 8.3 filename limits!\n      cat >$libname.$ac_ext <<_LT_EOF\n[#line $LINENO \"configure\"\n#include \"confdefs.h\"\n/* When -fvisibility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\nint fnord () { return 42; }]\n_LT_EOF\n\n      # ltfn_module_cmds module_cmds\n      # Execute tilde-delimited MODULE_CMDS with environment primed for\n      # $module_cmds or $archive_cmds type content.\n      ltfn_module_cmds ()\n      {( # subshell avoids polluting parent global environment\n          module_cmds_save_ifs=$IFS; IFS='~'\n          for cmd in @S|@1; do\n            IFS=$module_cmds_save_ifs\n            libobjs=$libname.$ac_objext; lib=$libname$libltdl_cv_shlibext\n            rpath=/not-exists; soname=$libname$libltdl_cv_shlibext; output_objdir=.\n            major=; versuffix=; verstring=; deplibs=\n            ECHO=echo; wl=$lt_prog_compiler_wl; allow_undefined_flag=\n            eval $cmd\n          done\n          IFS=$module_cmds_save_ifs\n      )}\n\n      # Compile a loadable module using libtool macro expansion results.\n      $CC $pic_flag -c $libname.$ac_ext\n      ltfn_module_cmds \"${module_cmds:-$archive_cmds}\"\n\n      # Try to fetch fnord with dlsym().\n      libltdl_dlunknown=0; libltdl_dlnouscore=1; libltdl_dluscore=2\n      cat >conftest.$ac_ext <<_LT_EOF\n[#line $LINENO \"configure\"\n#include \"confdefs.h\"\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n#include <stdio.h>\n#ifndef RTLD_GLOBAL\n#  ifdef DL_GLOBAL\n#    define RTLD_GLOBAL DL_GLOBAL\n#  else\n#    define RTLD_GLOBAL 0\n#  endif\n#endif\n#ifndef RTLD_NOW\n#  ifdef DL_NOW\n#    define RTLD_NOW DL_NOW\n#  else\n#    define RTLD_NOW 0\n#  endif\n#endif\nint main () {\n  void *handle = dlopen (\"`pwd`/$libname$libltdl_cv_shlibext\", RTLD_GLOBAL|RTLD_NOW);\n  int status = $libltdl_dlunknown;\n  if (handle) {\n    if (dlsym (handle, \"fnord\"))\n      status = $libltdl_dlnouscore;\n    else {\n      if (dlsym (handle, \"_fnord\"))\n        status = $libltdl_dluscore;\n      else\n\tputs (dlerror ());\n    }\n    dlclose (handle);\n  } else\n    puts (dlerror ());\n  return status;\n}]\n_LT_EOF\n      if AC_TRY_EVAL(ac_link) && test -s \"conftest$ac_exeext\" 2>/dev/null; then\n        (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n        libltdl_status=$?\n        case x$libltdl_status in\n          x$libltdl_dlnouscore) libltdl_cv_need_uscore=no ;;\n\t  x$libltdl_dluscore) libltdl_cv_need_uscore=yes ;;\n\t  x*) libltdl_cv_need_uscore=unknown ;;\n        esac\n      fi\n      rm -rf conftest* $libname*\n      LIBS=$dlsym_uscore_save_LIBS\n    ])\n  fi\nfi\n\nif test yes = \"$libltdl_cv_need_uscore\"; then\n  AC_DEFINE([NEED_USCORE], [1],\n    [Define if dlsym() requires a leading underscore in symbol names.])\nfi\n])# LT_FUNC_DLSYM_USCORE\n\n# Old name:\nAU_ALIAS([AC_LTDL_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LTDL_DLSYM_USCORE], [])\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/gnulib/MODULES.html.sh": "#!/bin/sh\n#\n# Copyright (C) 2002-2019 Free Software Foundation, Inc.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <https://www.gnu.org/licenses/>.\n#\n\n# Usage: MODULES.html.sh [--git-urls] > MODULES.html\n\n# Extend the PATH so that gnulib-tool is found.\nPATH=`dirname \"$0\"`:$PATH; export PATH\n\nPOSIX2001_URL='http://www.opengroup.org/susv3'\nPOSIX2008_URL='http://www.opengroup.org/onlinepubs/9699919799'\n\nrepo_url_prefix=\nrepo_url_suffix=\nif test $# != 0; then\n  case \"$1\" in\n    --git-urls)\n      # Generate URLs to the official gnulib git repository.\n      repo_url_prefix='https://git.sv.gnu.org/gitweb/?p=gnulib.git;a=blob_plain;f='\n      repo_url_suffix=''\n      ;;\n  esac\nfi\n# For sed replacements: Escape the '&'.\nrepo_url_suffix_repl=`echo \"$repo_url_suffix\" | sed -e 's,[&],\\\\\\&,'`\n\nsed_lt='s,<,\\&lt;,g'\nsed_gt='s,>,\\&gt;,g'\nsed_escape_dot='s,\\.,\\\\.,g'\nsed_escape_slash='s,/,\\\\/,g'\ntrnl='\\012'\nsed_alt1='s,$,\\\\|,'\nsed_alt2='s,^\\\\|,\\\\(,'\nsed_alt3='s,\\\\|\\\\|$,\\\\),'\nposix_headers=`echo '\naio\narpa/inet\nassert\ncomplex\ncpio\nctype\ndirent\ndlfcn\nerrno\nfcntl\nfenv\nfloat\nfmtmsg\nfnmatch\nftw\nglob\ngrp\niconv\ninttypes\niso646\nlanginfo\nlibgen\nlimits\nlocale\nmath\nmonetary\nmqueue\nndbm\nnet/if\nnetdb\nnetinet/in\nnetinet/tcp\nnl_types\npoll\npthread\npwd\nregex\nsched\nsearch\nsemaphore\nsetjmp\nsignal\nspawn\nstdarg\nstdbool\nstddef\nstdint\nstdio\nstdlib\nstring\nstrings\nstropts\nsys/ipc\nsys/mman\nsys/msg\nsys/resource\nsys/select\nsys/sem\nsys/shm\nsys/socket\nsys/stat\nsys/statvfs\nsys/time\nsys/times\nsys/types\nsys/uio\nsys/un\nsys/utsname\nsys/wait\nsyslog\ntar\ntermios\ntgmath\ntime\ntrace\nulimit\nunistd\nutime\nutmpx\nwchar\nwctype\nwordexp\n' | sed -e \"$sed_alt1\" | tr -d \"$trnl\" | sed -e \"$sed_alt2\" -e \"$sed_alt3\"`\nposix2001_headers=`echo '\nsys/timeb\nucontext\n' | sed -e \"$sed_alt1\" | tr -d \"$trnl\" | sed -e \"$sed_alt2\" -e \"$sed_alt3\"`\nposix_functions=`echo '\nFD_CLR\nFD_ISSET\nFD_SET\nFD_ZERO\n_Exit\n_exit\n_longjmp\n_setjmp\n_tolower\n_toupper\na64l\nabort\nabs\naccept\naccess\nacos\nacosf\nacosh\nacoshf\nacoshl\nacosl\naio_cancel\naio_error\naio_fsync\naio_read\naio_return\naio_suspend\naio_write\nalarm\nalphasort\nasctime\nasctime_r\nasin\nasinf\nasinh\nasinhf\nasinhl\nasinl\nassert\natan\natan2\natan2f\natan2l\natanf\natanh\natanhf\natanhl\natanl\natexit\natof\natoi\natol\natoll\nbasename\nbind\nbsearch\nbtowc\ncabs\ncabsf\ncabsl\ncacos\ncacosf\ncacosh\ncacoshf\ncacoshl\ncacosl\ncalloc\ncarg\ncargf\ncargl\ncasin\ncasinf\ncasinh\ncasinhf\ncasinhl\ncasinl\ncatan\ncatanf\ncatanh\ncatanhf\ncatanhl\ncatanl\ncatclose\ncatgets\ncatopen\ncbrt\ncbrtf\ncbrtl\nccos\nccosf\nccosh\nccoshf\nccoshl\nccosl\nceil\nceilf\nceill\ncexp\ncexpf\ncexpl\ncfgetispeed\ncfgetospeed\ncfsetispeed\ncfsetospeed\nchdir\nchmod\nchown\ncimag\ncimagf\ncimagl\nclearerr\nclock\nclock_getcpuclockid\nclock_getres\nclock_gettime\nclock_nanosleep\nclock_settime\nclog\nclogf\nclogl\nclose\nclosedir\ncloselog\nconfstr\nconj\nconjf\nconjl\nconnect\ncopysign\ncopysignf\ncopysignl\ncos\ncosf\ncosh\ncoshf\ncoshl\ncosl\ncpow\ncpowf\ncpowl\ncproj\ncprojf\ncprojl\ncreal\ncrealf\ncreall\ncreat\ncrypt\ncsin\ncsinf\ncsinh\ncsinhf\ncsinhl\ncsinl\ncsqrt\ncsqrtf\ncsqrtl\nctan\nctanf\nctanh\nctanhf\nctanhl\nctanl\nctermid\nctime\nctime_r\ndaylight\ndbm_clearerr\ndbm_close\ndbm_delete\ndbm_error\ndbm_fetch\ndbm_firstkey\ndbm_nextkey\ndbm_open\ndbm_store\ndifftime\ndirfd\ndirname\ndiv\ndlclose\ndlerror\ndlopen\ndlsym\ndprintf\ndrand48\ndup\ndup2\nduplocale\nencrypt\nendgrent\nendhostent\nendnetent\nendprotoent\nendpwent\nendservent\nendutxent\nenviron\nerand48\nerf\nerfc\nerfcf\nerfcl\nerff\nerfl\nerrno\nexecl\nexecle\nexeclp\nexecv\nexecve\nexecvp\nexit\nexp\nexp2\nexp2f\nexp2l\nexpf\nexpl\nexpm1\nexpm1f\nexpm1l\nfabs\nfabsf\nfabsl\nfaccessat\nfattach\nfchdir\nfchmod\nfchmodat\nfchown\nfchownat\nfclose\nfcntl\nfdatasync\nfdetach\nfdim\nfdimf\nfdiml\nfdopen\nfdopendir\nfeclearexcept\nfegetenv\nfegetexceptflag\nfegetround\nfeholdexcept\nfeof\nferaiseexcept\nferror\nfesetenv\nfesetexceptflag\nfesetround\nfetestexcept\nfeupdateenv\nfexecve\nfflush\nffs\nfgetc\nfgetpos\nfgets\nfgetwc\nfgetws\nfileno\nflock\nflockfile\nfloor\nfloorf\nfloorl\nfma\nfmaf\nfmal\nfmax\nfmaxf\nfmaxl\nfmemopen\nfmin\nfminf\nfminl\nfmod\nfmodf\nfmodl\nfmtmsg\nfnmatch\nfopen\nfork\nfpathconf\nfpclassify\nfprintf\nfputc\nfputs\nfputwc\nfputws\nfread\nfree\nfreeaddrinfo\nfreelocale\nfreopen\nfrexp\nfrexpf\nfrexpl\nfscanf\nfseek\nfseeko\nfsetpos\nfstat\nfstatat\nfstatvfs\nfsync\nftell\nftello\nftok\nftruncate\nftrylockfile\nftw\nfunlockfile\nfutimens\nfwide\nfwprintf\nfwrite\nfwscanf\ngai_strerror\ngetaddrinfo\ngetc\ngetc_unlocked\ngetchar\ngetchar_unlocked\ngetcwd\ngetdate\ngetdate_err\ngetdelim\ngetegid\ngetenv\ngeteuid\ngetgid\ngetgrent\ngetgrgid\ngetgrgid_r\ngetgrnam\ngetgrnam_r\ngetgroups\ngethostent\ngethostid\ngethostname\ngetitimer\ngetline\ngetlogin\ngetlogin_r\ngetmsg\ngetnameinfo\ngetnetbyaddr\ngetnetbyname\ngetnetent\ngetopt\ngetpeername\ngetpgid\ngetpgrp\ngetpid\ngetpmsg\ngetppid\ngetpriority\ngetprotobyname\ngetprotobynumber\ngetprotoent\ngetpwent\ngetpwnam\ngetpwnam_r\ngetpwuid\ngetpwuid_r\ngetrlimit\ngetrusage\ngets\ngetservbyname\ngetservbyport\ngetservent\ngetsid\ngetsockname\ngetsockopt\ngetsubopt\ngettimeofday\ngetuid\ngetutxent\ngetutxid\ngetutxline\ngetwc\ngetwchar\nglob\nglobfree\ngmtime\ngmtime_r\ngrantpt\nhcreate\nhdestroy\nhsearch\nhtonl\nhtons\nhypot\nhypotf\nhypotl\niconv\niconv_close\niconv_open\nif_freenameindex\nif_indextoname\nif_nameindex\nif_nametoindex\nilogb\nilogbf\nilogbl\nimaxabs\nimaxdiv\ninet_addr\ninet_ntoa\ninet_ntop\ninet_pton\ninitstate\ninsque\nioctl\nisalnum\nisalnum_l\nisalpha\nisalpha_l\nisascii\nisastream\nisatty\nisblank\nisblank_l\niscntrl\niscntrl_l\nisdigit\nisdigit_l\nisfinite\nisgraph\nisgraph_l\nisgreater\nisgreaterequal\nisinf\nisless\nislessequal\nislessgreater\nislower\nislower_l\nisnan\nisnormal\nisprint\nisprint_l\nispunct\nispunct_l\nisspace\nisspace_l\nisunordered\nisupper\nisupper_l\niswalnum\niswalnum_l\niswalpha\niswalpha_l\niswblank\niswblank_l\niswcntrl\niswcntrl_l\niswctype\niswctype_l\niswdigit\niswdigit_l\niswgraph\niswgraph_l\niswlower\niswlower_l\niswprint\niswprint_l\niswpunct\niswpunct_l\niswspace\niswspace_l\niswupper\niswupper_l\niswxdigit\niswxdigit_l\nisxdigit\nisxdigit_l\nj0\nj1\njn\njrand48\nkill\nkillpg\nl64a\nlabs\nlchown\nlcong48\nldexp\nldexpf\nldexpl\nldiv\nlfind\nlgamma\nlgammaf\nlgammal\nlink\nlinkat\nlio_listio\nlisten\nllabs\nlldiv\nllrint\nllrintf\nllrintl\nllround\nllroundf\nllroundl\nlocaleconv\nlocaltime\nlocaltime_r\nlockf\nlog\nlog10\nlog10f\nlog10l\nlog1p\nlog1pf\nlog1pl\nlog2\nlog2f\nlog2l\nlogb\nlogbf\nlogbl\nlogf\nlogl\nlongjmp\nlrand48\nlrint\nlrintf\nlrintl\nlround\nlroundf\nlroundl\nlsearch\nlseek\nlstat\nmalloc\nmblen\nmbrlen\nmbrtowc\nmbsinit\nmbsnrtowcs\nmbsrtowcs\nmbstowcs\nmbtowc\nmemccpy\nmemchr\nmemcmp\nmemcpy\nmemmove\nmemset\nmkdir\nmkdirat\nmkdtemp\nmkfifo\nmkfifoat\nmknod\nmknodat\nmkstemp\nmktime\nmlock\nmlockall\nmmap\nmodf\nmodff\nmodfl\nmprotect\nmq_close\nmq_getattr\nmq_notify\nmq_open\nmq_receive\nmq_send\nmq_setattr\nmq_timedreceive\nmq_timedsend\nmq_unlink\nmrand48\nmsgctl\nmsgget\nmsgrcv\nmsgsnd\nmsync\nmunlock\nmunlockall\nmunmap\nnan\nnanf\nnanl\nnanosleep\nnearbyint\nnearbyintf\nnearbyintl\nnewlocale\nnextafter\nnextafterf\nnextafterl\nnexttoward\nnexttowardf\nnexttowardl\nnftw\nnice\nnl_langinfo\nnl_langinfo_l\nnrand48\nntohl\nntohs\nopen\nopen_memstream\nopen_wmemstream\nopenat\nopendir\nopenlog\noptarg\nopterr\noptind\noptopt\npathconf\npause\npclose\nperror\npipe\npoll\npopen\nposix_fadvise\nposix_fallocate\nposix_madvise\nposix_mem_offset\nposix_memalign\nposix_openpt\nposix_spawn\nposix_spawn_file_actions_addclose\nposix_spawn_file_actions_adddup2\nposix_spawn_file_actions_addopen\nposix_spawn_file_actions_destroy\nposix_spawn_file_actions_init\nposix_spawnattr_destroy\nposix_spawnattr_getflags\nposix_spawnattr_getpgroup\nposix_spawnattr_getschedparam\nposix_spawnattr_getschedpolicy\nposix_spawnattr_getsigdefault\nposix_spawnattr_getsigmask\nposix_spawnattr_init\nposix_spawnattr_setflags\nposix_spawnattr_setpgroup\nposix_spawnattr_setschedparam\nposix_spawnattr_setschedpolicy\nposix_spawnattr_setsigdefault\nposix_spawnattr_setsigmask\nposix_spawnp\nposix_trace_attr_destroy\nposix_trace_attr_getclockres\nposix_trace_attr_getcreatetime\nposix_trace_attr_getgenversion\nposix_trace_attr_getinherited\nposix_trace_attr_getlogfullpolicy\nposix_trace_attr_getlogsize\nposix_trace_attr_getmaxdatasize\nposix_trace_attr_getmaxsystemeventsize\nposix_trace_attr_getmaxusereventsize\nposix_trace_attr_getname\nposix_trace_attr_getstreamfullpolicy\nposix_trace_attr_getstreamsize\nposix_trace_attr_init\nposix_trace_attr_setinherited\nposix_trace_attr_setlogfullpolicy\nposix_trace_attr_setlogsize\nposix_trace_attr_setmaxdatasize\nposix_trace_attr_setname\nposix_trace_attr_setstreamfullpolicy\nposix_trace_attr_setstreamsize\nposix_trace_clear\nposix_trace_close\nposix_trace_create\nposix_trace_create_withlog\nposix_trace_event\nposix_trace_eventid_equal\nposix_trace_eventid_get_name\nposix_trace_eventid_open\nposix_trace_eventset_add\nposix_trace_eventset_del\nposix_trace_eventset_empty\nposix_trace_eventset_fill\nposix_trace_eventset_ismember\nposix_trace_eventtypelist_getnext_id\nposix_trace_eventtypelist_rewind\nposix_trace_flush\nposix_trace_get_attr\nposix_trace_get_filter\nposix_trace_get_status\nposix_trace_getnext_event\nposix_trace_open\nposix_trace_rewind\nposix_trace_set_filter\nposix_trace_shutdown\nposix_trace_start\nposix_trace_stop\nposix_trace_timedgetnext_event\nposix_trace_trid_eventid_open\nposix_trace_trygetnext_event\nposix_typed_mem_get_info\nposix_typed_mem_open\npow\npowf\npowl\npread\nprintf\npselect\npsiginfo\npsignal\npthread_atfork\npthread_attr_destroy\npthread_attr_getdetachstate\npthread_attr_getguardsize\npthread_attr_getinheritsched\npthread_attr_getschedparam\npthread_attr_getschedpolicy\npthread_attr_getscope\npthread_attr_getstack\npthread_attr_getstacksize\npthread_attr_init\npthread_attr_setdetachstate\npthread_attr_setguardsize\npthread_attr_setinheritsched\npthread_attr_setschedparam\npthread_attr_setschedpolicy\npthread_attr_setscope\npthread_attr_setstack\npthread_attr_setstacksize\npthread_barrier_destroy\npthread_barrier_init\npthread_barrier_wait\npthread_barrierattr_destroy\npthread_barrierattr_getpshared\npthread_barrierattr_init\npthread_barrierattr_setpshared\npthread_cancel\npthread_cleanup_pop\npthread_cleanup_push\npthread_cond_broadcast\npthread_cond_destroy\npthread_cond_init\npthread_cond_signal\npthread_cond_timedwait\npthread_cond_wait\npthread_condattr_destroy\npthread_condattr_getclock\npthread_condattr_getpshared\npthread_condattr_init\npthread_condattr_setclock\npthread_condattr_setpshared\npthread_create\npthread_detach\npthread_equal\npthread_exit\npthread_getconcurrency\npthread_getcpuclockid\npthread_getschedparam\npthread_getspecific\npthread_join\npthread_key_create\npthread_key_delete\npthread_kill\npthread_mutex_consistent\npthread_mutex_destroy\npthread_mutex_getprioceiling\npthread_mutex_init\npthread_mutex_lock\npthread_mutex_setprioceiling\npthread_mutex_timedlock\npthread_mutex_trylock\npthread_mutex_unlock\npthread_mutexattr_destroy\npthread_mutexattr_getprioceiling\npthread_mutexattr_getprotocol\npthread_mutexattr_getpshared\npthread_mutexattr_getrobust\npthread_mutexattr_gettype\npthread_mutexattr_init\npthread_mutexattr_setprioceiling\npthread_mutexattr_setprotocol\npthread_mutexattr_setpshared\npthread_mutexattr_setrobust\npthread_mutexattr_settype\npthread_once\npthread_rwlock_destroy\npthread_rwlock_init\npthread_rwlock_rdlock\npthread_rwlock_timedrdlock\npthread_rwlock_timedwrlock\npthread_rwlock_tryrdlock\npthread_rwlock_trywrlock\npthread_rwlock_unlock\npthread_rwlock_wrlock\npthread_rwlockattr_destroy\npthread_rwlockattr_getpshared\npthread_rwlockattr_init\npthread_rwlockattr_setpshared\npthread_self\npthread_setcancelstate\npthread_setcanceltype\npthread_setconcurrency\npthread_setschedparam\npthread_setschedprio\npthread_setspecific\npthread_sigmask\npthread_spin_destroy\npthread_spin_init\npthread_spin_lock\npthread_spin_trylock\npthread_spin_unlock\npthread_testcancel\nptsname\nputc\nputc_unlocked\nputchar\nputchar_unlocked\nputenv\nputmsg\nputpmsg\nputs\npututxline\nputwc\nputwchar\npwrite\nqsort\nraise\nrand\nrand_r\nrandom\nread\nreaddir\nreaddir_r\nreadlink\nreadlinkat\nreadv\nrealloc\nrealpath\nrecv\nrecvfrom\nrecvmsg\nregcomp\nregerror\nregexec\nregfree\nremainder\nremainderf\nremainderl\nremove\nremque\nremquo\nremquof\nremquol\nrename\nrenameat\nrewind\nrewinddir\nrint\nrintf\nrintl\nrmdir\nround\nroundf\nroundl\nscalbln\nscalblnf\nscalblnl\nscalbn\nscalbnf\nscalbnl\nscandir\nscanf\nsched_get_priority_max\nsched_get_priority_min\nsched_getparam\nsched_getscheduler\nsched_rr_get_interval\nsched_setparam\nsched_setscheduler\nsched_yield\nseed48\nseekdir\nselect\nsem_close\nsem_destroy\nsem_getvalue\nsem_init\nsem_open\nsem_post\nsem_timedwait\nsem_trywait\nsem_unlink\nsem_wait\nsemctl\nsemget\nsemop\nsend\nsendmsg\nsendto\nsetbuf\nsetegid\nsetenv\nseteuid\nsetgid\nsetgrent\nsethostent\nsetitimer\nsetjmp\nsetkey\nsetlocale\nsetlogmask\nsetnetent\nsetpgid\nsetpgrp\nsetpriority\nsetprotoent\nsetpwent\nsetregid\nsetreuid\nsetrlimit\nsetservent\nsetsid\nsetsockopt\nsetstate\nsetuid\nsetutxent\nsetvbuf\nshm_open\nshm_unlink\nshmat\nshmctl\nshmdt\nshmget\nshutdown\nsigaction\nsigaddset\nsigaltstack\nsigdelset\nsigemptyset\nsigfillset\nsighold\nsigignore\nsiginterrupt\nsigismember\nsiglongjmp\nsignal\nsignbit\nsigngam\nsigpause\nsigpending\nsigprocmask\nsigqueue\nsigrelse\nsigset\nsigsetjmp\nsigsuspend\nsigtimedwait\nsigwait\nsigwaitinfo\nsin\nsinf\nsinh\nsinhf\nsinhl\nsinl\nsleep\nsnprintf\nsockatmark\nsocket\nsocketpair\nsprintf\nsqrt\nsqrtf\nsqrtl\nsrand\nsrand48\nsrandom\nsscanf\nstat\nstatvfs\nstderr\nstdin\nstdout\nstpcpy\nstpncpy\nstrcasecmp\nstrcasecmp_l\nstrcat\nstrchr\nstrcmp\nstrcoll\nstrcoll_l\nstrcpy\nstrcspn\nstrdup\nstrerror\nstrerror_l\nstrerror_r\nstrfmon\nstrfmon_l\nstrftime\nstrftime_l\nstrlen\nstrncasecmp\nstrncasecmp_l\nstrncat\nstrncmp\nstrncpy\nstrndup\nstrnlen\nstrpbrk\nstrptime\nstrrchr\nstrsignal\nstrspn\nstrstr\nstrtod\nstrtof\nstrtoimax\nstrtok\nstrtok_r\nstrtol\nstrtold\nstrtoll\nstrtoul\nstrtoull\nstrtoumax\nstrxfrm\nstrxfrm_l\nswab\nswprintf\nswscanf\nsymlink\nsymlinkat\nsync\nsysconf\nsyslog\nsystem\ntan\ntanf\ntanh\ntanhf\ntanhl\ntanl\ntcdrain\ntcflow\ntcflush\ntcgetattr\ntcgetpgrp\ntcgetsid\ntcsendbreak\ntcsetattr\ntcsetpgrp\ntdelete\ntelldir\ntempnam\ntfind\ntgamma\ntgammaf\ntgammal\ntime\ntimer_create\ntimer_delete\ntimer_getoverrun\ntimer_gettime\ntimer_settime\ntimes\ntimezone\ntmpfile\ntmpnam\ntoascii\ntolower\ntolower_l\ntoupper\ntoupper_l\ntowctrans\ntowctrans_l\ntowlower\ntowlower_l\ntowupper\ntowupper_l\ntrunc\ntruncate\ntruncf\ntruncl\ntsearch\nttyname\nttyname_r\ntwalk\ntzname\ntzset\nulimit\numask\nuname\nungetc\nungetwc\nunlink\nunlinkat\nunlockpt\nunsetenv\nuselocale\nutime\nutimensat\nutimes\nva_arg\nva_copy\nva_end\nva_start\nvdprintf\nvfprintf\nvfscanf\nvfwprintf\nvfwscanf\nvprintf\nvscanf\nvsnprintf\nvsprintf\nvsscanf\nvswprintf\nvswscanf\nvwprintf\nvwscanf\nwait\nwaitid\nwaitpid\nwcpcpy\nwcpncpy\nwcrtomb\nwcscasecmp\nwcscasecmp_l\nwcscat\nwcschr\nwcscmp\nwcscoll\nwcscoll_l\nwcscpy\nwcscspn\nwcsdup\nwcsftime\nwcslen\nwcsncasecmp\nwcsncasecmp_l\nwcsncat\nwcsncmp\nwcsncpy\nwcsnlen\nwcsnrtombs\nwcspbrk\nwcsrchr\nwcsrtombs\nwcsspn\nwcsstr\nwcstod\nwcstof\nwcstoimax\nwcstok\nwcstol\nwcstold\nwcstoll\nwcstombs\nwcstoul\nwcstoull\nwcstoumax\nwcswidth\nwcsxfrm\nwcsxfrm_l\nwctob\nwctomb\nwctrans\nwctrans_l\nwctype\nwctype_l\nwcwidth\nwmemchr\nwmemcmp\nwmemcpy\nwmemmove\nwmemset\nwordexp\nwordfree\nwprintf\nwrite\nwritev\nwscanf\ny0\ny1\nyn\n' | sed -e \"$sed_alt1\" | tr -d \"$trnl\" | sed -e \"$sed_alt2\" -e \"$sed_alt3\"`\nposix2001_functions=`echo '\nbcmp\nbcopy\nbsd_signal\nbzero\necvt\nfcvt\nftime\ngcvt\ngetcontext\ngethostbyaddr\ngethostbyname\ngetwd\nh_errno\nindex\nmakecontext\nmktemp\npread\npthread_attr_getstackaddr\npthread_attr_setstackaddr\nrindex\nscalb\nsetcontext\nswapcontext\nualarm\nusleep\nvfork\nwcswcs\n' | sed -e \"$sed_alt1\" | tr -d \"$trnl\" | sed -e \"$sed_alt2\" -e \"$sed_alt3\"`\n\nindent=\"\"\nseen_modules=\nseen_files=\n\n# func_exit STATUS\n# exit with status\nfunc_exit ()\n{\n  (exit $1); exit $1\n}\n\n# func_tmpdir\n# creates a temporary directory.\n# Sets variable\n# - tmp             pathname of freshly created temporary directory\nfunc_tmpdir ()\n{\n  # Use the environment variable TMPDIR, falling back to /tmp. This allows\n  # users to specify a different temporary directory, for example, if their\n  # /tmp is filled up or too small.\n  : ${TMPDIR=/tmp}\n  {\n    # Use the mktemp program if available. If not available, hide the error\n    # message.\n    tmp=`(umask 077 && mktemp -d \"$TMPDIR/MDXXXXXX\") 2>/dev/null` &&\n    test -n \"$tmp\" && test -d \"$tmp\"\n  } ||\n  {\n    # Use a simple mkdir command. It is guaranteed to fail if the directory\n    # already exists.  $RANDOM is bash specific and expands to empty in shells\n    # other than bash, ksh and zsh.  Its use does not increase security;\n    # rather, it minimizes the probability of failure in a very cluttered /tmp\n    # directory.\n    tmp=$TMPDIR/MD$$-$RANDOM\n    (umask 077 && mkdir \"$tmp\")\n  } ||\n  {\n    echo \"$0: cannot create a temporary directory in $TMPDIR\" >&2\n    func_exit 1\n  }\n}\n\n# func_append var value\n# appends the given value to the shell variable var.\nif ( foo=bar; foo+=baz && test \"$foo\" = barbaz ) >/dev/null 2>&1; then\n  # Use bash's += operator. It reduces complexity of appending repeatedly to\n  # a single variable from O(n^2) to O(n).\n  func_append ()\n  {\n    eval \"$1+=\\\"\\$2\\\"\"\n  }\nelse\n  func_append ()\n  {\n    eval \"$1=\\\"\\$$1\\$2\\\"\"\n  }\nfi\n\n# func_echo line\n# outputs line with indentation.\nfunc_echo ()\n{\n  echo \"${indent}$*\"\n}\n\n# func_indent\n# increases the indentation.\nfunc_indent ()\n{\n  indent=\"$indent  \"\n}\n\n# func_unindent\n# decreases the indentation.\nfunc_unindent ()\n{\n  indent=`echo \"$indent\" | sed -e 's/  $//'`\n}\n\n# func_begin tag [attribute...]\n# opens a HTML tag.\nfunc_begin ()\n{\n  func_echo \"<$*>\"\n  func_indent\n}\n\n# func_end tag\n# closes a HTML tag.\nfunc_end ()\n{\n  func_unindent\n  func_echo \"</$1>\"\n}\n\n# func_wrap tag [attribute...]\n# encloses $element in a HTML tag, without line breaks.\nfunc_wrap ()\n{\n  element=\"<$*>${element}</$1>\"\n}\n\n# func_section_wrap sectiontag\n# encloses $element in a HTML tag referring to the given tag.\nfunc_section_wrap ()\n{\n  if test -n \"$in_toc\"; then\n    func_wrap A \"HREF=\\\"#$1\\\"\"\n  else\n    func_wrap A \"NAME=\\\"$1\\\"\"\n  fi\n}\n\n# func_begin_table\nfunc_begin_table ()\n{\n  func_begin TABLE\n  if test -z \"$in_toc\"; then\n    func_begin TR\n    func_echo \"<TH ALIGN=LEFT>modules/\"\n    func_echo \"<TH ALIGN=LEFT>lib/\"\n    func_echo \"<TH ALIGN=LEFT>lib/\"\n    func_echo \"<TH ALIGN=LEFT>m4/\"\n    func_echo \"<TH ALIGN=LEFT>&nbsp;\"\n    func_end TR\n    func_begin TR\n    func_echo \"<TH ALIGN=LEFT>Module\"\n    func_echo \"<TH ALIGN=LEFT>Header\"\n    func_echo \"<TH ALIGN=LEFT>Implementation\"\n    func_echo \"<TH ALIGN=LEFT>Autoconf macro\"\n    func_echo \"<TH ALIGN=LEFT>Depends on\"\n    func_end TR\n  fi\n}\n\n# func_module module\nfunc_module ()\n{\n    sed_remove_trailing_empty_line='${\n/^$/d\n}'\n\n  if test -n \"$in_toc\"; then\n\n    func_begin TR \"WIDTH=\\\"100%\\\"\"\n\n    element='<A HREF=\"#module='$1'\">'$1'</A>'\n    func_echo \"<TD ALIGN=LEFT VALIGN=TOP WIDTH=\\\"20%\\\">$element\"\n\n    # Rendering the description:\n    # - Change the symbol() syntax as suitable for documentation, removing the\n    #   parentheses (as per GNU standards, section \"GNU Manuals\").\n    # - Flag the remaining symbol() constructs as errors.\n    # - Change 'xxx' to <CODE>xxx</CODE>.\n    sed_extract_element='\n      '$sed_lt'\n      '$sed_gt'\n      '$sed_remove_trailing_empty_line'\n      s,^, ,\n      s,$, ,\n      s,\\([^a-zA-Z_]\\)'$posix_functions'() \\(function\\|macro\\),\\1<A HREF=\"'$POSIX2008_URL'/functions/\\2.html\">\\2</A> \\3,g\n      s,\\([^a-zA-Z_]\\)'$posix_functions' \\(function\\|macro\\),\\1<A HREF=\"'$POSIX2008_URL'/functions/\\2.html\">\\2</A> \\3,g\n      s,\\([^a-zA-Z_]\\)'$posix_functions'(),\\1<A HREF=\"'$POSIX2008_URL'/functions/\\2.html\">\\2</A> <SPAN STYLE=\"color:#FF0000;\">what?? If you mean a function\\, please say so.</SPAN>,g\n      s,\\([^a-zA-Z_]\\)'$posix2001_functions'() \\(function\\|macro\\),\\1<A HREF=\"'$POSIX2001_URL'xsh/\\2.html\">\\2</A> \\3,g\n      s,\\([^a-zA-Z_]\\)'$posix2001_functions' \\(function\\|macro\\),\\1<A HREF=\"'$POSIX2001_URL'xsh/\\2.html\">\\2</A> \\3,g\n      s,\\([^a-zA-Z_]\\)'$posix2001_functions'(),\\1<A HREF=\"'$POSIX2001_URL'xsh/\\2.html\">\\2</A> <SPAN STYLE=\"color:#FF0000;\">what?? If you mean a function\\, please say so.</SPAN>,g\n      s,\\([^a-zA-Z_]\\)\\([a-zA-Z_][a-zA-Z0-9_]*\\)() \\(function\\|macro\\),\\1\\2 \\3,g\n      s,\\([^a-zA-Z_]\\)\\([a-zA-Z_][a-zA-Z0-9_]*\\)(),\\1\\2 <SPAN STYLE=\"color:#FF0000;\">what?? If you mean a function\\, please say so.</SPAN>,g\n      s, '\"'\"'\\([a-zA-Z0-9_ -]*\\)'\"'\"'\\([^a-zA-Z0-9_]\\), <CODE>\\1</CODE>\\2,g\n      s,^ ,,\n      s, $,,\n    '\n    element=`gnulib-tool --extract-description $1 \\\n             | LC_ALL=C sed -e \"$sed_extract_element\"`\n    func_echo \"<TD ALIGN=LEFT VALIGN=TOP WIDTH=\\\"80%\\\">$element\"\n\n    func_end TR\n\n  else\n\n    func_begin TR\n\n    element='<A NAME=\"module='$1'\"></A><A HREF=\"'$repo_url_prefix'modules/'$1$repo_url_suffix'\">'$1'</A>'\n    func_echo \"<TD ALIGN=LEFT VALIGN=TOP>$element\"\n\n    includes=`gnulib-tool --extract-include-directive $1`\n    files=`gnulib-tool --extract-filelist $1 \\\n           | grep -v '^m4/gnulib-common\\.m4$'`\n    sed_extract_element='\n      '$sed_lt'\n      '$sed_gt'\n      '$sed_remove_trailing_empty_line'\n      s,^#include \"\\(.*\\)\"$,#include \"<A HREF=\"'$repo_url_prefix'lib/\\1'$repo_url_suffix_repl'\">\\1</A>\",\n      s,^#include &lt;'$posix_headers'\\.h&gt;$,#include \\&lt;<A HREF=\"'$POSIX2008_URL'/basedefs/\\1.h.html\">\\1.h</A>\\&gt;,\n      s,<A HREF=\"'$POSIX2008_URL'/basedefs/\\([a-zA-Z0-9_]*\\)/\\([a-zA-Z0-9_]*\\)\\.h\\.html\">,<A HREF=\"'$POSIX2008_URL'/basedefs/\\1_\\2.h.html\">,\n      s,^#include &lt;'$posix2001_headers'\\.h&gt;$,#include \\&lt;<A HREF=\"'$POSIX2001_URL'xbd/\\1.h.html\">\\1.h</A>\\&gt;,\n      s/$/<BR>/\n    '\n    element=`echo \"$includes\" \\\n             | LC_ALL=C sed -e \"$sed_extract_element\" | tr -d \"$trnl\" \\\n             | sed -e 's/<BR>$//'`\n    test -n \"$element\" || element='---'\n    func_echo \"<TD ALIGN=LEFT VALIGN=TOP>$element\"\n\n    sed_choose_unconditional_nonstandard_include='s,^#include \"\\(.*\\)\"$,\\1,p'\n    includefile=`echo \"$includes\" \\\n                 | sed -n -e \"$sed_choose_unconditional_nonstandard_include\" \\\n                 | sed -e \"$sed_escape_dot\" | tr -d \"$trnl\"`\n    sed_choose_lib_files='s,^lib/\\(.*\\)$,\\1,p'\n    sed_extract_include='\n      \\|^'\"$includefile\"'$|d\n      s,^\\(.*\\)$,<A HREF=\"'$repo_url_prefix'lib/\\1'$repo_url_suffix_repl'\">\\1</A>,\n      s/$/<BR>/\n    '\n    element=`echo \"$files\" \\\n             | sed -e '/^$/d' \\\n             | sed -n -e \"$sed_choose_lib_files\" \\\n             | sed -e \"$sed_extract_include\" \\\n             | tr -d \"$trnl\" | sed -e 's/<BR>$//'`\n    test -n \"$element\" || element='---'\n    func_echo \"<TD ALIGN=LEFT VALIGN=TOP>$element\"\n\n    sed_choose_m4_files='s,^m4/\\(.*\\)$,\\1,p'\n    sed_extract_repo_url='\n      /^onceonly/d\n      s,^\\(.*\\)$,<A HREF=\"'$repo_url_prefix'm4/\\1'$repo_url_suffix_repl'\">\\1</A>,\n    '\n    element=`(echo \"$files\" \\\n              | sed -e \"$sed_remove_trailing_empty_line\" \\\n              | sed -n -e \"$sed_choose_m4_files\" \\\n              | sed -e \"$sed_extract_repo_url\"; \\\n              gnulib-tool --extract-autoconf-snippet $1 \\\n              | sed -e \"$sed_remove_trailing_empty_line\") \\\n              | sed -e 's/$/<BR>/' | tr -d \"$trnl\" | sed -e 's/<BR>$//'`\n    test -n \"$element\" || element='---'\n    func_echo \"<TD ALIGN=LEFT VALIGN=TOP>$element\"\n\n    element=`gnulib-tool --extract-dependencies $1 \\\n             | sed -e \"$sed_remove_trailing_empty_line\" \\\n                   -e 's/$/<BR>/' | tr -d \"$trnl\" | sed -e 's/<BR>$//'`\n    test -n \"$element\" || element='---'\n    func_echo \"<TD ALIGN=LEFT VALIGN=TOP>$element\"\n\n    func_end TR\n\n    func_append seen_modules \" $1\"\n    func_append seen_files \" $files\"\n  fi\n}\n\n# func_end_table\nfunc_end_table ()\n{\n  func_end TABLE\n}\n\n# func_all_modules\nfunc_all_modules ()\n{\n  element=\"Support for obsolete systems lacking ANSI C 89\"\n  func_section_wrap ansic_sup_obsolete\n  func_wrap H2\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module stdlib\n  func_module strtol\n  func_module strtoul\n  func_module memcmp\n  func_module memcpy\n  func_module memmove\n  func_module memset\n  func_module strcspn\n  func_module strpbrk\n  func_end_table\n\n  func_echo 'These modules are not listed among dependencies below, for simplicity.'\n  func_echo 'If your package requires portability to old, obsolete systems, you need to list these modules explicitly among the modules to import through gnulib-tool.'\n\n  element=\"Support for systems lacking ANSI C 89\"\n  func_section_wrap ansic_sup\n  func_wrap H2\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module atexit\n  func_module ctime\n  func_module localtime\n  func_module strtod\n  func_module strerror\n  func_module strerror-override\n  func_module mktime\n  func_end_table\n\n  element=\"Enhancements for ANSI C 89 functions\"\n  func_section_wrap ansic_enh\n  func_wrap H2\n  func_echo \"$element\"\n\n  element=\"Diagnostics <assert.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_enh_assert_diagnostics\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module assert\n  func_module assure\n  func_module verify\n  func_end_table\n\n  element=\"Mathematics <math.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_enh_math\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module fpieee\n  func_end_table\n\n  element=\"Input/output <stdio.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_enh_stdio\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module fflush\n  func_module fseterr\n  func_module tmpfile\n  func_end_table\n\n  element=\"Memory management functions <stdlib.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_enh_stdlib_memory\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module calloc-gnu\n  func_module eealloc\n  func_module free\n  func_module malloc-gnu\n  func_module realloc-gnu\n  func_module reallocarray\n  func_module pagealign_alloc\n  func_end_table\n\n  element=\"Sorting functions <stdlib.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_enh_stdlib_sorting\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module array-mergesort\n  func_module mpsort\n  func_module qsort_r\n  func_end_table\n\n  element=\"Date and time <time.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_enh_time_datetime\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module fprintftime\n  func_module localtime-buffer\n  func_module nstrftime\n  func_module strftime-fixes\n  func_module time_rz\n  func_module year2038\n  func_end_table\n\n  element=\"Extra functions based on ANSI C 89\"\n  func_section_wrap ansic_ext\n  func_wrap H2\n  func_echo \"$element\"\n\n  element=\"Memory management functions <stdlib.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_stdlib_memory\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module xsize\n  func_module xalloc\n  func_module xalloc-die\n  func_module alloca\n  func_module alloca-opt\n  func_module malloca\n  func_module xmalloca\n  func_module xmemdup0\n  func_module safe-alloc\n  func_end_table\n\n  element=\"Integer arithmetic functions <stdlib.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_stdlib_arith\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module count-leading-zeros\n  func_module count-one-bits\n  func_module count-trailing-zeros\n  func_module ffs\n  func_module ffsl\n  func_module ffsll\n  func_module gcd\n  func_module minmax\n  func_end_table\n\n  element=\"Environment variables <stdlib.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_stdlib_env\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module putenv\n  func_module secure_getenv\n  func_module setenv\n  func_module unsetenv\n  func_module xsetenv\n  func_end_table\n\n  element=\"Character handling <ctype.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_ctype\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module c-ctype\n  func_end_table\n\n  element=\"String handling <string.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_string\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module bcopy\n  func_module explicit_bzero\n  func_module memchr\n  func_module memchr2\n  func_module memcmp2\n  func_module memmem\n  func_module memmem-simple\n  func_module mempcpy\n  func_module memrchr\n  func_module amemxfrm\n  func_module rawmemchr\n  func_module stpcpy\n  func_module stpncpy\n  func_module c-strcase\n  func_module strcase\n  func_module c-strcaseeq\n  func_module c-strcasestr\n  func_module strcasestr\n  func_module strcasestr-simple\n  func_module strchrnul\n  func_module streq\n  func_module strerror_r-posix\n  func_module strnlen\n  func_module strnlen1\n  func_module strndup\n  func_module strsep\n  func_module strstr\n  func_module strstr-simple\n  func_module c-strstr\n  func_module astrxfrm\n  func_module trim\n  func_module fstrcmp\n  func_module xstrndup\n  func_end_table\n\n  element=\"Mathematics <math.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_math\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module printf-frexp\n  func_end_table\n\n  element=\"Numeric conversion functions <stdlib.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_stdlib_conv\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module c-strtod\n  func_module c-strtold\n  func_module xstrtod\n  func_module xstrtol\n  func_module xstrtoll\n  func_module xstrtold\n  func_end_table\n\n  element=\"Date and time <time.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_time_datetime\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module mktime-internal\n  func_module parse-datetime\n  func_module timegm\n  func_module tzset\n  func_end_table\n\n  element=\"Input/Output <stdio.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_stdio\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module unlocked-io\n  func_module fwriteerror\n  func_module vasnprintf\n  func_module vasprintf\n  func_module xprintf\n  func_module xvasprintf\n  func_end_table\n\n  element=\"Signal handling <signal.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_signal\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module fatal-signal\n  func_module raise\n  func_module strsignal\n  func_end_table\n\n  element=\"Command-line arguments\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_argv\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module argmatch\n  func_module argv-iter\n  func_module version-etc\n  func_module version-etc-fsf\n  func_module long-options\n  func_end_table\n\n  element=\"Container data structures\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_container\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module list\n  func_module xlist\n  func_module array-list\n  func_module carray-list\n  func_module linked-list\n  func_module avltree-list\n  func_module rbtree-list\n  func_module linkedhash-list\n  func_module avltreehash-list\n  func_module rbtreehash-list\n  func_module sublist\n  func_module xsublist\n  func_module oset\n  func_module xoset\n  func_module array-oset\n  func_module avltree-oset\n  func_module rbtree-oset\n  func_end_table\n\n  element=\"Cryptographic computations (low-level)\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_crypto\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module crypto/arcfour\n  func_module crypto/arctwo\n  func_module crypto/des\n  func_module crypto/hmac-md5\n  func_module crypto/hmac-sha1\n  func_module crypto/md2\n  func_module crypto/md4\n  func_module crypto/md5\n  func_module crypto/rijndael\n  func_module crypto/sha1\n  func_module crypto/sha256\n  func_module crypto/sha512\n  func_module crypto/sm3\n  func_end_table\n\n  element=\"Cryptographic computations (high-level)\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_crypto2\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module crypto/gc\n  func_module crypto/gc-arcfour\n  func_module crypto/gc-arctwo\n  func_module crypto/gc-camellia\n  func_module crypto/gc-des\n  func_module crypto/gc-hmac-md5\n  func_module crypto/gc-hmac-sha1\n  func_module crypto/gc-md2\n  func_module crypto/gc-md4\n  func_module crypto/gc-md5\n  func_module crypto/gc-pbkdf2-sha1\n  func_module crypto/gc-random\n  func_module crypto/gc-rijndael\n  func_module crypto/gc-sha1\n  func_module crypto/gc-sm3\n  func_end_table\n\n  element=\"Compiler warning management\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_compwarn\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module ignore-value\n  func_end_table\n\n  element=\"Misc\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap ansic_ext_misc\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module base32\n  func_module base64\n  func_module check-version\n  func_module crc\n  func_module diacrit\n  func_module diffseq\n  func_module execinfo\n  func_module getline\n  func_module getdelim\n  func_module getnline\n  func_module getndelim2\n  func_module linebuffer\n  func_module memxor\n  func_module obstack\n  func_module obstack-printf\n  func_module obstack-printf-posix\n  func_module hash-pjw\n  func_module hash-pjw-bare\n  func_module hash\n  func_module readline\n  func_module readtokens\n  func_module readtokens0\n  func_module strverscmp\n  func_module filevercmp\n  func_end_table\n\n  element=\"Support for systems lacking ISO C 99\"\n  func_section_wrap isoc_sup\n  func_wrap H2\n  func_echo \"$element\"\n\n  element=\"Core language properties\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_core_properties\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module alignof\n  func_module c99\n  func_module flexmember\n  func_module fpucw\n  func_module func\n  func_module inline\n  func_module longlong\n  func_module snippet/unused-parameter\n  func_module va-args\n  func_module vararrays\n  func_module vla\n  func_end_table\n\n  element=\"Variable arguments <stdarg.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_sup_stdarg\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module stdarg\n  func_end_table\n\n  element=\"Boolean type and values <stdbool.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_sup_stdbool\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module stdbool\n  func_end_table\n\n  element=\"Basic types <stddef.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_sup_stddef\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module stddef\n  func_end_table\n\n  element=\"Integer types and values <stdint.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_sup_stdint\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module size_max\n  func_module stdint\n  func_end_table\n\n  element=\"Input/output <stdio.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_sup_stdio\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module stdio\n  func_module snprintf\n  func_module vsnprintf\n  func_end_table\n\n  element=\"Process control, Numeric conversion functions <stdlib.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_sup_stdlib_procconv\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module _Exit\n  func_module atoll\n  func_module strtoll\n  func_module strtoull\n  func_end_table\n\n  element=\"Unibyte characters <ctype.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_sup_ctype\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module ctype\n  func_end_table\n\n  element=\"Functions for greatest-width integer types <inttypes.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_sup_inttypes\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module imaxabs\n  func_module imaxdiv\n  func_module inttypes\n  func_module strtoimax\n  func_module strtoumax\n  func_end_table\n\n  element=\"String handling <string.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_sup_string\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module strncat\n  func_end_table\n\n  element=\"Extended multibyte and wide character utilities <wchar.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_sup_wchar\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module wchar\n  func_module btowc\n  func_module wctob\n  func_module mbsinit\n  func_module mbrlen\n  func_module mbrtowc\n  func_module mbsrtowcs\n  func_module wcrtomb\n  func_module wcsrtombs\n  func_end_table\n\n  element=\"Wide character classification and mapping utilities <wctype.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_sup_wctype\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module wctype\n  func_end_table\n\n  element=\"Characteristics of floating types <float.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_sup_float\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module float\n  func_end_table\n\n  element=\"Mathematics <math.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_sup_math\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module acos\n  func_module acosl\n  func_module asin\n  func_module asinl\n  func_module atan\n  func_module atan2\n  func_module atanl\n  func_module cbrt\n  func_module ceil\n  func_module ceilf\n  func_module ceill\n  func_module copysign\n  func_module cos\n  func_module cosh\n  func_module cosl\n  func_module erf\n  func_module erfc\n  func_module exp\n  func_module expl\n  func_module fabs\n  func_module floor\n  func_module floorf\n  func_module floorl\n  func_module fmod\n  func_module frexp\n  func_module frexp-nolibm\n  func_module frexpl\n  func_module frexpl-nolibm\n  func_module hypot\n  func_module isfinite\n  func_module isinf\n  func_module isnan\n  func_module isnanf\n  func_module isnanf-nolibm\n  func_module isnand\n  func_module isnand-nolibm\n  func_module isnanl\n  func_module isnanl-nolibm\n  func_module j0\n  func_module j1\n  func_module jn\n  func_module ldexp\n  func_module ldexpl\n  func_module lgamma\n  func_module log\n  func_module log10\n  func_module log1p\n  func_module logb\n  func_module logl\n  func_module math\n  func_module mathl\n  func_module modf\n  func_module nextafter\n  func_module pow\n  func_module remainder\n  func_module rint\n  func_module round\n  func_module roundf\n  func_module roundl\n  func_module signbit\n  func_module sin\n  func_module sinh\n  func_module sinl\n  func_module sqrt\n  func_module sqrtl\n  func_module tan\n  func_module tanh\n  func_module tanl\n  func_module trunc\n  func_module truncf\n  func_module truncl\n  func_module y0\n  func_module y1\n  func_module yn\n  func_end_table\n\n  element=\"Enhancements for ISO C 99 functions\"\n  func_section_wrap isoc_enh\n  func_wrap H2\n  func_echo \"$element\"\n\n  element=\"Input/output <stdio.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_enh_stdio\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module printf-safe\n  func_end_table\n\n  element=\"Extra functions based on ISO C 99\"\n  func_section_wrap isoc_ext\n  func_wrap H2\n  func_echo \"$element\"\n\n  element=\"Mathematics <math.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_ext_math\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module printf-frexpl\n  func_end_table\n\n  element=\"Numeric conversion functions <stdlib.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_ext_stdlib_conv\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module dtoastr\n  func_module ftoastr\n  func_module intprops\n  func_module inttostr\n  func_module ldtoastr\n  func_module xstrtoimax\n  func_module xstrtoumax\n  func_end_table\n\n  element=\"Extended multibyte and wide character utilities <wchar.h>\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap isoc_ext_wchar_mb\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module mbchar\n  func_module mbiter\n  func_module mbuiter\n  func_module mbfile\n  func_end_table\n\n  element=\"Support for systems lacking ISO C 11\"\n  func_section_wrap c11_sup\n  func_wrap H2\n  func_echo \"$element\"\n\n  element=\"Core language properties\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap c11_core_properties\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module noreturn\n  func_module std-gnu11\n  func_module stdalign\n  func_end_table\n\n  element=\"Support for standard extensions to ISO C 11\"\n  func_section_wrap c11_ext\n  func_wrap H2\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module builtin-expect\n  func_module ieee754-h\n  func_module limits-h\n  func_end_table\n\n  element=\"Support for sharing code with the GNU C Library\"\n  func_section_wrap glibc\n  func_wrap H2\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module libc-config\n  func_end_table\n\n  element=\"Support for obsolete systems lacking POSIX:2008\"\n  func_section_wrap posix_sup_obsolete\n  func_wrap H2\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module strdup\n  func_end_table\n\n  func_echo 'These modules are not listed among dependencies below, for simplicity.'\n  func_echo 'If your package requires portability to old, obsolete systems, you need to list these modules explicitly among the modules to import through gnulib-tool.'\n\n  element=\"Support for systems lacking POSIX:2008\"\n  func_section_wrap posix_sup\n  func_wrap H2\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module accept\n  func_module alphasort\n  func_module arpa_inet\n  func_module bind\n  func_module calloc-posix\n  func_module chown\n  func_module close\n  func_module connect\n  func_module dirent\n  func_module dprintf\n  func_module dprintf-posix\n  func_module dup2\n  func_module duplocale\n  func_module environ\n  func_module errno\n  func_module fchdir\n  func_module fclose\n  func_module fcntl-h\n  func_module fcntl\n  func_module fdatasync\n  func_module flock\n  func_module fopen\n  func_module fprintf-posix\n  func_module freopen\n  func_module fseek\n  func_module fseeko\n  func_module fsync\n  func_module ftell\n  func_module ftello\n  func_module ftruncate\n  func_module futimens\n  func_module getaddrinfo\n  func_module getcwd\n  func_module getcwd-lgpl\n  func_module getgroups\n  func_module gethostname\n  func_module getlogin\n  func_module getlogin_r\n  func_module getopt-posix\n  func_module getpeername\n  func_module getsockname\n  func_module getsockopt\n  func_module getsubopt\n  func_module gettimeofday\n  func_module grantpt\n  func_module hostent\n  func_module iconv-h\n  func_module iconv_open\n  func_module inet_ntop\n  func_module inet_pton\n  func_module ioctl\n  func_module isblank\n  func_module langinfo\n  func_module link\n  func_module linkat\n  func_module listen\n  func_module locale\n  func_module lseek\n  func_module lstat\n  func_module malloc-posix\n  func_module mbsnrtowcs\n  func_module mkdir\n  func_module mkdtemp\n  func_module mkfifo\n  func_module mknod\n  func_module mkstemp\n  func_module net_if\n  func_module netdb\n  func_module netinet_in\n  func_module nl_langinfo\n  func_module open\n  func_module perror\n  func_module poll\n  func_module popen\n  func_module posix_openpt\n  func_module posix_spawn\n  func_module posix_spawnattr_destroy\n  func_module posix_spawnattr_getflags\n  func_module posix_spawnattr_getpgroup\n  func_module posix_spawnattr_getschedparam\n  func_module posix_spawnattr_getschedpolicy\n  func_module posix_spawnattr_getsigdefault\n  func_module posix_spawnattr_getsigmask\n  func_module posix_spawnattr_init\n  func_module posix_spawnattr_setflags\n  func_module posix_spawnattr_setpgroup\n  func_module posix_spawnattr_setschedparam\n  func_module posix_spawnattr_setschedpolicy\n  func_module posix_spawnattr_setsigdefault\n  func_module posix_spawnattr_setsigmask\n  func_module posix_spawn_file_actions_addclose\n  func_module posix_spawn_file_actions_adddup2\n  func_module posix_spawn_file_actions_addopen\n  func_module posix_spawn_file_actions_destroy\n  func_module posix_spawn_file_actions_init\n  func_module posix_spawn-internal\n  func_module posix_spawnp\n  func_module pread\n  func_module printf-posix\n  func_module pselect\n  func_module pthread\n  func_module ptsname\n  func_module pwrite\n  func_module readlink\n  func_module realloc-posix\n  func_module recv\n  func_module recvfrom\n  func_module remove\n  func_module scandir\n  func_module sched\n  func_module select\n  func_module send\n  func_module sendto\n  func_module servent\n  func_module setsockopt\n  func_module shutdown\n  func_module signal-h\n  func_module sleep\n  func_module snprintf-posix\n  func_module socket\n  func_module spawn\n  func_module sprintf-posix\n  func_module stat\n  func_module strdup-posix\n  func_module string\n  func_module strings\n  func_module tempname\n  func_module time\n  func_module time_r\n  func_module times\n  func_module timespec\n  func_module nanosleep\n  func_module pthread_sigmask\n  func_module regex\n  func_module rename\n  func_module renameat\n  func_module rmdir\n  func_module search\n  func_module sigaction\n  func_module sigprocmask\n  func_module socklen\n  func_module ssize_t\n  func_module strptime\n  func_module strtok_r\n  func_module sys_select\n  func_module sys_socket\n  func_module sys_stat\n  func_module sys_time\n  func_module sys_times\n  func_module sys_uio\n  func_module sys_utsname\n  func_module sys_wait\n  func_module truncate\n  func_module tsearch\n  func_module ttyname_r\n  func_module uname\n  func_module unistd\n  func_module unlink\n  func_module unlockpt\n  func_module utime\n  func_module utime-h\n  func_module utimensat\n  func_module vasnprintf-posix\n  func_module vasprintf-posix\n  func_module vdprintf\n  func_module vdprintf-posix\n  func_module vfprintf-posix\n  func_module vprintf-posix\n  func_module vsnprintf-posix\n  func_module vsprintf-posix\n  func_module wcsnrtombs\n  func_module wcwidth\n  func_module windows-stat-inodes\n  func_module windows-stat-override\n  func_module windows-stat-timespec\n  func_module write\n  func_end_table\n\n  element=\"Compatibility checks for POSIX:2008 functions\"\n  func_section_wrap posix_compat\n  func_wrap H2\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module clock-time\n  func_module d-ino\n  func_module d-type\n  func_module link-follow\n  func_module rename-dest-slash\n  func_module rmdir-errno\n  func_module timer-time\n  func_module unlink-busy\n  func_module winsz-ioctl\n  func_module winsz-termios\n  func_end_table\n\n  element=\"Enhancements for POSIX:2008 functions\"\n  func_section_wrap posix_enh\n  func_wrap H2\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module chdir-long\n  func_module dirent-safer\n  func_module dirname\n  func_module dirname-lgpl\n  func_module getopt-gnu\n  func_module iconv_open-utf\n  func_module unistd-safer\n  func_module fnmatch\n  func_module fnmatch-posix\n  func_module fnmatch-gnu\n  func_module glob\n  func_module exclude\n  func_end_table\n\n  element=\"Extra functions based on POSIX:2008\"\n  func_section_wrap posix_ext\n  func_wrap H2\n  func_echo \"$element\"\n\n  element=\"Input/output\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_stdio\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module xprintf-posix\n  func_module xvasprintf-posix\n  func_end_table\n\n  element=\"Numeric conversion functions\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_conv\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module human\n  func_end_table\n\n  element=\"File system functions\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_filesys\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module acl\n  func_module acl-permissions\n  func_module areadlink\n  func_module areadlink-with-size\n  func_module areadlinkat\n  func_module areadlinkat-with-size\n  func_module backupfile\n  func_module backup-rename\n  func_module canonicalize\n  func_module canonicalize-lgpl\n  func_module clean-temp\n  func_module concat-filename\n  func_module copy-file\n  func_module fsusage\n  func_module dirfd\n  func_module double-slash-root\n  func_module euidaccess\n  func_module faccessat\n  func_module fdopendir\n  func_module fdutimensat\n  func_module file-type\n  func_module fileblocks\n  func_module filemode\n  func_module filename\n  func_module filenamecat\n  func_module filenamecat-lgpl\n  func_module fts\n  func_module isdir\n  func_module largefile\n  func_module lchmod\n  func_module lchown\n  func_module mkancesdirs\n  func_module mkfifoat\n  func_module mkdir-p\n  func_module mkostemp\n  func_module mkostemps\n  func_module mkstemps\n  func_module modechange\n  func_module mountlist\n  func_module openat\n  func_module openat-die\n  func_module pathmax\n  func_module qacl\n  func_module qcopy-acl\n  func_module qset-acl\n  func_module read-file\n  func_module readlinkat\n  func_module renameatu\n  func_module same\n  func_module save-cwd\n  func_module savedir\n  func_module savewd\n  func_module stat-macros\n  func_module stat-time\n  func_module symlink\n  func_module symlinkat\n  func_module sys_file\n  func_module sys_ioctl\n  func_module tmpdir\n  func_module unlinkdir\n  func_module utimecmp\n  func_module utimens\n  func_module write-any-file\n  func_module xconcat-filename\n  func_module xgetcwd\n  func_module xreadlink\n  func_module xreadlinkat\n  func_end_table\n\n  element=\"File system as inode set\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_inodeset\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module cycle-check\n  func_module dev-ino\n  func_module file-set\n  func_module hash-triple\n  func_module i-ring\n  func_module same-inode\n  func_end_table\n\n  element=\"File descriptor based Input/Output\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_filedesc\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module binary-io\n  func_module dup3\n  func_module fcntl-safer\n  func_module fd-safer-flag\n  func_module full-read\n  func_module full-write\n  func_module getdtablesize\n  func_module isapipe\n  func_module openat-safer\n  func_module pipe-posix\n  func_module pipe2\n  func_module pipe2-safer\n  func_module safe-read\n  func_module safe-write\n  func_end_table\n\n  element=\"File stream based Input/Output\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_filestream\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module close-stream\n  func_module closein\n  func_module closeout\n  func_module fbufmode\n  func_module fopen-safer\n  func_module fpending\n  func_module fpurge\n  func_module freadable\n  func_module freadahead\n  func_module freading\n  func_module freadptr\n  func_module freadseek\n  func_module freopen-safer\n  func_module fwritable\n  func_module fwriting\n  func_module getpass\n  func_module getpass-gnu\n  func_module popen-safer\n  func_module stdlib-safer\n  func_module tmpfile-safer\n  func_module xfreopen\n  func_end_table\n\n  element=\"Users and groups\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_uidgid\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module getugroups\n  func_module group-member\n  func_module idcache\n  func_module mgetgroups\n  func_module userspec\n  func_end_table\n\n  element=\"Security\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_security\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module idpriv-drop\n  func_module idpriv-droptemp\n  func_module priv-set\n  func_end_table\n\n  element=\"Date and time\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_datetime\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module gethrxtime\n  func_module gettime\n  func_module posixtm\n  func_module settime\n  func_module usleep\n  func_module xnanosleep\n  func_end_table\n\n  element=\"Networking functions\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_net\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module accept4\n  func_module xgethostname\n  func_module canon-host\n  func_module sockets\n  func_end_table\n\n  element=\"Multithreading\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_thread\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module threadlib\n  func_module lock\n  func_module tls\n  func_module thread\n  func_module yield\n  func_module cond\n  func_module openmp\n  func_end_table\n\n  element=\"Signal handling\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_signal\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module c-stack\n  func_module libsigsegv\n  func_module sig2str\n  func_module sigpipe\n  func_module sigpipe-die\n  func_end_table\n\n  element=\"Internationalization functions\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_i18n\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module gettext\n  func_module gettext-h\n  func_module propername\n  func_module iconv\n  func_module striconv\n  func_module xstriconv\n  func_module striconveh\n  func_module xstriconveh\n  func_module striconveha\n  func_module localcharset\n  func_module hard-locale\n  func_module localename\n  func_module mbmemcasecmp\n  func_module mbmemcasecoll\n  func_module mbslen\n  func_module mbsnlen\n  func_module mbschr\n  func_module mbsrchr\n  func_module mbsstr\n  func_module mbscasecmp\n  func_module mbsncasecmp\n  func_module mbspcasecmp\n  func_module mbscasestr\n  func_module mbscspn\n  func_module mbspbrk\n  func_module mbsspn\n  func_module mbssep\n  func_module mbstok_r\n  func_module mbswidth\n  func_module memcasecmp\n  func_module memcoll\n  func_module xmemcoll\n  func_module unicodeio\n  func_module rpmatch\n  func_module yesno\n  func_module bison-i18n\n  func_end_table\n\n  element=\"Unicode string functions\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_unicode\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module libunistring\n  func_module libunistring-optional\n  func_module unitypes\n  func_module ucs4-utf8\n  func_module ucs4-utf16\n  func_module utf8-ucs4-unsafe\n  func_module utf16-ucs4-unsafe\n  func_module utf8-ucs4\n  func_module utf16-ucs4\n  func_module unistr/base\n  func_module unistr/u8-to-u16\n  func_module unistr/u8-to-u32\n  func_module unistr/u16-to-u8\n  func_module unistr/u16-to-u32\n  func_module unistr/u32-to-u8\n  func_module unistr/u32-to-u16\n  func_module unistr/u8-check\n  func_module unistr/u16-check\n  func_module unistr/u32-check\n  func_module unistr/u8-chr\n  func_module unistr/u16-chr\n  func_module unistr/u32-chr\n  func_module unistr/u8-cmp\n  func_module unistr/u16-cmp\n  func_module unistr/u32-cmp\n  func_module unistr/u8-cmp2\n  func_module unistr/u16-cmp2\n  func_module unistr/u32-cmp2\n  func_module unistr/u8-cpy\n  func_module unistr/u16-cpy\n  func_module unistr/u32-cpy\n  func_module unistr/u8-cpy-alloc\n  func_module unistr/u16-cpy-alloc\n  func_module unistr/u32-cpy-alloc\n  func_module unistr/u8-endswith\n  func_module unistr/u16-endswith\n  func_module unistr/u32-endswith\n  func_module unistr/u8-mblen\n  func_module unistr/u16-mblen\n  func_module unistr/u32-mblen\n  func_module unistr/u8-mbsnlen\n  func_module unistr/u16-mbsnlen\n  func_module unistr/u32-mbsnlen\n  func_module unistr/u8-mbtouc-unsafe\n  func_module unistr/u16-mbtouc-unsafe\n  func_module unistr/u32-mbtouc-unsafe\n  func_module unistr/u8-mbtouc\n  func_module unistr/u16-mbtouc\n  func_module unistr/u32-mbtouc\n  func_module unistr/u8-mbtoucr\n  func_module unistr/u16-mbtoucr\n  func_module unistr/u32-mbtoucr\n  func_module unistr/u8-move\n  func_module unistr/u16-move\n  func_module unistr/u32-move\n  func_module unistr/u8-next\n  func_module unistr/u16-next\n  func_module unistr/u32-next\n  func_module unistr/u8-prev\n  func_module unistr/u16-prev\n  func_module unistr/u32-prev\n  func_module unistr/u8-set\n  func_module unistr/u16-set\n  func_module unistr/u32-set\n  func_module unistr/u8-startswith\n  func_module unistr/u16-startswith\n  func_module unistr/u32-startswith\n  func_module unistr/u8-stpcpy\n  func_module unistr/u16-stpcpy\n  func_module unistr/u32-stpcpy\n  func_module unistr/u8-stpncpy\n  func_module unistr/u16-stpncpy\n  func_module unistr/u32-stpncpy\n  func_module unistr/u8-strcat\n  func_module unistr/u16-strcat\n  func_module unistr/u32-strcat\n  func_module unistr/u8-strchr\n  func_module unistr/u16-strchr\n  func_module unistr/u32-strchr\n  func_module unistr/u8-strcmp\n  func_module unistr/u16-strcmp\n  func_module unistr/u32-strcmp\n  func_module unistr/u8-strcoll\n  func_module unistr/u16-strcoll\n  func_module unistr/u32-strcoll\n  func_module unistr/u8-strcpy\n  func_module unistr/u16-strcpy\n  func_module unistr/u32-strcpy\n  func_module unistr/u8-strcspn\n  func_module unistr/u16-strcspn\n  func_module unistr/u32-strcspn\n  func_module unistr/u8-strdup\n  func_module unistr/u16-strdup\n  func_module unistr/u32-strdup\n  func_module unistr/u8-strlen\n  func_module unistr/u16-strlen\n  func_module unistr/u32-strlen\n  func_module unistr/u8-strmblen\n  func_module unistr/u16-strmblen\n  func_module unistr/u32-strmblen\n  func_module unistr/u8-strmbtouc\n  func_module unistr/u16-strmbtouc\n  func_module unistr/u32-strmbtouc\n  func_module unistr/u8-strncat\n  func_module unistr/u16-strncat\n  func_module unistr/u32-strncat\n  func_module unistr/u8-strncmp\n  func_module unistr/u16-strncmp\n  func_module unistr/u32-strncmp\n  func_module unistr/u8-strncpy\n  func_module unistr/u16-strncpy\n  func_module unistr/u32-strncpy\n  func_module unistr/u8-strnlen\n  func_module unistr/u16-strnlen\n  func_module unistr/u32-strnlen\n  func_module unistr/u8-strpbrk\n  func_module unistr/u16-strpbrk\n  func_module unistr/u32-strpbrk\n  func_module unistr/u8-strrchr\n  func_module unistr/u16-strrchr\n  func_module unistr/u32-strrchr\n  func_module unistr/u8-strspn\n  func_module unistr/u16-strspn\n  func_module unistr/u32-strspn\n  func_module unistr/u8-strstr\n  func_module unistr/u16-strstr\n  func_module unistr/u32-strstr\n  func_module unistr/u8-strtok\n  func_module unistr/u16-strtok\n  func_module unistr/u32-strtok\n  func_module unistr/u8-uctomb\n  func_module unistr/u16-uctomb\n  func_module unistr/u32-uctomb\n  func_module uniconv/base\n  func_module uniconv/u8-conv-from-enc\n  func_module uniconv/u16-conv-from-enc\n  func_module uniconv/u32-conv-from-enc\n  func_module uniconv/u8-conv-to-enc\n  func_module uniconv/u16-conv-to-enc\n  func_module uniconv/u32-conv-to-enc\n  func_module uniconv/u8-strconv-from-enc\n  func_module uniconv/u16-strconv-from-enc\n  func_module uniconv/u32-strconv-from-enc\n  func_module uniconv/u8-strconv-to-enc\n  func_module uniconv/u16-strconv-to-enc\n  func_module uniconv/u32-strconv-to-enc\n  func_module uniconv/u8-strconv-from-locale\n  func_module uniconv/u16-strconv-from-locale\n  func_module uniconv/u32-strconv-from-locale\n  func_module uniconv/u8-strconv-to-locale\n  func_module uniconv/u16-strconv-to-locale\n  func_module uniconv/u32-strconv-to-locale\n  func_module unistdio/base\n  func_module unistdio/u-printf-args\n  func_module unistdio/ulc-asnprintf\n  func_module unistdio/ulc-asprintf\n  func_module unistdio/ulc-fprintf\n  func_module unistdio/ulc-printf-parse\n  func_module unistdio/ulc-snprintf\n  func_module unistdio/ulc-sprintf\n  func_module unistdio/ulc-vasnprintf\n  func_module unistdio/ulc-vasprintf\n  func_module unistdio/ulc-vfprintf\n  func_module unistdio/ulc-vsnprintf\n  func_module unistdio/ulc-vsprintf\n  func_module unistdio/u8-asnprintf\n  func_module unistdio/u8-asprintf\n  func_module unistdio/u8-printf-parse\n  func_module unistdio/u8-snprintf\n  func_module unistdio/u8-sprintf\n  func_module unistdio/u8-vasnprintf\n  func_module unistdio/u8-vasprintf\n  func_module unistdio/u8-vsnprintf\n  func_module unistdio/u8-vsprintf\n  func_module unistdio/u8-u8-asnprintf\n  func_module unistdio/u8-u8-asprintf\n  func_module unistdio/u8-u8-snprintf\n  func_module unistdio/u8-u8-sprintf\n  func_module unistdio/u8-u8-vasnprintf\n  func_module unistdio/u8-u8-vasprintf\n  func_module unistdio/u8-u8-vsnprintf\n  func_module unistdio/u8-u8-vsprintf\n  func_module unistdio/u16-asnprintf\n  func_module unistdio/u16-asprintf\n  func_module unistdio/u16-printf-parse\n  func_module unistdio/u16-snprintf\n  func_module unistdio/u16-sprintf\n  func_module unistdio/u16-vasnprintf\n  func_module unistdio/u16-vasprintf\n  func_module unistdio/u16-vsnprintf\n  func_module unistdio/u16-vsprintf\n  func_module unistdio/u16-u16-asnprintf\n  func_module unistdio/u16-u16-asprintf\n  func_module unistdio/u16-u16-snprintf\n  func_module unistdio/u16-u16-sprintf\n  func_module unistdio/u16-u16-vasnprintf\n  func_module unistdio/u16-u16-vasprintf\n  func_module unistdio/u16-u16-vsnprintf\n  func_module unistdio/u16-u16-vsprintf\n  func_module unistdio/u32-asnprintf\n  func_module unistdio/u32-asprintf\n  func_module unistdio/u32-printf-parse\n  func_module unistdio/u32-snprintf\n  func_module unistdio/u32-sprintf\n  func_module unistdio/u32-vasnprintf\n  func_module unistdio/u32-vasprintf\n  func_module unistdio/u32-vsnprintf\n  func_module unistdio/u32-vsprintf\n  func_module unistdio/u32-u32-asnprintf\n  func_module unistdio/u32-u32-asprintf\n  func_module unistdio/u32-u32-snprintf\n  func_module unistdio/u32-u32-sprintf\n  func_module unistdio/u32-u32-vasnprintf\n  func_module unistdio/u32-u32-vasprintf\n  func_module unistdio/u32-u32-vsnprintf\n  func_module unistdio/u32-u32-vsprintf\n  func_module uniname/base\n  func_module uniname/uniname\n  func_module unictype/base\n  func_module unictype/bidicategory-byname\n  func_module unictype/bidicategory-name\n  func_module unictype/bidicategory-of\n  func_module unictype/bidicategory-test\n  func_module unictype/bidicategory-all\n  func_module unictype/block-list\n  func_module unictype/block-of\n  func_module unictype/block-test\n  func_module unictype/block-all\n  func_module unictype/category-C\n  func_module unictype/category-Cc\n  func_module unictype/category-Cf\n  func_module unictype/category-Cn\n  func_module unictype/category-Co\n  func_module unictype/category-Cs\n  func_module unictype/category-L\n  func_module unictype/category-Ll\n  func_module unictype/category-Lm\n  func_module unictype/category-Lo\n  func_module unictype/category-Lt\n  func_module unictype/category-Lu\n  func_module unictype/category-M\n  func_module unictype/category-Mc\n  func_module unictype/category-Me\n  func_module unictype/category-Mn\n  func_module unictype/category-N\n  func_module unictype/category-Nd\n  func_module unictype/category-Nl\n  func_module unictype/category-No\n  func_module unictype/category-P\n  func_module unictype/category-Pc\n  func_module unictype/category-Pd\n  func_module unictype/category-Pe\n  func_module unictype/category-Pf\n  func_module unictype/category-Pi\n  func_module unictype/category-Po\n  func_module unictype/category-Ps\n  func_module unictype/category-S\n  func_module unictype/category-Sc\n  func_module unictype/category-Sk\n  func_module unictype/category-Sm\n  func_module unictype/category-So\n  func_module unictype/category-Z\n  func_module unictype/category-Zl\n  func_module unictype/category-Zp\n  func_module unictype/category-Zs\n  func_module unictype/category-and\n  func_module unictype/category-and-not\n  func_module unictype/category-byname\n  func_module unictype/category-name\n  func_module unictype/category-none\n  func_module unictype/category-of\n  func_module unictype/category-or\n  func_module unictype/category-test\n  func_module unictype/category-test-withtable\n  func_module unictype/category-all\n  func_module unictype/combining-class\n  func_module unictype/ctype-alnum\n  func_module unictype/ctype-alpha\n  func_module unictype/ctype-blank\n  func_module unictype/ctype-cntrl\n  func_module unictype/ctype-digit\n  func_module unictype/ctype-graph\n  func_module unictype/ctype-lower\n  func_module unictype/ctype-print\n  func_module unictype/ctype-punct\n  func_module unictype/ctype-space\n  func_module unictype/ctype-upper\n  func_module unictype/ctype-xdigit\n  func_module unictype/decimal-digit\n  func_module unictype/digit\n  func_module unictype/mirror\n  func_module unictype/numeric\n  func_module unictype/property-alphabetic\n  func_module unictype/property-ascii-hex-digit\n  func_module unictype/property-bidi-arabic-digit\n  func_module unictype/property-bidi-arabic-right-to-left\n  func_module unictype/property-bidi-block-separator\n  func_module unictype/property-bidi-boundary-neutral\n  func_module unictype/property-bidi-common-separator\n  func_module unictype/property-bidi-control\n  func_module unictype/property-bidi-embedding-or-override\n  func_module unictype/property-bidi-eur-num-separator\n  func_module unictype/property-bidi-eur-num-terminator\n  func_module unictype/property-bidi-european-digit\n  func_module unictype/property-bidi-hebrew-right-to-left\n  func_module unictype/property-bidi-left-to-right\n  func_module unictype/property-bidi-non-spacing-mark\n  func_module unictype/property-bidi-other-neutral\n  func_module unictype/property-bidi-pdf\n  func_module unictype/property-bidi-segment-separator\n  func_module unictype/property-bidi-whitespace\n  func_module unictype/property-byname\n  func_module unictype/property-case-ignorable\n  func_module unictype/property-cased\n  func_module unictype/property-changes-when-casefolded\n  func_module unictype/property-changes-when-casemapped\n  func_module unictype/property-changes-when-lowercased\n  func_module unictype/property-changes-when-titlecased\n  func_module unictype/property-changes-when-uppercased\n  func_module unictype/property-combining\n  func_module unictype/property-composite\n  func_module unictype/property-currency-symbol\n  func_module unictype/property-dash\n  func_module unictype/property-decimal-digit\n  func_module unictype/property-default-ignorable-code-point\n  func_module unictype/property-deprecated\n  func_module unictype/property-diacritic\n  func_module unictype/property-extender\n  func_module unictype/property-format-control\n  func_module unictype/property-grapheme-base\n  func_module unictype/property-grapheme-extend\n  func_module unictype/property-grapheme-link\n  func_module unictype/property-hex-digit\n  func_module unictype/property-hyphen\n  func_module unictype/property-id-continue\n  func_module unictype/property-id-start\n  func_module unictype/property-ideographic\n  func_module unictype/property-ids-binary-operator\n  func_module unictype/property-ids-trinary-operator\n  func_module unictype/property-ignorable-control\n  func_module unictype/property-iso-control\n  func_module unictype/property-join-control\n  func_module unictype/property-left-of-pair\n  func_module unictype/property-line-separator\n  func_module unictype/property-logical-order-exception\n  func_module unictype/property-lowercase\n  func_module unictype/property-math\n  func_module unictype/property-non-break\n  func_module unictype/property-not-a-character\n  func_module unictype/property-numeric\n  func_module unictype/property-other-alphabetic\n  func_module unictype/property-other-default-ignorable-code-point\n  func_module unictype/property-other-grapheme-extend\n  func_module unictype/property-other-id-continue\n  func_module unictype/property-other-id-start\n  func_module unictype/property-other-lowercase\n  func_module unictype/property-other-math\n  func_module unictype/property-other-uppercase\n  func_module unictype/property-paired-punctuation\n  func_module unictype/property-paragraph-separator\n  func_module unictype/property-pattern-syntax\n  func_module unictype/property-pattern-white-space\n  func_module unictype/property-private-use\n  func_module unictype/property-punctuation\n  func_module unictype/property-quotation-mark\n  func_module unictype/property-radical\n  func_module unictype/property-sentence-terminal\n  func_module unictype/property-soft-dotted\n  func_module unictype/property-space\n  func_module unictype/property-terminal-punctuation\n  func_module unictype/property-test\n  func_module unictype/property-titlecase\n  func_module unictype/property-unassigned-code-value\n  func_module unictype/property-unified-ideograph\n  func_module unictype/property-uppercase\n  func_module unictype/property-variation-selector\n  func_module unictype/property-white-space\n  func_module unictype/property-xid-continue\n  func_module unictype/property-xid-start\n  func_module unictype/property-zero-width\n  func_module unictype/property-all\n  func_module unictype/scripts\n  func_module unictype/scripts-all\n  func_module unictype/syntax-c-ident\n  func_module unictype/syntax-c-whitespace\n  func_module unictype/syntax-java-ident\n  func_module unictype/syntax-java-whitespace\n  func_module uniwidth/base\n  func_module uniwidth/u8-strwidth\n  func_module uniwidth/u8-width\n  func_module uniwidth/u16-strwidth\n  func_module uniwidth/u16-width\n  func_module uniwidth/u32-strwidth\n  func_module uniwidth/u32-width\n  func_module uniwidth/width\n  func_module uniwbrk/base\n  func_module uniwbrk/ulc-wordbreaks\n  func_module uniwbrk/u8-wordbreaks\n  func_module uniwbrk/u16-wordbreaks\n  func_module uniwbrk/u32-wordbreaks\n  func_module uniwbrk/wordbreak-property\n  func_module unilbrk/base\n  func_module unilbrk/tables\n  func_module unilbrk/ulc-common\n  func_module unilbrk/u8-possible-linebreaks\n  func_module unilbrk/u16-possible-linebreaks\n  func_module unilbrk/u32-possible-linebreaks\n  func_module unilbrk/ulc-possible-linebreaks\n  func_module unilbrk/u8-width-linebreaks\n  func_module unilbrk/u16-width-linebreaks\n  func_module unilbrk/u32-width-linebreaks\n  func_module unilbrk/ulc-width-linebreaks\n  func_module uninorm/base\n  func_module uninorm/canonical-decomposition\n  func_module uninorm/composition\n  func_module uninorm/decomposing-form\n  func_module uninorm/decomposition\n  func_module uninorm/filter\n  func_module uninorm/nfc\n  func_module uninorm/nfd\n  func_module uninorm/nfkc\n  func_module uninorm/nfkd\n  func_module uninorm/u8-normalize\n  func_module uninorm/u16-normalize\n  func_module uninorm/u32-normalize\n  func_module uninorm/u8-normcmp\n  func_module uninorm/u16-normcmp\n  func_module uninorm/u32-normcmp\n  func_module uninorm/u8-normcoll\n  func_module uninorm/u16-normcoll\n  func_module uninorm/u32-normcoll\n  func_module uninorm/u8-normxfrm\n  func_module uninorm/u16-normxfrm\n  func_module uninorm/u32-normxfrm\n  func_module unicase/base\n  func_module unicase/empty-prefix-context\n  func_module unicase/empty-suffix-context\n  func_module unicase/locale-language\n  func_module unicase/tolower\n  func_module unicase/totitle\n  func_module unicase/toupper\n  func_module unicase/ulc-casecmp\n  func_module unicase/ulc-casecoll\n  func_module unicase/ulc-casexfrm\n  func_module unicase/u8-casecmp\n  func_module unicase/u16-casecmp\n  func_module unicase/u32-casecmp\n  func_module unicase/u8-casecoll\n  func_module unicase/u16-casecoll\n  func_module unicase/u32-casecoll\n  func_module unicase/u8-casefold\n  func_module unicase/u16-casefold\n  func_module unicase/u32-casefold\n  func_module unicase/u8-casexfrm\n  func_module unicase/u16-casexfrm\n  func_module unicase/u32-casexfrm\n  func_module unicase/u8-ct-casefold\n  func_module unicase/u16-ct-casefold\n  func_module unicase/u32-ct-casefold\n  func_module unicase/u8-ct-tolower\n  func_module unicase/u16-ct-tolower\n  func_module unicase/u32-ct-tolower\n  func_module unicase/u8-ct-totitle\n  func_module unicase/u16-ct-totitle\n  func_module unicase/u32-ct-totitle\n  func_module unicase/u8-ct-toupper\n  func_module unicase/u16-ct-toupper\n  func_module unicase/u32-ct-toupper\n  func_module unicase/u8-is-cased\n  func_module unicase/u16-is-cased\n  func_module unicase/u32-is-cased\n  func_module unicase/u8-is-casefolded\n  func_module unicase/u16-is-casefolded\n  func_module unicase/u32-is-casefolded\n  func_module unicase/u8-is-lowercase\n  func_module unicase/u16-is-lowercase\n  func_module unicase/u32-is-lowercase\n  func_module unicase/u8-is-titlecase\n  func_module unicase/u16-is-titlecase\n  func_module unicase/u32-is-titlecase\n  func_module unicase/u8-is-uppercase\n  func_module unicase/u16-is-uppercase\n  func_module unicase/u8-prefix-context\n  func_module unicase/u16-prefix-context\n  func_module unicase/u32-prefix-context\n  func_module unicase/u8-suffix-context\n  func_module unicase/u16-suffix-context\n  func_module unicase/u32-suffix-context\n  func_module unicase/u8-tolower\n  func_module unicase/u16-tolower\n  func_module unicase/u32-tolower\n  func_module unicase/u8-totitle\n  func_module unicase/u16-totitle\n  func_module unicase/u32-totitle\n  func_module unicase/u8-toupper\n  func_module unicase/u16-toupper\n  func_module unicase/u32-toupper\n  func_end_table\n\n  element=\"Executing programs\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_exec\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module cloexec\n  func_module findprog\n  func_module findprog-lgpl\n  func_module wait-process\n  func_module execute\n  func_module spawn-pipe\n  func_module pipe-filter-gi\n  func_module pipe-filter-ii\n  func_module sh-quote\n  func_end_table\n\n  element=\"Java\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_java\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module classpath\n  func_module javacomp-script\n  func_module javacomp\n  func_module javaexec-script\n  func_module javaexec\n  func_module javaversion\n  #func_module gcj\n  func_end_table\n\n  element=\"C#\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_csharp\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module csharpcomp-script\n  func_module csharpcomp\n  func_module csharpexec-script\n  func_module csharpexec\n  func_end_table\n\n  element=\"Misc\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_section_wrap posix_ext_misc\n  func_wrap H3\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module argp\n  func_module argp-version-etc\n  func_module argz\n  func_module bitrotate\n  func_module byteswap\n  func_module dfa\n  func_module exitfail\n  func_module error\n  func_module extensions\n  func_module forkpty\n  func_module getdomainname\n  func_module xgetdomainname\n  func_module getloadavg\n  func_module getpagesize\n  func_module getprogname\n  func_module getusershell\n  func_module lib-symbol-visibility\n  func_module login_tty\n  func_module nproc\n  func_module openpty\n  func_module parse-duration\n  func_module physmem\n  func_module posixver\n  func_module progname\n  func_module ptsname_r\n  func_module pty\n  func_module quotearg\n  func_module quote\n  func_module readutmp\n  func_module random_r\n  func_module selinux-h\n  func_module selinux-at\n  func_module sysexits\n  func_module u64\n  func_module verror\n  func_end_table\n\n  element=\"Support for building libraries and executables\"\n  func_section_wrap build_lib\n  func_wrap H2\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module absolute-header\n  func_module snippet/arg-nonnull\n  func_module config-h\n  func_module configmake\n  func_module dummy\n  func_module gperf\n  func_module havelib\n  func_module include_next\n  func_module ldd\n  func_module lib-ignore\n  func_module lib-msvc-compat\n  func_module lib-symbol-versions\n  func_module snippet/link-warning\n  func_module manywarnings\n  func_module no-c++\n  func_module relocatable-lib\n  func_module relocatable-lib-lgpl\n  func_module relocatable-prog\n  func_module relocatable-prog-wrapper\n  func_module relocatable-script\n  func_module snippet/warn-on-use\n  func_module warnings\n  func_end_table\n\n  element=\"Support for building documentation\"\n  func_section_wrap build_doc\n  func_wrap H2\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module agpl-3.0\n  func_module fdl\n  func_module fdl-1.3\n  func_module gendocs\n  func_module gpl-2.0\n  func_module gpl-3.0\n  func_module lgpl-2.1\n  func_module lgpl-3.0\n  func_module pmccabe2html\n  func_module regexprops-generic\n  func_end_table\n\n  element=\"Support for maintaining and releasing projects\"\n  func_section_wrap maintain\n  func_wrap H2\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module announce-gen\n  func_module autobuild\n  func_module do-release-commit-and-tag\n  func_module git-version-gen\n  func_module gitlog-to-changelog\n  func_module gnu-web-doc-update\n  func_module gnumakefile\n  func_module gnupload\n  func_module maintainer-makefile\n  func_module mktempd\n  func_module non-recursive-gnulib-prefix-hack\n  func_module readme-release\n  func_module test-framework-sh\n  func_module update-copyright\n  func_module useless-if-before-free\n  func_module vc-list-files\n  func_end_table\n\n  element=\"Misc\"\n  func_section_wrap misc\n  func_wrap H2\n  func_echo \"$element\"\n\n  func_begin_table\n  func_module gnu-make\n  func_module host-os\n  func_module nocrash\n  func_module perl\n  func_module posix-shell\n  func_module uptime\n  func_end_table\n}\n\n\nfunc_tmpdir\ntrap 'exit_status=$?\n      if test \"$signal\" != 0; then\n        echo \"caught signal $signal\" >&2\n      fi\n      rm -rf \"$tmp\"\n      exit $exit_status' 0\nfor signal in 1 2 3 13 15; do\n  trap '{ signal='$signal'; func_exit 1; }' $signal\ndone\nsignal=0\n\necho '<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">'\nfunc_begin HTML\n\nfunc_begin HEAD\n\nelement=\"Gnulib Module List\"\nfunc_wrap TITLE\nfunc_echo \"$element\"\n\nmodules=`gnulib-tool --list`\nmodules=`for m in $modules; do printf \"%s, \" $m; done | sed -e 's/, $//'`\nfunc_echo '<META NAME=\"keywords\" CONTENT=\"'\"${modules}\"'\">'\n\nfunc_end HEAD\n\nfunc_begin BODY\n\nelement=\"Gnulib Module List\"\nfunc_wrap H1\nfunc_echo \"$element\"\n\nfunc_echo 'This is a list of the modules which make up gnulib, with dependencies.'\n\nin_toc=yes\nfunc_all_modules\n\nin_toc=\nfunc_all_modules\n\n\ngnulib-tool --list > \"$tmp/all-modules\"\nmissed_modules=`for module in $seen_modules; do echo $module; done \\\n                  | LC_ALL=C sort -u \\\n                  | LC_ALL=C join -v 2 - \"$tmp/all-modules\"`\n\nif test -n \"$missed_modules\"; then\n\n  element=\"Unclassified modules - please update MODULES.html.sh\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_wrap H2\n  func_echo \"$element\"\n\n  func_begin_table\n  for module in $missed_modules; do\n    func_module $module\n  done\n  func_end_table\n\nfi\n\n{ find lib -type f -print; find m4 -type f -print; } | LC_ALL=C sort | sed -e '/\\/\\./d' -e /README/d -e /ChangeLog/d -e /Makefile/d -e /TODO/d -e '/tags$/d' -e '/TAGS$/d' -e '/~$/d' > \"$tmp/all-files\"\nmissed_files=`for file in $seen_files; do echo $file; done \\\n                | LC_ALL=C sort -u \\\n                | LC_ALL=C join -v 2 - \"$tmp/all-files\"`\n\nif test -n \"$missed_files\"; then\n\n  element=\"Lone files - please create new modules containing them\"\n  element=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\n  func_wrap H2\n  func_echo \"$element\"\n\n  func_echo '<PRE>'\n  echo \"$missed_files\" | sed -e 's,^\\(.*\\)$,<A HREF=\"'\"$repo_url_prefix\"'\\1'\"$repo_url_suffix_repl\"'\">\\1</A>,'\n  echo '</PRE>'\n\nfi\n\nelement=\"Future developments\"\nelement=`printf \"%s\" \"$element\" | sed -e \"$sed_lt\" -e \"$sed_gt\"`\nfunc_wrap H2\nfunc_echo \"$element\"\n\nfunc_echo 'Ideally a module could consist of:'\nfunc_begin UL\nfunc_echo '<LI>A header file: lib/<VAR>module</VAR>.h'\nfunc_echo '<LI>One or more implementation files: lib/<VAR>module</VAR>.c et al.'\nfunc_echo '<LI>One or more autoconf macro files: m4/<VAR>module</VAR>.m4 et al.'\nfunc_echo '<LI>A configure.ac fragment, Makefile.am fragment, dependency list: modules/<VAR>module</VAR>'\nfunc_echo '<LI>A testsuite: source files in tests/ and metainformation (a configure.ac fragment, Makefile.am fragment, dependency list) in modules/<VAR>module</VAR>-tests'\nfunc_echo '<LI>Some documentation'\nfunc_echo '<LI>A POT file and some PO files'\nfunc_end UL\n\nfunc_echo '<HR>'\nfunc_echo 'Generated from <CODE>MODULES.html.sh</CODE> on '`LC_ALL=C date +\"%e %B %Y\"`.\n\nfunc_end BODY\n\nfunc_end HTML\n\nrm -rf \"$tmp\"\n# Undo the effect of the previous 'trap' command.\ntrap '' 0\ntrap 'func_exit $?' 1 2 3 13 15\n\nexit 0\n\n# Local Variables:\n# indent-tabs-mode: nil\n# whitespace-check-buffer-indent: nil\n# End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/gnulib/doc/gnulib.texi": "\\input texinfo   @c -*-texinfo-*-\n@comment %**start of header\n@setfilename gnulib.info\n@settitle GNU Gnulib\n@c Define a new index for the magic constants in regex.texi.\n@defcodeindex cn\n@syncodeindex fn cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n@syncodeindex vr cp\n@syncodeindex cn cp\n@ifclear texi2html\n@firstparagraphindent insert\n@end ifclear\n@comment %**end of header\n\n@comment Defines the UPDATED variable.\n@include updated-stamp\n\n@copying\nThis manual is for GNU Gnulib (updated @value{UPDATED}),\nwhich is a library of common routines intended to be shared at the\nsource level.\n\nCopyright @copyright{} 2004--2019 Free Software Foundation, Inc.\n\nPermission is granted to copy, distribute and/or modify this document\nunder the terms of the GNU Free Documentation License, Version 1.3 or\nany later version published by the Free Software Foundation; with no\nInvariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A\ncopy of the license is included in the section entitled ``GNU Free\nDocumentation License''.\n@end copying\n\n@dircategory Software development\n@direntry\n* Gnulib: (gnulib).             Source files to share among distributions.\n@end direntry\n\n@titlepage\n@title GNU Gnulib\n@subtitle updated @value{UPDATED}\n@author @email{bug-gnulib@@gnu.org}\n@page\n@vskip 0pt plus 1filll\n@insertcopying\n@end titlepage\n\n@contents\n\n@ifnottex\n@node Top\n@top GNU Gnulib\n\n@insertcopying\n@end ifnottex\n\n@menu\n* Brief Overview::\n* Philosophy::\n* Invoking gnulib-tool::\n* Writing modules::\n* Extending Gnulib::\n* Miscellaneous Notes::\n* POSIX Substitutes Library::       Building as a separate substitutes library.\n* Header File Substitutes::         Overriding system headers.\n* Function Substitutes::            Replacing system functions.\n* Legacy Function Substitutes::     Replacing system functions.\n* Glibc Header File Substitutes::   Overriding system headers.\n* Glibc Function Substitutes::      Replacing system functions.\n* Native Windows Support::          Support for the native Windows platforms.\n* Particular Modules::              Documentation of individual modules.\n* Regular expressions::             The regex module.\n* Build Infrastructure Modules::    Modules that extend the GNU Build System.\n* GNU Free Documentation License::  Copying and sharing this manual.\n* Index::\n@end menu\n\n@c This is used at the beginning of four chapters.\n@macro nosuchmodulenote{thing}\nThe notation ``Gnulib module: ---'' means that Gnulib does not provide a\nmodule providing a substitute for the \\thing\\.  When the list\n``Portability problems not fixed by Gnulib'' is empty, such a module is\nnot needed: No portability problems are known.  Otherwise, it indicates\nthat such a module would be useful but is not available: No one so far\nfound this \\thing\\ important enough to contribute a substitute for it.\nIf you need this particular \\thing\\, you may write to\n@w{@code{<bug-gnulib at gnu dot org>}}.\n@end macro\n\n\n@node Brief Overview\n@chapter Brief Overview\n\nGnulib is a source code library that provides basic functionality to\nprograms and libraries.  Many software packages make use of Gnulib\nto avoid reinventing the portability wheel.\n\nResources:\n\n@itemize\n@item Gnulib is hosted at Savannah:\n      @url{https://savannah.gnu.org/projects/gnulib}.  Get the sources\n      through Git from there.\n@item The Gnulib home page:\n      @url{https://www.gnu.org/software/gnulib/}.\n@end itemize\n\n@include gnulib-readme.texi\n\n@node Philosophy\n@chapter Philosophy\n\nGnulib's design and development philosophy is organized around steady,\ncollaborative, and open development of reusable modules that are\nsuitable for a reasonably wide variety of platforms.\n\n@menu\n* Benefits::\n* Library vs Reusable Code::\n* Portability and Application Code::\n* Target Platforms::\n* Modules::\n* Various Kinds of Modules::\n* Collaborative Development::\n* Copyright::\n* Steady Development::\n* Openness::\n@end menu\n\n@include gnulib-intro.texi\n\n\n@include gnulib-tool.texi\n\n\n@node Writing modules\n@chapter Writing modules\n\nThis chapter explains how to write modules of your own, either to\nextend Gnulib for your own package (@pxref{Extending Gnulib}), or for\ninclusion in gnulib proper.\n\nThe guidelines in this chapter do not necessarily need to be followed for\nusing @code{gnulib-tool}.  They merely represent a set of good practices.\nFollowing them will result in a good structure of your modules and in\nconsistency with gnulib.\n\n@menu\n* Source code files::\n* Header files::\n* Implementation files::\n* Specification::\n* Module description::\n* Autoconf macros::\n* Unit test modules::\n* Incompatible changes::\n@end menu\n\n\n@node Source code files\n@section Source code files\n\nEvery API (C functions or variables) provided should be declared in a header\nfile (.h file) and implemented in one or more implementation files (.c files).\nThe separation has the effect that users of your module need to read only\nthe contents of the .h file and the module description in order to understand\nwhat the module is about and how to use it---not the entire implementation.\nFurthermore, users of your module don't need to repeat the declarations of\nthe functions in their code, and are likely to receive notification through\ncompiler errors if you make incompatible changes to the API (like, adding a\nparameter or changing the return type of a function).\n\n\n@node Header files\n@section Header files\n\nThe .h file should declare the C functions and variables that the module\nprovides.\n\nThe .h file should be stand-alone.  That is, it does not require other .h files\nto be included before.  Rather, it includes all necessary .h files by itself.\n\n@cindex double inclusion of header files\n@cindex header file include protection\nIt is a tradition to use CPP tricks to avoid parsing the same header\nfile more than once, which might cause warnings.  The trick is to wrap\nthe content of the header file (say, @file{foo.h}) in a block, as in:\n\n@example\n#ifndef FOO_H\n# define FOO_H\n...\nbody of header file goes here\n...\n#endif /* FOO_H */\n@end example\n\nWhether to use @code{FOO_H} or @code{_FOO_H} is a matter of taste and\nstyle.  The C99 and C11 standards reserve all identifiers that begin with an\nunderscore and either an uppercase letter or another underscore, for\nany use.  Thus, in theory, an application might not safely assume that\n@code{_FOO_H} has not already been defined by a library.  On the other\nhand, using @code{FOO_H} will likely lead the higher risk of\ncollisions with other symbols (e.g., @code{KEY_H}, @code{XK_H}, @code{BPF_H},\nwhich are CPP macro constants, or @code{COFF_LONG_H}, which is a CPP\nmacro function).  Your preference may depend on whether you consider\nthe header file under discussion as part of the application (which has\nits own namespace for CPP symbols) or a supporting library (that\nshouldn't interfere with the application's CPP symbol namespace).\n\n@cindex C++ header files\n@cindex Header files and C++\nAdapting C header files for use in C++ applications can use another\nCPP trick, as in:\n\n@example\n# ifdef __cplusplus\nextern \"C\"\n@{\n# endif\n...\nbody of header file goes here\n...\n# ifdef __cplusplus\n@}\n# endif\n@end example\n\nThe idea here is that @code{__cplusplus} is defined only by C++\nimplementations, which will wrap the header file in an @samp{extern \"C\"}\nblock.  Again, whether to use this trick is a matter of taste and\nstyle.  While the above can be seen as harmless, it could be argued\nthat the header file is written in C, and any C++ application using it\nshould explicitly use the @samp{extern \"C\"} block itself.  Your\npreference might depend on whether you consider the API exported by\nyour header file as something available for C programs only, or for C\nand C++ programs alike.\n\nNote that putting a @code{#include} in an @code{extern \"C\" @{ ... @}}\nblock yields a syntax error in C++ mode on some platforms (e.g., glibc\nsystems with g++ v3.3 to v4.2, AIX, OSF/1, IRIX).  For this reason, it\nis recommended to place the @code{#include} before the @code{extern\n\"C\"} block.\n\n@node Implementation files\n@section Implementation files\n\nThe .c file or files implement the functions and variables declared in the\n.h file.\n\n@subheading Include ordering\n\nEvery implementation file must start with @samp{#include <config.h>}.\nThis is necessary for activating the preprocessor macros that are defined\non behalf of the Autoconf macros.  Some of these preprocessor macros,\nsuch as @code{_GNU_SOURCE}, would have no effect if defined after a system\nheader file has already been included.\n\nThen comes the @samp{#include \"...\"} specifying the header file that is\nbeing implemented.  Putting this right after @samp{#include <config.h>}\nhas the effect that it verifies that the header file is self-contained.\n\nThen come the system and application headers. It is customary to put all the\nsystem headers before all application headers, so as to minimize the risk\nthat a preprocessor macro defined in an application header confuses the system\nheaders on some platforms.\n\nIn summary:\n\n@itemize\n@item\nFirst comes #include <config.h>.\n@item\nSecond comes the #include \"...\" specifying the module being implemented.\n@item\nThen come all the #include <...> of system or system-replacement headers,\nin arbitrary order.\n@item\nThen come all the #include \"...\" of gnulib and application headers, in\narbitrary order.\n@end itemize\n\n\n@node Specification\n@section Specification\n\nThe specification of a function should answer at least the following\nquestions:\n@itemize\n@item\nWhat is the purpose of the function?\n@item\nWhat are the arguments?\n@item\nWhat is the return value?\n@item\nWhat happens in case of failure? (Exit? A specific return value? Errno set?)\n@item\nMemory allocation policy: If pointers to memory are returned, are they freshly\nallocated and supposed to be freed by the caller?\n@end itemize\n\n@cindex specification\n@cindex comments describing functions\n@cindex describing functions, locating\nWhere to put the specification describing exported functions? Three practices\nare used in gnulib:\n\n@itemize\n@item\nThe specification can be as comments in the header file, just above the\nfunction declaration.\n@item\nThe specification can be as comments in the implementation file, just above\nthe function definition.\n@item\nThe specification can be in texinfo format, so that it gets included in the\ngnulib manual.\n@end itemize\n\nIn any case, the specification should appear in just one place, unless you can\nensure that the multiple copies will always remain identical.\n\nThe advantage of putting it in the header file is that the user only has to\nread the include file normally never needs to peek into the implementation\nfile(s).\n\nThe advantage of putting it in the implementation file is that when reviewing\nor changing the implementation, you have both elements side by side.\n\nThe advantage of texinfo formatted documentation is that it is easily\npublished in HTML or Info format.\n\nCurrently (as of 2010), half of gnulib uses the first practice, nearly half\nof gnulib uses the second practice, and a small minority uses the texinfo\npractice.\n\n\n@node Module description\n@section Module description\n\nFor the module description, you can start from an existing module's\ndescription, or from a blank one: @file{module/TEMPLATE} for a normal module,\nor @file{module/TEMPLATE-TESTS} for a unit test module.  Some more fields\nare possible but rarely used.  Use @file{module/TEMPLATE-EXTENDED} if you\nwant to use one of them.\n\nModule descriptions have the following fields.  Absent fields are equivalent\nto fields with empty contents.\n\n@table @asis\n@item Description\nThis field should contain a concise description of the module's functionality.\nOne sentence is enough.  For example, if it defines a single function\n@samp{frob}, the description can be @samp{frob() function: frobnication.}\nGnulib's documentation generator will automatically convert the first part\nto a hyperlink when it has this form.\n\n@item Status\nThis field is either empty/absent, or contains the word @samp{obsolete}.  In\nthe latter case, @command{gnulib-tool} will, unless the option\n@code{--with-obsolete} is given, omit it when it used as a dependency.  It is\ngood practice to also notify the user about an obsolete module.  This is done\nby putting into the @samp{Notice} section (see below) text like\n@samp{This module is obsolete.}\n\n@item Notice\nThis field contains text that @command{gnulib-tool} will show to the user\nwhen the module is used.  This can be a status indicator like\n@samp{This module is obsolete.} or additional advice.  Do not abuse this\nfield.\n\n@item Applicability\nThis field is either empty/absent, or contains the word @samp{all}.  It\ndescribes to which @code{Makefile.am} the module is applied.  By default,\na normal module is applied to @code{@var{source_base}/Makefile.am}\n(normally @code{lib/Makefile.am}), whereas a module ending in @code{-tests}\nis applied to @code{@var{tests_base}/Makefile.am} (normally\n@code{tests/Makefile.am}).  If this field is @samp{all}, it is applied to\nboth @code{Makefile.am}s.  This is useful for modules which provide\nMakefile.am macros rather than compiled source code.\n\n@item Files\nThis field contains a newline separated list of the files that are part of\nthe module.  @code{gnulib-tool} copies these files into the package that\nuses the module.\n\nThis list is typically ordered by importance: First comes the header file,\nthen the implementation files, then other files.\n\nIt is possible to have the same file mentioned in multiple modules.  That is,\nif the maintainers of that module agree on the purpose and future of said\nfile.\n\n@item Depends-on\nThis field contains a newline separated list of the modules that are required\nfor the proper working of this module.  @code{gnulib-tool} includes each\nrequired module automatically, unless it is specified with option\n@code{--avoid} or it is marked as obsolete and the option\n@code{--with-obsolete} is not given.\n\nA test modules @code{foo-tests} implicitly depends on the corresponding non-test\nmodule @code{foo}.  @code{foo} implicitly depends on @code{foo-tests} if the\nlatter exists and if the option @code{--with-tests} has been given.\n\nTests modules can depend on non-tests modules.  Non-tests modules should not\ndepend on tests modules. (Recall that tests modules are built in a separate\ndirectory.)\n\nEach listed required module may be declared a conditional dependency.  This\nis indicated by placing the condition for the dependency on the same line,\nenclosed in brackets, after the name of the required module.  The condition\nis a shell expression that is run after the module's @code{configure.ac}\nstatements.  For example:\n@smallexample\nstrtoull   [test $ac_cv_func_strtoumax = no]\n@end smallexample\n\nLines starting with @code{#} are recognized as comments and are ignored.\n\n@item configure.ac-early\nThis field contains @file{configure.ac} stuff (Autoconf macro invocations and\nshell statements) that are logically placed early in the @file{configure.ac}\nfile: right after the @code{AC_PROG_CC} invocation.  This section is adequate\nfor statements that modify @code{CPPFLAGS}, as these can affect the results of\nother Autoconf macros.\n\n@item configure.ac\nThis field contains @file{configure.ac} stuff (Autoconf macro invocations and\nshell statements).\n\nIt is forbidden to add items to the @code{CPPFLAGS} variable here, other than\ntemporarily, as these could affect the results of other Autoconf macros.\n\nWe avoid adding items to the @code{LIBS} variable, other than temporarily.\nInstead, the module can export an Autoconf-substituted variable that contains\nlink options.  The user of the module can then decide to which executables\nto apply which link options.  Recall that a package can build executables of\ndifferent kinds and purposes; having all executables link against all\nlibraries is inappropriate.\n\nIf the statements in this section grow larger than a couple of lines, we\nrecommend moving them to a @code{.m4} file of their own.\n\n@item Makefile.am\nThis field contains @code{Makefile.am} statements.  Variables like\n@code{lib_SOURCES} are transformed to match the name of the library\nbeing built in that directory.  For example, @code{lib_SOURCES} may become\n@code{libgnu_a_SOURCES} (for a plain library) or @code{libgnu_la_SOURCES}\n(for a libtool library).  Therefore, the normal way of having an\nimplementation file @code{lib/foo.c} compiled unconditionally is to write\n@smallexample\nlib_SOURCES += foo.c\n@end smallexample\n\n@item Include\nThis field contains the preprocessor statements that users of the module\nneed to add to their source code files.  Typically it's a single include\nstatement.  A shorthand is allowed: You don't need to write the word\n``#include'', just the name of the include file in the way it will appear\nin an include statement.  Example:\n@smallexample\n\"foo.h\"\n@end smallexample\n\n@item Link\nThis field contains the set of libraries that are needed when linking\nlibraries or executables that use this module.  Often this will be\nwritten as a reference to a Makefile variable.  Please write them\none per line, so that @command{gnulib-tool} can remove duplicates\nwhen presenting a summary to the user.\nExample:\n@smallexample\n$(POW_LIBM)\n$(LTLIBICONV) when linking with libtool, $(LIBICONV) otherwise\n@end smallexample\nWhen this field is omitted, it defaults to the union of the @code{Link}\nfield of the dependencies.\n\n@item License\nThis field specifies the license that governs the source code parts of\nthis module.  See @ref{Copyright} for details.\n\n@item Maintainer\nThis field specifies the persons who have a definitive say about proposed\nchanges to this module.  You don't need to mention email addresses here:\nthey can be inferred from the @code{ChangeLog} file.\n\nPlease put at least one person here.  We don't like unmaintained modules.\n@end table\n\n\n@node Autoconf macros\n@section Autoconf macros\n\nFor a module @code{foo}, an Autoconf macro file @file{m4/foo.m4} is typically\ncreated when the Autoconf macro invocations for the module are longer than\none or two lines.\n\nThe name of the main entry point into this Autoconf macro file is typically\n@code{gl_FOO}.  For modules outside Gnulib that are not likely to be moved\ninto Gnulib, please use a prefix specific to your package: @code{gt_} for\nGNU gettext, @code{cu_} for GNU coreutils, etc.\n\nFor modules that define a function @code{foo}, the entry point is called\n@code{gl_FUNC_FOO} instead of @code{gl_FOO}.  For modules that provide a\nheader file with multiple functions, say @code{foo.h}, the entry point is\ncalled @code{gl_FOO_H} or @code{gl_HEADER_FOO_H}.  This convention is useful\nbecause sometimes a header and a function name coincide (for example,\n@code{fcntl} and @code{fcntl.h}).\n\nFor modules that provide a replacement, it is useful to split the Autoconf\nmacro into two macro definitions: one that detects whether the replacement\nis needed and requests the replacement using @code{AC_LIBOBJ} (this is the\nentry point, say @code{gl_FUNC_FOO}), and one that arranges for the macros\nneeded by the replacement code @code{lib/foo.c} (typically called\n@code{gl_PREREQ_FOO}).  The reason of this separation is\n@enumerate\n@item\nto make it easy to update the Autoconf macros when you have modified the\nsource code file: after changing @code{lib/foo.c}, all you have to review\nis the @code{Depends-on} section of the module description and the\n@code{gl_PREREQ_FOO} macro in the Autoconf macro file.\n@item\nThe Autoconf macros are often large enough that splitting them eases\nmaintenance.\n@end enumerate\n\n\n@node Unit test modules\n@section Unit test modules\n\nA unit test that is a simple C program usually has a module description as\nsimple as this:\n\n@smallexample\nFiles:\ntests/test-foo.c\ntests/macros.h\n\nDepends-on:\n\nconfigure.ac:\n\nMakefile.am:\nTESTS += test-foo\ncheck_PROGRAMS += test-foo\n@end smallexample\n\nThe test program @file{tests/test-foo.c} often has the following structure:\n\n@itemize\n@item\nFirst comes the obligatory @samp{#include <config.h>}.\n\n@item\nSecond comes the include of the header file that declares the API being tested.\nIncluding it here verifies that said header file is self-contained.\n\n@item\nThen come other includes.  In particular, the file @file{macros.h} is often\nused here.  It contains a convenient @code{ASSERT} macro.\n@end itemize\n\nThe body of the test, then, contains many @code{ASSERT} invocations.  When\na test fails, the @code{ASSERT} macro prints the line number of the failing\nstatement, thus giving you, the developer, an idea of which part of the test\nfailed, even when you don't have access to the machine where the test failed\nand the reporting user cannot run a debugger.\n\nSometimes it is convenient to write part of the test as a shell script.\n(For example, in areas related to process control or interprocess\ncommunication, or when different locales should be tried.) In these cases,\nthe typical module description is like this:\n\n@smallexample\nFiles:\ntests/test-foo.sh\ntests/test-foo.c\ntests/macros.h\n\nDepends-on:\n\nconfigure.ac:\n\nMakefile.am:\nTESTS += test-foo.sh\nTESTS_ENVIRONMENT += FOO_BAR='@@FOO_BAR@@'\ncheck_PROGRAMS += test-foo\n@end smallexample\n\nHere, the @code{TESTS_ENVIRONMENT} variable can be used to pass values\ndetermined by @code{configure} or by the @code{Makefile} to the shell\nscript, as environment variables.  The Autoconf values @code{EXEEXT}\nand @code{srcdir} are already provided as environment variables,\nthrough an initial value of @code{TESTS_ENVIRONMENT} that\n@code{gnulib-tool} puts in place.\n\nRegardless of the specific form of the unit test, the following guidelines\nshould be respected:\n\n@itemize\n@item\nA test indicates success by exiting with exit code 0.  It should normally\nnot produce output in this case.  (Output to temporary files that are\ncleaned up at the end of the test are possible, of course.)\n@item\nA test indicates failure by exiting with an exit code different from 0 and 77,\ntypically 1.  It is useful to print a message about the failure in this case.\nThe @code{ASSERT} macro already does so.\n@item\nA test indicates \"skip\", that is, that most of its interesting functionality\ncould not be performed, through a return code of 77.  A test should also\nprint a message to stdout or stderr about the reason for skipping.\nFor example:\n@smallexample\n  fputs (\"Skipping test: multithreading not enabled\\n\", stderr);\n  return 77;\n@end smallexample\nSuch a message helps detecting bugs in the autoconf macros: A simple message\n@samp{SKIP: test-foo} does not sufficiently catch the attention of the user.\n@end itemize\n\n\n@node Incompatible changes\n@section Incompatible changes\n\nIncompatible changes to Gnulib modules should be mentioned in Gnulib's\n@file{NEWS} file.  Incompatible changes here mean that existing source code\nmay not compile or work any more.\n\nWe don't mean changes in the binary interface (ABI), since\n@enumerate\n@item\nGnulib code is used in source-code form.\n@item\nThe user who distributes libraries that contain Gnulib code is supposed to\nbump the version number in the way described in the Libtool documentation\nbefore every release.\n@end enumerate\n\n\n@node Extending Gnulib\n@chapter Extending Gnulib\n\nGnulib modules are intended to be suitable for widespread use.  Most\nproblems with Gnulib can and should be fixed in a generic way, so that\nall of Gnulib's users can benefit from the change.  But occasionally a\nproblem arises that is difficult or undesirable to fix generically, or\na project that uses Gnulib may need to work around an issue before the\nGnulib maintainers commit a final fix.  Maintainers may also want to\nadd their own pools of modules to projects as Gnulib ``staging\nareas.''\n\nThe obvious way to make local changes to Gnulib modules is to use\n@command{gnulib-tool} to check out pristine modules, then to modify\nthe results in-place.  This works well enough for short-lived\nexperiments.  It is harder to keep modified versions of Gnulib modules\nfor a long time, even though Git (or another distributed version\ncontrol systems) can help out a lot with this during the development\nprocess.\n\nGit, however, doesn't address the distribution issue.  When a package\n``foobar'' needs a modified version of, say, @file{stdint.in.h}, it\neither has to put a comment into @file{foobar/autogen.sh} saying\n``Attention! This doesn't work with a pristine Gnulib, you need this\nand that patch after checking out Gnulib,'' or it has to use the\n@samp{--avoid=stdint} option and provide the modified @code{stdint}\nmodule in a different directory.\n\nThe @option{--local-dir} option to @command{gnulib-tool} solves this\nproblem.  It allows the package to override or augment Gnulib.  This\nmeans:\n\n@itemize @bullet\n@item\nYou can store files that are to override Gnulib files or modules.\n\n@item\nYou can store context diffs to be applied to Gnulib files.\n\n@item\nYou can add modules of your own, that are not (yet) in Gnulib.\n\n@item\nYou can also add unstructured amounts of code to the library, by\ngrouping the non-Gnulib files of the library in a single kitchen-sink\n``module.''  (This kind of kitchen-sink module is not needed when you\nuse the @command{gnulib-tool} option @option{--makefile-name}.)\n@end itemize\n\nIn a release tarball, you can distribute the contents of this\n@option{--local-dir} directory that will be combinable with newer\nversions of Gnulib, barring incompatible changes to Gnulib.\n\nIf the @option{--local-dir=@var{directory}} option is specified, then\n@command{gnulib-tool} looks in @file{@var{directory}} whenever it\nreads a file from the Gnulib directory.  Suppose @command{gnulib-tool}\nis looking for @var{file}.  Then:\n\n@itemize @bullet\n@item\nIf @file{@var{directory}/@var{file}} exists, then @command{gnulib-tool} uses\nit instead of the file included in Gnulib.\n\n@item\nOtherwise, if @file{@var{directory}/@var{file}.diff} exists, then\n@command{gnulib-tool} uses the file from Gnulib after applying the diff\nusing the @command{patch} program.\n\n@item\nOtherwise, @command{gnulib-tool} uses the file included in Gnulib.\n@end itemize\n\nYou can specify the @option{--local-dir} multiple times.  In this case,\nthe first specified directory has the highest precedence.  That is, a\n@file{@var{file}} found in one directory will shadow any @file{@var{file}}\nand @file{@var{file}.diff} in the later directories and in the Gnulib\ndirectory.  And a file @file{@var{file}.diff} found in one directory will\nbe applied on top of the combination of @file{@var{file}} and\n@file{@var{file}.diff} files found in the later directories and in the\nGnulib directory.\n\nPlease make wise use of this option.  It also allows you to easily\nhold back modifications you make to Gnulib macros in cases it may be\nbetter to share them.\n\n\n@node Miscellaneous Notes\n@chapter Miscellaneous Notes\n\n@menu\n* Out of memory handling::\n* Obsolete modules::\n* Extra tests modules::\n* Modules that modify the way other modules work::\n* A C++ namespace for gnulib::      A different way of using Gnulib in C++\n* Running self-tests under valgrind::\n* License Texinfo sources::\n* Building gnulib::\n@end menu\n\n@include out-of-memory.texi\n\n@include obsolete.texi\n\n@include extra-tests.texi\n\n@include transversal.texi\n\n@include namespace.texi\n\n@include valgrind-tests.texi\n\n@include licenses-texi.texi\n\n@include build-automation.texi\n\n\n@node POSIX Substitutes Library\n@chapter Building the ISO C and POSIX Substitutes\n\nThis section shows a radically different way to use Gnulib.\n\nYou can extract the ISO C / POSIX substitutes part of gnulib by running\nthe command\n@smallexample\ngnulib-tool --create-testdir --source-base=lib \\\n            --dir=/tmp/posixlib `posix-modules`\n@end smallexample\n\n@noindent\nThe command @samp{posix-modules} is found in the same directory as\n@code{gnulib-tool}.\n\nThe resulting directory can be built on a particular platform,\nindependently of the program being ported.  Then you can configure and\nbuild any program, by setting @code{CPPFLAGS} and @code{LDFLAGS} at\nconfigure time accordingly: set @code{CPPFLAGS=\"-I.../posixlib/lib\"}, plus\nany essential type definitions and flags that you find in\n@code{.../posixlib/config.h}, and set\n@code{LDFLAGS=\".../posixlib/lib/libgnu.a\"}.\n\nThis way of using Gnulib is useful when you don't want to modify the program's\nsource code, or when the program uses a mix between C and C++ sources\n(requiring separate builds of the @code{posixlib} for the C compiler and\nfor the C++ compiler).\n\n@node Header File Substitutes\n@chapter ISO C and POSIX Header File Substitutes\n\nThis chapter describes which header files specified by ISO C or POSIX are\nsubstituted by Gnulib, which portability pitfalls are fixed by Gnulib, and\nwhich (known) portability problems are not worked around by Gnulib.\n\n@nosuchmodulenote header file\n\n@menu\n* aio.h::\n* arpa/inet.h::\n* assert.h::\n* complex.h::\n* cpio.h::\n* ctype.h::\n* dirent.h::\n* dlfcn.h::\n* errno.h::\n* fcntl.h::\n* fenv.h::\n* float.h::\n* fmtmsg.h::\n* fnmatch.h::\n* ftw.h::\n* glob.h::\n* grp.h::\n* iconv.h::\n* inttypes.h::\n* iso646.h::\n* langinfo.h::\n* libgen.h::\n* limits.h::\n* locale.h::\n* math.h::\n* monetary.h::\n* mqueue.h::\n* ndbm.h::\n* net/if.h::\n* netdb.h::\n* netinet/in.h::\n* netinet/tcp.h::\n* nl_types.h::\n* poll.h::\n* pthread.h::\n* pwd.h::\n* regex.h::\n* sched.h::\n* search.h::\n* semaphore.h::\n* setjmp.h::\n* signal.h::\n* spawn.h::\n* stdalign.h::\n* stdarg.h::\n* stdbool.h::\n* stddef.h::\n* stdint.h::\n* stdio.h::\n* stdlib.h::\n* stdnoreturn.h::\n* string.h::\n* strings.h::\n* stropts.h::\n* sys/ipc.h::\n* sys/mman.h::\n* sys/msg.h::\n* sys/resource.h::\n* sys/select.h::\n* sys/sem.h::\n* sys/shm.h::\n* sys/socket.h::\n* sys/stat.h::\n* sys/statvfs.h::\n* sys/time.h::\n* sys/timeb.h::\n* sys/times.h::\n* sys/types.h::\n* sys/uio.h::\n* sys/un.h::\n* sys/utsname.h::\n* sys/wait.h::\n* syslog.h::\n* tar.h::\n* termios.h::\n* tgmath.h::\n* time.h::\n* trace.h::\n* uchar.h::\n* ucontext.h::\n* ulimit.h::\n* unistd.h::\n* utime.h::\n* utmpx.h::\n* wchar.h::\n* wctype.h::\n* wordexp.h::\n@end menu\n\n@include posix-headers/aio.texi\n@include posix-headers/arpa_inet.texi\n@include posix-headers/assert.texi\n@include posix-headers/complex.texi\n@include posix-headers/cpio.texi\n@include posix-headers/ctype.texi\n@include posix-headers/dirent.texi\n@include posix-headers/dlfcn.texi\n@include posix-headers/errno.texi\n@include posix-headers/fcntl.texi\n@include posix-headers/fenv.texi\n@include posix-headers/float.texi\n@include posix-headers/fmtmsg.texi\n@include posix-headers/fnmatch.texi\n@include posix-headers/ftw.texi\n@include posix-headers/glob.texi\n@include posix-headers/grp.texi\n@include posix-headers/iconv.texi\n@include posix-headers/inttypes.texi\n@include posix-headers/iso646.texi\n@include posix-headers/langinfo.texi\n@include posix-headers/libgen.texi\n@include posix-headers/limits.texi\n@include posix-headers/locale.texi\n@include posix-headers/math.texi\n@include posix-headers/monetary.texi\n@include posix-headers/mqueue.texi\n@include posix-headers/ndbm.texi\n@include posix-headers/net_if.texi\n@include posix-headers/netdb.texi\n@include posix-headers/netinet_in.texi\n@include posix-headers/netinet_tcp.texi\n@include posix-headers/nl_types.texi\n@include posix-headers/poll.texi\n@include posix-headers/pthread.texi\n@include posix-headers/pwd.texi\n@include posix-headers/regex.texi\n@include posix-headers/sched.texi\n@include posix-headers/search.texi\n@include posix-headers/semaphore.texi\n@include posix-headers/setjmp.texi\n@include posix-headers/signal.texi\n@include posix-headers/spawn.texi\n@include posix-headers/stdalign.texi\n@include posix-headers/stdarg.texi\n@include posix-headers/stdbool.texi\n@include posix-headers/stddef.texi\n@include posix-headers/stdint.texi\n@include posix-headers/stdio.texi\n@include posix-headers/stdlib.texi\n@include posix-headers/stdnoreturn.texi\n@include posix-headers/string.texi\n@include posix-headers/strings.texi\n@include posix-headers/stropts.texi\n@include posix-headers/sys_ipc.texi\n@include posix-headers/sys_mman.texi\n@include posix-headers/sys_msg.texi\n@include posix-headers/sys_resource.texi\n@include posix-headers/sys_select.texi\n@include posix-headers/sys_sem.texi\n@include posix-headers/sys_shm.texi\n@include posix-headers/sys_socket.texi\n@include posix-headers/sys_stat.texi\n@include posix-headers/sys_statvfs.texi\n@include posix-headers/sys_time.texi\n@include posix-headers/sys_timeb.texi\n@include posix-headers/sys_times.texi\n@include posix-headers/sys_types.texi\n@include posix-headers/sys_uio.texi\n@include posix-headers/sys_un.texi\n@include posix-headers/sys_utsname.texi\n@include posix-headers/sys_wait.texi\n@include posix-headers/syslog.texi\n@include posix-headers/tar.texi\n@include posix-headers/termios.texi\n@include posix-headers/tgmath.texi\n@include posix-headers/time.texi\n@include posix-headers/trace.texi\n@include posix-headers/uchar.texi\n@include posix-headers/ucontext.texi\n@include posix-headers/ulimit.texi\n@include posix-headers/unistd.texi\n@include posix-headers/utime.texi\n@include posix-headers/utmpx.texi\n@include posix-headers/wchar.texi\n@include posix-headers/wctype.texi\n@include posix-headers/wordexp.texi\n\n@node Function Substitutes\n@chapter ISO C and POSIX Function Substitutes\n\nThis chapter describes which functions and function-like macros specified by\nISO C or POSIX are substituted by Gnulib, which portability pitfalls are\nfixed by Gnulib, and which (known) portability problems are not worked around\nby Gnulib.\n\n@nosuchmodulenote function\n\n@menu\n* FD_CLR::\n* FD_ISSET::\n* FD_SET::\n* FD_ZERO::\n* _Exit::\n* _exit::\n* _longjmp::\n* _setjmp::\n* _tolower::\n* _toupper::\n* a64l::\n* abort::\n* abs::\n* accept::\n* access::\n* acos::\n* acosf::\n* acosh::\n* acoshf::\n* acoshl::\n* acosl::\n* aio_cancel::\n* aio_error::\n* aio_fsync::\n* aio_read::\n* aio_return::\n* aio_suspend::\n* aio_write::\n* alarm::\n* aligned_alloc::\n* alphasort::\n* asctime::\n* asctime_r::\n* asin::\n* asinf::\n* asinh::\n* asinhf::\n* asinhl::\n* asinl::\n* assert::\n* atan::\n* atan2::\n* atan2f::\n* atan2l::\n* atanf::\n* atanh::\n* atanhf::\n* atanhl::\n* atanl::\n* atexit::\n* atof::\n* atoi::\n* atol::\n* atoll::\n* basename::\n* bind::\n* bsearch::\n* btowc::\n* c16rtomb::\n* c32rtomb::\n* cabs::\n* cabsf::\n* cabsl::\n* cacos::\n* cacosf::\n* cacosh::\n* cacoshf::\n* cacoshl::\n* cacosl::\n* calloc::\n* carg::\n* cargf::\n* cargl::\n* casin::\n* casinf::\n* casinh::\n* casinhf::\n* casinhl::\n* casinl::\n* catan::\n* catanf::\n* catanh::\n* catanhf::\n* catanhl::\n* catanl::\n* catclose::\n* catgets::\n* catopen::\n* cbrt::\n* cbrtf::\n* cbrtl::\n* ccos::\n* ccosf::\n* ccosh::\n* ccoshf::\n* ccoshl::\n* ccosl::\n* ceil::\n* ceilf::\n* ceill::\n* cexp::\n* cexpf::\n* cexpl::\n* cfgetispeed::\n* cfgetospeed::\n* cfsetispeed::\n* cfsetospeed::\n* chdir::\n* chmod::\n* chown::\n* cimag::\n* cimagf::\n* cimagl::\n* clearerr::\n* clock::\n* clock_getcpuclockid::\n* clock_getres::\n* clock_gettime::\n* clock_nanosleep::\n* clock_settime::\n* clog::\n* clogf::\n* clogl::\n* close::\n* closedir::\n* closelog::\n* confstr::\n* conj::\n* conjf::\n* conjl::\n* connect::\n* copysign::\n* copysignf::\n* copysignl::\n* cos::\n* cosf::\n* cosh::\n* coshf::\n* coshl::\n* cosl::\n* cpow::\n* cpowf::\n* cpowl::\n* cproj::\n* cprojf::\n* cprojl::\n* creal::\n* crealf::\n* creall::\n* creat::\n* crypt::\n* csin::\n* csinf::\n* csinh::\n* csinhf::\n* csinhl::\n* csinl::\n* csqrt::\n* csqrtf::\n* csqrtl::\n* ctan::\n* ctanf::\n* ctanh::\n* ctanhf::\n* ctanhl::\n* ctanl::\n* ctermid::\n* ctime::\n* ctime_r::\n* daylight::\n* dbm_clearerr::\n* dbm_close::\n* dbm_delete::\n* dbm_error::\n* dbm_fetch::\n* dbm_firstkey::\n* dbm_nextkey::\n* dbm_open::\n* dbm_store::\n* difftime::\n* dirfd::\n* dirname::\n* div::\n* dlclose::\n* dlerror::\n* dlopen::\n* dlsym::\n* dprintf::\n* drand48::\n* dup::\n* dup2::\n* duplocale::\n* encrypt::\n* endgrent::\n* endhostent::\n* endnetent::\n* endprotoent::\n* endpwent::\n* endservent::\n* endutxent::\n* environ::\n* erand48::\n* erf::\n* erfc::\n* erfcf::\n* erfcl::\n* erff::\n* erfl::\n* errno::\n* execl::\n* execle::\n* execlp::\n* execv::\n* execve::\n* execvp::\n* exit::\n* exp::\n* exp2::\n* exp2f::\n* exp2l::\n* expf::\n* expl::\n* expm1::\n* expm1f::\n* expm1l::\n* fabs::\n* fabsf::\n* fabsl::\n* faccessat::\n* fattach::\n* fchdir::\n* fchmod::\n* fchmodat::\n* fchown::\n* fchownat::\n* fclose::\n* fcntl::\n* fdatasync::\n* fdetach::\n* fdim::\n* fdimf::\n* fdiml::\n* fdopen::\n* fdopendir::\n* feclearexcept::\n* fegetenv::\n* fegetexceptflag::\n* fegetround::\n* feholdexcept::\n* feof::\n* feraiseexcept::\n* ferror::\n* fesetenv::\n* fesetexceptflag::\n* fesetround::\n* fetestexcept::\n* feupdateenv::\n* fexecve::\n* fflush::\n* ffs::\n* fgetc::\n* fgetpos::\n* fgets::\n* fgetwc::\n* fgetws::\n* fileno::\n* flockfile::\n* floor::\n* floorf::\n* floorl::\n* fma::\n* fmaf::\n* fmal::\n* fmax::\n* fmaxf::\n* fmaxl::\n* fmemopen::\n* fmin::\n* fminf::\n* fminl::\n* fmod::\n* fmodf::\n* fmodl::\n* fmtmsg::\n* fnmatch::\n* fopen::\n* fork::\n* fpathconf::\n* fpclassify::\n* fprintf::\n* fputc::\n* fputs::\n* fputwc::\n* fputws::\n* fread::\n* free::\n* freeaddrinfo::\n* freelocale::\n* freopen::\n* frexp::\n* frexpf::\n* frexpl::\n* fscanf::\n* fseek::\n* fseeko::\n* fsetpos::\n* fstat::\n* fstatat::\n* fstatvfs::\n* fsync::\n* ftell::\n* ftello::\n* ftok::\n* ftruncate::\n* ftrylockfile::\n* ftw::\n* funlockfile::\n* futimens::\n* fwide::\n* fwprintf::\n* fwrite::\n* fwscanf::\n* gai_strerror::\n* getaddrinfo::\n* getc::\n* getc_unlocked::\n* getchar::\n* getchar_unlocked::\n* getcwd::\n* getdate::\n* getdate_err::\n* getdelim::\n* getegid::\n* getenv::\n* geteuid::\n* getgid::\n* getgrent::\n* getgrgid::\n* getgrgid_r::\n* getgrnam::\n* getgrnam_r::\n* getgroups::\n* gethostent::\n* gethostid::\n* gethostname::\n* getitimer::\n* getline::\n* getlogin::\n* getlogin_r::\n* getmsg::\n* getnameinfo::\n* getnetbyaddr::\n* getnetbyname::\n* getnetent::\n* getopt::\n* getpeername::\n* getpgid::\n* getpgrp::\n* getpid::\n* getpmsg::\n* getppid::\n* getpriority::\n* getprotobyname::\n* getprotobynumber::\n* getprotoent::\n* getpwent::\n* getpwnam::\n* getpwnam_r::\n* getpwuid::\n* getpwuid_r::\n* getrlimit::\n* getrusage::\n* gets::\n* getservbyname::\n* getservbyport::\n* getservent::\n* getsid::\n* getsockname::\n* getsockopt::\n* getsubopt::\n* gettimeofday::\n* getuid::\n* getutxent::\n* getutxid::\n* getutxline::\n* getwc::\n* getwchar::\n* glob::\n* globfree::\n* gmtime::\n* gmtime_r::\n* grantpt::\n* hcreate::\n* hdestroy::\n* hsearch::\n* htonl::\n* htons::\n* hypot::\n* hypotf::\n* hypotl::\n* iconv::\n* iconv_close::\n* iconv_open::\n* if_freenameindex::\n* if_indextoname::\n* if_nameindex::\n* if_nametoindex::\n* ilogb::\n* ilogbf::\n* ilogbl::\n* imaxabs::\n* imaxdiv::\n* inet_addr::\n* inet_ntoa::\n* inet_ntop::\n* inet_pton::\n* initstate::\n* insque::\n* ioctl::\n* isalnum::\n* isalnum_l::\n* isalpha::\n* isalpha_l::\n* isascii::\n* isastream::\n* isatty::\n* isblank::\n* isblank_l::\n* iscntrl::\n* iscntrl_l::\n* isdigit::\n* isdigit_l::\n* isfinite::\n* isgraph::\n* isgraph_l::\n* isgreater::\n* isgreaterequal::\n* isinf::\n* isless::\n* islessequal::\n* islessgreater::\n* islower::\n* islower_l::\n* isnan::\n* isnormal::\n* isprint::\n* isprint_l::\n* ispunct::\n* ispunct_l::\n* isspace::\n* isspace_l::\n* isunordered::\n* isupper::\n* isupper_l::\n* iswalnum::\n* iswalnum_l::\n* iswalpha::\n* iswalpha_l::\n* iswblank::\n* iswblank_l::\n* iswcntrl::\n* iswcntrl_l::\n* iswctype::\n* iswctype_l::\n* iswdigit::\n* iswdigit_l::\n* iswgraph::\n* iswgraph_l::\n* iswlower::\n* iswlower_l::\n* iswprint::\n* iswprint_l::\n* iswpunct::\n* iswpunct_l::\n* iswspace::\n* iswspace_l::\n* iswupper::\n* iswupper_l::\n* iswxdigit::\n* iswxdigit_l::\n* isxdigit::\n* isxdigit_l::\n* j0::\n* j1::\n* jn::\n* jrand48::\n* kill::\n* killpg::\n* l64a::\n* labs::\n* lchown::\n* lcong48::\n* ldexp::\n* ldexpf::\n* ldexpl::\n* ldiv::\n* lfind::\n* lgamma::\n* lgammaf::\n* lgammal::\n* link::\n* linkat::\n* lio_listio::\n* listen::\n* llabs::\n* lldiv::\n* llrint::\n* llrintf::\n* llrintl::\n* llround::\n* llroundf::\n* llroundl::\n* localeconv::\n* localtime::\n* localtime_r::\n* lockf::\n* log::\n* log10::\n* log10f::\n* log10l::\n* log1p::\n* log1pf::\n* log1pl::\n* log2::\n* log2f::\n* log2l::\n* logb::\n* logbf::\n* logbl::\n* logf::\n* logl::\n* longjmp::\n* lrand48::\n* lrint::\n* lrintf::\n* lrintl::\n* lround::\n* lroundf::\n* lroundl::\n* lsearch::\n* lseek::\n* lstat::\n* malloc::\n* mblen::\n* mbrlen::\n* mbrtoc16::\n* mbrtoc32::\n* mbrtowc::\n* mbsinit::\n* mbsnrtowcs::\n* mbsrtowcs::\n* mbstowcs::\n* mbtowc::\n* memccpy::\n* memchr::\n* memcmp::\n* memcpy::\n* memmove::\n* memset::\n* mkdir::\n* mkdirat::\n* mkdtemp::\n* mkfifo::\n* mkfifoat::\n* mknod::\n* mknodat::\n* mkstemp::\n* mktime::\n* mlock::\n* mlockall::\n* mmap::\n* modf::\n* modff::\n* modfl::\n* mprotect::\n* mq_close::\n* mq_getattr::\n* mq_notify::\n* mq_open::\n* mq_receive::\n* mq_send::\n* mq_setattr::\n* mq_timedreceive::\n* mq_timedsend::\n* mq_unlink::\n* mrand48::\n* msgctl::\n* msgget::\n* msgrcv::\n* msgsnd::\n* msync::\n* munlock::\n* munlockall::\n* munmap::\n* nan::\n* nanf::\n* nanl::\n* nanosleep::\n* nearbyint::\n* nearbyintf::\n* nearbyintl::\n* newlocale::\n* nextafter::\n* nextafterf::\n* nextafterl::\n* nexttoward::\n* nexttowardf::\n* nexttowardl::\n* nftw::\n* nice::\n* nl_langinfo::\n* nl_langinfo_l::\n* nrand48::\n* ntohl::\n* ntohs::\n* open::\n* openat::\n* opendir::\n* openlog::\n* open_memstream::\n* open_wmemstream::\n* optarg::\n* opterr::\n* optind::\n* optopt::\n* pathconf::\n* pause::\n* pclose::\n* perror::\n* pipe::\n* poll::\n* popen::\n* posix_fadvise::\n* posix_fallocate::\n* posix_madvise::\n* posix_mem_offset::\n* posix_memalign::\n* posix_openpt::\n* posix_spawn::\n* posix_spawn_file_actions_addclose::\n* posix_spawn_file_actions_adddup2::\n* posix_spawn_file_actions_addopen::\n* posix_spawn_file_actions_destroy::\n* posix_spawn_file_actions_init::\n* posix_spawnattr_destroy::\n* posix_spawnattr_getflags::\n* posix_spawnattr_getpgroup::\n* posix_spawnattr_getschedparam::\n* posix_spawnattr_getschedpolicy::\n* posix_spawnattr_getsigdefault::\n* posix_spawnattr_getsigmask::\n* posix_spawnattr_init::\n* posix_spawnattr_setflags::\n* posix_spawnattr_setpgroup::\n* posix_spawnattr_setschedparam::\n* posix_spawnattr_setschedpolicy::\n* posix_spawnattr_setsigdefault::\n* posix_spawnattr_setsigmask::\n* posix_spawnp::\n* posix_trace_attr_destroy::\n* posix_trace_attr_getclockres::\n* posix_trace_attr_getcreatetime::\n* posix_trace_attr_getgenversion::\n* posix_trace_attr_getinherited::\n* posix_trace_attr_getlogfullpolicy::\n* posix_trace_attr_getlogsize::\n* posix_trace_attr_getmaxdatasize::\n* posix_trace_attr_getmaxsystemeventsize::\n* posix_trace_attr_getmaxusereventsize::\n* posix_trace_attr_getname::\n* posix_trace_attr_getstreamfullpolicy::\n* posix_trace_attr_getstreamsize::\n* posix_trace_attr_init::\n* posix_trace_attr_setinherited::\n* posix_trace_attr_setlogfullpolicy::\n* posix_trace_attr_setlogsize::\n* posix_trace_attr_setmaxdatasize::\n* posix_trace_attr_setname::\n* posix_trace_attr_setstreamfullpolicy::\n* posix_trace_attr_setstreamsize::\n* posix_trace_clear::\n* posix_trace_close::\n* posix_trace_create::\n* posix_trace_create_withlog::\n* posix_trace_event::\n* posix_trace_eventid_equal::\n* posix_trace_eventid_get_name::\n* posix_trace_eventid_open::\n* posix_trace_eventset_add::\n* posix_trace_eventset_del::\n* posix_trace_eventset_empty::\n* posix_trace_eventset_fill::\n* posix_trace_eventset_ismember::\n* posix_trace_eventtypelist_getnext_id::\n* posix_trace_eventtypelist_rewind::\n* posix_trace_flush::\n* posix_trace_get_attr::\n* posix_trace_get_filter::\n* posix_trace_get_status::\n* posix_trace_getnext_event::\n* posix_trace_open::\n* posix_trace_rewind::\n* posix_trace_set_filter::\n* posix_trace_shutdown::\n* posix_trace_start::\n* posix_trace_stop::\n* posix_trace_timedgetnext_event::\n* posix_trace_trid_eventid_open::\n* posix_trace_trygetnext_event::\n* posix_typed_mem_get_info::\n* posix_typed_mem_open::\n* pow::\n* powf::\n* powl::\n* pread::\n* printf::\n* pselect::\n* psiginfo::\n* psignal::\n* pthread_atfork::\n* pthread_attr_destroy::\n* pthread_attr_getdetachstate::\n* pthread_attr_getguardsize::\n* pthread_attr_getinheritsched::\n* pthread_attr_getschedparam::\n* pthread_attr_getschedpolicy::\n* pthread_attr_getscope::\n* pthread_attr_getstack::\n* pthread_attr_getstacksize::\n* pthread_attr_init::\n* pthread_attr_setdetachstate::\n* pthread_attr_setguardsize::\n* pthread_attr_setinheritsched::\n* pthread_attr_setschedparam::\n* pthread_attr_setschedpolicy::\n* pthread_attr_setscope::\n* pthread_attr_setstack::\n* pthread_attr_setstacksize::\n* pthread_barrier_destroy::\n* pthread_barrier_init::\n* pthread_barrier_wait::\n* pthread_barrierattr_destroy::\n* pthread_barrierattr_getpshared::\n* pthread_barrierattr_init::\n* pthread_barrierattr_setpshared::\n* pthread_cancel::\n* pthread_cleanup_pop::\n* pthread_cleanup_push::\n* pthread_cond_broadcast::\n* pthread_cond_destroy::\n* pthread_cond_init::\n* pthread_cond_signal::\n* pthread_cond_timedwait::\n* pthread_cond_wait::\n* pthread_condattr_destroy::\n* pthread_condattr_getclock::\n* pthread_condattr_getpshared::\n* pthread_condattr_init::\n* pthread_condattr_setclock::\n* pthread_condattr_setpshared::\n* pthread_create::\n* pthread_detach::\n* pthread_equal::\n* pthread_exit::\n* pthread_getconcurrency::\n* pthread_getcpuclockid::\n* pthread_getschedparam::\n* pthread_getspecific::\n* pthread_join::\n* pthread_key_create::\n* pthread_key_delete::\n* pthread_kill::\n* pthread_mutex_consistent::\n* pthread_mutex_destroy::\n* pthread_mutex_getprioceiling::\n* pthread_mutex_init::\n* pthread_mutex_lock::\n* pthread_mutex_setprioceiling::\n* pthread_mutex_timedlock::\n* pthread_mutex_trylock::\n* pthread_mutex_unlock::\n* pthread_mutexattr_destroy::\n* pthread_mutexattr_getprioceiling::\n* pthread_mutexattr_getprotocol::\n* pthread_mutexattr_getpshared::\n* pthread_mutexattr_getrobust::\n* pthread_mutexattr_gettype::\n* pthread_mutexattr_init::\n* pthread_mutexattr_setprioceiling::\n* pthread_mutexattr_setprotocol::\n* pthread_mutexattr_setpshared::\n* pthread_mutexattr_setrobust::\n* pthread_mutexattr_settype::\n* pthread_once::\n* pthread_rwlock_destroy::\n* pthread_rwlock_init::\n* pthread_rwlock_rdlock::\n* pthread_rwlock_timedrdlock::\n* pthread_rwlock_timedwrlock::\n* pthread_rwlock_tryrdlock::\n* pthread_rwlock_trywrlock::\n* pthread_rwlock_unlock::\n* pthread_rwlock_wrlock::\n* pthread_rwlockattr_destroy::\n* pthread_rwlockattr_getpshared::\n* pthread_rwlockattr_init::\n* pthread_rwlockattr_setpshared::\n* pthread_self::\n* pthread_setcancelstate::\n* pthread_setcanceltype::\n* pthread_setconcurrency::\n* pthread_setschedparam::\n* pthread_setschedprio::\n* pthread_setspecific::\n* pthread_sigmask::\n* pthread_spin_destroy::\n* pthread_spin_init::\n* pthread_spin_lock::\n* pthread_spin_trylock::\n* pthread_spin_unlock::\n* pthread_testcancel::\n* ptsname::\n* putc::\n* putc_unlocked::\n* putchar::\n* putchar_unlocked::\n* putenv::\n* putmsg::\n* putpmsg::\n* puts::\n* pututxline::\n* putwc::\n* putwchar::\n* pwrite::\n* qsort::\n* quick_exit::\n* raise::\n* rand::\n* rand_r::\n* random::\n* read::\n* readdir::\n* readdir_r::\n* readlink::\n* readlinkat::\n* readv::\n* realloc::\n* realpath::\n* recv::\n* recvfrom::\n* recvmsg::\n* regcomp::\n* regerror::\n* regexec::\n* regfree::\n* remainder::\n* remainderf::\n* remainderl::\n* remove::\n* remque::\n* remquo::\n* remquof::\n* remquol::\n* rename::\n* renameat::\n* rewind::\n* rewinddir::\n* rint::\n* rintf::\n* rintl::\n* rmdir::\n* round::\n* roundf::\n* roundl::\n* scalbln::\n* scalblnf::\n* scalblnl::\n* scalbn::\n* scalbnf::\n* scalbnl::\n* scandir::\n* scanf::\n* sched_get_priority_max::\n* sched_get_priority_min::\n* sched_getparam::\n* sched_getscheduler::\n* sched_rr_get_interval::\n* sched_setparam::\n* sched_setscheduler::\n* sched_yield::\n* seed48::\n* seekdir::\n* select::\n* sem_close::\n* sem_destroy::\n* sem_getvalue::\n* sem_init::\n* sem_open::\n* sem_post::\n* sem_timedwait::\n* sem_trywait::\n* sem_unlink::\n* sem_wait::\n* semctl::\n* semget::\n* semop::\n* send::\n* sendmsg::\n* sendto::\n* setbuf::\n* setegid::\n* setenv::\n* seteuid::\n* setgid::\n* setgrent::\n* sethostent::\n* setitimer::\n* setjmp::\n* setkey::\n* setlocale::\n* setlogmask::\n* setnetent::\n* setpgid::\n* setpgrp::\n* setpriority::\n* setprotoent::\n* setpwent::\n* setregid::\n* setreuid::\n* setrlimit::\n* setservent::\n* setsid::\n* setsockopt::\n* setstate::\n* setuid::\n* setutxent::\n* setvbuf::\n* shm_open::\n* shm_unlink::\n* shmat::\n* shmctl::\n* shmdt::\n* shmget::\n* shutdown::\n* sigaction::\n* sigaddset::\n* sigaltstack::\n* sigdelset::\n* sigemptyset::\n* sigfillset::\n* sighold::\n* sigignore::\n* siginterrupt::\n* sigismember::\n* siglongjmp::\n* signal::\n* signbit::\n* signgam::\n* sigpause::\n* sigpending::\n* sigprocmask::\n* sigqueue::\n* sigrelse::\n* sigset::\n* sigsetjmp::\n* sigsuspend::\n* sigtimedwait::\n* sigwait::\n* sigwaitinfo::\n* sin::\n* sinf::\n* sinh::\n* sinhf::\n* sinhl::\n* sinl::\n* sleep::\n* snprintf::\n* sockatmark::\n* socket::\n* socketpair::\n* sprintf::\n* sqrt::\n* sqrtf::\n* sqrtl::\n* srand::\n* srand48::\n* srandom::\n* sscanf::\n* stat::\n* statvfs::\n* stderr::\n* stdin::\n* stdout::\n* stpcpy::\n* stpncpy::\n* strcasecmp::\n* strcasecmp_l::\n* strcat::\n* strchr::\n* strcmp::\n* strcoll::\n* strcoll_l::\n* strcpy::\n* strcspn::\n* strdup::\n* strerror::\n* strerror_l::\n* strerror_r::\n* strfmon::\n* strfmon_l::\n* strftime::\n* strftime_l::\n* strlen::\n* strncasecmp::\n* strncasecmp_l::\n* strncat::\n* strncmp::\n* strncpy::\n* strndup::\n* strnlen::\n* strpbrk::\n* strptime::\n* strrchr::\n* strsignal::\n* strspn::\n* strstr::\n* strtod::\n* strtof::\n* strtoimax::\n* strtok::\n* strtok_r::\n* strtol::\n* strtold::\n* strtoll::\n* strtoul::\n* strtoull::\n* strtoumax::\n* strxfrm::\n* strxfrm_l::\n* swab::\n* swprintf::\n* swscanf::\n* symlink::\n* symlinkat::\n* sync::\n* sysconf::\n* syslog::\n* system::\n* tan::\n* tanf::\n* tanh::\n* tanhf::\n* tanhl::\n* tanl::\n* tcdrain::\n* tcflow::\n* tcflush::\n* tcgetattr::\n* tcgetpgrp::\n* tcgetsid::\n* tcsendbreak::\n* tcsetattr::\n* tcsetpgrp::\n* tdelete::\n* telldir::\n* tempnam::\n* tfind::\n* tgamma::\n* tgammaf::\n* tgammal::\n* time::\n* timer_create::\n* timer_delete::\n* timer_getoverrun::\n* timer_gettime::\n* timer_settime::\n* times::\n* timezone::\n* tmpfile::\n* tmpnam::\n* toascii::\n* tolower::\n* tolower_l::\n* toupper::\n* toupper_l::\n* towctrans::\n* towctrans_l::\n* towlower::\n* towlower_l::\n* towupper::\n* towupper_l::\n* trunc::\n* truncate::\n* truncf::\n* truncl::\n* tsearch::\n* ttyname::\n* ttyname_r::\n* twalk::\n* tzname::\n* tzset::\n* ulimit::\n* umask::\n* uname::\n* ungetc::\n* ungetwc::\n* unlink::\n* unlinkat::\n* unlockpt::\n* unsetenv::\n* uselocale::\n* utime::\n* utimensat::\n* utimes::\n* va_arg::\n* va_copy::\n* va_end::\n* va_start::\n* vdprintf::\n* vfprintf::\n* vfscanf::\n* vfwprintf::\n* vfwscanf::\n* vprintf::\n* vscanf::\n* vsnprintf::\n* vsprintf::\n* vsscanf::\n* vswprintf::\n* vswscanf::\n* vwprintf::\n* vwscanf::\n* wait::\n* waitid::\n* waitpid::\n* wcpcpy::\n* wcpncpy::\n* wcrtomb::\n* wcscasecmp::\n* wcscasecmp_l::\n* wcscat::\n* wcschr::\n* wcscmp::\n* wcscoll::\n* wcscoll_l::\n* wcscpy::\n* wcscspn::\n* wcsdup::\n* wcsftime::\n* wcslen::\n* wcsncasecmp::\n* wcsncasecmp_l::\n* wcsncat::\n* wcsncmp::\n* wcsncpy::\n* wcsnlen::\n* wcsnrtombs::\n* wcspbrk::\n* wcsrchr::\n* wcsrtombs::\n* wcsspn::\n* wcsstr::\n* wcstod::\n* wcstof::\n* wcstoimax::\n* wcstok::\n* wcstol::\n* wcstold::\n* wcstoll::\n* wcstombs::\n* wcstoul::\n* wcstoull::\n* wcstoumax::\n* wcswidth::\n* wcsxfrm::\n* wcsxfrm_l::\n* wctob::\n* wctomb::\n* wctrans::\n* wctrans_l::\n* wctype::\n* wctype_l::\n* wcwidth::\n* wmemchr::\n* wmemcmp::\n* wmemcpy::\n* wmemmove::\n* wmemset::\n* wordexp::\n* wordfree::\n* wprintf::\n* write::\n* writev::\n* wscanf::\n* y0::\n* y1::\n* yn::\n@end menu\n\n@include posix-functions/FD_CLR.texi\n@include posix-functions/FD_ISSET.texi\n@include posix-functions/FD_SET.texi\n@include posix-functions/FD_ZERO.texi\n@include posix-functions/_Exit_C99.texi\n@include posix-functions/_exit.texi\n@include posix-functions/_longjmp.texi\n@include posix-functions/_setjmp.texi\n@include posix-functions/_tolower.texi\n@include posix-functions/_toupper.texi\n@include posix-functions/a64l.texi\n@include posix-functions/abort.texi\n@include posix-functions/abs.texi\n@include posix-functions/accept.texi\n@include posix-functions/access.texi\n@include posix-functions/acos.texi\n@include posix-functions/acosf.texi\n@include posix-functions/acosh.texi\n@include posix-functions/acoshf.texi\n@include posix-functions/acoshl.texi\n@include posix-functions/acosl.texi\n@include posix-functions/aio_cancel.texi\n@include posix-functions/aio_error.texi\n@include posix-functions/aio_fsync.texi\n@include posix-functions/aio_read.texi\n@include posix-functions/aio_return.texi\n@include posix-functions/aio_suspend.texi\n@include posix-functions/aio_write.texi\n@include posix-functions/alarm.texi\n@include posix-functions/aligned_alloc.texi\n@include posix-functions/alphasort.texi\n@include posix-functions/asctime.texi\n@include posix-functions/asctime_r.texi\n@include posix-functions/asin.texi\n@include posix-functions/asinf.texi\n@include posix-functions/asinh.texi\n@include posix-functions/asinhf.texi\n@include posix-functions/asinhl.texi\n@include posix-functions/asinl.texi\n@include posix-functions/assert.texi\n@include posix-functions/atan.texi\n@include posix-functions/atan2.texi\n@include posix-functions/atan2f.texi\n@include posix-functions/atan2l.texi\n@include posix-functions/atanf.texi\n@include posix-functions/atanh.texi\n@include posix-functions/atanhf.texi\n@include posix-functions/atanhl.texi\n@include posix-functions/atanl.texi\n@include posix-functions/atexit.texi\n@include posix-functions/atof.texi\n@include posix-functions/atoi.texi\n@include posix-functions/atol.texi\n@include posix-functions/atoll.texi\n@include posix-functions/basename.texi\n@include posix-functions/bind.texi\n@include posix-functions/bsearch.texi\n@include posix-functions/btowc.texi\n@include posix-functions/c16rtomb.texi\n@include posix-functions/c32rtomb.texi\n@include posix-functions/cabs.texi\n@include posix-functions/cabsf.texi\n@include posix-functions/cabsl.texi\n@include posix-functions/cacos.texi\n@include posix-functions/cacosf.texi\n@include posix-functions/cacosh.texi\n@include posix-functions/cacoshf.texi\n@include posix-functions/cacoshl.texi\n@include posix-functions/cacosl.texi\n@include posix-functions/calloc.texi\n@include posix-functions/carg.texi\n@include posix-functions/cargf.texi\n@include posix-functions/cargl.texi\n@include posix-functions/casin.texi\n@include posix-functions/casinf.texi\n@include posix-functions/casinh.texi\n@include posix-functions/casinhf.texi\n@include posix-functions/casinhl.texi\n@include posix-functions/casinl.texi\n@include posix-functions/catan.texi\n@include posix-functions/catanf.texi\n@include posix-functions/catanh.texi\n@include posix-functions/catanhf.texi\n@include posix-functions/catanhl.texi\n@include posix-functions/catanl.texi\n@include posix-functions/catclose.texi\n@include posix-functions/catgets.texi\n@include posix-functions/catopen.texi\n@include posix-functions/cbrt.texi\n@include posix-functions/cbrtf.texi\n@include posix-functions/cbrtl.texi\n@include posix-functions/ccos.texi\n@include posix-functions/ccosf.texi\n@include posix-functions/ccosh.texi\n@include posix-functions/ccoshf.texi\n@include posix-functions/ccoshl.texi\n@include posix-functions/ccosl.texi\n@include posix-functions/ceil.texi\n@include posix-functions/ceilf.texi\n@include posix-functions/ceill.texi\n@include posix-functions/cexp.texi\n@include posix-functions/cexpf.texi\n@include posix-functions/cexpl.texi\n@include posix-functions/cfgetispeed.texi\n@include posix-functions/cfgetospeed.texi\n@include posix-functions/cfsetispeed.texi\n@include posix-functions/cfsetospeed.texi\n@include posix-functions/chdir.texi\n@include posix-functions/chmod.texi\n@include posix-functions/chown.texi\n@include posix-functions/cimag.texi\n@include posix-functions/cimagf.texi\n@include posix-functions/cimagl.texi\n@include posix-functions/clearerr.texi\n@include posix-functions/clock.texi\n@include posix-functions/clock_getcpuclockid.texi\n@include posix-functions/clock_getres.texi\n@include posix-functions/clock_gettime.texi\n@include posix-functions/clock_nanosleep.texi\n@include posix-functions/clock_settime.texi\n@include posix-functions/clog.texi\n@include posix-functions/clogf.texi\n@include posix-functions/clogl.texi\n@include posix-functions/close.texi\n@include posix-functions/closedir.texi\n@include posix-functions/closelog.texi\n@include posix-functions/confstr.texi\n@include posix-functions/conj.texi\n@include posix-functions/conjf.texi\n@include posix-functions/conjl.texi\n@include posix-functions/connect.texi\n@include posix-functions/copysign.texi\n@include posix-functions/copysignf.texi\n@include posix-functions/copysignl.texi\n@include posix-functions/cos.texi\n@include posix-functions/cosf.texi\n@include posix-functions/cosh.texi\n@include posix-functions/coshf.texi\n@include posix-functions/coshl.texi\n@include posix-functions/cosl.texi\n@include posix-functions/cpow.texi\n@include posix-functions/cpowf.texi\n@include posix-functions/cpowl.texi\n@include posix-functions/cproj.texi\n@include posix-functions/cprojf.texi\n@include posix-functions/cprojl.texi\n@include posix-functions/creal.texi\n@include posix-functions/crealf.texi\n@include posix-functions/creall.texi\n@include posix-functions/creat.texi\n@include posix-functions/crypt.texi\n@include posix-functions/csin.texi\n@include posix-functions/csinf.texi\n@include posix-functions/csinh.texi\n@include posix-functions/csinhf.texi\n@include posix-functions/csinhl.texi\n@include posix-functions/csinl.texi\n@include posix-functions/csqrt.texi\n@include posix-functions/csqrtf.texi\n@include posix-functions/csqrtl.texi\n@include posix-functions/ctan.texi\n@include posix-functions/ctanf.texi\n@include posix-functions/ctanh.texi\n@include posix-functions/ctanhf.texi\n@include posix-functions/ctanhl.texi\n@include posix-functions/ctanl.texi\n@include posix-functions/ctermid.texi\n@include posix-functions/ctime.texi\n@include posix-functions/ctime_r.texi\n@include posix-functions/daylight.texi\n@include posix-functions/dbm_clearerr.texi\n@include posix-functions/dbm_close.texi\n@include posix-functions/dbm_delete.texi\n@include posix-functions/dbm_error.texi\n@include posix-functions/dbm_fetch.texi\n@include posix-functions/dbm_firstkey.texi\n@include posix-functions/dbm_nextkey.texi\n@include posix-functions/dbm_open.texi\n@include posix-functions/dbm_store.texi\n@include posix-functions/difftime.texi\n@include posix-functions/dirfd.texi\n@include posix-functions/dirname.texi\n@include posix-functions/div.texi\n@include posix-functions/dlclose.texi\n@include posix-functions/dlerror.texi\n@include posix-functions/dlopen.texi\n@include posix-functions/dlsym.texi\n@include posix-functions/dprintf.texi\n@include posix-functions/drand48.texi\n@include posix-functions/dup.texi\n@include posix-functions/dup2.texi\n@include posix-functions/duplocale.texi\n@include posix-functions/encrypt.texi\n@include posix-functions/endgrent.texi\n@include posix-functions/endhostent.texi\n@include posix-functions/endnetent.texi\n@include posix-functions/endprotoent.texi\n@include posix-functions/endpwent.texi\n@include posix-functions/endservent.texi\n@include posix-functions/endutxent.texi\n@include posix-functions/environ.texi\n@include posix-functions/erand48.texi\n@include posix-functions/erf.texi\n@include posix-functions/erfc.texi\n@include posix-functions/erfcf.texi\n@include posix-functions/erfcl.texi\n@include posix-functions/erff.texi\n@include posix-functions/erfl.texi\n@include posix-functions/errno.texi\n@include posix-functions/execl.texi\n@include posix-functions/execle.texi\n@include posix-functions/execlp.texi\n@include posix-functions/execv.texi\n@include posix-functions/execve.texi\n@include posix-functions/execvp.texi\n@include posix-functions/exit.texi\n@include posix-functions/exp.texi\n@include posix-functions/exp2.texi\n@include posix-functions/exp2f.texi\n@include posix-functions/exp2l.texi\n@include posix-functions/expf.texi\n@include posix-functions/expl.texi\n@include posix-functions/expm1.texi\n@include posix-functions/expm1f.texi\n@include posix-functions/expm1l.texi\n@include posix-functions/fabs.texi\n@include posix-functions/fabsf.texi\n@include posix-functions/fabsl.texi\n@include posix-functions/faccessat.texi\n@include posix-functions/fattach.texi\n@include posix-functions/fchdir.texi\n@include posix-functions/fchmod.texi\n@include posix-functions/fchmodat.texi\n@include posix-functions/fchown.texi\n@include posix-functions/fchownat.texi\n@include posix-functions/fclose.texi\n@include posix-functions/fcntl.texi\n@include posix-functions/fdatasync.texi\n@include posix-functions/fdetach.texi\n@include posix-functions/fdim.texi\n@include posix-functions/fdimf.texi\n@include posix-functions/fdiml.texi\n@include posix-functions/fdopen.texi\n@include posix-functions/fdopendir.texi\n@include posix-functions/feclearexcept.texi\n@include posix-functions/fegetenv.texi\n@include posix-functions/fegetexceptflag.texi\n@include posix-functions/fegetround.texi\n@include posix-functions/feholdexcept.texi\n@include posix-functions/feof.texi\n@include posix-functions/feraiseexcept.texi\n@include posix-functions/ferror.texi\n@include posix-functions/fesetenv.texi\n@include posix-functions/fesetexceptflag.texi\n@include posix-functions/fesetround.texi\n@include posix-functions/fetestexcept.texi\n@include posix-functions/feupdateenv.texi\n@include posix-functions/fexecve.texi\n@include posix-functions/fflush.texi\n@include posix-functions/ffs.texi\n@include posix-functions/fgetc.texi\n@include posix-functions/fgetpos.texi\n@include posix-functions/fgets.texi\n@include posix-functions/fgetwc.texi\n@include posix-functions/fgetws.texi\n@include posix-functions/fileno.texi\n@include posix-functions/flockfile.texi\n@include posix-functions/floor.texi\n@include posix-functions/floorf.texi\n@include posix-functions/floorl.texi\n@include posix-functions/fma.texi\n@include posix-functions/fmaf.texi\n@include posix-functions/fmal.texi\n@include posix-functions/fmax.texi\n@include posix-functions/fmaxf.texi\n@include posix-functions/fmaxl.texi\n@include posix-functions/fmemopen.texi\n@include posix-functions/fmin.texi\n@include posix-functions/fminf.texi\n@include posix-functions/fminl.texi\n@include posix-functions/fmod.texi\n@include posix-functions/fmodf.texi\n@include posix-functions/fmodl.texi\n@include posix-functions/fmtmsg.texi\n@include posix-functions/fnmatch.texi\n@include posix-functions/fopen.texi\n@include posix-functions/fork.texi\n@include posix-functions/fpathconf.texi\n@include posix-functions/fpclassify.texi\n@include posix-functions/fprintf.texi\n@include posix-functions/fputc.texi\n@include posix-functions/fputs.texi\n@include posix-functions/fputwc.texi\n@include posix-functions/fputws.texi\n@include posix-functions/fread.texi\n@include posix-functions/free.texi\n@include posix-functions/freeaddrinfo.texi\n@include posix-functions/freelocale.texi\n@include posix-functions/freopen.texi\n@include posix-functions/frexp.texi\n@include posix-functions/frexpf.texi\n@include posix-functions/frexpl.texi\n@include posix-functions/fscanf.texi\n@include posix-functions/fseek.texi\n@include posix-functions/fseeko.texi\n@include posix-functions/fsetpos.texi\n@include posix-functions/fstat.texi\n@include posix-functions/fstatat.texi\n@include posix-functions/fstatvfs.texi\n@include posix-functions/fsync.texi\n@include posix-functions/ftell.texi\n@include posix-functions/ftello.texi\n@include posix-functions/ftok.texi\n@include posix-functions/ftruncate.texi\n@include posix-functions/ftrylockfile.texi\n@include posix-functions/ftw.texi\n@include posix-functions/funlockfile.texi\n@include posix-functions/futimens.texi\n@include posix-functions/fwide.texi\n@include posix-functions/fwprintf.texi\n@include posix-functions/fwrite.texi\n@include posix-functions/fwscanf.texi\n@include posix-functions/gai_strerror.texi\n@include posix-functions/getaddrinfo.texi\n@include posix-functions/getc.texi\n@include posix-functions/getc_unlocked.texi\n@include posix-functions/getchar.texi\n@include posix-functions/getchar_unlocked.texi\n@include posix-functions/getcwd.texi\n@include posix-functions/getdate.texi\n@include posix-functions/getdate_err.texi\n@include posix-functions/getdelim.texi\n@include posix-functions/getegid.texi\n@include posix-functions/getenv.texi\n@include posix-functions/geteuid.texi\n@include posix-functions/getgid.texi\n@include posix-functions/getgrent.texi\n@include posix-functions/getgrgid.texi\n@include posix-functions/getgrgid_r.texi\n@include posix-functions/getgrnam.texi\n@include posix-functions/getgrnam_r.texi\n@include posix-functions/getgroups.texi\n@include posix-functions/gethostent.texi\n@include posix-functions/gethostid.texi\n@include posix-functions/gethostname.texi\n@include posix-functions/getitimer.texi\n@include posix-functions/getline.texi\n@include posix-functions/getlogin.texi\n@include posix-functions/getlogin_r.texi\n@include posix-functions/getmsg.texi\n@include posix-functions/getnameinfo.texi\n@include posix-functions/getnetbyaddr.texi\n@include posix-functions/getnetbyname.texi\n@include posix-functions/getnetent.texi\n@include posix-functions/getopt.texi\n@include posix-functions/getpeername.texi\n@include posix-functions/getpgid.texi\n@include posix-functions/getpgrp.texi\n@include posix-functions/getpid.texi\n@include posix-functions/getpmsg.texi\n@include posix-functions/getppid.texi\n@include posix-functions/getpriority.texi\n@include posix-functions/getprotobyname.texi\n@include posix-functions/getprotobynumber.texi\n@include posix-functions/getprotoent.texi\n@include posix-functions/getpwent.texi\n@include posix-functions/getpwnam.texi\n@include posix-functions/getpwnam_r.texi\n@include posix-functions/getpwuid.texi\n@include posix-functions/getpwuid_r.texi\n@include posix-functions/getrlimit.texi\n@include posix-functions/getrusage.texi\n@include posix-functions/gets.texi\n@include posix-functions/getservbyname.texi\n@include posix-functions/getservbyport.texi\n@include posix-functions/getservent.texi\n@include posix-functions/getsid.texi\n@include posix-functions/getsockname.texi\n@include posix-functions/getsockopt.texi\n@include posix-functions/getsubopt.texi\n@include posix-functions/gettimeofday.texi\n@include posix-functions/getuid.texi\n@include posix-functions/getutxent.texi\n@include posix-functions/getutxid.texi\n@include posix-functions/getutxline.texi\n@include posix-functions/getwc.texi\n@include posix-functions/getwchar.texi\n@include posix-functions/glob.texi\n@include posix-functions/globfree.texi\n@include posix-functions/gmtime.texi\n@include posix-functions/gmtime_r.texi\n@include posix-functions/grantpt.texi\n@include posix-functions/hcreate.texi\n@include posix-functions/hdestroy.texi\n@include posix-functions/hsearch.texi\n@include posix-functions/htonl.texi\n@include posix-functions/htons.texi\n@include posix-functions/hypot.texi\n@include posix-functions/hypotf.texi\n@include posix-functions/hypotl.texi\n@include posix-functions/iconv.texi\n@include posix-functions/iconv_close.texi\n@include posix-functions/iconv_open.texi\n@include posix-functions/if_freenameindex.texi\n@include posix-functions/if_indextoname.texi\n@include posix-functions/if_nameindex.texi\n@include posix-functions/if_nametoindex.texi\n@include posix-functions/ilogb.texi\n@include posix-functions/ilogbf.texi\n@include posix-functions/ilogbl.texi\n@include posix-functions/imaxabs.texi\n@include posix-functions/imaxdiv.texi\n@include posix-functions/inet_addr.texi\n@include posix-functions/inet_ntoa.texi\n@include posix-functions/inet_ntop.texi\n@include posix-functions/inet_pton.texi\n@include posix-functions/initstate.texi\n@include posix-functions/insque.texi\n@include posix-functions/ioctl.texi\n@include posix-functions/isalnum.texi\n@include posix-functions/isalnum_l.texi\n@include posix-functions/isalpha.texi\n@include posix-functions/isalpha_l.texi\n@include posix-functions/isascii.texi\n@include posix-functions/isastream.texi\n@include posix-functions/isatty.texi\n@include posix-functions/isblank.texi\n@include posix-functions/isblank_l.texi\n@include posix-functions/iscntrl.texi\n@include posix-functions/iscntrl_l.texi\n@include posix-functions/isdigit.texi\n@include posix-functions/isdigit_l.texi\n@include posix-functions/isfinite.texi\n@include posix-functions/isgraph.texi\n@include posix-functions/isgraph_l.texi\n@include posix-functions/isgreater.texi\n@include posix-functions/isgreaterequal.texi\n@include posix-functions/isinf.texi\n@include posix-functions/isless.texi\n@include posix-functions/islessequal.texi\n@include posix-functions/islessgreater.texi\n@include posix-functions/islower.texi\n@include posix-functions/islower_l.texi\n@include posix-functions/isnan.texi\n@include posix-functions/isnormal.texi\n@include posix-functions/isprint.texi\n@include posix-functions/isprint_l.texi\n@include posix-functions/ispunct.texi\n@include posix-functions/ispunct_l.texi\n@include posix-functions/isspace.texi\n@include posix-functions/isspace_l.texi\n@include posix-functions/isunordered.texi\n@include posix-functions/isupper.texi\n@include posix-functions/isupper_l.texi\n@include posix-functions/iswalnum.texi\n@include posix-functions/iswalnum_l.texi\n@include posix-functions/iswalpha.texi\n@include posix-functions/iswalpha_l.texi\n@include posix-functions/iswblank.texi\n@include posix-functions/iswblank_l.texi\n@include posix-functions/iswcntrl.texi\n@include posix-functions/iswcntrl_l.texi\n@include posix-functions/iswctype.texi\n@include posix-functions/iswctype_l.texi\n@include posix-functions/iswdigit.texi\n@include posix-functions/iswdigit_l.texi\n@include posix-functions/iswgraph.texi\n@include posix-functions/iswgraph_l.texi\n@include posix-functions/iswlower.texi\n@include posix-functions/iswlower_l.texi\n@include posix-functions/iswprint.texi\n@include posix-functions/iswprint_l.texi\n@include posix-functions/iswpunct.texi\n@include posix-functions/iswpunct_l.texi\n@include posix-functions/iswspace.texi\n@include posix-functions/iswspace_l.texi\n@include posix-functions/iswupper.texi\n@include posix-functions/iswupper_l.texi\n@include posix-functions/iswxdigit.texi\n@include posix-functions/iswxdigit_l.texi\n@include posix-functions/isxdigit.texi\n@include posix-functions/isxdigit_l.texi\n@include posix-functions/j0.texi\n@include posix-functions/j1.texi\n@include posix-functions/jn.texi\n@include posix-functions/jrand48.texi\n@include posix-functions/kill.texi\n@include posix-functions/killpg.texi\n@include posix-functions/l64a.texi\n@include posix-functions/labs.texi\n@include posix-functions/lchown.texi\n@include posix-functions/lcong48.texi\n@include posix-functions/ldexp.texi\n@include posix-functions/ldexpf.texi\n@include posix-functions/ldexpl.texi\n@include posix-functions/ldiv.texi\n@include posix-functions/lfind.texi\n@include posix-functions/lgamma.texi\n@include posix-functions/lgammaf.texi\n@include posix-functions/lgammal.texi\n@include posix-functions/link.texi\n@include posix-functions/linkat.texi\n@include posix-functions/lio_listio.texi\n@include posix-functions/listen.texi\n@include posix-functions/llabs.texi\n@include posix-functions/lldiv.texi\n@include posix-functions/llrint.texi\n@include posix-functions/llrintf.texi\n@include posix-functions/llrintl.texi\n@include posix-functions/llround.texi\n@include posix-functions/llroundf.texi\n@include posix-functions/llroundl.texi\n@include posix-functions/localeconv.texi\n@include posix-functions/localtime.texi\n@include posix-functions/localtime_r.texi\n@include posix-functions/lockf.texi\n@include posix-functions/log.texi\n@include posix-functions/log10.texi\n@include posix-functions/log10f.texi\n@include posix-functions/log10l.texi\n@include posix-functions/log1p.texi\n@include posix-functions/log1pf.texi\n@include posix-functions/log1pl.texi\n@include posix-functions/log2.texi\n@include posix-functions/log2f.texi\n@include posix-functions/log2l.texi\n@include posix-functions/logb.texi\n@include posix-functions/logbf.texi\n@include posix-functions/logbl.texi\n@include posix-functions/logf.texi\n@include posix-functions/logl.texi\n@include posix-functions/longjmp.texi\n@include posix-functions/lrand48.texi\n@include posix-functions/lrint.texi\n@include posix-functions/lrintf.texi\n@include posix-functions/lrintl.texi\n@include posix-functions/lround.texi\n@include posix-functions/lroundf.texi\n@include posix-functions/lroundl.texi\n@include posix-functions/lsearch.texi\n@include posix-functions/lseek.texi\n@include posix-functions/lstat.texi\n@include posix-functions/malloc.texi\n@include posix-functions/mblen.texi\n@include posix-functions/mbrlen.texi\n@include posix-functions/mbrtoc16.texi\n@include posix-functions/mbrtoc32.texi\n@include posix-functions/mbrtowc.texi\n@include posix-functions/mbsinit.texi\n@include posix-functions/mbsnrtowcs.texi\n@include posix-functions/mbsrtowcs.texi\n@include posix-functions/mbstowcs.texi\n@include posix-functions/mbtowc.texi\n@include posix-functions/memccpy.texi\n@include posix-functions/memchr.texi\n@include posix-functions/memcmp.texi\n@include posix-functions/memcpy.texi\n@include posix-functions/memmove.texi\n@include posix-functions/memset.texi\n@include posix-functions/mkdir.texi\n@include posix-functions/mkdirat.texi\n@include posix-functions/mkdtemp.texi\n@include posix-functions/mkfifo.texi\n@include posix-functions/mkfifoat.texi\n@include posix-functions/mknod.texi\n@include posix-functions/mknodat.texi\n@include posix-functions/mkstemp.texi\n@include posix-functions/mktime.texi\n@include posix-functions/mlock.texi\n@include posix-functions/mlockall.texi\n@include posix-functions/mmap.texi\n@include posix-functions/modf.texi\n@include posix-functions/modff.texi\n@include posix-functions/modfl.texi\n@include posix-functions/mprotect.texi\n@include posix-functions/mq_close.texi\n@include posix-functions/mq_getattr.texi\n@include posix-functions/mq_notify.texi\n@include posix-functions/mq_open.texi\n@include posix-functions/mq_receive.texi\n@include posix-functions/mq_send.texi\n@include posix-functions/mq_setattr.texi\n@include posix-functions/mq_timedreceive.texi\n@include posix-functions/mq_timedsend.texi\n@include posix-functions/mq_unlink.texi\n@include posix-functions/mrand48.texi\n@include posix-functions/msgctl.texi\n@include posix-functions/msgget.texi\n@include posix-functions/msgrcv.texi\n@include posix-functions/msgsnd.texi\n@include posix-functions/msync.texi\n@include posix-functions/munlock.texi\n@include posix-functions/munlockall.texi\n@include posix-functions/munmap.texi\n@include posix-functions/nan.texi\n@include posix-functions/nanf.texi\n@include posix-functions/nanl.texi\n@include posix-functions/nanosleep.texi\n@include posix-functions/nearbyint.texi\n@include posix-functions/nearbyintf.texi\n@include posix-functions/nearbyintl.texi\n@include posix-functions/newlocale.texi\n@include posix-functions/nextafter.texi\n@include posix-functions/nextafterf.texi\n@include posix-functions/nextafterl.texi\n@include posix-functions/nexttoward.texi\n@include posix-functions/nexttowardf.texi\n@include posix-functions/nexttowardl.texi\n@include posix-functions/nftw.texi\n@include posix-functions/nice.texi\n@include posix-functions/nl_langinfo.texi\n@include posix-functions/nl_langinfo_l.texi\n@include posix-functions/nrand48.texi\n@include posix-functions/ntohl.texi\n@include posix-functions/ntohs.texi\n@include posix-functions/open.texi\n@include posix-functions/openat.texi\n@include posix-functions/opendir.texi\n@include posix-functions/openlog.texi\n@include posix-functions/open_memstream.texi\n@include posix-functions/open_wmemstream.texi\n@include posix-functions/optarg.texi\n@include posix-functions/opterr.texi\n@include posix-functions/optind.texi\n@include posix-functions/optopt.texi\n@include posix-functions/pathconf.texi\n@include posix-functions/pause.texi\n@include posix-functions/pclose.texi\n@include posix-functions/perror.texi\n@include posix-functions/pipe.texi\n@include posix-functions/poll.texi\n@include posix-functions/popen.texi\n@include posix-functions/posix_fadvise.texi\n@include posix-functions/posix_fallocate.texi\n@include posix-functions/posix_madvise.texi\n@include posix-functions/posix_mem_offset.texi\n@include posix-functions/posix_memalign.texi\n@include posix-functions/posix_openpt.texi\n@include posix-functions/posix_spawn.texi\n@include posix-functions/posix_spawn_file_actions_addclose.texi\n@include posix-functions/posix_spawn_file_actions_adddup2.texi\n@include posix-functions/posix_spawn_file_actions_addopen.texi\n@include posix-functions/posix_spawn_file_actions_destroy.texi\n@include posix-functions/posix_spawn_file_actions_init.texi\n@include posix-functions/posix_spawnattr_destroy.texi\n@include posix-functions/posix_spawnattr_getflags.texi\n@include posix-functions/posix_spawnattr_getpgroup.texi\n@include posix-functions/posix_spawnattr_getschedparam.texi\n@include posix-functions/posix_spawnattr_getschedpolicy.texi\n@include posix-functions/posix_spawnattr_getsigdefault.texi\n@include posix-functions/posix_spawnattr_getsigmask.texi\n@include posix-functions/posix_spawnattr_init.texi\n@include posix-functions/posix_spawnattr_setflags.texi\n@include posix-functions/posix_spawnattr_setpgroup.texi\n@include posix-functions/posix_spawnattr_setschedparam.texi\n@include posix-functions/posix_spawnattr_setschedpolicy.texi\n@include posix-functions/posix_spawnattr_setsigdefault.texi\n@include posix-functions/posix_spawnattr_setsigmask.texi\n@include posix-functions/posix_spawnp.texi\n@include posix-functions/posix_trace_attr_destroy.texi\n@include posix-functions/posix_trace_attr_getclockres.texi\n@include posix-functions/posix_trace_attr_getcreatetime.texi\n@include posix-functions/posix_trace_attr_getgenversion.texi\n@include posix-functions/posix_trace_attr_getinherited.texi\n@include posix-functions/posix_trace_attr_getlogfullpolicy.texi\n@include posix-functions/posix_trace_attr_getlogsize.texi\n@include posix-functions/posix_trace_attr_getmaxdatasize.texi\n@include posix-functions/posix_trace_attr_getmaxsystemeventsize.texi\n@include posix-functions/posix_trace_attr_getmaxusereventsize.texi\n@include posix-functions/posix_trace_attr_getname.texi\n@include posix-functions/posix_trace_attr_getstreamfullpolicy.texi\n@include posix-functions/posix_trace_attr_getstreamsize.texi\n@include posix-functions/posix_trace_attr_init.texi\n@include posix-functions/posix_trace_attr_setinherited.texi\n@include posix-functions/posix_trace_attr_setlogfullpolicy.texi\n@include posix-functions/posix_trace_attr_setlogsize.texi\n@include posix-functions/posix_trace_attr_setmaxdatasize.texi\n@include posix-functions/posix_trace_attr_setname.texi\n@include posix-functions/posix_trace_attr_setstreamfullpolicy.texi\n@include posix-functions/posix_trace_attr_setstreamsize.texi\n@include posix-functions/posix_trace_clear.texi\n@include posix-functions/posix_trace_close.texi\n@include posix-functions/posix_trace_create.texi\n@include posix-functions/posix_trace_create_withlog.texi\n@include posix-functions/posix_trace_event.texi\n@include posix-functions/posix_trace_eventid_equal.texi\n@include posix-functions/posix_trace_eventid_get_name.texi\n@include posix-functions/posix_trace_eventid_open.texi\n@include posix-functions/posix_trace_eventset_add.texi\n@include posix-functions/posix_trace_eventset_del.texi\n@include posix-functions/posix_trace_eventset_empty.texi\n@include posix-functions/posix_trace_eventset_fill.texi\n@include posix-functions/posix_trace_eventset_ismember.texi\n@include posix-functions/posix_trace_eventtypelist_getnext_id.texi\n@include posix-functions/posix_trace_eventtypelist_rewind.texi\n@include posix-functions/posix_trace_flush.texi\n@include posix-functions/posix_trace_get_attr.texi\n@include posix-functions/posix_trace_get_filter.texi\n@include posix-functions/posix_trace_get_status.texi\n@include posix-functions/posix_trace_getnext_event.texi\n@include posix-functions/posix_trace_open.texi\n@include posix-functions/posix_trace_rewind.texi\n@include posix-functions/posix_trace_set_filter.texi\n@include posix-functions/posix_trace_shutdown.texi\n@include posix-functions/posix_trace_start.texi\n@include posix-functions/posix_trace_stop.texi\n@include posix-functions/posix_trace_timedgetnext_event.texi\n@include posix-functions/posix_trace_trid_eventid_open.texi\n@include posix-functions/posix_trace_trygetnext_event.texi\n@include posix-functions/posix_typed_mem_get_info.texi\n@include posix-functions/posix_typed_mem_open.texi\n@include posix-functions/pow.texi\n@include posix-functions/powf.texi\n@include posix-functions/powl.texi\n@include posix-functions/pread.texi\n@include posix-functions/printf.texi\n@include posix-functions/pselect.texi\n@include posix-functions/psiginfo.texi\n@include posix-functions/psignal.texi\n@include posix-functions/pthread_atfork.texi\n@include posix-functions/pthread_attr_destroy.texi\n@include posix-functions/pthread_attr_getdetachstate.texi\n@include posix-functions/pthread_attr_getguardsize.texi\n@include posix-functions/pthread_attr_getinheritsched.texi\n@include posix-functions/pthread_attr_getschedparam.texi\n@include posix-functions/pthread_attr_getschedpolicy.texi\n@include posix-functions/pthread_attr_getscope.texi\n@include posix-functions/pthread_attr_getstack.texi\n@include posix-functions/pthread_attr_getstacksize.texi\n@include posix-functions/pthread_attr_init.texi\n@include posix-functions/pthread_attr_setdetachstate.texi\n@include posix-functions/pthread_attr_setguardsize.texi\n@include posix-functions/pthread_attr_setinheritsched.texi\n@include posix-functions/pthread_attr_setschedparam.texi\n@include posix-functions/pthread_attr_setschedpolicy.texi\n@include posix-functions/pthread_attr_setscope.texi\n@include posix-functions/pthread_attr_setstack.texi\n@include posix-functions/pthread_attr_setstacksize.texi\n@include posix-functions/pthread_barrier_destroy.texi\n@include posix-functions/pthread_barrier_init.texi\n@include posix-functions/pthread_barrier_wait.texi\n@include posix-functions/pthread_barrierattr_destroy.texi\n@include posix-functions/pthread_barrierattr_getpshared.texi\n@include posix-functions/pthread_barrierattr_init.texi\n@include posix-functions/pthread_barrierattr_setpshared.texi\n@include posix-functions/pthread_cancel.texi\n@include posix-functions/pthread_cleanup_pop.texi\n@include posix-functions/pthread_cleanup_push.texi\n@include posix-functions/pthread_cond_broadcast.texi\n@include posix-functions/pthread_cond_destroy.texi\n@include posix-functions/pthread_cond_init.texi\n@include posix-functions/pthread_cond_signal.texi\n@include posix-functions/pthread_cond_timedwait.texi\n@include posix-functions/pthread_cond_wait.texi\n@include posix-functions/pthread_condattr_destroy.texi\n@include posix-functions/pthread_condattr_getclock.texi\n@include posix-functions/pthread_condattr_getpshared.texi\n@include posix-functions/pthread_condattr_init.texi\n@include posix-functions/pthread_condattr_setclock.texi\n@include posix-functions/pthread_condattr_setpshared.texi\n@include posix-functions/pthread_create.texi\n@include posix-functions/pthread_detach.texi\n@include posix-functions/pthread_equal.texi\n@include posix-functions/pthread_exit.texi\n@include posix-functions/pthread_getconcurrency.texi\n@include posix-functions/pthread_getcpuclockid.texi\n@include posix-functions/pthread_getschedparam.texi\n@include posix-functions/pthread_getspecific.texi\n@include posix-functions/pthread_join.texi\n@include posix-functions/pthread_key_create.texi\n@include posix-functions/pthread_key_delete.texi\n@include posix-functions/pthread_kill.texi\n@include posix-functions/pthread_mutex_consistent.texi\n@include posix-functions/pthread_mutex_destroy.texi\n@include posix-functions/pthread_mutex_getprioceiling.texi\n@include posix-functions/pthread_mutex_init.texi\n@include posix-functions/pthread_mutex_lock.texi\n@include posix-functions/pthread_mutex_setprioceiling.texi\n@include posix-functions/pthread_mutex_timedlock.texi\n@include posix-functions/pthread_mutex_trylock.texi\n@include posix-functions/pthread_mutex_unlock.texi\n@include posix-functions/pthread_mutexattr_destroy.texi\n@include posix-functions/pthread_mutexattr_getprioceiling.texi\n@include posix-functions/pthread_mutexattr_getprotocol.texi\n@include posix-functions/pthread_mutexattr_getpshared.texi\n@include posix-functions/pthread_mutexattr_getrobust.texi\n@include posix-functions/pthread_mutexattr_gettype.texi\n@include posix-functions/pthread_mutexattr_init.texi\n@include posix-functions/pthread_mutexattr_setprioceiling.texi\n@include posix-functions/pthread_mutexattr_setprotocol.texi\n@include posix-functions/pthread_mutexattr_setpshared.texi\n@include posix-functions/pthread_mutexattr_setrobust.texi\n@include posix-functions/pthread_mutexattr_settype.texi\n@include posix-functions/pthread_once.texi\n@include posix-functions/pthread_rwlock_destroy.texi\n@include posix-functions/pthread_rwlock_init.texi\n@include posix-functions/pthread_rwlock_rdlock.texi\n@include posix-functions/pthread_rwlock_timedrdlock.texi\n@include posix-functions/pthread_rwlock_timedwrlock.texi\n@include posix-functions/pthread_rwlock_tryrdlock.texi\n@include posix-functions/pthread_rwlock_trywrlock.texi\n@include posix-functions/pthread_rwlock_unlock.texi\n@include posix-functions/pthread_rwlock_wrlock.texi\n@include posix-functions/pthread_rwlockattr_destroy.texi\n@include posix-functions/pthread_rwlockattr_getpshared.texi\n@include posix-functions/pthread_rwlockattr_init.texi\n@include posix-functions/pthread_rwlockattr_setpshared.texi\n@include posix-functions/pthread_self.texi\n@include posix-functions/pthread_setcancelstate.texi\n@include posix-functions/pthread_setcanceltype.texi\n@include posix-functions/pthread_setconcurrency.texi\n@include posix-functions/pthread_setschedparam.texi\n@include posix-functions/pthread_setschedprio.texi\n@include posix-functions/pthread_setspecific.texi\n@include posix-functions/pthread_sigmask.texi\n@include posix-functions/pthread_spin_destroy.texi\n@include posix-functions/pthread_spin_init.texi\n@include posix-functions/pthread_spin_lock.texi\n@include posix-functions/pthread_spin_trylock.texi\n@include posix-functions/pthread_spin_unlock.texi\n@include posix-functions/pthread_testcancel.texi\n@include posix-functions/ptsname.texi\n@include posix-functions/putc.texi\n@include posix-functions/putc_unlocked.texi\n@include posix-functions/putchar.texi\n@include posix-functions/putchar_unlocked.texi\n@include posix-functions/putenv.texi\n@include posix-functions/putmsg.texi\n@include posix-functions/putpmsg.texi\n@include posix-functions/puts.texi\n@include posix-functions/pututxline.texi\n@include posix-functions/putwc.texi\n@include posix-functions/putwchar.texi\n@include posix-functions/pwrite.texi\n@include posix-functions/qsort.texi\n@include posix-functions/quick_exit.texi\n@include posix-functions/raise.texi\n@include posix-functions/rand.texi\n@include posix-functions/rand_r.texi\n@include posix-functions/random.texi\n@include posix-functions/read.texi\n@include posix-functions/readdir.texi\n@include posix-functions/readdir_r.texi\n@include posix-functions/readlink.texi\n@include posix-functions/readlinkat.texi\n@include posix-functions/readv.texi\n@include posix-functions/realloc.texi\n@include posix-functions/realpath.texi\n@include posix-functions/recv.texi\n@include posix-functions/recvfrom.texi\n@include posix-functions/recvmsg.texi\n@include posix-functions/regcomp.texi\n@include posix-functions/regerror.texi\n@include posix-functions/regexec.texi\n@include posix-functions/regfree.texi\n@include posix-functions/remainder.texi\n@include posix-functions/remainderf.texi\n@include posix-functions/remainderl.texi\n@include posix-functions/remove.texi\n@include posix-functions/remque.texi\n@include posix-functions/remquo.texi\n@include posix-functions/remquof.texi\n@include posix-functions/remquol.texi\n@include posix-functions/rename.texi\n@include posix-functions/renameat.texi\n@include posix-functions/rewind.texi\n@include posix-functions/rewinddir.texi\n@include posix-functions/rint.texi\n@include posix-functions/rintf.texi\n@include posix-functions/rintl.texi\n@include posix-functions/rmdir.texi\n@include posix-functions/round.texi\n@include posix-functions/roundf.texi\n@include posix-functions/roundl.texi\n@include posix-functions/scalbln.texi\n@include posix-functions/scalblnf.texi\n@include posix-functions/scalblnl.texi\n@include posix-functions/scalbn.texi\n@include posix-functions/scalbnf.texi\n@include posix-functions/scalbnl.texi\n@include posix-functions/scandir.texi\n@include posix-functions/scanf.texi\n@include posix-functions/sched_get_priority_max.texi\n@include posix-functions/sched_get_priority_min.texi\n@include posix-functions/sched_getparam.texi\n@include posix-functions/sched_getscheduler.texi\n@include posix-functions/sched_rr_get_interval.texi\n@include posix-functions/sched_setparam.texi\n@include posix-functions/sched_setscheduler.texi\n@include posix-functions/sched_yield.texi\n@include posix-functions/seed48.texi\n@include posix-functions/seekdir.texi\n@include posix-functions/select.texi\n@include posix-functions/sem_close.texi\n@include posix-functions/sem_destroy.texi\n@include posix-functions/sem_getvalue.texi\n@include posix-functions/sem_init.texi\n@include posix-functions/sem_open.texi\n@include posix-functions/sem_post.texi\n@include posix-functions/sem_timedwait.texi\n@include posix-functions/sem_trywait.texi\n@include posix-functions/sem_unlink.texi\n@include posix-functions/sem_wait.texi\n@include posix-functions/semctl.texi\n@include posix-functions/semget.texi\n@include posix-functions/semop.texi\n@include posix-functions/send.texi\n@include posix-functions/sendmsg.texi\n@include posix-functions/sendto.texi\n@include posix-functions/setbuf.texi\n@include posix-functions/setegid.texi\n@include posix-functions/setenv.texi\n@include posix-functions/seteuid.texi\n@include posix-functions/setgid.texi\n@include posix-functions/setgrent.texi\n@include posix-functions/sethostent.texi\n@include posix-functions/setitimer.texi\n@include posix-functions/setjmp.texi\n@include posix-functions/setkey.texi\n@include posix-functions/setlocale.texi\n@include posix-functions/setlogmask.texi\n@include posix-functions/setnetent.texi\n@include posix-functions/setpgid.texi\n@include posix-functions/setpgrp.texi\n@include posix-functions/setpriority.texi\n@include posix-functions/setprotoent.texi\n@include posix-functions/setpwent.texi\n@include posix-functions/setregid.texi\n@include posix-functions/setreuid.texi\n@include posix-functions/setrlimit.texi\n@include posix-functions/setservent.texi\n@include posix-functions/setsid.texi\n@include posix-functions/setsockopt.texi\n@include posix-functions/setstate.texi\n@include posix-functions/setuid.texi\n@include posix-functions/setutxent.texi\n@include posix-functions/setvbuf.texi\n@include posix-functions/shm_open.texi\n@include posix-functions/shm_unlink.texi\n@include posix-functions/shmat.texi\n@include posix-functions/shmctl.texi\n@include posix-functions/shmdt.texi\n@include posix-functions/shmget.texi\n@include posix-functions/shutdown.texi\n@include posix-functions/sigaction.texi\n@include posix-functions/sigaddset.texi\n@include posix-functions/sigaltstack.texi\n@include posix-functions/sigdelset.texi\n@include posix-functions/sigemptyset.texi\n@include posix-functions/sigfillset.texi\n@include posix-functions/sighold.texi\n@include posix-functions/sigignore.texi\n@include posix-functions/siginterrupt.texi\n@include posix-functions/sigismember.texi\n@include posix-functions/siglongjmp.texi\n@include posix-functions/signal.texi\n@include posix-functions/signbit.texi\n@include posix-functions/signgam.texi\n@include posix-functions/sigpause.texi\n@include posix-functions/sigpending.texi\n@include posix-functions/sigprocmask.texi\n@include posix-functions/sigqueue.texi\n@include posix-functions/sigrelse.texi\n@include posix-functions/sigset.texi\n@include posix-functions/sigsetjmp.texi\n@include posix-functions/sigsuspend.texi\n@include posix-functions/sigtimedwait.texi\n@include posix-functions/sigwait.texi\n@include posix-functions/sigwaitinfo.texi\n@include posix-functions/sin.texi\n@include posix-functions/sinf.texi\n@include posix-functions/sinh.texi\n@include posix-functions/sinhf.texi\n@include posix-functions/sinhl.texi\n@include posix-functions/sinl.texi\n@include posix-functions/sleep.texi\n@include posix-functions/snprintf.texi\n@include posix-functions/sockatmark.texi\n@include posix-functions/socket.texi\n@include posix-functions/socketpair.texi\n@include posix-functions/sprintf.texi\n@include posix-functions/sqrt.texi\n@include posix-functions/sqrtf.texi\n@include posix-functions/sqrtl.texi\n@include posix-functions/srand.texi\n@include posix-functions/srand48.texi\n@include posix-functions/srandom.texi\n@include posix-functions/sscanf.texi\n@include posix-functions/stat.texi\n@include posix-functions/statvfs.texi\n@include posix-functions/stderr.texi\n@include posix-functions/stdin.texi\n@include posix-functions/stdout.texi\n@include posix-functions/stpcpy.texi\n@include posix-functions/stpncpy.texi\n@include posix-functions/strcasecmp.texi\n@include posix-functions/strcasecmp_l.texi\n@include posix-functions/strcat.texi\n@include posix-functions/strchr.texi\n@include posix-functions/strcmp.texi\n@include posix-functions/strcoll.texi\n@include posix-functions/strcoll_l.texi\n@include posix-functions/strcpy.texi\n@include posix-functions/strcspn.texi\n@include posix-functions/strdup.texi\n@include posix-functions/strerror.texi\n@include posix-functions/strerror_l.texi\n@include posix-functions/strerror_r.texi\n@include posix-functions/strfmon.texi\n@include posix-functions/strfmon_l.texi\n@include posix-functions/strftime.texi\n@include posix-functions/strftime_l.texi\n@include posix-functions/strlen.texi\n@include posix-functions/strncasecmp.texi\n@include posix-functions/strncasecmp_l.texi\n@include posix-functions/strncat.texi\n@include posix-functions/strncmp.texi\n@include posix-functions/strncpy.texi\n@include posix-functions/strndup.texi\n@include posix-functions/strnlen.texi\n@include posix-functions/strpbrk.texi\n@include posix-functions/strptime.texi\n@include posix-functions/strrchr.texi\n@include posix-functions/strsignal.texi\n@include posix-functions/strspn.texi\n@include posix-functions/strstr.texi\n@include posix-functions/strtod.texi\n@include posix-functions/strtof.texi\n@include posix-functions/strtoimax.texi\n@include posix-functions/strtok.texi\n@include posix-functions/strtok_r.texi\n@include posix-functions/strtol.texi\n@include posix-functions/strtold.texi\n@include posix-functions/strtoll.texi\n@include posix-functions/strtoul.texi\n@include posix-functions/strtoull.texi\n@include posix-functions/strtoumax.texi\n@include posix-functions/strxfrm.texi\n@include posix-functions/strxfrm_l.texi\n@include posix-functions/swab.texi\n@include posix-functions/swprintf.texi\n@include posix-functions/swscanf.texi\n@include posix-functions/symlink.texi\n@include posix-functions/symlinkat.texi\n@include posix-functions/sync.texi\n@include posix-functions/sysconf.texi\n@include posix-functions/syslog.texi\n@include posix-functions/system.texi\n@include posix-functions/tan.texi\n@include posix-functions/tanf.texi\n@include posix-functions/tanh.texi\n@include posix-functions/tanhf.texi\n@include posix-functions/tanhl.texi\n@include posix-functions/tanl.texi\n@include posix-functions/tcdrain.texi\n@include posix-functions/tcflow.texi\n@include posix-functions/tcflush.texi\n@include posix-functions/tcgetattr.texi\n@include posix-functions/tcgetpgrp.texi\n@include posix-functions/tcgetsid.texi\n@include posix-functions/tcsendbreak.texi\n@include posix-functions/tcsetattr.texi\n@include posix-functions/tcsetpgrp.texi\n@include posix-functions/tdelete.texi\n@include posix-functions/telldir.texi\n@include posix-functions/tempnam.texi\n@include posix-functions/tfind.texi\n@include posix-functions/tgamma.texi\n@include posix-functions/tgammaf.texi\n@include posix-functions/tgammal.texi\n@include posix-functions/time.texi\n@include posix-functions/timer_create.texi\n@include posix-functions/timer_delete.texi\n@include posix-functions/timer_getoverrun.texi\n@include posix-functions/timer_gettime.texi\n@include posix-functions/timer_settime.texi\n@include posix-functions/times.texi\n@include posix-functions/timezone.texi\n@include posix-functions/tmpfile.texi\n@include posix-functions/tmpnam.texi\n@include posix-functions/toascii.texi\n@include posix-functions/tolower.texi\n@include posix-functions/tolower_l.texi\n@include posix-functions/toupper.texi\n@include posix-functions/toupper_l.texi\n@include posix-functions/towctrans.texi\n@include posix-functions/towctrans_l.texi\n@include posix-functions/towlower.texi\n@include posix-functions/towlower_l.texi\n@include posix-functions/towupper.texi\n@include posix-functions/towupper_l.texi\n@include posix-functions/trunc.texi\n@include posix-functions/truncate.texi\n@include posix-functions/truncf.texi\n@include posix-functions/truncl.texi\n@include posix-functions/tsearch.texi\n@include posix-functions/ttyname.texi\n@include posix-functions/ttyname_r.texi\n@include posix-functions/twalk.texi\n@include posix-functions/tzname.texi\n@include posix-functions/tzset.texi\n@include posix-functions/ulimit.texi\n@include posix-functions/umask.texi\n@include posix-functions/uname.texi\n@include posix-functions/ungetc.texi\n@include posix-functions/ungetwc.texi\n@include posix-functions/unlink.texi\n@include posix-functions/unlinkat.texi\n@include posix-functions/unlockpt.texi\n@include posix-functions/unsetenv.texi\n@include posix-functions/uselocale.texi\n@include posix-functions/utime.texi\n@include posix-functions/utimensat.texi\n@include posix-functions/utimes.texi\n@include posix-functions/va_arg.texi\n@include posix-functions/va_copy.texi\n@include posix-functions/va_end.texi\n@include posix-functions/va_start.texi\n@include posix-functions/vdprintf.texi\n@include posix-functions/vfprintf.texi\n@include posix-functions/vfscanf.texi\n@include posix-functions/vfwprintf.texi\n@include posix-functions/vfwscanf.texi\n@include posix-functions/vprintf.texi\n@include posix-functions/vscanf.texi\n@include posix-functions/vsnprintf.texi\n@include posix-functions/vsprintf.texi\n@include posix-functions/vsscanf.texi\n@include posix-functions/vswprintf.texi\n@include posix-functions/vswscanf.texi\n@include posix-functions/vwprintf.texi\n@include posix-functions/vwscanf.texi\n@include posix-functions/wait.texi\n@include posix-functions/waitid.texi\n@include posix-functions/waitpid.texi\n@include posix-functions/wcpcpy.texi\n@include posix-functions/wcpncpy.texi\n@include posix-functions/wcrtomb.texi\n@include posix-functions/wcscasecmp.texi\n@include posix-functions/wcscasecmp_l.texi\n@include posix-functions/wcscat.texi\n@include posix-functions/wcschr.texi\n@include posix-functions/wcscmp.texi\n@include posix-functions/wcscoll.texi\n@include posix-functions/wcscoll_l.texi\n@include posix-functions/wcscpy.texi\n@include posix-functions/wcscspn.texi\n@include posix-functions/wcsdup.texi\n@include posix-functions/wcsftime.texi\n@include posix-functions/wcslen.texi\n@include posix-functions/wcsncasecmp.texi\n@include posix-functions/wcsncasecmp_l.texi\n@include posix-functions/wcsncat.texi\n@include posix-functions/wcsncmp.texi\n@include posix-functions/wcsncpy.texi\n@include posix-functions/wcsnlen.texi\n@include posix-functions/wcsnrtombs.texi\n@include posix-functions/wcspbrk.texi\n@include posix-functions/wcsrchr.texi\n@include posix-functions/wcsrtombs.texi\n@include posix-functions/wcsspn.texi\n@include posix-functions/wcsstr.texi\n@include posix-functions/wcstod.texi\n@include posix-functions/wcstof.texi\n@include posix-functions/wcstoimax.texi\n@include posix-functions/wcstok.texi\n@include posix-functions/wcstol.texi\n@include posix-functions/wcstold.texi\n@include posix-functions/wcstoll.texi\n@include posix-functions/wcstombs.texi\n@include posix-functions/wcstoul.texi\n@include posix-functions/wcstoull.texi\n@include posix-functions/wcstoumax.texi\n@include posix-functions/wcswidth.texi\n@include posix-functions/wcsxfrm.texi\n@include posix-functions/wcsxfrm_l.texi\n@include posix-functions/wctob.texi\n@include posix-functions/wctomb.texi\n@include posix-functions/wctrans.texi\n@include posix-functions/wctrans_l.texi\n@include posix-functions/wctype.texi\n@include posix-functions/wctype_l.texi\n@include posix-functions/wcwidth.texi\n@include posix-functions/wmemchr.texi\n@include posix-functions/wmemcmp.texi\n@include posix-functions/wmemcpy.texi\n@include posix-functions/wmemmove.texi\n@include posix-functions/wmemset.texi\n@include posix-functions/wordexp.texi\n@include posix-functions/wordfree.texi\n@include posix-functions/wprintf.texi\n@include posix-functions/write.texi\n@include posix-functions/writev.texi\n@include posix-functions/wscanf.texi\n@include posix-functions/y0.texi\n@include posix-functions/y1.texi\n@include posix-functions/yn.texi\n\n@node Legacy Function Substitutes\n@chapter Past POSIX Function Substitutes\n\nThis chapter describes which functions and function-like macros specified by\nolder versions of POSIX are substituted by Gnulib, which\nportability pitfalls are fixed by Gnulib, and which (known) portability\nproblems are not worked around by Gnulib.\n\n@nosuchmodulenote function\n\n@menu\n* bcmp::\n* bcopy::\n* bsd_signal::\n* bzero::\n* ecvt::\n* fcvt::\n* ftime::\n* gcvt::\n* getcontext::\n* gethostbyaddr::\n* gethostbyname::\n* getwd::\n* h_errno::\n@ifhtml\n* _index::\n@end ifhtml\n@ifnothtml\n* index::\n@end ifnothtml\n* makecontext::\n* mktemp::\n* pthread_attr_getstackaddr::\n* pthread_attr_setstackaddr::\n* rindex::\n* scalb::\n* setcontext::\n* swapcontext::\n* ualarm::\n* usleep::\n* vfork::\n* wcswcs::\n@end menu\n\n@include pastposix-functions/bcmp.texi\n@include pastposix-functions/bcopy.texi\n@include pastposix-functions/bsd_signal.texi\n@include pastposix-functions/bzero.texi\n@include pastposix-functions/ecvt.texi\n@include pastposix-functions/fcvt.texi\n@include pastposix-functions/ftime.texi\n@include pastposix-functions/gcvt.texi\n@include pastposix-functions/getcontext.texi\n@include pastposix-functions/gethostbyaddr.texi\n@include pastposix-functions/gethostbyname.texi\n@include pastposix-functions/getwd.texi\n@include pastposix-functions/h_errno.texi\n@include pastposix-functions/index.texi\n@include pastposix-functions/makecontext.texi\n@include pastposix-functions/mktemp.texi\n@include pastposix-functions/pthread_attr_getstackaddr.texi\n@include pastposix-functions/pthread_attr_setstackaddr.texi\n@include pastposix-functions/rindex.texi\n@include pastposix-functions/scalb.texi\n@include pastposix-functions/setcontext.texi\n@include pastposix-functions/swapcontext.texi\n@include pastposix-functions/ualarm.texi\n@include pastposix-functions/usleep.texi\n@include pastposix-functions/vfork.texi\n@include pastposix-functions/wcswcs.texi\n\n@node Glibc Header File Substitutes\n@chapter Glibc Header File Substitutes\n\nThis chapter describes which header files contained in GNU libc but not\nspecified by ISO C or POSIX are substituted by Gnulib, which portability\npitfalls are fixed by Gnulib, and which (known) portability problems are\nnot worked around by Gnulib.\n\n@nosuchmodulenote header file\n\n@menu\n* a.out.h::\n* aliases.h::\n* alloca.h::\n* ar.h::\n* argp.h::\n* argz.h::\n* byteswap.h::\n* crypt.h::\n* endian.h::\n* envz.h::\n* err.h::\n* error.h::\n* execinfo.h::\n* fpu_control.h::\n* fstab.h::\n* fts.h::\n* getopt.h::\n* gshadow.h::\n* ieee754.h::\n* ifaddrs.h::\n* libintl.h::\n* mcheck.h::\n* mntent.h::\n* obstack.h::\n* paths.h::\n* printf.h::\n* pty.h::\n* resolv.h::\n* shadow.h::\n* sys/ioctl.h::\n* sysexits.h::\n* ttyent.h::\n@end menu\n\n@include glibc-headers/a.out.texi\n@include glibc-headers/aliases.texi\n@include glibc-headers/alloca.texi\n@include glibc-headers/ar.texi\n@include glibc-headers/argp.texi\n@include glibc-headers/argz.texi\n@include glibc-headers/byteswap.texi\n@include glibc-headers/crypt.texi\n@include glibc-headers/endian.texi\n@include glibc-headers/envz.texi\n@include glibc-headers/err.texi\n@include glibc-headers/error.texi\n@include glibc-headers/execinfo.texi\n@include glibc-headers/fpu_control.texi\n@include glibc-headers/fstab.texi\n@include glibc-headers/fts.texi\n@include glibc-headers/getopt.texi\n@include glibc-headers/gshadow.texi\n@include glibc-headers/ieee754.texi\n@include glibc-headers/ifaddrs.texi\n@include glibc-headers/libintl.texi\n@include glibc-headers/mcheck.texi\n@include glibc-headers/mntent.texi\n@include glibc-headers/obstack.texi\n@include glibc-headers/paths.texi\n@include glibc-headers/printf.texi\n@include glibc-headers/pty.texi\n@include glibc-headers/resolv.texi\n@include glibc-headers/shadow.texi\n@include glibc-headers/sys_ioctl.texi\n@include glibc-headers/sysexits.texi\n@include glibc-headers/ttyent.texi\n\n@node Glibc Function Substitutes\n@chapter Glibc Function Substitutes\n\nThis chapter describes which functions and function-like macros\nprovided as extensions by at least GNU libc are also supported by Gnulib,\nwhich portability pitfalls are fixed by Gnulib, and which (known)\nportability problems are not worked around by Gnulib.\n\n@nosuchmodulenote function\n\nThis list of functions is sorted according to the header that declares them.\n\n@menu\n* Glibc aio.h::\n* Glibc aliases.h::\n* Glibc argp.h::\n* Glibc argz.h::\n* Glibc arpa/inet.h::\n* Glibc byteswap.h::\n* Glibc complex.h::\n* Glibc crypt.h::\n* Glibc ctype.h::\n* Glibc dirent.h::\n* Glibc dlfcn.h::\n* Glibc envz.h::\n* Glibc err.h::\n* Glibc errno.h::\n* Glibc error.h::\n* Glibc execinfo.h::\n* Glibc fcntl.h::\n* Glibc fenv.h::\n* Glibc fmtmsg.h::\n* Glibc fstab.h::\n* Glibc fts.h::\n* Glibc getopt.h::\n* Glibc glob.h::\n* Glibc gnu/libc-version.h::\n* Glibc grp.h::\n* Glibc gshadow.h::\n* Glibc ifaddrs.h::\n* Glibc libintl.h::\n* Glibc link.h::\n* Glibc malloc.h::\n* Glibc math.h::\n* Glibc mcheck.h::\n* Glibc mntent.h::\n* Glibc netdb.h::\n* Glibc netinet/ether.h::\n* Glibc netinet/in.h::\n* Glibc obstack.h::\n* Glibc printf.h::\n* Glibc pthread.h::\n* Glibc pty.h::\n* Glibc pwd.h::\n* Glibc regex.h::\n* Glibc regexp.h::\n* Glibc resolv.h::\n* Glibc rpc/auth.h::\n* Glibc rpc/auth_des.h::\n* Glibc rpc/auth_unix.h::\n* Glibc rpc/clnt.h::\n* Glibc rpc/des_crypt.h::\n* Glibc rpc/key_prot.h::\n* Glibc rpc/netdb.h::\n* Glibc rpc/pmap_clnt.h::\n* Glibc rpc/pmap_prot.h::\n* Glibc rpc/pmap_rmt.h::\n* Glibc rpc/rpc_msg.h::\n* Glibc rpc/svc.h::\n* Glibc rpc/xdr.h::\n* Glibc rpcsvc/nislib.h::\n* Glibc rpcsvc/nis_callback.h::\n* Glibc rpcsvc/yp.h::\n* Glibc rpcsvc/yp_prot.h::\n* Glibc rpcsvc/ypclnt.h::\n* Glibc rpcsvc/ypupd.h::\n* Glibc sched.h::\n* Glibc search.h::\n* Glibc selinux/selinux.h::\n* Glibc shadow.h::\n* Glibc signal.h::\n* Glibc stdio.h::\n* Glibc stdlib.h::\n* Glibc string.h::\n* Glibc sys/capability.h::\n* Glibc sys/epoll.h::\n* Glibc sys/fanotify.h::\n* Glibc sys/file.h::\n* Glibc sys/fsuid.h::\n* Glibc sys/gmon.h::\n* Glibc sys/io.h and sys/perm.h::\n* Glibc sys/kdaemon.h::\n* Glibc sys/klog.h::\n* Glibc sys/mman.h::\n* Glibc sys/mount.h::\n* Glibc sys/personality.h::\n* Glibc sys/prctl.h::\n* Glibc sys/profil.h::\n* Glibc sys/ptrace.h::\n* Glibc sys/quota.h::\n* Glibc sys/reboot.h::\n* Glibc sys/resource.h::\n* Glibc sys/sem.h::\n* Glibc sys/sendfile.h::\n* Glibc sys/socket.h::\n* Glibc sys/stat.h::\n* Glibc sys/statfs.h::\n* Glibc sys/swap.h::\n* Glibc sys/sysctl.h::\n* Glibc sys/sysinfo.h::\n* Glibc sys/syslog.h::\n* Glibc sys/sysmacros.h::\n* Glibc sys/time.h::\n* Glibc sys/timex.h::\n* Glibc sys/uio.h::\n* Glibc sys/ustat.h::\n* Glibc sys/vlimit.h::\n* Glibc sys/vm86.h::\n* Glibc sys/vtimes.h::\n* Glibc sys/wait.h::\n* Glibc sys/xattr.h::\n* Glibc termios.h::\n* Glibc time.h::\n* Glibc ttyent.h::\n* Glibc unistd.h::\n* Glibc utmp.h::\n* Glibc utmpx.h::\n* Glibc wchar.h::\n@end menu\n\n@c @node Glibc a.out.h\n@c @section Glibc @code{<a.out.h>}\n\n@node Glibc aio.h\n@section Glibc Extensions to @code{<aio.h>}\n\n@menu\n* aio_init::\n@end menu\n\n@include glibc-functions/aio_init.texi\n\n@node Glibc aliases.h\n@section Glibc @code{<aliases.h>}\n\n@menu\n* endaliasent::\n* getaliasbyname::\n* getaliasbyname_r::\n* getaliasent::\n* getaliasent_r::\n* setaliasent::\n@end menu\n\n@include glibc-functions/endaliasent.texi\n@include glibc-functions/getaliasbyname.texi\n@include glibc-functions/getaliasbyname_r.texi\n@include glibc-functions/getaliasent.texi\n@include glibc-functions/getaliasent_r.texi\n@include glibc-functions/setaliasent.texi\n\n@c @node Glibc alloca.h\n@c @section Glibc @code{<alloca.h>}\n\n@c @node Glibc ar.h\n@c @section Glibc @code{<ar.h>}\n\n@node Glibc argp.h\n@section Glibc @code{<argp.h>}\n\n@menu\n* argp_err_exit_status::\n* argp_error::\n* argp_failure::\n* argp_help::\n* argp_parse::\n* argp_program_bug_address::\n* argp_program_version::\n* argp_program_version_hook::\n* argp_state_help::\n* argp_usage::\n@end menu\n\n@include glibc-functions/argp_err_exit_status.texi\n@include glibc-functions/argp_error.texi\n@include glibc-functions/argp_failure.texi\n@include glibc-functions/argp_help.texi\n@include glibc-functions/argp_parse.texi\n@include glibc-functions/argp_program_bug_address.texi\n@include glibc-functions/argp_program_version.texi\n@include glibc-functions/argp_program_version_hook.texi\n@include glibc-functions/argp_state_help.texi\n@include glibc-functions/argp_usage.texi\n\n@node Glibc argz.h\n@section Glibc @code{<argz.h>}\n\n@menu\n* argz_add::\n* argz_add_sep::\n* argz_append::\n* argz_count::\n* argz_create::\n* argz_create_sep::\n* argz_delete::\n* argz_extract::\n* argz_insert::\n* argz_next::\n* argz_replace::\n* argz_stringify::\n@end menu\n\n@include glibc-functions/argz_add.texi\n@include glibc-functions/argz_add_sep.texi\n@include glibc-functions/argz_append.texi\n@include glibc-functions/argz_count.texi\n@include glibc-functions/argz_create.texi\n@include glibc-functions/argz_create_sep.texi\n@include glibc-functions/argz_delete.texi\n@include glibc-functions/argz_extract.texi\n@include glibc-functions/argz_insert.texi\n@include glibc-functions/argz_next.texi\n@include glibc-functions/argz_replace.texi\n@include glibc-functions/argz_stringify.texi\n\n@node Glibc arpa/inet.h\n@section Glibc Extensions to @code{<arpa/inet.h>}\n\n@menu\n* inet_aton::\n* inet_lnaof::\n* inet_makeaddr::\n* inet_net_ntop::\n* inet_net_pton::\n* inet_neta::\n* inet_netof::\n* inet_network::\n* inet_nsap_addr::\n* inet_nsap_ntoa::\n@end menu\n\n@include glibc-functions/inet_aton.texi\n@include glibc-functions/inet_lnaof.texi\n@include glibc-functions/inet_makeaddr.texi\n@include glibc-functions/inet_net_ntop.texi\n@include glibc-functions/inet_net_pton.texi\n@include glibc-functions/inet_neta.texi\n@include glibc-functions/inet_netof.texi\n@include glibc-functions/inet_network.texi\n@include glibc-functions/inet_nsap_addr.texi\n@include glibc-functions/inet_nsap_ntoa.texi\n\n@c @node Glibc assert.h\n@c @section Glibc Extensions to @code{<assert.h>}\n\n@node Glibc byteswap.h\n@section Glibc @code{<byteswap.h>}\n\n@menu\n* bswap_16::\n* bswap_32::\n* bswap_64::\n@end menu\n\n@include glibc-functions/bswap_16.texi\n@include glibc-functions/bswap_32.texi\n@include glibc-functions/bswap_64.texi\n\n@node Glibc complex.h\n@section Glibc Extensions to @code{<complex.h>}\n\n@menu\n* clog10::\n* clog10f::\n* clog10l::\n@end menu\n\n@include glibc-functions/clog10.texi\n@include glibc-functions/clog10f.texi\n@include glibc-functions/clog10l.texi\n\n@c @node Glibc cpio.h\n@c @section Glibc Extensions to @code{<cpio.h>}\n\n@node Glibc crypt.h\n@section Glibc @code{<crypt.h>}\n\n@menu\n* crypt_r::\n* encrypt_r::\n* setkey_r::\n@end menu\n\n@include glibc-functions/crypt_r.texi\n@include glibc-functions/encrypt_r.texi\n@include glibc-functions/setkey_r.texi\n\n@node Glibc ctype.h\n@section Glibc Extensions to @code{<ctype.h>}\n\n@menu\n* isctype::\n@end menu\n\n@include glibc-functions/isctype.texi\n\n@node Glibc dirent.h\n@section Glibc Extensions to @code{<dirent.h>}\n\n@menu\n* getdirentries::\n* scandirat::\n* versionsort::\n@end menu\n\n@include glibc-functions/getdirentries.texi\n@include glibc-functions/scandirat.texi\n@include glibc-functions/versionsort.texi\n\n@node Glibc dlfcn.h\n@section Glibc Extensions to @code{<dlfcn.h>}\n\n@menu\n* dladdr::\n* dladdr1::\n* dlinfo::\n* dlmopen::\n* dlvsym::\n@end menu\n\n@include glibc-functions/dladdr.texi\n@include glibc-functions/dladdr1.texi\n@include glibc-functions/dlinfo.texi\n@include glibc-functions/dlmopen.texi\n@include glibc-functions/dlvsym.texi\n\n@c @node Glibc endian.h\n@c @section Glibc @code{<endian.h>}\n\n@node Glibc envz.h\n@section Glibc @code{<envz.h>}\n\n@menu\n* envz_add::\n* envz_entry::\n* envz_get::\n* envz_merge::\n* envz_remove::\n* envz_strip::\n@end menu\n\n@include glibc-functions/envz_add.texi\n@include glibc-functions/envz_entry.texi\n@include glibc-functions/envz_get.texi\n@include glibc-functions/envz_merge.texi\n@include glibc-functions/envz_remove.texi\n@include glibc-functions/envz_strip.texi\n\n@node Glibc err.h\n@section Glibc @code{<err.h>}\n\n@menu\n* err::\n* errx::\n* verr::\n* verrx::\n* vwarn::\n* vwarnx::\n* warn::\n* warnx::\n@end menu\n\n@include glibc-functions/err.texi\n@include glibc-functions/errx.texi\n@include glibc-functions/verr.texi\n@include glibc-functions/verrx.texi\n@include glibc-functions/vwarn.texi\n@include glibc-functions/vwarnx.texi\n@include glibc-functions/warn.texi\n@include glibc-functions/warnx.texi\n\n@node Glibc errno.h\n@section Glibc Extensions to @code{<errno.h>}\n\n@menu\n* program_invocation_name::\n* program_invocation_short_name::\n@end menu\n\n@include glibc-functions/program_invocation_name.texi\n@include glibc-functions/program_invocation_short_name.texi\n\n@node Glibc error.h\n@section Glibc @code{<error.h>}\n\n@menu\n* error::\n* error_at_line::\n* error_message_count::\n* error_one_per_line::\n* error_print_progname::\n@end menu\n\n@include glibc-functions/error.texi\n@include glibc-functions/error_at_line.texi\n@include glibc-functions/error_message_count.texi\n@include glibc-functions/error_one_per_line.texi\n@include glibc-functions/error_print_progname.texi\n\n@node Glibc execinfo.h\n@section Glibc @code{<execinfo.h>}\n\n@menu\n* backtrace::\n* backtrace_symbols::\n* backtrace_symbols_fd::\n@end menu\n\n@include glibc-functions/backtrace.texi\n@include glibc-functions/backtrace_symbols.texi\n@include glibc-functions/backtrace_symbols_fd.texi\n\n@node Glibc fcntl.h\n@section Glibc Extensions to @code{<fcntl.h>}\n\n@menu\n* fallocate::\n* name_to_handle_at::\n* readahead::\n* open_by_handle_at::\n@end menu\n\n@include glibc-functions/fallocate.texi\n@include glibc-functions/name_to_handle_at.texi\n@include glibc-functions/readahead.texi\n@include glibc-functions/open_by_handle_at.texi\n\n@node Glibc fenv.h\n@section Glibc Extensions to @code{<fenv.h>}\n\n@menu\n* fedisableexcept::\n* feenableexcept::\n* fegetexcept::\n@end menu\n\n@include glibc-functions/fedisableexcept.texi\n@include glibc-functions/feenableexcept.texi\n@include glibc-functions/fegetexcept.texi\n\n@c @node Glibc float.h\n@c @section Glibc Extensions to @code{<float.h>}\n\n@node Glibc fmtmsg.h\n@section Glibc Extensions to @code{<fmtmsg.h>}\n\n@menu\n* addseverity::\n@end menu\n\n@include glibc-functions/addseverity.texi\n\n@c @node Glibc fnmatch.h\n@c @section Glibc Extensions to @code{<fnmatch.h>}\n\n@c @node Glibc fpu_control.h\n@c @section Glibc @code{<fpu_control.h>}\n\n@node Glibc fstab.h\n@section Glibc @code{<fstab.h>}\n\n@menu\n* endfsent::\n* getfsent::\n* getfsfile::\n* getfsspec::\n* setfsent::\n@end menu\n\n@include glibc-functions/endfsent.texi\n@include glibc-functions/getfsent.texi\n@include glibc-functions/getfsfile.texi\n@include glibc-functions/getfsspec.texi\n@include glibc-functions/setfsent.texi\n\n@node Glibc fts.h\n@section Glibc @code{<fts.h>}\n\n@menu\n* fts_children::\n* fts_close::\n* fts_open::\n* fts_read::\n* fts_set::\n@end menu\n\n@include glibc-functions/fts_children.texi\n@include glibc-functions/fts_close.texi\n@include glibc-functions/fts_open.texi\n@include glibc-functions/fts_read.texi\n@include glibc-functions/fts_set.texi\n\n@c @node Glibc ftw.h\n@c @section Glibc Extensions to @code{<ftw.h>}\n\n@node Glibc getopt.h\n@section Glibc @code{<getopt.h>}\n\n@menu\n* getopt_long::\n* getopt_long_only::\n@end menu\n\n@include glibc-functions/getopt_long.texi\n@include glibc-functions/getopt_long_only.texi\n\n@node Glibc glob.h\n@section Glibc Extensions to @code{<glob.h>}\n\n@menu\n* glob_pattern_p::\n@end menu\n\n@include glibc-functions/glob_pattern_p.texi\n\n@node Glibc gnu/libc-version.h\n@section Glibc Extensions to @code{<gnu/libc-version.h>}\n\n@menu\n* gnu_get_libc_release::\n* gnu_get_libc_version::\n@end menu\n\n@include glibc-functions/gnu_get_libc_release.texi\n@include glibc-functions/gnu_get_libc_version.texi\n\n@node Glibc grp.h\n@section Glibc Extensions to @code{<grp.h>}\n\n@menu\n* fgetgrent::\n* fgetgrent_r::\n* getgrent_r::\n* getgrouplist::\n* initgroups::\n* putgrent::\n* setgroups::\n@end menu\n\n@include glibc-functions/fgetgrent.texi\n@include glibc-functions/fgetgrent_r.texi\n@include glibc-functions/getgrent_r.texi\n@include glibc-functions/getgrouplist.texi\n@include glibc-functions/initgroups.texi\n@include glibc-functions/putgrent.texi\n@include glibc-functions/setgroups.texi\n\n@node Glibc gshadow.h\n@section Glibc @code{<gshadow.h>}\n\n@menu\n* endsgent::\n* fgetsgent::\n* fgetsgent_r::\n* getsgent::\n* getsgent_r::\n* getsgnam::\n* getsgnam_r::\n* putsgent::\n* setsgent::\n* sgetsgent::\n* sgetsgent_r::\n@end menu\n\n@include glibc-functions/endsgent.texi\n@include glibc-functions/fgetsgent.texi\n@include glibc-functions/fgetsgent_r.texi\n@include glibc-functions/getsgent.texi\n@include glibc-functions/getsgent_r.texi\n@include glibc-functions/getsgnam.texi\n@include glibc-functions/getsgnam_r.texi\n@include glibc-functions/putsgent.texi\n@include glibc-functions/setsgent.texi\n@include glibc-functions/sgetsgent.texi\n@include glibc-functions/sgetsgent_r.texi\n\n@c @node Glibc iconv.h\n@c @section Glibc Extensions to @code{<iconv.h>}\n\n@c @node Glibc ieee754.h\n@c @section Glibc @code{<ieee754.h>}\n\n@node Glibc ifaddrs.h\n@section Glibc @code{<ifaddrs.h>}\n\n@menu\n* getifaddrs::\n* freeifaddrs::\n@end menu\n\n@include glibc-functions/getifaddrs.texi\n@include glibc-functions/freeifaddrs.texi\n\n@c @node Glibc inttypes.h\n@c @section Glibc Extensions to @code{<inttypes.h>}\n\n@c @node Glibc iso646.h\n@c @section Glibc Extensions to @code{<iso646.h>}\n\n@c @node Glibc langinfo.h\n@c @section Glibc Extensions to @code{<langinfo.h>}\n\n@c @node Glibc libgen.h\n@c @section Glibc Extensions to @code{<libgen.h>}\n\n@node Glibc libintl.h\n@section Glibc @code{<libintl.h>}\n\n@menu\n* bind_textdomain_codeset::\n* bindtextdomain::\n* dcgettext::\n* dcngettext::\n* dgettext::\n* dngettext::\n* gettext::\n* ngettext::\n* textdomain::\n@end menu\n\n@include glibc-functions/bind_textdomain_codeset.texi\n@include glibc-functions/bindtextdomain.texi\n@include glibc-functions/dcgettext.texi\n@include glibc-functions/dcngettext.texi\n@include glibc-functions/dgettext.texi\n@include glibc-functions/dngettext.texi\n@include glibc-functions/gettext.texi\n@include glibc-functions/ngettext.texi\n@include glibc-functions/textdomain.texi\n\n@c @node Glibc limits.h\n@c @section Glibc Extensions to @code{<limits.h>}\n\n@node Glibc link.h\n@section Glibc @code{<link.h>}\n\n@menu\n* dl_iterate_phdr::\n@end menu\n\n@include glibc-functions/dl_iterate_phdr.texi\n\n@c @node Glibc locale.h\n@c @section Glibc Extensions to @code{<locale.h>}\n\n@node Glibc malloc.h\n@section Glibc @code{<malloc.h>}\n\n@menu\n* mallinfo::\n* malloc_get_state::\n* malloc_set_state::\n* malloc_info::\n* malloc_stats::\n* malloc_trim::\n* malloc_usable_size::\n* mallopt::\n* memalign::\n* pvalloc::\n@end menu\n\n@include glibc-functions/mallinfo.texi\n@include glibc-functions/malloc_get_state.texi\n@include glibc-functions/malloc_set_state.texi\n@include glibc-functions/malloc_info.texi\n@include glibc-functions/malloc_stats.texi\n@include glibc-functions/malloc_trim.texi\n@include glibc-functions/malloc_usable_size.texi\n@include glibc-functions/mallopt.texi\n@include glibc-functions/memalign.texi\n@include glibc-functions/pvalloc.texi\n\n@node Glibc math.h\n@section Glibc Extensions to @code{<math.h>}\n\n@menu\n* drem::\n* dremf::\n* dreml::\n* exp10::\n* exp10f::\n* exp10l::\n* finite::\n* finitef::\n* finitel::\n* gamma::\n* gammaf::\n* gammal::\n* isinff::\n* isinfl::\n* isnanf::\n* isnanl::\n* j0f::\n* j0l::\n* j1f::\n* j1l::\n* jnf::\n* jnl::\n* lgamma_r::\n* lgammaf_r::\n* lgammal_r::\n* matherr::\n* pow10::\n* pow10f::\n* pow10l::\n* scalbf::\n* scalbl::\n* significand::\n* significandf::\n* significandl::\n* sincos::\n* sincosf::\n* sincosl::\n* y0f::\n* y0l::\n* y1f::\n* y1l::\n* ynf::\n* ynl::\n@end menu\n\n@include glibc-functions/drem.texi\n@include glibc-functions/dremf.texi\n@include glibc-functions/dreml.texi\n@include glibc-functions/exp10.texi\n@include glibc-functions/exp10f.texi\n@include glibc-functions/exp10l.texi\n@include glibc-functions/finite.texi\n@include glibc-functions/finitef.texi\n@include glibc-functions/finitel.texi\n@include glibc-functions/gamma.texi\n@include glibc-functions/gammaf.texi\n@include glibc-functions/gammal.texi\n@include glibc-functions/isinff.texi\n@include glibc-functions/isinfl.texi\n@include glibc-functions/isnanf.texi\n@include glibc-functions/isnanl.texi\n@include glibc-functions/j0f.texi\n@include glibc-functions/j0l.texi\n@include glibc-functions/j1f.texi\n@include glibc-functions/j1l.texi\n@include glibc-functions/jnf.texi\n@include glibc-functions/jnl.texi\n@include glibc-functions/lgamma_r.texi\n@include glibc-functions/lgammaf_r.texi\n@include glibc-functions/lgammal_r.texi\n@include glibc-functions/matherr.texi\n@include glibc-functions/pow10.texi\n@include glibc-functions/pow10f.texi\n@include glibc-functions/pow10l.texi\n@include glibc-functions/scalbf.texi\n@include glibc-functions/scalbl.texi\n@include glibc-functions/significand.texi\n@include glibc-functions/significandf.texi\n@include glibc-functions/significandl.texi\n@include glibc-functions/sincos.texi\n@include glibc-functions/sincosf.texi\n@include glibc-functions/sincosl.texi\n@include glibc-functions/y0f.texi\n@include glibc-functions/y0l.texi\n@include glibc-functions/y1f.texi\n@include glibc-functions/y1l.texi\n@include glibc-functions/ynf.texi\n@include glibc-functions/ynl.texi\n\n@node Glibc mcheck.h\n@section Glibc @code{<mcheck.h>}\n\n@menu\n* mcheck::\n* mcheck_check_all::\n* mcheck_pedantic::\n* mprobe::\n* mtrace::\n* muntrace::\n@end menu\n\n@include glibc-functions/mcheck.texi\n@include glibc-functions/mcheck_check_all.texi\n@include glibc-functions/mcheck_pedantic.texi\n@include glibc-functions/mprobe.texi\n@include glibc-functions/mtrace.texi\n@include glibc-functions/muntrace.texi\n\n@c @node Glibc monetary.h\n@c @section Glibc Extensions to @code{<monetary.h>}\n\n@node Glibc mntent.h\n@section Glibc @code{<mntent.h>}\n\n@menu\n* addmntent::\n* endmntent::\n* getmntent::\n* getmntent_r::\n* hasmntopt::\n* setmntent::\n@end menu\n\n@include glibc-functions/addmntent.texi\n@include glibc-functions/endmntent.texi\n@include glibc-functions/getmntent.texi\n@include glibc-functions/getmntent_r.texi\n@include glibc-functions/hasmntopt.texi\n@include glibc-functions/setmntent.texi\n\n@c @node Glibc mqueue.h\n@c @section Glibc Extensions to @code{<mqueue.h>}\n\n@c @node Glibc ndbm.h\n@c @section Glibc Extensions to @code{<ndbm.h>}\n\n@node Glibc netdb.h\n@section Glibc Extensions to @code{<netdb.h>}\n\n@menu\n* endnetgrent::\n* gethostbyaddr_r::\n* gethostbyname2::\n* gethostbyname2_r::\n* gethostbyname_r::\n* gethostent_r::\n* getnetbyaddr_r::\n* getnetbyname_r::\n* getnetent_r::\n* getnetgrent::\n* getnetgrent_r::\n* getprotobyname_r::\n* getprotobynumber_r::\n* getprotoent_r::\n* getservbyname_r::\n* getservbyport_r::\n* getservent_r::\n* herror::\n* hstrerror::\n* innetgr::\n* rcmd::\n* rcmd_af::\n* rexec::\n* rexec_af::\n* rresvport::\n* rresvport_af::\n* ruserok::\n* ruserok_af::\n* setnetgrent::\n@end menu\n\n@include glibc-functions/endnetgrent.texi\n@include glibc-functions/gethostbyaddr_r.texi\n@include glibc-functions/gethostbyname2.texi\n@include glibc-functions/gethostbyname2_r.texi\n@include glibc-functions/gethostbyname_r.texi\n@include glibc-functions/gethostent_r.texi\n@include glibc-functions/getnetbyaddr_r.texi\n@include glibc-functions/getnetbyname_r.texi\n@include glibc-functions/getnetent_r.texi\n@include glibc-functions/getnetgrent.texi\n@include glibc-functions/getnetgrent_r.texi\n@include glibc-functions/getprotobyname_r.texi\n@include glibc-functions/getprotobynumber_r.texi\n@include glibc-functions/getprotoent_r.texi\n@include glibc-functions/getservbyname_r.texi\n@include glibc-functions/getservbyport_r.texi\n@include glibc-functions/getservent_r.texi\n@include glibc-functions/herror.texi\n@include glibc-functions/hstrerror.texi\n@include glibc-functions/innetgr.texi\n@include glibc-functions/rcmd.texi\n@include glibc-functions/rcmd_af.texi\n@include glibc-functions/rexec.texi\n@include glibc-functions/rexec_af.texi\n@include glibc-functions/rresvport.texi\n@include glibc-functions/rresvport_af.texi\n@include glibc-functions/ruserok.texi\n@include glibc-functions/ruserok_af.texi\n@include glibc-functions/setnetgrent.texi\n\n@node Glibc netinet/ether.h\n@section Glibc @code{<netinet/ether.h>}\n\n@menu\n* ether_aton::\n* ether_aton_r::\n* ether_hostton::\n* ether_line::\n* ether_ntoa::\n* ether_ntoa_r::\n* ether_ntohost::\n@end menu\n\n@include glibc-functions/ether_aton.texi\n@include glibc-functions/ether_aton_r.texi\n@include glibc-functions/ether_hostton.texi\n@include glibc-functions/ether_line.texi\n@include glibc-functions/ether_ntoa.texi\n@include glibc-functions/ether_ntoa_r.texi\n@include glibc-functions/ether_ntohost.texi\n\n@node Glibc netinet/in.h\n@section Glibc Extensions to @code{<netinet/in.h>}\n\n@menu\n* bindresvport::\n* getipv4sourcefilter::\n* getsourcefilter::\n* in6addr_any::\n* in6addr_loopback::\n* inet6_option_alloc::\n* inet6_option_append::\n* inet6_option_find::\n* inet6_option_init::\n* inet6_option_next::\n* inet6_option_space::\n* inet6_opt_append::\n* inet6_opt_find::\n* inet6_opt_finish::\n* inet6_opt_get_val::\n* inet6_opt_init::\n* inet6_opt_next::\n* inet6_opt_set_val::\n* inet6_rth_add::\n* inet6_rth_getaddr::\n* inet6_rth_init::\n* inet6_rth_reverse::\n* inet6_rth_segments::\n* inet6_rth_space::\n* setipv4sourcefilter::\n* setsourcefilter::\n@end menu\n\n@include glibc-functions/bindresvport.texi\n@include glibc-functions/getipv4sourcefilter.texi\n@include glibc-functions/getsourcefilter.texi\n@include glibc-functions/in6addr_any.texi\n@include glibc-functions/in6addr_loopback.texi\n@include glibc-functions/inet6_option_alloc.texi\n@include glibc-functions/inet6_option_append.texi\n@include glibc-functions/inet6_option_find.texi\n@include glibc-functions/inet6_option_init.texi\n@include glibc-functions/inet6_option_next.texi\n@include glibc-functions/inet6_option_space.texi\n@include glibc-functions/inet6_opt_append.texi\n@include glibc-functions/inet6_opt_find.texi\n@include glibc-functions/inet6_opt_finish.texi\n@include glibc-functions/inet6_opt_get_val.texi\n@include glibc-functions/inet6_opt_init.texi\n@include glibc-functions/inet6_opt_next.texi\n@include glibc-functions/inet6_opt_set_val.texi\n@include glibc-functions/inet6_rth_add.texi\n@include glibc-functions/inet6_rth_getaddr.texi\n@include glibc-functions/inet6_rth_init.texi\n@include glibc-functions/inet6_rth_reverse.texi\n@include glibc-functions/inet6_rth_segments.texi\n@include glibc-functions/inet6_rth_space.texi\n@include glibc-functions/setipv4sourcefilter.texi\n@include glibc-functions/setsourcefilter.texi\n\n@c @node Glibc nl_types.h\n@c @section Glibc Extensions to @code{<nl_types.h>}\n\n@node Glibc obstack.h\n@section Glibc @code{<obstack.h>}\n\n@menu\n* obstack_alloc_failed_handler::\n* obstack_exit_failure::\n* obstack_free::\n* obstack_printf::\n* obstack_vprintf::\n@end menu\n\n@include glibc-functions/obstack_alloc_failed_handler.texi\n@include glibc-functions/obstack_exit_failure.texi\n@include glibc-functions/obstack_free.texi\n@include glibc-functions/obstack_printf.texi\n@include glibc-functions/obstack_vprintf.texi\n\n@c @node Glibc paths.h\n@c @section Glibc @code{<paths.h>}\n\n@c @node Glibc poll.h\n@c @section Glibc Extensions to @code{<poll.h>}\n\n@node Glibc printf.h\n@section Glibc @code{<printf.h>}\n\n@menu\n* parse_printf_format::\n* printf_size::\n* printf_size_info::\n* register_printf_function::\n* register_printf_modifier::\n* register_printf_specifier::\n* register_printf_type::\n@end menu\n\n@include glibc-functions/parse_printf_format.texi\n@include glibc-functions/printf_size.texi\n@include glibc-functions/printf_size_info.texi\n@include glibc-functions/register_printf_function.texi\n@include glibc-functions/register_printf_modifier.texi\n@include glibc-functions/register_printf_specifier.texi\n@include glibc-functions/register_printf_type.texi\n\n@node Glibc pthread.h\n@section Glibc Extensions to @code{<pthread.h>}\n\n@menu\n* pthread_attr_getaffinity_np::\n* pthread_attr_setaffinity_np::\n* pthread_getaffinity_np::\n* pthread_getattr_np::\n* pthread_getname_np::\n* pthread_kill_other_threads_np::\n* pthread_mutex_consistent_np::\n* pthread_mutexattr_getrobust_np::\n* pthread_mutexattr_setrobust_np::\n* pthread_rwlockattr_getkind_np::\n* pthread_rwlockattr_setkind_np::\n* pthread_setaffinity_np::\n* pthread_setname_np::\n* pthread_sigqueue::\n* pthread_timedjoin_np::\n* pthread_tryjoin_np::\n* pthread_yield::\n@end menu\n\n@include glibc-functions/pthread_attr_getaffinity_np.texi\n@include glibc-functions/pthread_attr_setaffinity_np.texi\n@include glibc-functions/pthread_getaffinity_np.texi\n@include glibc-functions/pthread_getattr_np.texi\n@include glibc-functions/pthread_getname_np.texi\n@include glibc-functions/pthread_kill_other_threads_np.texi\n@include glibc-functions/pthread_mutex_consistent_np.texi\n@include glibc-functions/pthread_mutexattr_getrobust_np.texi\n@include glibc-functions/pthread_mutexattr_setrobust_np.texi\n@include glibc-functions/pthread_rwlockattr_getkind_np.texi\n@include glibc-functions/pthread_rwlockattr_setkind_np.texi\n@include glibc-functions/pthread_setaffinity_np.texi\n@include glibc-functions/pthread_setname_np.texi\n@include glibc-functions/pthread_sigqueue.texi\n@include glibc-functions/pthread_timedjoin_np.texi\n@include glibc-functions/pthread_tryjoin_np.texi\n@include glibc-functions/pthread_yield.texi\n\n@node Glibc pty.h\n@section Glibc @code{<pty.h>}\n\n@menu\n* forkpty::\n* openpty::\n@end menu\n\n@include glibc-functions/forkpty.texi\n@include glibc-functions/openpty.texi\n\n@node Glibc pwd.h\n@section Glibc Extensions to @code{<pwd.h>}\n\n@menu\n* fgetpwent::\n* fgetpwent_r::\n* getpw::\n* getpwent_r::\n* putpwent::\n@end menu\n\n@include glibc-functions/fgetpwent.texi\n@include glibc-functions/fgetpwent_r.texi\n@include glibc-functions/getpw.texi\n@include glibc-functions/getpwent_r.texi\n@include glibc-functions/putpwent.texi\n\n@node Glibc regex.h\n@section Glibc Extensions to @code{<regex.h>}\n\n@menu\n* re_comp::\n* re_compile_fastmap::\n* re_compile_pattern::\n* re_exec::\n* re_match::\n* re_match_2::\n* re_search::\n* re_search_2::\n* re_set_registers::\n* re_set_syntax::\n* re_syntax_options::\n@end menu\n\n@include glibc-functions/re_comp.texi\n@include glibc-functions/re_compile_fastmap.texi\n@include glibc-functions/re_compile_pattern.texi\n@include glibc-functions/re_exec.texi\n@include glibc-functions/re_match.texi\n@include glibc-functions/re_match_2.texi\n@include glibc-functions/re_search.texi\n@include glibc-functions/re_search_2.texi\n@include glibc-functions/re_set_registers.texi\n@include glibc-functions/re_set_syntax.texi\n@include glibc-functions/re_syntax_options.texi\n\n@node Glibc regexp.h\n@section Glibc @code{<regexp.h>}\n\n@menu\n* advance::\n* loc1::\n* loc2::\n* locs::\n* step::\n@end menu\n\n@include glibc-functions/advance.texi\n@include glibc-functions/loc1.texi\n@include glibc-functions/loc2.texi\n@include glibc-functions/locs.texi\n@include glibc-functions/step.texi\n\n@node Glibc resolv.h\n@section Glibc @code{<resolv.h>}\n\n@menu\n* dn_expand::\n* res_init::\n* res_mkquery::\n* res_query::\n* res_querydomain::\n* res_search::\n@end menu\n\n@include glibc-functions/dn_expand.texi\n@include glibc-functions/res_init.texi\n@include glibc-functions/res_mkquery.texi\n@include glibc-functions/res_query.texi\n@include glibc-functions/res_querydomain.texi\n@include glibc-functions/res_search.texi\n\n@node Glibc rpc/auth.h\n@section Glibc @code{<rpc/auth.h>}\n\n@menu\n* authdes_create::\n* authdes_pk_create::\n* authnone_create::\n* authunix_create::\n* authunix_create_default::\n* getnetname::\n* host2netname::\n* key_decryptsession::\n* key_decryptsession_pk::\n* key_encryptsession::\n* key_encryptsession_pk::\n* key_gendes::\n* key_get_conv::\n* key_secretkey_is_set::\n* key_setsecret::\n* netname2host::\n* netname2user::\n* user2netname::\n* xdr_des_block::\n* xdr_opaque_auth::\n@end menu\n\n@include glibc-functions/authdes_create.texi\n@include glibc-functions/authdes_pk_create.texi\n@include glibc-functions/authnone_create.texi\n@include glibc-functions/authunix_create.texi\n@include glibc-functions/authunix_create_default.texi\n@include glibc-functions/getnetname.texi\n@include glibc-functions/host2netname.texi\n@include glibc-functions/key_decryptsession.texi\n@include glibc-functions/key_decryptsession_pk.texi\n@include glibc-functions/key_encryptsession.texi\n@include glibc-functions/key_encryptsession_pk.texi\n@include glibc-functions/key_gendes.texi\n@include glibc-functions/key_get_conv.texi\n@include glibc-functions/key_secretkey_is_set.texi\n@include glibc-functions/key_setsecret.texi\n@include glibc-functions/netname2host.texi\n@include glibc-functions/netname2user.texi\n@include glibc-functions/user2netname.texi\n@include glibc-functions/xdr_des_block.texi\n@include glibc-functions/xdr_opaque_auth.texi\n\n@node Glibc rpc/auth_des.h\n@section Glibc @code{<rpc/auth_des.h>}\n\n@menu\n* authdes_getucred::\n* getpublickey::\n* getsecretkey::\n* rtime::\n@end menu\n\n@include glibc-functions/authdes_getucred.texi\n@include glibc-functions/getpublickey.texi\n@include glibc-functions/getsecretkey.texi\n@include glibc-functions/rtime.texi\n\n@node Glibc rpc/auth_unix.h\n@section Glibc @code{<rpc/auth_unix.h>}\n\n@menu\n* xdr_authunix_parms::\n@end menu\n\n@include glibc-functions/xdr_authunix_parms.texi\n\n@node Glibc rpc/clnt.h\n@section Glibc @code{<rpc/clnt.h>}\n\n@menu\n* callrpc::\n* clnt_create::\n* clnt_pcreateerror::\n* clnt_perrno::\n* clnt_perror::\n* clnt_spcreateerror::\n* clnt_sperrno::\n* clnt_sperror::\n* clntraw_create::\n* clnttcp_create::\n* clntudp_bufcreate::\n* clntudp_create::\n* clntunix_create::\n* get_myaddress::\n* getrpcport::\n* rpc_createerr::\n@end menu\n\n@include glibc-functions/callrpc.texi\n@include glibc-functions/clnt_create.texi\n@include glibc-functions/clnt_pcreateerror.texi\n@include glibc-functions/clnt_perrno.texi\n@include glibc-functions/clnt_perror.texi\n@include glibc-functions/clnt_spcreateerror.texi\n@include glibc-functions/clnt_sperrno.texi\n@include glibc-functions/clnt_sperror.texi\n@include glibc-functions/clntraw_create.texi\n@include glibc-functions/clnttcp_create.texi\n@include glibc-functions/clntudp_bufcreate.texi\n@include glibc-functions/clntudp_create.texi\n@include glibc-functions/clntunix_create.texi\n@include glibc-functions/get_myaddress.texi\n@include glibc-functions/getrpcport.texi\n@include glibc-functions/rpc_createerr.texi\n\n@node Glibc rpc/des_crypt.h\n@section Glibc @code{<rpc/des_crypt.h>}\n\n@menu\n* cbc_crypt::\n* des_setparity::\n* ecb_crypt::\n@end menu\n\n@include glibc-functions/cbc_crypt.texi\n@include glibc-functions/des_setparity.texi\n@include glibc-functions/ecb_crypt.texi\n\n@node Glibc rpc/key_prot.h\n@section Glibc @code{<rpc/key_prot.h>}\n\n@menu\n* xdr_cryptkeyarg::\n* xdr_cryptkeyarg2::\n* xdr_cryptkeyres::\n* xdr_getcredres::\n* xdr_key_netstarg::\n* xdr_key_netstres::\n* xdr_keybuf::\n* xdr_keystatus::\n* xdr_netnamestr::\n* xdr_unixcred::\n@end menu\n\n@include glibc-functions/xdr_cryptkeyarg.texi\n@include glibc-functions/xdr_cryptkeyarg2.texi\n@include glibc-functions/xdr_cryptkeyres.texi\n@include glibc-functions/xdr_getcredres.texi\n@include glibc-functions/xdr_key_netstarg.texi\n@include glibc-functions/xdr_key_netstres.texi\n@include glibc-functions/xdr_keybuf.texi\n@include glibc-functions/xdr_keystatus.texi\n@include glibc-functions/xdr_netnamestr.texi\n@include glibc-functions/xdr_unixcred.texi\n\n@node Glibc rpc/netdb.h\n@section Glibc @code{<rpc/netdb.h>}\n\n@menu\n* endrpcent::\n* getrpcbyname::\n* getrpcbyname_r::\n* getrpcbynumber::\n* getrpcbynumber_r::\n* getrpcent::\n* getrpcent_r::\n* setrpcent::\n@end menu\n\n@include glibc-functions/endrpcent.texi\n@include glibc-functions/getrpcbyname.texi\n@include glibc-functions/getrpcbyname_r.texi\n@include glibc-functions/getrpcbynumber.texi\n@include glibc-functions/getrpcbynumber_r.texi\n@include glibc-functions/getrpcent.texi\n@include glibc-functions/getrpcent_r.texi\n@include glibc-functions/setrpcent.texi\n\n@node Glibc rpc/pmap_clnt.h\n@section Glibc @code{<rpc/pmap_clnt.h>}\n\n@menu\n* clnt_broadcast::\n* pmap_getmaps::\n* pmap_getport::\n* pmap_rmtcall::\n* pmap_set::\n* pmap_unset::\n@end menu\n\n@include glibc-functions/clnt_broadcast.texi\n@include glibc-functions/pmap_getmaps.texi\n@include glibc-functions/pmap_getport.texi\n@include glibc-functions/pmap_rmtcall.texi\n@include glibc-functions/pmap_set.texi\n@include glibc-functions/pmap_unset.texi\n\n@node Glibc rpc/pmap_prot.h\n@section Glibc @code{<rpc/pmap_prot.h>}\n\n@menu\n* xdr_pmap::\n* xdr_pmaplist::\n@end menu\n\n@include glibc-functions/xdr_pmap.texi\n@include glibc-functions/xdr_pmaplist.texi\n\n@node Glibc rpc/pmap_rmt.h\n@section Glibc @code{<rpc/pmap_rmt.h>}\n\n@menu\n* xdr_rmtcall_args::\n* xdr_rmtcallres::\n@end menu\n\n@include glibc-functions/xdr_rmtcall_args.texi\n@include glibc-functions/xdr_rmtcallres.texi\n\n@node Glibc rpc/rpc_msg.h\n@section Glibc @code{<rpc/rpc_msg.h>}\n\n@menu\n* xdr_callhdr::\n* xdr_callmsg::\n* xdr_replymsg::\n@end menu\n\n@include glibc-functions/xdr_callhdr.texi\n@include glibc-functions/xdr_callmsg.texi\n@include glibc-functions/xdr_replymsg.texi\n\n@node Glibc rpc/svc.h\n@section Glibc @code{<rpc/svc.h>}\n\n@menu\n* svc_exit::\n* svc_fdset::\n* svc_getreq::\n* svc_getreq_common::\n* svc_getreq_poll::\n* svc_getreqset::\n* svc_max_pollfd::\n* svc_pollfd::\n* svc_register::\n* svc_run::\n* svc_sendreply::\n* svc_unregister::\n* svcerr_auth::\n* svcerr_decode::\n* svcerr_noproc::\n* svcerr_noprog::\n* svcerr_progvers::\n* svcerr_systemerr::\n* svcerr_weakauth::\n* svcraw_create::\n* svctcp_create::\n* svcudp_bufcreate::\n* svcudp_create::\n* svcunix_create::\n* xprt_register::\n* xprt_unregister::\n@end menu\n\n@include glibc-functions/svc_exit.texi\n@include glibc-functions/svc_fdset.texi\n@include glibc-functions/svc_getreq.texi\n@include glibc-functions/svc_getreq_common.texi\n@include glibc-functions/svc_getreq_poll.texi\n@include glibc-functions/svc_getreqset.texi\n@include glibc-functions/svc_max_pollfd.texi\n@include glibc-functions/svc_pollfd.texi\n@include glibc-functions/svc_register.texi\n@include glibc-functions/svc_run.texi\n@include glibc-functions/svc_sendreply.texi\n@include glibc-functions/svc_unregister.texi\n@include glibc-functions/svcerr_auth.texi\n@include glibc-functions/svcerr_decode.texi\n@include glibc-functions/svcerr_noproc.texi\n@include glibc-functions/svcerr_noprog.texi\n@include glibc-functions/svcerr_progvers.texi\n@include glibc-functions/svcerr_systemerr.texi\n@include glibc-functions/svcerr_weakauth.texi\n@include glibc-functions/svcraw_create.texi\n@include glibc-functions/svctcp_create.texi\n@include glibc-functions/svcudp_bufcreate.texi\n@include glibc-functions/svcudp_create.texi\n@include glibc-functions/svcunix_create.texi\n@include glibc-functions/xprt_register.texi\n@include glibc-functions/xprt_unregister.texi\n\n@node Glibc rpc/xdr.h\n@section Glibc @code{<rpc/xdr.h>}\n\n@menu\n* xdr_array::\n* xdr_bool::\n* xdr_bytes::\n* xdr_char::\n* xdr_double::\n* xdr_enum::\n* xdr_float::\n* xdr_free::\n* xdr_hyper::\n* xdr_int::\n* xdr_int16_t::\n* xdr_int32_t::\n* xdr_int64_t::\n* xdr_int8_t::\n* xdr_long::\n* xdr_longlong_t::\n* xdr_netobj::\n* xdr_opaque::\n* xdr_pointer::\n* xdr_quad_t::\n* xdr_reference::\n* xdr_short::\n* xdr_sizeof::\n* xdr_string::\n* xdr_u_char::\n* xdr_u_hyper::\n* xdr_u_int::\n* xdr_u_long::\n* xdr_u_longlong_t::\n* xdr_u_quad_t::\n* xdr_u_short::\n* xdr_uint16_t::\n* xdr_uint32_t::\n* xdr_uint64_t::\n* xdr_uint8_t::\n* xdr_union::\n* xdr_vector::\n* xdr_void::\n* xdr_wrapstring::\n* xdrmem_create::\n* xdrrec_create::\n* xdrrec_endofrecord::\n* xdrrec_eof::\n* xdrrec_skiprecord::\n* xdrstdio_create::\n@end menu\n\n@include glibc-functions/xdr_array.texi\n@include glibc-functions/xdr_bool.texi\n@include glibc-functions/xdr_bytes.texi\n@include glibc-functions/xdr_char.texi\n@include glibc-functions/xdr_double.texi\n@include glibc-functions/xdr_enum.texi\n@include glibc-functions/xdr_float.texi\n@include glibc-functions/xdr_free.texi\n@include glibc-functions/xdr_hyper.texi\n@include glibc-functions/xdr_int.texi\n@include glibc-functions/xdr_int16_t.texi\n@include glibc-functions/xdr_int32_t.texi\n@include glibc-functions/xdr_int64_t.texi\n@include glibc-functions/xdr_int8_t.texi\n@include glibc-functions/xdr_long.texi\n@include glibc-functions/xdr_longlong_t.texi\n@include glibc-functions/xdr_netobj.texi\n@include glibc-functions/xdr_opaque.texi\n@include glibc-functions/xdr_pointer.texi\n@include glibc-functions/xdr_quad_t.texi\n@include glibc-functions/xdr_reference.texi\n@include glibc-functions/xdr_short.texi\n@include glibc-functions/xdr_sizeof.texi\n@include glibc-functions/xdr_string.texi\n@include glibc-functions/xdr_u_char.texi\n@include glibc-functions/xdr_u_hyper.texi\n@include glibc-functions/xdr_u_int.texi\n@include glibc-functions/xdr_u_long.texi\n@include glibc-functions/xdr_u_longlong_t.texi\n@include glibc-functions/xdr_u_quad_t.texi\n@include glibc-functions/xdr_u_short.texi\n@include glibc-functions/xdr_uint16_t.texi\n@include glibc-functions/xdr_uint32_t.texi\n@include glibc-functions/xdr_uint64_t.texi\n@include glibc-functions/xdr_uint8_t.texi\n@include glibc-functions/xdr_union.texi\n@include glibc-functions/xdr_vector.texi\n@include glibc-functions/xdr_void.texi\n@include glibc-functions/xdr_wrapstring.texi\n@include glibc-functions/xdrmem_create.texi\n@include glibc-functions/xdrrec_create.texi\n@include glibc-functions/xdrrec_endofrecord.texi\n@include glibc-functions/xdrrec_eof.texi\n@include glibc-functions/xdrrec_skiprecord.texi\n@include glibc-functions/xdrstdio_create.texi\n\n@node Glibc rpcsvc/nislib.h\n@section Glibc @code{<rpcsvc/nislib.h>}\n\n@menu\n* nis_add::\n* nis_add_entry::\n* nis_addmember::\n* nis_checkpoint::\n* nis_clone_object::\n* nis_creategroup::\n* nis_destroy_object::\n* nis_destroygroup::\n* nis_dir_cmp::\n* nis_domain_of::\n* nis_domain_of_r::\n* nis_first_entry::\n* nis_freenames::\n* nis_freeresult::\n* nis_freeservlist::\n* nis_freetags::\n* nis_getnames::\n* nis_getservlist::\n* nis_ismember::\n* nis_leaf_of::\n* nis_leaf_of_r::\n* nis_lerror::\n* nis_list::\n* nis_local_directory::\n* nis_local_group::\n* nis_local_host::\n* nis_local_principal::\n* nis_lookup::\n* nis_mkdir::\n* nis_modify::\n* nis_modify_entry::\n* nis_name_of::\n* nis_name_of_r::\n* nis_next_entry::\n* nis_perror::\n* nis_ping::\n* nis_print_directory::\n* nis_print_entry::\n* nis_print_group::\n* nis_print_group_entry::\n* nis_print_link::\n* nis_print_object::\n* nis_print_result::\n* nis_print_rights::\n* nis_print_table::\n* nis_remove::\n* nis_remove_entry::\n* nis_removemember::\n* nis_rmdir::\n* nis_servstate::\n* nis_sperrno::\n* nis_sperror::\n* nis_sperror_r::\n* nis_stats::\n* nis_verifygroup::\n@end menu\n\n@include glibc-functions/nis_add.texi\n@include glibc-functions/nis_add_entry.texi\n@include glibc-functions/nis_addmember.texi\n@include glibc-functions/nis_checkpoint.texi\n@include glibc-functions/nis_clone_object.texi\n@include glibc-functions/nis_creategroup.texi\n@include glibc-functions/nis_destroy_object.texi\n@include glibc-functions/nis_destroygroup.texi\n@include glibc-functions/nis_dir_cmp.texi\n@include glibc-functions/nis_domain_of.texi\n@include glibc-functions/nis_domain_of_r.texi\n@include glibc-functions/nis_first_entry.texi\n@include glibc-functions/nis_freenames.texi\n@include glibc-functions/nis_freeresult.texi\n@include glibc-functions/nis_freeservlist.texi\n@include glibc-functions/nis_freetags.texi\n@include glibc-functions/nis_getnames.texi\n@include glibc-functions/nis_getservlist.texi\n@include glibc-functions/nis_ismember.texi\n@include glibc-functions/nis_leaf_of.texi\n@include glibc-functions/nis_leaf_of_r.texi\n@include glibc-functions/nis_lerror.texi\n@include glibc-functions/nis_list.texi\n@include glibc-functions/nis_local_directory.texi\n@include glibc-functions/nis_local_group.texi\n@include glibc-functions/nis_local_host.texi\n@include glibc-functions/nis_local_principal.texi\n@include glibc-functions/nis_lookup.texi\n@include glibc-functions/nis_mkdir.texi\n@include glibc-functions/nis_modify.texi\n@include glibc-functions/nis_modify_entry.texi\n@include glibc-functions/nis_name_of.texi\n@include glibc-functions/nis_name_of_r.texi\n@include glibc-functions/nis_next_entry.texi\n@include glibc-functions/nis_perror.texi\n@include glibc-functions/nis_ping.texi\n@include glibc-functions/nis_print_directory.texi\n@include glibc-functions/nis_print_entry.texi\n@include glibc-functions/nis_print_group.texi\n@include glibc-functions/nis_print_group_entry.texi\n@include glibc-functions/nis_print_link.texi\n@include glibc-functions/nis_print_object.texi\n@include glibc-functions/nis_print_result.texi\n@include glibc-functions/nis_print_rights.texi\n@include glibc-functions/nis_print_table.texi\n@include glibc-functions/nis_remove.texi\n@include glibc-functions/nis_remove_entry.texi\n@include glibc-functions/nis_removemember.texi\n@include glibc-functions/nis_rmdir.texi\n@include glibc-functions/nis_servstate.texi\n@include glibc-functions/nis_sperrno.texi\n@include glibc-functions/nis_sperror.texi\n@include glibc-functions/nis_sperror_r.texi\n@include glibc-functions/nis_stats.texi\n@include glibc-functions/nis_verifygroup.texi\n\n@node Glibc rpcsvc/nis_callback.h\n@section Glibc @code{<rpcsvc/nis_callback.h>}\n\n@menu\n* xdr_cback_data::\n* xdr_obj_p::\n@end menu\n\n@include glibc-functions/xdr_cback_data.texi\n@include glibc-functions/xdr_obj_p.texi\n\n@node Glibc rpcsvc/yp.h\n@section Glibc @code{<rpcsvc/yp.h>}\n\n@menu\n* xdr_domainname::\n* xdr_keydat::\n* xdr_mapname::\n* xdr_peername::\n* xdr_valdat::\n* xdr_ypbind_binding::\n* xdr_ypbind_resp::\n* xdr_ypbind_resptype::\n* xdr_ypbind_setdom::\n* xdr_ypmap_parms::\n* xdr_ypmaplist::\n* xdr_yppush_status::\n* xdr_yppushresp_xfr::\n* xdr_ypreq_key::\n* xdr_ypreq_nokey::\n* xdr_ypreq_xfr::\n* xdr_ypresp_all::\n* xdr_ypresp_key_val::\n* xdr_ypresp_maplist::\n* xdr_ypresp_master::\n* xdr_ypresp_order::\n* xdr_ypresp_val::\n* xdr_ypresp_xfr::\n* xdr_ypstat::\n* xdr_ypxfrstat::\n@end menu\n\n@include glibc-functions/xdr_domainname.texi\n@include glibc-functions/xdr_keydat.texi\n@include glibc-functions/xdr_mapname.texi\n@include glibc-functions/xdr_peername.texi\n@include glibc-functions/xdr_valdat.texi\n@include glibc-functions/xdr_ypbind_binding.texi\n@include glibc-functions/xdr_ypbind_resp.texi\n@include glibc-functions/xdr_ypbind_resptype.texi\n@include glibc-functions/xdr_ypbind_setdom.texi\n@include glibc-functions/xdr_ypmap_parms.texi\n@include glibc-functions/xdr_ypmaplist.texi\n@include glibc-functions/xdr_yppush_status.texi\n@include glibc-functions/xdr_yppushresp_xfr.texi\n@include glibc-functions/xdr_ypreq_key.texi\n@include glibc-functions/xdr_ypreq_nokey.texi\n@include glibc-functions/xdr_ypreq_xfr.texi\n@include glibc-functions/xdr_ypresp_all.texi\n@include glibc-functions/xdr_ypresp_key_val.texi\n@include glibc-functions/xdr_ypresp_maplist.texi\n@include glibc-functions/xdr_ypresp_master.texi\n@include glibc-functions/xdr_ypresp_order.texi\n@include glibc-functions/xdr_ypresp_val.texi\n@include glibc-functions/xdr_ypresp_xfr.texi\n@include glibc-functions/xdr_ypstat.texi\n@include glibc-functions/xdr_ypxfrstat.texi\n\n@node Glibc rpcsvc/yp_prot.h\n@section Glibc @code{<rpcsvc/yp_prot.h>}\n\n@menu\n* xdr_ypall::\n@end menu\n\n@include glibc-functions/xdr_ypall.texi\n\n@node Glibc rpcsvc/ypclnt.h\n@section Glibc @code{<rpcsvc/ypclnt.h>}\n\n@menu\n* yp_all::\n* yp_bind::\n* yp_first::\n* yp_get_default_domain::\n* yp_master::\n* yp_match::\n* yp_next::\n* yp_order::\n* yp_unbind::\n* yp_update::\n* ypbinderr_string::\n* yperr_string::\n* ypprot_err::\n@end menu\n\n@include glibc-functions/yp_all.texi\n@include glibc-functions/yp_bind.texi\n@include glibc-functions/yp_first.texi\n@include glibc-functions/yp_get_default_domain.texi\n@include glibc-functions/yp_master.texi\n@include glibc-functions/yp_match.texi\n@include glibc-functions/yp_next.texi\n@include glibc-functions/yp_order.texi\n@include glibc-functions/yp_unbind.texi\n@include glibc-functions/yp_update.texi\n@include glibc-functions/ypbinderr_string.texi\n@include glibc-functions/yperr_string.texi\n@include glibc-functions/ypprot_err.texi\n\n@node Glibc rpcsvc/ypupd.h\n@section Glibc @code{<rpcsvc/ypupd.h>}\n\n@menu\n* xdr_yp_buf::\n* xdr_ypdelete_args::\n* xdr_ypupdate_args::\n@end menu\n\n@include glibc-functions/xdr_yp_buf.texi\n@include glibc-functions/xdr_ypdelete_args.texi\n@include glibc-functions/xdr_ypupdate_args.texi\n\n@node Glibc sched.h\n@section Glibc Extensions to @code{<sched.h>}\n\n@menu\n* clone::\n* sched_getaffinity::\n* sched_setaffinity::\n* setns::\n@end menu\n\n@include glibc-functions/clone.texi\n@include glibc-functions/sched_getaffinity.texi\n@include glibc-functions/sched_setaffinity.texi\n@include glibc-functions/setns.texi\n\n@node Glibc search.h\n@section Glibc Extensions to @code{<search.h>}\n\n@menu\n* hcreate_r::\n* hdestroy_r::\n* hsearch_r::\n* tdestroy::\n@end menu\n\n@include glibc-functions/hcreate_r.texi\n@include glibc-functions/hdestroy_r.texi\n@include glibc-functions/hsearch_r.texi\n@include glibc-functions/tdestroy.texi\n\n@node Glibc selinux/selinux.h\n@section Glibc Extensions to @code{<selinux/selinux.h>}\n\n@menu\n* fgetfilecon::\n* getfilecon::\n* lgetfilecon::\n@end menu\n\n@include glibc-functions/getfilecon-desc.texi\n@include glibc-functions/fgetfilecon.texi\n@include glibc-functions/getfilecon.texi\n@include glibc-functions/lgetfilecon.texi\n\n@c @node Glibc semaphore.h\n@c @section Glibc Extensions to @code{<semaphore.h>}\n\n@c @node Glibc setjmp.h\n@c @section Glibc Extensions to @code{<setjmp.h>}\n\n@node Glibc shadow.h\n@section Glibc @code{<shadow.h>}\n\n@menu\n* endspent::\n* fgetspent::\n* fgetspent_r::\n* getspent::\n* getspent_r::\n* getspnam::\n* getspnam_r::\n* lckpwdf::\n* putspent::\n* setspent::\n* sgetspent::\n* sgetspent_r::\n* ulckpwdf::\n@end menu\n\n@include glibc-functions/endspent.texi\n@include glibc-functions/fgetspent.texi\n@include glibc-functions/fgetspent_r.texi\n@include glibc-functions/getspent.texi\n@include glibc-functions/getspent_r.texi\n@include glibc-functions/getspnam.texi\n@include glibc-functions/getspnam_r.texi\n@include glibc-functions/lckpwdf.texi\n@include glibc-functions/putspent.texi\n@include glibc-functions/setspent.texi\n@include glibc-functions/sgetspent.texi\n@include glibc-functions/sgetspent_r.texi\n@include glibc-functions/ulckpwdf.texi\n\n@node Glibc signal.h\n@section Glibc Extensions to @code{<signal.h>}\n\n@menu\n* gsignal::\n* sigandset::\n* sigblock::\n* siggetmask::\n* sigisemptyset::\n* sigorset::\n* sigreturn::\n* sigsetmask::\n* sigstack::\n* sigvec::\n* ssignal::\n* sys_siglist::\n* sysv_signal::\n@end menu\n\n@include glibc-functions/gsignal.texi\n@include glibc-functions/sigandset.texi\n@include glibc-functions/sigblock.texi\n@include glibc-functions/siggetmask.texi\n@include glibc-functions/sigisemptyset.texi\n@include glibc-functions/sigorset.texi\n@include glibc-functions/sigreturn.texi\n@include glibc-functions/sigsetmask.texi\n@include glibc-functions/sigstack.texi\n@include glibc-functions/sigvec.texi\n@include glibc-functions/ssignal.texi\n@include glibc-functions/sys_siglist.texi\n@include glibc-functions/sysv_signal.texi\n\n@c @node Glibc spawn.h\n@c @section Glibc Extensions to @code{<spawn.h>}\n\n@c @node Glibc stdarg.h\n@c @section Glibc Extensions to @code{<stdarg.h>}\n\n@c @node Glibc stdbool.h\n@c @section Glibc Extensions to @code{<stdbool.h>}\n\n@c @node Glibc stddef.h\n@c @section Glibc Extensions to @code{<stddef.h>}\n\n@c @node Glibc stdint.h\n@c @section Glibc Extensions to @code{<stdint.h>}\n\n@node Glibc stdio.h\n@section Glibc Extensions to @code{<stdio.h>}\n\n@menu\n* asprintf::\n* cuserid::\n* clearerr_unlocked::\n* fcloseall::\n* feof_unlocked::\n* ferror_unlocked::\n* fflush_unlocked::\n* fgetc_unlocked::\n* fgets_unlocked::\n* fileno_unlocked::\n* fopencookie::\n* fputc_unlocked::\n* fputs_unlocked::\n* fread_unlocked::\n* fwrite_unlocked::\n* getw::\n* putw::\n* setbuffer::\n* setlinebuf::\n* sys_errlist::\n* sys_nerr::\n* tmpnam_r::\n* vasprintf::\n@end menu\n\n@include glibc-functions/asprintf.texi\n@include glibc-functions/cuserid.texi\n@include glibc-functions/clearerr_unlocked.texi\n@include glibc-functions/fcloseall.texi\n@include glibc-functions/feof_unlocked.texi\n@include glibc-functions/ferror_unlocked.texi\n@include glibc-functions/fflush_unlocked.texi\n@include glibc-functions/fgetc_unlocked.texi\n@include glibc-functions/fgets_unlocked.texi\n@include glibc-functions/fileno_unlocked.texi\n@include glibc-functions/fopencookie.texi\n@include glibc-functions/fputc_unlocked.texi\n@include glibc-functions/fputs_unlocked.texi\n@include glibc-functions/fread_unlocked.texi\n@include glibc-functions/fwrite_unlocked.texi\n@include glibc-functions/getw.texi\n@include glibc-functions/putw.texi\n@include glibc-functions/setbuffer.texi\n@include glibc-functions/setlinebuf.texi\n@include glibc-functions/sys_errlist.texi\n@include glibc-functions/sys_nerr.texi\n@include glibc-functions/tmpnam_r.texi\n@include glibc-functions/vasprintf.texi\n\n@node Glibc stdlib.h\n@section Glibc Extensions to @code{<stdlib.h>}\n\n@menu\n* canonicalize_file_name::\n* cfree::\n* clearenv::\n* drand48_r::\n* ecvt_r::\n* erand48_r::\n* fcvt_r::\n* getloadavg::\n* getpt::\n* initstate_r::\n* jrand48_r::\n* lcong48_r::\n* lrand48_r::\n* mkostemp::\n* mkostemps::\n* mrand48_r::\n* mkstemps::\n* nrand48_r::\n* on_exit::\n* ptsname_r::\n* qecvt::\n* qecvt_r::\n* qfcvt::\n* qfcvt_r::\n* qgcvt::\n* qsort_r::\n* random_r::\n* rpmatch::\n* secure_getenv::\n* seed48_r::\n* setstate_r::\n* srand48_r::\n* srandom_r::\n* strtod_l::\n* strtof_l::\n* strtol_l::\n* strtold_l::\n* strtoll_l::\n* strtoq::\n* strtoul_l::\n* strtoull_l::\n* strtouq::\n* valloc::\n@end menu\n\n@include glibc-functions/canonicalize_file_name.texi\n@include glibc-functions/cfree.texi\n@include glibc-functions/clearenv.texi\n@include glibc-functions/drand48_r.texi\n@include glibc-functions/ecvt_r.texi\n@include glibc-functions/erand48_r.texi\n@include glibc-functions/fcvt_r.texi\n@include glibc-functions/getloadavg.texi\n@include glibc-functions/getpt.texi\n@include glibc-functions/initstate_r.texi\n@include glibc-functions/jrand48_r.texi\n@include glibc-functions/lcong48_r.texi\n@include glibc-functions/lrand48_r.texi\n@include glibc-functions/mkostemp.texi\n@include glibc-functions/mkostemps.texi\n@include glibc-functions/mrand48_r.texi\n@include glibc-functions/mkstemps.texi\n@include glibc-functions/nrand48_r.texi\n@include glibc-functions/on_exit.texi\n@include glibc-functions/ptsname_r.texi\n@include glibc-functions/qecvt.texi\n@include glibc-functions/qecvt_r.texi\n@include glibc-functions/qfcvt.texi\n@include glibc-functions/qfcvt_r.texi\n@include glibc-functions/qgcvt.texi\n@include glibc-functions/qsort_r.texi\n@include glibc-functions/random_r.texi\n@include glibc-functions/rpmatch.texi\n@include glibc-functions/secure_getenv.texi\n@include glibc-functions/seed48_r.texi\n@include glibc-functions/setstate_r.texi\n@include glibc-functions/srand48_r.texi\n@include glibc-functions/srandom_r.texi\n@include glibc-functions/strtod_l.texi\n@include glibc-functions/strtof_l.texi\n@include glibc-functions/strtol_l.texi\n@include glibc-functions/strtold_l.texi\n@include glibc-functions/strtoll_l.texi\n@include glibc-functions/strtoq.texi\n@include glibc-functions/strtoul_l.texi\n@include glibc-functions/strtoull_l.texi\n@include glibc-functions/strtouq.texi\n@include glibc-functions/valloc.texi\n\n@node Glibc string.h\n@section Glibc Extensions to @code{<string.h>}\n\n@menu\n* explicit_bzero::\n* ffsl::\n* ffsll::\n* memfrob::\n* memmem::\n* mempcpy::\n* memrchr::\n* rawmemchr::\n* strcasestr::\n* strchrnul::\n* strfry::\n* strsep::\n* strverscmp::\n@end menu\n\n@include glibc-functions/explicit_bzero.texi\n@include glibc-functions/ffsl.texi\n@include glibc-functions/ffsll.texi\n@include glibc-functions/memfrob.texi\n@include glibc-functions/memmem.texi\n@include glibc-functions/mempcpy.texi\n@include glibc-functions/memrchr.texi\n@include glibc-functions/rawmemchr.texi\n@include glibc-functions/strcasestr.texi\n@include glibc-functions/strchrnul.texi\n@include glibc-functions/strfry.texi\n@include glibc-functions/strsep.texi\n@include glibc-functions/strverscmp.texi\n\n@c @node Glibc strings.h\n@c @section Glibc Extensions to @code{<strings.h>}\n\n@c @node Glibc stropts.h\n@c @section Glibc Extensions to @code{<stropts.h>}\n\n@node Glibc sys/capability.h\n@section Glibc @code{<sys/capability.h>}\n\n@menu\n* capget::\n* capset::\n@end menu\n\n@include glibc-functions/capget.texi\n@include glibc-functions/capset.texi\n\n@node Glibc sys/epoll.h\n@section Glibc @code{<sys/epoll.h>}\n\n@menu\n* epoll_create::\n* epoll_ctl::\n* epoll_wait::\n@end menu\n\n@include glibc-functions/epoll_create.texi\n@include glibc-functions/epoll_ctl.texi\n@include glibc-functions/epoll_wait.texi\n\n@node Glibc sys/fanotify.h\n@section Glibc @code{<sys/fanotify.h>}\n\n@menu\n* fanotify_init::\n* fanotify_mark::\n@end menu\n\n@include glibc-functions/fanotify_init.texi\n@include glibc-functions/fanotify_mark.texi\n\n@node Glibc sys/file.h\n@section Glibc @code{<sys/file.h>}\n\n@menu\n* flock::\n@end menu\n\n@include glibc-functions/flock.texi\n\n@node Glibc sys/fsuid.h\n@section Glibc @code{<sys/fsuid.h>}\n\n@menu\n* setfsgid::\n* setfsuid::\n@end menu\n\n@include glibc-functions/setfsgid.texi\n@include glibc-functions/setfsuid.texi\n\n@node Glibc sys/gmon.h\n@section Glibc @code{<sys/gmon.h>}\n\n@menu\n* monstartup::\n@end menu\n\n@include glibc-functions/monstartup.texi\n\n@node Glibc sys/io.h and sys/perm.h\n@section Glibc @code{<sys/io.h>}, @code{<sys/perm.h>}\n\n@menu\n* ioperm::\n* iopl::\n@end menu\n\n@include glibc-functions/ioperm.texi\n@include glibc-functions/iopl.texi\n\n@c @node Glibc sys/ioctl.h\n@c @section Glibc @code{<sys/ioctl.h>}\n\n@c @node Glibc sys/ipc.h\n@c @section Glibc Extensions to @code{<sys/ipc.h>}\n\n@node Glibc sys/kdaemon.h\n@section Glibc @code{<sys/kdaemon.h>}\n\n@menu\n* bdflush::\n@end menu\n\n@include glibc-functions/bdflush.texi\n\n@node Glibc sys/klog.h\n@section Glibc @code{<sys/klog.h>}\n\n@menu\n* klogctl::\n@end menu\n\n@include glibc-functions/klogctl.texi\n\n@node Glibc sys/mman.h\n@section Glibc Extensions to @code{<sys/mman.h>}\n\n@menu\n* madvise::\n* mincore::\n* mremap::\n* remap_file_pages::\n@end menu\n\n@include glibc-functions/madvise.texi\n@include glibc-functions/mincore.texi\n@include glibc-functions/mremap.texi\n@include glibc-functions/remap_file_pages.texi\n\n@node Glibc sys/mount.h\n@section Glibc @code{<sys/mount.h>}\n\n@menu\n* mount::\n* umount::\n* umount2::\n@end menu\n\n@include glibc-functions/mount.texi\n@include glibc-functions/umount.texi\n@include glibc-functions/umount2.texi\n\n@c @node Glibc sys/msg.h\n@c @section Glibc Extensions to @code{<sys/msg.h>}\n\n@node Glibc sys/personality.h\n@section Glibc @code{<sys/personality.h>}\n\n@menu\n* personality::\n@end menu\n\n@include glibc-functions/personality.texi\n\n@node Glibc sys/prctl.h\n@section Glibc @code{<sys/prctl.h>}\n\n@menu\n* prctl::\n@end menu\n\n@include glibc-functions/prctl.texi\n\n@node Glibc sys/profil.h\n@section Glibc @code{<sys/profil.h>}\n\n@menu\n* sprofil::\n@end menu\n\n@include glibc-functions/sprofil.texi\n\n@node Glibc sys/ptrace.h\n@section Glibc @code{<sys/ptrace.h>}\n\n@menu\n* ptrace::\n@end menu\n\n@include glibc-functions/ptrace.texi\n\n@node Glibc sys/quota.h\n@section Glibc @code{<sys/quota.h>}\n\n@menu\n* quotactl::\n@end menu\n\n@include glibc-functions/quotactl.texi\n\n@node Glibc sys/reboot.h\n@section Glibc @code{<sys/reboot.h>}\n\n@menu\n* reboot::\n@end menu\n\n@include glibc-functions/reboot.texi\n\n@node Glibc sys/resource.h\n@section Glibc Extensions to @code{<sys/resource.h>}\n\n@menu\n* prlimit::\n@end menu\n\n@include glibc-functions/prlimit.texi\n\n@c @node Glibc sys/select.h\n@c @section Glibc Extensions to @code{<sys/select.h>}\n\n@node Glibc sys/sem.h\n@section Glibc Extensions to @code{<sys/sem.h>}\n\n@menu\n* semtimedop::\n@end menu\n\n@include glibc-functions/semtimedop.texi\n\n@node Glibc sys/sendfile.h\n@section Glibc @code{<sys/sendfile.h>}\n\n@menu\n* sendfile::\n@end menu\n\n@include glibc-functions/sendfile.texi\n\n@c @node Glibc sys/shm.h\n@c @section Glibc Extensions to @code{<sys/shm.h>}\n\n@node Glibc sys/socket.h\n@section Glibc Extensions to @code{<sys/socket.h>}\n\n@menu\n* accept4::\n* isfdtype::\n* recvmmsg::\n* sendmmsg::\n@end menu\n\n@include glibc-functions/accept4.texi\n@include glibc-functions/isfdtype.texi\n@include glibc-functions/recvmmsg.texi\n@include glibc-functions/sendmmsg.texi\n\n@node Glibc sys/stat.h\n@section Glibc Extensions to @code{<sys/stat.h>}\n\n@menu\n* lchmod::\n@end menu\n\n@include glibc-functions/lchmod.texi\n\n@node Glibc sys/statfs.h\n@section Glibc @code{<sys/statfs.h>}\n\n@menu\n* fstatfs::\n* statfs::\n@end menu\n\n@include glibc-functions/fstatfs.texi\n@include glibc-functions/statfs.texi\n\n@c @node Glibc sys/statvfs.h\n@c @section Glibc Extensions to @code{<sys/statvfs.h>}\n\n@node Glibc sys/swap.h\n@section Glibc @code{<sys/swap.h>}\n\n@menu\n* swapoff::\n* swapon::\n@end menu\n\n@include glibc-functions/swapoff.texi\n@include glibc-functions/swapon.texi\n\n@node Glibc sys/sysctl.h\n@section Glibc @code{<sys/sysctl.h>}\n\n@menu\n* sysctl::\n@end menu\n\n@include glibc-functions/sysctl.texi\n\n@node Glibc sys/sysinfo.h\n@section Glibc @code{<sys/sysinfo.h>}\n\n@menu\n* get_avphys_pages::\n* get_nprocs::\n* get_nprocs_conf::\n* get_phys_pages::\n* sysinfo::\n@end menu\n\n@include glibc-functions/get_avphys_pages.texi\n@include glibc-functions/get_nprocs.texi\n@include glibc-functions/get_nprocs_conf.texi\n@include glibc-functions/get_phys_pages.texi\n@include glibc-functions/sysinfo.texi\n\n@node Glibc sys/syslog.h\n@section Glibc @code{<sys/syslog.h>}\n\n@menu\n* vsyslog::\n@end menu\n\n@include glibc-functions/vsyslog.texi\n\n@node Glibc sys/sysmacros.h\n@section Glibc @code{<sys/sysmacros.h>}\n\n@menu\n* gnu_dev_major::\n* gnu_dev_makedev::\n* gnu_dev_minor::\n@end menu\n\n@include glibc-functions/gnu_dev_major.texi\n@include glibc-functions/gnu_dev_makedev.texi\n@include glibc-functions/gnu_dev_minor.texi\n\n@node Glibc sys/time.h\n@section Glibc Extensions to @code{<sys/time.h>}\n\n@menu\n* adjtime::\n* futimes::\n* futimesat::\n* lutimes::\n* settimeofday::\n@end menu\n\n@include glibc-functions/adjtime.texi\n@include glibc-functions/futimes.texi\n@include glibc-functions/futimesat.texi\n@include glibc-functions/lutimes.texi\n@include glibc-functions/settimeofday.texi\n\n@c @node Glibc sys/timeb.h\n@c @section Glibc Extensions to @code{<sys/timeb.h>}\n\n@c @node Glibc sys/times.h\n@c @section Glibc Extensions to @code{<sys/times.h>}\n\n@node Glibc sys/timex.h\n@section Glibc @code{<sys/timex.h>}\n\n@menu\n* adjtimex::\n* ntp_adjtime::\n* ntp_gettime::\n* ntp_gettimex::\n@end menu\n\n@include glibc-functions/adjtimex.texi\n@include glibc-functions/ntp_adjtime.texi\n@include glibc-functions/ntp_gettime.texi\n@include glibc-functions/ntp_gettimex.texi\n\n@c @node Glibc sys/types.h\n@c @section Glibc Extensions to @code{<sys/types.h>}\n\n@node Glibc sys/uio.h\n@section Glibc Extensions to @code{<sys/uio.h>}\n\n@menu\n* preadv::\n* process_vm_readv::\n* process_vm_writev::\n* pwritev::\n@end menu\n\n@include glibc-functions/preadv.texi\n@include glibc-functions/process_vm_readv.texi\n@include glibc-functions/process_vm_writev.texi\n@include glibc-functions/pwritev.texi\n\n@c @node Glibc sys/un.h\n@c @section Glibc Extensions to @code{<sys/un.h>}\n\n@node Glibc sys/ustat.h\n@section Glibc @code{<sys/ustat.h>}\n\n@menu\n* ustat::\n@end menu\n\n@include glibc-functions/ustat.texi\n\n@c @node Glibc sys/utsname.h\n@c @section Glibc Extensions to @code{<sys/utsname.h>}\n\n@node Glibc sys/vlimit.h\n@section Glibc @code{<sys/vlimit.h>}\n\n@menu\n* vlimit::\n@end menu\n\n@include glibc-functions/vlimit.texi\n\n@node Glibc sys/vm86.h\n@section Glibc @code{<sys/vm86.h>}\n\n@menu\n* vm86::\n@end menu\n\n@include glibc-functions/vm86.texi\n\n@node Glibc sys/vtimes.h\n@section Glibc @code{<sys/vtimes.h>}\n\n@menu\n* vtimes::\n@end menu\n\n@include glibc-functions/vtimes.texi\n\n@node Glibc sys/wait.h\n@section Glibc Extensions to @code{<sys/wait.h>}\n\n@menu\n* wait3::\n* wait4::\n@end menu\n\n@include glibc-functions/wait3.texi\n@include glibc-functions/wait4.texi\n\n@node Glibc sys/xattr.h\n@section Glibc @code{<sys/xattr.h>}\n\n@menu\n* fgetxattr::\n* flistxattr::\n* fremovexattr::\n* fsetxattr::\n* getxattr::\n* lgetxattr::\n* listxattr::\n* llistxattr::\n* lremovexattr::\n* lsetxattr::\n* removexattr::\n* setxattr::\n@end menu\n\n@include glibc-functions/fgetxattr.texi\n@include glibc-functions/flistxattr.texi\n@include glibc-functions/fremovexattr.texi\n@include glibc-functions/fsetxattr.texi\n@include glibc-functions/getxattr.texi\n@include glibc-functions/lgetxattr.texi\n@include glibc-functions/listxattr.texi\n@include glibc-functions/llistxattr.texi\n@include glibc-functions/lremovexattr.texi\n@include glibc-functions/lsetxattr.texi\n@include glibc-functions/removexattr.texi\n@include glibc-functions/setxattr.texi\n\n@c @node Glibc sysexits.h\n@c @section Glibc @code{<sysexits.h>}\n\n@c @node Glibc syslog.h\n@c @section Glibc Extensions to @code{<syslog.h>}\n\n@c @node Glibc tar.h\n@c @section Glibc Extensions to @code{<tar.h>}\n\n@node Glibc termios.h\n@section Glibc Extensions to @code{<termios.h>}\n\n@menu\n* cfmakeraw::\n* cfsetspeed::\n@end menu\n\n@include glibc-functions/cfmakeraw.texi\n@include glibc-functions/cfsetspeed.texi\n\n@c @node Glibc tgmath.h\n@c @section Glibc Extensions to @code{<tgmath.h>}\n\n@node Glibc time.h\n@section Glibc Extensions to @code{<time.h>}\n\n@menu\n* clock_adjtime::\n* dysize::\n* getdate_r::\n* stime::\n* strptime_l::\n* timegm::\n* timelocal::\n* timespec_get::\n@end menu\n\n@include glibc-functions/clock_adjtime.texi\n@include glibc-functions/dysize.texi\n@include glibc-functions/getdate_r.texi\n@include glibc-functions/stime.texi\n@include glibc-functions/strptime_l.texi\n@include glibc-functions/timegm.texi\n@include glibc-functions/timelocal.texi\n@include glibc-functions/timespec_get.texi\n\n@c @node Glibc trace.h\n@c @section Glibc Extensions to @code{<trace.h>}\n\n@node Glibc ttyent.h\n@section Glibc @code{<ttyent.h>}\n\n@menu\n* endttyent::\n* getttyent::\n* getttynam::\n* setttyent::\n@end menu\n\n@include glibc-functions/endttyent.texi\n@include glibc-functions/getttyent.texi\n@include glibc-functions/getttynam.texi\n@include glibc-functions/setttyent.texi\n\n@c @node Glibc uchar.h\n@c @section Glibc Extensions to @code{<uchar.h>}\n\n@c @node Glibc ucontext.h\n@c @section Glibc Extensions to @code{<ucontext.h>}\n\n@c @node Glibc ulimit.h\n@c @section Glibc Extensions to @code{<ulimit.h>}\n\n@node Glibc unistd.h\n@section Glibc Extensions to @code{<unistd.h>}\n\n@menu\n* acct::\n* brk::\n* chroot::\n* daemon::\n* dup3::\n* endusershell::\n* euidaccess::\n* execvpe::\n* get_current_dir_name::\n* getdomainname::\n* getdtablesize::\n* getpagesize::\n* getpass::\n* getresgid::\n* getresuid::\n* getusershell::\n* group_member::\n* pipe2::\n* profil::\n* revoke::\n* sbrk::\n* setlogin::\n* setdomainname::\n* sethostid::\n* sethostname::\n* setresgid::\n* setresuid::\n* setusershell::\n* syncfs::\n* syscall::\n* ttyslot::\n* vhangup::\n@end menu\n\n@include glibc-functions/acct.texi\n@include glibc-functions/brk.texi\n@include glibc-functions/chroot.texi\n@include glibc-functions/daemon.texi\n@include glibc-functions/dup3.texi\n@include glibc-functions/endusershell.texi\n@include glibc-functions/euidaccess.texi\n@include glibc-functions/execvpe.texi\n@include glibc-functions/get_current_dir_name.texi\n@include glibc-functions/getdomainname.texi\n@include glibc-functions/getdtablesize.texi\n@include glibc-functions/getpagesize.texi\n@include glibc-functions/getpass.texi\n@include glibc-functions/getresgid.texi\n@include glibc-functions/getresuid.texi\n@include glibc-functions/getusershell.texi\n@include glibc-functions/group_member.texi\n@include glibc-functions/pipe2.texi\n@include glibc-functions/profil.texi\n@include glibc-functions/revoke.texi\n@include glibc-functions/sbrk.texi\n@include glibc-functions/setlogin.texi\n@include glibc-functions/setdomainname.texi\n@include glibc-functions/sethostid.texi\n@include glibc-functions/sethostname.texi\n@include glibc-functions/setresgid.texi\n@include glibc-functions/setresuid.texi\n@include glibc-functions/setusershell.texi\n@include glibc-functions/syncfs.texi\n@include glibc-functions/syscall.texi\n@include glibc-functions/ttyslot.texi\n@include glibc-functions/vhangup.texi\n\n@c @node Glibc utime.h\n@c @section Glibc Extensions to @code{<utime.h>}\n\n@node Glibc utmp.h\n@section Glibc @code{<utmp.h>}\n\n@menu\n* endutent::\n* getutent::\n* getutent_r::\n* getutid::\n* getutid_r::\n* getutline::\n* getutline_r::\n* pututline::\n* setutent::\n* updwtmp::\n* utmpname::\n* login::\n* login_tty::\n@end menu\n\n@include glibc-functions/endutent.texi\n@include glibc-functions/getutent.texi\n@include glibc-functions/getutent_r.texi\n@include glibc-functions/getutid.texi\n@include glibc-functions/getutid_r.texi\n@include glibc-functions/getutline.texi\n@include glibc-functions/getutline_r.texi\n@include glibc-functions/pututline.texi\n@include glibc-functions/setutent.texi\n@include glibc-functions/updwtmp.texi\n@include glibc-functions/utmpname.texi\n@include glibc-functions/login.texi\n@include glibc-functions/login_tty.texi\n\n@node Glibc utmpx.h\n@section Glibc Extensions to @code{<utmpx.h>}\n\n@menu\n* getutmp::\n* getutmpx::\n* updwtmpx::\n* utmpxname::\n@end menu\n\n@include glibc-functions/getutmp.texi\n@include glibc-functions/getutmpx.texi\n@include glibc-functions/updwtmpx.texi\n@include glibc-functions/utmpxname.texi\n\n@node Glibc wchar.h\n@section Glibc Extensions to @code{<wchar.h>}\n\n@menu\n* fgetwc_unlocked::\n* fgetws_unlocked::\n* fputwc_unlocked::\n* fputws_unlocked::\n* getwc_unlocked::\n* getwchar_unlocked::\n* putwc_unlocked::\n* putwchar_unlocked::\n* wcschrnul::\n* wcsftime_l::\n* wcstod_l::\n* wcstof_l::\n* wcstol_l::\n* wcstold_l::\n* wcstoll_l::\n* wcstoq::\n* wcstoul_l::\n* wcstoull_l::\n* wcstouq::\n* wmempcpy::\n@end menu\n\n@include glibc-functions/fgetwc_unlocked.texi\n@include glibc-functions/fgetws_unlocked.texi\n@include glibc-functions/fputwc_unlocked.texi\n@include glibc-functions/fputws_unlocked.texi\n@include glibc-functions/getwc_unlocked.texi\n@include glibc-functions/getwchar_unlocked.texi\n@include glibc-functions/putwc_unlocked.texi\n@include glibc-functions/putwchar_unlocked.texi\n@include glibc-functions/wcschrnul.texi\n@include glibc-functions/wcsftime_l.texi\n@include glibc-functions/wcstod_l.texi\n@include glibc-functions/wcstof_l.texi\n@include glibc-functions/wcstol_l.texi\n@include glibc-functions/wcstold_l.texi\n@include glibc-functions/wcstoll_l.texi\n@include glibc-functions/wcstoq.texi\n@include glibc-functions/wcstoul_l.texi\n@include glibc-functions/wcstoull_l.texi\n@include glibc-functions/wcstouq.texi\n@include glibc-functions/wmempcpy.texi\n\n@c @node Glibc wctype.h\n@c @section Glibc Extensions to @code{<wctype.h>}\n\n@c @node Glibc wordexp.h\n@c @section Glibc Extensions to @code{<wordexp.h>}\n\n\n@node Native Windows Support\n@chapter Native Windows Support\n\nThere are three ways to create binaries that run on Microsoft Windows:\n@itemize\n@item\nNative binaries, built using the MinGW tool chain.\n@item\nNative binaries, built using the MSVC (MS Visual C/C++) tool chain.\n@item\nBinaries for the Cygwin environment.\n@end itemize\n\nThis chapter deals with the MinGW and MSVC platforms, commonly called\n``native Windows'' platforms.  Cygwin, on the other hand, is close enough\nto POSIX that it can be treated like any other Unix-like platform.\n\n@menu\n* Libtool and Windows::\n* Large File Support::\n* Inode numbers on Windows::\n* Precise file timestamps on Windows::\n* Avoiding the year 2038 problem::\n* Windows sockets::\n* Native Windows Support without MSVC Support::\n@end menu\n\n@include windows-libtool.texi\n\n@include largefile.texi\n\n@include windows-stat-inodes.texi\n\n@include windows-stat-timespec.texi\n\n@include year2038.texi\n\n@include windows-sockets.texi\n\n@include windows-without-msvc.texi\n\n\n@node Particular Modules\n@chapter Particular Modules\n\n@menu\n* alloca::\n* alloca-opt::\n* Safe Allocation Macros::\n* Compile-time Assertions::\n* Integer Properties::\n* extern inline::\n* Closed standard fds::\n* Container data types::\n* String Functions in C Locale::\n* Quoting::\n* progname and getprogname::\n* gcd::\n* Profiling of program phases::\n* Library version handling::\n* Supporting Relocation::\n* func::\n* stat-size::\n@end menu\n\n@node alloca\n@section alloca\n@findex alloca\n@include alloca.texi\n\n@node alloca-opt\n@section alloca-opt\n@findex alloca\n@include alloca-opt.texi\n\n@include safe-alloc.texi\n\n@include verify.texi\n\n@include intprops.texi\n\n@include extern-inline.texi\n\n@include xstdopen.texi\n\n@include containers.texi\n\n@include c-locale.texi\n\n@include quote.texi\n\n@include progname.texi\n\n@include gcd.texi\n\n@include timevar.texi\n\n@include check-version.texi\n\n@include relocatable-maint.texi\n\n@include func.texi\n\n@include stat-size.texi\n\n\n@node Regular expressions\n@chapter Regular expressions\n\n@menu\n* Overview::\n* Regular Expression Syntax::\n* Common Operators::\n* GNU Operators::\n* GNU Emacs Operators::\n* What Gets Matched?::\n* Programming with Regex::\n* Regular expression syntaxes::\n@end menu\n\n@lowersections\n@include regex.texi\n@raisesections\n\n@node Regular expression syntaxes\n@section Regular expression syntaxes\n\nGnulib supports many different types of regular expressions; although\nthe underlying features are the same or identical, the syntax used\nvaries.  The descriptions given here for the different types are\ngenerated automatically.\n\n@include regexprops-generic.texi\n\n\n@node Build Infrastructure Modules\n@chapter Build Infrastructure Modules\n\nGnulib has a couple of modules that don't provide code, but rather\nextend the GNU Build System.  That is, they are convenience facilities\nfor use with GNU Automake (in particular).\n\n@menu\n* Searching for Libraries::\n* Exported Symbols of Shared Libraries::\n* LD Version Scripts::\n* Visual Studio Compatibility::\n* configmake::\n* warnings::\n* manywarnings::\n@end menu\n\n@include havelib.texi\n\n@include lib-symbol-visibility.texi\n\n@include ld-version-script.texi\n\n@include ld-output-def.texi\n\n@include configmake.texi\n\n@include warnings.texi\n\n@include manywarnings.texi\n\n\n@node GNU Free Documentation License\n@appendix GNU Free Documentation License\n\n@include fdl-1.3.texi\n\n\n@node Index\n@unnumbered Index\n\n@printindex cp\n\n@bye\n\n@c Local Variables:\n@c indent-tabs-mode: nil\n@c whitespace-check-buffer-indent: nil\n@c End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/gnulib/doc/posix-functions/google-ranking.txt": "free                                   2420000\nwrite                                  1570000\ntime                                    768000\nstrlen                                  702000\nindex                                   697000\nprintf                                  690000\nfprintf                                 641000\nerrno                                   616000\nstrcmp                                  604000\nmalloc                                  574000\nmemset                                  556000\nsprintf                                 550000\nread                                    547000\nremove                                  527000\nstrcpy                                  510000\nexit                                    491000\nsystem                                  459000\nmemcpy                                  455000\nwait                                    388000\nclose                                   334000\nfclose                                  328000\nassert                                  327000\natoi                                    316000\nfopen                                   315000\nselect                                  312000\nstrncpy                                 309000\nsignal                                  306000\nstrncmp                                 304000\ntimes                                   300000\nstrchr                                  294000\nlog                                     259000\naccess                                  255000\nsocket                                  244000\nopen                                    227000\nstat                                    220000\nfgets                                   212000\nlink                                    206000\nfflush                                  202000\nstrcat                                  201000\nconnect                                 198000\nfcntl                                   195000\nsnprintf                                185000\nsend                                    182000\nrandom                                  172000\nstrdup                                  171000\naccept                                  169000\nabort                                   159000\nmemcmp                                  156000\nstrerror                                154000\nsscanf                                  153000\nstdin                                   149000\nstrcasecmp                              146000\nexp                                     145000\nrealloc                                 144000\nva_start                                141000\ngets                                    139000\nioctl                                   136000\nstrstr                                  133000\nisspace                                 133000\ngetenv                                  131000\nstrrchr                                 129000\nisdigit                                 125000\nva_end                                  122000\nclock                                   120000\nsleep                                   119000\ngetopt                                  119000\nperror                                  111000\nunlink                                  110000\npipe                                    110000\nkill                                    110000\ncalloc                                  108000\nfputs                                   107000\ngetpid                                   97500\nmemmove                                  96000\nbzero                                    92400\nfwrite                                   90600\nsync                                     89900\nsqrt                                     88800\nround                                    87800\noptarg                                   85900\nstrtol                                   83200\npoll                                     82900\nhtons                                    82500\nsyslog                                   82300\nnice                                     81800\nstrncasecmp                              81500\nfabs                                     76600\nmmap                                     76400\ntoupper                                  75300\nabs                                      73500\nntohs                                    73100\nqsort                                    72600\nfork                                     72500\nputs                                     70100\ntolower                                  69400\nfseek                                    67500\nbcopy                                    66400\ngettimeofday                             66300\nshutdown                                 65900\nfread                                    65900\nrename                                   64900\nstrtok                                   60600\nfileno                                   60400\ntruncate                                 60100\ngetuid                                   60100\nFD_ZERO                                  59900\nfputc                                    58600\nhtonl                                    58300\nFD_SET                                   56900\nfeof                                     55300\nntohl                                    53200\nfstat                                    52300\natof                                     52200\nfloor                                    51800\nchdir                                    51500\ngethostbyname                            51200\nisalpha                                  50400\nva_arg                                   49200\nlocaltime                                49000\nputchar                                  48900\nremainder                                48800\nsin                                      48700\nalarm                                    48600\nrecv                                     48100\ninet_ntoa                                47500\ngetc                                     46900\nferror                                   46900\nwaitpid                                  46600\nctime                                    46400\nputc                                     46200\nusleep                                   45800\nsetjmp                                   45700\nmkdir                                    45500\nfscanf                                   43900\ncos                                      43700\nlseek                                    43600\nFD_ISSET                                 43100\nclosedir                                 42900\nftell                                    42400\nreaddir                                  42100\nbind                                     41800\nvfprintf                                 41500\ndup                                      41400\ndup2                                     41300\ny1                                       41200\nisprint                                  41200\nstrtoul                                  40900\nsetsockopt                               40900\nisalnum                                  39800\nvsprintf                                 39300\nopendir                                  39300\ngethostname                              39000\nstrftime                                 38800\nrand                                     38200\natexit                                   37700\nvsnprintf                                36400\nraise                                    36000\nisupper                                  35900\nstrncat                                  35600\ncrypt                                    35400\nfgetc                                    35100\nbasename                                 34800\nfdopen                                   34700\nsetlocale                                34500\numask                                    34400\nlisten                                   33900\nsymlink                                  32900\nchmod                                    32800\ngetcwd                                   32200\npow                                      31800\npthread_mutex_unlock                     31700\ngetpwuid                                 31600\ngeteuid                                  31300\nsetuid                                   30100\nlstat                                    29600\ninet_addr                                29500\npthread_mutex_lock                       29300\npopen                                    29100\ndirname                                  29100\nsrand                                    29000\nisatty                                   29000\nceil                                     28900\natol                                     28600\ngetpwnam                                 28300\nenviron                                  28300\npthread_create                           27600\npclose                                   27200\nislower                                  27200\nlongjmp                                  26500\n_exit                                    26100\ntimezone                                 25900\ndiv                                      25800\nsendto                                   24900\ngetsockname                              24600\ngmtime                                   24300\nreadlink                                 24200\nsigemptyset                              23100\nrecvfrom                                 23000\nsigaction                                22400\nputenv                                   22100\nstrtod                                   21900\nmunmap                                   21800\nstrpbrk                                  21700\nutime                                    21500\nuname                                    21500\nchown                                    21400\nscanf                                    21300\nmktime                                   20900\nrmdir                                    19800\nungetc                                   19600\nsetenv                                   19400\nftruncate                                19400\natan2                                    19300\nglob                                     18900\nsetgid                                   18600\nsetsid                                   18500\ngethostbyaddr                            18500\ngetgid                                   18300\nexecvp                                   18300\nmemchr                                   17800\nopenlog                                  17700\nsysconf                                  17500\nlog10                                    17400\nsigaddset                                17000\nstrspn                                   16800\nisxdigit                                 16800\ngetpeername                              16300\npthread_mutex_init                       16200\ntcgetattr                                16100\nj1                                       15600\ngetchar                                  15400\ndlopen                                   15300\nsetvbuf                                  15000\ncreat                                    15000\nsrandom                                  14800\nfreopen                                  14600\nexecl                                    14300\ny0                                       13900\nexecv                                    13800\nregcomp                                  13600\nsetbuf                                   13400\nregexec                                  13300\npthread_join                             12800\nmktemp                                   12800\nlabs                                     12800\nvprintf                                  12700\nvfork                                    12600\ngetgrnam                                 12600\ntcsetattr                                12500\nsigprocmask                              12400\ntrunc                                    12300\ntmpfile                                  12000\ndlsym                                    11900\natan                                     11800\nmkstemp                                  11600\nh_errno                                  11300\nFD_CLR                                   11300\nacos                                     11100\nseteuid                                  10800\ninet_ntop                                10800\ngetegid                                  10800\niscntrl                                  10700\ngetaddrinfo                              10700\nfchmod                                   10700\nrindex                                   10600\npthread_self                             10600\nwritev                                   10200\npthread_exit                             10100\ngetppid                                  10100\ntan                                      10000\nftime                                    10000\nclearerr                                 10000\nasctime                                  10000\nsetrlimit                                 9000\npthread_mutex_destroy                     9000\npthread_cond_wait                         9000\nisgraph                                   9000\ngetwd                                     9000\ngetrlimit                                 9000\ngetlogin                                  9000\nexeclp                                    9000\ndlerror                                   9000\nctan                                      9000\nbsearch                                   9000\nttyname                                   8000\ntmpnam                                    8000\nstrcspn                                   8000\nshmget                                    8000\nsetitimer                                 8000\nregfree                                   8000\nnanosleep                                 8000\nispunct                                   8000\ninet_pton                                 8000\nfmod                                      8000\ndlclose                                   8000\nasin                                      8000\nunsetenv                                  7000\nstrtok_r                                  7000\nshmat                                     7000\nrint                                      7000\nregerror                                  7000\npthread_cond_signal                       7000\npthread_cond_init                         7000\nlocaltime_r                               7000\ngetgrgid                                  7000\nfreeaddrinfo                              7000\nfnmatch                                   7000\nfchown                                    7000\ndifftime                                  7000\nwcslen                                    6000\ntempnam                                   6000\nsrand48                                   6000\nrealpath                                  6000\nmodf                                      6000\ndaylight                                  6000\ncloselog                                  6000\ntanh                                      5000\nsinh                                      5000\nshmdt                                     5000\nshmctl                                    5000\npthread_cond_destroy                      5000\npthread_cancel                            5000\nmkfifo                                    5000\nldexp                                     5000\ngetnameinfo                               5000\ngai_strerror                              5000\ncosh                                      5000\nstrtoull                                  4000\nstrtoll                                   4000\nsigsuspend                                4000\npthread_sigmask                           4000\npthread_detach                            4000\npthread_cond_broadcast                    4000\nlrand48                                   4000\nlogf                                      4000\nfsetpos                                   4000\nfrexp                                     4000\nfgetpos                                   4000\ndrand48                                   4000\ncfsetospeed                               4000\ncfsetispeed                               4000\nulimit                                    3000\nswab                                      3000\nstrptime                                  3000\nsigset                                    3000\nsemop                                     3000\nsem_wait                                  3000\npthread_setspecific                       3000\npthread_mutex_trylock                     3000\npthread_key_create                        3000\npthread_getspecific                       3000\npthread_cond_timedwait                    3000\nnan                                       3000\nmlock                                     3000\nmbstowcs                                  3000\nldiv                                      3000\niconv_open                                3000\nexp2                                      3000\nwcstombs                                  2000\ntcflush                                   2000\nsqrtf                                     2000\nsetkey                                    2000\nsemget                                    2000\nsemctl                                    2000\nsem_post                                  2000\nsem_init                                  2000\nsem_destroy                               2000\npthread_once                              2000\npthread_cleanup_push                      2000\npowf                                      2000\nmsgsnd                                    2000\nmsgrcv                                    2000\nmsgget                                    2000\nmsgctl                                    2000\ngetdate                                   2000\nfmin                                      2000\nfmax                                      2000\nexecle                                    2000\nerfc                                      2000\ncosf                                      2000\nconj                                      2000\nclock_gettime                             2000\ncbrt                                      2000\natanh                                     2000\nasinh                                     2000\nacosh                                     2000\nlgamma                                    1000\nftok                                      1000\npause                                      900\nendpwent                                   900\nwcscmp                                     800\nsetpgid                                    800\nsendmsg                                    800\npthread_mutexattr_init                     800\npthread_equal                              800\npthread_attr_destroy                       800\nisnan                                      800\nisblank                                    800\nisascii                                    800\nhypot                                      800\ngetpwent                                   800\ngetgrent                                   800\nwcscpy                                     700\nvsscanf                                    700\ntzset                                      700\ntoascii                                    700\ntcdrain                                    700\nsocketpair                                 700\nsigsetjmp                                  700\nsiglongjmp                                 700\nsigismember                                700\nsetpwent                                   700\nsetpgrp                                    700\nsched_yield                                700\nrewinddir                                  700\nrewind                                     700\nremque                                     700\npthread_setschedparam                      700\npthread_setcancelstate                     700\npthread_mutexattr_settype                  700\npthread_attr_setstacksize                  700\npthread_attr_setdetachstate                700\npthread_attr_init                          700\nlchown                                     700\niconv_close                                700\ngmtime_r                                   700\nglobfree                                   700\ngetsockopt                                 700\ngetservbyport                              700\ngetservbyname                              700\ngetrusage                                  700\ngetpgrp                                    700\ngetgroups                                  700\nfchdir                                     700\nexecve                                     700\nendgrent                                   700\ncexp                                       700\nbcmp                                       700\nwcsncpy                                    600\nwcschr                                     600\nwcscat                                     600\nva_copy                                    600\ntzname                                     600\ntcsetpgrp                                  600\nstrerror_r                                 600\nsigwait                                    600\nsigfillset                                 600\nsigdelset                                  600\nsetreuid                                   600\nsetgrent                                   600\nsetegid                                    600\nseekdir                                    600\nsched_setscheduler                         600\nsched_get_priority_max                     600\nrecvmsg                                    600\nputmsg                                     600\npthread_setcanceltype                      600\npthread_rwlock_init                        600\npthread_kill                               600\npthread_cleanup_pop                        600\npthread_attr_setscope                      600\npthread_attr_setschedparam                 600\nnl_langinfo                                600\nmknod                                      600\nmemccpy                                    600\nmbtowc                                     600\nmbrtowc                                    600\nlog2                                       600\nlog1p                                      600\nlockf                                      600\nkillpg                                     600\ninsque                                     600\nif_nametoindex                             600\ngetprotobynumber                           600\ngetprotobyname                             600\ngetpgid                                    600\ngetitimer                                  600\nfsync                                      600\nfseeko                                     600\nfloorf                                     600\nfabsf                                      600\nexpf                                       600\ndbm_store                                  600\ndbm_open                                   600\ndbm_fetch                                  600\ndbm_close                                  600\ncopysign                                   600\ncfgetospeed                                600\natoll                                      600\nwprintf                                    500\nwcwidth                                    500\nwctype                                     500\nwctomb                                     500\nvfscanf                                    500\nunlockpt                                   500\ntowupper                                   500\ntowlower                                   500\ntelldir                                    500\ntcsendbreak                                500\ntcgetpgrp                                  500\nswprintf                                   500\nstrxfrm                                    500\nstrcoll                                    500\nstatvfs                                    500\nsigpause                                   500\nsiginterrupt                               500\nsigignore                                  500\nsetregid                                   500\nsetpriority                                500\nsetlogmask                                 500\nreadv                                      500\nreaddir_r                                  500\npwrite                                     500\nptsname                                    500\npthread_testcancel                         500\npthread_rwlock_unlock                      500\npthread_mutexattr_destroy                  500\npthread_attr_setschedpolicy                500\npathconf                                   500\nmunlock                                    500\nmsync                                      500\nmprotect                                   500\nmblen                                      500\nlogb                                       500\nlocaleconv                                 500\niswspace                                   500\nisfinite                                   500\niconv                                      500\nhsearch                                    500\ngrantpt                                    500\ngetpwuid_r                                 500\ngetpwnam_r                                 500\ngetmsg                                     500\ngethostid                                  500\nfdatasync                                  500\nexpm1                                      500\nencrypt                                    500\ncabs                                       500\natan2f                                     500\n_tolower                                   500\n_setjmp                                    500\nwcsstr                                     400\nwcsncmp                                    400\nwcrtomb                                    400\nvscanf                                     400\nualarm                                     400\ntsearch                                    400\nstrtof                                     400\nsqrtl                                      400\nsigrelse                                   400\nsigpending                                 400\nsignbit                                    400\nsighold                                    400\nsigaltstack                                400\nsem_trywait                                400\nsched_getparam                             400\npthread_rwlock_wrlock                      400\npthread_rwlock_rdlock                      400\npthread_key_delete                         400\npthread_getschedparam                      400\npthread_attr_getstacksize                  400\nmunlockall                                 400\nmrand48                                    400\nmlockall                                   400\nmbrlen                                     400\nlogl                                       400\nlog10f                                     400\niswprint                                   400\niswdigit                                   400\niswalnum                                   400\nif_indextoname                             400\nhcreate                                    400\ngetsid                                     400\ngetprotoent                                400\ngetpriority                                400\ngetnetbyname                               400\ngetnetbyaddr                               400\ngcvt                                       400\nfwprintf                                   400\nfunlockfile                                400\nfpathconf                                  400\nflockfile                                  400\nfcvt                                       400\nfabsl                                      400\nendservent                                 400\nendhostent                                 400\necvt                                       400\ndbm_nextkey                                400\ndbm_firstkey                               400\ncosl                                       400\ncfgetispeed                                400\nceilf                                      400\nasctime_r                                  400\nacosf                                      400\n_toupper                                   400\n_longjmp                                   400\nwcstol                                     300\nwcsspn                                     300\nwcsrchr                                    300\nwcspbrk                                    300\nwcsncat                                    300\nwcscoll                                    300\nwaitid                                     300\nvswprintf                                  300\nutimes                                     300\ntwalk                                      300\ntimer_create                               300\ntanl                                       300\nsinhf                                      300\nsigtimedwait                               300\nshm_open                                   300\nsetstate                                   300\nsetprotoent                                300\nsetcontext                                 300\nsem_open                                   300\nsem_getvalue                               300\nsched_setparam                             300\nsched_rr_get_interval                      300\nsched_getscheduler                         300\nscalbn                                     300\nscalb                                      300\nputc_unlocked                              300\npthread_rwlock_destroy                     300\npthread_condattr_init                      300\npthread_attr_setinheritsched               300\npthread_attr_getschedparam                 300\npthread_atfork                             300\npowl                                       300\nposix_memalign                             300\nnrand48                                    300\nnextafter                                  300\nmbsrtowcs                                  300\nlrintf                                     300\nlrint                                      300\niswxdigit                                  300\niswupper                                   300\niswlower                                   300\niswctype                                   300\niswcntrl                                   300\niswalpha                                   300\nisinf                                      300\ninitstate                                  300\nilogb                                      300\nhypotf                                     300\ngetservent                                 300\ngetnetent                                  300\ngetcontext                                 300\ngetc_unlocked                              300\nftello                                     300\nfrexpl                                     300\nfmodf                                      300\nfloorl                                     300\nexpl                                       300\nerand48                                    300\nendprotoent                                300\nendnetent                                  300\ndbm_delete                                 300\nctermid                                    300\ncsqrt                                      300\ncoshf                                      300\nconfstr                                    300\nclock_getres                               300\ncimag                                      300\ncatclose                                   300\naio_write                                  300\naio_read                                   300\nwscanf                                     200\nwmemset                                    200\nwmemmove                                   200\nwmemcpy                                    200\nwmemcmp                                    200\nwmemchr                                    200\nwctob                                      200\nwcsxfrm                                    200\nwcswidth                                   200\nwcstoul                                    200\nwcstok                                     200\nwcstod                                     200\nwcsrtombs                                  200\nwcsftime                                   200\nwcscspn                                    200\nvwprintf                                   200\nvfwprintf                                  200\nungetwc                                    200\nttyname_r                                  200\ntruncf                                     200\ntimer_settime                              200\ntimer_getoverrun                           200\ntimer_delete                               200\ntgamma                                     200\ntdelete                                    200\ntcflow                                     200\ntanhl                                      200\ntanhf                                      200\ntanf                                       200\nswscanf                                    200\nstrtoumax                                  200\nstrtold                                    200\nstrtoimax                                  200\nsinhl                                      200\nsigwaitinfo                                200\nsigqueue                                   200\nshm_unlink                                 200\nsetutxent                                  200\nsetservent                                 200\nsetnetent                                  200\nsem_unlink                                 200\nsem_close                                  200\nseed48                                     200\nroundf                                     200\nputwchar                                   200\nputwc                                      200\npututxline                                 200\nputpmsg                                    200\nputchar_unlocked                           200\npthread_setconcurrency                     200\npthread_rwlock_trywrlock                   200\npthread_rwlock_tryrdlock                   200\npthread_mutexattr_setpshared               200\npthread_condattr_setpshared                200\npthread_condattr_destroy                   200\npthread_attr_setstackaddr                  200\npthread_attr_getstackaddr                  200\npthread_attr_getscope                      200\npthread_attr_getschedpolicy                200\npthread_attr_getinheritsched               200\npthread_attr_getdetachstate                200\npselect                                    200\nnftw                                       200\nmq_unlink                                  200\nmq_send                                    200\nmq_receive                                 200\nmq_open                                    200\nmodfl                                      200\nmodff                                      200\nmbsinit                                    200\nmakecontext                                200\nlround                                     200\nlog10l                                     200\nlldiv                                      200\nllabs                                      200\nlfind                                      200\nldexpl                                     200\nldexpf                                     200\nlcong48                                    200\nl64a                                       200\njrand48                                    200\niswpunct                                   200\niswgraph                                   200\nisnormal                                   200\nisastream                                  200\nif_nameindex                               200\nif_freenameindex                           200\nhypotl                                     200\nhdestroy                                   200\ngetwc                                      200\ngetsubopt                                  200\ngetpmsg                                    200\ngetlogin_r                                 200\ngethostent                                 200\ngetgrnam_r                                 200\ngetgrgid_r                                 200\ngetchar_unlocked                           200\nfstatvfs                                   200\nfrexpf                                     200\nfputws                                     200\nfputwc                                     200\nfpclassify                                 200\nfmodl                                      200\nfma                                        200\nfgetws                                     200\nfgetwc                                     200\nfdim                                       200\nfattach                                    200\nerff                                       200\nendutxent                                  200\ndbm_error                                  200\nctime_r                                    200\ncsinh                                      200\ncsin                                       200\ncpow                                       200\ncoshl                                      200\ncopysignf                                  200\nclock_settime                              200\nceill                                      200\nccosh                                      200\nccos                                       200\ncatgets                                    200\nbtowc                                      200\natanl                                      200\natanf                                      200\natan2l                                     200\naio_return                                 200\nacosl                                      200\nacoshf                                     200\na64l                                       200\n_Exit                                      200\nwordfree                                   100\nwordexp                                    100\nwctrans                                    100\nwcswcs                                     100\nwcstoumax                                  100\nwcstoull                                   100\nwcstoll                                    100\nwcstold                                    100\nwcstoimax                                  100\nwcstof                                     100\nvwscanf                                    100\nvswscanf                                   100\nvfwscanf                                   100\ntowctrans                                  100\ntfind                                      100\ntcgetsid                                   100\nswapcontext                                100\nstrfmon                                    100\nsockatmark                                 100\nsinl                                       100\nsinf                                       100\nsethostent                                 100\nsem_timedwait                              100\nscalbnl                                    100\nscalbnf                                    100\nscalblnf                                   100\nscalbln                                    100\nremquol                                    100\nremquof                                    100\nremquo                                     100\nrand_r                                     100\npthread_spin_unlock                        100\npthread_spin_trylock                       100\npthread_spin_lock                          100\npthread_spin_init                          100\npthread_spin_destroy                       100\npthread_rwlockattr_setpshared              100\npthread_rwlockattr_init                    100\npthread_rwlockattr_getpshared              100\npthread_rwlockattr_destroy                 100\npthread_rwlock_timedwrlock                 100\npthread_rwlock_timedrdlock                 100\npthread_mutexattr_setprotocol              100\npthread_mutexattr_setprioceiling           100\npthread_mutexattr_gettype                  100\npthread_mutexattr_getpshared               100\npthread_mutexattr_getprotocol              100\npthread_mutexattr_getprioceiling           100\npthread_mutex_timedlock                    100\npthread_mutex_setprioceiling               100\npthread_mutex_getprioceiling               100\npthread_getconcurrency                     100\npthread_condattr_getpshared                100\npthread_barrierattr_setpshared             100\npthread_barrierattr_init                   100\npthread_barrierattr_getpshared             100\npthread_barrierattr_destroy                100\npthread_barrier_wait                       100\npthread_barrier_init                       100\npthread_barrier_destroy                    100\npthread_attr_setstack                      100\npthread_attr_setguardsize                  100\npthread_attr_getstack                      100\npthread_attr_getguardsize                  100\npread                                      100\nposix_fadvise                              100\nnexttowardl                                100\nnexttoward                                 100\nnextafterl                                 100\nnextafterf                                 100\nnearbyintl                                 100\nnearbyintf                                 100\nnearbyint                                  100\nnanl                                       100\nnanf                                       100\nmq_timedsend                               100\nmq_timedreceive                            100\nmq_setattr                                 100\nmq_notify                                  100\nmq_getattr                                 100\nmq_close                                   100\nlsearch                                    100\nlroundl                                    100\nlroundf                                    100\nlrintl                                     100\nlogbl                                      100\nlogbf                                      100\nlog2l                                      100\nlog2f                                      100\nlog1pl                                     100\nlog1pf                                     100\nllroundf                                   100\nllround                                    100\nllrintl                                    100\nllrintf                                    100\nllrint                                     100\nlio_listio                                 100\nlgammal                                    100\nlgammaf                                    100\niswblank                                   100\nisunordered                                100\nisless                                     100\nisgreater                                  100\nimaxdiv                                    100\nimaxabs                                    100\nilogbl                                     100\nilogbf                                     100\ngetwchar                                   100\ngetutxline                                 100\ngetutxid                                   100\ngetutxent                                  100\nfwscanf                                    100\nfwide                                      100\nftrylockfile                               100\nfmtmsg                                     100\nfminl                                      100\nfminf                                      100\nfmaxl                                      100\nfmaxf                                      100\nfmal                                       100\nfmaf                                       100\nffs                                        100\nfeupdateenv                                100\nfetestexcept                               100\nfesetround                                 100\nfesetexceptflag                            100\nfesetenv                                   100\nferaiseexcept                              100\nfeholdexcept                               100\nfegetround                                 100\nfegetexceptflag                            100\nfegetenv                                   100\nfeclearexcept                              100\nfdiml                                      100\nexpm1l                                     100\nexpm1f                                     100\nexp2l                                      100\nexp2f                                      100\nerfcl                                      100\nerfcf                                      100\nerf                                        100\ndbm_clearerr                               100\nctanh                                      100\ncsqrtf                                     100\ncproj                                      100\ncpowf                                      100\ncopysignl                                  100\nconjl                                      100\nclogf                                      100\nclog                                       100\nclock_nanosleep                            100\ncimagl                                     100\ncimagf                                     100\ncbrtl                                      100\ncbrtf                                      100\ncatopen                                    100\ncatanh                                     100\ncasinh                                     100\ncarg                                       100\ncacosh                                     100\ncacos                                      100\ncabsl                                      100\ncabsf                                      100\nbsd_signal                                 100\natanhl                                     100\natanhf                                     100\nasinl                                      100\nasinhl                                     100\nasinhf                                     100\nasinf                                      100\naio_suspend                                100\naio_fsync                                  100\naio_error                                  100\naio_cancel                                 100\nacoshl                                     100\nyn                                          50\ntgammal                                     50\ntgammaf                                     50\nscalblnl                                    50\nrintf                                       50\nremainderl                                  50\nremainderf                                  50\npthread_getcpuclockid                       50\npthread_condattr_setclock                   50\npthread_condattr_getclock                   50\nposix_spawn                                 50\nposix_openpt                                50\nposix_madvise                               50\nposix_fallocate                             50\nnexttowardf                                 50\nllroundl                                    50\nislessgreater                               50\nislessequal                                 50\nisgreaterequal                              50\nfdimf                                       50\nerfl                                        50\nctanl                                       50\nctanhl                                      50\nctanhf                                      50\nctanf                                       50\ncsqrtl                                      50\ncsinl                                       50\ncsinhl                                      50\ncsinhf                                      50\ncsinf                                       50\ncrealf                                      50\ncreal                                       50\ncprojl                                      50\ncprojf                                      50\ncpowl                                       50\nconjf                                       50\nclogl                                       50\nclock_getcpuclockid                         50\ncexpl                                       50\ncexpf                                       50\nccosl                                       50\nccoshl                                      50\nccoshf                                      50\nccosf                                       50\ncatanl                                      50\ncatanhl                                     50\ncatanhf                                     50\ncatanf                                      50\ncasinhl                                     50\ncasinhf                                     50\ncasin                                       50\ncargl                                       50\ncargf                                       50\ncacosl                                      50\ncacoshl                                     50\ncacoshf                                     50\ncacosf                                      50\npthread_setschedprio                        20\nj0                                          20\nfdetach                                     20\ncasinl                                      20\ntruncl                                       0\nroundl                                       0\nrintl                                        0\nposix_typed_mem_open                         0\nposix_typed_mem_get_info                     0\nposix_trace_trygetnext_event                 0\nposix_trace_trid_eventid_open                0\nposix_trace_timedgetnext_event               0\nposix_trace_stop                             0\nposix_trace_start                            0\nposix_trace_shutdown                         0\nposix_trace_set_filter                       0\nposix_trace_rewind                           0\nposix_trace_open                             0\nposix_trace_getnext_event                    0\nposix_trace_get_status                       0\nposix_trace_get_filter                       0\nposix_trace_get_attr                         0\nposix_trace_flush                            0\nposix_trace_eventtypelist_rewind             0\nposix_trace_eventtypelist_getnext_id         0\nposix_trace_eventset_ismember                0\nposix_trace_eventset_fill                    0\nposix_trace_eventset_empty                   0\nposix_trace_eventset_del                     0\nposix_trace_eventset_add                     0\nposix_trace_eventid_open                     0\nposix_trace_eventid_get_name                 0\nposix_trace_eventid_equal                    0\nposix_trace_event                            0\nposix_trace_create_withlog                   0\nposix_trace_create                           0\nposix_trace_close                            0\nposix_trace_clear                            0\nposix_trace_attr_setstreamsize               0\nposix_trace_attr_setstreamfullpolicy         0\nposix_trace_attr_setname                     0\nposix_trace_attr_setmaxdatasize              0\nposix_trace_attr_setlogsize                  0\nposix_trace_attr_setlogfullpolicy            0\nposix_trace_attr_setinherited                0\nposix_trace_attr_init                        0\nposix_trace_attr_getstreamsize               0\nposix_trace_attr_getstreamfullpolicy         0\nposix_trace_attr_getname                     0\nposix_trace_attr_getmaxusereventsize         0\nposix_trace_attr_getmaxsystemeventsize       0\nposix_trace_attr_getmaxdatasize              0\nposix_trace_attr_getlogsize                  0\nposix_trace_attr_getlogfullpolicy            0\nposix_trace_attr_getinherited                0\nposix_trace_attr_getgenversion               0\nposix_trace_attr_getcreatetime               0\nposix_trace_attr_getclockres                 0\nposix_trace_attr_destroy                     0\nposix_spawnp                                 0\nposix_spawnattr_setsigmask                   0\nposix_spawnattr_setsigdefault                0\nposix_spawnattr_setschedpolicy               0\nposix_spawnattr_setschedparam                0\nposix_spawnattr_setpgroup                    0\nposix_spawnattr_setflags                     0\nposix_spawnattr_init                         0\nposix_spawnattr_getsigmask                   0\nposix_spawnattr_getsigdefault                0\nposix_spawnattr_getschedpolicy               0\nposix_spawnattr_getschedparam                0\nposix_spawnattr_getpgroup                    0\nposix_spawnattr_getflags                     0\nposix_spawnattr_destroy                      0\nposix_spawn_file_actions_init                0\nposix_spawn_file_actions_destroy             0\nposix_spawn_file_actions_addopen             0\nposix_spawn_file_actions_adddup2             0\nposix_spawn_file_actions_addclose            0\nposix_mem_offset                             0\njn                                           0\nftw                                          0\ncreall                                       0\ncatan                                        0\ncasinf                                       0\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/gnulib/doc/posix-functions/dlsym.texi": "@node dlsym\n@section @code{dlsym}\n@findex dlsym\n\nPOSIX specification:@* @url{http://www.opengroup.org/onlinepubs/9699919799/functions/dlsym.html}\n\nGnulib module: ---\n\nPortability problems fixed by Gnulib:\n@itemize\n@end itemize\n\nPortability problems not fixed by Gnulib:\n@itemize\n@item\nThis function is missing on some platforms:\nMinix 3.1.8, mingw, MSVC 14, Interix 3.5, BeOS.\n@item\nThe visibility of symbols loaded in dependent shared libraries or present\nin the main executable is system dependent.\n@end itemize\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/libltdl/ltdl.h": "/* ltdl.h -- generic dlopen functions\n\n   Copyright (C) 1998-2000, 2004-2005, 2007-2008, 2011-2019 Free\n   Software Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n/* Only include this header file once. */\n#if !defined LTDL_H\n#define LTDL_H 1\n\n#include <libltdl/lt_system.h>\n#include <libltdl/lt_error.h>\n#include <libltdl/lt_dlloader.h>\n\nLT_BEGIN_C_DECLS\n\n\n/* LT_STRLEN can be used safely on NULL pointers.  */\n#define LT_STRLEN(s)\t(((s) && (s)[0]) ? strlen (s) : 0)\n\n\f\n/* --- DYNAMIC MODULE LOADING API --- */\n\n\ntypedef\tstruct lt__handle *lt_dlhandle;\t/* A loaded module.  */\n\n/* Initialisation and finalisation functions for libltdl. */\nLT_SCOPE int\t    lt_dlinit\t\t(void);\nLT_SCOPE int\t    lt_dlexit\t\t(void);\n\n/* Module search path manipulation.  */\nLT_SCOPE int\t    lt_dladdsearchdir\t (const char *search_dir);\nLT_SCOPE int\t    lt_dlinsertsearchdir (const char *before,\n\t\t\t\t\t\t  const char *search_dir);\nLT_SCOPE int\t    lt_dlsetsearchpath\t (const char *search_path);\nLT_SCOPE const char *lt_dlgetsearchpath\t (void);\nLT_SCOPE int\t    lt_dlforeachfile\t (\n\t\t\tconst char *search_path,\n\t\t\tint (*func) (const char *filename, void *data),\n\t\t\tvoid *data);\n\n/* User module loading advisors.  */\nLT_SCOPE int\t    lt_dladvise_init\t (lt_dladvise *advise);\nLT_SCOPE int\t    lt_dladvise_destroy  (lt_dladvise *advise);\nLT_SCOPE int\t    lt_dladvise_ext\t (lt_dladvise *advise);\nLT_SCOPE int\t    lt_dladvise_resident (lt_dladvise *advise);\nLT_SCOPE int\t    lt_dladvise_local\t (lt_dladvise *advise);\nLT_SCOPE int\t    lt_dladvise_global   (lt_dladvise *advise);\nLT_SCOPE int\t    lt_dladvise_preload\t (lt_dladvise *advise);\n\n/* Portable libltdl versions of the system dlopen() API. */\nLT_SCOPE lt_dlhandle lt_dlopen\t\t(const char *filename);\nLT_SCOPE lt_dlhandle lt_dlopenext\t(const char *filename);\nLT_SCOPE lt_dlhandle lt_dlopenadvise\t(const char *filename,\n\t\t\t\t\t lt_dladvise advise);\nLT_SCOPE void *\t    lt_dlsym\t\t(lt_dlhandle handle, const char *name);\nLT_SCOPE const char *lt_dlerror\t\t(void);\nLT_SCOPE int\t    lt_dlclose\t\t(lt_dlhandle handle);\n\n\n\n/* --- PRELOADED MODULE SUPPORT --- */\n\n\n/* A preopened symbol. Arrays of this type comprise the exported\n   symbols for a dlpreopened module. */\ntypedef struct {\n  const char *name;\n  void       *address;\n} lt_dlsymlist;\n\ntypedef int lt_dlpreload_callback_func (lt_dlhandle handle);\n\nLT_SCOPE int\tlt_dlpreload\t     (const lt_dlsymlist *preloaded);\nLT_SCOPE int\tlt_dlpreload_default (const lt_dlsymlist *preloaded);\nLT_SCOPE int\tlt_dlpreload_open    (const char *originator,\n\t\t\t\t      lt_dlpreload_callback_func *func);\n\n#define lt_preloaded_symbols\tlt__PROGRAM__LTX_preloaded_symbols\n/* Ensure C linkage.  */\nextern LT_DLSYM_CONST lt_dlsymlist lt__PROGRAM__LTX_preloaded_symbols[];\n\n#define LTDL_SET_PRELOADED_SYMBOLS() \\\n\tlt_dlpreload_default(lt_preloaded_symbols)\n\n\n\n\f\n/* --- MODULE INFORMATION --- */\n\n\n/* Associating user data with loaded modules. */\ntypedef void * lt_dlinterface_id;\ntypedef int lt_dlhandle_interface (lt_dlhandle handle, const char *id_string);\n\nLT_SCOPE lt_dlinterface_id lt_dlinterface_register (const char *id_string,\n\t\t\t\t\t  lt_dlhandle_interface *iface);\nLT_SCOPE void\tlt_dlinterface_free (lt_dlinterface_id key);\nLT_SCOPE void *\tlt_dlcaller_set_data  (lt_dlinterface_id key,\n\t\t\t\t\t  lt_dlhandle handle, void *data);\nLT_SCOPE void *\tlt_dlcaller_get_data  (lt_dlinterface_id key,\n\t\t\t\t\t  lt_dlhandle handle);\n\n\n/* Read only information pertaining to a loaded module. */\ntypedef\tstruct {\n  char *\tfilename;\t/* file name */\n  char *\tname;\t\t/* module name */\n  int\t\tref_count;\t/* number of times lt_dlopened minus\n\t\t\t\t   number of times lt_dlclosed. */\n  unsigned int\tis_resident:1;\t/* module can't be unloaded. */\n  unsigned int\tis_symglobal:1;\t/* module symbols can satisfy\n\t\t\t\t   subsequently loaded modules.  */\n  unsigned int\tis_symlocal:1;\t/* module symbols are only available\n\t\t\t\t   locally. */\n} lt_dlinfo;\n\nLT_SCOPE const lt_dlinfo *lt_dlgetinfo\t    (lt_dlhandle handle);\n\nLT_SCOPE lt_dlhandle\tlt_dlhandle_iterate (lt_dlinterface_id iface,\n\t\t\t\t\t     lt_dlhandle place);\nLT_SCOPE lt_dlhandle\tlt_dlhandle_fetch   (lt_dlinterface_id iface,\n\t\t\t\t\t     const char *module_name);\nLT_SCOPE int\t\tlt_dlhandle_map\t    (lt_dlinterface_id iface,\n\t\t\t\tint (*func) (lt_dlhandle handle, void *data),\n\t\t\t\tvoid *data);\n\n\n\n/* Deprecated module residency management API. */\nLT_SCOPE int\t    lt_dlmakeresident\t(lt_dlhandle handle);\nLT_SCOPE int\t    lt_dlisresident\t(lt_dlhandle handle);\n\n#define lt_ptr void *\n\nLT_END_C_DECLS\n\n#endif /*!defined LTDL_H*/\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/libltdl/ltdl.c": "/* ltdl.c -- system independent dlopen wrapper\n\n   Copyright (C) 1998-2000, 2004-2008, 2011-2019 Free Software\n   Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_system.h\"\n#include \"lt_dlloader.h\"\n\n\n/* --- MANIFEST CONSTANTS --- */\n\n\n/* Standard libltdl search path environment variable name  */\n#undef  LTDL_SEARCHPATH_VAR\n#define LTDL_SEARCHPATH_VAR\t\"LTDL_LIBRARY_PATH\"\n\n/* Standard libtool archive file extension.  */\n#undef  LT_ARCHIVE_EXT\n#define LT_ARCHIVE_EXT\t\".la\"\n\n/* max. filename length */\n#if !defined LT_FILENAME_MAX\n#  define LT_FILENAME_MAX\t1024\n#endif\n\n#if !defined LT_LIBEXT\n#  define LT_LIBEXT \"a\"\n#endif\n\n#if !defined LT_LIBPREFIX\n#  define LT_LIBPREFIX \"lib\"\n#endif\n\n/* This is the maximum symbol size that won't require malloc/free */\n#undef\tLT_SYMBOL_LENGTH\n#define LT_SYMBOL_LENGTH\t128\n\n/* This accounts for the _LTX_ separator */\n#undef\tLT_SYMBOL_OVERHEAD\n#define LT_SYMBOL_OVERHEAD\t5\n\n/* Various boolean flags can be stored in the flags field of an\n   lt_dlhandle... */\n#define LT_DLIS_RESIDENT(handle)  ((handle)->info.is_resident)\n#define LT_DLIS_SYMGLOBAL(handle) ((handle)->info.is_symglobal)\n#define LT_DLIS_SYMLOCAL(handle)  ((handle)->info.is_symlocal)\n\n\nstatic\tconst char\tobjdir[]\t\t= LT_OBJDIR;\nstatic\tconst char\tarchive_ext[]\t\t= LT_ARCHIVE_EXT;\nstatic  const char\tlibext[]\t\t= LT_LIBEXT;\nstatic  const char\tlibprefix[]\t\t= LT_LIBPREFIX;\n#if defined LT_MODULE_EXT\nstatic\tconst char\tshlib_ext[]\t\t= LT_MODULE_EXT;\n#endif\n/* If the loadable module suffix is not the same as the linkable\n * shared library suffix, this will be defined. */\n#if defined LT_SHARED_EXT\nstatic\tconst char\tshared_ext[]\t\t= LT_SHARED_EXT;\n#endif\n#if defined LT_DLSEARCH_PATH\nstatic\tconst char\tsys_dlsearch_path[]\t= LT_DLSEARCH_PATH;\n#endif\n\n\n\n\f\n/* --- DYNAMIC MODULE LOADING --- */\n\n\n/* The type of a function used at each iteration of  foreach_dirinpath().  */\ntypedef int\tforeach_callback_func (char *filename, void *data1,\n\t\t\t\t       void *data2);\n/* foreachfile_callback itself calls a function of this type: */\ntypedef int\tfile_worker_func      (const char *filename, void *data);\n\n\nstatic\tint\tforeach_dirinpath     (const char *search_path,\n\t\t\t\t       const char *base_name,\n\t\t\t\t       foreach_callback_func *func,\n\t\t\t\t       void *data1, void *data2);\nstatic\tint\tfind_file_callback    (char *filename, void *data1,\n\t\t\t\t       void *data2);\nstatic\tint\tfind_handle_callback  (char *filename, void *data,\n\t\t\t\t       void *ignored);\nstatic\tint\tforeachfile_callback  (char *filename, void *data1,\n\t\t\t\t       void *data2);\n\n\nstatic\tint     canonicalize_path     (const char *path, char **pcanonical);\nstatic\tint\targzize_path\t      (const char *path,\n\t\t\t\t       char **pargz, size_t *pargz_len);\nstatic\tFILE   *find_file\t      (const char *search_path,\n\t\t\t\t       const char *base_name, char **pdir);\nstatic\tlt_dlhandle *find_handle      (const char *search_path,\n\t\t\t\t       const char *base_name,\n\t\t\t\t       lt_dlhandle *handle,\n\t\t\t\t       lt_dladvise advise);\nstatic\tint\tfind_module\t      (lt_dlhandle *handle, const char *dir,\n\t\t\t\t       const char *libdir, const char *dlname,\n\t\t\t\t       const char *old_name, int installed,\n\t\t\t\t       lt_dladvise advise);\nstatic  int     has_library_ext       (const char *filename);\nstatic\tint\tload_deplibs\t      (lt_dlhandle handle,  char *deplibs);\nstatic\tint\ttrim\t\t      (char **dest, const char *str);\nstatic\tint\ttry_dlopen\t      (lt_dlhandle *handle,\n\t\t\t\t       const char *filename, const char *ext,\n\t\t\t\t       lt_dladvise advise);\nstatic\tint\ttryall_dlopen\t      (lt_dlhandle *handle,\n\t\t\t\t       const char *filename,\n\t\t\t\t       lt_dladvise padvise,\n\t\t\t\t       const lt_dlvtable *vtable);\nstatic\tint\tunload_deplibs\t      (lt_dlhandle handle);\nstatic\tint\tlt_argz_insert\t      (char **pargz, size_t *pargz_len,\n\t\t\t\t       char *before, const char *entry);\nstatic\tint\tlt_argz_insertinorder (char **pargz, size_t *pargz_len,\n\t\t\t\t       const char *entry);\nstatic\tint\tlt_argz_insertdir     (char **pargz, size_t *pargz_len,\n\t\t\t\t       const char *dirnam, struct dirent *dp);\nstatic\tint\tlt_dlpath_insertdir   (char **ppath, char *before,\n\t\t\t\t       const char *dir);\nstatic\tint\tlist_files_by_dir     (const char *dirnam,\n\t\t\t\t       char **pargz, size_t *pargz_len);\nstatic\tint\tfile_not_found\t      (void);\n\n#ifdef HAVE_LIBDLLOADER\nstatic\tint\tloader_init_callback  (lt_dlhandle handle);\n#endif /* HAVE_LIBDLLOADER */\n\nstatic\tint\tloader_init\t      (lt_get_vtable *vtable_func,\n\t\t\t\t       lt_user_data data);\n\nstatic\tchar\t       *user_search_path= 0;\nstatic\tlt_dlhandle\thandles\t= 0;\nstatic\tint\t\tinitialized\t= 0;\n\n/* Our memory failure callback sets the error message to be passed back\n   up to the client, so we must be careful to return from mallocation\n   callers if allocation fails (as this callback returns!!).  */\nvoid\nlt__alloc_die_callback (void)\n{\n  LT__SETERROR (NO_MEMORY);\n}\n\n#ifdef HAVE_LIBDLLOADER\n/* This function is called to initialise each preloaded module loader,\n   and hook it into the list of loaders to be used when attempting to\n   dlopen an application module.  */\nstatic int\nloader_init_callback (lt_dlhandle handle)\n{\n  lt_get_vtable *vtable_func = (lt_get_vtable *) lt_dlsym (handle, \"get_vtable\");\n  return loader_init (vtable_func, 0);\n}\n#endif /* HAVE_LIBDLLOADER */\n\nstatic int\nloader_init (lt_get_vtable *vtable_func, lt_user_data data)\n{\n  const lt_dlvtable *vtable = 0;\n  int errors = 0;\n\n  if (vtable_func)\n    {\n      vtable = (*vtable_func) (data);\n    }\n\n  /* lt_dlloader_add will LT__SETERROR if it fails.  */\n  errors += lt_dlloader_add (vtable);\n\n  assert (errors || vtable);\n\n  if ((!errors) && vtable->dlloader_init)\n    {\n      if ((*vtable->dlloader_init) (vtable->dlloader_data))\n\t{\n\t  LT__SETERROR (INIT_LOADER);\n\t  ++errors;\n\t}\n    }\n\n  return errors;\n}\n\n/* Bootstrap the loader loading with the preopening loader.  */\n#define get_vtable\t\tpreopen_LTX_get_vtable\n#define preloaded_symbols\tLT_CONC3(lt_, LTDLOPEN, _LTX_preloaded_symbols)\n\nLT_BEGIN_C_DECLS\nLT_SCOPE const lt_dlvtable *\tget_vtable (lt_user_data data);\nLT_END_C_DECLS\n#ifdef HAVE_LIBDLLOADER\nextern LT_DLSYM_CONST lt_dlsymlist preloaded_symbols[];\n#endif\n\n/* Initialize libltdl. */\nint\nlt_dlinit (void)\n{\n  int\terrors\t= 0;\n\n  /* Initialize only at first call. */\n  if (++initialized == 1)\n    {\n      lt__alloc_die\t= lt__alloc_die_callback;\n      handles\t\t= 0;\n      user_search_path\t= 0; /* empty search path */\n\n      /* First set up the statically loaded preload module loader, so\n\t we can use it to preopen the other loaders we linked in at\n\t compile time.  */\n      errors += loader_init (get_vtable, 0);\n\n      /* Now open all the preloaded module loaders, so the application\n\t can use _them_ to lt_dlopen its own modules.  */\n#ifdef HAVE_LIBDLLOADER\n      if (!errors)\n\t{\n\t  errors += lt_dlpreload (preloaded_symbols);\n\t}\n\n      if (!errors)\n\t{\n\t  errors += lt_dlpreload_open (LT_STR(LTDLOPEN), loader_init_callback);\n\t}\n#endif /* HAVE_LIBDLLOADER */\n    }\n\n#ifdef LT_DEBUG_LOADERS\n  lt_dlloader_dump();\n#endif\n\n  return errors;\n}\n\nint\nlt_dlexit (void)\n{\n  /* shut down libltdl */\n  lt_dlloader *loader   = 0;\n  lt_dlhandle  handle   = handles;\n  int\t       errors   = 0;\n\n  if (!initialized)\n    {\n      LT__SETERROR (SHUTDOWN);\n      ++errors;\n      goto done;\n    }\n\n  /* shut down only at last call. */\n  if (--initialized == 0)\n    {\n      int\tlevel;\n\n      while (handles && LT_DLIS_RESIDENT (handles))\n\t{\n\t  handles = handles->next;\n\t}\n\n      /* close all modules */\n      for (level = 1; handle; ++level)\n\t{\n\t  lt_dlhandle cur = handles;\n\t  int saw_nonresident = 0;\n\n\t  while (cur)\n\t    {\n\t      lt_dlhandle tmp = cur;\n\t      cur = cur->next;\n\t      if (!LT_DLIS_RESIDENT (tmp))\n\t\t{\n\t\t  saw_nonresident = 1;\n\t\t  if (tmp->info.ref_count <= level)\n\t\t    {\n\t\t      if (lt_dlclose (tmp))\n\t\t\t{\n\t\t\t  ++errors;\n\t\t\t}\n\t\t      /* Make sure that the handle pointed to by 'cur' still exists.\n\t\t\t lt_dlclose recursively closes dependent libraries, which removes\n\t\t\t them from the linked list.  One of these might be the one\n\t\t\t pointed to by 'cur'.  */\n\t\t      if (cur)\n\t\t\t{\n\t\t\t  for (tmp = handles; tmp; tmp = tmp->next)\n\t\t\t    if (tmp == cur)\n\t\t\t      break;\n\t\t\t  if (! tmp)\n\t\t\t    cur = handles;\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\t  /* done if only resident modules are left */\n\t  if (!saw_nonresident)\n\t    break;\n\t}\n\n      /* When removing loaders, we can only find out failure by testing\n\t the error string, so avoid a spurious one from an earlier\n\t failed command. */\n      if (!errors)\n\tLT__SETERRORSTR (0);\n\n      /* close all loaders */\n      for (loader = (lt_dlloader *) lt_dlloader_next (NULL); loader;)\n\t{\n\t  lt_dlloader *next   = (lt_dlloader *) lt_dlloader_next (loader);\n\t  lt_dlvtable *vtable = (lt_dlvtable *) lt_dlloader_get (loader);\n\n\t  if ((vtable = lt_dlloader_remove ((char *) vtable->name)))\n\t    {\n\t      FREE (vtable);\n\t    }\n\t  else\n\t    {\n\t      /* ignore errors due to resident modules */\n\t      const char *err;\n\t      LT__GETERROR (err);\n\t      if (err)\n\t\t++errors;\n\t    }\n\n\t  loader = next;\n\t}\n\n      FREE(user_search_path);\n    }\n\n done:\n  return errors;\n}\n\n\n/* Try VTABLE or, if VTABLE is NULL, all available loaders for FILENAME.\n   If the library is not successfully loaded, return non-zero.  Otherwise,\n   the dlhandle is stored at the address given in PHANDLE.  */\nstatic int\ntryall_dlopen (lt_dlhandle *phandle, const char *filename,\n\t       lt_dladvise advise, const lt_dlvtable *vtable)\n{\n  lt_dlhandle\thandle\t\t= handles;\n  const char *\tsaved_error\t= 0;\n  int\t\terrors\t\t= 0;\n\n#ifdef LT_DEBUG_LOADERS\n  fprintf (stderr, \"tryall_dlopen (%s, %s)\\n\",\n\t   filename ? filename : \"(null)\",\n\t   vtable ? vtable->name : \"(ALL)\");\n#endif\n\n  LT__GETERROR (saved_error);\n\n  /* check whether the module was already opened */\n  for (;handle; handle = handle->next)\n    {\n      if ((handle->info.filename == filename) /* dlopen self: 0 == 0 */\n\t  || (handle->info.filename && filename\n\t      && STREQ (handle->info.filename, filename)))\n\t{\n\t  break;\n\t}\n    }\n\n  if (handle)\n    {\n      ++handle->info.ref_count;\n      *phandle = handle;\n      goto done;\n    }\n\n  handle = *phandle;\n  if (filename)\n    {\n      /* Comment out the check of file permissions using access.\n\t This call seems to always return -1 with error EACCES.\n      */\n      /* We need to catch missing file errors early so that\n\t file_not_found() can detect what happened.\n      if (access (filename, R_OK) != 0)\n\t{\n\t  LT__SETERROR (FILE_NOT_FOUND);\n\t  ++errors;\n\t  goto done;\n\t} */\n\n      handle->info.filename = lt__strdup (filename);\n      if (!handle->info.filename)\n\t{\n\t  ++errors;\n\t  goto done;\n\t}\n    }\n  else\n    {\n      handle->info.filename = 0;\n    }\n\n  {\n    lt_dlloader loader = lt_dlloader_next (0);\n    const lt_dlvtable *loader_vtable;\n\n    do\n      {\n\tif (vtable)\n\t  loader_vtable = vtable;\n\telse\n\t  loader_vtable = lt_dlloader_get (loader);\n\n#ifdef LT_DEBUG_LOADERS\n\tfprintf (stderr, \"Calling %s->module_open (%s)\\n\",\n\t\t (loader_vtable && loader_vtable->name) ? loader_vtable->name : \"(null)\",\n\t\t filename ? filename : \"(null)\");\n#endif\n\thandle->module = (*loader_vtable->module_open) (loader_vtable->dlloader_data,\n\t\t\t\t\t\t\tfilename, advise);\n#ifdef LT_DEBUG_LOADERS\n\tif (!handle->module) {\n\t\tchar *error;\n\t\tLT__GETERROR(error);\n\t\tfprintf (stderr, \"  Result: Failed\\n\"\n\t\t\t\t\"  Error message << %s >>\\n\",\n\t\t\t\terror ? error : \"(null)\");\n\t} else {\n\t\tfprintf (stderr, \"  Result: Success\\n\");\n\t}\n#endif\n\n\tif (handle->module != 0)\n\t  {\n\t    if (advise)\n\t      {\n\t\thandle->info.is_resident  = advise->is_resident;\n\t\thandle->info.is_symglobal = advise->is_symglobal;\n\t\thandle->info.is_symlocal  = advise->is_symlocal;\n\t      }\n\t    break;\n\t  }\n      }\n    while (!vtable && (loader = lt_dlloader_next (loader)));\n\n    /* If VTABLE was given but couldn't open the module, or VTABLE wasn't\n       given but we exhausted all loaders without opening the module, bail\n       out!  */\n    if ((vtable && !handle->module)\n\t|| (!vtable && !loader))\n      {\n\tFREE (handle->info.filename);\n\t++errors;\n\tgoto done;\n      }\n\n    handle->vtable = loader_vtable;\n  }\n\n  LT__SETERRORSTR (saved_error);\n\n done:\n  return errors;\n}\n\n\nstatic int\ntryall_dlopen_module (lt_dlhandle *handle, const char *prefix,\n\t\t      const char *dirname, const char *dlname,\n\t\t      lt_dladvise advise)\n{\n  int      error\t= 0;\n  char     *filename\t= 0;\n  size_t   filename_len\t= 0;\n  size_t   dirname_len\t= LT_STRLEN (dirname);\n\n  assert (handle);\n  assert (dirname);\n  assert (dlname);\n#if defined LT_DIRSEP_CHAR\n  /* Only canonicalized names (i.e. with DIRSEP chars already converted)\n     should make it into this function:  */\n  assert (strchr (dirname, LT_DIRSEP_CHAR) == 0);\n#endif\n\n  if (dirname_len > 0)\n    if (dirname[dirname_len -1] == '/')\n      --dirname_len;\n  filename_len = dirname_len + 1 + LT_STRLEN (dlname);\n\n  /* Allocate memory, and combine DIRNAME and MODULENAME into it.\n     The PREFIX (if any) is handled below.  */\n  filename  = MALLOC (char, filename_len + 1);\n  if (!filename)\n    return 1;\n\n  sprintf (filename, \"%.*s/%s\", (int) dirname_len, dirname, dlname);\n\n  /* Now that we have combined DIRNAME and MODULENAME, if there is\n     also a PREFIX to contend with, simply recurse with the arguments\n     shuffled.  Otherwise, attempt to open FILENAME as a module.  */\n  if (prefix)\n    {\n      error += tryall_dlopen_module (handle, (const char *) 0,\n\t\t\t\t     prefix, filename, advise);\n    }\n  else if (tryall_dlopen (handle, filename, advise, 0) != 0)\n    {\n      ++error;\n    }\n\n  FREE (filename);\n  return error;\n}\n\nstatic int\nfind_module (lt_dlhandle *handle, const char *dir, const char *libdir,\n\t     const char *dlname,  const char *old_name, int installed,\n\t     lt_dladvise advise)\n{\n  /* Try to open the old library first; if it was dlpreopened,\n     we want the preopened version of it, even if a dlopenable\n     module is available.  */\n  if (old_name && tryall_dlopen (handle, old_name,\n\t\t\t  advise, lt_dlloader_find (\"lt_preopen\") ) == 0)\n    {\n      return 0;\n    }\n\n  /* Try to open the dynamic library.  */\n  if (dlname)\n    {\n      /* try to open the installed module */\n      if (installed && libdir)\n\t{\n\t  if (tryall_dlopen_module (handle, (const char *) 0,\n\t\t\t\t    libdir, dlname, advise) == 0)\n\t    return 0;\n\t}\n\n      /* try to open the not-installed module */\n      if (!installed)\n\t{\n\t  if (tryall_dlopen_module (handle, dir, objdir,\n\t\t\t\t    dlname, advise) == 0)\n\t    return 0;\n\t}\n\n      /* maybe it was moved to another directory */\n      {\n\t  if (dir && (tryall_dlopen_module (handle, (const char *) 0,\n\t\t\t\t\t    dir, dlname, advise) == 0))\n\t    return 0;\n      }\n    }\n\n  return 1;\n}\n\n\nstatic int\ncanonicalize_path (const char *path, char **pcanonical)\n{\n  char *canonical = 0;\n\n  assert (path && *path);\n  assert (pcanonical);\n\n  canonical = MALLOC (char, 1+ LT_STRLEN (path));\n  if (!canonical)\n    return 1;\n\n  {\n    size_t dest = 0;\n    size_t src;\n    for (src = 0; path[src] != LT_EOS_CHAR; ++src)\n      {\n\t/* Path separators are not copied to the beginning or end of\n\t   the destination, or if another separator would follow\n\t   immediately.  */\n\tif (path[src] == LT_PATHSEP_CHAR)\n\t  {\n\t    if ((dest == 0)\n\t\t|| (path[1+ src] == LT_PATHSEP_CHAR)\n\t\t|| (path[1+ src] == LT_EOS_CHAR))\n\t      continue;\n\t  }\n\n\t/* Anything other than a directory separator is copied verbatim.  */\n\tif ((path[src] != '/')\n#if defined LT_DIRSEP_CHAR\n\t    && (path[src] != LT_DIRSEP_CHAR)\n#endif\n\t    )\n\t  {\n\t    canonical[dest++] = path[src];\n\t  }\n\t/* Directory separators are converted and copied only if they are\n\t   not at the end of a path -- i.e. before a path separator or\n\t   NULL terminator.  */\n\telse if ((path[1+ src] != LT_PATHSEP_CHAR)\n\t\t && (path[1+ src] != LT_EOS_CHAR)\n#if defined LT_DIRSEP_CHAR\n\t\t && (path[1+ src] != LT_DIRSEP_CHAR)\n#endif\n\t\t && (path[1+ src] != '/'))\n\t  {\n\t    canonical[dest++] = '/';\n\t  }\n      }\n\n    /* Add an end-of-string marker at the end.  */\n    canonical[dest] = LT_EOS_CHAR;\n  }\n\n  /* Assign new value.  */\n  *pcanonical = canonical;\n\n  return 0;\n}\n\nstatic int\nargzize_path (const char *path, char **pargz, size_t *pargz_len)\n{\n  error_t error;\n\n  assert (path);\n  assert (pargz);\n  assert (pargz_len);\n\n  if ((error = argz_create_sep (path, LT_PATHSEP_CHAR, pargz, pargz_len)))\n    {\n      switch (error)\n\t{\n\tcase ENOMEM:\n\t  LT__SETERROR (NO_MEMORY);\n\t  break;\n\tdefault:\n\t  LT__SETERROR (UNKNOWN);\n\t  break;\n\t}\n\n      return 1;\n    }\n\n  return 0;\n}\n\n/* Repeatedly call FUNC with each LT_PATHSEP_CHAR delimited element\n   of SEARCH_PATH and references to DATA1 and DATA2, until FUNC returns\n   non-zero or all elements are exhausted.  If BASE_NAME is non-NULL,\n   it is appended to each SEARCH_PATH element before FUNC is called.  */\nstatic int\nforeach_dirinpath (const char *search_path, const char *base_name,\n\t\t   foreach_callback_func *func, void *data1, void *data2)\n{\n  int\t result\t\t= 0;\n  size_t filenamesize\t= 0;\n  size_t lenbase\t= LT_STRLEN (base_name);\n  size_t argz_len\t= 0;\n  char *argz\t\t= 0;\n  char *filename\t= 0;\n  char *canonical\t= 0;\n\n  if (!search_path || !*search_path)\n    {\n      LT__SETERROR (FILE_NOT_FOUND);\n      goto cleanup;\n    }\n\n  if (canonicalize_path (search_path, &canonical) != 0)\n    goto cleanup;\n\n  if (argzize_path (canonical, &argz, &argz_len) != 0)\n    goto cleanup;\n\n  {\n    char *dir_name = 0;\n    while ((dir_name = argz_next (argz, argz_len, dir_name)))\n      {\n\tsize_t lendir = LT_STRLEN (dir_name);\n\n\tif (1+ lendir + lenbase >= filenamesize)\n\t{\n\t  FREE (filename);\n\t  filenamesize\t= 1+ lendir + 1+ lenbase; /* \"/d\" + '/' + \"f\" + '\\0' */\n\t  filename\t= MALLOC (char, filenamesize);\n\t  if (!filename)\n\t    goto cleanup;\n\t}\n\n\tassert (filenamesize > lendir);\n\tstrcpy (filename, dir_name);\n\n\tif (base_name && *base_name)\n\t  {\n\t    if (filename[lendir -1] != '/')\n\t      filename[lendir++] = '/';\n\t    strcpy (filename +lendir, base_name);\n\t  }\n\n\tif ((result = (*func) (filename, data1, data2)))\n\t  {\n\t    break;\n\t  }\n      }\n  }\n\n cleanup:\n  FREE (argz);\n  FREE (canonical);\n  FREE (filename);\n\n  return result;\n}\n\n/* If FILEPATH can be opened, store the name of the directory component\n   in DATA1, and the opened FILE* structure address in DATA2.  Otherwise\n   DATA1 is unchanged, but DATA2 is set to a pointer to NULL.  */\nstatic int\nfind_file_callback (char *filename, void *data1, void *data2)\n{\n  char\t     **pdir\t= (char **) data1;\n  FILE\t     **pfile\t= (FILE **) data2;\n  int\t     is_done\t= 0;\n\n  assert (filename && *filename);\n  assert (pdir);\n  assert (pfile);\n\n  if ((*pfile = fopen (filename, LT_READTEXT_MODE)))\n    {\n      char *dirend = strrchr (filename, '/');\n\n      if (dirend > filename)\n\t*dirend   = LT_EOS_CHAR;\n\n      FREE (*pdir);\n      *pdir   = lt__strdup (filename);\n      is_done = (*pdir == 0) ? -1 : 1;\n    }\n\n  return is_done;\n}\n\nstatic FILE *\nfind_file (const char *search_path, const char *base_name, char **pdir)\n{\n  FILE *file = 0;\n\n  foreach_dirinpath (search_path, base_name, find_file_callback, pdir, &file);\n\n  return file;\n}\n\nstatic int\nfind_handle_callback (char *filename, void *data, void *data2)\n{\n  lt_dlhandle  *phandle\t\t= (lt_dlhandle *) data;\n  int\t\tnotfound\t= access (filename, R_OK);\n  lt_dladvise   advise\t\t= (lt_dladvise) data2;\n\n  /* Bail out if file cannot be read...  */\n  if (notfound)\n    return 0;\n\n  /* Try to dlopen the file, but do not continue searching in any\n     case.  */\n  if (tryall_dlopen (phandle, filename, advise, 0) != 0)\n    *phandle = 0;\n\n  return 1;\n}\n\n/* If HANDLE was found return it, otherwise return 0.  If HANDLE was\n   found but could not be opened, *HANDLE will be set to 0.  */\nstatic lt_dlhandle *\nfind_handle (const char *search_path, const char *base_name,\n\t     lt_dlhandle *phandle, lt_dladvise advise)\n{\n  if (!search_path)\n    return 0;\n\n  if (!foreach_dirinpath (search_path, base_name, find_handle_callback,\n\t\t\t  phandle, advise))\n    return 0;\n\n  return phandle;\n}\n\n#if !defined LTDL_DLOPEN_DEPLIBS\nstatic int\nload_deplibs (lt_dlhandle handle, char * deplibs LT__UNUSED)\n{\n  handle->depcount = 0;\n  return 0;\n}\n\n#else /* defined LTDL_DLOPEN_DEPLIBS */\nstatic int\nload_deplibs (lt_dlhandle handle, char *deplibs)\n{\n  char\t*p, *save_search_path = 0;\n  int   depcount = 0;\n  int\ti;\n  char\t**names = 0;\n  int\terrors = 0;\n\n  handle->depcount = 0;\n\n  if (!deplibs)\n    {\n      return errors;\n    }\n  ++errors;\n\n  if (user_search_path)\n    {\n      save_search_path = lt__strdup (user_search_path);\n      if (!save_search_path)\n\tgoto cleanup;\n    }\n\n  /* extract search paths and count deplibs */\n  p = deplibs;\n  while (*p)\n    {\n      if (!isspace ((unsigned char) *p))\n\t{\n\t  char *end = p+1;\n\t  while (*end && !isspace((unsigned char) *end))\n\t    {\n\t      ++end;\n\t    }\n\n\t  if (strncmp(p, \"-L\", 2) == 0 || strncmp(p, \"-R\", 2) == 0)\n\t    {\n\t      char save = *end;\n\t      *end = 0; /* set a temporary string terminator */\n\t      if (lt_dladdsearchdir(p+2))\n\t\t{\n\t\t  goto cleanup;\n\t\t}\n\t      *end = save;\n\t    }\n\t  else\n\t    {\n\t      ++depcount;\n\t    }\n\n\t  p = end;\n\t}\n      else\n\t{\n\t  ++p;\n\t}\n    }\n\n\n  if (!depcount)\n    {\n      errors = 0;\n      goto cleanup;\n    }\n\n  names = MALLOC (char *, depcount);\n  if (!names)\n    goto cleanup;\n\n  /* now only extract the actual deplibs */\n  depcount = 0;\n  p = deplibs;\n  while (*p)\n    {\n      if (isspace ((unsigned char) *p))\n\t{\n\t  ++p;\n\t}\n      else\n\t{\n\t  char *end = p+1;\n\t  while (*end && !isspace ((unsigned char) *end))\n\t    {\n\t      ++end;\n\t    }\n\n\t  if (strncmp(p, \"-L\", 2) != 0 && strncmp(p, \"-R\", 2) != 0)\n\t    {\n\t      char *name;\n\t      char save = *end;\n\t      *end = 0; /* set a temporary string terminator */\n\t      if (strncmp(p, \"-l\", 2) == 0)\n\t\t{\n\t\t  size_t name_len = 3+ /* \"lib\" */ LT_STRLEN (p + 2);\n\t\t  name = MALLOC (char, 1+ name_len);\n\t\t  if (name)\n\t\t    sprintf (name, \"lib%s\", p+2);\n\t\t}\n\t      else\n\t\tname = lt__strdup(p);\n\n\t      if (!name)\n\t\tgoto cleanup_names;\n\n\t      names[depcount++] = name;\n\t      *end = save;\n\t    }\n\t  p = end;\n\t}\n    }\n\n  /* load the deplibs (in reverse order)\n     At this stage, don't worry if the deplibs do not load correctly,\n     they may already be statically linked into the loading application\n     for instance.  There will be a more enlightening error message\n     later on if the loaded module cannot resolve all of its symbols.  */\n  if (depcount)\n    {\n      lt_dlhandle cur = handle;\n      int\tj = 0;\n\n      cur->deplibs = MALLOC (lt_dlhandle, depcount);\n      if (!cur->deplibs)\n\tgoto cleanup_names;\n\n      for (i = 0; i < depcount; ++i)\n\t{\n\t  cur->deplibs[j] = lt_dlopenext(names[depcount-1-i]);\n\t  if (cur->deplibs[j])\n\t    {\n\t      ++j;\n\t    }\n\t}\n\n      cur->depcount\t= j;\t/* Number of successfully loaded deplibs */\n      errors\t\t= 0;\n    }\n\n cleanup_names:\n  for (i = 0; i < depcount; ++i)\n    {\n      FREE (names[i]);\n    }\n\n cleanup:\n  FREE (names);\n  /* restore the old search path */\n  if (save_search_path) {\n    MEMREASSIGN (user_search_path, save_search_path);\n  }\n\n  return errors;\n}\n#endif /* defined LTDL_DLOPEN_DEPLIBS */\n\nstatic int\nunload_deplibs (lt_dlhandle handle)\n{\n  int i;\n  int errors = 0;\n  lt_dlhandle cur = handle;\n\n  if (cur->depcount)\n    {\n      for (i = 0; i < cur->depcount; ++i)\n\t{\n\t  if (!LT_DLIS_RESIDENT (cur->deplibs[i]))\n\t    {\n\t      errors += lt_dlclose (cur->deplibs[i]);\n\t    }\n\t}\n      FREE (cur->deplibs);\n    }\n\n  return errors;\n}\n\nstatic int\ntrim (char **dest, const char *str)\n{\n  /* remove the leading and trailing \"'\" from str\n     and store the result in dest */\n  const char *end   = strrchr (str, '\\'');\n  size_t len\t    = LT_STRLEN (str);\n  char *tmp;\n\n  FREE (*dest);\n\n  if (!end || end == str)\n    return 1;\n\n  if (len > 3 && str[0] == '\\'')\n    {\n      tmp = MALLOC (char, end - str);\n      if (!tmp)\n\treturn 1;\n\n      memcpy(tmp, &str[1], (end - str) - 1);\n      tmp[(end - str) - 1] = LT_EOS_CHAR;\n      *dest = tmp;\n    }\n  else\n    {\n      *dest = 0;\n    }\n\n  return 0;\n}\n\n/* Read the .la file FILE. */\nstatic int\nparse_dotla_file(FILE *file, char **dlname, char **libdir, char **deplibs,\n    char **old_name, int *installed)\n{\n  int\t\terrors = 0;\n  size_t\tline_len = LT_FILENAME_MAX;\n  char *\tline = MALLOC (char, line_len);\n\n  if (!line)\n    {\n      LT__SETERROR (FILE_NOT_FOUND);\n      return 1;\n    }\n\n  while (!feof (file))\n    {\n      line[line_len-2] = '\\0';\n      if (!fgets (line, (int) line_len, file))\n\t{\n\t  break;\n\t}\n\n      /* Handle the case where we occasionally need to read a line\n\t that is longer than the initial buffer size.\n\t Behave even if the file contains NUL bytes due to corruption. */\n      while (line[line_len-2] != '\\0' && line[line_len-2] != '\\n' && !feof (file))\n\t{\n\t  line = REALLOC (char, line, line_len *2);\n\t  if (!line)\n\t    {\n\t      ++errors;\n\t      goto cleanup;\n\t    }\n\t  line[line_len * 2 - 2] = '\\0';\n\t  if (!fgets (&line[line_len -1], (int) line_len +1, file))\n\t    {\n\t      break;\n\t    }\n\t  line_len *= 2;\n\t}\n\n      if (line[0] == '\\n' || line[0] == '#')\n\t{\n\t  continue;\n\t}\n\n#undef  STR_DLNAME\n#define STR_DLNAME\t\"dlname=\"\n      if (strncmp (line, STR_DLNAME, sizeof (STR_DLNAME) - 1) == 0)\n\t{\n\t  errors += trim (dlname, &line[sizeof (STR_DLNAME) - 1]);\n\t}\n\n#undef  STR_OLD_LIBRARY\n#define STR_OLD_LIBRARY\t\"old_library=\"\n      else if (strncmp (line, STR_OLD_LIBRARY,\n\t    sizeof (STR_OLD_LIBRARY) - 1) == 0)\n\t{\n\t  errors += trim (old_name, &line[sizeof (STR_OLD_LIBRARY) - 1]);\n\t}\n\n      /* Windows native tools do not understand the POSIX paths we store\n\t in libdir. */\n#undef  STR_LIBDIR\n#define STR_LIBDIR\t\"libdir=\"\n      else if (strncmp (line, STR_LIBDIR, sizeof (STR_LIBDIR) - 1) == 0)\n\t{\n\t  errors += trim (libdir, &line[sizeof(STR_LIBDIR) - 1]);\n#ifdef __WINDOWS__\n\t  /* Disallow following unix-style paths on MinGW.  */\n\t  if (*libdir && (**libdir == '/' || **libdir == '\\\\'))\n\t    **libdir = '\\0';\n#endif\n\t}\n\n#undef  STR_DL_DEPLIBS\n#define STR_DL_DEPLIBS\t\"dependency_libs=\"\n      else if (strncmp (line, STR_DL_DEPLIBS,\n\t    sizeof (STR_DL_DEPLIBS) - 1) == 0)\n\t{\n\t  errors += trim (deplibs, &line[sizeof (STR_DL_DEPLIBS) - 1]);\n\t}\n      else if (STREQ (line, \"installed=yes\\n\"))\n\t{\n\t  *installed = 1;\n\t}\n      else if (STREQ (line, \"installed=no\\n\"))\n\t{\n\t  *installed = 0;\n\t}\n\n#undef  STR_LIBRARY_NAMES\n#define STR_LIBRARY_NAMES \"library_names=\"\n      else if (!*dlname && strncmp (line, STR_LIBRARY_NAMES,\n\t    sizeof (STR_LIBRARY_NAMES) - 1) == 0)\n\t{\n\t  char *last_libname;\n\t  errors += trim (dlname, &line[sizeof (STR_LIBRARY_NAMES) - 1]);\n\t  if (!errors\n\t      && *dlname\n\t      && (last_libname = strrchr (*dlname, ' ')) != 0)\n\t    {\n\t      last_libname = lt__strdup (last_libname + 1);\n\t      if (!last_libname)\n\t\t{\n\t\t  ++errors;\n\t\t  goto cleanup;\n\t\t}\n\t      MEMREASSIGN (*dlname, last_libname);\n\t    }\n\t}\n\n      if (errors)\n\tbreak;\n    }\ncleanup:\n  FREE (line);\n  return errors;\n}\n\n\n/* Try to open FILENAME as a module. */\nstatic int\ntry_dlopen (lt_dlhandle *phandle, const char *filename, const char *ext,\n\t    lt_dladvise advise)\n{\n  const char *\tsaved_error\t= 0;\n  char *\tarchive_name\t= 0;\n  char *\tcanonical\t= 0;\n  char *\tbase_name\t= 0;\n  char *\tdir\t\t= 0;\n  char *\tname\t\t= 0;\n  char *        attempt\t\t= 0;\n  int\t\terrors\t\t= 0;\n  lt_dlhandle\tnewhandle;\n\n  assert (phandle);\n  assert (*phandle == 0);\n\n#ifdef LT_DEBUG_LOADERS\n  fprintf (stderr, \"try_dlopen (%s, %s)\\n\",\n\t   filename ? filename : \"(null)\",\n\t   ext ? ext : \"(null)\");\n#endif\n\n  LT__GETERROR (saved_error);\n\n  /* dlopen self? */\n  if (!filename)\n    {\n      *phandle = (lt_dlhandle) lt__zalloc (sizeof (struct lt__handle));\n      if (*phandle == 0)\n\treturn 1;\n\n      newhandle\t= *phandle;\n\n      /* lt_dlclose()ing yourself is very bad!  Disallow it.  */\n      newhandle->info.is_resident = 1;\n\n      if (tryall_dlopen (&newhandle, 0, advise, 0) != 0)\n\t{\n\t  FREE (*phandle);\n\t  return 1;\n\t}\n\n      goto register_handle;\n    }\n\n  assert (filename && *filename);\n\n  if (ext)\n    {\n      attempt = MALLOC (char, LT_STRLEN (filename) + LT_STRLEN (ext) + 1);\n      if (!attempt)\n\treturn 1;\n\n      sprintf(attempt, \"%s%s\", filename, ext);\n    }\n  else\n    {\n      attempt = lt__strdup (filename);\n      if (!attempt)\n\treturn 1;\n    }\n\n  /* Doing this immediately allows internal functions to safely\n     assume only canonicalized paths are passed.  */\n  if (canonicalize_path (attempt, &canonical) != 0)\n    {\n      ++errors;\n      goto cleanup;\n    }\n\n  /* If the canonical module name is a path (relative or absolute)\n     then split it into a directory part and a name part.  */\n  base_name = strrchr (canonical, '/');\n  if (base_name)\n    {\n      size_t dirlen = (1+ base_name) - canonical;\n\n      dir = MALLOC (char, 1+ dirlen);\n      if (!dir)\n\t{\n\t  ++errors;\n\t  goto cleanup;\n\t}\n\n      strlcpy (dir, canonical, dirlen);\n      dir[dirlen] = LT_EOS_CHAR;\n\n      ++base_name;\n    }\n  else\n    MEMREASSIGN (base_name, canonical);\n\n  assert (base_name && *base_name);\n\n  ext = strrchr (base_name, '.');\n  if (!ext)\n    {\n      ext = base_name + LT_STRLEN (base_name);\n    }\n\n  /* extract the module name from the file name */\n  name = MALLOC (char, ext - base_name + 1);\n  if (!name)\n    {\n      ++errors;\n      goto cleanup;\n    }\n\n  /* canonicalize the module name */\n  {\n    int i;\n    for (i = 0; i < ext - base_name; ++i)\n      {\n\tif (isalnum ((unsigned char)(base_name[i])))\n\t  {\n\t    name[i] = base_name[i];\n\t  }\n\telse\n\t  {\n\t    name[i] = '_';\n\t  }\n      }\n    name[ext - base_name] = LT_EOS_CHAR;\n  }\n\n  /* Before trawling through the file system in search of a module,\n     check whether we are opening a preloaded module.  */\n  if (!dir)\n    {\n      const lt_dlvtable *vtable\t= lt_dlloader_find (\"lt_preopen\");\n\n      if (vtable)\n\t{\n\t  /* libprefix + name + \".\" + libext + NULL */\n\t  archive_name = MALLOC (char, strlen (libprefix) + LT_STRLEN (name) + strlen (libext) + 2);\n\t  *phandle = (lt_dlhandle) lt__zalloc (sizeof (struct lt__handle));\n\n\t  if ((*phandle == NULL) || (archive_name == NULL))\n\t    {\n\t      ++errors;\n\t      goto cleanup;\n\t    }\n\t  newhandle = *phandle;\n\n\t  /* Preloaded modules are always named according to their old\n\t     archive name.  */\n\t  if (strncmp(name, \"lib\", 3) == 0)\n\t    {\n\t      sprintf (archive_name, \"%s%s.%s\", libprefix, name + 3, libext);\n\t    }\n\t  else\n\t    {\n\t      sprintf (archive_name, \"%s.%s\", name, libext);\n\t    }\n\n\t  if (tryall_dlopen (&newhandle, archive_name, advise, vtable) == 0)\n\t    {\n\t      goto register_handle;\n\t    }\n\n\t  /* If we're still here, there was no matching preloaded module,\n\t     so put things back as we found them, and continue searching.  */\n\t  FREE (*phandle);\n\t  newhandle = NULL;\n\t}\n    }\n\n  /* If we are allowing only preloaded modules, and we didn't find\n     anything yet, give up on the search here.  */\n  if (advise && advise->try_preload_only)\n    {\n      goto cleanup;\n    }\n\n  /* Check whether we are opening a libtool module (.la extension).  */\n  if (ext && STREQ (ext, archive_ext))\n    {\n      /* this seems to be a libtool module */\n      FILE *\tfile\t = 0;\n      char *\tdlname\t = 0;\n      char *\told_name = 0;\n      char *\tlibdir\t = 0;\n      char *\tdeplibs\t = 0;\n\n      /* if we can't find the installed flag, it is probably an\n\t installed libtool archive, produced with an old version\n\t of libtool */\n      int\tinstalled = 1;\n\n      /* Now try to open the .la file.  If there is no directory name\n\t component, try to find it first in user_search_path and then other\n\t prescribed paths.  Otherwise (or in any case if the module was not\n\t yet found) try opening just the module name as passed.  */\n      if (!dir)\n\t{\n\t  const char *search_path = user_search_path;\n\n\t  if (search_path)\n\t    file = find_file (user_search_path, base_name, &dir);\n\n\t  if (!file)\n\t    {\n\t      search_path = getenv (LTDL_SEARCHPATH_VAR);\n\t      if (search_path)\n\t\tfile = find_file (search_path, base_name, &dir);\n\t    }\n\n#if defined LT_MODULE_PATH_VAR\n\t  if (!file)\n\t    {\n\t      search_path = getenv (LT_MODULE_PATH_VAR);\n\t      if (search_path)\n\t\tfile = find_file (search_path, base_name, &dir);\n\t    }\n#endif\n#if defined LT_DLSEARCH_PATH\n\t  if (!file && *sys_dlsearch_path)\n\t    {\n\t      file = find_file (sys_dlsearch_path, base_name, &dir);\n\t    }\n#endif\n\t}\n      else\n\t{\n\t  file = fopen (attempt, LT_READTEXT_MODE);\n\t}\n\n      /* If we didn't find the file by now, it really isn't there.  Set\n\t the status flag, and bail out.  */\n      if (!file)\n\t{\n\t  LT__SETERROR (FILE_NOT_FOUND);\n\t  ++errors;\n\t  goto cleanup;\n\t}\n\n      /* read the .la file */\n      if (parse_dotla_file(file, &dlname, &libdir, &deplibs,\n\t    &old_name, &installed) != 0)\n\t++errors;\n\n      fclose (file);\n\n      /* allocate the handle */\n      *phandle = (lt_dlhandle) lt__zalloc (sizeof (struct lt__handle));\n      if (*phandle == 0)\n\t++errors;\n\n      if (errors)\n\t{\n\t  FREE (dlname);\n\t  FREE (old_name);\n\t  FREE (libdir);\n\t  FREE (deplibs);\n\t  FREE (*phandle);\n\t  goto cleanup;\n\t}\n\n      assert (*phandle);\n\n      if (load_deplibs (*phandle, deplibs) == 0)\n\t{\n\t  newhandle = *phandle;\n\t  /* find_module may replace newhandle */\n\t  if (find_module (&newhandle, dir, libdir, dlname, old_name,\n\t\t\t   installed, advise))\n\t    {\n\t      unload_deplibs (*phandle);\n\t      ++errors;\n\t    }\n\t}\n      else\n\t{\n\t  ++errors;\n\t}\n\n      FREE (dlname);\n      FREE (old_name);\n      FREE (libdir);\n      FREE (deplibs);\n\n      if (errors)\n\t{\n\t  FREE (*phandle);\n\t  goto cleanup;\n\t}\n\n      if (*phandle != newhandle)\n\t{\n\t  unload_deplibs (*phandle);\n\t}\n    }\n  else\n    {\n      /* not a libtool module */\n      *phandle = (lt_dlhandle) lt__zalloc (sizeof (struct lt__handle));\n      if (*phandle == 0)\n\t{\n\t  ++errors;\n\t  goto cleanup;\n\t}\n\n      newhandle = *phandle;\n\n      /* If the module has no directory name component, try to find it\n\t first in user_search_path and then other prescribed paths.\n\t Otherwise (or in any case if the module was not yet found) try\n\t opening just the module name as passed.  */\n      if ((dir || (!find_handle (user_search_path, base_name,\n\t\t\t\t &newhandle, advise)\n\t\t   && !find_handle (getenv (LTDL_SEARCHPATH_VAR), base_name,\n\t\t\t\t    &newhandle, advise)\n#if defined LT_MODULE_PATH_VAR\n\t\t   && !find_handle (getenv (LT_MODULE_PATH_VAR), base_name,\n\t\t\t\t    &newhandle, advise)\n#endif\n#if defined LT_DLSEARCH_PATH\n\t\t   && !find_handle (sys_dlsearch_path, base_name,\n\t\t\t\t    &newhandle, advise)\n#endif\n\t\t   )))\n\t{\n\t  if (tryall_dlopen (&newhandle, attempt, advise, 0) != 0)\n\t    {\n\t      newhandle = NULL;\n\t    }\n\t}\n\n      if (!newhandle)\n\t{\n\t  FREE (*phandle);\n\t  ++errors;\n\t  goto cleanup;\n\t}\n    }\n\n register_handle:\n  MEMREASSIGN (*phandle, newhandle);\n\n  if ((*phandle)->info.ref_count == 0)\n    {\n      (*phandle)->info.ref_count\t= 1;\n      MEMREASSIGN ((*phandle)->info.name, name);\n\n      (*phandle)->next\t= handles;\n      handles\t\t= *phandle;\n    }\n\n  LT__SETERRORSTR (saved_error);\n\n cleanup:\n  FREE (dir);\n  FREE (attempt);\n  FREE (name);\n  if (!canonical)\t\t/* was MEMREASSIGNed */\n    FREE (base_name);\n  FREE (canonical);\n  FREE (archive_name);\n\n  return errors;\n}\n\n\n/* If the last error message stored was 'FILE_NOT_FOUND', then return\n   non-zero.  */\nstatic int\nfile_not_found (void)\n{\n  const char *error = 0;\n\n  LT__GETERROR (error);\n  if (error == LT__STRERROR (FILE_NOT_FOUND))\n    return 1;\n\n  return 0;\n}\n\n\n/* Unless FILENAME already bears a suitable library extension, then\n   return 0.  */\nstatic int\nhas_library_ext (const char *filename)\n{\n  const char *\text     = 0;\n\n  assert (filename);\n\n  ext = strrchr (filename, '.');\n\n  if (ext && ((STREQ (ext, archive_ext))\n#if defined LT_MODULE_EXT\n\t     || (STREQ (ext, shlib_ext))\n#endif\n#if defined LT_SHARED_EXT\n\t     || (STREQ (ext, shared_ext))\n#endif\n    ))\n    {\n      return 1;\n    }\n\n  return 0;\n}\n\n\n/* Initialise and configure a user lt_dladvise opaque object.  */\n\nint\nlt_dladvise_init (lt_dladvise *padvise)\n{\n  lt_dladvise advise = (lt_dladvise) lt__zalloc (sizeof (struct lt__advise));\n  *padvise = advise;\n  return (advise ? 0 : 1);\n}\n\nint\nlt_dladvise_destroy (lt_dladvise *padvise)\n{\n  if (padvise)\n    FREE(*padvise);\n  return 0;\n}\n\nint\nlt_dladvise_ext (lt_dladvise *padvise)\n{\n  assert (padvise && *padvise);\n  (*padvise)->try_ext = 1;\n  return 0;\n}\n\nint\nlt_dladvise_resident (lt_dladvise *padvise)\n{\n  assert (padvise && *padvise);\n  (*padvise)->is_resident = 1;\n  return 0;\n}\n\nint\nlt_dladvise_local (lt_dladvise *padvise)\n{\n  assert (padvise && *padvise);\n  (*padvise)->is_symlocal = 1;\n  return 0;\n}\n\nint\nlt_dladvise_global (lt_dladvise *padvise)\n{\n  assert (padvise && *padvise);\n  (*padvise)->is_symglobal = 1;\n  return 0;\n}\n\nint\nlt_dladvise_preload (lt_dladvise *padvise)\n{\n  assert (padvise && *padvise);\n  (*padvise)->try_preload_only = 1;\n  return 0;\n}\n\n/* Libtool-1.5.x interface for loading a new module named FILENAME.  */\nlt_dlhandle\nlt_dlopen (const char *filename)\n{\n  return lt_dlopenadvise (filename, NULL);\n}\n\n\n/* If FILENAME has an ARCHIVE_EXT or MODULE_EXT extension, try to\n   open the FILENAME as passed.  Otherwise try appending ARCHIVE_EXT,\n   and if a file is still not found try again with MODULE_EXT appended\n   instead.  */\nlt_dlhandle\nlt_dlopenext (const char *filename)\n{\n  lt_dlhandle\thandle\t= 0;\n  lt_dladvise\tadvise;\n\n  if (!lt_dladvise_init (&advise) && !lt_dladvise_ext (&advise))\n    handle = lt_dlopenadvise (filename, advise);\n\n  lt_dladvise_destroy (&advise);\n  return handle;\n}\n\n\nlt_dlhandle\nlt_dlopenadvise (const char *filename, lt_dladvise advise)\n{\n  lt_dlhandle\thandle\t= 0;\n  int\t\terrors\t= 0;\n  const char *\tsaved_error\t= 0;\n\n  LT__GETERROR (saved_error);\n\n  /* Can't have symbols hidden and visible at the same time!  */\n  if (advise && advise->is_symlocal && advise->is_symglobal)\n    {\n      LT__SETERROR (CONFLICTING_FLAGS);\n      return 0;\n    }\n\n  if (!filename\n      || !advise\n      || !advise->try_ext\n      || has_library_ext (filename))\n    {\n      /* Just incase we missed a code path in try_dlopen() that reports\n\t an error, but forgot to reset handle... */\n      if (try_dlopen (&handle, filename, NULL, advise) != 0)\n\treturn 0;\n\n      return handle;\n    }\n  else if (filename && *filename)\n    {\n\n      /* First try appending ARCHIVE_EXT.  */\n      errors += try_dlopen (&handle, filename, archive_ext, advise);\n\n      /* If we found FILENAME, stop searching -- whether we were able to\n\t load the file as a module or not.  If the file exists but loading\n\t failed, it is better to return an error message here than to\n\t report FILE_NOT_FOUND when the alternatives (foo.so etc) are not\n\t in the module search path.  */\n      if (handle || ((errors > 0) && !file_not_found ()))\n\treturn handle;\n\n#if defined LT_MODULE_EXT\n      /* Try appending SHLIB_EXT.   */\n      LT__SETERRORSTR (saved_error);\n      errors = try_dlopen (&handle, filename, shlib_ext, advise);\n\n      /* As before, if the file was found but loading failed, return now\n\t with the current error message.  */\n      if (handle || ((errors > 0) && !file_not_found ()))\n\treturn handle;\n#endif\n\n#if defined LT_SHARED_EXT\n      /* Try appending SHARED_EXT.   */\n      LT__SETERRORSTR (saved_error);\n      errors = try_dlopen (&handle, filename, shared_ext, advise);\n\n      /* As before, if the file was found but loading failed, return now\n\t with the current error message.  */\n      if (handle || ((errors > 0) && !file_not_found ()))\n\treturn handle;\n#endif\n    }\n\n  /* Still here?  Then we really did fail to locate any of the file\n     names we tried.  */\n  LT__SETERROR (FILE_NOT_FOUND);\n  return 0;\n}\n\n\nstatic int\nlt_argz_insert (char **pargz, size_t *pargz_len, char *before,\n\t\tconst char *entry)\n{\n  error_t error;\n\n  /* Prior to Sep 8, 2005, newlib had a bug where argz_insert(pargz,\n     pargz_len, NULL, entry) failed with EINVAL.  */\n  if (before)\n    error = argz_insert (pargz, pargz_len, before, entry);\n  else\n    error = argz_append (pargz, pargz_len, entry, 1 + strlen (entry));\n\n  if (error)\n    {\n      switch (error)\n\t{\n\tcase ENOMEM:\n\t  LT__SETERROR (NO_MEMORY);\n\t  break;\n\tdefault:\n\t  LT__SETERROR (UNKNOWN);\n\t  break;\n\t}\n      return 1;\n    }\n\n  return 0;\n}\n\nstatic int\nlt_argz_insertinorder (char **pargz, size_t *pargz_len, const char *entry)\n{\n  char *before = 0;\n\n  assert (pargz);\n  assert (pargz_len);\n  assert (entry && *entry);\n\n  if (*pargz)\n    while ((before = argz_next (*pargz, *pargz_len, before)))\n      {\n\tint cmp = strcmp (entry, before);\n\n\tif (cmp < 0)  break;\n\tif (cmp == 0) return 0;\t/* No duplicates! */\n      }\n\n  return lt_argz_insert (pargz, pargz_len, before, entry);\n}\n\nstatic int\nlt_argz_insertdir (char **pargz, size_t *pargz_len, const char *dirnam,\n\t\t   struct dirent *dp)\n{\n  char   *buf\t    = 0;\n  size_t buf_len    = 0;\n  char   *end\t    = 0;\n  size_t end_offset = 0;\n  size_t dir_len    = 0;\n  int    errors\t    = 0;\n\n  assert (pargz);\n  assert (pargz_len);\n  assert (dp);\n\n  dir_len = LT_STRLEN (dirnam);\n  end     = dp->d_name + D_NAMLEN(dp);\n\n  /* Ignore version numbers.  */\n  {\n    char *p;\n    for (p = end; p -1 > dp->d_name; --p)\n      if (strchr (\".0123456789\", p[-1]) == 0)\n\tbreak;\n\n    if (*p == '.')\n      end = p;\n  }\n\n  /* Ignore filename extension.  */\n  {\n    char *p;\n    for (p = end -1; p > dp->d_name; --p)\n      if (*p == '.')\n\t{\n\t  end = p;\n\t  break;\n\t}\n  }\n\n  /* Prepend the directory name.  */\n  end_offset\t= end - dp->d_name;\n  buf_len\t= dir_len + 1+ end_offset;\n  buf\t\t= MALLOC (char, 1+ buf_len);\n  if (!buf)\n    return ++errors;\n\n  assert (buf);\n\n  strcpy  (buf, dirnam);\n  strcat  (buf, \"/\");\n  strncat (buf, dp->d_name, end_offset);\n  buf[buf_len] = LT_EOS_CHAR;\n\n  /* Try to insert (in order) into ARGZ/ARGZ_LEN.  */\n  if (lt_argz_insertinorder (pargz, pargz_len, buf) != 0)\n    ++errors;\n\n  FREE (buf);\n\n  return errors;\n}\n\nstatic int\nlist_files_by_dir (const char *dirnam, char **pargz, size_t *pargz_len)\n{\n  DIR\t*dirp\t  = 0;\n  int    errors\t  = 0;\n\n  assert (dirnam && *dirnam);\n  assert (pargz);\n  assert (pargz_len);\n  assert (dirnam[LT_STRLEN(dirnam) -1] != '/');\n\n  dirp = opendir (dirnam);\n  if (dirp)\n    {\n      struct dirent *dp\t= 0;\n\n      while ((dp = readdir (dirp)))\n\tif (dp->d_name[0] != '.')\n\t  if (lt_argz_insertdir (pargz, pargz_len, dirnam, dp))\n\t    {\n\t      ++errors;\n\t      break;\n\t    }\n\n      closedir (dirp);\n    }\n  else\n    ++errors;\n\n  return errors;\n}\n\n\n/* If there are any files in DIRNAME, call the function passed in\n   DATA1 (with the name of each file and DATA2 as arguments).  */\nstatic int\nforeachfile_callback (char *dirname, void *data1, void *data2)\n{\n  file_worker_func *func = *(file_worker_func **) data1;\n\n  int\t  is_done  = 0;\n  char   *argz     = 0;\n  size_t  argz_len = 0;\n\n  if (list_files_by_dir (dirname, &argz, &argz_len) != 0)\n    goto cleanup;\n  if (!argz)\n    goto cleanup;\n\n  {\n    char *filename = 0;\n    while ((filename = argz_next (argz, argz_len, filename)))\n      if ((is_done = (*func) (filename, data2)))\n\tbreak;\n  }\n\n cleanup:\n  FREE (argz);\n\n  return is_done;\n}\n\n\n/* Call FUNC for each unique extensionless file in SEARCH_PATH, along\n   with DATA.  The filenames passed to FUNC would be suitable for\n   passing to lt_dlopenext.  The extensions are stripped so that\n   individual modules do not generate several entries (e.g. libfoo.la,\n   libfoo.so, libfoo.so.1, libfoo.so.1.0.0).  If SEARCH_PATH is NULL,\n   then the same directories that lt_dlopen would search are examined.  */\nint\nlt_dlforeachfile (const char *search_path,\n\t\t  int (*func) (const char *filename, void *data),\n\t\t  void *data)\n{\n  int is_done = 0;\n  file_worker_func **fpptr = &func;\n\n  if (search_path)\n    {\n      /* If a specific path was passed, search only the directories\n\t listed in it.  */\n      is_done = foreach_dirinpath (search_path, 0,\n\t\t\t\t   foreachfile_callback, fpptr, data);\n    }\n  else\n    {\n      /* Otherwise search the default paths.  */\n      is_done = foreach_dirinpath (user_search_path, 0,\n\t\t\t\t   foreachfile_callback, fpptr, data);\n      if (!is_done)\n\t{\n\t  is_done = foreach_dirinpath (getenv(LTDL_SEARCHPATH_VAR), 0,\n\t\t\t\t       foreachfile_callback, fpptr, data);\n\t}\n\n#if defined LT_MODULE_PATH_VAR\n      if (!is_done)\n\t{\n\t  is_done = foreach_dirinpath (getenv(LT_MODULE_PATH_VAR), 0,\n\t\t\t\t       foreachfile_callback, fpptr, data);\n\t}\n#endif\n#if defined LT_DLSEARCH_PATH\n      if (!is_done && *sys_dlsearch_path)\n\t{\n\t  is_done = foreach_dirinpath (sys_dlsearch_path, 0,\n\t\t\t\t       foreachfile_callback, fpptr, data);\n\t}\n#endif\n    }\n\n  return is_done;\n}\n\nint\nlt_dlclose (lt_dlhandle handle)\n{\n  lt_dlhandle cur, last;\n  int errors = 0;\n\n  /* check whether the handle is valid */\n  last = cur = handles;\n  while (cur && handle != cur)\n    {\n      last = cur;\n      cur = cur->next;\n    }\n\n  if (!cur)\n    {\n      LT__SETERROR (INVALID_HANDLE);\n      ++errors;\n      goto done;\n    }\n\n  cur = handle;\n  cur->info.ref_count--;\n\n  /* Note that even with resident modules, we must track the ref_count\n     correctly incase the user decides to reset the residency flag\n     later (even though the API makes no provision for that at the\n     moment).  */\n  if (cur->info.ref_count <= 0 && !LT_DLIS_RESIDENT (cur))\n    {\n      lt_user_data data = cur->vtable->dlloader_data;\n\n      if (cur != handles)\n\t{\n\t  last->next = cur->next;\n\t}\n      else\n\t{\n\t  handles = cur->next;\n\t}\n\n      errors += cur->vtable->module_close (data, cur->module);\n      errors += unload_deplibs (handle);\n\n      /* It is up to the callers to free the data itself.  */\n      FREE (cur->interface_data);\n\n      FREE (cur->info.filename);\n      FREE (cur->info.name);\n      FREE (cur);\n\n      goto done;\n    }\n\n  if (LT_DLIS_RESIDENT (handle))\n    {\n      LT__SETERROR (CLOSE_RESIDENT_MODULE);\n      ++errors;\n    }\n\n done:\n  return errors;\n}\n\nvoid *\nlt_dlsym (lt_dlhandle place, const char *symbol)\n{\n  size_t lensym;\n  char\tlsym[LT_SYMBOL_LENGTH];\n  char\t*sym;\n  void *address;\n  lt_user_data data;\n  lt_dlhandle handle;\n\n  if (!place)\n    {\n      LT__SETERROR (INVALID_HANDLE);\n      return 0;\n    }\n\n  handle = place;\n\n  if (!symbol)\n    {\n      LT__SETERROR (SYMBOL_NOT_FOUND);\n      return 0;\n    }\n\n  lensym = LT_STRLEN (symbol) + LT_STRLEN (handle->vtable->sym_prefix)\n\t\t\t\t\t+ LT_STRLEN (handle->info.name);\n\n  if (lensym + LT_SYMBOL_OVERHEAD < LT_SYMBOL_LENGTH)\n    {\n      sym = lsym;\n    }\n  else\n    {\n      sym = MALLOC (char, lensym + LT_SYMBOL_OVERHEAD + 1);\n      if (!sym)\n\t{\n\t  LT__SETERROR (BUFFER_OVERFLOW);\n\t  return 0;\n\t}\n    }\n\n  data = handle->vtable->dlloader_data;\n  if (handle->info.name)\n    {\n      const char *saved_error;\n\n      LT__GETERROR (saved_error);\n\n      /* this is a libtool module */\n      if (handle->vtable->sym_prefix)\n\t{\n\t  strcpy(sym, handle->vtable->sym_prefix);\n\t  strcat(sym, handle->info.name);\n\t}\n      else\n\t{\n\t  strcpy(sym, handle->info.name);\n\t}\n\n      strcat(sym, \"_LTX_\");\n      strcat(sym, symbol);\n\n      /* try \"modulename_LTX_symbol\" */\n      address = handle->vtable->find_sym (data, handle->module, sym);\n      if (address)\n\t{\n\t  if (sym != lsym)\n\t    {\n\t      FREE (sym);\n\t    }\n\t  return address;\n\t}\n      LT__SETERRORSTR (saved_error);\n    }\n\n  /* otherwise try \"symbol\" */\n  if (handle->vtable->sym_prefix)\n    {\n      strcpy(sym, handle->vtable->sym_prefix);\n      strcat(sym, symbol);\n    }\n  else\n    {\n      strcpy(sym, symbol);\n    }\n\n  address = handle->vtable->find_sym (data, handle->module, sym);\n  if (sym != lsym)\n    {\n      FREE (sym);\n    }\n\n  return address;\n}\n\nconst char *\nlt_dlerror (void)\n{\n  const char *error;\n\n  LT__GETERROR (error);\n  LT__SETERRORSTR (0);\n\n  return error;\n}\n\nstatic int\nlt_dlpath_insertdir (char **ppath, char *before, const char *dir)\n{\n  int    errors\t\t= 0;\n  char  *canonical\t= 0;\n  char  *argz\t\t= 0;\n  size_t argz_len\t= 0;\n\n  assert (ppath);\n  assert (dir && *dir);\n\n  if (canonicalize_path (dir, &canonical) != 0)\n    {\n      ++errors;\n      goto cleanup;\n    }\n\n  assert (canonical && *canonical);\n\n  /* If *PPATH is empty, set it to DIR.  */\n  if (*ppath == 0)\n    {\n      assert (!before);\t\t/* BEFORE cannot be set without PPATH.  */\n      assert (dir);\t\t/* Without DIR, don't call this function!  */\n\n      *ppath = lt__strdup (dir);\n      if (*ppath == 0)\n\t++errors;\n\n      goto cleanup;\n    }\n\n  assert (ppath && *ppath);\n\n  if (argzize_path (*ppath, &argz, &argz_len) != 0)\n    {\n      ++errors;\n      goto cleanup;\n    }\n\n  /* Convert BEFORE into an equivalent offset into ARGZ.  This only works\n     if *PPATH is already canonicalized, and hence does not change length\n     with respect to ARGZ.  We canonicalize each entry as it is added to\n     the search path, and don't call this function with (uncanonicalized)\n     user paths, so this is a fair assumption.  */\n  if (before)\n    {\n      assert (*ppath <= before);\n      assert ((int) (before - *ppath) <= (int) strlen (*ppath));\n\n      before = before - *ppath + argz;\n    }\n\n  if (lt_argz_insert (&argz, &argz_len, before, dir) != 0)\n    {\n      ++errors;\n      goto cleanup;\n    }\n\n  argz_stringify (argz, argz_len, LT_PATHSEP_CHAR);\n  MEMREASSIGN(*ppath, argz);\n\n cleanup:\n  FREE (argz);\n  FREE (canonical);\n\n  return errors;\n}\n\nint\nlt_dladdsearchdir (const char *search_dir)\n{\n  int errors = 0;\n\n  if (search_dir && *search_dir)\n    {\n      if (lt_dlpath_insertdir (&user_search_path, 0, search_dir) != 0)\n\t++errors;\n    }\n\n  return errors;\n}\n\nint\nlt_dlinsertsearchdir (const char *before, const char *search_dir)\n{\n  int errors = 0;\n\n  if (before)\n    {\n      if ((before < user_search_path)\n\t  || (before >= user_search_path + LT_STRLEN (user_search_path)))\n\t{\n\t  LT__SETERROR (INVALID_POSITION);\n\t  return 1;\n\t}\n    }\n\n  if (search_dir && *search_dir)\n    {\n      if (lt_dlpath_insertdir (&user_search_path,\n\t\t\t       (char *) before, search_dir) != 0)\n\t{\n\t  ++errors;\n\t}\n    }\n\n  return errors;\n}\n\nint\nlt_dlsetsearchpath (const char *search_path)\n{\n  int   errors\t    = 0;\n\n  FREE (user_search_path);\n\n  if (!search_path || !LT_STRLEN (search_path))\n    {\n      return errors;\n    }\n\n  if (canonicalize_path (search_path, &user_search_path) != 0)\n    ++errors;\n\n  return errors;\n}\n\nconst char *\nlt_dlgetsearchpath (void)\n{\n  const char *saved_path;\n\n  saved_path = user_search_path;\n\n  return saved_path;\n}\n\nint\nlt_dlmakeresident (lt_dlhandle handle)\n{\n  int errors = 0;\n\n  if (!handle)\n    {\n      LT__SETERROR (INVALID_HANDLE);\n      ++errors;\n    }\n  else\n    {\n      handle->info.is_resident = 1;\n    }\n\n  return errors;\n}\n\nint\nlt_dlisresident\t(lt_dlhandle handle)\n{\n  if (!handle)\n    {\n      LT__SETERROR (INVALID_HANDLE);\n      return -1;\n    }\n\n  return LT_DLIS_RESIDENT (handle);\n}\n\n\n\n/* --- MODULE INFORMATION --- */\n\ntypedef struct {\n  char *id_string;\n  lt_dlhandle_interface *iface;\n} lt__interface_id;\n\nlt_dlinterface_id\nlt_dlinterface_register (const char *id_string, lt_dlhandle_interface *iface)\n{\n  lt__interface_id *interface_id = (lt__interface_id *) lt__malloc (sizeof *interface_id);\n\n  /* If lt__malloc fails, it will LT__SETERROR (NO_MEMORY), which\n     can then be detected with lt_dlerror() if we return 0.  */\n  if (interface_id)\n    {\n      interface_id->id_string = lt__strdup (id_string);\n      if (!interface_id->id_string)\n\tFREE (interface_id);\n      else\n\tinterface_id->iface = iface;\n    }\n\n  return (lt_dlinterface_id) interface_id;\n}\n\nvoid lt_dlinterface_free (lt_dlinterface_id key)\n{\n  lt__interface_id *interface_id = (lt__interface_id *)key;\n  FREE (interface_id->id_string);\n  FREE (interface_id);\n}\n\nvoid *\nlt_dlcaller_set_data (lt_dlinterface_id key, lt_dlhandle handle, void *data)\n{\n  int n_elements = 0;\n  void *stale = (void *) 0;\n  lt_dlhandle cur = handle;\n  int i;\n\n  if (cur->interface_data)\n    while (cur->interface_data[n_elements].key)\n      ++n_elements;\n\n  for (i = 0; i < n_elements; ++i)\n    {\n      if (cur->interface_data[i].key == key)\n\t{\n\t  stale = cur->interface_data[i].data;\n\t  break;\n\t}\n    }\n\n  /* Ensure that there is enough room in this handle's interface_data\n     array to accept a new element (and an empty end marker).  */\n  if (i == n_elements)\n    {\n      lt_interface_data *temp\n\t= REALLOC (lt_interface_data, cur->interface_data, 2+ n_elements);\n\n      if (!temp)\n\t{\n\t  stale = 0;\n\t  goto done;\n\t}\n\n      cur->interface_data = temp;\n\n      /* We only need this if we needed to allocate a new interface_data.  */\n      cur->interface_data[i].key\t= key;\n      cur->interface_data[1+ i].key\t= 0;\n    }\n\n  cur->interface_data[i].data = data;\n\n done:\n  return stale;\n}\n\nvoid *\nlt_dlcaller_get_data (lt_dlinterface_id key, lt_dlhandle handle)\n{\n  void *result = (void *) 0;\n  lt_dlhandle cur = handle;\n\n  /* Locate the index of the element with a matching KEY.  */\n  if (cur->interface_data)\n    {\n      int i;\n      for (i = 0; cur->interface_data[i].key; ++i)\n\t{\n\t  if (cur->interface_data[i].key == key)\n\t    {\n\t      result = cur->interface_data[i].data;\n\t      break;\n\t    }\n\t}\n    }\n\n  return result;\n}\n\nconst lt_dlinfo *\nlt_dlgetinfo (lt_dlhandle handle)\n{\n  if (!handle)\n    {\n      LT__SETERROR (INVALID_HANDLE);\n      return 0;\n    }\n\n  return &(handle->info);\n}\n\n\nlt_dlhandle\nlt_dlhandle_iterate (lt_dlinterface_id iface, lt_dlhandle place)\n{\n  lt_dlhandle handle = place;\n  lt__interface_id *iterator = (lt__interface_id *) iface;\n\n  assert (iface); /* iface is a required argument */\n\n  if (!handle)\n    handle = handles;\n  else\n    handle = handle->next;\n\n  /* advance while the interface check fails */\n  while (handle && iterator->iface\n\t && ((*iterator->iface) (handle, iterator->id_string) != 0))\n    {\n      handle = handle->next;\n    }\n\n  return handle;\n}\n\n\nlt_dlhandle\nlt_dlhandle_fetch (lt_dlinterface_id iface, const char *module_name)\n{\n  lt_dlhandle handle = 0;\n\n  assert (iface); /* iface is a required argument */\n\n  while ((handle = lt_dlhandle_iterate (iface, handle)))\n    {\n      lt_dlhandle cur = handle;\n      if (cur && cur->info.name && STREQ (cur->info.name, module_name))\n\tbreak;\n    }\n\n  return handle;\n}\n\n\nint\nlt_dlhandle_map (lt_dlinterface_id iface,\n\t\t int (*func) (lt_dlhandle handle, void *data), void *data)\n{\n  lt__interface_id *iterator = (lt__interface_id *) iface;\n  lt_dlhandle cur = handles;\n\n  assert (iface); /* iface is a required argument */\n\n  while (cur)\n    {\n      int errorcode = 0;\n\n      /* advance while the interface check fails */\n      while (cur && iterator->iface\n\t     && ((*iterator->iface) (cur, iterator->id_string) != 0))\n\t{\n\t  cur = cur->next;\n\t}\n\n      if ((errorcode = (*func) (cur, data)) != 0)\n\treturn errorcode;\n    }\n\n  return 0;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/libltdl/loaders/dyld.c": "/* loader-dyld.c -- dynamic linking on darwin and OS X\n\n   Copyright (C) 1998-2000, 2004, 2006-2008, 2011-2019 Free Software\n   Foundation, Inc.\n   Written by Peter O'Gorman, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_dlloader.h\"\n\n/* Use the preprocessor to rename non-static symbols to avoid namespace\n   collisions when the loader code is statically linked into libltdl.\n   Use the \"<module_name>_LTX_\" prefix so that the symbol addresses can\n   be fetched from the preloaded symbol list by lt_dlsym():  */\n#define get_vtable\tdyld_LTX_get_vtable\n\nLT_BEGIN_C_DECLS\nLT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);\nLT_END_C_DECLS\n\n\n/* Boilerplate code to set up the vtable for hooking this loader into\n   libltdl's loader list:  */\nstatic int\t vl_init  (lt_user_data loader_data);\nstatic int\t vl_exit  (lt_user_data loader_data);\nstatic lt_module vm_open  (lt_user_data loader_data, const char *filename,\n                           lt_dladvise advise);\nstatic int\t vm_close (lt_user_data loader_data, lt_module module);\nstatic void *\t vm_sym   (lt_user_data loader_data, lt_module module,\n\t\t\t  const char *symbolname);\n\nstatic lt_dlvtable *vtable = 0;\n\n/* Return the vtable for this loader, only the name and sym_prefix\n   attributes (plus the virtual function implementations, obviously)\n   change between loaders.  */\nlt_dlvtable *\nget_vtable (lt_user_data loader_data)\n{\n  if (!vtable)\n    {\n      vtable = lt__zalloc (sizeof *vtable);\n    }\n\n  if (vtable && !vtable->name)\n    {\n      vtable->name\t\t= \"lt_dyld\";\n      vtable->sym_prefix\t= \"_\";\n      vtable->dlloader_init\t= vl_init;\n      vtable->module_open\t= vm_open;\n      vtable->module_close\t= vm_close;\n      vtable->find_sym\t\t= vm_sym;\n      vtable->dlloader_exit\t= vl_exit;\n      vtable->dlloader_data\t= loader_data;\n      vtable->priority\t\t= LT_DLLOADER_APPEND;\n    }\n\n  if (vtable && (vtable->dlloader_data != loader_data))\n    {\n      LT__SETERROR (INIT_LOADER);\n      return 0;\n    }\n\n  return vtable;\n}\n\n\n\n/* --- IMPLEMENTATION --- */\n\n\n#if defined HAVE_MACH_O_DYLD_H\n#  if !defined __APPLE_CC__ && !defined __MWERKS__ && !defined __private_extern__\n  /* Is this correct? Does it still function properly? */\n#    define __private_extern__ extern\n#  endif\n#  include <mach-o/dyld.h>\n#endif\n\n#include <mach-o/getsect.h>\n\n/* We have to put some stuff here that isn't in older dyld.h files */\n#if !defined ENUM_DYLD_BOOL\n# define ENUM_DYLD_BOOL\n# undef FALSE\n# undef TRUE\n enum DYLD_BOOL {\n    FALSE,\n    TRUE\n };\n#endif\n#if !defined LC_REQ_DYLD\n# define LC_REQ_DYLD 0x80000000\n#endif\n#if !defined LC_LOAD_WEAK_DYLIB\n# define LC_LOAD_WEAK_DYLIB (0x18 | LC_REQ_DYLD)\n#endif\n\n#if !defined NSADDIMAGE_OPTION_NONE\n#  define NSADDIMAGE_OPTION_NONE                          0x0\n#endif\n#if !defined NSADDIMAGE_OPTION_RETURN_ON_ERROR\n#  define NSADDIMAGE_OPTION_RETURN_ON_ERROR               0x1\n#endif\n#if !defined NSADDIMAGE_OPTION_WITH_SEARCHING\n#  define NSADDIMAGE_OPTION_WITH_SEARCHING                0x2\n#endif\n#if !defined NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED\n#  define NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED         0x4\n#endif\n#if !defined NSADDIMAGE_OPTION_MATCH_FILENAME_BY_INSTALLNAME\n#  define NSADDIMAGE_OPTION_MATCH_FILENAME_BY_INSTALLNAME 0x8\n#endif\n\n#if !defined NSLOOKUPSYMBOLINIMAGE_OPTION_BIND\n#  define NSLOOKUPSYMBOLINIMAGE_OPTION_BIND               0x0\n#endif\n#if !defined NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW\n#  define NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW           0x1\n#endif\n#if !defined NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_FULLY\n#  define NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_FULLY         0x2\n#endif\n#if !defined NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR\n#  define NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR    0x4\n#endif\n\n#define LT__SYMLOOKUP_OPTS\t(NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW \\\n\t\t\t\t| NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR)\n\n#if defined __BIG_ENDIAN__\n#  define LT__MAGIC\tMH_MAGIC\n#else\n#  define LT__MAGIC\tMH_CIGAM\n#endif\n\n#define DYLD__SETMYERROR(errmsg)    LT__SETERRORSTR (dylderror (errmsg))\n#define DYLD__SETERROR(errcode)\t    DYLD__SETMYERROR (LT__STRERROR (errcode))\n\ntypedef struct mach_header mach_header;\ntypedef struct dylib_command dylib_command;\n\nstatic const char *dylderror (const char *errmsg);\nstatic const mach_header *lt__nsmodule_get_header (NSModule module);\nstatic const char *lt__header_get_instnam (const mach_header *mh);\nstatic const mach_header *lt__match_loadedlib (const char *name);\nstatic NSSymbol lt__linkedlib_symbol (const char *symname, const mach_header *mh);\n\nstatic const mach_header *(*lt__addimage)\t(const char *image_name,\n\t\t\t\t\t\t unsigned long options) = 0;\nstatic NSSymbol\t(*lt__image_symbol)\t\t(const mach_header *image,\n\t\t\t\t\t\t const char *symbolName,\n\t\t\t\t\t\t unsigned long options) = 0;\nstatic enum DYLD_BOOL (*lt__image_symbol_p)\t(const mach_header *image,\n\t\t\t\t\t\t const char *symbolName) = 0;\nstatic enum DYLD_BOOL (*lt__module_export)\t(NSModule module) = 0;\n\nstatic int dyld_cannot_close\t\t\t\t  = 0;\n\n\n/* A function called through the vtable when this loader is no\n   longer needed by the application.  */\nstatic int\nvl_exit (lt_user_data loader_data LT__UNUSED)\n{\n  vtable = NULL;\n  return 0;\n}\n\n/* A function called through the vtable to initialise this loader.  */\nstatic int\nvl_init (lt_user_data loader_data)\n{\n  int errors = 0;\n\n  if (! dyld_cannot_close)\n    {\n      if (!_dyld_present ())\n\t{\n\t  ++errors;\n\t}\n      else\n\t{\n\t  (void) _dyld_func_lookup (\"__dyld_NSAddImage\",\n\t\t\t\t    (unsigned long*) &lt__addimage);\n\t  (void) _dyld_func_lookup (\"__dyld_NSLookupSymbolInImage\",\n\t\t\t\t    (unsigned long*)&lt__image_symbol);\n\t  (void) _dyld_func_lookup (\"__dyld_NSIsSymbolNameDefinedInImage\",\n\t\t\t\t    (unsigned long*) &lt__image_symbol_p);\n\t  (void) _dyld_func_lookup (\"__dyld_NSMakePrivateModulePublic\",\n\t\t\t\t    (unsigned long*) &lt__module_export);\n\t  dyld_cannot_close = lt_dladderror (\"can't close a dylib\");\n\t}\n    }\n\n  return errors;\n}\n\n\n/* A function called through the vtable to open a module with this\n   loader.  Returns an opaque representation of the newly opened\n   module for processing with this loader's other vtable functions.  */\nstatic lt_module\nvm_open (lt_user_data loader_data, const char *filename,\n         lt_dladvise advise LT__UNUSED)\n{\n  lt_module module = 0;\n  NSObjectFileImage ofi = 0;\n\n  if (!filename)\n    {\n      return (lt_module) -1;\n    }\n\n  switch (NSCreateObjectFileImageFromFile (filename, &ofi))\n    {\n    case NSObjectFileImageSuccess:\n      module = NSLinkModule (ofi, filename, NSLINKMODULE_OPTION_RETURN_ON_ERROR\n\t\t\t\t\t    | NSLINKMODULE_OPTION_PRIVATE\n\t\t\t\t\t    | NSLINKMODULE_OPTION_BINDNOW);\n      NSDestroyObjectFileImage (ofi);\n\n      if (module)\n\t{\n\t  lt__module_export (module);\n\t}\n      break;\n\n    case NSObjectFileImageInappropriateFile:\n      if (lt__image_symbol_p && lt__image_symbol)\n\t{\n\t  module = (lt_module) lt__addimage(filename,\n\t\t\t\t\t    NSADDIMAGE_OPTION_RETURN_ON_ERROR);\n\t}\n      break;\n\n    case NSObjectFileImageFailure:\n    case NSObjectFileImageArch:\n    case NSObjectFileImageFormat:\n    case NSObjectFileImageAccess:\n      /*NOWORK*/\n      break;\n    }\n\n  if (!module)\n    {\n      DYLD__SETERROR (CANNOT_OPEN);\n    }\n\n  return module;\n}\n\n\n/* A function called through the vtable when a particular module\n   should be unloaded.  */\nstatic int\nvm_close (lt_user_data loader_data, lt_module module)\n{\n  int errors = 0;\n\n  if (module != (lt_module) -1)\n    {\n      const mach_header *mh = (const mach_header *) module;\n      int flags = 0;\n      if (mh->magic == LT__MAGIC)\n\t{\n\t  lt_dlseterror (dyld_cannot_close);\n\t  ++errors;\n\t}\n      else\n\t{\n\t  /* Currently, if a module contains c++ static destructors and it\n\t     is unloaded, we get a segfault in atexit(), due to compiler and\n\t     dynamic loader differences of opinion, this works around that.  */\n\t  if ((const struct section *) NULL !=\n\t      getsectbynamefromheader (lt__nsmodule_get_header (module),\n\t\t\t\t       \"__DATA\", \"__mod_term_func\"))\n\t    {\n\t      flags |= NSUNLINKMODULE_OPTION_KEEP_MEMORY_MAPPED;\n\t    }\n#if defined __ppc__\n\t  flags |= NSUNLINKMODULE_OPTION_RESET_LAZY_REFERENCES;\n#endif\n\t  if (!NSUnLinkModule (module, flags))\n\t    {\n\t      DYLD__SETERROR (CANNOT_CLOSE);\n\t      ++errors;\n\t    }\n\t}\n    }\n\n  return errors;\n}\n\n/* A function called through the vtable to get the address of\n   a symbol loaded from a particular module.  */\nstatic void *\nvm_sym (lt_user_data loader_data, lt_module module, const char *name)\n{\n  NSSymbol *nssym = 0;\n  const mach_header *mh = (const mach_header *) module;\n  char saveError[256] = \"Symbol not found\";\n\n  if (module == (lt_module) -1)\n    {\n      void *address, *unused;\n      _dyld_lookup_and_bind (name, (unsigned long*) &address, &unused);\n      return address;\n    }\n\n  if (mh->magic == LT__MAGIC)\n    {\n      if (lt__image_symbol_p && lt__image_symbol)\n\t{\n\t  if (lt__image_symbol_p (mh, name))\n\t    {\n\t      nssym = lt__image_symbol (mh, name, LT__SYMLOOKUP_OPTS);\n\t    }\n\t}\n\n    }\n  else\n    {\n      nssym = NSLookupSymbolInModule (module, name);\n    }\n\n  if (!nssym)\n    {\n      strlcpy (saveError, dylderror (LT__STRERROR (SYMBOL_NOT_FOUND)), 255);\n      saveError[255] = 0;\n      if (!mh)\n\t{\n\t  mh = (mach_header *)lt__nsmodule_get_header (module);\n\t}\n      nssym = lt__linkedlib_symbol (name, mh);\n    }\n\n  if (!nssym)\n    {\n      LT__SETERRORSTR (saveError);\n    }\n\n  return nssym ? NSAddressOfSymbol (nssym) : 0;\n}\n\n\n\n\n/* --- HELPER FUNCTIONS --- */\n\n\n/* Return the dyld error string, or the passed in error string if none. */\nstatic const char *\ndylderror (const char *errmsg)\n{\n  NSLinkEditErrors ler;\n  int lerno;\n  const char *file;\n  const char *errstr;\n\n  NSLinkEditError (&ler, &lerno, &file, &errstr);\n\n  if (! (errstr && *errstr))\n    {\n      errstr = errmsg;\n    }\n\n  return errstr;\n}\n\n/* There should probably be an apple dyld api for this. */\nstatic const mach_header *\nlt__nsmodule_get_header (NSModule module)\n{\n  int i = _dyld_image_count();\n  const char *modname = NSNameOfModule (module);\n  const mach_header *mh = 0;\n\n  if (!modname)\n    return NULL;\n\n  while (i > 0)\n    {\n      --i;\n      if (strneq (_dyld_get_image_name (i), modname))\n\t{\n\t  mh = _dyld_get_image_header (i);\n\t  break;\n\t}\n    }\n\n  return mh;\n}\n\n/* NSAddImage is also used to get the loaded image, but it only works if\n   the lib is installed, for uninstalled libs we need to check the\n   install_names against each other.  Note that this is still broken if\n   DYLD_IMAGE_SUFFIX is set and a different lib was loaded as a result.  */\nstatic const char *\nlt__header_get_instnam (const mach_header *mh)\n{\n  unsigned long offset = sizeof(mach_header);\n  const char* result   = 0;\n  int j;\n\n  for (j = 0; j < mh->ncmds; j++)\n    {\n      struct load_command *lc;\n\n      lc = (struct load_command*) (((unsigned long) mh) + offset);\n      if (LC_ID_DYLIB == lc->cmd)\n\t{\n\t  result=(char*)(((dylib_command*) lc)->dylib.name.offset +\n\t\t\t (unsigned long) lc);\n\t}\n      offset += lc->cmdsize;\n    }\n\n  return result;\n}\n\nstatic const mach_header *\nlt__match_loadedlib (const char *name)\n{\n  const mach_header *mh\t= 0;\n  int i = _dyld_image_count();\n\n  while (i > 0)\n    {\n      const char *id;\n\n      --i;\n      id = lt__header_get_instnam (_dyld_get_image_header (i));\n      if (id && strneq (id, name))\n\t{\n\t  mh = _dyld_get_image_header (i);\n\t  break;\n\t}\n    }\n\n  return mh;\n}\n\n/* Safe to assume our mh is good. */\nstatic NSSymbol\nlt__linkedlib_symbol (const char *symname, const mach_header *mh)\n{\n  NSSymbol symbol = 0;\n\n  if (lt__image_symbol && NSIsSymbolNameDefined (symname))\n    {\n      unsigned long offset = sizeof(mach_header);\n      struct load_command *lc;\n      int j;\n\n      for (j = 0; j < mh->ncmds; j++)\n\t{\n\t  lc = (struct load_command*) (((unsigned long) mh) + offset);\n\t  if ((LC_LOAD_DYLIB == lc->cmd) || (LC_LOAD_WEAK_DYLIB == lc->cmd))\n\t    {\n\t      unsigned long base = ((dylib_command *) lc)->dylib.name.offset;\n\t      char *name = (char *) (base + (unsigned long) lc);\n\t      const mach_header *mh1 = lt__match_loadedlib (name);\n\n\t      if (!mh1)\n\t\t{\n\t\t  /* Maybe NSAddImage can find it */\n\t\t  mh1 = lt__addimage (name,\n\t\t\t\t      NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED\n\t\t\t\t      | NSADDIMAGE_OPTION_WITH_SEARCHING\n\t\t\t\t      | NSADDIMAGE_OPTION_RETURN_ON_ERROR);\n\t\t}\n\n\t      if (mh1)\n\t\t{\n\t\t  symbol = lt__image_symbol (mh1, symname, LT__SYMLOOKUP_OPTS);\n\t\t  if (symbol)\n\t\t    break;\n\t\t}\n\t    }\n\n\t  offset += lc->cmdsize;\n\t}\n    }\n\n  return symbol;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/libltdl/loaders/loadlibrary.c": "/* loader-loadlibrary.c --  dynamic linking for Win32\n\n   Copyright (C) 1998-2000, 2004-2008, 2010-2019 Free Software\n   Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_dlloader.h\"\n\n#if defined __CYGWIN__\n# include <sys/cygwin.h>\n#endif\n\n/* Use the preprocessor to rename non-static symbols to avoid namespace\n   collisions when the loader code is statically linked into libltdl.\n   Use the \"<module_name>_LTX_\" prefix so that the symbol addresses can\n   be fetched from the preloaded symbol list by lt_dlsym():  */\n#define get_vtable\tloadlibrary_LTX_get_vtable\n\nLT_BEGIN_C_DECLS\nLT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);\nLT_END_C_DECLS\n\n\n/* Boilerplate code to set up the vtable for hooking this loader into\n   libltdl's loader list:  */\nstatic int\t vl_exit  (lt_user_data loader_data);\nstatic lt_module vm_open  (lt_user_data loader_data, const char *filename,\n                           lt_dladvise advise);\nstatic int\t vm_close (lt_user_data loader_data, lt_module module);\nstatic void *\t vm_sym   (lt_user_data loader_data, lt_module module,\n\t\t\t  const char *symbolname);\n\nstatic lt_dlinterface_id iface_id = 0;\nstatic lt_dlvtable *vtable = 0;\n\n/* Return the vtable for this loader, only the name and sym_prefix\n   attributes (plus the virtual function implementations, obviously)\n   change between loaders.  */\nlt_dlvtable *\nget_vtable (lt_user_data loader_data)\n{\n  if (!vtable)\n    {\n      vtable = (lt_dlvtable *) lt__zalloc (sizeof *vtable);\n      iface_id = lt_dlinterface_register (\"ltdl loadlibrary\", NULL);\n    }\n\n  if (vtable && !vtable->name)\n    {\n      vtable->name\t\t= \"lt_loadlibrary\";\n      vtable->module_open\t= vm_open;\n      vtable->module_close\t= vm_close;\n      vtable->find_sym\t\t= vm_sym;\n      vtable->dlloader_exit\t= vl_exit;\n      vtable->dlloader_data\t= loader_data;\n      vtable->priority\t\t= LT_DLLOADER_APPEND;\n    }\n\n  if (vtable && (vtable->dlloader_data != loader_data))\n    {\n      LT__SETERROR (INIT_LOADER);\n      return 0;\n    }\n\n  return vtable;\n}\n\n\n\n/* --- IMPLEMENTATION --- */\n\n\n#include <windows.h>\n\n#define LOCALFREE(mem)\t\t\t\t\t     LT_STMT_START { \\\n\tif (mem) { LocalFree ((void *)mem); mem = NULL; }    } LT_STMT_END\n#define LOADLIB__SETERROR(errmsg) LT__SETERRORSTR (loadlibraryerror (errmsg))\n#define LOADLIB_SETERROR(errcode) LOADLIB__SETERROR (LT__STRERROR (errcode))\n\nstatic const char *loadlibraryerror (const char *default_errmsg);\nstatic DWORD WINAPI wrap_getthreaderrormode (void);\nstatic DWORD WINAPI fallback_getthreaderrormode (void);\nstatic BOOL WINAPI wrap_setthreaderrormode (DWORD mode, DWORD *oldmode);\nstatic BOOL WINAPI fallback_setthreaderrormode (DWORD mode, DWORD *oldmode);\n\ntypedef DWORD (WINAPI getthreaderrormode_type) (void);\ntypedef BOOL (WINAPI setthreaderrormode_type) (DWORD, DWORD *);\n\nstatic getthreaderrormode_type *getthreaderrormode = wrap_getthreaderrormode;\nstatic setthreaderrormode_type *setthreaderrormode = wrap_setthreaderrormode;\nstatic char *error_message = 0;\n\n\n/* A function called through the vtable when this loader is no\n   longer needed by the application.  */\nstatic int\nvl_exit (lt_user_data loader_data LT__UNUSED)\n{\n  vtable = NULL;\n  LOCALFREE (error_message);\n  return 0;\n}\n\n/* A function called through the vtable to open a module with this\n   loader.  Returns an opaque representation of the newly opened\n   module for processing with this loader's other vtable functions.  */\nstatic lt_module\nvm_open (lt_user_data loader_data LT__UNUSED, const char *filename,\n         lt_dladvise advise LT__UNUSED)\n{\n  lt_module\tmodule\t   = 0;\n  char\t\t*ext;\n  char\t\twpath[MAX_PATH];\n  size_t\tlen;\n\n  if (!filename)\n    {\n      /* Get the name of main module */\n      *wpath = 0;\n      GetModuleFileName (NULL, wpath, sizeof (wpath));\n      filename = wpath;\n    }\n  else\n    {\n      len = LT_STRLEN (filename);\n\n      if (len >= MAX_PATH)\n        {\n\t  LT__SETERROR (CANNOT_OPEN);\n\t  return 0;\n\t}\n\n#if HAVE_DECL_CYGWIN_CONV_PATH\n      if (cygwin_conv_path (CCP_POSIX_TO_WIN_A, filename, wpath, MAX_PATH))\n\t{\n\t  LT__SETERROR (CANNOT_OPEN);\n\t  return 0;\n\t}\n      len = 0;\n#elif defined __CYGWIN__\n      cygwin_conv_to_full_win32_path (filename, wpath);\n      len = 0;\n#else\n      strcpy(wpath, filename);\n#endif\n\n      ext = strrchr (wpath, '.');\n      if (!ext)\n\t{\n\t  /* Append a '.' to stop Windows from adding an\n\t     implicit '.dll' extension. */\n\t  if (!len)\n\t    len = strlen (wpath);\n\n\t  if (len + 1 >= MAX_PATH)\n\t    {\n\t      LT__SETERROR (CANNOT_OPEN);\n\t      return 0;\n\t    }\n\n\t  wpath[len] = '.';\n\t  wpath[len+1] = '\\0';\n\t}\n    }\n\n  {\n    /* Silence dialog from LoadLibrary on some failures. */\n    DWORD errormode = getthreaderrormode ();\n    DWORD last_error;\n\n    setthreaderrormode (errormode | SEM_FAILCRITICALERRORS, NULL);\n\n    module = LoadLibrary (wpath);\n\n    /* Restore the error mode. */\n    last_error = GetLastError ();\n    setthreaderrormode (errormode, NULL);\n    SetLastError (last_error);\n  }\n\n  /* libltdl expects this function to fail if it is unable\n     to physically load the library.  Sadly, LoadLibrary\n     will search the loaded libraries for a match and return\n     one of them if the path search load fails.\n\n     We check whether LoadLibrary is returning a handle to\n     an already loaded module, and simulate failure if we\n     find one. */\n  {\n    lt_dlhandle cur = 0;\n\n    while ((cur = lt_dlhandle_iterate (iface_id, cur)))\n      {\n        if (!cur->module)\n          {\n            cur = 0;\n            break;\n          }\n\n        if (cur->module == module)\n          {\n            break;\n          }\n      }\n\n    if (!module)\n      LOADLIB_SETERROR (CANNOT_OPEN);\n    else if (cur)\n      {\n        LT__SETERROR (CANNOT_OPEN);\n        module = 0;\n      }\n  }\n\n  return module;\n}\n\n\n/* A function called through the vtable when a particular module\n   should be unloaded.  */\nstatic int\nvm_close (lt_user_data loader_data LT__UNUSED, lt_module module)\n{\n  int errors = 0;\n\n  if (FreeLibrary ((HMODULE) module) == 0)\n    {\n      LOADLIB_SETERROR (CANNOT_CLOSE);\n      ++errors;\n    }\n\n  return errors;\n}\n\n\n/* A function called through the vtable to get the address of\n   a symbol loaded from a particular module.  */\nstatic void *\nvm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)\n{\n  void *address = (void *) GetProcAddress ((HMODULE) module, name);\n\n  if (!address)\n    {\n      LOADLIB_SETERROR (SYMBOL_NOT_FOUND);\n    }\n\n  return address;\n}\n\n\n\n/* --- HELPER FUNCTIONS --- */\n\n\n/* Return the windows error message, or the passed in error message on\n   failure. */\nstatic const char *\nloadlibraryerror (const char *default_errmsg)\n{\n  size_t len;\n  LOCALFREE (error_message);\n\n  FormatMessageA (FORMAT_MESSAGE_ALLOCATE_BUFFER |\n                  FORMAT_MESSAGE_FROM_SYSTEM |\n                  FORMAT_MESSAGE_IGNORE_INSERTS,\n                  NULL,\n                  GetLastError (),\n                  0,\n                  (char *) &error_message,\n                  0, NULL);\n\n  /* Remove trailing CRNL */\n  len = LT_STRLEN (error_message);\n  if (len && error_message[len - 1] == '\\n')\n    error_message[--len] = LT_EOS_CHAR;\n  if (len && error_message[len - 1] == '\\r')\n    error_message[--len] = LT_EOS_CHAR;\n\n  return len ? error_message : default_errmsg;\n}\n\n/* A function called through the getthreaderrormode variable that checks\n   if the system supports GetThreadErrorMode (or GetErrorMode) and arranges\n   for it or a fallback implementation to be called directly in the future.\n   The selected version is then called. */\nstatic DWORD WINAPI\nwrap_getthreaderrormode (void)\n{\n  HMODULE kernel32 = GetModuleHandleA (\"kernel32.dll\");\n  getthreaderrormode\n    = (getthreaderrormode_type *) GetProcAddress (kernel32,\n\t\t\t\t\t\t  \"GetThreadErrorMode\");\n  if (!getthreaderrormode)\n    getthreaderrormode\n      = (getthreaderrormode_type *) GetProcAddress (kernel32,\n\t\t\t\t\t\t    \"GetErrorMode\");\n  if (!getthreaderrormode)\n    getthreaderrormode = fallback_getthreaderrormode;\n  return getthreaderrormode ();\n}\n\n/* A function called through the getthreaderrormode variable for cases\n   where the system does not support GetThreadErrorMode or GetErrorMode */\nstatic DWORD WINAPI\nfallback_getthreaderrormode (void)\n{\n  /* Prior to Windows Vista, the only way to get the current error\n     mode was to set a new one. In our case, we are setting a new\n     error mode right after \"getting\" it while ignoring the error\n     mode in effect when setting the new error mode, so that's\n     fairly ok. */\n  return (DWORD) SetErrorMode (SEM_FAILCRITICALERRORS);\n}\n\n/* A function called through the setthreaderrormode variable that checks\n   if the system supports SetThreadErrorMode and arranges for it or a\n   fallback implementation to be called directly in the future.\n   The selected version is then called. */\nstatic BOOL WINAPI\nwrap_setthreaderrormode (DWORD mode, DWORD *oldmode)\n{\n  HMODULE kernel32 = GetModuleHandleA (\"kernel32.dll\");\n  setthreaderrormode\n    = (setthreaderrormode_type *) GetProcAddress (kernel32,\n\t\t\t\t\t\t  \"SetThreadErrorMode\");\n  if (!setthreaderrormode)\n    setthreaderrormode = fallback_setthreaderrormode;\n  return setthreaderrormode (mode, oldmode);\n}\n\n/* A function called through the setthreaderrormode variable for cases\n   where the system does not support SetThreadErrorMode. */\nstatic BOOL WINAPI\nfallback_setthreaderrormode (DWORD mode, DWORD *oldmode)\n{\n  /* Prior to Windows 7, there was no way to set the thread local error\n     mode, so set the process global error mode instead. */\n  DWORD old = (DWORD) SetErrorMode (mode);\n  if (oldmode)\n    *oldmode = old;\n  return TRUE;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/libltdl/loaders/shl_load.c": "/* loader-shl_load.c --  dynamic linking with shl_load (HP-UX)\n\n   Copyright (C) 1998-2000, 2004, 2006-2008, 2011-2019 Free Software\n   Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_dlloader.h\"\n\n/* Use the preprocessor to rename non-static symbols to avoid namespace\n   collisions when the loader code is statically linked into libltdl.\n   Use the \"<module_name>_LTX_\" prefix so that the symbol addresses can\n   be fetched from the preloaded symbol list by lt_dlsym():  */\n#define get_vtable\tshl_load_LTX_get_vtable\n\nLT_BEGIN_C_DECLS\nLT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);\nLT_END_C_DECLS\n\n\n/* Boilerplate code to set up the vtable for hooking this loader into\n   libltdl's loader list:  */\nstatic int\t vl_exit  (lt_user_data loader_data);\nstatic lt_module vm_open  (lt_user_data loader_data, const char *filename,\n                           lt_dladvise advise);\nstatic int\t vm_close (lt_user_data loader_data, lt_module module);\nstatic void *\t vm_sym   (lt_user_data loader_data, lt_module module,\n\t\t\t  const char *symbolname);\n\nstatic lt_dlvtable *vtable = 0;\n\n/* Return the vtable for this loader, only the name and sym_prefix\n   attributes (plus the virtual function implementations, obviously)\n   change between loaders.  */\nlt_dlvtable *\nget_vtable (lt_user_data loader_data)\n{\n  if (!vtable)\n    {\n      vtable = lt__zalloc (sizeof *vtable);\n    }\n\n  if (vtable && !vtable->name)\n    {\n      vtable->name\t\t= \"lt_shl_load\";\n      vtable->module_open\t= vm_open;\n      vtable->module_close\t= vm_close;\n      vtable->find_sym\t\t= vm_sym;\n      vtable->dlloader_exit\t= vl_exit;\n      vtable->dlloader_data\t= loader_data;\n      vtable->priority\t\t= LT_DLLOADER_APPEND;\n    }\n\n  if (vtable && (vtable->dlloader_data != loader_data))\n    {\n      LT__SETERROR (INIT_LOADER);\n      return 0;\n    }\n\n  return vtable;\n}\n\n\n\n/* --- IMPLEMENTATION --- */\n\n\n#if defined HAVE_DL_H\n#  include <dl.h>\n#endif\n\n/* some flags are missing on some systems, so we provide\n * harmless defaults.\n *\n * Mandatory:\n * BIND_IMMEDIATE  - Resolve symbol references when the library is loaded.\n * BIND_DEFERRED   - Delay code symbol resolution until actual reference.\n *\n * Optionally:\n * BIND_FIRST\t   - Place the library at the head of the symbol search\n *\t\t     order.\n * BIND_NONFATAL   - The default BIND_IMMEDIATE behavior is to treat all\n *\t\t     unsatisfied symbols as fatal.  This flag allows\n *\t\t     binding of unsatisfied code symbols to be deferred\n *\t\t     until use.\n *\t\t     [Perl: For certain libraries, like DCE, deferred\n *\t\t     binding often causes run time problems. Adding\n *\t\t     BIND_NONFATAL to BIND_IMMEDIATE still allows\n *\t\t     unresolved references in situations like this.]\n * BIND_NOSTART\t   - Do not call the initializer for the shared library\n *\t\t     when the library is loaded, nor on a future call to\n *\t\t     shl_unload().\n * BIND_VERBOSE\t   - Print verbose messages concerning possible\n *\t\t     unsatisfied symbols.\n *\n * hp9000s700/hp9000s800:\n * BIND_RESTRICTED - Restrict symbols visible by the library to those\n *\t\t     present at library load time.\n * DYNAMIC_PATH\t   - Allow the loader to dynamically search for the\n *\t\t     library specified by the path argument.\n */\n\n#if !defined DYNAMIC_PATH\n#  define DYNAMIC_PATH\t\t0\n#endif\n#if !defined BIND_RESTRICTED\n#  define BIND_RESTRICTED\t0\n#endif\n\n#define\tLT_BIND_FLAGS\t(BIND_IMMEDIATE | BIND_NONFATAL | DYNAMIC_PATH)\n\n\n/* A function called through the vtable when this loader is no\n   longer needed by the application.  */\nstatic int\nvl_exit (lt_user_data loader_data LT__UNUSED)\n{\n  vtable = NULL;\n  return 0;\n}\n\n/* A function called through the vtable to open a module with this\n   loader.  Returns an opaque representation of the newly opened\n   module for processing with this loader's other vtable functions.  */\nstatic lt_module\nvm_open (lt_user_data loader_data LT__UNUSED, const char *filename,\n         lt_dladvise advise LT__UNUSED)\n{\n  static shl_t self = (shl_t) 0;\n  lt_module module = shl_load (filename, LT_BIND_FLAGS, 0L);\n\n  /* Since searching for a symbol against a NULL module handle will also\n     look in everything else that was already loaded and exported with\n     the -E compiler flag, we always cache a handle saved before any\n     modules are loaded.  */\n  if (!self)\n    {\n      void *address;\n      shl_findsym (&self, \"main\", TYPE_UNDEFINED, &address);\n    }\n\n  if (!filename)\n    {\n      module = self;\n    }\n  else\n    {\n      module = shl_load (filename, LT_BIND_FLAGS, 0L);\n\n      if (!module)\n\t{\n\t  LT__SETERROR (CANNOT_OPEN);\n\t}\n    }\n\n  return module;\n}\n\n/* A function called through the vtable when a particular module\n   should be unloaded.  */\nstatic int\nvm_close (lt_user_data loader_data LT__UNUSED, lt_module module)\n{\n  int errors = 0;\n\n  if (module && (shl_unload ((shl_t) (module)) != 0))\n    {\n      LT__SETERROR (CANNOT_CLOSE);\n      ++errors;\n    }\n\n  return errors;\n}\n\n\n/* A function called through the vtable to get the address of\n   a symbol loaded from a particular module.  */\nstatic void *\nvm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)\n{\n  void *address = 0;\n\n  /* sys_shl_open should never return a NULL module handle */\n  if (module == (lt_module) 0)\n  {\n    LT__SETERROR (INVALID_HANDLE);\n  }\n  else if (!shl_findsym((shl_t*) &module, name, TYPE_UNDEFINED, &address))\n    {\n      if (!address)\n\t{\n\t  LT__SETERROR (SYMBOL_NOT_FOUND);\n\t}\n    }\n\n  return address;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/libltdl/loaders/load_add_on.c": "/* loader-load_add_on.c --  dynamic linking for BeOS\n\n   Copyright (C) 1998-2000, 2004, 2006-2008, 2011-2019 Free Software\n   Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_dlloader.h\"\n\n/* Use the preprocessor to rename non-static symbols to avoid namespace\n   collisions when the loader code is statically linked into libltdl.\n   Use the \"<module_name>_LTX_\" prefix so that the symbol addresses can\n   be fetched from the preloaded symbol list by lt_dlsym():  */\n#define get_vtable\tload_add_on_LTX_get_vtable\n\nLT_BEGIN_C_DECLS\nLT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);\nLT_END_C_DECLS\n\n\n/* Boilerplate code to set up the vtable for hooking this loader into\n   libltdl's loader list:  */\nstatic int\t vl_exit  (lt_user_data loader_data);\nstatic lt_module vm_open  (lt_user_data loader_data, const char *filename,\n                           lt_dladvise advise);\nstatic int\t vm_close (lt_user_data loader_data, lt_module module);\nstatic void *\t vm_sym   (lt_user_data loader_data, lt_module module,\n\t\t\t  const char *symbolname);\n\nstatic lt_dlvtable *vtable = 0;\n\n/* Return the vtable for this loader, only the name and sym_prefix\n   attributes (plus the virtual function implementations, obviously)\n   change between loaders.  */\nlt_dlvtable *\nget_vtable (lt_user_data loader_data)\n{\n  if (!vtable)\n    {\n      vtable = lt__zalloc (sizeof *vtable);\n    }\n\n  if (vtable && !vtable->name)\n    {\n      vtable->name\t\t= \"lt_load_add_on\";\n      vtable->module_open\t= vm_open;\n      vtable->module_close\t= vm_close;\n      vtable->find_sym\t\t= vm_sym;\n      vtable->dlloader_exit\t= vl_exit;\n      vtable->dlloader_data\t= loader_data;\n      vtable->priority\t\t= LT_DLLOADER_APPEND;\n    }\n\n  if (vtable && (vtable->dlloader_data != loader_data))\n    {\n      LT__SETERROR (INIT_LOADER);\n      return 0;\n    }\n\n  return vtable;\n}\n\n\n\n/* --- IMPLEMENTATION --- */\n\n\n#include <kernel/image.h>\n\n/* A function called through the vtable when this loader is no\n   longer needed by the application.  */\nstatic int\nvl_exit (lt_user_data loader_data LT__UNUSED)\n{\n  vtable = NULL;\n  return 0;\n}\n\n/* A function called through the vtable to open a module with this\n   loader.  Returns an opaque representation of the newly opened\n   module for processing with this loader's other vtable functions.  */\nstatic lt_module\nvm_open (lt_user_data loader_data LT__UNUSED, const char *filename,\n         lt_dladvise advise LT__UNUSED)\n{\n  image_id image = 0;\n\n  if (filename)\n    {\n      image = load_add_on (filename);\n    }\n  else\n    {\n      image_info info;\n      int32 cookie = 0;\n      if (get_next_image_info (0, &cookie, &info) == B_OK)\n\timage = load_add_on (info.name);\n    }\n\n  if (image <= 0)\n    {\n      LT__SETERROR (CANNOT_OPEN);\n      image = 0;\n    }\n\n  return (lt_module) image;\n}\n\n\n/* A function called through the vtable when a particular module\n   should be unloaded.  */\nstatic int\nvm_close (lt_user_data loader_data LT__UNUSED, lt_module module)\n{\n  int errors = 0;\n\n  if (unload_add_on ((image_id) module) != B_OK)\n    {\n      LT__SETERROR (CANNOT_CLOSE);\n      ++errors;\n    }\n\n  return errors;\n}\n\n\n/* A function called through the vtable to get the address of\n   a symbol loaded from a particular module.  */\nstatic void *\nvm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)\n{\n  void *address = 0;\n  image_id image = (image_id) module;\n\n  if (get_image_symbol (image, name, B_SYMBOL_TYPE_ANY, address) != B_OK)\n    {\n      LT__SETERROR (SYMBOL_NOT_FOUND);\n      address = 0;\n    }\n\n  return address;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/libltdl/loaders/dld_link.c": "/* loader-dld_link.c -- dynamic linking with dld\n\n   Copyright (C) 1998-2000, 2004, 2006-2008, 2011-2019 Free Software\n   Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_dlloader.h\"\n\n/* Use the preprocessor to rename non-static symbols to avoid namespace\n   collisions when the loader code is statically linked into libltdl.\n   Use the \"<module_name>_LTX_\" prefix so that the symbol addresses can\n   be fetched from the preloaded symbol list by lt_dlsym():  */\n#define get_vtable\tdld_link_LTX_get_vtable\n\nLT_BEGIN_C_DECLS\nLT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);\nLT_END_C_DECLS\n\n\n/* Boilerplate code to set up the vtable for hooking this loader into\n   libltdl's loader list:  */\nstatic int\t vl_exit  (lt_user_data loader_data);\nstatic lt_module vm_open  (lt_user_data loader_data, const char *filename,\n                           lt_dladvise advise);\nstatic int\t vm_close (lt_user_data loader_data, lt_module module);\nstatic void *\t vm_sym   (lt_user_data loader_data, lt_module module,\n\t\t\t  const char *symbolname);\n\nstatic lt_dlvtable *vtable = 0;\n\n/* Return the vtable for this loader, only the name and sym_prefix\n   attributes (plus the virtual function implementations, obviously)\n   change between loaders.  */\nlt_dlvtable *\nget_vtable (lt_user_data loader_data)\n{\n  if (!vtable)\n    {\n      vtable = lt__zalloc (sizeof *vtable);\n    }\n\n  if (vtable && !vtable->name)\n    {\n      vtable->name\t\t= \"lt_dld_link\";\n      vtable->module_open\t= vm_open;\n      vtable->module_close\t= vm_close;\n      vtable->find_sym\t\t= vm_sym;\n      vtable->dlloader_exit\t= vl_exit;\n      vtable->dlloader_data\t= loader_data;\n      vtable->priority\t\t= LT_DLLOADER_APPEND;\n    }\n\n  if (vtable && (vtable->dlloader_data != loader_data))\n    {\n      LT__SETERROR (INIT_LOADER);\n      return 0;\n    }\n\n  return vtable;\n}\n\n\n\n/* --- IMPLEMENTATION --- */\n\n\n#if defined HAVE_DLD_H\n#  include <dld.h>\n#endif\n\n/* A function called through the vtable when this loader is no\n   longer needed by the application.  */\nstatic int\nvl_exit (lt_user_data loader_data LT__UNUSED)\n{\n  vtable = NULL;\n  return 0;\n}\n\n/* A function called through the vtable to open a module with this\n   loader.  Returns an opaque representation of the newly opened\n   module for processing with this loader's other vtable functions.  */\nstatic lt_module\nvm_open (lt_user_data loader_data LT__UNUSED, const char *filename,\n         lt_dladvise advise LT__UNUSED)\n{\n  lt_module module = lt__strdup (filename);\n\n  if (module && dld_link (filename) != 0)\n    {\n      LT__SETERROR (CANNOT_OPEN);\n      FREE (module);\n    }\n\n  return module;\n}\n\n/* A function called through the vtable when a particular module\n   should be unloaded.  */\nstatic int\nvm_close (lt_user_data loader_data LT__UNUSED, lt_module module)\n{\n  int errors = 0;\n\n  if (dld_unlink_by_file ((char*)(module), 1) != 0)\n    {\n      LT__SETERROR (CANNOT_CLOSE);\n      ++errors;\n    }\n  else\n    {\n      FREE (module);\n    }\n\n  return errors;\n}\n\n/* A function called through the vtable to get the address of\n   a symbol loaded from a particular module.  */\nstatic void *\nvm_sym (lt_user_data loader_data LT__UNUSED, lt_module module LT__UNUSED,\n\tconst char *name)\n{\n  void *address = dld_get_func (name);\n\n  if (!address)\n    {\n      LT__SETERROR (SYMBOL_NOT_FOUND);\n    }\n\n  return address;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/libltdl/loaders/preopen.c": "/* loader-preopen.c -- emulate dynamic linking using preloaded_symbols\n\n   Copyright (C) 1998-2000, 2004, 2006-2008, 2011-2019 Free Software\n   Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_dlloader.h\"\n\n/* Use the preprocessor to rename non-static symbols to avoid namespace\n   collisions when the loader code is statically linked into libltdl.\n   Use the \"<module_name>_LTX_\" prefix so that the symbol addresses can\n   be fetched from the preloaded symbol list by lt_dlsym():  */\n#define get_vtable\tpreopen_LTX_get_vtable\n\nLT_BEGIN_C_DECLS\nLT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);\nLT_END_C_DECLS\n\n\n/* Boilerplate code to set up the vtable for hooking this loader into\n   libltdl's loader list:  */\nstatic int\t vl_init  (lt_user_data loader_data);\nstatic int\t vl_exit  (lt_user_data loader_data);\nstatic lt_module vm_open  (lt_user_data loader_data, const char *filename,\n                           lt_dladvise advise);\nstatic int\t vm_close (lt_user_data loader_data, lt_module module);\nstatic void *\t vm_sym   (lt_user_data loader_data, lt_module module,\n\t\t\t  const char *symbolname);\n\nstatic lt_dlvtable *vtable = 0;\n\n/* Return the vtable for this loader, only the name and sym_prefix\n   attributes (plus the virtual function implementations, obviously)\n   change between loaders.  */\nlt_dlvtable *\nget_vtable (lt_user_data loader_data)\n{\n  if (!vtable)\n    {\n      vtable = (lt_dlvtable *) lt__zalloc (sizeof *vtable);\n    }\n\n  if (vtable && !vtable->name)\n    {\n      vtable->name\t\t= \"lt_preopen\";\n      vtable->sym_prefix\t= 0;\n      vtable->module_open\t= vm_open;\n      vtable->module_close\t= vm_close;\n      vtable->find_sym\t\t= vm_sym;\n      vtable->dlloader_init\t= vl_init;\n      vtable->dlloader_exit\t= vl_exit;\n      vtable->dlloader_data\t= loader_data;\n      vtable->priority\t\t= LT_DLLOADER_PREPEND;\n    }\n\n  if (vtable && (vtable->dlloader_data != loader_data))\n    {\n      LT__SETERROR (INIT_LOADER);\n      return 0;\n    }\n\n  return vtable;\n}\n\n\n\n/* --- IMPLEMENTATION --- */\n\n\n/* Wrapper type to chain together symbol lists of various origins.  */\ntypedef struct symlist_chain\n{\n  struct symlist_chain *next;\n  const lt_dlsymlist   *symlist;\n} symlist_chain;\n\n\nstatic int add_symlist   (const lt_dlsymlist *symlist);\nstatic int free_symlists (void);\n\n/* The start of the symbol lists chain.  */\nstatic symlist_chain\t       *preloaded_symlists\t\t= 0;\n\n/* A symbol list preloaded before lt_init() was called.  */\nstatic const\tlt_dlsymlist   *default_preloaded_symbols\t= 0;\n\n\n/* A function called through the vtable to initialise this loader.  */\nstatic int\nvl_init (lt_user_data loader_data LT__UNUSED)\n{\n  int errors = 0;\n\n  preloaded_symlists = 0;\n  if (default_preloaded_symbols)\n    {\n      errors = lt_dlpreload (default_preloaded_symbols);\n    }\n\n  return errors;\n}\n\n\n/* A function called through the vtable when this loader is no\n   longer needed by the application.  */\nstatic int\nvl_exit (lt_user_data loader_data LT__UNUSED)\n{\n  vtable = NULL;\n  free_symlists ();\n  return 0;\n}\n\n\n/* A function called through the vtable to open a module with this\n   loader.  Returns an opaque representation of the newly opened\n   module for processing with this loader's other vtable functions.  */\nstatic lt_module\nvm_open (lt_user_data loader_data LT__UNUSED, const char *filename,\n         lt_dladvise advise LT__UNUSED)\n{\n  symlist_chain *lists;\n  lt_module\t module = 0;\n\n  if (!preloaded_symlists)\n    {\n      LT__SETERROR (NO_SYMBOLS);\n      goto done;\n    }\n\n  /* Can't use NULL as the reflective symbol header, as NULL is\n     used to mark the end of the entire symbol list.  Self-dlpreopened\n     symbols follow this magic number, chosen to be an unlikely\n     clash with a real module name.  */\n  if (!filename)\n    {\n      filename = \"@PROGRAM@\";\n    }\n\n  for (lists = preloaded_symlists; lists; lists = lists->next)\n    {\n      const lt_dlsymlist *symbol;\n      for (symbol= lists->symlist; symbol->name; ++symbol)\n\t{\n\t  if (!symbol->address && STREQ (symbol->name, filename))\n\t    {\n\t      /* If the next symbol's name and address is 0, it means\n\t\t the module just contains the originator and no symbols.\n\t\t In this case we pretend that we never saw the module and\n\t         hope that some other loader will be able to load the module\n\t         and have access to its symbols */\n\t      const lt_dlsymlist *next_symbol = symbol +1;\n\t      if (next_symbol->address && next_symbol->name)\n\t\t{\n\t          module = (lt_module) lists->symlist;\n\t          goto done;\n\t\t}\n\t    }\n\t}\n    }\n\n  LT__SETERROR (FILE_NOT_FOUND);\n\n done:\n  return module;\n}\n\n\n/* A function called through the vtable when a particular module\n   should be unloaded.  */\nstatic int\nvm_close (lt_user_data loader_data LT__UNUSED, lt_module module LT__UNUSED)\n{\n  /* Just to silence gcc -Wall */\n  module = 0;\n  return 0;\n}\n\n\n/* A function called through the vtable to get the address of\n   a symbol loaded from a particular module.  */\nstatic void *\nvm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)\n{\n  lt_dlsymlist\t       *symbol = (lt_dlsymlist*) module;\n\n  if (symbol[1].name && STREQ (symbol[1].name, \"@INIT@\"))\n    {\n      symbol++;\t\t\t/* Skip optional init entry. */\n    }\n\n  symbol +=2;\t\t\t/* Skip header (originator then libname). */\n\n  while (symbol->name)\n    {\n      if (STREQ (symbol->name, name))\n\t{\n\t  return symbol->address;\n\t}\n\n    ++symbol;\n  }\n\n  LT__SETERROR (SYMBOL_NOT_FOUND);\n\n  return 0;\n}\n\n\n\n/* --- HELPER FUNCTIONS --- */\n\n\n/* The symbol lists themselves are not allocated from the heap, but\n   we can unhook them and free up the chain of links between them.  */\nstatic int\nfree_symlists (void)\n{\n  symlist_chain *lists;\n\n  lists = preloaded_symlists;\n  while (lists)\n    {\n      symlist_chain *next = lists->next;\n      FREE (lists);\n      lists = next;\n    }\n  preloaded_symlists = 0;\n\n  return 0;\n}\n\n/* Add a new symbol list to the global chain.  */\nstatic int\nadd_symlist (const lt_dlsymlist *symlist)\n{\n  symlist_chain *lists;\n  int\t\t errors   = 0;\n\n  /* Search for duplicate entries:  */\n  for (lists = preloaded_symlists;\n       lists && lists->symlist != symlist; lists = lists->next)\n    /*NOWORK*/;\n\n  /* Don't add the same list twice:  */\n  if (!lists)\n    {\n      symlist_chain *tmp = (symlist_chain *) lt__zalloc (sizeof *tmp);\n\n      if (tmp)\n\t{\n\t  tmp->symlist = symlist;\n\t  tmp->next = preloaded_symlists;\n\t  preloaded_symlists = tmp;\n\n\t  if (symlist[1].name && STREQ (symlist[1].name, \"@INIT@\"))\n\t    {\n\t      void (*init_symlist)(void);\n\t      *(void **)(&init_symlist) = symlist[1].address;\n\t      (*init_symlist)();\n\t    }\n\t}\n      else\n\t{\n\t  ++errors;\n\t}\n    }\n\n  return errors;\n}\n\n\n\n/* --- PRELOADING API CALL IMPLEMENTATIONS --- */\n\n\n/* Save a default symbol list for later.  */\nint\nlt_dlpreload_default (const lt_dlsymlist *preloaded)\n{\n  default_preloaded_symbols = preloaded;\n  return 0;\n}\n\n\n/* Add a symbol list to the global chain, or with a NULL argument,\n   revert to just the default list.  */\nint\nlt_dlpreload (const lt_dlsymlist *preloaded)\n{\n  int errors = 0;\n\n  if (preloaded)\n    {\n      errors = add_symlist (preloaded);\n    }\n  else\n    {\n      free_symlists();\n\n      if (default_preloaded_symbols)\n\t{\n\t  errors = lt_dlpreload (default_preloaded_symbols);\n\t}\n    }\n\n  return errors;\n}\n\n\n/* Open all the preloaded modules from the named originator, executing\n   a callback for each one.  If ORIGINATOR is NULL, then call FUNC for\n   each preloaded module from the program itself.  */\nint\nlt_dlpreload_open (const char *originator, lt_dlpreload_callback_func *func)\n{\n  symlist_chain *list;\n  int\t\t errors = 0;\n  int\t\t found  = 0;\n\n  /* For each symlist in the chain...  */\n  for (list = preloaded_symlists; list; list = list->next)\n    {\n      /* ...that was preloaded by the requesting ORIGINATOR... */\n      if ((originator && STREQ (list->symlist->name, originator))\n          || (!originator && STREQ (list->symlist->name, \"@PROGRAM@\")))\n\t{\n\t  const lt_dlsymlist *symbol;\n\t  unsigned int idx = 0;\n\n\t  ++found;\n\n\t  /* ...load the symbols per source compilation unit:\n\t     (we preincrement the index to skip over the originator entry)  */\n\t  while ((symbol = &list->symlist[++idx])->name != 0)\n\t    {\n\t      if ((symbol->address == 0)\n\t\t  && (STRNEQ (symbol->name, \"@PROGRAM@\")))\n\t\t{\n\t\t  lt_dlhandle handle = lt_dlopen (symbol->name);\n\t\t  if (handle == 0)\n\t\t    {\n\t\t      ++errors;\n\t\t    }\n\t\t  else\n\t\t    {\n\t\t      errors += (*func) (handle);\n\t\t    }\n\t\t}\n\t    }\n\t}\n    }\n\n  if (!found)\n    {\n      LT__SETERROR(CANNOT_OPEN);\n      ++errors;\n    }\n\n  return errors;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/libltdl/loaders/dlopen.c": "/* loader-dlopen.c --  dynamic linking with dlopen/dlsym\n\n   Copyright (C) 1998-2000, 2004, 2006-2008, 2011-2019 Free Software\n   Foundation, Inc.\n   Written by Thomas Tanner, 1998\n\n   NOTE: The canonical source of this file is maintained with the\n   GNU Libtool package.  Report bugs to bug-libtool@gnu.org.\n\nGNU Libltdl is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2 of the License, or (at your option) any later version.\n\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include this file under the\nsame distribution terms that you use for the rest of that program.\n\nGNU Libltdl is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with GNU Libltdl; see the file COPYING.LIB.  If not, a\ncopy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,\nor obtained by writing to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n*/\n\n#include \"lt__private.h\"\n#include \"lt_dlloader.h\"\n\n/* Use the preprocessor to rename non-static symbols to avoid namespace\n   collisions when the loader code is statically linked into libltdl.\n   Use the \"<module_name>_LTX_\" prefix so that the symbol addresses can\n   be fetched from the preloaded symbol list by lt_dlsym():  */\n#define get_vtable\tdlopen_LTX_get_vtable\n\nLT_BEGIN_C_DECLS\nLT_SCOPE lt_dlvtable *get_vtable (lt_user_data loader_data);\nLT_END_C_DECLS\n\n\n/* Boilerplate code to set up the vtable for hooking this loader into\n   libltdl's loader list:  */\nstatic int\t vl_exit  (lt_user_data loader_data);\nstatic lt_module vm_open  (lt_user_data loader_data, const char *filename,\n                           lt_dladvise advise);\nstatic int\t vm_close (lt_user_data loader_data, lt_module module);\nstatic void *\t vm_sym   (lt_user_data loader_data, lt_module module,\n\t\t\t  const char *symbolname);\n\nstatic lt_dlvtable *vtable = 0;\n\n/* Return the vtable for this loader, only the name and sym_prefix\n   attributes (plus the virtual function implementations, obviously)\n   change between loaders.  */\nlt_dlvtable *\nget_vtable (lt_user_data loader_data)\n{\n  if (!vtable)\n    {\n      vtable = (lt_dlvtable *) lt__zalloc (sizeof *vtable);\n    }\n\n  if (vtable && !vtable->name)\n    {\n      vtable->name\t\t= \"lt_dlopen\";\n#if defined DLSYM_USCORE\n      vtable->sym_prefix\t= \"_\";\n#endif\n      vtable->module_open\t= vm_open;\n      vtable->module_close\t= vm_close;\n      vtable->find_sym\t\t= vm_sym;\n      vtable->dlloader_exit\t= vl_exit;\n      vtable->dlloader_data\t= loader_data;\n      vtable->priority\t\t= LT_DLLOADER_PREPEND;\n    }\n\n  if (vtable && (vtable->dlloader_data != loader_data))\n    {\n      LT__SETERROR (INIT_LOADER);\n      return 0;\n    }\n\n  return vtable;\n}\n\n\n\n/* --- IMPLEMENTATION --- */\n\n\n#if defined HAVE_DLFCN_H\n#  include <dlfcn.h>\n#endif\n\n#if defined HAVE_SYS_DL_H\n#  include <sys/dl.h>\n#endif\n\n\n/* We may have to define LT_LAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#if !defined LT_LAZY_OR_NOW\n#  if defined RTLD_LAZY\n#    define LT_LAZY_OR_NOW\tRTLD_LAZY\n#  else\n#    if defined DL_LAZY\n#      define LT_LAZY_OR_NOW\tDL_LAZY\n#    endif\n#  endif /* !RTLD_LAZY */\n#endif\n#if !defined LT_LAZY_OR_NOW\n#  if defined RTLD_NOW\n#    define LT_LAZY_OR_NOW\tRTLD_NOW\n#  else\n#    if defined DL_NOW\n#      define LT_LAZY_OR_NOW\tDL_NOW\n#    endif\n#  endif /* !RTLD_NOW */\n#endif\n#if !defined LT_LAZY_OR_NOW\n#  define LT_LAZY_OR_NOW\t0\n#endif /* !LT_LAZY_OR_NOW */\n\n/* We only support local and global symbols from modules for loaders\n   that provide such a thing, otherwise the system default is used.  */\n#if !defined RTLD_GLOBAL\n#  if defined DL_GLOBAL\n#    define RTLD_GLOBAL\t\tDL_GLOBAL\n#  endif\n#endif /* !RTLD_GLOBAL */\n#if !defined RTLD_LOCAL\n#  if defined DL_LOCAL\n#    define RTLD_LOCAL\t\tDL_LOCAL\n#  endif\n#endif /* !RTLD_LOCAL */\n\n#if defined HAVE_DLERROR\n#  define DLERROR(arg)\tdlerror ()\n#else\n#  define DLERROR(arg)\tLT__STRERROR (arg)\n#endif\n\n#define DL__SETERROR(errorcode) \\\n\tLT__SETERRORSTR (DLERROR (errorcode))\n\n\n/* A function called through the vtable when this loader is no\n   longer needed by the application.  */\nstatic int\nvl_exit (lt_user_data loader_data LT__UNUSED)\n{\n  vtable = NULL;\n  return 0;\n}\n\n\n/* A function called through the vtable to open a module with this\n   loader.  Returns an opaque representation of the newly opened\n   module for processing with this loader's other vtable functions.  */\nstatic lt_module\nvm_open (lt_user_data loader_data LT__UNUSED, const char *filename,\n         lt_dladvise advise)\n{\n  int\t\tmodule_flags = LT_LAZY_OR_NOW;\n  lt_module\tmodule;\n#ifdef RTLD_MEMBER\n  int\t\tlen = LT_STRLEN (filename);\n#endif\n\n  if (advise)\n    {\n#ifdef RTLD_GLOBAL\n      /* If there is some means of asking for global symbol resolution,\n         do so.  */\n      if (advise->is_symglobal)\n        module_flags |= RTLD_GLOBAL;\n#else\n      /* Otherwise, reset that bit so the caller can tell it wasn't\n         acted on.  */\n      advise->is_symglobal = 0;\n#endif\n\n/* And similarly for local only symbol resolution.  */\n#ifdef RTLD_LOCAL\n      if (advise->is_symlocal)\n        module_flags |= RTLD_LOCAL;\n#else\n      advise->is_symlocal = 0;\n#endif\n    }\n\n#ifdef RTLD_MEMBER /* AIX */\n  if (len >= 4) /* at least \"l(m)\" */\n    {\n      /* Advise loading an archive member only if the filename really\n\t contains both the opening and closing parent, and a member. */\n      if (filename[len-1] == ')')\n\t{\n\t  const char *opening = strrchr(filename, '(');\n\t  if (opening && opening < (filename+len-2) && strchr(opening+1, '/') == NULL)\n\t    module_flags |= RTLD_MEMBER;\n\t}\n    }\n#endif\n\n  module = dlopen (filename, module_flags);\n\n#if defined RTLD_MEMBER && defined LT_SHARED_LIB_MEMBER\n  if (!module && len && !(module_flags & RTLD_MEMBER) && errno == ENOEXEC)\n    {\n      /* Loading without a member specified failed with \"Exec format error\".\n\t So the file is there, but either has wrong bitwidth, or is an\n\t archive eventually containing the default shared archive member.\n\t Retry with default member, getting same error in worst case. */\n      const char *member = LT_SHARED_LIB_MEMBER;\n\n      char *attempt = MALLOC (char, len + strlen (member) + 1);\n      if (!attempt)\n\t{\n\t  LT__SETERROR (NO_MEMORY);\n\t  return module;\n\t}\n\n      sprintf (attempt, \"%s%s\", filename, member);\n      module = vm_open (loader_data, attempt, advise);\n      FREE (attempt);\n      return module;\n    }\n#endif\n\n  if (!module)\n    {\n      DL__SETERROR (CANNOT_OPEN);\n    }\n\n  return module;\n}\n\n\n/* A function called through the vtable when a particular module\n   should be unloaded.  */\nstatic int\nvm_close (lt_user_data loader_data LT__UNUSED, lt_module module)\n{\n  int errors = 0;\n\n  if (dlclose (module) != 0)\n    {\n      DL__SETERROR (CANNOT_CLOSE);\n      ++errors;\n    }\n\n  return errors;\n}\n\n\n/* A function called through the vtable to get the address of\n   a symbol loaded from a particular module.  */\nstatic void *\nvm_sym (lt_user_data loader_data LT__UNUSED, lt_module module, const char *name)\n{\n  void *address = dlsym (module, name);\n\n  if (!address)\n    {\n      DL__SETERROR (SYMBOL_NOT_FOUND);\n    }\n\n  return address;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/build-aux/ltmain.in": "#! /bin/sh\n\n# libtool (GNU @PACKAGE@) @VERSION@\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n\n# Copyright (C) 1996-2019 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\nPROGRAM=libtool\nPACKAGE=@PACKAGE@\nVERSION=@VERSION@\npackage_revision=@package_revision@\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# Run './libtool --help' for help with using this script from the\n# command line.\n\n\n## ------------------------------- ##\n## User overridable command paths. ##\n## ------------------------------- ##\n\n# After configure completes, it has a better idea of some of the\n# shell tools we need than the defaults used by the functions shared\n# with bootstrap, so set those here where they can still be over-\n# ridden by the user, but otherwise take precedence.\n\n: ${AUTOCONF=\"autoconf\"}\n: ${AUTOMAKE=\"automake\"}\n\n\n## -------------------------- ##\n## Source external libraries. ##\n## -------------------------- ##\n\n# Much of our low-level functionality needs to be sourced from external\n# libraries, which are installed to $pkgauxdir.\n\n. `echo \"$0\" |${SED-sed} 's|[^/]*$||'`\"funclib.sh\"\n. `echo \"$0\" |${SED-sed} 's|[^/]*$||'`\"options-parser\"\n\n# Set a version string.\nscriptversion='(GNU @PACKAGE@) @VERSION@'\n\n\n# func_echo ARG...\n# ----------------\n# Libtool also displays the current mode in messages, so override\n# funclib.sh func_echo with this custom definition.\nfunc_echo ()\n{\n    $debug_cmd\n\n    _G_message=$*\n\n    func_echo_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_IFS\n      $ECHO \"$progname${opt_mode+: $opt_mode}: $_G_line\"\n    done\n    IFS=$func_echo_IFS\n}\n\n\n# func_warning ARG...\n# -------------------\n# Libtool warnings are not categorized, so override funclib.sh\n# func_warning with this simpler definition.\nfunc_warning ()\n{\n    $debug_cmd\n\n    $warning_func ${1+\"$@\"}\n}\n\n\n## ---------------- ##\n## Options parsing. ##\n## ---------------- ##\n\n# Hook in the functions to make sure our own options are parsed during\n# the option parsing loop.\n\nusage='$progpath [OPTION]... [MODE-ARG]...'\n\n# Short help message in response to '-h'.\nusage_message=\"Options:\n       --config             show all configuration variables\n       --debug              enable verbose shell tracing\n   -n, --dry-run            display commands without modifying any files\n       --features           display basic configuration information and exit\n       --mode=MODE          use operation mode MODE\n       --no-warnings        equivalent to '-Wnone'\n       --preserve-dup-deps  don't remove duplicate dependency libraries\n       --quiet, --silent    don't print informational messages\n       --tag=TAG            use configuration variables from tag TAG\n   -v, --verbose            print more informational messages than default\n       --version            print version information\n   -W, --warnings=CATEGORY  report the warnings falling in CATEGORY [all]\n   -h, --help, --help-all   print short, long, or detailed help message\n\"\n\n# Additional text appended to 'usage_message' in response to '--help'.\nfunc_help ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"$long_help_message\n\nMODE must be one of the following:\n\n       clean           remove files from the build directory\n       compile         compile a source file into a libtool object\n       execute         automatically set library path, then run a program\n       finish          complete the installation of libtool libraries\n       install         install libraries or executables\n       link            create a library or an executable\n       uninstall       remove libraries from an installed directory\n\nMODE-ARGS vary depending on the MODE.  When passed as first option,\n'--mode=MODE' may be abbreviated as 'MODE' or a unique abbreviation of that.\nTry '$progname --help --mode=MODE' for a more detailed description of MODE.\n\nWhen reporting a bug, please describe a test case to reproduce it and\ninclude the following information:\n\n       host-triplet:   $host\n       shell:          $SHELL\n       compiler:       $LTCC\n       compiler flags: $LTCFLAGS\n       linker:         $LD (gnu? $with_gnu_ld)\n       version:        $progname (GNU @PACKAGE@) @VERSION@\n       automake:       `($AUTOMAKE --version) 2>/dev/null |$SED 1q`\n       autoconf:       `($AUTOCONF --version) 2>/dev/null |$SED 1q`\n\nReport bugs to <@PACKAGE_BUGREPORT@>.\nGNU @PACKAGE@ home page: <@PACKAGE_URL@>.\nGeneral help using GNU software: <http://www.gnu.org/gethelp/>.\"\n    exit 0\n}\n\n\n# func_lo2o OBJECT-NAME\n# ---------------------\n# Transform OBJECT-NAME from a '.lo' suffix to the platform specific\n# object suffix.\n\nlo2o=s/\\\\.lo\\$/.$objext/\no2lo=s/\\\\.$objext\\$/.lo/\n\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_lo2o ()\n  {\n    case $1 in\n      *.lo) func_lo2o_result=${1%.lo}.$objext ;;\n      *   ) func_lo2o_result=$1               ;;\n    esac\n  }'\n\n  # func_xform LIBOBJ-OR-SOURCE\n  # ---------------------------\n  # Transform LIBOBJ-OR-SOURCE from a '.o' or '.c' (or otherwise)\n  # suffix to a '.lo' libtool-object suffix.\n  eval 'func_xform ()\n  {\n    func_xform_result=${1%.*}.lo\n  }'\nelse\n  # ...otherwise fall back to using sed.\n  func_lo2o ()\n  {\n    func_lo2o_result=`$ECHO \"$1\" | $SED \"$lo2o\"`\n  }\n\n  func_xform ()\n  {\n    func_xform_result=`$ECHO \"$1\" | $SED 's|\\.[^.]*$|.lo|'`\n  }\nfi\n\n\n# func_fatal_configuration ARG...\n# -------------------------------\n# Echo program name prefixed message to standard error, followed by\n# a configuration failure hint, and exit.\nfunc_fatal_configuration ()\n{\n    func_fatal_error ${1+\"$@\"} \\\n      \"See the $PACKAGE documentation for more information.\" \\\n      \"Fatal configuration error.\"\n}\n\n\n# func_config\n# -----------\n# Display the configuration for all the tags in this script.\nfunc_config ()\n{\n    re_begincf='^# ### BEGIN LIBTOOL'\n    re_endcf='^# ### END LIBTOOL'\n\n    # Default configuration.\n    $SED \"1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\\$d\" < \"$progpath\"\n\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      $SED -n \"/$re_begincf TAG CONFIG: $tagname\\$/,/$re_endcf TAG CONFIG: $tagname\\$/p\" < \"$progpath\"\n    done\n\n    exit $?\n}\n\n\n# func_features\n# -------------\n# Display the features supported by this script.\nfunc_features ()\n{\n    echo \"host: $host\"\n    if test yes = \"$build_libtool_libs\"; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test yes = \"$build_old_libs\"; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n\n    exit $?\n}\n\n\n# func_enable_tag TAGNAME\n# -----------------------\n# Verify that TAGNAME is valid, and either flag an error and exit, or\n# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist\n# variable here.\nfunc_enable_tag ()\n{\n    # Global variable:\n    tagname=$1\n\n    re_begincf=\"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\\$\"\n    re_endcf=\"^# ### END LIBTOOL TAG CONFIG: $tagname\\$\"\n    sed_extractcf=/$re_begincf/,/$re_endcf/p\n\n    # Validate tagname.\n    case $tagname in\n      *[!-_A-Za-z0-9,/]*)\n        func_fatal_error \"invalid tag name: $tagname\"\n        ;;\n    esac\n\n    # Don't test for the \"default\" C tag, as we know it's\n    # there but not specially marked.\n    case $tagname in\n        CC) ;;\n    *)\n        if $GREP \"$re_begincf\" \"$progpath\" >/dev/null 2>&1; then\n\t  taglist=\"$taglist $tagname\"\n\n\t  # Evaluate the configuration.  Be careful to quote the path\n\t  # and the sed script, to avoid splitting on whitespace, but\n\t  # also don't use non-portable quotes within backquotes within\n\t  # quotes we have to do it in 2 steps:\n\t  extractedcf=`$SED -n -e \"$sed_extractcf\" < \"$progpath\"`\n\t  eval \"$extractedcf\"\n        else\n\t  func_error \"ignoring unknown tag $tagname\"\n        fi\n        ;;\n    esac\n}\n\n\n# func_check_version_match\n# ------------------------\n# Ensure that we are using m4 macros, and libtool script from the same\n# release of libtool.\nfunc_check_version_match ()\n{\n    if test \"$package_revision\" != \"$macro_revision\"; then\n      if test \"$VERSION\" != \"$macro_version\"; then\n        if test -z \"$macro_version\"; then\n          cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from an older release.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n        else\n          cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n        fi\n      else\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,\n$progname: but the definition of this LT_INIT comes from revision $macro_revision.\n$progname: You should recreate aclocal.m4 with macros from revision $package_revision\n$progname: of $PACKAGE $VERSION and run autoconf again.\n_LT_EOF\n      fi\n\n      exit $EXIT_MISMATCH\n    fi\n}\n\n\n# libtool_options_prep [ARG]...\n# -----------------------------\n# Preparation for options parsed by libtool.\nlibtool_options_prep ()\n{\n    $debug_mode\n\n    # Option defaults:\n    opt_config=false\n    opt_dlopen=\n    opt_dry_run=false\n    opt_help=false\n    opt_mode=\n    opt_preserve_dup_deps=false\n    opt_quiet=false\n\n    nonopt=\n    preserve_args=\n\n    _G_rc_lt_options_prep=:\n\n    # Shorthand for --mode=foo, only valid as the first argument\n    case $1 in\n    clean|clea|cle|cl)\n      shift; set dummy --mode clean ${1+\"$@\"}; shift\n      ;;\n    compile|compil|compi|comp|com|co|c)\n      shift; set dummy --mode compile ${1+\"$@\"}; shift\n      ;;\n    execute|execut|execu|exec|exe|ex|e)\n      shift; set dummy --mode execute ${1+\"$@\"}; shift\n      ;;\n    finish|finis|fini|fin|fi|f)\n      shift; set dummy --mode finish ${1+\"$@\"}; shift\n      ;;\n    install|instal|insta|inst|ins|in|i)\n      shift; set dummy --mode install ${1+\"$@\"}; shift\n      ;;\n    link|lin|li|l)\n      shift; set dummy --mode link ${1+\"$@\"}; shift\n      ;;\n    uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)\n      shift; set dummy --mode uninstall ${1+\"$@\"}; shift\n      ;;\n    *)\n      _G_rc_lt_options_prep=false\n      ;;\n    esac\n\n    if $_G_rc_lt_options_prep; then\n      # Pass back the list of options.\n      func_quote eval ${1+\"$@\"}\n      libtool_options_prep_result=$func_quote_result\n    fi\n}\nfunc_add_hook func_options_prep libtool_options_prep\n\n\n# libtool_parse_options [ARG]...\n# ---------------------------------\n# Provide handling for libtool specific options.\nlibtool_parse_options ()\n{\n    $debug_cmd\n\n    _G_rc_lt_parse_options=false\n\n    # Perform our own loop to consume as many options as possible in\n    # each iteration.\n    while test $# -gt 0; do\n      _G_match_lt_parse_options=:\n      _G_opt=$1\n      shift\n      case $_G_opt in\n        --dry-run|--dryrun|-n)\n                        opt_dry_run=:\n                        ;;\n\n        --config)       func_config ;;\n\n        --dlopen|-dlopen)\n                        opt_dlopen=\"${opt_dlopen+$opt_dlopen\n}$1\"\n                        shift\n                        ;;\n\n        --preserve-dup-deps)\n                        opt_preserve_dup_deps=: ;;\n\n        --features)     func_features ;;\n\n        --finish)       set dummy --mode finish ${1+\"$@\"}; shift ;;\n\n        --help)         opt_help=: ;;\n\n        --help-all)     opt_help=': help-all' ;;\n\n        --mode)         test $# = 0 && func_missing_arg $_G_opt && break\n                        opt_mode=$1\n                        case $1 in\n                          # Valid mode arguments:\n                          clean|compile|execute|finish|install|link|relink|uninstall) ;;\n\n                          # Catch anything else as an error\n                          *) func_error \"invalid argument for $_G_opt\"\n                             exit_cmd=exit\n                             break\n                             ;;\n                        esac\n                        shift\n                        ;;\n\n        --no-silent|--no-quiet)\n                        opt_quiet=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --no-warnings|--no-warning|--no-warn)\n                        opt_warning=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --no-verbose)\n                        opt_verbose=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --silent|--quiet)\n                        opt_quiet=:\n                        opt_verbose=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --tag)          test $# = 0 && func_missing_arg $_G_opt && break\n                        opt_tag=$1\n                        func_append preserve_args \" $_G_opt $1\"\n                        func_enable_tag \"$1\"\n                        shift\n                        ;;\n\n        --verbose|-v)   opt_quiet=false\n                        opt_verbose=:\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        # An option not handled by this hook function:\n        *)              set dummy \"$_G_opt\" ${1+\"$@\"} ; shift\n                        _G_match_lt_parse_options=false\n                        break\n                        ;;\n      esac\n      $_G_match_lt_parse_options && _G_rc_lt_parse_options=:\n    done\n\n    if $_G_rc_lt_parse_options; then\n      # save modified positional parameters for caller\n      func_quote eval ${1+\"$@\"}\n      libtool_parse_options_result=$func_quote_result\n    fi\n}\nfunc_add_hook func_parse_options libtool_parse_options\n\n\n\n# libtool_validate_options [ARG]...\n# ---------------------------------\n# Perform any sanity checks on option settings and/or unconsumed\n# arguments.\nlibtool_validate_options ()\n{\n    # save first non-option argument\n    if test 0 -lt $#; then\n      nonopt=$1\n      shift\n    fi\n\n    # preserve --debug\n    test : = \"$debug_cmd\" || func_append preserve_args \" --debug\"\n\n    case $host in\n      # Solaris2 added to fix http://debbugs.gnu.org/cgi/bugreport.cgi?bug=16452\n      # see also: http://gcc.gnu.org/bugzilla/show_bug.cgi?id=59788\n      *cygwin* | *mingw* | *pw32* | *cegcc* | *solaris2* | *os2*)\n        # don't eliminate duplications in $postdeps and $predeps\n        opt_duplicate_compiler_generated_deps=:\n        ;;\n      *)\n        opt_duplicate_compiler_generated_deps=$opt_preserve_dup_deps\n        ;;\n    esac\n\n    $opt_help || {\n      # Sanity checks first:\n      func_check_version_match\n\n      test yes != \"$build_libtool_libs\" \\\n        && test yes != \"$build_old_libs\" \\\n        && func_fatal_configuration \"not configured to build any kind of library\"\n\n      # Darwin sucks\n      eval std_shrext=\\\"$shrext_cmds\\\"\n\n      # Only execute mode is allowed to have -dlopen flags.\n      if test -n \"$opt_dlopen\" && test execute != \"$opt_mode\"; then\n        func_error \"unrecognized option '-dlopen'\"\n        $ECHO \"$help\" 1>&2\n        exit $EXIT_FAILURE\n      fi\n\n      # Change the help message to a mode-specific one.\n      generic_help=$help\n      help=\"Try '$progname --help --mode=$opt_mode' for more information.\"\n    }\n\n    # Pass back the unparsed argument list\n    func_quote eval ${1+\"$@\"}\n    libtool_validate_options_result=$func_quote_result\n}\nfunc_add_hook func_validate_options libtool_validate_options\n\n\n# Process options as early as possible so that --help and --version\n# can return quickly.\nfunc_options ${1+\"$@\"}\neval set dummy \"$func_options_result\"; shift\n\n\n\n## ----------- ##\n##    Main.    ##\n## ----------- ##\n\nmagic='%%%MAGIC variable%%%'\nmagic_exe='%%%MAGIC EXE variable%%%'\n\n# Global variables.\nextracted_archives=\nextracted_serial=0\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n}\n\n# func_generated_by_libtool\n# True iff stdin has been generated by Libtool. This function is only\n# a basic sanity check; it will hardly flush out determined imposters.\nfunc_generated_by_libtool_p ()\n{\n  $GREP \"^# Generated by .*$PACKAGE\" > /dev/null 2>&1\n}\n\n# func_lalib_p file\n# True iff FILE is a libtool '.la' library or '.lo' object file.\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_lalib_p ()\n{\n    test -f \"$1\" &&\n      $SED -e 4q \"$1\" 2>/dev/null | func_generated_by_libtool_p\n}\n\n# func_lalib_unsafe_p file\n# True iff FILE is a libtool '.la' library or '.lo' object file.\n# This function implements the same check as func_lalib_p without\n# resorting to external programs.  To this end, it redirects stdin and\n# closes it afterwards, without saving the original file descriptor.\n# As a safety measure, use it only where a negative result would be\n# fatal anyway.  Works if 'file' does not exist.\nfunc_lalib_unsafe_p ()\n{\n    lalib_p=no\n    if test -f \"$1\" && test -r \"$1\" && exec 5<&0 <\"$1\"; then\n\tfor lalib_p_l in 1 2 3 4\n\tdo\n\t    read lalib_p_line\n\t    case $lalib_p_line in\n\t\t\\#\\ Generated\\ by\\ *$PACKAGE* ) lalib_p=yes; break;;\n\t    esac\n\tdone\n\texec 0<&5 5<&-\n    fi\n    test yes = \"$lalib_p\"\n}\n\n# func_ltwrapper_script_p file\n# True iff FILE is a libtool wrapper script\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_script_p ()\n{\n    test -f \"$1\" &&\n      $lt_truncate_bin < \"$1\" 2>/dev/null | func_generated_by_libtool_p\n}\n\n# func_ltwrapper_executable_p file\n# True iff FILE is a libtool wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_executable_p ()\n{\n    func_ltwrapper_exec_suffix=\n    case $1 in\n    *.exe) ;;\n    *) func_ltwrapper_exec_suffix=.exe ;;\n    esac\n    $GREP \"$magic_exe\" \"$1$func_ltwrapper_exec_suffix\" >/dev/null 2>&1\n}\n\n# func_ltwrapper_scriptname file\n# Assumes file is an ltwrapper_executable\n# uses $file to determine the appropriate filename for a\n# temporary ltwrapper_script.\nfunc_ltwrapper_scriptname ()\n{\n    func_dirname_and_basename \"$1\" \"\" \".\"\n    func_stripname '' '.exe' \"$func_basename_result\"\n    func_ltwrapper_scriptname_result=$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper\n}\n\n# func_ltwrapper_p file\n# True iff FILE is a libtool wrapper script or wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_p ()\n{\n    func_ltwrapper_script_p \"$1\" || func_ltwrapper_executable_p \"$1\"\n}\n\n\n# func_execute_cmds commands fail_cmd\n# Execute tilde-delimited COMMANDS.\n# If FAIL_CMD is given, eval that upon failure.\n# FAIL_CMD may read-access the current command in variable CMD!\nfunc_execute_cmds ()\n{\n    $debug_cmd\n\n    save_ifs=$IFS; IFS='~'\n    for cmd in $1; do\n      IFS=$sp$nl\n      eval cmd=\\\"$cmd\\\"\n      IFS=$save_ifs\n      func_show_eval \"$cmd\" \"${2-:}\"\n    done\n    IFS=$save_ifs\n}\n\n\n# func_source file\n# Source FILE, adding directory component if necessary.\n# Note that it is not necessary on cygwin/mingw to append a dot to\n# FILE even if both FILE and FILE.exe exist: automatic-append-.exe\n# behavior happens only for exec(3), not for open(2)!  Also, sourcing\n# 'FILE.' does not work on cygwin managed mounts.\nfunc_source ()\n{\n    $debug_cmd\n\n    case $1 in\n    */* | *\\\\*)\t. \"$1\" ;;\n    *)\t\t. \"./$1\" ;;\n    esac\n}\n\n\n# func_resolve_sysroot PATH\n# Replace a leading = in PATH with a sysroot.  Store the result into\n# func_resolve_sysroot_result\nfunc_resolve_sysroot ()\n{\n  func_resolve_sysroot_result=$1\n  case $func_resolve_sysroot_result in\n  =*)\n    func_stripname '=' '' \"$func_resolve_sysroot_result\"\n    func_resolve_sysroot_result=$lt_sysroot$func_stripname_result\n    ;;\n  esac\n}\n\n# func_replace_sysroot PATH\n# If PATH begins with the sysroot, replace it with = and\n# store the result into func_replace_sysroot_result.\nfunc_replace_sysroot ()\n{\n  case $lt_sysroot:$1 in\n  ?*:\"$lt_sysroot\"*)\n    func_stripname \"$lt_sysroot\" '' \"$1\"\n    func_replace_sysroot_result='='$func_stripname_result\n    ;;\n  *)\n    # Including no sysroot.\n    func_replace_sysroot_result=$1\n    ;;\n  esac\n}\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    $debug_cmd\n\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n\tfunc_append_quoted CC_quoted \"$arg\"\n      done\n      CC_expanded=`func_echo_all $CC`\n      CC_quoted_expanded=`func_echo_all $CC_quoted`\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n      \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if $GREP \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`$SED -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t      # Double-quote args containing other shell metacharacters.\n\t      func_append_quoted CC_quoted \"$arg\"\n\t    done\n\t    CC_expanded=`func_echo_all $CC`\n\t    CC_quoted_expanded=`func_echo_all $CC_quoted`\n\t    case \"$@ \" in\n\t    \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n\t    \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  func_echo \"unable to infer tagged configuration\"\n\t  func_fatal_error \"specify a tag with '--tag'\"\n#\telse\n#\t  func_verbose \"using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n\n# func_write_libtool_object output_name pic_name nonpic_name\n# Create a libtool object file (analogous to a \".la\" file),\n# but don't create it if we're doing a dry run.\nfunc_write_libtool_object ()\n{\n    write_libobj=$1\n    if test yes = \"$build_libtool_libs\"; then\n      write_lobj=\\'$2\\'\n    else\n      write_lobj=none\n    fi\n\n    if test yes = \"$build_old_libs\"; then\n      write_oldobj=\\'$3\\'\n    else\n      write_oldobj=none\n    fi\n\n    $opt_dry_run || {\n      cat >${write_libobj}T <<EOF\n# $write_libobj - a libtool object file\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=$write_lobj\n\n# Name of the non-PIC object\nnon_pic_object=$write_oldobj\n\nEOF\n      $MV \"${write_libobj}T\" \"$write_libobj\"\n    }\n}\n\n\n##################################################\n# FILE NAME AND PATH CONVERSION HELPER FUNCTIONS #\n##################################################\n\n# func_convert_core_file_wine_to_w32 ARG\n# Helper function used by file name conversion functions when $build is *nix,\n# and $host is mingw, cygwin, or some other w32 environment. Relies on a\n# correctly configured wine environment available, with the winepath program\n# in $build's $PATH.\n#\n# ARG is the $build file name to be converted to w32 format.\n# Result is available in $func_convert_core_file_wine_to_w32_result, and will\n# be empty on error (or when ARG is empty)\nfunc_convert_core_file_wine_to_w32 ()\n{\n  $debug_cmd\n\n  func_convert_core_file_wine_to_w32_result=$1\n  if test -n \"$1\"; then\n    # Unfortunately, winepath does not exit with a non-zero error code, so we\n    # are forced to check the contents of stdout. On the other hand, if the\n    # command is not found, the shell will set an exit code of 127 and print\n    # *an error message* to stdout. So we must check for both error code of\n    # zero AND non-empty stdout, which explains the odd construction:\n    func_convert_core_file_wine_to_w32_tmp=`winepath -w \"$1\" 2>/dev/null`\n    if test \"$?\" -eq 0 && test -n \"$func_convert_core_file_wine_to_w32_tmp\"; then\n      func_convert_core_file_wine_to_w32_result=`$ECHO \"$func_convert_core_file_wine_to_w32_tmp\" |\n        $SED -e \"$sed_naive_backslashify\"`\n    else\n      func_convert_core_file_wine_to_w32_result=\n    fi\n  fi\n}\n# end: func_convert_core_file_wine_to_w32\n\n\n# func_convert_core_path_wine_to_w32 ARG\n# Helper function used by path conversion functions when $build is *nix, and\n# $host is mingw, cygwin, or some other w32 environment. Relies on a correctly\n# configured wine environment available, with the winepath program in $build's\n# $PATH. Assumes ARG has no leading or trailing path separator characters.\n#\n# ARG is path to be converted from $build format to win32.\n# Result is available in $func_convert_core_path_wine_to_w32_result.\n# Unconvertible file (directory) names in ARG are skipped; if no directory names\n# are convertible, then the result may be empty.\nfunc_convert_core_path_wine_to_w32 ()\n{\n  $debug_cmd\n\n  # unfortunately, winepath doesn't convert paths, only file names\n  func_convert_core_path_wine_to_w32_result=\n  if test -n \"$1\"; then\n    oldIFS=$IFS\n    IFS=:\n    for func_convert_core_path_wine_to_w32_f in $1; do\n      IFS=$oldIFS\n      func_convert_core_file_wine_to_w32 \"$func_convert_core_path_wine_to_w32_f\"\n      if test -n \"$func_convert_core_file_wine_to_w32_result\"; then\n        if test -z \"$func_convert_core_path_wine_to_w32_result\"; then\n          func_convert_core_path_wine_to_w32_result=$func_convert_core_file_wine_to_w32_result\n        else\n          func_append func_convert_core_path_wine_to_w32_result \";$func_convert_core_file_wine_to_w32_result\"\n        fi\n      fi\n    done\n    IFS=$oldIFS\n  fi\n}\n# end: func_convert_core_path_wine_to_w32\n\n\n# func_cygpath ARGS...\n# Wrapper around calling the cygpath program via LT_CYGPATH. This is used when\n# when (1) $build is *nix and Cygwin is hosted via a wine environment; or (2)\n# $build is MSYS and $host is Cygwin, or (3) $build is Cygwin. In case (1) or\n# (2), returns the Cygwin file name or path in func_cygpath_result (input\n# file name or path is assumed to be in w32 format, as previously converted\n# from $build's *nix or MSYS format). In case (3), returns the w32 file name\n# or path in func_cygpath_result (input file name or path is assumed to be in\n# Cygwin format). Returns an empty string on error.\n#\n# ARGS are passed to cygpath, with the last one being the file name or path to\n# be converted.\n#\n# Specify the absolute *nix (or w32) name to cygpath in the LT_CYGPATH\n# environment variable; do not put it in $PATH.\nfunc_cygpath ()\n{\n  $debug_cmd\n\n  if test -n \"$LT_CYGPATH\" && test -f \"$LT_CYGPATH\"; then\n    func_cygpath_result=`$LT_CYGPATH \"$@\" 2>/dev/null`\n    if test \"$?\" -ne 0; then\n      # on failure, ensure result is empty\n      func_cygpath_result=\n    fi\n  else\n    func_cygpath_result=\n    func_error \"LT_CYGPATH is empty or specifies non-existent file: '$LT_CYGPATH'\"\n  fi\n}\n#end: func_cygpath\n\n\n# func_convert_core_msys_to_w32 ARG\n# Convert file name or path ARG from MSYS format to w32 format.  Return\n# result in func_convert_core_msys_to_w32_result.\nfunc_convert_core_msys_to_w32 ()\n{\n  $debug_cmd\n\n  # awkward: cmd appends spaces to result\n  func_convert_core_msys_to_w32_result=`( cmd //c echo \"$1\" ) 2>/dev/null |\n    $SED -e 's/[ ]*$//' -e \"$sed_naive_backslashify\"`\n}\n#end: func_convert_core_msys_to_w32\n\n\n# func_convert_file_check ARG1 ARG2\n# Verify that ARG1 (a file name in $build format) was converted to $host\n# format in ARG2. Otherwise, emit an error message, but continue (resetting\n# func_to_host_file_result to ARG1).\nfunc_convert_file_check ()\n{\n  $debug_cmd\n\n  if test -z \"$2\" && test -n \"$1\"; then\n    func_error \"Could not determine host file name corresponding to\"\n    func_error \"  '$1'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback:\n    func_to_host_file_result=$1\n  fi\n}\n# end func_convert_file_check\n\n\n# func_convert_path_check FROM_PATHSEP TO_PATHSEP FROM_PATH TO_PATH\n# Verify that FROM_PATH (a path in $build format) was converted to $host\n# format in TO_PATH. Otherwise, emit an error message, but continue, resetting\n# func_to_host_file_result to a simplistic fallback value (see below).\nfunc_convert_path_check ()\n{\n  $debug_cmd\n\n  if test -z \"$4\" && test -n \"$3\"; then\n    func_error \"Could not determine the host path corresponding to\"\n    func_error \"  '$3'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback.  This is a deliberately simplistic \"conversion\" and\n    # should not be \"improved\".  See libtool.info.\n    if test \"x$1\" != \"x$2\"; then\n      lt_replace_pathsep_chars=\"s|$1|$2|g\"\n      func_to_host_path_result=`echo \"$3\" |\n        $SED -e \"$lt_replace_pathsep_chars\"`\n    else\n      func_to_host_path_result=$3\n    fi\n  fi\n}\n# end func_convert_path_check\n\n\n# func_convert_path_front_back_pathsep FRONTPAT BACKPAT REPL ORIG\n# Modifies func_to_host_path_result by prepending REPL if ORIG matches FRONTPAT\n# and appending REPL if ORIG matches BACKPAT.\nfunc_convert_path_front_back_pathsep ()\n{\n  $debug_cmd\n\n  case $4 in\n  $1 ) func_to_host_path_result=$3$func_to_host_path_result\n    ;;\n  esac\n  case $4 in\n  $2 ) func_append func_to_host_path_result \"$3\"\n    ;;\n  esac\n}\n# end func_convert_path_front_back_pathsep\n\n\n##################################################\n# $build to $host FILE NAME CONVERSION FUNCTIONS #\n##################################################\n# invoked via '$to_host_file_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# Result will be available in $func_to_host_file_result.\n\n\n# func_to_host_file ARG\n# Converts the file name ARG from $build format to $host format. Return result\n# in func_to_host_file_result.\nfunc_to_host_file ()\n{\n  $debug_cmd\n\n  $to_host_file_cmd \"$1\"\n}\n# end func_to_host_file\n\n\n# func_to_tool_file ARG LAZY\n# converts the file name ARG from $build format to toolchain format. Return\n# result in func_to_tool_file_result.  If the conversion in use is listed\n# in (the comma separated) LAZY, no conversion takes place.\nfunc_to_tool_file ()\n{\n  $debug_cmd\n\n  case ,$2, in\n    *,\"$to_tool_file_cmd\",*)\n      func_to_tool_file_result=$1\n      ;;\n    *)\n      $to_tool_file_cmd \"$1\"\n      func_to_tool_file_result=$func_to_host_file_result\n      ;;\n  esac\n}\n# end func_to_tool_file\n\n\n# func_convert_file_noop ARG\n# Copy ARG to func_to_host_file_result.\nfunc_convert_file_noop ()\n{\n  func_to_host_file_result=$1\n}\n# end func_convert_file_noop\n\n\n# func_convert_file_msys_to_w32 ARG\n# Convert file name ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_msys_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_to_host_file_result=$func_convert_core_msys_to_w32_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_w32\n\n\n# func_convert_file_cygwin_to_w32 ARG\n# Convert file name ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_cygwin_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    # because $build is cygwin, we call \"the\" cygpath in $PATH; no need to use\n    # LT_CYGPATH in this case.\n    func_to_host_file_result=`cygpath -m \"$1\"`\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_cygwin_to_w32\n\n\n# func_convert_file_nix_to_w32 ARG\n# Convert file name ARG from *nix to w32 format.  Requires a wine environment\n# and a working winepath. Returns result in func_to_host_file_result.\nfunc_convert_file_nix_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_to_host_file_result=$func_convert_core_file_wine_to_w32_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_w32\n\n\n# func_convert_file_msys_to_cygwin ARG\n# Convert file name ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_file_msys_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_file_result=$func_cygpath_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_cygwin\n\n\n# func_convert_file_nix_to_cygwin ARG\n# Convert file name ARG from *nix to Cygwin format.  Requires Cygwin installed\n# in a wine environment, working winepath, and LT_CYGPATH set.  Returns result\n# in func_to_host_file_result.\nfunc_convert_file_nix_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    # convert from *nix to w32, then use cygpath to convert from w32 to cygwin.\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_file_wine_to_w32_result\"\n    func_to_host_file_result=$func_cygpath_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_cygwin\n\n\n#############################################\n# $build to $host PATH CONVERSION FUNCTIONS #\n#############################################\n# invoked via '$to_host_path_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# The result will be available in $func_to_host_path_result.\n#\n# Path separators are also converted from $build format to $host format.  If\n# ARG begins or ends with a path separator character, it is preserved (but\n# converted to $host format) on output.\n#\n# All path conversion functions are named using the following convention:\n#   file name conversion function    : func_convert_file_X_to_Y ()\n#   path conversion function         : func_convert_path_X_to_Y ()\n# where, for any given $build/$host combination the 'X_to_Y' value is the\n# same.  If conversion functions are added for new $build/$host combinations,\n# the two new functions must follow this pattern, or func_init_to_host_path_cmd\n# will break.\n\n\n# func_init_to_host_path_cmd\n# Ensures that function \"pointer\" variable $to_host_path_cmd is set to the\n# appropriate value, based on the value of $to_host_file_cmd.\nto_host_path_cmd=\nfunc_init_to_host_path_cmd ()\n{\n  $debug_cmd\n\n  if test -z \"$to_host_path_cmd\"; then\n    func_stripname 'func_convert_file_' '' \"$to_host_file_cmd\"\n    to_host_path_cmd=func_convert_path_$func_stripname_result\n  fi\n}\n\n\n# func_to_host_path ARG\n# Converts the path ARG from $build format to $host format. Return result\n# in func_to_host_path_result.\nfunc_to_host_path ()\n{\n  $debug_cmd\n\n  func_init_to_host_path_cmd\n  $to_host_path_cmd \"$1\"\n}\n# end func_to_host_path\n\n\n# func_convert_path_noop ARG\n# Copy ARG to func_to_host_path_result.\nfunc_convert_path_noop ()\n{\n  func_to_host_path_result=$1\n}\n# end func_convert_path_noop\n\n\n# func_convert_path_msys_to_w32 ARG\n# Convert path ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_path_result.\nfunc_convert_path_msys_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from ARG.  MSYS\n    # behavior is inconsistent here; cygpath turns them into '.;' and ';.';\n    # and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=$func_convert_core_msys_to_w32_result\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_w32\n\n\n# func_convert_path_cygwin_to_w32 ARG\n# Convert path ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_cygwin_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_to_host_path_result=`cygpath -m -p \"$func_to_host_path_tmp1\"`\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_cygwin_to_w32\n\n\n# func_convert_path_nix_to_w32 ARG\n# Convert path ARG from *nix to w32 format.  Requires a wine environment and\n# a working winepath.  Returns result in func_to_host_file_result.\nfunc_convert_path_nix_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=$func_convert_core_path_wine_to_w32_result\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_w32\n\n\n# func_convert_path_msys_to_cygwin ARG\n# Convert path ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_path_msys_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_path_result=$func_cygpath_result\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_cygwin\n\n\n# func_convert_path_nix_to_cygwin ARG\n# Convert path ARG from *nix to Cygwin format.  Requires Cygwin installed in a\n# a wine environment, working winepath, and LT_CYGPATH set.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_nix_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from\n    # ARG. msys behavior is inconsistent here, cygpath turns them\n    # into '.;' and ';.', and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_path_wine_to_w32_result\"\n    func_to_host_path_result=$func_cygpath_result\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_cygwin\n\n\n# func_dll_def_p FILE\n# True iff FILE is a Windows DLL '.def' file.\n# Keep in sync with _LT_DLL_DEF_P in libtool.m4\nfunc_dll_def_p ()\n{\n  $debug_cmd\n\n  func_dll_def_p_tmp=`$SED -n \\\n    -e 's/^[\t ]*//' \\\n    -e '/^\\(;.*\\)*$/d' \\\n    -e 's/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p' \\\n    -e q \\\n    \"$1\"`\n  test DEF = \"$func_dll_def_p_tmp\"\n}\n\n\n# func_mode_compile arg...\nfunc_mode_compile ()\n{\n    $debug_cmd\n\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=$nonopt  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n    pie_flag=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=$arg\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=$arg\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  test -n \"$libobj\" && \\\n\t    func_fatal_error \"you cannot specify '-o' more than once\"\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-pie | -fpie | -fPIE)\n          func_append pie_flag \" $arg\"\n\t  continue\n\t  ;;\n\n\t-shared | -static | -prefer-pic | -prefer-non-pic)\n\t  func_append later \" $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  func_stripname '-Wc,' '' \"$arg\"\n\t  args=$func_stripname_result\n\t  lastarg=\n\t  save_ifs=$IFS; IFS=,\n\t  for arg in $args; do\n\t    IFS=$save_ifs\n\t    func_append_quoted lastarg \"$arg\"\n\t  done\n\t  IFS=$save_ifs\n\t  func_stripname ' ' '' \"$lastarg\"\n\t  lastarg=$func_stripname_result\n\n\t  # Add the arguments to base_compile.\n\t  func_append base_compile \" $lastarg\"\n\t  continue\n\t  ;;\n\n\t*)\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=$srcfile\n\t  srcfile=$arg\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      func_append_quoted base_compile \"$lastarg\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      func_fatal_error \"you must specify an argument for -Xcompile\"\n      ;;\n    target)\n      func_fatal_error \"you must specify a target with '-o'\"\n      ;;\n    *)\n      # Get the name of the library object.\n      test -z \"$libobj\" && {\n\tfunc_basename \"$srcfile\"\n\tlibobj=$func_basename_result\n      }\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    case $libobj in\n    *.[cCFSifmso] | \\\n    *.ada | *.adb | *.ads | *.asm | \\\n    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \\\n    *.[fF][09]? | *.for | *.java | *.go | *.obj | *.sx | *.cu | *.cup)\n      func_xform \"$libobj\"\n      libobj=$func_xform_result\n      ;;\n    esac\n\n    case $libobj in\n    *.lo) func_lo2o \"$libobj\"; obj=$func_lo2o_result ;;\n    *)\n      func_fatal_error \"cannot determine name of library object from '$libobj'\"\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -shared)\n\ttest yes = \"$build_libtool_libs\" \\\n\t  || func_fatal_configuration \"cannot build a shared library\"\n\tbuild_old_libs=no\n\tcontinue\n\t;;\n\n      -static)\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    func_quote_arg pretty \"$libobj\"\n    test \"X$libobj\" != \"X$func_quote_arg_result\" \\\n      && $ECHO \"X$libobj\" | $GREP '[]~#^*{};<>?\"'\"'\"'\t &()|`$[]' \\\n      && func_warning \"libobj name '$libobj' may not contain shell special characters.\"\n    func_dirname_and_basename \"$obj\" \"/\" \"\"\n    objname=$func_basename_result\n    xdir=$func_dirname_result\n    lobj=$xdir$objdir/$objname\n\n    test -z \"$base_compile\" && \\\n      func_fatal_help \"you must specify a compilation command\"\n\n    # Delete any leftover library objects.\n    if test yes = \"$build_old_libs\"; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2* | cegcc*)\n      pic_mode=default\n      ;;\n    esac\n    if test no = \"$pic_mode\" && test pass_all != \"$deplibs_check_method\"; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test no = \"$compiler_c_o\"; then\n      output_obj=`$ECHO \"$srcfile\" | $SED 's%^.*/%%; s%\\.[^.]*$%%'`.$objext\n      lockfile=$output_obj.lock\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test yes = \"$need_locks\"; then\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test warn = \"$need_locks\"; then\n      if test -f \"$lockfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n      func_append removelist \" $output_obj\"\n      $ECHO \"$srcfile\" > \"$lockfile\"\n    fi\n\n    $opt_dry_run || $RM $removelist\n    func_append removelist \" $lockfile\"\n    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15\n\n    func_to_tool_file \"$srcfile\" func_convert_file_msys_to_w32\n    srcfile=$func_to_tool_file_result\n    func_quote_arg pretty \"$srcfile\"\n    qsrcfile=$func_quote_arg_result\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test yes = \"$build_libtool_libs\"; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test no != \"$pic_mode\"; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      func_mkdir_p \"$xdir$objdir\"\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tfunc_append command \" -o $lobj\"\n      fi\n\n      func_show_eval_locale \"$command\"\t\\\n          'test -n \"$output_obj\" && $RM $removelist; exit $EXIT_FAILURE'\n\n      if test warn = \"$need_locks\" &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$lobj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n\n      # Allow error messages only from the first compilation.\n      if test yes = \"$suppress_opt\"; then\n\tsuppress_output=' >/dev/null 2>&1'\n      fi\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test yes = \"$build_old_libs\"; then\n      if test yes != \"$pic_mode\"; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile$pie_flag\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test yes = \"$compiler_c_o\"; then\n\tfunc_append command \" -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      func_append command \"$suppress_output\"\n      func_show_eval_locale \"$command\" \\\n        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'\n\n      if test warn = \"$need_locks\" &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$obj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n    fi\n\n    $opt_dry_run || {\n      func_write_libtool_object \"$libobj\" \"$objdir/$objname\" \"$objname\"\n\n      # Unlock the critical section if it was locked\n      if test no != \"$need_locks\"; then\n\tremovelist=$lockfile\n        $RM \"$lockfile\"\n      fi\n    }\n\n    exit $EXIT_SUCCESS\n}\n\n$opt_help || {\n  test compile = \"$opt_mode\" && func_mode_compile ${1+\"$@\"}\n}\n\nfunc_mode_help ()\n{\n    # We need to display help for each of the modes.\n    case $opt_mode in\n      \"\")\n        # Generic help is extracted from the usage comments\n        # at the start of this file.\n        func_help\n        ;;\n\n      clean)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      compile)\n      $ECHO \\\n\"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -no-suppress      do not suppress compiler output for multiple passes\n  -prefer-pic       try to build PIC objects only\n  -prefer-non-pic   try to build non-PIC objects only\n  -shared           do not build a '.o' file suitable for static linking\n  -static           only build a '.o' file suitable for static linking\n  -Wc,FLAG          pass FLAG directly to the compiler\n\nCOMPILE-COMMAND is a command to be used in creating a 'standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix '.c' with the\nlibrary object suffix, '.lo'.\"\n        ;;\n\n      execute)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to '-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n        ;;\n\n      finish)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe '--dry-run' option if you just want to see what would be executed.\"\n        ;;\n\n      install)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the 'install' or 'cp' program.\n\nThe following components of INSTALL-COMMAND are treated specially:\n\n  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n        ;;\n\n      link)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -bindir BINDIR    specify path to binaries directory (for systems where\n                    libraries must be found in the PATH setting at runtime)\n  -dlopen FILE      '-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n                    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n                    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  use a list of object files found in FILE to specify objects\n  -os2dllname NAME  force a short DLL name on OS/2 (no effect on other OSes)\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -shared           only do dynamic linking of libtool libraries\n  -shrext SUFFIX    override the standard shared library file extension\n  -static           do not do any dynamic linking of uninstalled libtool libraries\n  -static-libtool-libs\n                    do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n                    specify library version info [each variable defaults to 0]\n  -weak LIBNAME     declare that the target provides the LIBNAME interface\n  -Wc,FLAG\n  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler\n  -Wl,FLAG\n  -Xlinker FLAG     pass linker-specific FLAG directly to the linker\n  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)\n\nAll other options (arguments beginning with '-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in '.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in '.la', then a libtool library is created,\nonly library objects ('.lo' files) may be specified, and '-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in '.a' or '.lib', then a standard library is created\nusing 'ar' and 'ranlib', or on Windows using 'lib'.\n\nIf OUTPUT-FILE ends in '.lo' or '.$objext', then a reloadable object file\nis created, otherwise an executable program is created.\"\n        ;;\n\n      uninstall)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      *)\n        func_fatal_help \"invalid operation mode '$opt_mode'\"\n        ;;\n    esac\n\n    echo\n    $ECHO \"Try '$progname --help' for more information about other modes.\"\n}\n\n# Now that we've collected a possible --mode arg, show help if necessary\nif $opt_help; then\n  if test : = \"$opt_help\"; then\n    func_mode_help\n  else\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\tfunc_mode_help\n      done\n    } | $SED -n '1p; 2,$s/^Usage:/  or: /p'\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\techo\n\tfunc_mode_help\n      done\n    } |\n    $SED '1d\n      /^When reporting/,/^Report/{\n\tH\n\td\n      }\n      $x\n      /information about other modes/d\n      /more detailed .*MODE/d\n      s/^Usage:.*--mode=\\([^ ]*\\) .*/Description of \\1 mode:/'\n  fi\n  exit $?\nfi\n\n\n# func_mode_execute arg...\nfunc_mode_execute ()\n{\n    $debug_cmd\n\n    # The first argument is the command name.\n    cmd=$nonopt\n    test -z \"$cmd\" && \\\n      func_fatal_help \"you must specify a COMMAND\"\n\n    # Handle -dlopen flags immediately.\n    for file in $opt_dlopen; do\n      test -f \"$file\" \\\n\t|| func_fatal_help \"'$file' is not a file\"\n\n      dir=\n      case $file in\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"'$lib' is not a valid libtool archive\"\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\tfunc_source \"$file\"\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && \\\n\t    func_warning \"'$file' was not linked with '-export-dynamic'\"\n\t  continue\n\tfi\n\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=$func_dirname_result\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  func_append dir \"/$objdir\"\n\telse\n\t  if test ! -f \"$dir/$dlname\"; then\n\t    func_fatal_error \"cannot find '$dlname' in '$dir' or '$dir/$objdir'\"\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=$func_dirname_result\n\t;;\n\n      *)\n\tfunc_warning \"'-dlopen' is ignored for non-libtool libraries and objects\"\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=$absdir\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=$magic\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -* | *.la | *.lo ) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif func_ltwrapper_script_p \"$file\"; then\n\t  func_source \"$file\"\n\t  # Transform arg to wrapped name.\n\t  file=$progdir/$program\n\telif func_ltwrapper_executable_p \"$file\"; then\n\t  func_ltwrapper_scriptname \"$file\"\n\t  func_source \"$func_ltwrapper_scriptname_result\"\n\t  # Transform arg to wrapped name.\n\t  file=$progdir/$program\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      func_append_quoted args \"$file\"\n    done\n\n    if $opt_dry_run; then\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$ECHO \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\techo \"export $shlibpath_var\"\n      fi\n      $ECHO \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    else\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\n      do\n\teval \"if test \\\"\\${save_$lt_var+set}\\\" = set; then\n                $lt_var=\\$save_$lt_var; export $lt_var\n\t      else\n\t\t$lt_unset $lt_var\n\t      fi\"\n      done\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\\$cmd$args\n    fi\n}\n\ntest execute = \"$opt_mode\" && func_mode_execute ${1+\"$@\"}\n\n\n# func_mode_finish arg...\nfunc_mode_finish ()\n{\n    $debug_cmd\n\n    libs=\n    libdirs=\n    admincmds=\n\n    for opt in \"$nonopt\" ${1+\"$@\"}\n    do\n      if test -d \"$opt\"; then\n\tfunc_append libdirs \" $opt\"\n\n      elif test -f \"$opt\"; then\n\tif func_lalib_unsafe_p \"$opt\"; then\n\t  func_append libs \" $opt\"\n\telse\n\t  func_warning \"'$opt' is not a valid libtool archive\"\n\tfi\n\n      else\n\tfunc_fatal_error \"invalid argument '$opt'\"\n      fi\n    done\n\n    if test -n \"$libs\"; then\n      if test -n \"$lt_sysroot\"; then\n        sysroot_regex=`$ECHO \"$lt_sysroot\" | $SED \"$sed_make_literal_regex\"`\n        sysroot_cmd=\"s/\\([ ']\\)$sysroot_regex/\\1/g;\"\n      else\n        sysroot_cmd=\n      fi\n\n      # Remove sysroot references\n      if $opt_dry_run; then\n        for lib in $libs; do\n          echo \"removing references to $lt_sysroot and '=' prefixes from $lib\"\n        done\n      else\n        tmpdir=`func_mktempdir`\n        for lib in $libs; do\n\t  $SED -e \"$sysroot_cmd s/\\([ ']-[LR]\\)=/\\1/g; s/\\([ ']\\)=/\\1/g\" $lib \\\n\t    > $tmpdir/tmp-la\n\t  mv -f $tmpdir/tmp-la $lib\n\tdone\n        ${RM}r \"$tmpdir\"\n      fi\n    fi\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  func_execute_cmds \"$finish_cmds\" 'admincmds=\"$admincmds\n'\"$cmd\"'\"'\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $opt_dry_run || eval \"$cmds\" || func_append admincmds \"\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    $opt_quiet && exit $EXIT_SUCCESS\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      echo \"----------------------------------------------------------------------\"\n      echo \"Libraries have been installed in:\"\n      for libdir in $libdirs; do\n\t$ECHO \"   $libdir\"\n      done\n      echo\n      echo \"If you ever happen to want to link against installed libraries\"\n      echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n      echo \"specify the full pathname of the library, or use the '-LLIBDIR'\"\n      echo \"flag during linking and do at least one of the following:\"\n      if test -n \"$shlibpath_var\"; then\n\techo \"   - add LIBDIR to the '$shlibpath_var' environment variable\"\n\techo \"     during execution\"\n      fi\n      if test -n \"$runpath_var\"; then\n\techo \"   - add LIBDIR to the '$runpath_var' environment variable\"\n\techo \"     during linking\"\n      fi\n      if test -n \"$hardcode_libdir_flag_spec\"; then\n\tlibdir=LIBDIR\n\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n\t$ECHO \"   - use the '$flag' linker flag\"\n      fi\n      if test -n \"$admincmds\"; then\n\t$ECHO \"   - have your system administrator run these commands:$admincmds\"\n      fi\n      if test -f /etc/ld.so.conf; then\n\techo \"   - have your system administrator add LIBDIR to '/etc/ld.so.conf'\"\n      fi\n      echo\n\n      echo \"See any operating system documentation about shared libraries for\"\n      case $host in\n\tsolaris2.[6789]|solaris2.1[0-9])\n\t  echo \"more information, such as the ld(1), crle(1) and ld.so(8) manual\"\n\t  echo \"pages.\"\n\t  ;;\n\t*)\n\t  echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n\t  ;;\n      esac\n      echo \"----------------------------------------------------------------------\"\n    fi\n    exit $EXIT_SUCCESS\n}\n\ntest finish = \"$opt_mode\" && func_mode_finish ${1+\"$@\"}\n\n\n# func_mode_install arg...\nfunc_mode_install ()\n{\n    $debug_cmd\n\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$SHELL\" = \"$nonopt\" || test /bin/sh = \"$nonopt\" ||\n       # Allow the use of GNU shtool's install command.\n       case $nonopt in *shtool*) :;; *) false;; esac\n    then\n      # Aesthetically quote it.\n      func_quote_arg pretty \"$nonopt\"\n      install_prog=\"$func_quote_arg_result \"\n      arg=$1\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    func_quote_arg pretty \"$arg\"\n    func_append install_prog \"$func_quote_arg_result\"\n    install_shared_prog=$install_prog\n    case \" $install_prog \" in\n      *[\\\\\\ /]cp\\ *) install_cp=: ;;\n      *) install_cp=false ;;\n    esac\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=false\n    stripme=\n    no_mode=:\n    for arg\n    do\n      arg2=\n      if test -n \"$dest\"; then\n\tfunc_append files \" $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=: ;;\n      -f)\n\tif $install_cp; then :; else\n\t  prev=$arg\n\tfi\n\t;;\n      -g | -m | -o)\n\tprev=$arg\n\t;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  if test X-m = \"X$prev\" && test -n \"$install_override_mode\"; then\n\t    arg2=$install_override_mode\n\t    no_mode=false\n\t  fi\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      func_quote_arg pretty \"$arg\"\n      func_append install_prog \" $func_quote_arg_result\"\n      if test -n \"$arg2\"; then\n\tfunc_quote_arg pretty \"$arg2\"\n      fi\n      func_append install_shared_prog \" $func_quote_arg_result\"\n    done\n\n    test -z \"$install_prog\" && \\\n      func_fatal_help \"you must specify an install program\"\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the '$prev' option requires an argument\"\n\n    if test -n \"$install_override_mode\" && $no_mode; then\n      if $install_cp; then :; else\n\tfunc_quote_arg pretty \"$install_override_mode\"\n\tfunc_append install_shared_prog \" -m $func_quote_arg_result\"\n      fi\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\tfunc_fatal_help \"no file or destination specified\"\n      else\n\tfunc_fatal_help \"you must specify a destination\"\n      fi\n    fi\n\n    # Strip any trailing slash from the destination.\n    func_stripname '' '/' \"$dest\"\n    dest=$func_stripname_result\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=:\n    if $isdir; then\n      destdir=$dest\n      destname=\n    else\n      func_dirname_and_basename \"$dest\" \"\" \".\"\n      destdir=$func_dirname_result\n      destname=$func_basename_result\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files; shift\n      test \"$#\" -gt 1 && \\\n\tfunc_fatal_help \"'$dest' is not a directory\"\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  func_fatal_help \"'$destdir' must be an absolute directory name\"\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=$magic\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tfunc_append staticlibs \" $file\"\n\t;;\n\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"'$file' is not a valid libtool archive\"\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\tfunc_source \"$file\"\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append current_libdirs \" $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append future_libdirs \" $libdir\" ;;\n\t  esac\n\tfi\n\n\tfunc_dirname \"$file\" \"/\" \"\"\n\tdir=$func_dirname_result\n\tfunc_append dir \"$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$ECHO \"$destdir\" | $SED -e \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  test \"$inst_prefix_dir\" = \"$destdir\" && \\\n\t    func_fatal_error \"error: cannot install '$file' to a directory not ending in $libdir\"\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  func_warning \"relinking '$file'\"\n\t  func_show_eval \"$relink_command\" \\\n\t    'func_fatal_error \"error: relink '\\''$file'\\'' with the above command before installing it\"'\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names; shift\n\tif test -n \"$1\"; then\n\t  realname=$1\n\t  shift\n\n\t  srcname=$realname\n\t  test -n \"$relink_command\" && srcname=${realname}T\n\n\t  # Install the shared library and build the symlinks.\n\t  func_show_eval \"$install_shared_prog $dir/$srcname $destdir/$realname\" \\\n\t      'exit $?'\n\t  tstripme=$stripme\n\t  case $host_os in\n\t  cygwin* | mingw* | pw32* | cegcc*)\n\t    case $realname in\n\t    *.dll.a)\n\t      tstripme=\n\t      ;;\n\t    esac\n\t    ;;\n\t  os2*)\n\t    case $realname in\n\t    *_dll.a)\n\t      tstripme=\n\t      ;;\n\t    esac\n\t    ;;\n\t  esac\n\t  if test -n \"$tstripme\" && test -n \"$striplib\"; then\n\t    func_show_eval \"$striplib $destdir/$realname\" 'exit $?'\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try 'ln -sf' first, because the 'ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      test \"$linkname\" != \"$realname\" \\\n\t\t&& func_show_eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })\"\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=$destdir/$realname\n\t  func_execute_cmds \"$postinstall_cmds\" 'exit $?'\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tfunc_basename \"$file\"\n\tname=$func_basename_result\n\tinstname=$dir/${name}i\n\tfunc_show_eval \"$install_prog $instname $destdir/$name\" 'exit $?'\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && func_append staticlibs \" $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=$destdir/$destname\n\telse\n\t  func_basename \"$file\"\n\t  destfile=$func_basename_result\n\t  destfile=$destdir/$destfile\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  func_lo2o \"$destfile\"\n\t  staticdest=$func_lo2o_result\n\t  ;;\n\t*.$objext)\n\t  staticdest=$destfile\n\t  destfile=\n\t  ;;\n\t*)\n\t  func_fatal_help \"cannot copy a libtool object to '$destfile'\"\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\ttest -n \"$destfile\" && \\\n\t  func_show_eval \"$install_prog $file $destfile\" 'exit $?'\n\n\t# Install the old object if enabled.\n\tif test yes = \"$build_old_libs\"; then\n\t  # Deduce the name of the old-style object file.\n\t  func_lo2o \"$file\"\n\t  staticobj=$func_lo2o_result\n\t  func_show_eval \"$install_prog \\$staticobj \\$staticdest\" 'exit $?'\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=$destdir/$destname\n\telse\n\t  func_basename \"$file\"\n\t  destfile=$func_basename_result\n\t  destfile=$destdir/$destfile\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      func_stripname '' '.exe' \"$file\"\n\t      file=$func_stripname_result\n\t      stripped_ext=.exe\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin* | *mingw*)\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      wrapper=$func_ltwrapper_scriptname_result\n\t    else\n\t      func_stripname '' '.exe' \"$file\"\n\t      wrapper=$func_stripname_result\n\t    fi\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif func_ltwrapper_script_p \"$wrapper\"; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  func_source \"$wrapper\"\n\n\t  # Check the variables that should have been set.\n\t  test -z \"$generated_by_libtool_version\" && \\\n\t    func_fatal_error \"invalid libtool wrapper script '$wrapper'\"\n\n\t  finalize=:\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      func_source \"$lib\"\n\t    fi\n\t    libfile=$libdir/`$ECHO \"$lib\" | $SED 's%^.*/%%g'`\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      func_warning \"'$lib' has not been installed in '$libdir'\"\n\t      finalize=false\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  func_source \"$wrapper\"\n\n\t  outputname=\n\t  if test no = \"$fast_install\" && test -n \"$relink_command\"; then\n\t    $opt_dry_run || {\n\t      if $finalize; then\n\t        tmpdir=`func_mktempdir`\n\t\tfunc_basename \"$file$stripped_ext\"\n\t\tfile=$func_basename_result\n\t        outputname=$tmpdir/$file\n\t        # Replace the output file specification.\n\t        relink_command=`$ECHO \"$relink_command\" | $SED 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t        $opt_quiet || {\n\t          func_quote_arg expand,pretty \"$relink_command\"\n\t\t  eval \"func_echo $func_quote_arg_result\"\n\t        }\n\t        if eval \"$relink_command\"; then :\n\t          else\n\t\t  func_error \"error: relink '$file' with the above command before installing it\"\n\t\t  $opt_dry_run || ${RM}r \"$tmpdir\"\n\t\t  continue\n\t        fi\n\t        file=$outputname\n\t      else\n\t        func_warning \"cannot relink '$file'\"\n\t      fi\n\t    }\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$ECHO \"$file$stripped_ext\" | $SED \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    func_stripname '' '.exe' \"$destfile\"\n\t    destfile=$func_stripname_result\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tfunc_show_eval \"$install_prog\\$stripme \\$file \\$destfile\" 'exit $?'\n\t$opt_dry_run || if test -n \"$outputname\"; then\n\t  ${RM}r \"$tmpdir\"\n\tfi\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      func_basename \"$file\"\n      name=$func_basename_result\n\n      # Set up the ranlib parameters.\n      oldlib=$destdir/$name\n      func_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n      tool_oldlib=$func_to_tool_file_result\n\n      func_show_eval \"$install_prog \\$file \\$oldlib\" 'exit $?'\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\tfunc_show_eval \"$old_striplib $tool_oldlib\" 'exit $?'\n      fi\n\n      # Do each command in the postinstall commands.\n      func_execute_cmds \"$old_postinstall_cmds\" 'exit $?'\n    done\n\n    test -n \"$future_libdirs\" && \\\n      func_warning \"remember to run '$progname --finish$future_libdirs'\"\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      $opt_dry_run && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL \"$progpath\" $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest install = \"$opt_mode\" && func_mode_install ${1+\"$@\"}\n\n\n# func_generate_dlsyms outputname originator pic_p\n# Extract symbols from dlprefiles and create ${outputname}S.o with\n# a dlpreopen symbol table.\nfunc_generate_dlsyms ()\n{\n    $debug_cmd\n\n    my_outputname=$1\n    my_originator=$2\n    my_pic_p=${3-false}\n    my_prefix=`$ECHO \"$my_originator\" | $SED 's%[^a-zA-Z0-9]%_%g'`\n    my_dlsyms=\n\n    if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n      if test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\tmy_dlsyms=${my_outputname}S.c\n      else\n\tfunc_error \"not configured to extract global symbols from dlpreopened files\"\n      fi\n    fi\n\n    if test -n \"$my_dlsyms\"; then\n      case $my_dlsyms in\n      \"\") ;;\n      *.c)\n\t# Discover the nlist of each of the dlfiles.\n\tnlist=$output_objdir/$my_outputname.nm\n\n\tfunc_show_eval \"$RM $nlist ${nlist}S ${nlist}T\"\n\n\t# Parse the name list into a source file.\n\tfunc_verbose \"creating $output_objdir/$my_dlsyms\"\n\n\t$opt_dry_run || $ECHO > \"$output_objdir/$my_dlsyms\" \"\\\n/* $my_dlsyms - symbol resolution table for '$my_outputname' dlsym emulation. */\n/* Generated by $PROGRAM (GNU $PACKAGE) $VERSION */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n#if defined __GNUC__ && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))\n#pragma GCC diagnostic ignored \\\"-Wstrict-prototypes\\\"\n#endif\n\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\tif test yes = \"$dlself\"; then\n\t  func_verbose \"generating symbol list for '$output'\"\n\n\t  $opt_dry_run || echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t  # Add our own program objects to the symbol list.\n\t  progfiles=`$ECHO \"$objs$old_deplibs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\t  for progfile in $progfiles; do\n\t    func_to_tool_file \"$progfile\" func_convert_file_msys_to_w32\n\t    func_verbose \"extracting global C symbols from '$func_to_tool_file_result'\"\n\t    $opt_dry_run || eval \"$NM $func_to_tool_file_result | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  if test -n \"$export_symbols_regex\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  # Prepare the list of exported symbols\n\t  if test -z \"$export_symbols\"; then\n\t    export_symbols=$output_objdir/$outputname.exp\n\t    $opt_dry_run || {\n\t      $RM $export_symbols\n\t      eval \"$SED -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n\t      case $host in\n\t      *cygwin* | *mingw* | *cegcc* )\n                eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n                eval 'cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"'\n\t        ;;\n\t      esac\n\t    }\n\t  else\n\t    $opt_dry_run || {\n\t      eval \"$SED -e 's/\\([].[*^$]\\)/\\\\\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"'\n\t      eval '$GREP -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t      case $host in\n\t        *cygwin* | *mingw* | *cegcc* )\n\t          eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t          eval 'cat \"$nlist\" >> \"$output_objdir/$outputname.def\"'\n\t          ;;\n\t      esac\n\t    }\n\t  fi\n\tfi\n\n\tfor dlprefile in $dlprefiles; do\n\t  func_verbose \"extracting global C symbols from '$dlprefile'\"\n\t  func_basename \"$dlprefile\"\n\t  name=$func_basename_result\n          case $host in\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # if an import library, we need to obtain dlname\n\t      if func_win32_import_lib_p \"$dlprefile\"; then\n\t        func_tr_sh \"$dlprefile\"\n\t        eval \"curr_lafile=\\$libfile_$func_tr_sh_result\"\n\t        dlprefile_dlbasename=\n\t        if test -n \"$curr_lafile\" && func_lalib_p \"$curr_lafile\"; then\n\t          # Use subshell, to avoid clobbering current variable values\n\t          dlprefile_dlname=`source \"$curr_lafile\" && echo \"$dlname\"`\n\t          if test -n \"$dlprefile_dlname\"; then\n\t            func_basename \"$dlprefile_dlname\"\n\t            dlprefile_dlbasename=$func_basename_result\n\t          else\n\t            # no lafile. user explicitly requested -dlpreopen <import library>.\n\t            $sharedlib_from_linklib_cmd \"$dlprefile\"\n\t            dlprefile_dlbasename=$sharedlib_from_linklib_result\n\t          fi\n\t        fi\n\t        $opt_dry_run || {\n\t          if test -n \"$dlprefile_dlbasename\"; then\n\t            eval '$ECHO \": $dlprefile_dlbasename\" >> \"$nlist\"'\n\t          else\n\t            func_warning \"Could not compute DLL name from $name\"\n\t            eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          fi\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe |\n\t            $SED -e '/I __imp/d' -e 's/I __nm_/D /;s/_nm__//' >> '$nlist'\"\n\t        }\n\t      else # not an import lib\n\t        $opt_dry_run || {\n\t          eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t        }\n\t      fi\n\t    ;;\n\t    *)\n\t      $opt_dry_run || {\n\t        eval '$ECHO \": $name \" >> \"$nlist\"'\n\t        func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t        eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t      }\n\t    ;;\n          esac\n\tdone\n\n\t$opt_dry_run || {\n\t  # Make sure we have at least an empty file.\n\t  test -f \"$nlist\" || : > \"$nlist\"\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t    $MV \"$nlist\"T \"$nlist\"\n\t  fi\n\n\t  # Try sorting and uniquifying the output.\n\t  if $GREP -v \"^: \" < \"$nlist\" |\n\t      if sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\tsort -k 3\n\t      else\n\t\tsort +2\n\t      fi |\n\t      uniq > \"$nlist\"S; then\n\t    :\n\t  else\n\t    $GREP -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t  fi\n\n\t  if test -f \"$nlist\"S; then\n\t    eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$my_dlsyms\"'\n\t  else\n\t    echo '/* NONE */' >> \"$output_objdir/$my_dlsyms\"\n\t  fi\n\n\t  func_show_eval '$RM \"${nlist}I\"'\n\t  if test -n \"$global_symbol_to_import\"; then\n\t    eval \"$global_symbol_to_import\"' < \"$nlist\"S > \"$nlist\"I'\n\t  fi\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n\n/* The mapping between symbol names and symbols.  */\ntypedef struct {\n  const char *name;\n  void *address;\n} lt_dlsymlist;\nextern LT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[];\\\n\"\n\n\t  if test -s \"$nlist\"I; then\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\nstatic void lt_syminit(void)\n{\n  LT_DLSYM_CONST lt_dlsymlist *symbol = lt_${my_prefix}_LTX_preloaded_symbols;\n  for (; symbol->name; ++symbol)\n    {\"\n\t    $SED 's/.*/      if (STREQ (symbol->name, \\\"&\\\")) symbol->address = (void *) \\&&;/' < \"$nlist\"I >> \"$output_objdir/$my_dlsyms\"\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n    }\n}\"\n\t  fi\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\nLT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[] =\n{ {\\\"$my_originator\\\", (void *) 0},\"\n\n\t  if test -s \"$nlist\"I; then\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {\\\"@INIT@\\\", (void *) &lt_syminit},\"\n\t  fi\n\n\t  case $need_lib_prefix in\n\t  no)\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  *)\n\t    eval \"$global_symbol_to_c_name_address_lib_prefix\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  esac\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_${my_prefix}_LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t} # !$opt_dry_run\n\n\tpic_flag_for_symtable=\n\tcase \"$compile_command \" in\n\t*\" -static \"*) ;;\n\t*)\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2.*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\" ;;\n\t  *-*-hpux*)\n\t    pic_flag_for_symtable=\" $pic_flag\"  ;;\n\t  *)\n\t    $my_pic_p && pic_flag_for_symtable=\" $pic_flag\"\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tsymtab_cflags=\n\tfor arg in $LTCFLAGS; do\n\t  case $arg in\n\t  -pie | -fpie | -fPIE) ;;\n\t  *) func_append symtab_cflags \" $arg\" ;;\n\t  esac\n\tdone\n\n\t# Now compile the dynamic symbol file.\n\tfunc_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable \"$my_dlsyms\")' 'exit $?'\n\n\t# Clean up the generated files.\n\tfunc_show_eval '$RM \"$output_objdir/$my_dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\" \"${nlist}I\"'\n\n\t# Transform the symbol file into the correct name.\n\tsymfileobj=$output_objdir/${my_outputname}S.$objext\n\tcase $host in\n\t*cygwin* | *mingw* | *cegcc* )\n\t  if test -f \"$output_objdir/$my_outputname.def\"; then\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t  else\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  fi\n\t  ;;\n\t*)\n\t  compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  ;;\n\tesac\n\t;;\n      *)\n\tfunc_fatal_error \"unknown suffix for '$my_dlsyms'\"\n\t;;\n      esac\n    else\n      # We keep going just in case the user didn't refer to\n      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n      # really was required.\n\n      # Nullify the symbol file.\n      compile_command=`$ECHO \"$compile_command\" | $SED \"s% @SYMFILE@%%\"`\n      finalize_command=`$ECHO \"$finalize_command\" | $SED \"s% @SYMFILE@%%\"`\n    fi\n}\n\n# func_cygming_gnu_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is a GNU/binutils-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_gnu_implib_p ()\n{\n  $debug_cmd\n\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_gnu_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $EGREP ' (_head_[A-Za-z0-9_]+_[ad]l*|[A-Za-z0-9_]+_[ad]l*_iname)$'`\n  test -n \"$func_cygming_gnu_implib_tmp\"\n}\n\n# func_cygming_ms_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is an MS-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_ms_implib_p ()\n{\n  $debug_cmd\n\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_ms_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $GREP '_NULL_IMPORT_DESCRIPTOR'`\n  test -n \"$func_cygming_ms_implib_tmp\"\n}\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\n# Despite the name, also deal with 64 bit binaries.\nfunc_win32_libid ()\n{\n  $debug_cmd\n\n  win32_libid_type=unknown\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    # Keep the egrep pattern in sync with the one in _LT_CHECK_MAGIC_METHOD.\n    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |\n       $EGREP 'file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then\n      case $nm_interface in\n      \"MS dumpbin\")\n\tif func_cygming_ms_implib_p \"$1\" ||\n\t   func_cygming_gnu_implib_p \"$1\"\n\tthen\n\t  win32_nmres=import\n\telse\n\t  win32_nmres=\n\tfi\n\t;;\n      *)\n\tfunc_to_tool_file \"$1\" func_convert_file_msys_to_w32\n\twin32_nmres=`eval $NM -f posix -A \\\"$func_to_tool_file_result\\\" |\n\t  $SED -n -e '\n\t    1,100{\n\t\t/ I /{\n\t\t    s|.*|import|\n\t\t    p\n\t\t    q\n\t\t}\n\t    }'`\n\t;;\n      esac\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $ECHO \"$win32_libid_type\"\n}\n\n# func_cygming_dll_for_implib ARG\n#\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib ()\n{\n  $debug_cmd\n\n  sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify \"$1\"`\n}\n\n# func_cygming_dll_for_implib_fallback_core SECTION_NAME LIBNAMEs\n#\n# The is the core of a fallback implementation of a\n# platform-specific function to extract the name of the\n# DLL associated with the specified import library LIBNAME.\n#\n# SECTION_NAME is either .idata$6 or .idata$7, depending\n# on the platform and compiler that created the implib.\n#\n# Echos the name of the DLL associated with the\n# specified import library.\nfunc_cygming_dll_for_implib_fallback_core ()\n{\n  $debug_cmd\n\n  match_literal=`$ECHO \"$1\" | $SED \"$sed_make_literal_regex\"`\n  $OBJDUMP -s --section \"$1\" \"$2\" 2>/dev/null |\n    $SED '/^Contents of section '\"$match_literal\"':/{\n      # Place marker at beginning of archive member dllname section\n      s/.*/====MARK====/\n      p\n      d\n    }\n    # These lines can sometimes be longer than 43 characters, but\n    # are always uninteresting\n    /:[\t ]*file format pe[i]\\{,1\\}-/d\n    /^In archive [^:]*:/d\n    # Ensure marker is printed\n    /^====MARK====/p\n    # Remove all lines with less than 43 characters\n    /^.\\{43\\}/!d\n    # From remaining lines, remove first 43 characters\n    s/^.\\{43\\}//' |\n    $SED -n '\n      # Join marker and all lines until next marker into a single line\n      /^====MARK====/ b para\n      H\n      $ b para\n      b\n      :para\n      x\n      s/\\n//g\n      # Remove the marker\n      s/^====MARK====//\n      # Remove trailing dots and whitespace\n      s/[\\. \\t]*$//\n      # Print\n      /./p' |\n    # we now have a list, one entry per line, of the stringified\n    # contents of the appropriate section of all members of the\n    # archive that possess that section. Heuristic: eliminate\n    # all those that have a first or second character that is\n    # a '.' (that is, objdump's representation of an unprintable\n    # character.) This should work for all archives with less than\n    # 0x302f exports -- but will fail for DLLs whose name actually\n    # begins with a literal '.' or a single character followed by\n    # a '.'.\n    #\n    # Of those that remain, print the first one.\n    $SED -e '/^\\./d;/^.\\./d;q'\n}\n\n# func_cygming_dll_for_implib_fallback ARG\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n#\n# This fallback implementation is for use when $DLLTOOL\n# does not support the --identify-strict option.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib_fallback ()\n{\n  $debug_cmd\n\n  if func_cygming_gnu_implib_p \"$1\"; then\n    # binutils import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' \"$1\"`\n  elif func_cygming_ms_implib_p \"$1\"; then\n    # ms-generated import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' \"$1\"`\n  else\n    # unknown\n    sharedlib_from_linklib_result=\n  fi\n}\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    $debug_cmd\n\n    f_ex_an_ar_dir=$1; shift\n    f_ex_an_ar_oldlib=$1\n    if test yes = \"$lock_old_archive_extraction\"; then\n      lockfile=$f_ex_an_ar_oldlib.lock\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    fi\n    func_show_eval \"(cd \\$f_ex_an_ar_dir && $AR x \\\"\\$f_ex_an_ar_oldlib\\\")\" \\\n\t\t   'stat=$?; rm -f \"$lockfile\"; exit $stat'\n    if test yes = \"$lock_old_archive_extraction\"; then\n      $opt_dry_run || rm -f \"$lockfile\"\n    fi\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      func_fatal_error \"object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\"\n    fi\n}\n\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    $debug_cmd\n\n    my_gentop=$1; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\n    my_xlib=\n    my_xabs=\n    my_xdir=\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=$my_xlib ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      func_basename \"$my_xlib\"\n      my_xlib=$func_basename_result\n      my_xlib_u=$my_xlib\n      while :; do\n        case \" $extracted_archives \" in\n\t*\" $my_xlib_u \"*)\n\t  func_arith $extracted_serial + 1\n\t  extracted_serial=$func_arith_result\n\t  my_xlib_u=lt$extracted_serial-$my_xlib ;;\n\t*) break ;;\n\tesac\n      done\n      extracted_archives=\"$extracted_archives $my_xlib_u\"\n      my_xdir=$my_gentop/$my_xlib_u\n\n      func_mkdir_p \"$my_xdir\"\n\n      case $host in\n      *-darwin*)\n\tfunc_verbose \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\t$opt_dry_run || {\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  func_basename \"$darwin_archive\"\n\t  darwin_base_archive=$func_basename_result\n\t  darwin_arches=`$LIPO -info \"$darwin_archive\" 2>/dev/null | $GREP Architectures 2>/dev/null || true`\n\t  if test -n \"$darwin_arches\"; then\n\t    darwin_arches=`$ECHO \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    func_verbose \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches; do\n\t      func_mkdir_p \"unfat-$$/$darwin_base_archive-$darwin_arch\"\n\t      $LIPO -thin $darwin_arch -output \"unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive\" \"$darwin_archive\"\n\t      cd \"unfat-$$/$darwin_base_archive-$darwin_arch\"\n\t      func_extract_an_archive \"`pwd`\" \"$darwin_base_archive\"\n\t      cd \"$darwin_curdir\"\n\t      $RM \"unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive\"\n\t    done # $darwin_arches\n            ## Okay now we've a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print | $SED -e \"$sed_basename\" | sort -u`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n\t      $LIPO -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    $RM -rf unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd $darwin_orig_dir\n\t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\t} # !$opt_dry_run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n    done\n\n    func_extract_archives_result=$my_oldobjs\n}\n\n\n# func_emit_wrapper [arg=no]\n#\n# Emit a libtool wrapper script on stdout.\n# Don't directly open a file because we may want to\n# incorporate the script contents within a cygwin/mingw\n# wrapper executable.  Must ONLY be called from within\n# func_mode_link because it depends on a number of variables\n# set therein.\n#\n# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\n# variable will take.  If 'yes', then the emitted script\n# will assume that the directory where it is stored is\n# the $objdir directory.  This is a cygwin/mingw-specific\n# behavior.\nfunc_emit_wrapper ()\n{\n\tfunc_emit_wrapper_arg1=${1-no}\n\n\t$ECHO \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='$sed_quote_subst'\n\n# Be Bourne compatible\nif test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variables:\n  generated_by_libtool_version='$macro_version'\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$ECHO are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    file=\\\"\\$0\\\"\"\n\n    func_quote_arg pretty \"$ECHO\"\n    qECHO=$func_quote_arg_result\n    $ECHO \"\\\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n    ECHO=$qECHO\n  fi\n\n# Very basic option parsing. These options are (a) specific to\n# the libtool wrapper, (b) are identical between the wrapper\n# /script/ and the wrapper /executable/ that is used only on\n# windows platforms, and (c) all begin with the string \"--lt-\"\n# (application programs are unlikely to have options that match\n# this pattern).\n#\n# There are only two supported options: --lt-debug and\n# --lt-dump-script. There is, deliberately, no --lt-help.\n#\n# The first argument to this parsing function should be the\n# script's $0 value, followed by \"$@\".\nlt_option_debug=\nfunc_parse_lt_options ()\n{\n  lt_script_arg0=\\$0\n  shift\n  for lt_opt\n  do\n    case \\\"\\$lt_opt\\\" in\n    --lt-debug) lt_option_debug=1 ;;\n    --lt-dump-script)\n        lt_dump_D=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%/[^/]*$%%'\\`\n        test \\\"X\\$lt_dump_D\\\" = \\\"X\\$lt_script_arg0\\\" && lt_dump_D=.\n        lt_dump_F=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%^.*/%%'\\`\n        cat \\\"\\$lt_dump_D/\\$lt_dump_F\\\"\n        exit 0\n      ;;\n    --lt-*)\n        \\$ECHO \\\"Unrecognized --lt- option: '\\$lt_opt'\\\" 1>&2\n        exit 1\n      ;;\n    esac\n  done\n\n  # Print the debug banner immediately:\n  if test -n \\\"\\$lt_option_debug\\\"; then\n    echo \\\"$outputname:$output:\\$LINENO: libtool wrapper (GNU $PACKAGE) $VERSION\\\" 1>&2\n  fi\n}\n\n# Used when --lt-debug. Prints its arguments to stdout\n# (redirection is the responsibility of the caller)\nfunc_lt_dump_args ()\n{\n  lt_dump_args_N=1;\n  for lt_arg\n  do\n    \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[\\$lt_dump_args_N]: \\$lt_arg\\\"\n    lt_dump_args_N=\\`expr \\$lt_dump_args_N + 1\\`\n  done\n}\n\n# Core function for launching the target application\nfunc_exec_program_core ()\n{\n\"\n  case $host in\n  # Backslashes separate directories on plain windows\n  *-*-mingw | *-*-os2* | *-cegcc*)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[0]: \\$progdir\\\\\\\\\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n\n  *)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[0]: \\$progdir/\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n  esac\n  $ECHO \"\\\n      \\$ECHO \\\"\\$0: cannot exec \\$program \\$*\\\" 1>&2\n      exit 1\n}\n\n# A function to encapsulate launching the target application\n# Strips options in the --lt-* namespace from \\$@ and\n# launches target application with the remaining arguments.\nfunc_exec_program ()\n{\n  case \\\" \\$* \\\" in\n  *\\\\ --lt-*)\n    for lt_wr_arg\n    do\n      case \\$lt_wr_arg in\n      --lt-*) ;;\n      *) set x \\\"\\$@\\\" \\\"\\$lt_wr_arg\\\"; shift;;\n      esac\n      shift\n    done ;;\n  esac\n  func_exec_program_core \\${1+\\\"\\$@\\\"}\n}\n\n  # Parse options\n  func_parse_lt_options \\\"\\$0\\\" \\${1+\\\"\\$@\\\"}\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  done\n\n  # Usually 'no', except on cygwin/mingw when embedded into\n  # the cwrapper.\n  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1\n  if test \\\"\\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\\\" = \\\"yes\\\"; then\n    # special case for '.'\n    if test \\\"\\$thisdir\\\" = \\\".\\\"; then\n      thisdir=\\`pwd\\`\n    fi\n    # remove .libs from thisdir\n    case \\\"\\$thisdir\\\" in\n    *[\\\\\\\\/]$objdir ) thisdir=\\`\\$ECHO \\\"\\$thisdir\\\" | $SED 's%[\\\\\\\\/][^\\\\\\\\/]*$%%'\\` ;;\n    $objdir )   thisdir=. ;;\n    esac\n  fi\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test yes = \"$fast_install\"; then\n\t  $ECHO \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" ||\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | $SED 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $MKDIR \\\"\\$progdir\\\"\n    else\n      $RM \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $ECHO \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\$relink_command 2>&1\\`; then :\n      else\n\t\\$ECHO \\\"\\$relink_command_output\\\" >&2\n\t$RM \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $RM \\\"\\$progdir/\\$program\\\";\n      $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $RM \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $ECHO \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$ECHO \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# fixup the dll searchpath if we need to.\n\t#\n\t# Fix the DLL searchpath if we need to.  Do this before prepending\n\t# to shlibpath, because on Windows, both are PATH and uninstalled\n\t# libraries must come first.\n\tif test -n \"$dllsearchpath\"; then\n\t  $ECHO \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t# Export our shlibpath_var if we have one.\n\tif test yes = \"$shlibpath_overrides_runpath\" && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $ECHO \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" | $SED 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t$ECHO \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n      func_exec_program \\${1+\\\"\\$@\\\"}\n    fi\n  else\n    # The program doesn't exist.\n    \\$ECHO \\\"\\$0: error: '\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$ECHO \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    \\$ECHO \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n}\n\n\n# func_emit_cwrapperexe_src\n# emit the source code for a wrapper executable on stdout\n# Must ONLY be called from within func_mode_link because\n# it depends on a number of variable set therein.\nfunc_emit_cwrapperexe_src ()\n{\n\tcat <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n*/\nEOF\n\t    cat <<\"EOF\"\n#ifdef _MSC_VER\n# define _CRT_SECURE_NO_DEPRECATE 1\n#endif\n#include <stdio.h>\n#include <stdlib.h>\n#ifdef _MSC_VER\n# include <direct.h>\n# include <process.h>\n# include <io.h>\n#else\n# include <unistd.h>\n# include <stdint.h>\n# ifdef __CYGWIN__\n#  include <io.h>\n# endif\n#endif\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <sys/stat.h>\n\n#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)\n\n/* declarations of non-ANSI functions */\n#if defined __MINGW32__\n# ifdef __STRICT_ANSI__\nint _putenv (const char *);\n# endif\n#elif defined __CYGWIN__\n# ifdef __STRICT_ANSI__\nchar *realpath (const char *, char *);\nint putenv (char *);\nint setenv (const char *, const char *, int);\n# endif\n/* #elif defined other_platform || defined ... */\n#endif\n\n/* portability defines, excluding path handling macros */\n#if defined _MSC_VER\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n# define S_IXUSR _S_IEXEC\n#elif defined __MINGW32__\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n#elif defined __CYGWIN__\n# define HAVE_SETENV\n# define FOPEN_WB \"wb\"\n/* #elif defined other platforms ... */\n#endif\n\n#if defined PATH_MAX\n# define LT_PATHMAX PATH_MAX\n#elif defined MAXPATHLEN\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef S_IXOTH\n# define S_IXOTH 0\n#endif\n#ifndef S_IXGRP\n# define S_IXGRP 0\n#endif\n\n/* path handling portability macros */\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined _WIN32 || defined __MSDOS__ || defined __DJGPP__ || \\\n  defined __OS2__\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# define FOPEN_WB \"wb\"\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#ifndef FOPEN_WB\n# define FOPEN_WB \"w\"\n#endif\n#ifndef _O_BINARY\n# define _O_BINARY 0\n#endif\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free (stale); stale = 0; } \\\n} while (0)\n\n#if defined LT_DEBUGWRAPPER\nstatic int lt_debug = 1;\n#else\nstatic int lt_debug = 0;\n#endif\n\nconst char *program_name = \"libtool-wrapper\"; /* in case xstrdup fails */\n\nvoid *xmalloc (size_t num);\nchar *xstrdup (const char *string);\nconst char *base_name (const char *name);\nchar *find_executable (const char *wrapper);\nchar *chase_symlinks (const char *pathspec);\nint make_executable (const char *path);\nint check_executable (const char *path);\nchar *strendzap (char *str, const char *pat);\nvoid lt_debugprintf (const char *file, int line, const char *fmt, ...);\nvoid lt_fatal (const char *file, int line, const char *message, ...);\nstatic const char *nonnull (const char *s);\nstatic const char *nonempty (const char *s);\nvoid lt_setenv (const char *name, const char *value);\nchar *lt_extend_str (const char *orig_value, const char *add, int to_end);\nvoid lt_update_exe_path (const char *name, const char *value);\nvoid lt_update_lib_path (const char *name, const char *value);\nchar **prepare_spawn (char **argv);\nvoid lt_dump_script (FILE *f);\nEOF\n\n\t    cat <<EOF\n#if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 5)\n# define externally_visible volatile\n#else\n# define externally_visible __attribute__((externally_visible)) volatile\n#endif\nexternally_visible const char * MAGIC_EXE = \"$magic_exe\";\nconst char * LIB_PATH_VARNAME = \"$shlibpath_var\";\nEOF\n\n\t    if test yes = \"$shlibpath_overrides_runpath\" && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n              func_to_host_path \"$temp_rpath\"\n\t      cat <<EOF\nconst char * LIB_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * LIB_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test -n \"$dllsearchpath\"; then\n              func_to_host_path \"$dllsearchpath:\"\n\t      cat <<EOF\nconst char * EXE_PATH_VARNAME = \"PATH\";\nconst char * EXE_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * EXE_PATH_VARNAME = \"\";\nconst char * EXE_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test yes = \"$fast_install\"; then\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"lt-$outputname\"; /* hopefully, no .exe */\nEOF\n\t    else\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"$outputname\"; /* hopefully, no .exe */\nEOF\n\t    fi\n\n\n\t    cat <<\"EOF\"\n\n#define LTWRAPPER_OPTION_PREFIX         \"--lt-\"\n\nstatic const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;\nstatic const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX \"dump-script\";\nstatic const char *debug_opt            = LTWRAPPER_OPTION_PREFIX \"debug\";\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int  newargc;\n  char *tmp_pathspec;\n  char *actual_cwrapper_path;\n  char *actual_cwrapper_name;\n  char *target_name;\n  char *lt_argv_zero;\n  int rval = 127;\n\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  newargz = XMALLOC (char *, (size_t) argc + 1);\n\n  /* very simple arg parsing; don't want to rely on getopt\n   * also, copy all non cwrapper options to newargz, except\n   * argz[0], which is handled differently\n   */\n  newargc=0;\n  for (i = 1; i < argc; i++)\n    {\n      if (STREQ (argv[i], dumpscript_opt))\n\t{\nEOF\n\t    case $host in\n\t      *mingw* | *cygwin* )\n\t\t# make stdout use \"unix\" line endings\n\t\techo \"          setmode(1,_O_BINARY);\"\n\t\t;;\n\t      esac\n\n\t    cat <<\"EOF\"\n\t  lt_dump_script (stdout);\n\t  return 0;\n\t}\n      if (STREQ (argv[i], debug_opt))\n\t{\n          lt_debug = 1;\n          continue;\n\t}\n      if (STREQ (argv[i], ltwrapper_option_prefix))\n        {\n          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX\n             namespace, but it is not one of the ones we know about and\n             have already dealt with, above (inluding dump-script), then\n             report an error. Otherwise, targets might begin to believe\n             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX\n             namespace. The first time any user complains about this, we'll\n             need to make LTWRAPPER_OPTION_PREFIX a configure-time option\n             or a configure.ac-settable value.\n           */\n          lt_fatal (__FILE__, __LINE__,\n\t\t    \"unrecognized %s option: '%s'\",\n                    ltwrapper_option_prefix, argv[i]);\n        }\n      /* otherwise ... */\n      newargz[++newargc] = xstrdup (argv[i]);\n    }\n  newargz[++newargc] = NULL;\n\nEOF\n\t    cat <<EOF\n  /* The GNU banner must be the first non-error debug message */\n  lt_debugprintf (__FILE__, __LINE__, \"libtool wrapper (GNU $PACKAGE) $VERSION\\n\");\nEOF\n\t    cat <<\"EOF\"\n  lt_debugprintf (__FILE__, __LINE__, \"(main) argv[0]: %s\\n\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__, \"(main) program_name: %s\\n\", program_name);\n\n  tmp_pathspec = find_executable (argv[0]);\n  if (tmp_pathspec == NULL)\n    lt_fatal (__FILE__, __LINE__, \"couldn't find %s\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (before symlink chase) at: %s\\n\",\n\t\t  tmp_pathspec);\n\n  actual_cwrapper_path = chase_symlinks (tmp_pathspec);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (after symlink chase) at: %s\\n\",\n\t\t  actual_cwrapper_path);\n  XFREE (tmp_pathspec);\n\n  actual_cwrapper_name = xstrdup (base_name (actual_cwrapper_path));\n  strendzap (actual_cwrapper_path, actual_cwrapper_name);\n\n  /* wrapper name transforms */\n  strendzap (actual_cwrapper_name, \".exe\");\n  tmp_pathspec = lt_extend_str (actual_cwrapper_name, \".exe\", 1);\n  XFREE (actual_cwrapper_name);\n  actual_cwrapper_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  /* target_name transforms -- use actual target program name; might have lt- prefix */\n  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));\n  strendzap (target_name, \".exe\");\n  tmp_pathspec = lt_extend_str (target_name, \".exe\", 1);\n  XFREE (target_name);\n  target_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(main) libtool target name: %s\\n\",\n\t\t  target_name);\nEOF\n\n\t    cat <<EOF\n  newargz[0] =\n    XMALLOC (char, (strlen (actual_cwrapper_path) +\n\t\t    strlen (\"$objdir\") + 1 + strlen (actual_cwrapper_name) + 1));\n  strcpy (newargz[0], actual_cwrapper_path);\n  strcat (newargz[0], \"$objdir\");\n  strcat (newargz[0], \"/\");\nEOF\n\n\t    cat <<\"EOF\"\n  /* stop here, and copy so we don't have to do this twice */\n  tmp_pathspec = xstrdup (newargz[0]);\n\n  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */\n  strcat (newargz[0], actual_cwrapper_name);\n\n  /* DO want the lt- prefix here if it exists, so use target_name */\n  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);\n  XFREE (tmp_pathspec);\n  tmp_pathspec = NULL;\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t    cat <<\"EOF\"\n  {\n    char* p;\n    while ((p = strchr (newargz[0], '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n    while ((p = strchr (lt_argv_zero, '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n  }\nEOF\n\t    ;;\n\t    esac\n\n\t    cat <<\"EOF\"\n  XFREE (target_name);\n  XFREE (actual_cwrapper_path);\n  XFREE (actual_cwrapper_name);\n\n  lt_setenv (\"BIN_SH\", \"xpg4\"); /* for Tru64 */\n  lt_setenv (\"DUALCASE\", \"1\");  /* for MSK sh */\n  /* Update the DLL searchpath.  EXE_PATH_VALUE ($dllsearchpath) must\n     be prepended before (that is, appear after) LIB_PATH_VALUE ($temp_rpath)\n     because on Windows, both *_VARNAMEs are PATH but uninstalled\n     libraries must come first. */\n  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);\n  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);\n\n  lt_debugprintf (__FILE__, __LINE__, \"(main) lt_argv_zero: %s\\n\",\n\t\t  nonnull (lt_argv_zero));\n  for (i = 0; i < newargc; i++)\n    {\n      lt_debugprintf (__FILE__, __LINE__, \"(main) newargz[%d]: %s\\n\",\n\t\t      i, nonnull (newargz[i]));\n    }\n\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n  /* execv doesn't actually work on mingw as expected on unix */\n  newargz = prepare_spawn (newargz);\n  rval = (int) _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);\n  if (rval == -1)\n    {\n      /* failed to start process */\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"(main) failed to launch target \\\"%s\\\": %s\\n\",\n\t\t      lt_argv_zero, nonnull (strerror (errno)));\n      return 127;\n    }\n  return rval;\nEOF\n\t\t;;\n\t      *)\n\t\tcat <<\"EOF\"\n  execv (lt_argv_zero, newargz);\n  return rval; /* =127, but avoids unused variable warning */\nEOF\n\t\t;;\n\t    esac\n\n\t    cat <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void *p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (__FILE__, __LINE__, \"memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),\n\t\t\t  string) : NULL;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char) name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable (const char *path)\n{\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(check_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0)\n      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))\n    return 1;\n  else\n    return 0;\n}\n\nint\nmake_executable (const char *path)\n{\n  int rval = 0;\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(make_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if (stat (path, &st) >= 0)\n    {\n      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);\n    }\n  return rval;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise\n   Does not chase symlinks, even on platforms that support them.\n*/\nchar *\nfind_executable (const char *wrapper)\n{\n  int has_slash = 0;\n  const char *p;\n  const char *p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  size_t tmp_len;\n  char *concat_name;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(find_executable): %s\\n\",\n                  nonempty (wrapper));\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable (concat_name))\n\treturn concat_name;\n      XFREE (concat_name);\n    }\n  else\n    {\n#endif\n      if (IS_DIR_SEPARATOR (wrapper[0]))\n\t{\n\t  concat_name = xstrdup (wrapper);\n\t  if (check_executable (concat_name))\n\t    return concat_name;\n\t  XFREE (concat_name);\n\t}\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n    }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n      {\n\thas_slash = 1;\n\tbreak;\n      }\n  if (!has_slash)\n    {\n      /* no slashes; search PATH */\n      const char *path = getenv (\"PATH\");\n      if (path != NULL)\n\t{\n\t  for (p = path; *p; p = p_next)\n\t    {\n\t      const char *q;\n\t      size_t p_len;\n\t      for (q = p; *q; q++)\n\t\tif (IS_PATH_SEPARATOR (*q))\n\t\t  break;\n\t      p_len = (size_t) (q - p);\n\t      p_next = (*q == '\\0' ? q : q + 1);\n\t      if (p_len == 0)\n\t\t{\n\t\t  /* empty path: current directory */\n\t\t  if (getcwd (tmp, LT_PATHMAX) == NULL)\n\t\t    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n                              nonnull (strerror (errno)));\n\t\t  tmp_len = strlen (tmp);\n\t\t  concat_name =\n\t\t    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, tmp, tmp_len);\n\t\t  concat_name[tmp_len] = '/';\n\t\t  strcpy (concat_name + tmp_len + 1, wrapper);\n\t\t}\n\t      else\n\t\t{\n\t\t  concat_name =\n\t\t    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, p, p_len);\n\t\t  concat_name[p_len] = '/';\n\t\t  strcpy (concat_name + p_len + 1, wrapper);\n\t\t}\n\t      if (check_executable (concat_name))\n\t\treturn concat_name;\n\t      XFREE (concat_name);\n\t    }\n\t}\n      /* not found in PATH; assume curdir */\n    }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n              nonnull (strerror (errno)));\n  tmp_len = strlen (tmp);\n  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable (concat_name))\n    return concat_name;\n  XFREE (concat_name);\n  return NULL;\n}\n\nchar *\nchase_symlinks (const char *pathspec)\n{\n#ifndef S_ISLNK\n  return xstrdup (pathspec);\n#else\n  char buf[LT_PATHMAX];\n  struct stat s;\n  char *tmp_pathspec = xstrdup (pathspec);\n  char *p;\n  int has_symlinks = 0;\n  while (strlen (tmp_pathspec) && !has_symlinks)\n    {\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"checking path component for symlinks: %s\\n\",\n\t\t      tmp_pathspec);\n      if (lstat (tmp_pathspec, &s) == 0)\n\t{\n\t  if (S_ISLNK (s.st_mode) != 0)\n\t    {\n\t      has_symlinks = 1;\n\t      break;\n\t    }\n\n\t  /* search backwards for last DIR_SEPARATOR */\n\t  p = tmp_pathspec + strlen (tmp_pathspec) - 1;\n\t  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    p--;\n\t  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    {\n\t      /* no more DIR_SEPARATORS left */\n\t      break;\n\t    }\n\t  *p = '\\0';\n\t}\n      else\n\t{\n\t  lt_fatal (__FILE__, __LINE__,\n\t\t    \"error accessing file \\\"%s\\\": %s\",\n\t\t    tmp_pathspec, nonnull (strerror (errno)));\n\t}\n    }\n  XFREE (tmp_pathspec);\n\n  if (!has_symlinks)\n    {\n      return xstrdup (pathspec);\n    }\n\n  tmp_pathspec = realpath (pathspec, buf);\n  if (tmp_pathspec == 0)\n    {\n      lt_fatal (__FILE__, __LINE__,\n\t\t\"could not follow symlinks for %s\", pathspec);\n    }\n  return xstrdup (tmp_pathspec);\n#endif\n}\n\nchar *\nstrendzap (char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert (str != NULL);\n  assert (pat != NULL);\n\n  len = strlen (str);\n  patlen = strlen (pat);\n\n  if (patlen <= len)\n    {\n      str += len - patlen;\n      if (STREQ (str, pat))\n\t*str = '\\0';\n    }\n  return str;\n}\n\nvoid\nlt_debugprintf (const char *file, int line, const char *fmt, ...)\n{\n  va_list args;\n  if (lt_debug)\n    {\n      (void) fprintf (stderr, \"%s:%s:%d: \", program_name, file, line);\n      va_start (args, fmt);\n      (void) vfprintf (stderr, fmt, args);\n      va_end (args);\n    }\n}\n\nstatic void\nlt_error_core (int exit_status, const char *file,\n\t       int line, const char *mode,\n\t       const char *message, va_list ap)\n{\n  fprintf (stderr, \"%s:%s:%d: %s: \", program_name, file, line, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *file, int line, const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, file, line, \"FATAL\", message, ap);\n  va_end (ap);\n}\n\nstatic const char *\nnonnull (const char *s)\n{\n  return s ? s : \"(null)\";\n}\n\nstatic const char *\nnonempty (const char *s)\n{\n  return (s && !*s) ? \"(empty)\" : nonnull (s);\n}\n\nvoid\nlt_setenv (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_setenv) setting '%s' to '%s'\\n\",\n                  nonnull (name), nonnull (value));\n  {\n#ifdef HAVE_SETENV\n    /* always make a copy, for consistency with !HAVE_SETENV */\n    char *str = xstrdup (value);\n    setenv (name, str, 1);\n#else\n    size_t len = strlen (name) + 1 + strlen (value) + 1;\n    char *str = XMALLOC (char, len);\n    sprintf (str, \"%s=%s\", name, value);\n    if (putenv (str) != EXIT_SUCCESS)\n      {\n        XFREE (str);\n      }\n#endif\n  }\n}\n\nchar *\nlt_extend_str (const char *orig_value, const char *add, int to_end)\n{\n  char *new_value;\n  if (orig_value && *orig_value)\n    {\n      size_t orig_value_len = strlen (orig_value);\n      size_t add_len = strlen (add);\n      new_value = XMALLOC (char, add_len + orig_value_len + 1);\n      if (to_end)\n        {\n          strcpy (new_value, orig_value);\n          strcpy (new_value + orig_value_len, add);\n        }\n      else\n        {\n          strcpy (new_value, add);\n          strcpy (new_value + add_len, orig_value);\n        }\n    }\n  else\n    {\n      new_value = xstrdup (add);\n    }\n  return new_value;\n}\n\nvoid\nlt_update_exe_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_exe_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      /* some systems can't cope with a ':'-terminated path #' */\n      size_t len = strlen (new_value);\n      while ((len > 0) && IS_PATH_SEPARATOR (new_value[len-1]))\n        {\n          new_value[--len] = '\\0';\n        }\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nvoid\nlt_update_lib_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_lib_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nEOF\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n\n/* Prepares an argument vector before calling spawn().\n   Note that spawn() does not by itself call the command interpreter\n     (getenv (\"COMSPEC\") != NULL ? getenv (\"COMSPEC\") :\n      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n         GetVersionEx(&v);\n         v.dwPlatformId == VER_PLATFORM_WIN32_NT;\n      }) ? \"cmd.exe\" : \"command.com\").\n   Instead it simply concatenates the arguments, separated by ' ', and calls\n   CreateProcess().  We must quote the arguments since Win32 CreateProcess()\n   interprets characters like ' ', '\\t', '\\\\', '\"' (but not '<' and '>') in a\n   special way:\n   - Space and tab are interpreted as delimiters. They are not treated as\n     delimiters if they are surrounded by double quotes: \"...\".\n   - Unescaped double quotes are removed from the input. Their only effect is\n     that within double quotes, space and tab are treated like normal\n     characters.\n   - Backslashes not followed by double quotes are not special.\n   - But 2*n+1 backslashes followed by a double quote become\n     n backslashes followed by a double quote (n >= 0):\n       \\\" -> \"\n       \\\\\\\" -> \\\"\n       \\\\\\\\\\\" -> \\\\\"\n */\n#define SHELL_SPECIAL_CHARS \"\\\"\\\\ \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\n#define SHELL_SPACE_CHARS \" \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\nchar **\nprepare_spawn (char **argv)\n{\n  size_t argc;\n  char **new_argv;\n  size_t i;\n\n  /* Count number of arguments.  */\n  for (argc = 0; argv[argc] != NULL; argc++)\n    ;\n\n  /* Allocate new argument vector.  */\n  new_argv = XMALLOC (char *, argc + 1);\n\n  /* Put quoted arguments into the new argument vector.  */\n  for (i = 0; i < argc; i++)\n    {\n      const char *string = argv[i];\n\n      if (string[0] == '\\0')\n\tnew_argv[i] = xstrdup (\"\\\"\\\"\");\n      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)\n\t{\n\t  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);\n\t  size_t length;\n\t  unsigned int backslashes;\n\t  const char *s;\n\t  char *quoted_string;\n\t  char *p;\n\n\t  length = 0;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    length++;\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\tlength += backslashes + 1;\n\t      length++;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    length += backslashes + 1;\n\n\t  quoted_string = XMALLOC (char, length + 1);\n\n\t  p = quoted_string;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    *p++ = '\"';\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\t{\n\t\t  unsigned int j;\n\t\t  for (j = backslashes + 1; j > 0; j--)\n\t\t    *p++ = '\\\\';\n\t\t}\n\t      *p++ = c;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    {\n\t      unsigned int j;\n\t      for (j = backslashes; j > 0; j--)\n\t\t*p++ = '\\\\';\n\t      *p++ = '\"';\n\t    }\n\t  *p = '\\0';\n\n\t  new_argv[i] = quoted_string;\n\t}\n      else\n\tnew_argv[i] = (char *) string;\n    }\n  new_argv[argc] = NULL;\n\n  return new_argv;\n}\nEOF\n\t\t;;\n\t    esac\n\n            cat <<\"EOF\"\nvoid lt_dump_script (FILE* f)\n{\nEOF\n\t    func_emit_wrapper yes |\n\t      $SED -n -e '\ns/^\\(.\\{79\\}\\)\\(..*\\)/\\1\\\n\\2/\nh\ns/\\([\\\\\"]\\)/\\\\\\1/g\ns/$/\\\\n/\ns/\\([^\\n]*\\).*/  fputs (\"\\1\", f);/p\ng\nD'\n            cat <<\"EOF\"\n}\nEOF\n}\n# end: func_emit_cwrapperexe_src\n\n# func_win32_import_lib_p ARG\n# True if ARG is an import lib, as indicated by $file_magic_cmd\nfunc_win32_import_lib_p ()\n{\n    $debug_cmd\n\n    case `eval $file_magic_cmd \\\"\\$1\\\" 2>/dev/null | $SED -e 10q` in\n    *import*) : ;;\n    *) false ;;\n    esac\n}\n\n# func_suncc_cstd_abi\n# !!ONLY CALL THIS FOR SUN CC AFTER $compile_command IS FULLY EXPANDED!!\n# Several compiler flags select an ABI that is incompatible with the\n# Cstd library. Avoid specifying it if any are in CXXFLAGS.\nfunc_suncc_cstd_abi ()\n{\n    $debug_cmd\n\n    case \" $compile_command \" in\n    *\" -compat=g \"*|*\\ -std=c++[0-9][0-9]\\ *|*\" -library=stdcxx4 \"*|*\" -library=stlport4 \"*)\n      suncc_use_cstd_abi=no\n      ;;\n    *)\n      suncc_use_cstd_abi=yes\n      ;;\n    esac\n}\n\n# func_mode_link arg...\nfunc_mode_link ()\n{\n    $debug_cmd\n\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # what system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll that has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=$nonopt\n    base_compile=\"$nonopt $@\"\n    compile_command=$nonopt\n    finalize_command=$nonopt\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n    new_inherited_linker_flags=\n\n    avoid_version=no\n    bindir=\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    os2dllname=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=false\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n    weak_libs=\n    single_module=$wl-single_module\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -shared)\n\ttest yes != \"$build_libtool_libs\" \\\n\t  && func_fatal_configuration \"cannot build a shared library\"\n\tbuild_old_libs=no\n\tbreak\n\t;;\n      -all-static | -static | -static-libtool-libs)\n\tcase $arg in\n\t-all-static)\n\t  if test yes = \"$build_libtool_libs\" && test -z \"$link_static_flag\"; then\n\t    func_warning \"complete static linking is impossible in this configuration\"\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\t-static)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\t  ;;\n\t-static-libtool-libs)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\tesac\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=$1\n      shift\n      func_quote_arg pretty,unquoted \"$arg\"\n      qarg=$func_quote_arg_unquoted_result\n      func_append libtool_args \" $func_quote_arg_result\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  func_append compile_command \" @OUTPUT@\"\n\t  func_append finalize_command \" @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tbindir)\n\t  bindir=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tdlfiles|dlprefiles)\n\t  $preload || {\n\t    # Add the symbol object into the linking commands.\n\t    func_append compile_command \" @SYMFILE@\"\n\t    func_append finalize_command \" @SYMFILE@\"\n\t    preload=:\n\t  }\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test no = \"$dlself\"; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test dlprefiles = \"$prev\"; then\n\t      dlself=yes\n\t    elif test dlfiles = \"$prev\" && test yes != \"$dlopen_self\"; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test dlfiles = \"$prev\"; then\n\t      func_append dlfiles \" $arg\"\n\t    else\n\t      func_append dlprefiles \" $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=$arg\n\t  test -f \"$arg\" \\\n\t    || func_fatal_error \"symbol file '$arg' does not exist\"\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tframework)\n\t  case $host in\n\t    *-*-darwin*)\n\t      case \"$deplibs \" in\n\t\t*\" $qarg.ltframework \"*) ;;\n\t\t*) func_append deplibs \" $qarg.ltframework\" # this is fixed later\n\t\t   ;;\n\t      esac\n\t      ;;\n\t  esac\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tmllvm)\n\t  # Clang does not use LLVM to link, so we can simply discard any\n\t  # '-mllvm $arg' options when doing the link step.\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat \"$save_arg\"`\n\t    do\n#\t      func_append moreargs \" $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if func_lalib_unsafe_p \"$arg\"; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\tfunc_source \"$arg\"\n\n\t\tif test -z \"$pic_object\" ||\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test none = \"$pic_object\" &&\n\t\t   test none = \"$non_pic_object\"; then\n\t\t  func_fatal_error \"cannot find name of object for '$arg'\"\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\tfunc_dirname \"$arg\" \"/\" \"\"\n\t\txdir=$func_dirname_result\n\n\t\tif test none != \"$pic_object\"; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=$xdir$pic_object\n\n\t\t  if test dlfiles = \"$prev\"; then\n\t\t    if test yes = \"$build_libtool_libs\" && test yes = \"$dlopen_support\"; then\n\t\t      func_append dlfiles \" $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test dlprefiles = \"$prev\"; then\n\t\t    # Preload the old-style object.\n\t\t    func_append dlprefiles \" $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  arg=$pic_object\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test none != \"$non_pic_object\"; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=$xdir$non_pic_object\n\n\t\t  # A standard non-PIC object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test none = \"$pic_object\"; then\n\t\t    arg=$non_pic_object\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=$pic_object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif $opt_dry_run; then\n\t\t  # Extract subdirectory from the argument.\n\t\t  func_dirname \"$arg\" \"/\" \"\"\n\t\t  xdir=$func_dirname_result\n\n\t\t  func_lo2o \"$arg\"\n\t\t  pic_object=$xdir$objdir/$func_lo2o_result\n\t\t  non_pic_object=$xdir$func_lo2o_result\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t        else\n\t\t  func_fatal_error \"'$arg' is not a valid libtool object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    func_fatal_error \"link input file '$arg' does not exist\"\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\tos2dllname)\n\t  os2dllname=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=-$arg\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    func_fatal_error \"only absolute run-paths are allowed\"\n\t    ;;\n\t  esac\n\t  if test rpath = \"$prev\"; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append rpath \" $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append xrpath \" $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\tshrext)\n\t  shrext_cmds=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tweak)\n\t  func_append weak_libs \" $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\txcclinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txcompiler)\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $wl$qarg\"\n\t  prev=\n\t  func_append compile_command \" $wl$qarg\"\n\t  func_append finalize_command \" $wl$qarg\"\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=$arg\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  # See comment for -static flag below, for more details.\n\t  func_append compile_command \" $link_static_flag\"\n\t  func_append finalize_command \" $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\tfunc_fatal_error \"'-allow-undefined' must not be used because it is the default\"\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -bindir)\n\tprev=bindir\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  func_fatal_error \"more than one -exported-symbols argument is not allowed\"\n\tfi\n\tif test X-export-symbols = \"X$arg\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n\tprev=framework\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tfunc_stripname \"-L\" '' \"$arg\"\n\tif test -z \"$func_stripname_result\"; then\n\t  if test \"$#\" -gt 0; then\n\t    func_fatal_error \"require no space between '-L' and '$1'\"\n\t  else\n\t    func_fatal_error \"need path for '-L' option\"\n\t  fi\n\tfi\n\tfunc_resolve_sysroot \"$func_stripname_result\"\n\tdir=$func_resolve_sysroot_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  test -z \"$absdir\" && \\\n\t    func_fatal_error \"cannot determine absolute directory name of '$dir'\"\n\t  dir=$absdir\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"* | *\" $arg \"*)\n\t  # Will only happen for absolute or sysroot arguments\n\t  ;;\n\t*)\n\t  # Preserve sysroot, but never include relative directories\n\t  case $dir in\n\t    [\\\\/]* | [A-Za-z]:[\\\\/]* | =*) func_append deplibs \" $arg\" ;;\n\t    *) func_append deplibs \" -L$dir\" ;;\n\t  esac\n\t  func_append lib_search_path \" $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$dir\" | $SED 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  ::) dllsearchpath=$dir;;\n\t  *) func_append dllsearchpath \":$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test X-lc = \"X$arg\" || test X-lm = \"X$arg\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  esac\n\telif test X-lc_r = \"X$arg\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tfunc_append deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      -mllvm)\n\tprev=mllvm\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      # Darwin uses the -arch flag to determine output architecture.\n      -model|-arch|-isysroot|--sysroot)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n      |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tcase \"$new_inherited_linker_flags \" in\n\t    *\" $arg \"*) ;;\n\t    * ) func_append new_inherited_linker_flags \" $arg\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -multi_module)\n\tsingle_module=$wl-multi_module\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # and Darwin in order for the loader to find any dlls it needs.\n\t  func_warning \"'-no-install' is ignored for $host\"\n\t  func_warning \"assuming '-no-fast-install' instead\"\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -os2dllname)\n\tprev=os2dllname\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tfunc_stripname '-R' '' \"$arg\"\n\tdir=$func_stripname_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t=*)\n\t  func_stripname '=' '' \"$dir\"\n\t  dir=$lt_sysroot$func_stripname_result\n\t  ;;\n\t*)\n\t  func_fatal_error \"only absolute run-paths are allowed\"\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) func_append xrpath \" $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -shared)\n\t# The effects of -shared are defined in a previous loop.\n\tcontinue\n\t;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -static | -static-libtool-libs)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -weak)\n        prev=weak\n\tcontinue\n\t;;\n\n      -Wc,*)\n\tfunc_stripname '-Wc,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=$IFS; IFS=,\n\tfor flag in $args; do\n\t  IFS=$save_ifs\n          func_quote_arg pretty \"$flag\"\n\t  func_append arg \" $func_quote_arg_result\"\n\t  func_append compiler_flags \" $func_quote_arg_result\"\n\tdone\n\tIFS=$save_ifs\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Wl,*)\n\tfunc_stripname '-Wl,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=$IFS; IFS=,\n\tfor flag in $args; do\n\t  IFS=$save_ifs\n          func_quote_arg pretty \"$flag\"\n\t  func_append arg \" $wl$func_quote_arg_result\"\n\t  func_append compiler_flags \" $wl$func_quote_arg_result\"\n\t  func_append linker_flags \" $func_quote_arg_result\"\n\tdone\n\tIFS=$save_ifs\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # -msg_* for osf cc\n      -msg_*)\n\tfunc_quote_arg pretty \"$arg\"\n\targ=$func_quote_arg_result\n\t;;\n\n      # Flags to be passed through unchanged, with rationale:\n      # -64, -mips[0-9]      enable 64-bit mode for the SGI compiler\n      # -r[0-9][0-9]*        specify processor for the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode for the Sun compiler\n      # +DA*, +DD*           enable 64-bit mode for the HP compiler\n      # -q*                  compiler args for the IBM compiler\n      # -m*, -t[45]*, -txscale* architecture-specific flags for GCC\n      # -F/path              path to uninstalled frameworks, gcc on darwin\n      # -p, -pg, --coverage, -fprofile-*  profiling flags for GCC\n      # -fstack-protector*   stack protector flags for GCC\n      # @file                GCC response files\n      # -tp=*                Portland pgcc target processor selection\n      # --sysroot=*          for sysroot support\n      # -O*, -g*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization\n      # -specs=*             GCC specs files\n      # -stdlib=*            select c++ std lib with clang\n      # -fsanitize=*         Clang/GCC memory and address sanitizer\n      # -fuse-ld=*           Linker select flags for GCC\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \\\n      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \\\n      -O*|-g*|-flto*|-fwhopr*|-fuse-linker-plugin|-fstack-protector*|-stdlib=*| \\\n      -specs=*|-fsanitize=*|-fuse-ld=*)\n        func_quote_arg pretty \"$arg\"\n\targ=$func_quote_arg_result\n        func_append compile_command \" $arg\"\n        func_append finalize_command \" $arg\"\n        func_append compiler_flags \" $arg\"\n        continue\n        ;;\n\n      -Z*)\n        if test os2 = \"`expr $host : '.*\\(os2\\)'`\"; then\n          # OS/2 uses -Zxxx to specify OS/2-specific options\n\t  compiler_flags=\"$compiler_flags $arg\"\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  case $arg in\n\t  -Zlinker | -Zstack)\n\t    prev=xcompiler\n\t    ;;\n\t  esac\n\t  continue\n        else\n\t  # Otherwise treat like 'Some other compiler flag' below\n\t  func_quote_arg pretty \"$arg\"\n\t  arg=$func_quote_arg_result\n        fi\n\t;;\n\n      # Some other compiler flag.\n      -* | +*)\n        func_quote_arg pretty \"$arg\"\n\targ=$func_quote_arg_result\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tfunc_append objs \" $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif func_lalib_unsafe_p \"$arg\"; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  func_source \"$arg\"\n\n\t  if test -z \"$pic_object\" ||\n\t     test -z \"$non_pic_object\" ||\n\t     test none = \"$pic_object\" &&\n\t     test none = \"$non_pic_object\"; then\n\t    func_fatal_error \"cannot find name of object for '$arg'\"\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  func_dirname \"$arg\" \"/\" \"\"\n\t  xdir=$func_dirname_result\n\n\t  test none = \"$pic_object\" || {\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=$xdir$pic_object\n\n\t    if test dlfiles = \"$prev\"; then\n\t      if test yes = \"$build_libtool_libs\" && test yes = \"$dlopen_support\"; then\n\t\tfunc_append dlfiles \" $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test dlprefiles = \"$prev\"; then\n\t      # Preload the old-style object.\n\t      func_append dlprefiles \" $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    func_append libobjs \" $pic_object\"\n\t    arg=$pic_object\n\t  }\n\n\t  # Non-PIC object.\n\t  if test none != \"$non_pic_object\"; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=$xdir$non_pic_object\n\n\t    # A standard non-PIC object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t    if test -z \"$pic_object\" || test none = \"$pic_object\"; then\n\t      arg=$non_pic_object\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=$pic_object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if $opt_dry_run; then\n\t    # Extract subdirectory from the argument.\n\t    func_dirname \"$arg\" \"/\" \"\"\n\t    xdir=$func_dirname_result\n\n\t    func_lo2o \"$arg\"\n\t    pic_object=$xdir$objdir/$func_lo2o_result\n\t    non_pic_object=$xdir$func_lo2o_result\n\t    func_append libobjs \" $pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  else\n\t    func_fatal_error \"'$arg' is not a valid libtool object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tfunc_append deplibs \" $arg\"\n\tfunc_append old_deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tfunc_resolve_sysroot \"$arg\"\n\tif test dlfiles = \"$prev\"; then\n\t  # This library was specified with -dlopen.\n\t  func_append dlfiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telif test dlprefiles = \"$prev\"; then\n\t  # The library was specified with -dlpreopen.\n\t  func_append dlprefiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telse\n\t  func_append deplibs \" $func_resolve_sysroot_result\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\tfunc_quote_arg pretty \"$arg\"\n\targ=$func_quote_arg_result\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n      fi\n    done # argument parsing loop\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the '$prevarg' option requires an argument\"\n\n    if test yes = \"$export_dynamic\" && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      func_append compile_command \" $arg\"\n      func_append finalize_command \" $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    func_basename \"$output\"\n    outputname=$func_basename_result\n    libobjs_save=$libobjs\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" \\| \\$SED \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n\n    # Definition is injected by LT_CONFIG during libtool generation.\n    func_munge_path_list sys_lib_dlsearch_path \"$LT_SYS_LIBRARY_PATH\"\n\n    func_dirname \"$output\" \"/\" \"\"\n    output_objdir=$func_dirname_result$objdir\n    func_to_tool_file \"$output_objdir/\"\n    tool_output_objdir=$func_to_tool_file_result\n    # Create the object directory.\n    func_mkdir_p \"$output_objdir\"\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      func_fatal_help \"you must specify an output file\"\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if $opt_preserve_dup_deps; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\tesac\n      fi\n      func_append libs \" $deplib\"\n    done\n\n    if test lib = \"$linkmode\"; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if $opt_duplicate_compiler_generated_deps; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) func_append specialdeplibs \" $pre_post_deps\" ;;\n\t  esac\n\t  func_append pre_post_deps \" $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n\n    case $linkmode in\n    lib)\n\tpasses=\"conv dlpreopen link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    func_fatal_help \"libraries can '-dlopen' only libtool libraries: $file\"\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=false\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n\n    for pass in $passes; do\n      # The preopen pass in lib mode reverses $deplibs; put it back here\n      # so that -L comes before libs that need it for instance...\n      if test lib,link = \"$linkmode,$pass\"; then\n\t## FIXME: Find the place where the list is rebuilt in the wrong\n\t##        order, and fix it there properly\n        tmp_deplibs=\n\tfor deplib in $deplibs; do\n\t  tmp_deplibs=\"$deplib $tmp_deplibs\"\n\tdone\n\tdeplibs=$tmp_deplibs\n      fi\n\n      if test lib,link = \"$linkmode,$pass\" ||\n\t test prog,scan = \"$linkmode,$pass\"; then\n\tlibs=$deplibs\n\tdeplibs=\n      fi\n      if test prog = \"$linkmode\"; then\n\tcase $pass in\n\tdlopen) libs=$dlfiles ;;\n\tdlpreopen) libs=$dlprefiles ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test lib,dlpreopen = \"$linkmode,$pass\"; then\n\t# Collect and forward deplibs of preopened libtool libs\n\tfor lib in $dlprefiles; do\n\t  # Ignore non-libtool-libs\n\t  dependency_libs=\n\t  func_resolve_sysroot \"$lib\"\n\t  case $lib in\n\t  *.la)\tfunc_source \"$func_resolve_sysroot_result\" ;;\n\t  esac\n\n\t  # Collect preopened libtool deplibs, except any this library\n\t  # has declared as weak libs\n\t  for deplib in $dependency_libs; do\n\t    func_basename \"$deplib\"\n            deplib_base=$func_basename_result\n\t    case \" $weak_libs \" in\n\t    *\" $deplib_base \"*) ;;\n\t    *) func_append deplibs \" $deplib\" ;;\n\t    esac\n\t  done\n\tdone\n\tlibs=$dlprefiles\n      fi\n      if test dlopen = \"$pass\"; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=$deplibs\n\tdeplibs=\n      fi\n\n      for deplib in $libs; do\n\tlib=\n\tfound=false\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n        |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\t  if test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    func_append compiler_flags \" $deplib\"\n\t    if test lib = \"$linkmode\"; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test lib != \"$linkmode\" && test prog != \"$linkmode\"; then\n\t    func_warning \"'-l' is ignored for archives/objects\"\n\t    continue\n\t  fi\n\t  func_stripname '-l' '' \"$deplib\"\n\t  name=$func_stripname_result\n\t  if test lib = \"$linkmode\"; then\n\t    searchdirs=\"$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path\"\n\t  else\n\t    searchdirs=\"$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path\"\n\t  fi\n\t  for searchdir in $searchdirs; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=$searchdir/lib$name$search_ext\n\t      if test -f \"$lib\"; then\n\t\tif test .la = \"$search_ext\"; then\n\t\t  found=:\n\t\telse\n\t\t  found=false\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if $found; then\n\t    # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif func_lalib_p \"$lib\"; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  func_source \"$lib\"\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=$l\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\"; then # only static version available\n\t\t    found=false\n\t\t    func_dirname \"$lib\" \"\" \".\"\n\t\t    ladir=$func_dirname_result\n\t\t    lib=$ladir/$old_library\n\t\t    if test prog,link = \"$linkmode,$pass\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test lib = \"$linkmode\" && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  else\n\t    # deplib doesn't seem to be a libtool library\n\t    if test prog,link = \"$linkmode,$pass\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test lib = \"$linkmode\" && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  fi\n\t  ;; # -l\n\t*.ltframework)\n\t  if test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$deplib $deplibs\"\n\t    if test lib = \"$linkmode\"; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test conv = \"$pass\" && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  prog)\n\t    if test conv = \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test scan = \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  *)\n\t    func_warning \"'-L' is ignored for archives/objects\"\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test link = \"$pass\"; then\n\t    func_stripname '-R' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    dir=$func_resolve_sysroot_result\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append xrpath \" $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la)\n\t  func_resolve_sysroot \"$deplib\"\n\t  lib=$func_resolve_sysroot_result\n\t  ;;\n\t*.$libext)\n\t  if test conv = \"$pass\"; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    # Linking convenience modules into shared libraries is allowed,\n\t    # but linking other static libraries is non-portable.\n\t    case \" $dlpreconveniencelibs \" in\n\t    *\" $deplib \"*) ;;\n\t    *)\n\t      valid_a_lib=false\n\t      case $deplibs_check_method in\n\t\tmatch_pattern*)\n\t\t  set dummy $deplibs_check_method; shift\n\t\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t\t  if eval \"\\$ECHO \\\"$deplib\\\"\" 2>/dev/null | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t    valid_a_lib=:\n\t\t  fi\n\t\t;;\n\t\tpass_all)\n\t\t  valid_a_lib=:\n\t\t;;\n\t      esac\n\t      if $valid_a_lib; then\n\t\techo\n\t\t$ECHO \"*** Warning: Linking the shared library $output against the\"\n\t\t$ECHO \"*** static library $deplib is not portable!\"\n\t\tdeplibs=\"$deplib $deplibs\"\n\t      else\n\t\techo\n\t\t$ECHO \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t\techo \"*** that it is just a static archive that I should not use here.\"\n\t      fi\n\t      ;;\n\t    esac\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test link != \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test conv = \"$pass\"; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test prog = \"$linkmode\"; then\n\t    if test dlpreopen = \"$pass\" || test yes != \"$dlopen_support\" || test no = \"$build_libtool_libs\"; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      func_append newdlprefiles \" $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      func_append newdlfiles \" $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=:\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\n\t$found || test -f \"$lib\" \\\n\t  || func_fatal_error \"cannot find the library '$lib' or unhandled argument '$deplib'\"\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$lib\" \\\n\t  || func_fatal_error \"'$lib' is not a valid libtool archive\"\n\n\tfunc_dirname \"$lib\" \"\" \".\"\n\tladir=$func_dirname_result\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\tinherited_linker_flags=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tfunc_source \"$lib\"\n\n\t# Convert \"-framework foo\" to \"foo.ltframework\"\n\tif test -n \"$inherited_linker_flags\"; then\n\t  tmp_inherited_linker_flags=`$ECHO \"$inherited_linker_flags\" | $SED 's/-framework \\([^ $]*\\)/\\1.ltframework/g'`\n\t  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do\n\t    case \" $new_inherited_linker_flags \" in\n\t      *\" $tmp_inherited_linker_flag \"*) ;;\n\t      *) func_append new_inherited_linker_flags \" $tmp_inherited_linker_flag\";;\n\t    esac\n\t  done\n\tfi\n\tdependency_libs=`$ECHO \" $dependency_libs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tif test lib,link = \"$linkmode,$pass\" ||\n\t   test prog,scan = \"$linkmode,$pass\" ||\n\t   { test prog != \"$linkmode\" && test lib != \"$linkmode\"; }; then\n\t  test -n \"$dlopen\" && func_append dlfiles \" $dlopen\"\n\t  test -n \"$dlpreopen\" && func_append dlprefiles \" $dlpreopen\"\n\tfi\n\n\tif test conv = \"$pass\"; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      func_fatal_error \"cannot find name of link library for '$lib'\"\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    func_append convenience \" $ladir/$objdir/$old_library\"\n\t    func_append old_convenience \" $ladir/$objdir/$old_library\"\n\t  elif test prog != \"$linkmode\" && test lib != \"$linkmode\"; then\n\t    func_fatal_error \"'$lib' is not a convenience library\"\n\t  fi\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    deplibs=\"$deplib $deplibs\"\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tif test -n \"$old_library\" &&\n\t   { test yes = \"$prefer_static_libs\" ||\n\t     test built,no = \"$prefer_static_libs,$installed\"; }; then\n\t  linklib=$old_library\n\telse\n\t  for l in $old_library $library_names; do\n\t    linklib=$l\n\t  done\n\tfi\n\tif test -z \"$linklib\"; then\n\t  func_fatal_error \"cannot find name of link library for '$lib'\"\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test dlopen = \"$pass\"; then\n\t  test -z \"$libdir\" \\\n\t    && func_fatal_error \"cannot -dlopen a convenience library: '$lib'\"\n\t  if test -z \"$dlname\" ||\n\t     test yes != \"$dlopen_support\" ||\n\t     test no = \"$build_libtool_libs\"\n\t  then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    func_append dlprefiles \" $lib $dependency_libs\"\n\t  else\n\t    func_append newdlfiles \" $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=$ladir ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    func_warning \"cannot determine absolute directory name of '$ladir'\"\n\t    func_warning \"passing it literally to the linker, although it might fail\"\n\t    abs_ladir=$ladir\n\t  fi\n\t  ;;\n\tesac\n\tfunc_basename \"$lib\"\n\tlaname=$func_basename_result\n\n\t# Find the relevant object directory and library name.\n\tif test yes = \"$installed\"; then\n\t  if test ! -f \"$lt_sysroot$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    func_warning \"library '$lib' was moved.\"\n\t    dir=$ladir\n\t    absdir=$abs_ladir\n\t    libdir=$abs_ladir\n\t  else\n\t    dir=$lt_sysroot$libdir\n\t    absdir=$lt_sysroot$libdir\n\t  fi\n\t  test yes = \"$hardcode_automatic\" && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=$ladir\n\t    absdir=$abs_ladir\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  else\n\t    dir=$ladir/$objdir\n\t    absdir=$abs_ladir/$objdir\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tfunc_stripname 'lib' '.la' \"$laname\"\n\tname=$func_stripname_result\n\n\t# This library was specified with -dlpreopen.\n\tif test dlpreopen = \"$pass\"; then\n\t  if test -z \"$libdir\" && test prog = \"$linkmode\"; then\n\t    func_fatal_error \"only libraries may -dlpreopen a convenience library: '$lib'\"\n\t  fi\n\t  case $host in\n\t    # special handling for platforms with PE-DLLs.\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # Linker will automatically link against shared library if both\n\t      # static and shared are present.  Therefore, ensure we extract\n\t      # symbols from the import library if a shared library is present\n\t      # (otherwise, the dlopen module name will be incorrect).  We do\n\t      # this by putting the import library name into $newdlprefiles.\n\t      # We recover the dlopen module name by 'saving' the la file\n\t      # name in a special purpose variable, and (later) extracting the\n\t      # dlname from the la file.\n\t      if test -n \"$dlname\"; then\n\t        func_tr_sh \"$dir/$linklib\"\n\t        eval \"libfile_$func_tr_sh_result=\\$abs_ladir/\\$laname\"\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      fi\n\t    ;;\n\t    * )\n\t      # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t      # are required to link).\n\t      if test -n \"$old_library\"; then\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t      elif test -n \"$dlname\"; then\n\t        func_append newdlprefiles \" $dir/$dlname\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      fi\n\t    ;;\n\t  esac\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test lib = \"$linkmode\"; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test prog = \"$linkmode\" && test link != \"$pass\"; then\n\t  func_append newlib_search_path \" $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=false\n\t  if test no != \"$link_all_deplibs\" || test -z \"$library_names\" ||\n\t     test no = \"$build_libtool_libs\"; then\n\t    linkalldeplibs=:\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) func_stripname '-L' '' \"$deplib\"\n\t         func_resolve_sysroot \"$func_stripname_result\"\n\t         func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t\t ;;\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if $linkalldeplibs; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test prog,link = \"$linkmode,$pass\"; then\n\t  if test -n \"$library_names\" &&\n\t     { { test no = \"$prefer_static_libs\" ||\n\t         test built,yes = \"$prefer_static_libs,$installed\"; } ||\n\t       test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\"; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case $temp_rpath: in\n\t      *\"$absdir:\"*) ;;\n\t      *) func_append temp_rpath \"$absdir:\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if $alldeplibs &&\n\t     { test pass_all = \"$deplibs_check_method\" ||\n\t       { test yes = \"$build_libtool_libs\" &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test built = \"$use_static_libs\" && test yes = \"$installed\"; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test no = \"$use_static_libs\" || test -z \"$old_library\"; }; then\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc* | *os2*)\n\t      # No point in relinking DLLs because paths are not encoded\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=no\n\t    ;;\n\t  *)\n\t    if test no = \"$installed\"; then\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=yes\n\t    fi\n\t    ;;\n\t  esac\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on some\n\t  # systems (darwin).  Don't bleat about dlopened modules though!\n\t  dlopenmodule=\n\t  for dlpremoduletest in $dlprefiles; do\n\t    if test \"X$dlpremoduletest\" = \"X$lib\"; then\n\t      dlopenmodule=$dlpremoduletest\n\t      break\n\t    fi\n\t  done\n\t  if test -z \"$dlopenmodule\" && test yes = \"$shouldnotlink\" && test link = \"$pass\"; then\n\t    echo\n\t    if test prog = \"$linkmode\"; then\n\t      $ECHO \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $ECHO \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $ECHO \"*** $linklib is not portable!\"\n\t  fi\n\t  if test lib = \"$linkmode\" &&\n\t     test yes = \"$hardcode_into_libs\"; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    shift\n\t    realname=$1\n\t    shift\n\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=$dlname\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw* | *cegcc* | *os2*)\n\t        func_arith $current - $age\n\t\tmajor=$func_arith_result\n\t\tversuffix=-$major\n\t\t;;\n\t      esac\n\t      eval soname=\\\"$soname_spec\\\"\n\t    else\n\t      soname=$realname\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=$soname\n\t    func_basename \"$soroot\"\n\t    soname=$func_basename_result\n\t    func_stripname 'lib' '.dll' \"$soname\"\n\t    newlib=libimp-$func_stripname_result.a\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      func_verbose \"extracting exported symbol list from '$soname'\"\n\t      func_execute_cmds \"$extract_expsyms_cmds\" 'exit $?'\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      func_verbose \"generating import library for '$soname'\"\n\t      func_execute_cmds \"$old_archive_from_expsyms_cmds\" 'exit $?'\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test prog = \"$linkmode\" || test relink != \"$opt_mode\"; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test no = \"$hardcode_direct\"; then\n\t\tadd=$dir/$linklib\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=-L$dir ;;\n\t\t  *-*-sysv4*uw2*) add_dir=-L$dir ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=-L$dir ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a (non-dlopened) module then we cannot\n\t\t    # link against it, someone is ignoring the earlier warnings\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n\t\t\t $GREP \": [^:]* bundle\" >/dev/null; then\n\t\t      if test \"X$dlopenmodule\" != \"X$lib\"; then\n\t\t\t$ECHO \"*** Warning: lib $linklib is a module, not a shared library\"\n\t\t\tif test -z \"$old_library\"; then\n\t\t\t  echo\n\t\t\t  echo \"*** And there doesn't seem to be a static archive available\"\n\t\t\t  echo \"*** The link will probably fail, sorry\"\n\t\t\telse\n\t\t\t  add=$dir/$old_library\n\t\t\tfi\n\t\t      elif test -n \"$old_library\"; then\n\t\t\tadd=$dir/$old_library\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test no = \"$hardcode_minus_L\"; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=$dir ;;\n\t\tesac\n\t\tadd_dir=-L$dir\n\t\tadd=-l$name\n\t      elif test no = \"$hardcode_shlibpath_var\"; then\n\t\tadd_shlibpath=$dir\n\t\tadd=-l$name\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test yes = \"$hardcode_direct\" &&\n\t         test no = \"$hardcode_direct_absolute\"; then\n\t\tadd=$dir/$linklib\n\t      elif test yes = \"$hardcode_minus_L\"; then\n\t\tadd_dir=-L$absdir\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=-l$name\n\t      elif test yes = \"$hardcode_shlibpath_var\"; then\n\t\tadd_shlibpath=$dir\n\t\tadd=-l$name\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test yes != \"$lib_linked\"; then\n\t      func_fatal_configuration \"unsupported hardcode properties\"\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) func_append compile_shlibpath \"$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test prog = \"$linkmode\"; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test yes != \"$hardcode_direct\" &&\n\t\t test yes != \"$hardcode_minus_L\" &&\n\t\t test yes = \"$hardcode_shlibpath_var\"; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) func_append finalize_shlibpath \"$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test prog = \"$linkmode\" || test relink = \"$opt_mode\"; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test yes = \"$hardcode_direct\" &&\n\t       test no = \"$hardcode_direct_absolute\"; then\n\t      add=$libdir/$linklib\n\t    elif test yes = \"$hardcode_minus_L\"; then\n\t      add_dir=-L$libdir\n\t      add=-l$name\n\t    elif test yes = \"$hardcode_shlibpath_var\"; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) func_append finalize_shlibpath \"$libdir:\" ;;\n\t      esac\n\t      add=-l$name\n\t    elif test yes = \"$hardcode_automatic\"; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\"; then\n\t\tadd=$inst_prefix_dir$libdir/$linklib\n\t      else\n\t\tadd=$libdir/$linklib\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=-L$libdir\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=-l$name\n\t    fi\n\n\t    if test prog = \"$linkmode\"; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test prog = \"$linkmode\"; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test unsupported != \"$hardcode_direct\"; then\n\t    test -n \"$old_library\" && linklib=$old_library\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test yes = \"$build_libtool_libs\"; then\n\t  # Not a shared library\n\t  if test pass_all != \"$deplibs_check_method\"; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    echo\n\t    $ECHO \"*** Warning: This system cannot link to static lib archive $lib.\"\n\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test yes = \"$module\"; then\n\t      echo \"*** But as you try to build a module library, libtool will still create \"\n\t      echo \"*** a static module, that should work as long as the dlopening application\"\n\t      echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\techo\n\t\techo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\techo \"*** lists from a program, using 'nm' or equivalent, but libtool could\"\n\t\techo \"*** not find such a program.  So, this module is probably useless.\"\n\t\techo \"*** 'nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test no = \"$build_old_libs\"; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test lib = \"$linkmode\"; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test yes != \"$hardcode_into_libs\" ||\n\t       test yes = \"$build_old_libs\" ||\n\t       test yes = \"$link_static\"; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) func_stripname '-R' '' \"$libdir\"\n\t           temp_xrpath=$func_stripname_result\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) func_append xrpath \" $temp_xrpath\";;\n\t\t   esac;;\n\t      *) func_append temp_deplibs \" $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=$temp_deplibs\n\t  fi\n\n\t  func_append newlib_search_path \" $absdir\"\n\t  # Link against this library\n\t  test no = \"$link_static\" && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    case $deplib in\n              -L*) func_stripname '-L' '' \"$deplib\"\n                   func_resolve_sysroot \"$func_stripname_result\";;\n              *) func_resolve_sysroot \"$deplib\" ;;\n            esac\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $func_resolve_sysroot_result \"*)\n                func_append specialdeplibs \" $func_resolve_sysroot_result\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $func_resolve_sysroot_result\"\n\t  done\n\n\t  if test no != \"$link_all_deplibs\"; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      path=\n\t      case $deplib in\n\t      -L*) path=$deplib ;;\n\t      *.la)\n\t        func_resolve_sysroot \"$deplib\"\n\t        deplib=$func_resolve_sysroot_result\n\t        func_dirname \"$deplib\" \"\" \".\"\n\t\tdir=$func_dirname_result\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=$dir ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    func_warning \"cannot determine absolute directory name of '$dir'\"\n\t\t    absdir=$dir\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif $GREP \"^installed=no\" $deplib > /dev/null; then\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  depdepl=\n\t\t  eval deplibrary_names=`$SED -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\"; then\n\t\t    for tmp in $deplibrary_names; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$absdir/$objdir/$depdepl\"; then\n\t\t      depdepl=$absdir/$objdir/$depdepl\n\t\t      darwin_install_name=`$OTOOL -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`\n                      if test -z \"$darwin_install_name\"; then\n                          darwin_install_name=`$OTOOL64 -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`\n                      fi\n\t\t      func_append compiler_flags \" $wl-dylib_file $wl$darwin_install_name:$depdepl\"\n\t\t      func_append linker_flags \" -dylib_file $darwin_install_name:$depdepl\"\n\t\t      path=\n\t\t    fi\n\t\t  fi\n\t\t  ;;\n\t\t*)\n\t\t  path=-L$absdir/$objdir\n\t\t  ;;\n\t\tesac\n\t\telse\n\t\t  eval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  test -z \"$libdir\" && \\\n\t\t    func_fatal_error \"'$deplib' is not a valid libtool archive\"\n\t\t  test \"$absdir\" != \"$libdir\" && \\\n\t\t    func_warning \"'$deplib' seems to be moved\"\n\n\t\t  path=-L$absdir\n\t\tfi\n\t\t;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      if test link = \"$pass\"; then\n\tif test prog = \"$linkmode\"; then\n\t  compile_deplibs=\"$new_inherited_linker_flags $compile_deplibs\"\n\t  finalize_deplibs=\"$new_inherited_linker_flags $finalize_deplibs\"\n\telse\n\t  compiler_flags=\"$compiler_flags \"`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfi\n      fi\n      dependency_libs=$newdependency_libs\n      if test dlpreopen = \"$pass\"; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test dlopen != \"$pass\"; then\n\ttest conv = \"$pass\" || {\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append lib_search_path \" $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\t}\n\n\tif test prog,link = \"$linkmode,$pass\"; then\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\telse\n\t  vars=deplibs\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\\"\\$$var\\\"\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) func_append tmp_libs \" $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) func_append tmp_libs \" $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\\"$tmp_libs\\\"\n\tdone # for var\n      fi\n\n      # Add Sun CC postdeps if required:\n      test CXX = \"$tagname\" && {\n        case $host_os in\n        linux*)\n          case `$CC -V 2>&1 | sed 5q` in\n          *Sun\\ C*) # Sun C++ 5.9\n            func_suncc_cstd_abi\n\n            if test no != \"$suncc_use_cstd_abi\"; then\n              func_append postdeps ' -library=Cstd -library=Crun'\n            fi\n            ;;\n          esac\n          ;;\n\n        solaris*)\n          func_cc_basename \"$CC\"\n          case $func_cc_basename_result in\n          CC* | sunCC*)\n            func_suncc_cstd_abi\n\n            if test no != \"$suncc_use_cstd_abi\"; then\n              func_append postdeps ' -library=Cstd -library=Crun'\n            fi\n            ;;\n          esac\n          ;;\n        esac\n      }\n\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\n\t  ;;\n\tesac\n\tif test -n \"$i\"; then\n\t  func_append tmp_libs \" $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test prog = \"$linkmode\"; then\n      dlfiles=$newdlfiles\n    fi\n    if test prog = \"$linkmode\" || test lib = \"$linkmode\"; then\n      dlprefiles=$newdlprefiles\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n\tfunc_warning \"'-dlopen' is ignored for archives\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"'-l' and '-L' are ignored for archives\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"'-rpath' is ignored for archives\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"'-R' is ignored for archives\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info/-version-number' is ignored for archives\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for archives\"\n\n      test -n \"$export_symbols$export_symbols_regex\" && \\\n\tfunc_warning \"'-export-symbols' is ignored for archives\"\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=$output\n      func_append objs \"$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form 'libNAME.la'.\n      case $outputname in\n      lib*)\n\tfunc_stripname 'lib' '.la' \"$outputname\"\n\tname=$func_stripname_result\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\ttest no = \"$module\" \\\n\t  && func_fatal_help \"libtool library '$output' must begin with 'lib'\"\n\n\tif test no != \"$need_lib_prefix\"; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  func_stripname '' '.la' \"$outputname\"\n\t  name=$func_stripname_result\n\t  eval shared_ext=\\\"$shrext_cmds\\\"\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  func_stripname '' '.la' \"$outputname\"\n\t  libname=$func_stripname_result\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test pass_all != \"$deplibs_check_method\"; then\n\t  func_fatal_error \"cannot build libtool library '$output' from non-libtool objects on this host:$objs\"\n\telse\n\t  echo\n\t  $ECHO \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $ECHO \"*** objects $objs is not portable!\"\n\t  func_append libobjs \" $objs\"\n\tfi\n      fi\n\n      test no = \"$dlself\" \\\n\t|| func_warning \"'-dlopen self' is ignored for libtool libraries\"\n\n      set dummy $rpath\n      shift\n      test 1 -lt \"$#\" \\\n\t&& func_warning \"ignoring multiple '-rpath's for a libtool library\"\n\n      install_libdir=$1\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test yes = \"$build_libtool_libs\"; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a '.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\ttest -n \"$vinfo\" && \\\n\t  func_warning \"'-version-info/-version-number' is ignored for convenience libraries\"\n\n\ttest -n \"$release\" && \\\n\t  func_warning \"'-release' is ignored for convenience libraries\"\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=$IFS; IFS=:\n\tset dummy $vinfo 0 0 0\n\tshift\n\tIFS=$save_ifs\n\n\ttest -n \"$7\" && \\\n\t  func_fatal_help \"too many parameters to '-version-info'\"\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=$1\n\t  number_minor=$2\n\t  number_revision=$3\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # that has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  # correct linux to gnu/linux during the next big refactor\n\t  darwin|freebsd-elf|linux|osf|windows|none)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=$number_minor\n\t    revision=$number_revision\n\t    ;;\n\t  freebsd-aout|qnx|sunos)\n\t    current=$number_major\n\t    revision=$number_minor\n\t    age=0\n\t    ;;\n\t  irix|nonstopux)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=$number_minor\n\t    revision=$number_minor\n\t    lt_irix_increment=no\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=$1\n\t  revision=$2\n\t  age=$3\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"CURRENT '$current' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"REVISION '$revision' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"AGE '$age' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  func_error \"AGE '$age' is greater than the current interface number '$current'\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  # Darwin ld doesn't like 0 for these options...\n\t  func_arith $current + 1\n\t  minor_current=$func_arith_result\n\t  xlcverstring=\"$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision\"\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n          # On Darwin other compilers\n          case $CC in\n              nagfor*)\n                  verstring=\"$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision\"\n                  ;;\n              *)\n                  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n                  ;;\n          esac\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=.$current\n\t  versuffix=.$current.$revision\n\t  ;;\n\n\tfreebsd-elf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  ;;\n\n\tirix | nonstopux)\n\t  if test no = \"$lt_irix_increment\"; then\n\t    func_arith $current - $age\n\t  else\n\t    func_arith $current - $age + 1\n\t  fi\n\t  major=$func_arith_result\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=$verstring_prefix$major.$revision\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test 0 -ne \"$loop\"; do\n\t    func_arith $revision - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=$verstring_prefix$major.$iface:$verstring\n\t  done\n\n\t  # Before this point, $major must not contain '.'.\n\t  major=.$major\n\t  versuffix=$major.$revision\n\t  ;;\n\n\tlinux) # correct to gnu/linux during the next big refactor\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  ;;\n\n\tosf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=.$current.$age.$revision\n\t  verstring=$current.$age.$revision\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test 0 -ne \"$loop\"; do\n\t    func_arith $current - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=$verstring:$iface.0\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  func_append verstring \":$current.0\"\n\t  ;;\n\n\tqnx)\n\t  major=.$current\n\t  versuffix=.$current\n\t  ;;\n\n\tsco)\n\t  major=.$current\n\t  versuffix=.$current\n\t  ;;\n\n\tsunos)\n\t  major=.$current\n\t  versuffix=.$current.$revision\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 file systems.\n\t  func_arith $current - $age\n\t  major=$func_arith_result\n\t  versuffix=-$major\n\t  ;;\n\n\t*)\n\t  func_fatal_configuration \"unknown library version type '$version_type'\"\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=0.0\n\t    ;;\n\t  esac\n\t  if test no = \"$need_version\"; then\n\t    versuffix=\n\t  else\n\t    versuffix=.0.0\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test yes,no = \"$avoid_version,$need_version\"; then\n\t  major=\n\t  versuffix=\n\t  verstring=\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test yes = \"$allow_undefined\"; then\n\t  if test unsupported = \"$allow_undefined_flag\"; then\n\t    if test yes = \"$build_old_libs\"; then\n\t      func_warning \"undefined symbols not allowed in $host shared libraries; building static only\"\n\t      build_libtool_libs=no\n\t    else\n\t      func_fatal_error \"can't build $host shared library unless -no-undefined is specified\"\n\t    fi\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=$no_undefined_flag\n\tfi\n\n      fi\n\n      func_generate_dlsyms \"$libname\" \"$libname\" :\n      func_append libobjs \" $symfileobj\"\n      test \" \" = \"$libobjs\" && libobjs=\n\n      if test relink != \"$opt_mode\"; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$ECHO \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext | *.gcno)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/$libname$release.*)\n\t       if test -n \"$precious_files_regex\"; then\n\t\t if $ECHO \"$p\" | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t\t then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       func_append removelist \" $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\ttest -n \"$removelist\" && \\\n\t  func_show_eval \"${RM}r \\$removelist\"\n      fi\n\n      # Now set the variables for building old libraries.\n      if test yes = \"$build_old_libs\" && test convenience != \"$build_libtool_libs\"; then\n\tfunc_append oldlibs \" $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.$libext$/d; $lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      #for path in $notinst_path; do\n      #\tlib_search_path=`$ECHO \"$lib_search_path \" | $SED \"s% $path % %g\"`\n      #\tdeplibs=`$ECHO \"$deplibs \" | $SED \"s% -L$path % %g\"`\n      #\tdependency_libs=`$ECHO \"$dependency_libs \" | $SED \"s% -L$path % %g\"`\n      #done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  func_replace_sysroot \"$libdir\"\n\t  func_append temp_xrpath \" -R$func_replace_sysroot_result\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n\tif test yes != \"$hardcode_into_libs\" || test yes = \"$build_old_libs\"; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=$dlfiles\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlfiles \" $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=$dlprefiles\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlprefiles \" $lib\" ;;\n\tesac\n      done\n\n      if test yes = \"$build_libtool_libs\"; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n\t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test yes = \"$build_libtool_need_lc\"; then\n\t      func_append deplibs \" -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\n\tversuffix=\n\tmajor=\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $opt_dry_run || $RM conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $opt_dry_run || $RM conftest\n\t  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\tif test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    func_append newdeplibs \" $i\"\n\t\t    i=\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t\tif test -n \"$i\"; then\n\t\t  libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t  deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t  set dummy $deplib_matches; shift\n\t\t  deplib_match=$1\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0; then\n\t\t    func_append newdeplibs \" $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\t$opt_dry_run || $RM conftest\n\t\tif $LTCC $LTCFLAGS -o conftest conftest.c $i; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      func_append newdeplibs \" $i\"\n\t\t      i=\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\"; then\n\t\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t    deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t    set dummy $deplib_matches; shift\n\t\t    deplib_match=$1\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0; then\n\t\t      func_append newdeplibs \" $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      echo\n\t\t      $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  $ECHO \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"*** make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method; shift\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tif test -n \"$file_magic_glob\"; then\n\t\t  libnameglob=`func_echo_all \"$libname\" | $SED -e $file_magic_glob`\n\t\telse\n\t\t  libnameglob=$libname\n\t\tfi\n\t\ttest yes = \"$want_nocaseglob\" && nocaseglob=`shopt -p nocaseglob`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  if test yes = \"$want_nocaseglob\"; then\n\t\t    shopt -s nocaseglob\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t    $nocaseglob\n\t\t  else\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t  fi\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null |\n\t\t\t $GREP \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=$potent_lib\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | $SED 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=$potliblink;;\n\t\t\t*) potlib=`$ECHO \"$potlib\" | $SED 's|[^/]*$||'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null |\n\t\t\t $SED -e 10q |\n\t\t\t $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tfunc_append newdeplibs \" $a_deplib\"\n\t\t\ta_deplib=\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\"; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method; shift\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=$potent_lib # see symlink-check above in file_magic test\n\t\t    if eval \"\\$ECHO \\\"$potent_lib\\\"\" 2>/dev/null | $SED 10q | \\\n\t\t       $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      func_append newdeplibs \" $a_deplib\"\n\t\t      a_deplib=\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\"; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\n\t  tmp_deplibs=`$ECHO \" $deplibs\" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`\n\t  if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t    for i in $predeps $postdeps; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$ECHO \" $tmp_deplibs\" | $SED \"s|$i||\"`\n\t    done\n\t  fi\n\t  case $tmp_deplibs in\n\t  *[!\\\t\\ ]*)\n\t    echo\n\t    if test none = \"$deplibs_check_method\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library with the System framework\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t  ;;\n\tesac\n\n\tif test yes = \"$droppeddeps\"; then\n\t  if test yes = \"$module\"; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $ECHO \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using 'nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** 'nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test no = \"$build_old_libs\"; then\n\t      oldlibs=$output_objdir/$libname.$libext\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\n\t    if test no = \"$allow_undefined\"; then\n\t      echo\n\t      echo \"*** Since this library must not contain undefined symbols,\"\n\t      echo \"*** because either the platform does not support them or\"\n\t      echo \"*** it was explicitly requested with -no-undefined,\"\n\t      echo \"*** libtool will only create a static version of it.\"\n\t      if test no = \"$build_old_libs\"; then\n\t\toldlibs=$output_objdir/$libname.$libext\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n      # Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n      case $host in\n\t*-*-darwin*)\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  new_inherited_linker_flags=`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  deplibs=`$ECHO \" $deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  ;;\n      esac\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      deplibs=$new_libs\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test yes = \"$build_libtool_libs\"; then\n\t# Remove $wl instances when linking with ld.\n\t# FIXME: should test the right _cmds variable.\n\tcase $archive_cmds in\n\t  *\\$LD\\ *) wl= ;;\n        esac\n\tif test yes = \"$hardcode_into_libs\"; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=$finalize_rpath\n\t  test relink = \"$opt_mode\" || rpath=$compile_rpath$rpath\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tfunc_replace_sysroot \"$libdir\"\n\t\tlibdir=$func_replace_sysroot_result\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=$libdir\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    func_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t\tfunc_append dep_rpath \" $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append perm_rpath \" $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=$hardcode_libdirs\n\t    eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      func_append rpath \"$dir:\"\n\t    done\n\t    eval \"$runpath_var='$rpath\\$$runpath_var'; export $runpath_var\"\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=$finalize_shlibpath\n\ttest relink = \"$opt_mode\" || shlibpath=$compile_shlibpath$shlibpath\n\tif test -n \"$shlibpath\"; then\n\t  eval \"$shlibpath_var='$shlibpath\\$$shlibpath_var'; export $shlibpath_var\"\n\tfi\n\n\t# Get the real and link names of the library.\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\tshift\n\trealname=$1\n\tshift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=$realname\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=$output_objdir/$realname\n\tlinknames=\n\tfor link\n\tdo\n\t  func_append linknames \" $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$ECHO \"$libobjs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\ttest \"X$libobjs\" = \"X \" && libobjs=\n\n\tdelfiles=\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $opt_dry_run || cp \"$export_symbols\" \"$output_objdir/$libname.uexp\"\n\t  export_symbols=$output_objdir/$libname.uexp\n\t  func_append delfiles \" $export_symbols\"\n\tfi\n\n\torig_export_symbols=\n\tcase $host_os in\n\tcygwin* | mingw* | cegcc*)\n\t  if test -n \"$export_symbols\" && test -z \"$export_symbols_regex\"; then\n\t    # exporting using user supplied symfile\n\t    func_dll_def_p \"$export_symbols\" || {\n\t      # and it's NOT already a .def file. Must figure out\n\t      # which of the given symbols are data symbols and tag\n\t      # them as such. So, trigger use of export_symbols_cmds.\n\t      # export_symbols gets reassigned inside the \"prepare\n\t      # the list of exported symbols\" if statement, so the\n\t      # include_expsyms logic still works.\n\t      orig_export_symbols=$export_symbols\n\t      export_symbols=\n\t      always_export_symbols=yes\n\t    }\n\t  fi\n\t  ;;\n\tesac\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test yes = \"$always_export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t    func_verbose \"generating symbol list for '$libname.la'\"\n\t    export_symbols=$output_objdir/$libname.exp\n\t    $opt_dry_run || $RM $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=$IFS; IFS='~'\n\t    for cmd1 in $cmds; do\n\t      IFS=$save_ifs\n\t      # Take the normal branch if the nm_file_list_spec branch\n\t      # doesn't work or if tool conversion is not needed.\n\t      case $nm_file_list_spec~$to_tool_file_cmd in\n\t\t*~func_convert_file_noop | *~func_convert_file_msys_to_w32 | ~*)\n\t\t  try_normal_branch=yes\n\t\t  eval cmd=\\\"$cmd1\\\"\n\t\t  func_len \" $cmd\"\n\t\t  len=$func_len_result\n\t\t  ;;\n\t\t*)\n\t\t  try_normal_branch=no\n\t\t  ;;\n\t      esac\n\t      if test yes = \"$try_normal_branch\" \\\n\t\t && { test \"$len\" -lt \"$max_cmd_len\" \\\n\t\t      || test \"$max_cmd_len\" -le -1; }\n\t      then\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\tskipped_export=false\n\t      elif test -n \"$nm_file_list_spec\"; then\n\t\tfunc_basename \"$output\"\n\t\toutput_la=$func_basename_result\n\t\tsave_libobjs=$libobjs\n\t\tsave_output=$output\n\t\toutput=$output_objdir/$output_la.nm\n\t\tfunc_to_tool_file \"$output\"\n\t\tlibobjs=$nm_file_list_spec$func_to_tool_file_result\n\t\tfunc_append delfiles \" $output\"\n\t\tfunc_verbose \"creating $NM input file list: $output\"\n\t\tfor obj in $save_libobjs; do\n\t\t  func_to_tool_file \"$obj\"\n\t\t  $ECHO \"$func_to_tool_file_result\"\n\t\tdone > \"$output\"\n\t\teval cmd=\\\"$cmd1\\\"\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\toutput=$save_output\n\t\tlibobjs=$save_libobjs\n\t\tskipped_export=false\n\t      else\n\t\t# The command line is too long to execute in one step.\n\t\tfunc_verbose \"using reloadable object file for export list...\"\n\t\tskipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=$save_ifs\n\t    if test -n \"$export_symbols_regex\" && test : != \"$skipped_export\"; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  tmp_export_symbols=$export_symbols\n\t  test -n \"$orig_export_symbols\" && tmp_export_symbols=$orig_export_symbols\n\t  $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\tfi\n\n\tif test : != \"$skipped_export\" && test -n \"$orig_export_symbols\"; then\n\t  # The given exports_symbols file has to be filtered, so filter it.\n\t  func_verbose \"filter symbol list for '$libname.la' to tag DATA exports\"\n\t  # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t  # 's' commands, which not all seds can handle. GNU sed should be fine\n\t  # though. Also, the filter scales superlinearly with the number of\n\t  # global variables. join(1) would be nice here, but unfortunately\n\t  # isn't a blessed tool.\n\t  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t  func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t  export_symbols=$output_objdir/$libname.def\n\t  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t  case \" $convenience \" in\n\t  *\" $test_deplib \"*) ;;\n\t  *)\n\t    func_append tmp_deplibs \" $test_deplib\"\n\t    ;;\n\t  esac\n\tdone\n\tdeplibs=$tmp_deplibs\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\" &&\n\t    test yes = \"$compiler_needs_object\" &&\n\t    test -z \"$libobjs\"; then\n\t    # extract the archives, so we have objects to list.\n\t    # TODO: could optimize this to just extract one archive.\n\t    whole_archive_flag_spec=\n\t  fi\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  else\n\t    gentop=$output_objdir/${outputname}x\n\t    func_append generated \" $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    func_append libobjs \" $func_extract_archives_result\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\tfi\n\n\tif test yes = \"$thread_safe\" && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  func_append linker_flags \" $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test relink = \"$opt_mode\"; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U)' || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test yes = \"$module\" && test -n \"$module_cmds\"; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$module_expsym_cmds\\\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$module_cmds\\\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$archive_expsym_cmds\\\"\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$archive_cmds\\\"\n\t    cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test : != \"$skipped_export\" &&\n\t   func_len \" $test_cmds\" &&\n\t   len=$func_len_result &&\n\t   test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise\n\t  # or, if using GNU ld and skipped_export is not :, use a linker\n\t  # script.\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  func_basename \"$output\"\n\t  output_la=$func_basename_result\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  last_robj=\n\t  k=1\n\n\t  if test -n \"$save_libobjs\" && test : != \"$skipped_export\" && test yes = \"$with_gnu_ld\"; then\n\t    output=$output_objdir/$output_la.lnkscript\n\t    func_verbose \"creating GNU ld script: $output\"\n\t    echo 'INPUT (' > $output\n\t    for obj in $save_libobjs\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    echo ')' >> $output\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$func_to_tool_file_result\n\t  elif test -n \"$save_libobjs\" && test : != \"$skipped_export\" && test -n \"$file_list_spec\"; then\n\t    output=$output_objdir/$output_la.lnk\n\t    func_verbose \"creating linker input file list: $output\"\n\t    : > $output\n\t    set x $save_libobjs\n\t    shift\n\t    firstobj=\n\t    if test yes = \"$compiler_needs_object\"; then\n\t      firstobj=\"$1 \"\n\t      shift\n\t    fi\n\t    for obj\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$firstobj\\\"$file_list_spec$func_to_tool_file_result\\\"\n\t  else\n\t    if test -n \"$save_libobjs\"; then\n\t      func_verbose \"creating reloadable object files...\"\n\t      output=$output_objdir/$output_la-$k.$objext\n\t      eval test_cmds=\\\"$reload_cmds\\\"\n\t      func_len \" $test_cmds\"\n\t      len0=$func_len_result\n\t      len=$len0\n\n\t      # Loop over the list of objects to be linked.\n\t      for obj in $save_libobjs\n\t      do\n\t\tfunc_len \" $obj\"\n\t\tfunc_arith $len + $func_len_result\n\t\tlen=$func_arith_result\n\t\tif test -z \"$objlist\" ||\n\t\t   test \"$len\" -lt \"$max_cmd_len\"; then\n\t\t  func_append objlist \" $obj\"\n\t\telse\n\t\t  # The command $test_cmds is almost too long, add a\n\t\t  # command to the queue.\n\t\t  if test 1 -eq \"$k\"; then\n\t\t    # The first file doesn't have a previous command to add.\n\t\t    reload_objs=$objlist\n\t\t    eval concat_cmds=\\\"$reload_cmds\\\"\n\t\t  else\n\t\t    # All subsequent reloadable object files will link in\n\t\t    # the last one created.\n\t\t    reload_objs=\"$objlist $last_robj\"\n\t\t    eval concat_cmds=\\\"\\$concat_cmds~$reload_cmds~\\$RM $last_robj\\\"\n\t\t  fi\n\t\t  last_robj=$output_objdir/$output_la-$k.$objext\n\t\t  func_arith $k + 1\n\t\t  k=$func_arith_result\n\t\t  output=$output_objdir/$output_la-$k.$objext\n\t\t  objlist=\" $obj\"\n\t\t  func_len \" $last_robj\"\n\t\t  func_arith $len0 + $func_len_result\n\t\t  len=$func_arith_result\n\t\tfi\n\t      done\n\t      # Handle the remaining objects by creating one last\n\t      # reloadable object file.  All subsequent reloadable object\n\t      # files will link in the last one created.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      reload_objs=\"$objlist $last_robj\"\n\t      eval concat_cmds=\\\"\\$concat_cmds$reload_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t        eval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t      func_append delfiles \" $output\"\n\n\t    else\n\t      output=\n\t    fi\n\n\t    ${skipped_export-false} && {\n\t      func_verbose \"generating symbol list for '$libname.la'\"\n\t      export_symbols=$output_objdir/$libname.exp\n\t      $opt_dry_run || $RM $export_symbols\n\t      libobjs=$output\n\t      # Append the command to create the export file.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$export_symbols_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t\teval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t    }\n\n\t    test -n \"$save_libobjs\" &&\n\t      func_verbose \"creating a temporary reloadable object file: $output\"\n\n\t    # Loop through the commands generated above and execute them.\n\t    save_ifs=$IFS; IFS='~'\n\t    for cmd in $concat_cmds; do\n\t      IFS=$save_ifs\n\t      $opt_quiet || {\n\t\t  func_quote_arg expand,pretty \"$cmd\"\n\t\t  eval \"func_echo $func_quote_arg_result\"\n\t      }\n\t      $opt_dry_run || eval \"$cmd\" || {\n\t\tlt_exit=$?\n\n\t\t# Restore the uninstalled library and exit\n\t\tif test relink = \"$opt_mode\"; then\n\t\t  ( cd \"$output_objdir\" && \\\n\t\t    $RM \"${realname}T\" && \\\n\t\t    $MV \"${realname}U\" \"$realname\" )\n\t\tfi\n\n\t\texit $lt_exit\n\t      }\n\t    done\n\t    IFS=$save_ifs\n\n\t    if test -n \"$export_symbols_regex\" && ${skipped_export-false}; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\n          ${skipped_export-false} && {\n\t    if test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t      tmp_export_symbols=$export_symbols\n\t      test -n \"$orig_export_symbols\" && tmp_export_symbols=$orig_export_symbols\n\t      $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\t    fi\n\n\t    if test -n \"$orig_export_symbols\"; then\n\t      # The given exports_symbols file has to be filtered, so filter it.\n\t      func_verbose \"filter symbol list for '$libname.la' to tag DATA exports\"\n\t      # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t      # 's' commands, which not all seds can handle. GNU sed should be fine\n\t      # though. Also, the filter scales superlinearly with the number of\n\t      # global variables. join(1) would be nice here, but unfortunately\n\t      # isn't a blessed tool.\n\t      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t      func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t      export_symbols=$output_objdir/$libname.def\n\t      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\t    fi\n\t  }\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test yes = \"$module\" && test -n \"$module_cmds\"; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t    if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t      cmds=$archive_expsym_cmds\n\t    else\n\t      cmds=$archive_cmds\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$delfiles\"; then\n\t  # Append the command to remove temporary files to $cmds.\n\t  eval cmds=\\\"\\$cmds~\\$RM $delfiles\\\"\n\tfi\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append libobjs \" $func_extract_archives_result\"\n\t  test \"X$libobjs\" = \"X \" && libobjs=\n\tfi\n\n\tsave_ifs=$IFS; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=$sp$nl\n\t  eval cmd=\\\"$cmd\\\"\n\t  IFS=$save_ifs\n\t  $opt_quiet || {\n\t    func_quote_arg expand,pretty \"$cmd\"\n\t    eval \"func_echo $func_quote_arg_result\"\n\t  }\n\t  $opt_dry_run || eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test relink = \"$opt_mode\"; then\n\t      ( cd \"$output_objdir\" && \\\n\t        $RM \"${realname}T\" && \\\n\t\t$MV \"${realname}U\" \"$realname\" )\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=$save_ifs\n\n\t# Restore the uninstalled library and exit\n\tif test relink = \"$opt_mode\"; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname)' || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      func_show_eval '${RM}r \"$gentop\"'\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    func_show_eval '(cd \"$output_objdir\" && $RM \"$linkname\" && $LN_S \"$realname\" \"$linkname\")' 'exit $?'\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test yes = \"$module\" || test yes = \"$export_dynamic\"; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=$soname\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n\tfunc_warning \"'-dlopen' is ignored for objects\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"'-l' and '-L' are ignored for objects\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"'-rpath' is ignored for objects\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"'-R' is ignored for objects\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info' is ignored for objects\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for objects\"\n\n      case $output in\n      *.lo)\n\ttest -n \"$objs$old_deplibs\" && \\\n\t  func_fatal_error \"cannot build library object '$output' from non-libtool objects\"\n\n\tlibobj=$output\n\tfunc_lo2o \"$libobj\"\n\tobj=$func_lo2o_result\n\t;;\n      *)\n\tlibobj=\n\tobj=$output\n\t;;\n      esac\n\n      # Delete the old objects.\n      $opt_dry_run || $RM $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # if reload_cmds runs $LD directly, get rid of -Wl from\n      # whole_archive_flag_spec and hope we can get by with turning comma\n      # into space.\n      case $reload_cmds in\n        *\\$LD[\\ \\$]*) wl= ;;\n      esac\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval tmp_whole_archive_flags=\\\"$whole_archive_flag_spec\\\"\n\t  test -n \"$wl\" || tmp_whole_archive_flags=`$ECHO \"$tmp_whole_archive_flags\" | $SED 's|,| |g'`\n\t  reload_conv_objs=$reload_objs\\ $tmp_whole_archive_flags\n\telse\n\t  gentop=$output_objdir/${obj}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # If we're not building shared, we need to use non_pic_objs\n      test yes = \"$build_libtool_libs\" || libobjs=$non_pic_objects\n\n      # Create the old-style object.\n      reload_objs=$objs$old_deplibs' '`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.$libext$/d; /\\.lib$/d; $lo2o\" | $NL2SP`' '$reload_conv_objs\n\n      output=$obj\n      func_execute_cmds \"$reload_cmds\" 'exit $?'\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      test yes = \"$build_libtool_libs\" || {\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $opt_dry_run || eval \"echo timestamp > $libobj\" || exit $?\n\texit $EXIT_SUCCESS\n      }\n\n      if test -n \"$pic_flag\" || test default != \"$pic_mode\"; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=$libobj\n\tfunc_execute_cmds \"$reload_cmds\" 'exit $?'\n      fi\n\n      if test -n \"$gentop\"; then\n\tfunc_show_eval '${RM}r \"$gentop\"'\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) func_stripname '' '.exe' \"$output\"\n\t          output=$func_stripname_result.exe;;\n      esac\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info' is ignored for programs\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for programs\"\n\n      $preload \\\n\t&& test unknown,unknown,unknown = \"$dlopen_support,$dlopen_self,$dlopen_self_static\" \\\n\t&& func_warning \"'LT_INIT([dlopen])' not used. Assuming no dlopen support.\"\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t;;\n      esac\n\n      case $host in\n      *-*-darwin*)\n\t# Don't allow lazy linking, it breaks C++ global constructors\n\t# But is supposedly fixed on 10.4 or later (yay!).\n\tif test CXX = \"$tagname\"; then\n\t  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in\n\t    10.[0123])\n\t      func_append compile_command \" $wl-bind_at_load\"\n\t      func_append finalize_command \" $wl-bind_at_load\"\n\t    ;;\n\t  esac\n\tfi\n\t# Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=$new_libs\n\n\n      func_append compile_command \" $compile_deplibs\"\n      func_append finalize_command \" $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=$libdir\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$libdir\" | $SED -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  ::) dllsearchpath=$libdir;;\n\t  *) func_append dllsearchpath \":$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=$hardcode_libdirs\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=$rpath\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=$libdir\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=$hardcode_libdirs\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=$rpath\n\n      if test -n \"$libobjs\" && test yes = \"$build_old_libs\"; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$ECHO \"$compile_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$ECHO \"$finalize_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n      fi\n\n      func_generate_dlsyms \"$outputname\" \"@PROGRAM@\" false\n\n      # template prelinking step\n      if test -n \"$prelink_cmds\"; then\n\tfunc_execute_cmds \"$prelink_cmds\" 'exit $?'\n      fi\n\n      wrappers_required=:\n      case $host in\n      *cegcc* | *mingw32ce*)\n        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.\n        wrappers_required=false\n        ;;\n      *cygwin* | *mingw* )\n        test yes = \"$build_libtool_libs\" || wrappers_required=false\n        ;;\n      *)\n        if test no = \"$need_relink\" || test yes != \"$build_libtool_libs\"; then\n          wrappers_required=false\n        fi\n        ;;\n      esac\n      $wrappers_required || {\n\t# Replace the output file specification.\n\tcompile_command=`$ECHO \"$compile_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=$compile_command$compile_rpath\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\texit_status=0\n\tfunc_show_eval \"$link_command\" 'exit_status=$?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\t# Delete the generated files.\n\tif test -f \"$output_objdir/${outputname}S.$objext\"; then\n\t  func_show_eval '$RM \"$output_objdir/${outputname}S.$objext\"'\n\tfi\n\n\texit $exit_status\n      }\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test yes = \"$no_install\"; then\n\t# We don't need to create a wrapper script.\n\tlink_command=$compile_var$compile_command$compile_rpath\n\t# Replace the output file specification.\n\tlink_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$opt_dry_run || $RM $output\n\t# Link the executable and exit\n\tfunc_show_eval \"$link_command\" 'exit $?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      case $hardcode_action,$fast_install in\n        relink,*)\n\t  # Fast installation is not supported\n\t  link_command=$compile_var$compile_command$compile_rpath\n\t  relink_command=$finalize_var$finalize_command$finalize_rpath\n\n\t  func_warning \"this platform does not like uninstalled shared libraries\"\n\t  func_warning \"'$output' will be relinked during installation\"\n\t  ;;\n        *,yes)\n\t  link_command=$finalize_var$compile_command$finalize_rpath\n\t  relink_command=`$ECHO \"$compile_var$compile_command$compile_rpath\" | $SED 's%@OUTPUT@%\\$progdir/\\$file%g'`\n          ;;\n\t*,no)\n\t  link_command=$compile_var$compile_command$compile_rpath\n\t  relink_command=$finalize_var$finalize_command$finalize_rpath\n          ;;\n\t*,needless)\n\t  link_command=$finalize_var$compile_command$finalize_rpath\n\t  relink_command=\n          ;;\n      esac\n\n      # Replace the output file specification.\n      link_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      func_show_eval \"$link_command\" 'exit $?'\n\n      if test -n \"$postlink_cmds\"; then\n\tfunc_to_tool_file \"$output_objdir/$outputname\"\n\tpostlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\tfunc_execute_cmds \"$postlink_cmds\" 'exit $?'\n      fi\n\n      # Now create the wrapper script.\n      func_verbose \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    func_quote_arg pretty \"$var_value\"\n\t    relink_command=\"$var=$func_quote_arg_result; export $var; $relink_command\"\n\t  fi\n\tdone\n\tfunc_quote eval cd \"`pwd`\"\n\tfunc_quote_arg pretty,unquoted \"($func_quote_result; $relink_command)\"\n\trelink_command=$func_quote_arg_unquoted_result\n      fi\n\n      # Only actually do things if not in dry run mode.\n      $opt_dry_run || {\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) func_stripname '' '.exe' \"$output\"\n\t         output=$func_stripname_result ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    func_stripname '' '.exe' \"$outputname\"\n\t    outputname=$func_stripname_result ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    func_dirname_and_basename \"$output\" \"\" \".\"\n\t    output_name=$func_basename_result\n\t    output_path=$func_dirname_result\n\t    cwrappersource=$output_path/$objdir/lt-$output_name.c\n\t    cwrapper=$output_path/$output_name.exe\n\t    $RM $cwrappersource $cwrapper\n\t    trap \"$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_cwrapperexe_src > $cwrappersource\n\n\t    # The wrapper executable is built using the $host compiler,\n\t    # because it contains $host paths and files. If cross-\n\t    # compiling, it, like the target executable, must be\n\t    # executed on the $host or under an emulation environment.\n\t    $opt_dry_run || {\n\t      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource\n\t      $STRIP $cwrapper\n\t    }\n\n\t    # Now, create the wrapper script for func_source use:\n\t    func_ltwrapper_scriptname $cwrapper\n\t    $RM $func_ltwrapper_scriptname_result\n\t    trap \"$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE\" 1 2 15\n\t    $opt_dry_run || {\n\t      # note: this script will not be executed, so do not chmod.\n\t      if test \"x$build\" = \"x$host\"; then\n\t\t$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result\n\t      else\n\t\tfunc_emit_wrapper no > $func_ltwrapper_scriptname_result\n\t      fi\n\t    }\n\t  ;;\n\t  * )\n\t    $RM $output\n\t    trap \"$RM $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_wrapper no > $output\n\t    chmod +x $output\n\t  ;;\n\tesac\n      }\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      case $build_libtool_libs in\n        convenience)\n\t  oldobjs=\"$libobjs_save $symfileobj\"\n\t  addlibs=$convenience\n\t  build_libtool_libs=no\n\t  ;;\n\tmodule)\n\t  oldobjs=$libobjs_save\n\t  addlibs=$old_convenience\n\t  build_libtool_libs=no\n          ;;\n\t*)\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\t  $preload && test -f \"$symfileobj\" \\\n\t    && func_append oldobjs \" $symfileobj\"\n\t  addlibs=$old_convenience\n\t  ;;\n      esac\n\n      if test -n \"$addlibs\"; then\n\tgentop=$output_objdir/${outputname}x\n\tfunc_append generated \" $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\tfunc_append oldobjs \" $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test yes = \"$build_libtool_libs\"; then\n\tcmds=$old_archive_from_new_cmds\n      else\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append oldobjs \" $func_extract_archives_result\"\n\tfi\n\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      func_basename \"$obj\"\n\t      $ECHO \"$func_basename_result\"\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  echo \"copying selected object files to avoid basename conflicts...\"\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\t  func_mkdir_p \"$gentop\"\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_basename \"$obj\"\n\t    objbase=$func_basename_result\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tfunc_arith $counter + 1\n\t\tcounter=$func_arith_result\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      func_show_eval \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      func_append oldobjs \" $gentop/$newobj\"\n\t      ;;\n\t    *) func_append oldobjs \" $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\tfunc_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n\ttool_oldlib=$func_to_tool_file_result\n\teval cmds=\\\"$old_archive_cmds\\\"\n\n\tfunc_len \" $cmds\"\n\tlen=$func_len_result\n\tif test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telif test -n \"$archiver_list_spec\"; then\n\t  func_verbose \"using command file archive linking...\"\n\t  for obj in $oldobjs\n\t  do\n\t    func_to_tool_file \"$obj\"\n\t    $ECHO \"$func_to_tool_file_result\"\n\t  done > $output_objdir/$libname.libcmd\n\t  func_to_tool_file \"$output_objdir/$libname.libcmd\"\n\t  oldobjs=\" $archiver_list_spec$func_to_tool_file_result\"\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  func_verbose \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  eval test_cmds=\\\"$old_archive_cmds\\\"\n\t  func_len \" $test_cmds\"\n\t  len0=$func_len_result\n\t  len=$len0\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_len \" $obj\"\n\t    func_arith $len + $func_len_result\n\t    len=$func_arith_result\n\t    func_append objlist \" $obj\"\n\t    if test \"$len\" -lt \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\"; then\n\t\tRANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$old_archive_cmds\\\"\n\t      objlist=\n\t      len=$len0\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test -z \"$oldobjs\"; then\n\t    eval cmds=\\\"\\$concat_cmds\\\"\n\t  else\n\t    eval cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\n\t  fi\n\tfi\n      fi\n      func_execute_cmds \"$cmds\" 'exit $?'\n    done\n\n    test -n \"$generated\" && \\\n      func_show_eval \"${RM}r$generated\"\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test yes = \"$build_old_libs\" && old_library=$libname.$libext\n      func_verbose \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  func_quote_arg pretty,unquoted \"$var_value\"\n\t  relink_command=\"$var=$func_quote_arg_unquoted_result; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      func_quote eval cd \"`pwd`\"\n      relink_command=\"($func_quote_result; $SHELL \\\"$progpath\\\" $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      func_quote_arg pretty,unquoted \"$relink_command\"\n      relink_command=$func_quote_arg_unquoted_result\n      if test yes = \"$hardcode_automatic\"; then\n\trelink_command=\n      fi\n\n      # Only create the output if not a dry run.\n      $opt_dry_run || {\n\tfor installed in no yes; do\n\t  if test yes = \"$installed\"; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=$output_objdir/${outputname}i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tfunc_basename \"$deplib\"\n\t\tname=$func_basename_result\n\t\tfunc_resolve_sysroot \"$deplib\"\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $func_resolve_sysroot_result`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$deplib' is not a valid libtool archive\"\n\t\tfunc_append newdependency_libs \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      -L*)\n\t\tfunc_stripname -L '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -L$func_replace_sysroot_result\"\n\t\t;;\n\t      -R*)\n\t\tfunc_stripname -R '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -R$func_replace_sysroot_result\"\n\t\t;;\n\t      *) func_append newdependency_libs \" $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=$newdependency_libs\n\t    newdlfiles=\n\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t      *.la)\n\t        func_basename \"$lib\"\n\t\tname=$func_basename_result\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlfiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      *) func_append newdlfiles \" $lib\" ;;\n\t      esac\n\t    done\n\t    dlfiles=$newdlfiles\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t      *.la)\n\t\t# Only pass preopened files to the pseudo-archive (for\n\t\t# eventual linking with the app. that links it) if we\n\t\t# didn't already link the preopened objects directly into\n\t\t# the library:\n\t\tfunc_basename \"$lib\"\n\t\tname=$func_basename_result\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlprefiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      esac\n\t    done\n\t    dlprefiles=$newdlprefiles\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=$lib ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlfiles \" $abs\"\n\t    done\n\t    dlfiles=$newdlfiles\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=$lib ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlprefiles \" $abs\"\n\t    done\n\t    dlprefiles=$newdlprefiles\n\t  fi\n\t  $RM $output\n\t  # place dlname in correct position for cygwin\n\t  # In fact, it would be nice if we could use this code for all target\n\t  # systems that can't hard-code library paths into their executables\n\t  # and that have no shared library path variable independent of PATH,\n\t  # but it turns out we can't easily determine that from inspecting\n\t  # libtool variables, so we have to hard-code the OSs to which it\n\t  # applies here; at the moment, that means platforms that use the PE\n\t  # object format with DLL files.  See the long comment at the top of\n\t  # tests/bindir.at for full details.\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)\n\t      # If a -bindir argument was supplied, place the dll there.\n\t      if test -n \"$bindir\"; then\n\t\tfunc_relative_path \"$install_libdir\" \"$bindir\"\n\t\ttdlname=$func_relative_path_result/$dlname\n\t      else\n\t\t# Otherwise fall back on heuristic.\n\t\ttdlname=../bin/$dlname\n\t      fi\n\t      ;;\n\t  esac\n\t  $ECHO > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Linker flags that cannot go in dependency_libs.\ninherited_linker_flags='$new_inherited_linker_flags'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Names of additional weak libraries provided by this library\nweak_library_names='$weak_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test no,yes = \"$installed,$need_relink\"; then\n\t    $ECHO >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      }\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      func_show_eval '( cd \"$output_objdir\" && $RM \"$outputname\" && $LN_S \"../$outputname\" \"$outputname\" )' 'exit $?'\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n}\n\nif test link = \"$opt_mode\" || test relink = \"$opt_mode\"; then\n  func_mode_link ${1+\"$@\"}\nfi\n\n\n# func_mode_uninstall arg...\nfunc_mode_uninstall ()\n{\n    $debug_cmd\n\n    RM=$nonopt\n    files=\n    rmforce=false\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=$magic\n\n    for arg\n    do\n      case $arg in\n      -f) func_append RM \" $arg\"; rmforce=: ;;\n      -*) func_append RM \" $arg\" ;;\n      *) func_append files \" $arg\" ;;\n      esac\n    done\n\n    test -z \"$RM\" && \\\n      func_fatal_help \"you must specify an RM program\"\n\n    rmdirs=\n\n    for file in $files; do\n      func_dirname \"$file\" \"\" \".\"\n      dir=$func_dirname_result\n      if test . = \"$dir\"; then\n\todir=$objdir\n      else\n\todir=$dir/$objdir\n      fi\n      func_basename \"$file\"\n      name=$func_basename_result\n      test uninstall = \"$opt_mode\" && odir=$dir\n\n      # Remember odir for removal later, being careful to avoid duplicates\n      if test clean = \"$opt_mode\"; then\n\tcase \" $rmdirs \" in\n\t  *\" $odir \"*) ;;\n\t  *) func_append rmdirs \" $odir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if { test -L \"$file\"; } >/dev/null 2>&1 ||\n\t { test -h \"$file\"; } >/dev/null 2>&1 ||\n\t test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif $rmforce; then\n\tcontinue\n      fi\n\n      rmfiles=$file\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif func_lalib_p \"$file\"; then\n\t  func_source $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    func_append rmfiles \" $odir/$n\"\n\t  done\n\t  test -n \"$old_library\" && func_append rmfiles \" $odir/$old_library\"\n\n\t  case $opt_mode in\n\t  clean)\n\t    case \" $library_names \" in\n\t    *\" $dlname \"*) ;;\n\t    *) test -n \"$dlname\" && func_append rmfiles \" $odir/$dlname\" ;;\n\t    esac\n\t    test -n \"$libdir\" && func_append rmfiles \" $odir/$name $odir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      func_execute_cmds \"$postuninstall_cmds\" '$rmforce || exit_status=1'\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      func_execute_cmds \"$old_postuninstall_cmds\" '$rmforce || exit_status=1'\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif func_lalib_p \"$file\"; then\n\n\t  # Read the .lo file\n\t  func_source $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" && test none != \"$pic_object\"; then\n\t    func_append rmfiles \" $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" && test none != \"$non_pic_object\"; then\n\t    func_append rmfiles \" $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test clean = \"$opt_mode\"; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    func_stripname '' '.exe' \"$file\"\n\t    file=$func_stripname_result\n\t    func_stripname '' '.exe' \"$name\"\n\t    noexename=$func_stripname_result\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    func_append rmfiles \" $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if func_ltwrapper_p \"$file\"; then\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      relink_command=\n\t      func_source $func_ltwrapper_scriptname_result\n\t      func_append rmfiles \" $func_ltwrapper_scriptname_result\"\n\t    else\n\t      relink_command=\n\t      func_source $dir/$noexename\n\t    fi\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    func_append rmfiles \" $odir/$name $odir/${name}S.$objext\"\n\t    if test yes = \"$fast_install\" && test -n \"$relink_command\"; then\n\t      func_append rmfiles \" $odir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\"; then\n\t      func_append rmfiles \" $odir/lt-$noexename.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      func_show_eval \"$RM $rmfiles\" 'exit_status=1'\n    done\n\n    # Try to remove the $objdir's in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\tfunc_show_eval \"rmdir $dir >/dev/null 2>&1\"\n      fi\n    done\n\n    exit $exit_status\n}\n\nif test uninstall = \"$opt_mode\" || test clean = \"$opt_mode\"; then\n  func_mode_uninstall ${1+\"$@\"}\nfi\n\ntest -z \"$opt_mode\" && {\n  help=$generic_help\n  func_fatal_help \"you must specify a MODE\"\n}\n\ntest -z \"$exec_cmd\" && \\\n  func_fatal_help \"invalid operation mode '$opt_mode'\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec \"$exec_cmd\"\n  exit $EXIT_FAILURE\nfi\n\nexit $exit_status\n\n\n# The TAGs below are defined such that we never get into a situation\n# where we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/doc/libtool.texi": "\\input texinfo   @c -*-texinfo-*-\n@c %**start of header\n@setfilename libtool.info\n@settitle Libtool\n@c For double-sided printing, uncomment:\n@c @setchapternewpage odd\n@c Put everything in one index (arbitrarily chosen to be the concept index).\n\n@syncodeindex vr cp\n@syncodeindex fn cp\n@syncodeindex tp cp\n@synindex pg cp\n@c %**end of header\n\n@include version.texi\n@set BUGADDR the Libtool bug reporting address @email{bug-libtool@@gnu.org}\n@set MAILLIST the Libtool mailing list @email{libtool@@gnu.org}\n@set objdir .libs\n\n@copying\nThis manual is for GNU Libtool (version @value{VERSION}, @value{UPDATED}).\n\nCopyright @copyright{} 1996-2019 Free Software Foundation, Inc.\n\nPermission is granted to copy, distribute and/or modify this document\nunder the terms of the GNU Free Documentation License, Version 1.3\nor any later version published by the Free Software Foundation;\nwith no Invariant Sections, with no Front-Cover Texts,\nand with no Back-Cover Texts.  A copy of the license is included in\nthe section entitled ``GNU Free Documentation License''.\n@end copying\n\n@dircategory Software development\n@direntry\n* Libtool: (libtool).           Generic shared library support script.\n@end direntry\n\n@dircategory Individual utilities\n@direntry\n* libtool-invocation: (libtool)Invoking libtool. Running the @code{libtool} script.\n* libtoolize: (libtool)Invoking libtoolize.      Adding libtool support.\n@end direntry\n\n@titlepage\n@title GNU Libtool\n@subtitle For version @value{VERSION}, @value{UPDATED}\n@author Gordon Matzigkeit\n@author Alexandre Oliva\n@author Thomas Tanner\n@author Gary V. Vaughan\n\n@page\n@vskip 0pt plus 1filll\n@insertcopying\n@end titlepage\n\n@contents\n\n@ifnottex\n@node Top, Introduction, (dir), (dir)\n@comment  node-name,  next,  previous,  up\n@top Shared library support for GNU\n\nThis file documents GNU Libtool, a script that allows package developers\nto provide generic shared library support.  This edition documents\nversion @value{VERSION}.\n\n@xref{Reporting bugs}, for information on how to report problems with\nGNU Libtool.\n\n@menu\n* Introduction::                What the heck is libtool?\n* Libtool paradigm::            How libtool's view of libraries is different.\n* Using libtool::               Example of using libtool to build libraries.\n* Invoking libtool::            Running the @code{libtool} script.\n* Integrating libtool::         Using libtool in your own packages.\n* Other languages::             Using libtool without a C compiler.\n* Versioning::                  Using library interface versions.\n* Library tips::                Tips for library interface design.\n* Inter-library dependencies::  Libraries that depend on other libraries.\n* Dlopened modules::            @code{dlopen}ing libtool-created libraries.\n* Using libltdl::               Libtool's portable @code{dlopen} wrapper library.\n* Trace interface::             Libtool's trace interface.\n* FAQ::                         Frequently Asked Questions\n* Troubleshooting::             When libtool doesn't work as advertised.\n* Maintaining::                 Information used by the libtool maintainer.\n* GNU Free Documentation License::  License for this manual.\n* Combined Index::              Full index.\n\n@detailmenu\n --- The Detailed Node Listing ---\n\nIntroduction\n\n* Motivation::                  Why does GNU need a libtool?\n* Issues::                      The problems that need to be addressed.\n* Other implementations::       How other people have solved these issues.\n* Postmortem::                  Learning from past difficulties.\n\nUsing libtool\n\n* Creating object files::       Compiling object files for libraries.\n* Linking libraries::           Creating libraries from object files.\n* Linking executables::         Linking object files against libtool libraries.\n* Debugging executables::       Running GDB on libtool-generated programs.\n* Installing libraries::        Making libraries available to users.\n* Installing executables::      Making programs available to users.\n* Static libraries::            When shared libraries are not wanted.\n\nLinking executables\n\n* Wrapper executables::         Wrapper executables for some platforms.\n\nInvoking @command{libtool}\n\n* Compile mode::                Creating library object files.\n* Link mode::                   Generating executables and libraries.\n* Execute mode::                Debugging libtool-generated programs.\n* Install mode::                Making libraries and executables public.\n* Finish mode::                 Completing a library installation.\n* Uninstall mode::              Removing installed executables and libraries.\n* Clean mode::                  Removing uninstalled executables and libraries.\n\nIntegrating libtool with your package\n\n* Autoconf macros::             Autoconf macros exported by libtool.\n* Makefile rules::              Writing @file{Makefile} rules for libtool.\n* Using Automake::              Automatically supporting libtool.\n* Configuring::                 Configuring libtool for a host system.\n* Distributing::                What files to distribute with your package.\n* Static-only libraries::       Sometimes shared libraries are just a pain.\n\nConfiguring libtool\n\n* LT_INIT::                     Configuring @code{libtool} in @file{configure.ac}.\n* Configure notes::             Platform-specific notes for configuration.\n\nIncluding libtool in your package\n\n* Invoking libtoolize::         @code{libtoolize} command line options.\n* Autoconf and LTLIBOBJS::      Autoconf automates LTLIBOBJS generation.\n\nUsing libtool with other languages\n\n* C++ libraries::               Writing libraries for C++\n* Tags::                        Tags\n\nLibrary interface versions\n\n* Interfaces::                  What are library interfaces?\n* Libtool versioning::          Libtool's versioning system.\n* Updating version info::       Changing version information before releases.\n* Release numbers::             Breaking binary compatibility for aesthetics.\n\nTips for interface design\n\n* C header files::              How to write portable include files.\n\nDlopened modules\n\n* Building modules::            Creating dlopenable objects and libraries.\n* Dlpreopening::                Dlopening that works on static platforms.\n* Linking with dlopened modules::  Using dlopenable modules in libraries.\n* Finding the dlname::          Choosing the right file to @code{dlopen}.\n* Dlopen issues::               Unresolved problems that need your attention.\n\nUsing libltdl\n\n* Libltdl interface::           How to use libltdl in your programs.\n* Modules for libltdl::         Creating modules that can be @code{dlopen}ed.\n* Thread Safety in libltdl::    Registering callbacks for multi-thread safety.\n* User defined module data::    Associating data with loaded modules.\n* Module loaders for libltdl::  Creating user defined module loaders.\n* Distributing libltdl::        How to distribute libltdl with your package.\n\nFrequently Asked Questions about libtool\n\n* Stripped link flags::         Dropped flags when creating a library\n\nTroubleshooting\n\n* Libtool test suite::          Libtool's self-tests.\n* Reporting bugs::              How to report problems with libtool.\n\nThe libtool test suite\n\n* Test descriptions::           The contents of the old test suite.\n* When tests fail::             What to do when a test fails.\n\nMaintenance notes for libtool\n\n* New ports::                   How to port libtool to new systems.\n* Tested platforms::            When libtool was last tested.\n* Platform quirks::             Information about different library systems.\n* libtool script contents::     Configuration information that libtool uses.\n* Cheap tricks::                Making libtool maintainership easier.\n\nPorting libtool to new systems\n\n* Information sources::         Where to find relevant documentation\n* Porting inter-library dependencies::  Implementation details explained\n\nPlatform quirks\n\n* References::                  Finding more information.\n* Compilers::                   Creating object files from source files.\n* Reloadable objects::          Binding object files together.\n* Multiple dependencies::       Removing duplicate dependent libraries.\n* Archivers::                   Programs that create static archives.\n* Cross compiling::             Issues that arise when cross compiling.\n* File name conversion::        Converting file names between platforms.\n* Windows DLLs::                Windows header defines.\n\nFile name conversion\n\n* File Name Conversion Failure::  What happens when file name conversion fails\n* Native MinGW File Name Conversion::  MSYS file name conversion idiosyncrasies\n* Cygwin/Windows File Name Conversion::  Using @command{cygpath} to convert Cygwin file names\n* Unix/Windows File Name Conversion::  Using Wine to convert Unix paths\n* LT_CYGPATH::                  Invoking @command{cygpath} from other environments\n* Cygwin to MinGW Cross::       Other notes concerning MinGW cross\n\n@end detailmenu\n@end menu\n\n@end ifnottex\n\n@node Introduction\n@chapter Introduction\n\nIn the past, if you were a source code package developer and wanted to\ntake advantage of the power of shared libraries, you needed to write\ncustom support code for each platform on which your package ran.  You\nalso had to design a configuration interface so that the package\ninstaller could choose what sort of libraries were built.\n\nGNU Libtool simplifies your job by encapsulating both the\nplatform-specific dependencies, and the user interface, in a single\nscript.  GNU Libtool is designed so that the complete functionality of\neach host type is available via a generic interface, but nasty quirks\nare hidden from the programmer.\n\nGNU Libtool's consistent interface is reassuring@dots{} users don't need\nto read obscure documentation to have their favorite source\npackage build shared libraries.  They just run your package\n@code{configure} script (or equivalent), and libtool does all the dirty\nwork.\n\nThere are several examples throughout this document.  All assume the\nsame environment: we want to build a library, @file{libhello}, in a\ngeneric way.\n\n@file{libhello} could be a shared library, a static library, or\nboth@dots{} whatever is available on the host system, as long as libtool\nhas been ported to it.\n\nThis chapter explains the original design philosophy of libtool.  Feel\nfree to skip to the next chapter, unless you are interested in history,\nor want to write code to extend libtool in a consistent way.\n\n@menu\n* Motivation::                  Why does GNU need a libtool?\n* Issues::                      The problems that need to be addressed.\n* Other implementations::       How other people have solved these issues.\n* Postmortem::                  Learning from past difficulties.\n@end menu\n\n@node Motivation\n@section Motivation for writing libtool\n\n@cindex motivation for writing libtool\n@cindex design philosophy\nSince early 1995, several different GNU developers have recognized the\nimportance of having shared library support for their packages.  The\nprimary motivation for such a change is to encourage modularity and\nreuse of code (both conceptually and physically) in GNU programs.\n\nSuch a demand means that the way libraries are built in GNU packages\nneeds to be general, to allow for any library type the package installer\nmight want.  The problem is compounded by the absence of a standard\nprocedure for creating shared libraries on different platforms.\n\nThe following sections outline the major issues facing shared library\nsupport in GNU, and how shared library support could be standardized\nwith libtool.\n\n@cindex specifications for libtool\n@cindex libtool specifications\nThe following specifications were used in developing and evaluating this\nsystem:\n\n@enumerate\n@item\nThe system must be as elegant as possible.\n\n@item\nThe system must be fully integrated with the GNU Autoconf and Automake\nutilities, so that it will be easy for GNU maintainers to use.  However,\nthe system must not require these tools, so that it can be used by\nnon-GNU packages.\n\n@item\nPortability to other (non-GNU) architectures and tools is desirable.\n@end enumerate\n\n@node Issues\n@section Implementation issues\n\n@cindex tricky design issues\n@cindex design issues\nThe following issues need to be addressed in any reusable shared library\nsystem, specifically libtool:\n\n@enumerate\n@item\nThe package installer should be able to control what sort of libraries\nare built.\n\n@item\nIt can be tricky to run dynamically linked programs whose libraries have\nnot yet been installed.  @code{LD_LIBRARY_PATH} must be set properly (if\nit is supported), or programs fail to run.\n\n@item\nThe system must operate consistently even on hosts that don't support\nshared libraries.\n\n@item\nThe commands required to build shared libraries may differ wildly from\nhost to host.  These need to be determined at configure time in\na consistent way.\n\n@item\nIt is not always obvious with what prefix or suffix a shared library\nshould be installed.  This makes it difficult for @file{Makefile} rules,\nsince they generally assume that file names are the same from host to\nhost.\n\n@item\nThe system needs a simple library version number abstraction, so that\nshared libraries can be upgraded in place.  The programmer should be\ninformed how to design the interfaces to the library to maximize binary\ncompatibility.\n\n@item\nThe install @file{Makefile} target should warn the package installer to set\nthe proper environment variables (@code{LD_LIBRARY_PATH} or equivalent),\nor run @command{ldconfig}.\n@end enumerate\n\n@node Other implementations\n@section Other implementations\n\nEven before libtool was developed, many free software packages built and\ninstalled their own shared libraries.  At first, these packages were\nexamined to avoid reinventing existing features.\n\nNow it is clear that none of these packages have documented the details\nof shared library systems that libtool requires.  So, other packages\nhave been more or less abandoned as influences.\n\n@node Postmortem\n@section A postmortem analysis of other implementations\n\n@cindex other implementations, flaws in\n@cindex reusability of library systems\nIn all fairness, each of the implementations that were examined do the\njob that they were intended to do, for a number of different host\nsystems.  However, none of these solutions seem to function well as a\ngeneralized, reusable component.\n\n@cindex complexity of library systems\nMost were too complex to use (much less modify) without understanding\nexactly what the implementation does, and they were generally not\ndocumented.\n\nThe main difficulty is that different vendors have different views of\nwhat libraries are, and none of the packages that were examined seemed\nto be confident enough to settle on a single paradigm that just\n@emph{works}.\n\nIdeally, libtool would be a standard that would be implemented as series\nof extensions and modifications to existing library systems to make them\nwork consistently.  However, it is not an easy task to convince\noperating system developers to mend their evil ways, and people want to\nbuild shared libraries right now, even on buggy, broken, confused\noperating systems.\n\nFor this reason, libtool was designed as an independent shell script.\nIt isolates the problems and inconsistencies in library building that\nplague @file{Makefile} writers by wrapping the compiler suite on\ndifferent platforms with a consistent, powerful interface.\n\nWith luck, libtool will be useful to and used by the GNU community, and\nthat the lessons that were learned in writing it will be taken up by\ndesigners of future library systems.\n\n@node Libtool paradigm\n@chapter The libtool paradigm\n\nAt first, libtool was designed to support an arbitrary number of library\nobject types.  After libtool was ported to more platforms, a new\nparadigm gradually developed for describing the relationship between\nlibraries and programs.\n\n@cindex definition of libraries\n@cindex libraries, definition of\nIn summary, ``libraries are programs with multiple entry points, and\nmore formally defined interfaces.''\n\nVersion 0.7 of libtool was a complete redesign and rewrite of libtool to\nreflect this new paradigm.  So far, it has proved to be successful:\nlibtool is simpler and more useful than before.\n\nThe best way to introduce the libtool paradigm is to contrast it with\nthe paradigm of existing library systems, with examples from each.  It\nis a new way of thinking, so it may take a little time to absorb, but\nwhen you understand it, the world becomes simpler.\n\n@node Using libtool\n@chapter Using libtool\n\n@cindex examples of using libtool\n@cindex libtool examples\nIt makes little sense to talk about using libtool in your own packages\nuntil you have seen how it makes your life simpler.  The examples in\nthis chapter introduce the main features of libtool by comparing the\nstandard library building procedure to libtool's operation on two\ndifferent platforms:\n\n@table @samp\n@item a23\nAn Ultrix 4.2 platform with only static libraries.\n\n@item burger\nA NetBSD/i386 1.2 platform with shared libraries.\n@end table\n\nYou can follow these examples on your own platform, using the\npreconfigured libtool script that was installed with libtool\n(@pxref{Configuring}).\n\nSource files for the following examples are taken from the @file{demo}\nsubdirectory of the libtool distribution.  Assume that we are building a\nlibrary, @file{libhello}, out of the files @file{foo.c} and\n@file{hello.c}.\n\nNote that the @file{foo.c} source file uses the @code{cos} math library\nfunction, which is usually found in the standalone math library, and not\nthe C library (@pxref{Trig Functions, , Trigonometric Functions, libc,\nThe GNU C Library Reference Manual}).  So, we need to add @option{-lm} to\nthe end of the link line whenever we link @file{foo.lo} into an\nexecutable or a library (@pxref{Inter-library dependencies}).\n\nThe same rule applies whenever you use functions that don't appear in\nthe standard C library@dots{} you need to add the appropriate\n@option{-l@var{name}} flag to the end of the link line when you link\nagainst those objects.\n\nAfter we have built that library, we want to create a program by linking\n@file{main.o} against @file{libhello}.\n\n@menu\n* Creating object files::       Compiling object files for libraries.\n* Linking libraries::           Creating libraries from object files.\n* Linking executables::         Linking object files against libtool libraries.\n* Debugging executables::       Running GDB on libtool-generated programs.\n* Installing libraries::        Making libraries available to users.\n* Installing executables::      Making programs available to users.\n* Static libraries::            When shared libraries are not wanted.\n@end menu\n\n@node Creating object files\n@section Creating object files\n\n@cindex compiling object files\n@cindex object files, compiling\nTo create an object file from a source file, the compiler is invoked\nwith the @option{-c} flag (and any other desired flags):\n\n@example\nburger$ @kbd{gcc -g -O -c main.c}\nburger$\n@end example\n\nThe above compiler command produces an object file, usually named\n@file{main.o}, from the source file @file{main.c}.\n\nFor most library systems, creating object files that become part of a\nstatic library is as simple as creating object files that are linked to\nform an executable:\n\n@example\nburger$ @kbd{gcc -g -O -c foo.c}\nburger$ @kbd{gcc -g -O -c hello.c}\nburger$\n@end example\n\n@cindex position-independent code\n@cindex PIC (position-independent code)\nShared libraries, however, may only be built from\n@dfn{position-independent code} (PIC).  So, special flags must be passed\nto the compiler to tell it to generate PIC rather than the standard\nposition-dependent code.\n\n@cindex library object file\n@cindex @file{.lo} files\n@cindex object files, library\nSince this is a library implementation detail, libtool hides the\ncomplexity of PIC compiler flags and uses separate library object files\n(the PIC one lives in the @file{@value{objdir}} subdirectory and the\nstatic one lives in the current directory).  On systems without shared\nlibraries, the PIC library object files are not created, whereas on\nsystems where all code is PIC, such as AIX, the static ones are not\ncreated.\n\nTo create library object files for @file{foo.c} and @file{hello.c},\nsimply invoke libtool with the standard compilation command as\narguments (@pxref{Compile mode}):\n\n@example\na23$ @kbd{libtool --mode=compile gcc -g -O -c foo.c}\ngcc -g -O -c foo.c -o foo.o\na23$ @kbd{libtool --mode=compile gcc -g -O -c hello.c}\ngcc -g -O -c hello.c -o hello.o\na23$\n@end example\n\nNote that libtool silently creates an additional control file on each\n@samp{compile} invocation.  The @file{.lo} file is the libtool object,\nwhich Libtool uses to determine what object file may be built into a\nshared library.  On @samp{a23}, only static libraries are supported so\nthe library objects look like this:\n\n@example\n# foo.lo - a libtool object file\n# Generated by ltmain.sh (GNU libtool) @value{VERSION}\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=none\n\n# Name of the non-PIC object.\nnon_pic_object='foo.o'\n@end example\n\nOn shared library systems, libtool automatically generates an\nadditional PIC object by inserting the appropriate PIC generation\nflags into the compilation command:\n\n@example\nburger$ @kbd{libtool --mode=compile gcc -g -O -c foo.c}\nmkdir @value{objdir}\ngcc -g -O -c foo.c  -fPIC -DPIC -o @value{objdir}/foo.o\ngcc -g -O -c foo.c -o foo.o >/dev/null 2>&1\nburger$\n@end example\n\nNote that Libtool automatically created @file{@value{objdir}} directory\nupon its first execution, where PIC library object files will be stored.\n\nSince @samp{burger} supports shared libraries, and requires PIC\nobjects to build them, Libtool has compiled a PIC object this time,\nand made a note of it in the libtool object:\n\n@example\n# foo.lo - a libtool object file\n# Generated by ltmain.sh (GNU libtool) @value{VERSION}\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object='@value{objdir}/foo.o'\n\n# Name of the non-PIC object.\nnon_pic_object='foo.o'\n@end example\n\n@cindex @option{-no-suppress}, libtool compile mode option\nNotice that the second run of GCC has its output discarded.  This is\ndone so that compiler warnings aren't annoyingly duplicated.  If you\nneed to see both sets of warnings (you might have conditional code\ninside @samp{#ifdef PIC} for example), you can turn off suppression with\nthe @option{-no-suppress} option to libtool's compile mode:\n\n@example\nburger$ @kbd{libtool --mode=compile gcc -no-suppress -g -O -c hello.c}\ngcc -g -O -c hello.c  -fPIC -DPIC -o @value{objdir}/hello.o\ngcc -g -O -c hello.c -o hello.o\nburger$\n@end example\n\n\n@node Linking libraries\n@section Linking libraries\n\n@pindex ar\nWithout libtool, the programmer would invoke the @command{ar} command to\ncreate a static library:\n\n@example\nburger$ @kbd{ar cr libhello.a hello.o foo.o}\nburger$\n@end example\n\n@pindex ranlib\nBut of course, that would be too simple, so many systems require that\nyou run the @code{ranlib} command on the resulting library (to give it\nbetter karma, or something):\n\n@example\nburger$ @kbd{ranlib libhello.a}\nburger$\n@end example\n\nIt seems more natural to use the C compiler for this task, given\nlibtool's ``libraries are programs'' approach.  So, on platforms without\nshared libraries, libtool simply acts as a wrapper for the system\n@command{ar} (and possibly @code{ranlib}) commands.\n\n@cindex libtool libraries\n@cindex @file{.la} files\nAgain, the libtool control file name (@file{.la} suffix) differs from\nthe standard library name (@file{.a} suffix).  The arguments to\nlibtool are the same ones you would use to produce an executable named\n@file{libhello.la} with your compiler (@pxref{Link mode}):\n\n@example\na23$ @kbd{libtool --mode=link gcc -g -O -o libhello.la foo.o hello.o}\n*** Warning: Linking the shared library libhello.la against the\n*** non-libtool objects foo.o hello.o is not portable!\nar cr .libs/libhello.a\nranlib .libs/libhello.a\ncreating libhello.la\n(cd .libs && rm -f libhello.la && ln -s ../libhello.la libhello.la)\na23$\n@end example\n\nAha!  Libtool caught a common error@dots{} trying to build a library\nfrom standard objects instead of special @file{.lo} object files.  This\ndoesn't matter so much for static libraries, but on shared library\nsystems, it is of great importance.  (Note that you may replace\n@file{libhello.la} with @file{libhello.a} in which case libtool won't\nissue the warning any more.  But although this method works, this is\nnot intended to be used because it makes you lose the benefits of\nusing Libtool.)\n\nSo, let's try again, this time with the library object files.  Remember\nalso that we need to add @option{-lm} to the link command line because\n@file{foo.c} uses the @code{cos} math library function (@pxref{Using\nlibtool}).\n\nAnother complication in building shared libraries is that we need to\nspecify the path to the directory wher they will (eventually) be\ninstalled (in this case, @file{/usr/local/lib})@footnote{If you don't\nspecify an @code{rpath}, then libtool builds a libtool convenience\narchive, not a shared library (@pxref{Static libraries}).}:\n\n@example\na23$ @kbd{libtool --mode=link gcc -g -O -o libhello.la foo.lo hello.lo \\\n                -rpath /usr/local/lib -lm}\nar cr @value{objdir}/libhello.a foo.o hello.o\nranlib @value{objdir}/libhello.a\ncreating libhello.la\n(cd @value{objdir} && rm -f libhello.la && ln -s ../libhello.la libhello.la)\na23$\n@end example\n\nNow, let's try the same trick on the shared library platform:\n\n@example\nburger$ @kbd{libtool --mode=link gcc -g -O -o libhello.la foo.lo hello.lo \\\n                -rpath /usr/local/lib -lm}\nrm -fr  @value{objdir}/libhello.a @value{objdir}/libhello.la\nld -Bshareable -o @value{objdir}/libhello.so.0.0 @value{objdir}/foo.o @value{objdir}/hello.o -lm\nar cr @value{objdir}/libhello.a foo.o hello.o\nranlib @value{objdir}/libhello.a\ncreating libhello.la\n(cd @value{objdir} && rm -f libhello.la && ln -s ../libhello.la libhello.la)\nburger$\n@end example\n\nNow that's significantly cooler@dots{} Libtool just ran an obscure\n@command{ld} command to create a shared library, as well as the static\nlibrary.\n\n@cindex @file{@value{objdir}} subdirectory\nNote how libtool creates extra files in the @file{@value{objdir}}\nsubdirectory, rather than the current directory.  This feature is to\nmake it easier to clean up the build directory, and to help ensure that\nother programs fail horribly if you accidentally forget to use libtool\nwhen you should.\n\nAgain, you may want to have a look at the @file{.la} file\nto see what Libtool stores in it.  In particular, you will see that\nLibtool uses this file to remember the destination directory for the\nlibrary (the argument to @option{-rpath}) as well as the dependency\non the math library (@samp{-lm}).\n\n@node Linking executables\n@section Linking executables\n\n@cindex linking against installed libraries\nIf you choose at this point to @dfn{install} the library (put it in a\npermanent location) before linking executables against it, then you\ndon't need to use libtool to do the linking.  Simply use the appropriate\n@option{-L} and @option{-l} flags to specify the library's location.\n\n@cindex buggy system linkers\nSome system linkers insist on encoding the full directory name of each\nshared library in the resulting executable.  Libtool has to work around\nthis misfeature by special magic to ensure that only permanent directory\nnames are put into installed executables.\n\n@cindex security problems with buggy linkers\n@cindex bugs, subtle ones caused by buggy linkers\nThe importance of this bug must not be overlooked: it won't cause\nprograms to crash in obvious ways.  It creates a security hole,\nand possibly even worse, if you are modifying the library source code\nafter you have installed the package, you will change the behaviour of\nthe installed programs!\n\nSo, if you want to link programs against the library before you install\nit, you must use libtool to do the linking.\n\n@cindex linking against uninstalled libraries\nHere's the old way of linking against an uninstalled library:\n\n@example\nburger$ @kbd{gcc -g -O -o hell.old main.o libhello.a -lm}\nburger$\n@end example\n\nLibtool's way is almost the same@footnote{However, you should avoid using\n@option{-L} or @option{-l} flags to link against an uninstalled libtool\nlibrary.  Just specify the relative path to the @file{.la} file, such as\n@file{../intl/libintl.la}.  This is a design decision to eliminate any\nambiguity when linking against uninstalled shared libraries.}\n(@pxref{Link mode}):\n\n@example\na23$ @kbd{libtool --mode=link gcc -g -O -o hell main.o libhello.la}\ngcc -g -O -o hell main.o  ./@value{objdir}/libhello.a -lm\na23$\n@end example\n\nThat looks too simple to be true.  All libtool did was transform\n@file{libhello.la} to @file{./@value{objdir}/libhello.a}, but remember\nthat @samp{a23} has no shared libraries.  Notice that Libtool also\nremembered that @file{libhello.la} depends on @option{-lm}, so even\nthough we didn't specify @option{-lm} on the libtool command\nline@footnote{\n@c\nAnd why should we? @file{main.o} doesn't directly depend on @option{-lm}\nafter all.\n@c\n} Libtool has added it to the @command{gcc} link line for us.\n\nOn @samp{burger} Libtool links against the uninstalled shared library:\n\n@example\nburger$ @kbd{libtool --mode=link gcc -g -O -o hell main.o libhello.la}\ngcc -g -O -o @value{objdir}/hell main.o -L./@value{objdir} -R/usr/local/lib -lhello -lm\ncreating hell\nburger$\n@end example\n\n@cindex linking with installed libtool libraries\nNow assume @file{libhello.la} had already been installed, and you want\nto link a new program with it.  You could figure out where it lives by\nyourself, then run:\n\n@example\nburger$ @kbd{gcc -g -O -o test test.o -L/usr/local/lib -lhello -lm}\n@end example\n\nHowever, unless @file{/usr/local/lib} is in the standard library search\npath, you won't be able to run @code{test}.  However, if you use libtool\nto link the already-installed libtool library, it will do The Right\nThing (TM) for you:\n\n@example\nburger$ @kbd{libtool --mode=link gcc -g -O -o test test.o \\\n                /usr/local/lib/libhello.la}\ngcc -g -O -o @value{objdir}/test test.o -Wl,--rpath \\\n        -Wl,/usr/local/lib /usr/local/lib/libhello.a -lm\ncreating test\nburger$\n@end example\n\nNote that libtool added the necessary run-time path flag, as well as\n@option{-lm}, the library libhello.la depended upon.  Nice, huh?\n\n@cindex wrapper scripts for programs\n@cindex program wrapper scripts\nNotice that the executable, @code{hell}, was actually created in the\n@file{@value{objdir}} subdirectory.  Then, a wrapper script (or, on\ncertain platforms, a wrapper executable @pxref{Wrapper executables}) was\ncreated in the current directory.\n\nSince libtool created a wrapper script, you should use libtool to\ninstall it and debug it too.  However, since the program does not depend\non any uninstalled libtool library, it is probably usable even without\nthe wrapper script.\n\nOn NetBSD 1.2, libtool encodes the installation directory of\n@file{libhello}, by using the @samp{-R/usr/local/lib} compiler flag.\nThen, the wrapper script guarantees that the executable finds the\ncorrect shared library (the one in @file{./@value{objdir}}) until it is\nproperly installed.\n\nLet's compare the two different programs:\n\n@example\nburger$ @kbd{time ./hell.old}\nWelcome to GNU Hell!\n** This is not GNU Hello.  There is no built-in mail reader. **\n        0.21 real         0.02 user         0.08 sys\nburger$ @kbd{time ./hell}\nWelcome to GNU Hell!\n** This is not GNU Hello.  There is no built-in mail reader. **\n        0.63 real         0.09 user         0.59 sys\nburger$\n@end example\n\nThe wrapper script takes significantly longer to execute, but at least\nthe results are correct, even though the shared library hasn't been\ninstalled yet.\n\nSo, what about all the space savings that shared libraries are supposed\nto yield?\n\n@example\nburger$ @kbd{ls -l hell.old libhello.a}\n-rwxr-xr-x  1 gord  gord  15481 Nov 14 12:11 hell.old\n-rw-r--r--  1 gord  gord   4274 Nov 13 18:02 libhello.a\nburger$ @kbd{ls -l @value{objdir}/hell @value{objdir}/libhello.*}\n-rwxr-xr-x  1 gord  gord  11647 Nov 14 12:10 @value{objdir}/hell\n-rw-r--r--  1 gord  gord   4274 Nov 13 18:44 @value{objdir}/libhello.a\n-rwxr-xr-x  1 gord  gord  12205 Nov 13 18:44 @value{objdir}/libhello.so.0.0\nburger$\n@end example\n\nWell, that sucks.  Maybe I should just scrap this project and take up\nbasket weaving.\n\nActually, it just proves an important point: shared libraries incur\noverhead because of their (relative) complexity.  In this situation, the\nprice of being dynamic is eight kilobytes, and the payoff is about four\nkilobytes.  So, having a shared @file{libhello} won't be an advantage\nuntil we link it against at least a few more programs.\n\n@menu\n* Wrapper executables::         Wrapper executables for some platforms.\n@end menu\n\n@node Wrapper executables\n@subsection Wrapper executables for uninstalled programs\n@cindex wrapper executables for uninstalled programs\n@cindex program wrapper executables\n\nSome platforms, notably those hosted on Windows such as Cygwin\nand MinGW, use a wrapper executable rather than a wrapper script\nto ensure proper operation of uninstalled programs linked by libtool\nagainst uninstalled shared libraries. The wrapper executable thus\nperforms the same function as the wrapper script used on other\nplatforms, but allows to satisfy the @command{make} rules for the\nprogram, whose name ends in @code{$(EXEEXT)}. The actual program\nexecutable is created below @value{objdir}, and its name will end\nin @code{$(EXEEXT)} and may or may not contain an @code{lt-} prefix.\nThis wrapper executable sets various environment values so that the\nprogram executable may locate its (uninstalled) shared libraries,\nand then launches the program executable.\n\nThe wrapper executable provides a debug mode, enabled by passing the\ncommand-line option @code{--lt-debug} (see below). When executing in\ndebug mode, diagnostic information will be printed to @code{stderr}\nbefore the program executable is launched.\n\nFinally, the wrapper executable supports a number of command line\noptions that may be useful when debugging the operation of the wrapper\nsystem. All of these options begin with @code{--lt-}, and if present\nthey and their arguments will be removed from the argument list passed\non to the program executable.  Therefore, the program executable may not\nemploy command line options that begin with @code{--lt-}. (In fact, the\nwrapper executable will detect any command line options that begin with\n@code{--lt-} and abort with an error message if the option is not\nrecognized). If this presents a problem, please contact the Libtool\nteam at @value{BUGADDR}.\n\nThese command line options include:\n\n@table @option\n@item --lt-dump-script\nCauses the wrapper to print a copy of the wrapper @emph{script}\nto @code{stdout}, and exit.\n\n@item --lt-debug\nCauses the wrapper to print diagnostic information to @code{stdout},\nbefore launching the program executable.\n\n@end table\n\nFor consistency, both the wrapper @emph{script} and the wrapper\n@emph{executable} support these options.\n\n@node Debugging executables\n@section Debugging executables\n\nIf @file{hell} was a complicated program, you would certainly want to\ntest and debug it before installing it on your system.  In the above\nsection, you saw how the libtool wrapper script makes it possible to run\nthe program directly, but unfortunately, this mechanism interferes with\nthe debugger:\n\n@example\nburger$ @kbd{gdb hell}\nGDB is free software and you are welcome to distribute copies of it\n under certain conditions; type \"show copying\" to see the conditions.\nThere is no warranty for GDB; type \"show warranty\" for details.\nGDB 4.16 (i386-unknown-netbsd), (C) 1996 Free Software Foundation, Inc.\n\n\"hell\": not in executable format: File format not recognized\n\n(gdb) @kbd{quit}\nburger$\n@end example\n\nSad.  It doesn't work because GDB doesn't know where the executable\nlives.  So, let's try again, by invoking GDB directly on the executable:\n\n@example\nburger$ @kbd{gdb @value{objdir}/hell}\nGNU gdb 5.3 (i386-unknown-netbsd)\nCopyright 2002 Free Software Foundation, Inc.\nGDB is free software, covered by the GNU General Public License,\nand you are welcome to change it and/or distribute copies of it\nunder certain conditions.  Type \"show copying\" to see the conditions.\nThere is no warranty for GDB.  Type \"show warranty\" for details.\n(gdb) @kbd{break main}\nBreakpoint 1 at 0x8048547: file main.c, line 29.\n(gdb) @kbd{run}\nStarting program: /home/src/libtool/demo/.libs/hell\n/home/src/libtool/demo/.libs/hell: can't load library 'libhello.so.0'\n\nProgram exited with code 020.\n(gdb) @kbd{quit}\nburger$\n@end example\n\nArgh.  Now GDB complains because it cannot find the shared library that\n@file{hell} is linked against.  So, we must use libtool to\nproperly set the library path and run the debugger.  Fortunately, we can\nforget all about the @file{@value{objdir}} directory, and just run it on\nthe executable wrapper (@pxref{Execute mode}):\n\n@example\nburger$ @kbd{libtool --mode=execute gdb hell}\nGNU gdb 5.3 (i386-unknown-netbsd)\nCopyright 2002 Free Software Foundation, Inc.\nGDB is free software, covered by the GNU General Public License,\nand you are welcome to change it and/or distribute copies of it\nunder certain conditions.  Type \"show copying\" to see the conditions.\nThere is no warranty for GDB.  Type \"show warranty\" for details.\n(gdb) @kbd{break main}\nBreakpoint 1 at 0x8048547: file main.c, line 29.\n(gdb) @kbd{run}\nStarting program: /home/src/libtool/demo/.libs/hell\n\nBreakpoint 1, main (argc=1, argv=0xbffffc40) at main.c:29\n29        printf (\"Welcome to GNU Hell!\\n\");\n(gdb) @kbd{quit}\nThe program is running.  Quit anyway (and kill it)? (y or n) @kbd{y}\nburger$\n@end example\n\n@node Installing libraries\n@section Installing libraries\n\n@pindex strip\nInstalling libraries on a non-libtool system is quite\nstraightforward@dots{} just copy them into place:@footnote{Don't\nstrip static libraries though, or they will be unusable.}\n\n@pindex su\n@example\nburger$ @kbd{su}\nPassword: @kbd{********}\nburger# @kbd{cp libhello.a /usr/local/lib/libhello.a}\nburger#\n@end example\n\nOops, don't forget the @command{ranlib} command:\n\n@example\nburger# @kbd{ranlib /usr/local/lib/libhello.a}\nburger#\n@end example\n\n@pindex install\nLibtool installation is quite simple, as well.  Just use the\n@command{install} or @command{cp} command that you normally would\n(@pxref{Install mode}):\n\n@example\na23# @kbd{libtool --mode=install cp libhello.la /usr/local/lib/libhello.la}\ncp libhello.la /usr/local/lib/libhello.la\ncp @value{objdir}/libhello.a /usr/local/lib/libhello.a\nranlib /usr/local/lib/libhello.a\na23#\n@end example\n\nNote that the libtool library @file{libhello.la} is also installed, to\nhelp libtool with uninstallation (@pxref{Uninstall mode}) and linking\n(@pxref{Linking executables}) and to help programs with dlopening\n(@pxref{Dlopened modules}).\n\nHere is the shared library example:\n\n@example\nburger# @kbd{libtool --mode=install install -c libhello.la \\\n                /usr/local/lib/libhello.la}\ninstall -c @value{objdir}/libhello.so.0.0 /usr/local/lib/libhello.so.0.0\ninstall -c libhello.la /usr/local/lib/libhello.la\ninstall -c @value{objdir}/libhello.a /usr/local/lib/libhello.a\nranlib /usr/local/lib/libhello.a\nburger#\n@end example\n\n@cindex stripping libraries\n@cindex libraries, stripping\nIt is safe to specify the @option{-s} (strip symbols) flag if you use a\nBSD-compatible install program when installing libraries.\nLibtool will either ignore the @option{-s} flag, or will run a program\nthat will strip only debugging and compiler symbols from the library.\n\nOnce the libraries have been put in place, there may be some additional\nconfiguration that you need to do before using them.  First, you must\nmake sure that where the library is installed actually agrees with the\n@option{-rpath} flag you used to build it.\n\n@cindex postinstallation\n@cindex installation, finishing\n@cindex libraries, finishing installation\nThen, running @samp{libtool -n finish @var{libdir}} can give you\nfurther hints on what to do (@pxref{Finish mode}):\n\n@example\nburger# @kbd{libtool -n finish /usr/local/lib}\nPATH=\"$PATH:/sbin\" ldconfig -m /usr/local/lib\n-----------------------------------------------------------------\nLibraries have been installed in:\n   /usr/local/lib\n\nTo link against installed libraries in a given directory, LIBDIR,\nyou must use the '-LLIBDIR' flag during linking.\n\n You will also need to do one of the following:\n   - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable\n     during execution\n   - add LIBDIR to the 'LD_RUN_PATH' environment variable\n     during linking\n   - use the '-RLIBDIR' linker flag\n\nSee any operating system documentation about shared libraries for\nmore information, such as the ld and ld.so manual pages.\n-----------------------------------------------------------------\nburger#\n@end example\n\nAfter you have completed these steps, you can go on to begin using the\ninstalled libraries.  You may also install any executables that depend\non libraries you created.\n\n@node Installing executables\n@section Installing executables\n\nIf you used libtool to link any executables against uninstalled libtool\nlibraries (@pxref{Linking executables}), you need to use libtool to\ninstall the executables after the libraries have been installed\n(@pxref{Installing libraries}).\n\nSo, for our Ultrix example, we would run:\n\n@example\na23# libtool --mode=install install -c hell /usr/local/bin/hell\ninstall -c hell /usr/local/bin/hell\na23#\n@end example\n\nOn shared library systems that require wrapper scripts, libtool just\nignores the wrapper script and installs the correct binary:\n\n@example\nburger# libtool --mode=install install -c hell /usr/local/bin/hell\ninstall -c @value{objdir}/hell /usr/local/bin/hell\nburger#\n@end example\n\n\n@node Static libraries\n@section Linking static libraries\n\n@cindex static linking\n@cindex convenience libraries\nWhy return to @command{ar} and @command{ranlib} silliness when you've had a\ntaste of libtool?  Well, sometimes it is desirable to create a static\narchive that can never be shared.  The most frequent case is when you\nhave a set of object files that you use to build several different\nlibraries.  You can create a ``convenience library'' out of those\nobjects, and link against that with the other libraries, instead of\nlisting all the object files every time.\n\nIf you just want to link this convenience library into programs, then\nyou could just ignore libtool entirely, and use the old @command{ar} and\n@command{ranlib} commands (or the corresponding GNU Automake\n@samp{_LIBRARIES} rules).  You can even install a convenience library\nusing GNU Libtool, though you probably don't want to and hence GNU\nAutomake doesn't allow you to do so.\n\n@example\nburger$ @kbd{libtool --mode=install ./install-sh -c libhello.a \\\n                /local/lib/libhello.a}\n./install-sh -c libhello.a /local/lib/libhello.a\nranlib /local/lib/libhello.a\nburger$\n@end example\n\nUsing libtool for static library installation protects your library from\nbeing accidentally stripped (if the installer used the @option{-s} flag),\nas well as automatically running the correct @command{ranlib} command.\n\nBut libtool libraries are more than just collections of object files:\nthey can also carry library dependency information, which old archives\ndo not.  If you want to create a libtool static convenience library, you\ncan omit the @option{-rpath} flag and use @option{-static} to indicate that\nyou're only interested in a static library.  When you link a program\nwith such a library, libtool will actually link all object files and\ndependency libraries into the program.\n\nIf you omit both @option{-rpath} and @option{-static}, libtool will create a\nconvenience library that can be used to create other libtool\nlibraries, even shared ones.  Just like in the static case, the library\nbehaves as an alias to a set of object files and dependency libraries,\nbut in this case the object files are suitable for inclusion in shared\nlibraries.  But be careful not to link a single convenience library,\ndirectly or indirectly, into a single program or library, otherwise you\nmay get errors about symbol redefinitions.\n\nThe key is remembering that a convenience library contains PIC\nobjects, and can be linked where a list of PIC objects makes sense;\ni.e.@: into a shared library.  A static convenience library contains\nnon-PIC objects, so can be linked into an old static library, or\na program.\n\nWhen GNU Automake is used, you should use @code{noinst_LTLIBRARIES}\ninstead of @code{lib_LTLIBRARIES} for convenience libraries, so that\nthe @option{-rpath} option is not passed when they are linked.\n\nAs a rule of thumb, link a libtool convenience library into at most one\nlibtool library, and never into a program, and link libtool static\nconvenience libraries only into programs, and only if you need to carry\nlibrary dependency information to the user of the static convenience\nlibrary.\n\n@cindex standalone binaries\nAnother common situation where static linking is desirable is in\ncreating a standalone binary.  Use libtool to do the linking and add the\n@option{-all-static} flag.\n\n@node Invoking libtool\n@chapter Invoking @command{libtool}\n@pindex libtool\n@cindex libtool command options\n@cindex options, libtool command\n@cindex command options, libtool\n\nThe @command{libtool} program has the following synopsis:\n\n@example\nlibtool [@var{option}]@dots{} [@var{mode-arg}]@dots{}\n@end example\n\n@noindent\nand accepts the following options:\n\n@table @option\n@item --config\nDisplay libtool configuration variables and exit.\n\n@item --debug\nDump a trace of shell script execution to standard output.  This\nproduces a lot of output, so you may wish to pipe it to @command{less} (or\n@command{more}) or redirect to a file.\n\n@item -n\n@itemx --dry-run\nDon't create, modify, or delete any files, just show what commands would\nbe executed by libtool.\n\n@item --features\nDisplay basic configuration options.  This provides a way for packages\nto determine whether shared or static libraries will be built.\n\n@item --finish\nSame as @option{--mode=finish}.\n\n@item -h\nDisplay short help message.\n\n@item --help\nDisplay a help message and exit.  If @option{--mode=@var{mode}} is\nspecified, then detailed help for @var{mode} is displayed.\n\n@item --help-all\nDisplay help for the general options as well as detailed help for each\noperation mode, and exit.\n\n@item --mode=@var{mode}\nUse @var{mode} as the operation mode.  When using libtool from the\ncommand line, you can give just @var{mode} (or a unique abbreviation\nof it) as the first argument as a shorthand for the full\n@option{--mode=@var{mode}}.  For example, the following are equivalent:\n\n@example\n$ @kbd{libtool --mode=execute --dry-run gdb prog.exe}\n$ @kbd{libtool        execute --dry-run gdb prog.exe}\n$ @kbd{libtool        exe     --dry-run gdb prog.exe}\n$ @kbd{libtool        e       --dry-run gdb prog.exe}\n@end example\n\n@noindent\n@var{mode} must be set to one of the following:\n\n@table @option\n@item compile\nCompile a source file into a libtool object.\n\n@item execute\nAutomatically set the library path so that another program can use\nuninstalled libtool-generated programs or libraries.\n\n@item link\nCreate a library or an executable.\n\n@item install\nInstall libraries or executables.\n\n@item finish\nComplete the installation of libtool libraries on the system.\n\n@item uninstall\nDelete installed libraries or executables.\n\n@item clean\nDelete uninstalled libraries or executables.\n@end table\n\n@item --tag=@var{tag}\nUse configuration variables from tag @var{tag} (@pxref{Tags}).\n\n@item --preserve-dup-deps\nDo not remove duplicate dependencies in libraries.  When building packages\nwith static libraries, the libraries may depend circularly on each other\n(shared libs can too, but for those it doesn't matter), so there are\nsituations, where -la -lb -la is required, and the second -la may not be\nstripped or the link will fail.  In cases where these duplications are\nrequired, this option will preserve them, only stripping the libraries\nthat libtool knows it can safely.\n\n@item --quiet\n@itemx --silent\nDo not print out any progress or informational messages.\n\n@item -v\n@itemx --verbose\nPrint out progress and informational messages (enabled by default),\nas well as additional messages not ordinary seen by default.\n\n@item --no-quiet\n@itemx --no-silent\nPrint out the progress and informational messages that are seen\nby default. This option has no effect on whether the additional\nmessages seen in @option{--verbose} mode are shown.\n\n@item --no-verbose\nDo not print out any additional informational messages beyond\nthose ordinarily seen by default. This option has no effect\non whether the ordinary progress and informational messages\nenabled by @option{--no-quiet} are shown.\n\nThus, there are now three different message levels (not counting\n@option{--debug}), depending on whether the normal messages and/or\nthe additional verbose messages are displayed.  Note that there is\nno mechanism to display verbose messages, without also displaying\nnormal messages.\n\n@table @strong\n@item default\nNormal messages are displayed, verbose messages are not displayed.\nIn addition to being the default mode, it can be forcibly achieved\nby using both option @option{--no-verbose} and either option\n@option{--no-silent} or option @option{--no-quiet}.\n\n@item silent\nNeither normal messages nor verbose messages are displayed. This\nmode can be achieved using either option @option{--silent} or\noption @option{--quiet}.\n\n@item verbose\nBoth normal messages and verbose messages are displayed. This mode\ncan be achieved using either option @option{-v} or option\n@option{--verbose}.\n@end table\n\n@item --version\nPrint libtool version information and exit.\n@end table\n\nThe current @command{libtool} implementation is done with a shell script\nthat needs to be invoked by the shell that @command{configure} chose for\nconfiguring @command{libtool} (@pxref{config.status Invocation, , The\nAutoconf Manual, autoconf, The Autoconf Manual}).  This shell is set in\nthe she-bang (@samp{#!}) line of the @command{libtool} script.  Using a\ndifferent shell may cause undefined behavior.\n\nThe @var{mode-args} are a variable number of arguments, depending on the\nselected operation mode.  In general, each @var{mode-arg} is interpreted\nby programs libtool invokes, rather than libtool itself.\n\n@menu\n* Compile mode::                Creating library object files.\n* Link mode::                   Generating executables and libraries.\n* Execute mode::                Debugging libtool-generated programs.\n* Install mode::                Making libraries and executables public.\n* Finish mode::                 Completing a library installation.\n* Uninstall mode::              Removing installed executables and libraries.\n* Clean mode::                  Removing uninstalled executables and libraries.\n@end menu\n\n@node Compile mode\n@section Compile mode\n@cindex mode, compile\n@cindex compile mode\n\nFor @dfn{compile} mode, @var{mode-args} is a compiler command to be used\nin creating a ``standard'' object file.  These arguments should begin with\nthe name of the C compiler, and contain the @option{-c} compiler flag so\nthat only an object file is created.\n\nLibtool determines the name of the output file by removing the directory\ncomponent from the source file name, then substituting the source code\nsuffix (e.g.@: @samp{.c} for C source code) with the library object suffix,\n@samp{.lo}.\n\nIf shared libraries are being built, any necessary PIC generation flags\nare substituted into the compilation command.\n\nThe following components of @var{mode-args} are treated specially:\n\n@table @option\n@item -o\nNote that the @option{-o} option is now fully supported.  It is emulated\non the platforms that don't support it (by locking and moving the\nobjects), so it is really easy to use libtool, just with minor\nmodifications to your Makefiles.  Typing for example\n@example\nlibtool --mode=compile gcc -c foo/x.c -o foo/x.lo\n@end example\nwill do what you expect.\n\nNote, however, that, if the compiler does not support @option{-c} and\n@option{-o}, it is impossible to compile @file{foo/x.c} without\noverwriting an existing @file{./x.o}.  Therefore, if you do have a\nsource file @file{./x.c}, make sure you introduce dependencies in your\n@file{Makefile} to make sure @file{./x.o} (or @file{./x.lo}) is\nre-created after any sub-directory's @file{x.lo}:\n\n@example\nx.o x.lo: foo/x.lo bar/x.lo\n@end example\n\n@noindent\nThis will also ensure that make won't try to use a temporarily corrupted\n@file{x.o} to create a program or library.  It may cause needless\nrecompilation on platforms that support @option{-c} and @option{-o}\ntogether, but it's the only way to make it safe for those that don't.\n\n@item -no-suppress\nIf both PIC and non-PIC objects are being built, libtool will normally\nsuppress the compiler output for the PIC object compilation to save\nshowing very similar, if not identical duplicate output for each\nobject.  If the @option{-no-suppress} option is given in compile mode,\nlibtool will show the compiler output for both objects.\n\n@item -prefer-pic\nLibtool will try to build only PIC objects.\n\n@item -prefer-non-pic\nLibtool will try to build only non-PIC objects.\n\n@item -shared\nEven if Libtool was configured with @option{--enable-static}, the object\nfile Libtool builds will not be suitable for static linking.  Libtool\nwill signal an error if it was configured with @option{--disable-shared},\nor if the host does not support shared libraries.\n\n@item -static\nEven if libtool was configured with @option{--disable-static}, the\nobject file Libtool builds @strong{will} be suitable for static\nlinking.\n\n@item -Wc,@var{flag}\n@itemx -Xcompiler @var{flag}\nPass a flag directly to the compiler.  With @code{-Wc,}, multiple flags\nmay be separated by commas, whereas @code{-Xcompiler } passes through\ncommas unchanged.\n@end table\n\n@node Link mode\n@section Link mode\n@cindex link mode\n@cindex mode, link\n\n@dfn{Link} mode links together object files (including library\nobjects) to form another library or to create an executable program.\n\n@var{mode-args} consist of a command using the C compiler to create an\noutput file (with the @option{-o} flag) from several object files.\n\nThe following components of @var{mode-args} are treated specially:\n\n@table @option\n@cindex undefined symbols, allowing\n@cindex unresolved symbols, allowing\n@item -all-static\nIf @var{output-file} is a program, then do not link it against any\nshared libraries at all.  If @var{output-file} is a library, then only\ncreate a static library.  In general, this flag cannot be used together\nwith @samp{disable-static} (@pxref{LT_INIT}).\n\n@item -avoid-version\nTries to avoid versioning (@pxref{Versioning}) for libraries and modules,\ni.e.@: no version information is stored and no symbolic links are created.\nIf the platform requires versioning, this option has no effect.\n\n@item -bindir\nPass the absolute name of the directory for installing executable\nprograms (@pxref{Directory Variables, , Directory Variables, standards,\nThe GNU Coding Standards}).  @command{libtool} may use this value to\ninstall shared libraries there on systems that do not provide for any\nlibrary hardcoding and use the directory of a program and the @env{PATH}\nvariable as library search path.  This is typically used for DLLs on\nWindows or other systems using the PE (Portable Executable) format.\nOn other systems, @option{-bindir} is ignored.  The default value used\nis @file{@var{libdir}/../bin} for libraries installed to\n@file{@var{libdir}}.  You should not use @option{-bindir} for modules.\n\n@item -dlopen @var{file}\nSame as @option{-dlpreopen @var{file}}, if native dlopening is not\nsupported on the host platform (@pxref{Dlopened modules}) or if\nthe program is linked with @option{-static},\n@option{-static-libtool-libs}, or @option{-all-static}.  Otherwise, no\neffect.  If @var{file} is @code{self} Libtool will make sure that the\nprogram can @code{dlopen} itself, either by enabling\n@option{-export-dynamic} or by falling back to @option{-dlpreopen self}.\n\n@item -dlpreopen @var{file}\nLink @var{file} into the output program, and add its symbols to the\nlist of preloaded symbols (@pxref{Dlpreopening}).  If @var{file} is\n@code{self}, the symbols of the program itself will be added to\npreloaded symbol lists.  If @var{file} is @code{force} Libtool will\nmake sure that a preloaded symbol list is always @emph{defined},\nregardless of whether it's empty or not.\n\n@item -export-dynamic\nAllow symbols from @var{output-file} to be resolved with @code{dlsym}\n(@pxref{Dlopened modules}).\n\n@item -export-symbols @var{symfile}\nTells the linker to export only the symbols listed in @var{symfile}.\nThe symbol file should end in @file{.sym} and must contain the name of one\nsymbol per line.  This option has no effect on some platforms.\nBy default all symbols are exported.\n\n@item -export-symbols-regex @var{regex}\nSame as @option{-export-symbols}, except that only symbols matching\nthe regular expression @var{regex} are exported.\nBy default all symbols are exported.\n\n@item -L@var{libdir}\nSearch @var{libdir} for required libraries that have already been\ninstalled.\n\n@item -l@var{name}\n@var{output-file} requires the installed library @file{lib@var{name}}.\nThis option is required even when @var{output-file} is not an\nexecutable.\n\n@item -module\nCreates a library that can be dlopened (@pxref{Dlopened modules}).\nThis option doesn't work for programs.\nModule names don't need to be prefixed with @samp{lib}.\nIn order to prevent name clashes, however, @file{lib@var{name}} and @file{@var{name}}\nmust not be used at the same time in your package.\n\n@item -no-fast-install\nDisable fast-install mode for the executable @var{output-file}.  Useful\nif the program won't be necessarily installed.\n\n@item -no-install\nLink an executable @var{output-file} that can't be installed and\ntherefore doesn't need a wrapper script on systems that allow hardcoding\nof library paths.  Useful if the program is only used in the build tree,\ne.g., for testing or generating other files.\n\n@item -no-undefined\nDeclare that @var{output-file} does not depend on any libraries other\nthan the ones listed on the command line, i.e., after linking, it will\nnot have unresolved symbols.  Some platforms require all symbols in\nshared libraries to be resolved at library creation (@pxref{Inter-library\ndependencies}), and using this parameter allows @command{libtool} to\nassume that this will not happen.\n\n@item -o @var{output-file}\nCreate @var{output-file} from the specified objects and libraries.\n\n@item -objectlist @var{file}\nUse a list of object files found in @var{file} to specify objects.\n\n@item -os2dllname @var{name}\nUse this to change the DLL base name on OS/2 to @var{name}, to keep\nwithin the 8 character base name limit on this system.\n\n@item -precious-files-regex @var{regex}\nPrevents removal of files from the temporary output directory whose\nnames match this regular expression.  You might specify @samp{\\.bbg?$}\nto keep those files created with @code{gcc -ftest-coverage} for example.\n\n@item -release @var{release}\nSpecify that the library was generated by release @var{release} of your\npackage, so that users can easily tell what versions are newer than\nothers.  Be warned that no two releases of your package will be binary\ncompatible if you use this flag.  If you want binary compatibility, use\nthe @option{-version-info} flag instead (@pxref{Versioning}).\n\n@item -rpath @var{libdir}\nIf @var{output-file} is a library, it will eventually be installed in\n@var{libdir}.  If @var{output-file} is a program, add @var{libdir} to\nthe run-time path of the program.  On platforms that don't support\nhardcoding library paths into executables and only search PATH for\nshared libraries, such as when @var{output-file} is a Windows (or\nother PE platform) DLL, the @file{.la} control file will be installed in\n@var{libdir}, but see @option{-bindir} above for the eventual destination\nof the @file{.dll} or other library file itself.\n\n@item -R @var{libdir}\nIf @var{output-file} is a program, add @var{libdir} to its run-time\npath.  If @var{output-file} is a library, add @option{-R@var{libdir}} to its\n@var{dependency_libs}, so that, whenever the library is linked into a\nprogram, @var{libdir} will be added to its run-time path.\n\n@item -shared\nIf @var{output-file} is a program, then link it against any\nuninstalled shared libtool libraries (this is the default behavior).\nIf @var{output-file} is a library, then only create a shared library.\nIn the later case, libtool will signal an error if it was configured\nwith @option{--disable-shared}, or if the host does not support shared\nlibraries.\n\n@item -shrext @var{suffix}\nIf @var{output-file} is a libtool library, replace the system's standard\nfile name extension for shared libraries with @var{suffix} (most systems\nuse @file{.so} here).  This option is helpful in certain cases where an\napplication requires that shared libraries (typically modules) have an\nextension other than the default one.  Please note you must supply the\nfull file name extension including any leading dot.\n\n@item -static\nIf @var{output-file} is a program, then do not link it against any\nuninstalled shared libtool libraries.  If @var{output-file} is a\nlibrary, then only create a static library.\n\n@item -static-libtool-libs\nIf @var{output-file} is a program, then do not link it against any\nshared libtool libraries.  If @var{output-file} is a library, then only\ncreate a static library.\n\n@item -version-info @var{current}[:@var{revision}[:@var{age}]]\nIf @var{output-file} is a libtool library, use interface version\ninformation @var{current}, @var{revision}, and @var{age} to build it\n(@pxref{Versioning}).  Do @strong{not} use this flag to specify package\nrelease information, rather see the @option{-release} flag.\n\n@item -version-number @var{major}[:@var{minor}[:@var{revision}]]\nIf @var{output-file} is a libtool library, compute interface version\ninformation so that the resulting library uses the specified major, minor and\nrevision numbers.  This is designed to permit libtool to be used with\nexisting projects where identical version numbers are already used across\noperating systems.  New projects should use the @option{-version-info} flag\ninstead.\n\n@item -weak @var{libname}\nif @var{output-file} is a libtool library, declare that it provides a\nweak @var{libname} interface.  This is a hint to libtool that there is\nno need to append @var{libname} to the list of dependency libraries of\n@var{output-file}, because linking against @var{output-file} already\nsupplies the same interface (@pxref{Linking with dlopened modules}).\n\n@item -Wc,@var{flag}\n@itemx -Xcompiler @var{flag}\nPass a linker-specific flag directly to the compiler.  With @code{-Wc,},\nmultiple flags may be separated by commas, whereas @code{-Xcompiler }\npasses through commas unchanged.\n\n@item -Wl,@var{flag}\n@itemx -Xlinker @var{flag}\nPass a linker-specific flag directly to the linker.\n\n@item -XCClinker @var{flag}\nPass a link-specific flag to the compiler driver (@code{CC}) during linking.\n@end table\n\nIf the @var{output-file} ends in @file{.la}, then a libtool library is\ncreated, which must be built only from library objects (@file{.lo} files).\nThe @option{-rpath} option is required.  In the current implementation,\nlibtool libraries may not depend on other uninstalled libtool libraries\n(@pxref{Inter-library dependencies}).\n\nIf the @var{output-file} ends in @file{.a}, then a standard library is\ncreated using @code{ar} and possibly @code{ranlib}.\n\n@cindex partial linking\n@cindex linking, partial\nIf @var{output-file} ends in @file{.o} or @file{.lo}, then a reloadable object\nfile is created from the input files (generally using @samp{ld -r}).\nThis method is often called @dfn{partial linking}.\n\nOtherwise, an executable program is created.\n\n@node Execute mode\n@section Execute mode\n@cindex execute mode\n@cindex mode, execute\n\nFor @dfn{execute} mode, the library path is automatically set, then a\nprogram is executed.\n\nThe first of the @var{mode-args} is treated as a program name, with the\nrest as arguments to that program.\n\nThe following components of @var{mode-args} are treated specially:\n\n@table @option\n@item -dlopen @var{file}\nAdd the directory containing @var{file} to the library path.\n@end table\n\nThis mode sets the library path environment variable according to any\n@option{-dlopen} flags.\n\nIf any of the @var{args} are libtool executable wrappers, then they are\ntranslated into the name of their corresponding uninstalled binary, and\nany of their required library directories are added to the library path.\n\n@node Install mode\n@section Install mode\n@cindex install mode\n@cindex mode, install\n\nIn @dfn{install} mode, libtool interprets most of the elements of\n@var{mode-args} as an installation command beginning with\n@command{cp}, or a BSD-compatible @command{install} program.\n\nThe following components of @var{mode-args} are treated specially:\n\n@table @option\n@item -inst-prefix-dir @var{inst-prefix-dir}\nWhen installing into a temporary staging area, rather than the\nfinal @code{prefix}, this argument is used to reflect the\ntemporary path, in much the same way @command{automake} uses\n@env{DESTDIR}.  For instance, if @code{prefix} is @file{/usr/local},\nbut @var{inst-prefix-dir} is @file{/tmp}, then the object will be\ninstalled under @file{/tmp/usr/local/}.  If the installed object\nis a libtool library, then the internal fields of that library\nwill reflect only @code{prefix}, not @var{inst-prefix-dir}:\n\n@example\n# Directory that this library needs to be installed in:\nlibdir='/usr/local/lib'\n@end example\n\nnot\n\n@example\n# Directory that this library needs to be installed in:\nlibdir='/tmp/usr/local/lib'\n@end example\n\n@code{inst-prefix} is also used to ensure that if the installed\nobject must be relinked upon installation, that it is relinked\nagainst the libraries in @var{inst-prefix-dir}/@code{prefix},\nnot @code{prefix}.\n\nIn truth, this option is not really intended for use when calling\nlibtool directly; it is automatically used when @code{libtool --mode=install}\ncalls @code{libtool --mode=relink}.  Libtool does this by\nanalyzing the destination path given in the original\n@code{libtool --mode=install} command and comparing it to the\nexpected installation path established during @code{libtool --mode=link}.\n\nThus, end-users need change nothing, and @command{automake}-style\n@code{make install DESTDIR=/tmp} will Just Work(tm) most of the time.\nFor systems where fast installation cannot be turned on, relinking\nmay be needed.  In this case, a @samp{DESTDIR} install will fail.\n\nCurrently it is not generally possible to install into a temporary\nstaging area that contains needed third-party libraries that are\nnot yet visible at their final location.\n@end table\n\nThe rest of the @var{mode-args} are interpreted as arguments to the\n@command{cp} or @command{install} command.\n\nThe command is run, and any necessary unprivileged post-installation\ncommands are also completed.\n\n@node Finish mode\n@section Finish mode\n@cindex finish mode\n@cindex mode, finish\n\n@dfn{Finish} mode has two functions.  One is to help system administrators\ninstall libtool libraries so that they can be located and linked into\nuser programs.  To invoke this functionality, pass the name of a library\ndirectory as @var{mode-arg}.  Running this command may require superuser\nprivileges, and the @option{--dry-run} option may be useful.\n\nThe second is to facilitate transferring libtool libraries to a native\ncompilation environment after they were built in a cross-compilation\nenvironment.  Cross-compilation environments may rely on recent libtool\nfeatures, and running libtool in finish mode will make it easier to\nwork with older versions of libtool.  This task is performed whenever\nthe @var{mode-arg} is a @file{.la} file.\n\n@node Uninstall mode\n@section Uninstall mode\n@cindex uninstall mode\n@cindex mode, uninstall\n\n@dfn{Uninstall} mode deletes installed libraries, executables and objects.\n\nThe first @var{mode-arg} is the name of the program to use to delete\nfiles (typically @command{/bin/rm}).\n\nThe remaining @var{mode-args} are either flags for the deletion program\n(beginning with a @samp{-}), or the names of files to delete.\n\n@node Clean mode\n@section Clean mode\n@cindex clean mode\n@cindex mode, clean\n\n@dfn{Clean} mode deletes uninstalled libraries, executables, objects\nand libtool's temporary files associated with them.\n\nThe first @var{mode-arg} is the name of the program to use to delete\nfiles (typically @command{/bin/rm}).\n\nThe remaining @var{mode-args} are either flags for the deletion program\n(beginning with a @samp{-}), or the names of files to delete.\n\n@node Integrating libtool\n@chapter Integrating libtool with your package\n\nThis chapter describes how to integrate libtool with your packages so\nthat your users can install hassle-free shared libraries.\n\nThere are several ways that Libtool may be integrated in your\npackage, described in the following sections.  Typically, the Libtool\nmacro files as well as @file{ltmain.sh} are copied into your package\nusing @command{libtoolize} and @command{aclocal} after setting up the\n@file{configure.ac} and toplevel @file{Makefile.am}, then\n@command{autoconf} adds the needed tests to the @file{configure} script.\nThese individual steps are often automated with @command{autoreconf}.\n\nHere is a diagram showing how such a typical Libtool configuration works\nwhen preparing a package for distribution, assuming that @file{m4} has\nbeen chosen as location for additional Autoconf macros, and\n@file{build-aux} as location for auxiliary build tools (@pxref{Input,,\nThe Autoconf Manual, autoconf, The Autoconf Manual}):\n\n@example\n@group\nlibtool.m4 -----.                .--> aclocal.m4 -----.\nltoptions.m4 ---+  .-> aclocal* -+                    +--> autoconf*\nltversion.m4 ---+--+             `--> [copy in m4/] --+       |\nltsugar.m4 -----+  |                    ^             |       \\/\nlt~obsolete.m4 -+  +-> libtoolize* -----'             |    configure\n[ltdl.m4] ------+  |                                  |\n                   `----------------------------------'\n\nltmain.sh -----------> libtoolize* -> [copy in build-aux/]\n@end group\n@end example\n\nDuring configuration, the @file{libtool} script is generated either\nthrough @command{config.status} or @command{config.lt}:\n\n@example\n@group\n             .--> config.status* --.\nconfigure* --+                     +--> libtool\n             `--> [config.lt*] ----'      ^\n                                          |\nltmain.sh --------------------------------'\n@end group\n@end example\n\nAt @command{make} run time, @command{libtool} is then invoked as needed\nas a wrapper around compilers, linkers, install and cleanup programs.\n\nThere are alternatives choices to several parts of the setup; for\nexample, the Libtool macro files can either be copied or symlinked into\nthe package, or copied into @file{aclocal.m4}.  As another example, an\nexternal, pre-configured @command{libtool} script may be used,\nby-passing most of the tests and package-specific setup for Libtool.\n\n@menu\n* Autoconf macros::             Autoconf macros exported by libtool.\n* Makefile rules::              Writing @file{Makefile} rules for libtool.\n* Using Automake::              Automatically supporting libtool.\n* Configuring::                 Configuring libtool for a host system.\n* Distributing::                What files to distribute with your package.\n* Static-only libraries::       Sometimes shared libraries are just a pain.\n@end menu\n\n@node Autoconf macros\n@section Autoconf macros exported by libtool\n\nLibtool uses a number of macros to interrogate the host system when it\nis being built, and you can use some of them yourself too.  Although\nthere are a great many other macros in the libtool installed m4 files,\nthese do not form part of the published interface, and are subject to\nchange between releases.\n\n@noindent\nMacros in the @samp{LT_CMD_} namespace check for various shell\ncommands:\n\n@defmac LT_CMD_MAX_LEN\nFinds the longest command line that can be safely passed to\n@samp{$SHELL} without being truncated, and store in the shell variable\n@samp{$max_cmd_len}.  It is only an approximate value, but command\nlines of this length or shorter are guaranteed not to be truncated.\n@end defmac\n\n@noindent\nMacros in the @samp{LT_FUNC_} namespace check characteristics of\nlibrary functions:\n\n@defmac LT_FUNC_DLSYM_USCORE\n@samp{AC_DEFINE} the preprocessor symbol @samp{DLSYM_USCORE} if we\nhave to add an underscore to symbol-names passed in to @samp{dlsym}.\n@end defmac\n\n@noindent\nMacros in the @samp{LT_LIB_} namespace check characteristics of system\nlibraries:\n\n@defmac LT_LIB_M\nSet @samp{LIBM} to the math library or libraries required on this\nmachine, if any.\n@end defmac\n\n@defmac LT_LIB_DLLOAD\nThis is the macro used by @samp{libltdl} to determine what dlloaders\nto use on this machine, if any.  Several shell variables are set (and\n@samp{AC_SUBST}ed) depending on the dlload interfaces are available on\nthis machine.  @samp{LT_DLLOADERS} contains a list of libtool\nlibraries that can be used, and if necessary also sets\n@samp{LIBADD_DLOPEN} if additional system libraries are required by\nthe @samp{dlopen} loader, and @samp{LIBADD_SHL_LOAD} if additional\nsystem libraries are required by the @samp{shl_load} loader,\nrespectively.  Finally some symbols are set in @file{config.h}\ndepending on the loaders that are found to work: @samp{HAVE_LIBDL},\n@samp{HAVE_SHL_LOAD}, @samp{HAVE_DYLD}, @samp{HAVE_DLD}.\n@end defmac\n\n@noindent\nMacros in the @samp{LT_PATH_} namespace search the system for the full\npath to particular system commands:\n\n@defmac LT_PATH_LD\nAdd a @option{--with-gnu-ld} option to @file{configure}.  Try to find\nthe path to the linker used by @samp{$CC}, and whether it is the\nGNU linker.  The result is stored in the shell variable\n@samp{$LD}, which is @code{AC_SUBST}ed.\n@end defmac\n\n@defmac LT_PATH_NM\nTry to find a BSD-compatible @command{nm} or a MS-compatible\n@command{dumpbin} command on this machine.  The result is stored in the\nshell variable @samp{$NM}, which is @code{AC_SUBST}ed.\n@end defmac\n\n@noindent\nMacros in the @samp{LT_SYS_} namespace probe for system\ncharacteristics:\n\n@defmac LT_SYS_DLOPEN_SELF\nTests whether a program can dlopen itself, and then also whether the\nsame program can still dlopen itself when statically linked.  Results\nare stored in the shell variables @samp{$enable_dlopen_self} and\n@samp{enable_dlopen_self_static} respectively.\n@end defmac\n\n@defmac LT_SYS_DLOPEN_DEPLIBS\nDefine the preprocessor symbol @samp{LTDL_DLOPEN_DEPLIBS} if the\nOS needs help to load dependent libraries for @samp{dlopen} (or\nequivalent).\n@end defmac\n\n@defmac LT_SYS_DLSEARCH_PATH\nDefine the preprocessor symbol @samp{LT_DLSEARCH_PATH} to the system\ndefault library search path.\n@end defmac\n\n@defmac LT_SYS_MODULE_EXT\nDefine the preprocessor symbol @samp{LT_MODULE_EXT} to the extension\nused for runtime loadable modules.  If you use libltdl to open\nmodules, then you can simply use the libtool library extension,\n@file{.la}.\n@end defmac\n\n@defmac LT_SYS_MODULE_PATH\nDefine the preprocessor symbol @samp{LT_MODULE_PATH_VAR} to the name\nof the shell environment variable that determines the run-time module\nsearch path.\n@end defmac\n\n@defmac LT_SYS_SYMBOL_USCORE\nSet the shell variable @samp{sys_symbol_underscore} to @samp{no}\nunless the compiler prefixes global symbols with an underscore.\n@end defmac\n\n\n@node Makefile rules\n@section Writing @file{Makefile} rules for libtool\n@cindex Makefile\n@cindex Makefile.am\n@cindex Makefile.in\n\nLibtool is fully integrated with Automake (@pxref{Top,, Introduction,\nautomake, The Automake Manual}), starting with Automake version 1.2.\n\nIf you want to use libtool in a regular @file{Makefile} (or\n@file{Makefile.in}), you are on your own.  If you're not using\nAutomake, and you don't know how to incorporate libtool into your\npackage you need to do one of the following:\n\n@enumerate 1\n@item\nDownload the latest Automake distribution from your nearest GNU\nmirror, install it, and start using it.\n\n@item\nLearn how to write @file{Makefile} rules by hand.  They're sometimes complex,\nbut if you're clever enough to write rules for compiling your old\nlibraries, then you should be able to figure out new rules for libtool\nlibraries (hint: examine the @file{Makefile.in} in the @file{tests/demo}\nsubdirectory of the libtool distribution@dots{} note especially that it\nwas automatically generated from the @file{Makefile.am} by Automake).\n@end enumerate\n\n@node Using Automake\n@section Using Automake with libtool\n\n@vindex LTLIBRARIES\nLibtool library support is implemented under the @samp{LTLIBRARIES}\nprimary.\n\nHere are some samples from the Automake @file{Makefile.am} in the\nlibtool distribution's @file{demo} subdirectory.\n\nFirst, to link a program against a libtool library, just use the\n@samp{program_LDADD}@footnote{@c\n@c\nSince GNU Automake 1.5, the flags @option{-dlopen}\nor @option{-dlpreopen} (@pxref{Link mode}) can be employed with the\n@samp{program_LDADD} variable.  Unfortunately, older releases didn't\naccept these flags, so if you are stuck with an ancient Automake, we\nrecommend quoting the flag itself, and setting\n@samp{program_DEPENDENCIES} too:\n\n@example\nprogram_LDADD = \"-dlopen\" libfoo.la\nprogram_DEPENDENCIES = libfoo.la\n@end example\n@c\n} variable:\n\n@example\nbin_PROGRAMS = hell hell_static\n\n# Build hell from main.c and libhello.la\nhell_SOURCES = main.c\nhell_LDADD = libhello.la\n\n# Create a statically linked version of hell.\nhell_static_SOURCES = main.c\nhell_static_LDADD = libhello.la\nhell_static_LDFLAGS = -static\n@end example\n\nYou may use the @samp{program_LDFLAGS} variable to stuff in any flags\nyou want to pass to libtool while linking @file{program} (such as\n@option{-static} to avoid linking uninstalled shared libtool libraries).\n\nBuilding a libtool library is almost as trivial@dots{} note the use of\n@samp{libhello_la_LDFLAGS} to pass the @option{-version-info}\n(@pxref{Versioning}) option to libtool:\n\n@example\n# Build a libtool library, libhello.la for installation in libdir.\nlib_LTLIBRARIES = libhello.la\nlibhello_la_SOURCES = hello.c foo.c\nlibhello_la_LDFLAGS = -version-info 3:12:1\n@end example\n\nThe @option{-rpath} option is passed automatically by Automake (except for\nlibraries listed as @code{noinst_LTLIBRARIES}), so you\nshould not specify it.\n\n@xref{A Shared Library, Building a Shared Library, The Automake Manual,\nautomake, The Automake Manual}, for more information.\n\n@node Configuring\n@section Configuring libtool\n@cindex configuring libtool\n\nLibtool requires intimate knowledge of your compiler suite and operating\nsystem to be able to create shared libraries and link against\nthem properly.  When you install the libtool distribution, a\nsystem-specific libtool script is installed into your binary directory.\n\nHowever, when you distribute libtool with your own packages\n(@pxref{Distributing}), you do not always know the compiler suite and\noperating system that are used to compile your package.\n\nFor this reason, libtool must be @dfn{configured} before it can be\nused.  This idea should be familiar to anybody who has used a GNU\n@code{configure} script.  @code{configure} runs a number of tests for\nsystem features, then generates the @file{Makefile}s (and possibly a\n@file{config.h} header file), after which you can run @code{make} and\nbuild the package.\n\nLibtool adds its own tests to your @code{configure} script to\ngenerate a libtool script for the installer's host machine.\n\n@menu\n* LT_INIT::                     Configuring @code{libtool} in @file{configure.ac}.\n* Configure notes::             Platform-specific notes for configuration.\n@end menu\n\n@node LT_INIT\n@subsection The @code{LT_INIT} macro\n\nIf you are using GNU Autoconf (or Automake), you should add a call to\n@code{LT_INIT} to your @file{configure.ac} file.  This macro\nadds many new tests to the @code{configure} script so that the generated\nlibtool script will understand the characteristics of the host.  It's the\nmost important of a number of macros defined by Libtool:\n\n@defmac LT_PREREQ (@var{version})\nEnsure that a recent enough version of Libtool is being used.  If the\nversion of Libtool used for @code{LT_INIT} is earlier than\n@var{version}, print an error message to the standard\nerror output and exit with failure (exit status is 63).  For example:\n\n@example\nLT_PREREQ([@value{VERSION}])\n@end example\n@end defmac\n\n@defmac LT_INIT (@var{options})\n@defmacx AC_PROG_LIBTOOL\n@defmacx AM_PROG_LIBTOOL\nAdd support for the @option{--enable-shared}, @option{--disable-shared},\n@option{--enable-static}, @option{--disable-static}, @option{--with-pic}, and\n@option{--without-pic} @code{configure} flags.@footnote{@code{LT_INIT} requires\nthat you define the @file{Makefile} variable @code{top_builddir} in your\n@file{Makefile.in}.  Automake does this automatically, but Autoconf\nusers should set it to the relative path to the top of your build\ndirectory (@file{../..}, for example).}  @code{AC_PROG_LIBTOOL} and\n@code{AM_PROG_LIBTOOL} are deprecated names for older versions of this macro;\n@code{autoupdate} will upgrade your @file{configure.ac} files.\n\nBy default, this macro turns on shared libraries if they are available,\nand also enables static libraries if they don't conflict with the shared\nlibraries.  You can modify these defaults by passing either\n@code{disable-shared} or @code{disable-static} in the option list to\n@code{LT_INIT}, or using @code{AC_DISABLE_SHARED} or @code{AC_DISABLE_STATIC}.\n\n@example\n# Turn off shared libraries during beta-testing, since they\n# make the build process take too long.\nLT_INIT([disable-shared])\n@end example\n\nThe user may specify modified forms of the configure flags\n@option{--enable-shared} and @option{--enable-static} to choose whether\nshared or static libraries are built based on the name of the package.\nFor example, to have shared @samp{bfd} and @samp{gdb} libraries built,\nbut not shared @samp{libg++}, you can run all three @code{configure}\nscripts as follows:\n\n@example\ntrick$ ./configure --enable-shared=bfd,gdb\n@end example\n\nIn general, specifying @option{--enable-shared=@var{pkgs}} is the same as\nconfiguring with @option{--enable-shared} every package named in the\ncomma-separated @var{pkgs} list, and every other package with\n@option{--disable-shared}.  The @option{--enable-static=@var{pkgs}} flag\nbehaves similarly, but it uses @option{--enable-static} and\n@option{--disable-static}.  The same applies to the\n@option{--enable-fast-install=@var{pkgs}} flag, which uses\n@option{--enable-fast-install} and @option{--disable-fast-install}.\n\nThe package name @samp{default} matches any packages that have not set\ntheir name in the @code{PACKAGE} environment variable.\n\nThe @option{--with-pic} and @option{--without-pic} configure flags can be used\nto specify whether or not @command{libtool} uses PIC objects.  By default,\n@command{libtool} uses PIC objects for shared libraries and non-PIC objects for\nstatic libraries.  The @option{--with-pic} option also accepts a comma-separated\nlist of package names.  Specifying @option{--with-pic=@var{pkgs}} is the same\nas configuring every package in @var{pkgs} with @option{--with-pic} and every\nother package with the default configuration.  The package name @samp{default}\nis treated the same as for @option{--enable-shared} and\n@option{--enable-static}.\n\nThis macro also sets the shell variable @code{LIBTOOL_DEPS}, that you\ncan use to automatically update the libtool script if it becomes\nout-of-date.  In order to do that, add to your @file{configure.ac}:\n\n@example\nLT_INIT\nAC_SUBST([LIBTOOL_DEPS])\n@end example\n\nand, to @file{Makefile.in} or @file{Makefile.am}:\n\n@example\nLIBTOOL_DEPS = @@LIBTOOL_DEPS@@\nlibtool: $(LIBTOOL_DEPS)\n        $(SHELL) ./config.status libtool\n@end example\n\nIf you are using GNU Automake, you can omit the assignment, as Automake\nwill take care of it.  You'll obviously have to create some dependency\non @file{libtool}.\n\nAside from @code{disable-static} and @code{disable-shared}, there are\nother options that you can pass to @code{LT_INIT} to modify its\nbehaviour.  Here is a full list:\n\n@table @samp\n@item dlopen\nEnable checking for dlopen support.  This option should be used if\nthe package makes use of the @option{-dlopen} and @option{-dlpreopen}\nlibtool flags, otherwise libtool will assume that the system does not\nsupport dlopening.\n\n@item win32-dll\nThis option should be used if the package has been ported to build clean\ndlls on win32 platforms.  Usually this means that any library data items\nare exported with @code{__declspec(dllexport)} and imported with\n@code{__declspec(dllimport)}.  If this option is not used, libtool will\nassume that the package libraries are not dll clean and will build only\nstatic libraries on win32 hosts.\n\nProvision must be made to pass @option{-no-undefined} to @code{libtool}\nin link mode from the package @code{Makefile}.  Naturally, if you pass\n@option{-no-undefined}, you must ensure that all the library symbols\n@strong{really are} defined at link time!\n\n@item aix-soname=aix\n@itemx aix-soname=svr4\n@itemx aix-soname=both\nEnable the @option{--with-aix-soname} to @command{configure}, which the\nuser can pass to override the given default.\n\nBy default (and @strong{always} in releases prior to 2.4.4), Libtool always\nbehaves as if @code{aix-soname=aix} is given, with no @command{configure}\noption for the user to override. Specifically, when the @option{-brtl} linker\nflag is seen in @code{LDFLAGS} at build-time, static archives are built from\nstatic objects only, otherwise, traditional AIX shared library archives of\nshared objects using in-archive versioning are built (with the @code{.a} file\nextension!). Similarly, with @option{-brtl} in @code{LDFLAGS}, libtool\nshared archives are built from shared objects, without any filename-based\nversioning; and without @option{-brtl} no shared archives are built at all.\n\nWhen @code{aix-soname=svr4} option is given, or the\n@option{--with-aix-soname=svr4} @command{configure} option is passed, static\narchives are always created from static objects, even without @option{-brtl}\nin @code{LDFLAGS}. Shared archives are made from shared objects, and filename\nbased versioning is enabled.\n\nWhen @code{aix-soname=both} option is given, or the\n@option{--with-aix-soname=svr4} @command{configure} option is passed, static\narchives are built traditionally (as @option{aix-soname=aix}), and both\nkinds of shared archives are built. The @code{.la} pseudo-archive specifies\none or the other depending on whether @option{-brtl} is specified in\n@code{LDFLAGS} when the library is built.\n\n@item disable-fast-install\nChange the default behaviour for @code{LT_INIT} to disable\noptimization for fast installation.  The user may still override this\ndefault, depending on platform support, by specifying\n@option{--enable-fast-install} to @command{configure}.\n\n@item shared\nChange the default behaviour for @code{LT_INIT} to enable\nshared libraries.  This is the default on all systems where\nLibtool knows how to create shared libraries.\nThe user may still override this default by specifying\n@option{--disable-shared} to @command{configure}.\n\n@item disable-shared\nChange the default behaviour for @code{LT_INIT} to disable\nshared libraries.  The user may still override this default by\nspecifying @option{--enable-shared} to @command{configure}.\n\n@item static\nChange the default behaviour for @code{LT_INIT} to enable\nstatic libraries.  This is the default on all systems where\nshared libraries have been disabled for some reason, and on\nmost systems where shared libraries have been enabled.\nIf shared libraries are enabled, the user may still override\nthis default by specifying @option{--disable-static} to\n@command{configure}.\n\n@item disable-static\nChange the default behaviour for @code{LT_INIT} to disable\nstatic libraries.  The user may still override this default by\nspecifying @option{--enable-static} to @command{configure}.\n\n@item pic-only\nChange the default behaviour for @command{libtool} to try to use only\nPIC objects.  The user may still override this default by specifying\n@option{--without-pic} to @command{configure}.\n\n@item no-pic\nChange the default behaviour of @command{libtool} to try to use only\nnon-PIC objects.  The user may still override this default by\nspecifying @option{--with-pic} to @command{configure}.\n\n@end table\n\n@end defmac\n\n@defmac LT_LANG (@var{language})\nEnable @command{libtool} support for the language given if it\nhas not yet already been enabled.  Languages accepted are ``C++'',\n``Fortran 77'', ``Java'', ``Go'', and ``Windows Resource''.\n\nIf Autoconf language support macros such as @code{AC_PROG_CXX} are\nused in your @file{configure.ac}, Libtool language support will automatically\nbe enabled.\n\nConversely using @code{LT_LANG} to enable language support for Libtool\nwill automatically enable Autoconf language support as well.\n\nBoth of the following examples are therefore valid ways of adding C++\nlanguage support to Libtool.\n\n@example\nLT_INIT\nLT_LANG([C++])\n@end example\n\n@example\nLT_INIT\nAC_PROG_CXX\n@end example\n\n@end defmac\n\n@defmac AC_LIBTOOL_DLOPEN\nThis macro is deprecated, the @samp{dlopen} option to @code{LT_INIT} should be\nused instead.\n@end defmac\n\n@defmac AC_LIBTOOL_WIN32_DLL\nThis macro is deprecated, the @samp{win32-dll} option to @code{LT_INIT} should\nbe used instead.\n@end defmac\n\n@defmac AC_DISABLE_FAST_INSTALL\nThis macro is deprecated, the @samp{disable-fast-install} option to @code{LT_INIT}\nshould be used instead.\n@end defmac\n\n@defmac AC_DISABLE_SHARED\n@defmacx AM_DISABLE_SHARED\nChange the default behaviour for @code{LT_INIT} to disable shared libraries.\nThe user may still override this default by specifying @samp{--enable-shared}.\nThe option @samp{disable-shared} to @code{LT_INIT} is a shorthand for this.\n@code{AM_DISABLE_SHARED} is a deprecated alias for @code{AC_DISABLE_SHARED}.\n@end defmac\n\n@defmac AC_ENABLE_SHARED\n@defmacx AM_ENABLE_SHARED\nChange the default behaviour for @code{LT_INIT} to enable shared libraries.\nThis is the default on all systems where Libtool knows how to create\nshared libraries.  The user may still override this default by specifying\n@samp{--disable-shared}.  The option @samp{shared} to @code{LT_INIT} is a\nshorthand for this.\n@code{AM_ENABLE_SHARED} is a deprecated alias for @code{AC_ENABLE_SHARED}.\n@end defmac\n\n@defmac AC_DISABLE_STATIC\n@defmacx AM_DISABLE_STATIC\nChange the default behaviour for @code{LT_INIT} to disable static libraries.\nThe user may still override this default by specifying @samp{--enable-static}.\nThe option @samp{disable-static} to @code{LT_INIT} is a shorthand for this.\n@code{AM_DISABLE_STATIC} is a deprecated alias for @code{AC_DISABLE_STATIC}.\n@end defmac\n\n@defmac AC_ENABLE_STATIC\n@defmacx AM_ENABLE_STATIC\nChange the default behaviour for @code{LT_INIT} to enable static libraries.\nThis is the default on all systems where shared libraries have been disabled\nfor some reason, and on most systems where shared libraries have been enabled.\nIf shared libraries are enabled, the user may still override this default by\nspecifying @samp{--disable-static}.  The option @samp{static} to @code{LT_INIT}\nis a shorthand for this.\n@code{AM_ENABLE_STATIC} is a deprecated alias for @code{AC_ENABLE_STATIC}.\n@end defmac\n\nThe tests in @code{LT_INIT} also recognize the following\nenvironment variables:\n\n@defvar CC\nThe C compiler that will be used by the generated @code{libtool}.  If\nthis is not set, @code{LT_INIT} will look for @command{gcc} or\n@command{cc}.\n@end defvar\n\n@defvar CFLAGS\nCompiler flags used to generate standard object files.  If this is not\nset, @code{LT_INIT} will not use any such flags.  It affects\nonly the way @code{LT_INIT} runs tests, not the produced\n@code{libtool}.\n@end defvar\n\n@defvar CPPFLAGS\nC preprocessor flags.  If this is not set, @code{LT_INIT} will\nnot use any such flags.  It affects only the way @code{LT_INIT}\nruns tests, not the produced @code{libtool}.\n@end defvar\n\n@defvar LD\nThe system linker to use (if the generated @code{libtool} requires one).\nIf this is not set, @code{LT_INIT} will try to find out what is\nthe linker used by @code{CC}.\n@end defvar\n\n@defvar LDFLAGS\nThe flags to be used by @code{libtool} when it links a program.  If\nthis is not set, @code{LT_INIT} will not use any such flags.  It\naffects only the way @code{LT_INIT} runs tests, not the produced\n@code{libtool}.\n@end defvar\n\n@defvar LIBS\nThe libraries to be used by @code{LT_INIT} when it links a\nprogram.  If this is not set, @code{LT_INIT} will not use any\nsuch flags.  It affects only the way @code{LT_INIT} runs tests,\nnot the produced @code{libtool}.\n@end defvar\n\n@defvar NM\nProgram to use rather than checking for @command{nm}.\n@end defvar\n\n@defvar RANLIB\nProgram to use rather than checking for @command{ranlib}.\n@end defvar\n\n@defvar LN_S\nA command that creates a link of a program, a soft-link if possible, a\nhard-link otherwise.  @code{LT_INIT} will check for a suitable\nprogram if this variable is not set.\n@end defvar\n\n@defvar DLLTOOL\nProgram to use rather than checking for @command{dlltool}.  Only meaningful\nfor Cygwin/MS-Windows.\n@end defvar\n\n@defvar OBJDUMP\nProgram to use rather than checking for @command{objdump}.  Only meaningful\nfor Cygwin/MS-Windows.\n@end defvar\n\n@defvar AS\nProgram to use rather than checking for @command{as}.  Only used on\nCygwin/MS-Windows at the moment.\n@end defvar\n\n@defvar MANIFEST_TOOL\nProgram to use rather than checking for @command{mt}, the Manifest Tool.\nOnly used on Cygwin/MS-Windows at the moment.\n@end defvar\n\n@defvar LT_SYS_LIBRARY_PATH\nLibtool has heuristics for the system search path for runtime-loaded\nlibraries.  If the guessed default does not match the setup of the host\nsystem, this variable can be used to modify that path list, as follows\n(@code{LT_SYS_LIBRARY_PATH} is a colon-delimited list like @code{PATH}):\n@itemize @bullet\n@item @code{path:}\nThe heuristically determined paths will be appened after the trailing\ncolon;\n@item @code{:path}\nThe heuristically determined paths will be prepended before the leading\ncolon;\n@item @code{path::path}\nThe heuristically determined paths will be inserted between the double\ncolons;\n@item @code{path}\nWith no dangling colons, the heuristically determined paths will be\nignored entirely.\n@end itemize\n@end defvar\n\nWith 1.3 era libtool, if you wanted to know any details of what\nlibtool had discovered about your architecture and environment, you\nhad to run the script with @option{--config} and grep through the\nresults.  This idiom was supported up to and including 1.5.x era\nlibtool, where it was possible to call the generated libtool script\nfrom @file{configure.ac} as soon as @code{LT_INIT} had\ncompleted.  However, one of the features of libtool 1.4 was that the\nlibtool configuration was migrated out of a separate @file{ltconfig}\nfile, and added to the @code{LT_INIT} macro (nee @code{AC_PROG_LIBTOOL}),\nso the results of the configuration tests were available directly to code in\n@file{configure.ac}, rendering the call out to the generated libtool\nscript obsolete.\n\nStarting with libtool 2.0, the multipass generation of the libtool\nscript has been consolidated into a single @file{config.status} pass,\nwhich happens after all the code in @file{configure.ac} has\ncompleted.  The implication of this is that the libtool script does\nnot exist during execution of code from @file{configure.ac}, and so\nobviously it cannot be called for @option{--config} details anymore.  If\nyou are upgrading projects that used this idiom to libtool 2.0 or\nnewer, you should replace those calls with direct references to the\nequivalent Autoconf shell variables that are set by the configure time\ntests before being passed to @file{config.status} for inclusion in the\ngenerated libtool script.\n\n@defmac LT_OUTPUT\nBy default, the configured @file{libtool} script is generated by the\ncall to @code{AC_OUTPUT} command, and there is rarely any need to use\n@file{libtool} from @file{configure}.  However, sometimes it is\nnecessary to run configure time compile and link tests using\n@file{libtool}.  You can add @code{LT_OUTPUT} to your\n@file{configure.ac} any time after @code{LT_INIT} and any\n@code{LT_LANG} calls; that done, @file{libtool} will be created by a\nspecially generated @file{config.lt} file, and available for use in\nlater tests.\n\nAlso, when @code{LT_OUTPUT} is used, for backwards compatibility with\nAutomake regeneration rules, @file{config.status} will call\n@file{config.lt} to regenerate @file{libtool}, rather than generating\nthe file itself.\n@end defmac\n\n@pindex aclocal\nWhen you invoke the @command{libtoolize} program (@pxref{Invoking\nlibtoolize}), it will tell you where to find a definition of\n@code{LT_INIT}.  If you use Automake, the @command{aclocal} program\nwill automatically add @code{LT_INIT} support to your\n@file{configure} script when it sees the invocation of @code{LT_INIT}\nin @file{configure.ac}.\n\nBecause of these changes, and the runtime version compatibility checks\nLibtool now executes, we now advise @strong{against} including a copy of\n@file{libtool.m4} (and brethren) in @file{acinclude.m4}.  Instead,\nyou should set your project macro directory with\n@code{AC_CONFIG_MACRO_DIRS}.  When you @command{libtoolize} your\nproject, a copy of the relevant macro definitions will be placed in\nyour @code{AC_CONFIG_MACRO_DIRS}, where @command{aclocal} can reference\nthem directly from @file{aclocal.m4}.\n\n\n@node Configure notes\n@subsection Platform-specific configuration notes\n\nWhile Libtool tries to hide as many platform-specific features as possible,\nsome have to be taken into account when configuring either the Libtool package\nor a libtoolized package.\n\n@include notes.texi\n\n\n@node Distributing\n@section Including libtool in your package\n\nIn order to use libtool, you need to include the following files with\nyour package:\n\n@table @file\n@item config.guess\n@pindex config.guess\nAttempt to guess a canonical system name.\n\n@item config.sub\n@pindex config.sub\nCanonical system name validation subroutine script.\n\n@item install-sh\n@pindex install-sh\nBSD-compatible @command{install} replacement script.\n\n@item ltmain.sh\n@pindex ltmain.sh\nA generic script implementing basic libtool functionality.\n@end table\n\nNote that the libtool script itself should @emph{not} be included with\nyour package.  @xref{Configuring}.\n\nYou should use the @command{libtoolize} program, rather than manually\ncopying these files into your package.\n\n@menu\n* Invoking libtoolize::         @code{libtoolize} command line options.\n* Autoconf and LTLIBOBJS::      Autoconf automates LTLIBOBJS generation.\n@end menu\n\n@node Invoking libtoolize\n@subsection Invoking @command{libtoolize}\n@pindex libtoolize\n@cindex libtoolize command options\n@cindex command options, libtoolize\n@cindex options, libtoolize command\n\nThe @command{libtoolize} program provides a standard way to add libtool\nsupport to your package.  In the future, it may implement better usage\nchecking, or other features to make libtool even easier to use.\n\nThe @command{libtoolize} program has the following synopsis:\n\n@example\nlibtoolize [@var{option}]@dots{}\n@end example\n\n@noindent\nand accepts the following options:\n\n@table @option\n\n@item --copy\n@itemx -c\nCopy files from the libtool data directory rather than creating\nsymlinks.\n\n@item --debug\nDump a trace of shell script execution to standard output.  This\nproduces a lot of output, so you may wish to pipe it to @command{less} (or\n@command{more}) or redirect to a file.\n\n@item --dry-run\n@itemx -n\nDon't run any commands that modify the file system, just print them\nout.\n\n@item --force\n@itemx -f\nReplace existing libtool files.  By default, @command{libtoolize} won't\noverwrite existing files.\n\n@item --help\nDisplay a help message and exit.\n\n@item --ltdl [@var{target-directory-name}]\nInstall libltdl in the @var{target-directory-name} subdirectory of\nyour package.  Normally, the directory is extracted from the argument\nto @code{LT_CONFIG_LTDL_DIR} in @file{configure.ac}, though you can\nalso specify a subdirectory name here if you are not using Autoconf\nfor example.  If @command{libtoolize} can't determine the target\ndirectory, @samp{libltdl} is used as the default.\n\n@item --no-warn\nNormally, Libtoolize tries to diagnose use of deprecated libtool macros\nand other stylistic issues.  If you are deliberately using outdated\ncalling conventions, this option prevents Libtoolize from explaining\nhow to update your project's Libtool conventions.\n\n@item --nonrecursive\nIf passed in conjunction with @option{--ltdl}, this option will cause\nthe @command{libltdl} installed by @samp{libtoolize} to be set up for\nuse with a non-recursive @command{automake} build.  To make use of it,\nyou will need to add the following to the @file{Makefile.am} of the\nparent project:\n\n@example\n## libltdl/ltdl.mk @r{appends to the following variables}\n## @r{so we set them here before including it:}\nBUILT_SOURCES   =\n\nAM_CPPFLAGS        =\nAM_LDFLAGS         =\n\ninclude_HEADERS    =\nnoinst_LTLIBRARIES =\nlib_LTLIBRARIES   =\nEXTRA_LTLIBRARIES  =\n\nEXTRA_DIST   =\n\nCLEANFILES   =\nMOSTLYCLEANFILES   =\n\ninclude libltdl/ltdl.mk\n@end example\n\n@noindent\n\n@item --quiet\n@itemx -q\nWork silently.  @samp{libtoolize --quiet} is used by GNU Automake\nto add libtool files to your package if necessary.\n\n@item --recursive\nIf passed in conjunction with @option{--ltdl}, this option will cause\nthe @command{libtoolize} installed @samp{libltdl} to be set up for use\nwith a recursive @command{automake} build.  To make use of it, you\nwill need to adjust the parent project's @file{configure.ac}:\n\n@example\nAC_CONFIG_FILES([libltdl/Makefile])\n@end example\n\n@noindent\nand @file{Makefile.am}:\n\n@example\nSUBDIRS += libltdl\n@end example\n\n@item --subproject\nIf passed in conjunction with @option{--ltdl}, this option will cause\nthe @command{libtoolize} installed @samp{libltdl} to be set up for\nindependent configuration and compilation as a self-contained\nsubproject.  To make use of it, you should arrange for your build to\ncall @command{libltdl/configure}, and then run @command{make} in the\n@file{libltdl} directory (or the subdirectory you put libltdl into).\nIf your project uses Autoconf, you can use the supplied\n@samp{LT_WITH_LTDL} macro, or else call @samp{AC_CONFIG_SUBDIRS}\ndirectly.\n\nPrevious releases of @samp{libltdl} built exclusively in this mode,\nbut now it is the default mode both for backwards compatibility and\nbecause, for example, it is suitable for use in projects that wish to\nuse @samp{libltdl}, but not use the Autotools for their own build\nprocess.\n\n@item --verbose\n@itemx -v\nWork noisily!  Give a blow by blow account of what\n@command{libtoolize} is doing.\n\n@item --version\nPrint @command{libtoolize} version information and exit.\n@end table\n\n@cindex LIBTOOLIZE_OPTIONS\nSometimes it can be useful to pass options to @command{libtoolize} even\nthough it is called by another program, such as @command{autoreconf}.  A\nlimited number of options are parsed from the environment variable\n@code{LIBTOOLIZE_OPTIONS}: currently @option{--debug}, @option{--no-warn},\n@option{--quiet} and @option{--verbose}.  Multiple options passed in\n@code{LIBTOOLIZE_OPTIONS} must be separated with a space, comma or a\ncolon.\n\nBy default, a warning is issued for unknown options found in\n@code{LIBTOOLIZE_OPTIONS} unless the first such option is\n@option{--no-warn}.  Where @command{libtoolize} has always quit\non receipt of an unknown option at the command line, this and all\nprevious releases of @command{libtoolize} will continue unabated whatever\nthe content of @code{LIBTOOLIZE_OPTIONS} (modulo some possible warning\nmessages).\n\n@example\ntrick$ @kbd{LIBTOOLIZE_OPTIONS=--no-warn,--quiet autoreconf --install}\n@end example\n\n@findex AC_CONFIG_MACRO_DIRS\nIf @command{libtoolize} detects an explicit call to\n@code{AC_CONFIG_MACRO_DIRS} (@pxref{Input, , The Autoconf Manual,\nautoconf, The Autoconf Manual}) in your @file{configure.ac}, it will\nput the Libtool macros in the specified directory.\n\nIn the future other Autotools will automatically check the contents of\n@code{AC_CONFIG_MACRO_DIRS}, but at the moment it is more portable to\nadd the macro directory to @code{ACLOCAL_AMFLAGS} in\n@file{Makefile.am}, which is where the tools currently look.  If\n@command{libtoolize} doesn't see @code{AC_CONFIG_MACRO_DIRS}, it too\nwill honour the first @samp{-I} argument in @code{ACLOCAL_AMFLAGS}\nwhen choosing a directory to store libtool configuration macros in.\nIt is perfectly sensible to use both @code{AC_CONFIG_MACRO_DIRS} and\n@code{ACLOCAL_AMFLAGS}, as long as they are kept in synchronisation.\n\n@example\nACLOCAL_AMFLAGS = -I m4\n@end example\n\nWhen you bootstrap your project with @command{aclocal}, then you will\nneed to explicitly pass the same macro directory with\n@command{aclocal}'s @samp{-I} flag:\n\n@example\ntrick$ @kbd{aclocal -I m4}\n@end example\n\n@findex AC_CONFIG_AUX_DIR\nIf @command{libtoolize} detects an explicit call to\n@code{AC_CONFIG_AUX_DIR} (@pxref{Input, , The Autoconf Manual,\nautoconf, The Autoconf Manual}) in your @file{configure.ac}, it\nwill put the other support files in the specified directory.\nOtherwise they too end up in the project root directory.\n\nUnless @option{--no-warn} is passed, @command{libtoolize} displays\nhints for adding libtool support to your package, as well.\n\n@node Autoconf and LTLIBOBJS\n@subsection Autoconf and @code{LTLIBOBJS}\n\nPeople used to add code like the following to their\n@file{configure.ac}:\n\n@cindex LTLIBOBJS\n@example\nLTLIBOBJS=`echo \"$LIBOBJS\" | sed 's/\\.[^.]* /.lo /g;s/\\.[^.]*$/.lo/'`\nAC_SUBST([LTLIBOBJS])\n@end example\n\n@noindent\nThis is no longer required (since Autoconf 2.54), and doesn't take\nAutomake's deansification support into account either, so doesn't work\ncorrectly even with ancient Autoconfs!\n\nProvided you are using a recent (2.54 or better) incarnation of\nAutoconf, the call to @code{AC_OUTPUT} takes care of setting\n@code{LTLIBOBJS} up correctly, so you can simply delete such snippets\nfrom your @file{configure.ac} if you had them.\n\n\n@node Static-only libraries\n@section Static-only libraries\n@cindex debugging libraries\n@cindex developing libraries\n@cindex double-compilation, avoiding\n@cindex avoiding shared libraries\n@cindex eliding shared libraries\n@cindex using shared libraries, not\n@cindex shared libraries, not using\n@cindex time, saving\n@cindex saving time\n\nWhen you are developing a package, it is often worthwhile to configure\nyour package with the @option{--disable-shared} flag, or to override the\ndefaults for @code{LT_INIT} by using the @code{disable-shared} option\n(@pxref{LT_INIT, , The @code{LT_INIT} macro}).  This prevents libtool\nfrom building shared libraries, which has several advantages:\n\n@itemize @bullet\n@item\ncompilation is twice as fast, which can speed up your development cycle,\n\n@item\ndebugging is easier because you don't need to deal with any complexities\nadded by shared libraries, and\n\n@item\nyou can see how libtool behaves on static-only platforms.\n@end itemize\n\nYou may want to put a small note in your package @file{README} to let\nother developers know that @option{--disable-shared} can save them time.\nThe following example note is taken from the GIMP@footnote{GNU Image\nManipulation Program, for those who haven't taken the plunge.  See\n@url{http://www.gimp.org/}.} distribution @file{README}:\n\n@example\nThe GIMP uses GNU Libtool to build shared libraries on a\nvariety of systems.  While this is very nice for making usable\nbinaries, it can be a pain when trying to debug a program.  For that\nreason, compilation of shared libraries can be turned off by\nspecifying the @option{--disable-shared} option to @file{configure}.\n@end example\n\n\n@node Other languages\n@chapter Using libtool with other languages\n@cindex C, not using\n@cindex languages, non-C\n@cindex C++, using\n\nLibtool was first implemented to add support for writing shared\nlibraries in the C language.  However, over time, libtool is being\nintegrated with other languages, so that programmers are free to reap\nthe benefits of shared libraries in their favorite programming language.\n\nThis chapter describes how libtool interacts with other languages,\nand what special considerations you need to make if you do not use C.\n\n@menu\n* C++ libraries::               Writing libraries for C++\n* Tags::                        Tags\n@end menu\n\n@node C++ libraries\n@section Writing libraries for C++\n@c FIXME: in the TOC, the ++ is too large (seems to be math mode)\n@cindex trouble with C++\n@cindex pitfalls using C++\n@cindex C++, pitfalls\n\nCreating libraries of C++ code should be a fairly straightforward\nprocess, because its object files differ from C ones in only three ways:\n\n@enumerate 1\n@item\nBecause of name mangling, C++ libraries are only usable by the C++\ncompiler that created them.  This decision was made by the designers of\nC++ to protect users from conflicting implementations of\nfeatures such as constructors, exception handling, and RTTI.\n\n@item\nOn some systems, the C++ compiler must take special actions for the\ndynamic linker to run dynamic (i.e., run-time) initializers.  This means\nthat we should not call @command{ld} directly to link such libraries, and\nwe should use the C++ compiler instead.\n\n@item\nC++ compilers will link some Standard C++ library in by default, but\nlibtool does not know what these libraries are, so it cannot even run\nthe inter-library dependence analyzer to check how to link it in.\nTherefore, running @command{ld} to link a C++ program or library is deemed\nto fail.\n@end enumerate\n\nBecause of these three issues, Libtool has been designed to always use\nthe C++ compiler to compile and link C++ programs and libraries.  In\nsome instances the @code{main()} function of a program must also be\ncompiled with the C++ compiler for static C++ objects to be properly\ninitialized.\n\n@node Tags\n@section Tags\n@cindex tag names\n@cindex language names\n@cindex inferring tags\n\nLibtool supports multiple languages through the use of tags.  Technically\na tag corresponds to a set of configuration variables associated with a\nlanguage.  These variables tell @command{libtool} how it should create\nobjects and libraries for each language.\n\nTags are defined at @command{configure}-time for each language activated\nin the package (see @code{LT_LANG} in @ref{LT_INIT}).  Here is the\ncorrespondence between language names and tags names.\n\n@multitable {Windows Resource} {Tag name}\n@item Language name    @tab Tag name\n@item C                @tab CC\n@item C++              @tab CXX\n@item Java             @tab GCJ\n@item Fortran 77       @tab F77\n@item Fortran          @tab FC\n@item Go               @tab GO\n@item Windows Resource @tab RC\n@end multitable\n\n@command{libtool} tries to automatically infer what tag to use from\nthe compiler command being used to compile or link.  If it can't infer\na tag, then it defaults to the configuration for the @code{C} language.\n\nThe tag can also be specified using @command{libtool}'s\n@option{--tag=@var{tag}} option (@pxref{Invoking libtool}).  It is a good\nidea to do so in @file{Makefile} rules, because that will allow users to\nsubstitute the compiler without relying on @command{libtool} inference\nheuristics.  When no tag is specified, @command{libtool} will default\nto @code{CC}; this tag always exists.\n\nFinally, the set of tags available in a particular project can be\nretrieved by tracing for the @code{LT_SUPPORTED_TAG} macro (@pxref{Trace\ninterface}).\n\n@node Versioning\n@chapter Library interface versions\n@cindex dynamic dependencies\n@cindex dependency versioning\n@cindex shared library versions\n\nThe most difficult issue introduced by shared libraries is that of\ncreating and resolving runtime dependencies.  Dependencies on programs\nand libraries are often described in terms of a single name, such as\n@command{sed}.  So, one may say ``libtool depends on sed,'' and that is\ngood enough for most purposes.\n\nHowever, when an interface changes regularly, we need to be more\nspecific: ``Gnus 5.1 requires Emacs 19.28 or above.''  Here, the\ndescription of an interface consists of a name, and a ``version\nnumber.''\n\nEven that sort of description is not accurate enough for some purposes.\nWhat if Emacs 20 changes enough to break Gnus 5.1?\n\nThe same problem exists in shared libraries: we require a formal version\nsystem to describe the sorts of dependencies that programs have on\nshared libraries, so that the dynamic linker can guarantee that programs\nare linked only against libraries that provide the interface they\nrequire.\n\n@menu\n* Interfaces::                  What are library interfaces?\n* Libtool versioning::          Libtool's versioning system.\n* Updating version info::       Changing version information before releases.\n* Release numbers::             Breaking binary compatibility for aesthetics.\n@end menu\n\n@node Interfaces\n@section What are library interfaces?\n@cindex library interfaces\n\nInterfaces for libraries may be any of the following (and more):\n\n@itemize @bullet\n@item\nglobal variables: both names and types\n\n@item\nglobal functions: argument types and number, return types, and function names\n\n@item\nstandard input, standard output, standard error, and file formats\n\n@item\nsockets, pipes, and other inter-process communication protocol formats\n@end itemize\n\nNote that static functions do not count as interfaces, because they are\nnot directly available to the user of the library.\n\n@node Libtool versioning\n@section Libtool's versioning system\n@cindex libtool library versions\n@cindex formal versioning\n@cindex versioning, formal\n\nLibtool has its own formal versioning system.  It is not as flexible as\nsome, but it is definitely the simplest of the more powerful versioning\nsystems.\n\nThink of a library as exporting several sets of interfaces, arbitrarily\nrepresented by integers.  When a program is linked against a library, it\nmay use any subset of those interfaces.\n\nLibtool's description of the interfaces that a program uses is simple:\nit encodes the least and the greatest interface numbers in the resulting\nbinary (@var{first-interface}, @var{last-interface}).\n\nThe dynamic linker is guaranteed that if a library supports @emph{every}\ninterface number between @var{first-interface} and @var{last-interface},\nthen the program can be relinked against that library.\n\nNote that this can cause problems because libtool's compatibility\nrequirements are actually stricter than is necessary.\n\nSay @file{libhello} supports interfaces 5, 16, 17, 18, and 19, and that\nlibtool is used to link @file{test} against @file{libhello}.\n\nLibtool encodes the numbers 5 and 19 in @file{test}, and the dynamic\nlinker will only link @file{test} against libraries that support\n@emph{every} interface between 5 and 19.  So, the dynamic linker refuses\nto link @file{test} against @file{libhello}!\n\nIn order to eliminate this problem, libtool only allows libraries to\ndeclare consecutive interface numbers.  So, @file{libhello} can declare at\nmost that it supports interfaces 16 through 19.  Then, the dynamic\nlinker will link @file{test} against @file{libhello}.\n\nSo, libtool library versions are described by three integers:\n\n@table @var\n@item current\nThe most recent interface number that this library implements.\n\n@item revision\nThe implementation number of the @var{current} interface.\n\n@item age\nThe difference between the newest and oldest interfaces that this\nlibrary implements.  In other words, the library implements all the\ninterface numbers in the range from number @code{@var{current} -\n@var{age}} to @code{@var{current}}.\n@end table\n\nIf two libraries have identical @var{current} and @var{age} numbers,\nthen the dynamic linker chooses the library with the greater\n@var{revision} number.\n\n@node Updating version info\n@section Updating library version information\n\nIf you want to use libtool's versioning system, then you must specify\nthe version information to libtool using the @option{-version-info} flag\nduring link mode (@pxref{Link mode}).\n\nThis flag accepts an argument of the form\n@samp{@var{current}[:@var{revision}[:@var{age}]]}.  So, passing\n@option{-version-info 3:12:1} sets @var{current} to 3, @var{revision} to\n12, and @var{age} to 1.\n\nIf either @var{revision} or @var{age} are omitted, they default to 0.\nAlso note that @var{age} must be less than or equal to the @var{current}\ninterface number.\n\nHere are a set of rules to help you update your library version\ninformation:\n\n@enumerate 1\n@item\nStart with version information of @samp{0:0:0} for each libtool library.\n\n@item\nUpdate the version information only immediately before a public release\nof your software.  More frequent updates are unnecessary, and only\nguarantee that the current interface number gets larger faster.\n\n@item\nIf the library source code has changed at all since the last update,\nthen increment @var{revision} (@samp{@var{c}:@var{r}:@var{a}} becomes\n@samp{@var{c}:@math{r+1}:@var{a}}).\n\n@item\nIf any interfaces have been added, removed, or changed since the last\nupdate, increment @var{current}, and set @var{revision} to 0.\n\n@item\nIf any interfaces have been added since the last public release, then\nincrement @var{age}.\n\n@item\nIf any interfaces have been removed or changed since the last public\nrelease, then set @var{age} to 0.\n@end enumerate\n\n@strong{@emph{Never}} try to set the interface numbers so that they\ncorrespond to the release number of your package.  This is an abuse that\nonly fosters misunderstanding of the purpose of library versions.\nInstead, use the @option{-release} flag (@pxref{Release numbers}), but be\nwarned that every release of your package will not be binary compatible\nwith any other release.\n\nThe following explanation may help to understand the above rules a bit\nbetter: consider that there are three possible kinds of reactions from\nusers of your library to changes in a shared library:\n\n@enumerate 1\n@item\nPrograms using the previous version may use the new version as\ndrop-in replacement, and programs using the new version can also work\nwith the previous one.  In other words, no recompiling nor relinking\nis needed.  In this case, bump @var{revision} only, don't touch\n@var{current} nor @var{age}.\n\n@item\nPrograms using the previous version may use the new version as\ndrop-in replacement, but programs using the new version may use APIs not\npresent in the previous one.  In other words, a program linking against\nthe new version may fail with ``unresolved symbols'' if linking against\nthe old version at runtime: set @var{revision} to 0, bump @var{current}\nand @var{age}.\n\n@item\nPrograms may need to be changed, recompiled, and relinked in order to use\nthe new version.  Bump @var{current}, set @var{revision} and @var{age}\nto 0.\n@end enumerate\n\n@noindent\nIn the above description, @emph{programs} using the library in question\nmay also be replaced by other libraries using it.\n\n\n@node Release numbers\n@section Managing release information\n\nOften, people want to encode the name of the package release into the\nshared library so that it is obvious to the user what package their\nprograms are linked against.  This convention is used especially on\nGNU/Linux:\n\n@example\ntrick$ @kbd{ls /usr/lib/libbfd*}\n/usr/lib/libbfd.a           /usr/lib/libbfd.so.2.7.0.2\n/usr/lib/libbfd.so\ntrick$\n@end example\n\nOn @samp{trick}, @file{/usr/lib/libbfd.so} is a symbolic link to\n@file{libbfd.so.2.7.0.2}, which was distributed as a part of\n@samp{binutils-2.7.0.2}.\n\nUnfortunately, this convention conflicts directly with libtool's idea of\nlibrary interface versions, because the library interface rarely changes\nat the same time that the release number does, and the library suffix is\nnever the same across all platforms.\n\nSo, to accommodate both views, you can use the @option{-release}\nflag to set release information for libraries for which you do not\nwant to use @option{-version-info}.  For the @file{libbfd} example, the\nnext release that uses libtool should be built with @samp{-release\n2.9.0}, which will produce the following files on GNU/Linux:\n\n@example\ntrick$ @kbd{ls /usr/lib/libbfd*}\n/usr/lib/libbfd-2.9.0.so     /usr/lib/libbfd.a\n/usr/lib/libbfd.so\ntrick$\n@end example\n\nIn this case, @file{/usr/lib/libbfd.so} is a symbolic link to\n@file{libbfd-2.9.0.so}.  This makes it obvious that the user is dealing\nwith @samp{binutils-2.9.0}, without compromising libtool's idea of\ninterface versions.\n\nNote that this option causes a modification of the library name, so do\nnot use it unless you want to break binary compatibility with any past\nlibrary releases.  In general, you should only use @option{-release} for\npackage-internal libraries or for ones whose interfaces change very\nfrequently.\n\n@node Library tips\n@chapter Tips for interface design\n@cindex library interfaces, design\n@cindex design of library interfaces\n\nWriting a good library interface takes a lot of practice and thorough\nunderstanding of the problem that the library is intended to solve.\n\nIf you design a good interface, it won't have to change often, you won't\nhave to keep updating documentation, and users won't have to keep\nrelearning how to use the library.\n\nHere is a brief list of tips for library interface design that may\nhelp you in your exploits:\n\n@table @asis\n@item Plan ahead\nTry to make every interface truly minimal, so that you won't need to\ndelete entry points very often.\n\n@item Avoid interface changes\n@cindex renaming interface functions\nSome people love redesigning and changing entry points just for the heck\nof it (note: @emph{renaming} a function is considered changing an entry\npoint).  Don't be one of those people.  If you must redesign an\ninterface, then try to leave compatibility functions behind so that\nusers don't need to rewrite their existing code.\n\n@item Use opaque data types\n@cindex opaque data types\nThe fewer data type definitions a library user has access to, the\nbetter.  If possible, design your functions to accept a generic pointer\n(that you can cast to an internal data type), and provide access\nfunctions rather than allowing the library user to directly manipulate\nthe data.\nThat way, you have the freedom to change the data structures without\nchanging the interface.\n\nThis is essentially the same thing as using abstract data types and\ninheritance in an object-oriented system.\n\n@item Use header files\n@cindex header files\nIf you are careful to document each of your library's global functions\nand variables in header files, and include them in your library source\nfiles, then the compiler will let you know if you make any interface\nchanges by accident (@pxref{C header files}).\n\n@item Use the @code{static} keyword (or equivalent) whenever possible\n@cindex global functions\nThe fewer global functions your library has, the more flexibility you'll\nhave in changing them.  Static functions and variables may change forms\nas often as you like@dots{} your users cannot access them, so they\naren't interface changes.\n\n@item Be careful with array dimensions\nThe number of elements in a global array is part of an interface, even\nif the header just declares @code{extern int foo[];}.  This is because\non i386 and some other SVR4/ELF systems, when an application\nreferences data in a shared library the size of that data (whatever\nits type) is included in the application executable.  If you might\nwant to change the size of an array or string then provide a pointer\nnot the actual array.\n@end table\n\n@menu\n* C header files::              How to write portable include files.\n@end menu\n\n@node C header files\n@section Writing C header files\n@cindex portable C headers\n@cindex C header files, portable\n@cindex include files, portable\n\nWriting portable C header files can be difficult, since they may be read\nby different types of compilers:\n\n@table @asis\n@item C++ compilers\nC++ compilers require that functions be declared with full prototypes,\nsince C++ is more strongly typed than C@.  C functions and variables also\nneed to be declared with the @code{extern \"C\"} directive, so that the\nnames aren't mangled.  @xref{C++ libraries}, for other issues relevant\nto using C++ with libtool.\n\n@item ANSI C compilers\nANSI C compilers are not as strict as C++ compilers, but functions\nshould be prototyped to avoid unnecessary warnings when the header file\nis @code{#include}d.\n\n@item non-ANSI C compilers\nNon-ANSI compilers will report errors if functions are prototyped.\n@end table\n\nThese complications mean that your library interface headers must use\nsome C preprocessor magic to be usable by each of the above compilers.\n\n@file{foo.h} in the @file{tests/demo} subdirectory of the libtool\ndistribution serves as an example for how to write a header file that\ncan be safely installed in a system directory.\n\nHere are the relevant portions of that file:\n\n@example\n/* BEGIN_C_DECLS should be used at the beginning of your declarations,\n   so that C++ compilers don't mangle their names.  Use END_C_DECLS at\n   the end of C declarations. */\n#undef BEGIN_C_DECLS\n#undef END_C_DECLS\n#ifdef __cplusplus\n# define BEGIN_C_DECLS extern \"C\" @{\n# define END_C_DECLS @}\n#else\n# define BEGIN_C_DECLS /* empty */\n# define END_C_DECLS /* empty */\n#endif\n\n/* PARAMS is a macro used to wrap function prototypes, so that\n   compilers that don't understand ANSI C prototypes still work,\n   and ANSI C compilers can issue warnings about type mismatches. */\n#undef PARAMS\n#if defined __STDC__ || defined _AIX \\\n        || (defined __mips && defined _SYSTYPE_SVR4) \\\n        || defined WIN32 || defined __cplusplus\n# define PARAMS(protos) protos\n#else\n# define PARAMS(protos) ()\n#endif\n@end example\n\nThese macros are used in @file{foo.h} as follows:\n\n@example\n#ifndef FOO_H\n#define FOO_H 1\n\n/* The above macro definitions. */\n#include \"@dots{}\"\n\nBEGIN_C_DECLS\n\nint foo PARAMS((void));\nint hello PARAMS((void));\n\nEND_C_DECLS\n\n#endif /* !FOO_H */\n@end example\n\nNote that the @file{#ifndef FOO_H} prevents the body of @file{foo.h}\nfrom being read more than once in a given compilation.\n\nAlso the only thing that must go outside the\n@code{BEGIN_C_DECLS}/@code{END_C_DECLS} pair are @code{#include} lines.\nStrictly speaking it is only C symbol names that need to be protected,\nbut your header files will be more maintainable if you have a single\npair of these macros around the majority of the header contents.\n\nYou should use these definitions of @code{PARAMS}, @code{BEGIN_C_DECLS},\nand @code{END_C_DECLS} into your own headers.  Then, you may use them to\ncreate header files that are valid for C++, ANSI, and non-ANSI\ncompilers@footnote{We used to recommend @code{__P},\n@code{__BEGIN_DECLS} and @code{__END_DECLS}.  This was bad advice since\nsymbols (even preprocessor macro names) that begin with an underscore\nare reserved for the use of the compiler.}.\n\nDo not be naive about writing portable code.  Following the tips given\nabove will help you miss the most obvious problems, but there are\ndefinitely other subtle portability issues.  You may need to cope with\nsome of the following issues:\n\n@itemize @bullet\n@item\nPre-ANSI compilers do not always support the @code{void *} generic\npointer type, and so need to use @code{char *} in its place.\n\n@item\nThe @code{const}, @code{inline} and @code{signed} keywords are not\nsupported by some compilers, especially pre-ANSI compilers.\n\n@item\nThe @code{long double} type is not supported by many compilers.\n@end itemize\n\n\n@node Inter-library dependencies\n@chapter Inter-library dependencies\n@cindex dependencies between libraries\n@cindex inter-library dependencies\n\nBy definition, every shared library system provides a way for\nexecutables to depend on libraries, so that symbol resolution is\ndeferred until runtime.\n\nAn @dfn{inter-library dependency} is where a library depends on\nother libraries.  For example, if the libtool library @file{libhello}\nuses the @code{cos} function, then it has an inter-library dependency\non @file{libm}, the math library that implements @code{cos}.\n\nSome shared library systems provide this feature in an\ninternally-consistent way: these systems allow chains of dependencies of\npotentially infinite length.\n\nHowever, most shared library systems are restricted in that they only\nallow a single level of dependencies.  In these systems, programs may\ndepend on shared libraries, but shared libraries may not depend on other\nshared libraries.\n\nIn any event, libtool provides a simple mechanism for you to declare\ninter-library dependencies: for every library @file{lib@var{name}} that\nyour own library depends on, simply add a corresponding\n@code{-l@var{name}} option to the link line when you create your\nlibrary.  To make an example of our @file{libhello} that depends on\n@file{libm}:\n\n@example\nburger$ @kbd{libtool --mode=link gcc -g -O -o libhello.la foo.lo hello.lo \\\n                -rpath /usr/local/lib -lm}\nburger$\n@end example\n\nWhen you link a program against @file{libhello}, you don't need to\nspecify the same @samp{-l} options again: libtool will do that for you,\nto guarantee that all the required libraries are found.  This\nrestriction is only necessary to preserve compatibility with static\nlibrary systems and simple dynamic library systems.\n\nSome platforms, such as Windows, do not even allow you this\nflexibility.  In order to build a shared library, it must be entirely\nself-contained or it must have dependencies known at link time (that is,\nhave references only to symbols that are found in the @file{.lo} files\nor the specified @samp{-l} libraries), and you need to specify the\n@option{-no-undefined} flag.  By default, libtool builds only static\nlibraries on these kinds of platforms.\n\nThe simple-minded inter-library dependency tracking code of libtool\nreleases prior to 1.2 was disabled because it was not clear when it was\npossible to link one library with another, and complex failures would\noccur.  A more complex implementation of this concept was re-introduced\nbefore release 1.3, but it has not been ported to all platforms that\nlibtool supports.  The default, conservative behavior is to avoid\nlinking one library with another, introducing their inter-dependencies\nonly when a program is linked with them.\n\n@node Dlopened modules\n@chapter Dlopened modules\n@findex dlopen\n@findex dlsym\n@findex dlclose\n@findex shl_load\n@cindex dynamic linking, applications\n@cindex dlopening modules\n@cindex modules, dynamic\n@cindex application-level dynamic linking\n\nIt can sometimes be confusing to discuss @dfn{dynamic linking}, because\nthe term is used to refer to two different concepts:\n\n@enumerate 1\n@item\nCompiling and linking a program against a shared library, which is\nresolved automatically at run time by the dynamic linker.  In this\nprocess, dynamic linking is transparent to the application.\n\n@item\nThe application calling functions such as @code{dlopen} that load\narbitrary, user-specified modules at runtime.  This type of dynamic\nlinking is explicitly controlled by the application.\n@end enumerate\n\nTo mitigate confusion, this manual refers to the second type of dynamic\nlinking as @dfn{dlopening} a module.\n\nThe main benefit to dlopening object modules is the ability to access\ncompiled object code to extend your program, rather than using an\ninterpreted language.  In fact, dlopen calls are frequently used in\nlanguage interpreters to provide an efficient way to extend the\nlanguage.\n\nLibtool provides support for dlopened modules.  However, you should\nindicate that your package is willing to use such support, by using the\n@code{LT_INIT} option @samp{dlopen} in @file{configure.ac}.  If this\noption is not given, libtool will assume no dlopening mechanism is\navailable, and will try to simulate it.\n\nThis chapter discusses how you as a dlopen application developer might\nuse libtool to generate dlopen-accessible modules.\n\n@menu\n* Building modules::            Creating dlopenable objects and libraries.\n* Dlpreopening::                Dlopening that works on static platforms.\n* Linking with dlopened modules::  Using dlopenable modules in libraries.\n* Finding the dlname::          Choosing the right file to @code{dlopen}.\n* Dlopen issues::               Unresolved problems that need your attention.\n@end menu\n\n@node Building modules\n@section Building modules to dlopen\n\nOn some operating systems, a program symbol must be specially declared\nin order to be dynamically resolved with the @code{dlsym} (or\nequivalent) function.  Libtool provides the @option{-export-dynamic} and\n@option{-module} link flags (@pxref{Link mode}), for you to make that\ndeclaration.  You need to use these flags if you are linking an\napplication program that dlopens other modules or a libtool library\nthat will also be dlopened.\n\nFor example, if we wanted to build a shared library, @file{hello},\nthat would later be dlopened by an application, we would add\n@option{-module} to the other link flags:\n\n@example\nburger$ @kbd{libtool --mode=link gcc -module -o hello.la foo.lo \\\n                hello.lo -rpath /usr/local/lib -lm}\nburger$\n@end example\n\nIf symbols from your @emph{executable} are needed to satisfy unresolved\nreferences in a library you want to dlopen you will have to use the flag\n@option{-export-dynamic}.  You should use @option{-export-dynamic} while\nlinking the executable that calls dlopen:\n\n@example\nburger$ @kbd{libtool --mode=link gcc -export-dynamic -o helldl main.o}\nburger$\n@end example\n\n@node Dlpreopening\n@section Dlpreopening\n\nLibtool provides special support for dlopening libtool object and\nlibtool library files, so that their symbols can be resolved\n@emph{even on platforms without any @code{dlopen} and @code{dlsym}\nfunctions}.\n\nConsider the following alternative ways of loading code into your\nprogram, in order of increasing ``laziness'':\n\n@enumerate 1\n@item\nLinking against object files that become part of the program executable,\nwhether or not they are referenced.  If an object file cannot be found,\nthen the compile time linker refuses to create the executable.\n\n@item\nDeclaring a static library to the linker, so that it is searched at link\ntime to satisfy any undefined references in the above object\nfiles.  If the static library cannot be found, then the compile time\nlinker refuses to create the executable.\n\n@item\nDeclaring a shared library to the runtime linker, so that it is searched\nat runtime to satisfy any undefined references in the above\nfiles.  If the shared library cannot be found, then the dynamic linker\naborts the program before it runs.\n\n@item\nDlopening a module, so that the application can resolve its own,\ndynamically-computed references.  If there is an error opening the\nmodule, or the module is not found, then the application can recover\nwithout crashing.\n@end enumerate\n\nLibtool emulates @option{-dlopen} on static platforms by linking objects\ninto the program at compile time, and creating data structures that\nrepresent the program's symbol table.  In order to use this feature,\nyou must declare the objects you want your application to dlopen by\nusing the @option{-dlopen} or @option{-dlpreopen} flags when you link your\nprogram (@pxref{Link mode}).\n\n@deftp {Data Type} {lt_dlsymlist} typedef struct @\n  @{ @w{const char *@var{name};} @w{void *@var{address};} @} lt_dlsymlist\nThe @var{name} attribute is a null-terminated character string of the\nsymbol name, such as @code{\"fprintf\"}.  The @var{address} attribute is a\ngeneric pointer to the appropriate object, such as @code{&fprintf}.\n@end deftp\n\n@deftypevar {const lt_dlsymlist } lt_preloaded_symbols[]\nAn array of @code{lt_dlsymlist} structures, representing all the preloaded\nsymbols linked into the program proper.  For each module\n@option{-dlpreopen}ed by the Libtool linked program\nthere is an element with the @var{name} of the module and an @var{address}\nof @code{0}, followed by all symbols exported from this file.\nFor the executable itself the special name @samp{@@PROGRAM@@} is used.\nThe last element of all has a @var{name} and @var{address} of\n@code{0}.\n\nTo facilitate inclusion of symbol lists into libraries,\n@code{lt_preloaded_symbols} is @samp{#define}d to a suitably unique name\nin @file{ltdl.h}.\n\nThis variable may not be declared @code{const} on some systems due to\nrelocation issues.\n@end deftypevar\n\nSome compilers may allow identifiers that are not valid in ANSI C, such\nas dollar signs.  Libtool only recognizes valid ANSI C symbols (an\ninitial ASCII letter or underscore, followed by zero or more ASCII\nletters, digits, and underscores), so non-ANSI symbols will not appear\nin @code{lt_preloaded_symbols}.\n\n@deftypefun int lt_dlpreload (const lt_dlsymlist *@var{preloaded})\nRegister the list of preloaded modules @var{preloaded}.\nIf @var{preloaded} is @code{NULL}, then all previously registered\nsymbol lists, except the list set by @code{lt_dlpreload_default},\nare deleted.  Return 0 on success.\n@end deftypefun\n\n@deftypefun int lt_dlpreload_default (const lt_dlsymlist *@var{preloaded})\nSet the default list of preloaded modules to @var{preloaded}, which\nwon't be deleted by @code{lt_dlpreload}.  Note that this function does\n@emph{not} require libltdl to be initialized using @code{lt_dlinit} and\ncan be used in the program to register the default preloaded modules.\nInstead of calling this function directly, most programs will use the\nmacro @code{LTDL_SET_PRELOADED_SYMBOLS}.\n\nReturn 0 on success.\n@end deftypefun\n\n@defmac LTDL_SET_PRELOADED_SYMBOLS\nSet the default list of preloaded symbols.\nShould be used in your program to initialize libltdl's\nlist of preloaded modules.\n\n@example\n#include <ltdl.h>\n\nint main() @{\n  /* ... */\n  LTDL_SET_PRELOADED_SYMBOLS();\n  /* ... */\n@}\n@end example\n@end defmac\n\n@deftypefn {Function Type} {int} lt_dlpreload_callback_func (lt_dlhandle @var{handle})\nFunctions of this type can be passed to @code{lt_dlpreload_open},\nwhich in turn will call back into a function thus passed for each\npreloaded module that it opens.\n@end deftypefn\n\n@deftypefun int lt_dlpreload_open (@w{const char *@var{originator},} @w{lt_dlpreload_callback_func *@var{func})}\nLoad all of the preloaded modules for @var{originator}.  For every\nmodule opened in this way, call @var{func}.\n\n@noindent\nTo open all of the modules preloaded into @file{libhell.la}\n(presumably from within the @file{libhell.a} initialisation code):\n\n@example\n#define preloaded_symbols lt_libhell_LTX_preloaded_symbols\n\nstatic int hell_preload_callback (lt_dlhandle handle);\n\nint\nhell_init (void)\n@{\n  @dots{}\n  if (lt_dlpreload (&preloaded_symbols) == 0)\n    @{\n      lt_dlpreload_open (\"libhell\", preload_callback);\n    @}\n  @dots{}\n@}\n@end example\n\n@noindent\nNote that to prevent clashes between multiple preloaded modules, the\npreloaded symbols are accessed via a mangled symbol name: to get the\nsymbols preloaded into @samp{libhell}, you must prefix\n@samp{preloaded_symbols} with @samp{lt_}; the originator name,\n@samp{libhell} in this case; and @samp{_LTX_}.  That is,\n@samp{lt_libhell_LTX_preloaded_symbols} here.\n@end deftypefun\n\n\n@node Linking with dlopened modules\n@section Linking with dlopened modules\n@cindex linking, dlopen\n@cindex linking, dlpreopen\n\nWhen, say, an interpreter application uses dlopened modules to extend\nthe list of methods it provides, an obvious abstraction for the\nmaintainers of the interpreter is to have all methods (including the\nbuilt in ones supplied with the interpreter) accessed through\ndlopen.  For one thing, the dlopening functionality will be tested\neven during routine invocations.  For another, only one subsystem has\nto be written for getting methods into the interpreter.\n\nThe downside of this abstraction is, of course, that environments that\nprovide only static linkage can't even load the intrinsic interpreter\nmethods.  Not so!  We can statically link those methods by\n@strong{dlpreopening} them.\n\nUnfortunately, since platforms such as AIX and cygwin require\nthat all library symbols must be resolved at compile time, the\ninterpreter maintainers will need to provide a library to both its own\ndlpreopened modules, and third-party modules loaded by dlopen.  In\nitself, that is not so bad, except that the interpreter too must\nprovide those same symbols otherwise it will be impossible to resolve\nall the symbols required by the modules as they are loaded.  Things\nare even worse if the code that loads the modules for the interpreter\nis itself in a library -- and that is usually the case for any\nnon-trivial application.  Modern platforms take care of this by\nautomatically loading all of a module's dependency libraries as the\nmodule is loaded (libltdl can do this even on platforms that can't do\nit by themselves).  In the end, this leads to problems with duplicated\nsymbols and prevents modules from loading, and prevents the\napplication from compiling when modules are preloaded.\n\n@example\n,-------------.    ,------------------.    ,-----------------.\n| Interpreter |---->     Module------------>   Third-party   |\n`-------------'    |     Loader       |    |Dlopened Modules |\n                   |        |         |    `-----------------'\n                   |,-------v--------.|             |\n                   ||  Dlpreopened   ||             |\n                   ||    Modules     ||             |\n                   |`----------------'|             |\n                   |        |         |             |\n                   |,-------v--------.|    ,--------v--------.\n                   ||Module Interface||    |Module Interface |\n                   ||    Library     ||    |     Library     |\n                   |`----------------'|    `-----------------'\n                   `------------------'\n@end example\n\nLibtool has the concept of @dfn{weak library interfaces} to circumvent\nthis problem.  Recall that the code that dlopens method-provider\nmodules for the interpreter application resides in a library: All of\nthe modules and the dlopener library itself should be linked against\nthe common library that resolves the module symbols at compile time.\nTo guard against duplicate symbol definitions, and for dlpreopened\nmodules to work at all in this scenario, the dlopener library must\ndeclare that it provides a weak library interface to the common\nsymbols in the library it shares with the modules.  That way, when\n@command{libtool} links the @strong{Module Loader} library with some\n@strong{Dlpreopened Modules} that were in turn linked against the\n@strong{Module Interface Library}, it knows that the @strong{Module\nLoader} provides an already loaded @strong{Module Interface Library}\nto resolve symbols for the @strong{Dlpreopened Modules}, and doesn't\nask the compiler driver to link an identical @strong{Module Interface\nLibrary} dependency library too.\n\nIn conjunction with Automake, the @file{Makefile.am} for the\n@strong{Module Loader} might look like this:\n\n@example\nlib_LTLIBRARIES = libinterface.la libloader.la\n\nlibinterface_la_SOURCES = interface.c interface.h\nlibinterface_la_LDFLAGS = -version-info 3:2:1\n\nlibloader_la_SOURCES    = loader.c\nlibloader_la_LDFLAGS    = -weak libinterface.la \\\n                          -version-info 3:2:1 \\\n                          -dlpreopen ../modules/intrinsics.la\nlibloader_la_LIBADD     = $(libinterface_la_OBJECTS)\n@end example\n\nAnd the @file{Makefile.am} for the @file{intrinsics.la} module in a\nsibling @file{modules} directory might look like this:\n\n@example\nAM_CPPFLAGS             = -I$(srcdir)/../libloader\nAM_LDFLAGS              = -no-undefined -module -avoid-version \\\n                          -export-dynamic\n\nnoinst_LTLIBRARIES      = intrinsics.la\n\nintrinsics_la_LIBADD    = ../libloader/libinterface.la\n\n../libloader/libinterface.la:\n        cd ../libloader && $(MAKE) $(AM_MAKEFLAGS) libinterface.la\n@end example\n\n@cindex @option{-weak} option\nFor a more complex example, see the sources of @file{libltdl} in the\nLibtool distribution, which is built with the help of the @option{-weak}\noption.\n\n\n@node Finding the dlname\n@section Finding the correct name to dlopen\n@cindex names of dynamic modules\n@cindex dynamic modules, names\n\nAfter a library has been linked with @option{-module}, it can be dlopened.\nUnfortunately, because of the variation in library names,\nyour package needs to determine the correct file to dlopen.\n\nThe most straightforward and flexible implementation is to determine the\nname at runtime, by finding the installed @file{.la} file, and searching\nit for the following lines:\n\n@example\n# The name that we can @code{dlopen}.\ndlname='@var{dlname}'\n@end example\n\nIf @var{dlname} is empty, then the library cannot be dlopened.\nOtherwise, it gives the dlname of the library.  So, if the library was\ninstalled as @file{/usr/local/lib/libhello.la}, and the @var{dlname} was\n@file{libhello.so.3}, then @file{/usr/local/lib/libhello.so.3} should be\ndlopened.\n\nIf your program uses this approach, then it should search the\ndirectories listed in the @code{LD_LIBRARY_PATH}@footnote{@code{LIBPATH}\non AIX, and @code{SHLIB_PATH} on HP-UX.} environment variable, as well as\nthe directory where libraries will eventually be installed.  Searching\nthis variable (or equivalent) will guarantee that your program can find\nits dlopened modules, even before installation, provided you have linked\nthem using libtool.\n\n@node Dlopen issues\n@section Unresolved dlopen issues\n@cindex pitfalls with dlopen\n@cindex dlopening, pitfalls\n@cindex trouble with dlopen\n\nThe following problems are not solved by using libtool's dlopen support:\n\n@itemize @bullet\n@item\nDlopen functions are generally only available on shared library\nplatforms.  If you want your package to be portable to static platforms,\nyou have to use either libltdl (@pxref{Using libltdl}) or develop your\nown alternatives to dlopening dynamic code.\nMost reasonable solutions involve writing wrapper functions for the\n@code{dlopen} family, which do package-specific tricks when dlopening\nis unsupported or not available on a given platform.\n\n@item\nThere are major differences in implementations of the @code{dlopen}\nfamily of functions.  Some platforms do not even use the same function\nnames (notably HP-UX, with its @code{shl_load} family).\n\n@item\nThe application developer must write a custom search function\nto discover the correct module filename to supply to @code{dlopen}.\n@end itemize\n\n@node Using libltdl\n@chapter Using libltdl\n@findex libltdl\n@findex dlopen\n@findex dlsym\n@findex dlclose\n@findex dlerror\n@findex shl_load\n@cindex dynamic linking, applications\n@cindex dlopening modules\n@cindex modules, dynamic\n@cindex application-level dynamic linking\n\nLibtool provides a small library, called @file{libltdl}, that aims at\nhiding the various difficulties of dlopening libraries from programmers.\nIt consists of a few headers and small C source files that can be\ndistributed with applications that need dlopening functionality.  On\nsome platforms, whose dynamic linkers are too limited for a simple\nimplementation of @file{libltdl} services, it requires GNU DLD, or it\nwill only emulate dynamic linking with libtool's dlpreopening mechanism.\n\n@noindent\nlibltdl supports currently the following dynamic linking mechanisms:\n\n@itemize @bullet\n@item\n@code{dlopen} (POSIX compliant systems, GNU/Linux, etc.)\n@item\n@code{shl_load} (HP-UX)\n@item\n@code{LoadLibrary} (Win16 and Win32)\n@item\n@code{load_add_on} (BeOS)\n@item\n@code{NSAddImage} or @code{NSLinkModule} (Darwin and Mac OS X)\n@item\nGNU DLD (emulates dynamic linking for static libraries)\n@item\nlibtool's dlpreopen (@pxref{Dlpreopening})\n@end itemize\n\n@noindent\nlibltdl is licensed under the terms of the GNU Lesser General\nPublic License, with the following exception:\n\n@quotation\nAs a special exception to the GNU Lesser General Public License,\nif you distribute this file as part of a program or library that\nis built using GNU Libtool, you may include it under the same\ndistribution terms that you use for the rest of that program.\n@end quotation\n\n@menu\n* Libltdl interface::           How to use libltdl in your programs.\n* Modules for libltdl::         Creating modules that can be @code{dlopen}ed.\n* Thread Safety in libltdl::    Registering callbacks for multi-thread safety.\n* User defined module data::    Associating data with loaded modules.\n* Module loaders for libltdl::  Creating user defined module loaders.\n* Distributing libltdl::        How to distribute libltdl with your package.\n@end menu\n\n@node Libltdl interface\n@section How to use libltdl in your programs\n\n@noindent\nThe libltdl API is similar to the POSIX dlopen interface,\nwhich is very simple but powerful.\n\n@noindent\nTo use libltdl in your program you have to include the header file @file{ltdl.h}:\n\n@example\n#include <ltdl.h>\n@end example\n\n@noindent\nThe early releases of libltdl used some symbols that violated the\nPOSIX namespace conventions.  These symbols are now deprecated,\nand have been replaced by those described here.  If you have code that\nrelies on the old deprecated symbol names, defining\n@samp{LT_NON_POSIX_NAMESPACE} before you include @file{ltdl.h} provides\nconversion macros.  Whichever set of symbols you use, the new API is\nnot binary compatible with the last, so you will need to recompile\nyour application to use this version of libltdl.\n\n@noindent\nNote that libltdl is not well tested in a multithreaded environment,\nthough the intention is that it should work (@pxref{Thread Safety\nin libltdl, , Using libltdl in a multi threaded environment}).  It was\nreported that GNU/Linux's glibc 2.0's @code{dlopen} with\n@samp{RTLD_LAZY} (that libltdl uses by default) is not thread-safe,\nbut this problem is supposed to be fixed in glibc 2.1.  On the other\nhand, @samp{RTLD_NOW} was reported to introduce problems in\nmulti-threaded applications on FreeBSD@.  Working around these problems\nis left as an exercise for the reader; contributions are certainly\nwelcome.\n\n@noindent\nThe following macros are defined by including @file{ltdl.h}:\n\n@defmac LT_PATHSEP_CHAR\n@code{LT_PATHSEP_CHAR} is the system-dependent path separator,\nthat is, @samp{;} on Windows and @samp{:} everywhere else.\n@end defmac\n\n@defmac LT_DIRSEP_CHAR\nIf @code{LT_DIRSEP_CHAR} is defined, it can be used as directory\nseparator in addition to @samp{/}.  On Windows, this contains\n@samp{\\}.\n@end defmac\n\n\n@noindent\nThe following types are defined in @file{ltdl.h}:\n\n@deftp {Type} lt_dlhandle\n@code{lt_dlhandle} is a module ``handle''.\nEvery lt_dlopened module has a handle associated with it.\n@end deftp\n\n@deftp {Type} lt_dladvise\n@code{lt_dladvise} is used to control optional module loading modes.\nIf it is not used, the default mode of the underlying system module\nloader is used.\n@end deftp\n\n@deftp {Type} lt_dlsymlist\n@code{lt_dlsymlist} is a symbol list for dlpreopened modules\n(@pxref{Dlpreopening}).\n@end deftp\n\n@page\n@noindent\nlibltdl provides the following functions:\n\n@deftypefun int lt_dlinit (void)\nInitialize libltdl.\nThis function must be called before using libltdl\nand may be called several times.\nReturn 0 on success, otherwise the number of errors.\n@end deftypefun\n\n@deftypefun int lt_dlexit (void)\nShut down libltdl and close all modules.\nThis function will only then shut down libltdl when it was called as\nmany times as @code{lt_dlinit} has been successfully called.\nReturn 0 on success, otherwise the number of errors.\n@end deftypefun\n\n@deftypefun lt_dlhandle lt_dlopen (const char *@var{filename})\nOpen the module with the file name @var{filename} and return a\nhandle for it.  @code{lt_dlopen} is able to open libtool dynamic\nmodules, preloaded static modules, the program itself and\nnative dynamic modules@footnote{Some platforms, notably Mac OS X,\ndifferentiate between a runtime library that cannot be opened by\n@code{lt_dlopen} and a dynamic module that can.  For maximum\nportability you should try to ensure that you only pass\n@code{lt_dlopen} objects that have been compiled with libtool's\n@option{-module} flag.}.\n\nUnresolved symbols in the module are resolved using its dependency\nlibraries and previously dlopened modules.  If the executable using\nthis module was linked with the @option{-export-dynamic} flag, then the\nglobal symbols in the executable will also be used to resolve\nreferences in the module.\n\nIf @var{filename} is @code{NULL} and the program was linked with\n@option{-export-dynamic} or @option{-dlopen self}, @code{lt_dlopen} will\nreturn a handle for the program itself, which can be used to access its\nsymbols.\n\nIf libltdl cannot find the library and the file name @var{filename} does\nnot have a directory component it will additionally look in the\nfollowing search paths for the module (in the following order):\n\n@enumerate 1\n@item user-defined search path:\nThis search path can be changed by the program using the\nfunctions @code{lt_dlsetsearchpath}, @code{lt_dladdsearchdir} and\n@code{lt_dlinsertsearchdir}.\n\n@item libltdl's search path:\nThis search path is the value of the environment variable\n@env{LTDL_LIBRARY_PATH}.\n\n@item system library search path:\nThe system dependent library search path\n(e.g.@: on GNU/Linux it is @env{LD_LIBRARY_PATH}).\n@end enumerate\n\nEach search path must be a list of absolute directories separated by\n@code{LT_PATHSEP_CHAR}, for example, @code{\"/usr/lib/mypkg:/lib/foo\"}.\nThe directory names may not contain the path separator.\n\nIf the same module is loaded several times, the same handle is returned.\nIf @code{lt_dlopen} fails for any reason, it returns @code{NULL}.\n@end deftypefun\n\n@deftypefun lt_dlhandle lt_dlopenext (const char *@var{filename})\nThe same as @code{lt_dlopen}, except that it tries to append\ndifferent file name extensions to the file name.\nIf the file with the file name @var{filename} cannot be found\nlibltdl tries to append the following extensions:\n\n@enumerate 1\n@item the libtool archive extension @file{.la}\n@item the extension used for native dynamically loadable modules on the host platform, e.g., @file{.so}, @file{.sl}, etc.\n@end enumerate\n\nThis lookup strategy was designed to allow programs that don't\nhave knowledge about native dynamic libraries naming conventions\nto be able to @code{dlopen} such libraries as well as libtool modules\ntransparently.\n@end deftypefun\n\n@deftypefun lt_dlhandle lt_dlopenadvise (const char *@var{filename}, @w{lt_dladvise @var{advise}})\nThe same as @code{lt_dlopen}, except that it also requires an additional\nargument that may contain additional hints to the underlying system\nmodule loader.  The @var{advise} parameter is opaque and can only be\naccessed with the functions documented below.\n\nNote that this function does not change the content of @var{advise}, so\nunlike the other calls in this API takes a direct @code{lt_dladvise}\ntype, and not a pointer to the same.\n@end deftypefun\n\n@deftypefun int lt_dladvise_init (lt_dladvise *@var{advise})\nThe @var{advise} parameter can be used to pass hints to the module\nloader when using @code{lt_dlopenadvise} to perform the loading.\nThe @var{advise} parameter needs to be initialised by this function\nbefore it can be used.  Any memory used by @var{advise} needs to be\nrecycled with @code{lt_dladvise_destroy} when it is no longer needed.\n\nOn failure, @code{lt_dladvise_init} returns non-zero and sets an error\nmessage that can be retrieved with @code{lt_dlerror}.\n@end deftypefun\n\n@deftypefun int lt_dladvise_destroy (lt_dladvise *@var{advise})\nRecycle the memory used by @var{advise}.  For an example, see the\ndocumentation for @code{lt_dladvise_ext}.\n\nOn failure, @code{lt_dladvise_destroy} returns non-zero and sets an error\nmessage that can be retrieved with @code{lt_dlerror}.\n@end deftypefun\n\n@deftypefun int lt_dladvise_ext (lt_dladvise *@var{advise})\nSet the @code{ext} hint on @var{advise}.  Passing an @var{advise}\nparameter to @code{lt_dlopenadvise} with this hint set causes it to\ntry to append different file name extensions like @code{lt_dlopenext}.\n\nThe following example is equivalent to calling\n@code{lt_dlopenext (filename)}:\n\n@example\nlt_dlhandle\nmy_dlopenext (const char *filename)\n@{\n  lt_dlhandle handle = 0;\n  lt_dladvise advise;\n\n  if (!lt_dladvise_init (&advise) && !lt_dladvise_ext (&advise))\n    handle = lt_dlopenadvise (filename, advise);\n\n  lt_dladvise_destroy (&advise);\n\n  return handle;\n@}\n@end example\n\nOn failure, @code{lt_dladvise_ext} returns non-zero and sets an error\nmessage that can be retrieved with @code{lt_dlerror}.\n@end deftypefun\n\n@deftypefun int lt_dladvise_global (lt_dladvise *@var{advise})\nSet the @code{symglobal} hint on @var{advise}.  Passing an @var{advise}\nparameter to @code{lt_dlopenadvise} with this hint set causes it to try\nto make the loaded module's symbols globally available for resolving\nunresolved symbols in subsequently loaded modules.\n\nIf neither the @code{symglobal} nor the @code{symlocal} hints are set,\nor if a module is loaded without using the @code{lt_dlopenadvise} call\nin any case, then the visibility of the module's symbols will be as per\nthe default for the underlying module loader and OS.  Even if a\nsuitable hint is passed, not all loaders are able to act upon it in\nwhich case @code{lt_dlgetinfo} will reveal whether the hint was actually\nfollowed.\n\nOn failure, @code{lt_dladvise_global} returns non-zero and sets an error\nmessage that can be retrieved with @code{lt_dlerror}.\n@end deftypefun\n\n@deftypefun int lt_dladvise_local (lt_dladvise *@var{advise})\nSet the @code{symlocal} hint on @var{advise}.  Passing an @var{advise}\nparameter to @code{lt_dlopenadvise} with this hint set causes it to try\nto keep the loaded module's symbols hidden so that they are not\nvisible to subsequently loaded modules.\n\nIf neither the @code{symglobal} nor the @code{symlocal} hints are set,\nor if a module is loaded without using the @code{lt_dlopenadvise} call\nin any case, then the visibility of the module's symbols will be as per\nthe default for the underlying module loader and OS.  Even if a\nsuitable hint is passed, not all loaders are able to act upon it in\nwhich case @code{lt_dlgetinfo} will reveal whether the hint was actually\nfollowed.\n\nOn failure, @code{lt_dladvise_local} returns non-zero and sets an error\nmessage that can be retrieved with @code{lt_dlerror}.\n@end deftypefun\n\n@deftypefun int lt_dladvise_resident (lt_dladvise *@var{advise})\nSet the @code{resident} hint on @var{advise}.  Passing an @var{advise}\nparameter to @code{lt_dlopenadvise} with this hint set causes it to try\nto make the loaded module resident in memory, so that it cannot be\nunloaded with a later call to @code{lt_dlclose}.\n\nOn failure, @code{lt_dladvise_resident} returns non-zero and sets an error\nmessage that can be retrieved with @code{lt_dlerror}.\n@end deftypefun\n\n@deftypefun int lt_dladvise_preload (lt_dladvise *@var{advise})\nSet the @code{preload} hint on @var{advise}.  Passing an @var{advise}\nparameter to @code{lt_dlopenadvise} with this hint set causes it to\nload only preloaded modules, so that if a suitable preloaded module is\nnot found, @code{lt_dlopenadvise} will return @code{NULL}.\n@end deftypefun\n\n@deftypefun int lt_dlclose (lt_dlhandle @var{handle})\nDecrement the reference count on the module @var{handle}.\nIf it drops to zero and no other module depends on this module,\nthen the module is unloaded.\nReturn 0 on success.\n@end deftypefun\n\n@deftypefun {void *} lt_dlsym (lt_dlhandle @var{handle}, const char *@var{name})\nReturn the address in the module @var{handle}, where the symbol given\nby the null-terminated string @var{name} is loaded.\nIf the symbol cannot be found, @code{NULL} is returned.\n@end deftypefun\n\n@deftypefun {const char *} lt_dlerror (void)\nReturn a human readable string describing the most\nrecent error that occurred from any of libltdl's functions.\nReturn @code{NULL} if no errors have occurred since initialization\nor since it was last called.\n@end deftypefun\n\n@deftypefun int lt_dladdsearchdir (const char *@var{search_dir})\nAppend the search directory @var{search_dir} to the current user-defined\nlibrary search path.  Return 0 on success.\n@end deftypefun\n\n@deftypefun int lt_dlinsertsearchdir (@w{const char *@var{before}}, @w{const char *@var{search_dir}})\nInsert the search directory @var{search_dir} into the user-defined library\nsearch path, immediately before the element starting at address\n@var{before}.  If @var{before} is @samp{NULL}, then @var{search_dir} is\nappending as if @code{lt_dladdsearchdir} had been called.  Return 0 on success.\n@end deftypefun\n\n@deftypefun int lt_dlsetsearchpath (const char *@var{search_path})\nReplace the current user-defined library search path with\n@var{search_path}, which must be a list of absolute directories separated\nby @code{LT_PATHSEP_CHAR}.  Return 0 on success.\n@end deftypefun\n\n@deftypefun {const char *} lt_dlgetsearchpath (void)\nReturn the current user-defined library search path.\n@end deftypefun\n\n@deftypefun int lt_dlforeachfile (@w{const char *@var{search_path}}, @w{int (*@var{func}) (const char *@var{filename}, void * @var{data})}, @w{void * @var{data}})\nIn some applications you may not want to load individual modules with\nknown names, but rather find all of the modules in a set of\ndirectories and load them all during initialisation.  With this function\nyou can have libltdl scan the @code{LT_PATHSEP_CHAR}-delimited directory list\nin @var{search_path} for candidates, and pass them, along with\n@var{data} to your own callback function, @var{func}.  If @var{search_path} is\n@samp{NULL}, then search all of the standard locations that\n@code{lt_dlopen} would examine.  This function will continue to make\ncalls to @var{func} for each file that it discovers in @var{search_path}\nuntil one of these calls returns non-zero, or until the files are\nexhausted.  @samp{lt_dlforeachfile} returns the value returned by the last\ncall made to @var{func}.\n\nFor example you could define @var{func} to build an ordered\n@dfn{argv}-like vector of files using @var{data} to hold the address of\nthe start of the vector.\n@end deftypefun\n\n@deftypefun int lt_dlmakeresident (lt_dlhandle @var{handle})\nMark a module so that it cannot be @samp{lt_dlclose}d.  This can be\nuseful if a module implements some core functionality in your project\nthat would cause your code to crash if removed.  Return 0 on success.\n\nIf you use @samp{lt_dlopen (NULL)} to get a @var{handle} for the running\nbinary, that handle will always be marked as resident, and consequently\ncannot be successfully @samp{lt_dlclose}d.\n@end deftypefun\n\n@deftypefun int lt_dlisresident (lt_dlhandle @var{handle})\nCheck whether a particular module has been marked as resident, returning 1\nif it has or 0 otherwise.  If there is an error while executing this\nfunction, return -1 and set an error message for retrieval with\n@code{lt_dlerror}.\n@end deftypefun\n\n@node Modules for libltdl\n@section Creating modules that can be @code{dlopen}ed\n\nLibtool modules are created like normal libtool libraries with a few\nexceptions:\n\nYou have to link the module with libtool's @option{-module} switch,\nand you should link any program that is intended to dlopen the module with\n@option{-dlopen @var{modulename.la}} where possible, so that libtool can\ndlpreopen the module on platforms that do not support dlopening.  If\nthe module depends on any other libraries, make sure you specify them\neither when you link the module or when you link programs that dlopen it.\nIf you want to disable versioning (@pxref{Versioning}) for a specific module\nyou should link it with the @option{-avoid-version} switch.\nNote that libtool modules don't need to have a \"lib\" prefix.\nHowever, Automake 1.4 or higher is required to build such modules.\n\nUsually a set of modules provide the same interface, i.e.@: exports the same\nsymbols, so that a program can dlopen them without having to know more\nabout their internals: In order to avoid symbol conflicts all exported\nsymbols must be prefixed with \"modulename_LTX_\" (@var{modulename} is\nthe name of the module).  Internal symbols must be named in such a way\nthat they won't conflict with other modules, for example, by prefixing\nthem with \"_modulename_\".  Although some platforms support having the\nsame symbols defined more than once it is generally not portable and\nit makes it impossible to dlpreopen such modules.\n\nlibltdl will automatically cut the prefix off to get the real name of\nthe symbol.  Additionally, it supports modules that do not use a\nprefix so that you can also dlopen non-libtool modules.\n\n@file{foo1.c} gives an example of a portable libtool module.\nExported symbols are prefixed with \"foo1_LTX_\", internal symbols\nwith \"_foo1_\".  Aliases are defined at the beginning so that the code\nis more readable.\n\n@example\n/* aliases for the exported symbols */\n#define foo  foo1_LTX_foo\n#define bar  foo1_LTX_bar\n\n/* a global variable definition */\nint bar = 1;\n\n/* a private function */\nint _foo1_helper() @{\n  return bar;\n@}\n\n/* an exported function */\nint foo() @{\n  return _foo1_helper();\n@}\n@end example\n\n@noindent\nThe @file{Makefile.am} contains the necessary rules to build the\nmodule @file{foo1.la}:\n\n@example\n...\nlib_LTLIBRARIES = foo1.la\n\nfoo1_la_SOURCES = foo1.c\nfoo1_la_LDFLAGS = -module\n...\n@end example\n\n\n@node Thread Safety in libltdl\n@section Using libltdl in a multi threaded environment\n\nLibltdl provides a wrapper around whatever dynamic run-time object\nloading mechanisms are provided by the host system, many of which are\nthemselves not thread safe.  Consequently libltdl cannot itself be\nconsistently thread safe.\n\nIf you wish to use libltdl in a multithreaded environment, then you\nmust mutex lock around libltdl calls, since they may in turn be calling\nnon-thread-safe system calls on some target hosts.\n\nSome old releases of libtool provided a mutex locking API that\nwas unusable with POSIX threads, so callers were forced to lock around\nall libltdl API calls anyway.  That mutex locking API was\nnext to useless, and is not present in current releases.\n\nSome future release of libtool may provide a new POSIX thread\ncompliant mutex locking API.\n\n@node User defined module data\n@section Data associated with loaded modules\n\nSome of the internal information about each loaded module that is\nmaintained by libltdl is available to the user, in the form of this\nstructure:\n\n@deftypefn {Type} {struct} lt_dlinfo @{ @w{char *@var{filename};} @\n  @w{char *@var{name};} @w{int @var{ref_count};} @\n  @w{int @var{is_resident};} @w{int @var{is_symglobal};} @\n  @w{int @var{is_symlocal};}@}\n@code{lt_dlinfo} is used to store information about a module.\nThe @var{filename} attribute is a null-terminated character string of\nthe real module file name.  If the module is a libtool module then\n@var{name} is its module name (e.g.@: @code{\"libfoo\"} for\n@code{\"dir/libfoo.la\"}), otherwise it is set to @code{NULL}.  The\n@var{ref_count} attribute is a reference counter that describes how\noften the same module is currently loaded. The remaining fields can\nbe compared to any hints that were passed to @code{lt_dlopenadvise}\nto determine whether the underlying loader was able to follow them.\n@end deftypefn\n\nThe following function will return a pointer to libltdl's internal copy\nof this structure for the given @var{handle}:\n\n@deftypefun {const lt_dlinfo *} lt_dlgetinfo (@w{lt_dlhandle @var{handle}})\nReturn a pointer to a struct that contains some information about\nthe module @var{handle}.  The contents of the struct must not be modified.\nReturn @code{NULL} on failure.\n@end deftypefun\n\nFurthermore, to save you from having to keep a list of the\nhandles of all the modules you have loaded, these functions allow you to\niterate over libltdl's list of loaded modules:\n\n@deftp {Type} lt_dlinterface_id\nThe opaque type used to hold the module interface details for each\nregistered libltdl client.\n@end deftp\n\n@deftypefn {Type} int lt_dlhandle_interface (@w{lt_dlhandle @var{handle},} @\n  @w{const char *@var{id_string}})\nFunctions of this type are called to check that a handle conforms to a\nlibrary's expected module interface when iterating over the global\nhandle list.  You should be careful to write a callback function of\nthis type that can correctly identify modules that belong to this\nclient, both to prevent other clients from accidentally finding your\nloaded modules with the iterator functions below, and vice versa.  The\nbest way to do this is to check that module @var{handle} conforms\nto the interface specification of your loader using @code{lt_dlsym}.\n\nThe callback may be given @strong{every} module loaded by all the\nlibltdl module clients in the current address space, including any\nmodules loaded by other libraries such as libltdl itself, and should\nreturn non-zero if that module does not fulfill the interface\nrequirements of your loader.\n\n@example\nint\nmy_interface_cb (lt_dlhandle handle, const char *id_string)\n@{\n  char *(*module_id) (void) = NULL;\n\n  /* @r{A valid my_module must provide all of these symbols.}  */\n  if (!((module_id = (char*(*)(void)) lt_dlsym (\"module_version\"))\n        && lt_dlsym (\"my_module_entrypoint\")))\n      return 1;\n\n  if (strcmp (id_string, module_id()) != 0)\n      return 1;\n\n  return 0;\n@}\n@end example\n@end deftypefn\n\n@deftypefun lt_dlinterface_id lt_dlinterface_register @\n  (@w{const char *@var{id_string}}, @w{lt_dlhandle_interface *@var{iface}})\nUse this function to register your interface validator with libltdl,\nand in return obtain a unique key to store and retrieve per-module data.\nYou supply an @var{id_string} and @var{iface} so that the resulting\n@code{lt_dlinterface_id} can be used to filter the module handles\nreturned by the iteration functions below.  If @var{iface} is @code{NULL},\nall modules will be matched.\n@end deftypefun\n\n@deftypefun void lt_dlinterface_free (@w{lt_dlinterface_id @var{iface}})\nRelease the data associated with @var{iface}.\n@end deftypefun\n\n@deftypefun int lt_dlhandle_map (@w{lt_dlinterface_id @var{iface}}, @\n  @w{int (*@var{func}) (lt_dlhandle @var{handle}, void * @var{data})}, @\n  @w{void * @var{data}})\nFor each module that matches @var{iface}, call the function\n@var{func}.  When writing the @var{func} callback function, the\nargument @var{handle} is the handle of a loaded module, and\n@var{data} is the last argument passed to @code{lt_dlhandle_map}. As\nsoon as @var{func} returns a non-zero value for one of the handles,\n@code{lt_dlhandle_map} will stop calling @var{func} and immediately\nreturn that non-zero value.  Otherwise 0 is eventually returned when\n@var{func} has been successfully called for all matching modules.\n@end deftypefun\n\n@deftypefun lt_dlhandle lt_dlhandle_iterate (@w{lt_dlinterface_id @\n  @var{iface}}, @w{lt_dlhandle @var{place}})\nIterate over the module handles loaded by @var{iface}, returning the\nfirst matching handle in the list if @var{place} is @code{NULL}, and\nthe next one on subsequent calls.  If @var{place} is the last element\nin the list of eligible modules, this function returns @code{NULL}.\n\n@example\nlt_dlhandle handle = 0;\nlt_dlinterface_id iface = my_interface_id;\n\nwhile ((handle = lt_dlhandle_iterate (iface, handle)))\n  @{\n    @dots{}\n  @}\n@end example\n@end deftypefun\n\n@deftypefun lt_dlhandle lt_dlhandle_fetch (@w{lt_dlinterface_id @var{iface}}, @w{const char *@var{module_name}})\nSearch through the module handles loaded by @var{iface} for a module named\n@var{module_name}, returning its handle if found or else @code{NULL}\nif no such named module has been loaded by @var{iface}.\n@end deftypefun\n\nHowever, you might still need to maintain your own list of loaded\nmodule handles (in parallel with the list maintained inside libltdl)\nif there were any other data that your application wanted to associate\nwith each open module.  Instead, you can use the following API\ncalls to do that for you.  You must first obtain a unique interface id\nfrom libltdl as described above, and subsequently always use it to\nretrieve the data you stored earlier.  This allows different libraries\nto each store their own data against loaded modules, without\ninterfering with one another.\n\n@deftypefun {void *} lt_dlcaller_set_data (@w{lt_dlinterface_id @var{key}}, @w{lt_dlhandle @var{handle}}, @w{void * @var{data}})\nSet @var{data} as the set of data uniquely associated with @var{key} and\n@var{handle} for later retrieval.  This function returns the @var{data}\npreviously associated with @var{key} and @var{handle} if any.  A result of\n0, may indicate that a diagnostic for the last error (if any) is available\nfrom @code{lt_dlerror()}.\n\nFor example, to correctly remove some associated data:\n\n@example\nvoid *stale = lt_dlcaller_set_data (key, handle, 0);\nif (stale != NULL)\n  @{\n    free (stale);\n  @}\nelse\n  @{\n    char *error_msg = lt_dlerror ();\n\n    if (error_msg != NULL)\n      @{\n        my_error_handler (error_msg);\n        return STATUS_FAILED;\n      @}\n  @}\n@end example\n@end deftypefun\n\n@deftypefun {void *} lt_dlcaller_get_data (@w{lt_dlinterface_id @var{key}}, @w{lt_dlhandle @var{handle}})\nReturn the address of the data associated with @var{key} and\n@var{handle}, or else @code{NULL} if there is none.\n@end deftypefun\n\nOld versions of libltdl also provided a simpler, but similar, API\nbased around @code{lt_dlcaller_id}.  Unfortunately, it had no\nprovision for detecting whether a module belonged to a particular\ninterface as libltdl didn't support multiple loaders in the same\naddress space at that time.  Those APIs are no longer supported\nas there would be no way to stop clients of the old APIs from\nseeing (and accidentally altering) modules loaded by other libraries.\n\n\n@node Module loaders for libltdl\n@section How to create and register new module loaders\n\nSometimes libltdl's many ways of gaining access to modules are not\nsufficient for the purposes of a project.  You can write your own\nloader, and register it with libltdl so that @code{lt_dlopen} will be\nable to use it.\n\nWriting a loader involves writing at least three functions that can be\ncalled by @code{lt_dlopen}, @code{lt_dlsym} and @code{lt_dlclose}.\nOptionally, you can provide a finalisation function to perform any\ncleanup operations when @code{lt_dlexit} executes, and a symbol prefix\nstring that will be prepended to any symbols passed to @code{lt_dlsym}.\nThese functions must match the function pointer types below, after\nwhich they can be allocated to an instance of @code{lt_user_dlloader}\nand registered.\n\nRegistering the loader requires that you choose a name for it, so that it\ncan be recognised by @code{lt_dlloader_find} and removed with\n@code{lt_dlloader_remove}.  The name you choose must be unique, and not\nalready in use by libltdl's builtin loaders:\n\n@table @asis\n@item \"dlopen\"\nThe system dynamic library loader, if one exists.\n@item \"dld\"\nThe GNU dld loader, if @file{libdld} was installed when libltdl was\nbuilt.\n@item \"dlpreload\"\nThe loader for @code{lt_dlopen}ing of preloaded static modules.\n@end table\n\nThe prefix \"dl\" is reserved for loaders supplied with future versions of\nlibltdl, so you should not use that for your own loader names.\n\n@noindent\nThe following types are defined in @file{ltdl.h}:\n\n@deftp {Type} lt_module\n@code{lt_module} is a dlloader dependent module.\nThe dynamic module loader extensions communicate using these low\nlevel types.\n@end deftp\n\n@deftp {Type} lt_dlloader\n@code{lt_dlloader} is a handle for module loader types.\n@end deftp\n\n@deftp {Type} lt_user_data\n@code{lt_user_data} is used for specifying loader instance data.\n@end deftp\n\n@deftypefn {Type} {struct} lt_user_dlloader @{@w{const char *@var{sym_prefix};} @w{lt_module_open *@var{module_open};} @w{lt_module_close *@var{module_close};} @w{lt_find_sym *@var{find_sym};} @w{lt_dlloader_exit *@var{dlloader_exit};} @}\nIf you want to define a new way to open dynamic modules, and have the\n@code{lt_dlopen} API use it, you need to instantiate one of these\nstructures and pass it to @code{lt_dlloader_add}.  You can pass whatever\nyou like in the @var{dlloader_data} field, and it will be passed back as\nthe value of the first parameter to each of the functions specified in\nthe function pointer fields.\n@end deftypefn\n\n@deftypefn {Type} lt_module lt_module_open (@w{const char *@var{filename}})\nThe type of the loader function for an @code{lt_dlloader} module\nloader.  The value set in the dlloader_data field of the @code{struct\nlt_user_dlloader} structure will be passed into this function in the\n@var{loader_data} parameter.  Implementation of such a function should\nattempt to load the named module, and return an @code{lt_module}\nsuitable for passing in to the associated @code{lt_module_close} and\n@code{lt_sym_find} function pointers.  If the function fails it should\nreturn @code{NULL}, and set the error message with @code{lt_dlseterror}.\n@end deftypefn\n\n@deftypefn {Type} int lt_module_close (@w{lt_user_data @var{loader_data},} @w{lt_module @var{module}})\nThe type of the unloader function for a user defined module loader.\nImplementation of such a function should attempt to release\nany resources tied up by the @var{module} module, and then unload it\nfrom memory.  If the function fails for some reason, set the error\nmessage with @code{lt_dlseterror} and return non-zero.\n@end deftypefn\n\n@deftypefn {Type} {void *} lt_find_sym (@w{lt_module @var{module},} @w{const char *@var{symbol}})\nThe type of the symbol lookup function for a user defined module loader.\nImplementation of such a function should return the address of the named\n@var{symbol} in the module @var{module}, or else set the error message\nwith @code{lt_dlseterror} and return @code{NULL} if lookup fails.\n@end deftypefn\n\n@deftypefn {Type} int lt_dlloader_exit (@w{lt_user_data @var{loader_data}})\nThe type of the finalisation function for a user defined module loader.\nImplementation of such a function should free any resources associated\nwith the loader, including any user specified data in the\n@code{dlloader_data} field of the @code{lt_user_dlloader}.  If non-@code{NULL},\nthe function will be called by @code{lt_dlexit}, and\n@code{lt_dlloader_remove}.\n@end deftypefn\n\nFor example:\n\n@example\nint\nregister_myloader (void)\n@{\n  lt_user_dlloader dlloader;\n\n  /* User modules are responsible for their own initialisation. */\n  if (myloader_init () != 0)\n    return MYLOADER_INIT_ERROR;\n\n  dlloader.sym_prefix    = NULL;\n  dlloader.module_open   = myloader_open;\n  dlloader.module_close  = myloader_close;\n  dlloader.find_sym      = myloader_find_sym;\n  dlloader.dlloader_exit = myloader_exit;\n  dlloader.dlloader_data = (lt_user_data)myloader_function;\n\n  /* Add my loader as the default module loader. */\n  if (lt_dlloader_add (lt_dlloader_next (NULL), &dlloader,\n                       \"myloader\") != 0)\n    return ERROR;\n\n  return OK;\n@}\n@end example\n\nNote that if there is any initialisation required for the loader,\nit must be performed manually before the loader is registered --\nlibltdl doesn't handle user loader initialisation.\n\nFinalisation @emph{is} handled by libltdl however, and it is important\nto ensure the @code{dlloader_exit} callback releases any resources claimed\nduring the initialisation phase.\n\n@page\n@noindent\nlibltdl provides the following functions for writing your own module\nloaders:\n\n@deftypefun int lt_dlloader_add (@w{lt_dlloader *@var{place},} @\n  @w{lt_user_dlloader *@var{dlloader},} @w{const char *@var{loader_name}})\nAdd a new module loader to the list of all loaders, either as the\nlast loader (if @var{place} is @code{NULL}), else immediately before the\nloader passed as @var{place}.  @var{loader_name} will be returned by\n@code{lt_dlloader_name} if it is subsequently passed a newly\nregistered loader.  These @var{loader_name}s must be unique, or\n@code{lt_dlloader_remove} and @code{lt_dlloader_find} cannot\nwork.  Returns 0 for success.\n\n@example\n/* Make myloader be the last one. */\nif (lt_dlloader_add (NULL, myloader) != 0)\n  perror (lt_dlerror ());\n@end example\n@end deftypefun\n\n@deftypefun int lt_dlloader_remove (@w{const char *@var{loader_name}})\nRemove the loader identified by the unique name, @var{loader_name}.\nBefore this can succeed, all modules opened by the named loader must\nhave been closed.  Returns 0 for success, otherwise an error message can\nbe obtained from @code{lt_dlerror}.\n\n@example\n/* Remove myloader. */\nif (lt_dlloader_remove (\"myloader\") != 0)\n  perror (lt_dlerror ());\n@end example\n@end deftypefun\n\n@deftypefun {lt_dlloader *} lt_dlloader_next (@w{lt_dlloader *@var{place}})\nIterate over the module loaders, returning the first loader if @var{place} is\n@code{NULL}, and the next one on subsequent calls.  The handle is for use with\n@code{lt_dlloader_add}.\n\n@example\n/* Make myloader be the first one. */\nif (lt_dlloader_add (lt_dlloader_next (NULL), myloader) != 0)\n  return ERROR;\n@end example\n@end deftypefun\n\n@deftypefun {lt_dlloader *} lt_dlloader_find (@w{const char *@var{loader_name}})\nReturn the first loader with a matching @var{loader_name} identifier, or else\n@code{NULL}, if the identifier is not found.\n\nThe identifiers that may be used by libltdl itself, if the host\narchitecture supports them are @dfn{dlopen}@footnote{This is used for\nthe host dependent module loading API -- @code{shl_load} and\n@code{LoadLibrary} for example}, @dfn{dld} and @dfn{dlpreload}.\n\n@example\n/* Add a user loader as the next module loader to be tried if\n   the standard dlopen loader were to fail when lt_dlopening. */\nif (lt_dlloader_add (lt_dlloader_find (\"dlopen\"), myloader) != 0)\n  return ERROR;\n@end example\n@end deftypefun\n\n@deftypefun {const char *} lt_dlloader_name (@w{lt_dlloader *@var{place}})\nReturn the identifying name of @var{place}, as obtained from\n@code{lt_dlloader_next} or @code{lt_dlloader_find}.  If this function fails,\nit will return @code{NULL} and set an error for retrieval with\n@code{lt_dlerror}.\n@end deftypefun\n\n@deftypefun {lt_user_data *} lt_dlloader_data (@w{lt_dlloader *@var{place}})\nReturn the address of the @code{dlloader_data} of @var{place}, as\nobtained from @code{lt_dlloader_next} or @code{lt_dlloader_find}.  If\nthis function fails, it will return @code{NULL} and set an error for\nretrieval with @code{lt_dlerror}.\n@end deftypefun\n\n@subsection Error handling within user module loaders\n\n@deftypefun int lt_dladderror (@w{const char *@var{diagnostic}})\nThis function allows you to integrate your own error messages into\n@code{lt_dlerror}.  Pass in a suitable diagnostic message for return by\n@code{lt_dlerror}, and an error identifier for use with\n@code{lt_dlseterror} is returned.\n\nIf the allocation of an identifier fails, this function returns -1.\n\n@example\nint myerror = lt_dladderror (\"doh!\");\nif (myerror < 0)\n  perror (lt_dlerror ());\n@end example\n@end deftypefun\n\n@deftypefun int lt_dlseterror (@w{int @var{errorcode}})\nWhen writing your own module loaders, you should use this function to\nraise errors so that they are propagated through the @code{lt_dlerror}\ninterface.  All of the standard errors used by libltdl are declared in\n@file{ltdl.h}, or you can add more of your own with\n@code{lt_dladderror}.  This function returns 0 on success.\n\n@example\nif (lt_dlseterror (LTDL_ERROR_NO_MEMORY) != 0)\n  perror (lt_dlerror ());\n@end example\n@end deftypefun\n\n@node Distributing libltdl\n@section How to distribute libltdl with your package\n\nEven though libltdl is installed together with libtool, you may wish\nto include libltdl in the distribution of your package, for the\nconvenience of users of your package that don't have libtool or\nlibltdl installed, or if you are using features of a very new version\nof libltdl that you don't expect your users to have yet.  In such\ncases, you must decide what flavor of libltdl you want to use: a\nconvenience library or an installable libtool library.\n\nThe most simplistic way to add @code{libltdl} to your package is to\ncopy all the @file{libltdl} source files to a subdirectory within\nyour package and to build and link them along with the rest of your\nsources.  To help you do this, the m4 macros for Autoconf are\navailable in @file{ltdl.m4}.  You must ensure that they are available\nin @file{aclocal.m4} before you run Autoconf@footnote{@c\n@c\nWe used to recommend adding the contents of @file{ltdl.m4} to\n@file{acinclude.m4}, but with @command{aclocal} from a modern\nAutomake (1.8 or newer) and this release of libltdl that is not only\nunnecessary but makes it easy to forget to upgrade @file{acinclude.m4}\nif you move to a different release of libltdl.\n@c\n}.  Having made the macros available, you must add a call to the\n@samp{LTDL_INIT} macro (after the call to @samp{LT_INIT})\nto your package's @file{configure.ac} to\nperform the configure time checks required to build the library\ncorrectly.  Unfortunately, this method has problems if you then try to\nlink the package binaries with an installed libltdl, or a library that\ndepends on libltdl, because of the duplicate symbol definitions.  For\nexample, ultimately linking against two different versions of libltdl,\nor against both a local convenience library and an installed libltdl\nis bad.  Ensuring that only one copy of the libltdl sources are linked\ninto any program is left as an exercise for the reader.\n\n@defmac LT_CONFIG_LTDL_DIR (@var{directory})\nDeclare @var{directory} to be the location of the @code{libltdl}\nsource files, for @command{libtoolize --ltdl} to place\nthem. @xref{Invoking libtoolize}, for more details.  Provided that you\nadd an appropriate @code{LT_CONFIG_LTDL_DIR} call in your\n@file{configure.ac} before calling @command{libtoolize}, the\nappropriate @code{libltdl} files will be installed automatically.\n@end defmac\n\n@defmac LTDL_INIT (@var{options})\n@defmacx LT_WITH_LTDL\n@defmacx AC_WITH_LTDL\n@code{AC_WITH_LTDL} and @code{LT_WITH_LTDL} are deprecated names for\nolder versions of this macro; @command{autoupdate} will update your\n@file{configure.ac} file.\n\nThis macro adds the following options to the @command{configure}\nscript:\n\n@table @option\n@item --with-ltdl-include @var{installed-ltdl-header-dir}\nThe @code{LTDL_INIT} macro will look in the standard header file\nlocations to find the installed @code{libltdl} headers.  If\n@code{LTDL_INIT} can't find them by itself, the person who builds\nyour package can use this option to tell @command{configure} where\nthe installed @code{libltdl} headers are.\n\n@item --with-ltdl-lib @var{installed-ltdl-library-dir}\nSimilarly, the person building your package can use this option to\nhelp @command{configure} find the installed @file{libltdl.la}.\n\n@item --with-included-ltdl\nIf there is no installed @code{libltdl}, or in any case if the\nperson building your package would rather use the @code{libltdl}\nsources shipped with the package in the subdirectory named by\n@code{LT_CONFIG_LTDL_DIR}, they should pass this option to\n@command{configure}.\n@end table\n\nIf the @option{--with-included-ltdl} is not passed at\nconfigure time, and an installed @code{libltdl} is not\nfound@footnote{@c\n@c\nEven if libltdl is installed, @samp{LTDL_INIT} may fail\nto detect it if libltdl depends on symbols provided by libraries\nother than the C library.\n@c\n}, then @command{configure} will exit immediately with an error that\nasks the user to either specify the location of an installed\n@code{libltdl} using the @option{--with-ltdl-include} and\n@option{--with-ltdl-lib} options, or to build with the\n@code{libltdl} sources shipped with the package by passing\n@option{--with-included-ltdl}.\n\nIf an installed @code{libltdl} is found, then @code{LIBLTDL} is set to\nthe link flags needed to use it, and @code{LTDLINCL} to the preprocessor\nflags needed to find the installed headers, and @code{LTDLDEPS} will\nbe empty.  Note, however, that no version checking is performed.  You\nshould manually check for the @code{libltdl} features you need in\n@file{configure.ac}:\n\n@example\nLT_INIT([dlopen])\nLTDL_INIT\n\n# The lt_dladvise_init symbol was added with libtool-2.2\nif test yes != \"$with_included_ltdl\"; then\n  save_CFLAGS=$CFLAGS\n  save_LDFLAGS=$LDFLAGS\n  CFLAGS=\"$CFLAGS $LTDLINCL\"\n  LDFLAGS=\"$LDFLAGS $LIBLTDL\"\n  AC_CHECK_LIB([ltdl], [lt_dladvise_init],\n                [],\n        [AC_MSG_ERROR([installed libltdl is too old])])\n  LDFLAGS=$save_LDFLAGS\n  CFLAGS=$save_CFLAGS\nfi\n@end example\n\n@var{options} may include no more than one of the following build\nmodes depending on how you want your project to build @code{libltdl}:\n@samp{nonrecursive}, @samp{recursive}, or @samp{subproject}.  In order\nfor @command{libtoolize} to detect this option correctly, if you\nsupply one of these arguments, they must be given literally (i.e.,\nmacros or shell variables that expand to the correct ltdl mode will not\nwork).\n\n@table @samp\n@item nonrecursive\nThis is how the Libtool project distribution builds the @code{libltdl}\nwe ship and install.  If you wish to use Automake to build\n@code{libltdl} without invoking a recursive make to descend into the\n@code{libltdl} subdirectory, then use this option.  You will need to set\nyour configuration up carefully to make this work properly, and you will\nneed releases of Autoconf and Automake that support\n@code{subdir-objects} and @code{LIBOBJDIR} properly.  In your\n@file{configure.ac}, add:\n\n@example\nAM_INIT_AUTOMAKE([subdir-objects])\nAC_CONFIG_HEADERS([config.h])\nLT_CONFIG_LTDL_DIR([libltdl])\nLT_INIT([dlopen])\nLTDL_INIT([nonrecursive])\n@end example\n\n@noindent\nYou @emph{have to} use a config header, but it may have a name different\nthan @file{config.h}.\n\nAlso, add the following near the top of your @file{Makefile.am}:\n\n@example\nAM_CPPFLAGS =\nAM_LDFLAGS =\n\nBUILT_SOURCES =\nEXTRA_DIST =\nCLEANFILES =\nMOSTLYCLEANFILES =\n\ninclude_HEADERS =\nnoinst_LTLIBRARIES =\nlib_LTLIBRARIES =\nEXTRA_LTLIBRARIES =\n\ninclude libltdl/ltdl.mk\n@end example\n\n@noindent\nUnless you build no other libraries from this @file{Makefile.am},\nyou will also need to change @code{lib_LTLIBRARIES} to assign with\n@samp{+=} so that the @code{libltdl} targets declared in\n@file{ltdl.mk} are not overwritten.\n\n@item recursive\nThis build mode still requires that you use Automake, but (in contrast\nwith @samp{nonrecursive}) uses the more usual device of starting another\n@code{make} process in the @file{libltdl} subdirectory.  To use this\nmode, you should add to your @file{configure.ac}:\n\n@example\nAM_INIT_AUTOMAKE\nAC_CONFIG_HEADERS([config.h])\nLT_CONFIG_LTDL_DIR([libltdl])\nLT_INIT([dlopen])\nLTDL_INIT([recursive])\nAC_CONFIG_FILES([libltdl/Makefile])\n@end example\n\n@noindent\nAgain, you @emph{have to} use a config header, but it may have a name\ndifferent than @file{config.h} if you like.\n\nAlso, add this to your @file{Makefile.am}:\n\n@example\nSUBDIRS = libltdl\n@end example\n\n@item subproject\nThis mode is the default unless you explicitly add @code{recursive} or\n@code{nonrecursive} to your @code{LTDL_INIT} options;  @code{subproject}\nis the only mode supported by previous releases of libltdl.  Even if you\ndo not use Autoconf in the parent project, then, in @samp{subproject}\nmode, still @code{libltdl} contains all the necessary files to configure\nand build itself -- you just need to arrange for your build system to\ncall @file{libltdl/configure} with appropriate options, and then run\n@code{make} in the @code{libltdl} subdirectory.\n\nIf you @emph{are} using Autoconf and Automake, then you will need to add\nthe following to your @file{configure.ac}:\n\n@example\nLT_CONFIG_LTDL_DIR([libltdl])\nLTDL_INIT\n@end example\n\n@noindent\nand to @file{Makefile.am}:\n\n@example\nSUBDIRS = libltdl\n@end example\n@end table\n\nAside from setting the libltdl build mode, there are other keywords\nthat you can pass to @code{LTDL_INIT} to modify its behavior when\n@option{--with-included-ltdl} has been given:\n\n@table @samp\n@item convenience\nThis is the default unless you explicitly add @code{installable} to\nyour @code{LTDL_INIT} options.\n\nThis keyword will cause options to be passed to the @command{configure}\nscript in the subdirectory named by @code{LT_CONFIG_LTDL_DIR}\nto cause it to be built as a convenience library.  If you're not\nusing automake, you will need to define @code{top_build_prefix},\n@code{top_builddir}, and @code{top_srcdir} in your makefile so that\n@code{LIBLTDL}, @code{LTDLDEPS}, and @code{LTDLINCL} expand correctly.\n\nOne advantage of the convenience library is that it is not installed,\nso the fact that you use @code{libltdl} will not be apparent to the\nuser, and it won't overwrite a pre-installed version of\n@code{libltdl} the system might already have in the installation\ndirectory.  On the other hand, if you want to upgrade @code{libltdl}\nfor any reason (e.g.@: a bugfix) you'll have to recompile your package\ninstead of just replacing the shared installed version of\n@code{libltdl}.  However, if your programs or libraries are linked\nwith other libraries that use such a pre-installed version of\n@code{libltdl}, you may get linker errors or run-time crashes.\nAnother problem is that you cannot link the convenience library into\nmore than one libtool library, then link a single program with those\nlibraries, because you may get duplicate symbols.  In general you can\nsafely use the convenience library in programs that don't depend on\nother libraries that might use @code{libltdl} too.\n\n@item installable\nThis keyword will pass options to the @command{configure}\nscript in the subdirectory named by @code{LT_CONFIG_LTDL_DIR}\nto cause it to be built as an installable library.  If you're not\nusing automake, you will need to define @code{top_build_prefix},\n@code{top_builddir} and @code{top_srcdir} in your makefile so that\n@code{LIBLTDL}, @code{LTDLDEPS}, and @code{LTDLINCL} are expanded\nproperly.\n\nBe aware that you could overwrite another @code{libltdl} already\ninstalled to the same directory if you use this option.\n@end table\n@end defmac\n\nWhatever method you use, @samp{LTDL_INIT} will define the shell variable\n@code{LIBLTDL} to the link flag that you should use to link with\n@code{libltdl}, the shell variable @code{LTDLDEPS} to the files that\ncan be used as a dependency in @file{Makefile} rules, and the shell\nvariable @code{LTDLINCL} to the preprocessor flag that you should use to\ncompile programs that include @file{ltdl.h}. So, when you want to link a\nprogram with libltdl, be it a convenience, installed or installable\nlibrary, just use @samp{$(LTDLINCL)} for preprocessing and compilation,\nand @samp{$(LIBLTDL)} for linking.\n\n@itemize @bullet\n@item\nIf your package is built using an installed version of @code{libltdl},\n@code{LIBLTDL} will be set to the compiler flags needed to link against\nthe installed library, @code{LTDLDEPS} will be empty, and @code{LTDLINCL}\nwill be set to the compiler flags needed to find the @code{libltdl}\nheader files.\n\n@item\nIf your package is built using the convenience libltdl, @code{LIBLTDL}\nand @code{LTDLDEPS} will be the pathname for the convenience version of\nlibltdl (starting with @samp{$@{top_builddir@}/} or\n@samp{$@{top_build_prefix@}}) and @code{LTDLINCL} will be @option{-I}\nfollowed by the directory that contains @file{ltdl.h} (starting with\n@samp{$@{top_srcdir@}/}).\n\n@item\nIf an installable version of the included @code{libltdl} is being\nbuilt, its pathname starting with @samp{$@{top_builddir@}/} or\n@samp{$@{top_build_prefix@}}, will be stored in @code{LIBLTDL} and\n@code{LTDLDEPS}, and @code{LTDLINCL} will be set just like in the case of\nconvenience library.\n@end itemize\n\nYou should probably also use the @samp{dlopen} option to @code{LT_INIT}\nin your @file{configure.ac}, otherwise libtool will assume no dlopening\nmechanism is supported, and revert to dlpreopening, which is probably not\nwhat you want.  Avoid using the @option{-static},\n@option{-static-libtool-libs}, or @option{-all-static}\nswitches when linking programs with libltdl.  This will not work on\nall platforms, because the dlopening functions may not be available\nfor static linking.\n\nThe following example shows you how to embed an installable libltdl in\nyour package.  In order to use the convenience variant, just replace the\n@code{LTDL_INIT} option @samp{installable} with @samp{convenience}.  We\nassume that libltdl was embedded using @samp{libtoolize --ltdl}.\n\nconfigure.ac:\n@example\n...\n# Name the subdirectory that contains libltdl sources\nLT_CONFIG_LTDL_DIR([libltdl])\n\n# Configure libtool with dlopen support if possible\nLT_INIT([dlopen])\n\n# Enable building of the installable libltdl library\nLTDL_INIT([installable])\n...\n@end example\n\nMakefile.am:\n@example\n...\nSUBDIRS = libltdl\n\nAM_CPPFLAGS = $(LTDLINCL)\n\nmyprog_LDFLAGS = -export-dynamic\nmyprog_LDADD = $(LIBLTDL) -dlopen self -dlopen foo1.la\nmyprog_DEPENDENCIES = $(LTDLDEPS) foo1.la\n...\n@end example\n\n@defmac LTDL_INSTALLABLE\n@defmacx AC_LIBLTDL_INSTALLABLE\nThese macros are deprecated, the @samp{installable} option to\n@code{LTDL_INIT} should be used instead.\n@end defmac\n\n@defmac LTDL_CONVENIENCE\n@defmacx AC_LIBLTDL_CONVENIENCE\nThese macros are deprecated, the @samp{convenience} option to\n@code{LTDL_INIT} should be used instead.\n@end defmac\n\n\n@node Trace interface\n@chapter Libtool's trace interface\n@cindex trace interface\n@cindex autoconf traces\n\nThis section describes macros whose sole purpose is to be traced using\nAutoconf's @option{--trace} option (@pxref{autoconf Invocation, , The\nAutoconf Manual, autoconf, The Autoconf Manual}) to query the Libtool\nconfiguration of a project.  These macros are called by Libtool\ninternals and should never be called by user code; they should only be\ntraced.\n\n@defmac LT_SUPPORTED_TAG (@var{tag})\nThis macro is called once for each language enabled in the package.  Its\nonly argument, @var{tag}, is the tag-name corresponding to the language\n(@pxref{Tags}).\n\nYou can therefore retrieve the list of all tags enabled in a project\nusing the following command:\n@example\nautoconf --trace 'LT_SUPPORTED_TAG:$1'\n@end example\n@end defmac\n\n\n@node FAQ\n@chapter Frequently Asked Questions about libtool\n\nThis chapter covers some questions that often come up on the mailing\nlists.\n\n@menu\n* Stripped link flags::         Dropped flags when creating a library\n@end menu\n\n@node Stripped link flags\n@section Why does libtool strip link flags when creating a library?\n\nWhen creating a shared library, but not when compiling or creating\na program, @command{libtool} drops some flags from the command line\nprovided by the user.  This is done because flags unknown to\n@command{libtool} may interfere with library creation or require\nadditional support from @command{libtool}, and because omitting\nflags is usually the conservative choice for a successful build.\n\nIf you encounter flags that you think are useful to pass, as a\nwork-around you can prepend flags with @code{-Wc,} or @code{-Xcompiler }\nto allow them to be passed through to the compiler driver\n(@pxref{Link mode}).  Another possibility is to add flags already\nto the compiler command at @command{configure} run time:\n\n@example\n./configure CC='gcc -m64'\n@end example\n\nIf you think @command{libtool} should let some flag through by default,\nhere's how you can test such an inclusion: grab the Libtool development\ntree, edit the @file{ltmain.in} file in the @file{libltdl/config}\nsubdirectory to pass through the flag (search for @samp{Flags to be\npassed through}), re-bootstrap and build with the flags in question\nadded to @code{LDFLAGS}, @code{CFLAGS}, @code{CXXFLAGS}, etc. on the\n@command{configure} command line as appropriate.  Run the testsuite\nas described in the @file{README} file and report results to\n@value{BUGADDR}.\n\n@node Troubleshooting\n@chapter Troubleshooting\n@cindex troubleshooting\n@cindex problems, solving\n@cindex solving problems\n@cindex problems, blaming somebody else for\n\nLibtool is under constant development, changing to remain up-to-date\nwith modern operating systems.  If libtool doesn't work the way you\nthink it should on your platform, you should read this chapter to help\ndetermine what the problem is, and how to resolve it.\n\n@menu\n* Libtool test suite::          Libtool's self-tests.\n* Reporting bugs::              How to report problems with libtool.\n@end menu\n\n@node Libtool test suite\n@section The libtool test suite\n@cindex test suite\n\nLibtool comes with two integrated sets of tests to check that your build\nis sane, that test its capabilities, and report obvious bugs in the\nlibtool program.  These tests, too, are constantly evolving, based on\npast problems with libtool, and known deficiencies in other operating\nsystems.\n\nAs described in the @file{README} file, you may run @kbd{make -k check}\nafter you have built libtool (possibly before you install it)\nto make sure that it meets basic functional requirements.\n\n@menu\n* Test descriptions::           The contents of the old test suite.\n* When tests fail::             What to do when a test fails.\n@end menu\n\n@node Test descriptions\n@subsection Description of test suite\n\nHere is a list of the current programs in the old test suite, and what\nthey test for:\n\n@table @file\n\n@item cdemo-conf.test\n@itemx cdemo-make.test\n@itemx cdemo-exec.test\n@itemx cdemo-static.test\n@itemx cdemo-static-make.test\n@itemx cdemo-static-exec.test\n@itemx cdemo-shared.test\n@itemx cdemo-shared-make.test\n@itemx cdemo-shared-exec.test\n@itemx cdemo-undef.test\n@itemx cdemo-undef-make.test\n@itemx cdemo-undef-exec.test\n@pindex cdemo-conf.test\n@pindex cdemo-make.test\n@pindex cdemo-exec.test\n@pindex cdemo-static.test\n@pindex cdemo-static-make.test\n@pindex cdemo-static-exec.test\n@pindex cdemo-shared.test\n@pindex cdemo-shared-make.test\n@pindex cdemo-shared-exec.test\n@pindex cdemo-undef.test\n@pindex cdemo-undef-make.test\n@pindex cdemo-undef-exec.test\nThese programs check to see that the @file{tests/cdemo} subdirectory of\nthe libtool distribution can be configured and built correctly.\n\nThe @file{tests/cdemo} subdirectory contains a demonstration of libtool\nconvenience libraries, a mechanism that allows build-time static\nlibraries to be created, in a way that their components can be later\nlinked into programs or other libraries, even shared ones.\n\nThe tests matching @file{cdemo-*make.test} and @file{cdemo-*exec.test}\nare executed three times, under three different libtool configurations:\n@file{cdemo-conf.test} configures @file{cdemo/libtool} to build both\nstatic and shared libraries (the default for platforms that support\nboth), @file{cdemo-static.test} builds only static libraries\n(@samp{--disable-shared}), and @file{cdemo-shared.test} builds only\nshared libraries (@samp{--disable-static}).\n\nThe test @file{cdemo-undef.test} tests the generation of shared\nlibraries with undefined symbols on systems that allow this.\n\n@item demo-conf.test\n@itemx demo-make.test\n@itemx demo-exec.test\n@itemx demo-inst.test\n@itemx demo-unst.test\n@itemx demo-static.test\n@itemx demo-static-make.test\n@itemx demo-static-exec.test\n@itemx demo-static-inst.test\n@itemx demo-static-unst.test\n@itemx demo-shared.test\n@itemx demo-shared-make.test\n@itemx demo-shared-exec.test\n@itemx demo-shared-inst.test\n@itemx demo-shared-unst.test\n@itemx demo-nofast.test\n@itemx demo-nofast-make.test\n@itemx demo-nofast-exec.test\n@itemx demo-nofast-inst.test\n@itemx demo-nofast-unst.test\n@itemx demo-pic.test\n@itemx demo-pic-make.test\n@itemx demo-pic-exec.test\n@itemx demo-nopic.test\n@itemx demo-nopic-make.test\n@itemx demo-nopic-exec.test\n@pindex demo-conf.test\n@pindex demo-make.test\n@pindex demo-exec.test\n@pindex demo-inst.test\n@pindex demo-unst.test\n@pindex demo-static.test\n@pindex demo-static-make.test\n@pindex demo-static-exec.test\n@pindex demo-static-inst.test\n@pindex demo-static-unst.test\n@pindex demo-shared.test\n@pindex demo-shared-make.test\n@pindex demo-shared-exec.test\n@pindex demo-shared-inst.test\n@pindex demo-shared-unst.test\n@pindex demo-nofast.test\n@pindex demo-nofast-make.test\n@pindex demo-nofast-exec.test\n@pindex demo-nofast-inst.test\n@pindex demo-nofast-unst.test\n@pindex demo-pic.test\n@pindex demo-pic-make.test\n@pindex demo-pic-exec.test\n@pindex demo-nopic.test\n@pindex demo-nopic-make.test\n@pindex demo-nopic-exec.test\nThese programs check to see that the @file{tests/demo} subdirectory of\nthe libtool distribution can be configured, built, installed, and\nuninstalled correctly.\n\nThe @file{tests/demo} subdirectory contains a demonstration of a trivial\npackage that uses libtool.  The tests matching @file{demo-*make.test},\n@file{demo-*exec.test}, @file{demo-*inst.test} and\n@file{demo-*unst.test} are executed four times, under four different\nlibtool configurations: @file{demo-conf.test} configures\n@file{demo/libtool} to build both static and shared libraries,\n@file{demo-static.test} builds only static libraries\n(@option{--disable-shared}), and @file{demo-shared.test} builds only\nshared libraries (@option{--disable-static}).\n@file{demo-nofast.test} configures @file{demo/libtool} to\ndisable the fast-install mode (@option{--enable-fast-install=no}).\n@file{demo-pic.test} configures @file{demo/libtool} to\nprefer building PIC code (@option{--with-pic}), @file{demo-nopic.test}\nto prefer non-PIC code (@option{--without-pic}).\n\n@item demo-deplibs.test\n@pindex demo-deplibs.test\nMany systems cannot link static libraries into shared libraries.\nlibtool uses a @code{deplibs_check_method} to prevent such cases.\nThis tests checks whether libtool's @code{deplibs_check_method}\nworks properly.\n\n@item demo-hardcode.test\n@pindex demo-hardcode.test\nOn all systems with shared libraries, the location of the library can be\nencoded in executables that are linked against it @pxref{Linking\nexecutables}.  This test checks under what conditions your system\nlinker hardcodes the library location, and guarantees that they\ncorrespond to libtool's own notion of how your linker behaves.\n\n@item demo-relink.test\n@itemx depdemo-relink.test\n@pindex demo-relink.test\n@pindex depdemo-relink.test\nThese tests check whether variable @code{shlibpath_overrides_runpath} is\nproperly set.  If the test fails, it will indicate what the variable should\nhave been set to.\n\n@item demo-noinst-link.test\n@pindex demo-noinst-link.test\nChecks whether libtool will not try to link with a previously installed\nversion of a library when it should be linking with a just-built one.\n\n@item depdemo-conf.test\n@itemx depdemo-make.test\n@itemx depdemo-exec.test\n@itemx depdemo-inst.test\n@itemx depdemo-unst.test\n@itemx depdemo-static.test\n@itemx depdemo-static-make.test\n@itemx depdemo-static-exec.test\n@itemx depdemo-static-inst.test\n@itemx depdemo-static-unst.test\n@itemx depdemo-shared.test\n@itemx depdemo-shared-make.test\n@itemx depdemo-shared-exec.test\n@itemx depdemo-shared-inst.test\n@itemx depdemo-shared-unst.test\n@itemx depdemo-nofast.test\n@itemx depdemo-nofast-make.test\n@itemx depdemo-nofast-exec.test\n@itemx depdemo-nofast-inst.test\n@itemx depdemo-nofast-unst.test\n@pindex depdemo-conf.test\n@pindex depdemo-make.test\n@pindex depdemo-exec.test\n@pindex depdemo-inst.test\n@pindex depdemo-unst.test\n@pindex depdemo-static.test\n@pindex depdemo-static-make.test\n@pindex depdemo-static-exec.test\n@pindex depdemo-static-inst.test\n@pindex depdemo-static-unst.test\n@pindex depdemo-shared.test\n@pindex depdemo-shared-make.test\n@pindex depdemo-shared-exec.test\n@pindex depdemo-shared-inst.test\n@pindex depdemo-shared-unst.test\n@pindex depdemo-nofast.test\n@pindex depdemo-nofast-make.test\n@pindex depdemo-nofast-exec.test\n@pindex depdemo-nofast-inst.test\n@pindex depdemo-nofast-unst.test\nThese programs check to see that the @file{tests/depdemo} subdirectory\nof the libtool distribution can be configured, built, installed, and\nuninstalled correctly.\n\nThe @file{tests/depdemo} subdirectory contains a demonstration of\ninter-library dependencies with libtool.  The test programs link some\ninterdependent libraries.\n\nThe tests matching @file{depdemo-*make.test}, @file{depdemo-*exec.test},\n@file{depdemo-*inst.test} and @file{depdemo-*unst.test} are executed\nfour times, under four different libtool configurations:\n@file{depdemo-conf.test} configures @file{depdemo/libtool} to build both\nstatic and shared libraries, @file{depdemo-static.test} builds only static\nlibraries (@option{--disable-shared}), and @file{depdemo-shared.test} builds\nonly shared libraries (@option{--disable-static}).\n@file{depdemo-nofast.test} configures @file{depdemo/libtool} to\ndisable the fast-install mode (@option{--enable-fast-install=no}).\n\n@item mdemo-conf.test\n@itemx mdemo-make.test\n@itemx mdemo-exec.test\n@itemx mdemo-inst.test\n@itemx mdemo-unst.test\n@itemx mdemo-static.test\n@itemx mdemo-static-make.test\n@itemx mdemo-static-exec.test\n@itemx mdemo-static-inst.test\n@itemx mdemo-static-unst.test\n@itemx mdemo-shared.test\n@itemx mdemo-shared-make.test\n@itemx mdemo-shared-exec.test\n@itemx mdemo-shared-inst.test\n@itemx mdemo-shared-unst.test\n@pindex mdemo-conf.test\n@pindex mdemo-make.test\n@pindex mdemo-exec.test\n@pindex mdemo-inst.test\n@pindex mdemo-unst.test\n@pindex mdemo-static.test\n@pindex mdemo-static-make.test\n@pindex mdemo-static-exec.test\n@pindex mdemo-static-inst.test\n@pindex mdemo-static-unst.test\n@pindex mdemo-shared.test\n@pindex mdemo-shared-make.test\n@pindex mdemo-shared-exec.test\n@pindex mdemo-shared-inst.test\n@pindex mdemo-shared-unst.test\nThese programs check to see that the @file{tests/mdemo} subdirectory of\nthe libtool distribution can be configured, built, installed, and\nuninstalled correctly.\n\nThe @file{tests/mdemo} subdirectory contains a demonstration of a\npackage that uses libtool and the system independent dlopen wrapper\n@file{libltdl} to load modules.  The library @file{libltdl} provides a\ndlopen wrapper for various platforms (POSIX)\nincluding support for dlpreopened modules (@pxref{Dlpreopening}).\n\nThe tests matching @file{mdemo-*make.test}, @file{mdemo-*exec.test},\n@file{mdemo-*inst.test} and @file{mdemo-*unst.test} are executed\nthree times, under three different libtool configurations:\n@file{mdemo-conf.test} configures @file{mdemo/libtool} to build both\nstatic and shared libraries, @file{mdemo-static.test} builds only static\nlibraries (@option{--disable-shared}), and @file{mdemo-shared.test} builds\nonly shared libraries (@option{--disable-static}).\n\n@item mdemo-dryrun.test\n@pindex mdemo-dryrun.test\nThis test checks whether libtool's @option{--dry-run} mode works properly.\n\n@item mdemo2-conf.test\n@itemx mdemo2-exec.test\n@itemx mdemo2-make.test\n@pindex mdemo2-conf.test\n@pindex mdemo2-exec.test\n@pindex mdemo2-make.test\nThese programs check to see that the @file{tests/mdemo2} subdirectory of\nthe libtool distribution can be configured, built, and executed\ncorrectly.\n\nThe @file{tests/mdemo2} directory contains a demonstration of a package\nthat attempts to link with a library (from the @file{tests/mdemo}\ndirectory) that itself does dlopening of libtool modules.\n\n@item link.test\n@pindex link.test\nThis test guarantees that linking directly against a non-libtool static\nlibrary works properly.\n\n@item link-2.test\n@pindex link-2.test\nThis test makes sure that files ending in @file{.lo} are never linked\ndirectly into a program file.\n\n@item nomode.test\n@pindex nomode.test\nCheck whether we can actually get help for libtool.\n\n@item objectlist.test\n@pindex objectlist.test\nCheck that a nonexistent objectlist file is properly detected.\n\n@item pdemo-conf.test\n@itemx pdemo-make.test\n@itemx pdemo-exec.test\n@itemx pdemo-inst.test\n@pindex pdemo-conf.test\n@pindex pdemo-make.test\n@pindex pdemo-exec.test\n@pindex pdemo-inst.test\nThese programs check to see that the @file{tests/pdemo} subdirectory of\nthe libtool distribution can be configured, built, and executed\ncorrectly.\n\nThe @file{pdemo-conf.test} lowers the @code{max_cmd_len} variable in the\ngenerated libtool script to test the measures to evade command line\nlength limitations.\n\n@item quote.test\n@pindex quote.test\nThis program checks libtool's metacharacter quoting.\n\n@item sh.test\n@pindex sh.test\nChecks for some nonportable or dubious or undesired shell constructs in\nshell scripts.\n\n@item suffix.test\n@pindex suffix.test\nWhen other programming languages are used with libtool (@pxref{Other\nlanguages}), the source files may end in suffixes other than @file{.c}.\nThis test validates that libtool can handle suffixes for all the file\ntypes that it supports, and that it fails when the suffix is invalid.\n\n@item tagdemo-conf.test\n@itemx tagdemo-make.test\n@itemx tagdemo-exec.test\n@itemx tagdemo-static.test\n@itemx tagdemo-static-make.test\n@itemx tagdemo-static-exec.test\n@itemx tagdemo-shared.test\n@itemx tagdemo-shared-make.test\n@itemx tagdemo-shared-exec.test\n@itemx tagdemo-undef.test\n@itemx tagdemo-undef-make.test\n@itemx tagdemo-undef-exec.test\n@pindex tagdemo-conf.test\n@pindex tagdemo-make.test\n@pindex tagdemo-exec.test\n@pindex tagdemo-static.test\n@pindex tagdemo-static-make.test\n@pindex tagdemo-static-exec.test\n@pindex tagdemo-shared.test\n@pindex tagdemo-shared-make.test\n@pindex tagdemo-shared-exec.test\n@pindex tagdemo-undef.test\n@pindex tagdemo-undef-make.test\n@pindex tagdemo-undef-exec.test\nThese programs check to see that the @file{tests/tagdemo} subdirectory\nof the libtool distribution can be configured, built, and executed\ncorrectly.\n\nThe @file{tests/tagdemo} directory contains a demonstration of a package\nthat uses libtool's multi-language support through configuration tags.\nIt generates a library from C++ sources, which is then linked to a C++\nprogram.\n\n@item f77demo-conf.test\n@itemx f77demo-make.test\n@itemx f77demo-exec.test\n@itemx f77demo-static.test\n@itemx f77demo-static-make.test\n@itemx f77demo-static-exec.test\n@itemx f77demo-shared.test\n@itemx f77demo-shared-make.test\n@itemx f77demo-shared-exec.test\n@pindex f77demo-conf.test\n@pindex f77demo-make.test\n@pindex f77demo-exec.test\n@pindex f77demo-static.test\n@pindex f77demo-static-make.test\n@pindex f77demo-static-exec.test\n@pindex f77demo-shared.test\n@pindex f77demo-shared-make.test\n@pindex f77demo-shared-exec.test\nThese programs check to see that the @file{tests/f77demo} subdirectory\nof the libtool distribution can be configured, built, and executed\ncorrectly.\n\nThe @file{tests/f77demo} tests test Fortran 77 support in libtool by\ncreating libraries from Fortran 77 sources, and mixed Fortran and C\nsources, and a Fortran 77 program to use the former library, and a C\nprogram to use the latter library.\n\n@item fcdemo-conf.test\n@itemx fcdemo-make.test\n@itemx fcdemo-exec.test\n@itemx fcdemo-static.test\n@itemx fcdemo-static-make.test\n@itemx fcdemo-static-exec.test\n@itemx fcdemo-shared.test\n@itemx fcdemo-shared-make.test\n@itemx fcdemo-shared-exec.test\n@pindex fcdemo-conf.test\n@pindex fcdemo-make.test\n@pindex fcdemo-exec.test\n@pindex fcdemo-static.test\n@pindex fcdemo-static-make.test\n@pindex fcdemo-static-exec.test\n@pindex fcdemo-shared.test\n@pindex fcdemo-shared-make.test\n@pindex fcdemo-shared-exec.test\nThese programs check to see that the @file{tests/fcdemo} subdirectory\nof the libtool distribution can be configured, built, and executed\ncorrectly.\n\nThe @file{tests/fcdemo} is similar to the @file{tests/f77demo}\ndirectory, except that Fortran 90 is used in combination with the\n@samp{FC} interface provided by Autoconf and Automake.\n\n@end table\n\nThe new, Autotest-based test suite uses keywords to classify certain\ntest groups:\n\n@table @samp\n@item CXX\n@itemx F77\n@itemx FC\n@itemx GCJ\nThe test group exercises one of these @command{libtool} language tags.\n\n@item autoconf\n@itemx automake\nThese keywords denote that the respective external program is needed\nby the test group.  The tests are typically skipped if the program is\nnot installed.  The @samp{automake} keyword may also denote use of the\n@command{aclocal} program.\n\n@item interactive\nThis test group may require user interaction on some systems.  Typically,\nthis means closing a popup window about a DLL load error on Windows.\n\n@item libltdl\nDenote that the @file{libltdl} library is exercised by the test group.\n\n@item libtool\n@itemx libtoolize\nDenote that the @command{libtool} or @command{libtoolize} scripts are\nexercised by the test group, respectively.\n\n@item recursive\nDenote that this test group may recursively re-invoke the test suite\nitself, with changed settings and maybe a changed @command{libtool}\nscript.  You may use the @env{INNER_TESTSUITEFLAGS} variable to pass\nadditional settings to this recursive invocation.  Typically, recursive\ninvocations delimit the set of tests with another keyword, for example\nby passing @code{-k libtool} right before the expansion of the\n@env{INNER_TESTSUITEFLAGS} variable (without an intervening space, so\nyou get the chance for further delimitation).\n\nTest groups with the keyword @samp{recursive} should not be denoted with\nkeywords, in order to avoid infinite recursion.  As a consequence,\nrecursive test groups themselves should never require user interaction,\nwhile the test groups they invoke may do so.\n@end table\n\n@cindex @samp{check-interactive}\n@cindex @samp{check-noninteractive}\nThere is a convenience target @samp{check-noninteractive} that runs\nall tests from both test suites that do not cause user interaction on\nWindows.  Conversely, the target @samp{check-interactive} runs the\ncomplement of tests and might require closing popup windows about DLL\nload errors on Windows.\n\n\n@node When tests fail\n@subsection When tests fail\n@cindex failed tests\n@cindex tests, failed\n\nWhen the tests in the old test suite are run via @command{make check},\noutput is caught in per-test @file{tests/@var{test-name}.log} files\nand summarized in the @file{test-suite.log} file.  The exit status of each\nprogram tells the @file{Makefile} whether or not the test succeeded.\n\nIf a test fails, it means that there is either a programming error in\nlibtool, or in the test program itself.\n\nTo investigate a particular test, you may run it directly, as you would\na normal program.  When the test is invoked in this way, it produces\noutput that may be useful in determining what the problem is.\n\nThe new, Autotest-based test suite produces as output a file\n@file{tests/testsuite.log} that contains information about failed\ntests.\n\nYou can pass options to the test suite through the @command{make}\nvariable @env{TESTSUITEFLAGS} (@pxref{testsuite Invocation, ,\nThe Autoconf Manual, autoconf, The Autoconf Manual}).\n\n\n@node Reporting bugs\n@section Reporting bugs\n@cindex bug reports\n@cindex reporting bugs\n@cindex problem reports\n\nIf you think you have discovered a bug in libtool, you should think\ntwice: the libtool maintainer is notorious for passing the buck (or\nmaybe that should be ``passing the bug'').  Libtool was invented to fix\nknown deficiencies in shared library implementations, so, in a way, most\nof the bugs in libtool are actually bugs in other operating systems.\nHowever, the libtool maintainer would definitely be happy to add support\nfor somebody else's buggy operating system.  [I wish there was a good\nway to do winking smiley-faces in Texinfo.]\n\nGenuine bugs in libtool include problems with shell script portability,\ndocumentation errors, and failures in the test suite (@pxref{Libtool\ntest suite}).\n\nFirst, check the documentation and help screens to make sure that the\nbehaviour you think is a problem is not already mentioned as a feature.\n\nThen, you should read the Emacs guide to reporting bugs (@pxref{Bugs, ,\nReporting Bugs, emacs, The Emacs Manual}).  Some of the details\nlisted there are specific to Emacs, but the principle behind them is a\ngeneral one.\n\nFinally, send a bug report to @value{BUGADDR} with any appropriate\n@emph{facts}, such as test suite output (@pxref{When tests fail}), all\nthe details needed to reproduce the bug, and a brief description of why\nyou think the behaviour is a bug.  Be sure to include the word\n``libtool'' in the subject line, as well as the version number you are\nusing (which can be found by typing @kbd{libtool --version}).\n\n@node Maintaining\n@chapter Maintenance notes for libtool\n\nThis chapter contains information that the libtool maintainer finds\nimportant.  It will be of no use to you unless you are considering\nporting libtool to new systems, or writing your own libtool.\n\n@menu\n* New ports::                   How to port libtool to new systems.\n* Tested platforms::            When libtool was last tested.\n* Platform quirks::             Information about different library systems.\n* libtool script contents::     Configuration information that libtool uses.\n* Cheap tricks::                Making libtool maintainership easier.\n@end menu\n\n@node New ports\n@section Porting libtool to new systems\n\nBefore you embark on porting libtool to an unsupported system, it is\nworthwhile to send e-mail to @value{MAILLIST}, to make sure that you are\nnot duplicating existing work.\n\nIf you find that any porting documentation is missing, please complain!\nComplaints with patches and improvements to the documentation, or to\nlibtool itself, are more than welcome.\n\n@menu\n* Information sources::         Where to find relevant documentation\n* Porting inter-library dependencies::  Implementation details explained\n@end menu\n\n@node Information sources\n@subsection Information sources\n\nOnce it is clear that a new port is necessary, you'll generally need the\nfollowing information:\n\n@table @asis\n@item canonical system name\nYou need the output of @code{config.guess} for this system, so that you\ncan make changes to the libtool configuration process without affecting\nother systems.\n\n@item man pages for @command{ld} and @command{cc}\nThese generally describe what flags are used to generate PIC, to create\nshared libraries, and to link against only static libraries.  You may\nneed to follow some cross references to find the information that is\nrequired.\n\n@item man pages for @command{ld.so}, @command{rtld}, or equivalent\nThese are a valuable resource for understanding how shared libraries are\nloaded on the system.\n\n@item man page for @command{ldconfig}, or equivalent\nThis page usually describes how to install shared libraries.\n\n@item output from @kbd{ls -l /lib /usr/lib}\nThis shows the naming convention for shared libraries on the system,\nincluding what names should be symbolic links.\n\n@item any additional documentation\nSome systems have special documentation on how to build and install\nshared libraries.\n@end table\n\nIf you know how to program the Bourne shell, then you can complete the\nport yourself; otherwise, you'll have to find somebody with the relevant\nskills who will do the work.  People on the libtool mailing list are\nusually willing to volunteer to help you with new ports, so you can send\nthe information to them.\n\nTo do the port yourself, you'll definitely need to modify the\n@code{libtool.m4} macros to make platform-specific changes to\nthe configuration process.  You should search that file for the\n@code{PORTME} keyword, which will give you some hints on what you'll\nneed to change.  In general, all that is involved is modifying the\nappropriate configuration variables (@pxref{libtool script contents}).\n\nYour best bet is to find an already-supported system that is similar to\nyours, and make your changes based on that.  In some cases, however,\nyour system will differ significantly from every other supported system,\nand it may be necessary to add new configuration variables, and modify\nthe @code{ltmain.in} script accordingly.  Be sure to write to the\nmailing list before you make changes to @code{ltmain.in}, since they may\nhave advice on the most effective way of accomplishing what you want.\n\n@node Porting inter-library dependencies\n@subsection Porting inter-library dependencies support\n@cindex inter-library dependency\n@vindex deplibs_check_method\n\nSince version 1.2c, libtool has re-introduced the ability to do\ninter-library dependency on some platforms, thanks to a patch by Toshio\nKuratomi @email{badger@@prtr-13.ucsc.edu}.  Here's a shortened version\nof the message that contained his patch:\n\nThe basic architecture is this: in @file{libtool.m4}, the person who\nwrites libtool makes sure @samp{$deplibs} is included in\n@samp{$archive_cmds} somewhere and also sets the variable\n@samp{$deplibs_check_method}, and maybe @samp{$file_magic_cmd} when\n@samp{deplibs_check_method} is file_magic.\n\n@samp{deplibs_check_method} can be one of five things:\n@table @samp\n@item file_magic [@var{regex}]\n@vindex file_magic\n@vindex file_magic_cmd\n@vindex file_magic_test_file\nlooks in the library link path for libraries that have the right\nlibname.  Then it runs @samp{$file_magic_cmd} on the library and checks\nfor a match against the extended regular expression @var{regex}.  When\n@code{file_magic_test_file} is set by @file{libtool.m4}, it is used as an\nargument to @samp{$file_magic_cmd} to verify whether the\nregular expression matches its output, and warn the user otherwise.\n\n@item test_compile\n@vindex test_compile\njust checks whether it is possible to link a program out of a list of\nlibraries, and checks which of those are listed in the output of\n@code{ldd}.  It is currently unused, and will probably be dropped in the\nfuture.\n\n@item pass_all\n@vindex pass_all\nwill pass everything without any checking.  This may work on platforms\nwhere code is position-independent by default and inter-library\ndependencies are properly supported by the dynamic linker, for example,\non DEC OSF/1 3 and 4.\n\n@item none\n@vindex none\nIt causes deplibs to be reassigned @samp{deplibs=\"\"}.  That way\n@samp{archive_cmds} can contain deplibs on all platforms, but not have\ndeplibs used unless needed.\n\n@item unknown\n@vindex unknown\nis the default for all systems unless overridden in @file{libtool.m4}.\nIt is the same as @samp{none}, but it documents that we really don't\nknow what the correct value should be, and we welcome patches that\nimprove it.\n@end table\n\nThen in @file{ltmain.in} we have the real workhorse: a little\ninitialization and postprocessing (to setup/release variables for use\nwith eval echo libname_spec etc.) and a case statement that decides\nthe method that is being used.  This is the real code@dots{} I wish I could\ncondense it a little more, but I don't think I can without function\ncalls.  I've mostly optimized it (moved things out of loops, etc.) but\nthere is probably some fat left.  I thought I should stop while I was\nahead, work on whatever bugs you discover, etc.@: before thinking about\nmore than obvious optimizations.\n\n@node Tested platforms\n@section Tested platforms\n\nThis table describes when libtool was last known to be tested on\nplatforms where it claims to support shared libraries:\n\n@example\n@include PLATFORMS\n@end example\n\nNote: The vendor-distributed HP-UX @command{sed}(1) programs are horribly\nbroken, and cannot handle libtool's requirements, so users may report\nunusual problems.  There is no workaround except to install a working\n@command{sed} (such as GNU @command{sed}) on these systems.\n\nNote: The vendor-distributed NCR MP-RAS @command{cc} programs emits\ncopyright on standard error that confuse tests on size of\n@file{conftest.err}.  The workaround is to specify @code{CC}\nwhen run @code{configure} with @kbd{CC='cc -Hnocopyr'}.\n\n@node Platform quirks\n@section Platform quirks\n\nThis section is dedicated to the sanity of the libtool maintainers.  It\ndescribes the programs that libtool uses, how they vary from system to\nsystem, and how to test for them.\n\nBecause libtool is a shell script, it can be difficult to understand\njust by reading it from top to bottom.  This section helps show why\nlibtool does things a certain way.  Combined with the scripts\nthemselves, you should have a better sense of how to improve libtool, or\nwrite your own.\n\n@menu\n* References::                  Finding more information.\n* Compilers::                   Creating object files from source files.\n* Reloadable objects::          Binding object files together.\n* Multiple dependencies::       Removing duplicate dependent libraries.\n* Archivers::                   Programs that create static archives.\n* Cross compiling::             Issues that arise when cross compiling.\n* File name conversion::        Converting file names between platforms.\n* Windows DLLs::                Windows header defines.\n@end menu\n\n@node References\n@subsection References\n\nThe following is a list of valuable documentation references:\n\n@itemize @bullet\n@item\nSGI's IRIX Manual Pages can be found at@*\n@url{http://techpubs.sgi.com/cgi-bin/infosrch.cgi?cmd=browse&db=man}.\n\n@item\nSun's free service area\n(@url{http://www.sun.com/service/online/free.html}) and documentation\nserver (@url{http://docs.sun.com/}).\n\n@item\nCompaq's Tru64 UNIX online documentation is at@*\n(@url{http://tru64unix.compaq.com/faqs/publications/pub_page/doc_list.html})\nwith C++ documentation at@*\n(@url{http://tru64unix.compaq.com/cplus/docs/index.htm}).\n\n@item\nHewlett-Packard has online documentation at\n(@url{http://docs.hp.com/index.html}).\n\n@item\nIBM has online documentation at\n(@url{http://www.rs6000.ibm.com/resource/aix_resource/Pubs/}).\n@end itemize\n\n@node Compilers\n@subsection Compilers\n\nThe only compiler characteristics that affect libtool are the flags\nneeded (if any) to generate PIC objects.  In general, if a C compiler\nsupports certain PIC flags, then any derivative compilers support the\nsame flags.  Until there are some noteworthy exceptions to this rule,\nthis section will document only C compilers.\n\nThe following C compilers have standard command line options, regardless\nof the platform:\n\n@table @code\n@item gcc\n\nThis is the GNU C compiler, which is also the system compiler for many\nfree operating systems (FreeBSD, GNU/Hurd, GNU/Linux, Lites, NetBSD, and\nOpenBSD, to name a few).\n\nThe @option{-fpic} or @option{-fPIC} flags can be used to generate\nposition-independent code.  @option{-fPIC} is guaranteed to generate\nworking code, but the code is slower on m68k, m88k, and SPARC chips.\nHowever, using @option{-fpic} on those chips imposes arbitrary size limits\non the shared libraries.\n@end table\n\nThe rest of this subsection lists compilers by the operating system that\nthey are bundled with:\n\n@c FIXME these should all be better-documented\n\n@table @code\n@item aix3*\n@itemx aix4*\nMost AIX compilers have no PIC flags, since AIX (with the exception of\nAIX for IA-64) runs on PowerPC and RS/6000 chips. @footnote{All code compiled\nfor the PowerPC and RS/6000 chips (@code{powerpc-*-*}, @code{powerpcle-*-*},\nand @code{rs6000-*-*}) is position-independent, regardless of the operating\nsystem or compiler suite.  So, ``regular objects'' can be used to build\nshared libraries on these systems and no special PIC compiler flags are\nrequired.}\n\n@item hpux10*\nUse @samp{+Z} to generate PIC.\n\n@item osf3*\nDigital/UNIX 3.x does not have PIC flags, at least not on the PowerPC\nplatform.\n\n@item solaris2*\nUse @option{-KPIC} to generate PIC.\n\n@item sunos4*\nUse @option{-PIC} to generate PIC.\n@end table\n\n@node Reloadable objects\n@subsection Reloadable objects\n\nOn all known systems, a reloadable object can be created by running\n@kbd{ld -r -o @var{output}.o @var{input1}.o @var{input2}.o}.  This\nreloadable object may be treated as exactly equivalent to other\nobjects.\n\n@node Multiple dependencies\n@subsection Multiple dependencies\n\nOn most modern platforms the order where dependent libraries are listed\nhas no effect on object generation.  In theory, there are platforms\nthat require libraries that provide missing symbols to other libraries\nto be listed after those libraries whose symbols they provide.\n\nParticularly, if a pair of static archives each resolve some of the\nother's symbols, it might be necessary to list one of those archives\nboth before and after the other one.  Libtool does not currently cope\nwith this situation well, since duplicate libraries are removed from\nthe link line by default.  Libtool provides the command line option\n@option{--preserve-dup-deps} to preserve all duplicate dependencies\nin cases where it is necessary.\n\n@node Archivers\n@subsection Archivers\n\nOn all known systems, building a static library can be accomplished by\nrunning @kbd{ar cr lib@var{name}.a @var{obj1}.o @var{obj2}.o @dots{}},\nwhere the @file{.a} file is the output library, and each @file{.o} file is an\nobject file.\n\nOn all known systems, if there is a program named @command{ranlib}, then it\nmust be used to ``bless'' the created library before linking against it,\nwith the @kbd{ranlib lib@var{name}.a} command.  Some systems, like Irix,\nuse the @code{ar ts} command, instead.\n\n@node Cross compiling\n@subsection Cross compiling\n@cindex cross compile\n\nMost build systems support the ability to compile libraries and applications\non one platform for use on a different platform, provided a compiler capable\nof generating the appropriate output is available.  In such cross compiling\nscenarios, the platform where the libraries or applications are compiled\nis called the @dfn{build platform}, while the platform where the libraries\nor applications are intended to be used or executed is called the\n@dfn{host platform}.\n@ref{GNU Build System,, The GNU Build System, automake, The Automake Manual},\nof which libtool is a part, supports cross compiling via arguments passed to\nthe configure script: @option{--build=...} and @option{--host=...}. However,\nwhen the build platform and host platform are very different, libtool is\nrequired to make certain accommodations to support these scenarios.\n\nIn most cases, because the build platform and host platform differ, the\ncross-compiled libraries and executables can't be executed or tested on the\nbuild platform where they were compiled.  The testsuites of most build systems\nwill often skip any tests that involve executing such foreign executables when\ncross-compiling.  However, if the build platform and host platform are\nsufficiently similar, it is often possible to run cross-compiled applications.\nLibtool's own testsuite often attempts to execute cross-compiled tests, but\nwill mark any failures as @emph{skipped} since the failure might simply be due\nto the differences between the two platforms.\n\nIn addition to cases where the host platform and build platform are extremely\nsimilar (e.g. @samp{i586-pc-linux-gnu} and @samp{i686-pc-linux-gnu}), there is\nanother case where cross-compiled host applications may be executed on the\nbuild platform.  This is possible when the build platform supports an emulation\nor API-enhanced environment for the host platform.  One example of this\nsituation would be if the build platform were MinGW, and the host platform were\nCygwin (or vice versa).  Both of these platforms can actually operate within a\nsingle Windows instance, so Cygwin applications can be launched from a MinGW\ncontext, and vice versa---provided certain care is taken.  Another example\nwould be if the build platform were GNU/Linux on an x86 32bit processor, and\nthe host platform were MinGW.  In this situation, the\n@uref{http://www.winehq.org/, Wine} environment can be used to launch Windows\napplications from the GNU/Linux operating system; again, provided certain care\nis taken.\n\nOne particular issue occurs when a Windows platform such as MinGW, Cygwin, or\nMSYS is the host or build platform, while the other platform is a Unix-style\nsystem.  In these cases, there are often conflicts between the format of the\nfile names and paths expected within host platform libraries and executables,\nand those employed on the build platform.\n\nThis situation is best described using a concrete example: suppose the build\nplatform is GNU/Linux with canonical triplet @samp{i686-pc-linux-gnu}.  Suppose\nfurther that the host platform is MinGW with canonical triplet\n@samp{i586-pc-mingw32}.  On the GNU/Linux platform there is a cross compiler\nfollowing the usual naming conventions of such compilers, where the compiler\nname is prefixed by the host canonical triplet (or suitable alias).  (For more\ninformation concerning canonical triplets and platform aliases, see\n@ref{Specifying Target Triplets,, Specifying Target Triplets, autoconf,\nThe Autoconf Manual} and @ref{Canonicalizing,, Canonicalizing, autoconf,\nThe Autoconf Manual})  In this case, the C compiler is named\n@samp{i586-pc-mingw32-gcc}.\n\nAs described in @ref{Wrapper executables}, for the MinGW host platform libtool\nuses a wrapper executable to set various environment variables before launching\nthe actual program executable.  Like the program executable, the wrapper\nexecutable is cross-compiled for the host platform (that is, for MinGW).  As\ndescribed above, ordinarily a host platform executable cannot be executed on\nthe build platform, but in this case the Wine environment could be used to\nlaunch the MinGW application from GNU/Linux.  However, the wrapper executable,\nas a host platform (MinGW) application, must set the @env{PATH} variable so\nthat the true application's dependent libraries can be located---but the\ncontents of the @env{PATH} variable must be structured for MinGW.  Libtool\nmust use the Wine file name mapping facilities to determine the correct value\nso that the wrapper executable can set the @env{PATH} variable to point to the\ncorrect location.\n\nFor example, suppose we are compiling an application in @file{/var/tmp} on\nGNU/Linux, using separate source code and build directories:\n\n@example\n@multitable @columnfractions 0.5 0.5\n@item @file{/var/tmp/foo-1.2.3/app/} @tab (application source code)\n@item @file{/var/tmp/foo-1.2.3/lib/} @tab (library source code)\n@item @file{/var/tmp/BUILD/app/} @tab (application build objects here)\n@item @file{/var/tmp/BUILD/lib/} @tab (library build objects here)\n@end multitable\n@end example\n\nSince the library will be built in @file{/var/tmp/BUILD/lib}, the wrapper\nexecutable (which will be in @file{/var/tmp/BUILD/app}) must add that\ndirectory to @env{PATH} (actually, it must add the directory named\n@var{objdir} under @file{/var/tmp/BUILD/lib}, but we'll ignore that detail\nfor now).  However, Windows does not have a concept of Unix-style file or\ndirectory names such as @file{/var/tmp/BUILD/lib}.  Therefore, Wine provides\na mapping from Windows file names such as @file{C:\\Program Files} to specific\nUnix-style file names.  Wine also provides a utility that can be used to map\nUnix-style file names to Windows file names.\n\nIn this case, the wrapper executable should actually add the value\n\n@example\nZ:\\var\\tmp\\BUILD\\lib\n@end example\n\n@noindent\nto the @env{PATH}.  libtool contains support for path conversions of this\ntype, for a certain limited set of build and host platform combinations. In\nthis case, libtool will invoke Wine's @command{winepath} utility to ensure that\nthe correct @env{PATH} value is used.  @xref{File name conversion}.\n\n@node File name conversion\n@subsection File name conversion\n@cindex file name conversion\n@cindex path conversion\n\nIn certain situations, libtool must convert file names and paths between\nformats appropriate to different platforms.  Usually this occurs when\ncross-compiling, and affects only the ability to launch host platform\nexecutables on the build platform using an emulation or API-enhancement\nenvironment such as Wine.  Failure to convert paths\n(@pxref{File Name Conversion Failure}) will cause a warning to be issued, but\nrarely causes the build to fail---and should have no affect on the compiled\nproducts, once installed properly on the host platform.  For more information,\n@pxref{Cross compiling}.\n\nHowever, file name conversion may also occur in another scenario: when using a\nUnix emulation system on Windows (such as Cygwin or MSYS), combined with a\nnative Windows compiler such as MinGW or MSVC.  Only a limited set of such\nscenarios are currently supported; in other cases file name conversion is\nskipped.  The lack of file name conversion usually means that uninstalled\nexecutables can't be launched, but only rarely causes the build to fail\n(@pxref{File Name Conversion Failure}).\n\nlibtool supports file name conversion in the following scenarios:\n\n@multitable @columnfractions .25 .25 .5\n@headitem build platform @tab host platform @tab Notes\n@item MinGW (MSYS) @tab MinGW (Windows)\n@tab @pxref{Native MinGW File Name Conversion}\n\n@item Cygwin @tab MinGW (Windows)\n@tab @pxref{Cygwin/Windows File Name Conversion}\n\n@item Unix + Wine @tab MinGW (Windows)\n@tab Requires Wine. @xref{Unix/Windows File Name Conversion}.\n\n@item MinGW (MSYS) @tab Cygwin\n@tab Requires @env{LT_CYGPATH}. @xref{LT_CYGPATH}. Provided for testing\npurposes only.\n\n@item Unix + Wine @tab Cygwin\n@tab Requires both Wine and @env{LT_CYGPATH}, but does not yet work with\nCygwin 1.7.7 and Wine-1.2.\n@xref{Unix/Windows File Name Conversion}, and @ref{LT_CYGPATH}.\n@end multitable\n\n@menu\n* File Name Conversion Failure::  What happens when file name conversion fails\n* Native MinGW File Name Conversion::  MSYS file name conversion idiosyncrasies\n* Cygwin/Windows File Name Conversion::  Using @command{cygpath} to convert Cygwin file names\n* Unix/Windows File Name Conversion::  Using Wine to convert Unix paths\n* LT_CYGPATH::                  Invoking @command{cygpath} from other environments\n* Cygwin to MinGW Cross::       Other notes concerning MinGW cross\n@end menu\n\n@node File Name Conversion Failure\n@subsubsection File Name Conversion Failure\n@cindex File Name Conversion - Failure\n@cindex Path Conversion - Failure\n\nIn most cases, file name conversion is not needed or attempted.  However, when\nlibtool detects that a specific combination of build and host platform does\nrequire file name conversion, it is possible that the conversion may fail.\nIn these cases, you may see a warning such as the following:\n\n@example\nCould not determine the host file name corresponding to\n  `... a file name ...'\nContinuing, but uninstalled executables may not work.\n@end example\n\n@noindent\nor\n\n@example\nCould not determine the host path corresponding to\n  `... a path ...'\nContinuing, but uninstalled executables may not work.\n@end example\n\n@noindent\nThis should not cause the build to fail.  At worst, it means that the wrapper\nexecutable will specify file names or paths appropriate for the build platform.\nSince those are not appropriate for the host platform, the uninstalled\nexecutables would not operate correctly, even when the wrapper executable is\nlaunched via the appropriate emulation or API-enhancement (e.g. Wine).  Simply\ninstall the executables on the host platform, and execute them there.\n\n@node Native MinGW File Name Conversion\n@subsubsection Native MinGW File Name Conversion\n@cindex File Name Conversion - MinGW\n@cindex Path Conversion - MinGW\n@cindex MSYS\n\nMSYS is a Unix emulation environment for Windows, and is specifically designed\nsuch that in normal usage it @emph{pretends} to be MinGW or native Windows,\nbut understands Unix-style file names and paths, and supports standard Unix\ntools and shells.  Thus, ``native'' MinGW builds are actually an odd sort of\ncross-compile, from an MSYS Unix emulation environment ``pretending'' to be\nMinGW, to actual native Windows.\n\nWhen an MSYS shell launches a native Windows executable (as opposed to other\n@emph{MSYS} executables), it uses a system of heuristics to detect any\ncommand-line arguments that contain file names or paths.  It automatically\nconverts these file names from the MSYS (Unix-like) format, to the\ncorresponding Windows file name, before launching the executable.  However,\nthis auto-conversion facility is only available when using the MSYS runtime\nlibrary.  The wrapper executable itself is a MinGW application (that is, it\ndoes not use the MSYS runtime library).  The wrapper executable must set\n@env{PATH} to, and call @code{_spawnv} with, values that have already been\nconverted from MSYS format to Windows.  Thus, when libtool writes the source\ncode for the wrapper executable, it must manually convert MSYS paths to\nWindows format, so that the Windows values can be hard-coded into the wrapper\nexecutable.\n\n@node Cygwin/Windows File Name Conversion\n@subsubsection Cygwin/Windows File Name Conversion\n@cindex File Name Conversion - Cygwin to Windows\n@cindex Path Conversion - Cygwin to Windows\n\nCygwin provides a Unix emulation environment for Windows.  As part of that\nemulation, it provides a file system mapping that presents the Windows file\nsystem in a Unix-compatible manner.  Cygwin also provides a utility\n@command{cygpath} that can be used to convert file names and paths between\nthe two representations.  In a correctly configured Cygwin installation,\n@command{cygpath} is always present, and is in the @env{PATH}.\n\nLibtool uses @command{cygpath} to convert from Cygwin (Unix-style) file names\nand paths to Windows format when the build platform is Cygwin and the host\nplatform is MinGW.\n\nWhen the host platform is Cygwin, but the build platform is MSYS or some Unix\nsystem, libtool also uses @command{cygpath} to convert from Windows to Cygwin\nformat (after first converting from the build platform format to Windows format;\n@xref{Native MinGW File Name Conversion}, and\n@ref{Unix/Windows File Name Conversion}.)  Because the build platform is not\nCygwin, @command{cygpath} is not (and should not be) in the @env{PATH}.\nTherefore, in this configuration the environment variable @env{LT_CYGPATH} is\nrequired. @xref{LT_CYGPATH}.\n\n@node Unix/Windows File Name Conversion\n@subsubsection Unix/Windows File Name Conversion\n@cindex File Name Conversion - Unix to Windows\n@cindex Path Conversion - Unix to Windows\n\n\n@uref{http://www.winehq.org/, Wine} provides an interpretation environment for\nsome Unix platforms where Windows applications can be executed.  It provides\na mapping between the Unix file system and a virtual Windows file system used\nby the Windows programs.  For the file name conversion to work, Wine must be\ninstalled and properly configured on the build platform, and the\n@command{winepath} application must be in the build platform's @env{PATH}.  In\naddition, on 32bit GNU/Linux it is usually helpful if the binfmt extension is\nenabled.\n\n@node LT_CYGPATH\n@subsubsection LT_CYGPATH\n@cindex LT_CYGPATH\n\nFor some cross-compile configurations (where the host platform is Cygwin), the\n@command{cygpath} program is used to convert file names from the build platform\nnotation to the Cygwin form (technically, this conversion is from Windows\nnotation to Cygwin notation; the conversion from the build platform format\nto Windows notation is performed via other means).  However, because the\n@command{cygpath} program is not (and should not be) in the @env{PATH} on\nthe build platform, @env{LT_CYGPATH} must specify the full build platform\nfile name (that is, the full Unix or MSYS file name) of the @command{cygpath}\nprogram.\n\nThe reason @command{cygpath} should not be in the build platform @env{PATH} is\ntwofold: first, @command{cygpath} is usually installed in the same directory as\nmany other Cygwin executables, such as @command{sed}, @command{cp}, etc.  If\nthe build platform environment had this directory in its @env{PATH}, then these\nCygwin versions of common Unix utilities might be used in preference to the\nones provided by the build platform itself, with deleterious effects.  Second,\nespecially when Cygwin-1.7 or later is used, multiple Cygwin installations can\ncoexist within the same Windows instance.  Each installation will have separate\n``mount tables'' specified in @file{@var{CYGROOT-N}/etc/fstab}.  These\n@dfn{mount tables} control how that instance of Cygwin will map Windows file\nnames and paths to Cygwin form.  Each installation's @command{cygpath} utility\nautomatically deduces the appropriate @file{/etc/fstab} file.  Since each\n@file{@var{CYGROOT-N}/etc/fstab} mount table may specify different mappings, it\nmatters what @command{cygpath} is used.\n\nNote that @command{cygpath} is a Cygwin application; to execute this tool from\nUnix requires a working and properly configured Wine installation, as well\nas enabling the GNU/Linux @code{binfmt} extension.  Furthermore, the Cygwin\n@command{setup.exe} tool should have been used, via Wine, to properly install\nCygwin into the Wine file system (and registry).\n\nUnfortunately, Wine support for Cygwin is intermittent.  Recent releases of\nCygwin (1.7 and above) appear to require more Windows API support than Wine\nprovides (as of Wine version 1.2); most Cygwin applications fail to execute.\nThis includes @command{cygpath} itself.  Hence, it is best @emph{not} to use\nthe LT_CYGPATH machinery in libtool when performing Unix to Cygwin\ncross-compiles.  Similarly, it is best @emph{not} to enable the GNU/Linux binfmt\nsupport in this configuration, because while Wine will fail to execute the\ncompiled Cygwin applications, it will still exit with status zero.  This tends\nto confuse build systems and test suites (including libtool's own testsuite,\nresulting in spurious reported failures).  Wine support for the older\nCygwin-1.5 series appears satisfactory, but the Cygwin team no longer supports\nCygwin-1.5.  It is hoped that Wine will eventually be improved such that\nCygwin-1.7 will again operate correctly under Wine.  Until then, libtool will\nreport warnings as described in @pxref{File Name Conversion Failure} in these\nscenarios.\n\nHowever, @env{LT_CYGPATH} is also used for the MSYS to Cygwin cross compile\nscenario, and operates as expected.\n\n@node Cygwin to MinGW Cross\n@subsubsection Cygwin to MinGW Cross\n@cindex Cygwin to MinGW Cross\n\nThere are actually three different scenarios that could all legitimately be\ncalled a ``Cygwin to MinGW'' cross compile.  The current (and standard)\ndefinition is when there is a compiler that produces native Windows libraries\nand applications, but which itself is a Cygwin application, just as would be\nexpected in any other cross compile setup.\n\nHowever, historically there were two other definitions, which we will refer\nto as the @emph{fake} one, and the @emph{lying} one.\n\nIn the @emph{fake} Cygwin to MinGW cross compile case, you actually use a\nnative MinGW compiler, but you do so from within a Cygwin environment:\n\n@example\n@kbd{export PATH=\"/c/MinGW/bin:$@{PATH@}\"}\n@kbd{configure --build=i686-pc-cygwin \\\n\t--host=mingw32 \\\n\tNM=/c/MinGW/bin/nm.exe}\n@end example\n\nIn this way, the build system ``knows'' that you are cross compiling, and the\nfile name conversion logic will be used.  However, because the tools\n(@command{mingw32-gcc}, @command{nm}, @command{ar}) used are actually native\nWindows applications, they will not understand any Cygwin (that is, Unix-like)\nabsolute file names passed as command line arguments (and, unlike MSYS, Cygwin\ndoes not automatically convert such arguments).  However, so long as only\nrelative file names are used in the build system, and non-Windows-supported\nUnix idioms such as symlinks and mount points are avoided, this scenario should\nwork.\n\nIf you must use absolute file names, you will have to force Libtool to convert\nfile names for the toolchain in this case, by doing the following before you\nrun configure:\n\n@example\n@kbd{export lt_cv_to_tool_file_cmd=func_convert_file_cygwin_to_w32}\n@end example\n@cindex lt_cv_to_tool_file_cmd\n@cindex func_convert_file_cygwin_to_w32\n\nIn the @emph{lying} Cygwin to MinGW cross compile case, you lie to the\nbuild system:\n\n@example\n@kbd{export PATH=\"/c/MinGW/bin:$@{PATH@}\"}\n@kbd{configure --build=i686-pc-mingw32 \\\n\t--host=i686-pc-mingw32 \\\n\t--disable-dependency-tracking}\n@end example\n\n@noindent\nand claim that the build platform is MinGW, even though you are actually\nrunning under @emph{Cygwin} and not MinGW.  In this case, libtool does\n@emph{not} know that you are performing a cross compile, and thinks instead\nthat you are performing a native MinGW build.  However, as described in\n(@pxref{Native MinGW File Name Conversion}), that scenario triggers an ``MSYS\nto Windows'' file name conversion.  This, of course, is the wrong conversion\nsince we are actually running under Cygwin.  Also, the toolchain is expecting\nWindows file names (not Cygwin) but unless told so Libtool will feed Cygwin\nfile names to the toolchain in this case.  To force the correct file name\nconversions in this situation, you should do the following @emph{before}\nrunning configure:\n\n@example\n@kbd{export lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32}\n@kbd{export lt_cv_to_tool_file_cmd=func_convert_file_cygwin_to_w32}\n@end example\n@cindex lt_cv_to_host_file_cmd\n@cindex lt_cv_to_tool_file_cmd\n@cindex func_convert_file_cygwin_to_w32\n\nNote that this relies on internal implementation details of libtool, and\nis subject to change.  Also, @code{--disable-dependency-tracking} is required,\nbecause otherwise the MinGW GCC will generate dependency files that contain\nWindows file names.  This, in turn, will confuse the Cygwin @command{make}\nprogram, which does not accept Windows file names:\n\n@example\nMakefile:1: *** target pattern contains no `%'.  Stop.\n@end example\n\nThere have also always been a number of other details required for the\n@emph{lying} case to operate correctly, such as the use of so-called\n@dfn{identity mounts}:\n\n@example\n# @var{cygwin-root}/etc/fstab\nD:/foo    /foo     some_fs binary 0 0\nD:/bar    /bar     some_fs binary 0 0\nE:/grill  /grill   some_fs binary 0 0\n@end example\n\nIn this way, top-level directories of each drive are available using\nidentical names within Cygwin.\n\nNote that you also need to ensure that the standard Unix directories\n(like @file{/bin}, @file{/lib}, @file{/usr}, @file{/etc}) appear in the root\nof a drive.  This means that you must install Cygwin itself into the @file{C:/}\nroot directory (or @file{D:/}, or @file{E:/}, etc)---instead of the\nrecommended installation into @file{C:/cygwin/}.  In addition, all file names\nused in the build system must be relative, symlinks should not be used within\nthe source or build directory trees, and all @option{-M*} options to\n@command{gcc} except @option{-MMD} must be avoided.\n\nThis is quite a fragile setup, but it has been in historical use, and so is\ndocumented here.\n\n@node Windows DLLs\n@subsection Windows DLLs\n@cindex Windows DLLs\n\nThis topic describes a couple of ways to portably create Windows Dynamic\nLink Libraries (DLLs).  Libtool knows how to create DLLs using GNU tools\nand using Microsoft tools.\n\nA typical library has a ``hidden'' implementation with an interface\ndescribed in a header file.  On just about every system, the interface\ncould be something like this:\n\nExample @file{foo.h}:\n\n@example\n#ifndef FOO_H\n#define FOO_H\n\nint one (void);\nint two (void);\nextern int three;\n\n#endif /* FOO_H */\n@end example\n\n@noindent\nAnd the implementation could be something like this:\n\nExample @file{foo.c}:\n\n@example\n#include \"foo.h\"\n\nint one (void)\n@{\n  return 1;\n@}\n\nint two (void)\n@{\n  return three - one ();\n@}\n\nint three = 3;\n@end example\n\nWhen using contemporary GNU tools to create the Windows DLL, the above\ncode will work there too, thanks to its auto-import/auto-export\nfeatures.  But that is not the case when using older GNU tools or perhaps\nmore interestingly when using proprietary tools.  In those cases the code\nwill need additional decorations on the interface symbols with\n@code{__declspec(dllimport)} and @code{__declspec(dllexport)} depending\non whether the library is built or it's consumed and how it's built and\nconsumed.  However, it should be noted that it would have worked also\nwith Microsoft tools, if only the variable @code{three} hadn't been\nthere, due to the fact the Microsoft tools will automatically import\nfunctions (but sadly not variables) and Libtool will automatically export\nnon-static symbols as described next.\n\nWith Microsoft tools, Libtool digs through the object files that make up\nthe library, looking for non-static symbols to automatically export.\nI.e., Libtool with Microsoft tools tries to mimic the auto-export feature\nof contemporary GNU tools.  It should be noted that the GNU auto-export\nfeature is turned off when an explicit @code{__declspec(dllexport)} is\nseen.  The GNU tools do this to not make more symbols visible for projects\nthat have already taken the trouble to decorate symbols.  There is no\nsimilar way to limit what symbols are visible in the code when Libtool\nis using Microsoft tools.  In order to limit symbol visibility in that\ncase you need to use one of the options @option{-export-symbols} or\n@option{-export-symbols-regex}.\n\nNo matching help with auto-import is provided by Libtool, which is why\nvariables must be decorated to import them from a DLL for everything but\ncontemporary GNU tools.  As stated above, functions are automatically\nimported by both contemporary GNU tools and Microsoft tools, but for\nother proprietary tools the auto-import status of functions is unknown.\n\nWhen the objects that form the library are built, there are generally\ntwo copies built for each object.  One copy is used when linking the DLL\nand one copy is used for the static library.  On Windows systems, a pair\nof defines are commonly used to discriminate how the interface symbols\nshould be decorated.  The first define is @samp{-DDLL_EXPORT}, which is\nautomatically provided by Libtool when @command{libtool} builds the copy\nof the object that is destined for the DLL.  The second define is\n@samp{-DLIBFOO_BUILD} (or similar), which is often added by the package\nproviding the library and is used when building the library, but not\nwhen consuming the library.\n\nHowever, the matching double compile is not performed when consuming\nlibraries.  It is therefore not possible to reliably distinguish if the\nconsumer is importing from a DLL or if it is going to use a static\nlibrary.\n\nWith contemporary GNU tools, auto-import often saves the day, but see\nthe GNU ld documentation and its @option{--enable-auto-import} option\nfor some corner cases when it does not\n(@pxref{Options, @option{--enable-auto-import}, Options specific to\ni386 PE targets, ld, Using ld@comma{} the GNU linker}).\n\nWith Microsoft tools you typically get away with always compiling the\ncode such that variables are expected to be imported from a DLL and\nfunctions are expected to be found in a static library.  The tools will\nthen automatically import the function from a DLL if that is where they\nare found.  If the variables are not imported from a DLL as expected, but\nare found in a static library that is otherwise pulled in by some\nfunction, the linker will issue a warning (LNK4217) that a locally\ndefined symbol is imported, but it still works.  In other words, this\nscheme will not work to only consume variables from a library.  There is\nalso a price connected to this liberal use of imports in that an extra\nindirection is introduced when you are consuming the static version of\nthe library.  That extra indirection is unavoidable when the DLL is\nconsumed, but it is not needed when consuming the static library.\n\nFor older GNU tools and other proprietary tools there is no generic way\nto make it possible to consume either of the DLL or the static library\nwithout user intervention, the tools need to be told what is intended.\nOne common assumption is that if a DLL is being built (@samp{DLL_EXPORT}\nis defined) then that DLL is going to consume any dependent libraries as\nDLLs.  If that assumption is made everywhere, it is possible to select\nhow an end-user application is consuming libraries by adding a single\nflag @samp{-DDLL_EXPORT} when a DLL build is required.  This is of course\nan all or nothing deal, either everything as DLLs or everything as static\nlibraries.\n\nTo sum up the above, the header file of the foo library needs to be\nchanged into something like this:\n\nModified @file{foo.h}:\n\n@example\n#ifndef FOO_H\n#define FOO_H\n\n#if defined _WIN32 && !defined __GNUC__\n# ifdef LIBFOO_BUILD\n#  ifdef DLL_EXPORT\n#   define LIBFOO_SCOPE            __declspec (dllexport)\n#   define LIBFOO_SCOPE_VAR extern __declspec (dllexport)\n#  endif\n# elif defined _MSC_VER\n#  define LIBFOO_SCOPE\n#  define LIBFOO_SCOPE_VAR  extern __declspec (dllimport)\n# elif defined DLL_EXPORT\n#  define LIBFOO_SCOPE             __declspec (dllimport)\n#  define LIBFOO_SCOPE_VAR  extern __declspec (dllimport)\n# endif\n#endif\n#ifndef LIBFOO_SCOPE\n# define LIBFOO_SCOPE\n# define LIBFOO_SCOPE_VAR extern\n#endif\n\nLIBFOO_SCOPE     int one (void);\nLIBFOO_SCOPE     int two (void);\nLIBFOO_SCOPE_VAR int three;\n\n#endif /* FOO_H */\n@end example\n\nWhen the targets are limited to contemporary GNU tools and Microsoft\ntools, the above can be simplified to the following:\n\nSimplified @file{foo.h}:\n\n@example\n#ifndef FOO_H\n#define FOO_H\n\n#if defined _WIN32 && !defined __GNUC__ && !defined LIBFOO_BUILD\n# define LIBFOO_SCOPE_VAR extern __declspec (dllimport)\n#else\n# define LIBFOO_SCOPE_VAR extern\n#endif\n\nint one (void);\nint two (void);\nLIBFOO_SCOPE_VAR int three;\n\n#endif /* FOO_H */\n@end example\n\nThis last simplified version can of course only work when Libtool is\nused to build the DLL, as no symbols would be exported otherwise (i.e.,\nwhen using Microsoft tools).\n\nIt should be noted that there are various projects that attempt to relax\nthese requirements by various low level tricks, but they are not\ndiscussed here.\nExamples are\n@uref{http://alain.frisch.fr/@/flexdll.html, FlexDLL} and\n@uref{http://edll.sourceforge.net/, edll}.\n\n\n@node libtool script contents\n@section @code{libtool} script contents\n@cindex implementation of libtool\n@cindex libtool implementation\n\nSince version 1.4, the @code{libtool} script is generated by\n@code{configure} (@pxref{Configuring}).  In earlier versions,\n@code{configure} achieved this by calling a helper script called\n@file{ltconfig}.  From libtool version 0.7 to 1.0, this script\nsimply set shell variables, then sourced the libtool backend,\n@code{ltmain.sh}.  @code{ltconfig} from libtool version 1.1 through 1.3\ninlined the contents of @code{ltmain.sh} into the generated\n@code{libtool}, which improved performance on many systems.  The tests\nthat @file{ltconfig} used to perform are now kept in @file{libtool.m4}\nwhere they can be written using Autoconf.  This has the runtime\nperformance benefits of inlined @code{ltmain.sh}, @emph{and} improves\nthe build time a little while considerably easing the amount of raw\nshell code that used to need maintaining.\n\nThe convention used for naming variables that hold shell commands for\ndelayed evaluation, is to use the suffix @code{_cmd} where a single\nline of valid shell script is needed, and the suffix @code{_cmds} where\nmultiple lines of shell script @strong{may} be delayed for later\nevaluation.  By convention, @code{_cmds} variables delimit the\nevaluation units with the @code{~} character where necessary.\n\nHere is a listing of each of the configuration variables, and how they\nare used within @code{ltmain.sh} (@pxref{Configuring}):\n\n@defvar AR\nThe name of the system library archiver.\n@end defvar\n\n@defvar CC\nThe name of the compiler used to configure libtool.  This will always\ncontain the compiler for the current language (@pxref{Tags}).\n@end defvar\n\n@defvar ECHO\nAn @command{echo} program that does not interpret backslashes as an\nescape character.  It may be given only one argument, so due quoting\nis necessary.\n@end defvar\n\n@defvar LD\nThe name of the linker that libtool should use internally for reloadable\nlinking and possibly shared libraries.\n@end defvar\n\n@defvar LTCC\n@defvarx LTCFLAGS\nThe name of the C compiler and C compiler flags used to configure\nlibtool.\n@end defvar\n\n@defvar NM\nThe name of a BSD- or MS-compatible program that produces listings of\nglobal symbols.\nFor BSD @command{nm}, the symbols should be in one the following formats:\n\n@example\n@var{address} C @var{global-variable-name}\n@var{address} D @var{global-variable-name}\n@var{address} T @var{global-function-name}\n@end example\n\nFor MS @command{dumpbin}, the symbols should be in one of the following\nformats:\n\n@example\n@var{counter} @var{size}    UNDEF    notype       External     | @var{global-var}\n@var{counter} @var{address} @var{section}  notype       External     | @var{global-var}\n@var{counter} @var{address} @var{section}  notype ()    External     | @var{global-func}\n@end example\n\nThe @var{size} of the global variables are not zero and the @var{section}\nof the global functions are not \"UNDEF\". Symbols in \"pick any\" sections\n(\"pick any\" appears in the section header) are not global either.\n@end defvar\n\n@defvar RANLIB\nSet to the name of the @command{ranlib} program, if any.\n@end defvar\n\n@defvar allow_undefined_flag\nThe flag that is used by @samp{archive_cmds} to declare that\nthere will be unresolved symbols in the resulting shared library.\nEmpty, if no such flag is required.  Set to @samp{unsupported} if there\nis no way to generate a shared library with references to symbols that\naren't defined in that library.\n@end defvar\n\n@defvar always_export_symbols\nWhether libtool should automatically generate a list of exported symbols\nusing @code{export_symbols_cmds} before linking an archive.\nSet to @samp{yes} or @samp{no}.  Default is @samp{no}.\n@end defvar\n\n@defvar archive_cmds\n@defvarx archive_expsym_cmds\n@defvarx old_archive_cmds\nCommands used to create shared libraries, shared libraries with\n@option{-export-symbols} and static libraries, respectively.\n@end defvar\n\n@defvar archiver_list_spec\nSpecify filename containing input files for @code{AR}.\n@end defvar\n\n@defvar old_archive_from_new_cmds\nIf the shared library depends on a static library,\n@samp{old_archive_from_new_cmds} contains the commands used to create that\nstatic library.  If this variable is not empty, @samp{old_archive_cmds} is\nnot used.\n@end defvar\n\n@defvar old_archive_from_expsyms_cmds\nIf a static library must be created from the export symbol list to\ncorrectly link with a shared library, @samp{old_archive_from_expsyms_cmds}\ncontains the commands needed to create that static library.  When these\ncommands are executed, the variable @code{soname} contains the name of the\nshared library in question, and the @samp{$objdir/$newlib} contains the\npath of the static library these commands should build.  After executing\nthese commands, libtool will proceed to link against @samp{$objdir/$newlib}\ninstead of @code{soname}.\n@end defvar\n\n@defvar lock_old_archive_extraction\nSet to @samp{yes} if the extraction of a static library requires locking\nthe library file.  This is required on Darwin.\n@end defvar\n\n@defvar build\n@defvarx build_alias\n@defvarx build_os\nSet to the specified and canonical names of the system that libtool was\nbuilt on.\n@end defvar\n\n@defvar build_libtool_libs\nWhether libtool should build shared libraries on this system.  Set to\n@samp{yes} or @samp{no}.\n@end defvar\n\n@defvar build_old_libs\nWhether libtool should build static libraries on this system.  Set to\n@samp{yes} or @samp{no}.\n@end defvar\n\n@defvar compiler_c_o\nWhether the compiler supports the @option{-c} and @option{-o} options\nsimultaneously.  Set to @samp{yes} or @samp{no}.\n@end defvar\n\n@defvar compiler_needs_object\nWhether the compiler has to see an object listed on the command line in\norder to successfully invoke the linker.  If @samp{no}, then a set of\nconvenience archives or a set of object file names can be passed via\nlinker-specific options or linker scripts.\n@end defvar\n\n@defvar dlopen_support\nWhether @code{dlopen} is supported on the platform.\nSet to @samp{yes} or @samp{no}.\n@end defvar\n\n@defvar dlopen_self\nWhether it is possible to @code{dlopen} the executable itself.\nSet to @samp{yes} or @samp{no}.\n@end defvar\n\n@defvar dlopen_self_static\nWhether it is possible to @code{dlopen} the executable itself, when it\nis linked statically (@option{-all-static}).  Set to @samp{yes} or\n@samp{no}.\n@end defvar\n\n@defvar exclude_expsyms\nList of symbols that should not be listed in the preloaded symbols.\n@end defvar\n\n@defvar export_dynamic_flag_spec\nCompiler link flag that allows a dlopened shared library to reference\nsymbols that are defined in the program.\n@end defvar\n\n@defvar export_symbols_cmds\nCommands to extract exported symbols from @code{libobjs} to the\nfile @code{export_symbols}.\n@end defvar\n\n@defvar extract_expsyms_cmds\nCommands to extract the exported symbols list from a shared library.\nThese commands are executed if there is no file @samp{$objdir/$soname-def},\nand should write the names of the exported symbols to that file, for\nthe use of @samp{old_archive_from_expsyms_cmds}.\n@end defvar\n\n@defvar fast_install\nDetermines whether libtool will privilege the installer or the\ndeveloper.  The assumption is that installers will seldom run programs\nin the build tree, and the developer will seldom install.  This is only\nmeaningful on platforms where @code{shlibpath_overrides_runpath} is\nnot @samp{yes}, so @code{fast_install} will be set to @samp{needless} in\nthis case.  If @code{fast_install} set to @samp{yes}, libtool will create\nprograms that search for installed libraries, and, if a program is run\nin the build tree, a new copy will be linked on-demand to use the\nyet-to-be-installed libraries.  If set to @samp{no}, libtool will create\nprograms that use the yet-to-be-installed libraries, and will link\na new copy of the program at install time.  The default value is\n@samp{yes} or @samp{needless}, depending on platform and configuration\nflags, and it can be turned from @samp{yes} to @samp{no} with the\nconfigure flag @option{--disable-fast-install}.\n\nOn some systems, the linker always hardcodes paths to dependent libraries\ninto the output.  In this case, @code{fast_install} is never set to @samp{yes},\nand relinking at install time is triggered.  This also means that @env{DESTDIR}\ninstallation does not work as expected.\n@end defvar\n\n@defvar file_magic_glob\nHow to find potential files when @code{deplibs_check_method} is\n@samp{file_magic}. @code{file_magic_glob} is a @code{sed} expression,\nand the @code{sed} instance is fed potential file names that are\ntransformed by the @code{file_magic_glob} expression. Useful when the\nshell does not support the shell option @code{nocaseglob}, making\n@code{want_nocaseglob} inappropriate. Normally disabled (i.e.\n@code{file_magic_glob} is empty).\n@end defvar\n\n@defvar finish_cmds\nCommands to tell the dynamic linker how to find shared libraries in a\nspecific directory.\n@end defvar\n\n@defvar finish_eval\nSame as @code{finish_cmds}, except the commands are not displayed.\n@end defvar\n\n@defvar global_symbol_pipe\nA pipeline that takes the output of @code{NM}, and produces a listing of\nraw symbols followed by their C names.  For example:\n\n@example\n$ @kbd{eval \"$NM progname | $global_symbol_pipe\"}\nD @var{symbol1} @var{C-symbol1}\nT @var{symbol2} @var{C-symbol2}\nC @var{symbol3} @var{C-symbol3}\n@dots{}\n$\n@end example\n\nThe first column contains the symbol type (used to tell data from code)\nbut its meaning is system dependent.\n@end defvar\n\n@defvar global_symbol_to_cdecl\nA pipeline that translates the output of @code{global_symbol_pipe} into\nproper C declarations.  Since some platforms, such as HP/UX, have\nlinkers that differentiate code from data, data symbols are declared\nas data, and code symbols are declared as functions.\n@end defvar\n\n@defvar hardcode_action\nEither @samp{immediate} or @samp{relink}, depending on whether shared\nlibrary paths can be hardcoded into executables before they are installed,\nor if they need to be relinked.\n@end defvar\n\n@defvar hardcode_direct\nSet to @samp{yes} or @samp{no}, depending on whether the linker\nhardcodes directories if a library is directly specified on the command\nline (such as @samp{@var{dir}/lib@var{name}.a}) when\n@code{hardcode_libdir_flag_spec} is specified.\n@end defvar\n\n@defvar hardcode_direct_absolute\nSome architectures hardcode \"absolute\" library directories that cannot\nbe overridden by @code{shlibpath_var} when @code{hardcode_direct} is\n@samp{yes}.  In that case set @code{hardcode_direct_absolute} to\n@samp{yes}, or otherwise @samp{no}.\n@end defvar\n\n@defvar hardcode_into_libs\nWhether the platform supports hardcoding of run-paths into libraries.\nIf enabled, linking of programs will be much simpler but libraries will\nneed to be relinked during installation.  Set to @samp{yes} or @samp{no}.\n@end defvar\n\n@defvar hardcode_libdir_flag_spec\nFlag to hardcode a @code{libdir} variable into a binary, so that the\ndynamic linker searches @code{libdir} for shared libraries at runtime.\nIf it is empty, libtool will try to use some other hardcoding mechanism.\n@end defvar\n\n@defvar hardcode_libdir_separator\nIf the compiler only accepts a single @code{hardcode_libdir_flag}, then\nthis variable contains the string that should separate multiple\narguments to that flag.\n@end defvar\n\n@defvar hardcode_minus_L\nSet to @samp{yes} or @samp{no}, depending on whether the linker\nhardcodes directories specified by @option{-L} flags into the resulting\nexecutable when @code{hardcode_libdir_flag_spec} is specified.\n@end defvar\n\n@defvar hardcode_shlibpath_var\nSet to @samp{yes} or @samp{no}, depending on whether the linker\nhardcodes directories by writing the contents of @samp{$shlibpath_var}\ninto the resulting executable when @code{hardcode_libdir_flag_spec} is\nspecified.  Set to @samp{unsupported} if directories specified by\n@samp{$shlibpath_var} are searched at run time, but not at link time.\n@end defvar\n\n@defvar host\n@defvarx host_alias\n@defvarx host_os\nSet to the specified and canonical names of the system that libtool was\nconfigured for.\n@end defvar\n\n@defvar include_expsyms\nList of symbols that must always be exported when using @code{export_symbols}.\n@end defvar\n\n@defvar inherit_rpath\nWhether the linker adds runtime paths of dependency libraries to the\nruntime path list, requiring libtool to relink the output when installing.\nSet to @samp{yes} or @samp{no}.  Default is @samp{no}.\n@end defvar\n\n@defvar install_override_mode\nPermission mode override for installation of shared libraries.  If the\nruntime linker fails to load libraries with wrong permissions, then it\nmay fail to execute programs that are needed during installation,\nbecause these need the library that has just been installed.  In this\ncase, it is necessary to pass the mode to @command{install} with\n@option{-m @var{install_override_mode}}.\n@end defvar\n\n@defvar libext\nThe standard old archive suffix (normally @samp{a}).\n@end defvar\n\n@defvar libname_spec\nThe format of a library name prefix.  On all Unix systems, static\nlibraries are called @samp{lib@var{name}.a}, but on some systems (such\nas OS/2 or MS-DOS), the library is just called @samp{@var{name}.a}.\n@end defvar\n\n@defvar library_names_spec\nA list of shared library names.  The first is the name of the file,\nthe rest are symbolic links to the file.  The name in the list is\nthe file name that the linker finds when given @option{-l@var{name}}.\n@end defvar\n\n@defvar link_all_deplibs\nWhether libtool must link a program against all its dependency libraries.\nSet to @samp{yes} or @samp{no}.  Default is @samp{unknown}, which is\na synonym for @samp{yes}.\n@end defvar\n\n@defvar link_static_flag\nLinker flag (passed through the C compiler) used to prevent dynamic\nlinking.\n@end defvar\n\n@defvar macro_version\n@defvarx macro_revision\nThe release and revision from which the libtool.m4 macros were\ntaken.  This is used to ensure that macros and @code{ltmain.sh}\ncorrespond to the same Libtool version.\n@end defvar\n\n@defvar max_cmd_len\nThe approximate longest command line that can be passed to @samp{$SHELL}\nwithout being truncated, as computed by @samp{LT_CMD_MAX_LEN}.\n@end defvar\n\n@defvar need_lib_prefix\nWhether we can @code{dlopen} modules without a @samp{lib} prefix.\nSet to @samp{yes} or @samp{no}.  By default, it is @samp{unknown}, which\nmeans the same as @samp{yes}, but documents that we are not really sure\nabout it.  @samp{no} means that it is possible to @code{dlopen} a\nmodule without the @samp{lib} prefix.\n@end defvar\n\n@defvar need_version\nWhether versioning is required for libraries, i.e.@: whether the\ndynamic linker requires a version suffix for all libraries.\nSet to @samp{yes} or @samp{no}.  By default, it is @samp{unknown}, which\nmeans the same as @samp{yes}, but documents that we are not really sure\nabout it.\n@end defvar\n\n@defvar need_locks\nWhether files must be locked to prevent conflicts when compiling\nsimultaneously.  Set to @samp{yes} or @samp{no}.\n@end defvar\n\n@defvar nm_file_list_spec\nSpecify filename containing input files for @code{NM}.\n@end defvar\n\n@defvar no_builtin_flag\nCompiler flag to disable builtin functions that conflict with declaring\nexternal global symbols as @code{char}.\n@end defvar\n\n@defvar no_undefined_flag\nThe flag that is used by @samp{archive_cmds} to declare that\nthere will be no unresolved symbols in the resulting shared library.\nEmpty, if no such flag is required.\n@end defvar\n\n@defvar objdir\nThe name of the directory that contains temporary libtool files.\n@end defvar\n\n@defvar objext\nThe standard object file suffix (normally @samp{o}).\n@end defvar\n\n@defvar pic_flag\nAny additional compiler flags for building library object files.\n@end defvar\n\n@defvar postinstall_cmds\n@defvarx old_postinstall_cmds\nCommands run after installing a shared or static library, respectively.\n@end defvar\n\n@defvar postuninstall_cmds\n@defvarx old_postuninstall_cmds\nCommands run after uninstalling a shared or static library, respectively.\n@end defvar\n\n@defvar postlink_cmds\nCommands necessary for finishing linking programs. @code{postlink_cmds}\nare executed immediately after the program is linked.  Any occurrence of\nthe string @code{@@OUTPUT@@} in @code{postlink_cmds} is replaced by the\nname of the created executable (i.e.@: not the wrapper, if a wrapper is\ngenerated) prior to execution.  Similarly, @code{@@TOOL_OUTPUT@@} is\nreplaced by the toolchain format of @code{@@OUTPUT@@}.  Normally disabled\n(i.e.@: @code{postlink_cmds} empty).\n@end defvar\n\n@defvar reload_cmds\n@defvarx reload_flag\nCommands to create a reloadable object.  Set @code{reload_cmds} to\n@samp{false} on systems that cannot create reloadable objects.\n@end defvar\n\n@defvar runpath_var\nThe environment variable that tells the linker what directories to\nhardcode in the resulting executable.\n@end defvar\n\n@defvar shlibpath_overrides_runpath\nIndicates whether it is possible to override the hard-coded library\nsearch path of a program with an environment variable.  If this is set\nto no, libtool may have to create two copies of a program in the build\ntree, one to be installed and one to be run in the build tree only.\nWhen each of these copies is created depends on the value of\n@code{fast_install}.  The default value is @samp{unknown}, which is\nequivalent to @samp{no}.\n@end defvar\n\n@defvar shlibpath_var\nThe environment variable that tells the dynamic linker where to find\nshared libraries.\n@end defvar\n\n@defvar soname_spec\nThe name coded into shared libraries, if different from the real name of\nthe file.\n@end defvar\n\n@defvar striplib\n@defvarx old_striplib\nCommand to strip a shared (@code{striplib}) or static (@code{old_striplib})\nlibrary, respectively.  If these variables are empty, the strip flag\nin the install mode will be ignored for libraries (@pxref{Install mode}).\n@end defvar\n\n@defvar sys_lib_dlsearch_path_spec\nExpression to get the run-time system library search path.  Directories\nthat appear in this list are never hard-coded into executables.\n@end defvar\n\n@defvar sys_lib_search_path_spec\nExpression to get the compile-time system library search path.  This\nvariable is used by libtool when it has to test whether a certain\nlibrary is shared or static.  The directories listed in\n@code{shlibpath_var} are automatically appended to this list, every time\nlibtool runs (i.e., not at configuration time), because some linkers use\nthis variable to extend the library search path.  Linker switches such\nas @option{-L} also augment the search path.\n@end defvar\n\n@defvar thread_safe_flag_spec\nLinker flag (passed through the C compiler) used to generate thread-safe\nlibraries.\n@end defvar\n\n@defvar to_host_file_cmd\nIf the toolchain is not native to the build platform (e.g.@: if you are using\nMSYS to drive the scripting, but are using the MinGW native Windows compiler)\nthis variable describes how to convert file names from the format used by the\nbuild platform to the format used by host platform.  Normally set to\n@samp{func_convert_file_noop}, libtool will autodetect most cases where\nother values should be used.  On rare occasions, it may be necessary to override\nthe autodetected value (@pxref{Cygwin to MinGW Cross}).\n@end defvar\n\n@defvar to_tool_file_cmd\nIf the toolchain is not native to the build platform (e.g.@: if you are using\nsome Unix to drive the scripting together with a Windows toolchain running\nin Wine) this variable describes how to convert file names from the format\nused by the build platform to the format used by the toolchain.  Normally set\nto @samp{func_convert_file_noop}.\n@end defvar\n\n@defvar version_type\nThe library version numbering type.  One of @samp{libtool},\n@samp{freebsd-aout}, @samp{freebsd-elf}, @samp{irix}, @samp{linux},\n@samp{osf}, @samp{sunos}, @samp{windows}, or @samp{none}.\n@end defvar\n\n@defvar want_nocaseglob\nFind potential files using the shell option @code{nocaseglob}, when\n@code{deplibs_check_method} is @samp{file_magic}. Normally set to\n@samp{no}. Set to @samp{yes} to enable the @code{nocaseglob} shell\noption when looking for potential file names in a case-insensitive\nmanner.\n@end defvar\n\n@defvar whole_archive_flag_spec\nCompiler flag to generate shared objects from convenience archives.\n@end defvar\n\n@defvar wl\nThe C compiler flag that allows libtool to pass a flag directly to the\nlinker.  Used as: @code{$@{wl@}@var{some-flag}}.\n@end defvar\n\nVariables ending in @samp{_cmds} or @samp{_eval} contain a\n@samp{~}-separated list of commands that are @code{eval}ed one after\nanother.  If any of the commands return a nonzero exit status, libtool\ngenerally exits with an error message.\n\nVariables ending in @samp{_spec} are @code{eval}ed before being used by\nlibtool.\n\n@node Cheap tricks\n@section Cheap tricks\n\nHere are a few tricks that you can use to make maintainership\neasier:\n\n@itemize @bullet\n@item\nWhen people report bugs, ask them to use the @option{--config},\n@option{--debug}, or @option{--features} flags, if you think they will help\nyou.  These flags are there to help you get information directly, rather\nthan having to trust second-hand observation.\n\n@item\nRather than reconfiguring libtool every time I make a change to\n@code{ltmain.in}, I keep a permanent @code{libtool} script in my\n@env{PATH}, which sources @code{ltmain.in} directly.\n\nThe following steps describe how to create such a script, where\n@code{/home/src/libtool} is the directory containing the libtool source\ntree, @code{/home/src/libtool/libtool} is a libtool script that has been\nconfigured for your platform, and @code{~/bin} is a directory in your\n@env{PATH}:\n\n@smallexample\ntrick$ cd ~/bin\ntrick$ sed 's%^\\(macro_version=\\).*$%\\1@@VERSION@@%;\n            s%^\\(macro_revision=\\).*$%\\1@@package_revision@@%;\n            /^# ltmain\\.sh/q' /home/src/libtool/libtool > libtool\ntrick$ echo '. /home/src/libtool/ltmain.in' >> libtool\ntrick$ chmod +x libtool\ntrick$ libtool --version\nltmain.sh (GNU @@PACKAGE@@@@TIMESTAMP@@) @@VERSION@@\n\nCopyright (C) 2014 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\ntrick$\n@end smallexample\n@end itemize\n\nThe output of the final @samp{libtool --version} command shows that the\n@code{ltmain.in} script is being used directly.  Now, modify\n@code{~/bin/libtool} or @code{/home/src/libtool/ltmain.in} directly in\norder to test new changes without having to rerun @code{configure}.\n\n@node GNU Free Documentation License\n@appendix GNU Free Documentation License\n\n@cindex FDL, GNU Free Documentation License\n\n@include fdl.texi\n\n@page\n@node Combined Index\n@unnumbered Combined Index\n\n@printindex cp\n\n@bye\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/ChangeLog.old",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/.git/objects/pack/pack-f7fb65b897ccd475ae0b9c5fe24a84b3a2166658.idx",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/.git/objects/pack/pack-f7fb65b897ccd475ae0b9c5fe24a84b3a2166658.pack",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/.git/modules/bootstrap/objects/pack/pack-5af9474eb791fe3b572e192cb8ab68ff2a533c11.pack",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/.git/modules/bootstrap/objects/pack/pack-5af9474eb791fe3b572e192cb8ab68ff2a533c11.idx",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/.git/modules/gnulib/objects/pack/pack-e1578331ae161d611537c85ccccd5e4b36d9aa24.pack",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/.git/modules/gnulib/objects/pack/pack-e1578331ae161d611537c85ccccd5e4b36d9aa24.idx",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/gnulib/lib/javaversion.class",
        "/tmp/vanessa/spack-stage/spack-stage-libtool-develop-n2ccgetkgntuyorw7tgelkgia3chd3qb/spack-src/gnulib/tests/locale/fr/LC_MESSAGES/test-quotearg.mo"
    ],
    "total_files": 6993
}