{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/dtc/tests/asm_tree_dump.c": "/*\n * libfdt - Flat Device Tree manipulation\n *\tTests if an asm tree built into a shared object matches a given dtb\n * Copyright (C) 2008 David Gibson, IBM Corporation.\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public License\n * as published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA\n */\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdint.h>\n#include <errno.h>\n\n#include <dlfcn.h>\n\n#include <libfdt.h>\n\n#include \"tests.h\"\n#include \"testdata.h\"\n\nint main(int argc, char *argv[])\n{\n\tvoid *sohandle;\n\tvoid *fdt;\n\tint err;\n\n\ttest_init(argc, argv);\n\tif (argc != 3)\n\t\tCONFIG(\"Usage: %s <so file> <dtb file>\", argv[0]);\n\n\tsohandle = dlopen(argv[1], RTLD_NOW);\n\tif (!sohandle)\n\t\tFAIL(\"Couldn't dlopen() %s\", argv[1]);\n\n\tfdt = dlsym(sohandle, \"dt_blob_start\");\n\tif (!fdt)\n\t\tFAIL(\"Couldn't locate \\\"dt_blob_start\\\" symbol in %s\",\n\t\t     argv[1]);\n\n\terr = fdt_check_header(fdt);\n\tif (err != 0)\n\t\tFAIL(\"%s contains invalid tree: %s\", argv[1],\n\t\t     fdt_strerror(err));\n\n\tsave_blob(argv[2], fdt);\n\n\tPASS();\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/dtc/tests/value-labels.c": "/*\n * libfdt - Flat Device Tree manipulation\n *\tTest labels within values\n * Copyright (C) 2008 David Gibson, IBM Corporation.\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public License\n * as published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA\n */\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdint.h>\n#include <errno.h>\n\n#include <dlfcn.h>\n\n#include <libfdt.h>\n\n#include \"tests.h\"\n#include \"testdata.h\"\n\nstruct val_label {\n\tconst char *labelname;\n\tint propoff;\n};\n\nstruct val_label labels1[] = {\n\t{ \"start1\", 0 },\n\t{ \"mid1\", 2 },\n\t{ \"end1\", -1 },\n};\n\nstruct val_label labels2[] = {\n\t{ \"start2\", 0 },\n\t{ \"innerstart2\", 0 },\n\t{ \"innermid2\", 4 },\n\t{ \"innerend2\", -1 },\n\t{ \"end2\", -1 },\n};\n\nstruct val_label labels3[] = {\n\t{ \"start3\", 0 },\n\t{ \"innerstart3\", 0 },\n\t{ \"innermid3\", 1 },\n\t{ \"innerend3\", -1 },\n\t{ \"end3\", -1 },\n};\n\nstatic void check_prop_labels(void *sohandle, void *fdt, const char *name,\n\t\t\t      const struct val_label* labels, int n)\n{\n\tconst struct fdt_property *prop;\n\tconst char *p;\n\tint len;\n\tint i;\n\n\tprop = fdt_get_property(fdt, 0, name, &len);\n\tif (!prop)\n\t\tFAIL(\"Couldn't locate property \\\"%s\\\"\", name);\n\n\tp = dlsym(sohandle, name);\n\tif (!p)\n\t\tFAIL(\"Couldn't locate label symbol \\\"%s\\\"\", name);\n\n\tif (p != (const char *)prop)\n\t\tFAIL(\"Label \\\"%s\\\" does not point to correct property\", name);\n\n\tfor (i = 0; i < n; i++) {\n\t\tint off = labels[i].propoff;\n\n\t\tif (off == -1)\n\t\t\toff = len;\n\n\t\tp = dlsym(sohandle, labels[i].labelname);\n\t\tif (!p)\n\t\t\tFAIL(\"Couldn't locate label symbol \\\"%s\\\"\", name);\n\n\t\tif ((p - prop->data) != off)\n\t\t\tFAIL(\"Label \\\"%s\\\" points to offset %ld instead of %d\"\n\t\t\t     \"in property \\\"%s\\\"\", labels[i].labelname,\n\t\t\t     (long)(p - prop->data), off, name);\n\t}\n}\n\nint main(int argc, char *argv[])\n{\n\tvoid *sohandle;\n\tvoid *fdt;\n\tint err;\n\n\ttest_init(argc, argv);\n\tif (argc != 2)\n\t\tCONFIG(\"Usage: %s <so file>\", argv[0]);\n\n\tsohandle = dlopen(argv[1], RTLD_NOW);\n\tif (!sohandle)\n\t\tFAIL(\"Couldn't dlopen() %s\", argv[1]);\n\n\tfdt = dlsym(sohandle, \"dt_blob_start\");\n\tif (!fdt)\n\t\tFAIL(\"Couldn't locate \\\"dt_blob_start\\\" symbol in %s\",\n\t\t     argv[1]);\n\n\terr = fdt_check_header(fdt);\n\tif (err != 0)\n\t\tFAIL(\"%s contains invalid tree: %s\", argv[1],\n\t\t     fdt_strerror(err));\n\n\n\tcheck_prop_labels(sohandle, fdt, \"prop1\", labels1, ARRAY_SIZE(labels1));\n\tcheck_prop_labels(sohandle, fdt, \"prop2\", labels2, ARRAY_SIZE(labels2));\n\tcheck_prop_labels(sohandle, fdt, \"prop3\", labels3, ARRAY_SIZE(labels3));\n\n\tPASS();\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/openbios/arch/unix/plugins.c": "/* tag: plugin interface for openbios forth kernel\n *\n * Copyright (C) 2003, 2004 Stefan Reinauer\n *\n * See the file \"COPYING\" for further information about\n * the copyright and warranty status of this work.\n */\n\n#include \"sysinclude.h\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <dlfcn.h>\n\n#include \"unix/plugins.h\"\n\nunsigned char *plugindir = \"/usr/share/OpenBIOS/plugins\";\n#define PLUGINDIR  plugindir\n#define PATHSIZE   256\n\n#define CONFIG_DEBUG_PLUGINS\n\ntypedef struct iorange iorange_t;\nstruct iorange {\n\tconst char *name;\n\tunsigned int start;\n\tunsigned int end;\n\tio_ops_t *ops;\n\tiorange_t *next;\n};\n\nstatic iorange_t *ioranges = NULL;\n\ntypedef struct plugin plugin_t;\nstruct plugin {\n\tconst char *name;\n\tplugin_t *next;\n};\n\nstatic plugin_t *plugins = NULL;\n\nio_ops_t *find_iorange(u32 reg)\n{\n\tiorange_t *range = ioranges;\n\twhile (range) {\n\t\tif (range->start <= reg && range->end >= reg)\n\t\t\treturn range->ops;\n\t\trange = range->next;\n\t}\n\treturn NULL;\n}\n\nint register_iorange(const char *name, io_ops_t * ops, unsigned int rstart,\n\t\t     unsigned int rend)\n{\n\tiorange_t *newrange;\n\n\t/* intersection check */\n\tnewrange = ioranges;\n\twhile (newrange) {\n\t\tint fail = 0;\n\t\t/* new section swallows old section */\n\t\tif (newrange->start >= rstart && newrange->end <= rend)\n\t\t\tfail = -1;\n\t\t/* new section start or end point are within range */\n\t\tif (newrange->start <= rstart && newrange->end >= rstart)\n\t\t\tfail = -1;\n\t\tif (newrange->start <= rend && newrange->end >= rend)\n\t\t\tfail = -1;\n\t\tif (fail) {\n\t\t\tprintf(\"Error: overlapping IO regions: %s and %s\\n\",\n\t\t\t\tnewrange->name, name);\n\t\t\treturn -1;\n\t\t}\n\t\tnewrange = newrange->next;\n\t}\n\n\tnewrange = malloc(sizeof(iorange_t));\n\n\tnewrange->name = name;\n\tnewrange->ops = ops;\n\tnewrange->start = rstart;\n\tnewrange->end = rend;\n\tnewrange->next = ioranges;\n\n\tioranges = newrange;\n\n\treturn 0;\n}\n\nint is_loaded(const char *plugin_name)\n{\n\tplugin_t *p = plugins;\n\twhile (p) {\n\t\tif (!strcmp(plugin_name, p->name))\n\t\t\treturn -1;\n\t\tp = p->next;\n\t}\n\treturn 0;\n}\n\nint load_plugin(const char *plugin_name)\n{\n\tvoid *handle;\n\tchar *error;\n\tchar path[PATHSIZE];\n\n\tint (*init_plugin) (void);\n\tchar **deps;\n\tchar **plugin_info;\n\tplugin_t *p;\n\n\tif (is_loaded(plugin_name)) {\n\t\tprintf(\"Plugin %s already loaded.\\n\", plugin_name);\n\t\treturn 0;\n\t}\n\n\tstrncpy(path, PLUGINDIR, PATHSIZE);\n\tstrncat(path, \"/plugin_\", PATHSIZE);\n\tstrncat(path, plugin_name, PATHSIZE);\n\tstrncat(path, \".so\", PATHSIZE);\n\n#if DEBUG\n\tprintf(\"Opening plugin %s\\n\", path);\n#endif\n\n\thandle = dlopen(path, RTLD_LAZY | RTLD_GLOBAL);\n\tif (!handle) {\n\t\terror = dlerror();\n\t\tprintf(\"Error: Could not open plugin \\\"%s\\\": %s\\n\",\n\t\t       plugin_name, error);\n\t\texit(1);\n\t}\n#ifdef CONFIG_DEBUG_PLUGINS\n\tplugin_info = dlsym(handle, \"plugin_author\");\n\tif ((error = dlerror()) == NULL)\n\t\tprintf(\"Plugin %s author:  %s\\n\", plugin_name, *plugin_info);\n\tplugin_info = dlsym(handle, \"plugin_license\");\n\tif ((error = dlerror()) == NULL)\n\t\tprintf(\"Plugin %s license: %s\\n\", plugin_name, *plugin_info);\n\tplugin_info = dlsym(handle, \"plugin_description\");\n\tif ((error = dlerror()) == NULL)\n\t\tprintf(\"Plugin %s descr.: %s\\n\", plugin_name, *plugin_info);\n#endif\n\tp = malloc(sizeof(plugin_t));\n\tp->next = plugins;\n\tp->name = plugin_name;\n\tplugins = p;\n\n\tdeps = dlsym(handle, \"plugin_deps\");\n\tif ((error = dlerror()) != NULL)\n\t\tdeps = NULL;\n\n\n\tstrncpy(path, \"plugin_\", PATHSIZE);\n\tstrncat(path, plugin_name, PATHSIZE);\n\tstrncat(path, \"_init\", PATHSIZE);\n\n\tinit_plugin = dlsym(handle, path);\n\tif ((error = dlerror()) != NULL) {\n\t\tprintf(\"error: %s\\n\", error);\n\t\texit(1);\n\t}\n\n\tif (deps) {\n\t\tint i = 0;\n\t\tchar *walk = deps[0];\n#ifdef CONFIG_DEBUG_PLUGINS\n\t\tprintf(\"\\nPlugin %s dependencies:\", plugin_name);\n#endif\n\t\twhile (walk) {\n\t\t\tprintf(\" %s\", walk);\n\t\t\tif (!is_loaded(walk)) {\n#ifdef CONFIG_DEBUG_PLUGINS\n\t\t\t\tprintf(\"(loading)\\n\");\n#endif\n\t\t\t\tload_plugin(walk);\n\t\t\t}\n#ifdef CONFIG_DEBUG_PLUGINS\n\t\t\telse {\n\t\t\t\tprintf(\"(loaded)\");\n\t\t\t}\n#endif\n\t\t\twalk = deps[++i];\n\t\t}\n\t}\n\n\tprintf(\"\\n\");\n#if DEBUG\n\tprintf(\"Initializing module:\\n\");\n#endif\n\n\treturn init_plugin();\n\n\t// We don't dlclose the handle here since\n\t// we want to keep our symbols for later use.\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/openbios/arch/unix/plugins/loader.c": "/* tag: openbios plugin loader\n *\n * Copyright (C) 2003 Stefan Reinauer\n *\n * See the file \"COPYING\" for further information about\n * the copyright and warranty status of this work.\n */\n\n/* This is a simple plugin loader. OpenBIOS duplicates some\n * of this code in kernel/arch/unix/plugins.c. This code is\n * here for reference and simple testing.\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <dlfcn.h>\n#include <unistd.h>\t\t// sleep\n\n#include \"unix/plugins.h\"\n\n#define PLUGINDIR  \"/usr/share/OpenBIOS/plugins\"\n#define PATHSIZE   256\n\n#define DEBUG_PLUGINS\n\ntypedef struct iorange iorange_t;\nstruct iorange {\n\tconst char *name;\n\tunsigned int start;\n\tunsigned int end;\n\tio_ops_t *ops;\n\tiorange_t *next;\n};\n\niorange_t *ioranges = NULL;\n\ntypedef struct plugin plugin_t;\nstruct plugin {\n\tconst char *name;\n\tplugin_t *next;\n};\n\nplugin_t *plugins = NULL;\n\nint register_iorange(const char *name, io_ops_t * ops, unsigned int rstart,\n\t\t     unsigned int rend)\n{\n\tiorange_t *newrange;\n\n\t/* intersection check */\n\tnewrange = ioranges;\n\twhile (newrange) {\n\t\tint fail = 0;\n\t\t/* new section swallows old section */\n\t\tif (newrange->start >= rstart && newrange->end <= rend)\n\t\t\tfail = -1;\n\t\t/* new section start or end point are within range */\n\t\tif (newrange->start <= rstart && newrange->end >= rstart)\n\t\t\tfail = -1;\n\t\tif (newrange->start <= rend && newrange->end >= rend)\n\t\t\tfail = -1;\n\t\tif (fail) {\n\t\t\tprintf(\"Error: overlapping IO regions: %s and %s\\n\",\n\t\t\t     newrange->name, name);\n\t\t\treturn -1;\n\t\t}\n\t\tnewrange = newrange->next;\n\t}\n\n\tnewrange = malloc(sizeof(iorange_t));\n\n\tnewrange->name = name;\n\tnewrange->ops = ops;\n\tnewrange->start = rstart;\n\tnewrange->end = rend;\n\tnewrange->next = ioranges;\n\n\tioranges = newrange;\n\n\treturn 0;\n}\n\nint is_loaded(const char *plugin_name)\n{\n\tplugin_t *p = plugins;\n\twhile (p) {\n\t\tif (!strcmp(plugin_name, p->name))\n\t\t\treturn -1;\n\t\tp = p->next;\n\t}\n\treturn 0;\n}\n\nint load_plugin(const char *plugin_name)\n{\n\tvoid *handle;\n\tchar *error;\n\tchar path[PATHSIZE];\n\n\tint (*init_plugin) (void);\n\tchar **deps;\n\tchar **plugin_info;\n\tplugin_t *p;\n\n\tif (is_loaded(plugin_name)) {\n\t\tprintf(\"Plugin %s already loaded.\\n\", plugin_name);\n\t\treturn 0;\n\t}\n\n\tstrncpy(path, PLUGINDIR, PATHSIZE);\n\tstrncat(path, \"/plugin_\", PATHSIZE);\n\tstrncat(path, plugin_name, PATHSIZE);\n\tstrncat(path, \".so\", PATHSIZE);\n\n#if DEBUG\n\tprintf(\"Opening plugin %s\\n\", path);\n#endif\n\n\thandle = dlopen(path, RTLD_LAZY | RTLD_GLOBAL);\n\tif (!handle) {\n\t\terror = dlerror();\n\t\tprintf(\"Error: Could not open plugin \\\"%s\\\": %s\\n\",\n\t\t       plugin_name, error);\n\t\texit(1);\n\t}\n#ifdef DEBUG_PLUGINS\n\tplugin_info = dlsym(handle, \"plugin_author\");\n\tif ((error = dlerror()) == NULL)\n\t\tprintf(\"Plugin %s author:  %s\\n\", plugin_name, *plugin_info);\n\tplugin_info = dlsym(handle, \"plugin_license\");\n\tif ((error = dlerror()) == NULL)\n\t\tprintf(\"Plugin %s license: %s\\n\", plugin_name, *plugin_info);\n\tplugin_info = dlsym(handle, \"plugin_description\");\n\tif ((error = dlerror()) == NULL)\n\t\tprintf(\"Plugin %s descr.: %s\\n\", plugin_name, *plugin_info);\n#endif\n\tp = malloc(sizeof(plugin_t));\n\tp->next = plugins;\n\tp->name = plugin_name;\n\tplugins = p;\n\n\tdeps = dlsym(handle, \"plugin_deps\");\n\tif ((error = dlerror()) != NULL)\n\t\tdeps = NULL;\n\n\n\tstrncpy(path, \"plugin_\", PATHSIZE);\n\tstrncat(path, plugin_name, PATHSIZE);\n\tstrncat(path, \"_init\", PATHSIZE);\n\n\tinit_plugin = dlsym(handle, path);\n\tif ((error = dlerror()) != NULL) {\n\t\tprintf(\"error: %s\\n\", error);\n\t\texit(1);\n\t}\n\n\tif (deps) {\n\t\tint i = 0;\n\t\tchar *walk = deps[0];\n#ifdef DEBUG_PLUGINS\n\t\tprintf(\"\\nPlugin %s dependencies:\", plugin_name);\n#endif\n\t\twhile (walk) {\n\t\t\tprintf(\" %s\", walk);\n\t\t\tif (!is_loaded(walk)) {\n#ifdef DEBUG_PLUGINS\n\t\t\t\tprintf(\"(loading)\\n\");\n#endif\n\t\t\t\tload_plugin(walk);\n\t\t\t}\n#ifdef DEBUG_PLUGINS\n\t\t\telse {\n\t\t\t\tprintf(\"(loaded)\");\n\t\t\t}\n#endif\n\t\t\twalk = deps[++i];\n\t\t}\n\t}\n\n\tprintf(\"\\n\");\n#if DEBUG\n\tprintf(\"Initializing module:\\n\");\n#endif\n\n\treturn init_plugin();\n\n\t// We don't dlclose the handle here since\n\t// we want to keep our symbols for later use.\n}\n\nint main(void)\n{\n\tiorange_t *r;\n\n\t// load_plugin(\"kbd\");\n\t// load_plugin(\"pci\");\n\tload_plugin(\"qt\");\n\n\tprintf(\"\\nRegistered IO Ranges:\\n\");\n\tr = ioranges;\n\twhile (r) {\n\t\tprintf(\"  %s: %x-%x\\n\", r->name, r->start, r->end);\n\t\tr = r->next;\n\t}\n\n\tsleep(10);\n\treturn 0;\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/acpi-test-data/q35/APIC.cphp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/acpi-test-data/q35/DSDT.bridge",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/acpi-test-data/q35/DSDT.ipmibt",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/acpi-test-data/q35/DSDT.cphp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/acpi-test-data/pc/APIC.cphp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/acpi-test-data/pc/DSDT.bridge",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/acpi-test-data/pc/DSDT.cphp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/acpi-test-data/pc/DSDT.ipmikcs",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/tcg/pi_10.com",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/qemu-iotests/sample_images/afl9.vmdk.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/qemu-iotests/sample_images/iotest-version3.vmdk.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/qemu-iotests/sample_images/iotest-dirtylog-10G-4M.vhdx.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/qemu-iotests/sample_images/parallels-v1.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/qemu-iotests/sample_images/empty.bochs.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/qemu-iotests/sample_images/afl5.img.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/qemu-iotests/sample_images/test-disk2vhd.vhdx.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/qemu-iotests/sample_images/parallels-v2.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/qemu-iotests/sample_images/iotest-dynamic-1G.vhdx.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/qemu-iotests/sample_images/virtualpc-dynamic.vhd.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/qemu-iotests/sample_images/hyperv2012r2-dynamic.vhd.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/qemu-iotests/sample_images/simple-pattern.cloop.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/qemu-iotests/sample_images/grub_mbr.raw.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/tests/qemu-iotests/sample_images/d2v-zerofilled.vhd.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/qga/vss-win32/qga-vss.tlb",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/ppc_rom.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/slof.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/bamboo.dtb",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/pxe-ne2k_pci.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/pxe-e1000.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/QEMU,cgthree.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/efi-rtl8139.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/efi-pcnet.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/pxe-rtl8139.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/bios.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/linuxboot_dma.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/kvmvapic.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/qemu-icon.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/bios-256k.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/vgabios-cirrus.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/vgabios-virtio.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/QEMU,tcx.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/spapr-rtas.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/petalogix-ml605.dtb",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/sgabios.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/pxe-eepro100.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/s390-ccw.img",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/qemu-nsis.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/vgabios.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/efi-vmxnet3.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/multiboot.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/efi-e1000.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/efi-ne2k_pci.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/efi-e1000e.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/linuxboot.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/vgabios-vmware.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/acpi-dsdt.aml",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/vgabios-qxl.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/qemu-nsis.ico",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/petalogix-s3adsp1800.dtb",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/efi-eepro100.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/pxe-virtio.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/vgabios-stdvga.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/efi-virtio.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/u-boot.e500",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pc-bios/pxe-pcnet.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pixman/demos/parrot.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/pixman/demos/zone_plate.png",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/qemu-palcode/osf.h",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/qemu-palcode/uart.c",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/qemu-palcode/uart.h",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/ipxe/src/drivers/infiniband/MT25408_PRM.h",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/ipxe/src/drivers/bus/eisa.c",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/ipxe/src/drivers/net/smc9000.h",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/ipxe/src/drivers/net/smc9000.c",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/openbios/forth/device/romfont.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/openbios/libopenbios/font_8x8.c",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/openbios/libopenbios/font_8x16.c",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/u-boot/include/video_font_data.h",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/u-boot/tools/logos/ronetix.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/u-boot/tools/logos/intercontrol.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/u-boot/tools/logos/siemens.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/u-boot/tools/logos/linux_logo_ttcontrol_palfin.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/u-boot/tools/logos/atmel.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/u-boot/tools/logos/denx.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/u-boot/tools/logos/wandboard.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/u-boot/tools/logos/esd.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/u-boot/tools/logos/linux_logo_ttcontrol.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/u-boot/tools/logos/syteco.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/u-boot/tools/logos/freescale.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/u-boot/tools/easylogo/linux_blackfin.tga",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/u-boot/tools/easylogo/linux_logo.tga",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/SLOF/FlashingSLOF.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/SLOF/lib/libipmi/libipmi.oco",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/SLOF/clients/takeover/takeover.oco",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/SLOF/board-js2x/rtas/ipmi_oem.oco",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.7.0-rqzm5qx6rlocihbymov64jqebv437j3z/spack-src/roms/SLOF/board-js2x/rtas/i2c_bmc.oco"
    ],
    "total_files": 15181
}