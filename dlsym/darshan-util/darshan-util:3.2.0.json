{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/regression/workstation-dynamic/env.sh": "#!/bin/bash\n\n# General notes\n#######################\n\n# Script to set up the environment for tests on this platform.  Must export\n# the following environment variables:\n# \n# DARSHAN_CC: command to compile C programs\n# DARSHAN_CXX: command to compile C++ programs\n# DARSHAN_F90: command to compile Fortran90 programs\n# DARSHAN_F77: command to compile Fortran77 programs\n# DARSHAN_RUNJOB: command to execute a job and wait for its completion\n\n# This script may load optional modules (as in a Cray PE), set LD_PRELOAD\n# variables (as in a dynamically linked environment), or generate mpicc\n# wrappers (as in a statically linked environment).\n\n# Notes specific to this platform (workstation-dynamic)_\n########################\n# This particular env script assumes that mpicc and its variants for other \n# languages are already in the path, and that they will produce dynamic\n# executables by default.  Test programs are compile usign the existing\n# scripts, and LD_PRELOAD is set to enable instrumentation.\n\n# The runjob command is just mpiexec, no scheduler\n\nexport DARSHAN_CC=mpicc\nexport DARSHAN_CXX=mpicxx\nexport DARSHAN_F77=mpif77\nexport DARSHAN_F90=mpif90\nFULL_MPICC_PATH=`which mpicc`\n\n# This is a hack.  In order to instrument Fortran programs with LD_PRELOAD,\n# we must prepend libfmpich.so to the LD_PRELOAD variable, but with a fully\n# resolve path.  To find a path we locate mpicc and speculate that\n# libfmich.so can be found in ../lib.\nexport LD_PRELOAD=`dirname $FULL_MPICC_PATH`/../lib/libfmpich.so:$DARSHAN_PATH/lib/libdarshan.so:$LD_PRELOAD\n\nexport DARSHAN_RUNJOB=\"mpiexec -n $DARSHAN_DEFAULT_NPROCS\"\n\n# in case of using LD_PRELOAD, it is possible errors with Darshan symbols\n# (e..g, forgetting to resolve a symbol Darshan wraps using dlsym) can\n# cause arbitrary binaries to crash. We check the output of the true\n# command and ls to try to identify failures like this and exit\ntrue_out=`true`\nif [ $? -ne 0 -o -n \"$true_out\" ]; then\n    echo -n \"$true_out\"\n    echo \"true command test failed\"\n    exit 1\nfi\nls_out=`ls 1>/dev/null`\nif [ $? -ne 0 -o -n \"$ls_out\" ]; then\n    echo -n \"$ls_out\"\n    echo \"ls command test failed\"\n    exit 1\nfi\n",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-runtime/darshan.h": "/*\n * Copyright (C) 2015 University of Chicago.\n * See COPYRIGHT notice in top-level directory.\n *\n */\n\n#ifndef __DARSHAN_H\n#define __DARSHAN_H\n\n#include <unistd.h>\n#include <sys/types.h>\n#include <stdint.h>\n\n#ifdef HAVE_MPI\n#include <mpi.h>\n#endif\n\n#include \"darshan-log-format.h\"\n#include \"darshan-common.h\"\n\n/* macros for declaring wrapper functions and calling MPI routines\n * consistently regardless of whether static or dynamic linking is used\n */\n#ifdef DARSHAN_PRELOAD\n\n#include <dlfcn.h>\n#include <stdlib.h>\n\n#define DARSHAN_FORWARD_DECL(__func,__ret,__args) \\\n  __ret (*__real_ ## __func)__args = NULL\n\n#define DARSHAN_DECL(__func) __func\n\n/* creates P* variant of MPI symbols for LD_PRELOAD so that we can handle\n * language bindings that map to MPI or PMPI symbols under the covers.\n *\n * We use an alias attribute rather than generating a function shim in order\n * to prevent accidental function call loop if there a conventional PMPI\n * profiler is attempting to intercept the same function name.\n  */\n#define DARSHAN_WRAPPER_MAP(__func,__ret,__args,__fcall) \\\n    __ret __func __args __attribute__ ((alias (#__fcall)));\n\n/* Map the desired function call to a pointer called __real_NAME at run\n * time.  Note that we fall back to looking for the same symbol with a P\n * prefix to handle MPI bindings that call directly to the PMPI layer.\n */\n#define MAP_OR_FAIL(__func) \\\n    if (!(__real_ ## __func)) \\\n    { \\\n        __real_ ## __func = dlsym(RTLD_NEXT, #__func); \\\n        if(!(__real_ ## __func)) { \\\n            darshan_core_fprintf(stderr, \"Darshan failed to map symbol: %s\\n\", #__func); \\\n            exit(1); \\\n       } \\\n    }\n\n#else\n\n#define DARSHAN_FORWARD_DECL(__name,__ret,__args) \\\n  extern __ret __real_ ## __name __args;\n\n#define DARSHAN_DECL(__name) __wrap_ ## __name\n\n/* creates P* variant of MPI symbols for static linking so that we can handle\n * language bindings that map to MPI or PMPI symbols under the covers.\n *\n * We use an alias attribute rather than generating a function shim in order\n * to prevent accidental function call loop if there a conventional PMPI\n * profiler is attempting to intercept the same function name.\n */\n#define DARSHAN_WRAPPER_MAP(__func,__ret,__args,__fcall) \\\n    __ret __wrap_ ## __func __args __attribute__ ((alias (\"__wrap_\" #__fcall)));\n\n#define MAP_OR_FAIL(__func)\n\n#endif\n\n/* default number of records to attempt to store for each module */\n#define DARSHAN_DEF_MOD_REC_COUNT 1024\n\n#ifdef HAVE_MPI\n/*\n * module developers _can_ define a 'darshan_module_redux' function\n * to run collective MPI operations at shutdown time. Typically this\n * functionality has been used to reduce records shared globablly (given\n * in the 'shared_recs' array) into a single data record. Set to NULL\n * avoid any reduction steps.\n */\ntypedef void (*darshan_module_redux)(\n    void *mod_buf, /* input parameter indicating module's buffer address */\n    MPI_Comm mod_comm,  /* MPI communicator to run collectives with */\n    darshan_record_id *shared_recs, /* list of shared data record ids */\n    int shared_rec_count /* count of shared data records */\n);\n#endif\n/*\n * module developers _must_ define a 'darshan_module_shutdown' function\n * for allowing darshan-core to call into a module and retrieve final\n * output data to be saved in the log.\n */\ntypedef void (*darshan_module_shutdown)(\n    void **mod_buf, /* output parameter to save module buffer address */\n    int *mod_buf_sz /* output parameter to save module buffer size */\n);\ntypedef struct darshan_module_funcs\n{\n#ifdef HAVE_MPI\n    darshan_module_redux mod_redux_func;\n#endif\n    darshan_module_shutdown mod_shutdown_func;\n} darshan_module_funcs;\n\n/* stores FS info from statfs calls for a given mount point */\nstruct darshan_fs_info\n{\n    int fs_type;\n    int block_size;\n    int ost_count;\n    int mdt_count;\n};\n\n/* darshan_instrument_fs_data()\n *\n * Allow file system-specific modules to instrument data for the file\n * stored at 'path'. 'fs_type' is checked to determine the underlying\n * filesystem and calls into the corresponding file system instrumentation\n * module, if defined -- currently we only have a Lustre module. 'fd' is\n * the file descriptor corresponding to the file, which may be needed by\n * the file system to retrieve specific parameters.\n */\nvoid darshan_instrument_fs_data(\n    int fs_type,\n    const char *path,\n    int fd);\n\n/*****************************************************\n* darshan-core functions exported to darshan modules *\n*****************************************************/\n\n/* darshan_core_register_module()\n *\n * Register module identifier 'mod_id' with the darshan-core runtime\n * environment, allowing the module to store I/O characterization data.\n * 'mod_funcs' is a set of function pointers that implement module-specific\n * shutdown functionality (including a possible data reduction step when\n * using MPI). 'inout_mod_buf_size' is an input/output argument, with it\n * being set to the requested amount of module memory on input, and set to\n * the amount allocated by darshan-core on output. If Darshan is built with\n * MPI support, 'rank' is a pointer to an integer which will contain the\n * calling process's MPI rank on return. If given, 'sys_mem_alignment' is a\n * pointer to an integer which will contain the memory alignment value Darshan\n * was configured with on return.\n */\nvoid darshan_core_register_module(\n    darshan_module_id mod_id,\n    darshan_module_funcs mod_funcs,\n    int *inout_mod_buf_size,\n    int *rank,\n    int *sys_mem_alignment);\n\n/* darshan_core_unregister_module()\n * \n * Unregisters module identifier 'mod_id' with the darshan-core runtime,\n * removing the given module from the resulting I/O characterization log.\n */\nvoid darshan_core_unregister_module(\n    darshan_module_id mod_id);\n\n/* darshan_core_gen_record_id()\n *\n * Returns the Darshan record ID correpsonding to input string 'name'.\n */\ndarshan_record_id darshan_core_gen_record_id(\n    const char *name);\n\n/* darshan_core_register_record()\n *\n * Register a record with the darshan-core runtime, allowing it to be\n * properly tracked and (potentially) correlated with records from other\n * modules. 'rec_id' is the Darshan record id as given by the\n * `darshan_core_gen_record_id` function. 'name' is the the name of the\n * Darshan record (e.g., the full file path), which is ignored if NULL is\n * passed. 'mod_id' is the identifier of the calling module. 'rec_len'\n * is the size of the record being registered with Darshan. If given,\n * 'fs_info' is a pointer to a structure containing information on\n * the underlying FS this record is associated with (determined by\n * matching the file name prefix with Darshan's list of tracked mount\n * points). Returns a pointer to the address the record should be\n * written to on success, NULL on failure.\n */\nvoid *darshan_core_register_record(\n    darshan_record_id rec_id,\n    const char *name,\n    darshan_module_id mod_id,\n    int rec_len,\n    struct darshan_fs_info *fs_info);\n\n\n/* darshan_core_lookup_record_name()\n *\n * Looks up the name associated with a given Darshan record ID.\n */\nchar *darshan_core_lookup_record_name(\n    darshan_record_id rec_id);\n\n/* darshan_core_wtime()\n *\n * Returns the elapsed time relative to (roughly) the start of\n * the application.\n */\ndouble darshan_core_wtime(void);\n\n/* darshan_core_fprintf()\n *\n * Prints internal Darshan output on a given stream.\n */\nvoid darshan_core_fprintf(\n    FILE *stream,\n    const char *format,\n    ...);\n\n/* darshan_core_excluded_path()\n *\n * Returns true (1) if the given file path 'path' is in Darshan's\n * list of excluded file paths, false (0) otherwise.\n */\nint darshan_core_excluded_path(\n    const char * path);\n\n/* darshan_core_disabled_instrumentation\n *\n * Returns true (1) if Darshan has currently disabled instrumentation,\n * false (0) otherwise. If instrumentation is disabled, modules should\n * no longer update any file records as part of the intercepted function\n * wrappers.\n */\nint darshan_core_disabled_instrumentation(void);\n\n#endif /* __DARSHAN_H */\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.3.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.0.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.3.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.5.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.8.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.0.1.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.8.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.6.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.7.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.2.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.5.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.4.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.4.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.0.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.1.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.2.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.2.0.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.1.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.1.7.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-x86_64-3.0.0.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.1.6.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.0.1.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/example-output/mpi-io-test-ppc64-3.0.0.darshan",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/pcarns_cp_id25476_1-16-15155_2.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/perf/harms_IOR_id350892_2-9-74258_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/perf/harms_partshared_id354969_2-25-56979_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/perf/harms_IOR_id350665_2-8-78651_12.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/perf/harms_IOR_id350690_2-8-83458_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.7_id178062_12-31-64875_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/pcarns_mpi-io-test-x86_64-2.2.8_id12451_8-28-46056-5041743303181360857_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.0.0_id180936_12-31-64879_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.9_id259616_5-6-66953-5018725671498589377_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.3.1_id426989_3-13-61875-4723177368895607730_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.2.0_id3850_2-29-36600-13333843235489639491_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.0.2_id15172_12-8-37621-274509493643487663_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.12_id178062_12-31-64874_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.0.2_id205555_12-8-36850-17729250439914587931_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-64-2.2.4_id20631_12-13-43744-16977121959925885678_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-2.0.0_id3251_7-16-33980_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.2.5_id100_1-1-168-10859250841018226043_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/pcarns_mpi-io-test-x86_64-2.2.9_id8751_5-6-43885-16506732777848558488_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.1.1_id20947_6-23-63417-274509493643487663_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.6_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.5_id178062_12-31-64872_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.10_id178062_12-31-64874_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/pcarns_mpi-io-test-x86_64-2.3.1_id13154_3-13-47125-7023224190677163982_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.0.0_id16795_7-16-38059_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.11_id178062_12-31-64875_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-64-2.2.6_id23755_4-23-38771-2124448682003854839_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.0_id178062_12-31-64877_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.1.1_id240158_6-23-63667-13564362473375795675_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.8_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.4_id178062_12-31-64876_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.5_id60773_2-26-55789-7981255518662743653_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.15_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.9_id178062_12-31-64880_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.6_id80230_4-23-63443-13434414552960059406_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.1_id178062_12-31-64874_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-2.0.2_id18650_12-7-37315-16484262108403302634_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.2.0_id100_2-29-58016-11764280592576253912_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.2_id178062_12-31-64879_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86-2.1.1_id19454_6-23-43783-16484262108403302634_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-x86_64-2.2.5_id5824_2-27-41403-11500169623986228326_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.13_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.2.4_id100_12-13-62209-215568122286385789_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.4_id47560_12-13-67385-3671058397549123273_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.14_id178062_12-31-64878_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc64-2.2.8_id121829_8-28-59756-8698475815754165825_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-1.1.3_id178062_12-31-64875_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-test/2.x/example-output/carns_mpi-io-test-ppc32-2.2.6_id100_1-1-169-3365979776611785968_1.darshan.gz",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-util/extern/uthash-1.9.2.tar.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/darshan-runtime/doc/DXT-overhead.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-darshan-util-3.2.0-glxy3rbpkfynot7jbtf7blxeqdc2c4fb/spack-src/doc/darshan-dev-modular-runtime.png"
    ],
    "total_files": 277
}