{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/config_h.SH": "#!/bin/sh\n#\n# THIS IS A GENERATED FILE\n# DO NOT HAND-EDIT\n#\n# See Porting/config_h.pl\n\n: Set up for generating config_h.SH\ncase \"$CONFIG_SH\" in\n'') CONFIG_SH=config.sh;;\nesac\ncase \"$CONFIG_H\" in\n'') CONFIG_H=config.h;;\nesac\ncase $PERL_CONFIG_SH in\n'')\n\tif test -f $CONFIG_SH; then TOP=.;\n\telif test -f ../$CONFIG_SH; then TOP=..;\n\telif test -f ../../$CONFIG_SH; then TOP=../..;\n\telif test -f ../../../$CONFIG_SH; then TOP=../../..;\n\telif test -f ../../../../$CONFIG_SH; then TOP=../../../..;\n\telse\n\t\techo \"Can't find $CONFIG_SH.\"; exit 1\n\tfi\n\t. $TOP/$CONFIG_SH\n\t;;\nesac\ncase \"$0\" in\n*/*) cd `expr X$0 : 'X\\(.*\\)/'` ;;\nesac\ncase \"$CONFIG_H\" in\nalready-done) echo \"Not re-extracting config.h\" ;;\n*)\necho \"Extracting $CONFIG_H (with variable substitutions)\"\nsed <<!GROK!THIS! >$CONFIG_H -e 's!^#undef\\(.*/\\)\\*!/\\*#define\\1 \\*!' -e 's!^#un-def!#undef!'\n/* This file was produced by running the config_h.SH script, which\n * gets its values from $CONFIG_SH, which is generally produced by\n * running Configure.\n *\n * Feel free to modify any of this as the need arises.  Note, however,\n * that running config_h.SH again will wipe out any changes you've made.\n * For a more permanent change edit $CONFIG_SH and rerun config_h.SH.\n */\n\n/* Package name      : $package\n * Source directory  : $src\n * Configuration time: $cf_time\n * Configured by     : $cf_by\n * Target system     : $myuname\n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"$full_sed\"\t/**/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n#$d_alarm HAS_ALARM\t\t/**/\n\n/* HAS_BCMP:\n *\tThis symbol is defined if the bcmp() routine is available to\n *\tcompare blocks of memory.\n */\n#$d_bcmp HAS_BCMP\t/**/\n\n/* HAS_BCOPY:\n *\tThis symbol is defined if the bcopy() routine is available to\n *\tcopy blocks of memory.\n */\n#$d_bcopy HAS_BCOPY\t/**/\n\n/* HAS_BZERO:\n *\tThis symbol is defined if the bzero() routine is available to\n *\tset a memory block to 0.\n */\n#$d_bzero HAS_BZERO\t/**/\n\n/* HAS_CBRT:\n *\tThis symbol, if defined, indicates that the cbrt() (cube root)\n *\tfunction is available.\n */\n#$d_cbrt HAS_CBRT\t/**/\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n#$d_chown HAS_CHOWN\t\t/**/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n#$d_chroot HAS_CHROOT\t\t/**/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n#$d_chsize\tHAS_CHSIZE\t\t/**/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n#$d_crypt HAS_CRYPT\t\t/**/\n\n/* HAS_CTERMID:\n *\tThis symbol, if defined, indicates that the ctermid routine is\n *\tavailable to generate filename for terminal.\n */\n#$d_ctermid HAS_CTERMID\t\t/**/\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n#$d_cuserid HAS_CUSERID\t\t/**/\n\n/* HAS_DBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol DBL_DIG, which is the number\n *\tof significant digits in a double precision number.  If this\n *\tsymbol is not defined, a guess of 15 is usually pretty good.\n */\n#$d_dbl_dig HAS_DBL_DIG \t/**/\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n#$d_difftime HAS_DIFFTIME\t\t/**/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n#$d_dlerror HAS_DLERROR\t/**/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n#$d_dup2 HAS_DUP2\t/**/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n#$d_fchmod HAS_FCHMOD\t\t/**/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n#$d_fchown HAS_FCHOWN\t\t/**/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n#$d_fcntl HAS_FCNTL\t\t/**/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n#$d_fgetpos HAS_FGETPOS\t/**/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n#$d_flock HAS_FLOCK\t\t/**/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n#$d_fork HAS_FORK\t\t/**/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n#$d_fsetpos HAS_FSETPOS\t/**/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n#$d_gettimeod HAS_GETTIMEOFDAY\t/**/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n#$d_getgrps HAS_GETGROUPS\t\t/**/\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n#$d_getlogin HAS_GETLOGIN\t\t/**/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n#$d_getpgid HAS_GETPGID\t\t/**/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n#$d_getpgrp2 HAS_GETPGRP2\t\t/**/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n#$d_getppid HAS_GETPPID\t\t/**/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n#$d_getprior HAS_GETPRIORITY\t\t/**/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n#$d_inetaton HAS_INET_ATON\t\t/**/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n#$d_killpg HAS_KILLPG\t/**/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n#$d_link HAS_LINK\t/**/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n#$d_locconv HAS_LOCALECONV\t/**/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n#$d_lockf HAS_LOCKF\t\t/**/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n#$d_lstat HAS_LSTAT\t\t/**/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n#$d_mblen HAS_MBLEN\t\t/**/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to convert a multibyte string into a wide character string.\n */\n#$d_mbstowcs\tHAS_MBSTOWCS\t\t/**/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto convert a multibyte to a wide character.\n */\n#$d_mbtowc HAS_MBTOWC\t\t/**/\n\n/* HAS_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tto compare blocks of memory.\n */\n#$d_memcmp HAS_MEMCMP\t/**/\n\n/* HAS_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy blocks of memory.\n */\n#$d_memcpy HAS_MEMCPY\t/**/\n\n/* HAS_MEMMOVE:\n *\tThis symbol, if defined, indicates that the memmove routine is available\n *\tto copy potentially overlapping blocks of memory. This should be used\n *\tonly when HAS_SAFE_BCOPY is not defined. If neither is there, roll your\n *\town version.\n */\n#$d_memmove HAS_MEMMOVE\t/**/\n\n/* HAS_MEMSET:\n *\tThis symbol, if defined, indicates that the memset routine is available\n *\tto set blocks of memory.\n */\n#$d_memset HAS_MEMSET\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n#$d_mkdir HAS_MKDIR\t\t/**/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n#$d_mkfifo HAS_MKFIFO\t\t/**/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n#$d_mktime HAS_MKTIME\t\t/**/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n#$d_msync HAS_MSYNC\t\t/**/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n#$d_munmap HAS_MUNMAP\t\t/**/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n#$d_nice HAS_NICE\t\t/**/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n#$d_pathconf HAS_PATHCONF\t\t/**/\n#$d_fpathconf HAS_FPATHCONF\t\t/**/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n#$d_pause HAS_PAUSE\t\t/**/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n#$d_pipe HAS_PIPE\t\t/**/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors.  Please check I_POLL and\n *\tI_SYS_POLL to know which header should be included as well.\n */\n#$d_poll HAS_POLL\t\t/**/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#$d_readdir HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#$d_seekdir HAS_SEEKDIR\t\t/**/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#$d_telldir HAS_TELLDIR\t\t/**/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#$d_rewinddir HAS_REWINDDIR\t\t/**/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n#$d_readlink HAS_READLINK\t\t/**/\n\n/* HAS_REGCOMP:\n *\tThis symbol, if defined, indicates that the regcomp() routine is\n *\tavailable to do some regular patern matching (usually on POSIX.2\n *\tconforming systems).\n */\n#$d_regcomp HAS_REGCOMP\t\t/* POSIX.2 */\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#$d_rename HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n#$d_rmdir HAS_RMDIR\t\t/**/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n#$d_select HAS_SELECT\t/**/\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n#$d_setegid HAS_SETEGID\t\t/**/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n#$d_seteuid HAS_SETEUID\t\t/**/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n#$d_setgrps HAS_SETGROUPS\t\t/**/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n#$d_setlinebuf HAS_SETLINEBUF\t\t/**/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n#$d_setlocale HAS_SETLOCALE\t/**/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n#$d_setpgid HAS_SETPGID\t/**/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n#$d_setpgrp2 HAS_SETPGRP2\t\t/**/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n#$d_setprior HAS_SETPRIORITY\t\t/**/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n#$d_setregid HAS_SETREGID\t\t/**/\n#$d_setresgid HAS_SETRESGID\t\t/**/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n#$d_setreuid HAS_SETREUID\t\t/**/\n#$d_setresuid HAS_SETRESUID\t\t/**/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n#$d_setrgid HAS_SETRGID\t\t/**/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n#$d_setruid HAS_SETRUID\t\t/**/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n#$d_setsid HAS_SETSID\t/**/\n\n/* HAS_STAT:\n *\tThis symbol, if defined, indicates that the stat routine is\n *\tavailable to get file status.\n */\n#$d_stat HAS_STAT\t/**/\n\n/* HAS_STRCHR:\n *\tThis symbol is defined to indicate that the strchr()/strrchr()\n *\tfunctions are available for string searching. If not, try the\n *\tindex()/rindex() pair.\n */\n/* HAS_INDEX:\n *\tThis symbol is defined to indicate that the index()/rindex()\n *\tfunctions are available for string searching.\n */\n#$d_strchr HAS_STRCHR\t/**/\n#$d_index HAS_INDEX\t/**/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n#$d_strcoll HAS_STRCOLL\t/**/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n#$d_strtod HAS_STRTOD\t/**/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#$d_strtol HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n#$d_strxfrm HAS_STRXFRM\t/**/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n#$d_symlink HAS_SYMLINK\t/**/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n#$d_syscall HAS_SYSCALL\t/**/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n#$d_sysconf HAS_SYSCONF\t/**/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n#$d_system HAS_SYSTEM\t/**/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n#$d_tcgetpgrp HAS_TCGETPGRP\t\t/**/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n#$d_tcsetpgrp HAS_TCSETPGRP\t\t/**/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n#$d_truncate HAS_TRUNCATE\t/**/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n#$d_tzname HAS_TZNAME\t\t/**/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n#$d_umask HAS_UMASK\t\t/**/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n#$d_usleep HAS_USLEEP\t\t/**/\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n#$d_wait4 HAS_WAIT4\t/**/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n#$d_waitpid HAS_WAITPID\t/**/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n#$d_wcstombs HAS_WCSTOMBS\t/**/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto convert a wide character to a multibyte.\n */\n#$d_wctomb HAS_WCTOMB\t\t/**/\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc... \n *\tIt may be necessary to include <sys/types.h> to get any \n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t $groupstype\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n#$i_arpainet\tI_ARPA_INET\t\t/**/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n#$i_dbm I_DBM\t/**/\n#$i_rpcsvcdbm I_RPCSVC_DBM\t/**/\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n#$i_dlfcn I_DLFCN\t\t/**/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n#$i_fcntl I_FCNTL\t/**/\n\n/* I_FLOAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <float.h> to get definition of symbols like DBL_MAX or\n *\tDBL_MIN, i.e. machine dependent floating point values.\n */\n#$i_float I_FLOAT\t\t/**/\n\n/* I_GDBM:\n *\tThis symbol, if defined, indicates that <gdbm.h> exists and should\n *\tbe included.\n */\n#$i_gdbm I_GDBM\t/**/\n\n/* I_LIMITS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <limits.h> to get definition of symbols like WORD_BIT or\n *\tLONG_MAX, i.e. machine dependant limitations.\n */\n#$i_limits I_LIMITS\t\t/**/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n#$i_locale\tI_LOCALE\t\t/**/\n\n/* I_MATH:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <math.h>.\n */\n#$i_math I_MATH\t\t/**/\n\n/* I_MEMORY:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <memory.h>.\n */\n#$i_memory I_MEMORY\t\t/**/\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n#$i_niin I_NETINET_IN\t/**/\n\n/* I_STDDEF:\n *\tThis symbol, if defined, indicates that <stddef.h> exists and should\n *\tbe included.\n */\n#$i_stddef I_STDDEF\t/**/\n\n/* I_STDLIB:\n *\tThis symbol, if defined, indicates that <stdlib.h> exists and should\n *\tbe included.\n */\n#$i_stdlib I_STDLIB\t\t/**/\n\n/* I_STRING:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <string.h> (USG systems) instead of <strings.h> (BSD systems).\n */\n#$i_string I_STRING\t\t/**/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n#$i_sysdir I_SYS_DIR\t\t/**/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n#$i_sysfile I_SYS_FILE\t\t/**/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n#$i_sysioctl\tI_SYS_IOCTL\t\t/**/\n#$i_syssockio I_SYS_SOCKIO\t/**/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n#$i_sysndir I_SYS_NDIR\t/**/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n#$i_sysparam I_SYS_PARAM\t\t/**/\n\n/* I_SYS_POLL:\n *\tThis symbol, if defined, indicates that the program may include\n *\t<sys/poll.h>.  When I_POLL is also defined, it's probably safest\n *\tto only include <poll.h>.\n */\n#$i_syspoll I_SYS_POLL\t/**/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n#$i_sysresrc I_SYS_RESOURCE\t\t/**/\n\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n#$i_sysselct I_SYS_SELECT\t/**/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#$i_sysstat\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n#$i_systimes\tI_SYS_TIMES\t\t/**/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n#$i_systypes\tI_SYS_TYPES\t\t/**/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n#$i_sysun I_SYS_UN\t\t/**/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n#$i_syswait I_SYS_WAIT\t/**/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n#$i_unistd I_UNISTD\t\t/**/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n#$i_utime I_UTIME\t\t/**/\n\n/* I_VALUES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <values.h> to get definition of symbols like MINFLOAT or\n *\tMAXLONG, i.e. machine dependant limitations.  Probably, you\n *\tshould use <limits.h> instead, if it is available.\n */\n#$i_values I_VALUES\t\t/**/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n#$i_vfork I_VFORK\t/**/\n\n/* CAN_VAPROTO:\n *\tThis variable is defined on systems supporting prototype declaration\n *\tof functions with a variable number of arguments.\n */\n/* _V:\n *\tThis macro is used to declare function parameters in prototypes for\n *\tfunctions with a variable number of parameters. Use double parentheses.\n *\tFor example:\n *\n *\t\tint printf _V((char *fmt, ...));\n *\n *\tRemember to use the plain simple _() macro when declaring a function\n *\twith no variable number of arguments, since it might be possible to\n *\thave a non-effect _V() macro and still get prototypes via _().\n */\n#$vaproto CAN_VAPROTO\t/**/\n#ifdef CAN_VAPROTO\n#define\t_V(args) args\n#else\n#define\t_V(args) ()\n#endif\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"$osname\"\t\t/**/\n#define OSVERS \"$osvers\"\t\t/**/\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n#$multiarch MULTIARCH\t\t/**/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.  For cross-compiling\n *  \tor multiarch support, Configure will set a minimum of 8.\n */\n#define MEM_ALIGNBYTES $alignbytes\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for $package.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#$d_archlib ARCHLIB \"$archlib\"\t\t/**/\n#$d_archlib ARCHLIB_EXP \"$archlibexp\"\t\t/**/\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"$archname\"\t\t/**/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n/* PERL_RELOCATABLE_INC:\n *\tThis symbol, if defined, indicates that we'd like to relocate entries\n *\tin @INC at run time based on the location of the perl binary.\n */\n#define BIN \"$bin\"\t/**/\n#define BIN_EXP \"$binexp\"\t/**/\n#define PERL_RELOCATABLE_INC \"$userelocatableinc\" \t\t/**/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE $intsize\t\t/**/\n#define LONGSIZE $longsize\t\t/**/\n#define SHORTSIZE $shortsize\t\t/**/\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\tin a UV, i.e. 0x1234 or 0x4321 or 0x12345678, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries, use compiler-defined macros to\n *\tdetermine the byte order.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#else\n#define BYTEORDER 0x$byteorder\t/* large digits for MSB */\n#endif\n\n/* CHARBITS:\n *\tThis symbol contains the size of a char, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define CHARBITS $charbits\t\t/**/\n\n/* CAT2:\n *\tThis macro concatenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if $cpp_stuff == 1\n#define CAT2(a,b)\ta/**/b\n#define STRINGIFY(a)\t\"a\"\n#endif\n#if $cpp_stuff == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\n#define PeRl_StGiFy(a)\t#a\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if $cpp_stuff != 1 && $cpp_stuff != 42\n#include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.\t Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"$cppstdin\"\n#define CPPMINUS \"$cppminus\"\n#define CPPRUN \"$cpprun\"\n#define CPPLAST \"$cpplast\"\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n#$d_access HAS_ACCESS\t\t/**/\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n#$d_accessx HAS_ACCESSX\t\t/**/\n\n/* HAS_ASCTIME_R:\n *\tThis symbol, if defined, indicates that the asctime_r routine\n *\tis available to asctime re-entrantly.\n */\n/* ASCTIME_R_PROTO:\n *\tThis symbol encodes the prototype of asctime_r.\n *\tIt is zero if d_asctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_asctime_r\n *\tis defined.\n */\n#$d_asctime_r HAS_ASCTIME_R\t   /**/\n#define ASCTIME_R_PROTO $asctime_r_proto\t   /**/\n\n/* HASATTRIBUTE_FORMAT:\n *\tCan we handle GCC attribute for checking printf-style formats\n */\n/* PRINTF_FORMAT_NULL_OK:\n *\tAllows __printf__ format to be null when checking printf-style\n */\n/* HASATTRIBUTE_MALLOC:\n *\tCan we handle GCC attribute for malloc-style functions.\n */\n/* HASATTRIBUTE_NONNULL:\n *\tCan we handle GCC attribute for nonnull function parms.\n */\n/* HASATTRIBUTE_NORETURN:\n *\tCan we handle GCC attribute for functions that do not return\n */\n/* HASATTRIBUTE_PURE:\n *\tCan we handle GCC attribute for pure functions\n */\n/* HASATTRIBUTE_UNUSED:\n *\tCan we handle GCC attribute for unused variables and arguments\n */\n/* HASATTRIBUTE_DEPRECATED:\n *\tCan we handle GCC attribute for marking deprecated APIs\n */\n/* HASATTRIBUTE_WARN_UNUSED_RESULT:\n *\tCan we handle GCC attribute for warning on unused results\n */\n#$d_attribute_deprecated HASATTRIBUTE_DEPRECATED\t/**/\n#$d_attribute_format HASATTRIBUTE_FORMAT\t/**/\n#$d_printf_format_null PRINTF_FORMAT_NULL_OK\t/**/\n#$d_attribute_noreturn HASATTRIBUTE_NORETURN\t/**/\n#$d_attribute_malloc HASATTRIBUTE_MALLOC\t/**/\n#$d_attribute_nonnull HASATTRIBUTE_NONNULL\t/**/\n#$d_attribute_pure HASATTRIBUTE_PURE\t/**/\n#$d_attribute_unused HASATTRIBUTE_UNUSED\t/**/\n#$d_attribute_warn_unused_result HASATTRIBUTE_WARN_UNUSED_RESULT\t/**/\n\n/* HAS_BACKTRACE:\n *\tThis symbol, if defined, indicates that the backtrace() routine is\n *\tavailable to get a stack trace.  The <execinfo.h> header must be\n *\tincluded to use this routine.\n */\n#$d_backtrace HAS_BACKTRACE\t/**/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n#$d_casti32\tCASTI32\t\t/**/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n#$d_castneg\tCASTNEGFLOAT\t\t/**/\n#define CASTFLAGS $castflags\t\t/**/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n#$d_void_closedir VOID_CLOSEDIR\t\t/**/\n\n/* HASCONST:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe const type. There is no need to actually test for that symbol\n *\twithin your programs. The mere use of the \"const\" keyword will\n *\ttrigger the necessary tests.\n */\n#$d_const HASCONST\t/**/\n#ifndef HASCONST\n#define const\n#endif\n\n/* HAS_CRYPT_R:\n *\tThis symbol, if defined, indicates that the crypt_r routine\n *\tis available to crypt re-entrantly.\n */\n/* CRYPT_R_PROTO:\n *\tThis symbol encodes the prototype of crypt_r.\n *\tIt is zero if d_crypt_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_crypt_r\n *\tis defined.\n */\n#$d_crypt_r HAS_CRYPT_R\t   /**/\n#define CRYPT_R_PROTO $crypt_r_proto\t   /**/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n#$d_csh HAS_CSH\t\t/**/\n#ifdef HAS_CSH\n#define CSH \"$full_csh\"\t/**/\n#endif\n\n/* HAS_CTERMID_R:\n *\tThis symbol, if defined, indicates that the ctermid_r routine\n *\tis available to ctermid re-entrantly.\n */\n/* CTERMID_R_PROTO:\n *\tThis symbol encodes the prototype of ctermid_r.\n *\tIt is zero if d_ctermid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctermid_r\n *\tis defined.\n */\n#$d_ctermid_r HAS_CTERMID_R\t   /**/\n#define CTERMID_R_PROTO $ctermid_r_proto\t   /**/\n\n/* HAS_CTIME_R:\n *\tThis symbol, if defined, indicates that the ctime_r routine\n *\tis available to ctime re-entrantly.\n */\n/* CTIME_R_PROTO:\n *\tThis symbol encodes the prototype of ctime_r.\n *\tIt is zero if d_ctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctime_r\n *\tis defined.\n */\n#$d_ctime_r HAS_CTIME_R\t   /**/\n#define CTIME_R_PROTO $ctime_r_proto\t   /**/\n\n/* HAS_DLADDR:\n *\tThis symbol, if defined, indicates that the dladdr() routine is\n *\tavailable to query dynamic linker information for an address.\n *\tThe <dlfcn.h> header must be included to use this routine.\n */\n#$d_dladdr HAS_DLADDR\t/**/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n#$d_suidsafe SETUID_SCRIPTS_ARE_SECURE_NOW\t/**/\n#$d_dosuid DOSUID\t\t/**/\n\n/* HAS_DRAND48_R:\n *\tThis symbol, if defined, indicates that the drand48_r routine\n *\tis available to drand48 re-entrantly.\n */\n/* DRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of drand48_r.\n *\tIt is zero if d_drand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_drand48_r\n *\tis defined.\n */\n#$d_drand48_r HAS_DRAND48_R\t   /**/\n#define DRAND48_R_PROTO $drand48_r_proto\t   /**/\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n#$d_drand48proto\tHAS_DRAND48_PROTO\t/**/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n#$d_eaccess HAS_EACCESS\t\t/**/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n#$d_endgrent HAS_ENDGRENT\t\t/**/\n\n/* HAS_ENDGRENT_R:\n *\tThis symbol, if defined, indicates that the endgrent_r routine\n *\tis available to endgrent re-entrantly.\n */\n/* ENDGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of endgrent_r.\n *\tIt is zero if d_endgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endgrent_r\n *\tis defined.\n */\n#$d_endgrent_r HAS_ENDGRENT_R\t   /**/\n#define ENDGRENT_R_PROTO $endgrent_r_proto\t   /**/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n#$d_endhent HAS_ENDHOSTENT\t\t/**/\n\n/* HAS_ENDHOSTENT_R:\n *\tThis symbol, if defined, indicates that the endhostent_r routine\n *\tis available to endhostent re-entrantly.\n */\n/* ENDHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of endhostent_r.\n *\tIt is zero if d_endhostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endhostent_r\n *\tis defined.\n */\n#$d_endhostent_r HAS_ENDHOSTENT_R\t   /**/\n#define ENDHOSTENT_R_PROTO $endhostent_r_proto\t   /**/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n#$d_endnent HAS_ENDNETENT\t\t/**/\n\n/* HAS_ENDNETENT_R:\n *\tThis symbol, if defined, indicates that the endnetent_r routine\n *\tis available to endnetent re-entrantly.\n */\n/* ENDNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of endnetent_r.\n *\tIt is zero if d_endnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endnetent_r\n *\tis defined.\n */\n#$d_endnetent_r HAS_ENDNETENT_R\t   /**/\n#define ENDNETENT_R_PROTO $endnetent_r_proto\t   /**/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n#$d_endpent HAS_ENDPROTOENT\t\t/**/\n\n/* HAS_ENDPROTOENT_R:\n *\tThis symbol, if defined, indicates that the endprotoent_r routine\n *\tis available to endprotoent re-entrantly.\n */\n/* ENDPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of endprotoent_r.\n *\tIt is zero if d_endprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endprotoent_r\n *\tis defined.\n */\n#$d_endprotoent_r HAS_ENDPROTOENT_R\t   /**/\n#define ENDPROTOENT_R_PROTO $endprotoent_r_proto\t   /**/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n#$d_endpwent HAS_ENDPWENT\t\t/**/\n\n/* HAS_ENDPWENT_R:\n *\tThis symbol, if defined, indicates that the endpwent_r routine\n *\tis available to endpwent re-entrantly.\n */\n/* ENDPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of endpwent_r.\n *\tIt is zero if d_endpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endpwent_r\n *\tis defined.\n */\n#$d_endpwent_r HAS_ENDPWENT_R\t   /**/\n#define ENDPWENT_R_PROTO $endpwent_r_proto\t   /**/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n#$d_endsent HAS_ENDSERVENT\t\t/**/\n\n/* HAS_ENDSERVENT_R:\n *\tThis symbol, if defined, indicates that the endservent_r routine\n *\tis available to endservent re-entrantly.\n */\n/* ENDSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of endservent_r.\n *\tIt is zero if d_endservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endservent_r\n *\tis defined.\n */\n#$d_endservent_r HAS_ENDSERVENT_R\t   /**/\n#define ENDSERVENT_R_PROTO $endservent_r_proto\t   /**/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n#$d_fd_set HAS_FD_SET\t/**/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n#$d_flexfnam\tFLEXFILENAMES\t\t/**/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tThe usual values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) $d_Gconvert\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n#$d_getgrent HAS_GETGRENT\t\t/**/\n\n/* HAS_GETGRENT_R:\n *\tThis symbol, if defined, indicates that the getgrent_r routine\n *\tis available to getgrent re-entrantly.\n */\n/* GETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of getgrent_r.\n *\tIt is zero if d_getgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrent_r\n *\tis defined.\n */\n#$d_getgrent_r HAS_GETGRENT_R\t   /**/\n#define GETGRENT_R_PROTO $getgrent_r_proto\t   /**/\n\n/* HAS_GETGRGID_R:\n *\tThis symbol, if defined, indicates that the getgrgid_r routine\n *\tis available to getgrgid re-entrantly.\n */\n/* GETGRGID_R_PROTO:\n *\tThis symbol encodes the prototype of getgrgid_r.\n *\tIt is zero if d_getgrgid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrgid_r\n *\tis defined.\n */\n#$d_getgrgid_r HAS_GETGRGID_R\t   /**/\n#define GETGRGID_R_PROTO $getgrgid_r_proto\t   /**/\n\n/* HAS_GETGRNAM_R:\n *\tThis symbol, if defined, indicates that the getgrnam_r routine\n *\tis available to getgrnam re-entrantly.\n */\n/* GETGRNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getgrnam_r.\n *\tIt is zero if d_getgrnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrnam_r\n *\tis defined.\n */\n#$d_getgrnam_r HAS_GETGRNAM_R\t   /**/\n#define GETGRNAM_R_PROTO $getgrnam_r_proto\t   /**/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n#$d_gethbyaddr HAS_GETHOSTBYADDR\t\t/**/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n#$d_gethbyname HAS_GETHOSTBYNAME\t\t/**/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n#$d_gethent HAS_GETHOSTENT\t\t/**/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n#$d_gethname HAS_GETHOSTNAME\t/**/\n#$d_uname HAS_UNAME\t\t/**/\n#$d_phostname HAS_PHOSTNAME\t/**/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"$aphostname\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETHOSTBYADDR_R:\n *\tThis symbol, if defined, indicates that the gethostbyaddr_r routine\n *\tis available to gethostbyaddr re-entrantly.\n */\n/* GETHOSTBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyaddr_r.\n *\tIt is zero if d_gethostbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyaddr_r\n *\tis defined.\n */\n#$d_gethostbyaddr_r HAS_GETHOSTBYADDR_R\t   /**/\n#define GETHOSTBYADDR_R_PROTO $gethostbyaddr_r_proto\t   /**/\n\n/* HAS_GETHOSTBYNAME_R:\n *\tThis symbol, if defined, indicates that the gethostbyname_r routine\n *\tis available to gethostbyname re-entrantly.\n */\n/* GETHOSTBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyname_r.\n *\tIt is zero if d_gethostbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyname_r\n *\tis defined.\n */\n#$d_gethostbyname_r HAS_GETHOSTBYNAME_R\t   /**/\n#define GETHOSTBYNAME_R_PROTO $gethostbyname_r_proto\t   /**/\n\n/* HAS_GETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the gethostent_r routine\n *\tis available to gethostent re-entrantly.\n */\n/* GETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of gethostent_r.\n *\tIt is zero if d_gethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostent_r\n *\tis defined.\n */\n#$d_gethostent_r HAS_GETHOSTENT_R\t   /**/\n#define GETHOSTENT_R_PROTO $gethostent_r_proto\t   /**/\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#$d_gethostprotos\tHAS_GETHOST_PROTOS\t/**/\n\n/* HAS_GETLOGIN_R:\n *\tThis symbol, if defined, indicates that the getlogin_r routine\n *\tis available to getlogin re-entrantly.\n */\n/* GETLOGIN_R_PROTO:\n *\tThis symbol encodes the prototype of getlogin_r.\n *\tIt is zero if d_getlogin_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getlogin_r\n *\tis defined.\n */\n#$d_getlogin_r HAS_GETLOGIN_R\t   /**/\n#define GETLOGIN_R_PROTO $getlogin_r_proto\t   /**/\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n#$d_getnbyaddr HAS_GETNETBYADDR\t\t/**/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n#$d_getnbyname HAS_GETNETBYNAME\t\t/**/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n#$d_getnent HAS_GETNETENT\t\t/**/\n\n/* HAS_GETNETBYADDR_R:\n *\tThis symbol, if defined, indicates that the getnetbyaddr_r routine\n *\tis available to getnetbyaddr re-entrantly.\n */\n/* GETNETBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyaddr_r.\n *\tIt is zero if d_getnetbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r\n *\tis defined.\n */\n#$d_getnetbyaddr_r HAS_GETNETBYADDR_R\t   /**/\n#define GETNETBYADDR_R_PROTO $getnetbyaddr_r_proto\t   /**/\n\n/* HAS_GETNETBYNAME_R:\n *\tThis symbol, if defined, indicates that the getnetbyname_r routine\n *\tis available to getnetbyname re-entrantly.\n */\n/* GETNETBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyname_r.\n *\tIt is zero if d_getnetbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyname_r\n *\tis defined.\n */\n#$d_getnetbyname_r HAS_GETNETBYNAME_R\t   /**/\n#define GETNETBYNAME_R_PROTO $getnetbyname_r_proto\t   /**/\n\n/* HAS_GETNETENT_R:\n *\tThis symbol, if defined, indicates that the getnetent_r routine\n *\tis available to getnetent re-entrantly.\n */\n/* GETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of getnetent_r.\n *\tIt is zero if d_getnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetent_r\n *\tis defined.\n */\n#$d_getnetent_r HAS_GETNETENT_R\t   /**/\n#define GETNETENT_R_PROTO $getnetent_r_proto\t   /**/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#$d_getnetprotos\tHAS_GETNET_PROTOS\t/**/\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n#$d_getpagsz HAS_GETPAGESIZE\t\t/**/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n#$d_getpent HAS_GETPROTOENT\t\t/**/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n#$d_getpgrp HAS_GETPGRP\t\t/**/\n#$d_bsdgetpgrp USE_BSD_GETPGRP\t/**/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n#$d_getpbyname HAS_GETPROTOBYNAME\t\t/**/\n#$d_getpbynumber HAS_GETPROTOBYNUMBER\t\t/**/\n\n/* HAS_GETPROTOBYNAME_R:\n *\tThis symbol, if defined, indicates that the getprotobyname_r routine\n *\tis available to getprotobyname re-entrantly.\n */\n/* GETPROTOBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobyname_r.\n *\tIt is zero if d_getprotobyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobyname_r\n *\tis defined.\n */\n#$d_getprotobyname_r HAS_GETPROTOBYNAME_R\t   /**/\n#define GETPROTOBYNAME_R_PROTO $getprotobyname_r_proto\t   /**/\n\n/* HAS_GETPROTOBYNUMBER_R:\n *\tThis symbol, if defined, indicates that the getprotobynumber_r routine\n *\tis available to getprotobynumber re-entrantly.\n */\n/* GETPROTOBYNUMBER_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobynumber_r.\n *\tIt is zero if d_getprotobynumber_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobynumber_r\n *\tis defined.\n */\n#$d_getprotobynumber_r HAS_GETPROTOBYNUMBER_R\t   /**/\n#define GETPROTOBYNUMBER_R_PROTO $getprotobynumber_r_proto\t   /**/\n\n/* HAS_GETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the getprotoent_r routine\n *\tis available to getprotoent re-entrantly.\n */\n/* GETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of getprotoent_r.\n *\tIt is zero if d_getprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotoent_r\n *\tis defined.\n */\n#$d_getprotoent_r HAS_GETPROTOENT_R\t   /**/\n#define GETPROTOENT_R_PROTO $getprotoent_r_proto\t   /**/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#$d_getprotoprotos\tHAS_GETPROTO_PROTOS\t/**/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n#$d_getpwent HAS_GETPWENT\t\t/**/\n\n/* HAS_GETPWENT_R:\n *\tThis symbol, if defined, indicates that the getpwent_r routine\n *\tis available to getpwent re-entrantly.\n */\n/* GETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of getpwent_r.\n *\tIt is zero if d_getpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwent_r\n *\tis defined.\n */\n#$d_getpwent_r HAS_GETPWENT_R\t   /**/\n#define GETPWENT_R_PROTO $getpwent_r_proto\t   /**/\n\n/* HAS_GETPWNAM_R:\n *\tThis symbol, if defined, indicates that the getpwnam_r routine\n *\tis available to getpwnam re-entrantly.\n */\n/* GETPWNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getpwnam_r.\n *\tIt is zero if d_getpwnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwnam_r\n *\tis defined.\n */\n#$d_getpwnam_r HAS_GETPWNAM_R\t   /**/\n#define GETPWNAM_R_PROTO $getpwnam_r_proto\t   /**/\n\n/* HAS_GETPWUID_R:\n *\tThis symbol, if defined, indicates that the getpwuid_r routine\n *\tis available to getpwuid re-entrantly.\n */\n/* GETPWUID_R_PROTO:\n *\tThis symbol encodes the prototype of getpwuid_r.\n *\tIt is zero if d_getpwuid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwuid_r\n *\tis defined.\n */\n#$d_getpwuid_r HAS_GETPWUID_R\t   /**/\n#define GETPWUID_R_PROTO $getpwuid_r_proto\t   /**/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n#$d_getsent HAS_GETSERVENT\t\t/**/\n\n/* HAS_GETSERVBYNAME_R:\n *\tThis symbol, if defined, indicates that the getservbyname_r routine\n *\tis available to getservbyname re-entrantly.\n */\n/* GETSERVBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyname_r.\n *\tIt is zero if d_getservbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyname_r\n *\tis defined.\n */\n#$d_getservbyname_r HAS_GETSERVBYNAME_R\t   /**/\n#define GETSERVBYNAME_R_PROTO $getservbyname_r_proto\t   /**/\n\n/* HAS_GETSERVBYPORT_R:\n *\tThis symbol, if defined, indicates that the getservbyport_r routine\n *\tis available to getservbyport re-entrantly.\n */\n/* GETSERVBYPORT_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyport_r.\n *\tIt is zero if d_getservbyport_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r\n *\tis defined.\n */\n#$d_getservbyport_r HAS_GETSERVBYPORT_R\t   /**/\n#define GETSERVBYPORT_R_PROTO $getservbyport_r_proto\t   /**/\n\n/* HAS_GETSERVENT_R:\n *\tThis symbol, if defined, indicates that the getservent_r routine\n *\tis available to getservent re-entrantly.\n */\n/* GETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of getservent_r.\n *\tIt is zero if d_getservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservent_r\n *\tis defined.\n */\n#$d_getservent_r HAS_GETSERVENT_R\t   /**/\n#define GETSERVENT_R_PROTO $getservent_r_proto\t   /**/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#$d_getservprotos\tHAS_GETSERV_PROTOS\t/**/\n\n/* HAS_GETSPNAM_R:\n *\tThis symbol, if defined, indicates that the getspnam_r routine\n *\tis available to getspnam re-entrantly.\n */\n/* GETSPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getspnam_r.\n *\tIt is zero if d_getspnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getspnam_r\n *\tis defined.\n */\n#$d_getspnam_r HAS_GETSPNAM_R\t   /**/\n#define GETSPNAM_R_PROTO $getspnam_r_proto\t   /**/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n#$d_getsbyname HAS_GETSERVBYNAME\t\t/**/\n#$d_getsbyport HAS_GETSERVBYPORT\t\t/**/\n\n/* HAS_GMTIME_R:\n *\tThis symbol, if defined, indicates that the gmtime_r routine\n *\tis available to gmtime re-entrantly.\n */\n/* GMTIME_R_PROTO:\n *\tThis symbol encodes the prototype of gmtime_r.\n *\tIt is zero if d_gmtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gmtime_r\n *\tis defined.\n */\n#$d_gmtime_r HAS_GMTIME_R\t   /**/\n#define GMTIME_R_PROTO $gmtime_r_proto\t   /**/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n#$d_gnulibc HAS_GNULIBC  \t/**/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n#$d_htonl HAS_HTONL\t\t/**/\n#$d_htonl HAS_HTONS\t\t/**/\n#$d_htonl HAS_NTOHL\t\t/**/\n#$d_htonl HAS_NTOHS\t\t/**/\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii\n *\tis available.\n */\n#$d_isascii HAS_ISASCII\t\t/**/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n#$d_lchown HAS_LCHOWN\t\t/**/\n\n/* HAS_LOCALTIME_R:\n *\tThis symbol, if defined, indicates that the localtime_r routine\n *\tis available to localtime re-entrantly.\n */\n/* LOCALTIME_R_NEEDS_TZSET:\n *\tMany libc's localtime_r implementations do not call tzset,\n *\tmaking them differ from localtime(), and making timezone\n *\tchanges using \\$ENV{TZ} without explicitly calling tzset\n *\timpossible. This symbol makes us call tzset before localtime_r\n */\n#$d_localtime_r_needs_tzset LOCALTIME_R_NEEDS_TZSET /**/\n#ifdef LOCALTIME_R_NEEDS_TZSET\n#define L_R_TZSET tzset(),\n#else\n#define L_R_TZSET\n#endif\n\n/* LOCALTIME_R_PROTO:\n *\tThis symbol encodes the prototype of localtime_r.\n *\tIt is zero if d_localtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_localtime_r\n *\tis defined.\n */\n#$d_localtime_r HAS_LOCALTIME_R\t   /**/\n#define LOCALTIME_R_PROTO $localtime_r_proto\t   /**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.   Note that this\n *\tis sizeof(long double), which may include unused bytes.\n */\n/* HAS_LDEXPL:\n *\tThis symbol, if defined, indicates that the ldexpl routine is\n *\tavailable to shift a long double floating-point number\n *\tby an integral power of 2.\n */\n/* LONG_DOUBLEKIND:\n *\tLONG_DOUBLEKIND will be one of\n *\tLONG_DOUBLE_IS_DOUBLE\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_UNKNOWN_FORMAT\n *\tIt is only defined if the system supports long doubles.\n */\n#$d_ldexpl  HAS_LDEXPL\t\t/**/\n#$d_longdbl HAS_LONG_DOUBLE\t\t/**/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE $longdblsize\t\t/**/\n#define LONG_DOUBLEKIND $longdblkind\t\t/**/\n#define LONG_DOUBLE_IS_DOUBLE\t\t\t\t0\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\t1\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\t2\n#define LONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\t\t3\n#define LONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\t\t4\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LITTLE_ENDIAN\t5\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BIG_ENDIAN\t6\n#define LONG_DOUBLE_IS_UNKNOWN_FORMAT\t\t\t-1\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n#$d_longlong HAS_LONG_LONG\t\t/**/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE $longlongsize\t\t/**/\n#endif\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n#$d_lseekproto\tHAS_LSEEK_PROTO\t/**/\n\n/* HAS_MEMCHR:\n *\tThis symbol, if defined, indicates that the memchr routine is available\n *\tto locate characters within a C string.\n */\n#$d_memchr HAS_MEMCHR\t/**/\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n#$d_mkstemp HAS_MKSTEMP\t\t/**/\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'caddr_t'.\n */\n#$d_mmap HAS_MMAP\t\t/**/\n#define Mmap_t $mmaptype\t/**/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n#$d_msg HAS_MSG\t\t/**/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n#$d_open3 HAS_OPEN3\t\t/**/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n#$d_old_pthread_create_joinable OLD_PTHREAD_CREATE_JOINABLE $old_pthread_create_joinable /**/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n#$d_pthread_atfork HAS_PTHREAD_ATFORK\t\t/**/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n#$d_pthread_yield HAS_PTHREAD_YIELD\t/**/\n#define SCHED_YIELD\t$sched_yield\t/**/\n#$d_sched_yield HAS_SCHED_YIELD\t/**/\n\n/* HAS_RANDOM_R:\n *\tThis symbol, if defined, indicates that the random_r routine\n *\tis available to random re-entrantly.\n */\n/* RANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of random_r.\n *\tIt is zero if d_random_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r\n *\tis defined.\n */\n#$d_random_r HAS_RANDOM_R\t   /**/\n#define RANDOM_R_PROTO $random_r_proto\t   /**/\n\n/* HAS_READDIR64_R:\n *\tThis symbol, if defined, indicates that the readdir64_r routine\n *\tis available to readdir64 re-entrantly.\n */\n/* READDIR64_R_PROTO:\n *\tThis symbol encodes the prototype of readdir64_r.\n *\tIt is zero if d_readdir64_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir64_r\n *\tis defined.\n */\n#$d_readdir64_r HAS_READDIR64_R\t   /**/\n#define READDIR64_R_PROTO $readdir64_r_proto\t   /**/\n\n/* HAS_READDIR_R:\n *\tThis symbol, if defined, indicates that the readdir_r routine\n *\tis available to readdir re-entrantly.\n */\n/* READDIR_R_PROTO:\n *\tThis symbol encodes the prototype of readdir_r.\n *\tIt is zero if d_readdir_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir_r\n *\tis defined.\n */\n#$d_readdir_r HAS_READDIR_R\t   /**/\n#define READDIR_R_PROTO $readdir_r_proto\t   /**/\n\n/* HAS_SAFE_BCOPY:\n *\tThis symbol, if defined, indicates that the bcopy routine is available\n *\tto copy potentially overlapping memory blocks. Normally, you should\n *\tprobably use memmove() or memcpy(). If neither is defined, roll your\n *\town version.\n */\n#$d_safebcpy HAS_SAFE_BCOPY\t/**/\n\n/* HAS_SAFE_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy potentially overlapping memory blocks.  If you need to\n *\tcopy overlapping memory blocks, you should check HAS_MEMMOVE and\n *\tuse memmove() instead, if available.\n */\n#$d_safemcpy HAS_SAFE_MEMCPY\t/**/\n\n/* HAS_SANE_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tand can be used to compare relative magnitudes of chars with their high\n *\tbits set.  If it is not defined, roll your own version.\n */\n#$d_sanemcmp HAS_SANE_MEMCMP\t/**/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n#$d_sem HAS_SEM\t\t/**/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n#$d_setgrent HAS_SETGRENT\t\t/**/\n\n/* HAS_SETGRENT_R:\n *\tThis symbol, if defined, indicates that the setgrent_r routine\n *\tis available to setgrent re-entrantly.\n */\n/* SETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of setgrent_r.\n *\tIt is zero if d_setgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setgrent_r\n *\tis defined.\n */\n#$d_setgrent_r HAS_SETGRENT_R\t   /**/\n#define SETGRENT_R_PROTO $setgrent_r_proto\t   /**/\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n#$d_sethent HAS_SETHOSTENT\t\t/**/\n\n/* HAS_SETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the sethostent_r routine\n *\tis available to sethostent re-entrantly.\n */\n/* SETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of sethostent_r.\n *\tIt is zero if d_sethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_sethostent_r\n *\tis defined.\n */\n#$d_sethostent_r HAS_SETHOSTENT_R\t   /**/\n#define SETHOSTENT_R_PROTO $sethostent_r_proto\t   /**/\n\n/* HAS_SETLOCALE_R:\n *\tThis symbol, if defined, indicates that the setlocale_r routine\n *\tis available to setlocale re-entrantly.\n */\n/* SETLOCALE_R_PROTO:\n *\tThis symbol encodes the prototype of setlocale_r.\n *\tIt is zero if d_setlocale_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setlocale_r\n *\tis defined.\n */\n#$d_setlocale_r HAS_SETLOCALE_R\t   /**/\n#define SETLOCALE_R_PROTO $setlocale_r_proto\t   /**/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n#$d_setnent HAS_SETNETENT\t\t/**/\n\n/* HAS_SETNETENT_R:\n *\tThis symbol, if defined, indicates that the setnetent_r routine\n *\tis available to setnetent re-entrantly.\n */\n/* SETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of setnetent_r.\n *\tIt is zero if d_setnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setnetent_r\n *\tis defined.\n */\n#$d_setnetent_r HAS_SETNETENT_R\t   /**/\n#define SETNETENT_R_PROTO $setnetent_r_proto\t   /**/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n#$d_setpent HAS_SETPROTOENT\t\t/**/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n#$d_setpgrp HAS_SETPGRP\t\t/**/\n#$d_bsdsetpgrp USE_BSD_SETPGRP\t/**/\n\n/* HAS_SETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the setprotoent_r routine\n *\tis available to setprotoent re-entrantly.\n */\n/* SETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of setprotoent_r.\n *\tIt is zero if d_setprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setprotoent_r\n *\tis defined.\n */\n#$d_setprotoent_r HAS_SETPROTOENT_R\t   /**/\n#define SETPROTOENT_R_PROTO $setprotoent_r_proto\t   /**/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n#$d_setpwent HAS_SETPWENT\t\t/**/\n\n/* HAS_SETPWENT_R:\n *\tThis symbol, if defined, indicates that the setpwent_r routine\n *\tis available to setpwent re-entrantly.\n */\n/* SETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of setpwent_r.\n *\tIt is zero if d_setpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setpwent_r\n *\tis defined.\n */\n#$d_setpwent_r HAS_SETPWENT_R\t   /**/\n#define SETPWENT_R_PROTO $setpwent_r_proto\t   /**/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n#$d_setsent HAS_SETSERVENT\t\t/**/\n\n/* HAS_SETSERVENT_R:\n *\tThis symbol, if defined, indicates that the setservent_r routine\n *\tis available to setservent re-entrantly.\n */\n/* SETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of setservent_r.\n *\tIt is zero if d_setservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setservent_r\n *\tis defined.\n */\n#$d_setservent_r HAS_SETSERVENT_R\t   /**/\n#define SETSERVENT_R_PROTO $setservent_r_proto\t   /**/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n#$d_setvbuf HAS_SETVBUF\t\t/**/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n#$d_shm HAS_SHM\t\t/**/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t $shmattype\t/**/\n#$d_shmatprototype HAS_SHMAT_PROTOTYPE\t/**/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n#$d_sigaction HAS_SIGACTION\t/**/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n#$d_sigsetjmp HAS_SIGSETJMP\t/**/\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n/* HAS_MSG_CTRUNC:\n *\tThis symbol, if defined, indicates that the MSG_CTRUNC is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_DONTROUTE:\n *\tThis symbol, if defined, indicates that the MSG_DONTROUTE is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_OOB:\n *\tThis symbol, if defined, indicates that the MSG_OOB is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PEEK:\n *\tThis symbol, if defined, indicates that the MSG_PEEK is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PROXY:\n *\tThis symbol, if defined, indicates that the MSG_PROXY is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_SCM_RIGHTS:\n *\tThis symbol, if defined, indicates that the SCM_RIGHTS is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_SOCKADDR_SA_LEN:\n *\tThis symbol, if defined, indicates that the struct sockaddr\n *\tstructure has a member called sa_len, indicating the length of\n *\tthe structure.\n */\n/* HAS_SOCKADDR_IN6:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct sockaddr_in6;\n */\n/* HAS_SIN6_SCOPE_ID:\n *\tThis symbol, if defined, indicates that the struct sockaddr_in6\n *\tstructure has a member called sin6_scope_id.\n */\n/* HAS_IP_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq;\n */\n/* HAS_IP_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq_source;\n */\n/* HAS_IPV6_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq;\n */\n/* HAS_IPV6_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq_source;\n */\n#$d_socket\tHAS_SOCKET\t\t/**/\n#$d_sockpair\tHAS_SOCKETPAIR\t/**/\n#$d_sockaddr_sa_len\tHAS_SOCKADDR_SA_LEN\t/**/\n#$d_msg_ctrunc\tHAS_MSG_CTRUNC\t/**/\n#$d_msg_dontroute\tHAS_MSG_DONTROUTE\t/**/\n#$d_msg_oob\tHAS_MSG_OOB\t/**/\n#$d_msg_peek\tHAS_MSG_PEEK\t/**/\n#$d_msg_proxy\tHAS_MSG_PROXY\t/**/\n#$d_scm_rights\tHAS_SCM_RIGHTS\t/**/\n#$d_sockaddr_in6\tHAS_SOCKADDR_IN6\t/**/\n#$d_sin6_scope_id\tHAS_SIN6_SCOPE_ID\t/**/\n#$d_ip_mreq\tHAS_IP_MREQ\t/**/\n#$d_ip_mreq_source\tHAS_IP_MREQ_SOURCE\t/**/\n#$d_ipv6_mreq\tHAS_IPV6_MREQ\t/**/\n#$d_ipv6_mreq_source\tHAS_IPV6_MREQ_SOURCE\t/**/\n\n/* HAS_SRAND48_R:\n *\tThis symbol, if defined, indicates that the srand48_r routine\n *\tis available to srand48 re-entrantly.\n */\n/* SRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of srand48_r.\n *\tIt is zero if d_srand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srand48_r\n *\tis defined.\n */\n#$d_srand48_r HAS_SRAND48_R\t   /**/\n#define SRAND48_R_PROTO $srand48_r_proto\t   /**/\n\n/* HAS_SRANDOM_R:\n *\tThis symbol, if defined, indicates that the srandom_r routine\n *\tis available to srandom re-entrantly.\n */\n/* SRANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of srandom_r.\n *\tIt is zero if d_srandom_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srandom_r\n *\tis defined.\n */\n#$d_srandom_r HAS_SRANDOM_R\t   /**/\n#define SRANDOM_R_PROTO $srandom_r_proto\t   /**/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n#$d_statblks USE_STAT_BLOCKS \t/**/\n#endif\n\n/* HAS_STATIC_INLINE:\n *\tThis symbol, if defined, indicates that the C compiler supports\n *\tC99-style static inline.  That is, the function can't be called\n *\tfrom another translation unit.\n */\n/* PERL_STATIC_INLINE:\n *\tThis symbol gives the best-guess incantation to use for static\n *\tinline functions.  If HAS_STATIC_INLINE is defined, this will\n *\tgive C99-style inline.  If HAS_STATIC_INLINE is not defined,\n *\tthis will give a plain 'static'.  It will always be defined\n *\tto something that gives static linkage.\n *\tPossibilities include\n *\t\tstatic inline       (c99)\n *\t\tstatic __inline__   (gcc -ansi)\n *\t\tstatic __inline     (MSVC)\n *\t\tstatic _inline      (older MSVC)\n *\t\tstatic              (c89 compilers)\n */\n#$d_static_inline HAS_STATIC_INLINE\t\t\t\t/**/\n#define PERL_STATIC_INLINE $perl_static_inline\t/**/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n#$d_stdstdio USE_STDIO_PTR \t/**/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\t$stdio_ptr\n#$d_stdio_ptr_lval STDIO_PTR_LVALUE \t\t/**/\n#define FILE_cnt(fp)\t$stdio_cnt\n#$d_stdio_cnt_lval STDIO_CNT_LVALUE \t\t/**/\n#$d_stdio_ptr_lval_sets_cnt STDIO_PTR_LVAL_SETS_CNT\t/**/\n#$d_stdio_ptr_lval_nochange_cnt STDIO_PTR_LVAL_NOCHANGE_CNT\t/**/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n#$d_stdiobase USE_STDIO_BASE \t/**/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\t$stdio_base\n#define FILE_bufsiz(fp)\t$stdio_bufsiz\n#endif\n\n/* USE_STRUCT_COPY:\n *\tThis symbol, if defined, indicates that this C compiler knows how\n *\tto copy structures.  If undefined, you'll need to use a block copy\n *\troutine of some sort instead.\n */\n#$d_strctcpy\tUSE_STRUCT_COPY\t/**/\n\n/* HAS_STRERROR:\n *\tThis symbol, if defined, indicates that the strerror routine is\n *\tavailable to translate error numbers to strings. See the writeup\n *\tof Strerror() in this file before you try to define your own.\n */\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n/* Strerror:\n *\tThis preprocessor symbol is defined as a macro if strerror() is\n *\tnot available to translate error numbers to strings but sys_errlist[]\n *\tarray is there.\n */\n#$d_strerror HAS_STRERROR\t\t/**/\n#$d_syserrlst HAS_SYS_ERRLIST\t/**/\n#define Strerror(e) $d_strerrm\n\n/* HAS_STRERROR_R:\n *\tThis symbol, if defined, indicates that the strerror_r routine\n *\tis available to strerror re-entrantly.\n */\n/* STRERROR_R_PROTO:\n *\tThis symbol encodes the prototype of strerror_r.\n *\tIt is zero if d_strerror_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_strerror_r\n *\tis defined.\n */\n#$d_strerror_r HAS_STRERROR_R\t   /**/\n#define STRERROR_R_PROTO $strerror_r_proto\t   /**/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#$d_strtoul HAS_STRTOUL\t/**/\n\n/* HAS_TIME:\n *\tThis symbol, if defined, indicates that the time() routine exists.\n */\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#$d_time HAS_TIME\t\t/**/\n#define Time_t $timetype\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n * use getrusage(). It may be necessary to include <sys/times.h>.\n */\n#$d_times HAS_TIMES\t\t/**/\n\n/* HAS_TMPNAM_R:\n *\tThis symbol, if defined, indicates that the tmpnam_r routine\n *\tis available to tmpnam re-entrantly.\n */\n/* TMPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of tmpnam_r.\n *\tIt is zero if d_tmpnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_tmpnam_r\n *\tis defined.\n */\n#$d_tmpnam_r HAS_TMPNAM_R\t   /**/\n#define TMPNAM_R_PROTO $tmpnam_r_proto\t   /**/\n\n/* HAS_TTYNAME_R:\n *\tThis symbol, if defined, indicates that the ttyname_r routine\n *\tis available to ttyname re-entrantly.\n */\n/* TTYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of ttyname_r.\n *\tIt is zero if d_ttyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ttyname_r\n *\tis defined.\n */\n#$d_ttyname_r HAS_TTYNAME_R\t   /**/\n#define TTYNAME_R_PROTO $ttyname_r_proto\t   /**/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n#$d_union_semun HAS_UNION_SEMUN\t/**/\n#$d_semctl_semun USE_SEMCTL_SEMUN\t/**/\n#$d_semctl_semid_ds USE_SEMCTL_SEMID_DS\t/**/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n#$d_vfork HAS_VFORK\t/**/\n\n/* HAS_PSEUDOFORK:\n *\tThis symbol, if defined, indicates that an emulation of the\n *\tfork routine is available.\n */\n#$d_pseudofork HAS_PSEUDOFORK\t/**/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t $signal_t\t/* Signal handler's return type */\n\n/* HASVOLATILE:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe volatile declaration.\n */\n#$d_volatile\tHASVOLATILE\t/**/\n#ifndef HASVOLATILE\n#define volatile\n#endif\n\n/* HAS_VPRINTF:\n *\tThis symbol, if defined, indicates that the vprintf routine is available\n *\tto printf with a pointer to an argument list.  If unavailable, you\n *\tmay need to write your own, probably in terms of _doprnt().\n */\n/* USE_CHAR_VSPRINTF:\n *\tThis symbol is defined if this system has vsprintf() returning type\n *\t(char*).  The trend seems to be to declare it as \"int vsprintf()\".  It\n *\tis up to the package author to declare vsprintf correctly based on the\n *\tsymbol.\n */\n#$d_vprintf HAS_VPRINTF\t/**/\n#$d_charvspr USE_CHAR_VSPRINTF \t/**/\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE $doublesize\t\t/**/\n\n/* EBCDIC:\n *\tThis symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n#$ebcdic\tEBCDIC \t\t/**/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t $fpostype\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t$gidformat\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedness of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t$gidsign\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size $gidsize\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t $gidtype\t\t/* Type for getgid(), etc... */\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#$i_dirent I_DIRENT\t\t/**/\n#$d_dirnamlen DIRNAMLEN\t/**/\n#define Direntry_t $direntrytype\n\n/* I_EXECINFO:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <execinfo.h> for backtrace() support.\n */\n#$i_execinfo I_EXECINFO\t\t/**/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n#$i_grp I_GRP\t\t/**/\n#$d_grpasswd GRPASSWD\t/**/\n\n/* I_MACH_CTHREADS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <mach/cthreads.h>.\n */\n#$i_machcthr   I_MACH_CTHREADS\t/**/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/* I_GDBMNDBM:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> exists and should\n *\tbe included.  This was the location of the ndbm.h compatibility file\n *\tin RedHat 7.1.\n */\n/* I_GDBM_NDBM:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> exists and should\n *\tbe included.  This is the location of the ndbm.h compatibility file\n *\tin Debian 4.0.\n */\n/* NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBMNDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBM_NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n#$i_ndbm I_NDBM\t/**/\n#$i_gdbmndbm I_GDBMNDBM\t/**/\n#$i_gdbm_ndbm I_GDBM_NDBM\t/**/\n#$d_ndbm_h_uses_prototypes NDBM_H_USES_PROTOTYPES\t/**/\n#$d_gdbmndbm_h_uses_prototypes GDBMNDBM_H_USES_PROTOTYPES\t/**/\n#$d_gdbm_ndbm_h_uses_prototypes GDBM_NDBM_H_USES_PROTOTYPES\t/**/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n#$i_netdb I_NETDB\t\t/**/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and\n *\tshould be included.\n */\n#$i_neterrno I_NET_ERRNO\t\t/**/\n\n/* I_PTHREAD:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <pthread.h>.\n */\n#$i_pthread   I_PTHREAD\t/**/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n#$i_pwd I_PWD\t\t/**/\n#$d_pwquota PWQUOTA\t/**/\n#$d_pwage PWAGE\t/**/\n#$d_pwchange PWCHANGE\t/**/\n#$d_pwclass PWCLASS\t/**/\n#$d_pwexpire PWEXPIRE\t/**/\n#$d_pwcomment PWCOMMENT\t/**/\n#$d_pwgecos PWGECOS\t/**/\n#$d_pwpasswd PWPASSWD\t/**/\n\n/* I_SYS_ACCESS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/access.h>.\n */\n#$i_sysaccess   I_SYS_ACCESS                /**/\n\n/* I_SYS_SECURITY:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/security.h>.\n */\n#$i_syssecrt   I_SYS_SECURITY\t/**/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n#$i_sysuio\tI_SYSUIO\t\t/**/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n#$i_termio I_TERMIO\t\t/**/\n#$i_termios I_TERMIOS\t\t/**/\n#$i_sgtty I_SGTTY\t\t/**/\n\n/* I_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n/* HAS_TM_TM_ZONE:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_zone field.\n */\n/* HAS_TM_TM_GMTOFF:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_gmtoff field.\n */\n#$i_time I_TIME\t\t/**/\n#$i_systime I_SYS_TIME\t\t/**/\n#$i_systimek I_SYS_TIME_KERNEL\t\t/**/\n#$d_tm_tm_zone HAS_TM_TM_ZONE\t\t/**/\n#$d_tm_tm_gmtoff HAS_TM_TM_GMTOFF\t\t/**/\n\n/* I_STDARG:\n *\tThis symbol, if defined, indicates that <stdarg.h> exists and should\n *\tbe included.\n */\n/* I_VARARGS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <varargs.h>.\n */\n#$i_stdarg I_STDARG\t\t/**/\n#$i_varargs I_VARARGS\t/**/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n#$d_inc_version_list PERL_INC_VERSION_LIST $inc_version_list_init\t\t/**/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n * \talso as /usr/bin/perl.\n */\n#$installusrbinperl INSTALL_USR_BIN_PERL\t/**/\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t $lseektype\t\t/* <offset> type */\n#define LSEEKSIZE $lseeksize\t\t/* <offset> size */\n#define Off_t_size $lseeksize\t/* <offset> size */\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n * void, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t $malloctype\t\t\t/**/\n#define Free_t $freetype\t\t\t/**/\n\n/* PERL_MALLOC_WRAP:\n *\tThis symbol, if defined, indicates that we'd like malloc wrap checks.\n */\n#$usemallocwrap PERL_MALLOC_WRAP\t\t/**/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n#$d_mymalloc MYMALLOC\t\t\t/**/\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes\n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t $modetype\t /* file mode parameter for system calls */\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK $o_nonblock\n#define VAL_EAGAIN $eagain\n#define RD_NODATA $rd_nodata\n#$d_eofnblk EOF_NONBLOCK\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\t$netdb_host_type /**/\n#define Netdb_hlen_t\t\t$netdb_hlen_type /**/\n#define Netdb_name_t\t\t$netdb_name_type /**/\n#define Netdb_net_t\t\t$netdb_net_type /**/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n#$d_perl_otherlibdirs PERL_OTHERLIBDIRS \"$otherlibdirs\"\t\t/**/\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t $pidtype\t\t/* PID type */\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"$privlib\"\t\t/**/\n#define PRIVLIB_EXP \"$privlibexp\"\t\t/**/\n\n/* CAN_PROTOTYPE:\n *\tIf defined, this macro indicates that the C compiler can handle\n *\tfunction prototypes.\n */\n/* _:\n *\tThis macro is used to declare function parameters for folks who want\n *\tto make declarations with prototypes using a different style than\n *\tthe above macros.  Use double parentheses.  For example:\n *\n *\t\tint main _((int argc, char *argv[]));\n */\n#$prototype\tCAN_PROTOTYPE\t/**/\n#ifdef CAN_PROTOTYPE\n#define\t_(args) args\n#else\n#define\t_(args) ()\n#endif\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE $ptrsize\t\t/**/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpart, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, QUAD_IS_INT64_T,\n *\tor QUAD_IS___INT64.\n */\n#$d_quad HAS_QUAD\t/**/\n#ifdef HAS_QUAD\n#   define Quad_t $quadtype\t/**/\n#   define Uquad_t $uquadtype\t/**/\n#   define QUADKIND $quadkind\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#   define QUAD_IS___INT64\t5\n#endif\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\t$drand01\t\t/**/\n#define Rand_seed_t\t\t$randseedtype\t\t/**/\n#define seedDrand01(x)\t$seedfunc((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t$randbits\t\t/**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you\n *\thave select(), of course.\n */\n#define Select_fd_set_t \t$selecttype\t/**/\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"$targetsh\"  /**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_name_init list.\n *\tNote that this variable is initialized from the sig_name_init,\n *\tnot from sig_name (which is unused).\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup.\n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.\n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name_init list.\n *\tNote that this variable is initialized from the sig_num_init,\n *\tnot from sig_num (which is unused).\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME $sig_name_init\t\t/**/\n#define SIG_NUM  $sig_num_init\t\t/**/\n#define SIG_SIZE $sig_size\t\t\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#$d_sitearch SITEARCH \"$sitearch\"\t\t/**/\n#$d_sitearch SITEARCH_EXP \"$sitearchexp\"\t\t/**/\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"$sitelib\"\t\t/**/\n#define SITELIB_EXP \"$sitelibexp\"\t\t/**/\n#define SITELIB_STEM \"$sitelib_stem\"\t\t/**/\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size $sizesize\t\t/**/\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t $sizetype\t /* length parameter for string functions */\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\t$socksizetype /**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t $ssizetype\t /* signed count of bytes */\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR $stdchar\t/**/\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t$uidformat\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedness of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t$uidsign\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size $uidsize\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t $uidtype\t\t/* UID type */\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* USE_5005THREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the 5.005-based threading implementation.\n *\tOnly valid up to 5.8.x.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n#$use5005threads\tUSE_5005THREADS\t\t/**/\n#$useithreads\tUSE_ITHREADS\t\t/**/\n#if defined(USE_5005THREADS) && !defined(USE_ITHREADS)\n#define\t\tUSE_THREADS\t\t/* until src is revised*/\n#endif\n#$d_oldpthreads\tOLD_PTHREADS_API\t\t/**/\n#$usereentrant\tUSE_REENTRANT_API\t/**/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front.\n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor\n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#$d_vendorarch PERL_VENDORARCH \"$vendorarch\"\t\t/**/\n#$d_vendorarch PERL_VENDORARCH_EXP \"$vendorarchexp\"\t\t/**/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#$d_vendorlib PERL_VENDORLIB_EXP \"$vendorlibexp\"\t\t/**/\n#$d_vendorlib PERL_VENDORLIB_STEM \"$vendorlib_stem\"\t\t/**/\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n#$usecrosscompile\tUSE_CROSS_COMPILE\t/**/\n#define\tPERL_TARGETARCH\t\"$targetarch\"\t/**/\n#endif\n\n/* PERL_USE_DEVEL:\n *\tThis symbol, if defined, indicates that Perl was configured with\n *\t-Dusedevel, to enable development features.  This should not be\n *\tdone for production builds.\n */\n#$usedevel\tPERL_USE_DEVEL\t\t/**/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n#$d_atolf HAS_ATOLF\t\t/**/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n#$d_atoll HAS_ATOLL\t\t/**/\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n#$d__fwalk HAS__FWALK\t\t/**/\n\n/* HAS_ACOSH:\n *\tThis symbol, if defined, indicates that the acosh routine is\n *\tavailable to do the inverse hyperbolic cosine function.\n */\n#$d_acosh HAS_ACOSH\t\t/**/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n#$d_aintl HAS_AINTL\t\t/**/\n\n/* HAS_ASINH:\n *\tThis symbol, if defined, indicates that the asinh routine is\n *\tavailable to do the inverse hyperbolic sine function.\n */\n#$d_asinh HAS_ASINH\t\t/**/\n\n/* HAS_ATANH:\n *\tThis symbol, if defined, indicates that the atanh routine is\n *\tavailable to do the inverse hyperbolic tangent function.\n */\n#$d_atanh HAS_ATANH\t\t/**/\n\n/* HAS_BUILTIN_CHOOSE_EXPR:\n *\tCan we handle GCC builtin for compile-time ternary-like expressions\n */\n/* HAS_BUILTIN_EXPECT:\n *\tCan we handle GCC builtin for telling that certain values are more\n *\tlikely\n */\n#$d_builtin_expect HAS_BUILTIN_EXPECT\t/**/\n#$d_builtin_choose_expr HAS_BUILTIN_CHOOSE_EXPR\t/**/\n\n/* HAS_C99_VARIADIC_MACROS:\n *\tIf defined, the compiler supports C99 variadic macros.\n */\n#$d_c99_variadic_macros\tHAS_C99_VARIADIC_MACROS\t/**/\n\n/* HAS_CLASS:\n *\tThis symbol, if defined, indicates that the class routine is\n *\tavailable to classify doubles.  Available for example in AIX.\n *\tThe returned values are defined in <float.h> and are:\n *\n *\tFP_PLUS_NORM\tPositive normalized, nonzero\n *\tFP_MINUS_NORM\tNegative normalized, nonzero\n *\tFP_PLUS_DENORM\tPositive denormalized, nonzero\n *\tFP_MINUS_DENORM\tNegative denormalized, nonzero\n *\tFP_PLUS_ZERO\t+0.0\n *\tFP_MINUS_ZERO\t-0.0\n *\tFP_PLUS_INF\t+INF\n *\tFP_MINUS_INF\t-INF\n *\tFP_NANS\t\tSignaling Not a Number (NaNS)\n *\tFP_NANQ\t\tQuiet Not a Number (NaNQ)\n */\n#$d_class HAS_CLASS\t\t/**/\n\n/* HAS_CLEARENV:\n *\tThis symbol, if defined, indicates that the clearenv () routine is\n *\tavailable for use.\n */\n#$d_clearenv HAS_CLEARENV\t\t/**/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n#$d_cmsghdr_s HAS_STRUCT_CMSGHDR\t/**/\n\n/* HAS_COPYSIGN:\n *\tThis symbol, if defined, indicates that the copysign routine is\n *\tavailable to do the copysign function.\n */\n#$d_copysign HAS_COPYSIGN\t\t/**/\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n#$d_copysignl HAS_COPYSIGNL\t\t/**/\n\n/* USE_CPLUSPLUS:\n *\tThis symbol, if defined, indicates that a C++ compiler was\n *\tused to compiled Perl and will be used to compile extensions.\n */\n#$d_cplusplus USE_CPLUSPLUS\t\t/**/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n#$d_dbminitproto\tHAS_DBMINIT_PROTO\t/**/\n\n/* HAS_DIR_DD_FD:\n *\tThis symbol, if defined, indicates that the the DIR* dirstream\n *\tstructure contains a member variable named dd_fd.\n */\n#$d_dir_dd_fd HAS_DIR_DD_FD\t\t/**/\n\n/* HAS_DIRFD:\n *\tThis manifest constant lets the C program know that dirfd\n *\tis available.\n */\n#$d_dirfd HAS_DIRFD\t\t/**/\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n#$d_dlsymun \tDLSYM_NEEDS_UNDERSCORE \t/**/\n\n/* HAS_ERF:\n *\tThis symbol, if defined, indicates that the erf routine is\n *\tavailable to do the error function.\n */\n#$d_erf HAS_ERF\t\t/**/\n\n/* HAS_ERFC:\n *\tThis symbol, if defined, indicates that the erfc routine is\n *\tavailable to do the complementary error function.\n */\n#$d_erfc HAS_ERFC\t\t/**/\n\n/* HAS_EXP2:\n *\tThis symbol, if defined, indicates that the exp2 routine is\n *\tavailable to do the 2**x function.\n */\n#$d_exp2 HAS_EXP2\t\t/**/\n\n/* HAS_EXPM1:\n *\tThis symbol, if defined, indicates that the expm1 routine is\n *\tavailable to do the exp(x) - 1 when x is near 1 function.\n */\n#$d_expm1 HAS_EXPM1\t\t/**/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n#$d_faststdio HAS_FAST_STDIO\t\t/**/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n#$d_fchdir HAS_FCHDIR\t\t/**/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n#$d_fcntl_can_lock FCNTL_CAN_LOCK\t\t/**/\n\n/* HAS_FDIM:\n *\tThis symbol, if defined, indicates that the fdim routine is\n *\tavailable to do the positive difference function.\n */\n#$d_fdim HAS_FDIM\t\t/**/\n\n/* HAS_FEGETROUND:\n *\tThis symbol, if defined, indicates that the fegetround routine is\n *\tavailable to return the macro corresponding to the current rounding\n *\tmode.\n */\n#$d_fegetround HAS_FEGETROUND\t/**/\n\n/* HAS_FINITE:\n *\tThis symbol, if defined, indicates that the finite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n#$d_finite HAS_FINITE\t\t/**/\n\n/* HAS_FINITEL:\n *\tThis symbol, if defined, indicates that the finitel routine is\n *\tavailable to check whether a long double is finite\n *\t(non-infinity non-NaN).\n */\n#$d_finitel HAS_FINITEL\t\t/**/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n#$d_flockproto\tHAS_FLOCK_PROTO\t/**/\n\n/* HAS_FMA:\n *\tThis symbol, if defined, indicates that the fma routine is\n *\tavailable to do the multiply-add function.\n */\n#$d_fma HAS_FMA\t\t/**/\n\n/* HAS_FMAX:\n *\tThis symbol, if defined, indicates that the fmax routine is\n *\tavailable to do the maximum function.\n */\n#$d_fmax HAS_FMAX\t\t/**/\n\n/* HAS_FMIN:\n *\tThis symbol, if defined, indicates that the fmin routine is\n *\tavailable to do the minimum function.\n */\n#$d_fmin HAS_FMIN\t\t/**/\n\n/* HAS_FP_CLASS:\n *\tThis symbol, if defined, indicates that the fp_class routine is\n *\tavailable to classify doubles.  Available for example in Digital UNIX.\n *\tThe returned values are defined in <math.h> and are:\n *\n *\tFP_SNAN           Signaling NaN (Not-a-Number)\n *\tFP_QNAN           Quiet NaN (Not-a-Number)\n *\tFP_POS_INF        +infinity\n *\tFP_NEG_INF        -infinity\n *\tFP_POS_NORM       Positive normalized\n *\tFP_NEG_NORM       Negative normalized\n *\tFP_POS_DENORM     Positive denormalized\n *\tFP_NEG_DENORM     Negative denormalized\n *\tFP_POS_ZERO       +0.0 (positive zero)\n *\tFP_NEG_ZERO       -0.0 (negative zero)\n */\n#$d_fp_class HAS_FP_CLASS\t\t/**/\n\n/* HAS_FP_CLASSL:\n *\tThis symbol, if defined, indicates that the fp_classl routine is\n *\tavailable to classify long doubles.  Available for example in\n *\tDigital UNIX.  See for possible values HAS_FP_CLASS.\n */\n#$d_fp_classl HAS_FP_CLASSL\t\t/**/\n\n/* HAS_FPCLASS:\n *\tThis symbol, if defined, indicates that the fpclass routine is\n *\tavailable to classify doubles.  Available for example in Solaris/SVR4.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n#$d_fpclass HAS_FPCLASS\t\t/**/\n\n/* HAS_FPCLASSIFY:\n *\tThis symbol, if defined, indicates that the fpclassify routine is\n *\tavailable to classify doubles.  Available for example in HP-UX.\n *\tThe returned values are defined in <math.h> and are\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/* HAS_FP_CLASSIFY:\n *\tThis symbol, if defined, indicates that the fp_classify routine is\n *\tavailable to classify doubles. The values are defined in <math.h>\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n#$d_fpclassify\tHAS_FPCLASSIFY\t\t/**/\n#$d_fp_classify\tHAS_FP_CLASSIFY\t\t/**/\n\n/* HAS_FPCLASSL:\n *\tThis symbol, if defined, indicates that the fpclassl routine is\n *\tavailable to classify long doubles.  Available for example in IRIX.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n#$d_fpclassl HAS_FPCLASSL\t\t/**/\n\n/* HAS_FPGETROUND:\n *\tThis symbol, if defined, indicates that the fpgetround routine is\n *\tavailable to get the floating point rounding mode.\n */\n#$d_fpgetround HAS_FPGETROUND\t\t/**/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n#$d_fpos64_t\tHAS_FPOS64_T    \t/**/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n#$d_frexpl HAS_FREXPL\t\t/**/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n#$d_fs_data_s HAS_STRUCT_FS_DATA\t/**/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n#$d_fseeko HAS_FSEEKO\t\t/**/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n#$d_fstatfs HAS_FSTATFS\t\t/**/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n#$d_fsync HAS_FSYNC\t\t/**/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n#$d_ftello HAS_FTELLO\t\t/**/\n\n/* HAS_FUTIMES:\n *\tThis symbol, if defined, indicates that the futimes routine is\n *\tavailable to change file descriptor time stamps with struct timevals.\n */\n#$d_futimes HAS_FUTIMES\t\t/**/\n\n/* HAS_GETADDRINFO:\n *\tThis symbol, if defined, indicates that the getaddrinfo() function\n *\tis available for use.\n */\n#$d_getaddrinfo HAS_GETADDRINFO\t\t/**/\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n#$d_getcwd HAS_GETCWD\t\t/**/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enhanced (shadow) password entries by name.\n */\n#$d_getespwnam HAS_GETESPWNAM\t\t/**/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n#$d_getfsstat HAS_GETFSSTAT\t\t/**/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n#$d_getitimer HAS_GETITIMER\t\t/**/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n#$d_getmnt HAS_GETMNT\t\t/**/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n#$d_getmntent HAS_GETMNTENT\t\t/**/\n\n/* HAS_GETNAMEINFO:\n *\tThis symbol, if defined, indicates that the getnameinfo() function\n *\tis available for use.\n */\n#$d_getnameinfo HAS_GETNAMEINFO\t\t/**/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n#$d_getprpwnam HAS_GETPRPWNAM\t\t/**/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n#$d_getspnam HAS_GETSPNAM\t\t/**/\n\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n#$d_hasmntopt HAS_HASMNTOPT\t\t/**/\n\n/* HAS_HYPOT:\n *\tThis symbol, if defined, indicates that the hypot routine is\n *\tavailable to do the hypotenuse function.\n */\n#$d_hypot HAS_HYPOT\t\t/**/\n\n/* HAS_ILOGB:\n *\tThis symbol, if defined, indicates that the ilogb routine is\n *\tavailable to get integer exponent of a floating-point value.\n */\n#$d_ilogb HAS_ILOGB\t\t/**/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n#$d_ilogbl HAS_ILOGBL\t\t/**/\n\n/* HAS_INETNTOP:\n *\tThis symbol, if defined, indicates that the inet_ntop() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n#$d_inetntop HAS_INETNTOP\t\t/**/\n\n/* HAS_INETPTON:\n *\tThis symbol, if defined, indicates that the inet_pton() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n#$d_inetpton HAS_INETPTON\t\t/**/\n\n/* HAS_INT64_T:\n *     This symbol will defined if the C compiler supports int64_t.\n *     Usually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n#$d_int64_t     HAS_INT64_T               /**/\n\n/* HAS_ISBLANK:\n *\tThis manifest constant lets the C program know that isblank\n *\tis available.\n */\n#$d_isblank HAS_ISBLANK\t\t/**/\n\n/* HAS_ISFINITE:\n *\tThis symbol, if defined, indicates that the isfinite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n#$d_isfinite HAS_ISFINITE\t\t/**/\n\n/* HAS_ISFINITEL:\n *\tThis symbol, if defined, indicates that the isfinitel routine is\n *\tavailable to check whether a long double is finite.\n *\t(non-infinity non-NaN).\n */\n#$d_isfinitel HAS_ISFINITEL\t\t/**/\n\n/* HAS_ISINF:\n *\tThis symbol, if defined, indicates that the isinf routine is\n *\tavailable to check whether a double is an infinity.\n */\n#$d_isinf HAS_ISINF\t\t/**/\n\n/* HAS_ISINFL:\n *\tThis symbol, if defined, indicates that the isinfl routine is\n *\tavailable to check whether a long double is an infinity.\n */\n#$d_isinfl HAS_ISINFL\t\t/**/\n\n/* HAS_ISLESS:\n *\tThis symbol, if defined, indicates that the isless routine is\n *\tavailable to do the isless function.\n */\n#$d_isless HAS_ISLESS\t\t/**/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n#$d_isnan HAS_ISNAN\t\t/**/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n#$d_isnanl HAS_ISNANL\t\t/**/\n\n/* HAS_ISNORMAL:\n *\tThis symbol, if defined, indicates that the isnormal routine is\n *\tavailable to check whether a double is normal (non-zero normalized).\n */\n#$d_isnormal HAS_ISNORMAL\t\t/**/\n\n/* HAS_J0:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0() function is available for Bessel functions of the first\n *\tkind of the order zero, for doubles.\n */\n/* HAS_J0L:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0l() function is available for Bessel functions of the first\n *\tkind of the order zero, for long doubles.\n */\n#$d_j0\tHAS_J0\t\t/**/\n#$d_j0l\tHAS_J0L\t\t/**/\n\n/* HAS_LC_MONETARY_2008:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable and has the additional members added in POSIX 1003.1-2008.\n */\n#$d_lc_monetary_2008 HAS_LC_MONETARY_2008\t\t/**/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n#$d_ldbl_dig HAS_LDBL_DIG \t/* */\n\n/* HAS_LGAMMA:\n *\tThis symbol, if defined, indicates that the lgamma routine is\n *\tavailable to do the log gamma function.  See also HAS_TGAMMA and\n *\tHAS_LGAMMA_R.\n */\n#$d_lgamma HAS_LGAMMA\t\t/**/\n\n/* HAS_LGAMMA_R:\n *\tThis symbol, if defined, indicates that the lgamma_r routine is\n *\tavailable to do the log gamma function without using the global\n *\tsigngam variable.\n */\n#$d_lgamma_r HAS_LGAMMA_R\t\t/**/\n\n/* LIBM_LIB_VERSION:\n *\tThis symbol, if defined, indicates that libm exports _LIB_VERSION\n *\tand that math.h defines the enum to manipulate it.\n */\n#$d_libm_lib_version LIBM_LIB_VERSION\t\t/**/\n\n/* HAS_LLRINT:\n *\tThis symbol, if defined, indicates that the llrint routine is\n *\tavailable to return the closest long long value according to\n *\tthe current rounding mode.\n */\n#$d_llrint HAS_LLRINT\t\t/**/\n\n/* HAS_LLRINTL:\n *\tThis symbol, if defined, indicates that the llrintl routine is\n *\tavailable to return the closest long long value of the long double\n *\targument according to the current rounding mode.\n */\n#$d_llrintl HAS_LLRINTL\t\t/**/\n\n/* HAS_LLROUND:\n *\tThis symbol, if defined, indicates that the llround routine is\n *\tavailable to return the nearest long long value.\n */\n#$d_llround HAS_LLROUND\t\t/**/\n\n/* HAS_LLROUNDL:\n *\tThis symbol, if defined, indicates that the llroundl routine is\n *\tavailable to return the nearest long long value away from zero of\n *\tthe long double argument value.\n */\n#$d_llroundl HAS_LLROUNDL\t\t/**/\n\n/* HAS_LOG1P:\n *\tThis symbol, if defined, indicates that the log1p routine is\n *\tavailable to do the logarithm of 1 plus argument function.\n */\n#$d_log1p HAS_LOG1P\t\t/**/\n\n/* HAS_LOG2:\n *\tThis symbol, if defined, indicates that the log2 routine is\n *\tavailable to do the log2 function.\n */\n#$d_log2 HAS_LOG2\t\t/**/\n\n/* HAS_LOGB:\n *\tThis symbol, if defined, indicates that the logb routine is\n *\tavailable to do the logb function.\n */\n#$d_logb HAS_LOGB\t\t/**/\n\n/* HAS_LRINT:\n *\tThis symbol, if defined, indicates that the lrint routine is\n *\tavailable to return the closest integral value according to\n *\tthe current rounding mode.\n */\n#$d_lrint HAS_LRINT\t\t/**/\n\n/* HAS_LRINTL:\n *\tThis symbol, if defined, indicates that the lrintl routine is\n *\tavailable to return the closest integral value of the long double\n *\targument according to the current rounding mode.\n */\n#$d_lrintl HAS_LRINTL\t\t/**/\n\n/* HAS_LROUND:\n *\tThis symbol, if defined, indicates that the lround routine is\n *\tavailable to return the nearest integral value.\n */\n#$d_lround HAS_LROUND\t\t/**/\n\n/* HAS_LROUNDL:\n *\tThis symbol, if defined, indicates that the lroundl routine is\n *\tavailable to return the nearest integral value away from zero of\n *\tthe long double argument value.\n */\n#$d_lroundl HAS_LROUNDL\t\t/**/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n#$d_madvise HAS_MADVISE\t\t/**/\n\n/* HAS_MALLOC_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_size\n *\troutine is available for use.\n */\n#$d_malloc_size HAS_MALLOC_SIZE\t\t/**/\n\n/* HAS_MALLOC_GOOD_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_good_size\n *\troutine is available for use.\n */\n#$d_malloc_good_size HAS_MALLOC_GOOD_SIZE\t/**/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n#$d_mkdtemp HAS_MKDTEMP\t\t/**/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to exclusively create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n#$d_mkstemps HAS_MKSTEMPS\t\t/**/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/* HAS_MODFL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the modfl() function.  Otherwise, it is up\n *\tto the program to supply one.\n */\n/* HAS_MODFL_POW32_BUG:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tbroken for long doubles >= pow(2, 32).\n *\tFor example from 4294967303.150000 one would get 4294967302.000000\n *\tand 1.150000.  The bug has been seen in certain versions of glibc,\n *\trelease 2.2.2 is known to be okay.\n */\n#$d_modfl HAS_MODFL\t\t/**/\n#$d_modflproto HAS_MODFL_PROTO\t\t/**/\n#$d_modfl_pow32_bug HAS_MODFL_POW32_BUG\t\t/**/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n#$d_mprotect HAS_MPROTECT\t\t/**/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n#$d_msghdr_s HAS_STRUCT_MSGHDR\t/**/\n\n/* HAS_NAN:\n *\tThis symbol, if defined, indicates that the nan routine is\n *\tavailable to generate NaN.\n */\n#$d_nan HAS_NAN\t\t/**/\n\n/* HAS_NEARBYINT:\n *\tThis symbol, if defined, indicates that the nearbyint routine is\n *\tavailable to return the integral value closest to (according to\n *\tthe current rounding mode) to x.\n */\n#$d_nearbyint HAS_NEARBYINT\t\t/**/\n\n/* HAS_NEXTAFTER:\n *\tThis symbol, if defined, indicates that the nextafter routine is\n *\tavailable to return the next machine representable double from\n *\tx in direction y.\n */\n#$d_nextafter HAS_NEXTAFTER\t\t/**/\n\n/* HAS_NEXTTOWARD:\n *\tThis symbol, if defined, indicates that the nexttoward routine is\n *\tavailable to return the next machine representable long double from\n *\tx in direction y.\n */\n#$d_nexttoward HAS_NEXTTOWARD\t\t/**/\n\n/* HAS_NL_LANGINFO:\n *\tThis symbol, if defined, indicates that the nl_langinfo routine is\n *\tavailable to return local data.  You will also need <langinfo.h>\n *\tand therefore I_LANGINFO.\n */\n#$d_nl_langinfo HAS_NL_LANGINFO\t\t/**/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n#$d_off64_t\tHAS_OFF64_T    \t\t/**/\n\n/* HAS_PRCTL:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title.\n *\tNote that there are at least two prctl variants: Linux and Irix.\n *\tWhile they are somewhat similar, they are incompatible.\n */\n/* HAS_PRCTL_SET_NAME:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title and supports PR_SET_NAME.\n */\n#$d_prctl HAS_PRCTL\t\t/**/\n#$d_prctl_set_name HAS_PRCTL_SET_NAME\t\t/**/\n\n/* HAS_PROCSELFEXE:\n *\tThis symbol is defined if PROCSELFEXE_PATH is a symlink\n *\tto the absolute pathname of the executing program.\n */\n/* PROCSELFEXE_PATH:\n *\tIf HAS_PROCSELFEXE is defined this symbol is the filename\n *\tof the symbolic link pointing to the absolute pathname of\n *\tthe executing program.\n */\n#$d_procselfexe HAS_PROCSELFEXE\t/**/\n#if defined(HAS_PROCSELFEXE) && !defined(PROCSELFEXE_PATH)\n#define PROCSELFEXE_PATH\t$procselfexe\t/**/\n#endif\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n#$d_pthread_attr_setscope HAS_PTHREAD_ATTR_SETSCOPE\t\t/**/\n\n/* HAS_PTRDIFF_T:\n *\tThis symbol will be defined if the C compiler supports ptrdiff_t.\n */\n#$d_ptrdiff_t\tHAS_PTRDIFF_T    \t\t/**/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n#$d_readv HAS_READV\t\t/**/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n#$d_recvmsg HAS_RECVMSG\t\t/**/\n\n/* HAS_REMAINDER:\n *\tThis symbol, if defined, indicates that the remainder routine is\n *\tavailable to return the floating-point remainder.\n */\n#$d_remainder HAS_REMAINDER\t\t/**/\n\n/* HAS_REMQUO:\n *\tThis symbol, if defined, indicates that the remquo routine is\n *\tavailable to return the remainder and part of quotient.\n */\n#$d_remquo HAS_REMQUO\t\t/**/\n\n/* HAS_RINT:\n *\tThis symbol, if defined, indicates that the rint routine is\n *\tavailable to return the nearest integral value to x as double\n *\tusing the current rounding mode.\n */\n#$d_rint HAS_RINT\t\t/**/\n\n/* HAS_ROUND:\n *\tThis symbol, if defined, indicates that the round routine is\n *\tavailable to round to nearest integer, away from zero.\n */\n#$d_round HAS_ROUND\t\t/**/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n#$d_sbrkproto\tHAS_SBRK_PROTO\t/**/\n\n/* HAS_SCALBN:\n *\tThis symbol, if defined, indicates that the scalbn routine is\n *\tavailable to multiply floating-point number by integral power\n *\tof radix.\n */\n#$d_scalbn HAS_SCALBN\t\t/**/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n#$d_scalbnl HAS_SCALBNL\t\t/**/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n#$d_sendmsg HAS_SENDMSG\t\t/**/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n#$d_setitimer HAS_SETITIMER\t\t/**/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n#$d_setproctitle HAS_SETPROCTITLE\t\t/**/\n\n/* HAS_SIGNBIT:\n *\tThis symbol, if defined, indicates that the signbit routine is\n *\tavailable to check if the given number has the sign bit set.\n *\tThis should include correct testing of -0.0.  This will only be set\n *\tif the signbit() routine is safe to use with the NV type used internally\n *\tin perl.  Users should call Perl_signbit(), which will be #defined to\n *\tthe system's signbit() function or macro if this symbol is defined.\n */\n#$d_signbit HAS_SIGNBIT\t\t/**/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n#$d_sigprocmask HAS_SIGPROCMASK\t\t/**/\n\n/* USE_SITECUSTOMIZE:\n *\tThis symbol, if defined, indicates that sitecustomize should\n *\tbe used.\n */\n#ifndef USE_SITECUSTOMIZE\n#$usesitecustomize\tUSE_SITECUSTOMIZE\t\t/**/\n#endif\n\n/* HAS_SNPRINTF:\n *\tThis symbol, if defined, indicates that the snprintf () library\n *\tfunction is available for use.\n */\n/* HAS_VSNPRINTF:\n *\tThis symbol, if defined, indicates that the vsnprintf () library\n *\tfunction is available for use.\n */\n#$d_snprintf HAS_SNPRINTF\t/**/\n#$d_vsnprintf HAS_VSNPRINTF\t/**/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n#$d_sockatmark HAS_SOCKATMARK\t\t/**/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n#$d_sockatmarkproto\tHAS_SOCKATMARK_PROTO\t/**/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n#$d_socks5_init HAS_SOCKS5_INIT\t\t/**/\n\n/* SPRINTF_RETURNS_STRLEN:\n *\tThis variable defines whether sprintf returns the length of the string\n *\t(as per the ANSI spec). Some C libraries retain compatibility with\n *\tpre-ANSI C and return a pointer to the passed in buffer; for these\n *\tthis variable will be undef.\n */\n#$d_sprintf_returns_strlen SPRINTF_RETURNS_STRLEN\t/**/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n#$d_sqrtl HAS_SQRTL\t\t/**/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n#$d_sresgproto\tHAS_SETRESGID_PROTO\t/**/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n#$d_sresuproto\tHAS_SETRESUID_PROTO\t/**/\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n#$d_statfs_f_flags HAS_STRUCT_STATFS_F_FLAGS\t\t/**/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n#$d_statfs_s HAS_STRUCT_STATFS\t/**/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n#$d_fstatvfs HAS_FSTATVFS\t\t/**/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n#$d_strftime HAS_STRFTIME\t\t/**/\n\n/* HAS_STRLCAT:\n *\tThis symbol, if defined, indicates that the strlcat () routine is\n *\tavailable to do string concatenation.\n */\n#$d_strlcat HAS_STRLCAT\t\t/**/\n\n/* HAS_STRLCPY:\n *\tThis symbol, if defined, indicates that the strlcpy () routine is\n *\tavailable to do string copying.\n */\n#$d_strlcpy HAS_STRLCPY\t\t/**/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n#$d_strtold HAS_STRTOLD\t\t/**/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n#$d_strtoll HAS_STRTOLL\t\t/**/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n#$d_strtoq HAS_STRTOQ\t\t/**/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n#$d_strtoull HAS_STRTOULL\t\t/**/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n#$d_strtouq HAS_STRTOUQ\t\t/**/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n#$d_syscallproto\tHAS_SYSCALL_PROTO\t/**/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n#$d_telldirproto\tHAS_TELLDIR_PROTO\t/**/\n\n/* HAS_TGAMMA:\n *\tThis symbol, if defined, indicates that the tgamma routine is\n *\tavailable to do the gamma function. See also HAS_LGAMMA.\n */\n#$d_tgamma HAS_TGAMMA\t\t/**/\n\n/* HAS_CTIME64:\n *\tThis symbol, if defined, indicates that the ctime64 () routine is\n *\tavailable to do the 64bit variant of ctime ()\n */\n/* HAS_LOCALTIME64:\n *\tThis symbol, if defined, indicates that the localtime64 () routine is\n *\tavailable to do the 64bit variant of localtime ()\n */\n/* HAS_GMTIME64:\n *\tThis symbol, if defined, indicates that the gmtime64 () routine is\n *\tavailable to do the 64bit variant of gmtime ()\n */\n/* HAS_MKTIME64:\n *\tThis symbol, if defined, indicates that the mktime64 () routine is\n *\tavailable to do the 64bit variant of mktime ()\n */\n/* HAS_DIFFTIME64:\n *\tThis symbol, if defined, indicates that the difftime64 () routine is\n *\tavailable to do the 64bit variant of difftime ()\n */\n/* HAS_ASCTIME64:\n *\tThis symbol, if defined, indicates that the asctime64 () routine is\n *\tavailable to do the 64bit variant of asctime ()\n */\n#$d_ctime64\tHAS_CTIME64\t\t/**/\n#$d_localtime64\tHAS_LOCALTIME64\t\t/**/\n#$d_gmtime64\tHAS_GMTIME64\t\t/**/\n#$d_mktime64\tHAS_MKTIME64\t\t/**/\n#$d_difftime64\tHAS_DIFFTIME64\t\t/**/\n#$d_asctime64\tHAS_ASCTIME64\t\t/**/\n\n/* HAS_TIMEGM:\n *\tThis symbol, if defined, indicates that the timegm routine is\n *\tavailable to do the opposite of gmtime ()\n */\n#$d_timegm HAS_TIMEGM\t\t/**/\n\n/* HAS_TRUNC:\n *\tThis symbol, if defined, indicates that the trunc routine is\n *\tavailable to round doubles towards zero.\n */\n#$d_trunc HAS_TRUNC\t\t/**/\n\n/* HAS_TRUNCL:\n *\tThis symbol, if defined, indicates that the truncl routine is\n *\tavailable. If copysignl is also present we can emulate modfl.\n */\n#$d_truncl HAS_TRUNCL\t\t/**/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n#ifndef U32_ALIGNMENT_REQUIRED\n#$d_u32align U32_ALIGNMENT_REQUIRED\t/**/\n#endif\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n#$d_ualarm HAS_UALARM\t\t/**/\n\n/* HAS_UNORDERED:\n *\tThis symbol, if defined, indicates that the unordered routine is\n *\tavailable to check whether two doubles are unordered\n *\t(effectively: whether either of them is NaN)\n */\n#$d_unordered HAS_UNORDERED\t\t/**/\n\n/* HAS_UNSETENV:\n *\tThis symbol, if defined, indicates that the unsetenv () routine is\n *\tavailable for use.\n */\n#$d_unsetenv HAS_UNSETENV\t\t/**/\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n#$d_usleepproto\tHAS_USLEEP_PROTO\t/**/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n#$d_ustat HAS_USTAT\t\t/**/\n\n/* HAS_WCSCMP:\n *\tThis symbol, if defined, indicates that the wcscmp routine is\n *\tavailable to compare two wide character strings.\n */\n#$d_wcscmp HAS_WCSCMP\t/**/\n\n/* HAS_WCSXFRM:\n *\tThis symbol, if defined, indicates that the wcsxfrm routine is\n *\tavailable to tranform a wide character string for wcscmp().\n */\n#$d_wcsxfrm HAS_WCSXFRM\t/**/\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n#$d_writev HAS_WRITEV\t\t/**/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n#$usedl USE_DYNAMIC_LOADING\t\t/**/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) correctly\n *\tflushes all pending stdio output without side effects. In\n *\tparticular, on some platforms calling fflush(NULL) *still*\n *\tcorrupts STDIN if it is a pipe.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n#$fflushNULL\tFFLUSH_NULL \t\t/**/\n#$fflushall\tFFLUSH_ALL \t\t/**/\n\n/* I_ASSERT:\n *\tThis symbol, if defined, indicates that <assert.h> exists and\n *\tcould be included by the C program to get the assert() macro.\n */\n#$i_assert\tI_ASSERT\t\t/**/\n\n/* I_BFD:\n *\tThis symbol, if defined, indicates that <bfd.h> exists and\n *\tcan be included.\n */\n#$i_bfd\tI_BFD\t\t/**/\n\n/* I_CRYPT:\n *\tThis symbol, if defined, indicates that <crypt.h> exists and\n *\tshould be included.\n */\n#$i_crypt\tI_CRYPT\t\t/**/\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\t$db_hashtype\t\t/**/\n#define DB_Prefix_t\t$db_prefixtype  \t/**/\n#define DB_VERSION_MAJOR_CFG\t$db_version_major  \t/**/\n#define DB_VERSION_MINOR_CFG\t$db_version_minor  \t/**/\n#define DB_VERSION_PATCH_CFG\t$db_version_patch  \t/**/\n\n/* I_FENV:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <fenv.h> to get the floating point environment definitions.\n */\n#$i_fenv I_FENV\t\t/**/\n\n/* I_FP:\n *\tThis symbol, if defined, indicates that <fp.h> exists and\n *\tshould be included.\n */\n#$i_fp\tI_FP\t\t/**/\n\n/* I_FP_CLASS:\n *\tThis symbol, if defined, indicates that <fp_class.h> exists and\n *\tshould be included.\n */\n#$i_fp_class\tI_FP_CLASS\t\t/**/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n#$i_ieeefp\tI_IEEEFP\t\t/**/\n\n/* I_INTTYPES:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <inttypes.h>.\n */\n#$i_inttypes   I_INTTYPES                /**/\n\n/* I_LANGINFO:\n *\tThis symbol, if defined, indicates that <langinfo.h> exists and\n *\tshould be included.\n */\n#$i_langinfo\tI_LANGINFO\t\t/**/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n#$i_libutil\tI_LIBUTIL\t\t/**/\n\n/* I_MALLOCMALLOC:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <malloc/malloc.h>.\n */\n#$i_mallocmalloc I_MALLOCMALLOC\t\t/**/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n#$i_mntent\tI_MNTENT\t\t/**/\n\n/* I_NETINET_TCP:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <netinet/tcp.h>.\n */\n#$i_netinettcp   I_NETINET_TCP                /**/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included. (see also HAS_POLL)\n */\n#$i_poll\tI_POLL\t\t/**/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n#$i_prot\tI_PROT\t\t/**/\n\n/* I_QUADMATH:\n *\tThis symbol, if defined, indicates that <quadmath.h> exists and\n *\tshould be included.\n */\n#$i_quadmath\tI_QUADMATH\t\t/**/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n#$i_shadow\tI_SHADOW\t\t/**/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n#$i_socks\tI_SOCKS\t\t/**/\n\n/* I_STDBOOL:\n *\tThis symbol, if defined, indicates that <stdbool.h> exists and\n *\tcan be included.\n */\n#$i_stdbool\tI_STDBOOL\t\t/**/\n\n/* I_STDINT:\n *\tThis symbol, if defined, indicates that <stdint.h> exists and\n *\tshould be included.\n */\n#$i_stdint I_STDINT\t\t/**/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n#$i_sunmath\tI_SUNMATH\t\t/**/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n#$i_syslog\tI_SYSLOG\t\t/**/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n#$i_sysmode\tI_SYSMODE\t\t/**/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n#$i_sysmount\tI_SYS_MOUNT\t\t/**/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n#$i_sysstatfs\tI_SYS_STATFS\t\t/**/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n#$i_sysstatvfs\tI_SYS_STATVFS\t\t/**/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n#$i_sysutsname\tI_SYSUTSNAME\t\t/**/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n#$i_sysvfs\tI_SYS_VFS\t\t/**/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n#$i_ustat\tI_USTAT\t\t/**/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n/* DOUBLEKIND:\n *\tDOUBLEKIND will be one of\n *\tDOUBLE_IS_IEEE_754_32_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_32_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_LE_BE\n *\tDOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_BE_LE\n *\tDOUBLE_IS_UNKNOWN_FORMAT\n */\n#define DOUBLEKIND $doublekind\t\t/**/\n#define DOUBLE_IS_IEEE_754_32_BIT_LITTLE_ENDIAN\t1\n#define DOUBLE_IS_IEEE_754_32_BIT_BIG_ENDIAN\t2\n#define DOUBLE_IS_IEEE_754_64_BIT_LITTLE_ENDIAN\t3\n#define DOUBLE_IS_IEEE_754_64_BIT_BIG_ENDIAN\t4\n#define DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\t5\n#define DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\t6\n#define DOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_LE_BE\t7\n#define DOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_BE_LE\t8\n#define DOUBLE_IS_UNKNOWN_FORMAT\t\t-1\n#$d_PRIfldbl PERL_PRIfldbl\t$sPRIfldbl\t/**/\n#$d_PRIgldbl PERL_PRIgldbl\t$sPRIgldbl\t/**/\n#$d_PRIeldbl PERL_PRIeldbl\t$sPRIeldbl\t/**/\n#$d_SCNfldbl PERL_SCNfldbl\t$sSCNfldbl\t/**/\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n#$need_va_copy\tNEED_VA_COPY\t\t/**/\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n *\tNote that some floating point formats have unused bytes.\n *\tThe most notable example is the x86* 80-bit extended precision\n *\twhich comes in byte sizes of 12 and 16 (for 32 and 64 bit\n *\tplatforms, respectively), but which only uses 10 bytes.\n *\tPerl compiled with -Duselongdouble on x86* is like this.\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n/* NV_OVERFLOWS_INTEGERS_AT:\n *\tThis symbol gives the largest integer value that NVs can hold. This\n *\tvalue + 1.0 cannot be stored accurately. It is expressed as constant\n *\tfloating point expression to reduce the chance of decimal/binary\n *\tconversion issues. If it can not be determined, the value 0 is given.\n */\n/* NV_ZERO_IS_ALLBITS_ZERO:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tstores 0.0 in memory as all bits zero.\n */\n#define\tIVTYPE\t\t$ivtype\t\t/**/\n#define\tUVTYPE\t\t$uvtype\t\t/**/\n#define\tI8TYPE\t\t$i8type\t\t/**/\n#define\tU8TYPE\t\t$u8type\t\t/**/\n#define\tI16TYPE\t\t$i16type\t/**/\n#define\tU16TYPE\t\t$u16type\t/**/\n#define\tI32TYPE\t\t$i32type\t/**/\n#define\tU32TYPE\t\t$u32type\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\t$i64type\t/**/\n#define\tU64TYPE\t\t$u64type\t/**/\n#endif\n#define\tNVTYPE\t\t$nvtype\t\t/**/\n#define\tIVSIZE\t\t$ivsize\t\t/**/\n#define\tUVSIZE\t\t$uvsize\t\t/**/\n#define\tI8SIZE\t\t$i8size\t\t/**/\n#define\tU8SIZE\t\t$u8size\t\t/**/\n#define\tI16SIZE\t\t$i16size\t/**/\n#define\tU16SIZE\t\t$u16size\t/**/\n#define\tI32SIZE\t\t$i32size\t/**/\n#define\tU32SIZE\t\t$u32size\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t$i64size\t/**/\n#define\tU64SIZE\t\t$u64size\t/**/\n#endif\n#define\tNVSIZE\t\t$nvsize\t\t/**/\n#$d_nv_preserves_uv\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\t$nv_preserves_uv_bits\n#define\tNV_OVERFLOWS_INTEGERS_AT\t$nv_overflows_integers_at\n#$d_nv_zero_is_allbits_zero\tNV_ZERO_IS_ALLBITS_ZERO\n#if UVSIZE == 8\n#   ifdef BYTEORDER\n#       if BYTEORDER == 0x1234\n#           undef BYTEORDER\n#           define BYTEORDER 0x12345678\n#       else\n#           if BYTEORDER == 0x4321\n#               undef BYTEORDER\n#               define BYTEORDER 0x87654321\n#           endif\n#       endif\n#   endif\n#endif\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t$ivdformat\t\t/**/\n#define\tUVuf\t\t$uvuformat\t\t/**/\n#define\tUVof\t\t$uvoformat\t\t/**/\n#define\tUVxf\t\t$uvxformat\t\t/**/\n#define\tUVXf\t\t$uvXUformat\t\t/**/\n#define\tNVef\t\t$nveformat\t\t/**/\n#define\tNVff\t\t$nvfformat\t\t/**/\n#define\tNVgf\t\t$nvgformat\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS \t$selectminbits\t/**/\n\n/* ST_INO_SIZE:\n *\tThis variable contains the size of struct stat's st_ino in bytes.\n */\n/* ST_INO_SIGN:\n *\tThis symbol holds the signedness of struct stat's st_ino.\n *\t1 for unsigned, -1 for signed.\n */\n#define ST_INO_SIGN $st_ino_sign\t/* st_ino sign */\n#define ST_INO_SIZE $st_ino_size\t/* st_ino size */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"$startperl\"\t\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n#$d_stdio_stream_array\tHAS_STDIO_STREAM_ARRAY\t/**/\n#ifdef HAS_STDIO_STREAM_ARRAY\n#define STDIO_STREAM_ARRAY\t$stdio_stream_array\n#endif\n\n/* GMTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* GMTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n#define GMTIME_MAX\t\t$sGMTIME_max\t/**/\n#define GMTIME_MIN\t\t$sGMTIME_min\t/**/\n#define LOCALTIME_MAX\t$sLOCALTIME_max\t/**/\n#define LOCALTIME_MIN\t$sLOCALTIME_min\t/**/\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n#$use64bitint\tUSE_64_BIT_INT\t\t/**/\n#endif\n#ifndef USE_64_BIT_ALL\n#$use64bitall\tUSE_64_BIT_ALL\t\t/**/\n#endif\n\n/* USE_CBACKTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for backtrace.\n */\n#$usecbacktrace USE_CBACKTRACE\t\t/**/\n\n/* USE_DTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for DTrace.\n */\n#$usedtrace USE_DTRACE\t\t/**/\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n#$usefaststdio\tUSE_FAST_STDIO\t\t/**/\n#endif\n\n/* USE_KERN_PROC_PATHNAME:\n *\tThis symbol, if defined, indicates that we can use sysctl with\n *\tKERN_PROC_PATHNAME to get a full path for the executable, and hence\n * \tconvert $^X to an absolute path.\n */\n#$usekernprocpathname USE_KERN_PROC_PATHNAME\t/**/\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n#$uselargefiles\tUSE_LARGE_FILES\t\t/**/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n#$uselongdouble\tUSE_LONG_DOUBLE\t\t/**/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n#$usemorebits\tUSE_MORE_BITS\t\t/**/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n#$usemultiplicity\tMULTIPLICITY\t\t/**/\n#endif\n\n/* USE_NSGETEXECUTABLEPATH:\n *\tThis symbol, if defined, indicates that we can use _NSGetExecutablePath\n *\tand realpath to get a full path for the executable, and hence convert\n *\t$^X to an absolute path.\n */\n#$usensgetexecutablepath USE_NSGETEXECUTABLEPATH\t/**/\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n#$useperlio\tUSE_PERLIO\t\t/**/\n#endif\n\n/* USE_QUADMATH:\n *\tThis symbol, if defined, indicates that the quadmath library should\n *\tbe used when available.\n */\n#ifndef USE_QUADMATH\n#$usequadmath\tUSE_QUADMATH\t\t/**/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n#$usesocks\tUSE_SOCKS\t\t/**/\n#endif\n\n#endif\n!GROK!THIS!\n;;\nesac\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/uconfig.sh": "#!/bin/sh\nAuthor=''\n_a='.a'\n_o='.o'\nafs='false'\nafsroot='/afs'\nalignbytes='4'\naphostname='/bin/hostname'\narchlib='/usr/local/lib/perl5/5.22/unknown'\narchlibexp='/usr/local/lib/perl5/5.22/unknown'\narchname='unknown'\nasctime_r_proto='0'\nbin='/usr/local/bin'\nbinexp='/usr/local/bin'\nbootstrap_charset='undef'\nbyteorder='1234'\ncastflags='0'\ncf_by='root@localhost'\ncf_time='Thu Jan  1 00:00:00 GMT 1970'\ncharbits='8'\nclocktype='clock_t'\ncpp_stuff='42'\ncpplast='-'\ncppminus='-'\ncpprun='cc -E'\ncppstdin='cc -E'\ncrypt_r_proto='0'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEUldbl='undef'\nd_PRIFUldbl='undef'\nd_PRIGUldbl='undef'\nd_PRIXU64='undef'\nd_PRId64='undef'\nd_PRIeldbl='undef'\nd_PRIfldbl='undef'\nd_PRIgldbl='undef'\nd_PRIi64='undef'\nd_PRIo64='undef'\nd_PRIu64='undef'\nd_PRIx64='undef'\nd_SCNfldbl='undef'\nd__fwalk='undef'\nd_access='undef'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='undef'\nd_archlib='undef'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='undef'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bcmp='undef'\nd_bcopy='undef'\nd_bsd='undef'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_bzero='undef'\nd_c99_variadic_macros='undef'\nd_casti32='undef'\nd_castneg='undef'\nd_cbrt='undef'\nd_charvspr='undef'\nd_chown='undef'\nd_chroot='undef'\nd_chsize='undef'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='define'\nd_cmsghdr_s='undef'\nd_const='undef'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='undef'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='undef'\nd_dbl_dig='undef'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='undef'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='undef'\nd_dladdr='undef'\nd_dlerror='undef'\nd_dlopen='undef'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='undef'\nd_eaccess='undef'\nd_endgrent='undef'\nd_endgrent_r='undef'\nd_endhent='undef'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='undef'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_eofnblk='undef'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='undef'\nd_fchdir='undef'\nd_fchmod='undef'\nd_fchown='undef'\nd_fcntl='undef'\nd_fcntl_can_lock='undef'\nd_fd_macros='undef'\nd_fd_set='undef'\nd_fdim='undef'\nd_fds_bits='undef'\nd_fegetround='undef'\nd_fgetpos='undef'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='undef'\nd_flock='undef'\nd_flockproto='undef'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='define'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='undef'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='undef'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='undef'\nd_ftello='undef'\nd_ftime='undef'\nd_futimes='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='undef'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='undef'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='undef'\nd_gethbyaddr='undef'\nd_gethbyname='undef'\nd_gethent='undef'\nd_gethname='undef'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='undef'\nd_getitimer='undef'\nd_getlogin='undef'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='undef'\nd_getpagsz='undef'\nd_getpbyname='undef'\nd_getpbynumber='undef'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='undef'\nd_getppid='undef'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='undef'\nd_getprpwnam='undef'\nd_getpwent='undef'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='undef'\nd_getsbyport='undef'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='undef'\nd_getspent='undef'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='undef'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_hasmntopt='undef'\nd_htonl='undef'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='undef'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='undef'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='undef'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='undef'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='undef'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='undef'\nd_link='undef'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='undef'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_longdbl='undef'\nd_longlong='undef'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='undef'\nd_lstat='undef'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='undef'\nd_mbstowcs='undef'\nd_mbtowc='undef'\nd_memchr='define'\nd_memcmp='define'\nd_memcpy='define'\nd_memmove='undef'\nd_memset='define'\nd_mkdir='undef'\nd_mkdtemp='undef'\nd_mkfifo='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='undef'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='undef'\nd_nan='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='undef'\nd_nv_zero_is_allbits_zero='undef'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='undef'\nd_pathconf='undef'\nd_pause='undef'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe='undef'\nd_poll='undef'\nd_portable='undef'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='undef'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='undef'\nd_readv='undef'\nd_recvmsg='undef'\nd_regcomp='define'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_rewinddir='undef'\nd_rint='undef'\nd_rmdir='undef'\nd_round='undef'\nd_safebcpy='undef'\nd_safemcpy='undef'\nd_sanemcmp='undef'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='undef'\nd_select='undef'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='undef'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='undef'\nd_setlocale='undef'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='undef'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='undef'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='undef'\nd_setvbuf='undef'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='undef'\nd_signbit='undef'\nd_sigprocmask='undef'\nd_sigsetjmp='undef'\nd_sin6_scope_id='undef'\nd_sitearch='undef'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='undef'\nd_socklen_t='undef'\nd_sockpair='undef'\nd_socks5_init='undef'\nd_sprintf_returns_strlen='undef'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='undef'\nd_statvfs='undef'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='undef'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='undef'\nd_stdstdio='undef'\nd_strchr='undef'\nd_strcoll='undef'\nd_strctcpy='undef'\nd_strerrm='strerror(e)'\nd_strerror='undef'\nd_strerror_r='undef'\nd_strftime='undef'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strtod='undef'\nd_strtol='define'\nd_strtold='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='undef'\nd_suidsafe='undef'\nd_symlink='undef'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='undef'\nd_sysernlst=''\nd_syserrlst='undef'\nd_system='undef'\nd_tcgetpgrp='undef'\nd_tcsetpgrp='undef'\nd_telldir='undef'\nd_telldirproto='undef'\nd_tgamma='undef'\nd_time='define'\nd_timegm='undef'\nd_times='undef'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='undef'\nd_u32align='define'\nd_ualarm='undef'\nd_umask='undef'\nd_uname='undef'\nd_union_semun='undef'\nd_unordered='undef'\nd_unsetenv='undef'\nd_usleep='undef'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='undef'\nd_voidtty=''\nd_volatile='undef'\nd_vprintf='define'\nd_vsnprintf='undef'\nd_wait4='undef'\nd_waitpid='undef'\nd_wcscmp='undef'\nd_wcstombs='undef'\nd_wcsxfrm='undef'\nd_wctomb='undef'\nd_writev='undef'\nd_xenix='undef'\ndb_hashtype='u_int32_t'\ndb_prefixtype='size_t'\ndb_version_major='0'\ndb_version_minor='0'\ndb_version_patch='0'\ndirentrytype='struct dirent'\ndoublekind='3'\ndoublesize='8'\ndrand01=\"Perl_drand48()\"\ndrand48_r_proto='0'\ndtrace=''\neagain='EAGAIN'\nebcdic='undef'\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\nfflushNULL='undef'\nfflushall='undef'\nfirstmakefile='makefile'\nfpossize='4'\nfpostype=int\nfreetype=void\nfull_csh=''\nfull_sed=''\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"lu\"'\ngidsign='1'\ngidsize='4'\ngidtype=int\ngmtime_r_proto='0'\ngroupstype=int\nh_fcntl='false'\nh_sysfile='true'\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='int64_t'\ni8size='1'\ni8type='signed char'\ni_arpainet='undef'\ni_assert='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='undef'\ni_execinfo='undef'\ni_fcntl='undef'\ni_fenv='undef'\ni_float='undef'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='undef'\ni_ieeefp='undef'\ni_inttypes='undef'\ni_langinfo='undef'\ni_libutil='undef'\ni_limits='undef'\ni_locale='undef'\ni_machcthr='undef'\ni_malloc='undef'\ni_mallocmalloc='undef'\ni_math='define'\ni_memory='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='undef'\ni_neterrno='undef'\ni_netinettcp='undef'\ni_niin='undef'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='undef'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdarg='define'\ni_stdbool='undef'\ni_stddef='define'\ni_stdint='undef'\ni_stdlib='define'\ni_string='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='undef'\ni_sysin='undef'\ni_sysioctl='undef'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='undef'\ni_syspoll='undef'\ni_sysresrc='undef'\ni_syssecrt='undef'\ni_sysselct='undef'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='undef'\ni_systimek='undef'\ni_systimes='undef'\ni_systypes='undef'\ni_sysuio='undef'\ni_sysun='undef'\ni_sysutsname='undef'\ni_sysvfs='undef'\ni_syswait='undef'\ni_termio='undef'\ni_termios='undef'\ni_time='define'\ni_unistd='undef'\ni_ustat='undef'\ni_utime='undef'\ni_values='undef'\ni_varargs='undef'\ni_varhdr='stdarg.h'\ni_vfork='undef'\nignore_versioned_solibs='y'\ninc_version_list_init='NULL'\ninstallstyle='lib/perl5'\ninstallusrbinperl='undef'\nintsize='4'\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nld_can_script='define'\nlib_ext='.a'\nlocaltime_r_proto='0'\nlongdblkind=0\nlongdblsize=8\nlonglongsize=8\nlongsize='4'\nlseeksize=4\nlseektype=int\nmalloctype='int*'\nmalloctype='void *'\nmmaptype='void *'\nmodetype='mode_t'\nmodetype=int\nmultiarch='undef'\nmyarchname='unknown'\nmyuname='unknown'\nneed_va_copy='define'\nnetdb_hlen_type='int'\nnetdb_host_type='const char *'\nnetdb_name_type='const char *'\nnetdb_net_type='unsigned long'\nnroff='nroff'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='0'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.o'\nold_pthread_create_joinable=''\noptimize=''\norderlib='false'\nosname='unknown'\nosvers='unknown'\notherlibdirs=' '\npackage='perl5'\nperl_static_inline='static'\nphostname='hostname'\npidtype=int\nprivlib='/usr/local/lib/perl5/5.22'\nprivlibexp='/usr/local/lib/perl5/5.22'\nprocselfexe=''\nprototype='undef'\nptrsize='4'\nquadkind='4'\nquadtype='int64_t'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEUldbl='\"llE\"'\nsPRIFUldbl='\"llF\"'\nsPRIGUldbl='\"llG\"'\nsPRIXU64='\"LX\"'\nsPRId64='\"Ld\"'\nsPRIeldbl='\"lle\"'\nsPRIfldbl='\"llf\"'\nsPRIgldbl='\"llg\"'\nsPRIi64='\"Li\"'\nsPRIo64='\"Lo\"'\nsPRIu64='\"Lu\"'\nsPRIx64='\"Lx\"'\nsSCNfldbl='\"llf\"'\nsched_yield='sched_yield()'\nscriptdir='/usr/local/bin'\nscriptdirexp='/usr/local/bin'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype=int\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='/bin/sh'\nshmattype='void *'\nshortsize='2'\nsig_name_init='0'\nsig_num_init='0'\nsig_size='1'\nsignal_t=int\nsitearch='/usr/local/lib/perl5/5.22/unknown'\nsitearchexp='/usr/local/lib/perl5/5.22/unknown'\nsitelib='/usr/local/lib/perl5/5.22'\nsitelib_stem='/usr/local/lib/perl5'\nsitelibexp='/usr/local/lib/perl5/5.22'\nsizesize=4\nsizetype='size_t'\nsocksizetype='int'\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc='.'\nssizetype=int\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!perl'\nstdchar=char\nstdio_base='((fp)->_IO_read_base)'\nstdio_bufsiz='((fp)->_IO_read_end - (fp)->_IO_read_base)'\nstdio_cnt='((fp)->_IO_read_end - (fp)->_IO_read_ptr)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_IO_read_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\ntargetarch=''\ntargetsh='/bin/sh'\ntimetype=time_t\ntmpnam_r_proto='0'\ntouch='touch'\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='uint64_t'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"lu\"'\nuidsign='1'\nuidsize='4'\nuidtype=int\nuquadtype='uint64_t'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='undef'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='undef'\nuselongdouble='undef'\nusemallocwrap='undef'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='undef'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='false'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvaproto='undef'\nvendorarch=''\nvendorarchexp=''\nvendorlib_stem=''\nvendorlibexp=''\nversiononly='undef'\nzip=''\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/configure.com": "$! OpenVMS configuration procedure for Perl -- do not attempt to run under DOS\n$ sav_ver = 'F$VERIFY(0)'\n$ on control_y then goto clean_up\n$! SET VERIFY\n$!\n$! For example, if you unpacked perl into: [USER.PERL-5n...] then you will \n$! want to cd into the tree and execute Configure:\n$!\n$! $ SET DEFAULT [USER.PERL5_xxx]\n$! $ @Configure \n$!\n$! or\n$!\n$! $ SET DEFAULT [USER.PERL5_xxx]\n$! $ @Configure \"-des\"\n$!\n$! That's it. If you get into a bind trying to build perl on VMS then \n$! definitely read through the README.VMS file.\n$! Beyond that send email to vmsperl@perl.org\n$!\n$! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n$!\n$! send suggestions to: \n$!  Dan Sugalski <dan@sidhe.org>\n$! Thank you!!!!\n$!\n$! Adapted and converted from Larry Wall & Andy Dougherty's\n$! \"Configure generated by metaconfig 3.0 PL60.\" by Peter Prymmer\n$! (a Bourne sh[ell] script for configuring the installation of perl \n$! on non-VMS systems) in the perl5.002|3 epoch (spring/summer 1996)\n$! with much valuable help from Charles Bailey & \n$! the whole VMSPerl crew.\n$! Extended and messed about with by Dan Sugalski\n$!\n$! VMS-isms we will need:\n$ echo = \"write sys$output \"\n$ cat  = \"type\"\n$ delete := delete ! local symbol overrides globals with qualifiers\n$ gcc_symbol = \"gcc\"\n$ ld = \"Link/nodebug\"\n$ ans = \"\"\n$ macros = \"\"\n$ extra_flags = \"\"\n$ user_c_flags = \"\"\n$ use_ieee_math = \"y\"\n$ be_case_sensitive = \"n\"\n$ shorten_long_symbols = \"y\"\n$ unlink_all_versions = \"n\"\n$ builder = \"MMK\"\n$ use_vmsdebug_perl = \"n\"\n$ use64bitall = \"n\"\n$ use64bitint = \"n\"\n$ uselongdouble = \"n\"\n$ uselargefiles = \"y\"\n$ usestdstat = \"n\"\n$ usesitecustomize = \"n\"\n$ C_Compiler_Replace = \"CC=\"\n$ thread_upcalls = \"MTU=\"\n$ thread_kernel = \"MTK=\"\n$ use_two_pot_malloc = \"N\"\n$ use_pack_malloc = \"N\"\n$ use_debugmalloc = \"N\"\n$ ccflags = \"\"\n$ static_ext = \"\"\n$ dynamic_ext = \"\"\n$ nonxs_ext = \"\"\n$ nonxs_ext2 = \"\"\n$ vms_default_directory_name = F$ENVIRONMENT(\"DEFAULT\")\n$ max_allowed_dir_depth = 3  ! e.g. [A.B.PERLxxx] not [A.B.C.PERLxxx]\n$! max_allowed_dir_depth = 2 ! e.g. [A.PERLxxx] not [A.B.PERLxxx]\n$!\n$! Sebastian Bazley's request: close the CONFIG handle with /NOLOG\n$! qualifier \"just in case\" (configure.com is re @ed in a bad state).\n$! This construct was tested to be not a problem as far back as\n$! VMS V5.5-2, hopefully earlier versions are OK as well.\n$!\n$ CLOSE/NOLOG CONFIG\n$!\n$! Now keep track of open files\n$!\n$ vms_filcnt = F$GETJPI (\"\",\"FILCNT\")\n$!\n$!: compute my invocation name\n$ me = F$ENVIRONMENT(\"PROCEDURE\")\n$!\n$! Many null statements (begin with colon ':') in the Bourne shell version of\n$! this script serve as comments/placeholders. I have retained some of the ones\n$! that will help you compare this .COM file to the sh version - as well as\n$! leave placeholders for future improvements to this .COM file.\n$! sfn = VMS \"skipped for now\"\n$!\n$!: Proper PATH separator                              !sfn\n$!: Proper PATH setting                                !sfn\n$!: Sanity checks                                      !sfn \"Say '@''$me''\"\n$!: On HP-UX, large Configure scripts may exercise a bug in /bin/sh !sfn\n$!: Configure runs within the UU subdirectory          !->after find MANIFEST\n$!   <big long list of default values (mostly null)>\n$!: We must find out about Eunice early                !(?)\n$!: list of known cpp symbols, sorted alphabetically   !sfn\n$!   al = al + \"...\"\n$!: default library list                               !sfn\n$!   <no hints files in use (yet?)>\n$!: Extra object files, if any, needed on this platform. !sfn\n$!: Possible local include directories to search.      !sfn\n$!: Set locincpth to \"\" in a hint file to defeat local include searches. !sfn\n$!locincpth=\"/usr/local/include /opt/local/include /usr/gnu/include\" !sfn\n$!locincpth=\"$locincpth /opt/gnu/include /usr/GNU/include /opt/GNU/include\"\n$!: no include file wanted by default                  !sfn\n$!inclwanted=''                                        !sfn\n$!: Possible local library directories to search.      !sfn\n$!loclibpth=\"/usr/local/lib /opt/local/lib /usr/gnu/lib\" !sfn\n$!loclibpth=\"$loclibpth /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib\" !sfn\n$!: general looking path for locating libraries        !sfn\n$!glibpth=\"/lib/pa1.1 /usr/shlib /usr/lib/large /lib /usr/lib\" !sfn\n$!glibpth=\"$glibpth $xlibpth /lib/large /usr/lib/small /lib/small\" !sfn\n$!glibpth=\"$glibpth /usr/ccs/lib /usr/ucblib /usr/shlib\" !sfn\n$!: Private path used by Configure to find libraries.  Its value !sfn\n$!: is prepended to libpth. This variable takes care of special !sfn\n$!: machines, like the mips.  Usually, it should be empty. !sfn\n$!plibpth=''                                           !sfn\n$!: List of libraries we want.                         !sfn\n$!libswanted='net socket inet nsl nm ndbm gdbm dbm db malloc dl' !sfn\n$!libswanted=\"$libswanted ld sun m c cposix posix ndir dir crypt\" !sfn\n$!libswanted=\"$libswanted ucb bsd BSD PW x\"            !sfn\n$!: We probably want to search /usr/shlib before most other libraries. !sfn\n$!: This is only used by the lib/ExtUtils/MakeMaker.pm routine extliblist. !sfn\n$!glibpth=`echo \" $glibpth \" | sed -e 's! /usr/shlib ! !'` !sfn\n$!glibpth=\"/usr/shlib $glibpth\"                        !sfn\n$!: Do not use vfork unless overridden by a hint file. !sfn\n$!usevfork=false                                       !sfn\n$!: script used to extract .SH files with variable substitutions !sfn\n$!: produce awk script to parse command line options   !sfn\n$!sfn (assume no sed awk) see below\n$!: process the command line options         \n$!\n$!: set up default values\n$ fastread=\"\"\n$ reuseval=\"false\"\n$ maniskip = \"false\"\n$ IF F$TYPE(config_sh) .EQS. \"\" THEN config_sh=\"\"\n$ alldone=\"\"\n$ error=\"\"\n$ silent=\"\"\n$ extractsh=\"\"\n$ override=\"\"\n$ knowitall=\"\"\n$ ccname=\"VAX\"\n$ Dec_C_Version = \"\"\n$ cxxversion = \"\"\n$ use_threads = \"F\"\n$ use_5005_threads = \"N\"\n$ use_ithreads = \"N\"\n$!\n$!: option parsing\n$ config_args = \"\"\n$ IF (P1 .NES. \"\")\n$ THEN            !one or more switches was thrown\n$   i = 1\n$   bang = 0\n$Param_loop:\n$   IF (P'i'.NES.\"\") \n$   THEN\n$     bang = bang + 1\n$     config_args = config_args + F$FAO(\" !AS\",P'i')\n$   ENDIF\n$   i = i + 1\n$   IF (i.LT.9) THEN GOTO Param_loop !DCL allows P1..P8\n$!\n$   i = 1\n$Opt_loop:\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"-\") THEN P'i' = P'i' - \"-\"\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"/\") THEN P'i' = P'i' - \"/\"\n$Remove_quotation_mark:\n$   P'i' = P'i' - \"\"\"\"\n$   IF F$LOCATE(\"\"\"\",P'i') .LT. F$LENGTH(P'i') THEN GOTO Remove_quotation_mark\n$   gotopt      = \"f\" !\"alse\"\n$   gotshortopt = \"f\" !\"alse\"\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"d\")\n$   THEN\n$     fastread    = \"yes\"\n$     gotopt      = \"t\" !\"rue\"\n$     P'i'        = P'i' - \"d\"\n$     gotshortopt = \"t\" !\"rue\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"e\")\n$   THEN\n$     alldone = \"cont\"\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"e\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"f\") ! \"-f\"\n$   THEN\n$     P'i' = P'i' - \"f\"\n$     config_sh = P'i'\n$     IF (F$SEARCH(config_sh).NES.\"\")\n$     THEN\n$       test_config_sh = F$FILE_ATTRIBUTES(config_sh,\"PRO\")\n$       IF (F$LOCATE(\"R\",test_config_sh).NE.F$LENGTH(test_config_sh)) \n$       THEN\n$         config_dflt = \"y\"\n$         CONTINUE !at this point check UIC && if test allows...\n$                  !to be continued ?\n$       ELSE\n$         echo \"''me': cannot read config file ''config_sh'.\"\n$         error=\"true\"\n$       ENDIF\n$     ELSE\n$       echo \"''me': cannot read config file ''config_sh'.\"\n$       error=\"true\"\n$     ENDIF\n$     gotopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"h\") ! \"-h\"\n$   THEN\n$     error = \"true\"\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"h\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"m\")  ! \"-m\"\n$   THEN\n$     maniskip = \"true\"\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"m\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"r\")  ! \"-r\"\n$   THEN\n$     reuseval = \"true\"\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"r\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"s\") ! \"-s\"\n$   THEN\n$     silent = \"true\"\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"s\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"E\") ! \"-E\"\n$   THEN\n$     alldone = \"exit\"\n$     gotopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"K\") ! \"-K\"\n$   THEN\n$     knowitall = \"true\"\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"K\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"O\") ! \"-O\"\n$   THEN\n$     override = \"true\"\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"O\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"S\") ! \"-S\"\n$   THEN\n$     extractsh = \"true\"  !VMS?  Yes with munchconfig\n$     gotopt = \"t\"\n$     P'i' = P'i' - \"S\"\n$     gotshortopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"D\") ! \"-D\"\n$   THEN\n$     P'i' = P'i' - \"D\"\n$     IF (F$LOCATE(\"=\",P'i') .EQ. F$LENGTH(P'i'))\n$     THEN\n$       tmp = P'i' + \"=\"\"define\"\"\"\n$       'tmp'\n$       DELETE/SYMBOL tmp\n$     ELSE \n$       IF (F$LOCATE(\"=\",P'i') .EQ. (F$LENGTH(P'i') - 1))\n$       THEN\n$         me = F$PARSE(me,,,\"NAME\") + F$PARSE(me,,,\"TYPE\")\n$         echo \"''me': use \"\"-Usymbol=val\"\" not \"\"-Dsymbol=\"\".\"\n$         echo \"''me': ignoring -D\",P'i'\n$       ELSE\n$          tmp = F$EXTRACT(0,F$LOCATE(\"=\",P'i'),P'i')\n$          tmp = tmp + \"=\"\"\" + F$EXTRACT(F$LOCATE(\"=\",P'i')+1,F$LENGTH(P'i'),P'i') + \"\"\"\"\n$         'tmp'\n$         DELETE/SYMBOL tmp\n$       ENDIF\n$     ENDIF\n$     gotopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"U\") ! \"-U\"\n$   THEN\n$     P'i' = P'i' - \"U\"\n$     IF (F$LOCATE(\"=\",P'i') .EQ. F$LENGTH(P'i'))\n$     THEN\n$       tmp = P'i' + \"=\"\"\"\"\"\n$       'tmp'\n$       DELETE/SYMBOL tmp\n$     ELSE \n$       IF (F$LOCATE(\"=\",P'i') .LT. (F$LENGTH(P'i') - 1))\n$       THEN\n$         me = F$PARSE(me,,,\"NAME\") + F$PARSE(me,,,\"TYPE\")\n$         echo \"''me': use \"\"-Dsymbol=val\"\" not \"\"-Usymbol=val\"\".\"\n$         echo \"''me': ignoring -U\",P'i'\n$       ELSE\n$         tmp = P'i' + \"=\"\"undef\"\"\"\n$         'tmp'\n$         DELETE/SYMBOL tmp\n$       ENDIF\n$     ENDIF\n$     gotopt = \"t\"\n$   ENDIF\n$   IF (F$EXTRACT(0,1,P'i') .EQS. \"V\")\n$   THEN\n$     me = F$PARSE(me,,,\"NAME\") + F$PARSE(me,,,\"TYPE\")\n$     echo \"''me' generated by an unknown version of EDT.\"\n$     STOP\n$     EXIT\n$   ENDIF\n$   IF .NOT.gotopt \n$   THEN\n$     echo \"''me': unknown option \",P'i'\n$     error = \"true\"\n$   ENDIF\n$   IF (F$LENGTH(P'i').GT.0).AND.(gotshortopt) THEN i = i - 1 !clustered switch\n$   i = i + 1 \n$   IF (i .LT. (bang + 1)) THEN GOTO Opt_loop\n$!\n$ ENDIF  ! (P1 .NES. \"\")\n$ config_args = F$EDIT(config_args,\"TRIM\")\n$!\n$ IF (error)\n$ THEN\n$   me = F$PARSE(me,,,\"DIRECTORY\")+ F$PARSE(me,,,\"NAME\")\n$   echo \"Usage: @''me' [-dehmr\"\"EKOSV\"\"] [-fconfig.sh] [\"\"-Dsymbol\"\"] [\"\"-Dsymbol=value\"\"]\"\n$   echo \"                [-Usymbol]  [-Usymbol=]\"\n$   TYPE SYS$INPUT:\n$   DECK\n \"-d\" : use defaults for all answers.\n \"-e\" : go on without questioning past the production of config.sh.    *\n \"-f\" : specify an alternate default configuration file.\n \"-h\" : print this help message and exit (with an error status).\n \"-m\" : skip the MANIFEST check to see that all files are present\n \"-r\" : reuse C symbols value if possible (skips costly nm extraction).*\n \"-s\" : silent mode, only echoes questions and essential information.\n -\"D\" : define symbol to have some value:                              *\n         -\"Dsymbol\"         symbol gets the value 'define'\n         -\"Dsymbol=value\"   symbol gets the value 'value'\n  -E  : stop at the end of questions, after having produced config.sh. *\n  -K  : do not use unless you know what you are doing.\n  -O  : let -D and -U override definitions from loaded configuration file. *\n  -S  : perform variable substitutions on all .SH files (can mix with -f) *\n -\"U\" : undefine symbol:                                               *\n         -\"Usymbol\"    symbol gets the value 'undef'\n         -\"Usymbol=\"   symbol gets completely empty\n  -V  : print version number and exit (with a zero status).\n$   EOD\n$   echo \"%Config-I-VMS, lower case switches must be enclosed\"\n$   echo \"-Config-I-VMS, in double quotation marks, e.g.:\"\n$   echo \"-Config-I-VMS,   @Configure \"\"-des\"\"\"\n$   echo \"-Config-I-VMS, * indicates switch may not be fully implemented for VMS.\"\n$   SET DEFAULT 'vms_default_directory_name' !be kind rewind\n$   STOP\n$   EXIT 3 ! $STATUS = \"%X00000003\" (informational)\n$ ENDIF\n$!\n$ GOTO Check_silence\n$!\n$Shut_up:\n$ IF F$Mode() .eqs. \"BATCH\"\n$ THEN\n$   x = F$GETQUI(\"CANCEL_OPERATION\")        ! clear the deck\n$   x = \"THIS_JOB\"\n$   bproc_queue = f$getqui(\"DISPLAY_QUEUE\",\"QUEUE_NAME\",\"*\",x)\n$   bproc_entry = f$getqui(\"DISPLAY_JOB\",\"ENTRY_NUMBER\",,x)\n$   bproc_name = f$getqui(\"DISPLAY_JOB\",\"JOB_NAME\",,x)\n$   bproc_log_spec = f$getqui(\"DISPLAY_JOB\",\"LOG_SPECIFICATION\",,x)\n$   STDOUT = F$PARSE(bproc_name, bproc_log_spec, \".LOG\")\n$   WRITE SYS$OUTPUT \"Writing output of entry ''bproc_entry' in queue ''bproc_queue' to a new version of: \"\n$   WRITE SYS$OUTPUT STDOUT\n$   DELETE_/SYMBOL x\n$   DELETE_/SYMBOL bproc_queue\n$   DELETE_/SYMBOL bproc_entry\n$   DELETE_/SYMBOL bproc_name\n$   DELETE_/SYMBOL bproc_log_spec\n$ ELSE\n$   STDOUT = F$TRNLNM(\"SYS$OUTPUT\")\n$ ENDIF\n$ DEFINE SYS$OUTPUT \"_NLA0:\"\n$ echo4 = \"write STDOUT \"\n$ cat4 = \"TYPE/OUTPUT=''STDOUT'\"\n$ open/write/share=read STDOUT 'STDOUT'\n$ RETURN\n$!\n$Check_silence:\n$ IF (silent) \n$ THEN\n$   GOSUB Shut_up\n$ ELSE\n$   echo4 = \"write SYS$OUTPUT \"\n$   cat4 = \"TYPE\"\n$ ENDIF\n$!\n$!: run the defines and the undefines, if any, but leave the file out there...\n$! Unfortunately Configure.COM in DCL is not yet set up to do this - \n$! maybe someday\n$!\n$!: set package name\n$ package = \"perl5\"\n$ packageup = F$EDIT((package - \"5\"),\"UPCASE\")\n$!\n$!: Eunice requires \" \" instead of \"\", can you believe it\n$ echo \"\"\n$!: Here we go...\n$ echo \"Beginning of configuration questions for ''package'.\"\n$ echo \"\"\n$!\n$!: Some greps do not return status, grrr.\n$ contains = \"SEARCH\"\n$!\n$!: first determine how to suppress newline on echo command !cant DCL is record oriented\n$! echo \"Checking ''echo' to see how to suppress newlines...\"\n$! echo \"giving up...\"\n$! echo \"The star should be here-->*\"\n$!\n$!: Now test for existence of everything in MANIFEST\n$ echo \"\"\n$ echo4 \"First let's make sure your kit is complete.  Checking...\"\n$ manifestfound = \"\" \n$ miss_list = \"\" \n$! Here I assume we are in the [foo.PERLxxx...] tree\n$! because the search routine simply does set def [-] if necessary.\n$ file_2_find = \"MANIFEST\" !I hope this one is not in [foo.PERL5xxx.VMS...] \n$Research_manifest:\n$ manifestfound = F$SEARCH(file_2_find)\n$ IF (manifestfound .EQS. \"\")\n$ THEN\n$   IF F$PARSE(F$ENVIRONMENT(\"DEFAULT\"),,,\"DIRECTORY\",).NES.\"[000000]\"\n$   THEN\n$     SET DEFAULT [-]\n$     GOTO Research_manifest\n$   ELSE\n$     echo \"\"\n$     echo \"There is no MANIFEST file.  I hope your kit is complete !\"\n$     miss_list = \"\"\n$     GOTO Beyond_manifest\n$   ENDIF\n$ ELSE\n$! MANIFEST. has been found and we have set def'ed there.\n$! Time to bail out before it's too late, i.e. too deep.\n$! Depth check is unnecessary on Alpha VMS V7.2++ (even for ODS-2).\n$   tmp = f$extract(1,3,f$edit(f$getsyi(\"VERSION\"),\"TRIM,COLLAPSE\"))\n$   IF (tmp .GES. \"7.2\") .AND. (F$GETSYI(\"HW_MODEL\") .GE. 1024) THEN GOTO Beyond_depth_check\n$! Depth check also unnecessary on ODS 5 (or later) file systems.\n$   tmp = F$INTEGER(F$GETDVI(F$ENVIRONMENT(\"DEFAULT\"),\"ACPTYPE\") - \"F11V\")\n$   IF (tmp .GE. 5) THEN GOTO Beyond_depth_check\n$   IF (F$ELEMENT(max_allowed_dir_depth,\".\",F$ENVIRONMENT(\"DEFAULT\")).nes.\".\")\n$   THEN\n$     TYPE SYS$INPUT:\n$     DECK\n%Config-E-VMS, ERROR:\n Sorry! It apears as though your perl build sub-directory is already too\n deep into the VMS file system. Please try moving stuff into a shallower \n directory (or altering the \"max_allowed_dir_depth\" parameter).\n$     EOD\n$     echo4 \"ABORTING...\"\n$     SET DEFAULT 'vms_default_directory_name' !be kind rewind\n$     STOP\n$     EXIT !2 !$STATUS = \"%X00000002\" (error)\n$   ENDIF\n$Beyond_depth_check:\n$!\n$! after finding MANIFEST let's create (but not yet enter) the UU subdirectory\n$!\n$   IF (manifestfound .NES. \"\")\n$   THEN\n$     IF ( F$SEARCH(\"UU.DIR\").EQS.\"\" )\n$     THEN\n$       CREATE/DIRECTORY [.UU]\n$     ELSE\n$       IF ( F$SEARCH(\"[.UU.CXX_REPOSITORY]*.*\").NES.\"\" )\n$       THEN\n$         DELETE/NOLOG/NOCONFIRM [.UU.CXX_REPOSITORY]*.*;*\n$         SET PROTECTION=(SYSTEM:RWED,OWNER:RWED) [.UU]CXX_REPOSITORY.DIR\n$       ENDIF\n$       IF ( F$SEARCH(\"[.UU]*.*\").NES.\"\" ) THEN DELETE/NOLOG/NOCONFIRM [.UU]*.*;*\n$     ENDIF\n$!: Configure runs within the UU subdirectory\n$     SET DEFAULT [.UU]\n$!\n$! a little redundancy never hurt anybody?\n$     file_2_find = \"[-]\" + file_2_find\n$     manifestfound = F$SEARCH(file_2_find)\n$!\n$     OPEN/WRITE MISSING MISSING.\n$!change to \"FALSE\" if you wish to skip the manifest search \n$!(which after all is rather slow in DCL :-)\n$     IF (maniskip)\n$     THEN\n$       echo \"Skipping MANIFEST check as requested\"\n$     ELSE\n$!\n$       OPEN/READ CONFIG 'manifestfound'\n$Read_loop_manifest:\n$       READ/END_OF_FILE = Done_manifest CONFIG line\n$! This algorithm turns \"foo/bar/baz.c\" into \"[.foo.bar]baz.c\"\n$! pvhp@lns62.lns.cornell.edu 10-JUN-1996 20:31:46\n$! 2-MAR-1998 15:46:11 Improved to turn \"foo/bar/baz.c.buz\"\n$! into \"[.foo.bar]baz.c_buz as happens with vmstar and unzip\n$       line = F$EDIT(line,\"TRIM, COMPRESS\")\n$       file_2_find = F$EXTRACT(0,F$LOCATE(\" \",line),line) \n$       IF F$LOCATE(\"/\",file_2_find) .NE. F$LENGTH(file_2_find) \n$       THEN \n$Re_strip_line_manifest:\n$         loca = F$LOCATE(\"/\",file_2_find)\n$         ante = F$EXTRACT(0,loca,file_2_find)\n$         post = F$EXTRACT(loca,F$LENGTH(file_2_find),file_2_find)\n$         test_this = ante + \".\" + (post - \"/\")\n$         IF F$LOCATE(\"/\",test_this) .NE. F$LENGTH(test_this)\n$         THEN \n$           file_2_find = ante + \".\" + (post - \"/\")\n$           GOTO Re_strip_line_manifest\n$         ELSE\n$           file_2_find = ante + \"]\" + (post - \"/\")\n$         ENDIF\n$           file_2_find = \"[-.\"+file_2_find\n$       ELSE\n$         file_2_find = \"[-]\" + file_2_find\n$       ENDIF\n$!\n$       tmp = F$PARSE(file_2_find + \";\",,,,\"SYNTAX_ONLY\")\n$       IF F$SEARCH(tmp) .NES. \"\" THEN file_2_find = tmp\n$       dirname = F$EXTRACT(0,F$LOCATE(\"]\",file_2_find),file_2_find) + \"]\"\n$       file_2_find = file_2_find - dirname\n$!\n$!      may not need double dot check on ODS-5 volumes\n$       found = F$SEARCH(dirname + file_2_find)\n$       IF found .NES. \"\" THEN GOTO Read_loop_manifest\n$!\n$       dots = 0\n$Dot_loop:\n$       dot_ele = F$ELEMENT(dots,\".\",file_2_find)\n$       IF dot_ele .EQS. \".\" THEN GOTO Eo_dot_loop\n$       IF dots .eq. 0\n$       THEN basename = f$extract(0,f$locate(\".\",file_2_find),file_2_find) + \".\"\n$       ELSE basename = basename + dot_ele + \"_\"\n$       ENDIF\n$       dots = dots + 1\n$       GOTO dot_loop\n$Eo_dot_loop:\n$       IF (((f$length(file_2_find)+1) .eq. f$length(basename)) .and. -\n             (f$extract(f$length(basename)-1,1,basename) .eqs. \"_\")) THEN -\n          basename = f$extract(0,f$length(basename)-1,basename)\n$       file_2_find = dirname + basename\n$!\n$       found = F$SEARCH(file_2_find)\n$       IF (found .EQS. \"\" .AND. dots .GT. 2)\n$       THEN\n$! 17-DEC-1999 Improved to turn \"[.foo.bar]baz.c_buz\" into\n$! \"[.foo.bar]baz_c.buz\" to cover unzipped archives and put\n$! \"[.foo.bar]baz.c_buz,baz_c.buz\" into missing list if neither is found.\n$         dotloc = f$locate(\".\",basename)\n$         basename[dotloc,1] := \"_\"\n$         dot_ele = F$ELEMENT(dots - 1,\"_\",f$extract(dotloc,f$length(basename),basename))\n$         basename = -\n            f$extract(0,f$length(basename)-(f$length(dot_ele)+1),basename) -\n              + \".\" + dot_ele\n$         found = F$SEARCH(dirname + basename)\n$         file_2_find = file_2_find + \",\" + basename\n$       ENDIF\n$       tildeloc = f$locate(\"~\",basename)\n$       IF (found .EQS. \"\" .AND. tildeloc .LT. f$length(basename))\n$       THEN\n$         basename[tildeloc,1] := \"_\"\n$         found = F$SEARCH(dirname + basename)\n$         file_2_find = file_2_find + \",\" + basename\n$       ENDIF\n$       IF (found .EQS. \"\")\n$       THEN\n$         WRITE MISSING file_2_find\n$         IF ((F$LENGTH(miss_list)+F$LENGTH(file_2_find)).LT.250)\n$         THEN\n$           miss_list = miss_list + \",\" + file_2_find\n$         ENDIF\n$       ENDIF\n$       GOTO Read_loop_manifest\n$Done_manifest:\n$       CLOSE CONFIG\n$     ENDIF  !\"TRUE\"\n$     CLOSE MISSING\n$   ENDIF ! (manifestfound .NES. \"\")\n$Beyond_manifest:\n$   IF (miss_list .NES. \"\")\n$   THEN\n$     echo \"Some of the files not found include:\"\n$     cat4 MISSING.\n$   ENDIF\n$   IF ((miss_list .NES. \"\").OR.(manifestfound .EQS. \"\"))\n$   THEN\n$     TYPE SYS$INPUT:\n$     DECK\n\n\nTHIS PACKAGE SEEMS TO BE INCOMPLETE.\n\nYou have the option of continuing the configuration process, despite the\ndistinct possibility that your kit is damaged, by typing 'y'es.  If you\ndo, don't blame me if something goes wrong.  I advise you to type 'n'o\nand contact the author (dan@sidhe.org)\n\n$     EOD\n$     READ SYS$COMMAND/PROMPT=\"Continue? [n] \" ans\n$     IF ans\n$     THEN\n$       echo4 \"Continuing...\"\n$     ELSE\n$       echo4 \"ABORTING...\"\n$       GOTO Clean_up\n$     ENDIF\n$   ELSE\n$     echo4 \"Looks good...\"\n$     DELETE/NOLOG/NOCONFIRM MISSING.;\n$   ENDIF ! (miss_list .NES. \"\")\n$ ENDIF   ! (manifestfound .EQS. \"\") ELSE \n$!\n$! after finding MANIFEST (see above)\n$!: Configure runs within the UU subdirectory \n$!\n$!: compute the number of columns on the terminal for proper question formatting\n$ IF F$MODE() .EQS. \"BATCH\"\n$! else it winds up being 512 in batch\n$ THEN COLUMNS = 80\n$ ELSE COLUMNS = F$GETDVI(\"SYS$OUTPUT\",\"DEVBUFSIZ\")\n$ ENDIF\n$! \"-des\" sets SYS$OUTPUT to NL: with a DEVBUFSIZ too large (512 again)\n$ IF COLUMNS .GT. 210 THEN COLUMNS = 80\n$! not sure if this would actually be needed - it hopefully will not hurt\n$ IF COLUMNS .LT. 40 THEN COLUMNS = 40\n$!\n$!: set up the echo used in my read              !sfn\n$!: now set up to do reads with possible shell escape and default assignment !sfn\n$ GOTO Beyond_myread\n$!\n$! The sub_rp splitting is intended to handle long symbols such as the dflt for\n$! extensions.\n$!\n$myread:\n$ ans = \"\"\n$ len_rp = F$LENGTH(rp)\n$   If (.NOT. silent) Then echo \"\"\n$   IF len_rp .GT. 210\n$   THEN\n$     i_rp = 0\n$   rp_loop:\n$       sub_rp = F$EXTRACT(i_rp,COLUMNS,rp)\n$       i_rp = i_rp + COLUMNS\n$       if i_rp .LT. len_rp THEN echo4 \"''sub_rp'\"\n$     IF i_rp .LT. len_rp THEN GOTO rp_loop\n$   ELSE\n$   sub_rp = rp\n$   ENDIF\n$ if (fastread)\n$ then\n$     echo4 \"''sub_rp'\"\n$ else\n$     READ SYS$COMMAND/PROMPT=\"''sub_rp'\" ans\n$ endif\n$   IF (ans .EQS. \"&-d\")\n$   THEN\n$     echo4 \"(OK, I will run with -d after this question.)\"\n$   echo \"\"\n$   deferred_fastread =1\n$   goto myread\n$   ENDIF\n$   IF (ans .EQS. \"&-s\")\n$   THEN\n$     echo4 \"(OK, I will run with -s after this question.)\"\n$     echo \"\"\n$   deferred_silent = 1\n$   goto myread\n$     ENDIF\n$ if (bool_dflt .nes. \"\")\n$ then\n$   if (ans .eqs. \"\") then ans = bool_dflt\n$   ans = f$extract(0,1,f$edit(ans,\"collapse,upcase\"))\n$   if (ans .eqs. \"Y\" .or. ans .eqs. \"1\" .or. ans .eqs. \"T\") \n$   then\n$       ans = \"Y\"\n$   else\n$       if (ans .eqs. \"N\" .or. ans .eqs. \"0\" .or. ans .eqs. \"F\") \n$       then\n$           ans = \"N\"\n$       else\n$           echo4 \"Input not understood please answer 'Yes' or 'No'\"\n$           goto myread\n$       endif\n$   endif\n$   bool_dflt = \"\"\n$ else\n$   ans = f$edit(ans,\"trim,compress\")\n$   if (ans .eqs. \"\") then ans = dflt\n$   if (f$edit(ans,\"upcase\") .eqs. \"NONE\") then ans = \"\"\n$ endif\n$ if f$type(deferred_silent) .nes. \"\"  \n$ then\n$     silent := true\n$     GOSUB Shut_up\n$     delete/symbol deferred_silent\n$   ENDIF\n$ if f$type(deferred_fastread) .nes. \"\"\n$ then \n$   fastread = 1\n$   delete/symbol deferred_fastread\n$ endif\n$ RETURN\n$!\n$Beyond_myread:\n$!\n$!: create .config dir to save info across Configure sessions\n$ IF ( F$SEARCH(\"[-]CONFIG.DIR\").EQS.\"\" )\n$ THEN\n$   CREATE/DIRECTORY [-.CONFIG]\n$   OPEN/WRITE CONFIG [-.CONFIG]README.\n$   WRITE CONFIG -\n      \"This directory created by Configure to save information that should\"\n$   WRITE CONFIG -\n      \"persist across sessions.\"\n$   WRITE CONFIG \"\"\n$   WRITE CONFIG -\n      \"You may safely delete it if you wish.\"\n$   CLOSE CONFIG\n$ ENDIF\n$!\n$ IF F$TYPE(usedevel) .EQS. \"\" THEN usedevel = \"undef\"\n$ patchlevel_h = F$SEARCH(\"[-]patchlevel.h\")\n$ IF (patchlevel_h.NES.\"\")\n$ THEN\n$   SEARCH 'patchlevel_h' \"define\",\"PERL_VERSION\",\"epoch\"/match=and/out=[]ver.out\n$   IF .NOT. usedevel .AND. usedevel .NES. \"define\"\n$   THEN\n$     OPEN/READ CONFIG []ver.out\n$     READ CONFIG line\n$     CLOSE CONFIG\n$     tmp = F$EDIT(line,\"TRIM,COMPRESS\")\n$     xpatchlevel = F$INTEGER(F$ELEMENT(2,\" \",tmp))\n$     line = xpatchlevel / 2\n$     tmp = xpatchlevel - ( line * 2 )\n$     IF tmp .NE. 0\n$     THEN\n$       echo4 \"patchlevel is \" + F$STRING(xpatchlevel)\n$       cat4 SYS$INPUT:\n$       DECK\n*** WHOA THERE!!! ***\n\n    This is an UNSTABLE DEVELOPMENT release.\n    (The patchlevel, is odd--as opposed to even,\n     and that signifies a development release.  If you want a\n     maintenance release, you want an even-numbered release.)\n\n    Do ***NOT*** install this into production use.\n    Data corruption and crashes are possible.\n\n    It is most seriously suggested that you do not continue any further\n    unless you want to help in developing and debugging Perl.\n\n$       EOD\n$       bool_dflt=\"n\"\n$       rp=\"Do you really want to continue? [''bool_dflt'] \"\n$       fastread_save = fastread\n$       fastread := FALSE\n$       GOSUB myread\n$       fastread = fastread_save\n$       delete/symbol fastread_save\n$       IF ans\n$       THEN\n$         echo4 \"Okay, continuing.\"\n$       ELSE\n$         echo4 \"Okay, bye.\"\n$         DELETE/NOLOG/NOCONFIRM []ver.out;\n$         GOTO Clean_up\n$       ENDIF\n$     ENDIF\n$     DELETE/SYMBOL line\n$     DELETE/SYMBOL tmp\n$   ENDIF\n$   DELETE/NOLOG/NOCONFIRM []ver.out;\n$ ENDIF\n$!: general instructions\n$ needman = \"true\"\n$ firsttime = \"true\"\n$ user = F$EDIT(F$GETJPI(\"\",\"USERNAME\"),\"TRIM,COLLAPSE\")\n$ IF .NOT.(F$SEARCH(\"[-.CONFIG]INSTRUCT.\").EQS.\"\")\n$ THEN\n$   messages = F$ENVIRONMENT(\"MESSAGE\")\n$   SET MESSAGE/NOFAC/NOSEV/NOIDENT/NOTEXT\n$   contains /NOOUTPUT [-.CONFIG]INSTRUCT. 'user'\n$   IF .NOT.($status.EQ.%X08D78053)\n$   THEN\n$     firsttime=\"\"\n$     bool_dflt = \"n\"\n$     rp = \"Would you like to see the instructions? [''bool_dflt'] \"\n$     GOSUB myread\n$     if .NOT.ans THEN needman=\"\"\n$   ENDIF\n$   SET MESSAGE 'messages'\n$ ENDIF\n$ if (fastread.AND.silent.AND.(alldone.eqs.\"cont\")) THEN needman=\"\"\n$!\n$ IF (needman)\n$ THEN\n$   TYPE SYS$INPUT:\n$   DECK\n\nThis installation shell script will examine your system and ask you questions\nto determine how the perl5 package should be installed. If you get\nstuck on a question, you may use a ^C or ^Y shell escape to STOP this\nprocess, edit something, then restart this process as you just did.\nMany of the questions will have default answers in square\nbrackets; typing carriage return will give you the default.\n\n$   EOD\n$   if (fastread)\n$   then\n$     echo4 \"\"\n$   else\n$     READ SYS$COMMAND/PROMPT=\"Type carriage return to continue \" ans\n$   endif\n$   TYPE SYS$INPUT:\n$   DECK\n\nIn a hurry? You may run '@Configure \"-d\"'.  This will bypass nearly all\nthe questions and use the computed defaults (or the previous answers provided \nthere was already a config.sh file). Type '@Configure \"-h\"' for a list of \noptions.\n\n$   EOD\n$   if (fastread)\n$   then\n$     echo4 \"\"\n$   else\n$     READ SYS$COMMAND/PROMPT=\"Type carriage return to continue \" ans\n$   endif\n$   TYPE SYS$INPUT:\n$   DECK\n\nMuch effort has been expended to ensure that this shell script will\nrun on any VMS system.  If despite that it blows up on yours, your\nbest bet is to edit Configure.com and @ it again.  Whatever problems\nyou have with Configure.com, let me (dan@sidhe.org) know how I blew\nit.\n\n$   EOD\n$!This installation script affects things in two ways:\n$!\n$!1) it may do direct variable substitutions on some of the files included\n$!   in this kit.\n$!2) it builds a config.h file for inclusion in C programs.  You may edit\n$!   any of these files as the need arises after running this script.\n$!\n$!If you make a mistake on a question, there is no easy way to back up to it\n$!currently.\n$!\n$   if (fastread)\n$   then\n$     echo4 \"\"\n$   else\n$     READ SYS$COMMAND/PROMPT=\"Type carriage return to continue \" ans\n$   endif\n$   IF (F$SEARCH(\"[-.CONFIG]INSTRUCT.\").EQS.\"\")\n$   THEN\n$     OPEN/WRITE CONFIG [-.CONFIG]INSTRUCT.\n$     WRITE CONFIG user \n$     CLOSE CONFIG\n$   ENDIF\n$ ENDIF  !(needman .EQS. \"true\")\n$!\n$!: see if sh knows # comments             !sfn\n$!: figure out how to guarantee sh startup !sfn\n$!: find out where common programs are     !sfn\n$!loclist=\"awk/cat/comm/cp/echo/expr/find/grep/ln/ls/mkdir/rm/sed/sort/touch/tr/uniq\"\n$!trylist=\"byacc/cpp/csh/date/egrep/less/line/more/nroff/perl/pg/sendmail/test/uname\"\n$! echo \"I don't know where '$file' is, and my life depends on it.\"\n$! echo \"Go find a public domain implementation or fix your PATH setting!\"\n$! echo \"\"\n$! echo \"Don't worry if any of the following aren't found...\"\n$!: determine whether symbolic links are supported !sfn !jem- further down\n$!: see whether [:lower:] and [:upper:] are supported character classes !sfn\n$!: set up the translation script tr, must be called with ./tr of course !sfn\n$!\n$!: Try to determine whether config.sh was made on this system\n$!: Get old answers from old config file if Configure was run on the\n$!: same system, otherwise use the hints.\n$ config_sh_es = \"''config_sh'/[-]config.sh/\"\n$ i = 0\n$ max = 3\n$Config_sh_look:\n$ config_sh = F$ELEMENT(i,\"/\",config_sh_es)\n$ i = i + 1\n$ IF (config_sh.NES.\"/\").AND.(config_sh.NES.\"\")\n$ THEN\n$   configshfound = F$SEARCH(config_sh)\n$   IF (configshfound.NES.\"\") THEN GOTO Config_sh_found\n$ ENDIF\n$ IF (i.LT.max) THEN GOTO Config_sh_look\n$ osname = F$EDIT(F$GETSYI(\"NODE_SWTYPE\"),\"COLLAPSE\")\n$ IF (configshfound.EQS.\"\")\n$ THEN\n$   config_sh = \"[-]config.sh\" ! the fallback default\n$   GOTO Beyond_config_sh\n$ ENDIF\n$Config_sh_found:\n$ IF F$TYPE(osname) .EQS. \"\" THEN osname = F$EDIT(F$GETSYI(\"NODE_SWTYPE\"),\"COLLAPSE\")\n$ bool_dflt = \"n\"\n$ IF F$TYPE(config_dflt) .NES. \"\" THEN bool_dflt = config_dflt\n$ rp = \"Shall I use ''config_sh' for default answers? [''bool_dflt'] \"\n$ GOSUB myread\n$ IF ans\n$ THEN\n$   echo \"\"\n$   echo \"Fetching default answers from ''config_sh'...\"\n$!\n$!  we do our own parsing of the shell-script stuff\n$!  ...and only accept symbols if they're in the | delimited list below\n$!\n$   config_symbols0 =\"|archlib|archlibexp|bin|binexp|builddir|cf_email|config_sh|installarchlib|installbin|installman1dir|installman3dir|\"\n$   config_symbols1 =\"|installprivlib|installscript|installsitearch|installsitelib|most|oldarchlib|oldarchlibexp|osname|pager|perl_symbol|perl_verb|\"\n$   config_symbols2 =\"|prefix|privlib|privlibexp|scriptdir|sitearch|sitearchexp|sitebin|sitelib|sitelib_stem|sitelibexp|usecxx|use64bitall|use64bitint|\"\n$   config_symbols3 =\"|usecasesensitive|usedefaulttypes|usedevel|useieee|useithreads|uselongdouble|usemultiplicity|usemymalloc|usedebugging_perl|\"\n$   config_symbols4 =\"|usesecurelog|usethreads|usevmsdebug|usefaststdio|usemallocwrap|unlink_all_versions|uselargefiles|usesitecustomize|\"\n$   config_symbols5 =\"|buildmake|builder|usethreadupcalls|usekernelthreads|useshortenedsymbols|useversionedarchname\"\n$!  \n$   open/read CONFIG 'config_sh'\n$   rd_conf_loop:\n$     read/end=erd_conf_loop CONFIG line\n$     line = f$edit(line,\"trim\")\n$     if line .eqs. \"\" .or. f$extract(0,1,line) .eqs. \"#\" then goto rd_conf_loop\n$     sym = f$element(0,\"=\",line)\n$     if sym .eqs. \"=\" then goto rd_conf_loop\n$     dsym = \"|\"+sym+\"|\"\n$     k = 0\n$     rd_ck_loop:\n$         syms = config_symbols'k'\n$         j = f$locate(dsym, syms)\n$         if j .lt. f$length(syms) then goto erd_ck_loop\n$         k = k + 1\n$     if k .lt. 6 then goto rd_ck_loop\n$     goto rd_conf_loop\n$     erd_ck_loop:\n$     val = f$element(1,\"=\",line)\n$     val = f$extract(1,f$length(val)-2,val)\n$     write sys$output \"''sym' = \"\"''val'\"\"\"\n$    'sym' = \"''val'\"\n$   goto rd_conf_loop\n$   erd_conf_loop:\n$   close CONFIG\n$   delete/symbol config_symbols0\n$   delete/symbol config_symbols1\n$   delete/symbol config_symbols2\n$   delete/symbol config_symbols3\n$   delete/symbol config_symbols4\n$   delete/symbol config_symbols5\n$   delete/symbol sym\n$   delete/symbol val\n$   delete/symbol dsym\n$   if f$type(usedebugging_perl) .nes. \"\"\n$   then\n$       DEBUGGING = usedebugging_perl\n$       delete/symbol usedebugging_perl\n$   endif\n$!\n$ ENDIF\n$ if f$type(config_dflt) .nes. \"\" then DELETE/SYMBOL config_dflt\n$!\n$!we actually do not have \"hints/\" for VMS\n$!     TYPE SYS$INPUT:\n$!     DECK\n$!\n$!First time through, eh?  I have some defaults handy for the following systems:\n$!\n$!     EOD\n$!     echo \"     \",\"VMS_VAX\"\n$!     echo \"     \",\"VMS_AXP\"\n$!     echo \"     \",\"VMS_IA64\"\n$!        : Now look for a hint file osname_osvers, unless one has been\n$!        : specified already.\n$!     TYPE SYS$INPUT:\n$!\n$!You may give one or more space-separated answers, or \"none\" if appropriate.\n$!If your OS version has no hints, DO NOT give a wrong version -- say \"none\".\n$!\n$!     READ SYS$COMMAND/PROMPT=\"Which of these apply, if any? \" ans\n$!\n$Beyond_config_sh:\n$!\n$!: Restore computed paths          !sfn\n$!\n$! %Config-I-VMS, a necessary error trap (could be PC running VCL)\n$!\n$ IF (osname .NES. \"VMS\")\n$ THEN\n$   echo4 \"Hmm.. I wonder what ''osname' is (?)\"\n$   TYPE SYS$INPUT:\n$   DECK\n\n%Config-E-VMS, ERROR:\n\n           Err, you do not appear to be running VMS!\n This procedure is intended to Configure the building of Perl for VMS.\n\n$   EOD\n$   bool_dflt = \"n\"\n$   GOSUB myread\n$   IF ans\n$   THEN\n$     echo4 \"Continuing...\"\n$   ELSE\n$     echo4 \"ABORTING...\"\n$     SET DEFAULT 'vms_default_directory_name' !be kind rewind\n$     STOP\n$     EXIT 2 !$STATUS = \"%X00000002\" (error)\n$   ENDIF\n$ ENDIF !(osname .NES./.EQS. \"VMS\")\n$!\n$!: who configured the system\n$ cf_by = F$EDIT(user,\"LOWERCASE\")\n$ osvers = F$EDIT(F$GETSYI(\"VERSION\"),\"TRIM\")\n$!\n$! Peter Prymmer has seen:\n$!  \"SYS$TIMEZONE_DIFFERENTIAL\" = \"-46800\"  (sic)\n$!  \"SYS$TIME_ZONE\" = \"EDT\"\n$!\n$! Charles Lane recommended:\n$!  \"SYS$TIMEZONE_DIFFERENTIAL\" = \"-14400\"\n$!  \"NEWS_TIMEZONE\" = \"-0500\"\n$!  \"ST_TIMEZONE\" = \"EDT\"\n$!  \"JAN_TIME_ZONE\" = \"EST  \"\n$!  \"MULTINET_TIMEZONE\" = \"EST\"\n$!  \"DAYLIGHT_SAVINGS\"  = \"1\"\n$!\n$! Charles Bailey recommends (in ANU NEWS Doc Jan 1995):\n$!   \"PMDF_Timezone\"\n$!   \"Multinet_Timezone\"\n$!   \"TCPware_Timezone\"\n$!   \"WIN$Time_Zone\"\n$!\n$! This snippet o' DCL returns a string in default Unix `date` format,\n$! and it will prompt to set SYS$TIMEZONE_DIFFERENTIAL.\n$!\n$ MIN_TZO = -840  !units are minutes here\n$ MAX_TZO =  840\n$!\n$ wkday  = F$EXTRACT(0,3,F$CVTIME(,,\"WEEKDAY\"))\n$ monn   = F$CVTIME(,,\"MONTH\")\n$ mday   = F$EXTRACT(8,2,F$CVTIME(,,\"DATE\"))\n$ hour   = F$CVTIME(,,\"HOUR\")\n$ min    = F$CVTIME(,,\"MINUTE\")\n$ sec    = F$CVTIME(,,\"SECOND\")\n$ year   = F$CVTIME(,,\"YEAR\")\n$!\n$ months = \"/Jan/Feb/Mar/Apr/May/Jun/Jul/Aug/Sep/Oct/Nov/Dec/\"\n$ i = 0\n$Mon_loop:\n$ i = i + 1\n$ mon = F$ELEMENT(i,\"/\",months)\n$ IF i.LT.monn THEN GOTO Mon_loop\n$!\n$ tzneedset = \"t\"\n$ systz = F$TRNLNM(\"SYS$TIMEZONE_DIFFERENTIAL\")\n$ IF systz.NES.\"\"\n$ THEN\n$   tzhour = F$INTEGER(systz)/3600\n$   tzmins = F$INTEGER(systz)/60\n$   tzminrem = tzmins - tzhour*60\n$   IF tzminrem.lt.0 THEN tzminrem = -1*tzminrem  !keeps !2ZL happy\n$   IF tzhour.ge.0 \n$   THEN signothetime = \"+\" \n$     IF tzhour.EQ.0.AND.tzminrem.EQ.0 \n$     THEN direction = \"on GMT/\"\n$     ELSE direction = \"east of \"\n$     ENDIF\n$   ELSE signothetime = \"-\"\n$     tzhour = -1*tzhour                          !keeps !UL happy\n$     direction = \"west of \"\n$   ENDIF\n$   echo \"\"\n$   echo \"According to the setting of your \"\"SYS$TIMEZONE_DIFFERENTIAL\"\" (= ''systz')\"\n$   IF tzminrem.ne.0\n$   THEN\n$     tzspan = \"''tzhour' hours & ''tzminrem' minutes\"\n$   ELSE\n$     tzspan = \"''tzhour' hours\"\n$   ENDIF\n$   bool_dflt = \"y\"\n$   echo \"Your system is ''tzspan' ''direction'UTC in England.\"\n$   rp = \"(''systz') Is this UTC Time Zone Offset correct? [''bool_dflt'] \"\n$   GOSUB myread\n$   IF ans\n$   THEN \n$     tzneedset = \"f\"\n$     tzd = systz\n$     GOTO Beyond_TimeZone\n$   ENDIF\n$ ELSE\n$   echo \"\"\n$   echo4 \"\"\"SYS$TIMEZONE_DIFFERENTIAL\"\" does not appear to be DEFINEd on your system\"\n$ ENDIF\n$!\n$TZSet:\n$ echo \"\"\n$ echo \"Please tell me in hh:mm form what time offset from GMT/UTC in England\"\n$ echo \"you are.  As an example Eastern (US) Standard Time is -5:00 offset, but\"\n$ echo \"Eastern Daylight Time (summer) is -4:00 offset.\"\n$ dflt = \"0:00\"\n$ rp = \"Enter the Time Zone offset: [''dflt'] \"\n$ GOSUB myread\n$ ans = F$Edit(ans,\"collapse,trim,uncomment,upcase\")\n$ IF ans.EQS.\"\" THEN ans = dflt\n$ tzhour   = F$ELEMENT(0,\":\",\"''ans'\") !first\n$ IF tzhour.EQS.\"\" THEN tzhour = 0\n$ tzhour   = F$INTEGER(tzhour)\n$ tzminrem = F$ELEMENT(1,\":\",\"''ans'\") !second\n$ IF tzminrem.NES.\"\" \n$ THEN \n$   tzminrem = F$INTEGER(tzminrem)\n$   IF F$EXTRACT(0,1,\"''ans'\") .EQS. \"-\" THEN tzminrem = tzminrem * -1\n$ ELSE \n$   tzminrem = 0\n$ ENDIF\n$ tzmins = tzhour*60 + tzminrem\n$ tzd = F$STRING(tzmins*60)\n$ IF tzhour .GE. 0 \n$ THEN\n$   signothetime = \"+\" \n$ ELSE\n$   tzhour = -1*tzhour       !keeps !UL happy\n$   signothetime = \"-\"\n$ ENDIF\n$ IF (tzmins.GT.MAX_TZO).OR.(tzmins.LT.MIN_TZO)\n$ THEN\n$   echo \"\"\n$   echo \"%Config-W-VMS-TIMERANGE, Response must be in the range -14:00 to 14:00.\"\n$   goto TZSet\n$ ENDIF\n$!\n$Beyond_TimeZone:\n$ tz = f$fao(\"UTC!AS!UL:!2ZL\",signothetime,tzhour,tzminrem)\n$ cf_time = \"''wkday' ''mon' ''mday' ''hour':''min':''sec' ''tz' ''year'\"\n$!\n$! This quotation from Configure has to be included on VMS:\n$!\n$ TYPE SYS$INPUT:\n$ DECK\n\nThere is, however, a strange, musty smell in the air that reminds me of\nsomething...hmm...yes...I've got it...there's a VMS nearby, or I'm a Blit.\n$ EOD\n$!\n$! Determine the architecture name.  For now we just get the base\n$! architecture name, which may accumulate various minus sign-delimited\n$! appendages later depending on configuration options.  But we need the\n$! base name early because not all questions are worth asking on all\n$! platforms.\n$!\n$! Please use F$ELEMENT(0,\"-\",archname) .EQS. \"VMS_VAX\" (or \"VMS_AXP\" or\n$! \"VMS_IA64\") from here on to allow cross-platform configuration (e.g.\n$! configure a VAX build on an Alpha).\n$!\n$ IF (F$GETSYI(\"HW_MODEL\") .LT. 1024 .AND. F$GETSYI(\"HW_MODEL\") .GT. 0)\n$ THEN \n$   archname = \"VMS_VAX\"\n$   otherarch = \"an Alpha or IA64\"\n$   alignbytes=\"8\"\n$   arch_type = \"ARCH-TYPE=__VAX__\"\n$ ELSE\n$   IF (F$GETSYI(\"ARCH_TYPE\") .EQ. 2)\n$   THEN\n$       archname = \"VMS_AXP\"\n$       otherarch = \"a VAX or IA64\"\n$       arch_type = \"ARCH-TYPE=__AXP__\"\n$   ELSE\n$       archname = \"VMS_IA64\"\n$       otherarch = \"a VAX or Alpha\"\n$       arch_type = \"ARCH-TYPE=__IA64__\"\n$   ENDIF\n$   alignbytes=\"8\"\n$ ENDIF\n$!\n$!: set the base revision\n$ baserev=\"5.0\"\n$ revision = baserev - \".0\"\n$!: get the patchlevel\n$ echo \"\"\n$ echo4 \"Getting the current patchlevel...\"\n$ patchlevel=\"0\"\n$ subversion=\"0\"\n$ api_revision=\"0\"\n$ api_version=\"0\"\n$ api_subversion=\"0\"\n$ perl_patchlevel=\"0\"\n$ patchlevel_h = F$SEARCH(\"[-]patchlevel.h\")\n$ IF (patchlevel_h.NES.\"\")\n$ THEN\n$   got_patch = \"false\"\n$   got_sub   = \"false\"\n$   got_api_revision   = \"false\"\n$   got_api_version    = \"false\"\n$   got_api_subversion = \"false\"\n$   got_perl_patchlevel= \"false\"\n$   OPEN/READONLY CONFIG 'patchlevel_h' \n$Patchlevel_h_loop:\n$   READ/END_Of_File=Close_patch/ERROR=Close_patch CONFIG line\n$   IF ((F$LOCATE(\"#define PERL_VERSION\",line).NE.F$LENGTH(line)).AND.(.NOT.got_patch))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     patchlevel = F$ELEMENT(2,\" \",line)\n$     got_patch = \"true\"\n$   ENDIF\n$   IF ((F$LOCATE(\"#define PERL_SUBVERSION\",line).NE.F$LENGTH(line)).AND.(.NOT.got_sub))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     subversion = F$ELEMENT(2,\" \",line)\n$     got_sub = \"true\"\n$   ENDIF\n$   IF ((F$LOCATE(\"#define PERL_API_REVISION\",line).NE.F$LENGTH(line)).AND.(.NOT.got_api_revision))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     api_revision = F$ELEMENT(2,\" \",line)\n$     got_api_revision = \"true\"\n$   ENDIF\n$   IF ((F$LOCATE(\"#define PERL_API_VERSION\",line).NE.F$LENGTH(line)).AND.(.NOT.got_api_version))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     api_version = F$ELEMENT(2,\" \",line)\n$     got_api_version = \"true\"\n$   ENDIF\n$   IF ((F$LOCATE(\"#define PERL_API_SUBVERSION\",line).NE.F$LENGTH(line)).AND.(.NOT.got_api_subversion))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     api_subversion = F$ELEMENT(2,\" \",line)\n$     got_api_subversion = \"true\"\n$   ENDIF\n$   IF ((F$LOCATE(\"\"\"DEVEL\",line).NE.F$LENGTH(line)).AND.(.NOT.got_perl_patchlevel))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     perl_patchlevel = F$ELEMENT(1,\"\"\"\",line)\n$     perl_patchlevel = perl_patchlevel - \"DEVEL\"\n$     got_perl_patchlevel = \"true\"\n$   ENDIF\n$   IF ((F$LOCATE(\"\"\"SMOKE\",line).NE.F$LENGTH(line)).AND.(.NOT.got_perl_patchlevel))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     perl_patchlevel = F$ELEMENT(1,\"\"\"\",line)\n$     perl_patchlevel = perl_patchlevel - \"SMOKE\"\n$     got_perl_patchlevel = \"true\"\n$   ENDIF\n$   IF ((F$LOCATE(\"\"\"MAINT\",line).NE.F$LENGTH(line)).AND.(.NOT.got_perl_patchlevel))\n$   THEN\n$     line = F$EDIT(line,\"COMPRESS, TRIM\")\n$     perl_patchlevel = F$ELEMENT(1,\"\"\"\",line)\n$     perl_patchlevel = perl_patchlevel - \"MAINT\"\n$     got_perl_patchlevel = \"true\"\n$   ENDIF\n$   IF (.NOT. got_patch) .OR. -\n       (.NOT. got_sub) .OR. - \n       (.NOT. got_api_revision) .OR. -\n       (.NOT. got_api_version) .OR. -\n       (.NOT. got_api_subversion) .OR. -\n       (.NOT. got_perl_patchlevel) -\n      THEN GOTO Patchlevel_h_loop\n$Close_patch:\n$   CLOSE CONFIG\n$ ENDIF\n$!\n$ IF F$SEARCH(\"[-].patch\") .NES. \"\"\n$ THEN\n$   SET NOON\n$   OPEN/READ PATCH [-].patch\n$   READ PATCH line\n$   CLOSE PATCH\n$   tmp = F$EDIT(line,\"TRIM,COMPRESS\")\n$   IF F$ELEMENT(3, \" \", tmp) .NES. \"\" THEN tmp = F$ELEMENT(3, \" \", tmp)\n$   SET ON\n$   IF tmp .NES. \"\" THEN perl_patchlevel = tmp\n$ ENDIF\n$!\n$ version_patchlevel_string = \"version ''patchlevel' subversion ''subversion'\"\n$ IF got_perl_patchlevel .AND. perl_patchlevel .NES. \"0\"\n$ THEN\n$   version_patchlevel_string = \"''version_patchlevel_string' patch ''perl_patchlevel'\"\n$ ENDIF\n$ echo \"(You have ''package' ''version_patchlevel_string'.)\"\n$!\n$ version = revision + \"_\" + patchlevel + \"_\" + subversion\n$!\n$!: see if we need a special compiler\n$! cc_list = \"cc/decc|gcc\" !%Config-I-VMS, compiler symbols/commands\n$!\n$ nocc = \"f\"\n$ vms_cc_dflt = \"\"\n$ vms_cc_available = \"\"\n$!\n$ OPEN/WRITE CONFIG ccvms.c\n$ WRITE CONFIG \"#ifdef __DECC\"\n$ WRITE CONFIG \"#include <stdlib.h>\"  !DECC is sooo picky\n$ WRITE CONFIG \"#endif\"\n$ WRITE CONFIG \"#include <stdio.h>\"\n$ WRITE CONFIG \"int main() {\"\n$ WRITE CONFIG \"#ifdef __DECC\"\n$ WRITE CONFIG \"        printf(\"\"/DECC\\n\"\");\"\n$ WRITE CONFIG \"#else\"\n$ WRITE CONFIG \"        printf(\"\"/VAXC\\n\"\");\"\n$ WRITE CONFIG \"#endif\"\n$ WRITE CONFIG \"        exit(0);\"\n$ WRITE CONFIG \"}\"\n$ CLOSE CONFIG\n$!\n$ SET NOON\n$ DEFINE/USER_MODE SYS$ERROR _NLA0:\n$ DEFINE/USER_MODE SYS$OUTPUT _NLA0:\n$ cc/NoObj/list=ccvms.lis ccvms.c\n$ tmp = $status\n$ SET ON\n$ IF (silent) THEN GOSUB Shut_up\n$ IF tmp.NE.%X10B90001\n$ THEN \n$  IF tmp.NE.%X10000001\n$  THEN \n$    nocc = \"t\"  !%X10000001 is return from gcc\n$    GOTO Gcc_initial_check\n$  ENDIF\n$ ENDIF\n$!\n$ GOSUB List_Parse\n$ IF .NOT.silent THEN echo \"\"\n$ echo \"Default \"\"cc\"\" is ''line' ''archsufx' ''F$GETSYI(\"VERSION\")'\" \n$ IF F$LOCATE(\"VAX\",line).NE.F$LENGTH(line) \n$ THEN \n$   IF .NOT.silent\n$   THEN \n$     echo \"Will try cc/decc...\"\n$   ENDIF\n$   SET NOON\n$   DEFINE/USER_MODE SYS$ERROR NL:\n$   DEFINE/USER_MODE SYS$OUTPUT NL:\n$   cc/decc/NoObj/list=ccvms.lis ccvms.c\n$   tmp = $status\n$   SET ON\n$   IF (silent) THEN GOSUB Shut_up\n$   IF tmp.NE.%X10B90001\n$   THEN\n$     echo \"Apparently you don't have that one.\"\n$   ELSE\n$     GOSUB List_parse\n$     echo \"You also have: ''line' ''archsufx' ''F$GETSYI(\"VERSION\")'\"\n$     vms_cc_available = vms_cc_available + \"cc/decc \"\n$   ENDIF\n$ ELSE\n$   IF (F$LOCATE(\"DEC\",line).NE.F$LENGTH(line)).or.(F$LOCATE(\"Compaq\",line).NE.F$LENGTH(line)) -\n    .or.(F$LOCATE(\"HP\",F$EDIT(line,\"UPCASE\")).NE.F$LENGTH(line))\n$   THEN \n$     vms_cc_dflt = \"/decc\"\n$     vms_cc_available = vms_cc_available + \"cc/decc \"\n$   ENDIF\n$ ENDIF\n$!\n$Gcc_initial_check:\n$ echo \"Checking for gcc\"\n$ OPEN/WRITE CONFIG gccvers.lis\n$ SET NOON\n$ DEFINE/USER_MODE SYS$ERROR CONFIG\n$ DEFINE/USER_MODE SYS$OUTPUT CONFIG\n$ 'gcc_symbol'/noobj/version _nla0:\n$ tmp = $status\n$ SET ON\n$ IF (silent) THEN GOSUB Shut_up\n$ CLOSE CONFIG\n$ IF (tmp.NE.%X10000001).and.(tmp.ne.%X00030001)\n$ THEN\n$   echo \"Symbol \"\"''gcc_symbol'\"\" is not defined. I guess you do not have it.\"\n$   DELETE/NOLOG/NOCONFIRM gccvers.lis;\n$   GOTO Cxx_initial_check\n$ ENDIF\n$ OPEN/READ CONFIG gccvers.lis\n$GCC_List_Read:\n$ READ/END_OF_FILE=GCC_List_End CONFIG line\n$ GOTO GCC_List_Read\n$GCC_List_End:\n$ CLOSE CONFIG\n$ echo line\n$ vms_cc_available = vms_cc_available + \"''gcc_symbol' \"\n$ DELETE/NOLOG/NOCONFIRM gccvers.lis;\n$!\n$Cxx_initial_check:\n$!\n$! In order to build with the HP C++ compiler, invoke configure.com with \"-Dusecxx\" on\n$! the command line.\n$!\n$ IF F$TYPE(usecxx) .EQS. \"\" THEN usecxx := n\n$ IF usecxx .OR. usecxx .EQS. \"define\"\n$ THEN\n$!\n$ echo \"Checking for CXX...\"\n$ OPEN/WRITE CONFIG ccvms.c\n$ WRITE CONFIG \"#include <iostream>\"\n$ WRITE CONFIG \"int main() {\"\n$ WRITE CONFIG \"#ifdef __DECCXX\"\n$ WRITE CONFIG \"        cout << __DECCXX, endl;\"\n$ WRITE CONFIG \"#else\"\n$ WRITE CONFIG \"        cout << 0,endl;\"\n$ WRITE CONFIG \"#endif\"\n$! Todo: add G++ identifier check ??\n$ WRITE CONFIG \"        return(0);\"\n$ WRITE CONFIG \"}\"\n$ CLOSE CONFIG\n$ SET NOON\n$ DEFINE/USER_MODE SYS$OUTPUT NL:\n$ DEFINE/USER_MODE SYS$ERROR NL:\n$ cxx ccvms.c\n$ tmp = $status\n$ SET ON\n$! success $status with:\n$! DEC C++ V1.1-001 on VMS VAX V5.5-2\n$! DEC C++ V5.6-013 on OpenVMS VAX V7.1\n$! DEC C++ V6.1-003 on OpenVMS Alpha V7.1\n$! Compaq C++ V6.2-016 for OpenVMS Alpha V7.2-1\n$ IF tmp .eq. %X15F60001  \n$ THEN\n$! Which linker?\n$   SET NOON\n$   DEFINE/USER_MODE SYS$OUTPUT NL:\n$   DEFINE/USER_MODE SYS$ERROR NL:\n$   link/nodebug ccvms.obj\n$   tmp = $status\n$   SET ON\n$   ! success $status with:\n$   ! link && DEC C++ V1.1-001 on VMS VAX V5.5-2\n$   ! link && DEC C++ V5.6-013 on OpenVMS VAX V7.1\n$   IF tmp .eq. %X10000001\n$   THEN\n$     ld_try = \"Link/nodebug\"\n$     vms_cc_available = vms_cc_available + \"cxx \"\n$     echo \"CXX and LINK are available.\"\n$   ELSE\n$     IF F$SEARCH(\"ccvms.exe\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM ccvms.exe;\n$     SET NOON\n$     DEFINE/USER_MODE SYS$OUTPUT NL:\n$     DEFINE/USER_MODE SYS$ERROR NL:\n$     cxxlink ccvms.obj\n$     tmp = $status\n$     SET ON\n$     ! success $status with:\n$     ! cxxlink && DEC C++ V6.1-003 on OpenVMS Alpha V7.1\n$     ! cxxlink && Compaq C++ V6.2-016 for OpenVMS Alpha V7.2-1\n$     IF tmp .eq. %X10000001 \n$     THEN \n$       ld_try = \"cxxlink\"\n$       vms_cc_available = vms_cc_available + \"cxx \"\n$       echo \"CXX and CXXLINK are available.\"\n$     ENDIF\n$   ENDIF\n$   IF F$SEARCH(\"ccvms.exe\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM ccvms.exe;\n$ ELSE\n$   echo \"Nope.\"\n$ ENDIF\n$ DELETE/NOLOG/NOCONFIRM ccvms.c;\n$ IF F$SEARCH(\"ccvms.obj\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM ccvms.obj;\n$ CALL Cxx_demangler_cleanup\n$!\n$ ENDIF ! 1 .eq. 0 or 1 .eq. 1\n$!\n$CC_Cleanup:\n$ DELETE/NOLOG/NOCONFIRM ccvms.*;\n$CC_Desired:\n$!: see if we need a special compiler\n$! echo \"\"\n$ echo \"Available compiler(s):\"\n$ echo \"( ''vms_cc_available')\"\n$ IF .NOT.nocc \n$ THEN\n$   IF usecxx .OR. usecxx .EQS. \"define\"\n$   THEN\n$     dflt = \"cxx\"\n$   ELSE\n$     dflt = \"cc''vms_cc_dflt'\"  !-> \"cc\" in case first compile went OK\n$   ENDIF\n$ ELSE\n$   dflt = gcc_symbol\n$ ENDIF\n$ rp = \"Use which C compiler? [''dflt'] \"\n$ GOSUB myread\n$ IF ans.NES.\"\"\n$ THEN\n$   ans = F$EDIT(ans,\"TRIM, COMPRESS, LOWERCASE\")\n$   Mcc = ans\n$   IF (F$LOCATE(\"dec\",ans).NE.F$LENGTH(ans)).or.(F$LOCATE(\"compaq\",ans).NE.F$LENGTH(ans)) -\n    .or.(F$LOCATE(\"hp\",ans).NE.F$LENGTH(ans))\n$   THEN\n$     Mcc = \"cc/decc\"\n$! CPQ ?\n$     ccname := DEC\n$     C_COMPILER_Replace = \"CC=cc=''Mcc'\"\n$   ENDIF\n$   IF F$LOCATE(\"cxx\",F$EDIT(ans,\"COLLAPSE,LOWERCASE\")) .NE. F$LENGTH(ans)\n$   THEN\n$     Mcc = \"cxx\"\n$     ccname := CXX\n$     ld = ld_try\n$     C_COMPILER_Replace = \"CC=cc=''Mcc'\"\n$   ELSE ! Not_cxx\n$     IF Mcc.NES.dflt\n$     THEN\n$       IF F$LOCATE(\"dec\",dflt) .NE. F$LENGTH(dflt) .or. -\n           F$LOCATE(\"compaq\",dflt) .NE. F$LENGTH(dflt)\n$       THEN \n$         C_COMPILER_Replace = \"CC=cc=''Mcc'\"\n$       ELSE\n$         ccname := DEC\n$       ENDIF\n$     ELSE\n$       IF Mcc .EQS. \"cc/decc\"\n$       THEN\n$         ccname := DEC\n$         C_COMPILER_Replace = \"CC=cc=''Mcc'\"\n$       ENDIF\n$     ENDIF\n$   ENDIF\n$ ELSE \n$   Mcc = dflt\n$   IF Mcc .EQS. \"cc/decc\"\n$   THEN\n$     ccname := DEC\n$     C_COMPILER_Replace = \"CC=cc=''Mcc'\"\n$   ENDIF\n$   IF Mcc .EQS. \"gcc\"\n$   THEN\n$     ccname := GCC\n$     C_COMPILER_Replace = \"CC=cc=''Mcc'\"\n$   ENDIF\n$ ENDIF\n$Decc_Version_check:\n$ ccversion=\"\"\n$ IF ccname .EQS. \"DEC\"\n$ THEN\n$   echo \"\"\n$   echo4 \"Checking for the Dec C version number...\"\n$   OPEN/WRITE CONFIG deccvers.c\n$   WRITE CONFIG \"#include <stdlib.h>\"  !DECC is sooo picky\n$   WRITE CONFIG \"#include <stdio.h>\"\n$   WRITE CONFIG \"int main() {\"\n$   WRITE CONFIG \"#ifdef __DECC\"\n$   WRITE CONFIG \"#ifdef __DECC_VER\"\n$   WRITE CONFIG \"        printf(\"\"%i\\n\"\", __DECC_VER);\"\n$   WRITE CONFIG \"#else\"\n$   WRITE CONFIG \"        printf(\"\"%i\\n\"\", \"\"1\"\");\"\n$   WRITE CONFIG \"#endif\"\n$   WRITE CONFIG \"#endif\"\n$   WRITE CONFIG \"        exit(0);\"\n$   WRITE CONFIG \"}\"\n$   CLOSE CONFIG\n$   SET NOON\n$   DEFINE/USER_MODE SYS$ERROR NL:\n$   DEFINE/USER_MODE SYS$OUTPUT NL:\n$   'Mcc' deccvers.c\n$   tmp = $status\n$   IF (silent) THEN GOSUB Shut_up\n$   DEFINE/USER_MODE SYS$ERROR NL:\n$   DEFINE/USER_MODE SYS$OUTPUT NL:\n$   link/nodebug deccvers.obj\n$   tmp = $status\n$   IF (silent) THEN GOSUB Shut_up\n$   OPEN/WRITE CONFIG deccvers.out\n$   DEFINE/USER_MODE SYS$ERROR CONFIG\n$   DEFINE/USER_MODE SYS$OUTPUT CONFIG\n$   mcr []deccvers.exe\n$   tmp = $status\n$   SET ON\n$   CLOSE CONFIG\n$   IF (silent) THEN GOSUB Shut_up\n$   OPEN/READ CONFIG deccvers.out\n$   READ/END_OF_FILE=Dec_c_cleanup CONFIG line\n$Dec_c_cleanup:\n$   CLOSE CONFIG\n$   echo \"You are using Dec C ''line'\"\n$   ccversion = line\n$   Dec_C_Version = F$INTEGER(line)\n$   IF Dec_C_Version .GE. 60200000 .AND. F$ELEMENT(0, \"-\", archname) .NES. \"VMS_VAX\"\n$   THEN\n$     echo4 \"adding /NOANSI_ALIAS qualifier to ccflags.\"\n$     ccflags = ccflags + \"/NOANSI_ALIAS\"\n$   ENDIF\n$   DELETE/NOLOG/NOCONFIRM deccvers.*;\n$ ENDIF\n$Gcc_check:\n$ gccversion = \"\"\n$ IF ccname .EQS. \"GCC\"\n$ THEN\n$   vaxcrtl_olb = F$SEARCH(\"SYS$LIBRARY:VAXCRTL.OLB\")\n$   vaxcrtl_exe = F$SEARCH(\"SYS$SHARE:VAXCRTL.EXE\")\n$   gcclib_olb  = F$SEARCH(\"GNU_CC:[000000]GCCLIB.OLB\")\n$   IF gcclib_olb .EQS. \"\" \n$   THEN \n$!    These objects/libs come w/ gcc 2.7.2 for AXP:\n$     tmp = F$SEARCH(\"GNU_CC:[000000]libgcc2.olb\")\n$     IF tmp .NES. \"\" then gcclib_olb = tmp\n$     tmp = F$SEARCH(\"GNU_CC:[000000]libgcclib.olb\")\n$     IF tmp .NES. \"\" \n$     THEN \n$       IF gcclib_olb .EQS. \"\" \n$       THEN gcclib_olb = tmp\n$       ELSE gcclib_olb = gcclib_olb + \"/lib,\" + tmp\n$       ENDIF\n$     ENDIF\n$     tmp = F$SEARCH(\"SYS$LIBRARY:VAXCRTL.OLB\")\n$     IF tmp .NES. \"\" \n$     THEN \n$       IF gcclib_olb .EQS. \"\" \n$       THEN gcclib_olb = tmp\n$       ELSE gcclib_olb = gcclib_olb + \"/lib,\" + tmp\n$       ENDIF\n$     ENDIF\n$     tmp = F$SEARCH(\"GNU_CC:[000000]crt0.obj\")\n$     IF tmp .NES. \"\" \n$     THEN \n$       IF gcclib_olb .EQS. \"\" \n$       THEN gcclib_olb = tmp\n$       ELSE gcclib_olb = gcclib_olb + \"/lib,\" + tmp\n$       ENDIF\n$     ENDIF\n$     IF gcclib_olb .EQS. vaxcrtl_olb THEN gcclib_olb = \"\" !goofy order of axplibs\n$   ELSE\n$     gcclib_olb = gcclib_olb + \"/lib\"\n$   ENDIF\n$   IF   gcclib_olb .NES. \"\" .AND. -\n     (vaxcrtl_olb .NES. \"\" .OR. -\n      vaxcrtl_exe .NES. \"\" )\n$   THEN\n$     echo \"\"\n$     echo4 \"Checking for GNU cc in disguise and/or its version number...\" !>&4\n$     OPEN/WRITE CONFIG gccvers.c\n$     WRITE CONFIG \"#include <stdio.h>\"\n$     WRITE CONFIG \"int main() {\"\n$     WRITE CONFIG \"#ifdef __GNUC__\"\n$     WRITE CONFIG \"#ifdef __VERSION__\"\n$     WRITE CONFIG \"        printf(\"\"%s\\n\"\", __VERSION__);\"\n$     WRITE CONFIG \"#else\"\n$     WRITE CONFIG \"        printf(\"\"%s\\n\"\", \"\"1\"\");\"\n$     WRITE CONFIG \"#endif\"\n$     WRITE CONFIG \"#endif\"\n$     WRITE CONFIG \"        exit(0);\"\n$     WRITE CONFIG \"}\"\n$     CLOSE CONFIG\n$     DEFINE SYS$ERROR _NLA0:\n$     DEFINE SYS$OUTPUT _NLA0:\n$     'Mcc' gccvers.c\n$     tmp = $status\n$     DEASSIGN SYS$ERROR _NLA0:\n$     DEASSIGN SYS$OUTPUT _NLA0:\n$     IF (silent) THEN GOSUB Shut_up\n$     DEFINE SYS$ERROR _NLA0:\n$     DEFINE SYS$OUTPUT _NLA0:\n$     IF vaxcrtl_exe .EQS. \"\"\n$     THEN \n$       IF F$LOCATE(\"VAXCRTL\",gcclib_olb).NE.F$LENGTH(gcclib_olb)\n$       THEN \n$         link/nodebug gccvers.obj,'gcclib_olb',SYS$LIBRARY:VAXCRTL/Library\n$         tmp = $status\n$       ELSE\n$         link/nodebug gccvers.obj,'gcclib_olb'\n$         tmp = $status\n$       ENDIF\n$     ELSE\n$       OPEN/WRITE CONFIG GCCVERS.OPT\n$       WRITE CONFIG \"SYS$SHARE:VAXCRTL/SHARE\"\n$       CLOSE CONFIG\n$       link/nodebug gccvers.obj,GCCVERS.OPT/OPT,'gcclib_olb'\n$       tmp = $status\n$     ENDIF\n$     DEASSIGN SYS$ERROR\n$     DEASSIGN SYS$OUTPUT\n$     IF (silent) THEN GOSUB Shut_up\n$     OPEN/WRITE CONFIG gccvers.out\n$     DEFINE SYS$ERROR CONFIG\n$     DEFINE SYS$OUTPUT CONFIG\n$     mcr []gccvers.exe\n$     tmp = $status\n$     CLOSE CONFIG\n$     DEASSIGN SYS$OUTPUT\n$     DEASSIGN SYS$ERROR\n$     IF (silent) THEN GOSUB Shut_up\n$     OPEN/READ CONFIG gccvers.out\n$     READ/END_OF_FILE=Gcc_cleanup CONFIG line\n$Gcc_cleanup:\n$     CLOSE CONFIG\n$     DELETE/NOLOG/NOCONFIRM gccvers.*;\n$     IF F$LOCATE(\"GNU C version \",line).NE.F$LENGTH(line)\n$     THEN \n$       echo \"You are not using GNU cc.\"\n$       GOTO Host_name\n$     ELSE \n$       echo \"You are using GNU cc ''line'\"\n$       gccversion = line\n$       ccname := \"GCC\"\n$       C_COMPILER_Replace = \"CC=cc=''Mcc'\"\n$       GOTO Include_dirs\n$     ENDIF\n$   ENDIF\n$ ENDIF\n$Cxx_Version_check:\n$ IF ccname .EQS. \"CXX\"\n$ THEN\n$   OPEN/WRITE CONFIG cxxvers.c\n$   WRITE CONFIG \"#include <stdio.h>\"\n$   WRITE CONFIG \"int main() {\"\n$   WRITE CONFIG \"#ifdef __DECCXX_VER\"\n$   WRITE CONFIG \"        printf(\"\"%i\\n\"\", __DECCXX_VER);\"\n$   WRITE CONFIG \"#else\"\n$   WRITE CONFIG \"        printf(\"\"%i\\n\"\", \"\"0\"\");\"\n$   WRITE CONFIG \"#endif\"\n$   WRITE CONFIG \"        return(0);\"\n$   WRITE CONFIG \"}\"\n$   CLOSE CONFIG\n$   SET NOON\n$   DEFINE/USER_MODE SYS$ERROR NL:\n$   DEFINE/USER_MODE SYS$OUTPUT NL:\n$   'Mcc' cxxvers.c\n$   tmp = $status\n$   SET ON\n$   IF (silent) THEN GOSUB Shut_up\n$   SET NOON\n$   DEFINE/USER_MODE SYS$ERROR NL:\n$   DEFINE/USER_MODE SYS$OUTPUT NL:\n$   'ld' cxxvers.obj\n$   tmp = $status\n$   SET ON\n$   IF (silent) THEN GOSUB Shut_up\n$   OPEN/WRITE CONFIG cxxvers.out\n$   SET NOON\n$   DEFINE/USER_MODE SYS$ERROR CONFIG\n$   DEFINE/USER_MODE SYS$OUTPUT CONFIG\n$   mcr []cxxvers.exe\n$   tmp = $status\n$   SET ON\n$   CLOSE CONFIG\n$   IF (silent) THEN GOSUB Shut_up\n$   OPEN/READ CONFIG cxxvers.out\n$   READ/END_OF_FILE=Cxx_cleanup CONFIG line\n$Cxx_cleanup:\n$   CLOSE CONFIG\n$   DELETE/NOLOG/NOCONFIRM cxxvers.*;\n$   echo \"You are using CXX ''line'\"\n$   cxxversion = line\n$   ccversion = line\n$   d_cplusplus = \"define\"\n$   echo4 \"adding /NOANSI_ALIAS qualifier to ccflags.\"\n$   ccflags = ccflags + \"/NOANSI_ALIAS\"\n$   CALL Cxx_demangler_cleanup\n$ ELSE\n$   d_cplusplus = \"undef\"\n$ ENDIF\n$!\n$Cxx_demangler_cleanup: SUBROUTINE\n$!\n$!  If we do build with CXX these demangler Dbs will be left all over.\n$!  However, configure.com does try to remove the [.UU] sub directory.\n$!  Be sure to set default to the correct place before calling this sub.\n$!\n$ SET NOON\n$ IF F$SEARCH(\"[.CXX_REPOSITORY]*.*\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM [.CXX_REPOSITORY]*.*;*\n$ IF F$SEARCH(\"CXX_REPOSITORY.DIR\") .NES. \"\"\n$ THEN\n$   SET PROTECTION=(SYSTEM:RWED,OWNER:RWED) CXX_REPOSITORY.DIR\n$   DELETE/NOLOG/NOCONFIRM CXX_REPOSITORY.DIR;\n$ ENDIF\n$ SET ON\n$ EXIT\n$ ENDSUBROUTINE ! Cxx_demangler_cleanup\n$!\n$ GOTO Host_name\n$!\n$List_Parse:\n$ OPEN/READ CONFIG ccvms.lis\n$ READ CONFIG line\n$ IF F$ELEMENT(0, \"-\", archname) .EQS. \"VMS_VAX\"\n$ THEN\n$   read CONFIG line\n$   archsufx = \"VAX\"\n$ ELSE\n$   IF F$ELEMENT(0, \"-\", archname) .EQS. \"VMS_AXP\"\n$   THEN\n$       archsufx = \"AXP\"\n$   ELSE\n$       archsufx = \"IA64\"\n$   ENDIF\n$ ENDIF\n$ CLOSE CONFIG\n$ line = F$EDIT(line,\"TRIM,COMPRESS\")\n$ line = line - \"Page 1\"           ! occurs at end all compilers\n$ line = line - \"CCVMS \"           ! filename appears w/ VAXC\n$ line = line - \"Source Listing \"  ! Seen w/ AXP DECC\n$ tmp = F$EXTRACT(0,20,line)       !timestamp, e.g. \"30-JUL-1996 21:12:54 \"\n$ line = line - tmp\n$ line = F$EDIT(line,\"TRIM\")       !bit redundant but we're in no big hurry\n$ DELETE/NOLOG/NOCONFIRM ccvms.lis;\n$ RETURN\n$!\n$Include_dirs:\n$!: What should the include directory be ? (.TLB text libraries)\n$ dflt = gcclib_olb \n$ rp = \"Where are the include files you want to use? \"\n$ IF f$length( rp + \"[''dflt'] \" ) .GT. 76\n$ THEN rp = F$FAO(\"!AS!/!AS\",rp,\"[''dflt'] \")\n$ ELSE rp = rp + \"[''dflt'] \"\n$ ENDIF\n$ GOSUB myread\n$ usrinc = ans\n$!\n$!: see if we have to deal with yellow pages, now NIS.\n$!: now get the host name\n$Host_name:\n$ echo \"\"\n$ echo4 \"Figuring out host name...\" !>&4\n$ myhostname = \"\"\n$  IF myhostname.eqs.\"\" THEN myhostname = F$TRNLNM(\"ARPANET_HOST_NAME\")\n$  IF myhostname.eqs.\"\" THEN myhostname = F$TRNLNM(\"INTERNET_HOST_NAME\")\n$  IF myhostname.eqs.\"\" THEN myhostname = F$TRNLNM(\"MULTINET_HOST_NAME\")\n$  IF myhostname.eqs.\"\" THEN myhostname = F$TRNLNM(\"UCX$INET_HOST_NAME\")\n$  IF myhostname.eqs.\"\".and. -\n      F$TRNLNM(\"UCX$INET_HOST\") .nes. \"\" .and. -\n      F$TRNLNM(\"UCX$INET_DOMAIN\") .nes. \"\" THEN - \n     myhostname = F$TRNLNM(\"UCX$INET_HOST\") + \".\" + F$TRNLNM(\"UCX$INET_DOMAIN\") \n$  IF myhostname.eqs.\"\".and. -\n      F$TRNLNM(\"TCPIP$INET_HOST\") .nes. \"\" .and. -\n      F$TRNLNM(\"TCPIP$INET_DOMAIN\") .nes. \"\" THEN - \n     myhostname = F$TRNLNM(\"TCPIP$INET_HOST\") + \".\" + F$TRNLNM(\"TCPIP$INET_DOMAIN\") \n$  IF myhostname.eqs.\"\" THEN myhostname = F$TRNLNM(\"TCPWARE_DOMAINNAME\")\n$  IF myhostname.eqs.\"\" THEN myhostname = F$TRNLNM(\"NEWS_ADDRESS\")\n$  IF myhostname.eqs.\"\" THEN myhostname = F$TRNLNM(\"SYS$NODE\") - \"::\"\n$  IF myhostname.eqs.\"\" THEN myhostname = F$EDIT(F$GETSYI(\"SCSNODE\"),\"TRIM\")\n$!: you do not want to know about this\n$!: verify guess\n$ rp = \"Your host name appears to be \"\"\"\"''myhostname'\"\"\"\". Right? \"\n$ bool_dflt = \"y\"\n$ GOSUB myread\n$ IF (.not.ans)\n$   THEN \n$     READ SYS$COMMAND/PROMPT= - \n \"Please type the (one word) name of your host: \" ans\n$     myhostname = ans\n$ ENDIF\n$!: translate upper to lower if necessary\n$ myhostname = F$EDIT(myhostname,\"COLLAPSE\")\n$ mylowhostname = F$EDIT(myhostname,\" LOWERCASE\")\n$ IF mylowhostname.NES.myhostname\n$ THEN\n$   echo \"(Normalizing case in your host name)\"\n$   myhostname = mylowhostname\n$ ENDIF\n$!\n$ fp = F$LOCATE(\".\",myhostname)\n$ mydomain = F$EXTRACT(fp,(F$LENGTH(myhostname)-fp)+1,myhostname)\n$ IF mydomain.NES.\"\"  !no periods in DECnet names like \"MYDECNODE::\"\n$ THEN\n$   rp = \"What is your domain name? [''mydomain'] \"\n$   dflt = mydomain\n$   GOSUB myread\n$   mydomain = ans\n$!: translate upper to lower if necessary\n$   mydomain = F$EDIT(mydomain,\"COLLAPSE\")\n$   mylowdomain = F$EDIT(mydomain,\" LOWERCASE\")\n$   IF mylowdomain.NES.mydomain\n$   THEN\n$     echo \"(Normalizing case in your domain name)\"\n$     mydomain = mylowdomain\n$   ENDIF\n$ ENDIF\n$ myhostname = myhostname - mydomain\n$ echo \"(Trimming domain name from host name--host name is now ''myhostname')\"\n$ IF .NOT.silent \n$ THEN\n$   TYPE SYS$INPUT:\n$   DECK\n\nI need to get your e-mail address in Internet format if possible, i.e.\nsomething like user@host.domain. Please answer accurately since I have\nno easy means to double check it. The default value provided below\nis most probably close to the reality but may not be valid from outside\nyour organization...\n$   EOD\n$ ENDIF\n$ IF F$TYPE(cf_email) .EQS. \"\" \n$ THEN \n$   dflt = \"''cf_by'@''myhostname'\"+\"''mydomain'\"\n$   rp = \"What is your e-mail address? [''dflt'] \"\n$   GOSUB myread\n$   cf_email = ans\n$ ENDIF\n$!\n$ IF .NOT.silent \n$ THEN\n$   TYPE SYS$INPUT:\n$   DECK\n\nIf you or somebody else will be maintaining perl at your site, please\nfill in the correct e-mail address here so that they may be contacted\nif necessary. Currently, the \"perlbug\" program included with perl\nwill send mail to this address in addition to perlbug@perl.com. You may\nenter \"none\" for no administrator.\n$   EOD\n$ ENDIF\n$ dflt = \"''cf_email'\"\n$ rp = \"Perl administrator e-mail address [''dflt'] \"\n$ GOSUB myread\n$ perladmin = ans\n$!\n$!: determine where public executable scripts go\n$!: determine perl absolute location\n$!: figure out how to guarantee perl startup\n$!\n$!: see how we invoke the C preprocessor\n$! echo \"\"\n$! echo4 \"Now, how can we feed standard input to your C preprocessor...\" !>&4\n$!: Set private lib path\n$!: Now check and see which directories actually exist, avoiding duplicates\n$!: determine optimize, if desired, or use for debug flag also\n$!: We will not override a previous value, but we might want to\n$!: augment a hint file\n$!: the following weeds options from ccflags that are of no interest to cpp\n$!: flags used in final linking phase\n$!: Try to guess additional flags to pick up local libraries.\n$!: coherency check\n$! echo \"\"\n$! echo4 \"Checking your choice of C compiler and flags for coherency...\" !>&4\n$!: compute shared library extension\n$!: Looking for optional libraries\n$!: see if nm is to be used to determine whether a symbol is defined or not\n$!: get list of predefined functions in a handy place\n$!: see if we have sigaction or sigprocmask\n$ IF (ccname .EQS. \"DEC\" .AND. Dec_C_Version .GE. 50200000) .OR. (ccname .EQS. \"CXX\")\n$ THEN\n$   Has_Dec_C_Sockets = \"T\"\n$   echo \"\"\n$   echo4 \"Hmm... Looks like you have Dec C Berkeley networking support.\"\n$ ELSE\n$   Has_Dec_C_Sockets = \"F\"\n$ ENDIF\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   echo \"\"\n$   echo \"You have sockets available via the C library. Should socket support\"\n$   echo \"be built into Perl?\"\n$   dflt = \"DECC\"\n$   rp = \"Choose socket support option (NONE\"\n$   IF Has_Dec_C_Sockets THEN rp = rp + \",DECC\"\n$   rp = rp + \") [''dflt'] \"\n$   GOSUB myread\n$   Has_Dec_C_Sockets = \"F\"\n$   Has_socketshr = \"F\"\n$   ans = F$EDIT(ans,\"TRIM,COMPRESS,LOWERCASE\")\n$   IF ans.eqs.\"decc\" THEN Has_Dec_C_Sockets = \"T\"\n$ ENDIF\n$!\n$!\n$! Ask if they want to build with VMS_DEBUG perl\n$ echo \"\"\n$ echo \"Perl can be built to run under the VMS debugger.\"\n$ echo \"You should only select this option if you are debugging\"\n$ echo \"perl itself.  This can be a useful feature if you are \"\n$ echo \"embedding perl in a program.\"\n$ bool_dflt = \"n\"\n$ if f$type(usevmsdebug) .nes. \"\" \n$ then\n$   if usevmsdebug .or. usevmsdebug .eqs. \"define\" then bool_dflt=\"y\"\n$ endif\n$ rp = \"Build a VMS-DEBUG version of Perl? [''bool_dflt'] \"\n$ GOSUB myread\n$ use_vmsdebug_perl = ans\n$ IF use_vmsdebug_perl\n$ THEN\n$   usevmsdebug = \"define\"\n$ ELSE\n$   usevmsdebug = \"undef\"\n$ ENDIF\n$!\n$! Ask if they want to build with DEBUGGING\n$ echo \"\"\n$ echo \"Perl can be built with extra runtime debugging enabled. This\"\n$ echo \"enables the -D switch, at the cost of some performance.  It\"\n$ echo \"was mandatory on perl 5.005 and before on VMS, but is now\"\n$ echo \"optional.  If you do not generally use it you should probably\"\n$ echo \"leave this off and gain a bit of extra speed.\"\n$ bool_dflt = \"n\"\n$ if f$type(DEBUGGING) .nes. \"\" \n$ then\n$   if f$extract(0,1,f$edit(DEBUGGING,\"collapse,upcase\")).eqs.\"Y\"  .or. DEBUGGING .eqs. \"define\" then bool_dflt=\"y\"\n$ endif\n$ rp = \"Build a DEBUGGING version of Perl? [''bool_dflt'] \"\n$ GOSUB myread\n$ use_debugging_perl = ans\n$!\n$!\n$! Ask about threads, if appropriate\n$ IF ccname .EQS. \"DEC\" .OR. ccname .EQS. \"CXX\"\n$ THEN\n$   echo \"\"\n$   echo \"Perl can be built to offer a form of threading support on some systems.\"\n$   echo \"To do so, configure.com can be run with -\"\"Dusethreads\"\".\"\n$   echo \"\"\n$   echo \"Note that Perl built with threading support runs slightly slower\"\n$   echo \"and uses slightly more memory than plain Perl.\"\n$   echo \"\"\n$   bool_dflt = \"n\"\n$   if f$type(usethreads) .nes. \"\" \n$   then \n$       if usethreads .or. usethreads .eqs. \"define\" then bool_dflt=\"y\"\n$   endif\n$!  Catch cases where user specified ithreads but\n$!  forgot -Dusethreads \n$   if f$type(useithreads) .nes. \"\"\n$   then\n$         if useithreads .or. useithreads .eqs. \"define\" then bool_dflt=\"y\"\n$   endif\n$   echo \"If this doesn't make any sense to you, just accept the default '\" + bool_dflt + \"'.\"\n$   rp = \"Build a threading Perl? [''bool_dflt'] \"\n$   GOSUB myread\n$   if ans\n$   THEN\n$     usethreads = \"define\"\n$     use_threads=\"T\"\n$     bool_dflt = \"y\"\n$     if f$type(useithreads) .nes. \"\"\n$     then\n$         if useithreads .eqs. \"undef\" then bool_dflt=\"n\"\n$     endif\n$     if f$type(use5005threads) .nes. \"\"\n$     then\n$         if use5005threads .or. use5005threads .eqs. \"define\"\n$         then\n$             echo \"5.005 threads are no longer supported\"\n$             exit 44\n$         endif\n$     endif\n$     rp = \"Use the newer interpreter-based ithreads? [''bool_dflt'] \"\n$     GOSUB myread\n$     use_ithreads=ans\n$     use_5005_threads=\"N\"\n$     ! Are they on VMS 7.1 or greater?\n$     IF \"''f$extract(1,3, f$getsyi(\"\"version\"\"))'\" .GES. \"7.1\"\n$     THEN\n$       echo \"\"\n$\techo \"Threaded Perl can be linked to use system upcalls on your system. This feature\"\n$\techo \"allows the thread scheduler to be made aware of system events (such as I/O)\"\n$\techo \"so as to prevent a single thread from blocking all the threads in a program,\"\n$\techo \"even on a single-processor machine.\"\n$\tbool_dflt = \"y\"\n$\tIF f$type(usethreadupcalls) .NES. \"\"\n$\tTHEN\n$       \tif .not. usethreadupcalls .or. usethreadupcalls .eqs. \"undef\" then bool_dflt=\"n\"\n$\tENDIF\n$       rp = \"Enable thread upcalls? [''bool_dflt'] \"\n$       gosub myread\n$       IF ans\n$       THEN\n$           thread_upcalls = \"MTU=MTU=1\"\n$\t    usethreadupcalls = \"define\"\n$     \t    ! Are they on alpha or itanium?\n$\t    IF (F$ELEMENT(0, \"-\", archname) .NES. \"VMS_VAX\") .AND. (\"''f$extract(1,3, f$getsyi(\"\"version\"\"))'\" .GES. \"7.2\")\n$     \t    THEN\n$       \techo \"\"\n$       \techo \"Threaded Perl can be linked to use multiple kernel threads on your system.\"\n$       \techo \"This feature allows multiple user threads to make use of multiple CPUs on\"\n$\t\techo \"a multi-processor machine.\"\n$       \tbool_dflt = \"n\"\n$\t\tIF f$type(usekernelthreads) .nes. \"\"\n$\t\tTHEN\n$       \t\tif usekernelthreads .or. usekernelthreads .eqs. \"define\" then bool_dflt=\"y\"\n$\t\tENDIF\n$       \trp = \"Enable multiple kernel threads? [''bool_dflt'] \"\n$       \tgosub myread\n$       \tIF ans\n$\t\tTHEN\n$           \t    thread_kernel = \"MTK=MTK=1\"\n$\t    \t    usekernelthreads = \"define\"\n$           \tENDIF\n$           ENDIF\n$       ENDIF\n$     ENDIF\n$   ELSE\n$     usethreads = \"undef\"\n$   ENDIF\n$ ENDIF\n$ IF F$TYPE(usethreadupcalls) .EQS. \"\" THEN usethreadupcalls = \"undef\"\n$ IF F$TYPE(usekernelthreads) .EQS. \"\" THEN usekernelthreads = \"undef\"\n$!\n$! Ask if they want to build with MULTIPLICITY\n$ echo \"\"\n$ echo \"Perl can be built so that multiple Perl interpreters can coexist\"\n$ echo \"within the same Perl executable.\"\n$ IF usethreads .OR. usethreads .EQS. \"define\"\n$ THEN\n$   echo \"This multiple interpreter support is required for interpreter-based threads.\"\n$   usemultiplicity=\"define\"\n$ ELSE\n$   bool_dflt = \"n\"\n$   if f$type(usemultiplicity) .nes. \"\" \n$   then\n$     if usemultiplicity .or. usemultiplicity .eqs. \"define\" then bool_dflt = \"y\"\n$   endif\n$   rp = \"Build Perl for multiplicity? [''bool_dflt'] \"\n$   GOSUB myread\n$   IF ans\n$   THEN\n$     usemultiplicity=\"define\"\n$   ELSE\n$     usemultiplicity=\"undef\"\n$   ENDIF\n$ ENDIF\n$!\n$! Ask if they want to build with 64-bit support\n$ IF (F$ELEMENT(0, \"-\", archname).NES.\"VMS_VAX\").and.(\"''f$extract(1,3, f$getsyi(\"\"version\"\"))'\".ges.\"7.1\")\n$ THEN\n$   bool_dflt = \"n\"\n$   IF F$TYPE(use64bitint) .NES. \"\" \n$   THEN\n$       IF use64bitint .OR. use64bitint .eqs. \"define\" THEN bool_dflt = \"y\"\n$   ENDIF\n$   echo \"\"\n$   echo \"You have natively 64-bit long integers.\"\n$   echo \"\"\n$   echo \"Perl can be built to take advantage of 64-bit integer types\"\n$   echo \"on some systems, To do so, Configure can be run with -Duse64bitint.\"\n$   echo \"Choosing this option will most probably introduce binary incompatibilities.\"\n$   echo \"\"\n$   echo \"If this does not make any sense to you, just accept the default '\" + bool_dflt + \"'.\"\n$   rp = \"Try to use 64-bit integers, if available? [''bool_dflt'] \"\n$   GOSUB myread\n$   use64bitint = ans\n$!\n$   bool_dflt = \"n\"\n$   IF F$TYPE(use64bitall) .NES. \"\" \n$   THEN\n$       IF use64bitall .OR. use64bitall .eqs. \"define\" THEN bool_dflt = \"y\"\n$   ENDIF\n$   echo \"\"\n$   echo \"You may also choose to try maximal 64-bitness.  It means using as much\"\n$   echo \"64-bitness as possible on the platform.  This in turn means even more\"\n$   echo \"binary incompatibilities.  On the other hand, your platform may not\"\n$   echo \"have any more 64-bitness available than what you already have chosen.\"\n$   echo \"\"\n$   echo \"If this does not make any sense to you, just accept the default '\" + bool_dflt + \"'.\"\n$   rp = \"Try to use maximal 64-bit support, if available? [''bool_dflt'] \"\n$   GOSUB myread\n$   use64bitall=ans\n$   IF use64bitall .AND. .NOT. use64bitint\n$   THEN\n$     echo \"\"\n$     echo \"Since you have chosen a maximally 64-bit build, I'm also turning on\"\n$     echo \"the use of 64-bit integers.\"\n$     use64bitint=\"Y\"\n$   ENDIF\n$!\n$   bool_dflt = use64bitall\n$   IF F$TYPE(uselargefiles) .NES. \"\" \n$   THEN\n$       IF uselargefiles .OR. uselargefiles .eqs. \"define\" THEN bool_dflt = \"y\"\n$   ENDIF\n$   echo \"\"\n$   echo \"Perl can be built to understand large files (files larger than 2 gigabytes)\"\n$   echo \"on some systems.  To do so, Configure can be run with -Duselargefiles.\"\n$   echo \"\"\n$   echo \"If this does not make any sense to you, just accept the default '\" + bool_dflt + \"'.\"\n$   rp = \"Try to understand large files, if available? [''bool_dflt'] \"\n$   GOSUB myread\n$   uselargefiles=ans\n$!\n$   bool_dflt = \"n\"\n$   IF F$TYPE(uselongdouble) .NES. \"\" \n$   THEN\n$       IF uselongdouble .OR. uselongdouble .eqs. \"define\" THEN bool_dflt = \"y\"\n$   ENDIF\n$   echo \"\"\n$   echo \"Perl can be built to take advantage of long doubles which\"\n$   echo \"(if available) may give more accuracy and range for floating point numbers.\"\n$   echo \"\"\n$   echo \"If this does not make any sense to you, just accept the default '\" + bool_dflt + \"'.\"\n$   rp = \"Try to use long doubles, if available? [''bool_dflt'] \"\n$   GOSUB myread\n$   uselongdouble = ans\n$!\n$ ENDIF ! not VAX && >= 7.1\n$!\n$ IF usesitecustomize .OR. usesitecustomize .eqs. \"define\" \n$ THEN \n$       usesitecustomize = \"define\"\n$ ELSE\n$       usesitecustomize = \"undef\"\n$ ENDIF\n$!\n$! Case sensitive?\n$   echo \"\"\n$   echo \"By default, perl (and pretty much everything else on VMS) uses\"\n$   echo \"case-insensitive linker symbols. Which is to say, when the\"\n$   echo \"underlying C code makes a call to a routine called Perl_foo in\"\n$   echo \"the source, the name in the object modules or shareable images\"\n$   echo \"is really PERL_FOO. There are some packages that use an\"\n$   echo \"embedded perl interpreter that instead require case-sensitive\"\n$   echo \"linker symbols.\"\n$   echo \"\"\n$   echo \"If you have no idea what this means, and do not have\"\n$   echo \"any program requiring anything, choose the default.\"\n$   bool_dflt = be_case_sensitive\n$   if f$type(usecasesensitive) .nes. \"\"\n$   then\n$       if usecasesensitive .or. usecasesensitive .eqs. \"define\" then bool_dflt = \"y\"\n$       if f$extract(0,1,f$edit(usecasesensitive,\"collapse,upcase\")).eqs.\"N\" .or. usecasesensitive .eqs. \"undef\"  then bool_dflt = \"n\"\n$   endif\n$   rp = \"Build with case-sensitive symbols? [''bool_dflt'] \"\n$   GOSUB myread\n$   be_case_sensitive = ans\n$!\n$! Shortened symbols?\n$   echo \"\"\n$   echo \"The VMS linker does not handle symbol names longer than 31 characters,\"\n$   echo \"but the compiler can shorten long symbols if requested.\"\n$   bool_dflt = shorten_long_symbols\n$   if f$type(useshortenedsymbols) .nes. \"\"\n$   then\n$       if useshortenedsymbols .or. useshortenedsymbols .eqs. \"define\" then bool_dflt = \"y\"\n$       if f$extract(0,1,f$edit(useshortenedsymbols,\"collapse,upcase\")) .eqs. \"N\" .or. useshortenedsymbols .eqs. \"undef\"  then bool_dflt = \"n\"\n$   endif\n$   rp = \"Build with long symbols shortened? [''bool_dflt'] \"\n$   GOSUB myread\n$   shorten_long_symbols = ans\n$ IF F$ELEMENT(0, \"-\", archname) .NES. \"VMS_VAX\"\n$ THEN\n$! IEEE math?\n$   echo \"\"\n$   echo \"Perl normally uses IEEE format (T_FLOAT) floating point numbers on\"\n$   echo \"Alpha and Itanium, but if you need G_FLOAT for binary compatibility\"\n$   echo \"with an external library or existing data, you may wish to disable\"\n$   echo \"the IEEE math option.\"\n$   bool_dflt = use_ieee_math\n$   if f$type(useieee) .nes. \"\" \n$   then\n$       if useieee .or. useieee .eqs. \"define\" \n$       then \n$         bool_dflt=\"y\"\n$       else\n$         bool_dflt=\"n\"\n$       endif\n$   endif\n$   rp = \"Use IEEE math? [''bool_dflt'] \"\n$   GOSUB myread\n$   use_ieee_math = ans\n$ ELSE\n$   use_ieee_math = \"n\"\n$ ENDIF\n$ useieee = \"undef\"\n$ usecasesensitive = \"undef\"\n$ useshortenedsymbols = \"undef\"\n$ if (use_ieee_math) then useieee = \"define\"\n$ if (be_case_sensitive) then usecasesensitive = \"define\"\n$ if (shorten_long_symbols) then useshortenedsymbols = \"define\"\n$! Unlink all versions?\n$ echo \"\"\n$ echo \"By default, Perl's unlink() provides VMS-like behavior and only\"\n$ echo \"deletes the latest version of a file.  Enabling this option builds\"\n$ echo \"Perl so that unlink() deletes all versions of a file.\"\n$ bool_dflt = unlink_all_versions\n$ if f$type(unlink_all_versions) .nes. \"\"\n$ then\n$       if unlink_all_versions .or. unlink_all_versions .eqs. \"define\"\n$       then\n$         bool_dflt=\"y\"\n$       else\n$         bool_dflt=\"n\"\n$       endif\n$ endif\n$ rp = \"Make unlink() delete all versions of a file? [''bool_dflt'] \"\n$ GOSUB myread\n$ unlink_all_versions = ans\n$ IF unlink_all_versions\n$ THEN\n$     d_unlink_all_versions = \"define\"\n$ ELSE\n$     d_unlink_all_versions = \"undef\"\n$ ENDIF\n$!\n$! CC Flags\n$ echo \"\"\n$ echo \"Your compiler may want other flags.  For this question you should include\"\n$ echo \"/INCLUDE=(whatever) and /DEFINE=(whatever), flags and any other flags\"\n$ echo \"or qualifiers used by the compiler.\"\n$ echo \"\"\n$ echo \"To use no flags, specify the word \"\"none\"\".\"\n$ dflt = user_c_flags\n$ rp = \"Any additional cc flags? [''dflt'] \"\n$ GOSUB myread\n$ IF ans .EQS. \"none\" THEN ans = \"\"\n$ user_c_flags = \"''ans'\"\n$!\n$! Ask whether they want to use secure logical translation when tainting\n$ echo \"\"\n$ echo \"As Perl starts up, it checks several logical names, such as\"\n$ echo \"PERL5LIB and PERL_ENV_TABLES, which allow you to modify aspects\"\n$ echo \"of its behavior.  For additional security, you may limit this\"\n$ echo \"process to executive- and kernel-mode translation when tainting\"\n$ echo \"is enabled.  In this case, logical names normally skipped when\"\n$ echo \"tainting is enabled (e.g. PERL5OPTS) are translated as well.\"\n$ echo \"If you do not choose to do this, the usual order of access modes\"\n$ echo \"is used for logical name translation.\"\n$ echo \"\"\n$ echo \"This restriction does not apply to the %ENV hash or to implicit\"\n$ echo \"logical name translation during parsing of file specifications;\"\n$ echo \"these always use the normal sequence of access modes for logical\"\n$ echo \"name translation.\"\n$ bool_dflt = \"y\"\n$ if f$type(usesecurelog) .nes. \"\" \n$ then\n$   if f$extract(0,1,f$edit(usesecurelog,\"collapse,upcase\")).eqs.\"N\" .or. usesecurelog .eqs. \"undef\" then bool_dflt = \"n\"\n$ endif\n$ rp = \"Use secure logical name translation? [''bool_dflt'] \"\n$ GOSUB myread\n$ d_secintgenv  = ans\n$ usesecurelog = \"undef\"\n$ if (d_secintgenv) then usesecurelog = \"define\"\n$!\n$! Ask whether they want to default filetypes\n$ echo \"\"\n$ echo \"When you pass the name of a program to Perl on the command line,\"\n$ echo \"it generally doesn't supply any defaults unless the -S command\"\n$ echo \"line switch is specified.  In keeping with the VMS tradition of\"\n$ echo \"default file types, however, you can configure Perl to try default\"\n$ echo \"file types of nothing, .pl, and .com, in that order (e.g. typing\"\n$ echo \"\"\"$ perl foo\"\" would cause Perl to look for foo., then foo.pl, and\"\n$ echo \"finally foo.com).\"\n$ echo \"\"\n$ echo \"This is currently broken in some configurations. Only enable it if\"\n$ echo \"you know what you are doing.\"\n$ bool_dflt = \"n\"\n$ if f$type(usedefaulttypes) .nes. \"\" \n$ then\n$     if usedefaulttypes .or. usedefaulttypes .eqs. \"define\" then bool_dflt=\"y\"\n$ endif\n$ rp = \"Always use default file types? [''bool_dflt'] \"\n$ GOSUB myread\n$ d_alwdeftype = ans\n$ usedefaulttypes = \"undef\"\n$ if (d_alwdeftype) then usedefaulttypes = \"define\"\n$!\n$ dflt = archname\n$ rp = \"What is your architecture name? [''archname'] \"\n$ GOSUB myread\n$ IF ans.NES.\"\"\n$ THEN\n$   ans = F$EDIT(ans,\"COLLAPSE, UPCASE\")\n$   IF (ans.NES.archname) !.AND.knowitall\n$   THEN\n$     echo4 \"I'll go with ''archname' anyway...\"\n$   ENDIF\n$ ENDIF\n$!\n$ bool_dflt = \"n\"\n$ if f$type(useversionedarchname) .nes. \"\"\n$ then\n$   if useversionedarchname .or. useversionedarchname .eqs. \"define\" then bool_dflt = \"y\"\n$ endif\n$ rp = \"Add the Perl API version to your archname? [''bool_dflt'] \"\n$ GOSUB myread\n$ IF ans\n$ THEN\n$   useversionedarchname = \"define\"\n$   IF F$LOCATE(\"-''version'\", archname) .EQ. F$LENGTH(archname)\n$   THEN\n$     archname = \"''archname'-''version'\"\n$     echo4 \"...setting architecture name to ''archname'.\"\n$   ELSE\n$     echo4 \"...and architecture name already has -''version'.\"\n$   ENDIF\n$ ELSE\n$   useversionedarchname = \"undef\"\n$ ENDIF\n$!\n$ IF usethreads .OR. usethreads .EQS. \"define\"\n$ THEN\n$   echo4 \"Threads selected.\"\n$   IF F$LOCATE(\"-thread\", archname) .EQ. F$LENGTH(archname)\n$   THEN\n$     archname = \"''archname'-thread\"\n$     echo4 \"...setting architecture name to ''archname'.\"\n$   ELSE\n$     echo4 \"...and architecture name already has -thread.\"\n$   ENDIF\n$ ENDIF\n$!\n$ IF usemultiplicity .OR. usemultiplicity .EQS. \"define\"\n$ THEN\n$   echo4 \"Multiplicity selected.\"\n$   IF F$LOCATE(\"-multi\", archname) .EQ. F$LENGTH(archname)\n$   THEN\n$     archname = \"''archname'-multi\"\n$     echo4 \"...setting architecture name to ''archname'.\"\n$   ELSE\n$     echo4 \"...and architecture name already has -multi.\"\n$   ENDIF\n$ ENDIF\n$!\n$ IF uselongdouble .OR. uselongdouble .EQS. \"define\"\n$ THEN\n$   echo4 \"Long doubles selected.\"\n$   IF F$LOCATE(\"-ld\", archname) .EQ. F$LENGTH(archname)\n$   THEN\n$     archname = \"''archname'-ld\"\n$     echo4 \"...setting architecture name to ''archname'.\"\n$   ELSE\n$     echo4 \"...and architecture name already has -ld.\"\n$   ENDIF\n$ ENDIF\n$!\n$ bool_dflt = \"n\"\n$ vms_prefix = \"perl_root\"\n$ vms_prefixup = F$EDIT(vms_prefix,\"UPCASE\")\n$ rp = \"Will you be sharing your ''vms_prefixup' with ''otherarch'? [''bool_dflt'] \"\n$ GOSUB myread\n$ IF .NOT. ans\n$ THEN\n$   sharedperl = \"N\"\n$ ELSE\n$   sharedperl = \"Y\"\n$   IF (F$ELEMENT(0, \"-\", archname).EQS.\"VMS_AXP\")\n$   THEN\n$     macros = macros + \"\"\"AXE=1\"\",\"\n$   ENDIF\n$   IF (F$ELEMENT(0, \"-\", archname).EQS.\"VMS_IA64\")\n$   THEN\n$     macros = macros + \"\"\"IXE=1\"\",\"\n$   ENDIF\n$ ENDIF\n$!\n$!: is AFS running?                       !sfn\n$!: decide how portable to be.  Allow command line overrides. !sfn\n$!: set up shell script to do ~ expansion !sfn\n$!: expand filename                       !sfn\n$!: now set up to get a file name         !sfn\n$!\n$ IF F$TYPE(prefix) .EQS. \"\"\n$ THEN\n$   prefix = F$ENVIRONMENT(\"DEFAULT\") - \".UU]\" + \"]\"\n$   prefix = F$PARSE(prefix,,,,\"NO_CONCEAL\") - \"][\" - \"000000.\" - \".000000\" - \".;\"\n$   prefixbase = prefix - \"]\"\n$!  Add _ROOT to make install PERL_ROOT differ from build directory.\n$   prefix = prefixbase + \"_ROOT.]\"\n$ ENDIF\n$ ! more redundant scrubbing of values\n$ prefix = prefix - \"000000.\"\n$ IF F$LOCATE(\".]\",prefix) .EQ. F$LENGTH(prefix) THEN prefix = prefix - \"]\" + \".]\"\n$ src = prefix - \"_ROOT.\"\n$!: determine root of directory hierarchy where package will be installed.\n$ dflt = prefix\n$ IF .NOT.silent \n$ THEN \n$   echo \"\"\n$   echo \"By default, ''package' will be installed in ''dflt', pod\"\n$   echo \"pages under ''prefixbase'.LIB.POD], etc..., i.e. with ''dflt' as prefix for\"\n$   echo \"all installation directories.\"\n$   echo \"On ''osname' the prefix is used to DEFINE the ''vms_prefixup' prior to installation\"\n$   echo \"as well as during subsequent use of ''package' via ''packageup'_SETUP.COM.\"\n$ ENDIF\n$ rp = \"Installation prefix to use (for ''vms_prefixup')? [ ''dflt' ] \"\n$ GOSUB myread\n$ IF ans.NES.\"\"\n$ THEN \n$   prefix = ans\n$   IF F$LOCATE(\".]\",ans) .EQ. F$LENGTH(ans) THEN prefix = prefix - \"]\" + \".]\"\n$ ELSE \n$   prefix = dflt\n$ ENDIF\n$ perl_root = prefix\n$!\n$! Check here for pre-existing PERL_ROOT.\n$!  -> ask if removal desired.\n$! Check here for writability of requested PERL_ROOT if it is not the default (cwd).\n$!  -> recommend letting PERL_ROOT be PERL_SRC if requested PERL_ROOT is not writable.\n$!\n$   tmp = perl_root - \".]\" + \"]\"\n$ dflt = f$parse(tmp,,,,)\n$   IF dflt .eqs. \"\"\n$   THEN\n$       echo4 \"''tmp' does not yet exist.\"\n$!      create/directory 'tmp'\n$   ELSE\n$       echo4 \"''tmp' already exists.\"\n$   ENDIF\n$!\n$ vms_skip_install = \"true\"\n$ bool_dflt = \"y\"\n$! echo \"\"\n$ rp = \"Skip the remaining \"\"\"\"where install\"\"\"\" questions? [''bool_dflt'] \"\n$ GOSUB myread\n$ IF (.NOT.ans) THEN vms_skip_install = \"false\"\n$ IF (.NOT.vms_skip_install)\n$ THEN\n$!\n$!: set the prefixit variable, to compute a suitable default value\n$!\n$!: determine where private library files go\n$!: Usual default is /usr/local/lib/perl5.  Also allow things like \n$!: /opt/perl/lib, since /opt/perl/lib/perl5 would be redundant.\n$   IF .NOT.silent \n$   THEN\n$     TYPE SYS$INPUT:\n$     DECK\n\nThere are some auxiliary files for perl5 that need to be put into a\nprivate library directory that is accessible by everyone.\n$     EOD\n$   ENDIF\n$   IF F$TYPE(privlib) .NES. \"\"\n$   THEN dflt = privlib\n$   ELSE dflt = \"''vms_prefix':[lib]\"\n$   ENDIF\n$   rp = \"Pathname where the private library files will reside? \" \n$   rp = F$FAO(\"!AS!/!AS\",rp,\"[ ''dflt' ] \")\n$   GOSUB myread\n$   privlib = ans\n$!\n$ ENDIF !%Config-I-VMS, skip remaining \"where install\" questions\n$!\n$ IF F$TYPE(perl_symbol) .EQS. \"\" THEN perl_symbol := true\n$ IF F$TYPE(perl_verb) .EQS. \"\" THEN perl_verb = \"\"\n$ IF perl_symbol\n$ THEN bool_dflt = \"y\"\n$ ELSE bool_dflt = \"n\"\n$ ENDIF\n$ IF .NOT.silent \n$ THEN \n$   echo \"\"\n$   echo \"You may choose to write ''packageup'_SETUP.COM to assign a foreign\"\n$   echo \"symbol to invoke ''package', which is the usual method.\"\n$   echO \"If you do not do so then you would need a DCL command verb at the\"\n$   echo \"process or the system wide level.\"\n$ ENDIF\n$ rp = \"Invoke perl as a global symbol foreign command? [''bool_dflt'] \"\n$ GOSUB myread\n$ IF (.NOT.ans) THEN perl_symbol = \"false\"\n$!\n$ IF (.NOT.perl_symbol)\n$ THEN\n$   IF perl_verb .EQS. \"DCLTABLES\"\n$   THEN bool_dflt = \"n\"\n$   ELSE bool_dflt = \"y\"\n$   ENDIF\n$   IF .NOT.silent \n$   THEN \n$     echo \"\"\n$     echo \"Since you won't be using a symbol you must choose to put the ''packageup'\"\n$     echo \"verb in a per-process table or in the system wide DCLTABLES (which\"\n$     echo \"would require write privilege).\"\n$   ENDIF\n$   rp = \"Invoke perl as a per process command verb? [ ''bool_dflt' ] \"\n$   GOSUB myread\n$   IF (.NOT.ans)\n$   THEN perl_verb = \"DCLTABLES\"\n$   ELSE perl_verb = \"PROCESS\"\n$   ENDIF\n$ ENDIF ! (.NOT.perl_symbol)\n$!\n$ IF (.NOT.vms_skip_install)\n$ THEN\n$!: set the prefixup variable, to restore leading tilde escape !sfn\n$!\n$!: determine where public architecture dependent libraries go\n$   IF (.NOT.silent) \n$   THEN \n$     echo \"\"\n$     echo \"''package' contains architecture-dependent library files.  If you are\"\n$   ENDIF\n$   IF (.NOT.silent) \n$   THEN\n$     TYPE SYS$INPUT:\n$     DECK\nsharing libraries in a heterogeneous environment, you might store\nthese files in a separate location.  Otherwise, you can just include\nthem with the rest of the public library files.\n$     EOD\n$   ENDIF\n$   IF F$TYPE(archlib) .NES. \"\"\n$   THEN dflt = archlib\n$   ELSE dflt = privlib - \"]\" + \".\" + archname + \".\" + version + \"]\"\n$   ENDIF\n$   rp = \"Where do you want to put the public architecture-dependent libraries? \"\n$   rp = F$FAO(\"!AS!/!AS\",rp,\"[ ''dflt' ] \")\n$   GOSUB myread\n$   archlib = ans\n$!\n$ ENDIF !%Config-I-VMS, skip \"where install\" questions\n$ IF (.NOT.vms_skip_install)\n$ THEN\n$!: it so happens the Eunice I know will not run shell scripts in Unix format\n$!\n$!: see if setuid scripts can be secure           !sfn\n$!: now see if they want to do setuid emulation   !sfn\n$!\n$!: determine where site specific libraries go.\n$   IF .NOT.silent \n$   THEN\n$     TYPE SYS$INPUT:\n$     DECK\n\nThe installation process will also create a directory for\nsite-specific extensions and modules.  Some users find it convenient\nto place all local files in this directory rather than in the main\ndistribution directory.\n$     EOD\n$   ENDIF\n$   IF F$TYPE(sitelib) .NES. \"\"\n$   THEN dflt = sitelib\n$   ELSE dflt = privlib - \"]\" + \".SITE_PERL]\"\n$   ENDIF\n$   rp = \"Pathname for the site-specific library files? \"\n$   rp = F$FAO(\"!AS!/!AS\",rp,\"[ ''dflt' ] \")\n$   GOSUB myread\n$   sitelib = ans\n$!\n$!: determine where site specific architecture-dependent libraries go.\n$   IF .NOT.silent \n$   THEN TYPE SYS$INPUT:\n$     DECK\n\nThe installation process will also create a directory for\narchitecture-dependent site-specific extensions and modules.\n$     EOD\n$   ENDIF\n$   IF F$TYPE(sitearch) .NES. \"\"\n$   THEN dflt = sitearch\n$   ELSE dflt = sitelib - \"]\" + \".\" + archname + \"]\"\n$   ENDIF\n$   rp = \"Pathname for the site-specific architecture-dependent library files? \"\n$   rp = F$FAO(\"!AS!/!AS\",rp,\"[ ''dflt' ] \")\n$   GOSUB myread\n$   sitearch = ans\n$!\n$!: determine where old public architecture dependent libraries might be\n$!\n$!: determine where public executables go\n$   IF F$TYPE(bin) .NES. \"\"\n$   THEN dflt = bin\n$!   ELSE dflt = prefix - \".]\" + \".BIN]\"\n$   ELSE dflt = \"/''vms_prefix'\"\n$   ENDIF\n$   rp = \"Pathname where the public executables will reside? \"\n$   rp = F$FAO(\"!AS!/!AS\",rp,\"[ ''dflt' ] \")\n$   GOSUB myread\n$   bin = ans\n$!\n$!: determine where add-on public executables go\n$   IF F$TYPE(sitebin) .NES. \"\"\n$   THEN dflt = sitebin\n$   ELSE dflt = \"''vms_prefix':[bin.''archname']\"\n$   ENDIF\n$   rp = \"Pathname where the add-on public executables should be installed? \"\n$   rp = F$FAO(\"!AS!/!AS\",rp,\"[ ''dflt' ] \")\n$   GOSUB myread\n$   sitebin = ans\n$!\n$!: determine where manual pages are on this system\n$!: What suffix to use on installed man pages\n$!: see if we can have long filenames\n$!: determine where library module manual pages go\n$!: What suffix to use on installed man pages\n$!: see what memory models we can support\n$!\n$ ELSE ! skipping \"where install\" questions, we must set some symbols\n$   IF F$TYPE(archlib).EQS.\"\" THEN -\n      archlib=\"''vms_prefix':[lib.''archname'.''version']\"\n$   IF F$TYPE(bin) .EQS. \"\" THEN -\n      bin=\"/''vms_prefix'\"\n$   IF F$TYPE(privlib) .EQS. \"\" THEN -\n      privlib =\"''vms_prefix':[lib]\"\n$   IF F$TYPE(sitearch) .EQS. \"\" THEN -\n      sitearch=\"''vms_prefix':[lib.site_perl.''archname']\"\n$   IF F$TYPE(sitelib) .EQS. \"\" THEN -\n      sitelib =\"''vms_prefix':[lib.site_perl]\"\n$   IF F$TYPE(sitebin) .EQS. \"\" THEN -\n      sitebin=\"''vms_prefix':[bin.''archname']\"\n$ ENDIF !%Config-I-VMS, skip \"where install\" questions\n$!\n$! These derived locations can be set whether we've opted to\n$! skip the where install questions or not.\n$!\n$ IF F$TYPE(archlibexp) .EQS. \"\" THEN -\n    archlibexp=\"''vms_prefix':[lib.''archname'.''version']\"\n$ IF F$TYPE(binexp) .EQS. \"\" THEN -\n    binexp =\"''vms_prefix':[000000]\"\n$ IF F$TYPE(builddir) .EQS. \"\" THEN -\n    builddir =\"''vms_prefix':[000000]\"\n$ IF F$TYPE(installarchlib) .EQS. \"\" THEN -\n    installarchlib=\"''vms_prefix':[lib.''archname'.''version']\"\n$ IF F$TYPE(installbin) .EQS. \"\" THEN -\n    installbin =\"''vms_prefix':[000000]\"\n$ IF F$TYPE(installscript) .EQS. \"\" THEN -\n    installscript =\"''vms_prefix':[utils]\"\n$ IF F$TYPE(installman1dir) .EQS. \"\" THEN -\n    installman1dir =\"''vms_prefix':[man.man1]\"\n$ IF F$TYPE(installman3dir) .EQS. \"\" THEN -\n    installman3dir =\"''vms_prefix':[man.man3]\"\n$ IF F$TYPE(installprivlib) .EQS. \"\" THEN -\n    installprivlib =\"''vms_prefix':[lib]\"\n$ IF F$TYPE(installsitearch) .EQS. \"\" THEN -\n    installsitearch=\"''vms_prefix':[lib.site_perl.''archname']\"\n$ IF F$TYPE(installsitelib) .EQS. \"\" THEN -\n    installsitelib =\"''vms_prefix':[lib.site_perl]\"\n$ IF F$TYPE(oldarchlib) .EQS. \"\" THEN -\n    oldarchlib=\"''vms_prefix':[lib.''archname']\"\n$ IF F$TYPE(oldarchlibexp) .EQS. \"\" THEN -\n    oldarchlibexp=\"''vms_prefix':[lib.''archname']\"\n$ IF F$TYPE(privlibexp) .EQS. \"\" THEN -\n    privlibexp =\"''vms_prefix':[lib]\"\n$ IF F$TYPE(scriptdir) .EQS. \"\" THEN -\n    scriptdir =\"''vms_prefix':[utils]\"\n$ IF F$TYPE(sitearchexp) .EQS. \"\" THEN -\n    sitearchexp =\"''vms_prefix':[lib.site_perl.''archname']\"\n$ IF F$TYPE(sitelib_stem) .EQS. \"\" THEN -\n    sitelib_stem =\"''vms_prefix':[lib.site_perl]\"\n$ IF F$TYPE(sitelibexp) .EQS. \"\" THEN -\n    sitelibexp =\"''vms_prefix':[lib.site_perl]\"\n$!\n$! determine whether to use malloc wrapping\n$ echo \"\"\n$ bool_dflt = \"y\"\n$ IF F$TYPE(usemallocwrap) .nes. \"\"\n$ then\n$   if .NOT. usemallocwrap .or. usemallocwrap .eqs. \"undef\" then bool_dflt = \"n\"\n$ endif\n$ rp = \"Do you wish to wrap malloc calls to protect against potential overflows? [''bool_dflt'] \"\n$ GOSUB myread\n$ IF ans\n$ THEN usemallocwrap = \"define\"\n$ ELSE usemallocwrap = \"undef\"\n$ ENDIF\n$!\n$! Ask if they want to use perl's memory allocator\n$ echo \"\"\n$ echo \"Perl has a built-in memory allocator that is tuned for normal\"\n$ echo \"memory usage.  It is oftentimes better than the standard system\"\n$ echo \"memory allocator.  It also has the advantage of providing memory\"\n$ echo \"allocation statistics, if you choose to enable them.\"\n$ bool_dflt = \"n\"\n$ IF F$TYPE(usemymalloc) .nes. \"\"\n$ then\n$   if usemymalloc .or. usemymalloc .eqs. \"define\" then bool_dflt = \"y\"\n$ endif\n$ rp = \"Do you wish to attempt to use the malloc that comes with ''package'? [''bool_dflt'] \"\n$ GOSUB myread\n$ mymalloc = ans\n$ IF mymalloc\n$ THEN\n$   IF use_debugging_perl\n$   THEN\n$     echo \"\"\n$     echo \"Perl can keep statistics on memory usage if you choose to use\"\n$     echo \"them.  This is useful for debugging, but does have some\"\n$     echo \"performance overhead.\"\n$     bool_dflt = \"n\"\n$     rp = \"Do you want the debugging memory allocator? [''bool_dflt'] \"\n$     gosub myread\n$     use_debugmalloc = ans\n$   ENDIF\n$   ! Check which memory allocator we want\n$   echo \"\"\n$   echo \"There are currently three different memory allocators: the\"\n$   echo \"default (which is a pretty good general-purpose memory manager),\"\n$   echo \"the TWO_POT allocator (which is optimized to save memory for\"\n$   echo \"larger allocations), and PACK_MALLOC (which is optimized to save\"\n$   echo \"memory for smaller allocations). They're all good, but if your\"\n$   echo \"usage tends towards larger chunks use TWO_POT, otherwise use\"\n$   echo \"PACK_MALLOC.\"\n$   dflt = \"DEFAULT\"\n$   rp = \"Memory allocator (DEFAULT, TWO_POT, PACK_MALLOC) [''dflt'] \"\n$   GOSUB myread\n$   if ans.eqs.\"TWO_POT\" then use_two_pot_malloc = \"Y\"\n$   if ans.eqs.\"PACK_MALLOC\" then use_pack_malloc = \"Y\"\n$ ENDIF\n$!\n$ xs_extensions = \"\"\n$ xxx = \"\"\n$ OPEN/READ CONFIG 'manifestfound'\n$ext_loop:\n$   READ/END_OF_FILE=end_ext/ERROR=end_ext CONFIG line\n$   IF F$EXTRACT(0,4,line) .NES. \"ext/\" .AND. -\n       F$EXTRACT(0,5,line) .NES. \"dist/\".AND. -\n       F$EXTRACT(0,5,line) .NES. \"cpan/\" THEN goto ext_loop\n$   line = F$EDIT(line,\"COMPRESS\")\n$   line = F$ELEMENT(0,\" \",line)\n$   IF F$EXTRACT(0,4,line) .EQS. \"ext/\"\n$   THEN\n$     xxx = F$ELEMENT(1,\"/\",line)\n$     IF F$SEARCH(\"[-.ext]''xxx'.DIR;1\") .EQS. \"\" THEN GOTO ext_loop\n$   ENDIF\n$   IF F$EXTRACT(0,5,line) .EQS. \"dist/\"\n$   THEN\n$     xxx = F$ELEMENT(1,\"/\",line)\n$     IF F$SEARCH(\"[-.dist]''xxx'.DIR;1\") .EQS. \"\" THEN GOTO ext_loop\n$   ENDIF\n$   IF F$EXTRACT(0,5,line) .EQS. \"cpan/\"\n$   THEN\n$     xxx = F$ELEMENT(1,\"/\",line)\n$     IF F$SEARCH(\"[-.cpan]''xxx'.DIR;1\") .EQS. \"\" THEN GOTO ext_loop\n$   ENDIF\n$   IF xxx .EQS. \"DynaLoader\" THEN goto ext_loop     ! omit\n$!\n$! (extspec = xxx) =~ tr!-!/!\n$ extspec = \"\"\n$ idx = 0\n$ extension_dir_name = xxx\n$ replace_dash_with_slash:\n$   before = F$ELEMENT(idx, \"-\", xxx)\n$   IF before .EQS. \"-\" THEN goto end_replace_dash_with_slash\n$   IF extspec .NES. \"\" \n$   THEN\n$\textspec = extspec + \"/\"\n$   ENDIF\n$   extspec = extspec + before\n$   idx = idx + 1\n$   goto replace_dash_with_slash\n$\n$ end_replace_dash_with_slash:\n$!\n$ IF extspec .EQS. \"Scalar/List/Utils\" THEN extspec = \"List/Util\"\n$ IF extspec .EQS. \"PathTools\" THEN extspec = \"Cwd\"\n$!\n$ xxx = xs_extensions\n$ gosub may_already_have_extension\n$ IF $STATUS .EQ. 1\n$ THEN\n$     xxx = nonxs_ext\n$     gosub may_already_have_extension\n$ ENDIF\n$ IF $STATUS .EQ. 1\n$ THEN\n$     xxx = nonxs_ext2\n$     gosub may_already_have_extension\n$ ENDIF\n$ IF $STATUS .NE. 1 THEN goto ext_loop\n$ goto found_new_extension\n$!\n$ may_already_have_extension:\n$   idx = F$LOCATE(extspec, xxx)\n$   extlen = F$LENGTH(xxx) \n$   IF idx .EQ. extlen THEN return 1\t! didn't find it\n$!  But \"Flirble\" may just be part of \"Acme-Flirble\".  This is not\n$!  bullet-proof because we may only be looking at one chunk of the\n$!  existing extension list.\n$   IF idx .GT. 0 .AND. F$EXTRACT(idx - 1, 1, xxx) .NES. \" \"\n$   THEN\n$\txxx = F$EXTRACT(idx + F$LENGTH(extspec) + 1, extlen, xxx)\n$\tGOTO may_already_have_extension\n$   ENDIF\n$!  But \"Foo\" may just be part of \"Foo-Bar\" so check for equality.\n$   xxx = F$EXTRACT(idx, extlen - idx, xxx)\n$   IF F$ELEMENT(0, \" \", xxx) .EQS. extspec\n$   THEN \n$\tRETURN 3\n$   ELSE \n$\txxx = F$EXTRACT(F$LENGTH(extspec) + 1, extlen, xxx)\n\tGOTO may_already_have_extension\n$   ENDIF\n$!\n$ found_new_extension:\n$   IF F$SEARCH(\"[-.ext.''extension_dir_name']*.xs\") .EQS. \"\" -\n        .AND. F$SEARCH(\"[-.dist.''extension_dir_name']*.xs\") .EQS. \"\" -\n        .AND. F$SEARCH(\"[-.cpan.''extension_dir_name']*.xs\") .EQS. \"\" -\n        .AND. extension_dir_name .NES. \"VMS-Filespec\"\n$   THEN\n$!  Bit if a hack to get around the 1K buffer on older systems.\n$       IF F$LENGTH(nonxs_ext) .GT. 950\n$       THEN\n$           nonxs_ext2 = nonxs_ext2 + \" ''extspec'\"\n$       ELSE\n$           nonxs_ext = nonxs_ext + \" ''extspec'\"\n$       ENDIF\n$   ELSE\n$       xs_extensions = xs_extensions + \" ''extspec'\"\n$   ENDIF\n$   goto ext_loop\n$end_ext:\n$ close CONFIG\n$ DELETE/SYMBOL xxx\n$ DELETE/SYMBOL idx\n$ DELETE/SYMBOL extspec\n$ DELETE/SYMBOL extlen\n$ DELETE/SYMBOL extension_dir_name\n$ xs_extensions = F$EDIT(xs_extensions,\"TRIM,COMPRESS\")\n$ dflt = xs_extensions\n$ dflt = dflt - \"ByteLoader\"          ! needs to be ported\n$ dflt = dflt - \"DB_File\"             ! needs to be ported\n$ dflt = dflt - \"GDBM_File\"           ! needs porting/special library\n$ dflt = dflt - \"IPC/SysV\"            ! needs to be ported\n$ dflt = dflt - \"NDBM_File\"           ! needs porting/special library\n$ dflt = dflt - \"ODBM_File\"           ! needs porting/special library\n$ dflt = dflt - \"Sys/Syslog\"          ! needs porting/special library \"GDBM_File macro LOG_DEBUG\"\n$ IF .NOT. Has_Dec_C_Sockets\n$ THEN\n$   dflt = dflt - \"Socket\"            ! optional on VMS\n$ ENDIF\n$ dflt = dflt - \"Win32API/File\" - \"Win32\"  ! need Dave Cutler's other project\n$ nonxs_ext = nonxs_ext - \"Win32CORE\"\n$ nonxs_ext2 = nonxs_ext2 - \"Win32CORE\"\n$ dflt = F$EDIT(dflt,\"TRIM,COMPRESS\")\n$ nonxs_ext = F$EDIT(nonxs_ext,\"TRIM,COMPRESS\")\n$ nonxs_ext2 = F$EDIT(nonxs_ext2,\"TRIM,COMPRESS\")\n$!\n$! Ask for their default list of extensions to build\n$ echo \"\"\n$ echo \"It is time to specify which modules you want to build into\"\n$ echo \"perl. Most of these are standard and should be chosen, though\"\n$ echo \"you might, for example, want to build GDBM_File instead of\"\n$ echo \"SDBM_File if you have the GDBM library built on your machine.\"\n$ echo \"\"\n$ echo \"Which modules do you want to build into perl?\"\n$ rp = \"[''dflt'] \"\n$ GOSUB myread\n$ dynamic_ext = F$EDIT(ans,\"TRIM,COMPRESS\")\n$!\n$! %Config-I-VMS, determine build/make utility here (make gmake mmk mms)\n$ echo \"\"\n$ echo \"Checking your \"\"make\"\" utilities...\"\n$! If the 'build' that you use is not here add it and it's test\n$! switch to the _END_ of these strings (and increment max_build)\n$! (e.g. builders = builders + \"/FOOMAKE\" \n$!       probers  = probers + \" -fooVersionSwitch\"\n$! ) & please let me know about it.\n$ builders = \"IMAKE/GNUMAKE/MGMAKE/GMAKE/MAKE/MMS/MMK\"\n$ probers  = \"-f Makefile. -v!-f Makefile. -v!-f Makefile. -v!-f Makefile. -v!-f Makefile. -v!/IDENT!/IDENT\"\n$ max_build = 7\n$!\n$ orig_dflt = f$edit(builder,\"UPCASE\")\n$ if orig_dflt .eqs. \"\" then orig_dflt = \"MMK\"\n$ default_set = \"\"\n$ ok_builders = \"\"\n$ OPEN/WRITE/ERROR=Open_error CONFIG Makefile.\n$ WRITE CONFIG \"dont_make_anything_yet:\"\n$ WRITE CONFIG F$FAO(\"!_\")\n$ CLOSE CONFIG\n$ n = 0\n$ messages = F$ENVIRONMENT(\"MESSAGE\")\n$Build_probe:\n$ build = F$ELEMENT(n,\"/\",builders)\n$ probe  = F$ELEMENT(n,\"!\",probers)\n$ echo \"Testing whether you have ''build' on your system...\"\n$!\n$! Noted with GNU Make version 3.60  that the $status and $severity\n$! with the 'probe' Makefile appear to be: $STATUS == \"%X1000000C\"\n$! $SEVERITY == \"4\".\n$!\n$ SET NOON\n$ ON CONTROL_Y THEN GOTO Reenable_messages_build\n$ SET MESSAGE/NOFAC/NOSEV/NOIDENT/NOTEXT\n$ 'build' 'probe'\n$ IF ($SEVERITY .EQ. 1) ! not adequate?\n$ THEN \n$   echo \"OK.\"\n$   IF (build .EQS. orig_dflt) \n$   THEN \n$     default_set = \"TRUE\"\n$     dflt = build\n$   ENDIF\n$   ok_builders = ok_builders + \" \" + build\n$   IF (.NOT. default_set) THEN dflt = build\n$ ELSE \n$   echo \"Nope.\"\n$ ENDIF\n$Reenable_messages_build:\n$ SET MESSAGE 'messages'\n$ SET ON\n$ on control_y then goto clean_up\n$ n = n + 1\n$ IF (n .LT. max_build) THEN GOTO Build_probe\n$!\n$ echo \"\"\n$ IF (ok_builders .NES. \"\") \n$ THEN\n$   echo \"Here is the list of builders you can apparently use:\"\n$   echo \"(\",ok_builders,\" )\"\n$   rp = \"Which \"\"\"\"make\"\"\"\" utility do you wish to use? [''dflt'] \"\n$   GOSUB myread\n$   ans = F$EDIT(ans,\"TRIM, COMPRESS\")\n$   ans = F$EXTRACT(0,F$LOCATE(\" \",ans),ans) !throw out \"-f Makefile.\" here\n$   IF (ans .EQS. \"\") \n$   THEN build = dflt\n$   ELSE build = ans\n$   ENDIF\n$ ELSE\n$   TYPE SYS$INPUT:\n$   DECK\n\n%Config-E-VMS, ERROR:\n Well this looks pretty serious. Perl5 cannot be compiled without a \"make\"\n utility of some sort and after checking my \"builders\" list I cannot find\n the symbol or command you use on your system to compile programs.\n\n$   EOD\n$   READ SYS$COMMAND/PROMPT=\"Which \"\"MMS\"\" do you use? \" ans\n$   ans = F$EDIT(ans,\"TRIM, COMPRESS\")\n$   ans = F$EXTRACT(0,F$LOCATE(\" \",ans),ans) !throw out \"-f Makefile.\" here\n$   IF (ans .EQS. \"\") \n$   THEN build = dflt\n$     echo \"I do not know where \"\"make\"\" is, and my life depends on it.\"\n$     echo \"Go find a make program or fix your DCL$PATH setting!\"\n$     echo \"ABORTING...\"\n$     SET DEFAULT 'vms_default_directory_name' !be kind rewind\n$     STOP\n$     EXIT 2 !$STATUS = \"%X00000002\" (error)\n$   ELSE \n$     build = ans\n$   ENDIF\n$ ENDIF\n$!\n$ DELETE/NOLOG/NOCONFIRM Makefile.;\n$ GOTO Beyond_open\n$Open_error:\n$ TYPE SYS$INPUT:\n$ DECK\n\n There seems to be trouble. I just tried to create a file in\n$ EOD\n$ echo4 'F$ENVIRONMENT(\"DEFAULT\")'\n$ TYPE SYS$INPUT:\n$ DECK\n but was unsuccessful. I am stopping now. Please check that directories'\n PROTECTION bits. I will leave you in the directory where you started\n Configure.com\n$ EOD\n$ echo4 \"ABORTING...\"\n$ GOTO Clean_up\n$ STOP\n$ EXIT\n$!\n$Beyond_open:\n$! echo \" Very well I will proceed with \"\"''build'\"\"\"\n$ make = F$EDIT(build,\"UPCASE\")\n$!\n$!: locate the preferred pager for this system\n$!pagers = \"most|more|less|type/page\"\n$ IF osvers .GES. \"V6.1\"\n$ THEN\n$   dflt = \"type/page=save=10\"\n$ ELSE\n$   dflt = \"type/page\"\n$ ENDIF\n$! assume that the presence of a most symbol indicates the presence\n$! of the pager.\n$ IF F$TYPE(most) .EQS. \"STRING\" THEN dflt = \"most\"\n$ IF F$TYPE(pager) .EQS. \"STRING\" THEN dflt = pager\n$ rp=\"What pager is used on your system? [''dflt'] \"\n$ GOSUB myread\n$ pager = ans\n$!\n$! update makefile here\n$! echo4 \"Updating makefile...\"\n$!\n$ IF (make .EQS. \"MMS\").OR.(make .EQS. \"MMK\")\n$ THEN \n$   makefile    = \"\" \t\t   !wrt MANIFEST dir\n$   UUmakefile  = \"[-]DESCRIP.MMS\" !wrt CWD dir\n$   DEFmakefile = \"DESCRIP.MMS\"    !wrt DEF dir (?)\n$   Makefile_SH = \"descrip_mms.template\"\n$ ELSE\n$   makefile    = \" -f Makefile.\"  !wrt MANIFEST dir\n$   UUmakefile  = \"[-]Makefile.\"   !wrt CWD dir\n$   DEFmakefile = \"Makefile.\"      !wrt DEF dir (?)\n$   Makefile_SH = \"Makefile.in\"\n$ ENDIF\n$!\n$ IF macros .NES. \"\" \n$ THEN\n$   tmp = F$LENGTH(macros)\n$   macros = F$EXTRACT(0,(tmp-1),macros) !miss trailing comma\n$   macros = \"/macro=(\" + macros  + \")\"\n$ ENDIF\n$! Build up the extra C flags\n$!\n$ IF use_ieee_math\n$ THEN\n$   extra_flags = \"''extra_flags'\" + \"/float=ieee/ieee=denorm\"\n$ ELSE\n$   IF (F$ELEMENT(0, \"-\", archname).EQS.\"VMS_IA64\")\n$   THEN\n$     extra_flags = \"''extra_flags'\" + \"/float=g_float\"\n$   ENDIF\n$ ENDIF\n$ names_flags = \"\"\n$ IF be_case_sensitive\n$ THEN\n$   names_flags = \"AS_IS\"\n$ ENDIF\n$ IF shorten_long_symbols\n$ THEN\n$   IF be_case_sensitive\n$   THEN\n$     names_flags = \"''names_flags',SHORTENED\"\n$   ELSE\n$     names_flags = \"SHORTENED\"\n$   ENDIF\n$ ENDIF\n$ IF F$LENGTH(names_flags) .ne. 0\n$ THEN\n$   extra_flags = \"''extra_flags'\" + \"/NAMES=(''names_flags')\"\n$ ENDIF\n$ DELETE/SYMBOLS names_flags\n$ extra_flags = \"''extra_flags'\" + \"''user_c_flags'\"\n$!\n$ min_pgflquota = \"100000\"\n$ pgflquota = F$STRING(F$GETJPI(\"\",\"PGFLQUOTA\"))\n$ IF pgflquota .LES. min_pgflquota\n$ THEN\n$   echo4 \"Your PGFLQUOTA of ''pgflquota' appears too small to build ''package'.\"\n$   READ SYS$COMMAND/PROMPT=\"Continue? [n] \" ans\n$   IF ans\n$   THEN\n$     echo4 \"Continuing...\"\n$   ELSE\n$     echo4 \"ABORTING...\"\n$     GOTO Clean_up\n$   ENDIF\n$ ENDIF\n$!\n$ echo \"\"\n$ echo4 \"Checking the C run-time library.\"\n$!\n$! Former SUBCONFIGURE.COM\n$!\n$!  - build a config.sh for VMS Perl.\n$!  - use built config.sh to take config_h.SH -> config.h\n$!  - also take vms/descrip_mms.template -> descrip.mms (VMS Makefile)\n$!              vms/Makefile.in -> Makefile. (VMS GNU Makefile?)\n$!              vms/Makefile.SH -> Makefile. (VMS GNU Makefile?)\n$!\n$! Note for folks from other platforms changing things in here:\n$!\n$!   Fancy changes (based on compiler capabilities or VMS version or\n$!   whatever) are tricky, so go ahead and punt on those.\n$!\n$!   Simple changes, though (say, always setting something to 1, or undef,\n$!   or something like that) are straightforward.  Adding a new constant \n$!   item for the ultimately created config.sh requires at least one \n$!   (possibly more) line(s) to this file.\n$!\n$!   Add a line in the format:\n$!\n$!     $ WC \"foo='undef'\"\n$!\n$!   somewhere between the line tagged '##BEGIN WRITE NEW CONSTANTS HERE##'\n$!   and the one tagged '##END WRITE NEW CONSTANTS HERE##' (note the order\n$!   is sorted ASCII and corresponds to the output of config.sh in the \n$!   Bourne shell version of Configure).\n$!   Be very careful with quoting, as it can be tricky.\n$!   For example if instead of a constant string like 'undef' or 'define' \n$!   you wanted to add something to VMS's config.sh that looks like:\n$!\n$!     blank_string=''\n$!\n$!   then add a line that looks like this before the \n$!   '##END WRITE NEW CONSTANTS HERE##' tagged line:\n$!\n$!     $ WC \"blank_string='\" + \"'\"\n$!\n$!   (+ is the string concatenator and \"''var'\" has the effect \n$!    of \"${var}\" in perl or sh, but \"'const'\" is not interpolated).\n$!\n$!   Note that unitialized variables, such as a line like:\n$!\n$!     $ WC \"new_var='\" + new_var + \"'\"\n$!\n$!   should be avoided unless new_var has a value assigned prior \n$!   to that line (think of perl's -w warnings).\n$!\n$!     %DCL-W-UNDSYM, undefined symbol - check validity and spelling\n$!     \\NEW_VAR\\\n$!\n$!\n$ vms_ver = F$EXTRACT(1,3, osvers)\n$ IF F$LENGTH(Mcc) .EQ. 0 THEN Mcc := \"cc\"\n$ MCC = f$edit(mcc, \"UPCASE\")\n$ C_Compiler_Replace := \"CC=CC=''Mcc'''ccflags'\"\n$ IF ccname .EQS. \"DEC\"\n$ THEN\n$   Checkcc := \"''Mcc'/prefix=all\"\n$ ELSE\n$   IF ccname .EQS. \"CXX\"\n$   THEN\n$     Checkcc := cxx\n$   ELSE\n$     Checkcc := \"''Mcc'\"\n$   ENDIF\n$ ENDIF\n$ ccflags = ccflags + extra_flags\n$ IF be_case_sensitive\n$ THEN\n$   d_vms_be_case_sensitive = \"define\"\n$ ELSE\n$   d_vms_be_case_sensitive = \"undef\"\n$ ENDIF\n$ IF shorten_long_symbols\n$ THEN\n$   d_vms_shorten_long_symbols = \"define\"\n$ ELSE\n$   d_vms_shorten_long_symbols = \"undef\"\n$ ENDIF\n$! Some constant defaults.\n$ hwname = f$getsyi(\"HW_NAME\")\n$ myname = myhostname\n$ IF myname .EQS. \"\" THEN myname = F$TRNLNM(\"SYS$NODE\")\n$!\n$ ccdlflags=\"\"\n$ cccdlflags=\"\"\n$!\n$! FIXME -- This section does not really handle all the different permutations \n$! of 64-bitness, and it does not provide for the /POINTER_SIZE=64 compiler\n$! option that would be necessary to support the \"explicit 64-bit interfaces\"\n$! promised by -Dusemorebits.\n$!\n$ usemorebits = \"undef\"\n$ IF use64bitint .OR. use64bitint .EQS. \"define\"\n$ THEN\n$   use64bitint = \"define\"\n$   ivdformat=\"\"\"Ld\"\"\"\n$   uvuformat=\"\"\"Lu\"\"\"\n$   uvoformat=\"\"\"Lo\"\"\"\n$   uvxformat=\"\"\"Lx\"\"\"\n$   uvXUformat=\"\"\"LX\"\"\"\n$ ELSE\n$   use64bitint = \"undef\"\n$   ivdformat=\"\"\"ld\"\"\"\n$   uvuformat=\"\"\"lu\"\"\"\n$   uvoformat=\"\"\"lo\"\"\"\n$   uvxformat=\"\"\"lx\"\"\"\n$   uvXUformat=\"\"\"lX\"\"\"\n$ ENDIF\n$ IF uselongdouble .OR. uselongdouble .EQS. \"define\"\n$ THEN\n$   uselongdouble = \"define\"\n$   alignbytes=\"16\"\n$   nveformat=\"\"\"Le\"\"\"\n$   nvEUformat=\"\"\"LE\"\"\"\n$   nvfformat=\"\"\"Lf\"\"\"\n$   nvFUformat=\"\"\"LF\"\"\"\n$   nvgformat=\"\"\"Lg\"\"\"\n$   nvGUformat=\"\"\"LG\"\"\"\n$ ELSE\n$   uselongdouble = \"undef\"\n$   nveformat=\"\"\"e\"\"\"\n$   nvEUformat=\"\"\"E\"\"\"\n$   nvfformat=\"\"\"f\"\"\"\n$   nvFUformat=\"\"\"F\"\"\"\n$   nvgformat=\"\"\"g\"\"\"\n$   nvGUformat=\"\"\"G\"\"\"\n$ ENDIF\n$ IF use64bitall .OR. use64bitall .EQS. \"define\"\n$ THEN\n$   use64bitall = \"define\"\n$ ELSE\n$   use64bitall = \"undef\"\n$ ENDIF\n$ IF uselargefiles .OR. uselargefiles .EQS. \"define\"\n$ THEN\n$   uselargefiles = \"define\"\n$ ELSE\n$   uselargefiles = \"undef\"\n$ ENDIF\n$!\n$ usemymalloc = \"undef\"\n$ if mymalloc then usemymalloc = \"define\"\n$!\n$ perl_cc=Mcc\n$!\n$ IF (sharedperl .AND. F$ELEMENT(0, \"-\", archname) .EQS. \"VMS_AXP\")\n$ THEN\n$   obj_ext=\".abj\"\n$   so=\"axe\"\n$   dlext=\"axe\"\n$   exe_ext=\".axe\"\n$   lib_ext=\".alb\"\n$ ELSE\n$   IF (sharedperl .AND. F$ELEMENT(0, \"-\", archname) .EQS. \"VMS_IA64\")\n$   THEN\n$     obj_ext=\".ibj\"\n$     so=\"ixe\"\n$     dlext=\"ixe\"\n$     exe_ext=\".ixe\"\n$     lib_ext=\".ilb\"\n$   ELSE\n$     obj_ext=\".obj\"\n$     so=\"exe\"\n$     dlext=\"exe\"\n$     exe_ext=\".exe\"\n$     lib_ext=\".olb\"\n$   ENDIF\n$ ENDIF\n$ dlobj=\"dl_vms''obj_ext'\"\n$!\n$ cppstdin=\"''perl_cc'/noobj/comments=as_is/preprocess=sys$output sys$input\"\n$ cppminus=\" \"\n$ cpprun=\"''perl_cc'/noobj/comments=as_is/preprocess=sys$output sys$input\"\n$ cpplast=\" \"\n$!\n$ timetype=\"time_t\"\n$ signal_t=\"void\"\n$ stdchar=\"char\"\n$!\n$ IF mymalloc\n$ THEN d_mymalloc=\"define\"\n$ ELSE d_mymalloc=\"undef\"\n$ ENDIF\n$!\n$ usedl=\"define\"\n$ startperl=\"\"\"$ perl 'f$env(\\\"\"procedure\\\"\")' \\\"\"'\"+\"'p1'\\\"\" \\\"\"'\"+\"'p2'\\\"\" \\\"\"'\"+\"'p3'\\\"\" \\\"\"'\"+\"'p4'\\\"\" \\\"\"'\"+\"'p5'\\\"\" \\\"\"'\"+\"'p6'\\\"\" \\\"\"'\"+\"'p7'\\\"\" \\\"\"'\"+\"'p8'\\\"\"!\\n\"\n$ startperl=startperl + \"$ exit++ + ++$status!=0 and $exit=$status=undef; while($#ARGV != -1 and $ARGV[$#ARGV] eq '\"+\"'){pop @ARGV;}\"\"\"\n$!\n$ libs=\" \"\n$ libc=\"(DECCRTL)\"\n$!\n$! perllibs should be libs with all non-core libs (such as gdbm) removed.\n$!\n$ perllibs=libs\n$!\n$!\n$ IF F$ELEMENT(0, \"-\", archname) .NES. \"VMS_VAX\"\n$ THEN\n$   d_PRId64 = \"define\"\n$   d_PRIi64 = \"define\"\n$   d_PRIu64 = \"define\"\n$   d_PRIo64 = \"define\"\n$   d_PRIx64 = \"define\"\n$   d_PRIXU64 = \"define\"\n$   sPRId64 = \"\"\"Ld\"\"\"\n$   sPRIXU64 = \"\"\"LX\"\"\"\n$   sPRIi64 = \"\"\"Li\"\"\"\n$   sPRIo64 = \"\"\"Lo\"\"\"\n$   sPRIu64 = \"\"\"Lu\"\"\"\n$   sPRIx64 = \"\"\"Lx\"\"\"\n$   d_quad = \"define\"\n$   quadtype = \"long long\"\n$   uquadtype = \"unsigned long long\"\n$   quadkind  = \"3\"\n$!\n$   d_frexpl = \"define\"\n$   d_ldexpl = \"define\"\n$   d_modfl = \"define\"\n$   d_modflproto = \"define\"\n$ ELSE\n$   d_PRId64 = \"undef\"\n$   d_PRIi64 = \"undef\"\n$   d_PRIXU64 = \"undef\"\n$   d_PRIu64 = \"undef\"\n$   d_PRIo64 = \"undef\"\n$   d_PRIx64 = \"undef\"\n$   sPRId64 = \"\"\n$   sPRIXU64 = \"\"\"lX\"\"\"\n$   sPRIi64 = \"\"\n$   sPRIo64 = \"\"\n$   sPRIu64 = \"\"\n$   sPRIx64 = \"\"\n$   d_quad = \"undef\"\n$   quadtype = \"undef\"\n$   uquadtype = \"undef\"\n$   quadkind  = \"undef\"\n$!\n$   d_frexpl = \"undef\"\n$   d_ldexpl = \"undef\"\n$   d_modfl = \"undef\"\n$   d_modflproto = \"undef\"\n$ ENDIF\n$!\n$ IF useieee .OR. useieee .EQS. \"define\"\n$ THEN\n$   d_acosh = \"define\"\n$   d_asinh = \"define\"\n$   d_atanh = \"define\"\n$   d_cbrt = \"define\"\n$   d_copysign = \"define\"\n$   d_erf = \"define\"\n$   d_erfc = \"define\"\n$   d_exp2 = \"define\"\n$   d_expm1 = \"define\"\n$   d_fdim = \"define\"\n$   d_fma = \"define\"\n$   d_fmax = \"define\"\n$   d_fmin = \"define\"\n$   d_fp_classify = \"define\"\n$   d_hypot = \"define\"\n$   d_ilogb = \"define\"\n$   d_isnan = \"define\"\n$   d_isnanl = \"define\"\n$   d_isnormal = \"define\"\n$   d_j0 = \"define\"\n$   d_lgamma = \"define\"\n$   d_log1p = \"define\"\n$   d_log2 = \"define\"\n$   d_logb = \"define\"\n$   d_lrint = \"define\"\n$   d_lrintl = \"define\"\n$   d_lround = \"define\"\n$   d_lroundl = \"define\"\n$   d_nearbyint = \"define\"\n$   d_nextafter = \"define\"\n$   d_nexttoward = \"define\"\n$   d_remainder = \"define\"\n$   d_remquo = \"define\"\n$   d_rint = \"define\"\n$   d_tgamma = \"define\"\n$   d_trunc = \"define\"\n$   d_truncl = \"define\"\n$ ELSE\n$   d_acosh = \"undef\"\n$   d_asinh = \"undef\"\n$   d_atanh = \"undef\"\n$   d_cbrt = \"undef\"\n$   d_copysign = \"undef\"\n$   d_erf = \"undef\"\n$   d_erfc = \"undef\"\n$   d_exp2 = \"undef\"\n$   d_expm1 = \"undef\"\n$   d_fdim = \"undef\"\n$   d_fma = \"undef\"\n$   d_fmax = \"undef\"\n$   d_fmin = \"undef\"\n$   d_fp_classify = \"undef\"\n$   d_hypot = \"undef\"\n$   d_ilogb = \"undef\"\n$   d_isnan = \"undef\"\n$   d_isnanl = \"undef\"\n$   d_isnormal = \"undef\"\n$   d_j0 = \"undef\"\n$   d_lgamma = \"undef\"\n$   d_log1p = \"undef\"\n$   d_log2 = \"undef\"\n$   d_logb = \"undef\"\n$   d_lrint = \"undef\"\n$   d_lrintl = \"undef\"\n$   d_lround = \"undef\"\n$   d_lroundl = \"undef\"\n$   d_nearbyint = \"undef\"\n$   d_nextafter = \"undef\"\n$   d_nexttoward = \"undef\"\n$   d_remainder = \"undef\"\n$   d_remquo = \"undef\"\n$   d_rint = \"undef\"\n$   d_tgamma = \"undef\"\n$   d_trunc = \"undef\"\n$   d_truncl = \"undef\"\n$ ENDIF\n$!\n$! Now some that we build up\n$!\n$ use5005threads = \"undef\"\n$ d_old_pthread_create_joinable = \"undef\"\n$ old_pthread_create_joinable = \" \"\n$ IF use_threads\n$ THEN\n$    useithreads = \"define\"\n$ ELSE\n$   useithreads = \"undef\"\n$ ENDIF\n$!\n$! Some that we need to invoke the compiler for\n$!\n$!\n$! handy construction aliases/symbols\n$!\n$ OS := \"open/write CONFIG []try.c\"\n$ WS := \"write CONFIG\"\n$ CS := \"close CONFIG\"\n$ DS := \"delete/nolog/noconfirm []try.*;*\"\n$ Needs_Opt := N\n$ good_compile = %X10B90001\n$ IF ccname .EQS. \"GCC\"\n$ THEN\n$   open/write OPTCHAN []try.opt\n$   write OPTCHAN \"Gnu_CC:[000000]gcclib.olb/library\"\n$   write OPTCHAN \"Sys$Share:VAXCRTL/Share\"\n$   Close OPTCHAN\n$   Needs_Opt := Y\n$   good_compile = %X10000001\n$ ENDIF\n$ IF ccname .EQS. \"CXX\"\n$ THEN\n$   good_compile = %X15F60001\n$ ENDIF\n$ good_link = %X10000001\n$ tmp = \"\" ! null string default\n$!\n$ GOTO beyond_compile_ok\n$!\n$! Check for type sizes \n$!\n$type_size_check: \n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"printf(\"\"%d\\n\"\", sizeof(''tmp'));\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile\n$ RETURN\n$!\n$!: locate header file\n$findhdr:\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <''tmp'>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"printf(\"\"define\\n\"\");\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB link_ok\n$ RETURN\n$!\n$!: define an alternate in-header-list? function\n$inhdr:\n$!\n$ GOSUB findhdr\n$ IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$ THEN\n$   echo4 \"<''tmp'> found.\"\n$   tmp = \"define\"\n$ ELSE\n$   echo4 \"<''tmp'> NOT found.\"\n$   tmp = \"undef\"\n$ ENDIF\n$ RETURN\n$!\n$!: define an is-in-libc? function\n$inlibc: \n$ GOSUB link_ok\n$ IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$ THEN\n$   echo4 \"''tmp'() found.\"\n$   tmp = \"define\"\n$ ELSE\n$   echo4 \"''tmp'() NOT found.\"\n$   tmp = \"undef\"\n$ ENDIF\n$ RETURN\n$!\n$!: define a shorthand compile call\n$compile:\n$ GOSUB link_ok\n$just_mcr_it:\n$ IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$ THEN\n$   OPEN/WRITE CONFIG []try.out\n$   DEFINE/USER_MODE SYS$ERROR CONFIG\n$   DEFINE/USER_MODE  SYS$OUTPUT CONFIG\n$   MCR []try.exe\n$   CLOSE CONFIG\n$   OPEN/READ CONFIG []try.out\n$   READ CONFIG tmp\n$   CLOSE CONFIG\n$   DELETE/NOLOG/NOCONFIRM []try.out;\n$   DELETE/NOLOG/NOCONFIRM []try.exe;\n$ ELSE\n$   tmp = \"\" ! null string default\n$ ENDIF\n$ RETURN\n$!\n$link_ok:\n$ GOSUB compile_ok\n$ DEFINE/USER_MODE SYS$ERROR _NLA0:\n$ DEFINE/USER_MODE SYS$OUTPUT _NLA0:\n$ SET NOON\n$ IF Needs_Opt\n$ THEN\n$   'ld' try.obj,try.opt/opt\n$   link_status = $status\n$ ELSE\n$   'ld' try.obj\n$   link_status = $status\n$ ENDIF\n$ SET ON\n$ IF F$SEARCH(\"try.obj\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM try.obj;\n$ RETURN\n$!\n$!: define a shorthand compile call for compilations that should be ok.\n$compile_ok:\n$ DEFINE/USER_MODE SYS$ERROR _NLA0:\n$ DEFINE/USER_MODE SYS$OUTPUT _NLA0:\n$ SET NOON\n$ 'Checkcc' try.c\n$ compile_status = $status\n$ SET ON\n$ DELETE/NOLOG/NOCONFIRM try.c;\n$ RETURN\n$!\n$beyond_compile_ok:\n$!\n$! Check for __STDC__\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"#ifdef __STDC__\"\n$ WS \"printf(\"\"42\\n\"\");\"\n$ WS \"#elif defined (__STD_ANSI)\" ! for CXX\n$ WS \"printf(\"\"42\\n\"\");\"\n$ WS \"#else\"\n$ WS \"printf(\"\"1\\n\"\");\"\n$ WS \"#endif\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile\n$ cpp_stuff=tmp\n$ IF F$INTEGER(tmp) .eq. 42\n$ THEN\n$   echo4 \"Oh!  Smells like ANSI's been here.\"\n$   echo \"We can catify or stringify, separately or together!\"\n$ ENDIF\n$!\n$! Check for double size\n$!\n$ echo4 \"Checking to see how big your double precision numbers are...\"\n$ tmp=\"double\"\n$ GOSUB type_size_check\n$ doublesize = tmp\n$ echo \"Your double is ''doublesize' bytes long.\"\n$!\n$! Check for long double size\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#pragma message disable ALL\"  ! VAX compilers may have distracting informationals\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"printf(\"\"%d\\n\"\", sizeof(long double));\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ echo4 \"Checking to see if you have long double...\"\n$ GOSUB link_ok\n$ IF link_status .NE. good_link\n$ THEN\n$   longdblsize=\"0\"\n$   longdblkind=\"0\"\n$   d_longdbl=\"undef\"\n$   echo \"You do not have long double.\"\n$ ELSE\n$   echo \"You have long double.\"\n$   echo4 \"Checking to see how big your long doubles are...\"\n$   GOSUB just_mcr_it\n$   longdblsize = tmp\n$   longdblkind = \"1\"\n$   d_longdbl = \"define\"\n$   echo \"Your long doubles are ''longdblsize' bytes long.\"\n$ ENDIF\n$!\n$ IF d_longdbl .OR. d_longdbl .EQS. \"define\"\n$ THEN\n$   d_PRIEUldbl = \"define\"\n$   d_PRIFUldbl = \"define\"\n$   d_PRIGUldbl = \"define\"\n$   d_PRIeldbl = \"define\"\n$   d_PRIfldbl = \"define\"\n$   d_PRIgldbl = \"define\"\n$   sPRIEUldbl = \"\"\"LE\"\"\"\n$   sPRIFUldbl = \"\"\"LF\"\"\"\n$   sPRIGUldbl = \"\"\"LG\"\"\"\n$   sPRIeldbl = \"\"\"Le\"\"\"\n$   sPRIfldbl = \"\"\"Lf\"\"\"\n$   sPRIgldbl = \"\"\"Lg\"\"\"\n$ ELSE\n$   d_PRIEUldbl = \"undef\"\n$   d_PRIFUldbl = \"undef\"\n$   d_PRIGUldbl = \"undef\"\n$   d_PRIeldbl = \"undef\"\n$   d_PRIfldbl = \"undef\"\n$   d_PRIgldbl = \"undef\"\n$   sPRIEUldbl = \"\"\n$   sPRIFUldbl = \"\"\n$   sPRIGUldbl = \"\"\n$   sPRIeldbl = \"\"\n$   sPRIfldbl = \"\"\n$   sPRIgldbl = \"\"\n$ ENDIF\n$ d_SCNfldbl = d_PRIfldbl\n$ sSCNfldbl = sPRIfldbl ! expect consistency\n$!\n$!: check for long long\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"printf(\"\"%d\\n\"\", sizeof(long long));\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ echo4 \"Checking to see if you have long long...\"\n$ GOSUB link_ok\n$ IF link_status .NE. good_link\n$ THEN\n$   longlongsize=\"0\"\n$   d_longlong=\"undef\"\n$   echo \"You do not have long long.\"\n$ ELSE\n$   echo \"You have long long.\"\n$   echo4 \"Checking to see how big your long longs are...\"\n$   GOSUB just_mcr_it\n$   longlongsize = tmp\n$   d_longlong = \"define\"\n$   echo \"Your long longs are ''longlongsize' bytes long.\"\n$ ENDIF\n$!\n$! Check the prototype for getgid\n$!\n$ echo \"Looking for the type for group ids returned by getgid().\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <types.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"gid_t foo;\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile_ok\n$ IF compile_status .NE. good_compile\n$ THEN\n$!   Okay, gid_t failed. Must be unsigned int\n$   gidtype = \"unsigned int\"\n$   echo4 \"assuming \"\"''gidtype'\"\".\"\n$ ELSE\n$   gidtype = \"gid_t\"\n$   echo4 \"gid_t found.\"\n$ ENDIF\n$!\n$! Check to see if we've got dev_t\n$!\n$ echo \"Looking for the type for dev.\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <types.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"dev_t foo;\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile_ok\n$ IF compile_status .NE. good_compile\n$ THEN\n$!   Okay, dev_t failed. Must be unsigned int\n$   devtype = \"unsigned int\"\n$   echo4 \"assuming \"\"''devtype'\"\".\"\n$ ELSE\n$   devtype = \"dev_t\"\n$   echo4 \"dev_t found.\"\n$ ENDIF\n$!\n$! Check to see if we've got unistd.h (which we ought to, but you never know)\n$!\n$ i_netdb = \"undef\"\n$ tmp = \"unistd.h\"\n$ GOSUB inhdr\n$ i_unistd = tmp\n$!\n$! Check to see if we've got utime.h (which we should use if we have)\n$!\n$ i_netdb = \"undef\"\n$ tmp = \"utime.h\"\n$ GOSUB inhdr\n$ i_utime = tmp\n$!\n$! do we have getppid()?\n$!\n$ IF i_unistd .EQS. \"define\"\n$ THEN\n$   OS\n$   WS \"#include <stdio.h>\"\n$   WS \"#include <unistd.h>\"\n$   WS \"int main() {\"\n$   WS \"printf(\"\"%d\\n\"\",getppid());\"\n$   WS \"return(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"getppid\"\n$   GOSUB inlibc\n$   d_getppid = tmp\n$ ELSE\n$   d_getppid = \"undef\"\n$ ENDIF\n$!\n$!: see if this is a libutil.h system\n$!\n$ tmp = \"libutil.h\"\n$ GOSUB inhdr\n$ i_libutil = tmp\n$!\n$! Check to see if we've got shadow.h (probably not, but...)\n$!\n$ tmp = \"shadow.h\"\n$ GOSUB inhdr\n$ i_shadow = tmp\n$!\n$! Check to see if we've got socks.h (probably not, but...)\n$!\n$ tmp = \"socks.h\"\n$ GOSUB inhdr\n$ i_socks = tmp\n$!\n$! Check the prototype for select\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   WS \"#include <types.h>\"\n$   IF i_unistd .EQS. \"define\" THEN WS \"#include <unistd.h>\"\n$   WS \"#include <time.h>\"\n$   WS \"#include <socket.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"fd_set *foo;\"\n$   WS \"int bar;\"\n$   WS \"foo = NULL;\"\n$   WS \"bar = select(2, foo, foo, foo, NULL);\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   GOSUB compile_ok\n$   IF compile_status .NE. good_compile\n$   THEN\n$!   Okay, select failed.  Must be an int *\n$     selecttype = \"int *\"\n$     echo4 \"select() NOT found.\"\n$   ELSE\n$     selecttype=\"fd_set *\"\n$     echo4 \"select() found.\"\n$   ENDIF\n$ ELSE\n$   ! No sockets, so stick in an int * : no select, so pick a harmless default\n$   selecttype = \"int *\"\n$ ENDIF\n$!\n$! Check to see if fd_set exists\n$!\n$ echo \"Checking to see how well your C compiler handles fd_set and friends ...\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <types.h>\"\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   WS \"#include <time.h>\"\n$   WS \"#include <socket.h>\"\n$ ENDIF\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"fd_set *foo;\"\n$ WS \"int bar;\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile_ok\n$ IF compile_status .ne. good_compile\n$ THEN\n$!  Okay, fd_set failed. Must not exist\n$   d_fd_set = \"undef\"\n$   echo4 \"Hmm, your compiler has some difficulty with fd_set.\"\n$ ELSE\n$   d_fd_set=\"define\"\n$   echo4 \"Well, your system knows about the normal fd_set typedef...\"\n$ ENDIF\n$!\n$! Check for inttypes.h\n$!\n$ tmp = \"inttypes.h\"\n$ GOSUB inhdr\n$ i_inttypes = tmp\n$!\n$! Check to see if off64_t exists\n$!\n$ echo4 \"Checking to see if you have off64_t...\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <types.h>\"\n$ WS \"#''i_inttypes' IIH\"\n$ WS \"#ifdef IIH\"\n$ WS \"#include <inttypes.h>\"\n$ WS \"#endif\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"off64_t bar;\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile_ok\n$ IF compile_status .EQ. good_compile\n$ THEN\n$   d_off64_t=\"define\"\n$   echo \"You have off64_t.\"\n$ ELSE\n$   d_off64_t = \"undef\"\n$   echo \"You do not have off64_t.\"\n$ ENDIF\n$!\n$! Check to see if fpos64_t exists\n$!\n$ echo4 \"Checking to see if you have fpos64_t...\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <types.h>\"\n$ WS \"#''i_inttypes' IIH\"\n$ WS \"#ifdef IIH\"\n$ WS \"#include <inttypes.h>\"\n$ WS \"#endif\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"fpos64_t bar;\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile_ok\n$ IF compile_status .EQ. good_compile\n$ THEN\n$   d_fpos64_t=\"define\"\n$   echo \"You have fpos64_t.\"\n$ ELSE\n$   d_fpos64_t = \"undef\"\n$   echo \"You do not have fpos64_t.\"\n$ ENDIF\n$!\n$! Check to see if int64_t exists\n$!\n$ echo4 \"Checking to see if you have int64_t...\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <types.h>\"\n$ WS \"#''i_inttypes' IIH\"\n$ WS \"#ifdef IIH\"\n$ WS \"#include <inttypes.h>\"\n$ WS \"#endif\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"int64_t bar;\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile_ok\n$ IF compile_status .EQ. good_compile\n$ THEN\n$   d_int64_t=\"define\"\n$   echo \"You have int64_t.\"\n$ ELSE\n$   d_int64_t = \"undef\"\n$   echo \"You do not have int64_t.\"\n$ ENDIF\n$!\n$! Check to see if fseeko exists\n$!\n$ OS\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"FILE *f=NULL;\"\n$ WS \"fseeko(f,(off_t)0,SEEK_SET);\"\n$ WS \"return(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"fseeko\"\n$ GOSUB inlibc\n$ d_fseeko = tmp\n$!\n$! Check to see if ftello exists\n$!\n$ OS\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"FILE *f=NULL; off_t o=0;\"\n$ WS \"o=ftello(f);\"\n$ WS \"return(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"ftello\"\n$ GOSUB inlibc\n$ d_ftello = tmp\n$!\n$!: see if this is a netdb.h system\n$ IF Has_Dec_C_Sockets\n$ THEN \n$   tmp = \"netdb.h\"\n$   GOSUB inhdr\n$   i_netdb = tmp\n$ ENDIF\n$!\n$! Check for h_errno\n$!\n$ echo4 \"Checking to see if you have h_errno...\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ IF i_unistd .EQS. \"define\" THEN WS \"#include <unistd.h>\"\n$ IF i_netdb  .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"h_errno = 3;\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB link_ok\n$ IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$ THEN\n$   d_herrno=\"define\"\n$   echo \"You have h_errno.\"\n$ ELSE\n$   d_herrno=\"undef\"\n$   echo \"You do not have h_errno.\"\n$ ENDIF\n$!\n$! Check to see if gethostname exists\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   WS \"#include <types.h>\"\n$   WS \"#include <time.h>\"\n$   WS \"#include <socket.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"char name[100];\"\n$   WS \"int bar, baz;\"\n$   WS \"bar = 100;\"\n$   WS \"baz = gethostname(name, bar);\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   GOSUB link_ok\n$   IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$   THEN\n$     d_gethname=\"define\"\n$     echo4 \"gethostname() found.\"\n$   ELSE\n$     d_gethname=\"undef\"\n$   ENDIF\n$ ELSE\n$   ! No sockets, so no gethname\n$   d_gethname = \"undef\"\n$ ENDIF\n$!\n$! Check for sys/file.h\n$!\n$ tmp = \"sys/file.h\"\n$ GOSUB inhdr\n$ i_sysfile = tmp\n$!\n$!\n$! Check for sys/ioctl.h\n$!\n$ tmp = \"sys/ioctl.h\"\n$ GOSUB inhdr\n$ i_sysioctl = tmp\n$!\n$! Check for sys/utsname.h\n$!\n$ tmp = \"sys/utsname.h\"\n$ GOSUB inhdr\n$ i_sysutsname = tmp\n$!\n$! Check for syslog.h\n$!\n$ tmp = \"syslog.h\"\n$ GOSUB inhdr\n$ i_syslog = tmp\n$!\n$! Check for poll.h\n$!\n$ tmp = \"poll.h\"\n$ GOSUB inhdr\n$ i_poll = tmp\n$!\n$! Check for sys/uio.h\n$!\n$ tmp = \"sys/uio.h\"\n$ GOSUB inhdr\n$ i_sysuio = tmp\n$!\n$! Check for sys/mode.h\n$!\n$ tmp = \"sys/mode.h\"\n$ GOSUB inhdr\n$ i_sysmode = tmp\n$!\n$! Check for poll.h\n$!\n$ tmp = \"sys/poll.h\"\n$ gosub inhdr\n$ i_syspoll = tmp\n$!\n$! Check for sys/access.h\n$!\n$ tmp = \"sys/access.h\"\n$ GOSUB inhdr\n$ i_sysaccess = tmp\n$!\n$! Check for sys/security.h\n$!\n$ tmp = \"sys/security.h\"\n$ GOSUB inhdr\n$ i_syssecrt = tmp\n$!\n$! Check for fcntl.h\n$!\n$ tmp = \"fcntl.h\"\n$ GOSUB inhdr\n$ i_fcntl = tmp\n$!\n$! Check for fcntl\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <fcntl.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"fcntl(1,2,3);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"fcntl\"\n$ GOSUB inlibc\n$ d_fcntl = tmp\n$!\n$! Check for fcntl locking capability\n$!\n$ echo4 \"Checking if fcntl-based file locking works... \"\n$ tmp = \"undef\"\n$ IF d_fcntl .EQS. \"define\"\n$ THEN\n$   OS\n$   WS \"#include <stdio.h>\"\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <fcntl.h>\"\n$   WS \"#include <unistd.h>\"\n$   WS \"int main() {\"\n$   WS \"#if defined(F_SETLK) && defined(F_SETLKW)\"\n$   WS \"     struct flock flock;\"\n$   WS \"     int retval, fd;\"\n$   WS \"     fd = open(\"\"[-]perl.c\"\", O_RDONLY);\"\n$   WS \"     flock.l_type = F_RDLCK;\"\n$   WS \"     flock.l_whence = SEEK_SET;\"\n$   WS \"     flock.l_start = flock.l_len = 0;\"\n$   WS \"     retval = fcntl(fd, F_SETLK, &flock);\"\n$   WS \"     close(fd);\"\n$   WS \"     (retval < 0 ? printf(\"\"undef\\n\"\") : printf(\"\"define\\n\"\"));\"\n$   WS \"#else\"\n$   WS \"     printf(\"\"undef\\n\"\");\"\n$   WS \"#endif\"\n$   WS \"}\"\n$   CS\n$   GOSUB link_ok\n$   IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$   THEN\n$     GOSUB just_mcr_it\n$     IF tmp .EQS. \"define\"\n$     THEN\n$       echo4 \"Yes, it seems to work.\"\n$     ELSE\n$       echo4 \"Nope, it didn't work.\"\n$     ENDIF\n$   ELSE\n$     echo4 \"I'm unable to compile the test program, so I'll assume not.\"\n$     tmp = \"undef\"\n$   ENDIF\n$ ELSE\n$   echo4 \"Nope, since you don't even have fcntl().\"\n$ ENDIF\n$ d_fcntl_can_lock = tmp\n$!\n$! Check for memchr\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"char * place;\"\n$ WS \"place = (char *)memchr(\"\"foo\"\", 47, 3);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"memchr\"\n$ GOSUB inlibc\n$ d_memchr = tmp\n$!\n$! Check for strtoull\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"unsigned __int64 result;\"\n$ WS \"result = strtoull(\"\"123123\"\", NULL, 10);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"strtoull\"\n$ GOSUB inlibc\n$ d_strtoull = tmp\n$!\n$! Check for strtouq\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"unsigned __int64 result;\"\n$ WS \"result = strtouq(\"\"123123\"\", NULL, 10);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"strtouq\"\n$ GOSUB inlibc\n$ d_strtouq = tmp\n$!\n$! Check for strtoll\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"__int64 result;\"\n$ WS \"result = strtoll(\"\"123123\"\", NULL, 10);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"strtoll\"\n$ GOSUB inlibc\n$ d_strtoll = tmp\n$!\n$! Check for strtoq\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"__int64 result;\"\n$ WS \"result = strtoq(\"\"123123\"\", NULL, 10);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"strtoq\"\n$ GOSUB inlibc\n$ d_strtoq = tmp\n$!\n$! Check for strtold\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"long double result;\"\n$ WS \"result = strtold(\"\"123123\"\", NULL, 10);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"strtold\"\n$ GOSUB inlibc\n$ d_strtold = tmp\n$!\n$! Check for atoll\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \" __int64 result;\"\n$ WS \"result = atoll(\"\"123123\"\");\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"atoll\"\n$ GOSUB inlibc\n$ d_atoll = tmp\n$!\n$! Check for atolf\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <string.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"long double\"\n$ WS \"result = atolf(\"\"123123\"\");\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"atolf\"\n$ GOSUB inlibc\n$ d_atolf = tmp\n$!\n$! Check for access\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"access(\"\"foo\"\", F_OK);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"acess\"\n$ GOSUB inlibc\n$ d_access = tmp\n$!\n$! Check for bzero\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <strings.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"char foo[10];\"\n$ WS \"bzero(foo, 10);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"bzero\"\n$ GOSUB inlibc\n$ d_bzero = tmp\n$!\n$! Check for bcopy\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <strings.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"char foo[10], bar[10];\"\n$ WS \"bcopy(\"\"foo\"\", bar, 3);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"bcopy\"\n$ GOSUB inlibc\n$ d_bcopy = tmp\n$!\n$! Check for mkstemp\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"mkstemp(\"\"foo\"\");\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"mkstemp\"\n$ GOSUB inlibc\n$ d_mkstemp = tmp\n$!\n$! Check for mkstemps\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"mkstemps(\"\"foo\"\", 1);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"mkstemps\"\n$ GOSUB inlibc\n$ d_mkstemps = tmp\n$!\n$! Check for mkdtemp\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"mkdtemp(\"\"foo\"\");\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"mkdtemp\"\n$ GOSUB inlibc\n$ d_mkdtemp = tmp\n$!\n$! Check for poll\n$!\n$ if i_poll .eqs. \"define\"\n$ then\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <poll.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"struct pollfd pfd;\"\n$   WS \"int count=poll(&pfd,1,0);\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"poll\"\n$   GOSUB inlibc\n$   d_poll = tmp\n$ else\n$   d_poll = \"undef\"\n$ endif\n$!\n$! Check for setvbuf\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"FILE *foo;\"\n$ WS \"char Buffer[99];\"\n$ WS \"foo = fopen(\"\"foo\"\", \"\"r\"\");\"\n$ WS \"setvbuf(foo, Buffer, 0, 0);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"setvbuf\"\n$ GOSUB inlibc\n$ d_setvbuf = tmp\n$!\n$! Check for the shm* routines.\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <sys/shm.h>\"\n$ WS \"#include <sys/stat.h>\"\n$ WS \"int shmget(key_t key, size_t size, int shmflg);\"\n$ WS \"void* shmat(int shmid,const void *shmaddr,int shmflg);\"\n$ WS \"int shmctl(int shmid,  int cmd, struct shmid_ds *buf);\"\n$ WS \"int shmdt(const void *shmaddr);\"\n$ WS \"int main() {\"\n$ WS \"int shm_id = shmget(IPC_PRIVATE, 8, S_IRWXU);\"\n$ WS \"if (shm_id == -1) printf(\"\"0\\n\"\"); else printf (\"\"1\\n\"\");\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile\n$ IF tmp .EQS. \"1\"\n$ THEN\n$   d_shm = \"define\"\n$   d_shmat = \"define\"\n$   d_shmatprototype = \"define\"\n$   d_shmctl = \"define\"\n$   d_shmdt = \"define\"\n$   d_shmget = \"define\"\n$   shmattype = \"void *\"\n$ ELSE\n$   d_shm = \"undef\"\n$   d_shmat = \"undef\"\n$   d_shmatprototype = \"undef\"\n$   d_shmctl = \"undef\"\n$   d_shmdt = \"undef\"\n$   d_shmget = \"undef\"\n$   shmattype = \"undef\"\n$ ENDIF\n$!\n$! Check for setenv\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"setenv(\"\"FOO\"\", \"\"BAR\"\", 0);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"setenv\"\n$ GOSUB inlibc\n$ d_setenv = tmp\n$!\n$! Check for setproctitle\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"setproctitle(\"\"%s\"\", \"\"FOO\"\");\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"setproctitle\"\n$ GOSUB inlibc\n$ d_setproctitle = tmp\n$!\n$! Check for <netinet/in.h>\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   tmp = \"netinet/in.h\"\n$   GOSUB inhdr\n$   i_niin = tmp\n$ ELSE\n$   i_niin=\"undef\"\n$ ENDIF\n$!\n$! Check for <arpa/inet.h>\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   tmp = \"arpa/inet.h\"\n$   GOSUB inhdr\n$   i_arpainet = tmp\n$ ELSE\n$   i_arpainet=\"undef\"\n$ ENDIF\n$!\n$! Check for <sys/un.h>\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   tmp = \"sys/un.h\"\n$   GOSUB inhdr\n$   i_sysun = tmp\n$ ELSE\n$   i_sysun=\"undef\"\n$ ENDIF\n$!\n$!\n$! Check for <netinet/tcp.h>\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   tmp = \"netinet/tcp.h\"\n$   GOSUB inhdr\n$   i_netinettcp = tmp\n$ ELSE\n$   i_netinettcp=\"undef\"\n$ ENDIF\n$!\n$! Check for endhostent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"endhostent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"endhostent\"\n$   GOSUB inlibc\n$   d_endhent = tmp\n$ ELSE\n$   d_endhent=\"undef\"\n$ ENDIF\n$!\n$! Check for endnetent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"endnetent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"endnetent\"\n$   GOSUB inlibc\n$   d_endnent = tmp\n$ ELSE\n$   d_endnent=\"undef\"\n$ ENDIF\n$!\n$! Check for endprotoent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"endprotoent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"endprotoent\"\n$   GOSUB inlibc\n$   d_endpent = tmp\n$ ELSE\n$   d_endpent=\"undef\"\n$ ENDIF\n$!\n$! Check for endservent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"endservent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"endservent\"\n$   GOSUB inlibc\n$   d_endsent = tmp\n$ ELSE\n$   d_endsent=\"undef\"\n$ ENDIF\n$!\n$! Check for sethostent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"sethostent(1);\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"sethostent\"\n$   GOSUB inlibc\n$   d_sethent = tmp\n$ ELSE\n$   d_sethent=\"undef\"\n$ ENDIF\n$!\n$! Check for setnetent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"setnetent(1);\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"setnetent\"\n$   GOSUB inlibc\n$   d_setnent = tmp\n$ ELSE\n$   d_setnent=\"undef\"\n$ ENDIF\n$!\n$! Check for setprotoent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"setprotoent(1);\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"setprotoent\"\n$   GOSUB inlibc\n$   d_setpent = tmp\n$ ELSE\n$   d_setpent=\"undef\"\n$ ENDIF\n$!\n$! Check for setservent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"setservent(1);\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"setservent\"\n$   GOSUB inlibc\n$   d_setsent = tmp\n$ ELSE\n$   d_setsent=\"undef\"\n$ ENDIF\n$!\n$! Check for gethostent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"gethostent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"gethostent\"\n$   GOSUB inlibc\n$   d_gethent = tmp\n$ ELSE\n$   d_gethent=\"undef\"\n$ ENDIF\n$!\n$! Check for getnetent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"getnetent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"getnetent\"\n$   GOSUB inlibc\n$   d_getnent = tmp\n$ ELSE\n$   d_getnent=\"undef\"\n$ ENDIF\n$!\n$! Check for getprotoent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"getprotoent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"getprotoent\"\n$   GOSUB inlibc\n$   d_getpent = tmp\n$ ELSE\n$   d_getpent=\"undef\"\n$ ENDIF\n$!\n$! Check for getservent\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"getservent();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"getservent\"\n$   GOSUB inlibc\n$   d_getsent = tmp\n$ ELSE\n$   d_getsent=\"undef\"\n$ ENDIF\n$!\n$!\n$! Check for sa_len\n$!\n$ echo4 \"Checking the availability of sa_len in the sockaddr struct ...\"\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#define _SOCKADDR_LEN\"\n$   WS \"#include <types.h>\"\n$   WS \"#include <socket.h>\"\n$   WS \"#include <string.h>\"\n$   WS \"int main() {\"\n$   WS \"struct sockaddr sa;\"\n$   WS \"memset((char *)&sa, 0, sizeof(sa));\"\n$   WS \"return (sa.sa_len);\"\n$   WS \"}\"\n$   CS\n$   GOSUB compile_ok\n$   IF compile_status .EQ. good_compile\n$   THEN\n$     d_sockaddr_sa_len=\"define\"\n$     echo \"You have sa_len in the sockaddr struct.\"\n$   ELSE\n$     d_sockaddr_sa_len=\"undef\"\n$     echo \"You do not have sa_len in the sockaddr struct.\"\n$   ENDIF\n$ ELSE\n$   d_sockaddr_sa_len=\"undef\"\n$   echo \"You do not have sa_len in the sockaddr struct.\"\n$ ENDIF\n$!\n$! Check for sin6_scope_id\n$!\n$ echo4 \"Checking the availability of sin6_scope_id in the struct sockaddr_in6 ...\"\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   OS\n$   WS \"#include <types.h>\"\n$   WS \"#include <socket.h>\"\n$   WS \"#include <in.h>\"\n$   WS \"#include <string.h>\"\n$   WS \"int main() {\"\n$   WS \"struct sockaddr_in6 sin6;\"\n$   WS \"memset((char *)&sin6, 0, sizeof(sin6));\"\n$   WS \"return (sin6.sin6_scope_id);\"\n$   WS \"}\"\n$   CS\n$   GOSUB compile_ok\n$   IF compile_status .EQ. good_compile\n$   THEN\n$     d_sin6_scope_id=\"define\"\n$     echo \"You have sin6_scope_id in the sockaddr_in6 struct.\"\n$   ELSE\n$     d_sin6_scope_id=\"undef\"\n$     echo \"You do not have sin6_scope_id in the sockaddr_in6 struct.\"\n$   ENDIF\n$ ELSE\n$   d_sin6_scope_id=\"undef\"\n$   echo \"You do not have sin6_scope_id in the sockaddr_in6 struct.\"\n$ ENDIF\n$!\n$! Check for nanosleep\n$!\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <time.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"int asleep = nanosleep(NULL,NULL);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"nanosleep\"\n$ GOSUB inlibc\n$ d_nanosleep = tmp\n$!\n$! Check for socklen_t\n$!\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   echo4 \"Checking to see if you have socklen_t...\"\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <stdio.h>\"\n$   IF i_netdb .EQS. \"define\" THEN WS \"#include <netdb.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"socklen_t x = 16;\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   GOSUB link_ok\n$   IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$   THEN\n$     d_socklen_t=\"define\"\n$     echo \"You have socklen_t.\"\n$   ELSE\n$     d_socklen_t=\"undef\"\n$     echo \"You do not have socklen_t.\"\n$   ENDIF\n$ ELSE\n$   d_socklen_t=\"undef\"\n$ ENDIF\n$!\n$! Check for pthread_yield\n$!\n$ IF use_threads\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <pthread.h>\"\n$   WS \"#include <stdio.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"pthread_yield();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"pthread_yield\"\n$   GOSUB inlibc\n$   d_pthread_yield = tmp\n$ ELSE\n$   d_pthread_yield=\"undef\"\n$ ENDIF\n$!\n$! Check for sched_yield\n$!\n$ IF use_threads\n$ THEN\n$   OS\n$   WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$   WS \"#include <stdlib.h>\"\n$   WS \"#endif\"\n$   WS \"#include <pthread.h>\"\n$   WS \"#include <stdio.h>\"\n$   WS \"int main()\"\n$   WS \"{\"\n$   WS \"sched_yield();\"\n$   WS \"exit(0);\"\n$   WS \"}\"\n$   CS\n$   tmp = \"sched_yield\"\n$   GOSUB inlibc\n$   d_sched_yield = tmp\n$   IF d_sched_yield .EQS. \"define\"\n$   THEN sched_yield = \"sched_yield\"\n$   ELSE sched_yield = \" \"\n$   ENDIF\n$ ELSE\n$   d_sched_yield=\"undef\"\n$   sched_yield = \" \"\n$ ENDIF\n$!\n$! Check for pthread_attr_setscope and PTHREAD_SCOPE_SYSTEM.\n$! (The actual test is to be written.)\n$!\n$ d_pthread_attr_setscope=\"undef\"\n$!\n$! Check for generic pointer size\n$!\n$ echo4 \"Checking to see how big your pointers are...\" \n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"int foo;\"\n$ WS \"foo = sizeof(char *);\"\n$ WS \"printf(\"\"%d\\n\"\", foo);\"\n$ WS \"exit(0);\"\n$ WS \"}\"\n$ CS\n$ tmp = \"char *\"\n$ GOSUB type_size_check\n$ ptrsize = tmp\n$ echo \"Your pointers are ''ptrsize' bytes long.\"\n$!\n$! Check for size_t size\n$!\n$ tmp = \"size_t\"\n$ zzz = tmp\n$ echo4 \"Checking the size of ''zzz'...\"\n$ GOSUB type_size_check\n$ sizesize = tmp\n$ echo \"Your ''zzz' size is ''sizesize' bytes.\"\n$!\n$! Check for _LARGEFILE capability.\n$!\n$ off_t_size = 4\n$ OS\n$ WS \"#define _LARGEFILE\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"printf(\"\"%d\\n\"\", sizeof(off_t));\"\n$ WS \"return(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB link_ok\n$ IF link_status .EQ. good_link\n$ THEN\n$   GOSUB just_mcr_it\n$   off_t_size = tmp\n$ ENDIF\n$ echo \"Your off_t size is ''off_t_size' bytes when _LARGEFILE is defined.\"\n$ IF off_t_size .ne. 8 .AND. (uselargefiles .OR. uselargefiles .eqs. \"define\")\n$ THEN\n$   echo4 \"You configured with -Duselargefiles but your CRTL does not support _LARGEFILE.\"\n$   echo4 \"I'm disabling large file support.\"\n$   uselargefiles = \"undef\"\n$ ENDIF\n$!\n$! Check for st_ino size.\n$!\n$ st_ino_size = 4\n$ OS\n$ WS \"#include <sys/stat.h>\"\n$ WS \"#include <stdio.h>\"\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\n$ WS \"#endif\"\n$ WS \"int main() {\n$ WS \"#''uselargefiles' _LARGEFILE\"\n$ WS \"#ifdef _LARGEFILE\"\n$ WS \"    printf(\"\"%d\\n\"\", sizeof(__ino64_t));\"\n$ WS \"#else\"\n$ WS \"    printf(\"\"%d\\n\"\", sizeof(unsigned short)*3);\"\n$ WS \"#endif\"\n$ WS \"    exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB link_ok\n$ IF link_status .EQ. good_link\n$ THEN\n$   GOSUB just_mcr_it\n$   st_ino_size = tmp\n$ ENDIF\n$ echo \"Your st_ino size is ''st_ino_size' bytes.\"\n$!\n$! Tests for hard link, symbolic links, and 7.3 + CRTL features\n$!\n$  d_lchown = \"undef\"\n$  d_link = \"undef\"\n$  d_lstat = \"undef\"\n$  d_readlink = \"undef\"\n$  d_symlink = \"undef\"\n$  d_realpath = \"undef\"\n$!\n$! Hard link support has been present since 7.3-1 except for the\n$! easy to use DCL test to see if hardlinks are enabled on the build\n$! disk.  That would require more work to test, and I am only testing\n$! this on 8.2, so that is why the 8.2 test.\n$!\n$  IF (vms_ver .GES. \"8.2\") .AND. (F$ELEMENT(0, \"-\", archname) .NES. \"VMS_VAX\")\n$  THEN\n$   IF f$getdvi(\"SYS$DISK\",\"HARDLINKS_SUPPORTED\")\n$   THEN\n$       echo \"I Found 64 bit OpenVMS 8.2 or later, and hard links enabled on build disk.\"\n$\techo \"I will build with hard link support\"\n$\td_link = \"define\"\n$   ELSE\n$\techo \"I Found 64 bit OpenVMS 8.2 or later, and hard links disabled on build disk.\"\n$\techo \"I will not build with hard link support.\"\n$   ENDIF\n$  ELSE\n$    echo4 \"I can not detect if your CRTL and build disk support hard links.\"\n$    echo4 \"I am disabling hard link support.\"\n$  ENDIF\n$!\n$  IF uselargefiles .OR. uselargefiles .eqs. \"define\"\n$  THEN\n$    IF (vms_ver .GES. \"8.2\") .AND. (F$ELEMENT(0, \"-\", archname) .NES. \"VMS_VAX\")\n$    THEN\n$      echo4 \"Largefile support enabled, so enabling standard stat support too.\"\n$      usestdstat = \"y\"\n$      echo4 -\n   \"Looking for the realpath() function to indicate symbolic link support...\"\n$      OS\n$      WS \"#include <stdlib.h>\"\n$      WS \"char *realpath(const char *file_name, char * resolved_name, ...);\"\n$      WS \"int main()\"\n$      WS \"{\"\n$      WS \"char result[255];\"\n$      WS \"realpath(\"\"foo\"\",result);\"\n$      WS \"exit(0);\"\n$      WS \"}\"\n$      CS\n$      GOSUB link_ok\n$      IF compile_status .EQ. good_compile .AND. link_status .EQ. good_link\n$      THEN\n$        echo -\n           \"Found realpath() which indicates symbolic link support is present.\"\n$\t d_lchown = \"define\"\n$\t d_lstat = \"define\"\n$\t d_readlink = \"define\"\n$\t d_symlink = \"define\"\n$!\t d_realpath = \"define\" ! Perl will not put it in the config.h file?\n$!\tPerl apparently does not use a built in realpath() on other platforms,\n$!      but there is a severe performance penatly on OpenVMS to use the Perl\n$!      script that implements a realpath().  The d_symlink symbol is used\n$!      as a replacement for the d_realpath since they are related and both\n$!      were activated by the CRTL at the same time.\n$!\n$\t ELSE\n$\t  echo4 \"Your system does not support symbolic links.\"\n$\t  echo4 \"I am disabling symbolic link support.\"\n$\tENDIF\n$    ELSE\n$       echo4 \"Your system does not support symbolic links.\"\n$       echo4 \"I am disabling symbolic link support.\"\n$    ENDIF\n$  ELSE\n$    IF (vms_ver .GES. \"8.2\") .AND. (F$ELEMENT(0, \"-\", archname) .NES. \"VMS_VAX\")\n$    THEN\n$       echo4 \"-Duselargefiles is required for symbolic link support.\"\n$       echo4 \"You did not specify that, so I am disabling symbolic link support.\"\n$    ENDIF\n$  ENDIF\n$!\n$!\n$! Check for grp.h -- should be 7.3 and later, but test to be sure\n$!\n$ tmp = \"grp.h\"\n$ GOSUB inhdr\n$ i_grp = tmp\n$!\n$! VMS V7.3-2 powered options\n$! We know that it is only available for V7.3-2 and later on 64 bit platforms.\n$!\n$  d_getgrgid_r = \"undef\"\n$  getgrgid_r_proto = \"0\"\n$  d_getgrnam_r = \"undef\"\n$  getgrnam_r_proto = \"0\"\n$  d_getpgid = \"undef\"\n$  d_getpgrp = \"undef\"\n$! N.B.  We already have home-grown thread-safe versions of\n$!       getpwnam and getpwuid -- no need to use CRTL versions\n$  d_getpwnam_r = \"undef\"\n$  getpwnam_r_proto = \"0\"\n$  d_getpwuid_r = \"undef\"\n$  getpwuid_r_proto = \"0\"\n$  d_setgrent = \"undef\"\n$  d_ttyname_r = \"undef\"\n$  ttyname_r_proto = \"0\"\n$  d_snprintf = \"undef\"\n$  d_vsnprintf = \"undef\"\n$  if (vms_ver .GES. \"7.3-2\") .AND. (F$ELEMENT(0, \"-\", archname) .NES. \"VMS_VAX\")\n$  then\n$    echo \"Found 64 bit OpenVMS ''vms_ver' -- will build with V7.3-2 routines\"\n$    d_getgrgid_r = \"define\"\n$    getgrgid_r_proto = \"1\"\n$    d_getgrnam_r = \"define\"\n$    getgrnam_r_proto = \"1\"\n$    if d_symlink .or. d_symlink .EQS. \"define\"\n$    then\n$!\t FIXME: Need to find how to activate this.\n$!       d_getpgid = \"define\"\n$!       d_getpgrp = \"define\"\n$    endif\n$    d_setgrent = \"define\"\n$    d_ttyname_r = \"define\"\n$    ttyname_r_proto = \"1\"\n$    d_snprintf = \"define\"\n$    d_vsnprintf = \"define\"\n$  endif\n$!\n$! VMS V7.3-2 powered options\n$! We know that it is only available for V7.3-2 and later on 64 bit platforms.\n$! Only implementing right now on 8.2 because that is what I am testing\n$! These functions may require POSIX UIDs/GIDs to be active, so I am\n$! not activating the features at this time, just preparing this file\n$! to easily use them in the future.\n$!\n$  d_seteuid = \"undef\"\n$  d_setpgid = \"undef\"\n$  d_setpgrp = \"undef\"\n$  d_setregid = \"undef\"\n$  d_setreuid = \"undef\"\n$  d_setsid = \"undef\"\n$  ! Disable this section for now.\n$!$  if (vms_ver .GES. \"8.2\") .AND. (F$ELEMENT(0, \"-\", archname) .NES. \"VMS_VAX\")\n$  if .NOT. 1\n$  then\n$    echo \"Found 64 bit OpenVMS ''vms_ver' -- will build with V7.3-2 UID setting routines\"\n$    d_seteuid = \"define\"\n$    d_setpgid = \"define\"\n$    d_setpgrp = \"define\"\n$    d_setregid = \"define\"\n$    d_setreuid = \"define\"\n$    d_setsid = \"define\"\n$  endif\n$!\n$! VMS V8 powered options\n$! We know that it is only available for 8.2 and later on 64 bit platforms.\n$!\n$  d_fstatvfs = \"undef\"\n$  d_statvfs = \"undef\"\n$  i_sysstatvfs = \"undef\"\n$  if (vms_ver .GES. \"8.2\") .AND. (F$ELEMENT(0, \"-\", archname) .NES. \"VMS_VAX\")\n$  then\n$    echo \"Found 64 bit OpenVMS ''vms_ver' -- will build with 8.2 routines\"\n$    d_fstatvfs = \"define\"\n$    d_statvfs = \"define\"\n$    i_sysstatvfs = \"define\"\n$  endif\n$!\n$! Check rand48 and its ilk\n$!\n$ echo4 \"Using our internal random number implementation...\"\n$!\n$ randfunc = \"Perl_drand48\"\n$ drand01 = \"Perl_drand48()\"\n$ seedfunc = \"Perl_drand48_init\"\n$ randbits = \"48\"\n$ randseedtype = \"U32\"\n$ d_drand48proto = \"define\"\n$!\n$! Done with compiler checks. Clean up.\n$ IF F$SEARCH(\"try.c\")  .NES.\"\" THEN DELETE/NOLOG/NOCONFIRM try.c;*\n$ IF F$SEARCH(\"try.obj\").NES.\"\" THEN DELETE/NOLOG/NOCONFIRM try.obj;*\n$ IF F$SEARCH(\"try.exe\").NES.\"\" THEN DELETE/NOLOG/NOCONFIRM try.exe;*\n$ IF F$SEARCH(\"try.opt\").NES.\"\" THEN DELETE/NOLOG/NOCONFIRM try.opt;*\n$ IF F$SEARCH(\"try.out\").NES.\"\" THEN DELETE/NOLOG/NOCONFIRM try.out;*\n$ IF ccname .EQS. \"CXX\"\n$ THEN\n$   CALL Cxx_demangler_cleanup\n$ ENDIF\n$!\n$! Some that are compiler or VMS version sensitive\n$!\n$! Gnu C stuff\n$ IF ccname .EQS. \"GCC\"\n$ THEN\n$   d_attribut=\"define\"\n$   vms_cc_type=\"gcc\"\n$ ELSE\n$   IF ccname .EQS. \"CXX\"\n$   THEN\n$      vms_cc_type=\"cxx\"\n$   ELSE\n$      vms_cc_type=\"cc\"\n$   ENDIF\n$   d_attribut=\"undef\"\n$ ENDIF\n$!\n$ d_bcmp=\"define\"\n$ d_getitimer=\"define\"\n$ d_gettimeod=\"define\"\n$ d_mmap=\"define\"\n$ d_mprotect=\"define\"\n$ d_munmap=\"define\"\n$ d_msync=\"define\"\n$ d_ualarm=\"define\"\n$ d_uname=\"define\"\n$! d_unsetenv=\"define\" ! Fix me - Activating requires changing VMS code\n$ d_unsetenv=\"undef\"   ! Change will be needed to allow GNV integration\n$ d_clearenv=\"undef\"\n$ d_usleep=\"define\"\n$ d_setitimer=\"define\"\n$ d_sigaction=\"define\"\n$ d_sigprocmask=\"define\"\n$ d_truncate=\"define\"\n$ d_wait4=\"define\"\n$ d_index=\"define\"\n$ pidtype=\"pid_t\"\n$ sig_name1=\"ZERO HUP INT QUIT ILL TRAP ABRT EMT FPE KILL BUS SEGV SYS PIPE\"\n$ sig_name2=\" ALRM TERM USR1 USR2 NUM18 NUM19 CHLD CONT STOP TSTP TTIN TTOU DEBUG\"\n$ IF (vms_ver .GES. \"7.3\")\n$ THEN\n$     sig_name2 = sig_name2 + \" NUM27 WINCH\"\n$ ENDIF\n$!* signal.h defines SIGRTMIN as 33 and SIGRTMAX as 64, but there is no \n$!* sigqueue function or other apparent means to do realtime signalling,\n$!* so let's not try to include the realtime range for now.\n$!* sig_name3=\" NUM29 NUM30 NUM31 NUM32 RTMIN NUM34 NUM35 NUM36 NUM37 NUM38 NUM39 NUM40 NUM41 NUM42 NUM43\"\n$!* sig_name4=\" NUM44 NUM45 NUM46 NUM47 NUM48 NUM49 NUM50 NUM51 NUM52 NUM53 NUM54 NUM55 NUM56 NUM57 NUM58\"\n$!* sig_name5=\" NUM59 NUM60 NUM61 NUMT62 NUM63 RTMAX\"\n$ sig_name = sig_name1 + sig_name2\n$ sig_num = \"\"\n$ sig_num_init = \"\"\n$ sig_name_init = \"\"\n$ sig_index = 0\n$!\n$ PARSE_SIG_NAME_LOOP:\n$!\n$   tmp = F$ELEMENT(sig_index, \" \", sig_name)\n$   IF F$LENGTH(F$EDIT(tmp,\"TRIM\")) .eq. 0 THEN GOTO END_SIG_NAME_LOOP\n$   sig_name_init = sig_name_init + \"\"\"''tmp'\"\",\"\n$   sig_num = sig_num + \"''sig_index' \"\n$   sig_num_init = sig_num_init + \"''sig_index',\"\n$   sig_index = sig_index + 1\n$   GOTO PARSE_SIG_NAME_LOOP\n$!\n$ END_SIG_NAME_LOOP:\n$!\n$   sig_name_init = sig_name_init + \"0\"\n$   sig_num_init = sig_num_init + \"0\"\n$   sig_size = \"''sig_index'\"\n$   sig_index = sig_index - 1\n$   sig_count = \"''sig_index'\"\n$   uidtype=\"uid_t\"\n$   d_pathconf=\"define\"\n$   d_fpathconf=\"define\"\n$   d_sysconf=\"define\"\n$   d_sigsetjmp=\"define\"\n$!\n$!: see if tzname[] exists\n$ OS\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <time.h>\"\n$ WS \"int main() { extern short tzname[]; printf(\"\"%hd\"\", tzname[0]); }\"\n$ CS\n$ GOSUB compile_ok\n$ IF compile_status .EQ. good_compile\n$ THEN\n$   d_tzname = \"undef\"\n$   echo4 \"tzname[] NOT found.\"\n$ ELSE\n$   d_tzname = \"define\"\n$   echo4 \"tzname[] found.\"\n$ ENDIF\n$ IF F$SEARCH(\"try.obj\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM try.obj;\n$!\n$ IF d_gethname .EQS. \"undef\" .AND. d_uname .EQS. \"undef\"\n$ THEN\n$   d_phostname=\"define\"\n$ ELSE\n$   d_phostname=\"undef\"\n$ ENDIF\n$!\n$! Dec C alone\n$ IF ccname .EQS. \"DEC\" .OR. ccname .EQS. \"CXX\"\n$ THEN\n$   vms_cc_type=\"decc\"\n$ ENDIF\n$ d_faststdio=\"define\"\n$ d_locconv=\"define\"\n$ d_mblen=\"define\"\n$ d_mbstowcs=\"define\"\n$ d_mbtowc=\"define\"\n$ d_mktime=\"define\"\n$ d_nl_langinfo=\"define\"\n$ d_setlocale=\"define\"\n$ d_stdiobase=\"define\"\n$ d_stdio_cnt_lval=\"define\"\n$ d_stdio_ptr_lval=\"define\"\n$ d_stdstdio=\"define\"\n$ d_strcoll=\"define\"\n$ d_strxfrm=\"define\"\n$ i_langinfo=\"define\"\n$ i_locale=\"define\"\n$ d_stdio_ptr_lval_sets_cnt=\"undef\"\n$ d_stdio_ptr_lval_nochange_cnt=\"define\"\n$ usefaststdio=\"undef\"\n$!\n$! Sockets?\n$ if Has_Dec_C_Sockets\n$ THEN\n$   d_vms_do_sockets=\"define\"\n$   d_htonl=\"define\"\n$   d_socket=\"define\"\n$   d_sockpair = \"undef\"\n$   if (vms_ver .GES. \"8.2\") .AND. (F$ELEMENT(0, \"-\", archname) .NES. \"VMS_VAX\")\n$   then\n$     echo \"Found 64 bit OpenVMS 8.2, will build with socketpair support\"\n$     d_sockpair = \"define\"\n$   endif\n$   d_select=\"define\"\n$   netdb_hlen_type=\"int\"\n$   netdb_host_type=\"char *\"\n$   netdb_name_type=\"char *\"\n$   netdb_net_type=\"long\"\n$   d_gethbyaddr=\"define\"\n$   d_gethbyname=\"define\"\n$   d_getnbyaddr=\"define\"\n$   d_getnbyname=\"define\"\n$   d_getpbynumber=\"define\"\n$   d_getpbyname=\"define\"\n$   d_getsbyport=\"define\"\n$   d_getsbyname=\"define\"\n$   d_gethostprotos=\"define\"\n$   d_getnetprotos=\"define\"\n$   d_getprotoprotos=\"define\"\n$   d_getservprotos=\"define\"\n$   socksizetype=\"size_t\"\n$ ELSE\n$   d_vms_do_sockets=\"undef\"\n$   d_htonl=\"undef\"\n$   d_socket=\"undef\"\n$   d_socketpair = \"undef\"\n$   d_select=\"undef\"\n$   netdb_hlen_type=\"int\"\n$   netdb_host_type=\"char *\"\n$   netdb_name_type=\"char *\"\n$   netdb_net_type=\"long\"\n$   d_gethbyaddr=\"undef\"\n$   d_gethbyname=\"undef\"\n$   d_getnbyaddr=\"undef\"\n$   d_getnbyname=\"undef\"\n$   d_getpbynumber=\"undef\"\n$   d_getpbyname=\"undef\"\n$   d_getsbyport=\"undef\"\n$   d_getsbyname=\"undef\"\n$   d_gethostprotos=\"undef\"\n$   d_getnetprotos=\"undef\"\n$   d_getprotoprotos=\"undef\"\n$   d_getservprotos=\"undef\"\n$   socksizetype=\"undef\"\n$ ENDIF\n$! Threads\n$ d_oldpthreads=\"undef\"\n$ IF use_threads\n$ THEN\n$   usethreads=\"define\"\n$   d_pthreads_created_joinable=\"define\"\n$ ELSE\n$   usethreads=\"undef\"\n$   d_pthreads_created_joinable=\"undef\"\n$ ENDIF\n$! \n$! new (5.005_62++) typedefs for primitives\n$!\n$ echo \"Choosing the C types to be used for Perl's internal types...\"\n$ ivtype=\"long\"\n$ uvtype=\"unsigned long\"\n$ i8type=\"char\"\n$ u8type=\"unsigned char\"\n$ i16type=\"short\"\n$ u16type=\"unsigned short\"\n$ i32type=\"int\"\n$ u32type=\"unsigned int\"\n$ i64type=\"long long\"\n$ u64type=\"unsigned long long\"\n$ nvtype=\"double\"\n$!\n$ IF use64bitint .OR. use64bitint .EQS. \"define\"\n$ THEN\n$   ivtype = \"''i64type'\"\n$   uvtype = \"''u64type'\"\n$ ELSE\n$   i64size=\"undef\"\n$   u64size=\"undef\"\n$ ENDIF\n$!\n$ IF uselongdouble .OR. uselongdouble .EQS. \"define\"\n$ THEN\n$   nvtype=\"long double\"\n$ ENDIF\n$!\n$ tmp = \"''ivtype'\"\n$ GOSUB type_size_check\n$ ivsize = tmp\n$ IF use64bitint .OR. use64bitint .EQS. \"define\" THEN i64size = tmp\n$ IF ivtype .eqs. \"long\"\n$ THEN longsize = tmp\n$ ELSE\n$   tmp = \"long\"\n$   GOSUB type_size_check\n$   longsize = tmp\n$ ENDIF\n$!\n$ tmp = \"''uvtype'\"\n$ GOSUB type_size_check\n$ uvsize = tmp\n$ IF use64bitint .OR. use64bitint .EQS. \"define\" THEN u64size = tmp\n$!\n$ tmp = \"''i8type'\"\n$ GOSUB type_size_check\n$ i8size = tmp\n$!\n$ tmp = \"''u8type'\"\n$ GOSUB type_size_check\n$ u8size = tmp\n$!\n$ tmp = \"''i16type'\"\n$ GOSUB type_size_check\n$ i16size = tmp\n$ IF i16type .eqs. \"short\"\n$ THEN shortsize = tmp\n$ ELSE\n$   tmp = \"short\"\n$   gosub type_size_check\n$   shortsize = tmp\n$ ENDIF\n$!\n$ tmp = \"''u16type'\"\n$ GOSUB type_size_check\n$ u16size = tmp\n$!\n$ tmp = \"''i32type'\"\n$ GOSUB type_size_check\n$ i32size = tmp\n$ IF i32type .eqs. \"int\"\n$ THEN intsize = tmp\n$ ELSE\n$   tmp = \"int\"\n$   gosub type_size_check\n$   intsize = tmp\n$ ENDIF\n$!\n$ tmp = \"''u32type'\"\n$ gosub type_size_check\n$ u32size = tmp\n$!\n$ tmp = \"''nvtype'\"\n$ GOSUB type_size_check\n$ nvsize = tmp\n$!\n$ echo \"(IV will be \"\"''ivtype'\"\", ''ivsize' bytes)\"\n$ echo \"(UV will be \"\"''uvtype'\"\", ''uvsize' bytes)\"\n$ echo \"(NV will be \"\"''nvtype'\"\", ''nvsize' bytes)\"\n$!\n$ d_nv_preserves_uv = \"undef\"\n$ echo4 \"Checking how many bits of your UVs your NVs can preserve...\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main() {\"\n$ WS \"    ''uvtype' u = 0;\"\n$ WS \"    int     n = 8 * ''uvsize';\"\n$ WS \"    int     i;\"\n$ WS \"    for (i = 0; i < n; i++) {\"\n$ WS \"      u = u << 1 | (''uvtype')1;\"\n$ WS \"      if ((''uvtype')(''nvtype')u != u)\"\n$ WS \"        break;\"\n$ WS \"    }\"\n$ WS \"    printf(\"\"%d\\n\"\", i);\"\n$ WS \"    exit(0);\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile\n$ nv_preserves_uv_bits = tmp\n$ IF F$INTEGER(nv_preserves_uv_bits) .GE. (F$INTEGER(uvsize) * 8)\n$ THEN\n$   d_nv_preserves_uv = \"define\"\n$   echo \"Your NVs can preserve all ''nv_preserves_uv_bits' bits of your UVs.\"\n$ ELSE\n$   d_nv_preserves_uv = \"undef\"\n$   echo \"Your NVs can preserve only ''nv_preserves_uv_bits' bits of your UVs.\"\t\n$ ENDIF\n$!\n$ nv_overflows_integers_at = \"0\"\n$ echo4 \"Checking to find the largest integer value your NVs can hold...\"\n$ OS\n$ WS \"#include <stdio.h>\"\n$ WS \"\"\n$ WS \"typedef ''nvtype' NV;\"\n$ WS \"\"\n$ WS \"int\"\n$ WS \"main() {\"\n$ WS \"  NV value = 2;\"\n$ WS \"  int count = 1;\"\n$ WS \"\"\n$ WS \"  while(count < 256) {\"\n$ WS \"    volatile NV up = value + 1.0;\"\n$ WS \"    volatile NV negated = -value;\"\n$ WS \"    volatile NV down = negated - 1.0;\"\n$ WS \"    volatile NV got_up = up - value;\"\n$ WS \"    int up_good = got_up == 1.0;\"\n$ WS \"    int got_down = down - negated;\"\n$ WS \"    int down_good = got_down == -1.0;\"\n$ WS \"\"\n$ WS \"    if (down_good != up_good) {\"\n$ WS \"      fprintf(stderr,\"\n$ WS \"              \"\"Inconsistency - up %d %f; down %d %f; for 2**%d (%.20f)\\n\"\",\"\n$ WS \"              up_good, (double) got_up, down_good, (double) got_down,\"\n$ WS \"              count, (double) value);\"\n$ WS \"      return 1;\"\n$ WS \"    }\"\n$ WS \"    if (!up_good) {\"\n$ WS \"      while (1) {\"\n$ WS \"        if (count > 8) {\"\n$ WS \"          count -= 8;\"\n$ WS \"          fputs(\"\"256.0\"\", stdout);\"\n$ WS \"        } else {\"\n$ WS \"          count--;\"\n$ WS \"          fputs(\"\"2.0\"\", stdout);\"\n$ WS \"        }\"\n$ WS \"        if (!count) {\"\n$ WS \"          puts(\"\"\"\");\"\n$ WS \"          return 0;\"\n$ WS \"        }\"\n$ WS \"        fputs(\"\"*\"\", stdout);\"\n$ WS \"      }\"\n$ WS \"    }\"\n$ WS \"    value *= 2;\"\n$ WS \"    ++count;\"\n$ WS \"  }\"\n$ WS \"  fprintf(stderr, \"\"Cannot overflow integer range, even at 2**%d (%.20f)\\n\"\",\"\n$ WS \"          count, (double) value);\"\n$ WS \"  return 1;\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile\n$ IF F$LENGTH(tmp) .GT. 0\n$ THEN\n$   IF F$EXTRACT(0,1,tmp) .EQS. \"2\"\n$   THEN\n$     echo \"The largest integer your NVs can preserve is equal to ''tmp'\"\n$     nv_overflows_integers_at = tmp\n$   ELSE\n$     echo \"Cannot determine the largest integer value your NVs can hold, unexpected output\"\n$     echo \"''tmp'\"\n$   ENDIF\n$ ELSE\n$   echo \"Cannot determine the largest integer value your NVs can hold\"\n$ ENDIF\n$!\n$! Check for signbit (must already know nvtype)\n$!\n$ echo4 \"Checking to see if you have signbit() available to work on ''nvtype'...\"\n$ OS\n$ WS \"#if defined(__DECC) || defined(__DECCXX)\"\n$ WS \"#include <stdlib.h>\"\n$ WS \"#endif\"\n$ WS \"#include <fp.h>\"\n$ WS \"#include <stdio.h>\"\n$ WS \"int main()\"\n$ WS \"{\"\n$ WS \"    ''nvtype' x = 0.0;\"\n$ WS \"    ''nvtype' y = -0.0;\"\n$ WS \"    if ((signbit(x) == 0) && (signbit(y) != 0))\"\n$ WS \"        printf(\"\"1\\n\"\");\"\n$ WS \"    else\"\n$ WS \"        printf(\"\"0\\n\"\");\"\n$ WS \"}\"\n$ CS\n$ GOSUB compile\n$ IF tmp .EQS. \"1\" \n$ THEN \n$     d_signbit = \"define\"\n$     echo4 \"Yes.\"\n$ ELSE\n$     d_signbit = \"undef\"\n$     echo4 \"Nope.\"\n$ ENDIF\n$!\n$ echo4 \"Checking if kill() uses SYS$FORCEX, can't be called from a signal handler,\"\n$ echo4 \"or fails to handle a signal value of zero...\"\n$ kill_by_sigprc = \"undef\"\n$ OS\n$ WS \"#include <stdio.h>\"\n$ WS \"#include <signal.h>\"\n$ WS \"#include <unistd.h>\"\n$ WS \"void handler1(int s) { printf(\"\"%d\"\",s); kill(getpid(),2); }\"\n$ WS \"void handler2(int s) { printf(\"\"%d\"\",s); }\"\n$ WS \"main(){\"\n$ WS \"    printf(\"\"0\"\");\"\n$ WS \"    signal(1,handler1);\"\n$ WS \"    signal(2,handler2);\"\n$ WS \"    kill(getpid(),1);\"\n$ WS \"    sleep(1);\"\n$ WS \"    kill(getpid(),0);\"\n$ WS \"    printf(\"\"3\\n\"\");\"\n$ WS \"}\"\n$ CS\n$ ON ERROR THEN CONTINUE\n$ GOSUB compile\n$ IF tmp .NES. \"0123\"\n$ THEN \n$   echo4 \"Yes, it has at least one of those limitations.\"\n$   echo4 \"Checking whether we can use SYS$SIGPRC instead...\"\n$   OS\n$   WS \"#include <stdio.h>\"\n$   WS \"#include <lib$routines.h>\"\n$   WS \"unsigned long code = 0;\"\n$   WS \"#define sys$sigprc SYS$SIGPRC\"\n$   WS \"#ifdef __cplusplus\"\n$   WS \"extern \"\"C\"\" {\"\n$   WS \"#endif\"\n$   WS \"    int sys$sigprc(unsigned int *,void *,unsigned int);\"\n$   WS \"#ifdef __cplusplus\"\n$   WS \"}\"\n$   WS \"#endif\"\n$   WS \"int handler(unsigned long *args) {\"\n$   WS \"    code = args[1];\"\n$   WS \"    return 1;\"\n$   WS \"}\"\n$   WS \"main() { \"\n$   WS \"    int iss;\"\n$   WS \"    lib$establish(handler);\"\n$   WS \"    iss = sys$sigprc(0,0,0x1234);\"\n$   WS \"    iss =  ((iss&1)==1 && code == 0x1234);\" \n$   WS \"    printf(\"\"%d\\n\"\",iss);\"\n$   WS \"}\"\n$   CS\n$   ON ERROR THEN CONTINUE\n$   GOSUB compile\n$   IF tmp .EQS. \"1\"\n$   THEN\n$       echo4 \"Yep, we can.\"\n$       kill_by_sigprc = \"define\"\n$!\n$   ELSE\n$       echo4 \"Nope, we can't.\"\n$   ENDIF\n$ ELSE\n$   echo4 \"Nope, it doesn't.\"\n$ ENDIF\n$ DELETE/SYMBOL tmp\n$!\n$! Finally the composite ones. All config\n$!\n$ myuname=\"''osname' ''myname' ''osvers' ''F$EDIT(hwname, \"TRIM\")'\"\n$!\n$ IF ccname .EQS. \"DEC\"\n$ THEN\n$   ccflags=\"/Include=[]/Standard=Relaxed_ANSI/Prefix=All/Obj=''obj_ext' ''ccflags'\"\n$ ENDIF\n$ IF ccname .EQS. \"CXX\"\n$ THEN\n$   ccflags=\"/Include=[]/Standard=ANSI/Prefix=All/Obj=''obj_ext' ''ccflags'\"\n$ ENDIF\n$ IF use_vmsdebug_perl\n$ THEN\n$   optimize=\"/List/Debug/NoOpt\"\n$   ldflags=\"/Debug/Trace/Map\"\n$   dbgprefix = \"DBG\"\n$ ELSE\n$   optimize= \"/NoList\"\n$   ldflags=\"/NoTrace/NoMap\"\n$   dbgprefix = \"\"\n$ ENDIF\n$!\n$! Okay, we've got everything configured. Now go write out a config.sh.\n$ basename_config_sh = F$PARSE(config_sh,,,\"NAME\",)+F$PARSE(config_sh,,,\"TYPE\",)\n$ echo4 \"Creating ''basename_config_sh'...\"\n$ open/write CONFIG 'config_sh'\n$ WC := write CONFIG\n$!\n$! ##BEGIN WRITE NEW CONSTANTS HERE##\n$!\n$ WC \"#!/bin/sh\"\n$ WC \"#\"\n$ WC \"# This file was produced by Configure.COM on a ''osname' system.\"\n$ WC \"#\"\n$ WC \"# Package name      : ''package'\"\n$ WC \"# Source directory  : ''src'\"\n$ WC \"# Configuration time: \" + cf_time\n$ WC \"# Configuration by  : \" + cf_by\n$ WC \"# Target system     : \" + myuname\n$ WC \"\"\n$ WC \"Makefile_SH='\" + Makefile_SH + \"'\"\n$ WC \"Mcc='\" + Mcc + \"'\"\n$ WC \"PERL_REVISION='\" + revision + \"'\"\n$ WC \"PERL_VERSION='\" + patchlevel + \"'\" \n$ WC \"PERL_SUBVERSION='\" + subversion + \"'\" \n$ WC \"PERL_API_REVISION='\" + api_revision + \"'\"\n$ WC \"PERL_API_VERSION='\" + api_version + \"'\" \n$ WC \"PERL_API_SUBVERSION='\" + api_subversion + \"'\"\n$ WC \"PERL_PATCHLEVEL='\" + perl_patchlevel + \"'\"\n$ WC \"perl_patchlevel='\" + perl_patchlevel + \"'\"\n$ WC \"PERL_CONFIG_SH='true'\"\n$ WC \"_a='\" + lib_ext + \"'\"\n$ WC \"_exe='\" + exe_ext + \"'\"\n$ WC \"_o='\" + obj_ext + \"'\"\n$ WC \"alignbytes='\" + alignbytes + \"'\"\n$ WC \"aphostname='write sys$output f$edit(f$getsyi(\\\"\"SCSNODE\\\"\"),\\\"\"TRIM,LOWERCASE\\\"\")'\"\n$ WC \"api_revision='\" + api_revision + \"'\"\n$ WC \"api_subversion='\" + api_subversion + \"'\"\n$ WC \"api_version='\" + api_version + \"'\" \n$ WC \"api_versionstring='\" + version + \"'\" \n$ WC \"ar='\" + \"'\"\n$ WC \"archlib='\" + archlib + \"'\"\n$ WC \"archlibexp='\" + archlibexp + \"'\"\n$ WC \"archname='\" + archname + \"'\"\n$ WC \"baserev='\" + baserev + \"'\"\n$ WC \"bin='\" + bin + \"'\"\n$ WC \"binexp='\" + binexp + \"'\"\n$ WC \"bootstrap_charset='undef'\"\n$ WC \"builddir='\" + builddir + \"'\"\n$ WC \"byteorder='1234'\"\n$ WC \"castflags='0'\"\n$ WC \"cc='\" + perl_cc + \"'\"\n$ WC \"cccdlflags='\" + cccdlflags + \"'\"\n$ WC \"ccdlflags='\" + ccdlflags + \"'\"\n$ IF uselargefiles .OR. uselargefiles .EQS. \"define\"\n$ THEN\n$    IF usestdstat .OR. usestdstat .EQS. \"define\"\n$    THEN\n$\tccdefines = \"_USE_STD_STAT=1\"\n$    ELSE\n$\tccdefines = \"_LARGEFILE=1\"\n$    ENDIF\n$ ELSE\n$     ccdefines = \"\"\n$ ENDIF\n$ IF ccdefines .NES. \"\"\n$ THEN\n$   WC \"ccflags='\" + ccflags + \"/Define=\" + ccdefines + \"'\"\n$ ELSE\n$   WC \"ccflags='\" + ccflags + \"'\"\n$ ENDIF\n$ WC \"ccflags_uselargefiles='\" + \"'\"\n$ WC \"ccname='\" + ccname + \"'\"\n$ WC \"ccversion='\" + ccversion + \"'\"\n$ WC \"cf_by='\" + cf_by + \"'\"\n$ WC \"cf_email='\" + cf_email + \"'\"\n$ WC \"cf_time='\" + cf_time + \"'\"\n$ WC \"charbits='8'\"\n$ WC \"config_args='\" + config_args + \"'\"\n$ WC \"config_sh='\" + config_sh + \"'\"\n$ WC \"cpp_stuff='\" + cpp_stuff + \"'\"\n$ WC \"cpplast='\" + cpplast + \"'\"\n$ WC \"cppminus='\" + cppminus + \"'\"\n$ WC \"cpprun='\" + cpprun + \"'\"\n$ WC \"cppstdin='\" + cppstdin + \"'\"\n$ IF use64bitint .OR. use64bitint .EQS. \"define\"\n$ THEN\n$!  gcvt() does not work for > 16 decimal places; fallback to sprintf\n$   WC \"d_Gconvert='sprintf((b),\"\"%.*\" + (nvgformat-\"\"\"\") + \",(n),(x))'\"\n$ ELSE\n$   WC \"d_Gconvert='my_gconvert(x,n,t,b)'\"\n$ ENDIF\n$ WC \"d_PRIEUldbl='\" + d_PRIEUldbl + \"'\"\n$ WC \"d_PRIFUldbl='\" + d_PRIFUldbl + \"'\"\n$ WC \"d_PRIGUldbl='\" + d_PRIGUldbl + \"'\"\n$ WC \"d_PRIXU64='\" + d_PRIXU64 + \"'\"\n$ WC \"d_PRId64='\" + d_PRId64 + \"'\"\n$ WC \"d_PRIeldbl='\" + d_PRIeldbl + \"'\"\n$ WC \"d_PRIfldbl='\" + d_PRIfldbl + \"'\"\n$ WC \"d_PRIgldbl='\" + d_PRIgldbl + \"'\"\n$ WC \"d_PRIi64='\" + d_PRIi64 + \"'\"\n$ WC \"d_PRIo64='\" + d_PRIo64 + \"'\"\n$ WC \"d_PRIu64='\" + d_PRIu64 + \"'\"\n$ WC \"d_PRIx64='\" + d_PRIx64 + \"'\"\n$ WC \"d_SCNfldbl='\" + d_SCNfldbl + \"'\"\n$ WC \"d__fwalk='undef'\"\n$ WC \"d_access='\" + d_access + \"'\"\n$ WC \"d_accessx='undef'\"\n$ WC \"d_acosh='\" + d_acosh + \"'\"\n$ WC \"d_aintl='undef'\"\n$ WC \"d_alarm='define'\"\n$ WC \"d_archlib='define'\"\n$ WC \"d_asctime64='undef'\"\n$ WC \"d_asinh='\" + d_asinh + \"'\"\n$ WC \"d_atanh='\" + d_atanh + \"'\"\n$ WC \"d_atolf='\" + d_atolf + \"'\"\n$ WC \"d_atoll='\" + d_atoll + \"'\"\n$ WC \"d_attribute_format='\" + d_attribut + \"'\"\n$ WC \"d_attribute_deprecated='undef'\"\n$ WC \"d_attribute_malloc='undef'\"\n$ WC \"d_attribute_nonnull='undef'\"\n$ WC \"d_attribute_noreturn='undef'\"\n$ WC \"d_attribute_pure='undef'\"\n$ WC \"d_attribute_unused='undef'\"\n$ WC \"d_attribute_warn_unused_result='undef'\"\n$ WC \"d_prctl='undef'\"\n$ WC \"d_prctl_set_name='undef'\"\n$ WC \"d_printf_format_null='undef'\"\n$ WC \"d_bcmp='\" + d_bcmp + \"'\"\n$ WC \"d_bcopy='\" + d_bcopy + \"'\"\n$ WC \"d_bincompat3='undef'\"\n$ WC \"d_bsd='undef'\"\n$ WC \"d_bsdgetpgrp='undef'\"\n$ WC \"d_bsdsetpgrp='undef'\"\n$ WC \"d_builtin_choose_expr='undef'\" ! GCC only\n$ WC \"d_builtin_expect='undef'\" ! GCC only\n$ WC \"d_bzero='\" + d_bzero + \"'\"\n$ WC \"d_casti32='define'\"\n$ WC \"d_castneg='define'\"\n$ WC \"d_cbrt='\" + d_cbrt + \"'\"\n$ WC \"d_charvspr='undef'\"\n$ WC \"d_chown='define'\"\n$ WC \"d_chroot='undef'\"\n$ WC \"d_chsize='undef'\"\n$ WC \"d_class='undef'\"\n$ WC \"d_closedir='define'\"\n$ WC \"d_cmsghdr_s='undef'\"\n$ WC \"d_const='define'\"\n$ WC \"d_copysign='\" + d_copysign + \"'\"\n$ WC \"d_copysignl='define'\"\n$ WC \"d_cplusplus='\" + d_cplusplus + \"'\"\n$ WC \"d_crypt='define'\"\n$ WC \"d_csh='undef'\"\n$ WC \"d_ctermid='define'\"\n$ WC \"d_ctime64='undef'\"\n$ WC \"d_cuserid='define'\"\n$ WC \"d_c99_variadic_macros='undef'\"\n$ WC \"d_dbl_dig='define'\"\n$ WC \"d_dbminitproto='undef'\"\n$ WC \"d_difftime='define'\"\n$ WC \"d_difftime64='undef'\"\n$ WC \"d_dir_dd_fd='undef'\"\n$ WC \"d_dirfd='undef'\"\n$ WC \"d_dirnamlen='define'\"\n$ WC \"d_dladdr='undef'\"\n$ IF (\"''F$EXTRACT(1,3, F$GETSYI(\"\"VERSION\"\"))'\".GES.\"7.2\")\n$ THEN\n$   WC \"d_dlerror='define'\"\n$   WC \"d_dlopen='define'\"\n$ ELSE\n$   WC \"d_dlerror='undef'\"\n$   WC \"d_dlopen='undef'\"\n$ ENDIF\n$ WC \"d_dlsymun='undef'\"\n$ WC \"d_backtrace='undef'\"\n$ WC \"d_dosuid='undef'\"\n$ WC \"d_drand48proto='\" + d_drand48proto + \"'\"\n$ WC \"d_dup2='define'\"\n$ WC \"d_eaccess='undef'\"\n$ WC \"d_endgrent='define'\"\n$ WC \"d_endhent='\" + d_endhent + \"'\"\n$ WC \"d_endnent='\" + d_endnent + \"'\"\n$ WC \"d_endpent='\" + d_endpent + \"'\"\n$ WC \"d_endpwent='define'\"\n$ WC \"d_endsent='\" + d_endsent + \"'\"\n$ WC \"d_eofnblk='undef'\"\n$ WC \"d_erf='\" + d_erf + \"'\"\n$ WC \"d_erfc='\" + d_erfc + \"'\"\n$ WC \"d_eunice='undef'\"\n$ WC \"d_exp2='\" + d_exp2 + \"'\"\n$ WC \"d_expm1='\" + d_expm1 + \"'\"\n$ WC \"d_fchmod='undef'\"\n$ WC \"d_fchdir='undef'\"\n$ WC \"d_fchown='undef'\"\n$ WC \"d_fcntl='\" + d_fcntl + \"'\"\n$ WC \"d_fcntl_can_lock='\" + d_fcntl_can_lock + \"'\"\n$ WC \"d_fd_set='\" + d_fd_set + \"'\"\n$ WC \"d_fd_macros='define'\"\n$ WC \"d_fdim='\" + d_fdim + \"'\"\n$ WC \"d_fds_bits='define'\"\n$ WC \"d_fegetround='undef'\"\n$ WC \"d_fgetpos='define'\"\n$ IF F$ELEMENT(0, \"-\", archname) .NES. \"VMS_VAX\" .AND. use_ieee_math\n$ THEN\n$   WC \"d_finite='define'\"\n$   WC \"d_finitel='define'\"\n$ ELSE\n$   WC \"d_finite='undef'\"\n$   WC \"d_finitel='undef'\"\n$ ENDIF\n$ WC \"d_flexfnam='define'\"\n$ WC \"d_flock='undef'\"\n$ WC \"d_flockproto='undef'\"\n$ WC \"d_fma='\" + d_fma + \"'\"\n$ WC \"d_fmax='\" + d_fmax + \"'\"\n$ WC \"d_fmin='\" + d_fmin + \"'\"\n$ WC \"d_fork='undef'\"\n$ WC \"d_fp_class='undef'\"\n$ WC \"d_fp_classify='\" + d_fp_classify + \"'\"\n$ WC \"d_fp_classify='undef'\"\n$ WC \"d_fp_classl='undef'\"\n$ WC \"d_fpathconf='\" + d_fpathconf + \"'\"\n$ WC \"d_fpclass='undef'\"\n$ WC \"d_fpclassify='undef'\"\n$ WC \"d_fpclassl='undef'\"\n$ WC \"d_fpgetround='undef'\"\n$ WC \"d_fpos64_t='\" + d_fpos64_t + \"'\"\n$ WC \"d_frexpl='\" + d_frexpl + \"'\"\n$ WC \"d_fs_data_s='undef'\"\n$ WC \"d_fseeko='\" + d_fseeko + \"'\"\n$ WC \"d_fsetpos='define'\"\n$ WC \"d_fstatfs='undef'\"\n$ WC \"d_fstatvfs='\" + d_fstatvfs + \"'\"\n$ WC \"d_fsync='define'\"\n$ WC \"d_ftello='\" + d_ftello + \"'\"\n$ WC \"d_ftime='define'\"\n$ WC \"d_futimes='undef'\"\n$ WC \"d_gdbmndbm_h_uses_prototypes='undef'\"\n$ WC \"d_gdbm_ndbm_h_uses_prototypes='undef'\"\n$ IF vms_ver .GES. \"7.3\"\n$ THEN\n$   WC \"d_getaddrinfo='define'\"\n$ ELSE\n$   WC \"d_getaddrinfo='undef'\"\n$ ENDIF\n$ WC \"d_getcwd='define'\"\n$ WC \"d_getespwnam='undef'\"\n$ WC \"d_getfsstat='undef'\"\n$ WC \"d_getgrent='define'\"\n$ WC \"d_getgrps='undef'\"\n$ WC \"d_gethbyaddr='\" + d_gethbyaddr + \"'\"\n$ WC \"d_gethbyname='\" + d_gethbyname + \"'\"\n$ WC \"d_gethent='\" + d_gethent + \"'\"\n$ WC \"d_gethname='\" + d_gethname + \"'\"\n$ WC \"d_gethostprotos='\" + d_gethostprotos + \"'\"\n$ WC \"d_getitimer='\" + d_getitimer + \"'\"\n$ WC \"d_getlogin='define'\"\n$ WC \"d_getmnt='undef'\"\n$ WC \"d_getmntent='undef'\"\n$ IF vms_ver .GES. \"7.3\"\n$ THEN\n$   WC \"d_getnameinfo='define'\"\n$ ELSE\n$   WC \"d_getnameinfo='undef'\"\n$ ENDIF\n$ WC \"d_getnbyaddr='\" + d_getnbyaddr + \"'\"\n$ WC \"d_getnbyname='\" + d_getnbyname + \"'\"\n$ WC \"d_getnent='\" + d_getnent + \"'\"\n$ WC \"d_getnetprotos='\" + d_getnetprotos + \"'\"\n$ WC \"d_getpagsz='undef'\"\n$ WC \"d_getpbyname='\" + d_getpbyname + \"'\"\n$ WC \"d_getpbynumber='\" + d_getpbynumber + \"'\"\n$ WC \"d_getpent='\" + d_getpent + \"'\"\n$ WC \"d_getpgid='\" + d_getpgid + \"'\"\n$ WC \"d_getpgrp2='undef'\"\n$ WC \"d_getpgrp='\" + d_getpgrp + \"'\"\n$ WC \"d_getppid='\" + d_getppid + \"'\"\n$ WC \"d_getprior='undef'\"\n$ WC \"d_getprotoprotos='\" + d_getprotoprotos + \"'\"\n$ WC \"d_getprpwnam='undef'\"\n$ WC \"d_getpwent='define'\"\n$ WC \"d_getsbyname='\" + d_getsbyname + \"'\"\n$ WC \"d_getsbyport='\" + d_getsbyport + \"'\"\n$ WC \"d_getsent='\" + d_getsent + \"'\"\n$ WC \"d_getservprotos='\" + d_getservprotos + \"'\"\n$ WC \"d_getspnam='undef'\"\n$ WC \"d_gettimeod='\" + d_gettimeod + \"'\"\n$ WC \"d_gmtime64='undef'\"\n$ WC \"d_gnulibc='undef'\"\n$ WC \"d_grpasswd='undef'\"\n$ WC \"d_hasmntopt='undef'\"\n$ WC \"d_htonl='\" + d_htonl + \"'\"\n$ WC \"d_hypot='\" + d_hypot + \"'\"\n$ WC \"d_ilogb='\" + d_ilogb + \"'\"\n$ WC \"d_ilogbl='undef'\"\n$ WC \"d_inc_version_list='undef'\"\n$ WC \"d_index='\" + d_index + \"'\"\n$ WC \"d_inetaton='define'\"\n$ WC \"d_inetntop='define'\"\n$ WC \"d_inetpton='define'\"\n$ WC \"d_int64_t='\" + d_int64_t + \"'\"\n$ WC \"d_ip_mreq='define'\"\n$ WC \"d_ip_mreq_source='undef'\"\n$ WC \"d_ipv6_mreq='define'\"\n$ WC \"d_ipv6_mreq_source='undef'\"\n$ WC \"d_isascii='define'\"\n$ WC \"d_isblank='undef'\"\n$ WC \"d_isfinite='undef'\"\n$ WC \"d_isfinitel='undef'\"\n$ WC \"d_isinf='undef'\"\n$ WC \"d_isinfl='undef'\"\n$ WC \"d_isless='undef'\"\n$ WC \"d_isnan='\" + d_isnan + \"'\"\n$ WC \"d_isnanl='\" + d_isnanl + \"'\"\n$ WC \"d_isnormal='\" + d_isnormal + \"'\"\n$ WC \"d_j0='\" + d_j0 + \"'\"\n$ WC \"d_j0l='undef'\"\n$ WC \"d_killpg='undef'\"\n$ WC \"d_lchown='\" + d_lchown + \"'\"\n$ WC \"d_ldbl_dig='define'\"\n$ WC \"d_ldexpl='\" + d_ldexpl + \"'\"\n$ WC \"d_lgamma='\" + d_lgamma + \"'\"\n$ WC \"d_libm_lib_version='undef'\"\n$ WC \"d_link='\" + d_link + \"'\"\n$ WC \"d_llrint='undef'\"\n$ WC \"d_llrintl='undef'\"\n$ WC \"d_llround='undef'\"\n$ WC \"d_llroundl='undef'\"\n$ WC \"d_llseek='undef'\"\n$ WC \"d_localtime64='undef'\"\n$ WC \"d_locconv='\" + d_locconv + \"'\"\n$ WC \"d_lc_monetary_2008='undef'\"\n$ WC \"d_lockf='undef'\"\n$ WC \"d_log1p='\" + d_log1p + \"'\"\n$ WC \"d_log2='\" + d_log2 + \"'\"\n$ WC \"d_logb='\" + d_logb + \"'\"\n$ WC \"d_longdbl='\" + d_longdbl + \"'\"\n$ WC \"d_longlong='\" + d_longlong + \"'\"\n$ WC \"d_lrint='\" + d_lrint + \"'\"\n$ WC \"d_lrintl='\" + d_lrintl + \"'\"\n$ WC \"d_lround='\" + d_lround + \"'\"\n$ WC \"d_lroundl='\" + d_lroundl + \"'\"\n$ WC \"d_lseekproto='define'\"\n$ WC \"d_lstat='\" + d_lstat + \"'\"\n$ WC \"d_madvise='undef'\"\n$ WC \"d_malloc_size='undef'\"\n$ WC \"d_malloc_good_size='undef'\"\n$ WC \"d_mblen='\" + d_mblen + \"'\"\n$ WC \"d_mbstowcs='\" + d_mbstowcs + \"'\"\n$ WC \"d_mbtowc='\" + d_mbtowc + \"'\"\n$ WC \"d_memchr='\" + d_memchr + \"'\"\n$ WC \"d_memcmp='define'\"\n$ WC \"d_memcpy='define'\"\n$ WC \"d_memmove='define'\"\n$ WC \"d_memset='define'\"\n$ WC \"d_mkdir='define'\"\n$ WC \"d_mkdtemp='\" + d_mkdtemp + \"'\"\n$ WC \"d_mkfifo='undef'\"\n$ WC \"d_mknod='undef'\"\n$ WC \"d_mkstemp='\" + d_mkstemp + \"'\"\n$ WC \"d_mkstemps='\" + d_mkstemps + \"'\"\n$ WC \"d_mktime='\" + d_mktime + \"'\"\n$ WC \"d_mktime64='undef'\"\n$ WC \"d_mmap='\" + d_mmap + \"'\"\n$ WC \"d_modfl='\" + d_modfl + \"'\"\n$ WC \"d_modflproto='\" + d_modflproto + \"'\"\n$ WC \"d_modfl_pow32_bug='undef'\"\n$ WC \"d_mprotect='\" + d_mprotect + \"'\"\n$ WC \"d_msg='undef'\"\n$ WC \"d_msgctl='undef'\"\n$ WC \"d_msgget='undef'\"\n$ WC \"d_msgrcv='undef'\"\n$ WC \"d_msgsnd='undef'\"\n$ WC \"d_msg_ctrunc='undef'\"\n$ WC \"d_msg_dontroute='undef'\"\n$ WC \"d_msg_oob='undef'\"\n$ WC \"d_msg_peek='undef'\"\n$ WC \"d_msg_proxy='undef'\"\n$ WC \"d_msghdr_s='undef'\"\n$ WC \"d_msync='\" + d_msync + \"'\"\n$ WC \"d_munmap='\" + d_munmap + \"'\"\n$ WC \"d_mymalloc='\" + d_mymalloc + \"'\"\n$ WC \"d_nan='undef'\"\n$ WC \"d_nanosleep='\" + d_nanosleep + \"'\"\n$ WC \"d_ndbm='undef'\"\n$ WC \"d_ndbm_h_uses_prototypes='undef'\"\n$ WC \"d_nearbyint='undef'\"\n$ WC \"d_nextafter='\" + d_nextafter + \"'\"\n$ WC \"d_nexttoward='\" + d_nexttoward + \"'\"\n$ WC \"d_nice='define'\"\n$ WC \"d_nl_langinfo='\" + d_nl_langinfo + \"'\"\n$ WC \"d_nv_preserves_uv='\" + d_nv_preserves_uv + \"'\"\n$ WC \"nv_overflows_integers_at='\" + nv_overflows_integers_at + \"'\"\n$ WC \"nv_preserves_uv_bits='\" + nv_preserves_uv_bits + \"'\"\n$ WC \"d_nv_zero_is_allbits_zero='define'\"\n$ WC \"d_off64_t='\" + d_off64_t + \"'\"\n$ WC \"d_old_pthread_create_joinable='\" + d_old_pthread_create_joinable + \"'\"\n$ WC \"d_oldarchlib='define'\"\n$ WC \"d_oldpthreads='\" + d_oldpthreads + \"'\"\n$ WC \"d_oldsock='undef'\"\n$ WC \"d_open3='define'\"\n$ WC \"d_pathconf='\" + d_pathconf + \"'\"\n$ WC \"d_pause='define'\"\n$ WC \"d_perl_otherlibdirs='undef'\"\n$ WC \"d_phostname='\" + d_phostname + \"'\"\n$ WC \"d_pipe='define'\"\n$ WC \"d_poll='\" + d_poll + \"'\"\n$ WC \"d_portable='define'\"\n$ WC \"d_procselfexe='undef'\"\n$ WC \"d_pseudofork='undef'\"\n$ WC \"d_pthread_atfork='undef'\"\n$ WC \"d_pthread_attr_setscope='\" + d_pthread_attr_setscope + \"'\"\n$ WC \"d_pthread_yield='\" + d_pthread_yield + \"'\"\n$ WC \"d_pthreads_created_joinable='\" + d_pthreads_created_joinable + \"'\"\n$ WC \"d_ptrdiff_t='define'\"\n$ WC \"d_pwage='undef'\"\n$ WC \"d_pwchange='undef'\"\n$ WC \"d_pwclass='undef'\"\n$ WC \"d_pwcomment='define'\"\n$ WC \"d_pwexpire='undef'\"\n$ WC \"d_pwgecos='define'\"\n$ WC \"d_pwpasswd='define'\"\n$ WC \"d_pwquota='undef'\"\n$ WC \"d_qgcvt='undef'\"\n$ WC \"d_quad='\" + d_quad + \"'\"\n$ WC \"d_readdir='define'\"\n$ WC \"d_readlink='\" + d_readlink + \"'\"\n$ WC \"d_readv='undef'\"\n$ WC \"d_realpath='\" + d_realpath + \"'\"\n$ WC \"d_recvmsg='undef'\"\n$ WC \"d_regcomp='undef'\"\n$ WC \"d_remainder='\" + d_remainder + \"'\"\n$ WC \"d_remquo='\" + d_remquo + \"'\"\n$ WC \"d_rename='define'\"\n$ WC \"d_rewinddir='define'\"\n$ WC \"d_rint='\" + d_rint + \"'\"\n$ WC \"d_rmdir='define'\"\n$ WC \"d_round='undef'\"\n$ WC \"d_safebcpy='undef'\"\n$ WC \"d_safemcpy='define'\"\n$ WC \"d_sanemcmp='define'\"\n$ WC \"d_sbrkproto='define'\"\n$ WC \"d_scalbn='undef'\"\n$ WC \"d_scalbnl='undef'\"\n$ WC \"d_sched_yield='\" + d_sched_yield + \"'\"\n$ WC \"d_scm_rights='undef'\"\n$ WC \"d_seekdir='define'\"\n$ WC \"d_select='\" + d_select + \"'\"\n$ IF (\"''F$EXTRACT(1,3, F$GETSYI(\"\"VERSION\"\"))'\".GES.\"8.4\")\n$ THEN\n$   WC \"d_sem='define'\"\n$   WC \"d_semctl='define'\"\n$   WC \"d_semctl_semid_ds='define'\"\n$   WC \"d_semctl_semun='define'\"\n$   WC \"d_semget='define'\"\n$   WC \"d_semop='define'\"\n$ ELSE\n$   WC \"d_sem='undef'\"\n$   WC \"d_semctl='undef'\"\n$   WC \"d_semctl_semid_ds='undef'\"\n$   WC \"d_semctl_semun='undef'\"\n$   WC \"d_semget='undef'\"\n$   WC \"d_semop='undef'\"\n$ ENDIF\n$ WC \"d_sendmsg='undef'\"\n$ WC \"d_setegid='undef'\"\n$ WC \"d_setenv='\" + d_setenv + \"'\"\n$ WC \"d_seteuid='\" + d_seteuid + \"'\"\n$ WC \"d_setgrent='\" + d_setgrent + \"'\"\n$ WC \"d_setgrps='undef'\"\n$ WC \"d_sethent='\" + d_sethent + \"'\"\n$ WC \"d_setitimer='\" + d_setitimer + \"'\"\n$ WC \"d_setlinebuf='undef'\"\n$ WC \"d_setlocale='\" + d_setlocale + \"'\"\n$ WC \"d_setnent='\" + d_setnent + \"'\"\n$ WC \"d_setpent='\" + d_setpent + \"'\"\n$ WC \"d_setpgid='\" + d_setpgid + \"'\"\n$ WC \"d_setpgrp2='undef'\"\n$ WC \"d_setpgrp='\" + d_setpgrp + \"'\"\n$ WC \"d_setprior='undef'\"\n$ WC \"d_setproctitle='\" + d_setproctitle + \"'\"\n$ WC \"d_setpwent='define'\"\n$ WC \"d_setregid='\" + d_setregid + \"'\"\n$ WC \"d_setresgid='undef'\"\n$ WC \"d_setresuid='undef'\"\n$ WC \"d_setreuid='\" + d_setreuid + \"'\"\n$ WC \"d_setrgid='undef'\"\n$ WC \"d_setruid='undef'\"\n$ WC \"d_setsent='\" + d_setsent + \"'\"\n$ WC \"d_setsid='\" + d_setsid + \"'\"\n$ WC \"d_setvbuf='\" + d_setvbuf + \"'\"\n$ WC \"d_shm='\" + d_shm + \"'\"\n$ WC \"d_shmat='\" + d_shmat + \"'\"\n$ WC \"d_shmatprototype='\" + d_shmatprototype + \"'\"\n$ WC \"d_shmctl='\" + d_shmctl + \"'\"\n$ WC \"d_shmdt='\" + d_shmdt + \"'\"\n$ WC \"d_shmget='\" + d_shmget + \"'\"\n$ WC \"d_sigaction='\" + d_sigaction + \"'\"\n$ WC \"d_signbit='\" + d_signbit + \"'\"\n$ WC \"d_sigprocmask='\" + d_sigprocmask + \"'\"\n$ WC \"d_sigsetjmp='\" + d_sigsetjmp + \"'\"\n$ WC \"d_sin6_scope_id='\" + d_sin6_scope_id + \"'\"\n$ WC \"d_sitearch='define'\"\n$ WC \"d_sockaddr_in6='define'\"\n$ WC \"d_sockaddr_sa_len='\" + d_sockaddr_sa_len + \"'\"\n$ WC \"d_sockatmark='undef'\"\n$ WC \"d_sockatmarkproto='undef'\"\n$ WC \"d_socket='\" + d_socket + \"'\"\n$ WC \"d_socklen_t='\" + d_socklen_t + \"'\"\n$ WC \"d_sockpair='\" + d_sockpair + \"'\"\n$ WC \"d_socks5_init='undef'\"\n$ WC \"d_sprintf_returns_strlen='define'\"\n$ WC \"d_sqrtl='define'\"\n$ WC \"d_sresgproto='undef'\"\n$ WC \"d_sresgproto='undef'\"\n$ WC \"d_sresproto='undef'\"\n$ WC \"d_sresuproto='undef'\"\n$ WC \"d_stat='define'\"\n$ WC \"d_statblks='undef'\"\n$ WC \"d_statfs_f_flags='undef'\"\n$ WC \"d_statfs_s='undef'\"\n$ WC \"d_statfsflags='undef'\"\n$ WC \"d_static_inline='define'\"\n$ WC \"d_stdio_cnt_lval='\" + d_stdio_cnt_lval + \"'\"\n$ WC \"d_stdio_ptr_lval='\" + d_stdio_ptr_lval + \"'\"\n$ WC \"d_stdio_ptr_lval_nochange_cnt='\" + d_stdio_ptr_lval_nochange_cnt + \"'\"\n$ WC \"d_stdio_ptr_lval_sets_cnt='\" + d_stdio_ptr_lval_sets_cnt + \"'\"\n$ WC \"d_stdio_stream_array='undef'\"\n$ WC \"d_stdiobase='\" + d_stdiobase + \"'\"\n$ WC \"d_stdstdio='\" + d_stdstdio + \"'\"\n$ WC \"d_faststdio='\" + d_faststdio + \"'\"\n$ WC \"d_statvfs='\" + d_statvfs + \"'\"\n$ WC \"d_strchr='define'\"\n$ WC \"d_strcoll='\" + d_strcoll + \"'\"\n$ WC \"d_strctcpy='define'\"\n$ WC \"d_strerrm='strerror((e),vaxc$errno)'\"\n$ WC \"d_strerror='define'\"\n$ WC \"d_strftime='define'\"\n$ WC \"d_strlcat='undef'\"\n$ WC \"d_strlcpy='undef'\"\n$ WC \"d_strtod='define'\"\n$ WC \"d_strtol='define'\"\n$ WC \"d_strtold='\" + d_strtold + \"'\"\n$ WC \"d_strtoll='\" + d_strtoll + \"'\"\n$ WC \"d_strtoq='\" + d_strtoq + \"'\"\n$ WC \"d_strtoul='define'\"\n$ WC \"d_strtoull='\" + d_strtoull + \"'\"\n$ WC \"d_strtouq='\" + d_strtouq + \"'\"\n$ WC \"d_strxfrm='\" + d_strxfrm  + \"'\"\n$ WC \"d_suidsafe='undef'\"\n$ WC \"d_symlink='\" + d_symlink + \"'\"\n$ WC \"d_syscall='undef'\"\n$ WC \"d_syscallproto='undef'\"\n$ WC \"d_sysconf='\" + d_sysconf + \"'\"\n$ WC \"d_sysernlst='undef'\"\n$ WC \"d_syserrlst='undef'\"\n$ WC \"d_system='define'\"\n$ WC \"d_tcgetpgrp='undef'\"\n$ WC \"d_tcsetpgrp='undef'\"\n$ WC \"d_telldir='define'\"\n$ WC \"d_telldirproto='define'\"\n$ WC \"d_tgamma='\" + d_tgamma + \"'\"\n$ WC \"d_time='define'\"\n$ WC \"d_timegm='undef'\"\n$ WC \"d_times='define'\"\n$ IF (\"''F$EXTRACT(1,3, F$GETSYI(\"\"VERSION\"\"))'\".GES.\"7.0\")\n$ THEN\n$   WC \"d_tm_tm_gmtoff='define'\"\n$   WC \"d_tm_tm_zone='define'\"\n$ ELSE\n$   WC \"d_tm_tm_gmtoff='undef'\"\n$   WC \"d_tm_tm_zone='undef'\"\n$ ENDIF\n$ WC \"d_truncate='\" + d_truncate + \"'\"\n$ WC \"d_trunc='\" + d_trunc + \"'\"\n$ WC \"d_truncl='\" + d_truncl + \"'\"\n$ WC \"d_tzname='\" + d_tzname + \"'\"\n$ WC \"d_u32align='define'\"\n$ WC \"d_ualarm='\" + d_ualarm + \"'\"\n$ WC \"d_umask='define'\"\n$ WC \"d_uname='\" + d_uname + \"'\"\n$ WC \"d_union_semun='undef'\"\n$ WC \"d_unlink_all_versions='\" + d_unlink_all_versions + \"'\"\t! VMS-specific\n$ WC \"d_unordered='undef'\"\n$ WC \"d_unsetenv='\" + d_unsetenv + \"'\"\n$ WC \"d_clearenv='\" + d_clearenv + \"'\"\n$ WC \"d_usleep='\" + d_usleep + \"'\"\n$ WC \"d_usleepproto='\" + d_usleep + \"'\"\n$ WC \"d_ustat='undef'\"\n$ WC \"d_vendorarch='undef'\"\n$ WC \"d_vendorbin='undef'\"\n$ WC \"d_vendorlib='undef'\"\n$ WC \"d_vendorscript='undef'\"\n$ WC \"d_vfork='define'\"\n$ WC \"d_vms_case_sensitive_symbols='\" + d_vms_be_case_sensitive + \"'\" ! VMS\n$ WC \"d_vms_do_sockets='\" + d_vms_do_sockets + \"'\" ! VMS\n$ WC \"d_vms_shorten_long_symbols='\" + d_vms_shorten_long_symbols + \"'\" ! VMS\n$ WC \"d_void_closedir='define'\"\n$ WC \"d_voidsig='undef'\"\n$ WC \"d_voidtty='\" + \"'\"\n$ WC \"d_volatile='define'\"\n$ WC \"d_vprintf='define'\"\n$ WC \"d_vsnprintf='\" + d_vsnprintf + \"'\"\n$ WC \"d_wait4='\" + d_wait4 + \"'\"\n$ WC \"d_waitpid='define'\"\n$ WC \"d_wcscmp='define'\"\n$ WC \"d_wcstombs='define'\"\n$ WC \"d_wcsxfrm='define'\"\n$ WC \"d_wctomb='define'\"\n$ WC \"d_writev='undef'\"\n$ WC \"d_xenix='undef'\"\n$ WC \"db_hashtype=' '\"\n$ WC \"db_prefixtype=' '\"\n$ WC \"db_version_major='\" + \"'\"\n$ WC \"db_version_minor='\" + \"'\"\n$ WC \"db_version_patch='\" + \"'\"\n$ WC \"dbgprefix='\" + dbgprefix + \"'\"\n$ WC \"devtype='\" + devtype + \"'\"\n$ WC \"direntrytype='struct dirent'\"\n$ WC \"dlext='\" + dlext + \"'\"\n$ WC \"dlobj='\" + dlobj + \"'\"\n$ WC \"dlsrc='dl_vms.xs'\"\n$ WC \"doublekind='3'\"\n$ WC \"doublesize='\" + doublesize + \"'\"\n$ WC \"drand01='\" + drand01 + \"'\"\n$ WC \"dtrace='\" + \"'\"\n$!\n$! The dynamic_ext symbol may be quite long\n$!\n$ tmp = \"dynamic_ext='\" + dynamic_ext + \"'\"\n$ WC/symbol tmp\n$ DELETE/SYMBOL tmp\n$ WC \"eagain=' '\"\n$ WC \"ebcdic='undef'\"\n$ WC \"embedmymalloc='\" + usemymalloc + \"'\"\n$ WC \"eunicefix=':'\"\n$ WC \"exe_ext='\" + exe_ext + \"'\"\n$!\n$! The extensions symbols may be quite long\n$!\n$ WC/symbol \"extensions='\", nonxs_ext, \" \", nonxs_ext2, \" \", dynamic_ext, \"'\"\n$ WC \"fflushNULL='define'\"\n$ WC \"fflushall='undef'\"\n$ WC \"fpostype='fpos_t'\"\n$ WC \"freetype='void'\"\n$ WC \"full_ar='\" + \"'\"\n$ WC \"full_csh='\" + \" '\"\n$ WC \"full_sed='_NLA0:'\"\n$ WC \"gccversion='\" + gccversion + \"'\"\n$ WC \"gidformat='lu'\"\n$ WC \"gidsign='1'\"\n$ WC \"gidsize='4'\"\n$ WC \"gidtype='\" + gidtype + \"'\"\n$ WC \"groupstype='Gid_t'\"\n$ WC \"h_fcntl='false'\"\n$ WC \"h_sysfile='false'\"\n$ WC \"hint='none'\"\n$ WC \"hintfile='\" + \"'\"\n$ WC \"i16size='\" + i16size + \"'\"\n$ WC \"i16type='\" + i16type + \"'\"\n$ WC \"i32size='\" + i32size + \"'\"\n$ WC \"i32type='\" + i32type + \"'\"\n$ WC \"i64size='\" + i64size + \"'\"\n$ WC \"i64type='\" + i64type + \"'\"\n$ WC \"i8size='\" + i8size + \"'\"\n$ WC \"i8type='\" + i8type + \"'\"\n$ WC \"i_arpainet='\" + i_arpainet + \"'\"\n$ WC \"i_assert='define'\"\n$ WC \"i_bfd='undef'\"\n$ WC \"i_bsdioctl='undef'\"\n$ WC \"i_crypt='undef'\"\n$ WC \"i_db='undef'\"\n$ WC \"i_dbm='undef'\"\n$ WC \"i_dirent='undef'\"\t! we roll our own\n$ WC \"i_dlfcn='undef'\"\n$ WC \"i_execinfo='undef'\"\n$ WC \"i_fcntl='\" + i_fcntl + \"'\"\n$ WC \"i_fenv='undef'\"\n$ WC \"i_float='define'\"\n$ WC \"i_fp='undef'\"\n$ WC \"i_fp_class='undef'\"\n$ WC \"i_gdbm='undef'\"\n$ WC \"i_gdbm_ndbm='undef'\"\n$ WC \"i_gdbmndbm='undef'\"\n$ WC \"i_grp='\" + i_grp + \"'\"\n$ WC \"i_ieeefp='undef'\"\n$ WC \"i_inttypes='\" + i_inttypes + \"'\"\n$ WC \"i_langinfo='\" + i_langinfo + \"'\"\n$ WC \"i_libutil='\" + i_libutil + \"'\"\n$ WC \"i_limits='define'\"\n$ WC \"i_locale='\" + i_locale + \"'\"\n$ WC \"i_machcthr='undef'\"\n$ WC \"i_machcthreads='undef'\"\n$ WC \"i_malloc='undef'\"\n$ WC \"i_mallocmalloc='undef'\"\n$ WC \"i_math='define'\"\n$ WC \"i_memory='undef'\"\n$ WC \"i_mntent='undef'\"\n$ WC \"i_ndbm='undef'\"\n$ WC \"i_netdb='\" + i_netdb + \"'\"\n$ WC \"i_neterrno='define'\"\n$ WC \"i_netinettcp='\" + i_netinettcp + \"'\"\n$ WC \"i_niin='\" + i_niin + \"'\"\n$ WC \"i_poll='\" + i_poll + \"'\"\n$ WC \"i_prot='undef'\"\n$ WC \"i_pthread='define'\"\n$ WC \"i_pwd='undef'\"\n$ WC \"i_quadmath='undef'\"\n$ WC \"i_rpcsvcdbm='undef'\"\n$ WC \"i_sgtty='undef'\"\n$ WC \"i_shadow='\" + i_shadow + \"'\"\n$ WC \"i_socks='\" + i_socks + \"'\"\n$ WC \"i_stdarg='define'\"\n$ IF ccname .EQS. \"DEC\" .AND. F$INTEGER(Dec_C_Version).GE.60400000\n$ THEN\n$   WC \"i_stdbool='define'\"\n$ ELSE\n$   WC \"i_stdbool='undef'\"\n$ ENDIF\n$ WC \"i_stddef='define'\"\n$ WC \"i_stdint='undef'\"\n$ WC \"i_stdlib='define'\"\n$ WC \"i_string='define'\"\n$ WC \"i_sunmath='undef'\"\n$ WC \"i_sysaccess='\" + i_sysaccess + \"'\"\n$ WC \"i_sysdir='undef'\"\n$ WC \"i_sysfile='\" + i_sysfile + \"'\"\n$ WC \"i_sysfilio='undef'\"\n$ WC \"i_sysin='undef'\"\n$ WC \"i_sysioctl='\" + i_sysioctl + \"'\"\n$ WC \"i_syslog='\" + i_syslog + \"'\"\n$ WC \"i_sysmman='undef'\"\n$ WC \"i_sysmode='\" + i_sysmode + \"'\"\n$ WC \"i_sysmount='undef'\"\n$ WC \"i_sysndir='undef'\"\n$ WC \"i_sysparam='undef'\"\n$ WC \"i_syspoll='\" + i_syspoll + \"'\"\n$ WC \"i_sysresrc='undef'\"\n$ WC \"i_syssecrt='\" + i_syssecrt + \"'\"\n$ WC \"i_sysselct='undef'\"\n$ WC \"i_syssockio='undef'\"\n$ WC \"i_sysstat='define'\"\n$ WC \"i_sysstatfs='undef'\"\n$ WC \"i_sysstatvfs='\" + i_sysstatvfs + \"'\"\n$ WC \"i_systime='undef'\"\n$ WC \"i_systimek='undef'\"\n$ WC \"i_systimes='undef'\"\n$ WC \"i_systypes='define'\"\n$ WC \"i_sysuio='\" + i_sysuio + \"'\"\n$ WC \"i_sysun='\" + i_sysun + \"'\"\n$ WC \"i_sysutsname='\" + i_sysutsname + \"'\"\n$ WC \"i_sysvfs='undef'\"\n$ WC \"i_syswait='undef'\"\n$ WC \"i_termio='undef'\"\n$ WC \"i_termios='undef'\"\n$ WC \"i_time='define'\"\n$ WC \"i_unistd='\" + i_unistd + \"'\"\n$ WC \"i_ustat='undef'\"\n$ WC \"i_utime='\" + i_utime + \"'\"\n$ WC \"i_values='undef'\"\n$ WC \"i_varargs='undef'\"\n$ WC \"i_varhdr='stdarg.h'\"\n$ WC \"i_vfork='undef'\"\n$ WC \"inc_version_list='0'\"\n$ WC \"inc_version_list_init='0'\"\n$ WC \"installarchlib='\" + installarchlib + \"'\"\n$ WC \"installbin='\" + installbin + \"'\"\n$ WC \"installman1dir='\" + installman1dir + \"'\"\n$ WC \"installman3dir='\" + installman3dir + \"'\"\n$ WC \"installprefix='\" + vms_prefix + \"'\"\n$ WC \"installprefixexp='\" + vms_prefix + \":'\"\n$ WC \"installprivlib='\" + installprivlib + \"'\"\n$ WC \"installscript='\" + installscript + \"'\"\n$ WC \"installsitearch='\" + installsitearch + \"'\"\n$ WC \"installsitebin='\" + sitebin + \"'\"\n$ WC \"installsitelib='\" + installsitelib + \"'\"\n$ WC \"installusrbinperl='undef'\"\n$ WC \"intsize='\" + intsize + \"'\"\n$ WC \"ivdformat='\" + ivdformat + \"'\"\n$ WC \"ivsize='\" + ivsize + \"'\"\n$ WC \"ivtype='\" + ivtype + \"'\"\n$!\n$! The xs_extensions symbol may be quite long\n$!\n$ WC/symbol \"known_extensions='\", xs_extensions, \" \", nonxs_ext, \" \", nonxs_ext2, \"'\"\n$ WC \"ld='\" + ld + \"'\"\n$ WC \"ld_can_script='undef'\"\n$ WC \"lddlflags='/Share'\"\n$ WC \"ldflags='\" + ldflags + \"'\"\n$ WC \"ldflags_uselargefiles='\" + \"'\"\n$ WC \"ldlibpthname='\" + \"'\"\n$ WC \"lib_ext='\" + lib_ext + \"'\"\n$ WC \"libc='\" + libc + \"'\"\n$ WC \"libpth='/sys$share /sys$library'\"\n$ WC \"libs='\" + libs + \"'\"\n$ WC \"libswanted='\" + \"'\"\n$ WC \"libswanted_uselargefiles='\" + \"'\"\n$ WC \"longdblsize='\" + longdblsize + \"'\"\n$ WC \"longdblkind='\" + longdblkind + \"'\"\n$ WC \"longlongsize='\" + longlongsize + \"'\"\n$ WC \"longsize='\" + longsize + \"'\"\n$ IF uselargefiles .OR. uselargefiles .EQS. \"define\"\n$ THEN\n$   WC \"lseeksize='8'\"\n$   WC \"lseektype='off_t'\"\n$ ELSE\n$   WC \"lseeksize='4'\"\n$   WC \"lseektype='int'\"\n$ ENDIF\n$ WC \"mab='\" + \"'\"\n$ WC \"mad='undef'\"\n$ WC \"make='\" + make + \"'\"\n$ WC \"malloctype='void *'\"\n$ WC \"usemallocwrap='\" + usemallocwrap + \"'\"\n$ WC \"man1ext='rno'\"\n$ WC \"man3ext='rno'\"\n$ WC \"mmaptype='void *'\"\n$ WC \"modetype='unsigned int'\"\n$ WC \"multiarch='undef'\"\n$ WC \"mydomain='\" + mydomain + \"'\"\n$ WC \"myhostname='\" + myhostname + \"'\"\n$ WC \"myuname='\" + myuname + \"'\"\n$ WC \"need_va_copy='undef'\"\n$ WC \"netdb_hlen_type='\" + netdb_hlen_type + \"'\"\n$ WC \"netdb_host_type='\" + netdb_host_type + \"'\"\n$ WC \"netdb_name_type='\" + netdb_name_type + \"'\"\n$ WC \"netdb_net_type='\" + netdb_net_type + \"'\"\n$ WC/symbol \"nonxs_ext='\", nonxs_ext, \" \", nonxs_ext2, \"'\"\n$ WC \"nveformat='\" + nveformat + \"'\"\n$ WC \"nvEUformat='\" + nvEUformat + \"'\"\n$ WC \"nvfformat='\" + nvfformat + \"'\"\n$ WC \"nvFUformat='\" + nvFUformat + \"'\"\n$ WC \"nvgformat='\" + nvgformat + \"'\"\n$ WC \"nvGUformat='\" + nvGUformat + \"'\"\n$ WC \"nvsize='\" + nvsize + \"'\"\n$ WC \"nvtype='\" + nvtype + \"'\"\n$ WC \"o_nonblock=' '\"\n$ WC \"obj_ext='\" + obj_ext + \"'\"\n$ WC \"old_pthread_create_joinable='\" + old_pthread_create_joinable + \"'\"\n$ WC \"oldarchlib='\" + oldarchlib + \"'\"\n$ WC \"oldarchlibexp='\" + oldarchlibexp + \"'\"\n$ WC \"optimize='\" + optimize + \"'\"\n$ WC \"osname='\" + osname + \"'\"\n$ WC \"osvers='\" + osvers + \"'\"\n$ WC \"otherlibdirs='\" + \"'\"\n$ WC \"package='\" + package + \"'\"\n$ WC \"pager='\" + pager + \"'\"\n$ WC \"patchlevel='\" + patchlevel + \"'\"\n$ WC \"path_sep='|'\"\n$ WC \"perl_root='\" + perl_root + \"'\" ! VMS specific $trnlnm()\n$ WC \"perladmin='\" + perladmin + \"'\"\n$ WC \"perllibs='\" + perllibs + \"'\"\n$ WC \"perlpath='\" + \"''vms_prefix':[000000]Perl''exe_ext'\" + \"'\"\n$ WC \"perl_static_inline='static inline'\"\n$ WC \"perl_symbol='\" + perl_symbol + \"'\"  ! VMS specific\n$ WC \"perl_verb='\" + perl_verb + \"'\"      ! VMS specific\n$ WC \"pgflquota='\" + pgflquota + \"'\"\n$ WC \"pidtype='\" + pidtype + \"'\"\n$ WC \"prefix='\" + vms_prefix + \"'\"\n$ WC \"prefixexp='\" + vms_prefix + \":'\"\n$ WC \"privlib='\" + privlib + \"'\"\n$ WC \"privlibexp='\" + privlibexp + \"'\"\n$ WC \"procselfexe=' '\"\n$ WC \"prototype='define'\"\n$ WC \"ptrsize='\" + ptrsize + \"'\"\n$ WC \"quadkind='\" + quadkind + \"'\"\n$ WC \"quadtype='\" + quadtype + \"'\" \n$ WC \"randbits='\" + randbits + \"'\"\n$ WC \"randfunc='\" + randfunc + \"'\"\n$ WC \"randseedtype='\" + randseedtype + \"'\"\n$ WC \"ranlib='\" + \"'\"\n$ WC \"rd_nodata=' '\"\n$ WC \"revision='\" + revision + \"'\"\n$ WC \"sGMTIME_max='4294967295'\"\n$ WC \"sGMTIME_min='0'\"\n$ WC \"sLOCALTIME_max='4294967295'\"\n$ WC \"sLOCALTIME_min='0'\"\n$ WC \"sPRId64='\" + sPRId64 + \"'\"\n$ WC \"sPRIEUldbl='\" + sPRIEUldbl + \"'\"\n$ WC \"sPRIFUldbl='\" + sPRIFUldbl + \"'\"\n$ WC \"sPRIGUldbl='\" + sPRIGUldbl + \"'\"\n$ WC \"sPRIXU64='\" + sPRIXU64 + \"'\"\n$ WC \"sPRIeldbl='\" + sPRIeldbl + \"'\"\n$ WC \"sPRIfldbl='\" + sPRIfldbl + \"'\"\n$ WC \"sPRIgldbl='\" + sPRIgldbl + \"'\"\n$ WC \"sPRIi64='\" + sPRIi64 + \"'\"\n$ WC \"sPRIo64='\" + sPRIo64 + \"'\"\n$ WC \"sPRIu64='\" + sPRIu64 + \"'\"\n$ WC \"sPRIx64='\" + sPRIx64 + \"'\"\n$ WC \"sSCNfldbl='\" + sSCNfldbl + \"'\"\n$ WC \"sched_yield='\" + sched_yield + \"'\"\n$ WC \"scriptdir='\" + scriptdir + \"'\"\n$ WC \"scriptdirexp='\" + scriptdir + \"'\"  ! use scriptdir for now\n$ WC \"seedfunc='\" + seedfunc + \"'\"\n$ WC \"selectminbits='32'\"\n$ WC \"selecttype='\" + selecttype + \"'\"\n$ WC \"sh='MCR'\"\n$ WC \"sharpbang='#!'\"\n$ WC \"shmattype='\" + shmattype + \"'\"\n$ WC \"shortsize='\" + shortsize + \"'\"\n$ IF (f$length(sig_name) .GE. 244)\n$ THEN\n$     tmp = \"sig_name='\" + sig_name + \"'\"\n$     WC/symbol tmp\n$     DELETE/SYMBOL tmp\n$ ELSE\n$     WC \"sig_name='\" + sig_name + \"'\"\n$ ENDIF\n$ IF (f$length(sig_name_init) .GE. 244)\n$ THEN\n$     tmp = \"sig_name_init='\" + sig_name_init + \"'\"\n$     WC/symbol tmp\n$     DELETE/SYMBOL tmp\n$ ELSE\n$     WC \"sig_name_init='\" + sig_name_init + \"'\"\n$ ENDIF\n$ WC \"sig_num='\" + sig_num + \"'\"\n$ WC \"sig_num_init='\" + sig_num_init + \"'\"\n$ WC \"sig_count='\" + sig_count + \"'\"\n$ WC \"sig_size='\" + sig_size + \"'\"\n$ WC \"signal_t='\" + signal_t + \"'\"\n$ WC \"sitearch='\" + sitearch + \"'\"\n$ WC \"sitearchexp='\" + sitearchexp + \"'\"\n$ WC \"sitebin='\" + sitebin + \"'\"\n$ WC \"sitebinexp='\" + sitebin + \"'\"\n$ WC \"sitelib='\" + sitelib + \"'\"\n$ WC \"sitelib_stem='\" + sitelib_stem + \"'\"\n$ WC \"sitelibexp='\" + sitelibexp + \"'\"\n$ WC \"siteprefix='\" + vms_prefix + \"'\"\n$ WC \"siteprefixexp='\" + vms_prefix + \":'\"\n$ WC \"sizesize='\" + sizesize + \"'\"\n$ WC \"sizetype='size_t'\"\n$ WC \"so='\" + so + \"'\"\n$ WC \"socksizetype='\" + socksizetype + \"'\"\n$ WC \"spitshell='write sys$output '\"\n$ WC \"src='\" + src + \"'\"\n$ WC \"ssizetype='int'\"\n$ WC \"startperl=\" + startperl ! This one's special--no enclosing single quotes\n$ WC \"static_ext='\" + static_ext + \"'\"\n$ WC \"st_ino_size='\" + st_ino_size + \"'\"\n$ WC \"st_ino_sign='1'\"\n$ WC \"stdchar='\" + stdchar + \"'\"\n$ WC \"stdio_base='((*fp)->_base)'\"\n$ WC \"stdio_bufsiz='((*fp)->_cnt + (*fp)->_ptr - (*fp)->_base)'\"\n$ WC \"stdio_cnt='((*fp)->_cnt)'\"\n$ WC \"stdio_ptr='((*fp)->_ptr)'\"\n$ WC \"stdio_stream_array=' \" + \"'\"\n$ WC \"subversion='\" + subversion + \"'\"\n$ WC \"targetarch='\" + \"'\"\n$ WC \"targetsh='MCR'\"\n$ WC \"timetype='\" + timetype + \"'\"\n$ WC \"u16size='\" + u16size + \"'\"\n$ WC \"u16type='\" + u16type + \"'\"\n$ WC \"u32size='\" + u32size + \"'\"\n$ WC \"u32type='\" + u32type + \"'\"\n$ WC \"u64size='\" + u64size + \"'\"\n$ WC \"u64type='\" + u64type + \"'\"\n$ WC \"u8size='\" + u8size + \"'\"\n$ WC \"u8type='\" + u8type + \"'\"\n$ WC \"uidformat='lu'\"\n$ WC \"uidsign='1'\"\n$ WC \"uidsize='4'\"\n$ WC \"uidtype='\" + uidtype + \"'\"\n$ WC \"uquadtype='\" + uquadtype + \"'\" \n$ WC \"use5005threads='\" + use5005threads + \"'\"\n$ WC \"use64bitall='\" + use64bitall + \"'\"\n$ WC \"use64bitint='\" + use64bitint + \"'\"\n$ WC \"usecasesensitive='\" + be_case_sensitive + \"'\"    ! VMS-specific\n$ WC \"usedebugging_perl='\"+use_debugging_perl+\"'\"\n$ WC \"usedefaulttypes='\" + usedefaulttypes + \"'\"    ! VMS-specific\n$ WC \"usecbacktrace='undef'\"\n$ WC \"usecrosscompile='undef'\"\n$ WC \"usedevel='\" + usedevel + \"'\"\n$ WC \"usedl='\" + usedl + \"'\"\n$ WC \"usedtrace='undef'\"\n$ WC \"usefaststdio='\" + usefaststdio + \"'\"\n$ WC \"useieee='\" + useieee + \"'\"                    ! VMS-specific\n$ WC \"useithreads='\" + useithreads + \"'\"\n$ WC \"usekernelthreads='\" + usekernelthreads + \"'\"\t! VMS-specific\n$ WC \"usekernprocpathname='undef'\"\n$ WC \"usensgetexecutablepath='undef'\"\n$ WC \"uselargefiles='\" + uselargefiles + \"'\"\n$ WC \"uselongdouble='\" + uselongdouble + \"'\"\n$ WC \"usemorebits='\" + usemorebits + \"'\"\n$ WC \"usemultiplicity='\" + usemultiplicity + \"'\"\n$ WC \"usemymalloc='\" + usemymalloc + \"'\"\n$ WC \"useperlio='define'\"\n$ WC \"useposix='false'\"\n$ WC \"usequadmath='undef'\"\n$ WC \"usereentrant='undef'\"\n$ WC \"userelocatableinc='undef'\"\n$ WC \"usesecurelog='\" + usesecurelog + \"'\"  ! VMS-specific\n$ WC \"useshortenedsymbols='\" + useshortenedsymbols + \"'\"    ! VMS-specific\n$ WC \"useshrplib='true'\"\n$ WC \"usesitecustomize='\" + usesitecustomize + \"'\"\n$ WC \"usesocks='undef'\"\n$ WC \"usethreads='\" + usethreads + \"'\"\n$ WC \"usethreadupcalls='\" + usethreadupcalls + \"'\"\t! VMS-specific\n$ WC \"usevendorprefix='\" + \"'\" ! try to say no, though we'll be ignored as of MM 5.90_01\n$ WC \"useversionedarchname='\" + useversionedarchname + \"'\"\n$ WC \"usevfork='true'\"\n$ WC \"usevmsdebug='\" + usevmsdebug + \"'\"     ! VMS-specific\n$ WC \"uvoformat='\" + uvoformat + \"'\"\n$ WC \"uvsize='\" + uvsize + \"'\"\n$ WC \"uvtype='\" + uvtype + \"'\"\n$ WC \"uvuformat='\" + uvuformat + \"'\"\n$ WC \"uvxformat='\" + uvxformat + \"'\"\n$ WC \"uvXUformat='\" + uvXUformat + \"'\"\n$ WC \"vendorarch='\" + \"'\"\n$ WC \"vaproto='define'\"\n$ WC \"vendorarchexp='\" + \"'\"\n$ WC \"vendorbin='\" + \"'\"\n$ WC \"vendorbinexp='\" + \"'\"\n$ WC \"vendorlib_stem='\" + \"'\"\n$ WC \"vendorlib='\" + \"'\"\n$ WC \"vendorlibexp='\" + \"'\"\n$ WC \"vendorprefix='\" + \"'\"\n$ WC \"vendorprefixexp='\" + \"'\"\n$ WC \"version='\" + version + \"'\"\n$ WC \"version_patchlevel_string='\" + version_patchlevel_string + \"'\"\n$ WC \"vms_cc_type='\" + vms_cc_type + \"'\" ! VMS specific\n$ WC \"vms_prefix='\" + vms_prefix + \"'\" ! VMS specific\n$ WC \"vms_ver='\" + vms_ver + \"'\" ! VMS specific\n$!\n$! ## The UNIXy POSIXy reentrantey thingys ##\n$! See \"Appendix B, Version-Dependency Tables\" in the C RTL\n$! manual for when assorted _r functions became available.\n$!\n$ IF use_threads .AND. vms_ver .GES. \"7.2\"\n$ THEN\n$   WC \"asctime_r_proto='REENTRANT_PROTO_B_SB'\"\n$   WC \"d_asctime_r='define'\"\n$   WC \"ctime_r_proto='REENTRANT_PROTO_B_SB'\"\n$   WC \"d_ctime_r='define'\"\n$ ELSE\n$   WC \"asctime_r_proto='0'\"\n$   WC \"d_asctime_r='undef'\"\n$   WC \"ctime_r_proto='0'\"\n$   WC \"d_ctime_r='undef'\"\n$ ENDIF\n$ WC \"d_crypt_r='undef'\"\n$ WC \"d_ctermid_r='undef'\"\n$ WC \"d_drand48_r='undef'\"\n$ WC \"d_endgrent_r='undef'\"\n$ WC \"d_endhostent_r='undef'\"\n$ WC \"d_endnetent_r='undef'\"\n$ WC \"d_endprotoent_r='undef'\"\n$ WC \"d_endpwent_r='undef'\"\n$ WC \"d_endservent_r='undef'\"\n$ WC \"d_getgrent_r='undef'\"\n$ WC \"d_getgrgid_r='\" + d_getgrgid_r + \"'\"\n$ WC \"d_getgrnam_r='\" + d_getgrnam_r + \"'\"\n$ WC \"d_gethostbyaddr_r='undef'\"\n$ WC \"d_gethostbyname_r='undef'\"\n$ WC \"d_gethostent_r='undef'\"\n$ WC \"d_getlogin_r='undef'\"\n$ WC \"d_getnetbyaddr_r='undef'\"\n$ WC \"d_getnetbyname_r='undef'\"\n$ WC \"d_getnetent_r='undef'\"\n$ WC \"d_getprotobyname_r='undef'\"\n$ WC \"d_getprotobynumber_r='undef'\"\n$ WC \"d_getprotoent_r='undef'\"\n$ WC \"d_getpwent_r='undef'\"\n$ WC \"d_getpwnam_r='\" + d_getpwnam_r + \"'\"\n$ WC \"d_getpwuid_r='\" + d_getpwuid_r + \"'\"\n$ WC \"d_getservbyname_r='undef'\"\n$ WC \"d_getservbyport_r='undef'\"\n$ WC \"d_getservent_r='undef'\"\n$ WC \"d_getspnam_r='undef'\"\n$ WC \"d_gmtime_r='undef'\"      ! leave undef'd; we use my_gmtime\n$ WC \"d_lgamma_r='undef'\"\n$ WC \"d_localtime_r='undef'\"   ! leave undef'd; we use my_localtime\n$ WC \"d_localtime_r_needs_tzset='undef'\"\n$ WC \"d_random_r='undef'\"\n$ WC \"d_readdir_r='define'\"\t! always defined; we roll our own\n$ WC \"d_readdir64_r='undef'\"\n$ WC \"d_setgrent_r='undef'\"\n$ WC \"d_sethostent_r='undef'\"\n$ WC \"d_setlocale_r='undef'\"\n$ WC \"d_setnetent_r='undef'\"\n$ WC \"d_setprotoent_r='undef'\"\n$ WC \"d_setpwent_r='undef'\"\n$ WC \"d_setservent_r='undef'\"\n$ WC \"d_snprintf='\" + d_snprintf + \"'\"\n$ WC \"d_srand48_r='undef'\"\n$ WC \"d_srandom_r='undef'\"\n$ WC \"d_strerror_r='undef'\"\n$ WC \"d_tmpnam_r='undef'\"\n$ WC \"d_ttyname_r='\" + d_ttyname_r + \"'\"\n$ WC \"ctermid_r_proto='0'\"\n$ WC \"crypt_r_proto='0'\"\n$ WC \"drand48_r_proto='0'\"\n$ WC \"endgrent_r_proto='0'\"\n$ WC \"endhostent_r_proto='0'\"\n$ WC \"endnetent_r_proto='0'\"\n$ WC \"endprotoent_r_proto='0'\"\n$ WC \"endpwent_r_proto='0'\"\n$ WC \"endservent_r_proto='0'\"\n$ WC \"getgrent_r_proto='0'\"\n$ WC \"getgrgid_r_proto='\" + getgrgid_r_proto + \"'\"\n$ WC \"getgrnam_r_proto='\" + getgrnam_r_proto + \"'\"\n$ WC \"gethostbyaddr_r_proto='0'\"\n$ WC \"gethostbyname_r_proto='0'\"\n$ WC \"gethostent_r_proto='0'\"\n$ WC \"getlogin_r_proto='0'\"\n$ WC \"getnetbyaddr_r_proto='0'\"\n$ WC \"getnetbyname_r_proto='0'\"\n$ WC \"getnetent_r_proto='0'\"\n$ WC \"getprotobyname_r_proto='0'\"\n$ WC \"getprotobynumber_r_proto='0'\"\n$ WC \"getprotoent_r_proto='0'\"\n$ WC \"getpwent_r_proto='0'\"\n$ WC \"getpwnam_r_proto='0'\"\n$ WC \"getpwuid_r_proto='0'\"\n$ WC \"getservbyname_r_proto='0'\"\n$ WC \"getservbyport_r_proto='0'\"\n$ WC \"getservent_r_proto='0'\"\n$ WC \"getspnam_r_proto='0'\"\n$ WC \"gmtime_r_proto='0'\"\n$ WC \"localtime_r_proto='0'\"\n$ WC \"random_r_proto='0'\"\n$ WC \"readdir_r_proto='REENTRANT_PROTO_I_TSR'\"  ! always defined; we roll our own\n$ WC \"readdir64_r_proto='0'\"\n$ WC \"setgrent_r_proto='0'\"\n$ WC \"sethostent_r_proto='0'\"\n$ WC \"setlocale_r_proto='0'\"\n$ WC \"setnetent_r_proto='0'\"\n$ WC \"setprotoent_r_proto='0'\"\n$ WC \"setpwent_r_proto='0'\"\n$ WC \"setservent_r_proto='0'\"\n$ WC \"srand48_r_proto='0'\"\n$ WC \"srandom_r_proto='0'\"\n$ WC \"strerror_r_proto='0'\"\n$ WC \"tmpnam_r_proto='0'\"\n$ WC \"ttyname_r_proto='\" + ttyname_r_proto + \"'\"\n$!\n$! ##END WRITE NEW CONSTANTS HERE##\n$!\n$ CLOSE CONFIG\n$!\n$! Okay, we've gotten here. Build munchconfig.exe\n$ COPY/NOLOG [-.vms]munchconfig.c []\n$ COPY/NOLOG [-.vms]'Makefile_SH' []\n$ 'Perl_CC' 'ccflags' munchconfig.c\n$ IF Needs_Opt\n$ THEN\n$   OPEN/WRITE CONFIG []munchconfig.opt\n$   IF ccname .EQS. \"GCC\"\n$   THEN\n$     WRITE CONFIG \"Gnu_CC:[000000]gcclib.olb/library\"\n$   ENDIF\n$   WRITE CONFIG \"Sys$Share:VAXCRTL/Share\"\n$   CLOSE CONFIG\n$   'ld' munchconfig.obj,munchconfig.opt/opt\n$   DELETE/NOLOG/NOCONFIRM munchconfig.opt;\n$ ELSE\n$   'ld' munchconfig.obj\n$ ENDIF\n$ IF F$SEARCH(\"munchconfig.obj\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM munchconfig.obj;\n$ IF F$SEARCH(\"munchconfig.c\") .NES. \"\" THEN DELETE/NOLOG/NOCONFIRM munchconfig.c;\n$ IF ccname .EQS. \"CXX\"\n$ THEN\n$   CALL Cxx_demangler_cleanup\n$ ENDIF\n$!\n$ IF alldone .EQS. \"\"\n$ THEN\n$   cat4 SYS$INPUT:\n$   DECK\n\nIf you'd like to make any changes to the config.sh file before I begin\nto configure things, answer yes to the following question.\n\n$   EOD\n$   bool_dflt=\"n\"\n$   rp=\"Do you wish to edit ''basename_config_sh'? [''bool_dflt'] \"\n$   GOSUB myread\n$   IF ans\n$   THEN\n$     echo4 \"\"\n$     echo4 \"Be sure to type LOGOUT after you have edited the file,\"\n$     echo4 \"then this procedure will resume.\"\n$     echo4 \"\"\n$     default = F$ENVIRONMENT(\"DEFAULT\")\n$     DIRECTORY 'config_sh'\n$     SET DEFAULT [-]\n$     SPAWN/WAIT\n$     SET DEFAULT 'default'\n$   ENDIF\n$ ENDIF\n$!\n$ echo \"\"\n$ echo4 \"Adding ''osname' specific preprocessor commands.\"\n$ !\n$ ! we need an fdl file\n$ CREATE [-]CONFIG.FDL\n$ DECK\nRECORD\n  FORMAT STREAM_LF\n$ EOD\n$ CREATE /FDL=[-]CONFIG.FDL [-]CONFIG.LOCAL\n$ ! First spit out the header info with the local defines (to get\n$ ! around the 255 character command line limit)\n$ OPEN/APPEND CONFIG [-]config.local\n$ IF use_debugging_perl THEN WC \"#define DEBUGGING\"\n$ IF use_two_pot_malloc THEN WC \"#define TWO_POT_OPTIMIZE\"\n$ IF mymalloc THEN WC \"#define EMBEDMYMALLOC\"\n$ IF use_pack_malloc THEN WC \"#define PACK_MALLOC\"\n$ IF use_debugmalloc THEN WC \"#define DEBUGGING_MSTATS\"\n$ IF ccname .EQS. \"GCC\" THEN WC \"#define GNUC_ATTRIBUTE_CHECK\"\n$ IF (Has_Dec_C_Sockets)\n$ THEN\n$    WC \"#define VMS_DO_SOCKETS\"\n$    WC \"#define DECCRTL_SOCKETS\"\n$ ENDIF\n$! This is VMS-specific for now\n$ WC \"#''d_setenv' HAS_SETENV\"\n$ IF d_secintgenv THEN WC \"#define SECURE_INTERNAL_GETENV\"\n$ IF d_alwdeftype THEN WC \"#define ALWAYS_DEFTYPES\"\n$ IF use64bitint .OR. use64bitint .EQS. \"define\"\n$ THEN\n$   WC \"#define USE_64_BIT_INT\"\n$ ENDIF\n$ IF uselongdouble .OR. uselongdouble .EQS. \"define\"\n$ THEN\n$   WC \"#define USE_LONG_DOUBLE\"\n$ ENDIF\n$ IF use64bitall .OR. use64bitall .EQS. \"define\" THEN -\n    WC \"#define USE_64_BIT_ALL\"\n$ IF be_case_sensitive THEN WC \"#define VMS_WE_ARE_CASE_SENSITIVE\"\n$ IF shorten_long_symbols THEN WC \"#define VMS_SHORTEN_LONG_SYMBOLS\"\n$ IF use_ieee_math THEN WC \"#define USE_IEEE\"\n$ IF d_herrno .EQS. \"undef\" THEN WC \"#define NEED_AN_H_ERRNO\"\n$ WC \"#define HAS_ENVGETENV\"\n$ WC \"#define PERL_EXTERNAL_GLOB\"\n$ IF kill_by_sigprc .EQS. \"define\" then WC \"#define KILL_BY_SIGPRC\"\n$ IF unlink_all_versions .OR. unlink_all_versions .EQS. \"define\" THEN -\n    WC \"#define UNLINK_ALL_VERSIONS\"\n$ IF d_sockaddr_sa_len .EQS. \"define\" then WC \"#define _SOCKADDR_LEN 1\"\n$ IF ccname .EQS. \"CXX\" then WC \"#define NO_ENVIRON_ARRAY\"\n$ IF ccname .EQS. \"CXX\" then WC \"#define VMS\" ! only has __VMS by default\n$ CLOSE CONFIG\n$!\n$ echo4 \"Doing variable substitutions on .SH files...\"\n$ echo4 \"Extracting config.h (with variable substitutions)\"\n$!\n$! Now build the normal config.h\n$ DEFINE/USER_MODE sys$output [-]config.main\n$ mcr []munchconfig 'config_sh' [-]config_h.sh\n$ ! Concatenate them together\n$ copy [-]config.local,[-]config.main [-]config.h\n$! Clean up\n$ DELETE/NOLOG/NOCONFIRM [-]CONFIG.MAIN;*\n$ DELETE/NOLOG/NOCONFIRM [-]CONFIG.LOCAL;*\n$ DELETE/NOLOG/NOCONFIRM [-]CONFIG.FDL;*\n$!\n$ IF ccname .EQS. \"DEC\"\n$ THEN\n$   DECC_REPLACE = \"DECC=decc=1\"\n$ ELSE\n$   DECC_REPLACE = \"DECC=\"\n$ ENDIF\n$ IF ccname .EQS. \"CXX\"\n$ THEN\n$   DECCXX_REPLACE = \"DECCXX=DECCXX=1\"\n$ ELSE\n$   DECCXX_REPLACE = \"DECCXX=\"\n$ ENDIF\n$ IF ccname .EQS. \"GCC\"\n$ THEN\n$   GNUC_REPLACE = \"GNUC=gnuc=1\"\n$ ELSE\n$   GNUC_REPLACE = \"GNUC=\" \n$ ENDIF\n$ IF Has_Dec_C_Sockets\n$ THEN\n$   SOCKET_REPLACE = \"SOCKET=DECC_SOCKETS=1\"\n$ ELSE\n$   SOCKET_REPLACE = \"SOCKET=\"\n$ ENDIF\n$ IF use_threads\n$ THEN\n$   THREAD_REPLACE = \"THREAD=THREADED=1\"\n$ ELSE\n$   THREAD_REPLACE = \"THREAD=\"\n$ ENDIF\n$ IF mymalloc\n$ THEN\n$   MALLOC_REPLACE = \"MALLOC=MALLOC=1\"\n$ ELSE\n$   MALLOC_REPLACE = \"MALLOC=\"\n$ ENDIF\n$ IF uselargefiles .OR. uselargefiles .EQS. \"define\"\n$ THEN\n$   IF usestdstat .or. usestdstat .eqs. \"define\"\n$   THEN\n$      LARGEFILE_REPLACE = \"LARGEFILE=LARGEFILE=_USE_STD_STAT=1\"\n$   ELSE\n$      LARGEFILE_REPLACE = \"LARGEFILE=LARGEFILE=_LARGEFILE=1\"\n$   ENDIF\n$ ELSE\n$   LARGEFILE_REPLACE = \"LARGEFILE=\"\n$ ENDIF\n$ IF use_vmsdebug_perl\n$ THEN\n$   DEBUG_REPLACE = \"USEVMSDEBUG=__DEBUG__=1\"\n$ ELSE\n$   DEBUG_REPLACE = \"USEVMSDEBUG=\"\n$ ENDIF\n$ PREFIX_REPLACE = \"PREFIX=PREFIX=''prefix'\"\n$!\n$! In order not to stress the tiny command buffer on pre-7.3-2 systems,\n$! we put the following substitutions in a file and pass the file to\n$! munchconfig.\n$!\n$ open/write CONFIG extra_subs.txt\n$ WC := write CONFIG\n$ WC \"''DECC_REPLACE'\"\n$ WC \"''DECCXX_REPLACE'\"\n$ WC \"''ARCH_TYPE'\"\n$ WC \"''GNUC_REPLACE'\"\n$ WC \"''SOCKET_REPLACE'\"\n$ WC \"''THREAD_REPLACE'\"\n$ WC \"''C_Compiler_Replace'\"\n$ WC \"''MALLOC_REPLACE'\"\n$ WC \"''THREAD_UPCALLS'\"\n$ WC \"''THREAD_KERNEL'\"\n$ WC \"PV=''version'\"\n$ WC \"FLAGS=FLAGS=''extra_flags'\"\n$ WC \"''LARGEFILE_REPLACE'\"\n$ WC \"ARCHNAME=ARCHNAME=''archname'\"\n$ WC \"''DEBUG_REPLACE'\"\n$ WC \"''PREFIX_REPLACE'\"\n$ close CONFIG\n$!\n$ echo4 \"Extracting ''defmakefile' (with variable substitutions)\"\n$ DEFINE/USER_MODE sys$output 'UUmakefile'\n$ mcr []munchconfig 'config_sh' 'Makefile_SH' -f extra_subs.txt\n$! Clean up after ourselves\n$ DELETE/NOLOG/NOCONFIRM []munchconfig.exe;\n$ DELETE/NOLOG/NOCONFIRM []extra_subs.txt;\n$!\n$! Note that the /key qualifier to search, as in:\n$! search README.* \"=head\"/key=(position=1)/window=0/output=extra.pods\n$! is not supported on VMS V5.5-2, hence not used in extra_pods.com.\n$!\n$ echo4 \"Extracting extra_pods.com (without variable substitutions)\"\n$ Create Sys$Disk:[-]extra_pods.com\n$ Deck/Dollar=\"$EOExtra_Pods$\"\n$!++ extra_pods.com\n$!   NOTE: This file is extracted as part of the VMS configuration process.\n$!   Any changes made to it directly will be lost.  If you need to make any\n$!   changes, please edit the template in Configure.Com instead.\n$!   Use FORCE if you've just podified a README.* file on VMS.\n$ if f$search(\"extra.pods\") .eqs. \"\" .or. P1 .eqs. \"FORCE\" then -\n    search README.* \"=head\"/window=0/output=extra.pods\n$ open/read/error=extra_close EXTRA extra.pods\n$extra_loop:\n$ read/error=extra_close/END_OF_FILE=extra_close EXTRA file\n$ file_type = f$edit(f$parse(file,,,\"TYPE\",),\"LOWERCASE\") - \".\"\n$ if file_type .nes. \"VMS\" .and. file_type .nes. \"vms\"\n$ then\n$   pod_file = \"[.pod]perl''file_type'.pod\"\n$   file = file - \"''f$parse(file,,,\"VERSION\",)'\"\n$   if p1 .eqs. \"CLEAN\"\n$   then if f$search(pod_file) .nes. \"\" then delete/log 'pod_file';*\n$   else\n$     do_copy := false\n$     if f$search(pod_file) .eqs. \"\"\n$     then do_copy := true\n$     else\n$       file_rdt = f$cvtime(f$file_attributes(file,\"RDT\"))\n$       pod_file_rdt = f$cvtime(f$file_attributes(pod_file,\"RDT\"))\n$       if file_rdt .GTS. pod_file_rdt then do_copy := true\n$     endif\n$     ! wacky method to preserve case on ODS-5 even when parse style is traditional\n$     if do_copy then mcr sys$disk:[]miniperl.exe -e \"exit 0+$^E unless File::Copy::rmscopy(q{''file'}, q{''pod_file'});\"\n$   endif\n$ endif\n$ goto extra_loop\n$extra_close:\n$ close EXTRA\n$ if p1 .eqs. \"CLEAN\" .and. f$search(\"extra.pods;-1\") .nes. \"\" then -\n    purge/nolog extra.pods\n$!-- extra_pods.com\n$EOExtra_Pods$\n$!\n$!  Warn of dangerous symbols or logical names\n$!\n$Bad_environment: SUBROUTINE\n$   Bad_env = \"\"\n$   IF p2 .eqs. \"SYMBOL\"\n$   THEN\n$     IF f$type('p1') .nes. \"\" THEN  Bad_env := SYMBOL\n$   ELSE\n$     IF f$trnlnm(p1) .nes. \"\" THEN Bad_env := LOGICAL\n$   ENDIF\n$   IF Bad_env .eqs. \"SYMBOL\" .or. Bad_env .eqs. \"LOGICAL\"\n$   THEN\n$     IF f$search(\"config.msg\") .nes. \"\"\n$     THEN\n$       OPEN/APPEND CONFIG config.msg\n$     ELSE\n$       OPEN/WRITE CONFIG config.msg\n$     ENDIF\n$     IF Bad_env .eqs. \"SYMBOL\"\n$     THEN\n$       WRITE CONFIG \"\"\n$       WRITE CONFIG \"Symbol name ''p1' found in environment as \" + &p1\n$       WRITE CONFIG \" delete before building ''package' via:\"\n$       WRITE CONFIG \"     $ DELETE/SYMBOL/GLOBAL ''p1'\"\n$       IF f$locate(\"\"\"\",&p1) .ge. f$length(&p1)\n$       THEN\n$       WRITE CONFIG \" after building, testing, and installing ''package'\"\n$       WRITE CONFIG \" restore the symbol with:\"\n$       WRITE CONFIG \"     $ ''p1' == \"\"\" + &p1 + \"\"\"\"\n$       ENDIF\n$     ENDIF\n$     IF Bad_env .eqs. \"LOGICAL\"\n$     THEN\n$       WRITE CONFIG \"\"\n$       WRITE CONFIG \"Logical name ''p1' found in environment as \" + f$trnlnm(p1)\n$       WRITE CONFIG \" deassign before building ''package'\"\n$     ENDIF\n$     CLOSE CONFIG\n$     Bad_env = \"\"\n$   ENDIF\n$ EXIT\n$ ENDSUBROUTINE ! Bad_environment\n$ echo \"\"\n$ echo4 \"Checking for dangerous pre-existing global symbols and logical names.\"\n$ CALL Bad_environment \"COMP\"\n$ CALL Bad_environment \"EXT\"\n$ CALL Bad_environment \"FOO\"\n$ CALL Bad_environment \"LIB\"\n$ CALL Bad_environment \"LIST\"\n$ CALL Bad_environment \"MIME\"\n$ CALL Bad_environment \"POSIX\"\n$ CALL Bad_environment \"SYS\"\n$ CALL Bad_environment \"T\"\n$ CALL Bad_environment \"THREAD\"\n$ CALL Bad_environment \"THREADS\"\n$ CALL Bad_environment \"TIME\"\n$ CALL Bad_environment \"TMP\"\n$ CALL Bad_environment \"UNICODE\"\n$ CALL Bad_environment \"UTIL\"\n$ CALL Bad_environment \"TEST\" \"SYMBOL\"\n$ IF f$search(\"config.msg\") .eqs. \"\" THEN echo \"OK.\"\n$!\n$! %Config-I-VMS, write perl_setup.com here\n$!\n$ IF (.NOT.perl_symbol)\n$ THEN\n$   file_2_find = \"[-]''packageup'.cld\"\n$   echo \"\"\n$   echo4 \"The perl.cld file is now being written...\"\n$   OPEN/WRITE CONFIG 'file_2_find'\n$   ext = \".exe\"\n$   IF (sharedperl .AND. F$ELEMENT(0, \"-\", archname) .EQS. \"VMS_AXP\") THEN ext := .AXE\n$   IF (sharedperl .AND. F$ELEMENT(0, \"-\", archname) .EQS. \"VMS_IA64\") THEN ext := .IXE\n$   IF (use_vmsdebug_perl)\n$   THEN\n$     WRITE CONFIG \"define verb dbgperl\"\n$     WRITE CONFIG F$FAO(\"!_!AS\",\"image ''vms_prefix':[000000]dbgperl''ext'\")\n$     WRITE CONFIG F$FAO(\"!_!AS\",\"cliflags (foreign)\")\n$     WRITE CONFIG \"\"\n$     WRITE CONFIG \"define verb perl\"\n$     WRITE CONFIG F$FAO(\"!_!AS\",\"image ''vms_prefix':[000000]ndbgPerl''ext'\")\n$     WRITE CONFIG F$FAO(\"!_!AS\",\"cliflags (foreign)\")\n$   ELSE\n$     WRITE CONFIG \"define verb perl\"\n$     WRITE CONFIG F$FAO(\"!_!AS\",\"image ''vms_prefix':[000000]perl''ext'\")\n$     WRITE CONFIG F$FAO(\"!_!AS\",\"cliflags (foreign)\")\n$   ENDIF\n$   CLOSE CONFIG\n$ ENDIF ! (.NOT.perl_symbol)\n$ echo \"\"\n$ echo4 \"The perl_setup.com file is now being written...\"\n$ file_2_find = \"[-]perl_setup.com\"\n$!\n$! Folks are likely to want to edit perl_setup.com.\n$! STMLF RFM plays nicer with ported editors than does VFC.\n$!\n$ CREATE [-]CONFIG.FDL\n$ DECK\nRECORD\n  FORMAT STREAM_LF\n$ EOD\n$ CREATE /FDL=[-]CONFIG.FDL 'file_2_find'\n$ OPEN/APPEND CONFIG 'file_2_find'\n$ DELETE/NOLOG/NOCONFIRM [-]CONFIG.FDL;\n$ WRITE CONFIG \"$!\"\n$ WRITE CONFIG \"$! Perl_Setup.com    ''cf_time'\"\n$ IF cf_email.NES.perladmin\n$ THEN\n$ WRITE CONFIG \"$! perl configured by ''cf_email'\"\n$ ELSE\n$ WRITE CONFIG \"$! This perl configured & administered by ''perladmin'\"\n$ ENDIF\n$ WRITE CONFIG \"$!\"\n$ WRITE CONFIG \"$ if P1 .EQS. \"\"\"\"\"\n$ WRITE CONFIG \"$ then\"\n$ WRITE CONFIG \"$   myproc = f$environment(\"\"PROCEDURE\"\")\"\n$ WRITE CONFIG \"$   myroot_dev = f$parse(myproc,,,\"\"DEVICE\"\",\"\"NO_CONCEAL\"\")\"\n$ WRITE CONFIG \"$   myroot_dir = f$parse(myproc,,,\"\"DIRECTORY\"\",\"\"NO_CONCEAL\"\")\"\n$ WRITE CONFIG \"$   myroot_dir = myroot_dir - \"\"][000000.\"\" - \"\"><000000.\"\"\"\n$ WRITE CONFIG \"$   myroot_dir = myroot_dir - \"\"][000000]\"\" - \"\"><000000>\"\"\"\n$ WRITE CONFIG \"$   myroot_dir = myroot_dir - \"\"][\"\" - \"\"><\"\"\"\n$ WRITE CONFIG \"$   myroot_dir = myroot_dir - \"\".]\"\" - \"\".>\"\" - \"\"[\"\" - \"\"]\"\" - \"\"<\"\" - \"\">\"\"\"\n$ WRITE CONFIG \"$   root_spec = myroot_dev + \"\"[\"\" + myroot_dir + \"\".]\"\"\"\n$ WRITE CONFIG \"$ else\"\n$ WRITE CONFIG \"$   root_spec = P1\"\n$ WRITE CONFIG \"$ endif\"\n$ WRITE CONFIG \"$ define/translation=concealed ''vms_prefix' 'root_spec'\"\n$ WRITE CONFIG \"$ ext = \"\".exe\"\"\"\n$ IF sharedperl\n$ THEN\n$ WRITE CONFIG \"$ if f$getsyi(\"\"ARCH_TYPE\"\") .eq. 2 then ext = \"\".AXE\"\"\"\n$ WRITE CONFIG \"$ if f$getsyi(\"\"ARCH_TYPE\"\") .eq. 3 then ext = \"\".IXE\"\"\"\n$ ENDIF\n$ IF (perl_symbol)\n$ THEN\n$   perl_setup_perl = \"'\" + \"'perl'\" ! triple quoted foreign command symbol\n$   IF (use_vmsdebug_perl)\n$   THEN\n$     WRITE CONFIG \"$ dbgperl :== $''vms_prefix':[000000]dbgperl'ext'\"\n$     WRITE CONFIG \"$ perl    :== $''vms_prefix':[000000]ndbgperl'ext'\"\n$     WRITE CONFIG \"$ define dbgperlshr ''vms_prefix':[000000]dbgperlshr'ext'\"\n$   ELSE\n$     WRITE CONFIG \"$ perl :== $''vms_prefix':[000000]Perl'ext'\"\n$     WRITE CONFIG \"$ define perlshr ''vms_prefix':[000000]perlshr'ext'\"\n$   ENDIF\n$ ELSE ! .NOT.perl_symbol\n$   perl_setup_perl = \"perl\" ! command verb\n$   IF (use_vmsdebug_perl)\n$   THEN\n$     WRITE CONFIG \"$ define dbgperlshr ''vms_prefix':[000000]dbgperlshr'ext'\"\n$   ELSE\n$     WRITE CONFIG \"$ define perlshr ''vms_prefix':[000000]perlshr'ext'\"\n$   ENDIF\n$   IF perl_verb .EQS. \"PROCESS\"\n$   THEN\n$     WRITE CONFIG \"$ set command ''vms_prefix':[000000]''packageup'.CLD\"\n$   ENDIF\n$ ENDIF !  perl_symbol\n$!\n$ IF (tzneedset)\n$ THEN\n$ WRITE CONFIG \"$ define SYS$TIMEZONE_DIFFERENTIAL ''tzd'\"\n$ ELSE    !leave in but commented out (in case setting was from perl :-)\n$ WRITE CONFIG \"$! define SYS$TIMEZONE_DIFFERENTIAL ''tzd'\"\n$ ENDIF\n$ WRITE CONFIG \"$!\"\n$ WRITE CONFIG \"$! Symbols for Perl-based utility programs:\"\n$ WRITE CONFIG \"$!\"\n$ WRITE CONFIG \"$ c2ph       == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]c2ph.com\"\"\"\n$ WRITE CONFIG \"$ corelist   == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]corelist.com\"\"\"\n$ WRITE CONFIG \"$ cpan       == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]cpan.com\"\"\"\n$ WRITE CONFIG \"$ enc2xs     == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]enc2xs.com\"\"\"\n$ WRITE CONFIG \"$ encguess   == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]encguess.com\"\"\"\n$ WRITE CONFIG \"$ h2ph       == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]h2ph.com\"\"\"\n$ WRITE CONFIG \"$ h2xs       == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]h2xs.com\"\"\"\n$ WRITE CONFIG \"$ instmodsh  == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]instmodsh.com\"\"\"\n$ WRITE CONFIG \"$ libnetcfg  == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]libnetcfg.com\"\"\"\n$ WRITE CONFIG \"$ perlbug    == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]perlbug.com\"\"\"\n$ WRITE CONFIG \"$ perldoc    == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]perldoc.com \"\"\"\"-t\"\"\"\"\"\"\"\n$ WRITE CONFIG \"$ perlivp    == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]perlivp.com\"\"\"\n$ WRITE CONFIG \"$ piconv     == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]piconv.com\"\"\"\n$ WRITE CONFIG \"$ pl2pm      == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]pl2pm.com\"\"\"\n$ WRITE CONFIG \"$ pod2html   == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]pod2html.com\"\"\"\n$ WRITE CONFIG \"$ pod2text   == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]pod2text.com\"\"\"\n$ WRITE CONFIG \"$!pod2man    == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]pod2man.com\"\"\"\n$ WRITE CONFIG \"$ pod2usage  == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]pod2usage.com\"\"\"\n$ WRITE CONFIG \"$ podchecker == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]podchecker.com\"\"\"\n$ WRITE CONFIG \"$ podselect  == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]podselect.com\"\"\"\n$ WRITE CONFIG \"$ prove      == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]prove.com\"\"\"\n$ WRITE CONFIG \"$ psed       == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]psed.com\"\"\"\n$ WRITE CONFIG \"$ pstruct    == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]pstruct.com\"\"\"\n$ WRITE CONFIG \"$ ptar       == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]ptar.com\"\"\"\n$ WRITE CONFIG \"$ ptardiff   == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]ptardiff.com\"\"\"\n$ WRITE CONFIG \"$ ptargrep   == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]ptargrep.com\"\"\"\n$ WRITE CONFIG \"$ shasum     == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]shasum.com\"\"\"\n$ WRITE CONFIG \"$ splain     == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]splain.com\"\"\"\n$ WRITE CONFIG \"$ xsubpp     == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]xsubpp.com\"\"\"\n$ WRITE CONFIG \"$ zipdetails == \"\"\" + perl_setup_perl + \" ''vms_prefix':[utils]zipdetails.com\"\"\"\n$ CLOSE CONFIG\n$!\n$ echo  \"\"\n$ echo  \"The file can be found at:\"\n$ echo4 \"    ''F$SEARCH(file_2_find)'\"\n$ echo  \"Add that file (or an @ call to it) to your [SY]LOGIN.COM\"\n$ echo  \"when you are satisfied with a successful compilation,\"\n$ echo  \"testing, and installation of your perl.\"\n$ echo  \"\"\n$ IF ((.NOT.perl_symbol) .AND. (perl_verb .EQS. \"DCLTABLES\"))\n$ THEN\n$   file_2_find = \"[-]''packageup'_install.com\"\n$   OPEN/WRITE CONFIG 'file_2_find'\n$   WRITE CONFIG \"$ set command perl /table=sys$common:[syslib]dcltables.exe -\"\n$   WRITE CONFIG \"    /output=sys$common:[syslib]dcltables.exe\"\n$   WRITE CONFIG \"$ install replace sys$common:[syslib]dcltables.exe\"\n$   CLOSE CONFIG\n$   echo4 \"\"\n$   echo4 \"In order to install the ''packageup' verb into DCLTABLES run:\"\n$   echo4 \"    @ ''F$SEARCH(file_2_find)'\"\n$   echo4 \"after a successful build, test, and install.  Do so with CMKRNL privilege.\"\n$   echo4 \"\"\n$ ENDIF\n$!\n$!figure out where we \"are\" by parsing 'vms_default_directory_name' \n$!\n$ set_def_command = \"\"\n$ dflt = F$ENVIRONMENT(\"DEFAULT\") - \".UU]\" \n$ tmp = vms_default_directory_name - dflt - \"]\"\n$ i = 0\n$ IF tmp .EQS. \"\" THEN GOTO Beyond_set_def_loop\n$Set_def_loop:\n$ tmp1 = F$ELEMENT(i,\".\",tmp)\n$ IF tmp1 .EQS. \".\" THEN GOTO Beyond_set_def_loop\n$ IF i .EQ. 0 \n$ THEN set_def_command = \"set default [-\"\n$ ELSE set_def_command = set_def_command + \"-\"\n$ ENDIF\n$ i = i + 1\n$ GOTO Set_def_loop\n$Beyond_set_def_loop:\n$ IF set_def_command.NES.\"\"\n$ THEN\n$   set_def_command = set_def_command - \"-\" + \"]\"\n$   echo4 \"\"\n$   echo4 \"In order to build ''package' you must now issue the commands:\"\n$   echo4 \"\"\n$   echo4 \" ''set_def_command'\"\n$ ELSE\n$   echo4 \"\"\n$   echo4 \"In order to build ''package' you must now issue the command:\"\n$   echo4 \"\"\n$ ENDIF\n$ echo4 \" ''make'''makefile'\", macros\n$ echo4 \"\"\n$!\n$ IF ( F$SEARCH(\"config.msg\").NES.\"\" ) \n$ THEN\n$   echo4 \"Hmm.  I also noted the following information while running:\"\n$   echo4 \"\"\n$   TYPE/OUTPUT=SYS$ERROR: config.msg\n$   SET PROTECTION=(SYSTEM:RWED,OWNER:RWED) config.msg\n$   DELETE/NOLOG/NOCONFIRM config.msg;\n$ ENDIF\n$!\n$Clean_up:\n$ SET NOON\n$ IF (silent)\n$ THEN\n$   CLOSE/NOLOG STDOUT\n$   DEASSIGN SYS$OUTPUT\n$ ENDIF\n$ CLOSE/NOLOG CONFIG\n$ IF F$GETJPI(\"\",\"FILCNT\").GT.vms_filcnt\n$ THEN WRITE SYS$ERROR \"%Config-W-VMS, WARNING: There is a file still open\"\n$ ENDIF\n$ dflt = F$ENVIRONMENT(\"DEFAULT\")\n$ IF F$LOCATE(\"UU]\",dflt).EQS.(F$LENGTH(dflt)-3)\n$ THEN\n$   IF ( F$SEARCH(\"[.CXX_REPOSITORY]*.*\").NES.\"\" ) \n$   THEN \n$     DELETE/NOLOG/NOCONFIRM [.CXX_REPOSITORY]*.*;*\n$     SET PROTECTION=(SYSTEM:RWED,OWNER:RWED) CXX_REPOSITORY.DIR\n$   ENDIF\n$   IF ( F$SEARCH(\"[]*.*\").NES.\"\" ) THEN DELETE/NOLOG/NOCONFIRM []*.*;*\n$   SET DEFAULT [-]\n$   SET PROTECTION=(SYSTEM:RWED,OWNER:RWED) UU.DIR\n$   DELETE/NOLOG/NOCONFIRM UU.DIR;\n$ ENDIF\n$ SET DEFAULT 'vms_default_directory_name' !be kind rewind\n$ EXIT\n$!: End of Configure\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/makedef.pl": "#./perl -w\n#\n# Create the export list for perl.\n#\n# Needed by WIN32 and OS/2 for creating perl.dll,\n# and by AIX for creating libperl.a when -Duseshrplib is in effect,\n# and by VMS for creating perlshr.exe.\n#\n# Reads from information stored in\n#\n#    %Config::Config (ie config.sh)\n#    config.h\n#    embed.fnc\n#    globvar.sym\n#    intrpvar.h\n#    miniperl.map (on OS/2)\n#    perl5.def    (on OS/2; this is the old version of the file being made)\n#    perlio.sym\n#    perlvars.h\n#    regen/opcodes\n#\n# plus long lists of function names hard-coded directly in this script.\n#\n# Writes the result to STDOUT.\n#\n# Normally this script is invoked from a makefile (e.g. win32/Makefile),\n# which redirects STDOUT to a suitable file, such as:\n#\n#    perl5.def   OS/2\n#    perldll.def Windows\n#    perl.exp    AIX\n#    perl.imp    NetWare\n#    makedef.lis VMS\n\nmy $fold;\nmy %ARGS;\nmy %define;\n\nBEGIN {\n    BEGIN { unshift @INC, \"lib\" }\n    use Config;\n    use strict;\n\n    %ARGS = (CCTYPE => 'MSVC', TARG_DIR => '');\n\n    sub process_cc_flags {\n\tforeach (map {split /\\s+/, $_} @_) {\n\t    $define{$1} = $2 // 1 if /^-D(\\w+)(?:=(.+))?/;\n\t}\n    }\n\n    while (@ARGV) {\n\tmy $flag = shift;\n\tif ($flag =~ /^(?:CC_FLAGS=)?(-D\\w.*)/) {\n\t    process_cc_flags($1);\n\t} elsif ($flag =~ /^(CCTYPE|FILETYPE|PLATFORM|TARG_DIR)=(.+)$/) {\n\t    $ARGS{$1} = $2;\n\t} elsif ($flag eq '--sort-fold') {\n\t    ++$fold;\n\t}\n    }\n    my @PLATFORM = qw(aix win32 wince os2 netware vms test);\n    my %PLATFORM;\n    @PLATFORM{@PLATFORM} = ();\n\n    die \"PLATFORM undefined, must be one of: @PLATFORM\\n\"\n\tunless defined $ARGS{PLATFORM};\n    die \"PLATFORM must be one of: @PLATFORM\\n\"\n\tunless exists $PLATFORM{$ARGS{PLATFORM}};\n}\nuse constant PLATFORM => $ARGS{PLATFORM};\n\nrequire \"$ARGS{TARG_DIR}regen/embed_lib.pl\";\n\n# Is the following guard strictly necessary? Added during refactoring\n# to keep the same behaviour when merging other code into here.\nprocess_cc_flags(@Config{qw(ccflags optimize)})\n    if $ARGS{PLATFORM} ne 'win32' && $ARGS{PLATFORM} ne 'wince'\n    && $ARGS{PLATFORM} ne 'netware';\n\n# Add the compile-time options that miniperl was built with to %define.\n# On Win32 these are not the same options as perl itself will be built\n# with since miniperl is built with a canned config (one of the win32/\n# config_H.*) and none of the BUILDOPT's that are set in the makefiles,\n# but they do include some #define's that are hard-coded in various\n# source files and header files and don't include any BUILDOPT's that\n# the user might have chosen to disable because the canned configs are\n# minimal configs that don't include any of those options.\n\n#don't use the host Perl's -V defines for the WinCE Perl\nif($ARGS{PLATFORM} ne 'wince') {\n    my @options = sort(Config::bincompat_options(), Config::non_bincompat_options());\n    print STDERR \"Options: (@options)\\n\" unless $ARGS{PLATFORM} eq 'test';\n    $define{$_} = 1 foreach @options;\n}\n\nmy %exportperlmalloc =\n    (\n       Perl_malloc\t\t=>\t\"malloc\",\n       Perl_mfree\t\t=>\t\"free\",\n       Perl_realloc\t\t=>\t\"realloc\",\n       Perl_calloc\t\t=>\t\"calloc\",\n    );\n\nmy $exportperlmalloc = $ARGS{PLATFORM} eq 'os2';\n\nmy $config_h = 'config.h';\nopen(CFG, '<', $config_h) || die \"Cannot open $config_h: $!\\n\";\nwhile (<CFG>) {\n    $define{$1} = 1 if /^\\s*\\#\\s*define\\s+(MYMALLOC|MULTIPLICITY\n                                           |SPRINTF_RETURNS_STRLEN\n                                           |KILL_BY_SIGPRC\n                                           |(?:PERL|USE|HAS)_\\w+)\\b/x;\n}\nclose(CFG);\n\n# perl.h logic duplication begins\n\nif ($define{USE_ITHREADS}) {\n    if (!$define{MULTIPLICITY}) {\n        $define{MULTIPLICITY} = 1;\n    }\n}\n\n$define{PERL_IMPLICIT_CONTEXT} ||=\n    $define{USE_ITHREADS} ||\n    $define{MULTIPLICITY} ;\n\nif ($define{USE_ITHREADS} && $ARGS{PLATFORM} ne 'win32' && $^O ne 'darwin') {\n    $define{USE_REENTRANT_API} = 1;\n}\n\n# perl.h logic duplication ends\n\nprint STDERR \"Defines: (\" . join(' ', sort keys %define) . \")\\n\"\n     unless $ARGS{PLATFORM} eq 'test';\n\nmy $sym_ord = 0;\nmy %ordinal;\n\nif ($ARGS{PLATFORM} eq 'os2') {\n    if (open my $fh, '<', 'perl5.def') {\n      while (<$fh>) {\n\tlast if /^\\s*EXPORTS\\b/;\n      }\n      while (<$fh>) {\n\t$ordinal{$1} = $2 if /^\\s*\"(\\w+)\"\\s*(?:=\\s*\"\\w+\"\\s*)?\\@(\\d+)\\s*$/;\n\t# This allows skipping ordinals which were used in older versions\n\t$sym_ord = $1 if /^\\s*;\\s*LAST_ORDINAL\\s*=\\s*(\\d+)\\s*$/;\n      }\n      $sym_ord < $_ and $sym_ord = $_ for values %ordinal; # Take the max\n    }\n}\n\nmy %skip;\n# All platforms export boot_DynaLoader unconditionally.\nmy %export = ( boot_DynaLoader => 1 );\n\nsub try_symbols {\n    foreach my $symbol (@_) {\n\t++$export{$symbol} unless exists $skip{$symbol};\n    }\n}\n\nsub readvar {\n    # $hash is the hash that we're adding to. For one of our callers, it will\n    # actually be the skip hash but that doesn't affect the intent of what\n    # we're doing, as in that case we skip adding something to the skip hash\n    # for the second time.\n\n    my $file = $ARGS{TARG_DIR} . shift;\n    my $hash = shift;\n    my $proc = shift;\n    open my $vars, '<', $file or die die \"Cannot open $file: $!\\n\";\n\n    while (<$vars>) {\n\t# All symbols have a Perl_ prefix because that's what embed.h sticks\n\t# in front of them.  The A?I?S?C? is strictly speaking wrong.\n\tnext unless /\\bPERLVAR(A?I?S?C?)\\(([IGT]),\\s*(\\w+)/;\n\n\tmy $var = \"PL_$3\";\n\tmy $symbol = $proc ? &$proc($1,$2,$3) : $var;\n\t++$hash->{$symbol} unless exists $skip{$var};\n    }\n}\n\nif ($ARGS{PLATFORM} ne 'os2') {\n    ++$skip{$_} foreach qw(\n\t\t     PL_cryptseen\n\t\t     PL_opsave\n\t\t     Perl_GetVars\n\t\t     Perl_dump_fds\n\t\t     Perl_my_bcopy\n\t\t     Perl_my_bzero\n\t\t     Perl_my_chsize\n\t\t     Perl_my_htonl\n\t\t     Perl_my_memcmp\n\t\t     Perl_my_memset\n\t\t     Perl_my_ntohl\n\t\t     Perl_my_swap\n\t\t\t );\n    if ($ARGS{PLATFORM} eq 'vms') {\n\t++$skip{PL_statusvalue_posix};\n        # This is a wrapper if we have symlink, not a replacement\n        # if we don't.\n        ++$skip{Perl_my_symlink} unless $Config{d_symlink};\n    } else {\n\t++$skip{PL_statusvalue_vms};\n\tif ($ARGS{PLATFORM} ne 'aix') {\n\t    ++$skip{$_} foreach qw(\n\t\t\t\tPL_DBcv\n\t\t\t\tPL_generation\n\t\t\t\tPL_lastgotoprobe\n\t\t\t\tPL_modcount\n\t\t\t\tPL_timesbuf\n\t\t\t\tmain\n\t\t\t\t );\n\t}\n    }\n}\n\nif ($ARGS{PLATFORM} ne 'vms') {\n    # VMS does its own thing for these symbols.\n    ++$skip{$_} foreach qw(\n\t\t\tPL_sig_handlers_initted\n\t\t\tPL_sig_ignoring\n\t\t\tPL_sig_defaulting\n\t\t\t );\n    if ($ARGS{PLATFORM} ne 'win32') {\n\t++$skip{$_} foreach qw(\n\t\t\t    Perl_do_spawn\n\t\t\t    Perl_do_spawn_nowait\n\t\t\t    Perl_do_aspawn\n\t\t\t     );\n    }\n}\n\nif ($ARGS{PLATFORM} ne 'win32') {\n    ++$skip{$_} foreach qw(\n\t\t    Perl_my_setlocale\n\t\t\t );\n}\n\nunless ($define{UNLINK_ALL_VERSIONS}) {\n    ++$skip{Perl_unlnk};\n}\n\nunless ($define{'DEBUGGING'}) {\n    ++$skip{$_} foreach qw(\n\t\t    Perl_debop\n\t\t    Perl_debprofdump\n\t\t    Perl_debstack\n\t\t    Perl_debstackptrs\n\t\t    Perl_pad_sv\n\t\t    Perl_pad_setsv\n\t\t    Perl_set_padlist\n\t\t    Perl_hv_assert\n\t\t    PL_watchaddr\n\t\t    PL_watchok\n\t\t    PL_watch_pvx\n\t\t\t );\n}\n\nif ($define{'PERL_IMPLICIT_SYS'}) {\n    ++$skip{$_} foreach qw(\n\t\t    Perl_my_popen\n\t\t    Perl_my_pclose\n\t\t\t );\n    ++$export{$_} foreach qw(perl_get_host_info perl_alloc_override);\n    ++$export{perl_clone_host} if $define{USE_ITHREADS};\n}\nelse {\n    ++$skip{$_} foreach qw(\n\t\t    PL_Mem\n\t\t    PL_MemShared\n\t\t    PL_MemParse\n\t\t    PL_Env\n\t\t    PL_StdIO\n\t\t    PL_LIO\n\t\t    PL_Dir\n\t\t    PL_Sock\n\t\t    PL_Proc\n\t\t    perl_alloc_using\n\t\t    perl_clone_using\n\t\t\t );\n}\n\nunless ($define{'PERL_OLD_COPY_ON_WRITE'}\n     || $define{'PERL_NEW_COPY_ON_WRITE'}) {\n    ++$skip{Perl_sv_setsv_cow};\n}\n\nunless ($define{PERL_SAWAMPERSAND}) {\n    ++$skip{PL_sawampersand};\n}\n\nunless ($define{'USE_REENTRANT_API'}) {\n    ++$skip{PL_reentrant_buffer};\n}\n\nif ($define{'MYMALLOC'}) {\n    try_symbols(qw(\n\t\t    Perl_dump_mstats\n\t\t    Perl_get_mstats\n\t\t    Perl_strdup\n\t\t    Perl_putenv\n\t\t    MallocCfg_ptr\n\t\t    MallocCfgP_ptr\n\t\t    ));\n    unless ($define{USE_ITHREADS}) {\n\t++$skip{PL_malloc_mutex}\n    }\n}\nelse {\n    ++$skip{$_} foreach qw(\n\t\t    PL_malloc_mutex\n\t\t    Perl_dump_mstats\n\t\t    Perl_get_mstats\n\t\t    MallocCfg_ptr\n\t\t    MallocCfgP_ptr\n\t\t\t );\n}\n\nif ($define{'PERL_USE_SAFE_PUTENV'}) {\n    ++$skip{PL_use_safe_putenv};\n}\n\nunless ($define{'USE_ITHREADS'}) {\n    ++$skip{PL_thr_key};\n}\n\n# USE_5005THREADS symbols. Kept as reference for easier removal\n++$skip{$_} foreach qw(\n\t\t    PL_sv_mutex\n\t\t    PL_strtab_mutex\n\t\t    PL_svref_mutex\n\t\t    PL_cred_mutex\n\t\t    PL_eval_mutex\n\t\t    PL_fdpid_mutex\n\t\t    PL_sv_lock_mutex\n\t\t    PL_eval_cond\n\t\t    PL_eval_owner\n\t\t    PL_threads_mutex\n\t\t    PL_nthreads\n\t\t    PL_nthreads_cond\n\t\t    PL_threadnum\n\t\t    PL_threadsv_names\n\t\t    PL_thrsv\n\t\t    PL_vtbl_mutex\n\t\t    Perl_condpair_magic\n\t\t    Perl_new_struct_thread\n\t\t    Perl_per_thread_magicals\n\t\t    Perl_thread_create\n\t\t    Perl_find_threadsv\n\t\t    Perl_unlock_condpair\n\t\t    Perl_magic_mutexfree\n\t\t    Perl_sv_lock\n\t\t     );\n\nunless ($define{'USE_ITHREADS'}) {\n    ++$skip{$_} foreach qw(\n\t\t    PL_check_mutex\n\t\t    PL_op_mutex\n\t\t    PL_regex_pad\n\t\t    PL_regex_padav\n\t\t    PL_dollarzero_mutex\n\t\t    PL_hints_mutex\n\t\t    PL_my_ctx_mutex\n\t\t    PL_perlio_mutex\n\t\t    PL_stashpad\n\t\t    PL_stashpadix\n\t\t    PL_stashpadmax\n\t\t    Perl_alloccopstash\n\t\t    Perl_allocfilegv\n\t\t    Perl_clone_params_del\n\t\t    Perl_clone_params_new\n\t\t    Perl_parser_dup\n\t\t    Perl_dirp_dup\n\t\t    Perl_cx_dup\n\t\t    Perl_si_dup\n\t\t    Perl_any_dup\n\t\t    Perl_ss_dup\n\t\t    Perl_fp_dup\n\t\t    Perl_gp_dup\n\t\t    Perl_he_dup\n\t\t    Perl_mg_dup\n\t\t    Perl_re_dup_guts\n\t\t    Perl_sv_dup\n\t\t    Perl_sv_dup_inc\n\t\t    Perl_rvpv_dup\n\t\t    Perl_hek_dup\n\t\t    Perl_sys_intern_dup\n\t\t    perl_clone\n\t\t    perl_clone_using\n\t\t    Perl_stashpv_hvname_match\n\t\t    Perl_regdupe_internal\n\t\t    Perl_newPADOP\n\t\t\t );\n}\n\nunless ($define{'PERL_IMPLICIT_CONTEXT'}) {\n    ++$skip{$_} foreach qw(\n\t\t    PL_my_cxt_index\n\t\t    PL_my_cxt_list\n\t\t    PL_my_cxt_size\n\t\t    PL_my_cxt_keys\n\t\t    Perl_croak_nocontext\n\t\t    Perl_die_nocontext\n\t\t    Perl_deb_nocontext\n\t\t    Perl_form_nocontext\n\t\t    Perl_load_module_nocontext\n\t\t    Perl_mess_nocontext\n\t\t    Perl_warn_nocontext\n\t\t    Perl_warner_nocontext\n\t\t    Perl_newSVpvf_nocontext\n\t\t    Perl_sv_catpvf_nocontext\n\t\t    Perl_sv_setpvf_nocontext\n\t\t    Perl_sv_catpvf_mg_nocontext\n\t\t    Perl_sv_setpvf_mg_nocontext\n\t\t    Perl_my_cxt_init\n\t\t    Perl_my_cxt_index\n\t\t\t );\n}\n\nunless ($define{'PERL_OP_PARENT'}) {\n    ++$skip{$_} foreach qw(\n\t\t    Perl_op_parent\n                );\n}\n\nif ($define{'NO_MATHOMS'}) {\n    # win32 builds happen in the win32/ subdirectory, but vms builds happen\n    # at the top level, so we need to look in two candidate locations for\n    # the mathoms.c file.\n    my ($file) = grep { -f } qw( mathoms.c ../mathoms.c )\n        or die \"No mathoms.c file found in . or ..\\n\";\n    open my $mathoms, '<', $file\n        or die \"Cannot open $file: $!\\n\";\n    while (<$mathoms>) {\n        ++$skip{$1} if /\\A ( NATIVE_TO_NEED\n                           | ASCII_TO_NEED\n                           | Perl_\\w+ ) \\s* \\( /axms;\n    }\n}\n\nunless ($define{'PERL_NEED_APPCTX'}) {\n    ++$skip{PL_appctx};\n}\n\nunless ($define{'PERL_NEED_TIMESBASE'}) {\n    ++$skip{PL_timesbase};\n}\n\nunless ($define{'DEBUG_LEAKING_SCALARS'}) {\n    ++$skip{PL_sv_serial};\n}\n\nunless ($define{'DEBUG_LEAKING_SCALARS_FORK_DUMP'}) {\n    ++$skip{PL_dumper_fd};\n}\n\nunless ($define{'PERL_DONT_CREATE_GVSV'}) {\n    ++$skip{Perl_gv_SVadd};\n}\n\nif ($define{'SPRINTF_RETURNS_STRLEN'}) {\n    ++$skip{Perl_my_sprintf};\n}\n\nunless ($define{'PERL_USES_PL_PIDSTATUS'}) {\n    ++$skip{PL_pidstatus};\n}\n\nunless ($define{'PERL_TRACK_MEMPOOL'}) {\n    ++$skip{PL_memory_debug_header};\n}\n\nunless ($define{'MULTIPLICITY'}) {\n    ++$skip{$_} foreach qw(\n\t\t    PL_interp_size\n\t\t    PL_interp_size_5_18_0\n\t\t\t );\n}\n\nunless ($define{'PERL_GLOBAL_STRUCT'}) {\n    ++$skip{PL_global_struct_size};\n}\n\nunless ($define{'PERL_GLOBAL_STRUCT_PRIVATE'}) {\n    ++$skip{$_} foreach qw(\n\t\t    PL_my_cxt_keys\n\t\t    Perl_my_cxt_index\n\t\t\t );\n}\n\nunless ($define{HAS_MMAP}) {\n    ++$skip{PL_mmap_page_size};\n}\n\nif ($define{HAS_SIGACTION}) {\n    ++$skip{PL_sig_trapped};\n\n    if ($ARGS{PLATFORM} eq 'vms') {\n        # FAKE_PERSISTENT_SIGNAL_HANDLERS defined as !defined(HAS_SIGACTION)\n        ++$skip{PL_sig_ignoring};\n        ++$skip{PL_sig_handlers_initted} unless $define{KILL_BY_SIGPRC};\n    }\n}\n\nif ($ARGS{PLATFORM} eq 'vms' && !$define{KILL_BY_SIGPRC}) {\n    # FAKE_DEFAULT_SIGNAL_HANDLERS defined as KILL_BY_SIGPRC\n    ++$skip{Perl_csighandler_init};\n    ++$skip{Perl_my_kill};\n    ++$skip{Perl_sig_to_vmscondition};\n    ++$skip{PL_sig_defaulting};\n    ++$skip{PL_sig_handlers_initted} unless !$define{HAS_SIGACTION};\n}\n\nunless ($define{USE_LOCALE_COLLATE}) {\n    ++$skip{$_} foreach qw(\n\t\t    PL_collation_ix\n\t\t    PL_collation_name\n\t\t    PL_collation_standard\n\t\t    PL_collxfrm_base\n\t\t    PL_collxfrm_mult\n\t\t    Perl_sv_collxfrm\n\t\t    Perl_sv_collxfrm_flags\n\t\t\t );\n}\n\nunless ($define{USE_LOCALE_NUMERIC}) {\n    ++$skip{$_} foreach qw(\n\t\t    PL_numeric_local\n\t\t    PL_numeric_name\n\t\t    PL_numeric_radix_sv\n\t\t    PL_numeric_standard\n\t\t\t );\n}\n\nunless ($define{'USE_C_BACKTRACE'}) {\n    ++$skip{Perl_get_c_backtrace_dump};\n    ++$skip{Perl_dump_c_backtrace};\n}\n\nunless ($define{HAVE_INTERP_INTERN}) {\n    ++$skip{$_} foreach qw(\n\t\t    Perl_sys_intern_clear\n\t\t    Perl_sys_intern_dup\n\t\t    Perl_sys_intern_init\n\t\t    PL_sys_intern\n\t\t\t );\n}\n\nif ($define{HAS_SIGNBIT}) {\n    ++$skip{Perl_signbit};\n}\n\nif ($define{'PERL_GLOBAL_STRUCT'}) {\n    readvar('perlvars.h', \\%skip);\n    # This seems like the least ugly way to cope with the fact that PL_sh_path\n    # is mentioned in perlvar.h and globvar.sym, and always exported.\n    delete $skip{PL_sh_path};\n    ++$export{Perl_GetVars};\n    try_symbols(qw(PL_Vars PL_VarsPtr))\n      unless $ARGS{CCTYPE} eq 'GCC' || $define{PERL_GLOBAL_STRUCT_PRIVATE};\n} else {\n    ++$skip{$_} foreach qw(Perl_init_global_struct Perl_free_global_struct);\n}\n\n++$skip{PL_op_exec_cnt}\n    unless $define{PERL_TRACE_OPS};\n\n# functions from *.sym files\n\nmy @syms = qw(globvar.sym);\n\n# Symbols that are the public face of the PerlIO layers implementation\n# These are in _addition to_ the public face of the abstraction\n# and need to be exported to allow XS modules to implement layers\nmy @layer_syms = qw(\n\t\t    PerlIOBase_binmode\n\t\t    PerlIOBase_clearerr\n\t\t    PerlIOBase_close\n\t\t    PerlIOBase_dup\n\t\t    PerlIOBase_eof\n\t\t    PerlIOBase_error\n\t\t    PerlIOBase_fileno\n\t\t    PerlIOBase_open\n\t\t    PerlIOBase_noop_fail\n\t\t    PerlIOBase_noop_ok\n\t\t    PerlIOBase_popped\n\t\t    PerlIOBase_pushed\n\t\t    PerlIOBase_read\n\t\t    PerlIOBase_setlinebuf\n\t\t    PerlIOBase_unread\n\t\t    PerlIOBuf_bufsiz\n\t\t    PerlIOBuf_close\n\t\t    PerlIOBuf_dup\n\t\t    PerlIOBuf_fill\n\t\t    PerlIOBuf_flush\n\t\t    PerlIOBuf_get_base\n\t\t    PerlIOBuf_get_cnt\n\t\t    PerlIOBuf_get_ptr\n\t\t    PerlIOBuf_open\n\t\t    PerlIOBuf_popped\n\t\t    PerlIOBuf_pushed\n\t\t    PerlIOBuf_read\n\t\t    PerlIOBuf_seek\n\t\t    PerlIOBuf_set_ptrcnt\n\t\t    PerlIOBuf_tell\n\t\t    PerlIOBuf_unread\n\t\t    PerlIOBuf_write\n\t\t    PerlIO_allocate\n\t\t    PerlIO_apply_layera\n\t\t    PerlIO_apply_layers\n\t\t    PerlIO_arg_fetch\n\t\t    PerlIO_debug\n\t\t    PerlIO_define_layer\n\t\t    PerlIO_find_layer\n\t\t    PerlIO_isutf8\n\t\t    PerlIO_layer_fetch\n\t\t    PerlIO_list_alloc\n\t\t    PerlIO_list_free\n\t\t    PerlIO_modestr\n\t\t    PerlIO_parse_layers\n\t\t    PerlIO_pending\n\t\t    PerlIO_perlio\n\t\t    PerlIO_pop\n\t\t    PerlIO_push\n\t\t    PerlIO_sv_dup\n\t\t    Perl_PerlIO_clearerr\n\t\t    Perl_PerlIO_close\n\t\t    Perl_PerlIO_context_layers\n\t\t    Perl_PerlIO_eof\n\t\t    Perl_PerlIO_error\n\t\t    Perl_PerlIO_fileno\n\t\t    Perl_PerlIO_fill\n\t\t    Perl_PerlIO_flush\n\t\t    Perl_PerlIO_get_base\n\t\t    Perl_PerlIO_get_bufsiz\n\t\t    Perl_PerlIO_get_cnt\n\t\t    Perl_PerlIO_get_ptr\n\t\t    Perl_PerlIO_read\n\t\t    Perl_PerlIO_restore_errno\n\t\t    Perl_PerlIO_save_errno\n\t\t    Perl_PerlIO_seek\n\t\t    Perl_PerlIO_set_cnt\n\t\t    Perl_PerlIO_set_ptrcnt\n\t\t    Perl_PerlIO_setlinebuf\n\t\t    Perl_PerlIO_stderr\n\t\t    Perl_PerlIO_stdin\n\t\t    Perl_PerlIO_stdout\n\t\t    Perl_PerlIO_tell\n\t\t    Perl_PerlIO_unread\n\t\t    Perl_PerlIO_write\n);\nif ($ARGS{PLATFORM} eq 'netware') {\n    push(@layer_syms,'PL_def_layerlist','PL_known_layers','PL_perlio');\n}\n\nif ($define{'USE_PERLIO'}) {\n    # Export the symbols that make up the PerlIO abstraction, regardless\n    # of its implementation - read from a file\n    push @syms, 'perlio.sym';\n\n    # PerlIO with layers - export implementation\n    try_symbols(@layer_syms, 'perlsio_binmode');\n} else {\n\t# -Uuseperlio\n\t# Skip the PerlIO layer symbols - although\n\t# nothing should have exported them anyway.\n\t++$skip{$_} foreach @layer_syms;\n\t++$skip{$_} foreach qw(\n\t\t\tperlsio_binmode\n\t\t\tPL_def_layerlist\n\t\t\tPL_known_layers\n\t\t\tPL_perlio\n\t\t\tPL_perlio_debug_fd\n\t\t\tPL_perlio_fd_refcnt\n\t\t\tPL_perlio_fd_refcnt_size\n\t\t\tPL_perlio_mutex\n\t\t\t     );\n\n\t# Also do NOT add abstraction symbols from $perlio_sym\n\t# abstraction is done as #define to stdio\n\t# Remaining remnants that _may_ be functions are handled below.\n}\n\nunless ($define{'USE_QUADMATH'}) {\n  ++$skip{Perl_quadmath_format_needed};\n  ++$skip{Perl_quadmath_format_single};\n}\n\n###############################################################################\n\n# At this point all skip lists should be completed, as we are about to test\n# many symbols against them.\n\n{\n    my %seen;\n    my ($embed) = setup_embed($ARGS{TARG_DIR});\n\n    foreach (@$embed) {\n\tmy ($flags, $retval, $func, @args) = @$_;\n\tnext unless $func;\n\tif ($flags =~ /[AX]/ && $flags !~ /[xmi]/ || $flags =~ /b/) {\n\t    # public API, so export\n\n\t    # If a function is defined twice, for example before and after\n\t    # an #else, only export its name once. Important to do this test\n\t    # within the block, as the *first* definition may have flags which\n\t    # mean \"don't export\"\n\t    next if $seen{$func}++;\n\t    # Should we also skip adding the Perl_ prefix if $flags =~ /o/ ?\n\t    $func = \"Perl_$func\" if ($flags =~ /[pbX]/ && $func !~ /^Perl_/); \n\t    ++$export{$func} unless exists $skip{$func};\n\t}\n    }\n}\n\nforeach (@syms) {\n    my $syms = $ARGS{TARG_DIR} . $_;\n    open my $global, '<', $syms or die \"failed to open $syms: $!\\n\";\n    while (<$global>) {\n\tnext unless /^([A-Za-z].*)/;\n\tmy $symbol = \"$1\";\n\t++$export{$symbol} unless exists $skip{$symbol};\n    }\n}\n\n# variables\n\nif ($define{'MULTIPLICITY'} && $define{PERL_GLOBAL_STRUCT}) {\n    readvar('perlvars.h', \\%export, sub { \"Perl_\" . $_[1] . $_[2] . \"_ptr\" });\n    # XXX AIX seems to want the perlvars.h symbols, for some reason\n    if ($ARGS{PLATFORM} eq 'aix' or $ARGS{PLATFORM} eq 'os2') {\t# OS/2 needs PL_thr_key\n\treadvar('perlvars.h', \\%export);\n    }\n}\nelse {\n    unless ($define{'PERL_GLOBAL_STRUCT'}) {\n\treadvar('perlvars.h', \\%export);\n    }\n    unless ($define{MULTIPLICITY}) {\n\treadvar('intrpvar.h', \\%export);\n    }\n}\n\n# Oddities from PerlIO\n# All have alternate implementations in perlio.c, so always exist.\n# Should they be considered to be part of the API?\ntry_symbols(qw(\n\t\t    PerlIO_binmode\n\t\t    PerlIO_getpos\n\t\t    PerlIO_init\n\t\t    PerlIO_setpos\n\t\t    PerlIO_tmpfile\n\t     ));\n\nif ($ARGS{PLATFORM} eq 'win32') {\n    try_symbols(qw(\n\t\t\t\t win32_free_childdir\n\t\t\t\t win32_free_childenv\n\t\t\t\t win32_get_childdir\n\t\t\t\t win32_get_childenv\n\t\t\t\t win32_spawnvp\n\t\t ));\n}\n\nif ($ARGS{PLATFORM} eq 'wince') {\n    ++$skip{'win32_isatty'}; # commit 4342f4d6df is win32-only\n}\n\nif ($ARGS{PLATFORM} =~ /^win(?:32|ce)$/) {\n    try_symbols(qw(\n\t\t\t    Perl_init_os_extras\n\t\t\t    Perl_thread_create\n\t\t\t    Perl_win32_init\n\t\t\t    Perl_win32_term\n\t\t\t    RunPerl\n\t\t\t    win32_async_check\n\t\t\t    win32_errno\n\t\t\t    win32_environ\n\t\t\t    win32_abort\n\t\t\t    win32_fstat\n\t\t\t    win32_stat\n\t\t\t    win32_pipe\n\t\t\t    win32_popen\n\t\t\t    win32_pclose\n\t\t\t    win32_rename\n\t\t\t    win32_setmode\n\t\t\t    win32_chsize\n\t\t\t    win32_lseek\n\t\t\t    win32_tell\n\t\t\t    win32_dup\n\t\t\t    win32_dup2\n\t\t\t    win32_open\n\t\t\t    win32_close\n\t\t\t    win32_eof\n\t\t\t    win32_isatty\n\t\t\t    win32_read\n\t\t\t    win32_write\n\t\t\t    win32_mkdir\n\t\t\t    win32_rmdir\n\t\t\t    win32_chdir\n\t\t\t    win32_flock\n\t\t\t    win32_execv\n\t\t\t    win32_execvp\n\t\t\t    win32_htons\n\t\t\t    win32_ntohs\n\t\t\t    win32_htonl\n\t\t\t    win32_ntohl\n\t\t\t    win32_inet_addr\n\t\t\t    win32_inet_ntoa\n\t\t\t    win32_socket\n\t\t\t    win32_bind\n\t\t\t    win32_listen\n\t\t\t    win32_accept\n\t\t\t    win32_connect\n\t\t\t    win32_send\n\t\t\t    win32_sendto\n\t\t\t    win32_recv\n\t\t\t    win32_recvfrom\n\t\t\t    win32_shutdown\n\t\t\t    win32_closesocket\n\t\t\t    win32_ioctlsocket\n\t\t\t    win32_setsockopt\n\t\t\t    win32_getsockopt\n\t\t\t    win32_getpeername\n\t\t\t    win32_getsockname\n\t\t\t    win32_gethostname\n\t\t\t    win32_gethostbyname\n\t\t\t    win32_gethostbyaddr\n\t\t\t    win32_getprotobyname\n\t\t\t    win32_getprotobynumber\n\t\t\t    win32_getservbyname\n\t\t\t    win32_getservbyport\n\t\t\t    win32_select\n\t\t\t    win32_endhostent\n\t\t\t    win32_endnetent\n\t\t\t    win32_endprotoent\n\t\t\t    win32_endservent\n\t\t\t    win32_getnetent\n\t\t\t    win32_getnetbyname\n\t\t\t    win32_getnetbyaddr\n\t\t\t    win32_getprotoent\n\t\t\t    win32_getservent\n\t\t\t    win32_sethostent\n\t\t\t    win32_setnetent\n\t\t\t    win32_setprotoent\n\t\t\t    win32_setservent\n\t\t\t    win32_getenv\n\t\t\t    win32_putenv\n\t\t\t    win32_perror\n\t\t\t    win32_malloc\n\t\t\t    win32_calloc\n\t\t\t    win32_realloc\n\t\t\t    win32_free\n\t\t\t    win32_sleep\n\t\t\t    win32_times\n\t\t\t    win32_access\n\t\t\t    win32_alarm\n\t\t\t    win32_chmod\n\t\t\t    win32_open_osfhandle\n\t\t\t    win32_get_osfhandle\n\t\t\t    win32_ioctl\n\t\t\t    win32_link\n\t\t\t    win32_unlink\n\t\t\t    win32_utime\n\t\t\t    win32_gettimeofday\n\t\t\t    win32_uname\n\t\t\t    win32_wait\n\t\t\t    win32_waitpid\n\t\t\t    win32_kill\n\t\t\t    win32_str_os_error\n\t\t\t    win32_opendir\n\t\t\t    win32_readdir\n\t\t\t    win32_telldir\n\t\t\t    win32_seekdir\n\t\t\t    win32_rewinddir\n\t\t\t    win32_closedir\n\t\t\t    win32_longpath\n\t\t\t    win32_ansipath\n\t\t\t    win32_os_id\n\t\t\t    win32_getpid\n\t\t\t    win32_crypt\n\t\t\t    win32_dynaload\n\t\t\t    win32_clearenv\n\t\t\t    win32_stdin\n\t\t\t    win32_stdout\n\t\t\t    win32_stderr\n\t\t\t    win32_ferror\n\t\t\t    win32_feof\n\t\t\t    win32_strerror\n\t\t\t    win32_fprintf\n\t\t\t    win32_printf\n\t\t\t    win32_vfprintf\n\t\t\t    win32_vprintf\n\t\t\t    win32_fread\n\t\t\t    win32_fwrite\n\t\t\t    win32_fopen\n\t\t\t    win32_fdopen\n\t\t\t    win32_freopen\n\t\t\t    win32_fclose\n\t\t\t    win32_fputs\n\t\t\t    win32_fputc\n\t\t\t    win32_ungetc\n\t\t\t    win32_getc\n\t\t\t    win32_fileno\n\t\t\t    win32_clearerr\n\t\t\t    win32_fflush\n\t\t\t    win32_ftell\n\t\t\t    win32_fseek\n\t\t\t    win32_fgetpos\n\t\t\t    win32_fsetpos\n\t\t\t    win32_rewind\n\t\t\t    win32_tmpfile\n\t\t\t    win32_setbuf\n\t\t\t    win32_setvbuf\n\t\t\t    win32_flushall\n\t\t\t    win32_fcloseall\n\t\t\t    win32_fgets\n\t\t\t    win32_gets\n\t\t\t    win32_fgetc\n\t\t\t    win32_putc\n\t\t\t    win32_puts\n\t\t\t    win32_getchar\n\t\t\t    win32_putchar\n\t\t ));\n}\nelsif ($ARGS{PLATFORM} eq 'vms') {\n    try_symbols(qw(\n\t\t      Perl_cando\n\t\t      Perl_cando_by_name\n\t\t      Perl_closedir\n\t\t      Perl_csighandler_init\n\t\t      Perl_do_rmdir\n\t\t      Perl_fileify_dirspec\n\t\t      Perl_fileify_dirspec_ts\n\t\t      Perl_fileify_dirspec_utf8\n\t\t      Perl_fileify_dirspec_utf8_ts\n\t\t      Perl_flex_fstat\n\t\t      Perl_flex_lstat\n\t\t      Perl_flex_stat\n\t\t      Perl_kill_file\n\t\t      Perl_my_chdir\n\t\t      Perl_my_chmod\n\t\t      Perl_my_crypt\n\t\t      Perl_my_endpwent\n\t\t      Perl_my_fclose\n\t\t      Perl_my_fdopen\n\t\t      Perl_my_fgetname\n\t\t      Perl_my_flush\n\t\t      Perl_my_fwrite\n\t\t      Perl_my_gconvert\n\t\t      Perl_my_getenv\n\t\t      Perl_my_getenv_len\n\t\t      Perl_my_getlogin\n\t\t      Perl_my_getpwnam\n\t\t      Perl_my_getpwuid\n\t\t      Perl_my_gmtime\n\t\t      Perl_my_kill\n\t\t      Perl_my_localtime\n\t\t      Perl_my_mkdir\n\t\t      Perl_my_sigaction\n\t\t      Perl_my_symlink\n\t\t      Perl_my_time\n\t\t      Perl_my_tmpfile\n\t\t      Perl_my_trnlnm\n\t\t      Perl_my_utime\n\t\t      Perl_my_waitpid\n\t\t      Perl_opendir\n\t\t      Perl_pathify_dirspec\n\t\t      Perl_pathify_dirspec_ts\n\t\t      Perl_pathify_dirspec_utf8\n\t\t      Perl_pathify_dirspec_utf8_ts\n\t\t      Perl_readdir\n\t\t      Perl_readdir_r\n\t\t      Perl_rename\n\t\t      Perl_rmscopy\n\t\t      Perl_rmsexpand\n\t\t      Perl_rmsexpand_ts\n\t\t      Perl_rmsexpand_utf8\n\t\t      Perl_rmsexpand_utf8_ts\n\t\t      Perl_seekdir\n\t\t      Perl_sig_to_vmscondition\n\t\t      Perl_telldir\n\t\t      Perl_tounixpath\n\t\t      Perl_tounixpath_ts\n\t\t      Perl_tounixpath_utf8\n\t\t      Perl_tounixpath_utf8_ts\n\t\t      Perl_tounixspec\n\t\t      Perl_tounixspec_ts\n\t\t      Perl_tounixspec_utf8\n\t\t      Perl_tounixspec_utf8_ts\n\t\t      Perl_tovmspath\n\t\t      Perl_tovmspath_ts\n\t\t      Perl_tovmspath_utf8\n\t\t      Perl_tovmspath_utf8_ts\n\t\t      Perl_tovmsspec\n\t\t      Perl_tovmsspec_ts\n\t\t      Perl_tovmsspec_utf8\n\t\t      Perl_tovmsspec_utf8_ts\n\t\t      Perl_trim_unixpath\n\t\t      Perl_vms_case_tolerant\n\t\t      Perl_vms_do_aexec\n\t\t      Perl_vms_do_exec\n\t\t      Perl_vms_image_init\n\t\t      Perl_vms_realpath\n\t\t      Perl_vmssetenv\n\t\t      Perl_vmssetuserlnm\n\t\t      Perl_vmstrnenv\n\t\t      PerlIO_openn\n\t\t ));\n}\nelsif ($ARGS{PLATFORM} eq 'os2') {\n    try_symbols(qw(\n\t\t      ctermid\n\t\t      get_sysinfo\n\t\t      Perl_OS2_init\n\t\t      Perl_OS2_init3\n\t\t      Perl_OS2_term\n\t\t      OS2_Perl_data\n\t\t      dlopen\n\t\t      dlsym\n\t\t      dlerror\n\t\t      dlclose\n\t\t      dup2\n\t\t      dup\n\t\t      my_tmpfile\n\t\t      my_tmpnam\n\t\t      my_flock\n\t\t      my_rmdir\n\t\t      my_mkdir\n\t\t      my_getpwuid\n\t\t      my_getpwnam\n\t\t      my_getpwent\n\t\t      my_setpwent\n\t\t      my_endpwent\n\t\t      fork_with_resources\n\t\t      croak_with_os2error\n\t\t      setgrent\n\t\t      endgrent\n\t\t      getgrent\n\t\t      malloc_mutex\n\t\t      threads_mutex\n\t\t      nthreads\n\t\t      nthreads_cond\n\t\t      os2_cond_wait\n\t\t      os2_stat\n\t\t      os2_execname\n\t\t      async_mssleep\n\t\t      msCounter\n\t\t      InfoTable\n\t\t      pthread_join\n\t\t      pthread_create\n\t\t      pthread_detach\n\t\t      XS_Cwd_change_drive\n\t\t      XS_Cwd_current_drive\n\t\t      XS_Cwd_extLibpath\n\t\t      XS_Cwd_extLibpath_set\n\t\t      XS_Cwd_sys_abspath\n\t\t      XS_Cwd_sys_chdir\n\t\t      XS_Cwd_sys_cwd\n\t\t      XS_Cwd_sys_is_absolute\n\t\t      XS_Cwd_sys_is_relative\n\t\t      XS_Cwd_sys_is_rooted\n\t\t      XS_DynaLoader_mod2fname\n\t\t      XS_File__Copy_syscopy\n\t\t      Perl_Register_MQ\n\t\t      Perl_Deregister_MQ\n\t\t      Perl_Serve_Messages\n\t\t      Perl_Process_Messages\n\t\t      init_PMWIN_entries\n\t\t      PMWIN_entries\n\t\t      Perl_hab_GET\n\t\t      loadByOrdinal\n\t\t      pExtFCN\n\t\t      os2error\n\t\t      ResetWinError\n\t\t      CroakWinError\n\t\t      PL_do_undump\n\t\t ));\n}\nelsif ($ARGS{PLATFORM} eq 'netware') {\n    try_symbols(qw(\n\t\t\tPerl_init_os_extras\n\t\t\tPerl_thread_create\n\t\t\tPerl_nw5_init\n\t\t\tRunPerl\n\t\t\tAllocStdPerl\n\t\t\tFreeStdPerl\n\t\t\tdo_spawn2\n\t\t\tdo_aspawn\n\t\t\tnw_uname\n\t\t\tnw_stdin\n\t\t\tnw_stdout\n\t\t\tnw_stderr\n\t\t\tnw_feof\n\t\t\tnw_ferror\n\t\t\tnw_fopen\n\t\t\tnw_fclose\n\t\t\tnw_clearerr\n\t\t\tnw_getc\n\t\t\tnw_fgets\n\t\t\tnw_fputc\n\t\t\tnw_fputs\n\t\t\tnw_fflush\n\t\t\tnw_ungetc\n\t\t\tnw_fileno\n\t\t\tnw_fdopen\n\t\t\tnw_freopen\n\t\t\tnw_fread\n\t\t\tnw_fwrite\n\t\t\tnw_setbuf\n\t\t\tnw_setvbuf\n\t\t\tnw_vfprintf\n\t\t\tnw_ftell\n\t\t\tnw_fseek\n\t\t\tnw_rewind\n\t\t\tnw_tmpfile\n\t\t\tnw_fgetpos\n\t\t\tnw_fsetpos\n\t\t\tnw_dup\n\t\t\tnw_access\n\t\t\tnw_chmod\n\t\t\tnw_chsize\n\t\t\tnw_close\n\t\t\tnw_dup2\n\t\t\tnw_flock\n\t\t\tnw_isatty\n\t\t\tnw_link\n\t\t\tnw_lseek\n\t\t\tnw_stat\n\t\t\tnw_mktemp\n\t\t\tnw_open\n\t\t\tnw_read\n\t\t\tnw_rename\n\t\t\tnw_setmode\n\t\t\tnw_unlink\n\t\t\tnw_utime\n\t\t\tnw_write\n\t\t\tnw_chdir\n\t\t\tnw_rmdir\n\t\t\tnw_closedir\n\t\t\tnw_opendir\n\t\t\tnw_readdir\n\t\t\tnw_rewinddir\n\t\t\tnw_seekdir\n\t\t\tnw_telldir\n\t\t\tnw_htonl\n\t\t\tnw_htons\n\t\t\tnw_ntohl\n\t\t\tnw_ntohs\n\t\t\tnw_accept\n\t\t\tnw_bind\n\t\t\tnw_connect\n\t\t\tnw_endhostent\n\t\t\tnw_endnetent\n\t\t\tnw_endprotoent\n\t\t\tnw_endservent\n\t\t\tnw_gethostbyaddr\n\t\t\tnw_gethostbyname\n\t\t\tnw_gethostent\n\t\t\tnw_gethostname\n\t\t\tnw_getnetbyaddr\n\t\t\tnw_getnetbyname\n\t\t\tnw_getnetent\n\t\t\tnw_getpeername\n\t\t\tnw_getprotobyname\n\t\t\tnw_getprotobynumber\n\t\t\tnw_getprotoent\n\t\t\tnw_getservbyname\n\t\t\tnw_getservbyport\n\t\t\tnw_getservent\n\t\t\tnw_getsockname\n\t\t\tnw_getsockopt\n\t\t\tnw_inet_addr\n\t\t\tnw_listen\n\t\t\tnw_socket\n\t\t\tnw_recv\n\t\t\tnw_recvfrom\n\t\t\tnw_select\n\t\t\tnw_send\n\t\t\tnw_sendto\n\t\t\tnw_sethostent\n\t\t\tnw_setnetent\n\t\t\tnw_setprotoent\n\t\t\tnw_setservent\n\t\t\tnw_setsockopt\n\t\t\tnw_inet_ntoa\n\t\t\tnw_shutdown\n\t\t\tnw_crypt\n\t\t\tnw_execvp\n\t\t\tnw_kill\n\t\t\tnw_Popen\n\t\t\tnw_Pclose\n\t\t\tnw_Pipe\n\t\t\tnw_times\n\t\t\tnw_waitpid\n\t\t\tnw_getpid\n\t\t\tnw_spawnvp\n\t\t\tnw_os_id\n\t\t\tnw_open_osfhandle\n\t\t\tnw_get_osfhandle\n\t\t\tnw_abort\n\t\t\tnw_sleep\n\t\t\tnw_wait\n\t\t\tnw_dynaload\n\t\t\tnw_strerror\n\t\t\tfnFpSetMode\n\t\t\tfnInsertHashListAddrs\n\t\t\tfnGetHashListAddrs\n\t\t\tPerl_deb\n\t\t\tPerl_sv_setsv\n\t\t\tPerl_sv_catsv\n\t\t\tPerl_sv_catpvn\n\t\t\tPerl_sv_2pv\n\t\t\tnw_freeenviron\n\t\t\tRemove_Thread_Ctx\n\t\t ));\n}\n\n# When added this code was only run for Win32 and WinCE\n# Currently only Win32 links static extensions into the shared library.\n# The WinCE makefile doesn't appear to support static extensions, so this code\n# can't have any effect there.\n# The NetWare Makefile doesn't support static extensions (and hardcodes the\n# list of dynamic extensions, and the rules to build them)\n# For *nix (and presumably OS/2) with a shared libperl, Makefile.SH compiles\n# static extensions with -fPIC, but links them to perl, not libperl.so\n# The VMS build scripts don't yet implement static extensions at all.\n\nif ($ARGS{PLATFORM} =~ /^win(?:32|ce)$/) {\n    # records of type boot_module for statically linked modules (except Dynaloader)\n    my $static_ext = $Config{static_ext} // \"\";\n    $static_ext =~ s/\\//__/g;\n    $static_ext =~ s/\\bDynaLoader\\b//;\n    try_symbols(map {\"boot_$_\"} grep {/\\S/} split /\\s+/, $static_ext);\n    try_symbols(\"init_Win32CORE\") if $static_ext =~ /\\bWin32CORE\\b/;\n}\n\nif ($ARGS{PLATFORM} eq 'os2') {\n    my (%mapped, @missing);\n    open MAP, 'miniperl.map' or die 'Cannot read miniperl.map';\n    /^\\s*[\\da-f:]+\\s+(\\w+)/i and $mapped{$1}++ foreach <MAP>;\n    close MAP or die 'Cannot close miniperl.map';\n\n    @missing = grep { !exists $mapped{$_} }\n\t\t    keys %export;\n    @missing = grep { !exists $exportperlmalloc{$_} } @missing;\n    delete $export{$_} foreach @missing;\n}\n\n###############################################################################\n\n# Now all symbols should be defined because next we are going to output them.\n\n# Start with platform specific headers:\n\nif ($ARGS{PLATFORM} =~ /^win(?:32|ce)$/) {\n    my $dll = $define{PERL_DLL} ? $define{PERL_DLL} =~ s/\\.dll$//ir\n\t: \"perl$Config{api_revision}$Config{api_version}\";\n    print \"LIBRARY $dll\\n\";\n    # The DESCRIPTION module definition file statement is not supported\n    # by VC7 onwards.\n    if ($ARGS{CCTYPE} =~ /^(?:MSVC60|GCC)$/) {\n\tprint \"DESCRIPTION 'Perl interpreter'\\n\";\n    }\n    print \"EXPORTS\\n\";\n}\nelsif ($ARGS{PLATFORM} eq 'os2') {\n    (my $v = $]) =~ s/(\\d\\.\\d\\d\\d)(\\d\\d)$/$1_$2/;\n    $v .= '-thread' if $Config{archname} =~ /-thread/;\n    (my $dll = $define{PERL_DLL}) =~ s/\\.dll$//i;\n    $v .= \"\\@$Config{perl_patchlevel}\" if $Config{perl_patchlevel};\n    my $d = \"DESCRIPTION '\\@#perl5-porters\\@perl.org:$v#\\@ Perl interpreter, configured as $Config{config_args}'\";\n    $d = substr($d, 0, 249) . \"...'\" if length $d > 253;\n    print <<\"---EOP---\";\nLIBRARY '$dll' INITINSTANCE TERMINSTANCE\n$d\nSTACKSIZE 32768\nCODE LOADONCALL\nDATA LOADONCALL NONSHARED MULTIPLE\nEXPORTS\n---EOP---\n}\nelsif ($ARGS{PLATFORM} eq 'aix') {\n    my $OSVER = `uname -v`;\n    chop $OSVER;\n    my $OSREL = `uname -r`;\n    chop $OSREL;\n    if ($OSVER > 4 || ($OSVER == 4 && $OSREL >= 3)) {\n\tprint \"#! ..\\n\";\n    } else {\n\tprint \"#!\\n\";\n    }\n}\nelsif ($ARGS{PLATFORM} eq 'netware') {\n\tif ($ARGS{FILETYPE} eq 'def') {\n\tprint \"LIBRARY perl$Config{api_revision}$Config{api_version}\\n\";\n\tprint \"DESCRIPTION 'Perl interpreter for NetWare'\\n\";\n\tprint \"EXPORTS\\n\";\n\t}\n}\n\n# Then the symbols\n\nmy @symbols = $fold ? sort {lc $a cmp lc $b} keys %export : sort keys %export;\nforeach my $symbol (@symbols) {\n    if (PLATFORM eq 'win32' || PLATFORM eq 'wince') {\n\t# Remembering the origin file of each symbol is an alternative to PL_ matching\n\tif (substr($symbol, 0, 3) eq 'PL_') {\n\t    print \"\\t$symbol DATA\\n\";\n\t}\n\telse {\n\t    print \"\\t$symbol\\n\";\n\t}\n    }\n    elsif (PLATFORM eq 'os2') {\n\tprintf qq(    %-31s \\@%s\\n),\n\t  qq(\"$symbol\"), $ordinal{$symbol} || ++$sym_ord;\n\tprintf qq(    %-31s \\@%s\\n),\n\t  qq(\"$exportperlmalloc{$symbol}\" = \"$symbol\"),\n\t  $ordinal{$exportperlmalloc{$symbol}} || ++$sym_ord\n\t  if $exportperlmalloc and exists $exportperlmalloc{$symbol};\n    }\n    elsif (PLATFORM eq 'netware') {\n\tprint \"\\t$symbol,\\n\";\n    } else {\n\tprint \"$symbol\\n\";\n    }\n}\n\n# Then platform specific footers.\n\nif ($ARGS{PLATFORM} eq 'os2') {\n    print <<EOP;\n    dll_perlmain=main\n    fill_extLibpath\n    dir_subst\n    Perl_OS2_handler_install\n\n; LAST_ORDINAL=$sym_ord\nEOP\n}\n\n1;\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/uconfig64.sh": "#!/bin/sh\nAuthor=''\n_a='.a'\n_o='.o'\nafs='false'\nafsroot='/afs'\nalignbytes='8'\nansi2knr=''\naphostname='/bin/hostname'\narchlib='/usr/local/lib/perl5/5.22/unknown'\narchlibexp='/usr/local/lib/perl5/5.22/unknown'\narchname='unknown64'\nasctime_r_proto='0'\nbin='/usr/local/bin'\nbinexp='/usr/local/bin'\nbootstrap_charset='undef'\nbyteorder='12345678'\ncastflags='0'\ncf_by='root@localhost'\ncf_time='Thu Jan  1 00:00:00 GMT 1970'\ncharbits='8'\nclocktype='clock_t'\ncpp_stuff='42'\ncpplast='-'\ncppminus='-'\ncpprun='cc -E'\ncppstdin='cc -E'\ncrypt_r_proto='0'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEUldbl='undef'\nd_PRIFUldbl='undef'\nd_PRIGUldbl='undef'\nd_PRIXU64='define'\nd_PRId64='define'\nd_PRIeldbl='undef'\nd_PRIfldbl='undef'\nd_PRIgldbl='undef'\nd_PRIi64='define'\nd_PRIo64='define'\nd_PRIu64='define'\nd_PRIx64='define'\nd_SCNfldbl='define'\nd__fwalk='undef'\nd_access='undef'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='undef'\nd_archlib='undef'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='undef'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bcmp='undef'\nd_bcopy='undef'\nd_bsd='undef'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_bzero='undef'\nd_c99_variadic_macros='undef'\nd_casti32='undef'\nd_castneg='undef'\nd_cbrt='undef'\nd_charvspr='undef'\nd_chown='undef'\nd_chroot='undef'\nd_chsize='undef'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='define'\nd_cmsghdr_s='undef'\nd_const='undef'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='undef'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='undef'\nd_dbl_dig='undef'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='undef'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='undef'\nd_dladdr='undef'\nd_dlerror='undef'\nd_dlopen='undef'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='undef'\nd_eaccess='undef'\nd_endgrent='undef'\nd_endgrent_r='undef'\nd_endhent='undef'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='undef'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_eofnblk='undef'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='undef'\nd_fchdir='undef'\nd_fchmod='undef'\nd_fchown='undef'\nd_fcntl='undef'\nd_fcntl_can_lock='undef'\nd_fd_macros='undef'\nd_fd_set='undef'\nd_fdim='undef'\nd_fds_bits='undef'\nd_fegetround='undef'\nd_fgetpos='undef'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='undef'\nd_flock='undef'\nd_flockproto='undef'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='define'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='undef'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='undef'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='undef'\nd_ftello='undef'\nd_ftime='undef'\nd_futimes='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='undef'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='undef'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='undef'\nd_gethbyaddr='undef'\nd_gethbyname='undef'\nd_gethent='undef'\nd_gethname='undef'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='undef'\nd_getitimer='undef'\nd_getlogin='undef'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='undef'\nd_getpagsz='undef'\nd_getpbyname='undef'\nd_getpbynumber='undef'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='undef'\nd_getppid='undef'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='undef'\nd_getprpwnam='undef'\nd_getpwent='undef'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='undef'\nd_getsbyport='undef'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='undef'\nd_getspent='undef'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='undef'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_hasmntopt='undef'\nd_htonl='undef'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='undef'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='undef'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='undef'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='undef'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='undef'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='undef'\nd_link='undef'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='undef'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_longdbl='undef'\nd_longlong='undef'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='undef'\nd_lstat='undef'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='undef'\nd_mbstowcs='undef'\nd_mbtowc='undef'\nd_memchr='define'\nd_memcmp='define'\nd_memcpy='define'\nd_memmove='undef'\nd_memset='define'\nd_mkdir='undef'\nd_mkdtemp='undef'\nd_mkfifo='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='undef'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='undef'\nd_nan='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='undef'\nd_nv_zero_is_allbits_zero='undef'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='undef'\nd_pathconf='undef'\nd_pause='undef'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe='undef'\nd_poll='undef'\nd_portable='undef'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='define'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='undef'\nd_readv='undef'\nd_recvmsg='undef'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_rewinddir='undef'\nd_rint='undef'\nd_rmdir='undef'\nd_round='undef'\nd_safebcpy='undef'\nd_safemcpy='undef'\nd_sanemcmp='undef'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='undef'\nd_select='undef'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='undef'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='undef'\nd_setlocale='undef'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='undef'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='undef'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='undef'\nd_setvbuf='undef'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='undef'\nd_signbit='undef'\nd_sigprocmask='undef'\nd_sigsetjmp='undef'\nd_sin6_scope_id='undef'\nd_sitearch='undef'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='undef'\nd_socklen_t='undef'\nd_sockpair='undef'\nd_socks5_init='undef'\nd_sprintf_returns_strlen='undef'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='undef'\nd_statvfs='undef'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='undef'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='undef'\nd_stdstdio='undef'\nd_strchr='undef'\nd_strcoll='undef'\nd_strctcpy='undef'\nd_strerrm='strerror(e)'\nd_strerror='undef'\nd_strerror_r='undef'\nd_strftime='undef'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strtod='undef'\nd_strtol='define'\nd_strtold='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='undef'\nd_suidsafe='undef'\nd_symlink='undef'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='undef'\nd_sysernlst=''\nd_syserrlst='undef'\nd_system='undef'\nd_tcgetpgrp='undef'\nd_tcsetpgrp='undef'\nd_telldir='undef'\nd_telldirproto='undef'\nd_tgamma='undef'\nd_time='define'\nd_timegm='undef'\nd_times='undef'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='undef'\nd_u32align='define'\nd_ualarm='undef'\nd_umask='undef'\nd_uname='undef'\nd_union_semun='undef'\nd_unordered='undef'\nd_unsetenv='undef'\nd_usleep='undef'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='undef'\nd_voidtty=''\nd_volatile='undef'\nd_vprintf='define'\nd_vsnprintf='undef'\nd_wait4='undef'\nd_waitpid='undef'\nd_wcscmp='undef'\nd_wcstombs='undef'\nd_wcsxfrm='undef'\nd_wctomb='undef'\nd_writev='undef'\nd_xenix='undef'\ndb_hashtype='u_int32_t'\ndb_prefixtype='size_t'\ndb_version_major='0'\ndb_version_minor='0'\ndb_version_patch='0'\ndirentrytype='struct dirent'\ndoublekind='3'\ndoublesize='8'\ndrand01=\"((rand() & 0x7FFF) / (double) ((unsigned long)1 << 15))\"\ndrand48_r_proto='0'\ndtrace=''\neagain='EAGAIN'\nebcdic='undef'\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\nfflushNULL='undef'\nfflushall='undef'\nfirstmakefile='makefile'\nfpossize='4'\nfpostype=int\nfreetype=void\nfull_csh=''\nfull_sed=''\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"u\"'\ngidsign='1'\ngidsize='4'\ngidtype=int\ngmtime_r_proto='0'\ngroupstype=int\nh_fcntl='false'\nh_sysfile='true'\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='int'\ni64size='8'\ni64type='long'\ni8size='1'\ni8type='signed char'\ni_arpainet='undef'\ni_assert='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='undef'\ni_execinfo='undef'\ni_fcntl='undef'\ni_fenv='undef'\ni_float='undef'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='undef'\ni_ieeefp='undef'\ni_inttypes='undef'\ni_langinfo='undef'\ni_libutil='undef'\ni_limits='undef'\ni_locale='undef'\ni_machcthr='undef'\ni_malloc='undef'\ni_mallocmalloc='undef'\ni_math='define'\ni_memory='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='undef'\ni_neterrno='undef'\ni_netinettcp='undef'\ni_niin='undef'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='undef'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdarg='define'\ni_stdbool='undef'\ni_stddef='define'\ni_stdint='undef'\ni_stdlib='define'\ni_string='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='undef'\ni_sysin='undef'\ni_sysioctl='undef'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='undef'\ni_syspoll='undef'\ni_sysresrc='undef'\ni_syssecrt='undef'\ni_sysselct='undef'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='undef'\ni_systimek='undef'\ni_systimes='undef'\ni_systypes='undef'\ni_sysuio='undef'\ni_sysun='undef'\ni_sysutsname='undef'\ni_sysvfs='undef'\ni_syswait='undef'\ni_termio='undef'\ni_termios='undef'\ni_time='define'\ni_unistd='undef'\ni_ustat='undef'\ni_utime='undef'\ni_values='undef'\ni_varargs='undef'\ni_varhdr='stdarg.h'\ni_vfork='undef'\nignore_versioned_solibs='y'\ninc_version_list_init='NULL'\ninstallstyle='lib/perl5'\ninstallusrbinperl='undef'\nintsize='4'\nivdformat='\"ld\"'\nivsize='8'\nivtype='long'\nlib_ext='.a'\nlocaltime_r_proto='0'\nlongdblkind=0\nlongdblsize=8\nlonglongsize=8\nlongsize='8'\nlseeksize=8\nlseektype=long\nmad='undef'\nmalloctype='int*'\nmalloctype='void *'\nmmaptype='void *'\nmodetype='mode_t'\nmodetype=int\nmultiarch='undef'\nmyarchname='unknown64'\nmyuname='unknown'\nneed_va_copy='define'\nnetdb_hlen_type='int'\nnetdb_host_type='const char *'\nnetdb_name_type='const char *'\nnetdb_net_type='unsigned long'\nnroff='nroff'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='0'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.o'\nold_pthread_create_joinable=''\noptimize=''\norderlib='false'\nosname='unknown'\nosvers='unknown'\notherlibdirs=' '\npackage='perl5'\nperl_static_inline='static'\nphostname='hostname'\npidtype=int\nprivlib='/usr/local/lib/perl5/5.22'\nprivlibexp='/usr/local/lib/perl5/5.22'\nprocselfexe=''\nprototype='undef'\nptrsize='8'\nquadkind='2'\nquadtype='long'\nrandbits='48'\nrandfunc='drand48'\nrandom_r_proto='0'\nrandseedtype='int'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEUldbl='\"llE\"'\nsPRIFUldbl='\"llF\"'\nsPRIGUldbl='\"llG\"'\nsPRIXU64='\"lX\"'\nsPRId64='\"ld\"'\nsPRIeldbl='\"lle\"'\nsPRIfldbl='\"llf\"'\nsPRIgldbl='\"llg\"'\nsPRIi64='\"li\"'\nsPRIo64='\"lo\"'\nsPRIu64='\"lu\"'\nsPRIx64='\"lx\"'\nsSCNfldbl='\"llf\"'\nsched_yield='sched_yield()'\nscriptdir='/usr/local/bin'\nscriptdirexp='/usr/local/bin'\nseedfunc='srand'\nselectminbits='64'\nselecttype=int\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='/bin/sh'\nshmattype='void *'\nshortsize='2'\nsig_name_init='0'\nsig_num_init='0'\nsig_size='1'\nsignal_t=int\nsitearch='/usr/local/lib/perl5/5.22/unknown'\nsitearchexp='/usr/local/lib/perl5/5.22/unknown'\nsitelib='/usr/local/lib/perl5/5.22'\nsitelib_stem='/usr/local/lib/perl5'\nsitelibexp='/usr/local/lib/perl5/5.22'\nsizesize=4\nsizetype='size_t'\nsocksizetype='int'\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc='.'\nssizetype=long\nst_ino_sign='1'\nst_ino_size='8'\nstartperl='#!perl'\nstdchar=char\nstdio_base='((fp)->_IO_read_base)'\nstdio_bufsiz='((fp)->_IO_read_end - (fp)->_IO_read_base)'\nstdio_cnt='((fp)->_IO_read_end - (fp)->_IO_read_ptr)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_IO_read_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\ntargetarch=''\ntargetsh='/bin/sh'\ntimetype=time_t\ntmpnam_r_proto='0'\ntouch='touch'\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned int'\nu64size='8'\nu64type='unsigned long'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"u\"'\nuidsign='1'\nuidsize='4'\nuidtype=int\nuquadtype='unsigned long'\nuse5005threads='undef'\nuse64bitall='define'\nuse64bitint='define'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='undef'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='undef'\nuselongdouble='undef'\nusemallocwrap='undef'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='undef'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='false'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='8'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvaproto='undef'\nvendorarch=''\nvendorarchexp=''\nvendorlib_stem=''\nvendorlibexp=''\nversiononly='undef'\nzip=''\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/myconfig.SH": "#!/bin/sh\n\ncase $PERL_CONFIG_SH in\n'')\n\tif test -f config.sh; then TOP=.;\n\telif test -f ../config.sh; then TOP=..;\n\telif test -f ../../config.sh; then TOP=../..;\n\telif test -f ../../../config.sh; then TOP=../../..;\n\telif test -f ../../../../config.sh; then TOP=../../../..;\n\telse\n\t    echo \"Can't find the perl config.sh file produced by Configure\"; \n\t    exit 1\n\tfi\n\t. $TOP/config.sh\n\t;;\nesac\n: This forces SH files to create target in same directory as SH file.\n: This is so that make depend always knows where to find SH derivatives.\ncase \"$0\" in\n*/*) cd `expr X$0 : 'X\\(.*\\)/'` ;;\nesac\necho \"Extracting myconfig (with variable substitutions)\"\n$spitshell >myconfig <<!GROK!THIS!\n$startsh\n\n# This script is designed to provide a handy summary of the configuration\n# information being used to build perl. This is especially useful if you\n# are requesting help from comp.lang.perl.misc on usenet or via mail.\n\n# Note that the text lines /^Summary of/ .. /^\\s*$/ are copied into Config.pm.\ncat <<'!NO!SUBS!'\nSummary of my $package (revision $revision $version_patchlevel_string) configuration:\n  $git_commit_id_title $git_commit_id$git_ancestor_line\n  Platform:\n    osname=$osname, osvers=$osvers, archname=$archname\n    uname='$myuname'\n    config_args='$config_args'\n    hint=$hint, useposix=$useposix, d_sigaction=$d_sigaction\n    useithreads=$useithreads, usemultiplicity=$usemultiplicity\n    use64bitint=$use64bitint, use64bitall=$use64bitall, uselongdouble=$uselongdouble\n    usemymalloc=$usemymalloc, bincompat5005=undef\n  Compiler:\n    cc='$cc', ccflags ='$ccflags',\n    optimize='$optimize',\n    cppflags='$cppflags'\n    ccversion='$ccversion', gccversion='$gccversion', gccosandvers='$gccosandvers'\n    intsize=$intsize, longsize=$longsize, ptrsize=$ptrsize, doublesize=$doublesize, byteorder=$byteorder, doublekind=$doublekind\n    d_longlong=$d_longlong, longlongsize=$longlongsize, d_longdbl=$d_longdbl, longdblsize=$longdblsize, longdblkind=$longdblkind\n    ivtype='$ivtype', ivsize=$ivsize, nvtype='$nvtype', nvsize=$nvsize, Off_t='$lseektype', lseeksize=$lseeksize\n    alignbytes=$alignbytes, prototype=$prototype\n  Linker and Libraries:\n    ld='$ld', ldflags ='$ldflags'\n    libpth=$libpth\n    libs=$libs\n    perllibs=$perllibs\n    libc=$libc, so=$so, useshrplib=$useshrplib, libperl=$libperl\n    gnulibc_version='$gnulibc_version'\n  Dynamic Linking:\n    dlsrc=$dlsrc, dlext=$dlext, d_dlsymun=$d_dlsymun, ccdlflags='$ccdlflags'\n    cccdlflags='$cccdlflags', lddlflags='$lddlflags'\n\n!NO!SUBS!\n!GROK!THIS!\nchmod 755 myconfig\n$eunicefix myconfig\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/uconfig.h": "/* This file was produced by running the config_h.SH script, which\n * gets its values from uconfig.sh, which is generally produced by\n * running Configure.\n *\n * Feel free to modify any of this as the need arises.  Note, however,\n * that running config_h.SH again will wipe out any changes you've made.\n * For a more permanent change edit uconfig.sh and rerun config_h.SH.\n */\n\n/* Package name      : perl5\n * Source directory  : .\n * Configuration time: Thu Jan  1 00:00:00 GMT 1970\n * Configured by     : root@localhost\n * Target system     : unknown\n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"\"\t/**/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n/*#define HAS_ALARM\t\t/ **/\n\n/* HAS_BCMP:\n *\tThis symbol is defined if the bcmp() routine is available to\n *\tcompare blocks of memory.\n */\n/*#define HAS_BCMP\t/ **/\n\n/* HAS_BCOPY:\n *\tThis symbol is defined if the bcopy() routine is available to\n *\tcopy blocks of memory.\n */\n/*#define HAS_BCOPY\t/ **/\n\n/* HAS_BZERO:\n *\tThis symbol is defined if the bzero() routine is available to\n *\tset a memory block to 0.\n */\n/*#define HAS_BZERO\t/ **/\n\n/* HAS_CBRT:\n *\tThis symbol, if defined, indicates that the cbrt() (cube root)\n *\tfunction is available.\n */\n/*#define HAS_CBRT\t/ **/\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n/*#define HAS_CHOWN\t\t/ **/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n/*#define HAS_CHROOT\t\t/ **/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n/*#define\tHAS_CHSIZE\t\t/ **/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n/*#define HAS_CRYPT\t\t/ **/\n\n/* HAS_CTERMID:\n *\tThis symbol, if defined, indicates that the ctermid routine is\n *\tavailable to generate filename for terminal.\n */\n/*#define HAS_CTERMID\t\t/ **/\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n/*#define HAS_CUSERID\t\t/ **/\n\n/* HAS_DBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol DBL_DIG, which is the number\n *\tof significant digits in a double precision number.  If this\n *\tsymbol is not defined, a guess of 15 is usually pretty good.\n */\n/*#define HAS_DBL_DIG \t/ **/\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n/*#define HAS_DIFFTIME\t\t/ **/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n/*#define HAS_DLERROR\t/ **/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n/*#define HAS_DUP2\t/ **/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n/*#define HAS_FCHMOD\t\t/ **/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n/*#define HAS_FCHOWN\t\t/ **/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n/*#define HAS_FCNTL\t\t/ **/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n/*#define HAS_FGETPOS\t/ **/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_FLOCK\t\t/ **/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n#define HAS_FORK\t\t/**/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n/*#define HAS_FSETPOS\t/ **/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n/*#define HAS_GETTIMEOFDAY\t/ **/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_GETGROUPS\t\t/ **/\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n/*#define HAS_GETLOGIN\t\t/ **/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n/*#define HAS_GETPGID\t\t/ **/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n/*#define HAS_GETPGRP2\t\t/ **/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n/*#define HAS_GETPPID\t\t/ **/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n/*#define HAS_GETPRIORITY\t\t/ **/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n/*#define HAS_INET_ATON\t\t/ **/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n/*#define HAS_KILLPG\t/ **/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n/*#define HAS_LINK\t/ **/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n/*#define HAS_LOCALECONV\t/ **/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_LOCKF\t\t/ **/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n/*#define HAS_LSTAT\t\t/ **/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n/*#define HAS_MBLEN\t\t/ **/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to convert a multibyte string into a wide character string.\n */\n/*#define\tHAS_MBSTOWCS\t\t/ **/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto convert a multibyte to a wide character.\n */\n/*#define HAS_MBTOWC\t\t/ **/\n\n/* HAS_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tto compare blocks of memory.\n */\n#define HAS_MEMCMP\t/**/\n\n/* HAS_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy blocks of memory.\n */\n#define HAS_MEMCPY\t/**/\n\n/* HAS_MEMMOVE:\n *\tThis symbol, if defined, indicates that the memmove routine is available\n *\tto copy potentially overlapping blocks of memory. This should be used\n *\tonly when HAS_SAFE_BCOPY is not defined. If neither is there, roll your\n *\town version.\n */\n/*#define HAS_MEMMOVE\t/ **/\n\n/* HAS_MEMSET:\n *\tThis symbol, if defined, indicates that the memset routine is available\n *\tto set blocks of memory.\n */\n#define HAS_MEMSET\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n/*#define HAS_MKDIR\t\t/ **/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n/*#define HAS_MKFIFO\t\t/ **/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n/*#define HAS_MKTIME\t\t/ **/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n/*#define HAS_MSYNC\t\t/ **/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n/*#define HAS_MUNMAP\t\t/ **/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n/*#define HAS_NICE\t\t/ **/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n/*#define HAS_PATHCONF\t\t/ **/\n/*#define HAS_FPATHCONF\t\t/ **/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n/*#define HAS_PAUSE\t\t/ **/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n/*#define HAS_PIPE\t\t/ **/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors.  Please check I_POLL and\n *\tI_SYS_POLL to know which header should be included as well.\n */\n/*#define HAS_POLL\t\t/ **/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#define HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n/*#define HAS_SEEKDIR\t\t/ **/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n/*#define HAS_TELLDIR\t\t/ **/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n/*#define HAS_REWINDDIR\t\t/ **/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n/*#define HAS_READLINK\t\t/ **/\n\n/* HAS_REGCOMP:\n *\tThis symbol, if defined, indicates that the regcomp() routine is\n *\tavailable to do some regular patern matching (usually on POSIX.2\n *\tconforming systems).\n */\n#define HAS_REGCOMP\t\t/* POSIX.2 */\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#define HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n/*#define HAS_RMDIR\t\t/ **/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n/*#define HAS_SELECT\t/ **/\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n/*#define HAS_SETEGID\t\t/ **/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n/*#define HAS_SETEUID\t\t/ **/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_SETGROUPS\t\t/ **/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n/*#define HAS_SETLINEBUF\t\t/ **/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n/*#define HAS_SETLOCALE\t/ **/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n/*#define HAS_SETPGID\t/ **/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n/*#define HAS_SETPGRP2\t\t/ **/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n/*#define HAS_SETPRIORITY\t\t/ **/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n/*#define HAS_SETREGID\t\t/ **/\n/*#define HAS_SETRESGID\t\t/ **/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n/*#define HAS_SETREUID\t\t/ **/\n/*#define HAS_SETRESUID\t\t/ **/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n/*#define HAS_SETRGID\t\t/ **/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n/*#define HAS_SETRUID\t\t/ **/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n/*#define HAS_SETSID\t/ **/\n\n/* HAS_STAT:\n *\tThis symbol, if defined, indicates that the stat routine is\n *\tavailable to get file status.\n */\n#define HAS_STAT\t/**/\n\n/* HAS_STRCHR:\n *\tThis symbol is defined to indicate that the strchr()/strrchr()\n *\tfunctions are available for string searching. If not, try the\n *\tindex()/rindex() pair.\n */\n/* HAS_INDEX:\n *\tThis symbol is defined to indicate that the index()/rindex()\n *\tfunctions are available for string searching.\n */\n/*#define HAS_STRCHR\t/ **/\n/*#define HAS_INDEX\t/ **/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n/*#define HAS_STRCOLL\t/ **/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n/*#define HAS_STRTOD\t/ **/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#define HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n/*#define HAS_STRXFRM\t/ **/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n/*#define HAS_SYMLINK\t/ **/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n/*#define HAS_SYSCALL\t/ **/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n/*#define HAS_SYSCONF\t/ **/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n/*#define HAS_SYSTEM\t/ **/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n/*#define HAS_TCGETPGRP\t\t/ **/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n/*#define HAS_TCSETPGRP\t\t/ **/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n/*#define HAS_TRUNCATE\t/ **/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n/*#define HAS_TZNAME\t\t/ **/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n/*#define HAS_UMASK\t\t/ **/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n/*#define HAS_USLEEP\t\t/ **/\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n/*#define HAS_WAIT4\t/ **/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n/*#define HAS_WAITPID\t/ **/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n/*#define HAS_WCSTOMBS\t/ **/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto convert a wide character to a multibyte.\n */\n/*#define HAS_WCTOMB\t\t/ **/\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc... \n *\tIt may be necessary to include <sys/types.h> to get any \n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t int\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n/*#define\tI_ARPA_INET\t\t/ **/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n/*#define I_DBM\t/ **/\n/*#define I_RPCSVC_DBM\t/ **/\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n/*#define I_DLFCN\t\t/ **/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n/*#define I_FCNTL\t/ **/\n\n/* I_FLOAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <float.h> to get definition of symbols like DBL_MAX or\n *\tDBL_MIN, i.e. machine dependent floating point values.\n */\n/*#define I_FLOAT\t\t/ **/\n\n/* I_GDBM:\n *\tThis symbol, if defined, indicates that <gdbm.h> exists and should\n *\tbe included.\n */\n/*#define I_GDBM\t/ **/\n\n/* I_LIMITS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <limits.h> to get definition of symbols like WORD_BIT or\n *\tLONG_MAX, i.e. machine dependant limitations.\n */\n/*#define I_LIMITS\t\t/ **/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n/*#define\tI_LOCALE\t\t/ **/\n\n/* I_MATH:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <math.h>.\n */\n#define I_MATH\t\t/**/\n\n/* I_MEMORY:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <memory.h>.\n */\n/*#define I_MEMORY\t\t/ **/\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n/*#define I_NETINET_IN\t/ **/\n\n/* I_STDDEF:\n *\tThis symbol, if defined, indicates that <stddef.h> exists and should\n *\tbe included.\n */\n#define I_STDDEF\t/**/\n\n/* I_STDLIB:\n *\tThis symbol, if defined, indicates that <stdlib.h> exists and should\n *\tbe included.\n */\n#define I_STDLIB\t\t/**/\n\n/* I_STRING:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <string.h> (USG systems) instead of <strings.h> (BSD systems).\n */\n#define I_STRING\t\t/**/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n/*#define I_SYS_DIR\t\t/ **/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n/*#define I_SYS_FILE\t\t/ **/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n/*#define\tI_SYS_IOCTL\t\t/ **/\n/*#define I_SYS_SOCKIO\t/ **/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n/*#define I_SYS_NDIR\t/ **/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n/*#define I_SYS_PARAM\t\t/ **/\n\n/* I_SYS_POLL:\n *\tThis symbol, if defined, indicates that the program may include\n *\t<sys/poll.h>.  When I_POLL is also defined, it's probably safest\n *\tto only include <poll.h>.\n */\n/*#define I_SYS_POLL\t/ **/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n/*#define I_SYS_RESOURCE\t\t/ **/\n\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n/*#define I_SYS_SELECT\t/ **/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#define\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n/*#define\tI_SYS_TIMES\t\t/ **/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n/*#define\tI_SYS_TYPES\t\t/ **/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n/*#define I_SYS_UN\t\t/ **/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n/*#define I_SYS_WAIT\t/ **/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n/*#define I_UNISTD\t\t/ **/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n/*#define I_UTIME\t\t/ **/\n\n/* I_VALUES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <values.h> to get definition of symbols like MINFLOAT or\n *\tMAXLONG, i.e. machine dependant limitations.  Probably, you\n *\tshould use <limits.h> instead, if it is available.\n */\n/*#define I_VALUES\t\t/ **/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n/*#define I_VFORK\t/ **/\n\n/* CAN_VAPROTO:\n *\tThis variable is defined on systems supporting prototype declaration\n *\tof functions with a variable number of arguments.\n */\n/* _V:\n *\tThis macro is used to declare function parameters in prototypes for\n *\tfunctions with a variable number of parameters. Use double parentheses.\n *\tFor example:\n *\n *\t\tint printf _V((char *fmt, ...));\n *\n *\tRemember to use the plain simple _() macro when declaring a function\n *\twith no variable number of arguments, since it might be possible to\n *\thave a non-effect _V() macro and still get prototypes via _().\n */\n/*#define CAN_VAPROTO\t/ **/\n#ifdef CAN_VAPROTO\n#define\t_V(args) args\n#else\n#define\t_V(args) ()\n#endif\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"unknown\"\t\t/**/\n#define OSVERS \"unknown\"\t\t/**/\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n/*#define MULTIARCH\t\t/ **/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.  For cross-compiling\n *  \tor multiarch support, Configure will set a minimum of 8.\n */\n#define MEM_ALIGNBYTES 4\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for perl5.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define ARCHLIB \"/usr/local/lib/perl5/5.22/unknown\"\t\t/ **/\n/*#define ARCHLIB_EXP \"/usr/local/lib/perl5/5.22/unknown\"\t\t/ **/\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"unknown\"\t\t/**/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n/* PERL_RELOCATABLE_INC:\n *\tThis symbol, if defined, indicates that we'd like to relocate entries\n *\tin @INC at run time based on the location of the perl binary.\n */\n#define BIN \"/usr/local/bin\"\t/**/\n#define BIN_EXP \"/usr/local/bin\"\t/**/\n#define PERL_RELOCATABLE_INC \"undef\" \t\t/**/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE 4\t\t/**/\n#define LONGSIZE 4\t\t/**/\n#define SHORTSIZE 2\t\t/**/\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\tin a UV, i.e. 0x1234 or 0x4321 or 0x12345678, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries, use compiler-defined macros to\n *\tdetermine the byte order.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#else\n#define BYTEORDER 0x1234\t/* large digits for MSB */\n#endif\n\n/* CHARBITS:\n *\tThis symbol contains the size of a char, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define CHARBITS 8\t\t/**/\n\n/* CAT2:\n *\tThis macro concatenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if 42 == 1\n#define CAT2(a,b)\ta/**/b\n#define STRINGIFY(a)\t\"a\"\n#endif\n#if 42 == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\n#define PeRl_StGiFy(a)\t#a\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if 42 != 1 && 42 != 42\n#include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.\t Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"cc -E\"\n#define CPPMINUS \"-\"\n#define CPPRUN \"cc -E\"\n#define CPPLAST \"-\"\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n/*#define HAS_ACCESS\t\t/ **/\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_ACCESSX\t\t/ **/\n\n/* HAS_ASCTIME_R:\n *\tThis symbol, if defined, indicates that the asctime_r routine\n *\tis available to asctime re-entrantly.\n */\n/* ASCTIME_R_PROTO:\n *\tThis symbol encodes the prototype of asctime_r.\n *\tIt is zero if d_asctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_asctime_r\n *\tis defined.\n */\n/*#define HAS_ASCTIME_R\t   / **/\n#define ASCTIME_R_PROTO 0\t   /**/\n\n/* HASATTRIBUTE_FORMAT:\n *\tCan we handle GCC attribute for checking printf-style formats\n */\n/* PRINTF_FORMAT_NULL_OK:\n *\tAllows __printf__ format to be null when checking printf-style\n */\n/* HASATTRIBUTE_MALLOC:\n *\tCan we handle GCC attribute for malloc-style functions.\n */\n/* HASATTRIBUTE_NONNULL:\n *\tCan we handle GCC attribute for nonnull function parms.\n */\n/* HASATTRIBUTE_NORETURN:\n *\tCan we handle GCC attribute for functions that do not return\n */\n/* HASATTRIBUTE_PURE:\n *\tCan we handle GCC attribute for pure functions\n */\n/* HASATTRIBUTE_UNUSED:\n *\tCan we handle GCC attribute for unused variables and arguments\n */\n/* HASATTRIBUTE_DEPRECATED:\n *\tCan we handle GCC attribute for marking deprecated APIs\n */\n/* HASATTRIBUTE_WARN_UNUSED_RESULT:\n *\tCan we handle GCC attribute for warning on unused results\n */\n/*#define HASATTRIBUTE_DEPRECATED\t/ **/\n/*#define HASATTRIBUTE_FORMAT\t/ **/\n/*#define PRINTF_FORMAT_NULL_OK\t/ **/\n/*#define HASATTRIBUTE_NORETURN\t/ **/\n/*#define HASATTRIBUTE_MALLOC\t/ **/\n/*#define HASATTRIBUTE_NONNULL\t/ **/\n/*#define HASATTRIBUTE_PURE\t/ **/\n/*#define HASATTRIBUTE_UNUSED\t/ **/\n/*#define HASATTRIBUTE_WARN_UNUSED_RESULT\t/ **/\n\n/* HAS_BACKTRACE:\n *\tThis symbol, if defined, indicates that the backtrace() routine is\n *\tavailable to get a stack trace.  The <execinfo.h> header must be\n *\tincluded to use this routine.\n */\n/*#define HAS_BACKTRACE\t/ **/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n/*#define\tCASTI32\t\t/ **/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n/*#define\tCASTNEGFLOAT\t\t/ **/\n#define CASTFLAGS 0\t\t/**/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n/*#define VOID_CLOSEDIR\t\t/ **/\n\n/* HASCONST:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe const type. There is no need to actually test for that symbol\n *\twithin your programs. The mere use of the \"const\" keyword will\n *\ttrigger the necessary tests.\n */\n/*#define HASCONST\t/ **/\n#ifndef HASCONST\n#define const\n#endif\n\n/* HAS_CRYPT_R:\n *\tThis symbol, if defined, indicates that the crypt_r routine\n *\tis available to crypt re-entrantly.\n */\n/* CRYPT_R_PROTO:\n *\tThis symbol encodes the prototype of crypt_r.\n *\tIt is zero if d_crypt_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_crypt_r\n *\tis defined.\n */\n/*#define HAS_CRYPT_R\t   / **/\n#define CRYPT_R_PROTO 0\t   /**/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n/*#define HAS_CSH\t\t/ **/\n#ifdef HAS_CSH\n#define CSH \"\"\t/**/\n#endif\n\n/* HAS_CTERMID_R:\n *\tThis symbol, if defined, indicates that the ctermid_r routine\n *\tis available to ctermid re-entrantly.\n */\n/* CTERMID_R_PROTO:\n *\tThis symbol encodes the prototype of ctermid_r.\n *\tIt is zero if d_ctermid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctermid_r\n *\tis defined.\n */\n/*#define HAS_CTERMID_R\t   / **/\n#define CTERMID_R_PROTO 0\t   /**/\n\n/* HAS_CTIME_R:\n *\tThis symbol, if defined, indicates that the ctime_r routine\n *\tis available to ctime re-entrantly.\n */\n/* CTIME_R_PROTO:\n *\tThis symbol encodes the prototype of ctime_r.\n *\tIt is zero if d_ctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctime_r\n *\tis defined.\n */\n/*#define HAS_CTIME_R\t   / **/\n#define CTIME_R_PROTO 0\t   /**/\n\n/* HAS_DLADDR:\n *\tThis symbol, if defined, indicates that the dladdr() routine is\n *\tavailable to query dynamic linker information for an address.\n *\tThe <dlfcn.h> header must be included to use this routine.\n */\n/*#define HAS_DLADDR\t/ **/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n/*#define SETUID_SCRIPTS_ARE_SECURE_NOW\t/ **/\n/*#define DOSUID\t\t/ **/\n\n/* HAS_DRAND48_R:\n *\tThis symbol, if defined, indicates that the drand48_r routine\n *\tis available to drand48 re-entrantly.\n */\n/* DRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of drand48_r.\n *\tIt is zero if d_drand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_drand48_r\n *\tis defined.\n */\n/*#define HAS_DRAND48_R\t   / **/\n#define DRAND48_R_PROTO 0\t   /**/\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n/*#define\tHAS_DRAND48_PROTO\t/ **/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_EACCESS\t\t/ **/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n/*#define HAS_ENDGRENT\t\t/ **/\n\n/* HAS_ENDGRENT_R:\n *\tThis symbol, if defined, indicates that the endgrent_r routine\n *\tis available to endgrent re-entrantly.\n */\n/* ENDGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of endgrent_r.\n *\tIt is zero if d_endgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endgrent_r\n *\tis defined.\n */\n/*#define HAS_ENDGRENT_R\t   / **/\n#define ENDGRENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n/*#define HAS_ENDHOSTENT\t\t/ **/\n\n/* HAS_ENDHOSTENT_R:\n *\tThis symbol, if defined, indicates that the endhostent_r routine\n *\tis available to endhostent re-entrantly.\n */\n/* ENDHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of endhostent_r.\n *\tIt is zero if d_endhostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endhostent_r\n *\tis defined.\n */\n/*#define HAS_ENDHOSTENT_R\t   / **/\n#define ENDHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n/*#define HAS_ENDNETENT\t\t/ **/\n\n/* HAS_ENDNETENT_R:\n *\tThis symbol, if defined, indicates that the endnetent_r routine\n *\tis available to endnetent re-entrantly.\n */\n/* ENDNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of endnetent_r.\n *\tIt is zero if d_endnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endnetent_r\n *\tis defined.\n */\n/*#define HAS_ENDNETENT_R\t   / **/\n#define ENDNETENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n/*#define HAS_ENDPROTOENT\t\t/ **/\n\n/* HAS_ENDPROTOENT_R:\n *\tThis symbol, if defined, indicates that the endprotoent_r routine\n *\tis available to endprotoent re-entrantly.\n */\n/* ENDPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of endprotoent_r.\n *\tIt is zero if d_endprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endprotoent_r\n *\tis defined.\n */\n/*#define HAS_ENDPROTOENT_R\t   / **/\n#define ENDPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n/*#define HAS_ENDPWENT\t\t/ **/\n\n/* HAS_ENDPWENT_R:\n *\tThis symbol, if defined, indicates that the endpwent_r routine\n *\tis available to endpwent re-entrantly.\n */\n/* ENDPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of endpwent_r.\n *\tIt is zero if d_endpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endpwent_r\n *\tis defined.\n */\n/*#define HAS_ENDPWENT_R\t   / **/\n#define ENDPWENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n/*#define HAS_ENDSERVENT\t\t/ **/\n\n/* HAS_ENDSERVENT_R:\n *\tThis symbol, if defined, indicates that the endservent_r routine\n *\tis available to endservent re-entrantly.\n */\n/* ENDSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of endservent_r.\n *\tIt is zero if d_endservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endservent_r\n *\tis defined.\n */\n/*#define HAS_ENDSERVENT_R\t   / **/\n#define ENDSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n/*#define HAS_FD_SET\t/ **/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n/*#define\tFLEXFILENAMES\t\t/ **/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tThe usual values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) sprintf((b),\"%.*g\",(n),(x))\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n/*#define HAS_GETGRENT\t\t/ **/\n\n/* HAS_GETGRENT_R:\n *\tThis symbol, if defined, indicates that the getgrent_r routine\n *\tis available to getgrent re-entrantly.\n */\n/* GETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of getgrent_r.\n *\tIt is zero if d_getgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrent_r\n *\tis defined.\n */\n/*#define HAS_GETGRENT_R\t   / **/\n#define GETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_GETGRGID_R:\n *\tThis symbol, if defined, indicates that the getgrgid_r routine\n *\tis available to getgrgid re-entrantly.\n */\n/* GETGRGID_R_PROTO:\n *\tThis symbol encodes the prototype of getgrgid_r.\n *\tIt is zero if d_getgrgid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrgid_r\n *\tis defined.\n */\n/*#define HAS_GETGRGID_R\t   / **/\n#define GETGRGID_R_PROTO 0\t   /**/\n\n/* HAS_GETGRNAM_R:\n *\tThis symbol, if defined, indicates that the getgrnam_r routine\n *\tis available to getgrnam re-entrantly.\n */\n/* GETGRNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getgrnam_r.\n *\tIt is zero if d_getgrnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrnam_r\n *\tis defined.\n */\n/*#define HAS_GETGRNAM_R\t   / **/\n#define GETGRNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n/*#define HAS_GETHOSTBYADDR\t\t/ **/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n/*#define HAS_GETHOSTBYNAME\t\t/ **/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n/*#define HAS_GETHOSTENT\t\t/ **/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n/*#define HAS_GETHOSTNAME\t/ **/\n/*#define HAS_UNAME\t\t/ **/\n/*#define HAS_PHOSTNAME\t/ **/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"/bin/hostname\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETHOSTBYADDR_R:\n *\tThis symbol, if defined, indicates that the gethostbyaddr_r routine\n *\tis available to gethostbyaddr re-entrantly.\n */\n/* GETHOSTBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyaddr_r.\n *\tIt is zero if d_gethostbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYADDR_R\t   / **/\n#define GETHOSTBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYNAME_R:\n *\tThis symbol, if defined, indicates that the gethostbyname_r routine\n *\tis available to gethostbyname re-entrantly.\n */\n/* GETHOSTBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyname_r.\n *\tIt is zero if d_gethostbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyname_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYNAME_R\t   / **/\n#define GETHOSTBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the gethostent_r routine\n *\tis available to gethostent re-entrantly.\n */\n/* GETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of gethostent_r.\n *\tIt is zero if d_gethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostent_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTENT_R\t   / **/\n#define GETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETHOST_PROTOS\t/ **/\n\n/* HAS_GETLOGIN_R:\n *\tThis symbol, if defined, indicates that the getlogin_r routine\n *\tis available to getlogin re-entrantly.\n */\n/* GETLOGIN_R_PROTO:\n *\tThis symbol encodes the prototype of getlogin_r.\n *\tIt is zero if d_getlogin_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getlogin_r\n *\tis defined.\n */\n/*#define HAS_GETLOGIN_R\t   / **/\n#define GETLOGIN_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n/*#define HAS_GETNETBYADDR\t\t/ **/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n/*#define HAS_GETNETBYNAME\t\t/ **/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n/*#define HAS_GETNETENT\t\t/ **/\n\n/* HAS_GETNETBYADDR_R:\n *\tThis symbol, if defined, indicates that the getnetbyaddr_r routine\n *\tis available to getnetbyaddr re-entrantly.\n */\n/* GETNETBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyaddr_r.\n *\tIt is zero if d_getnetbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYADDR_R\t   / **/\n#define GETNETBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYNAME_R:\n *\tThis symbol, if defined, indicates that the getnetbyname_r routine\n *\tis available to getnetbyname re-entrantly.\n */\n/* GETNETBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyname_r.\n *\tIt is zero if d_getnetbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyname_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYNAME_R\t   / **/\n#define GETNETBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETNETENT_R:\n *\tThis symbol, if defined, indicates that the getnetent_r routine\n *\tis available to getnetent re-entrantly.\n */\n/* GETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of getnetent_r.\n *\tIt is zero if d_getnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetent_r\n *\tis defined.\n */\n/*#define HAS_GETNETENT_R\t   / **/\n#define GETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETNET_PROTOS\t/ **/\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n/*#define HAS_GETPAGESIZE\t\t/ **/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n/*#define HAS_GETPROTOENT\t\t/ **/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n/*#define HAS_GETPGRP\t\t/ **/\n/*#define USE_BSD_GETPGRP\t/ **/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n/*#define HAS_GETPROTOBYNAME\t\t/ **/\n/*#define HAS_GETPROTOBYNUMBER\t\t/ **/\n\n/* HAS_GETPROTOBYNAME_R:\n *\tThis symbol, if defined, indicates that the getprotobyname_r routine\n *\tis available to getprotobyname re-entrantly.\n */\n/* GETPROTOBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobyname_r.\n *\tIt is zero if d_getprotobyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobyname_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNAME_R\t   / **/\n#define GETPROTOBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNUMBER_R:\n *\tThis symbol, if defined, indicates that the getprotobynumber_r routine\n *\tis available to getprotobynumber re-entrantly.\n */\n/* GETPROTOBYNUMBER_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobynumber_r.\n *\tIt is zero if d_getprotobynumber_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobynumber_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNUMBER_R\t   / **/\n#define GETPROTOBYNUMBER_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the getprotoent_r routine\n *\tis available to getprotoent re-entrantly.\n */\n/* GETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of getprotoent_r.\n *\tIt is zero if d_getprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotoent_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOENT_R\t   / **/\n#define GETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETPROTO_PROTOS\t/ **/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n/*#define HAS_GETPWENT\t\t/ **/\n\n/* HAS_GETPWENT_R:\n *\tThis symbol, if defined, indicates that the getpwent_r routine\n *\tis available to getpwent re-entrantly.\n */\n/* GETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of getpwent_r.\n *\tIt is zero if d_getpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwent_r\n *\tis defined.\n */\n/*#define HAS_GETPWENT_R\t   / **/\n#define GETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPWNAM_R:\n *\tThis symbol, if defined, indicates that the getpwnam_r routine\n *\tis available to getpwnam re-entrantly.\n */\n/* GETPWNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getpwnam_r.\n *\tIt is zero if d_getpwnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwnam_r\n *\tis defined.\n */\n/*#define HAS_GETPWNAM_R\t   / **/\n#define GETPWNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETPWUID_R:\n *\tThis symbol, if defined, indicates that the getpwuid_r routine\n *\tis available to getpwuid re-entrantly.\n */\n/* GETPWUID_R_PROTO:\n *\tThis symbol encodes the prototype of getpwuid_r.\n *\tIt is zero if d_getpwuid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwuid_r\n *\tis defined.\n */\n/*#define HAS_GETPWUID_R\t   / **/\n#define GETPWUID_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n/*#define HAS_GETSERVENT\t\t/ **/\n\n/* HAS_GETSERVBYNAME_R:\n *\tThis symbol, if defined, indicates that the getservbyname_r routine\n *\tis available to getservbyname re-entrantly.\n */\n/* GETSERVBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyname_r.\n *\tIt is zero if d_getservbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyname_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYNAME_R\t   / **/\n#define GETSERVBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYPORT_R:\n *\tThis symbol, if defined, indicates that the getservbyport_r routine\n *\tis available to getservbyport re-entrantly.\n */\n/* GETSERVBYPORT_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyport_r.\n *\tIt is zero if d_getservbyport_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYPORT_R\t   / **/\n#define GETSERVBYPORT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT_R:\n *\tThis symbol, if defined, indicates that the getservent_r routine\n *\tis available to getservent re-entrantly.\n */\n/* GETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of getservent_r.\n *\tIt is zero if d_getservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservent_r\n *\tis defined.\n */\n/*#define HAS_GETSERVENT_R\t   / **/\n#define GETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETSERV_PROTOS\t/ **/\n\n/* HAS_GETSPNAM_R:\n *\tThis symbol, if defined, indicates that the getspnam_r routine\n *\tis available to getspnam re-entrantly.\n */\n/* GETSPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getspnam_r.\n *\tIt is zero if d_getspnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getspnam_r\n *\tis defined.\n */\n/*#define HAS_GETSPNAM_R\t   / **/\n#define GETSPNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n/*#define HAS_GETSERVBYNAME\t\t/ **/\n/*#define HAS_GETSERVBYPORT\t\t/ **/\n\n/* HAS_GMTIME_R:\n *\tThis symbol, if defined, indicates that the gmtime_r routine\n *\tis available to gmtime re-entrantly.\n */\n/* GMTIME_R_PROTO:\n *\tThis symbol encodes the prototype of gmtime_r.\n *\tIt is zero if d_gmtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gmtime_r\n *\tis defined.\n */\n/*#define HAS_GMTIME_R\t   / **/\n#define GMTIME_R_PROTO 0\t   /**/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n/*#define HAS_GNULIBC  \t/ **/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n/*#define HAS_HTONL\t\t/ **/\n/*#define HAS_HTONS\t\t/ **/\n/*#define HAS_NTOHL\t\t/ **/\n/*#define HAS_NTOHS\t\t/ **/\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii\n *\tis available.\n */\n/*#define HAS_ISASCII\t\t/ **/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n/*#define HAS_LCHOWN\t\t/ **/\n\n/* HAS_LOCALTIME_R:\n *\tThis symbol, if defined, indicates that the localtime_r routine\n *\tis available to localtime re-entrantly.\n */\n/* LOCALTIME_R_NEEDS_TZSET:\n *\tMany libc's localtime_r implementations do not call tzset,\n *\tmaking them differ from localtime(), and making timezone\n *\tchanges using $ENV{TZ} without explicitly calling tzset\n *\timpossible. This symbol makes us call tzset before localtime_r\n */\n/*#define LOCALTIME_R_NEEDS_TZSET / **/\n#ifdef LOCALTIME_R_NEEDS_TZSET\n#define L_R_TZSET tzset(),\n#else\n#define L_R_TZSET\n#endif\n\n/* LOCALTIME_R_PROTO:\n *\tThis symbol encodes the prototype of localtime_r.\n *\tIt is zero if d_localtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_localtime_r\n *\tis defined.\n */\n/*#define HAS_LOCALTIME_R\t   / **/\n#define LOCALTIME_R_PROTO 0\t   /**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.   Note that this\n *\tis sizeof(long double), which may include unused bytes.\n */\n/* HAS_LDEXPL:\n *\tThis symbol, if defined, indicates that the ldexpl routine is\n *\tavailable to shift a long double floating-point number\n *\tby an integral power of 2.\n */\n/* LONG_DOUBLEKIND:\n *\tLONG_DOUBLEKIND will be one of\n *\tLONG_DOUBLE_IS_DOUBLE\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_UNKNOWN_FORMAT\n *\tIt is only defined if the system supports long doubles.\n */\n/*#define  HAS_LDEXPL\t\t/ **/\n/*#define HAS_LONG_DOUBLE\t\t/ **/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE 8\t\t/**/\n#define LONG_DOUBLEKIND 0\t\t/**/\n#define LONG_DOUBLE_IS_DOUBLE\t\t\t\t0\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\t1\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\t2\n#define LONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\t\t3\n#define LONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\t\t4\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LITTLE_ENDIAN\t5\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BIG_ENDIAN\t6\n#define LONG_DOUBLE_IS_UNKNOWN_FORMAT\t\t\t-1\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n/*#define HAS_LONG_LONG\t\t/ **/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE 8\t\t/**/\n#endif\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n/*#define\tHAS_LSEEK_PROTO\t/ **/\n\n/* HAS_MEMCHR:\n *\tThis symbol, if defined, indicates that the memchr routine is available\n *\tto locate characters within a C string.\n */\n#define HAS_MEMCHR\t/**/\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n/*#define HAS_MKSTEMP\t\t/ **/\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'caddr_t'.\n */\n/*#define HAS_MMAP\t\t/ **/\n#define Mmap_t void *\t/**/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n/*#define HAS_MSG\t\t/ **/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n/*#define HAS_OPEN3\t\t/ **/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n/*#define OLD_PTHREAD_CREATE_JOINABLE  / **/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n/*#define HAS_PTHREAD_ATFORK\t\t/ **/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/*#define HAS_PTHREAD_YIELD\t/ **/\n#define SCHED_YIELD\tsched_yield()\t/**/\n/*#define HAS_SCHED_YIELD\t/ **/\n\n/* HAS_RANDOM_R:\n *\tThis symbol, if defined, indicates that the random_r routine\n *\tis available to random re-entrantly.\n */\n/* RANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of random_r.\n *\tIt is zero if d_random_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r\n *\tis defined.\n */\n/*#define HAS_RANDOM_R\t   / **/\n#define RANDOM_R_PROTO 0\t   /**/\n\n/* HAS_READDIR64_R:\n *\tThis symbol, if defined, indicates that the readdir64_r routine\n *\tis available to readdir64 re-entrantly.\n */\n/* READDIR64_R_PROTO:\n *\tThis symbol encodes the prototype of readdir64_r.\n *\tIt is zero if d_readdir64_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir64_r\n *\tis defined.\n */\n/*#define HAS_READDIR64_R\t   / **/\n#define READDIR64_R_PROTO 0\t   /**/\n\n/* HAS_READDIR_R:\n *\tThis symbol, if defined, indicates that the readdir_r routine\n *\tis available to readdir re-entrantly.\n */\n/* READDIR_R_PROTO:\n *\tThis symbol encodes the prototype of readdir_r.\n *\tIt is zero if d_readdir_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir_r\n *\tis defined.\n */\n/*#define HAS_READDIR_R\t   / **/\n#define READDIR_R_PROTO 0\t   /**/\n\n/* HAS_SAFE_BCOPY:\n *\tThis symbol, if defined, indicates that the bcopy routine is available\n *\tto copy potentially overlapping memory blocks. Normally, you should\n *\tprobably use memmove() or memcpy(). If neither is defined, roll your\n *\town version.\n */\n/*#define HAS_SAFE_BCOPY\t/ **/\n\n/* HAS_SAFE_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy potentially overlapping memory blocks.  If you need to\n *\tcopy overlapping memory blocks, you should check HAS_MEMMOVE and\n *\tuse memmove() instead, if available.\n */\n/*#define HAS_SAFE_MEMCPY\t/ **/\n\n/* HAS_SANE_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tand can be used to compare relative magnitudes of chars with their high\n *\tbits set.  If it is not defined, roll your own version.\n */\n/*#define HAS_SANE_MEMCMP\t/ **/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n/*#define HAS_SEM\t\t/ **/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n/*#define HAS_SETGRENT\t\t/ **/\n\n/* HAS_SETGRENT_R:\n *\tThis symbol, if defined, indicates that the setgrent_r routine\n *\tis available to setgrent re-entrantly.\n */\n/* SETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of setgrent_r.\n *\tIt is zero if d_setgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setgrent_r\n *\tis defined.\n */\n/*#define HAS_SETGRENT_R\t   / **/\n#define SETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n/*#define HAS_SETHOSTENT\t\t/ **/\n\n/* HAS_SETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the sethostent_r routine\n *\tis available to sethostent re-entrantly.\n */\n/* SETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of sethostent_r.\n *\tIt is zero if d_sethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_sethostent_r\n *\tis defined.\n */\n/*#define HAS_SETHOSTENT_R\t   / **/\n#define SETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_SETLOCALE_R:\n *\tThis symbol, if defined, indicates that the setlocale_r routine\n *\tis available to setlocale re-entrantly.\n */\n/* SETLOCALE_R_PROTO:\n *\tThis symbol encodes the prototype of setlocale_r.\n *\tIt is zero if d_setlocale_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setlocale_r\n *\tis defined.\n */\n/*#define HAS_SETLOCALE_R\t   / **/\n#define SETLOCALE_R_PROTO 0\t   /**/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n/*#define HAS_SETNETENT\t\t/ **/\n\n/* HAS_SETNETENT_R:\n *\tThis symbol, if defined, indicates that the setnetent_r routine\n *\tis available to setnetent re-entrantly.\n */\n/* SETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of setnetent_r.\n *\tIt is zero if d_setnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setnetent_r\n *\tis defined.\n */\n/*#define HAS_SETNETENT_R\t   / **/\n#define SETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n/*#define HAS_SETPROTOENT\t\t/ **/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n/*#define HAS_SETPGRP\t\t/ **/\n/*#define USE_BSD_SETPGRP\t/ **/\n\n/* HAS_SETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the setprotoent_r routine\n *\tis available to setprotoent re-entrantly.\n */\n/* SETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of setprotoent_r.\n *\tIt is zero if d_setprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setprotoent_r\n *\tis defined.\n */\n/*#define HAS_SETPROTOENT_R\t   / **/\n#define SETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n/*#define HAS_SETPWENT\t\t/ **/\n\n/* HAS_SETPWENT_R:\n *\tThis symbol, if defined, indicates that the setpwent_r routine\n *\tis available to setpwent re-entrantly.\n */\n/* SETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of setpwent_r.\n *\tIt is zero if d_setpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setpwent_r\n *\tis defined.\n */\n/*#define HAS_SETPWENT_R\t   / **/\n#define SETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n/*#define HAS_SETSERVENT\t\t/ **/\n\n/* HAS_SETSERVENT_R:\n *\tThis symbol, if defined, indicates that the setservent_r routine\n *\tis available to setservent re-entrantly.\n */\n/* SETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of setservent_r.\n *\tIt is zero if d_setservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setservent_r\n *\tis defined.\n */\n/*#define HAS_SETSERVENT_R\t   / **/\n#define SETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n/*#define HAS_SETVBUF\t\t/ **/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n/*#define HAS_SHM\t\t/ **/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t void *\t/**/\n/*#define HAS_SHMAT_PROTOTYPE\t/ **/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n/*#define HAS_SIGACTION\t/ **/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/*#define HAS_SIGSETJMP\t/ **/\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n/* HAS_MSG_CTRUNC:\n *\tThis symbol, if defined, indicates that the MSG_CTRUNC is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_DONTROUTE:\n *\tThis symbol, if defined, indicates that the MSG_DONTROUTE is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_OOB:\n *\tThis symbol, if defined, indicates that the MSG_OOB is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PEEK:\n *\tThis symbol, if defined, indicates that the MSG_PEEK is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PROXY:\n *\tThis symbol, if defined, indicates that the MSG_PROXY is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_SCM_RIGHTS:\n *\tThis symbol, if defined, indicates that the SCM_RIGHTS is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_SOCKADDR_SA_LEN:\n *\tThis symbol, if defined, indicates that the struct sockaddr\n *\tstructure has a member called sa_len, indicating the length of\n *\tthe structure.\n */\n/* HAS_SOCKADDR_IN6:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct sockaddr_in6;\n */\n/* HAS_SIN6_SCOPE_ID:\n *\tThis symbol, if defined, indicates that the struct sockaddr_in6\n *\tstructure has a member called sin6_scope_id.\n */\n/* HAS_IP_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq;\n */\n/* HAS_IP_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq_source;\n */\n/* HAS_IPV6_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq;\n */\n/* HAS_IPV6_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq_source;\n */\n/*#define\tHAS_SOCKET\t\t/ **/\n/*#define\tHAS_SOCKETPAIR\t/ **/\n/*#define\tHAS_SOCKADDR_SA_LEN\t/ **/\n/*#define\tHAS_MSG_CTRUNC\t/ **/\n/*#define\tHAS_MSG_DONTROUTE\t/ **/\n/*#define\tHAS_MSG_OOB\t/ **/\n/*#define\tHAS_MSG_PEEK\t/ **/\n/*#define\tHAS_MSG_PROXY\t/ **/\n/*#define\tHAS_SCM_RIGHTS\t/ **/\n/*#define\tHAS_SOCKADDR_IN6\t/ **/\n/*#define\tHAS_SIN6_SCOPE_ID\t/ **/\n/*#define\tHAS_IP_MREQ\t/ **/\n/*#define\tHAS_IP_MREQ_SOURCE\t/ **/\n/*#define\tHAS_IPV6_MREQ\t/ **/\n/*#define\tHAS_IPV6_MREQ_SOURCE\t/ **/\n\n/* HAS_SRAND48_R:\n *\tThis symbol, if defined, indicates that the srand48_r routine\n *\tis available to srand48 re-entrantly.\n */\n/* SRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of srand48_r.\n *\tIt is zero if d_srand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srand48_r\n *\tis defined.\n */\n/*#define HAS_SRAND48_R\t   / **/\n#define SRAND48_R_PROTO 0\t   /**/\n\n/* HAS_SRANDOM_R:\n *\tThis symbol, if defined, indicates that the srandom_r routine\n *\tis available to srandom re-entrantly.\n */\n/* SRANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of srandom_r.\n *\tIt is zero if d_srandom_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srandom_r\n *\tis defined.\n */\n/*#define HAS_SRANDOM_R\t   / **/\n#define SRANDOM_R_PROTO 0\t   /**/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n/*#define USE_STAT_BLOCKS \t/ **/\n#endif\n\n/* HAS_STATIC_INLINE:\n *\tThis symbol, if defined, indicates that the C compiler supports\n *\tC99-style static inline.  That is, the function can't be called\n *\tfrom another translation unit.\n */\n/* PERL_STATIC_INLINE:\n *\tThis symbol gives the best-guess incantation to use for static\n *\tinline functions.  If HAS_STATIC_INLINE is defined, this will\n *\tgive C99-style inline.  If HAS_STATIC_INLINE is not defined,\n *\tthis will give a plain 'static'.  It will always be defined\n *\tto something that gives static linkage.\n *\tPossibilities include\n *\t\tstatic inline       (c99)\n *\t\tstatic __inline__   (gcc -ansi)\n *\t\tstatic __inline     (MSVC)\n *\t\tstatic _inline      (older MSVC)\n *\t\tstatic              (c89 compilers)\n */\n/*#define HAS_STATIC_INLINE\t\t\t\t/ **/\n#define PERL_STATIC_INLINE static\t/**/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n/*#define USE_STDIO_PTR \t/ **/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\t((fp)->_IO_read_ptr)\n/*#define STDIO_PTR_LVALUE \t\t/ **/\n#define FILE_cnt(fp)\t((fp)->_IO_read_end - (fp)->_IO_read_ptr)\n/*#define STDIO_CNT_LVALUE \t\t/ **/\n/*#define STDIO_PTR_LVAL_SETS_CNT\t/ **/\n/*#define STDIO_PTR_LVAL_NOCHANGE_CNT\t/ **/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n/*#define USE_STDIO_BASE \t/ **/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\t((fp)->_IO_read_base)\n#define FILE_bufsiz(fp)\t((fp)->_IO_read_end - (fp)->_IO_read_base)\n#endif\n\n/* USE_STRUCT_COPY:\n *\tThis symbol, if defined, indicates that this C compiler knows how\n *\tto copy structures.  If undefined, you'll need to use a block copy\n *\troutine of some sort instead.\n */\n/*#define\tUSE_STRUCT_COPY\t/ **/\n\n/* HAS_STRERROR:\n *\tThis symbol, if defined, indicates that the strerror routine is\n *\tavailable to translate error numbers to strings. See the writeup\n *\tof Strerror() in this file before you try to define your own.\n */\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n/* Strerror:\n *\tThis preprocessor symbol is defined as a macro if strerror() is\n *\tnot available to translate error numbers to strings but sys_errlist[]\n *\tarray is there.\n */\n/*#define HAS_STRERROR\t\t/ **/\n/*#define HAS_SYS_ERRLIST\t/ **/\n#define Strerror(e) strerror(e)\n\n/* HAS_STRERROR_R:\n *\tThis symbol, if defined, indicates that the strerror_r routine\n *\tis available to strerror re-entrantly.\n */\n/* STRERROR_R_PROTO:\n *\tThis symbol encodes the prototype of strerror_r.\n *\tIt is zero if d_strerror_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_strerror_r\n *\tis defined.\n */\n/*#define HAS_STRERROR_R\t   / **/\n#define STRERROR_R_PROTO 0\t   /**/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#define HAS_STRTOUL\t/**/\n\n/* HAS_TIME:\n *\tThis symbol, if defined, indicates that the time() routine exists.\n */\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#define HAS_TIME\t\t/**/\n#define Time_t time_t\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n * use getrusage(). It may be necessary to include <sys/times.h>.\n */\n/*#define HAS_TIMES\t\t/ **/\n\n/* HAS_TMPNAM_R:\n *\tThis symbol, if defined, indicates that the tmpnam_r routine\n *\tis available to tmpnam re-entrantly.\n */\n/* TMPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of tmpnam_r.\n *\tIt is zero if d_tmpnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_tmpnam_r\n *\tis defined.\n */\n/*#define HAS_TMPNAM_R\t   / **/\n#define TMPNAM_R_PROTO 0\t   /**/\n\n/* HAS_TTYNAME_R:\n *\tThis symbol, if defined, indicates that the ttyname_r routine\n *\tis available to ttyname re-entrantly.\n */\n/* TTYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of ttyname_r.\n *\tIt is zero if d_ttyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ttyname_r\n *\tis defined.\n */\n/*#define HAS_TTYNAME_R\t   / **/\n#define TTYNAME_R_PROTO 0\t   /**/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n/*#define HAS_UNION_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMID_DS\t/ **/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n/*#define HAS_VFORK\t/ **/\n\n/* HAS_PSEUDOFORK:\n *\tThis symbol, if defined, indicates that an emulation of the\n *\tfork routine is available.\n */\n/*#define HAS_PSEUDOFORK\t/ **/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t int\t/* Signal handler's return type */\n\n/* HASVOLATILE:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe volatile declaration.\n */\n/*#define\tHASVOLATILE\t/ **/\n#ifndef HASVOLATILE\n#define volatile\n#endif\n\n/* HAS_VPRINTF:\n *\tThis symbol, if defined, indicates that the vprintf routine is available\n *\tto printf with a pointer to an argument list.  If unavailable, you\n *\tmay need to write your own, probably in terms of _doprnt().\n */\n/* USE_CHAR_VSPRINTF:\n *\tThis symbol is defined if this system has vsprintf() returning type\n *\t(char*).  The trend seems to be to declare it as \"int vsprintf()\".  It\n *\tis up to the package author to declare vsprintf correctly based on the\n *\tsymbol.\n */\n#define HAS_VPRINTF\t/**/\n/*#define USE_CHAR_VSPRINTF \t/ **/\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE 8\t\t/**/\n\n/* EBCDIC:\n *\tThis symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n/*#define\tEBCDIC \t\t/ **/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t int\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t\"lu\"\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedness of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t1\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size 4\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t int\t\t/* Type for getgid(), etc... */\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#define I_DIRENT\t\t/**/\n/*#define DIRNAMLEN\t/ **/\n#define Direntry_t struct dirent\n\n/* I_EXECINFO:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <execinfo.h> for backtrace() support.\n */\n/*#define I_EXECINFO\t\t/ **/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n/*#define I_GRP\t\t/ **/\n/*#define GRPASSWD\t/ **/\n\n/* I_MACH_CTHREADS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <mach/cthreads.h>.\n */\n/*#define   I_MACH_CTHREADS\t/ **/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/* I_GDBMNDBM:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> exists and should\n *\tbe included.  This was the location of the ndbm.h compatibility file\n *\tin RedHat 7.1.\n */\n/* I_GDBM_NDBM:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> exists and should\n *\tbe included.  This is the location of the ndbm.h compatibility file\n *\tin Debian 4.0.\n */\n/* NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBMNDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBM_NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/*#define I_NDBM\t/ **/\n/*#define I_GDBMNDBM\t/ **/\n/*#define I_GDBM_NDBM\t/ **/\n/*#define NDBM_H_USES_PROTOTYPES\t/ **/\n/*#define GDBMNDBM_H_USES_PROTOTYPES\t/ **/\n/*#define GDBM_NDBM_H_USES_PROTOTYPES\t/ **/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n/*#define I_NETDB\t\t/ **/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and\n *\tshould be included.\n */\n/*#define I_NET_ERRNO\t\t/ **/\n\n/* I_PTHREAD:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <pthread.h>.\n */\n/*#define   I_PTHREAD\t/ **/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n/*#define I_PWD\t\t/ **/\n/*#define PWQUOTA\t/ **/\n/*#define PWAGE\t/ **/\n/*#define PWCHANGE\t/ **/\n/*#define PWCLASS\t/ **/\n/*#define PWEXPIRE\t/ **/\n/*#define PWCOMMENT\t/ **/\n/*#define PWGECOS\t/ **/\n/*#define PWPASSWD\t/ **/\n\n/* I_SYS_ACCESS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/access.h>.\n */\n/*#define   I_SYS_ACCESS                / **/\n\n/* I_SYS_SECURITY:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/security.h>.\n */\n/*#define   I_SYS_SECURITY\t/ **/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUIO\t\t/ **/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/*#define I_TERMIO\t\t/ **/\n/*#define I_TERMIOS\t\t/ **/\n/*#define I_SGTTY\t\t/ **/\n\n/* I_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n/* HAS_TM_TM_ZONE:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_zone field.\n */\n/* HAS_TM_TM_GMTOFF:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_gmtoff field.\n */\n#define I_TIME\t\t/**/\n/*#define I_SYS_TIME\t\t/ **/\n/*#define I_SYS_TIME_KERNEL\t\t/ **/\n/*#define HAS_TM_TM_ZONE\t\t/ **/\n/*#define HAS_TM_TM_GMTOFF\t\t/ **/\n\n/* I_STDARG:\n *\tThis symbol, if defined, indicates that <stdarg.h> exists and should\n *\tbe included.\n */\n/* I_VARARGS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <varargs.h>.\n */\n#define I_STDARG\t\t/**/\n/*#define I_VARARGS\t/ **/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n/*#define PERL_INC_VERSION_LIST NULL\t\t/ **/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n * \talso as /usr/bin/perl.\n */\n/*#define INSTALL_USR_BIN_PERL\t/ **/\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t int\t\t/* <offset> type */\n#define LSEEKSIZE 4\t\t/* <offset> size */\n#define Off_t_size 4\t/* <offset> size */\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n * void, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t void *\t\t\t/**/\n#define Free_t void\t\t\t/**/\n\n/* PERL_MALLOC_WRAP:\n *\tThis symbol, if defined, indicates that we'd like malloc wrap checks.\n */\n/*#define PERL_MALLOC_WRAP\t\t/ **/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n/*#define MYMALLOC\t\t\t/ **/\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes\n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t int\t /* file mode parameter for system calls */\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK O_NONBLOCK\n#define VAL_EAGAIN EAGAIN\n#define RD_NODATA -1\n#undef EOF_NONBLOCK\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\tconst char * /**/\n#define Netdb_hlen_t\t\tint /**/\n#define Netdb_name_t\t\tconst char * /**/\n#define Netdb_net_t\t\tunsigned long /**/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n/*#define PERL_OTHERLIBDIRS \" \"\t\t/ **/\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t int\t\t/* PID type */\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"/usr/local/lib/perl5/5.22\"\t\t/**/\n#define PRIVLIB_EXP \"/usr/local/lib/perl5/5.22\"\t\t/**/\n\n/* CAN_PROTOTYPE:\n *\tIf defined, this macro indicates that the C compiler can handle\n *\tfunction prototypes.\n */\n/* _:\n *\tThis macro is used to declare function parameters for folks who want\n *\tto make declarations with prototypes using a different style than\n *\tthe above macros.  Use double parentheses.  For example:\n *\n *\t\tint main _((int argc, char *argv[]));\n */\n/*#define\tCAN_PROTOTYPE\t/ **/\n#ifdef CAN_PROTOTYPE\n#define\t_(args) args\n#else\n#define\t_(args) ()\n#endif\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE 4\t\t/**/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpart, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, QUAD_IS_INT64_T,\n *\tor QUAD_IS___INT64.\n */\n/*#define HAS_QUAD\t/ **/\n#ifdef HAS_QUAD\n#   define Quad_t int64_t\t/**/\n#   define Uquad_t uint64_t\t/**/\n#   define QUADKIND 4\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#   define QUAD_IS___INT64\t5\n#endif\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\tPerl_drand48()\t\t/**/\n#define Rand_seed_t\t\tU32\t\t/**/\n#define seedDrand01(x)\tPerl_drand48_init((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t48\t\t/**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you\n *\thave select(), of course.\n */\n#define Select_fd_set_t \tint\t/**/\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"/bin/sh\"  /**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_name_init list.\n *\tNote that this variable is initialized from the sig_name_init,\n *\tnot from sig_name (which is unused).\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup.\n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.\n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name_init list.\n *\tNote that this variable is initialized from the sig_num_init,\n *\tnot from sig_num (which is unused).\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME 0\t\t/**/\n#define SIG_NUM  0\t\t/**/\n#define SIG_SIZE 1\t\t\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define SITEARCH \"/usr/local/lib/perl5/5.22/unknown\"\t\t/ **/\n/*#define SITEARCH_EXP \"/usr/local/lib/perl5/5.22/unknown\"\t\t/ **/\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"/usr/local/lib/perl5/5.22\"\t\t/**/\n#define SITELIB_EXP \"/usr/local/lib/perl5/5.22\"\t\t/**/\n#define SITELIB_STEM \"/usr/local/lib/perl5\"\t\t/**/\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size 4\t\t/**/\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t size_t\t /* length parameter for string functions */\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\tint /**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t int\t /* signed count of bytes */\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR char\t/**/\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t\"lu\"\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedness of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t1\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size 4\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t int\t\t/* UID type */\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* USE_5005THREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the 5.005-based threading implementation.\n *\tOnly valid up to 5.8.x.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n/*#define\tUSE_5005THREADS\t\t/ **/\n/*#define\tUSE_ITHREADS\t\t/ **/\n#if defined(USE_5005THREADS) && !defined(USE_ITHREADS)\n#define\t\tUSE_THREADS\t\t/* until src is revised*/\n#endif\n/*#define\tOLD_PTHREADS_API\t\t/ **/\n/*#define\tUSE_REENTRANT_API\t/ **/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front.\n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor\n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define PERL_VENDORARCH \"\"\t\t/ **/\n/*#define PERL_VENDORARCH_EXP \"\"\t\t/ **/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n/*#define PERL_VENDORLIB_EXP \"\"\t\t/ **/\n/*#define PERL_VENDORLIB_STEM \"\"\t\t/ **/\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n/*#define\tUSE_CROSS_COMPILE\t/ **/\n#define\tPERL_TARGETARCH\t\"\"\t/**/\n#endif\n\n/* PERL_USE_DEVEL:\n *\tThis symbol, if defined, indicates that Perl was configured with\n *\t-Dusedevel, to enable development features.  This should not be\n *\tdone for production builds.\n */\n/*#define\tPERL_USE_DEVEL\t\t/ **/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n/*#define HAS_ATOLF\t\t/ **/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n/*#define HAS_ATOLL\t\t/ **/\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n/*#define HAS__FWALK\t\t/ **/\n\n/* HAS_ACOSH:\n *\tThis symbol, if defined, indicates that the acosh routine is\n *\tavailable to do the inverse hyperbolic cosine function.\n */\n/*#define HAS_ACOSH\t\t/ **/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_AINTL\t\t/ **/\n\n/* HAS_ASINH:\n *\tThis symbol, if defined, indicates that the asinh routine is\n *\tavailable to do the inverse hyperbolic sine function.\n */\n/*#define HAS_ASINH\t\t/ **/\n\n/* HAS_ATANH:\n *\tThis symbol, if defined, indicates that the atanh routine is\n *\tavailable to do the inverse hyperbolic tangent function.\n */\n/*#define HAS_ATANH\t\t/ **/\n\n/* HAS_BUILTIN_CHOOSE_EXPR:\n *\tCan we handle GCC builtin for compile-time ternary-like expressions\n */\n/* HAS_BUILTIN_EXPECT:\n *\tCan we handle GCC builtin for telling that certain values are more\n *\tlikely\n */\n/*#define HAS_BUILTIN_EXPECT\t/ **/\n/*#define HAS_BUILTIN_CHOOSE_EXPR\t/ **/\n\n/* HAS_C99_VARIADIC_MACROS:\n *\tIf defined, the compiler supports C99 variadic macros.\n */\n/*#define\tHAS_C99_VARIADIC_MACROS\t/ **/\n\n/* HAS_CLASS:\n *\tThis symbol, if defined, indicates that the class routine is\n *\tavailable to classify doubles.  Available for example in AIX.\n *\tThe returned values are defined in <float.h> and are:\n *\n *\tFP_PLUS_NORM\tPositive normalized, nonzero\n *\tFP_MINUS_NORM\tNegative normalized, nonzero\n *\tFP_PLUS_DENORM\tPositive denormalized, nonzero\n *\tFP_MINUS_DENORM\tNegative denormalized, nonzero\n *\tFP_PLUS_ZERO\t+0.0\n *\tFP_MINUS_ZERO\t-0.0\n *\tFP_PLUS_INF\t+INF\n *\tFP_MINUS_INF\t-INF\n *\tFP_NANS\t\tSignaling Not a Number (NaNS)\n *\tFP_NANQ\t\tQuiet Not a Number (NaNQ)\n */\n/*#define HAS_CLASS\t\t/ **/\n\n/* HAS_CLEARENV:\n *\tThis symbol, if defined, indicates that the clearenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_CLEARENV\t\t/ **/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_CMSGHDR\t/ **/\n\n/* HAS_COPYSIGN:\n *\tThis symbol, if defined, indicates that the copysign routine is\n *\tavailable to do the copysign function.\n */\n/*#define HAS_COPYSIGN\t\t/ **/\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n/*#define HAS_COPYSIGNL\t\t/ **/\n\n/* USE_CPLUSPLUS:\n *\tThis symbol, if defined, indicates that a C++ compiler was\n *\tused to compiled Perl and will be used to compile extensions.\n */\n/*#define USE_CPLUSPLUS\t\t/ **/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n/*#define\tHAS_DBMINIT_PROTO\t/ **/\n\n/* HAS_DIR_DD_FD:\n *\tThis symbol, if defined, indicates that the the DIR* dirstream\n *\tstructure contains a member variable named dd_fd.\n */\n/*#define HAS_DIR_DD_FD\t\t/ **/\n\n/* HAS_DIRFD:\n *\tThis manifest constant lets the C program know that dirfd\n *\tis available.\n */\n/*#define HAS_DIRFD\t\t/ **/\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n/*#define \tDLSYM_NEEDS_UNDERSCORE \t/ **/\n\n/* HAS_ERF:\n *\tThis symbol, if defined, indicates that the erf routine is\n *\tavailable to do the error function.\n */\n/*#define HAS_ERF\t\t/ **/\n\n/* HAS_ERFC:\n *\tThis symbol, if defined, indicates that the erfc routine is\n *\tavailable to do the complementary error function.\n */\n/*#define HAS_ERFC\t\t/ **/\n\n/* HAS_EXP2:\n *\tThis symbol, if defined, indicates that the exp2 routine is\n *\tavailable to do the 2**x function.\n */\n/*#define HAS_EXP2\t\t/ **/\n\n/* HAS_EXPM1:\n *\tThis symbol, if defined, indicates that the expm1 routine is\n *\tavailable to do the exp(x) - 1 when x is near 1 function.\n */\n/*#define HAS_EXPM1\t\t/ **/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n/*#define HAS_FAST_STDIO\t\t/ **/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n/*#define HAS_FCHDIR\t\t/ **/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n/*#define FCNTL_CAN_LOCK\t\t/ **/\n\n/* HAS_FDIM:\n *\tThis symbol, if defined, indicates that the fdim routine is\n *\tavailable to do the positive difference function.\n */\n/*#define HAS_FDIM\t\t/ **/\n\n/* HAS_FEGETROUND:\n *\tThis symbol, if defined, indicates that the fegetround routine is\n *\tavailable to return the macro corresponding to the current rounding\n *\tmode.\n */\n/*#define HAS_FEGETROUND\t/ **/\n\n/* HAS_FINITE:\n *\tThis symbol, if defined, indicates that the finite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_FINITE\t\t/ **/\n\n/* HAS_FINITEL:\n *\tThis symbol, if defined, indicates that the finitel routine is\n *\tavailable to check whether a long double is finite\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_FINITEL\t\t/ **/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n/*#define\tHAS_FLOCK_PROTO\t/ **/\n\n/* HAS_FMA:\n *\tThis symbol, if defined, indicates that the fma routine is\n *\tavailable to do the multiply-add function.\n */\n/*#define HAS_FMA\t\t/ **/\n\n/* HAS_FMAX:\n *\tThis symbol, if defined, indicates that the fmax routine is\n *\tavailable to do the maximum function.\n */\n/*#define HAS_FMAX\t\t/ **/\n\n/* HAS_FMIN:\n *\tThis symbol, if defined, indicates that the fmin routine is\n *\tavailable to do the minimum function.\n */\n/*#define HAS_FMIN\t\t/ **/\n\n/* HAS_FP_CLASS:\n *\tThis symbol, if defined, indicates that the fp_class routine is\n *\tavailable to classify doubles.  Available for example in Digital UNIX.\n *\tThe returned values are defined in <math.h> and are:\n *\n *\tFP_SNAN           Signaling NaN (Not-a-Number)\n *\tFP_QNAN           Quiet NaN (Not-a-Number)\n *\tFP_POS_INF        +infinity\n *\tFP_NEG_INF        -infinity\n *\tFP_POS_NORM       Positive normalized\n *\tFP_NEG_NORM       Negative normalized\n *\tFP_POS_DENORM     Positive denormalized\n *\tFP_NEG_DENORM     Negative denormalized\n *\tFP_POS_ZERO       +0.0 (positive zero)\n *\tFP_NEG_ZERO       -0.0 (negative zero)\n */\n/*#define HAS_FP_CLASS\t\t/ **/\n\n/* HAS_FP_CLASSL:\n *\tThis symbol, if defined, indicates that the fp_classl routine is\n *\tavailable to classify long doubles.  Available for example in\n *\tDigital UNIX.  See for possible values HAS_FP_CLASS.\n */\n/*#define HAS_FP_CLASSL\t\t/ **/\n\n/* HAS_FPCLASS:\n *\tThis symbol, if defined, indicates that the fpclass routine is\n *\tavailable to classify doubles.  Available for example in Solaris/SVR4.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASS\t\t/ **/\n\n/* HAS_FPCLASSIFY:\n *\tThis symbol, if defined, indicates that the fpclassify routine is\n *\tavailable to classify doubles.  Available for example in HP-UX.\n *\tThe returned values are defined in <math.h> and are\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/* HAS_FP_CLASSIFY:\n *\tThis symbol, if defined, indicates that the fp_classify routine is\n *\tavailable to classify doubles. The values are defined in <math.h>\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/*#define\tHAS_FPCLASSIFY\t\t/ **/\n/*#define\tHAS_FP_CLASSIFY\t\t/ **/\n\n/* HAS_FPCLASSL:\n *\tThis symbol, if defined, indicates that the fpclassl routine is\n *\tavailable to classify long doubles.  Available for example in IRIX.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASSL\t\t/ **/\n\n/* HAS_FPGETROUND:\n *\tThis symbol, if defined, indicates that the fpgetround routine is\n *\tavailable to get the floating point rounding mode.\n */\n/*#define HAS_FPGETROUND\t\t/ **/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n/*#define\tHAS_FPOS64_T    \t/ **/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n/*#define HAS_FREXPL\t\t/ **/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_FS_DATA\t/ **/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FSEEKO\t\t/ **/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATFS\t\t/ **/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n/*#define HAS_FSYNC\t\t/ **/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FTELLO\t\t/ **/\n\n/* HAS_FUTIMES:\n *\tThis symbol, if defined, indicates that the futimes routine is\n *\tavailable to change file descriptor time stamps with struct timevals.\n */\n/*#define HAS_FUTIMES\t\t/ **/\n\n/* HAS_GETADDRINFO:\n *\tThis symbol, if defined, indicates that the getaddrinfo() function\n *\tis available for use.\n */\n/*#define HAS_GETADDRINFO\t\t/ **/\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n/*#define HAS_GETCWD\t\t/ **/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enhanced (shadow) password entries by name.\n */\n/*#define HAS_GETESPWNAM\t\t/ **/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n/*#define HAS_GETFSSTAT\t\t/ **/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n/*#define HAS_GETITIMER\t\t/ **/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n/*#define HAS_GETMNT\t\t/ **/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n/*#define HAS_GETMNTENT\t\t/ **/\n\n/* HAS_GETNAMEINFO:\n *\tThis symbol, if defined, indicates that the getnameinfo() function\n *\tis available for use.\n */\n/*#define HAS_GETNAMEINFO\t\t/ **/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n/*#define HAS_GETPRPWNAM\t\t/ **/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n/*#define HAS_GETSPNAM\t\t/ **/\n\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n/*#define HAS_HASMNTOPT\t\t/ **/\n\n/* HAS_HYPOT:\n *\tThis symbol, if defined, indicates that the hypot routine is\n *\tavailable to do the hypotenuse function.\n */\n/*#define HAS_HYPOT\t\t/ **/\n\n/* HAS_ILOGB:\n *\tThis symbol, if defined, indicates that the ilogb routine is\n *\tavailable to get integer exponent of a floating-point value.\n */\n/*#define HAS_ILOGB\t\t/ **/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n/*#define HAS_ILOGBL\t\t/ **/\n\n/* HAS_INETNTOP:\n *\tThis symbol, if defined, indicates that the inet_ntop() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n/*#define HAS_INETNTOP\t\t/ **/\n\n/* HAS_INETPTON:\n *\tThis symbol, if defined, indicates that the inet_pton() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n/*#define HAS_INETPTON\t\t/ **/\n\n/* HAS_INT64_T:\n *     This symbol will defined if the C compiler supports int64_t.\n *     Usually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n/*#define     HAS_INT64_T               / **/\n\n/* HAS_ISBLANK:\n *\tThis manifest constant lets the C program know that isblank\n *\tis available.\n */\n/*#define HAS_ISBLANK\t\t/ **/\n\n/* HAS_ISFINITE:\n *\tThis symbol, if defined, indicates that the isfinite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_ISFINITE\t\t/ **/\n\n/* HAS_ISFINITEL:\n *\tThis symbol, if defined, indicates that the isfinitel routine is\n *\tavailable to check whether a long double is finite.\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_ISFINITEL\t\t/ **/\n\n/* HAS_ISINF:\n *\tThis symbol, if defined, indicates that the isinf routine is\n *\tavailable to check whether a double is an infinity.\n */\n/*#define HAS_ISINF\t\t/ **/\n\n/* HAS_ISINFL:\n *\tThis symbol, if defined, indicates that the isinfl routine is\n *\tavailable to check whether a long double is an infinity.\n */\n/*#define HAS_ISINFL\t\t/ **/\n\n/* HAS_ISLESS:\n *\tThis symbol, if defined, indicates that the isless routine is\n *\tavailable to do the isless function.\n */\n/*#define HAS_ISLESS\t\t/ **/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n/*#define HAS_ISNAN\t\t/ **/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n/*#define HAS_ISNANL\t\t/ **/\n\n/* HAS_ISNORMAL:\n *\tThis symbol, if defined, indicates that the isnormal routine is\n *\tavailable to check whether a double is normal (non-zero normalized).\n */\n/*#define HAS_ISNORMAL\t\t/ **/\n\n/* HAS_J0:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0() function is available for Bessel functions of the first\n *\tkind of the order zero, for doubles.\n */\n/* HAS_J0L:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0l() function is available for Bessel functions of the first\n *\tkind of the order zero, for long doubles.\n */\n/*#define\tHAS_J0\t\t/ **/\n/*#define\tHAS_J0L\t\t/ **/\n\n/* HAS_LC_MONETARY_2008:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable and has the additional members added in POSIX 1003.1-2008.\n */\n/*#define HAS_LC_MONETARY_2008\t\t/ **/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n/*#define HAS_LDBL_DIG \t/ * */\n\n/* HAS_LGAMMA:\n *\tThis symbol, if defined, indicates that the lgamma routine is\n *\tavailable to do the log gamma function.  See also HAS_TGAMMA and\n *\tHAS_LGAMMA_R.\n */\n/*#define HAS_LGAMMA\t\t/ **/\n\n/* HAS_LGAMMA_R:\n *\tThis symbol, if defined, indicates that the lgamma_r routine is\n *\tavailable to do the log gamma function without using the global\n *\tsigngam variable.\n */\n/*#define HAS_LGAMMA_R\t\t/ **/\n\n/* LIBM_LIB_VERSION:\n *\tThis symbol, if defined, indicates that libm exports _LIB_VERSION\n *\tand that math.h defines the enum to manipulate it.\n */\n/*#define LIBM_LIB_VERSION\t\t/ **/\n\n/* HAS_LLRINT:\n *\tThis symbol, if defined, indicates that the llrint routine is\n *\tavailable to return the closest long long value according to\n *\tthe current rounding mode.\n */\n/*#define HAS_LLRINT\t\t/ **/\n\n/* HAS_LLRINTL:\n *\tThis symbol, if defined, indicates that the llrintl routine is\n *\tavailable to return the closest long long value of the long double\n *\targument according to the current rounding mode.\n */\n/*#define HAS_LLRINTL\t\t/ **/\n\n/* HAS_LLROUND:\n *\tThis symbol, if defined, indicates that the llround routine is\n *\tavailable to return the nearest long long value.\n */\n/*#define HAS_LLROUND\t\t/ **/\n\n/* HAS_LLROUNDL:\n *\tThis symbol, if defined, indicates that the llroundl routine is\n *\tavailable to return the nearest long long value away from zero of\n *\tthe long double argument value.\n */\n/*#define HAS_LLROUNDL\t\t/ **/\n\n/* HAS_LOG1P:\n *\tThis symbol, if defined, indicates that the log1p routine is\n *\tavailable to do the logarithm of 1 plus argument function.\n */\n/*#define HAS_LOG1P\t\t/ **/\n\n/* HAS_LOG2:\n *\tThis symbol, if defined, indicates that the log2 routine is\n *\tavailable to do the log2 function.\n */\n/*#define HAS_LOG2\t\t/ **/\n\n/* HAS_LOGB:\n *\tThis symbol, if defined, indicates that the logb routine is\n *\tavailable to do the logb function.\n */\n/*#define HAS_LOGB\t\t/ **/\n\n/* HAS_LRINT:\n *\tThis symbol, if defined, indicates that the lrint routine is\n *\tavailable to return the closest integral value according to\n *\tthe current rounding mode.\n */\n/*#define HAS_LRINT\t\t/ **/\n\n/* HAS_LRINTL:\n *\tThis symbol, if defined, indicates that the lrintl routine is\n *\tavailable to return the closest integral value of the long double\n *\targument according to the current rounding mode.\n */\n/*#define HAS_LRINTL\t\t/ **/\n\n/* HAS_LROUND:\n *\tThis symbol, if defined, indicates that the lround routine is\n *\tavailable to return the nearest integral value.\n */\n/*#define HAS_LROUND\t\t/ **/\n\n/* HAS_LROUNDL:\n *\tThis symbol, if defined, indicates that the lroundl routine is\n *\tavailable to return the nearest integral value away from zero of\n *\tthe long double argument value.\n */\n/*#define HAS_LROUNDL\t\t/ **/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n/*#define HAS_MADVISE\t\t/ **/\n\n/* HAS_MALLOC_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_SIZE\t\t/ **/\n\n/* HAS_MALLOC_GOOD_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_good_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_GOOD_SIZE\t/ **/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n/*#define HAS_MKDTEMP\t\t/ **/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to exclusively create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n/*#define HAS_MKSTEMPS\t\t/ **/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/* HAS_MODFL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the modfl() function.  Otherwise, it is up\n *\tto the program to supply one.\n */\n/* HAS_MODFL_POW32_BUG:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tbroken for long doubles >= pow(2, 32).\n *\tFor example from 4294967303.150000 one would get 4294967302.000000\n *\tand 1.150000.  The bug has been seen in certain versions of glibc,\n *\trelease 2.2.2 is known to be okay.\n */\n/*#define HAS_MODFL\t\t/ **/\n/*#define HAS_MODFL_PROTO\t\t/ **/\n/*#define HAS_MODFL_POW32_BUG\t\t/ **/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n/*#define HAS_MPROTECT\t\t/ **/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_MSGHDR\t/ **/\n\n/* HAS_NAN:\n *\tThis symbol, if defined, indicates that the nan routine is\n *\tavailable to generate NaN.\n */\n/*#define HAS_NAN\t\t/ **/\n\n/* HAS_NEARBYINT:\n *\tThis symbol, if defined, indicates that the nearbyint routine is\n *\tavailable to return the integral value closest to (according to\n *\tthe current rounding mode) to x.\n */\n/*#define HAS_NEARBYINT\t\t/ **/\n\n/* HAS_NEXTAFTER:\n *\tThis symbol, if defined, indicates that the nextafter routine is\n *\tavailable to return the next machine representable double from\n *\tx in direction y.\n */\n/*#define HAS_NEXTAFTER\t\t/ **/\n\n/* HAS_NEXTTOWARD:\n *\tThis symbol, if defined, indicates that the nexttoward routine is\n *\tavailable to return the next machine representable long double from\n *\tx in direction y.\n */\n/*#define HAS_NEXTTOWARD\t\t/ **/\n\n/* HAS_NL_LANGINFO:\n *\tThis symbol, if defined, indicates that the nl_langinfo routine is\n *\tavailable to return local data.  You will also need <langinfo.h>\n *\tand therefore I_LANGINFO.\n */\n/*#define HAS_NL_LANGINFO\t\t/ **/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n/*#define\tHAS_OFF64_T    \t\t/ **/\n\n/* HAS_PRCTL:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title.\n *\tNote that there are at least two prctl variants: Linux and Irix.\n *\tWhile they are somewhat similar, they are incompatible.\n */\n/* HAS_PRCTL_SET_NAME:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title and supports PR_SET_NAME.\n */\n/*#define HAS_PRCTL\t\t/ **/\n/*#define HAS_PRCTL_SET_NAME\t\t/ **/\n\n/* HAS_PROCSELFEXE:\n *\tThis symbol is defined if PROCSELFEXE_PATH is a symlink\n *\tto the absolute pathname of the executing program.\n */\n/* PROCSELFEXE_PATH:\n *\tIf HAS_PROCSELFEXE is defined this symbol is the filename\n *\tof the symbolic link pointing to the absolute pathname of\n *\tthe executing program.\n */\n/*#define HAS_PROCSELFEXE\t/ **/\n#if defined(HAS_PROCSELFEXE) && !defined(PROCSELFEXE_PATH)\n#define PROCSELFEXE_PATH\t\t/**/\n#endif\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n/*#define HAS_PTHREAD_ATTR_SETSCOPE\t\t/ **/\n\n/* HAS_PTRDIFF_T:\n *\tThis symbol will be defined if the C compiler supports ptrdiff_t.\n */\n#define\tHAS_PTRDIFF_T    \t\t/**/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n/*#define HAS_READV\t\t/ **/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_RECVMSG\t\t/ **/\n\n/* HAS_REMAINDER:\n *\tThis symbol, if defined, indicates that the remainder routine is\n *\tavailable to return the floating-point remainder.\n */\n/*#define HAS_REMAINDER\t\t/ **/\n\n/* HAS_REMQUO:\n *\tThis symbol, if defined, indicates that the remquo routine is\n *\tavailable to return the remainder and part of quotient.\n */\n/*#define HAS_REMQUO\t\t/ **/\n\n/* HAS_RINT:\n *\tThis symbol, if defined, indicates that the rint routine is\n *\tavailable to return the nearest integral value to x as double\n *\tusing the current rounding mode.\n */\n/*#define HAS_RINT\t\t/ **/\n\n/* HAS_ROUND:\n *\tThis symbol, if defined, indicates that the round routine is\n *\tavailable to round to nearest integer, away from zero.\n */\n/*#define HAS_ROUND\t\t/ **/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n/*#define\tHAS_SBRK_PROTO\t/ **/\n\n/* HAS_SCALBN:\n *\tThis symbol, if defined, indicates that the scalbn routine is\n *\tavailable to multiply floating-point number by integral power\n *\tof radix.\n */\n/*#define HAS_SCALBN\t\t/ **/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n/*#define HAS_SCALBNL\t\t/ **/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_SENDMSG\t\t/ **/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n/*#define HAS_SETITIMER\t\t/ **/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n/*#define HAS_SETPROCTITLE\t\t/ **/\n\n/* HAS_SIGNBIT:\n *\tThis symbol, if defined, indicates that the signbit routine is\n *\tavailable to check if the given number has the sign bit set.\n *\tThis should include correct testing of -0.0.  This will only be set\n *\tif the signbit() routine is safe to use with the NV type used internally\n *\tin perl.  Users should call Perl_signbit(), which will be #defined to\n *\tthe system's signbit() function or macro if this symbol is defined.\n */\n/*#define HAS_SIGNBIT\t\t/ **/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n/*#define HAS_SIGPROCMASK\t\t/ **/\n\n/* USE_SITECUSTOMIZE:\n *\tThis symbol, if defined, indicates that sitecustomize should\n *\tbe used.\n */\n#ifndef USE_SITECUSTOMIZE\n/*#define\tUSE_SITECUSTOMIZE\t\t/ **/\n#endif\n\n/* HAS_SNPRINTF:\n *\tThis symbol, if defined, indicates that the snprintf () library\n *\tfunction is available for use.\n */\n/* HAS_VSNPRINTF:\n *\tThis symbol, if defined, indicates that the vsnprintf () library\n *\tfunction is available for use.\n */\n/*#define HAS_SNPRINTF\t/ **/\n/*#define HAS_VSNPRINTF\t/ **/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n/*#define HAS_SOCKATMARK\t\t/ **/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n/*#define\tHAS_SOCKATMARK_PROTO\t/ **/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n/*#define HAS_SOCKS5_INIT\t\t/ **/\n\n/* SPRINTF_RETURNS_STRLEN:\n *\tThis variable defines whether sprintf returns the length of the string\n *\t(as per the ANSI spec). Some C libraries retain compatibility with\n *\tpre-ANSI C and return a pointer to the passed in buffer; for these\n *\tthis variable will be undef.\n */\n/*#define SPRINTF_RETURNS_STRLEN\t/ **/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n/*#define HAS_SQRTL\t\t/ **/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESGID_PROTO\t/ **/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESUID_PROTO\t/ **/\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n/*#define HAS_STRUCT_STATFS_F_FLAGS\t\t/ **/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_STATFS\t/ **/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATVFS\t\t/ **/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n/*#define HAS_STRFTIME\t\t/ **/\n\n/* HAS_STRLCAT:\n *\tThis symbol, if defined, indicates that the strlcat () routine is\n *\tavailable to do string concatenation.\n */\n/*#define HAS_STRLCAT\t\t/ **/\n\n/* HAS_STRLCPY:\n *\tThis symbol, if defined, indicates that the strlcpy () routine is\n *\tavailable to do string copying.\n */\n/*#define HAS_STRLCPY\t\t/ **/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD\t\t/ **/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n/*#define HAS_STRTOLL\t\t/ **/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n/*#define HAS_STRTOQ\t\t/ **/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n/*#define HAS_STRTOULL\t\t/ **/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n/*#define HAS_STRTOUQ\t\t/ **/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n/*#define\tHAS_SYSCALL_PROTO\t/ **/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n/*#define\tHAS_TELLDIR_PROTO\t/ **/\n\n/* HAS_TGAMMA:\n *\tThis symbol, if defined, indicates that the tgamma routine is\n *\tavailable to do the gamma function. See also HAS_LGAMMA.\n */\n/*#define HAS_TGAMMA\t\t/ **/\n\n/* HAS_CTIME64:\n *\tThis symbol, if defined, indicates that the ctime64 () routine is\n *\tavailable to do the 64bit variant of ctime ()\n */\n/* HAS_LOCALTIME64:\n *\tThis symbol, if defined, indicates that the localtime64 () routine is\n *\tavailable to do the 64bit variant of localtime ()\n */\n/* HAS_GMTIME64:\n *\tThis symbol, if defined, indicates that the gmtime64 () routine is\n *\tavailable to do the 64bit variant of gmtime ()\n */\n/* HAS_MKTIME64:\n *\tThis symbol, if defined, indicates that the mktime64 () routine is\n *\tavailable to do the 64bit variant of mktime ()\n */\n/* HAS_DIFFTIME64:\n *\tThis symbol, if defined, indicates that the difftime64 () routine is\n *\tavailable to do the 64bit variant of difftime ()\n */\n/* HAS_ASCTIME64:\n *\tThis symbol, if defined, indicates that the asctime64 () routine is\n *\tavailable to do the 64bit variant of asctime ()\n */\n/*#define\tHAS_CTIME64\t\t/ **/\n/*#define\tHAS_LOCALTIME64\t\t/ **/\n/*#define\tHAS_GMTIME64\t\t/ **/\n/*#define\tHAS_MKTIME64\t\t/ **/\n/*#define\tHAS_DIFFTIME64\t\t/ **/\n/*#define\tHAS_ASCTIME64\t\t/ **/\n\n/* HAS_TIMEGM:\n *\tThis symbol, if defined, indicates that the timegm routine is\n *\tavailable to do the opposite of gmtime ()\n */\n/*#define HAS_TIMEGM\t\t/ **/\n\n/* HAS_TRUNC:\n *\tThis symbol, if defined, indicates that the trunc routine is\n *\tavailable to round doubles towards zero.\n */\n/*#define HAS_TRUNC\t\t/ **/\n\n/* HAS_TRUNCL:\n *\tThis symbol, if defined, indicates that the truncl routine is\n *\tavailable. If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_TRUNCL\t\t/ **/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n#ifndef U32_ALIGNMENT_REQUIRED\n#define U32_ALIGNMENT_REQUIRED\t/**/\n#endif\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n/*#define HAS_UALARM\t\t/ **/\n\n/* HAS_UNORDERED:\n *\tThis symbol, if defined, indicates that the unordered routine is\n *\tavailable to check whether two doubles are unordered\n *\t(effectively: whether either of them is NaN)\n */\n/*#define HAS_UNORDERED\t\t/ **/\n\n/* HAS_UNSETENV:\n *\tThis symbol, if defined, indicates that the unsetenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_UNSETENV\t\t/ **/\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n/*#define\tHAS_USLEEP_PROTO\t/ **/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n/*#define HAS_USTAT\t\t/ **/\n\n/* HAS_WCSCMP:\n *\tThis symbol, if defined, indicates that the wcscmp routine is\n *\tavailable to compare two wide character strings.\n */\n/*#define HAS_WCSCMP\t/ **/\n\n/* HAS_WCSXFRM:\n *\tThis symbol, if defined, indicates that the wcsxfrm routine is\n *\tavailable to tranform a wide character string for wcscmp().\n */\n/*#define HAS_WCSXFRM\t/ **/\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n/*#define HAS_WRITEV\t\t/ **/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n/*#define USE_DYNAMIC_LOADING\t\t/ **/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) correctly\n *\tflushes all pending stdio output without side effects. In\n *\tparticular, on some platforms calling fflush(NULL) *still*\n *\tcorrupts STDIN if it is a pipe.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n/*#define\tFFLUSH_NULL \t\t/ **/\n/*#define\tFFLUSH_ALL \t\t/ **/\n\n/* I_ASSERT:\n *\tThis symbol, if defined, indicates that <assert.h> exists and\n *\tcould be included by the C program to get the assert() macro.\n */\n#define\tI_ASSERT\t\t/**/\n\n/* I_BFD:\n *\tThis symbol, if defined, indicates that <bfd.h> exists and\n *\tcan be included.\n */\n/*#define\tI_BFD\t\t/ **/\n\n/* I_CRYPT:\n *\tThis symbol, if defined, indicates that <crypt.h> exists and\n *\tshould be included.\n */\n/*#define\tI_CRYPT\t\t/ **/\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\tu_int32_t\t\t/**/\n#define DB_Prefix_t\tsize_t  \t/**/\n#define DB_VERSION_MAJOR_CFG\t0  \t/**/\n#define DB_VERSION_MINOR_CFG\t0  \t/**/\n#define DB_VERSION_PATCH_CFG\t0  \t/**/\n\n/* I_FENV:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <fenv.h> to get the floating point environment definitions.\n */\n/*#define I_FENV\t\t/ **/\n\n/* I_FP:\n *\tThis symbol, if defined, indicates that <fp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP\t\t/ **/\n\n/* I_FP_CLASS:\n *\tThis symbol, if defined, indicates that <fp_class.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP_CLASS\t\t/ **/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_IEEEFP\t\t/ **/\n\n/* I_INTTYPES:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <inttypes.h>.\n */\n/*#define   I_INTTYPES                / **/\n\n/* I_LANGINFO:\n *\tThis symbol, if defined, indicates that <langinfo.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LANGINFO\t\t/ **/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LIBUTIL\t\t/ **/\n\n/* I_MALLOCMALLOC:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <malloc/malloc.h>.\n */\n/*#define I_MALLOCMALLOC\t\t/ **/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n/*#define\tI_MNTENT\t\t/ **/\n\n/* I_NETINET_TCP:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <netinet/tcp.h>.\n */\n/*#define   I_NETINET_TCP                / **/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included. (see also HAS_POLL)\n */\n/*#define\tI_POLL\t\t/ **/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n/*#define\tI_PROT\t\t/ **/\n\n/* I_QUADMATH:\n *\tThis symbol, if defined, indicates that <quadmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_QUADMATH\t\t/ **/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SHADOW\t\t/ **/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SOCKS\t\t/ **/\n\n/* I_STDBOOL:\n *\tThis symbol, if defined, indicates that <stdbool.h> exists and\n *\tcan be included.\n */\n/*#define\tI_STDBOOL\t\t/ **/\n\n/* I_STDINT:\n *\tThis symbol, if defined, indicates that <stdint.h> exists and\n *\tshould be included.\n */\n/*#define I_STDINT\t\t/ **/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SUNMATH\t\t/ **/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSLOG\t\t/ **/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSMODE\t\t/ **/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_MOUNT\t\t/ **/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n/*#define\tI_SYS_STATFS\t\t/ **/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_STATVFS\t\t/ **/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUTSNAME\t\t/ **/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_VFS\t\t/ **/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n/*#define\tI_USTAT\t\t/ **/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n/* DOUBLEKIND:\n *\tDOUBLEKIND will be one of\n *\tDOUBLE_IS_IEEE_754_32_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_32_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\n *\tDOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\n *\tDOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_LE_BE\n *\tDOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_BE_LE\n *\tDOUBLE_IS_UNKNOWN_FORMAT\n */\n#define DOUBLEKIND 3\t\t/**/\n#define DOUBLE_IS_IEEE_754_32_BIT_LITTLE_ENDIAN\t1\n#define DOUBLE_IS_IEEE_754_32_BIT_BIG_ENDIAN\t2\n#define DOUBLE_IS_IEEE_754_64_BIT_LITTLE_ENDIAN\t3\n#define DOUBLE_IS_IEEE_754_64_BIT_BIG_ENDIAN\t4\n#define DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\t5\n#define DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\t6\n#define DOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_LE_BE\t7\n#define DOUBLE_IS_IEEE_754_64_BIT_MIXED_ENDIAN_BE_LE\t8\n#define DOUBLE_IS_UNKNOWN_FORMAT\t\t-1\n/*#define PERL_PRIfldbl\t\"llf\"\t/ **/\n/*#define PERL_PRIgldbl\t\"llg\"\t/ **/\n/*#define PERL_PRIeldbl\t\"lle\"\t/ **/\n/*#define PERL_SCNfldbl\t\"llf\"\t/ **/\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n#define\tNEED_VA_COPY\t\t/**/\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n *\tNote that some floating point formats have unused bytes.\n *\tThe most notable example is the x86* 80-bit extended precision\n *\twhich comes in byte sizes of 12 and 16 (for 32 and 64 bit\n *\tplatforms, respectively), but which only uses 10 bytes.\n *\tPerl compiled with -Duselongdouble on x86* is like this.\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n/* NV_OVERFLOWS_INTEGERS_AT:\n *\tThis symbol gives the largest integer value that NVs can hold. This\n *\tvalue + 1.0 cannot be stored accurately. It is expressed as constant\n *\tfloating point expression to reduce the chance of decimal/binary\n *\tconversion issues. If it can not be determined, the value 0 is given.\n */\n/* NV_ZERO_IS_ALLBITS_ZERO:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tstores 0.0 in memory as all bits zero.\n */\n#define\tIVTYPE\t\tlong\t\t/**/\n#define\tUVTYPE\t\tunsigned long\t\t/**/\n#define\tI8TYPE\t\tsigned char\t\t/**/\n#define\tU8TYPE\t\tunsigned char\t\t/**/\n#define\tI16TYPE\t\tshort\t/**/\n#define\tU16TYPE\t\tunsigned short\t/**/\n#define\tI32TYPE\t\tlong\t/**/\n#define\tU32TYPE\t\tunsigned long\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\tint64_t\t/**/\n#define\tU64TYPE\t\tuint64_t\t/**/\n#endif\n#define\tNVTYPE\t\tdouble\t\t/**/\n#define\tIVSIZE\t\t4\t\t/**/\n#define\tUVSIZE\t\t4\t\t/**/\n#define\tI8SIZE\t\t1\t\t/**/\n#define\tU8SIZE\t\t1\t\t/**/\n#define\tI16SIZE\t\t2\t/**/\n#define\tU16SIZE\t\t2\t/**/\n#define\tI32SIZE\t\t4\t/**/\n#define\tU32SIZE\t\t4\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t8\t/**/\n#define\tU64SIZE\t\t8\t/**/\n#endif\n#define\tNVSIZE\t\t8\t\t/**/\n#undef\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\t0\n#define\tNV_OVERFLOWS_INTEGERS_AT\t256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0\n#undef\tNV_ZERO_IS_ALLBITS_ZERO\n#if UVSIZE == 8\n#   ifdef BYTEORDER\n#       if BYTEORDER == 0x1234\n#           undef BYTEORDER\n#           define BYTEORDER 0x12345678\n#       else\n#           if BYTEORDER == 0x4321\n#               undef BYTEORDER\n#               define BYTEORDER 0x87654321\n#           endif\n#       endif\n#   endif\n#endif\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t\"ld\"\t\t/**/\n#define\tUVuf\t\t\"lu\"\t\t/**/\n#define\tUVof\t\t\"lo\"\t\t/**/\n#define\tUVxf\t\t\"lx\"\t\t/**/\n#define\tUVXf\t\t\"lX\"\t\t/**/\n#define\tNVef\t\t\"e\"\t\t/**/\n#define\tNVff\t\t\"f\"\t\t/**/\n#define\tNVgf\t\t\"g\"\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS \t32\t/**/\n\n/* ST_INO_SIZE:\n *\tThis variable contains the size of struct stat's st_ino in bytes.\n */\n/* ST_INO_SIGN:\n *\tThis symbol holds the signedness of struct stat's st_ino.\n *\t1 for unsigned, -1 for signed.\n */\n#define ST_INO_SIGN 1\t/* st_ino sign */\n#define ST_INO_SIZE 4\t/* st_ino size */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"#!perl\"\t\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n/*#define\tHAS_STDIO_STREAM_ARRAY\t/ **/\n#ifdef HAS_STDIO_STREAM_ARRAY\n#define STDIO_STREAM_ARRAY\t\n#endif\n\n/* GMTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* GMTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n#define GMTIME_MAX\t\t2147483647\t/**/\n#define GMTIME_MIN\t\t0\t/**/\n#define LOCALTIME_MAX\t2147483647\t/**/\n#define LOCALTIME_MIN\t0\t/**/\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n/*#define\tUSE_64_BIT_INT\t\t/ **/\n#endif\n#ifndef USE_64_BIT_ALL\n/*#define\tUSE_64_BIT_ALL\t\t/ **/\n#endif\n\n/* USE_CBACKTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for backtrace.\n */\n/*#define USE_CBACKTRACE\t\t/ **/\n\n/* USE_DTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for DTrace.\n */\n/*#define USE_DTRACE\t\t/ **/\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n/*#define\tUSE_FAST_STDIO\t\t/ **/\n#endif\n\n/* USE_KERN_PROC_PATHNAME:\n *\tThis symbol, if defined, indicates that we can use sysctl with\n *\tKERN_PROC_PATHNAME to get a full path for the executable, and hence\n * \tconvert $^X to an absolute path.\n */\n/*#define USE_KERN_PROC_PATHNAME\t/ **/\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n/*#define\tUSE_LARGE_FILES\t\t/ **/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n/*#define\tUSE_LONG_DOUBLE\t\t/ **/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n/*#define\tUSE_MORE_BITS\t\t/ **/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n/*#define\tMULTIPLICITY\t\t/ **/\n#endif\n\n/* USE_NSGETEXECUTABLEPATH:\n *\tThis symbol, if defined, indicates that we can use _NSGetExecutablePath\n *\tand realpath to get a full path for the executable, and hence convert\n *\t$^X to an absolute path.\n */\n/*#define USE_NSGETEXECUTABLEPATH\t/ **/\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n/*#define\tUSE_PERLIO\t\t/ **/\n#endif\n\n/* USE_QUADMATH:\n *\tThis symbol, if defined, indicates that the quadmath library should\n *\tbe used when available.\n */\n#ifndef USE_QUADMATH\n/*#define\tUSE_QUADMATH\t\t/ **/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n/*#define\tUSE_SOCKS\t\t/ **/\n#endif\n\n#endif\n\n/* Generated from:\n * 496e563499c7b715275d61ae663d25dd20d963c75f9d3ee7850dae949df14136 config_h.SH\n * 45fb46f69ab3d7fd8ea14fc29d490d044cbdd81e8a0111bc0b37aff4321d6182 uconfig.sh\n * ex: set ro: */\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cygwin/cygwin.c": "/*\n * Cygwin extras\n */\n\n#define PERLIO_NOT_STDIO 0\n#include \"EXTERN.h\"\n#include \"perl.h\"\n#undef USE_DYNAMIC_LOADING\n#include \"XSUB.h\"\n\n#include <unistd.h>\n#include <process.h>\n#include <sys/cygwin.h>\n#include <cygwin/version.h>\n#include <mntent.h>\n#include <alloca.h>\n#include <dlfcn.h>\n#if (CYGWIN_VERSION_API_MINOR >= 181)\n#include <wchar.h>\n#endif\n\n/*\n * pp_system() implemented via spawn()\n * - more efficient and useful when embedding Perl in non-Cygwin apps\n * - code mostly borrowed from djgpp.c\n */\nstatic int\ndo_spawnvp (const char *path, const char * const *argv)\n{\n    dTHX;\n    Sigsave_t ihand,qhand;\n    int childpid, result, status;\n\n    rsignal_save(SIGINT, (Sighandler_t) SIG_IGN, &ihand);\n    rsignal_save(SIGQUIT, (Sighandler_t) SIG_IGN, &qhand);\n    childpid = spawnvp(_P_NOWAIT,path,argv);\n    if (childpid < 0) {\n\tstatus = -1;\n\tif(ckWARN(WARN_EXEC))\n\t    Perl_warner(aTHX_ packWARN(WARN_EXEC),\"Can't spawn \\\"%s\\\": %s\",\n\t\t    path,Strerror (errno));\n    } else {\n\tdo {\n\t    result = wait4pid(childpid, &status, 0);\n\t} while (result == -1 && errno == EINTR);\n\tif(result < 0)\n\t    status = -1;\n    }\n    (void)rsignal_restore(SIGINT, &ihand);\n    (void)rsignal_restore(SIGQUIT, &qhand);\n    return status;\n}\n\nint\ndo_aspawn (SV *really, void **mark, void **sp)\n{\n    dTHX;\n    int  rc;\n    char const **a;\n    char *tmps,**argv;\n    STRLEN n_a;\n\n    if (sp<=mark)\n        return -1;\n    argv=(char**) alloca ((sp-mark+3)*sizeof (char*));\n    a=(char const **)argv;\n\n    while (++mark <= sp)\n        if (*mark)\n            *a++ = SvPVx((SV *)*mark, n_a);\n        else\n            *a++ = \"\";\n    *a = (char*)NULL;\n\n    if (argv[0][0] != '/' && argv[0][0] != '\\\\'\n        && !(argv[0][0] && argv[0][1] == ':'\n        && (argv[0][2] == '/' || argv[0][2] != '\\\\'))\n     ) /* will swawnvp use PATH? */\n         TAINT_ENV();\t/* testing IFS here is overkill, probably */\n\n    if (really && *(tmps = SvPV(really, n_a)))\n        rc=do_spawnvp (tmps,(const char * const *)argv);\n    else\n        rc=do_spawnvp (argv[0],(const char *const *)argv);\n\n    return rc;\n}\n\nint\ndo_spawn (char *cmd)\n{\n    dTHX;\n    char const **a;\n    char *s;\n    char const *metachars = \"$&*(){}[]'\\\";\\\\?>|<~`\\n\";\n    const char *command[4];\n\n    while (*cmd && isSPACE(*cmd))\n\tcmd++;\n\n    if (strnEQ (cmd,\"/bin/sh\",7) && isSPACE (cmd[7]))\n        cmd+=5;\n\n    /* save an extra exec if possible */\n    /* see if there are shell metacharacters in it */\n    if (strstr (cmd,\"...\"))\n\tgoto doshell;\n    if (*cmd=='.' && isSPACE (cmd[1]))\n\tgoto doshell;\n    if (strnEQ (cmd,\"exec\",4) && isSPACE (cmd[4]))\n\tgoto doshell;\n    for (s=cmd; *s && isALPHA (*s); s++) ;\t/* catch VAR=val gizmo */\n\tif (*s=='=')\n\t    goto doshell;\n\n    for (s=cmd; *s; s++)\n\tif (strchr (metachars,*s))\n\t{\n\t    if (*s=='\\n' && s[1]=='\\0')\n\t    {\n\t\t*s='\\0';\n\t\tbreak;\n\t    }\n\tdoshell:\n\t    command[0] = \"sh\";\n\t    command[1] = \"-c\";\n\t    command[2] = cmd;\n\t    command[3] = NULL;\n\n\t    return do_spawnvp(\"sh\",command);\n\t}\n\n    Newx (PL_Argv, (s-cmd)/2+2, const char*);\n    PL_Cmd=savepvn (cmd,s-cmd);\n    a=PL_Argv;\n    for (s=PL_Cmd; *s;) {\n\twhile (*s && isSPACE (*s)) s++;\n\tif (*s)\n\t    *(a++)=s;\n\twhile (*s && !isSPACE (*s)) s++;\n\tif (*s)\n\t    *s++='\\0';\n    }\n    *a = (char*)NULL;\n    if (!PL_Argv[0])\n        return -1;\n\n    return do_spawnvp(PL_Argv[0],(const char * const *)PL_Argv);\n}\n\n#if (CYGWIN_VERSION_API_MINOR >= 181)\nchar*\nwide_to_utf8(const wchar_t *wbuf)\n{\n    char *buf;\n    int wlen = 0;\n    char *oldlocale = setlocale(LC_CTYPE, NULL);\n    setlocale(LC_CTYPE, \"utf-8\");\n\n    /* uvchr_to_utf8(buf, chr) or Encoding::_bytes_to_utf8(sv, \"UCS-2BE\"); */\n    wlen = wcsrtombs(NULL, (const wchar_t **)&wbuf, wlen, NULL);\n    buf = (char *) safemalloc(wlen+1);\n    wcsrtombs(buf, (const wchar_t **)&wbuf, wlen, NULL);\n\n    if (oldlocale) setlocale(LC_CTYPE, oldlocale);\n    else setlocale(LC_CTYPE, \"C\");\n    return buf;\n}\n\nwchar_t*\nutf8_to_wide(const char *buf)\n{\n    wchar_t *wbuf;\n    mbstate_t mbs;\n    char *oldlocale = setlocale(LC_CTYPE, NULL);\n    int wlen = sizeof(wchar_t)*strlen(buf);\n\n    setlocale(LC_CTYPE, \"utf-8\");\n    wbuf = (wchar_t *) safemalloc(wlen);\n    /* utf8_to_uvchr_buf(pathname, pathname + wlen, wpath) or Encoding::_utf8_to_bytes(sv, \"UCS-2BE\"); */\n    wlen = mbsrtowcs(wbuf, (const char**)&buf, wlen, &mbs);\n\n    if (oldlocale) setlocale(LC_CTYPE, oldlocale);\n    else setlocale(LC_CTYPE, \"C\");\n    return wbuf;\n}\n#endif /* cygwin 1.7 */\n\n/* see also Cwd.pm */\nXS(Cygwin_cwd)\n{\n    dXSARGS;\n    char *cwd;\n\n    /* See http://rt.perl.org/rt3/Ticket/Display.html?id=38628 \n       There is Cwd->cwd() usage in the wild, and previous versions didn't die.\n     */\n    if(items > 1)\n\tPerl_croak(aTHX_ \"Usage: Cwd::cwd()\");\n    if((cwd = getcwd(NULL, -1))) {\n\tST(0) = sv_2mortal(newSVpv(cwd, 0));\n\tfree(cwd);\n\tSvTAINTED_on(ST(0));\n\tXSRETURN(1);\n    }\n    XSRETURN_UNDEF;\n}\n\nXS(XS_Cygwin_pid_to_winpid)\n{\n    dXSARGS;\n    dXSTARG;\n    pid_t pid, RETVAL;\n\n    if (items != 1)\n        Perl_croak(aTHX_ \"Usage: Cygwin::pid_to_winpid(pid)\");\n\n    pid = (pid_t)SvIV(ST(0));\n\n    if ((RETVAL = cygwin_internal(CW_CYGWIN_PID_TO_WINPID, pid)) > 0) {\n\tXSprePUSH; PUSHi((IV)RETVAL);\n        XSRETURN(1);\n    }\n    XSRETURN_UNDEF;\n}\n\nXS(XS_Cygwin_winpid_to_pid)\n{\n    dXSARGS;\n    dXSTARG;\n    pid_t pid, RETVAL;\n\n    if (items != 1)\n        Perl_croak(aTHX_ \"Usage: Cygwin::winpid_to_pid(pid)\");\n\n    pid = (pid_t)SvIV(ST(0));\n\n#if (CYGWIN_VERSION_API_MINOR >= 181)\n    RETVAL = cygwin_winpid_to_pid(pid);\n#else\n    RETVAL = cygwin32_winpid_to_pid(pid);\n#endif\n    if (RETVAL > 0) {\n        XSprePUSH; PUSHi((IV)RETVAL);\n        XSRETURN(1);\n    }\n    XSRETURN_UNDEF;\n}\n\nXS(XS_Cygwin_win_to_posix_path)\n\n{\n    dXSARGS;\n    int absolute_flag = 0;\n    STRLEN len;\n    int err = 0;\n    char *src_path;\n    char *posix_path;\n    int isutf8 = 0;\n\n    if (items < 1 || items > 2)\n        Perl_croak(aTHX_ \"Usage: Cygwin::win_to_posix_path(pathname, [absolute])\");\n\n    src_path = SvPV(ST(0), len);\n    if (items == 2)\n\tabsolute_flag = SvTRUE(ST(1));\n\n    if (!len)\n\tPerl_croak(aTHX_ \"can't convert empty path\");\n    isutf8 = SvUTF8(ST(0));\n\n#if (CYGWIN_VERSION_API_MINOR >= 181)\n    /* Check utf8 flag and use wide api then.\n       Size calculation: On overflow let cygwin_conv_path calculate the final size.\n     */\n    if (isutf8) {\n\tint what = absolute_flag ? CCP_WIN_W_TO_POSIX : CCP_WIN_W_TO_POSIX | CCP_RELATIVE;\n\tint wlen = sizeof(wchar_t)*(len + 260 + 1001);\n\twchar_t *wpath = (wchar_t *) safemalloc(sizeof(wchar_t)*len);\n\twchar_t *wbuf = (wchar_t *) safemalloc(wlen);\n\tif (!IN_BYTES) {\n\t    mbstate_t mbs;\n            char *oldlocale = setlocale(LC_CTYPE, NULL);\n            setlocale(LC_CTYPE, \"utf-8\");\n\t    /* utf8_to_uvchr_buf(src_path, src_path + wlen, wpath) or Encoding::_utf8_to_bytes(sv, \"UCS-2BE\"); */\n\t    wlen = mbsrtowcs(wpath, (const char**)&src_path, wlen, &mbs);\n\t    if (wlen > 0)\n\t\terr = cygwin_conv_path(what, wpath, wbuf, wlen);\n            if (oldlocale) setlocale(LC_CTYPE, oldlocale);\n            else setlocale(LC_CTYPE, \"C\");\n\t} else { /* use bytes; assume already ucs-2 encoded bytestream */\n\t    err = cygwin_conv_path(what, src_path, wbuf, wlen);\n\t}\n\tif (err == ENOSPC) { /* our space assumption was wrong, not enough space */\n\t    int newlen = cygwin_conv_path(what, wpath, wbuf, 0);\n\t    wbuf = (wchar_t *) realloc(&wbuf, newlen);\n\t    err = cygwin_conv_path(what, wpath, wbuf, newlen);\n\t    wlen = newlen;\n\t}\n\t/* utf16_to_utf8(*p, *d, bytlen, *newlen) */\n\tposix_path = (char *) safemalloc(wlen*3);\n\tPerl_utf16_to_utf8(aTHX_ (U8*)&wpath, (U8*)posix_path, (I32)wlen*2, (I32*)&len);\n\t/*\n\twlen = wcsrtombs(NULL, (const wchar_t **)&wbuf, wlen, NULL);\n\tposix_path = (char *) safemalloc(wlen+1);\n\twcsrtombs(posix_path, (const wchar_t **)&wbuf, wlen, NULL);\n\t*/\n    } else {\n\tint what = absolute_flag ? CCP_WIN_A_TO_POSIX : CCP_WIN_A_TO_POSIX | CCP_RELATIVE;\n\tposix_path = (char *) safemalloc (len + 260 + 1001);\n\terr = cygwin_conv_path(what, src_path, posix_path, len + 260 + 1001);\n\tif (err == ENOSPC) { /* our space assumption was wrong, not enough space */\n\t    int newlen = cygwin_conv_path(what, src_path, posix_path, 0);\n\t    posix_path = (char *) realloc(&posix_path, newlen);\n\t    err = cygwin_conv_path(what, src_path, posix_path, newlen);\n\t}\n    }\n#else\n    posix_path = (char *) safemalloc (len + 260 + 1001);\n    if (absolute_flag)\n\terr = cygwin_conv_to_full_posix_path(src_path, posix_path);\n    else\n\terr = cygwin_conv_to_posix_path(src_path, posix_path);\n#endif\n    if (!err) {\n\tEXTEND(SP, 1);\n\tST(0) = sv_2mortal(newSVpv(posix_path, 0));\n\tif (isutf8) { /* src was utf-8, so result should also */\n\t    /* TODO: convert ANSI (local windows encoding) to utf-8 on cygwin-1.5 */\n\t    SvUTF8_on(ST(0));\n\t}\n\tsafefree(posix_path);\n        XSRETURN(1);\n    } else {\n\tsafefree(posix_path);\n\tXSRETURN_UNDEF;\n    }\n}\n\nXS(XS_Cygwin_posix_to_win_path)\n{\n    dXSARGS;\n    int absolute_flag = 0;\n    STRLEN len;\n    int err = 0;\n    char *src_path, *win_path;\n    int isutf8 = 0;\n\n    if (items < 1 || items > 2)\n        Perl_croak(aTHX_ \"Usage: Cygwin::posix_to_win_path(pathname, [absolute])\");\n\n    src_path = SvPVx(ST(0), len);\n    if (items == 2)\n\tabsolute_flag = SvTRUE(ST(1));\n\n    if (!len)\n\tPerl_croak(aTHX_ \"can't convert empty path\");\n    isutf8 = SvUTF8(ST(0));\n#if (CYGWIN_VERSION_API_MINOR >= 181)\n    /* Check utf8 flag and use wide api then.\n       Size calculation: On overflow let cygwin_conv_path calculate the final size.\n     */\n    if (isutf8) {\n\tint what = absolute_flag ? CCP_POSIX_TO_WIN_W : CCP_POSIX_TO_WIN_W | CCP_RELATIVE;\n\tint wlen = sizeof(wchar_t)*(len + 260 + 1001);\n\twchar_t *wpath = (wchar_t *) safemalloc(sizeof(wchar_t)*len);\n\twchar_t *wbuf = (wchar_t *) safemalloc(wlen);\n\tchar *oldlocale = setlocale(LC_CTYPE, NULL);\n\tsetlocale(LC_CTYPE, \"utf-8\");\n\tif (!IN_BYTES) {\n\t    mbstate_t mbs;\n\t    /* utf8_to_uvchr_buf(src_path, src_path + wlen, wpath) or Encoding::_utf8_to_bytes(sv, \"UCS-2BE\"); */\n\t    wlen = mbsrtowcs(wpath, (const char**)&src_path, wlen, &mbs);\n\t    if (wlen > 0)\n\t\terr = cygwin_conv_path(what, wpath, wbuf, wlen);\n\t} else { /* use bytes; assume already ucs-2 encoded bytestream */\n\t    err = cygwin_conv_path(what, src_path, wbuf, wlen);\n\t}\n\tif (err == ENOSPC) { /* our space assumption was wrong, not enough space */\n\t    int newlen = cygwin_conv_path(what, wpath, wbuf, 0);\n\t    wbuf = (wchar_t *) realloc(&wbuf, newlen);\n\t    err = cygwin_conv_path(what, wpath, wbuf, newlen);\n\t    wlen = newlen;\n\t}\n\t/* also see utf8.c: Perl_utf16_to_utf8() or Encoding::_bytes_to_utf8(sv, \"UCS-2BE\"); */\n\twlen = wcsrtombs(NULL, (const wchar_t **)&wbuf, wlen, NULL);\n\twin_path = (char *) safemalloc(wlen+1);\n\twcsrtombs(win_path, (const wchar_t **)&wbuf, wlen, NULL);\n\tif (oldlocale) setlocale(LC_CTYPE, oldlocale);\n\telse setlocale(LC_CTYPE, \"C\");\n    } else {\n\tint what = absolute_flag ? CCP_POSIX_TO_WIN_A : CCP_POSIX_TO_WIN_A | CCP_RELATIVE;\n\twin_path = (char *) safemalloc(len + 260 + 1001);\n\terr = cygwin_conv_path(what, src_path, win_path, len + 260 + 1001);\n\tif (err == ENOSPC) { /* our space assumption was wrong, not enough space */\n\t    int newlen = cygwin_conv_path(what, src_path, win_path, 0);\n\t    win_path = (char *) realloc(&win_path, newlen);\n\t    err = cygwin_conv_path(what, src_path, win_path, newlen);\n\t}\n    }\n#else\n    if (isutf8)\n\tPerl_warn(aTHX_ \"can't convert utf8 path\");\n    win_path = (char *) safemalloc(len + 260 + 1001);\n    if (absolute_flag)\n\terr = cygwin_conv_to_full_win32_path(src_path, win_path);\n    else\n\terr = cygwin_conv_to_win32_path(src_path, win_path);\n#endif\n    if (!err) {\n\tEXTEND(SP, 1);\n\tST(0) = sv_2mortal(newSVpv(win_path, 0));\n\tif (isutf8) {\n\t    SvUTF8_on(ST(0));\n\t}\n\tsafefree(win_path);\n\tXSRETURN(1);\n    } else {\n\tsafefree(win_path);\n\tXSRETURN_UNDEF;\n    }\n}\n\nXS(XS_Cygwin_mount_table)\n{\n    dXSARGS;\n    struct mntent *mnt;\n\n    if (items != 0)\n        Perl_croak(aTHX_ \"Usage: Cygwin::mount_table\");\n    /* => array of [mnt_dir mnt_fsname mnt_type mnt_opts] */\n\n    setmntent (0, 0);\n    while ((mnt = getmntent (0))) {\n\tAV* av = newAV();\n\tav_push(av, newSVpvn(mnt->mnt_dir, strlen(mnt->mnt_dir)));\n\tav_push(av, newSVpvn(mnt->mnt_fsname, strlen(mnt->mnt_fsname)));\n\tav_push(av, newSVpvn(mnt->mnt_type, strlen(mnt->mnt_type)));\n\tav_push(av, newSVpvn(mnt->mnt_opts, strlen(mnt->mnt_opts)));\n\tXPUSHs(sv_2mortal(newRV_noinc((SV*)av)));\n    }\n    endmntent (0);\n    PUTBACK;\n}\n\nXS(XS_Cygwin_mount_flags)\n{\n    dXSARGS;\n    char *pathname;\n    char flags[PATH_MAX];\n    flags[0] = '\\0';\n\n    if (items != 1)\n        Perl_croak(aTHX_ \"Usage: Cygwin::mount_flags( mnt_dir | '/cygdrive' )\");\n\n    pathname = SvPV_nolen(ST(0));\n\n    if (!strcmp(pathname, \"/cygdrive\")) {\n\tchar user[PATH_MAX];\n\tchar system[PATH_MAX];\n\tchar user_flags[PATH_MAX];\n\tchar system_flags[PATH_MAX];\n\n\tcygwin_internal (CW_GET_CYGDRIVE_INFO, user, system,\n\t\t\t user_flags, system_flags);\n\n        if (strlen(user) > 0) {\n            sprintf(flags, \"%s,cygdrive,%s\", user_flags, user);\n        } else {\n            sprintf(flags, \"%s,cygdrive,%s\", system_flags, system);\n        }\n\n\tST(0) = sv_2mortal(newSVpv(flags, 0));\n\tXSRETURN(1);\n\n    } else {\n\tstruct mntent *mnt;\n\tint found = 0;\n\tsetmntent (0, 0);\n\twhile ((mnt = getmntent (0))) {\n\t    if (!strcmp(pathname, mnt->mnt_dir)) {\n\t\tstrcpy(flags, mnt->mnt_type);\n\t\tif (strlen(mnt->mnt_opts) > 0) {\n\t\t    strcat(flags, \",\");\n\t\t    strcat(flags, mnt->mnt_opts);\n\t\t}\n\t\tfound++;\n\t\tbreak;\n\t    }\n\t}\n\tendmntent (0);\n\n\t/* Check if arg is the current volume moint point if not default,\n\t * and then use CW_GET_CYGDRIVE_INFO also.\n\t */\n\tif (!found) {\n\t    char user[PATH_MAX];\n\t    char system[PATH_MAX];\n\t    char user_flags[PATH_MAX];\n\t    char system_flags[PATH_MAX];\n\n\t    cygwin_internal (CW_GET_CYGDRIVE_INFO, user, system,\n\t\t\t     user_flags, system_flags);\n\n\t    if (strlen(user) > 0) {\n\t\tif (strcmp(user,pathname)) {\n\t\t    sprintf(flags, \"%s,cygdrive,%s\", user_flags, user);\n\t\t    found++;\n\t\t}\n\t    } else {\n\t\tif (strcmp(user,pathname)) {\n\t\t    sprintf(flags, \"%s,cygdrive,%s\", system_flags, system);\n\t\t    found++;\n\t\t}\n\t    }\n\t}\n\tif (found) {\n\t    ST(0) = sv_2mortal(newSVpv(flags, 0));\n\t    XSRETURN(1);\n\t} else {\n\t    XSRETURN_UNDEF;\n\t}\n    }\n}\n\nXS(XS_Cygwin_is_binmount)\n{\n    dXSARGS;\n    char *pathname;\n\n    if (items != 1)\n        Perl_croak(aTHX_ \"Usage: Cygwin::is_binmount(pathname)\");\n\n    pathname = SvPV_nolen(ST(0));\n\n    ST(0) = boolSV(cygwin_internal(CW_GET_BINMODE, pathname));\n    XSRETURN(1);\n}\n\nXS(XS_Cygwin_sync_winenv){ cygwin_internal(CW_SYNC_WINENV); }\n\nvoid\ninit_os_extras(void)\n{\n    dTHX;\n    char const *file = __FILE__;\n    void *handle;\n\n    newXS(\"Cwd::cwd\", Cygwin_cwd, file);\n    newXSproto(\"Cygwin::winpid_to_pid\", XS_Cygwin_winpid_to_pid, file, \"$\");\n    newXSproto(\"Cygwin::pid_to_winpid\", XS_Cygwin_pid_to_winpid, file, \"$\");\n    newXSproto(\"Cygwin::win_to_posix_path\", XS_Cygwin_win_to_posix_path, file, \"$;$\");\n    newXSproto(\"Cygwin::posix_to_win_path\", XS_Cygwin_posix_to_win_path, file, \"$;$\");\n    newXSproto(\"Cygwin::mount_table\", XS_Cygwin_mount_table, file, \"\");\n    newXSproto(\"Cygwin::mount_flags\", XS_Cygwin_mount_flags, file, \"$\");\n    newXSproto(\"Cygwin::is_binmount\", XS_Cygwin_is_binmount, file, \"$\");\n    newXS(\"Cygwin::sync_winenv\", XS_Cygwin_sync_winenv, file);\n\n    /* Initialize Win32CORE if it has been statically linked. */\n    handle = dlopen(NULL, RTLD_LAZY);\n    if (handle) {\n        void (*pfn_init)(pTHX);\n        pfn_init = (void (*)(pTHX))dlsym(handle, \"init_Win32CORE\");\n        if (pfn_init)\n            pfn_init(aTHX);\n        dlclose(handle);\n    }\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/ext/DynaLoader/dl_dlopen.xs": "/* dl_dlopen.xs\n * \n * Platform:\tSunOS/Solaris, possibly others which use dlopen.\n * Author:\tPaul Marquess (Paul.Marquess@btinternet.com)\n * Created:\t10th July 1994\n *\n * Modified:\n * 15th July 1994     - Added code to explicitly save any error messages.\n * 3rd August 1994    - Upgraded to v3 spec.\n * 9th August 1994    - Changed to use IV\n * 10th August 1994   - Tim Bunce: Added RTLD_LAZY, switchable debugging,\n *                      basic FreeBSD support, removed ClearError\n * 29th February 2000 - Alan Burlison: Added functionality to close dlopen'd\n *                      files when the interpreter exits\n *\n */\n\n/* Porting notes:\n\n\n   Definition of Sunos dynamic Linking functions\n   =============================================\n   In order to make this implementation easier to understand here is a\n   quick definition of the SunOS Dynamic Linking functions which are\n   used here.\n\n   dlopen\n   ------\n     void *\n     dlopen(path, mode)\n     char * path; \n     int    mode;\n\n     This function takes the name of a dynamic object file and returns\n     a descriptor which can be used by dlsym later. It returns NULL on\n     error.\n\n     The mode parameter must be set to 1 for Solaris 1 and to\n     RTLD_LAZY (==2) on Solaris 2.\n\n\n   dlclose\n   -------\n     int\n     dlclose(handle)\n     void * handle;\n\n     This function takes the handle returned by a previous invocation of\n     dlopen and closes the associated dynamic object file.  It returns zero\n     on success, and non-zero on failure.\n\n\n   dlsym\n   ------\n     void *\n     dlsym(handle, symbol)\n     void * handle; \n     char * symbol;\n\n     Takes the handle returned from dlopen and the name of a symbol to\n     get the address of. If the symbol was found a pointer is\n     returned.  It returns NULL on error. If DL_PREPEND_UNDERSCORE is\n     defined an underscore will be added to the start of symbol. This\n     is required on some platforms (freebsd).\n\n   dlerror\n   ------\n     char * dlerror()\n\n     Returns a null-terminated string which describes the last error\n     that occurred with either dlopen or dlsym. After each call to\n     dlerror the error message will be reset to a null pointer. The\n     SaveError function is used to save the error as soon as it happens.\n\n\n   Return Types\n   ============\n   In this implementation the two functions, dl_load_file &\n   dl_find_symbol, return void *. This is because the underlying SunOS\n   dynamic linker calls also return void *.  This is not necessarily\n   the case for all architectures. For example, some implementation\n   will want to return a char * for dl_load_file.\n\n   If void * is not appropriate for your architecture, you will have to\n   change the void * to whatever you require. If you are not certain of\n   how Perl handles C data types, I suggest you start by consulting\t\n   Dean Roerich's Perl 5 API document. Also, have a look in the typemap \n   file (in the ext directory) for a fairly comprehensive list of types \n   that are already supported. If you are completely stuck, I suggest you\n   post a message to perl5-porters, comp.lang.perl.misc or if you are really \n   desperate to me.\n\n   Remember when you are making any changes that the return value from \n   dl_load_file is used as a parameter in the dl_find_symbol \n   function. Also the return value from find_symbol is used as a parameter \n   to install_xsub.\n\n\n   Dealing with Error Messages\n   ============================\n   In order to make the handling of dynamic linking errors as generic as\n   possible you should store any error messages associated with your\n   implementation with the StoreError function.\n\n   In the case of SunOS the function dlerror returns the error message \n   associated with the last dynamic link error. As the SunOS dynamic \n   linker functions dlopen & dlsym both return NULL on error every call \n   to a SunOS dynamic link routine is coded like this\n\n\tRETVAL = dlopen(filename, 1) ;\n\tif (RETVAL == NULL)\n\t    SaveError(\"%s\",dlerror()) ;\n\n   Note that SaveError() takes a printf format string. Use a \"%s\" as\n   the first parameter if the error may contain any % characters.\n\n*/\n\n#define PERL_NO_GET_CONTEXT\n#define PERL_EXT\n\n#include \"EXTERN.h\"\n#define PERL_IN_DL_DLOPEN_XS\n#include \"perl.h\"\n#include \"XSUB.h\"\n\n#ifdef I_DLFCN\n#include <dlfcn.h>\t/* the dynamic linker include file for Sunos/Solaris */\n#else\n#include <nlist.h>\n#include <link.h>\n#endif\n\n#ifndef RTLD_LAZY\n# define RTLD_LAZY 1\t/* Solaris 1 */\n#endif\n\n#ifndef HAS_DLERROR\n# ifdef __NetBSD__\n#  define dlerror() strerror(errno)\n# else\n#  define dlerror() \"Unknown error - dlerror() not implemented\"\n# endif\n#endif\n\n\n#include \"dlutils.c\"\t/* SaveError() etc\t*/\n\n\nstatic void\ndl_private_init(pTHX)\n{\n    (void)dl_generic_private_init(aTHX);\n}\n\nMODULE = DynaLoader\tPACKAGE = DynaLoader\n\nBOOT:\n    (void)dl_private_init(aTHX);\n\n\nvoid\ndl_load_file(filename, flags=0)\n    char *\tfilename\n    int\t\tflags\n  PREINIT:\n    int mode = RTLD_LAZY;\n    void *handle;\n  CODE:\n{\n#if defined(DLOPEN_WONT_DO_RELATIVE_PATHS)\n    char pathbuf[PATH_MAX + 2];\n    if (*filename != '/' && strchr(filename, '/')) {\n\tif (getcwd(pathbuf, PATH_MAX - strlen(filename))) {\n\t    strcat(pathbuf, \"/\");\n\t    strcat(pathbuf, filename);\n\t    filename = pathbuf;\n\t}\n    }\n#endif\n#ifdef RTLD_NOW\n    {\n\tdMY_CXT;\n\tif (dl_nonlazy)\n\t    mode = RTLD_NOW;\n    }\n#endif\n    if (flags & 0x01)\n#ifdef RTLD_GLOBAL\n\tmode |= RTLD_GLOBAL;\n#else\n\tPerl_warn(aTHX_ \"Can't make loaded symbols global on this platform while loading %s\",filename);\n#endif\n    DLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_load_file(%s,%x):\\n\", filename,flags));\n    handle = dlopen(filename, mode) ;\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \" libref=%lx\\n\", (unsigned long) handle));\n    ST(0) = sv_newmortal() ;\n    if (handle == NULL)\n\tSaveError(aTHX_ \"%s\",dlerror()) ;\n    else\n\tsv_setiv( ST(0), PTR2IV(handle));\n}\n\n\nint\ndl_unload_file(libref)\n    void *\tlibref\n  CODE:\n    DLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_unload_file(%lx):\\n\", PTR2ul(libref)));\n    RETVAL = (dlclose(libref) == 0 ? 1 : 0);\n    if (!RETVAL)\n        SaveError(aTHX_ \"%s\", dlerror()) ;\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \" retval = %d\\n\", RETVAL));\n  OUTPUT:\n    RETVAL\n\n\nvoid\ndl_find_symbol(libhandle, symbolname)\n    void *\tlibhandle\n    char *\tsymbolname\n    PREINIT:\n    void *sym;\n    CODE:\n#ifdef DLSYM_NEEDS_UNDERSCORE\n    symbolname = Perl_form_nocontext(\"_%s\", symbolname);\n#endif\n    DLDEBUG(2, PerlIO_printf(Perl_debug_log,\n\t\t\t     \"dl_find_symbol(handle=%lx, symbol=%s)\\n\",\n\t\t\t     (unsigned long) libhandle, symbolname));\n    sym = dlsym(libhandle, symbolname);\n    DLDEBUG(2, PerlIO_printf(Perl_debug_log,\n\t\t\t     \"  symbolref = %lx\\n\", (unsigned long) sym));\n    ST(0) = sv_newmortal() ;\n    if (sym == NULL)\n\tSaveError(aTHX_ \"%s\",dlerror()) ;\n    else\n\tsv_setiv( ST(0), PTR2IV(sym));\n\n\nvoid\ndl_undef_symbols()\n    CODE:\n\n\n\n# These functions should not need changing on any platform:\n\nvoid\ndl_install_xsub(perl_name, symref, filename=\"$Package\")\n    char *\t\tperl_name\n    void *\t\tsymref \n    const char *\tfilename\n    CODE:\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \"dl_install_xsub(name=%s, symref=%\"UVxf\")\\n\",\n\t\tperl_name, PTR2UV(symref)));\n    ST(0) = sv_2mortal(newRV((SV*)newXS_flags(perl_name,\n\t\t\t\t\t      DPTR2FPTR(XSUBADDR_t, symref),\n\t\t\t\t\t      filename, NULL,\n\t\t\t\t\t      XS_DYNAMIC_FILENAME)));\n\n\nSV *\ndl_error()\n    CODE:\n    dMY_CXT;\n    RETVAL = newSVsv(MY_CXT.x_dl_last_error);\n    OUTPUT:\n    RETVAL\n\n#if defined(USE_ITHREADS)\n\nvoid\nCLONE(...)\n    CODE:\n    MY_CXT_CLONE;\n\n    PERL_UNUSED_VAR(items);\n\n    /* MY_CXT_CLONE just does a memcpy on the whole structure, so to avoid\n     * using Perl variables that belong to another thread, we create our \n     * own for this thread.\n     */\n    MY_CXT.x_dl_last_error = newSVpvs(\"\");\n\n#endif\n\n# end.\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/ext/DynaLoader/dl_dyld.xs": "/* dl_dyld.xs\n *\n * Platform:\tDarwin (Mac OS)\n * Author:\tWilfredo Sanchez <wsanchez@apple.com>\n * Based on:\tdl_next.xs by Paul Marquess\n * Based on:\tdl_dlopen.xs by Anno Siegel\n * Created:\tAug 15th, 1994\n *\n */\n\n/*\n *  And Gandalf said: 'Many folk like to know beforehand what is to\n *  be set on the table; but those who have laboured to prepare the\n *  feast like to keep their secret; for wonder makes the words of\n *  praise louder.'\n *\n *     [p.970 of _The Lord of the Rings_, VI/v: \"The Steward and the King\"]\n */\n\n/* Porting notes:\n\ndl_dyld.xs is based on dl_next.xs by Anno Siegel.\n\ndl_next.xs is in turn a port from dl_dlopen.xs by Paul Marquess.  It\nshould not be used as a base for further ports though it may be used\nas an example for how dl_dlopen.xs can be ported to other platforms.\n\nThe method used here is just to supply the sun style dlopen etc.\nfunctions in terms of NeXT's/Apple's dyld.  The xs code proper is\nunchanged from Paul's original.\n\nThe port could use some streamlining.  For one, error handling could\nbe simplified.\n\nThis should be useable as a replacement for dl_next.xs, but it has not\nbeen tested on NeXT platforms.\n\n  Wilfredo Sanchez\n\n*/\n\n#define PERL_EXT\n#include \"EXTERN.h\"\n#include \"perl.h\"\n#include \"XSUB.h\"\n\n#include \"dlutils.c\"\t/* for SaveError() etc */\n\n#undef environ\n#undef bool\n#import <mach-o/dyld.h>\n\nstatic char *dlerror()\n{\n    dTHX;\n    dMY_CXT;\n    return dl_last_error;\n}\n\nstatic int dlclose(void *handle) /* stub only */\n{\n    return 0;\n}\n\nenum dyldErrorSource\n{\n    OFImage,\n};\n\nstatic void TranslateError\n    (const char *path, enum dyldErrorSource type, int number)\n{\n    dTHX;\n    dMY_CXT;\n    char *error;\n    unsigned int index;\n    static char *OFIErrorStrings[] =\n    {\n\t\"%s(%d): Object Image Load Failure\\n\",\n\t\"%s(%d): Object Image Load Success\\n\",\n\t\"%s(%d): Not a recognisable object file\\n\",\n\t\"%s(%d): No valid architecture\\n\",\n\t\"%s(%d): Object image has an invalid format\\n\",\n\t\"%s(%d): Invalid access (permissions?)\\n\",\n\t\"%s(%d): Unknown error code from NSCreateObjectFileImageFromFile\\n\",\n    };\n#define NUM_OFI_ERRORS (sizeof(OFIErrorStrings) / sizeof(OFIErrorStrings[0]))\n\n    switch (type)\n    {\n    case OFImage:\n\tindex = number;\n\tif (index > NUM_OFI_ERRORS - 1)\n\t    index = NUM_OFI_ERRORS - 1;\n\terror = Perl_form_nocontext(OFIErrorStrings[index], path, number);\n\tbreak;\n\n    default:\n\terror = Perl_form_nocontext(\"%s(%d): Totally unknown error type %d\\n\",\n\t\t     path, number, type);\n\tbreak;\n    }\n    sv_setpv(MY_CXT.x_dl_last_error, error);\n}\n\nstatic char *dlopen(char *path, int mode /* mode is ignored */)\n{\n    int dyld_result;\n    NSObjectFileImage ofile;\n    NSModule handle = NULL;\n\n    dyld_result = NSCreateObjectFileImageFromFile(path, &ofile);\n    if (dyld_result != NSObjectFileImageSuccess)\n\tTranslateError(path, OFImage, dyld_result);\n    else\n    {\n    \t// NSLinkModule will cause the run to abort on any link errors\n\t// not very friendly but the error recovery functionality is limited.\n\thandle = NSLinkModule(ofile, path, TRUE);\n\tNSDestroyObjectFileImage(ofile);\n    }\n\n    return handle;\n}\n\nstatic void *\ndlsym(void *handle, char *symbol)\n{\n    void *addr;\n\n    if (NSIsSymbolNameDefined(symbol))\n\taddr = NSAddressOfSymbol(NSLookupAndBindSymbol(symbol));\n    else\n    \taddr = NULL;\n\n    return addr;\n}\n\n\n\n/* ----- code from dl_dlopen.xs below here ----- */\n\n\nstatic void\ndl_private_init(pTHX)\n{\n    (void)dl_generic_private_init(aTHX);\n}\n\nMODULE = DynaLoader     PACKAGE = DynaLoader\n\nBOOT:\n    (void)dl_private_init(aTHX);\n\n\n\nvoid *\ndl_load_file(filename, flags=0)\n    char *\tfilename\n    int\t\tflags\n    PREINIT:\n    int mode = 1;\n    CODE:\n    DLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_load_file(%s,%x):\\n\", filename,flags));\n    if (flags & 0x01)\n\tPerl_warn(aTHX_ \"Can't make loaded symbols global on this platform while loading %s\",filename);\n    RETVAL = dlopen(filename, mode) ;\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \" libref=%x\\n\", RETVAL));\n    ST(0) = sv_newmortal() ;\n    if (RETVAL == NULL)\n\tSaveError(aTHX_ \"%s\",dlerror()) ;\n    else\n\tsv_setiv( ST(0), PTR2IV(RETVAL) );\n\n\nvoid *\ndl_find_symbol(libhandle, symbolname)\n    void *\t\tlibhandle\n    char *\t\tsymbolname\n    CODE:\n    symbolname = Perl_form_nocontext(\"_%s\", symbolname);\n    DLDEBUG(2, PerlIO_printf(Perl_debug_log,\n\t\t\t     \"dl_find_symbol(handle=%lx, symbol=%s)\\n\",\n\t\t\t     (unsigned long) libhandle, symbolname));\n    RETVAL = dlsym(libhandle, symbolname);\n    DLDEBUG(2, PerlIO_printf(Perl_debug_log,\n\t\t\t     \"  symbolref = %lx\\n\", (unsigned long) RETVAL));\n    ST(0) = sv_newmortal() ;\n    if (RETVAL == NULL)\n\tSaveError(aTHX_ \"%s\",dlerror()) ;\n    else\n\tsv_setiv( ST(0), PTR2IV(RETVAL) );\n\n\nvoid\ndl_undef_symbols()\n    PPCODE:\n\n\n\n# These functions should not need changing on any platform:\n\nvoid\ndl_install_xsub(perl_name, symref, filename=\"$Package\")\n    char *\tperl_name\n    void *\tsymref\n    const char *\tfilename\n    CODE:\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \"dl_install_xsub(name=%s, symref=%x)\\n\",\n\t    perl_name, symref));\n    ST(0) = sv_2mortal(newRV((SV*)newXS_flags(perl_name,\n\t\t\t\t\t      (void(*)(pTHX_ CV *))symref,\n\t\t\t\t\t      filename, NULL,\n\t\t\t\t\t      XS_DYNAMIC_FILENAME)));\n\n\nSV *\ndl_error()\n    CODE:\n    dMY_CXT;\n    RETVAL = newSVsv(MY_CXT.x_dl_last_error);\n    OUTPUT:\n    RETVAL\n\n#if defined(USE_ITHREADS)\n\nvoid\nCLONE(...)\n    CODE:\n    MY_CXT_CLONE;\n\n    PERL_UNUSED_VAR(items);\n\n    /* MY_CXT_CLONE just does a memcpy on the whole structure, so to avoid\n     * using Perl variables that belong to another thread, we create our \n     * own for this thread.\n     */\n    MY_CXT.x_dl_last_error = newSVpvs(\"\");\n\n#endif\n\n# end.\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/ext/DynaLoader/dl_dllload.xs": "/* dl_dllload.xs\n *\n * Platform:\tOS/390, possibly others that use dllload(),dllfree() (VM/ESA?).\n * Authors:\tJohn Goodyear && Peter Prymmer\n * Created:     28 October 2000\n * Modified:\n * 16 January 2001 - based loosely on dl_dlopen.xs.\n */\n \n/* Porting notes:\n\n   OS/390 Dynamic Loading functions: \n\n   dllload\n   -------\n     dllhandle * dllload(const char *dllName)\n\n     This function takes the name of a dynamic object file and returns\n     a descriptor which can be used by dlllqueryfn() and/or dllqueryvar() \n     later.  If dllName contains a slash, it is used to locate the dll.\n     If not then the LIBPATH environment variable is used to\n     search for the requested dll (at least within the HFS).\n     It returns NULL on error and sets errno.\n\n   dllfree\n   -------\n     int dllfree(dllhandle *handle);\n\n     dllfree() decrements the load count for the dll and frees\n     it if the count is 0.  It returns zero on success, and \n     non-zero on failure.\n\n   dllqueryfn && dllqueryvar\n   -------------------------\n     void (* dllqueryfn(dllhandle *handle, const char *function))();\n     void * dllqueryvar(dllhandle *handle, const char *symbol);\n\n     dllqueryfn() takes the handle returned from dllload() and the name \n     of a function to get the address of.  If the function was found \n     a pointer is returned, otherwise NULL is returned.\n\n     dllqueryvar() takes the handle returned from dllload() and the name \n     of a symbol to get the address of.  If the variable was found a \n     pointer is returned, otherwise NULL is returned.\n\n     The XS dl_find_symbol() first calls dllqueryfn().  If it fails\n     dlqueryvar() is then called.\n\n   strerror\n   --------\n     char * strerror(int errno)\n\n     Returns a null-terminated string which describes the last error\n     that occurred with other functions (not necessarily unique to\n     dll loading).\n\n   Return Types\n   ============\n   In this implementation the two functions, dl_load_file() &&\n   dl_find_symbol(), return (void *).  This is primarily because the \n   dlopen() && dlsym() style dynamic linker calls return (void *).\n   We suspect that casting to (void *) may be easier than teaching XS\n   typemaps about the (dllhandle *) type.\n\n   Dealing with Error Messages\n   ===========================\n   In order to make the handling of dynamic linking errors as generic as\n   possible you should store any error messages associated with your\n   implementation with the StoreError function.\n\n   In the case of OS/390 the function strerror(errno) returns the error \n   message associated with the last dynamic link error.  As the S/390 \n   dynamic linker functions dllload() && dllqueryvar() both return NULL \n   on error every call to an S/390 dynamic link routine is coded \n   like this:\n\n\tRETVAL = dllload(filename) ;\n\tif (RETVAL == NULL)\n\t    SaveError(\"%s\",strerror(errno)) ;\n\n   Note that SaveError() takes a printf format string. Use a \"%s\" as\n   the first parameter if the error may contain any % characters.\n\n   Other comments within the dl_dlopen.xs file may be helpful as well.\n*/\n\n#define PERL_EXT\n#include \"EXTERN.h\"\n#include \"perl.h\"\n#include \"XSUB.h\"\n\n#include <dll.h>\t/* the dynamic linker include file for S/390 */\n#include <errno.h>\t/* strerror() and friends */\n\n#include \"dlutils.c\"\t/* SaveError() etc */\n\nstatic void\ndl_private_init(pTHX)\n{\n    (void)dl_generic_private_init(aTHX);\n}\n\nMODULE = DynaLoader\tPACKAGE = DynaLoader\n\nBOOT:\n    (void)dl_private_init(aTHX);\n\n\nvoid\ndl_load_file(filename, flags=0)\n    char *\tfilename\n    int\t\tflags\n  PREINIT:\n    int mode = 0;\n    void *retv;\n  PPCODE:\n    DLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_load_file(%s,%x):\\n\", filename,flags));\n    /* add a (void *) dllload(filename) ; cast if needed */\n    retv = dllload(filename) ;\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \" libref=%lx\\n\", (unsigned long) retv));\n    ST(0) = sv_newmortal() ;\n    if (retv == NULL)\n\tSaveError(aTHX_ \"%s\",strerror(errno)) ;\n    else\n\tsv_setiv( ST(0), PTR2IV(retv));\n    XSRETURN(1);\n\n\nint\ndl_unload_file(libref)\n    void *\tlibref\n  CODE:\n    DLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_unload_file(%lx):\\n\", PTR2ul(libref)));\n    /* RETVAL = (dllfree((dllhandle *)libref) == 0 ? 1 : 0); */\n    RETVAL = (dllfree(libref) == 0 ? 1 : 0);\n    if (!RETVAL)\n        SaveError(aTHX_ \"%s\", strerror(errno)) ;\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \" retval = %d\\n\", RETVAL));\n  OUTPUT:\n    RETVAL\n\n\nvoid\ndl_find_symbol(libhandle, symbolname)\n    void *\tlibhandle\n    char *\tsymbolname\n    PREINIT:\n    void *retv;\n    PPCODE:\n    DLDEBUG(2, PerlIO_printf(Perl_debug_log,\n\t\t\t     \"dl_find_symbol(handle=%lx, symbol=%s)\\n\",\n\t\t\t     (unsigned long) libhandle, symbolname));\n    if((retv = (void*)dllqueryfn(libhandle, symbolname)) == NULL)\n    retv  = dllqueryvar(libhandle, symbolname);\n    DLDEBUG(2, PerlIO_printf(Perl_debug_log,\n\t\t\t     \"  symbolref = %lx\\n\", (unsigned long) retv));\n    ST(0) = sv_newmortal() ;\n    if (retv == NULL)\n\tSaveError(aTHX_ \"%s\",strerror(errno)) ;\n    else\n\tsv_setiv( ST(0), PTR2IV(retv));\n    XSRETURN(1);\n\n\nvoid\ndl_undef_symbols()\n    CODE:\n\n\n\n# These functions should not need changing on any platform:\n\nvoid\ndl_install_xsub(perl_name, symref, filename=\"$Package\")\n    char *\t\tperl_name\n    void *\t\tsymref \n    const char *\tfilename\n    PPCODE:\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \"dl_install_xsub(name=%s, symref=%lx)\\n\",\n\t\tperl_name, (unsigned long) symref));\n    ST(0) = sv_2mortal(newRV((SV*)newXS_flags(perl_name,\n\t\t\t\t\t      (void(*)(pTHX_ CV *))symref,\n\t\t\t\t\t      filename, NULL,\n\t\t\t\t\t      XS_DYNAMIC_FILENAME)));\n    XSRETURN(1);\n\n\nSV *\ndl_error()\n    CODE:\n    dMY_CXT;\n    RETVAL = newSVsv(MY_CXT.x_dl_last_error);\n    OUTPUT:\n    RETVAL\n\n#if defined(USE_ITHREADS)\n\nvoid\nCLONE(...)\n    CODE:\n    MY_CXT_CLONE;\n\n    PERL_UNUSED_VAR(items);\n\n    /* MY_CXT_CLONE just does a memcpy on the whole structure, so to avoid\n     * using Perl variables that belong to another thread, we create our \n     * own for this thread.\n     */\n    MY_CXT.x_dl_last_error = newSVpvs(\"\");\n\n#endif\n\n# end.\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/ext/DynaLoader/dl_aix.xs": "/* dl_aix.xs\n *\n * Written: 8/31/94 by Wayne Scott (wscott@ichips.intel.com)\n *\n *  All I did was take Jens-Uwe Mager's libdl emulation library for\n *  AIX and merged it with the dl_dlopen.xs file to create a dynamic library\n *  package that works for AIX.\n *\n *  I did change all malloc's, free's, strdup's, calloc's to use the perl\n *  equilvant.  I also removed some stuff we will not need.  Call fini()\n *  on startup...   It can probably be trimmed more.\n */\n\n#define PERLIO_NOT_STDIO 0\n#define PERL_EXT\n\n/*\n * On AIX 4.3 and above the emulation layer is not needed any more, and\n * indeed if perl uses its emulation and perl is linked into apache\n * which is supposed to use the native dlopen conflicts arise.\n * Jens-Uwe Mager jum@helios.de\n */\n#ifdef USE_NATIVE_DLOPEN\n\n#include \"EXTERN.h\"\n#include \"perl.h\"\n#include \"XSUB.h\"\n#include <dlfcn.h>\n\n#include \"dlutils.c\"\t/* SaveError() etc\t*/\n\n#else\n\n/*\n * @(#)dlfcn.c\t1.5 revision of 93/02/14  20:14:17\n * This is an unpublished work copyright (c) 1992 Helios Software GmbH\n * 3000 Hannover 1, Germany\n */\n#include \"EXTERN.h\"\n#include \"perl.h\"\n#include \"XSUB.h\"\n\n/* When building as a 64-bit binary on AIX, define this to get the\n * correct structure definitions.  Also determines the field-name\n * macros and gates some logic in readEntries().  -- Steven N. Hirsch\n * <hirschs@btv.ibm.com> */\n#ifdef USE_64_BIT_ALL\n#   define __XCOFF64__\n#   define __XCOFF32__\n#endif\n\n#include <stdio.h>\n#include <errno.h>\n#include <string.h>\n#include <stdlib.h>\n#include <sys/types.h>\n#include <sys/ldr.h>\n#include <a.out.h>\n#undef FREAD\n#undef FWRITE\n#include <ldfcn.h>\n\n#ifdef USE_64_BIT_ALL\n#   define AIX_SCNHDR SCNHDR_64\n#   define AIX_LDHDR LDHDR_64\n#   define AIX_LDSYM LDSYM_64\n#   define AIX_LDHDRSZ LDHDRSZ_64\n#else\n#   define AIX_SCNHDR SCNHDR\n#   define AIX_LDHDR LDHDR\n#   define AIX_LDSYM LDSYM\n#   define AIX_LDHDRSZ LDHDRSZ\n#endif\n\n/* When using Perl extensions written in C++ the longer versions\n * of load() and unload() from libC and libC_r need to be used,\n * otherwise statics in the extensions won't get initialized right.\n * -- Stephanie Beals <bealzy@us.ibm.com> */\n\n/* Older AIX C compilers cannot deal with C++ double-slash comments in\n   the ibmcxx and/or xlC includes.  Since we only need a single file,\n   be more fine-grained about what's included <hirschs@btv.ibm.com> */\n\n#ifdef USE_libC /* The define comes, when it comes, from hints/aix.pl. */\n#   define LOAD   loadAndInit\n#   define UNLOAD terminateAndUnload\n#   if defined(USE_vacpp_load_h)\n#       include \"/usr/vacpp/include/load.h\"\n#   elif defined(USE_ibmcxx_load_h)\n#       include \"/usr/ibmcxx/include/load.h\"\n#   elif defined(USE_xlC_load_h)\n#       include \"/usr/lpp/xlC/include/load.h\"\n#   elif defined(USE_load_h)\n#       include \"/usr/include/load.h\"\n#   endif\n#else\n#   define LOAD   load\n#   define UNLOAD unload\n#endif\n\n/*\n * AIX 4.3 does remove some useful definitions from ldfcn.h. Define\n * these here to compensate for that lossage.\n */\n#ifndef BEGINNING\n# define BEGINNING SEEK_SET\n#endif\n#ifndef FSEEK\n# define FSEEK(ldptr,o,p)\tfseek(IOPTR(ldptr),(p==BEGINNING)?(OFFSET(ldptr) +o):o,p)\n#endif\n#ifndef FREAD\n# define FREAD(p,s,n,ldptr)\tfread(p,s,n,IOPTR(ldptr))\n#endif\n\n#ifndef RTLD_LAZY\n# define RTLD_LAZY 0\n#endif\n#ifndef RTLD_GLOBAL\n# define RTLD_GLOBAL 0\n#endif\n\n/*\n * We simulate dlopen() et al. through a call to load. Because AIX has\n * no call to find an exported symbol we read the loader section of the\n * loaded module and build a list of exported symbols and their virtual\n * address.\n */\n\ntypedef struct {\n\tchar\t\t*name;\t\t/* the symbols's name */\n\tvoid\t\t*addr;\t\t/* its relocated virtual address */\n} Export, *ExportPtr;\n\n/*\n * The void * handle returned from dlopen is actually a ModulePtr.\n */\ntypedef struct Module {\n\tstruct Module\t*next;\n\tchar\t\t*name;\t\t/* module name for refcounting */\n\tint\t\trefCnt;\t\t/* the number of references */\n\tvoid\t\t*entry;\t\t/* entry point from load */\n\tint\t\tnExports;\t/* the number of exports found */\n\tExportPtr\texports;\t/* the array of exports */\n} Module, *ModulePtr;\n\ntypedef struct {\n    /*\n     * We keep a list of all loaded modules to be able to reference count\n     * duplicate dlopen's.\n     */\n    ModulePtr\tx_modList;\n\n    /*\n     * The last error from one of the dl* routines is kept in static\n     * variables here. Each error is returned only once to the caller.\n     */\n    char\tx_errbuf[BUFSIZ];\n    int\t\tx_errvalid;\n    void *\tx_mainModule;\n} my_cxtx_t;\t\t/* this *must* be named my_cxtx_t */\n\n#define DL_CXT_EXTRA\t/* ask for dl_cxtx to be defined in dlutils.c */\n#include \"dlutils.c\"\t/* SaveError() etc\t*/\n\n#define dl_modList\t(dl_cxtx.x_modList)\n#define dl_errbuf\t(dl_cxtx.x_errbuf)\n#define dl_errvalid\t(dl_cxtx.x_errvalid)\n#define dl_mainModule\t(dl_cxtx.x_mainModule)\n\nstatic void caterr(char *);\nstatic int readExports(ModulePtr);\nstatic void *findMain(void);\n\n/* these statics are ok because they're constants */\nstatic char *strerror_failed   = \"(strerror failed)\";\nstatic char *strerror_r_failed = \"(strerror_r failed)\";\n\nchar *strerrorcat(char *str, int err) {\n    int strsiz = strlen(str);\n    int msgsiz;\n    char *msg;\n\n    dTHX;\n\n    if ((msg = strerror(err)) == 0)\n      msg = strerror_failed;\n    msgsiz = strlen(msg);\t\t/* Note msg = buf and free() above. */\n    if (strsiz + msgsiz < BUFSIZ)\t/* Do not move this after #endif. */\n      strcat(str, msg);\n\n    return str;\n}\n\nchar *strerrorcpy(char *str, int err) {\n    int msgsiz;\n    char *msg;\n\n    dTHX;\n\n    if ((msg = strerror(err)) == 0)\n      msg = strerror_failed;\n    msgsiz = strlen(msg);\t/* Note msg = buf and free() above. */\n    if (msgsiz < BUFSIZ)\t/* Do not move this after #endif. */\n      strcpy(str, msg);\n\n    return str;\n}\n  \n/* ARGSUSED */\nvoid *dlopen(char *path, int mode)\n{\n\tdTHX;\n\tdMY_CXT;\n\tModulePtr mp;\n\n\t/*\n\t * Upon the first call register a terminate handler that will\n\t * close all libraries.\n\t */\n\tif (dl_mainModule == NULL) {\n\t\tif ((dl_mainModule = findMain()) == NULL)\n\t\t\treturn NULL;\n\t}\n\t/*\n\t * Scan the list of modules if have the module already loaded.\n\t */\n\tfor (mp = dl_modList; mp; mp = mp->next)\n\t\tif (strcmp(mp->name, path) == 0) {\n\t\t\tmp->refCnt++;\n\t\t\treturn mp;\n\t\t}\n\tNewxz(mp,1,Module);\n\tif (mp == NULL) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"Newz: \");\n\t\tstrerrorcat(dl_errbuf, errno);\n\t\treturn NULL;\n\t}\n\t\n\tif ((mp->name = savepv(path)) == NULL) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"savepv: \");\n\t\tstrerrorcat(dl_errbuf, errno);\n\t\tsafefree(mp);\n\t\treturn NULL;\n\t}\n\n\t/*\n\t * load should be declared load(const char *...). Thus we\n\t * cast the path to a normal char *. Ugly.\n\t */\n\tif ((mp->entry = (void *)LOAD((char *)path,\n#ifdef L_LIBPATH_EXEC\n\t\t\t\t      L_LIBPATH_EXEC |\n#endif\n\t\t\t\t      L_NOAUTODEFER,\n\t\t\t\t      NULL)) == NULL) {\n\t        int saverrno = errno;\n\t\t\n\t\tsafefree(mp->name);\n\t\tsafefree(mp);\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"dlopen: \");\n\t\tstrcat(dl_errbuf, path);\n\t\tstrcat(dl_errbuf, \": \");\n\t\t/*\n\t\t * If AIX says the file is not executable, the error\n\t\t * can be further described by querying the loader about\n\t\t * the last error.\n\t\t */\n\t\tif (saverrno == ENOEXEC) {\n\t\t\tchar *moreinfo[BUFSIZ/sizeof(char *)];\n\t\t\tif (loadquery(L_GETMESSAGES, moreinfo, sizeof(moreinfo)) == -1)\n\t\t\t\tstrerrorcpy(dl_errbuf, saverrno);\n\t\t\telse {\n\t\t\t\tchar **p;\n\t\t\t\tfor (p = moreinfo; *p; p++)\n\t\t\t\t\tcaterr(*p);\n\t\t\t}\n\t\t} else\n\t\t\tstrerrorcat(dl_errbuf, saverrno);\n\t\treturn NULL;\n\t}\n\tmp->refCnt = 1;\n\tmp->next = dl_modList;\n\tdl_modList = mp;\n\t/*\n\t * Assume anonymous exports come from the module this dlopen\n\t * is linked into, that holds true as long as dlopen and all\n\t * of the perl core are in the same shared object. Also bind\n\t * against the main part, in the case a perl is not the main\n\t * part, e.g mod_perl as DSO in Apache so perl modules can\n\t * also reference Apache symbols.\n\t */\n\tif (loadbind(0, (void *)dlopen, mp->entry) == -1 ||\n\t    loadbind(0, dl_mainModule, mp->entry)) {\n\t        int saverrno = errno;\n\n\t\tdlclose(mp);\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"loadbind: \");\n\t\tstrerrorcat(dl_errbuf, saverrno);\n\t\treturn NULL;\n\t}\n\tif (readExports(mp) == -1) {\n\t\tdlclose(mp);\n\t\treturn NULL;\n\t}\n\treturn mp;\n}\n\n/*\n * Attempt to decipher an AIX loader error message and append it\n * to our static error message buffer.\n */\nstatic void caterr(char *s)\n{\n\tdTHX;\n\tdMY_CXT;\n\tchar *p = s;\n\n\twhile (*p >= '0' && *p <= '9')\n\t\tp++;\n\tswitch(atoi(s)) {\n\tcase L_ERROR_TOOMANY:\n\t\tstrcat(dl_errbuf, \"too many errors\");\n\t\tbreak;\n\tcase L_ERROR_NOLIB:\n\t\tstrcat(dl_errbuf, \"can't load library\");\n\t\tstrcat(dl_errbuf, p);\n\t\tbreak;\n\tcase L_ERROR_UNDEF:\n\t\tstrcat(dl_errbuf, \"can't find symbol\");\n\t\tstrcat(dl_errbuf, p);\n\t\tbreak;\n\tcase L_ERROR_RLDBAD:\n\t\tstrcat(dl_errbuf, \"bad RLD\");\n\t\tstrcat(dl_errbuf, p);\n\t\tbreak;\n\tcase L_ERROR_FORMAT:\n\t\tstrcat(dl_errbuf, \"bad exec format in\");\n\t\tstrcat(dl_errbuf, p);\n\t\tbreak;\n\tcase L_ERROR_ERRNO:\n\t\tstrerrorcat(dl_errbuf, atoi(++p));\n\t\tbreak;\n\tdefault:\n\t\tstrcat(dl_errbuf, s);\n\t\tbreak;\n\t}\n}\n\nvoid *dlsym(void *handle, const char *symbol)\n{\n\tdTHX;\n\tdMY_CXT;\n\tModulePtr mp = (ModulePtr)handle;\n\tExportPtr ep;\n\tint i;\n\n\t/*\n\t * Could speed up search, but I assume that one assigns\n\t * the result to function pointers anyways.\n\t */\n\tfor (ep = mp->exports, i = mp->nExports; i; i--, ep++)\n\t\tif (strcmp(ep->name, symbol) == 0)\n\t\t\treturn ep->addr;\n\tdl_errvalid++;\n\tstrcpy(dl_errbuf, \"dlsym: undefined symbol \");\n\tstrcat(dl_errbuf, symbol);\n\treturn NULL;\n}\n\nchar *dlerror(void)\n{\n\tdTHX;\n\tdMY_CXT;\n\tif (dl_errvalid) {\n\t\tdl_errvalid = 0;\n\t\treturn dl_errbuf;\n\t}\n\treturn NULL;\n}\n\nint dlclose(void *handle)\n{\n\tdTHX;\n\tdMY_CXT;\n\tModulePtr mp = (ModulePtr)handle;\n\tint result;\n\tModulePtr mp1;\n\n\tif (--mp->refCnt > 0)\n\t\treturn 0;\n\tresult = UNLOAD(mp->entry);\n\tif (result == -1) {\n\t\tdl_errvalid++;\n\t\tstrerrorcpy(dl_errbuf, errno);\n\t}\n\tif (mp->exports) {\n\t\tExportPtr ep;\n\t\tint i;\n\t\tfor (ep = mp->exports, i = mp->nExports; i; i--, ep++)\n\t\t\tif (ep->name)\n\t\t\t\tsafefree(ep->name);\n\t\tsafefree(mp->exports);\n\t}\n\tif (mp == dl_modList)\n\t\tdl_modList = mp->next;\n\telse {\n\t\tfor (mp1 = dl_modList; mp1; mp1 = mp1->next)\n\t\t\tif (mp1->next == mp) {\n\t\t\t\tmp1->next = mp->next;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\tsafefree(mp->name);\n\tsafefree(mp);\n\treturn result;\n}\n\n/* Added by Wayne Scott \n * This is needed because the ldopen system call calls\n * calloc to allocated a block of date.  The ldclose call calls free.\n * Without this we get this system calloc and perl's free, resulting\n * in a \"Bad free\" message.  This way we always use perl's malloc.\n */\nvoid *calloc(size_t ne, size_t sz) \n{\n  void *out;\n\n  out = (void *) safemalloc(ne*sz);\n  memzero(out, ne*sz);\n  return(out);\n}\n \n/*\n * Build the export table from the XCOFF .loader section.\n */\nstatic int readExports(ModulePtr mp)\n{\n\tdTHX;\n\tdMY_CXT;\n\tLDFILE *ldp = NULL;\n\tAIX_SCNHDR sh;\n\tAIX_LDHDR *lhp;\n\tchar *ldbuf;\n\tAIX_LDSYM *ls;\n\tint i;\n\tExportPtr ep;\n\n\tif ((ldp = ldopen(mp->name, ldp)) == NULL) {\n\t\tstruct ld_info *lp;\n\t\tchar *buf;\n\t\tint size = 4*1024;\n\t\tif (errno != ENOENT) {\n\t\t\tdl_errvalid++;\n\t\t\tstrcpy(dl_errbuf, \"readExports: \");\n\t\t\tstrerrorcat(dl_errbuf, errno);\n\t\t\treturn -1;\n\t\t}\n\t\t/*\n\t\t * The module might be loaded due to the LIBPATH\n\t\t * environment variable. Search for the loaded\n\t\t * module using L_GETINFO.\n\t\t */\n\t\tif ((buf = safemalloc(size)) == NULL) {\n\t\t\tdl_errvalid++;\n\t\t\tstrcpy(dl_errbuf, \"readExports: \");\n\t\t\tstrerrorcat(dl_errbuf, errno);\n\t\t\treturn -1;\n\t\t}\n\t\twhile ((i = loadquery(L_GETINFO, buf, size)) == -1 && errno == ENOMEM) {\n\t\t\tsafefree(buf);\n\t\t\tsize += 4*1024;\n\t\t\tif ((buf = safemalloc(size)) == NULL) {\n\t\t\t\tdl_errvalid++;\n\t\t\t\tstrcpy(dl_errbuf, \"readExports: \");\n\t\t\t\tstrerrorcat(dl_errbuf, errno);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t\tif (i == -1) {\n\t\t\tdl_errvalid++;\n\t\t\tstrcpy(dl_errbuf, \"readExports: \");\n\t\t\tstrerrorcat(dl_errbuf, errno);\n\t\t\tsafefree(buf);\n\t\t\treturn -1;\n\t\t}\n\t\t/*\n\t\t * Traverse the list of loaded modules. The entry point\n\t\t * returned by LOAD() does actually point to the data\n\t\t * segment origin.\n\t\t */\n\t\tlp = (struct ld_info *)buf;\n\t\twhile (lp) {\n\t\t\tif (lp->ldinfo_dataorg == mp->entry) {\n\t\t\t\tldp = ldopen(lp->ldinfo_filename, ldp);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lp->ldinfo_next == 0)\n\t\t\t\tlp = NULL;\n\t\t\telse\n\t\t\t\tlp = (struct ld_info *)((char *)lp + lp->ldinfo_next);\n\t\t}\n\t\tsafefree(buf);\n\t\tif (!ldp) {\n\t\t\tdl_errvalid++;\n\t\t\tstrcpy(dl_errbuf, \"readExports: \");\n\t\t\tstrerrorcat(dl_errbuf, errno);\n\t\t\treturn -1;\n\t\t}\n\t}\n#ifdef USE_64_BIT_ALL\n\tif (TYPE(ldp) != U803XTOCMAGIC) {\n#else\n\tif (TYPE(ldp) != U802TOCMAGIC) {\n#endif\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"readExports: bad magic\");\n\t\twhile(ldclose(ldp) == FAILURE)\n\t\t\t;\n\t\treturn -1;\n\t}\n\tif (ldnshread(ldp, _LOADER, &sh) != SUCCESS) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"readExports: cannot read loader section header\");\n\t\twhile(ldclose(ldp) == FAILURE)\n\t\t\t;\n\t\treturn -1;\n\t}\n\t/*\n\t * We read the complete loader section in one chunk, this makes\n\t * finding long symbol names residing in the string table easier.\n\t */\n\tif ((ldbuf = (char *)safemalloc(sh.s_size)) == NULL) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"readExports: \");\n\t\tstrerrorcat(dl_errbuf, errno);\n\t\twhile(ldclose(ldp) == FAILURE)\n\t\t\t;\n\t\treturn -1;\n\t}\n\tif (FSEEK(ldp, sh.s_scnptr, BEGINNING) != OKFSEEK) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"readExports: cannot seek to loader section\");\n\t\tsafefree(ldbuf);\n\t\twhile(ldclose(ldp) == FAILURE)\n\t\t\t;\n\t\treturn -1;\n\t}\n/* This first case is a hack, since it assumes that the 3rd parameter to\n   FREAD is 1. See the redefinition of FREAD above to see how this works. */\n\tif (FREAD(ldbuf, sh.s_size, 1, ldp) != 1) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"readExports: cannot read loader section\");\n\t\tsafefree(ldbuf);\n\t\twhile(ldclose(ldp) == FAILURE)\n\t\t\t;\n\t\treturn -1;\n\t}\n\tlhp = (AIX_LDHDR *)ldbuf;\n\tls = (AIX_LDSYM *)(ldbuf+AIX_LDHDRSZ);\n\t/*\n\t * Count the number of exports to include in our export table.\n\t */\n\tfor (i = lhp->l_nsyms; i; i--, ls++) {\n\t\tif (!LDR_EXPORT(*ls))\n\t\t\tcontinue;\n\t\tmp->nExports++;\n\t}\n\tNewxz(mp->exports, mp->nExports, Export);\n\tif (mp->exports == NULL) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"readExports: \");\n\t\tstrerrorcat(dl_errbuf, errno);\n\t\tsafefree(ldbuf);\n\t\twhile(ldclose(ldp) == FAILURE)\n\t\t\t;\n\t\treturn -1;\n\t}\n\t/*\n\t * Fill in the export table. All entries are relative to\n\t * the entry point we got from load.\n\t */\n\tep = mp->exports;\n\tls = (AIX_LDSYM *)(ldbuf+AIX_LDHDRSZ);\n\tfor (i = lhp->l_nsyms; i; i--, ls++) {\n\t\tchar *symname;\n\t\tif (!LDR_EXPORT(*ls))\n\t\t\tcontinue;\n#ifndef USE_64_BIT_ALL\n\t\tif (ls->l_zeroes == 0)\n#endif\n\t\t\tsymname = ls->l_offset+lhp->l_stoff+ldbuf;\n#ifndef USE_64_BIT_ALL\n\t\telse\n\t\t\tsymname = ls->l_name;\n#endif\n\t\tep->name = savepv(symname);\n\t\tep->addr = (void *)((unsigned long)mp->entry + ls->l_value);\n\t\tep++;\n\t}\n\tsafefree(ldbuf);\n\twhile(ldclose(ldp) == FAILURE)\n\t\t;\n\treturn 0;\n}\n\n/*\n * Find the main modules entry point. This is used as export pointer\n * for loadbind() to be able to resolve references to the main part.\n */\nstatic void * findMain(void)\n{\n\tdTHX;\n\tdMY_CXT;\n\tstruct ld_info *lp;\n\tchar *buf;\n\tint size = 4*1024;\n\tint i;\n\tvoid *ret;\n\n\tif ((buf = safemalloc(size)) == NULL) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"findMain: \");\n\t\tstrerrorcat(dl_errbuf, errno);\n\t\treturn NULL;\n\t}\n\twhile ((i = loadquery(L_GETINFO, buf, size)) == -1 && errno == ENOMEM) {\n\t\tsafefree(buf);\n\t\tsize += 4*1024;\n\t\tif ((buf = safemalloc(size)) == NULL) {\n\t\t\tdl_errvalid++;\n\t\t\tstrcpy(dl_errbuf, \"findMain: \");\n\t\t\tstrerrorcat(dl_errbuf, errno);\n\t\t\treturn NULL;\n\t\t}\n\t}\n\tif (i == -1) {\n\t\tdl_errvalid++;\n\t\tstrcpy(dl_errbuf, \"findMain: \");\n\t\tstrerrorcat(dl_errbuf, errno);\n\t\tsafefree(buf);\n\t\treturn NULL;\n\t}\n\t/*\n\t * The first entry is the main module. The entry point\n\t * returned by load() does actually point to the data\n\t * segment origin.\n\t */\n\tlp = (struct ld_info *)buf;\n\tret = lp->ldinfo_dataorg;\n\tsafefree(buf);\n\treturn ret;\n}\n#endif /* USE_NATIVE_DLOPEN */\n\n/* dl_dlopen.xs\n * \n * Platform:\tSunOS/Solaris, possibly others which use dlopen.\n * Author:\tPaul Marquess (Paul.Marquess@btinternet.com)\n * Created:\t10th July 1994\n *\n * Modified:\n * 15th July 1994   - Added code to explicitly save any error messages.\n * 3rd August 1994  - Upgraded to v3 spec.\n * 9th August 1994  - Changed to use IV\n * 10th August 1994 - Tim Bunce: Added RTLD_LAZY, switchable debugging,\n *                    basic FreeBSD support, removed ClearError\n *\n */\n\n/* Porting notes:\n\n\tsee dl_dlopen.xs\n\n*/\n\nstatic void\ndl_private_init(pTHX)\n{\n    (void)dl_generic_private_init(aTHX);\n}\n \nMODULE = DynaLoader     PACKAGE = DynaLoader\n\nBOOT:\n    (void)dl_private_init(aTHX);\n\n\nvoid\ndl_load_file(filename, flags=0)\n\tchar *\tfilename\n\tint\tflags\n        PREINIT:\n        void *retv;\n\tPPCODE:\n\tDLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_load_file(%s,%x):\\n\", filename,flags));\n\tif (flags & 0x01)\n\t    Perl_warn(aTHX_ \"Can't make loaded symbols global on this platform while loading %s\",filename);\n\tretv = dlopen(filename, RTLD_GLOBAL|RTLD_LAZY) ;\n\tDLDEBUG(2,PerlIO_printf(Perl_debug_log, \" libref=%x\\n\", retv));\n\tST(0) = sv_newmortal() ;\n\tif (retv == NULL)\n\t    SaveError(aTHX_ \"%s\",dlerror()) ;\n\telse\n\t    sv_setiv( ST(0), PTR2IV(retv) );\n        XSRETURN(1);\n\nint\ndl_unload_file(libref)\n    void *\tlibref\n  CODE:\n    DLDEBUG(1,PerlIO_printf(Perl_debug_log, \"dl_unload_file(%lx):\\n\", libref));\n    RETVAL = (dlclose(libref) == 0 ? 1 : 0);\n    if (!RETVAL)\n        SaveError(aTHX_ \"%s\", dlerror()) ;\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \" retval = %d\\n\", RETVAL));\n  OUTPUT:\n    RETVAL\n\nvoid\ndl_find_symbol(libhandle, symbolname)\n\tvoid *\t\tlibhandle\n\tchar *\t\tsymbolname\n\tPREINIT:\n        void *retv;\n        CODE:\n\tDLDEBUG(2,PerlIO_printf(Perl_debug_log, \"dl_find_symbol(handle=%x, symbol=%s)\\n\",\n\t\tlibhandle, symbolname));\n\tretv = dlsym(libhandle, symbolname);\n\tDLDEBUG(2,PerlIO_printf(Perl_debug_log, \"  symbolref = %x\\n\", retv));\n\tST(0) = sv_newmortal() ;\n\tif (retv == NULL)\n\t    SaveError(aTHX_ \"%s\",dlerror()) ;\n\telse\n\t    sv_setiv( ST(0), PTR2IV(retv));\n\n\nvoid\ndl_undef_symbols()\n\tCODE:\n\n\n\n# These functions should not need changing on any platform:\n\nvoid\ndl_install_xsub(perl_name, symref, filename=\"$Package\")\n    char *\tperl_name\n    void *\tsymref \n    const char *\tfilename\n    CODE:\n    DLDEBUG(2,PerlIO_printf(Perl_debug_log, \"dl_install_xsub(name=%s, symref=%x)\\n\",\n\tperl_name, symref));\n    ST(0) = sv_2mortal(newRV((SV*)newXS_flags(perl_name,\n\t\t\t\t\t      (void(*)(pTHX_ CV *))symref,\n\t\t\t\t\t      filename, NULL,\n\t\t\t\t\t      XS_DYNAMIC_FILENAME)));\n\n\nSV *\ndl_error()\n    CODE:\n    dMY_CXT;\n    RETVAL = newSVsv(MY_CXT.x_dl_last_error);\n    OUTPUT:\n    RETVAL\n\n#if defined(USE_ITHREADS)\n\nvoid\nCLONE(...)\n    CODE:\n    MY_CXT_CLONE;\n\n    PERL_UNUSED_VAR(items);\n\n    /* MY_CXT_CLONE just does a memcpy on the whole structure, so to avoid\n     * using Perl variables that belong to another thread, we create our \n     * own for this thread.\n     */\n    MY_CXT.x_dl_last_error = newSVpvs(\"\");\n\n#endif\n\n# end.\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/ext/DynaLoader/DynaLoader_pm.PL": "use Config;\n\nsub to_string {\n    my ($value) = @_;\n    $value =~ s/\\\\/\\\\\\\\/g;\n    $value =~ s/'/\\\\'/g;\n    return \"'$value'\";\n}\n\n#\n# subroutine expand_os_specific expands $^O-specific preprocessing information\n# so that it will not be re-calculated at runtime in Dynaloader.pm\n#\n# Syntax of preprocessor should be kept extremely simple:\n#  - directives are in double angle brackets <<...>>\n#  - <<=string>> will be just evaluated\n#  - for $^O-specific there are two forms:\n#   <<$^O-eq-osname>>\n#   <<$^O-ne-osname>>\n#  this directive should be closed with respectively\n#   <</$^O-eq-osname>>\n#   <</$^O-ne-osname>>\n#  construct <<|$^O-ne-osname>> means #else\n#  nested <<$^O...>>-constructs are allowed but nested values must be for \n#   different OS-names!\n#   \n#  -- added by VKON, 03-10-2004 to separate $^O-specific between OSes\n#     (so that Win32 never checks for $^O eq 'VMS' for example)\n#\n# The $^O tests test both for $^O and for $Config{osname}.\n# The latter is better for some for cross-compilation setups.\n#\nsub expand_os_specific {\n    my $s = shift;\n    for ($s) {\n\ts/<<=(.*?)>>/$1/gee;\n\ts/<<\\$\\^O-(eq|ne)-(\\w+)>>(.*?)<<\\/\\$\\^O-\\1-\\2>>/\n\t  my ($op, $os, $expr) = ($1,$2,$3);\n\t  if ($op ne 'eq' and $op ne 'ne') {die \"wrong eq-ne arg in $&\"};\n\t  if ($expr =~ m[^(.*?)<<\\|\\$\\^O-$op-$os>>(.*?)$]s) {\n\t      # #if;#else;#endif\n\t      my ($if,$el) = ($1,$2);\n\t      if (($op eq 'eq' and ($^O eq $os || $Config{osname} eq $os)) || ($op eq 'ne' and ($^O ne $os || $Config{osname} ne $os))) {\n\t\t  $if\n\t      }\n\t      else {\n\t\t  $el\n\t      }\n\t  }\n\t  else {\n\t      # #if;#endif\n\t      if (($op eq 'eq' and ($^O eq $os || $Config{osname} eq $os)) || ($op eq 'ne' and ($^O ne $os || $Config{osname} ne $os))) {\n\t\t  $expr\n\t      }\n\t      else {\n\t      \t  \"\"\n\t      }\n\t  }\n\t/ges;\n\tif (/<<(=|\\$\\^O-)/) {die \"bad <<\\$^O-eq/ne-osname>> expression.\".\n\t    \" Unclosed brackets?\";\n\t}\n    }\n    $s;\n}\n\nunlink \"DynaLoader.pm\" if -f \"DynaLoader.pm\";\nopen OUT, \">DynaLoader.pm\" or die $!;\nprint OUT <<'EOT';\n\n# Generated from DynaLoader_pm.PL\n\npackage DynaLoader;\n\n#   And Gandalf said: 'Many folk like to know beforehand what is to\n#   be set on the table; but those who have laboured to prepare the\n#   feast like to keep their secret; for wonder makes the words of\n#   praise louder.'\n\n#   (Quote from Tolkien suggested by Anno Siegel.)\n#\n# See pod text at end of file for documentation.\n# See also ext/DynaLoader/README in source tree for other information.\n#\n# Tim.Bunce@ig.co.uk, August 1994\n\nBEGIN {\n    $VERSION = '1.32';\n}\n\nuse Config;\n\n# enable debug/trace messages from DynaLoader perl code\n$dl_debug = $ENV{PERL_DL_DEBUG} || 0 unless defined $dl_debug;\n\n#\n# Flags to alter dl_load_file behaviour.  Assigned bits:\n#   0x01  make symbols available for linking later dl_load_file's.\n#         (only known to work on Solaris 2 using dlopen(RTLD_GLOBAL))\n#         (ignored under VMS; effect is built-in to image linking)\n#         (ignored under Android; the linker always uses RTLD_LOCAL)\n#\n# This is called as a class method $module->dl_load_flags.  The\n# definition here will be inherited and result on \"default\" loading\n# behaviour unless a sub-class of DynaLoader defines its own version.\n#\n\nsub dl_load_flags { 0x00 }\n\nEOT\n\nif ($ENV{PERL_BUILD_EXPAND_CONFIG_VARS}) {\n    print OUT \"(\\$dl_dlext, \\$dl_so, \\$dlsrc) = (\",\n              to_string($Config{'dlext'}), \",\",\n              to_string($Config{'so'}), \",\",\n              to_string($Config{'dlsrc'}), \")\\n;\" ;\n}\nelse {\n    print OUT <<'EOT';\n($dl_dlext, $dl_so, $dlsrc) = @Config::Config{qw(dlext so dlsrc)};\nEOT\n}\n\nprint OUT expand_os_specific(<<'EOT');\n\n<<$^O-eq-VMS>>\n# Some systems need special handling to expand file specifications\n# (VMS support by Charles Bailey <bailey@HMIVAX.HUMGEN.UPENN.EDU>)\n# See dl_expandspec() for more details. Should be harmless but\n# inefficient to define on systems that don't need it.\n$Is_VMS    = $^O eq 'VMS';\n<</$^O-eq-VMS>>\n$do_expand = <<$^O-eq-VMS>>1<<|$^O-eq-VMS>>0<</$^O-eq-VMS>>;\n\n@dl_require_symbols = ();       # names of symbols we need\n@dl_resolve_using   = ();       # names of files to link with\n@dl_library_path    = ();       # path to look for files\n\n#XSLoader.pm may have added elements before we were required\n#@dl_shared_objects  = ();       # shared objects for symbols we have \n#@dl_librefs         = ();       # things we have loaded\n#@dl_modules         = ();       # Modules we have loaded\n\n# This is a fix to support DLD's unfortunate desire to relink -lc\n@dl_resolve_using = dl_findfile('-lc') if $dlsrc eq \"dl_dld.xs\";\n\nEOT\n\nmy $cfg_dl_library_path = <<'EOT';\npush(@dl_library_path, split(' ', $Config::Config{libpth}));\nEOT\n\nsub dquoted_comma_list {\n    join(\", \", map {'\"'.quotemeta($_).'\"'} @_);\n}\n\nif ($ENV{PERL_BUILD_EXPAND_CONFIG_VARS}) {\n    eval $cfg_dl_library_path;\n    if (!$ENV{PERL_BUILD_EXPAND_ENV_VARS}) {\n        my $dl_library_path = dquoted_comma_list(@dl_library_path);\n        print OUT <<EOT;\n# The below \\@dl_library_path has been expanded (%Config) in Perl build time.\n\n\\@dl_library_path = ($dl_library_path);\n\nEOT\n    }\n}\nelse {\n    print OUT <<EOT;\n# Initialise \\@dl_library_path with the 'standard' library path\n# for this platform as determined by Configure.\n\n$cfg_dl_library_path\n\nEOT\n}\n\nmy $ldlibpthname;\nmy $ldlibpthname_defined;\nmy $pthsep;\n\nif ($ENV{PERL_BUILD_EXPAND_CONFIG_VARS}) {\n    $ldlibpthname         = to_string($Config::Config{ldlibpthname});\n    $ldlibpthname_defined = to_string(defined $Config::Config{ldlibpthname} ? 1 : 0);\n    $pthsep               = to_string($Config::Config{path_sep});\n}\nelse {\n    $ldlibpthname         = q($Config::Config{ldlibpthname});\n    $ldlibpthname_defined = q(defined $Config::Config{ldlibpthname});\n    $pthsep               = q($Config::Config{path_sep});\n}\nprint OUT <<EOT;\nmy \\$ldlibpthname         = $ldlibpthname;\nmy \\$ldlibpthname_defined = $ldlibpthname_defined;\nmy \\$pthsep               = $pthsep;\n\nEOT\n\nmy $env_dl_library_path = <<'EOT';\nif ($ldlibpthname_defined &&\n    exists $ENV{$ldlibpthname}) {\n    push(@dl_library_path, split(/$pthsep/, $ENV{$ldlibpthname}));\n}\n\n# E.g. HP-UX supports both its native SHLIB_PATH *and* LD_LIBRARY_PATH.\n\nif ($ldlibpthname_defined &&\n    $ldlibpthname ne 'LD_LIBRARY_PATH' &&\n    exists $ENV{LD_LIBRARY_PATH}) {\n    push(@dl_library_path, split(/$pthsep/, $ENV{LD_LIBRARY_PATH}));\n}\nEOT\n\nif ($ENV{PERL_BUILD_EXPAND_CONFIG_VARS} && $ENV{PERL_BUILD_EXPAND_ENV_VARS}) {\n    eval $env_dl_library_path;\n}\nelse {\n    print OUT <<EOT;\n# Add to \\@dl_library_path any extra directories we can gather from environment\n# during runtime.\n\n$env_dl_library_path\n\nEOT\n}\n\nif ($ENV{PERL_BUILD_EXPAND_CONFIG_VARS} && $ENV{PERL_BUILD_EXPAND_ENV_VARS}) {\n    my $dl_library_path = dquoted_comma_list(@dl_library_path);\n    print OUT <<EOT;\n# The below \\@dl_library_path has been expanded (%Config, %ENV)\n# in Perl build time.\n\n\\@dl_library_path = ($dl_library_path);\n\nEOT\n}\n\nif ( $Config::Config{d_libname_unique} ) {\n    printf OUT <<'EOT', length($Config::Config{dlext}) + 1;\nsub mod2fname {\n    my $parts = shift;\n    my $so_len = %d;\n    my $name_max = 255; # No easy way to get this here\n    \n    my $libname = \"PL_\" .  join(\"__\", @$parts);\n    \n    return $libname if (length($libname)+$so_len) <= $name_max;\n    \n    # It's too darned big, so we need to go strip. We use the same\n    # algorithm as xsubpp does. First, strip out doubled __\n    $libname =~ s/__/_/g;\n    return $libname if (length($libname)+$so_len) <= $name_max;\n    \n    # Strip duplicate letters\n    1 while $libname =~ s/(.)\\1/\\U$1/i;\n    return $libname if (length($libname)+$so_len) <= $name_max;\n    \n    # Still too long. Truncate.\n    $libname = substr($libname, 0, $name_max - $so_len);\n    return $libname;\n}\nEOT\n}\n\n# following long string contains $^O-specific stuff, which is factored out\nprint OUT expand_os_specific(<<'EOT');\n# No prizes for guessing why we don't say 'bootstrap DynaLoader;' here.\n# NOTE: All dl_*.xs (including dl_none.xs) define a dl_error() XSUB\nboot_DynaLoader('DynaLoader') if defined(&boot_DynaLoader) &&\n                                !defined(&dl_error);\n\nif ($dl_debug) {\n    print STDERR \"DynaLoader.pm loaded (@INC, @dl_library_path)\\n\";\n    print STDERR \"DynaLoader not linked into this perl\\n\"\n\t    unless defined(&boot_DynaLoader);\n}\n\n1; # End of main code\n\n\nsub croak   { require Carp; Carp::croak(@_)   }\n\nsub bootstrap_inherit {\n    my $module = $_[0];\n    local *isa = *{\"$module\\::ISA\"};\n    local @isa = (@isa, 'DynaLoader');\n    # Cannot goto due to delocalization.  Will report errors on a wrong line?\n    bootstrap(@_);\n}\n\nsub bootstrap {\n    # use local vars to enable $module.bs script to edit values\n    local(@args) = @_;\n    local($module) = $args[0];\n    local(@dirs, $file);\n\n    unless ($module) {\n\trequire Carp;\n\tCarp::confess(\"Usage: DynaLoader::bootstrap(module)\");\n    }\n\n    # A common error on platforms which don't support dynamic loading.\n    # Since it's fatal and potentially confusing we give a detailed message.\n    croak(\"Can't load module $module, dynamic loading not available in this perl.\\n\".\n\t\"  (You may need to build a new perl executable which either supports\\n\".\n\t\"  dynamic loading or has the $module module statically linked into it.)\\n\")\n\tunless defined(&dl_load_file);\n\n\n    <<$^O-eq-os2>>\n    # Can dynaload, but cannot dynaload Perl modules...\n    die 'Dynaloaded Perl modules are not available in this build of Perl' if $OS2::is_static;\n\n    <</$^O-eq-os2>>\n    my @modparts = split(/::/,$module);\n    my $modfname = $modparts[-1];\n\n    # Some systems have restrictions on files names for DLL's etc.\n    # mod2fname returns appropriate file base name (typically truncated)\n    # It may also edit @modparts if required.\n    $modfname = &mod2fname(\\@modparts) if defined &mod2fname;\n\n    <<$^O-eq-NetWare>>\n    # Truncate the module name to 8.3 format for NetWare\n\tif ((length($modfname) > 8)) {\n\t\t$modfname = substr($modfname, 0, 8);\n\t}\n    <</$^O-eq-NetWare>>\n\n    my $modpname = join('/',@modparts);\n\n    print STDERR \"DynaLoader::bootstrap for $module \",\n\t\t       \"(auto/$modpname/$modfname.$dl_dlext)\\n\"\n\tif $dl_debug;\n\n    foreach (@INC) {\n\t<<$^O-eq-VMS>>chop($_ = VMS::Filespec::unixpath($_));<</$^O-eq-VMS>>\n\t    my $dir = \"$_/auto/$modpname\";\n\t\n\tnext unless -d $dir; # skip over uninteresting directories\n\t\n\t# check for common cases to avoid autoload of dl_findfile\n        my $try = \"$dir/$modfname.$dl_dlext\";\n\tlast if $file = ($do_expand) ? dl_expandspec($try) : ((-f $try) && $try);\n\t\n\t# no luck here, save dir for possible later dl_findfile search\n\tpush @dirs, $dir;\n    }\n    # last resort, let dl_findfile have a go in all known locations\n    $file = dl_findfile(map(\"-L$_\",@dirs,@INC), $modfname) unless $file;\n\n    croak(\"Can't locate loadable object for module $module in \\@INC (\\@INC contains: @INC)\")\n\tunless $file;\t# wording similar to error from 'require'\n\n    <<$^O-eq-VMS>>$file = uc($file) if $Config::Config{d_vms_case_sensitive_symbols};<</$^O-eq-VMS>>\n    my $bootname = \"boot_$module\";\n    $bootname =~ s/\\W/_/g;\n    @dl_require_symbols = ($bootname);\n\n    # Execute optional '.bootstrap' perl script for this module.\n    # The .bs file can be used to configure @dl_resolve_using etc to\n    # match the needs of the individual module on this architecture.\n    my $bs = $file;\n    $bs =~ s/(\\.\\w+)?(;\\d*)?$/\\.bs/; # look for .bs 'beside' the library\n    if (-s $bs) { # only read file if it's not empty\n        print STDERR \"BS: $bs ($^O, $dlsrc)\\n\" if $dl_debug;\n        eval { do $bs; };\n        warn \"$bs: $@\\n\" if $@;\n    }\n\n    my $boot_symbol_ref;\n\n    <<$^O-eq-darwin>>\n    if ($boot_symbol_ref = dl_find_symbol(0, $bootname)) {\n        goto boot; #extension library has already been loaded, e.g. darwin\n    }\n    <</$^O-eq-darwin>>\n\n    # Many dynamic extension loading problems will appear to come from\n    # this section of code: XYZ failed at line 123 of DynaLoader.pm.\n    # Often these errors are actually occurring in the initialisation\n    # C code of the extension XS file. Perl reports the error as being\n    # in this perl code simply because this was the last perl code\n    # it executed.\n\n    my $flags = $module->dl_load_flags;\n    <<$^O-eq-android>>\n    # See the note above regarding the linker.\n    $flags = 0x00;\n    <</$^O-eq-android>>\n    my $libref = dl_load_file($file, $flags) or\n\tcroak(\"Can't load '$file' for module $module: \".dl_error());\n\n    push(@dl_librefs,$libref);  # record loaded object\n\n    my @unresolved = dl_undef_symbols();\n    if (@unresolved) {\n\trequire Carp;\n\tCarp::carp(\"Undefined symbols present after loading $file: @unresolved\\n\");\n    }\n\n    $boot_symbol_ref = dl_find_symbol($libref, $bootname) or\n         croak(\"Can't find '$bootname' symbol in $file\\n\");\n\n    push(@dl_modules, $module); # record loaded module\n\n  boot:\n    my $xs = dl_install_xsub(\"${module}::bootstrap\", $boot_symbol_ref, $file);\n\n    # See comment block above\n\n\tpush(@dl_shared_objects, $file); # record files loaded\n\n    &$xs(@args);\n}\n\nsub dl_findfile {\n    # Read ext/DynaLoader/DynaLoader.doc for detailed information.\n    # This function does not automatically consider the architecture\n    # or the perl library auto directories.\n    my (@args) = @_;\n    my (@dirs,  $dir);   # which directories to search\n    my (@found);         # full paths to real files we have found\n    #my $dl_ext= <<=to_string($Config::Config{'dlext'})>>; # $Config::Config{'dlext'} suffix for perl extensions\n    #my $dl_so = <<=to_string($Config::Config{'so'})>>; # $Config::Config{'so'} suffix for shared libraries\n\n    print STDERR \"dl_findfile(@args)\\n\" if $dl_debug;\n\n    # accumulate directories but process files as they appear\n    arg: foreach(@args) {\n        #  Special fast case: full filepath requires no search\n\t<<$^O-eq-VMS>>\n        if (m%[:>/\\]]% && -f $_) {\n\t    push(@found,dl_expandspec(VMS::Filespec::vmsify($_)));\n\t    last arg unless wantarray;\n\t    next;\n        }\n\t<</$^O-eq-VMS>>\n\t<<$^O-ne-VMS>>\n        if (m:/: && -f $_) {\n\t    push(@found,$_);\n\t    last arg unless wantarray;\n\t    next;\n\t}\n\t<</$^O-ne-VMS>>\n\n        # Deal with directories first:\n        #  Using a -L prefix is the preferred option (faster and more robust)\n        if (m:^-L:) { s/^-L//; push(@dirs, $_); next; }\n\n        #  Otherwise we try to try to spot directories by a heuristic\n        #  (this is a more complicated issue than it first appears)\n        if (m:/: && -d $_) {   push(@dirs, $_); next; }\n\n\t<<$^O-eq-VMS>>\n        # VMS: we may be using native VMS directory syntax instead of\n        # Unix emulation, so check this as well\n        if (/[:>\\]]/ && -d $_) {   push(@dirs, $_); next; }\n\t<</$^O-eq-VMS>>\n\n        #  Only files should get this far...\n        my(@names, $name);    # what filenames to look for\n        if (m:-l: ) {          # convert -lname to appropriate library name\n            s/-l//;\n            push(@names,\"lib$_.$dl_so\");\n            push(@names,\"lib$_.a\");\n        } else {                # Umm, a bare name. Try various alternatives:\n            # these should be ordered with the most likely first\n            push(@names,\"$_.$dl_dlext\")    unless m/\\.$dl_dlext$/o;\n            push(@names,\"$_.$dl_so\")     unless m/\\.$dl_so$/o;\n\t    <<$^O-eq-cygwin>>\n            push(@names,\"cyg$_.$dl_so\")  unless m:/:;\n\t    <</$^O-eq-cygwin>>\n            push(@names,\"lib$_.$dl_so\")  unless m:/:;\n            push(@names,\"$_.a\")          if !m/\\.a$/ and $dlsrc eq \"dl_dld.xs\";\n            push(@names, $_);\n        }\n\tmy $dirsep = '/';\n\t<<$^O-eq-symbian>>\n\t$dirsep = '\\\\';\n\tif ($0 =~ /^([a-z]):/i) {\n\t    my $drive = $1;\n\t    @dirs = map { \"$drive:$_\" } @dirs;\n\t    @dl_library_path = map { \"$drive:$_\" } @dl_library_path;\n\t}\n\t<</$^O-eq-symbian>>\n        foreach $dir (@dirs, @dl_library_path) {\n            next unless -d $dir;\n\t    <<$^O-eq-VMS>>\n            chop($dir = VMS::Filespec::unixpath($dir));\n\t    <</$^O-eq-VMS>>\n            foreach $name (@names) {\n\t\tmy($file) = \"$dir$dirsep$name\";\n                print STDERR \" checking in $dir for $name\\n\" if $dl_debug;\n\t\t$file = ($do_expand) ? dl_expandspec($file) : (-f $file && $file);\n\t\t#$file = _check_file($file);\n\t\tif ($file) {\n                    push(@found, $file);\n                    next arg; # no need to look any further\n                }\n            }\n        }\n    }\n    if ($dl_debug) {\n        foreach(@dirs) {\n            print STDERR \" dl_findfile ignored non-existent directory: $_\\n\" unless -d $_;\n        }\n        print STDERR \"dl_findfile found: @found\\n\";\n    }\n    return $found[0] unless wantarray;\n    @found;\n}\n\n\n<<$^O-eq-VMS>>\n# dl_expandspec should be defined in dl_vms.xs\n<<|$^O-eq-VMS>>\nsub dl_expandspec {\n    my($spec) = @_;\n    # Optional function invoked if DynaLoader.pm sets $do_expand.\n    # Most systems do not require or use this function.\n    # Some systems may implement it in the dl_*.xs file in which case\n    # this Perl version should be excluded at build time.\n\n    # This function is designed to deal with systems which treat some\n    # 'filenames' in a special way. For example VMS 'Logical Names'\n    # (something like unix environment variables - but different).\n    # This function should recognise such names and expand them into\n    # full file paths.\n    # Must return undef if $spec is invalid or file does not exist.\n\n    my $file = $spec; # default output to input\n\n\treturn undef unless -f $file;\n    print STDERR \"dl_expandspec($spec) => $file\\n\" if $dl_debug;\n    $file;\n}\n<</$^O-eq-VMS>>\n\nsub dl_find_symbol_anywhere\n{\n    my $sym = shift;\n    my $libref;\n    foreach $libref (@dl_librefs) {\n\tmy $symref = dl_find_symbol($libref,$sym);\n\treturn $symref if $symref;\n    }\n    return undef;\n}\n\n__END__\n\n=head1 NAME\n\nDynaLoader - Dynamically load C libraries into Perl code\n\n=head1 SYNOPSIS\n\n    package YourPackage;\n    require DynaLoader;\n    @ISA = qw(... DynaLoader ...);\n    bootstrap YourPackage;\n\n    # optional method for 'global' loading\n    sub dl_load_flags { 0x01 }     \n\n\n=head1 DESCRIPTION\n\nThis document defines a standard generic interface to the dynamic\nlinking mechanisms available on many platforms.  Its primary purpose is\nto implement automatic dynamic loading of Perl modules.\n\nThis document serves as both a specification for anyone wishing to\nimplement the DynaLoader for a new platform and as a guide for\nanyone wishing to use the DynaLoader directly in an application.\n\nThe DynaLoader is designed to be a very simple high-level\ninterface that is sufficiently general to cover the requirements\nof SunOS, HP-UX, Linux, VMS and other platforms.\n\nIt is also hoped that the interface will cover the needs of OS/2, NT\netc and also allow pseudo-dynamic linking (using C<ld -A> at runtime).\n\nIt must be stressed that the DynaLoader, by itself, is practically\nuseless for accessing non-Perl libraries because it provides almost no\nPerl-to-C 'glue'.  There is, for example, no mechanism for calling a C\nlibrary function or supplying arguments.  A C::DynaLib module\nis available from CPAN sites which performs that function for some\ncommon system types.  And since the year 2000, there's also Inline::C,\na module that allows you to write Perl subroutines in C.  Also available\nfrom your local CPAN site.\n\nDynaLoader Interface Summary\n\n  @dl_library_path\n  @dl_resolve_using\n  @dl_require_symbols\n  $dl_debug\n  $dl_dlext\n  @dl_librefs\n  @dl_modules\n  @dl_shared_objects\n                                                  Implemented in:\n  bootstrap($modulename)                               Perl\n  @filepaths = dl_findfile(@names)                     Perl\n  $flags = $modulename->dl_load_flags                  Perl\n  $symref  = dl_find_symbol_anywhere($symbol)          Perl\n\n  $libref  = dl_load_file($filename, $flags)           C\n  $status  = dl_unload_file($libref)                   C\n  $symref  = dl_find_symbol($libref, $symbol)          C\n  @symbols = dl_undef_symbols()                        C\n  dl_install_xsub($name, $symref [, $filename])        C\n  $message = dl_error                                  C\n\n=over 4\n\n=item @dl_library_path\n\nThe standard/default list of directories in which dl_findfile() will\nsearch for libraries etc.  Directories are searched in order:\n$dl_library_path[0], [1], ... etc\n\n@dl_library_path is initialised to hold the list of 'normal' directories\n(F</usr/lib>, etc) determined by B<Configure> (C<$Config{'libpth'}>).  This should\nensure portability across a wide range of platforms.\n\n@dl_library_path should also be initialised with any other directories\nthat can be determined from the environment at runtime (such as\nLD_LIBRARY_PATH for SunOS).\n\nAfter initialisation @dl_library_path can be manipulated by an\napplication using push and unshift before calling dl_findfile().\nUnshift can be used to add directories to the front of the search order\neither to save search time or to override libraries with the same name\nin the 'normal' directories.\n\nThe load function that dl_load_file() calls may require an absolute\npathname.  The dl_findfile() function and @dl_library_path can be\nused to search for and return the absolute pathname for the\nlibrary/object that you wish to load.\n\n=item @dl_resolve_using\n\nA list of additional libraries or other shared objects which can be\nused to resolve any undefined symbols that might be generated by a\nlater call to load_file().\n\nThis is only required on some platforms which do not handle dependent\nlibraries automatically.  For example the Socket Perl extension\nlibrary (F<auto/Socket/Socket.so>) contains references to many socket\nfunctions which need to be resolved when it's loaded.  Most platforms\nwill automatically know where to find the 'dependent' library (e.g.,\nF</usr/lib/libsocket.so>).  A few platforms need to be told the\nlocation of the dependent library explicitly.  Use @dl_resolve_using\nfor this.\n\nExample usage:\n\n    @dl_resolve_using = dl_findfile('-lsocket');\n\n=item @dl_require_symbols\n\nA list of one or more symbol names that are in the library/object file\nto be dynamically loaded.  This is only required on some platforms.\n\n=item @dl_librefs\n\nAn array of the handles returned by successful calls to dl_load_file(),\nmade by bootstrap, in the order in which they were loaded.\nCan be used with dl_find_symbol() to look for a symbol in any of\nthe loaded files.\n\n=item @dl_modules\n\nAn array of module (package) names that have been bootstrap'ed.\n\n=item @dl_shared_objects\n\nAn array of file names for the shared objects that were loaded.\n\n=item dl_error()\n\nSyntax:\n\n    $message = dl_error();\n\nError message text from the last failed DynaLoader function.  Note\nthat, similar to errno in unix, a successful function call does not\nreset this message.\n\nImplementations should detect the error as soon as it occurs in any of\nthe other functions and save the corresponding message for later\nretrieval.  This will avoid problems on some platforms (such as SunOS)\nwhere the error message is very temporary (e.g., dlerror()).\n\n=item $dl_debug\n\nInternal debugging messages are enabled when $dl_debug is set true.\nCurrently setting $dl_debug only affects the Perl side of the\nDynaLoader.  These messages should help an application developer to\nresolve any DynaLoader usage problems.\n\n$dl_debug is set to C<$ENV{'PERL_DL_DEBUG'}> if defined.\n\nFor the DynaLoader developer/porter there is a similar debugging\nvariable added to the C code (see dlutils.c) and enabled if Perl was\nbuilt with the B<-DDEBUGGING> flag.  This can also be set via the\nPERL_DL_DEBUG environment variable.  Set to 1 for minimal information or\nhigher for more.\n\n=item $dl_dlext\n\nWhen specified (localised) in a module's F<.pm> file, indicates the extension\nwhich the module's loadable object will have. For example:\n\n    local $DynaLoader::dl_dlext = 'unusual_ext';\n\nwould indicate that the module's loadable object has an extension of\nC<unusual_ext> instead of the more usual C<$Config{dlext}>.  NOTE: This also\nrequires that the module's F<Makefile.PL> specify (in C<WriteMakefile()>):\n\n    DLEXT => 'unusual_ext',\n\n=item dl_findfile()\n\nSyntax:\n\n    @filepaths = dl_findfile(@names)\n\nDetermine the full paths (including file suffix) of one or more\nloadable files given their generic names and optionally one or more\ndirectories.  Searches directories in @dl_library_path by default and\nreturns an empty list if no files were found.\n\nNames can be specified in a variety of platform independent forms.  Any\nnames in the form B<-lname> are converted into F<libname.*>, where F<.*> is\nan appropriate suffix for the platform.\n\nIf a name does not already have a suitable prefix and/or suffix then\nthe corresponding file will be searched for by trying combinations of\nprefix and suffix appropriate to the platform: \"$name.o\", \"lib$name.*\"\nand \"$name\".\n\nIf any directories are included in @names they are searched before\n@dl_library_path.  Directories may be specified as B<-Ldir>.  Any other\nnames are treated as filenames to be searched for.\n\nUsing arguments of the form C<-Ldir> and C<-lname> is recommended.\n\nExample: \n\n    @dl_resolve_using = dl_findfile(qw(-L/usr/5lib -lposix));\n\n\n=item dl_expandspec()\n\nSyntax:\n\n    $filepath = dl_expandspec($spec)\n\nSome unusual systems, such as VMS, require special filename handling in\norder to deal with symbolic names for files (i.e., VMS's Logical Names).\n\nTo support these systems a dl_expandspec() function can be implemented\neither in the F<dl_*.xs> file or code can be added to the dl_expandspec()\nfunction in F<DynaLoader.pm>.  See F<DynaLoader_pm.PL> for more information.\n\n=item dl_load_file()\n\nSyntax:\n\n    $libref = dl_load_file($filename, $flags)\n\nDynamically load $filename, which must be the path to a shared object\nor library.  An opaque 'library reference' is returned as a handle for\nthe loaded object.  Returns undef on error.\n\nThe $flags argument to alters dl_load_file behaviour.  \nAssigned bits:\n\n 0x01  make symbols available for linking later dl_load_file's.\n       (only known to work on Solaris 2 using dlopen(RTLD_GLOBAL))\n       (ignored under VMS; this is a normal part of image linking)\n\n(On systems that provide a handle for the loaded object such as SunOS\nand HPUX, $libref will be that handle.  On other systems $libref will\ntypically be $filename or a pointer to a buffer containing $filename.\nThe application should not examine or alter $libref in any way.)\n\nThis is the function that does the real work.  It should use the\ncurrent values of @dl_require_symbols and @dl_resolve_using if required.\n\n    SunOS: dlopen($filename)\n    HP-UX: shl_load($filename)\n    Linux: dld_create_reference(@dl_require_symbols); dld_link($filename)\n    VMS:   lib$find_image_symbol($filename,$dl_require_symbols[0])\n\n(The dlopen() function is also used by Solaris and some versions of\nLinux, and is a common choice when providing a \"wrapper\" on other\nmechanisms as is done in the OS/2 port.)\n\n=item dl_unload_file()\n\nSyntax:\n\n    $status = dl_unload_file($libref)\n\nDynamically unload $libref, which must be an opaque 'library reference' as\nreturned from dl_load_file.  Returns one on success and zero on failure.\nThis function is optional and may not necessarily be provided on all platforms.\n\nIf it is defined and perl is compiled with the C macro C<DL_UNLOAD_ALL_AT_EXIT>\ndefined, then it is called automatically when the interpreter exits for\nevery shared object or library loaded by DynaLoader::bootstrap.  All such\nlibrary references are stored in @dl_librefs by DynaLoader::Bootstrap as it\nloads the libraries.  The files are unloaded in last-in, first-out order.\n\nThis unloading is usually necessary when embedding a shared-object perl (e.g.\none configured with -Duseshrplib) within a larger application, and the perl\ninterpreter is created and destroyed several times within the lifetime of the\napplication.  In this case it is possible that the system dynamic linker will\nunload and then subsequently reload the shared libperl without relocating any\nreferences to it from any files DynaLoaded by the previous incarnation of the\ninterpreter.  As a result, any shared objects opened by DynaLoader may point to\na now invalid 'ghost' of the libperl shared object, causing apparently random\nmemory corruption and crashes.  This behaviour is most commonly seen when using\nApache and mod_perl built with the APXS mechanism.\n\n    SunOS: dlclose($libref)\n    HP-UX: ???\n    Linux: ???\n    VMS:   ???\n\n(The dlclose() function is also used by Solaris and some versions of\nLinux, and is a common choice when providing a \"wrapper\" on other\nmechanisms as is done in the OS/2 port.)\n\n=item dl_load_flags()\n\nSyntax:\n\n    $flags = dl_load_flags $modulename;\n\nDesigned to be a method call, and to be overridden by a derived class\n(i.e. a class which has DynaLoader in its @ISA).  The definition in\nDynaLoader itself returns 0, which produces standard behavior from\ndl_load_file().\n\n=item dl_find_symbol()\n\nSyntax:\n\n    $symref = dl_find_symbol($libref, $symbol)\n\nReturn the address of the symbol $symbol or C<undef> if not found.  If the\ntarget system has separate functions to search for symbols of different\ntypes then dl_find_symbol() should search for function symbols first and\nthen other types.\n\nThe exact manner in which the address is returned in $symref is not\ncurrently defined.  The only initial requirement is that $symref can\nbe passed to, and understood by, dl_install_xsub().\n\n    SunOS: dlsym($libref, $symbol)\n    HP-UX: shl_findsym($libref, $symbol)\n    Linux: dld_get_func($symbol) and/or dld_get_symbol($symbol)\n    VMS:   lib$find_image_symbol($libref,$symbol)\n\n\n=item dl_find_symbol_anywhere()\n\nSyntax:\n\n    $symref = dl_find_symbol_anywhere($symbol)\n\nApplies dl_find_symbol() to the members of @dl_librefs and returns\nthe first match found.\n\n=item dl_undef_symbols()\n\nExample\n\n    @symbols = dl_undef_symbols()\n\nReturn a list of symbol names which remain undefined after load_file().\nReturns C<()> if not known.  Don't worry if your platform does not provide\na mechanism for this.  Most do not need it and hence do not provide it,\nthey just return an empty list.\n\n\n=item dl_install_xsub()\n\nSyntax:\n\n    dl_install_xsub($perl_name, $symref [, $filename])\n\nCreate a new Perl external subroutine named $perl_name using $symref as\na pointer to the function which implements the routine.  This is simply\na direct call to newXSUB().  Returns a reference to the installed\nfunction.\n\nThe $filename parameter is used by Perl to identify the source file for\nthe function if required by die(), caller() or the debugger.  If\n$filename is not defined then \"DynaLoader\" will be used.\n\n\n=item bootstrap()\n\nSyntax:\n\nbootstrap($module [...])\n\nThis is the normal entry point for automatic dynamic loading in Perl.\n\nIt performs the following actions:\n\n=over 8\n\n=item *\n\nlocates an auto/$module directory by searching @INC\n\n=item *\n\nuses dl_findfile() to determine the filename to load\n\n=item *\n\nsets @dl_require_symbols to C<(\"boot_$module\")>\n\n=item *\n\nexecutes an F<auto/$module/$module.bs> file if it exists\n(typically used to add to @dl_resolve_using any files which\nare required to load the module on the current platform)\n\n=item *\n\ncalls dl_load_flags() to determine how to load the file.\n\n=item *\n\ncalls dl_load_file() to load the file\n\n=item *\n\ncalls dl_undef_symbols() and warns if any symbols are undefined\n\n=item *\n\ncalls dl_find_symbol() for \"boot_$module\"\n\n=item *\n\ncalls dl_install_xsub() to install it as \"${module}::bootstrap\"\n\n=item *\n\ncalls &{\"${module}::bootstrap\"} to bootstrap the module (actually\nit uses the function reference returned by dl_install_xsub for speed)\n\n=back\n\nAll arguments to bootstrap() are passed to the module's bootstrap function.\nThe default code generated by F<xsubpp> expects $module [, $version]\nIf the optional $version argument is not given, it defaults to\nC<$XS_VERSION // $VERSION> in the module's symbol table. The default code\ncompares the Perl-space version with the version of the compiled XS code,\nand croaks with an error if they do not match.\n\n=back\n\n\n=head1 AUTHOR\n\nTim Bunce, 11 August 1994.\n\nThis interface is based on the work and comments of (in no particular\norder): Larry Wall, Robert Sanders, Dean Roehrich, Jeff Okamoto, Anno\nSiegel, Thomas Neumann, Paul Marquess, Charles Bailey, myself and others.\n\nLarry Wall designed the elegant inherited bootstrap mechanism and\nimplemented the first Perl 5 dynamic loader using it.\n\nSolaris global loading added by Nick Ing-Simmons with design/coding\nassistance from Tim Bunce, January 1996.\n\n=cut\nEOT\n\nclose OUT or die $!;\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/ext/DynaLoader/dl_symbian.xs": "/* dl_symbian.xs\n * \n * Platform:\tSymbian 7.0s\n * Author:\tJarkko Hietaniemi <jarkko.hietaniemi@nokia.com>\n * Copyright:\t2004, Nokia\n * License:\tArtistic/GPL\n *\n */\n\n/*\n * In Symbian DLLs there is no name information, one can only access\n * the functions by their ordinals.  Perl, however, very much would like\n * to load functions by their names.  We fake this by having a special\n * setup function at the ordinal 1 (this is arranged by building the DLLs\n * in a special way).  The setup function builds a Perl hash mapping the\n * names to the ordinals, and the hash is then used by dlsym().\n *\n */\n\n#include <e32base.h>\n#include <eikdll.h>\n#include <utf.h>\n\n/* This is a useful pattern: first include the Symbian headers,\n * only after that the Perl ones.  Otherwise you will get a lot\n * trouble because of Symbian's New(), Copy(), etc definitions. */\n\n#define DL_SYMBIAN_XS\n#define PERL_EXT\n\n#include \"EXTERN.h\"\n#include \"perl.h\"\n#include \"XSUB.h\"\n\nSTART_EXTERN_C\n\nvoid *dlopen(const char *filename, int flag);\nvoid *dlsym(void *handle, const char *symbol);\nint   dlclose(void *handle);\nconst char *dlerror(void);\n\nextern void*  memset(void *s, int c, size_t n);\nextern size_t strlen(const char *s);\n\nEND_EXTERN_C\n\n#include \"dlutils.c\"\n\n#define RTLD_LAZY   0x0001\n#define RTLD_NOW    0x0002\n#define RTLD_GLOBAL 0x0004\n\n#ifndef NULL\n#  define NULL 0\n#endif\n\n/* No need to pull in symbian_dll.cpp for this. */\n#define symbian_get_vars() ((void*)Dll::Tls())\n\nconst TInt KPerlDllSetupFunction = 1;\n\ntypedef struct {\n    RLibrary\thandle;\n    TInt\terror;\n    HV*\t\tsymbols;\n} PerlSymbianLibHandle;\n\ntypedef void (*PerlSymbianLibInit)(void *);\n\nvoid* dlopen(const char *filename, int flags) {\n    TBuf16<KMaxFileName> utf16fn;\n    const TUint8* utf8fn = (const TUint8*)filename;\n    PerlSymbianLibHandle* h = NULL;\n    TInt error;\n\n    error =\n        CnvUtfConverter::ConvertToUnicodeFromUtf8(utf16fn, TPtrC8(utf8fn));\n    if (error == KErrNone) {\n        h = new PerlSymbianLibHandle;\n        if (h) {\n            h->error   = KErrNone;\n            h->symbols = (HV *)NULL;\n        } else\n            error = KErrNoMemory;\n    }\n\n    if (h && error == KErrNone) {\n        error = (h->handle).Load(utf16fn);\n        if (error == KErrNone) {\n            TLibraryFunction init = (h->handle).Lookup(KPerlDllSetupFunction);\n            ((PerlSymbianLibInit)init)(h);\n        } else {\n\t    free(h);\n            h = NULL;\n        }\n    }\n\n    if (h)\n        h->error = error;\n\n    return h;\n}\n\nvoid* dlsym(void *handle, const char *symbol) {\n    if (handle) {\n        dTHX;\n        PerlSymbianLibHandle* h = (PerlSymbianLibHandle*)handle;\n        HV* symbols = h->symbols;\n        if (symbols) {\n            SV** svp = hv_fetch(symbols, symbol, strlen(symbol), FALSE);\n            if (svp && *svp && SvIOK(*svp)) {\n                IV ord = SvIV(*svp);\n                if (ord > 0)\n                    return (void*)((h->handle).Lookup(ord));\n            }\n        }\n    }\n    return NULL;\n}\n\nint dlclose(void *handle) {\n    PerlSymbianLibHandle* h = (PerlSymbianLibHandle*)handle;\n    if (h) {\n        (h->handle).Close();\n        if (h->symbols) {\n            dTHX;\n            hv_undef(h->symbols);\n            h->symbols = NULL;\n        }\n        return 0;\n    } else\n        return 1;\n}\n\nconst char* dlerror(void) {\n    return 0;\t/* Bad interface: assumes static data. */\n}\n\nstatic void\ndl_private_init(pTHX)\n{\n    (void)dl_generic_private_init(aTHX);\n}\n \nMODULE = DynaLoader\tPACKAGE = DynaLoader\n\nPROTOTYPES:  ENABLE\n\nBOOT:\n    (void)dl_private_init(aTHX);\n\n\nvoid\ndl_load_file(filename, flags=0)\n    char *\tfilename\n    int\t\tflags\n  PREINIT:\n    PerlSymbianLibHandle* h;\n  CODE:\n{\n    ST(0) = sv_newmortal();\n    h = (PerlSymbianLibHandle*)dlopen(filename, flags);\n    if (h && h->error == KErrNone)\n\tsv_setiv(ST(0), PTR2IV(h));\n    else\n\tPerlIO_printf(Perl_debug_log, \"(dl_load_file %s %d)\",\n                      filename, h ? h->error : -1);\n}\n\n\nint\ndl_unload_file(libhandle)\n    void *\tlibhandle\n  CODE:\n    RETVAL = (dlclose(libhandle) == 0 ? 1 : 0);\n  OUTPUT:\n    RETVAL\n\n\nvoid\ndl_find_symbol(libhandle, symbolname)\n    void *\tlibhandle\n    char *\tsymbolname\n    PREINIT:\n    void *sym;\n    CODE:\n    PerlSymbianLibHandle* h = (PerlSymbianLibHandle*)libhandle;\n    sym = dlsym(libhandle, symbolname);\n    ST(0) = sv_newmortal();\n    if (sym)\n       sv_setiv(ST(0), PTR2IV(sym));\n    else\n       PerlIO_printf(Perl_debug_log, \"(dl_find_symbol %s %d)\",\n                     symbolname, h ? h->error : -1);\n\n\nvoid\ndl_undef_symbols()\n    CODE:\n\n\n\n# These functions should not need changing on any platform:\n\nvoid\ndl_install_xsub(perl_name, symref, filename=\"$Package\")\n    char *\t\tperl_name\n    void *\t\tsymref \n    const char *\tfilename\n    CODE:\n    ST(0) = sv_2mortal(newRV((SV*)newXS_flags(perl_name,\n\t\t\t\t\t      (void(*)(pTHX_ CV *))symref,\n\t\t\t\t\t      filename, NULL,\n\t\t\t\t\t      XS_DYNAMIC_FILENAME)));\n\n\nSV *\ndl_error()\n    CODE:\n    dMY_CXT;\n    RETVAL = newSVsv(MY_CXT.x_dl_last_error);\n    OUTPUT:\n    RETVAL\n\n#if defined(USE_ITHREADS)\n\nvoid\nCLONE(...)\n    CODE:\n    MY_CXT_CLONE;\n\n    PERL_UNUSED_VAR(items);\n\n    /* MY_CXT_CLONE just does a memcpy on the whole structure, so to avoid\n     * using Perl variables that belong to another thread, we create our \n     * own for this thread.\n     */\n    MY_CXT.x_dl_last_error = newSVpvs(\"\");\n\n#endif\n\n# end.\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Config-Perl-V/V.pm": "#!/pro/bin/perl\n\npackage Config::Perl::V;\n\nuse strict;\nuse warnings;\n\nuse Config;\nuse Exporter;\nuse vars qw($VERSION @ISA @EXPORT_OK %EXPORT_TAGS);\n$VERSION     = \"0.24\";\n@ISA         = (\"Exporter\");\n@EXPORT_OK   = qw( plv2hash summary myconfig signature );\n%EXPORT_TAGS = (\n    all => [ @EXPORT_OK  ],\n    sig => [ \"signature\" ],\n    );\n\n#  Characteristics of this binary (from libperl):\n#    Compile-time options: DEBUGGING PERL_DONT_CREATE_GVSV PERL_MALLOC_WRAP\n#                          USE_64_BIT_INT USE_LARGE_FILES USE_PERLIO\n\n# The list are as the perl binary has stored it in PL_bincompat_options\n#  search for it in\n#   perl.c line 1643 S_Internals_V ()\n#     perl -ne'(/^S_Internals_V/../^}/)&&s/^\\s+\"( .*)\"/$1/ and print' perl.c\n#   perl.h line 4566 PL_bincompat_options\n#     perl -ne'(/^\\w.*PL_bincompat/../^\\w}/)&&s/^\\s+\"( .*)\"/$1/ and print' perl.h\nmy %BTD = map { $_ => 0 } qw(\n\n    DEBUGGING\n    NO_HASH_SEED\n    NO_MATHOMS\n    NO_TAINT_SUPPORT\n    PERL_BOOL_AS_CHAR\n    PERL_DISABLE_PMC\n    PERL_DONT_CREATE_GVSV\n    PERL_EXTERNAL_GLOB\n    PERL_HASH_FUNC_DJB2\n    PERL_HASH_FUNC_MURMUR3\n    PERL_HASH_FUNC_ONE_AT_A_TIME\n    PERL_HASH_FUNC_ONE_AT_A_TIME_HARD\n    PERL_HASH_FUNC_ONE_AT_A_TIME_OLD\n    PERL_HASH_FUNC_SDBM\n    PERL_HASH_FUNC_SIPHASH\n    PERL_HASH_FUNC_SUPERFAST\n    PERL_IS_MINIPERL\n    PERL_MALLOC_WRAP\n    PERL_MEM_LOG\n    PERL_MEM_LOG_ENV\n    PERL_MEM_LOG_ENV_FD\n    PERL_MEM_LOG_NOIMPL\n    PERL_MEM_LOG_STDERR\n    PERL_MEM_LOG_TIMESTAMP\n    PERL_NEW_COPY_ON_WRITE\n    PERL_PERTURB_KEYS_DETERMINISTIC\n    PERL_PERTURB_KEYS_DISABLED\n    PERL_PERTURB_KEYS_RANDOM\n    PERL_PRESERVE_IVUV\n    PERL_RELOCATABLE_INCPUSH\n    PERL_USE_DEVEL\n    PERL_USE_SAFE_PUTENV\n    UNLINK_ALL_VERSIONS\n    USE_ATTRIBUTES_FOR_PERLIO\n    USE_FAST_STDIO\n    USE_HASH_SEED_EXPLICIT\n    USE_LOCALE\n    USE_LOCALE_CTYPE\n    USE_PERL_ATOF\n    USE_SITECUSTOMIZE\n\n    DEBUG_LEAKING_SCALARS\n    DEBUG_LEAKING_SCALARS_FORK_DUMP\n    DECCRTL_SOCKETS\n    FAKE_THREADS\n    FCRYPT\n    HAS_TIMES\n    HAVE_INTERP_INTERN\n    MULTIPLICITY\n    MYMALLOC\n    PERL_DEBUG_READONLY_COW\n    PERL_DEBUG_READONLY_OPS\n    PERL_GLOBAL_STRUCT\n    PERL_GLOBAL_STRUCT_PRIVATE\n    PERL_IMPLICIT_CONTEXT\n    PERL_IMPLICIT_SYS\n    PERLIO_LAYERS\n    PERL_MAD\n    PERL_MICRO\n    PERL_NEED_APPCTX\n    PERL_NEED_TIMESBASE\n    PERL_OLD_COPY_ON_WRITE\n    PERL_POISON\n    PERL_SAWAMPERSAND\n    PERL_TRACK_MEMPOOL\n    PERL_USES_PL_PIDSTATUS\n    PL_OP_SLAB_ALLOC\n    THREADS_HAVE_PIDS\n    USE_64_BIT_ALL\n    USE_64_BIT_INT\n    USE_IEEE\n    USE_ITHREADS\n    USE_LARGE_FILES\n    USE_LOCALE_COLLATE\n    USE_LOCALE_NUMERIC\n    USE_LOCALE_TIME\n    USE_LONG_DOUBLE\n    USE_PERLIO\n    USE_QUADMATH\n    USE_REENTRANT_API\n    USE_SFIO\n    USE_SOCKS\n    VMS_DO_SOCKETS\n    VMS_SHORTEN_LONG_SYMBOLS\n    VMS_SYMBOL_CASE_AS_IS\n    );\n\n# These are all the keys that are\n# 1. Always present in %Config - lib/Config.pm #87 tie %Config\n# 2. Reported by 'perl -V' (the rest)\nmy @config_vars = qw(\n\n    api_subversion\n    api_version\n    api_versionstring\n    archlibexp\n    dont_use_nlink\n    d_readlink\n    d_symlink\n    exe_ext\n    inc_version_list\n    ldlibpthname\n    patchlevel\n    path_sep\n    perl_patchlevel\n    privlibexp\n    scriptdir\n    sitearchexp\n    sitelibexp\n    subversion\n    usevendorprefix\n    version\n\n    git_commit_id\n    git_describe\n    git_branch\n    git_uncommitted_changes\n    git_commit_id_title\n    git_snapshot_date\n\n    package revision version_patchlevel_string\n\n    osname osvers archname\n    myuname\n    config_args\n    hint useposix d_sigaction\n    useithreads usemultiplicity\n    useperlio d_sfio uselargefiles usesocks\n    use64bitint use64bitall uselongdouble\n    usemymalloc bincompat5005\n\n    cc ccflags\n    optimize\n    cppflags\n    ccversion gccversion gccosandvers\n    intsize longsize ptrsize doublesize byteorder\n    d_longlong longlongsize d_longdbl longdblsize\n    ivtype ivsize nvtype nvsize lseektype lseeksize\n    alignbytes prototype\n\n    ld ldflags\n    libpth\n    libs\n    perllibs\n    libc so useshrplib libperl\n    gnulibc_version\n\n    dlsrc dlext d_dlsymun ccdlflags\n    cccdlflags lddlflags\n    );\n\nmy %empty_build = (\n    osname  => \"\",\n    stamp   => 0,\n    options => { %BTD },\n    patches => [],\n    );\n\nsub _make_derived\n{\n    my $conf = shift;\n\n    for ( [ lseektype\t\t=> \"Off_t\"\t],\n\t  [ myuname\t\t=> \"uname\"\t],\n\t  [ perl_patchlevel\t=> \"patch\"\t],\n\t  ) {\n\tmy ($official, $derived) = @$_;\n\t$conf->{config}{$derived}  ||= $conf->{config}{$official};\n\t$conf->{config}{$official} ||= $conf->{config}{$derived};\n\t$conf->{derived}{$derived} = delete $conf->{config}{$derived};\n\t}\n\n    if (exists $conf->{config}{version_patchlevel_string} &&\n       !exists $conf->{config}{api_version}) {\n\tmy $vps = $conf->{config}{version_patchlevel_string};\n\t$vps =~ s{\\b revision   \\s+ (\\S+) }{}x and\n\t    $conf->{config}{revision}        ||= $1;\n\n\t$vps =~ s{\\b version    \\s+ (\\S+) }{}x and\n\t    $conf->{config}{api_version}     ||= $1;\n\t$vps =~ s{\\b subversion \\s+ (\\S+) }{}x and\n\t    $conf->{config}{subversion}      ||= $1;\n\t$vps =~ s{\\b patch      \\s+ (\\S+) }{}x and\n\t    $conf->{config}{perl_patchlevel} ||= $1;\n\t}\n\n    ($conf->{config}{version_patchlevel_string} ||= join \" \",\n\tmap  { ($_, $conf->{config}{$_} ) }\n\tgrep {      $conf->{config}{$_}   }\n\tqw( api_version subversion perl_patchlevel )) =~ s/\\bperl_//; \n\n    $conf->{config}{perl_patchlevel}  ||= \"\";\t# 0 is not a valid patchlevel\n\n    if ($conf->{config}{perl_patchlevel} =~ m{^git\\w*-([^-]+)}i) {\n\t$conf->{config}{git_branch}   ||= $1;\n\t$conf->{config}{git_describe} ||= $conf->{config}{perl_patchlevel};\n\t}\n\n    $conf;\n    } # _make_derived\n\nsub plv2hash\n{\n    my %config;\n\n    my $pv = join \"\\n\" => @_;\n\n    if ($pv =~ m/^Summary of my\\s+(\\S+)\\s+\\(\\s*(.*?)\\s*\\)/m) {\n\t$config{\"package\"} = $1;\n\tmy $rev = $2;\n\t$rev =~ s/^ revision \\s+ (\\S+) \\s*//x and $config{revision} = $1;\n\t$rev and $config{version_patchlevel_string} = $rev;\n\tmy ($rel) = $config{\"package\"} =~ m{perl(\\d)};\n\tmy ($vers, $subvers) = $rev =~ m{version\\s+(\\d+)\\s+subversion\\s+(\\d+)};\n\tdefined $vers && defined $subvers && defined $rel and\n\t    $config{version} = \"$rel.$vers.$subvers\";\n\t}\n\n    if ($pv =~ m/^\\s+(Snapshot of:)\\s+(\\S+)/) {\n\t$config{git_commit_id_title} = $1;\n\t$config{git_commit_id}       = $2;\n\t}\n\n    if (my %kv = ($pv =~ m{\\b\n\t    (\\w+)\t\t# key\n\t    \\s*=\t\t# assign\n\t    ( '\\s*[^']*?\\s*'\t# quoted value\n\t    | \\S+[^=]*?\\s*\\n\t# unquoted running till end of line\n\t    | \\S+\t\t# unquoted value\n\t    | \\s*\\n\t\t# empty\n\t    )\n\t    (?:,?\\s+|\\s*\\n)?\t# separator (5.8.x reports did not have a ','\n\t    }gx)) {\t\t# between every kv pair\n\n\twhile (my ($k, $v) = each %kv) {\n\t    $k =~ s/\\s+$//;\n\t    $v =~ s/\\s*\\n\\z//;\n\t    $v =~ s/,$//;\n\t    $v =~ m/^'(.*)'$/ and $v = $1;\n\t    $v =~ s/\\s+$//;\n\t    $config{$k} = $v;\n\t    }\n\t}\n\n    my $build = { %empty_build };\n\n    $pv =~ m{^\\s+Compiled at\\s+(.*)}m\n\tand $build->{stamp}   = $1;\n    $pv =~ m{^\\s+Locally applied patches:(?:\\s+|\\n)(.*?)(?:[\\s\\n]+Buil[td] under)}ms\n\tand $build->{patches} = [ split m/\\n+\\s*/, $1 ];\n    $pv =~ m{^\\s+Compile-time options:(?:\\s+|\\n)(.*?)(?:[\\s\\n]+(?:Locally applied|Buil[td] under))}ms\n\tand map { $build->{options}{$_} = 1 } split m/\\s+|\\n/ => $1;\n\n    $build->{osname} = $config{osname};\n    $pv =~ m{^\\s+Built under\\s+(.*)}m\n\tand $build->{osname}  = $1;\n    $config{osname} ||= $build->{osname};\n\n    return _make_derived ({\n\tbuild\t\t=> $build,\n\tenvironment\t=> {},\n\tconfig\t\t=> \\%config,\n\tderived\t\t=> {},\n\tinc\t\t=> [],\n\t});\n    } # plv2hash\n\nsub summary\n{\n    my $conf = shift || myconfig ();\n    ref $conf eq \"HASH\" &&\n\texists $conf->{config} && exists $conf->{build} or return;\n\n    my %info = map {\n\texists $conf->{config}{$_} ? ( $_ => $conf->{config}{$_} ) : () }\n\tqw( archname osname osvers revision patchlevel subversion version\n\t    cc ccversion gccversion config_args inc_version_list\n\t    d_longdbl d_longlong use64bitall use64bitint useithreads\n\t    uselongdouble usemultiplicity usemymalloc useperlio useshrplib \n\t    doublesize intsize ivsize nvsize longdblsize longlongsize lseeksize\n\t    );\n    $info{$_}++ for grep { $conf->{build}{options}{$_} } keys %{$conf->{build}{options}};\n\n    return \\%info;\n    } # summary\n\nsub signature\n{\n    eval { require Digest::MD5 };\n    $@ and return \"00000000000000000000000000000000\";\n\n    my $conf = shift || summary ();\n    delete $conf->{config_args};\n    return Digest::MD5::md5_hex (join \"\\xFF\" => map {\n\t\"$_=\".(defined $conf->{$_} ? $conf->{$_} : \"\\xFE\");\n\t} sort keys %$conf);\n    } # signature\n\nsub myconfig\n{\n    my $args = shift;\n    my %args = ref $args eq \"HASH\"  ? %$args :\n               ref $args eq \"ARRAY\" ? @$args : ();\n\n    my $build = { %empty_build };\n\n    # 5.14.0 and later provide all the information without shelling out\n    my $stamp = eval { Config::compile_date () };\n    if (defined $stamp) {\n\t$stamp =~ s/^Compiled at //;\n\t$build->{osname}      = $^O;\n\t$build->{stamp}       = $stamp;\n\t$build->{patches}     =     [ Config::local_patches () ];\n\t$build->{options}{$_} = 1 for Config::bincompat_options (),\n\t\t\t\t      Config::non_bincompat_options ();\n\t}\n    else {\n\t#y $pv = qx[$^X -e\"sub Config::myconfig{};\" -V];\n\tmy $cnf = plv2hash (qx[$^X -V]);\n\n\t$build->{$_} = $cnf->{build}{$_} for qw( osname stamp patches options );\n\t}\n\n    my @KEYS = keys %ENV;\n    my %env  =\n\tmap {      $_ => $ENV{$_} } grep m/^PERL/      => @KEYS;\n    $args{env} and\n\tmap { $env{$_} = $ENV{$_} } grep m{$args{env}} => @KEYS;\n\n    my %config = map { $_ => $Config{$_} } @config_vars;\n\n    return _make_derived ({\n\tbuild\t\t=> $build,\n\tenvironment\t=> \\%env,\n\tconfig\t\t=> \\%config,\n\tderived\t\t=> {},\n\tinc\t\t=> \\@INC,\n\t});\n    } # myconfig\n\n1;\n\n__END__\n\n=head1 NAME\n\nConfig::Perl::V - Structured data retrieval of perl -V output\n\n=head1 SYNOPSIS\n\n use Config::Perl::V;\n\n my $local_config = Config::Perl::V::myconfig ();\n print $local_config->{config}{osname};\n\n=head1 DESCRIPTION\n\n=head2 $conf = myconfig ()\n\nThis function will collect the data described in L<the hash structure> below,\nand return that as a hash reference. It optionally accepts an option to\ninclude more entries from %ENV. See L<environment> below.\n\nNote that this will not work on uninstalled perls when called with\nC<-I/path/to/uninstalled/perl/lib>, but it works when that path is in\nC<$PERL5LIB> or in C<$PERL5OPT>, as paths passed using C<-I> are not\nknown when the C<-V> information is collected.\n\n=head2 $conf = plv2hash ($text [, ...])\n\nConvert a sole 'perl -V' text block, or list of lines, to a complete\nmyconfig hash.  All unknown entries are defaulted.\n\n=head2 $info = summary ([$conf])\n\nReturn an arbitrary selection of the information. If no C<$conf> is\ngiven, C<myconfig ()> is used instead.\n\n=head2 $md5 = signature ([$conf])\n\nReturn the MD5 of the info returned by C<summary ()> without the\nC<config_args> entry.\n\nIf C<Digest::MD5> is not available, it return a string with only C<0>'s.\n\n=head2 The hash structure\n\nThe returned hash consists of 4 parts:\n\n=over 4\n\n=item build\n\nThis information is extracted from the second block that is emitted by\nC<perl -V>, and usually looks something like\n\n Characteristics of this binary (from libperl):\n   Compile-time options: DEBUGGING USE_64_BIT_INT USE_LARGE_FILES\n   Locally applied patches:\n\t defined-or\n\t MAINT24637\n   Built under linux\n   Compiled at Jun 13 2005 10:44:20\n   @INC:\n     /usr/lib/perl5/5.8.7/i686-linux-64int\n     /usr/lib/perl5/5.8.7\n     /usr/lib/perl5/site_perl/5.8.7/i686-linux-64int\n     /usr/lib/perl5/site_perl/5.8.7\n     /usr/lib/perl5/site_perl\n     .\n\nor\n\n Characteristics of this binary (from libperl):\n   Compile-time options: DEBUGGING MULTIPLICITY\n\t\t\t PERL_DONT_CREATE_GVSV PERL_IMPLICIT_CONTEXT\n\t\t\t PERL_MALLOC_WRAP PERL_TRACK_MEMPOOL\n\t\t\t PERL_USE_SAFE_PUTENV USE_ITHREADS\n\t\t\t USE_LARGE_FILES USE_PERLIO\n\t\t\t USE_REENTRANT_API\n   Built under linux\n   Compiled at Jan 28 2009 15:26:59\n\nThis information is not available anywhere else, including C<%Config>,\nbut it is the information that is only known to the perl binary.\n\nThe extracted information is stored in 5 entries in the C<build> hash:\n\n=over 4\n\n=item osname\n\nThis is most likely the same as C<$Config{osname}>, and was the name\nknown when perl was built. It might be different if perl was cross-compiled.\n\nThe default for this field, if it cannot be extracted, is to copy\nC<$Config{osname}>. The two may be differing in casing (OpenBSD vs openbsd).\n\n=item stamp\n\nThis is the time string for which the perl binary was compiled. The default\nvalue is 0.\n\n=item options\n\nThis is a hash with all the known defines as keys. The value is either 0,\nwhich means unknown or unset, or 1, which means defined.\n\n=item derived\n\nAs some variables are reported by a different name in the output of C<perl -V>\nthan their actual name in C<%Config>, I decided to leave the C<config> entry\nas close to reality as possible, and put in the entries that might have been\nguessed by the printed output in a separate block.\n\n=item patches\n\nThis is a list of optionally locally applied patches. Default is an empty list.\n\n=back\n\n=item environment\n\nBy default this hash is only filled with the environment variables\nout of %ENV that start with C<PERL>, but you can pass the C<env> option\nto myconfig to get more\n\n my $conf = Config::Perl::V::myconfig ({ env => qr/^ORACLE/ });\n my $conf = Config::Perl::V::myconfig ([ env => qr/^ORACLE/ ]);\n\n=item config\n\nThis hash is filled with the variables that C<perl -V> fills its report\nwith, and it has the same variables that C<Config::myconfig> returns\nfrom C<%Config>.\n\n=item inc\n\nThis is the list of default @INC.\n\n=back\n\n=head1 REASONING\n\nThis module was written to be able to return the configuration for the\ncurrently used perl as deeply as needed for the CPANTESTERS framework.\nUp until now they used the output of myconfig as a single text blob,\nand so it was missing the vital binary characteristics of the running\nperl and the optional applied patches.\n\n=head1 BUGS\n\nPlease feedback what is wrong\n\n=head1 TODO\n\n * Implement retrieval functions/methods\n * Documentation\n * Error checking\n * Tests\n\n=head1 AUTHOR\n\nH.Merijn Brand <h.m.brand@xs4all.nl>\n\n=head1 COPYRIGHT AND LICENSE\n\nCopyright (C) 2009-2015 H.Merijn Brand\n\nThis library is free software; you can redistribute it and/or modify\nit under the same terms as Perl itself.\n\n=cut\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Config-Perl-V/t/22_plv510.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 92;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, 0, \"No build time known\");\nis ($conf->{config}{version}, \"5.10.0\", \"reconstructed \\%Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\n__END__\nSummary of my perl5 (revision 5 version 10 subversion 0) configuration:\n  Platform:\n    osname=linux, osvers=2.6.22.13-0.3-default, archname=i686-linux-64int\n    uname='linux nb09 2.6.22.13-0.3-default #1 smp 20071119 15:02:58 utc i686 i686 i386 gnulinux '\n    config_args='-Duse64bitint -des'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=undef, usemultiplicity=undef\n    useperlio=define, d_sfio=undef, uselargefiles=define, usesocks=undef\n    use64bitint=define, use64bitall=undef, uselongdouble=undef\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-fno-strict-aliasing -pipe -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O2 -g',\n    cppflags='-fno-strict-aliasing -pipe -I/pro/local/include'\n    ccversion='', gccversion='4.2.1 (SUSE Linux)', gccosandvers=''\n    intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12\n    ivtype='long long', ivsize=8, nvtype='double', nvsize=8, Off_t='off_t', lseeksize=8\n    alignbytes=4, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib'\n    libpth=/pro/local/lib /lib /usr/lib /usr/local/lib\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc\n    perllibs=-lnsl -ldl -lm -lcrypt -lutil -lc\n    libc=/lib/libc-2.6.1.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.6.1'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O2 -L/pro/local/lib'\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Config-Perl-V/t/25_plv516.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 93;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Mar 12 2013 08:36:17\", \"Build time\");\nis ($conf->{config}{version}, \"5.16.3\", \"reconstructed \\%Config{version}\");\nis ($conf->{config}{ccversion}, \"\", \"Using gcc. non-gcc version should not be defined\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tHAS_TIMES PERLIO_LAYERS PERL_DONT_CREATE_GVSV\n\tPERL_MALLOC_WRAP PERL_PRESERVE_IVUV USE_64_BIT_INT\n\tUSE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_PERLIO\n\tUSE_PERL_ATOF\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\n__END__\nSummary of my perl5 (revision 5 version 16 subversion 3) configuration:\n   \n  Platform:\n    osname=linux, osvers=3.4.33-2.24-desktop, archname=i686-linux-64int\n    uname='linux lx09 3.4.33-2.24-desktop #1 smp preempt tue feb 26 03:34:33 utc 2013 (5f00a32) i686 i686 i386 gnulinux '\n    config_args='-Duse64bitint -Duselongdouble -des'\n    hint=previous, useposix=true, d_sigaction=define\n    useithreads=undef, usemultiplicity=undef\n    useperlio=define, d_sfio=undef, uselargefiles=define, usesocks=undef\n    use64bitint=define, use64bitall=undef, uselongdouble=undef\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O2',\n    cppflags='-fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\n    ccversion='', gccversion='4.7.1 20120723 [gcc-4_7-branch revision 189773]', gccosandvers=''\n    intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12\n    ivtype='long long', ivsize=8, nvtype='double', nvsize=8, Off_t='off_t', lseeksize=8\n    alignbytes=4, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib -fstack-protector'\n    libpth=/pro/local/lib /lib /usr/lib /usr/local/lib\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat\n    perllibs=-lnsl -ldl -lm -lcrypt -lutil -lc\n    libc=/lib/libc-2.15.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.15'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O2 -L/pro/local/lib -fstack-protector'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: HAS_TIMES PERLIO_LAYERS PERL_DONT_CREATE_GVSV\n                        PERL_MALLOC_WRAP PERL_PRESERVE_IVUV USE_64_BIT_INT\n                        USE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n                        USE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_PERLIO\n                        USE_PERL_ATOF\n  Built under linux\n  Compiled at Mar 12 2013 08:36:17\n  @INC:\n    /pro/lib/perl5/site_perl/5.16.3/i686-linux-64int\n    /pro/lib/perl5/site_perl/5.16.3\n    /pro/lib/perl5/5.16.3/i686-linux-64int\n    /pro/lib/perl5/5.16.3\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Config-Perl-V/t/26_plv5182.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 112;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Jan  9 2014 09:22:04\", \"Build time\");\nis ($conf->{config}{version}, \"5.18.2\", \"reconstructed \\$Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tHAS_TIMES PERLIO_LAYERS PERL_DONT_CREATE_GVSV\n\tPERL_HASH_FUNC_ONE_AT_A_TIME_HARD PERL_MALLOC_WRAP\n\tPERL_PRESERVE_IVUV PERL_SAWAMPERSAND USE_64_BIT_INT\n\tUSE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LONG_DOUBLE\n\tUSE_PERLIO USE_PERL_ATOF\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\nis_deeply ($conf->{build}{patches}, [], \"No local patches\");\n\nmy %check = (\n    alignbytes      => 4,\n    api_version     => 18,\n    bincompat5005   => \"undef\",\n    byteorder       => 12345678,\n    cc              => \"cc\",\n    cccdlflags      => \"-fPIC\",\n    ccdlflags       => \"-Wl,-E\",\n    config_args     => \"-Duse64bitint -Duselongdouble -des\",\n    gccversion      => \"4.8.1 20130909 [gcc-4_8-branch revision 202388]\",\n    gnulibc_version => \"2.18\",\n    ivsize          => 8,\n    ivtype          => \"long long\",\n    ld              => \"cc\",\n    lddlflags       => \"-shared -O2 -L/pro/local/lib -fstack-protector\",\n    ldflags         => \"-L/pro/local/lib -fstack-protector\",\n    libc            => \"/lib/libc-2.18.so\",\n    lseektype       => \"off_t\",\n    osvers          => \"3.11.6-4-desktop\",\n    use64bitint     => \"define\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\n__END__\nSummary of my perl5 (revision 5 version 18 subversion 2) configuration:\n   \n  Platform:\n    osname=linux, osvers=3.11.6-4-desktop, archname=i686-linux-64int-ld\n    uname='linux lx09 3.11.6-4-desktop #1 smp preempt wed oct 30 18:04:56 utc 2013 (e6d4a27) i686 i686 i386 gnulinux '\n    config_args='-Duse64bitint -Duselongdouble -des'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=undef, usemultiplicity=undef\n    useperlio=define, d_sfio=undef, uselargefiles=define, usesocks=undef\n    use64bitint=define, use64bitall=undef, uselongdouble=define\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O2',\n    cppflags='-fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include'\n    ccversion='', gccversion='4.8.1 20130909 [gcc-4_8-branch revision 202388]', gccosandvers=''\n    intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12\n    ivtype='long long', ivsize=8, nvtype='long double', nvsize=12, Off_t='off_t', lseeksize=8\n    alignbytes=4, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib -fstack-protector'\n    libpth=/pro/local/lib /lib /usr/lib /usr/local/lib\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat\n    perllibs=-lnsl -ldl -lm -lcrypt -lutil -lc\n    libc=/lib/libc-2.18.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.18'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O2 -L/pro/local/lib -fstack-protector'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: HAS_TIMES PERLIO_LAYERS PERL_DONT_CREATE_GVSV\n                        PERL_HASH_FUNC_ONE_AT_A_TIME_HARD PERL_MALLOC_WRAP\n                        PERL_PRESERVE_IVUV PERL_SAWAMPERSAND USE_64_BIT_INT\n                        USE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n                        USE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LONG_DOUBLE\n                        USE_PERLIO USE_PERL_ATOF\n  Built under linux\n  Compiled at Jan  9 2014 09:22:04\n  @INC:\n    /pro/lib/perl5/site_perl/5.18.2/i686-linux-64int-ld\n    /pro/lib/perl5/site_perl/5.18.2\n    /pro/lib/perl5/5.18.2/i686-linux-64int-ld\n    /pro/lib/perl5/5.18.2\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Config-Perl-V/t/24_plv514.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 94;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"May 11 2012 16:36:53\", \"Build time\");\nis ($conf->{config}{version}, \"5.14.2\", \"reconstructed \\%Config{version}\");\nis ($conf->{config}{gccversion}, \"\", \"not built with gcc\");\nis ($conf->{config}{ccversion}, \"11.1.0.8\", \"xlc version\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tDEBUGGING PERL_DONT_CREATE_GVSV PERL_MALLOC_WRAP\n\tPERL_PRESERVE_IVUV PERL_USE_DEVEL USE_64_BIT_ALL\n\tUSE_64_BIT_INT USE_LARGE_FILES USE_PERLIO\n\tUSE_PERL_ATOF\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\n__END__\nSummary of my perl5 (revision 5 version 14 subversion 2) configuration:\n\n  Platform:\n    osname=aix, osvers=5.3.0.0, archname=aix-64all\n    uname='aix i3 3 5 0004898ad300 '\n    config_args='-Dusedevel -Duse64bitall -Uversiononly -Dinc_version_list=none -des'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=undef, usemultiplicity=undef\n    useperlio=define, d_sfio=undef, uselargefiles=define, usesocks=undef\n    use64bitint=define, use64bitall=define, uselongdouble=undef\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='xlc -q64', ccflags ='-q64 -DDEBUGGING -qlanglvl=extended -D_ALL_SOURCE -D_ANSI_C_SOURCE -D_POSIX_SOURCE -qmaxmem=-1 -qnoansialias -DUSE_NATIVE_DLOPEN -qlanglvl=extended -I/pro/local/include -q64 -DUSE_64_BIT_ALL -q64',\n    optimize='-O',\n    cppflags='-DDEBUGGING -D_ALL_SOURCE -D_ANSI_C_SOURCE -D_POSIX_SOURCE -DUSE_NATIVE_DLOPEN -I/pro/local/include'\n    ccversion='11.1.0.8', gccversion='', gccosandvers=''\n    intsize=4, longsize=8, ptrsize=8, doublesize=8, byteorder=87654321\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=8\n    ivtype='long', ivsize=8, nvtype='double', nvsize=8, Off_t='off_t', lseeksize=8\n    alignbytes=8, prototype=define\n  Linker and Libraries:\n    ld='ld', ldflags ='-L/usr/local/ppc64/lib64 -b64 -q64 -L/pro/local/lib -brtl -bdynamic -b64'\n    libpth=/usr/local/ppc64/lib64 /lib /usr/lib /usr/ccs/lib /usr/local/lib /usr/lib64\n    libs=-lbind -lnsl -ldbm -ldb -ldl -lld -lm -lcrypt -lc\n    perllibs=-lbind -lnsl -ldl -lld -lm -lcrypt -lc\n    libc=/lib/libc.a, so=a, useshrplib=false, libperl=libperl.a\n    gnulibc_version=''\n  Dynamic Linking:\n    dlsrc=dl_aix.xs, dlext=so, d_dlsymun=undef, ccdlflags='  -bE:/pro/lib/perl5/5.14.2/aix-64all/CORE/perl.exp'\n    cccdlflags=' ', lddlflags='-b64  -bhalt:4 -G -bI:$(PERL_INC)/perl.exp -bE:$(BASEEXT).exp -bnoentry -lc -lm -L/usr/local/ppc64/lib64 -L/pro/local/lib'\n\n\nCharacteristics of this binary (from libperl):\n  Compile-time options: DEBUGGING PERL_DONT_CREATE_GVSV PERL_MALLOC_WRAP\n                        PERL_PRESERVE_IVUV PERL_USE_DEVEL USE_64_BIT_ALL\n                        USE_64_BIT_INT USE_LARGE_FILES USE_PERLIO\n                        USE_PERL_ATOF\n  Built under aix\n  Compiled at May 11 2012 16:36:53\n  @INC:\n    /pro/lib/perl5/site_perl/5.14.2/aix-64all\n    /pro/lib/perl5/site_perl/5.14.2\n    /pro/lib/perl5/5.14.2/aix-64all\n    /pro/lib/perl5/5.14.2\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Config-Perl-V/t/21_plv58.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 93;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Oct 21 2010 14:50:53\", \"Build time\");\nis ($conf->{config}{version}, \"5.8.9\", \"reconstructed \\%Config{version}\");\nis ($conf->{config}{usethreads}, \"define\", \"This was a threaded perl\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tDEBUGGING MULTIPLICITY PERL_IMPLICIT_CONTEXT\n\tPERL_MALLOC_WRAP THREADS_HAVE_PIDS USE_64_BIT_INT\n\tUSE_FAST_STDIO USE_ITHREADS USE_LARGE_FILES\n\tUSE_LONG_DOUBLE USE_PERLIO USE_REENTRANT_API\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\n__END__\nSummary of my perl5 (revision 5 version 8 subversion 9) configuration:\n  Platform:\n    osname=linux, osvers=2.6.34.7-0.4-desktop, archname=i686-linux-thread-multi-64int-ld\n    uname='linux tux09.procura.nl 2.6.34.7-0.4-desktop #1 smp preempt 2010-10-07 19:07:51 +0200 i686 i686 i386 gnulinux '\n    config_args='-Dusedevel -Dusethreads -Duseithreads -Duse64bitint -Duselongdouble -Duseperlio -des -Dusedevel -Uinstallusrbinperl -Dprefix=/media/Tux/perls-t'\n    hint=recommended, useposix=true, d_sigaction=define\n    usethreads=define use5005threads=undef useithreads=define usemultiplicity=define\n    useperlio=define d_sfio=undef uselargefiles=define usesocks=undef\n    use64bitint=define use64bitall=undef uselongdouble=define\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-D_REENTRANT -D_GNU_SOURCE -DTHREADS_HAVE_PIDS -DDEBUGGING -fno-strict-aliasing -pipe -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O2',\n    cppflags='-D_REENTRANT -D_GNU_SOURCE -DTHREADS_HAVE_PIDS -DDEBUGGING -fno-strict-aliasing -pipe -I/pro/local/include'\n    ccversion='', gccversion='4.5.0 20100604 [gcc-4_5-branch revision 160292]', gccosandvers=''\n    intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12\n    ivtype='long long', ivsize=8, nvtype='long double', nvsize=12, Off_t='off_t', lseeksize=8\n    alignbytes=4, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib'\n    libpth=/pro/local/lib /lib /usr/lib /usr/local/lib\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lpthread -lc\n    perllibs=-lnsl -ldl -lm -lcrypt -lutil -lpthread -lc\n    libc=/lib/libc-2.11.2.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.11.2'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O2 -L/pro/local/lib'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: DEBUGGING MULTIPLICITY PERL_IMPLICIT_CONTEXT\n                        PERL_MALLOC_WRAP THREADS_HAVE_PIDS USE_64_BIT_INT\n                        USE_FAST_STDIO USE_ITHREADS USE_LARGE_FILES\n                        USE_LONG_DOUBLE USE_PERLIO USE_REENTRANT_API\n  Built under linux\n  Compiled at Oct 21 2010 14:50:53\n  @INC:\n    /media/Tux/perls-t/lib/5.8.9/i686-linux-thread-multi-64int-ld\n    /media/Tux/perls-t/lib/5.8.9\n    /media/Tux/perls-t/lib/site_perl/5.8.9/i686-linux-thread-multi-64int-ld\n    /media/Tux/perls-t/lib/site_perl/5.8.9\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Config-Perl-V/t/27_plv5200.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 112;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Jun 30 2014 15:37:09\", \"Build time\");\nis ($conf->{config}{version}, \"5.20.0\", \"reconstructed \\$Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tHAS_TIMES MULTIPLICITY PERLIO_LAYERS\n\tPERL_DONT_CREATE_GVSV\n\tPERL_HASH_FUNC_ONE_AT_A_TIME_HARD\n\tPERL_IMPLICIT_CONTEXT PERL_MALLOC_WRAP\n\tPERL_NEW_COPY_ON_WRITE PERL_PRESERVE_IVUV\n\tPERL_USE_DEVEL USE_64_BIT_INT USE_ITHREADS\n\tUSE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LONG_DOUBLE\n\tUSE_PERLIO USE_PERL_ATOF USE_REENTRANT_API\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\nis_deeply ($conf->{build}{patches}, [], \"No local patches\");\n\nmy %check = (\n    alignbytes      => 4,\n    api_version     => 20,\n    bincompat5005   => \"undef\",\n    byteorder       => 12345678,\n    cc              => \"cc\",\n    cccdlflags      => \"-fPIC\",\n    ccdlflags       => \"-Wl,-E\",\n    config_args     => \"-Dusedevel -Uversiononly -Dinc_version_list=none -Duse64bitint -Dusethreads -Duseithreads -Duselongdouble -des\",\n    gccversion      => \"4.8.1 20130909 [gcc-4_8-branch revision 202388]\",\n    gnulibc_version => \"2.18\",\n    ivsize          => 8,\n    ivtype          => \"long long\",\n    ld              => \"cc\",\n    lddlflags       => \"-shared -O2 -L/pro/local/lib -fstack-protector\",\n    ldflags         => \"-L/pro/local/lib -fstack-protector\",\n    libc            => \"libc-2.18.so\",\n    lseektype       => \"off_t\",\n    osvers          => \"3.11.10-17-desktop\",\n    use64bitint     => \"define\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\n__END__\nSummary of my perl5 (revision 5 version 20 subversion 0) configuration:\n   \n  Platform:\n    osname=linux, osvers=3.11.10-17-desktop, archname=i686-linux-thread-multi-64int-ld\n    uname='linux lx09 3.11.10-17-desktop #1 smp preempt mon jun 16 15:28:13 utc 2014 (fba7c1f) i686 i686 i386 gnulinux '\n    config_args='-Dusedevel -Uversiononly -Dinc_version_list=none -Duse64bitint -Dusethreads -Duseithreads -Duselongdouble -des'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=define, usemultiplicity=define\n    use64bitint=define, use64bitall=undef, uselongdouble=define\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-D_REENTRANT -D_GNU_SOURCE -fwrapv -fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O2',\n    cppflags='-D_REENTRANT -D_GNU_SOURCE -fwrapv -fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include'\n    ccversion='', gccversion='4.8.1 20130909 [gcc-4_8-branch revision 202388]', gccosandvers=''\n    intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12\n    ivtype='long long', ivsize=8, nvtype='long double', nvsize=12, Off_t='off_t', lseeksize=8\n    alignbytes=4, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib -fstack-protector'\n    libpth=/usr/local/lib /usr/lib/gcc/i586-suse-linux/4.8/include-fixed /usr/lib/gcc/i586-suse-linux/4.8/../../../../i586-suse-linux/lib /usr/lib /pro/local/lib /lib\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lpthread -lc -lgdbm_compat\n    perllibs=-lnsl -ldl -lm -lcrypt -lutil -lpthread -lc\n    libc=libc-2.18.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.18'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O2 -L/pro/local/lib -fstack-protector'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: HAS_TIMES MULTIPLICITY PERLIO_LAYERS\n                        PERL_DONT_CREATE_GVSV\n                        PERL_HASH_FUNC_ONE_AT_A_TIME_HARD\n                        PERL_IMPLICIT_CONTEXT PERL_MALLOC_WRAP\n                        PERL_NEW_COPY_ON_WRITE PERL_PRESERVE_IVUV\n                        PERL_USE_DEVEL USE_64_BIT_INT USE_ITHREADS\n                        USE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n                        USE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LONG_DOUBLE\n                        USE_PERLIO USE_PERL_ATOF USE_REENTRANT_API\n  Built under linux\n  Compiled at Jun 30 2014 15:37:09\n  @INC:\n    /pro/lib/perl5/site_perl/5.20.0/i686-linux-thread-multi-64int-ld\n    /pro/lib/perl5/site_perl/5.20.0\n    /pro/lib/perl5/5.20.0/i686-linux-thread-multi-64int-ld\n    /pro/lib/perl5/5.20.0\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Config-Perl-V/t/23_plv512.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 94;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Dec 20 2010 12:46:00\", \"Build time\");\nis ($conf->{config}{version}, \"5.12.2\", \"reconstructed \\%Config{version}\");\nis ($conf->{config}{gccversion}, \"\", \"not built with gcc\");\nis ($conf->{config}{ccversion}, \"B3910B\", \"built with HP C-ANSI-C\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tPERL_DONT_CREATE_GVSV PERL_MALLOC_WRAP USE_64_BIT_ALL\n\tUSE_64_BIT_INT USE_LARGE_FILES USE_LONG_DOUBLE\n\tUSE_PERLIO USE_PERL_ATOF\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\n__END__\nSummary of my perl5 (revision 5 version 12 subversion 2) configuration:\n\n  Platform:\n    osname=hpux, osvers=11.31, archname=IA64.ARCHREV_0-LP64-ld\n    uname='hp-ux x2 b.11.31 u ia64 2977233888 unlimited-user license '\n    config_args='-Duse64bitall -Duselongdouble -des'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=undef, usemultiplicity=undef\n    useperlio=define, d_sfio=undef, uselargefiles=define, usesocks=undef\n    use64bitint=define, use64bitall=define, uselongdouble=define\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags =' -Ae -DPERL_DONT_CREATE_GVSV +Z -z -D_HPUX_SOURCE -Wl,+vnocompatwarnings +DD64 -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 ',\n    optimize='+O2 +Onolimit',\n    cppflags='-Aa -D__STDC_EXT__ -DPERL_DONT_CREATE_GVSV +Z -z -D_HPUX_SOURCE -Ae -DPERL_DONT_CREATE_GVSV +Z -z -D_HPUX_SOURCE -Wl,+vnocompatwarnings +DD64 -I/pro/local/include'\n    ccversion='B3910B', gccversion='', gccosandvers=''\n    intsize=4, longsize=8, ptrsize=8, doublesize=8, byteorder=87654321\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=16\n    ivtype='long', ivsize=8, nvtype='long double', nvsize=16, Off_t='off_t', lseeksize=8\n    alignbytes=16, prototype=define\n  Linker and Libraries:\n    ld='/usr/bin/ld', ldflags ='-L/pro/local/lib +DD64 -L/usr/lib/hpux64'\n    libpth=/pro/local/lib /usr/lib/hpux64 /lib /usr/lib /usr/ccs/lib /usr/local/lib\n    libs=-lcl -lpthread -lnsl -lnm -ldb -ldl -ldld -lm -lsec -lc\n    perllibs=-lcl -lpthread -lnsl -lnm -ldl -ldld -lm -lsec -lc\n    libc=/usr/lib/hpux64/libc.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version=''\n  Dynamic Linking:\n    dlsrc=dl_hpux.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E -Wl,-B,deferred '\n    cccdlflags='+Z', lddlflags='-b +vnocompatwarnings -L/pro/local/lib -L/usr/lib/hpux64'\n\n\nCharacteristics of this binary (from libperl):\n  Compile-time options: PERL_DONT_CREATE_GVSV PERL_MALLOC_WRAP USE_64_BIT_ALL\n                        USE_64_BIT_INT USE_LARGE_FILES USE_LONG_DOUBLE\n                        USE_PERLIO USE_PERL_ATOF\n  Built under hpux\n  Compiled at Dec 20 2010 12:46:00\n  @INC:\n    /pro/lib/perl5/site_perl/5.12.2/IA64.ARCHREV_0-LP64-ld\n    /pro/lib/perl5/site_perl/5.12.2\n    /pro/lib/perl5/5.12.2/IA64.ARCHREV_0-LP64-ld\n    /pro/lib/perl5/5.12.2\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Config-Perl-V/t/25_plv5162.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 151;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Aug 25 2013 01:24:40\", \"Build time\");\nis ($conf->{config}{version}, \"5.16.2\", \"reconstructed \\%Config{version}\");\nis ($conf->{config}{ccversion}, \"\", \"Using gcc. non-gcc version should not be defined\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tHAS_TIMES MULTIPLICITY PERLIO_LAYERS\n\tPERL_DONT_CREATE_GVSV PERL_IMPLICIT_CONTEXT\n\tPERL_MALLOC_WRAP PERL_PRESERVE_IVUV USE_64_BIT_ALL\n\tUSE_64_BIT_INT USE_ITHREADS USE_LARGE_FILES\n\tUSE_LOCALE USE_LOCALE_COLLATE USE_LOCALE_CTYPE\n\tUSE_LOCALE_NUMERIC USE_PERLIO USE_PERL_ATOF\n\tUSE_REENTRANT_API\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\nis_deeply ($conf->{build}{patches}, [\n    \"/Library/Perl/Updates/<version> comes before system perl directories\",\n    \"installprivlib and installarchlib points to the Updates directory\",\n    \"CVE-2013-1667 hashtable DOS fix\",\n    ], \"Local patches\");\n\nmy %check = (\n\n    archname        => \"darwin-thread-multi-2level\",\n    bincompat5005   => \"undef\",\n    config_args     => \"-ds -e -Dprefix=/usr -Dccflags=-g  -pipe  -Dldflags= -Dman3ext=3pm -Duseithreads -Duseshrplib -Dinc_version_list=none -Dcc=cc\",\n    d_sfio          => \"undef\",\n    d_sigaction     => \"define\",\n    hint            => \"recommended\",\n    myuname         => \"darwin jackson.apple.com 13.0 darwin kernel version 13.0.0: tue jul 30 20:52:22 pdt 2013; root:xnu-2422.1.53~3release_x86_64 x86_64\",\n    use64bitall     => \"define\",\n    use64bitint     => \"define\",\n    useithreads     => \"define\",\n    uselargefiles   => \"define\",\n    uselongdouble   => \"undef\",\n    usemultiplicity => \"define\",\n    usemymalloc     => \"n\",\n    useperlio       => \"define\",\n    useposix        => \"true\",\n    usesocks        => \"undef\",\n\n    alignbytes      => 8,\n    byteorder       => \"12345678\",\n    cc              => \"cc\",\n    ccflags         => \"-arch x86_64 -arch i386 -g -pipe -fno-common -DPERL_DARWIN -fno-strict-aliasing -fstack-protector -I/usr/local/include\",\n    ccversion       => \"\",\n    cppflags        => \"-g -pipe -fno-common -DPERL_DARWIN -fno-strict-aliasing -fstack-protector -I/usr/local/include\",\n    d_longdbl       => \"define\",\n    d_longlong      => \"define\",\n    doublesize      => 8,\n    gccosandvers    => \"\",\n    gccversion      => \"4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)\",\n    intsize         => 4,\n    ivsize          => 8,\n    ivtype          => \"long\",\n    longdblsize     => 16,\n    longlongsize    => 8,\n    longsize        => 8,\n    lseeksize       => 8,\n    nvsize          => 8,\n    nvtype          => \"double\",\n    lseektype       => \"off_t\",\n    optimize        => \"-Os\",\n    prototype       => \"define\",\n    ptrsize         => 8,\n\n    gnulibc_version => \"\",\n    ld              => \"cc -mmacosx-version-min=10.9\",\n    ldflags         => \"-arch x86_64 -arch i386 -fstack-protector -L/usr/local/lib\",\n    libc            => \"\",\n    libperl         => \"libperl.dylib\",\n    libpth          => \"/usr/local/lib /usr/lib\",\n    libs            => \"\",\n    perllibs        => \"\",\n    so              => \"dylib\",\n    useshrplib      => \"true\",\n\n    cccdlflags      => \"\",\n    ccdlflags       => \"\",\n    d_dlsymun       => \"undef\",\n    dlext           => \"bundle\",\n    dlsrc           => \"dl_dlopen.xs\",\n    lddlflags       => \"-arch x86_64 -arch i386 -bundle -undefined dynamic_lookup -L/usr/local/lib -fstack-protector\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\n\n__END__\nSummary of my perl5 (revision 5 version 16 subversion 2) configuration:\n   \n  Platform:\n    osname=darwin, osvers=13.0, archname=darwin-thread-multi-2level\n    uname='darwin jackson.apple.com 13.0 darwin kernel version 13.0.0: tue jul 30 20:52:22 pdt 2013; root:xnu-2422.1.53~3release_x86_64 x86_64 '\n    config_args='-ds -e -Dprefix=/usr -Dccflags=-g  -pipe  -Dldflags= -Dman3ext=3pm -Duseithreads -Duseshrplib -Dinc_version_list=none -Dcc=cc'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=define, usemultiplicity=define\n    useperlio=define, d_sfio=undef, uselargefiles=define, usesocks=undef\n    use64bitint=define, use64bitall=define, uselongdouble=undef\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-arch x86_64 -arch i386 -g -pipe -fno-common -DPERL_DARWIN -fno-strict-aliasing -fstack-protector -I/usr/local/include',\n    optimize='-Os',\n    cppflags='-g -pipe -fno-common -DPERL_DARWIN -fno-strict-aliasing -fstack-protector -I/usr/local/include'\n    ccversion='', gccversion='4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)', gccosandvers=''\n    intsize=4, longsize=8, ptrsize=8, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=16\n    ivtype='long', ivsize=8, nvtype='double', nvsize=8, Off_t='off_t', lseeksize=8\n    alignbytes=8, prototype=define\n  Linker and Libraries:\n    ld='cc -mmacosx-version-min=10.9', ldflags ='-arch x86_64 -arch i386 -fstack-protector -L/usr/local/lib'\n    libpth=/usr/local/lib /usr/lib\n    libs= \n    perllibs=\n    libc=, so=dylib, useshrplib=true, libperl=libperl.dylib\n    gnulibc_version=''\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=bundle, d_dlsymun=undef, ccdlflags=' '\n    cccdlflags=' ', lddlflags='-arch x86_64 -arch i386 -bundle -undefined dynamic_lookup -L/usr/local/lib -fstack-protector'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: HAS_TIMES MULTIPLICITY PERLIO_LAYERS\n                        PERL_DONT_CREATE_GVSV PERL_IMPLICIT_CONTEXT\n                        PERL_MALLOC_WRAP PERL_PRESERVE_IVUV USE_64_BIT_ALL\n                        USE_64_BIT_INT USE_ITHREADS USE_LARGE_FILES\n                        USE_LOCALE USE_LOCALE_COLLATE USE_LOCALE_CTYPE\n                        USE_LOCALE_NUMERIC USE_PERLIO USE_PERL_ATOF\n                        USE_REENTRANT_API\n  Locally applied patches:\n\t/Library/Perl/Updates/<version> comes before system perl directories\n\tinstallprivlib and installarchlib points to the Updates directory\n\tCVE-2013-1667 hashtable DOS fix\n  Built under darwin\n  Compiled at Aug 25 2013 01:24:40\n  %ENV:\n    PERL5LIB=\"\"\n    PERL5OPT=\"\"\n    PERL5_CPANPLUS_IS_RUNNING=\"37393\"\n    PERL5_CPAN_IS_RUNNING=\"37393\"\n  @INC:\n    /Library/Perl/5.16/darwin-thread-multi-2level\n    /Library/Perl/5.16\n    /Network/Library/Perl/5.16/darwin-thread-multi-2level\n    /Network/Library/Perl/5.16\n    /Library/Perl/Updates/5.16.2/darwin-thread-multi-2level\n    /Library/Perl/Updates/5.16.2\n    /System/Library/Perl/5.16/darwin-thread-multi-2level\n    /System/Library/Perl/5.16\n    /System/Library/Perl/Extras/5.16/darwin-thread-multi-2level\n    /System/Library/Perl/Extras/5.16\n    .\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Config-Perl-V/t/20_plv56.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 93;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"Mar 23 2010 17:34:56\", \"Build time\");\nis ($conf->{config}{\"package\"}, \"perl5\", \"reconstructed \\%Config{package}\");\nis ($conf->{config}{version}, \"5.6.2\", \"reconstructed \\%Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tDEBUGGING USE_64_BIT_INT USE_LARGE_FILES\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\n__END__\nSummary of my perl5 (revision 5.0 version 6 subversion 2) configuration:\n  Platform:\n    osname=linux, osvers=2.6.31.12-0.2-default, archname=i686-linux-64int-perlio\n    uname='linux nb09 2.6.31.12-0.2-default #1 smp 2010-03-16 21:25:39 +0100 i686 i686 i386 gnulinux '\n    config_args='-Dusedevel -Duse64bitint -Duseperlio -des -Dusedevel -Uinstallusrbinperl -Dprefix=/media/Tux/perls'\n    hint=recommended, useposix=true, d_sigaction=define\n    usethreads=undef use5005threads=undef useithreads=undef usemultiplicity=undef\n    useperlio=define d_sfio=undef uselargefiles=define usesocks=undef\n    use64bitint=define use64bitall=undef uselongdouble=undef\n  Compiler:\n    cc='cc', ccflags ='-DDEBUGGING -fno-strict-aliasing -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O2',\n    cppflags='-DDEBUGGING -fno-strict-aliasing -I/pro/local/include'\n    ccversion='', gccversion='4.4.1 [gcc-4_4-branch revision 150839]', gccosandvers=''\n    intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12\n    ivtype='long long', ivsize=8, nvtype='double', nvsize=8, Off_t='off_t', lseeksize=8\n    alignbytes=4, usemymalloc=n, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib'\n    libpth=/pro/local/lib /lib /usr/lib /usr/local/lib\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lc -lcrypt -lutil\n    perllibs=-lnsl -ldl -lm -lc -lcrypt -lutil\n    libc=/lib/libc-2.10.1.so, so=so, useshrplib=false, libperl=libperl.a\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-rdynamic'\n    cccdlflags='-fpic', lddlflags='-shared -L/pro/local/lib'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: DEBUGGING USE_64_BIT_INT USE_LARGE_FILES\n  Built under linux\n  Compiled at Mar 23 2010 17:34:56\n  @INC:\n    /media/Tux/perls/lib/5.6.2/i686-linux-64int-perlio\n    /media/Tux/perls/lib/5.6.2\n    /media/Tux/perls/lib/site_perl/5.6.2/i686-linux-64int-perlio\n    /media/Tux/perls/lib/site_perl/5.6.2\n    /media/Tux/perls/lib/site_perl\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Config-Perl-V/t/26_plv518.t": "#!/pro/bin/perl\n\nuse strict;\nuse warnings;\n\nBEGIN {\n    use Test::More;\n    my $tests = 112;\n    unless ($ENV{PERL_CORE}) {\n\trequire Test::NoWarnings;\n\tTest::NoWarnings->import ();\n\t$tests++;\n\t}\n\n    plan tests => $tests;\n    }\n\nuse Config::Perl::V;\n\nok (my $conf = Config::Perl::V::plv2hash (<DATA>), \"Read perl -v block\");\nok (exists $conf->{$_}, \"Has $_ entry\") for qw( build environment config inc );\n\nis ($conf->{build}{osname}, $conf->{config}{osname}, \"osname\");\nis ($conf->{build}{stamp}, \"May 18 2013 17:34:20\", \"Build time\");\nis ($conf->{config}{version}, \"5.18.0\", \"reconstructed \\$Config{version}\");\n\nmy $opt = Config::Perl::V::plv2hash (\"\")->{build}{options};\nforeach my $o (sort qw(\n\tHAS_TIMES PERLIO_LAYERS PERL_DONT_CREATE_GVSV\n\tPERL_HASH_FUNC_ONE_AT_A_TIME_HARD PERL_MALLOC_WRAP\n\tPERL_PRESERVE_IVUV PERL_SAWAMPERSAND USE_64_BIT_INT\n\tUSE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n\tUSE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LONG_DOUBLE\n\tUSE_PERLIO USE_PERL_ATOF\n\t)) {\n    is ($conf->{build}{options}{$o}, 1, \"Runtime option $o set\");\n    delete $opt->{$o};\n    }\nforeach my $o (sort keys %$opt) {\n    is ($conf->{build}{options}{$o}, 0, \"Runtime option $o unset\");\n    }\n\nis_deeply ($conf->{build}{patches}, [], \"No local patches\");\n\nmy %check = (\n    alignbytes      => 4,\n    api_version     => 18,\n    bincompat5005   => \"undef\",\n    byteorder       => 12345678,\n    cc              => \"cc\",\n    cccdlflags      => \"-fPIC\",\n    ccdlflags       => \"-Wl,-E\",\n    config_args     => \"-Duse64bitint -Duselongdouble -des\",\n    gccversion      => \"4.7.2 20130108 [gcc-4_7-branch revision 195012]\",\n    gnulibc_version => \"2.17\",\n    ivsize          => 8,\n    ivtype          => \"long long\",\n    ld              => \"cc\",\n    lddlflags       => \"-shared -O3 -L/pro/local/lib -fstack-protector\",\n    ldflags         => \"-L/pro/local/lib -fstack-protector\",\n    libc            => \"/lib/libc-2.17.so\",\n    lseektype       => \"off_t\",\n    osvers          => \"3.7.10-1.4-desktop\",\n    use64bitint     => \"define\",\n    );\nis ($conf->{config}{$_}, $check{$_}, \"reconstructed \\$Config{$_}\") for sort keys %check;\n\n__END__\nSummary of my perl5 (revision 5 version 18 subversion 0) configuration:\n   \n  Platform:\n    osname=linux, osvers=3.7.10-1.4-desktop, archname=i686-linux-64int-ld\n    uname='linux test 3.7.10-1.4-desktop #1 smp preempt fri apr 19 12:06:34 utc 2013 (8ef74f8) i686 i686 i386 gnulinux '\n    config_args='-Duse64bitint -Duselongdouble -des'\n    hint=recommended, useposix=true, d_sigaction=define\n    useithreads=undef, usemultiplicity=undef\n    useperlio=define, d_sfio=undef, uselargefiles=define, usesocks=undef\n    use64bitint=define, use64bitall=undef, uselongdouble=define\n    usemymalloc=n, bincompat5005=undef\n  Compiler:\n    cc='cc', ccflags ='-fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64',\n    optimize='-O3',\n    cppflags='-fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include'\n    ccversion='', gccversion='4.7.2 20130108 [gcc-4_7-branch revision 195012]', gccosandvers=''\n    intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678\n    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=12\n    ivtype='long long', ivsize=8, nvtype='long double', nvsize=12, Off_t='off_t', lseeksize=8\n    alignbytes=4, prototype=define\n  Linker and Libraries:\n    ld='cc', ldflags ='-L/pro/local/lib -fstack-protector'\n    libpth=/pro/local/lib /lib /usr/lib /usr/local/lib\n    libs=-lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat\n    perllibs=-lnsl -ldl -lm -lcrypt -lutil -lc\n    libc=/lib/libc-2.17.so, so=so, useshrplib=false, libperl=libperl.a\n    gnulibc_version='2.17'\n  Dynamic Linking:\n    dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags='-Wl,-E'\n    cccdlflags='-fPIC', lddlflags='-shared -O3 -L/pro/local/lib -fstack-protector'\n\n\nCharacteristics of this binary (from libperl): \n  Compile-time options: HAS_TIMES PERLIO_LAYERS PERL_DONT_CREATE_GVSV\n                        PERL_HASH_FUNC_ONE_AT_A_TIME_HARD PERL_MALLOC_WRAP\n                        PERL_PRESERVE_IVUV PERL_SAWAMPERSAND USE_64_BIT_INT\n                        USE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE\n                        USE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_LONG_DOUBLE\n                        USE_PERLIO USE_PERL_ATOF\n  Built under linux\n  Compiled at May 18 2013 17:34:20\n  @INC:\n    /pro/lib/perl5/site_perl/5.18.0/i686-linux-64int-ld\n    /pro/lib/perl5/site_perl/5.18.0\n    /pro/lib/perl5/5.18.0/i686-linux-64int-ld\n    /pro/lib/perl5/5.18.0\n    .\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MakeMaker.pm": "# $Id$\npackage ExtUtils::MakeMaker;\n\nuse strict;\n\nBEGIN {require 5.006;}\n\nrequire Exporter;\nuse ExtUtils::MakeMaker::Config;\nuse ExtUtils::MakeMaker::version; # ensure we always have our fake version.pm\nuse Carp;\nuse File::Path;\nmy $CAN_DECODE = eval { require ExtUtils::MakeMaker::Locale; }; # 2 birds, 1 stone\neval { ExtUtils::MakeMaker::Locale::reinit('UTF-8') }\n  if $CAN_DECODE and $ExtUtils::MakeMaker::Locale::ENCODING_LOCALE eq 'US-ASCII';\n\nour $Verbose = 0;       # exported\nour @Parent;            # needs to be localized\nour @Get_from_Config;   # referenced by MM_Unix\nour @MM_Sections;\nour @Overridable;\nmy @Prepend_parent;\nmy %Recognized_Att_Keys;\nour %macro_fsentity; # whether a macro is a filesystem name\nour %macro_dep; # whether a macro is a dependency\n\nour $VERSION = '7.04_01';\n$VERSION = eval $VERSION;  ## no critic [BuiltinFunctions::ProhibitStringyEval]\n\n# Emulate something resembling CVS $Revision$\n(our $Revision = $VERSION) =~ s{_}{};\n$Revision = int $Revision * 10000;\n\nour $Filename = __FILE__;   # referenced outside MakeMaker\n\nour @ISA = qw(Exporter);\nour @EXPORT    = qw(&WriteMakefile $Verbose &prompt);\nour @EXPORT_OK = qw($VERSION &neatvalue &mkbootstrap &mksymlists\n                    &WriteEmptyMakefile);\n\n# These will go away once the last of the Win32 & VMS specific code is\n# purged.\nmy $Is_VMS     = $^O eq 'VMS';\nmy $Is_Win32   = $^O eq 'MSWin32';\nmy $UNDER_CORE = $ENV{PERL_CORE};\n\nfull_setup();\n\nrequire ExtUtils::MM;  # Things like CPAN assume loading ExtUtils::MakeMaker\n                       # will give them MM.\n\nrequire ExtUtils::MY;  # XXX pre-5.8 versions of ExtUtils::Embed expect\n                       # loading ExtUtils::MakeMaker will give them MY.\n                       # This will go when Embed is its own CPAN module.\n\n\nsub WriteMakefile {\n    croak \"WriteMakefile: Need even number of args\" if @_ % 2;\n\n    require ExtUtils::MY;\n    my %att = @_;\n\n    _convert_compat_attrs(\\%att);\n\n    _verify_att(\\%att);\n\n    my $mm = MM->new(\\%att);\n    $mm->flush;\n\n    return $mm;\n}\n\n\n# Basic signatures of the attributes WriteMakefile takes.  Each is the\n# reference type.  Empty value indicate it takes a non-reference\n# scalar.\nmy %Att_Sigs;\nmy %Special_Sigs = (\n AUTHOR             => 'ARRAY',\n C                  => 'ARRAY',\n CONFIG             => 'ARRAY',\n CONFIGURE          => 'CODE',\n DIR                => 'ARRAY',\n DL_FUNCS           => 'HASH',\n DL_VARS            => 'ARRAY',\n EXCLUDE_EXT        => 'ARRAY',\n EXE_FILES          => 'ARRAY',\n FUNCLIST           => 'ARRAY',\n H                  => 'ARRAY',\n IMPORTS            => 'HASH',\n INCLUDE_EXT        => 'ARRAY',\n LIBS               => ['ARRAY',''],\n MAN1PODS           => 'HASH',\n MAN3PODS           => 'HASH',\n META_ADD           => 'HASH',\n META_MERGE         => 'HASH',\n OBJECT             => ['ARRAY', ''],\n PL_FILES           => 'HASH',\n PM                 => 'HASH',\n PMLIBDIRS          => 'ARRAY',\n PMLIBPARENTDIRS    => 'ARRAY',\n PREREQ_PM          => 'HASH',\n BUILD_REQUIRES     => 'HASH',\n CONFIGURE_REQUIRES => 'HASH',\n TEST_REQUIRES      => 'HASH',\n SKIP               => 'ARRAY',\n TYPEMAPS           => 'ARRAY',\n XS                 => 'HASH',\n VERSION            => ['version',''],\n _KEEP_AFTER_FLUSH  => '',\n\n clean      => 'HASH',\n depend     => 'HASH',\n dist       => 'HASH',\n dynamic_lib=> 'HASH',\n linkext    => 'HASH',\n macro      => 'HASH',\n postamble  => 'HASH',\n realclean  => 'HASH',\n test       => 'HASH',\n tool_autosplit => 'HASH',\n);\n\n@Att_Sigs{keys %Recognized_Att_Keys} = ('') x keys %Recognized_Att_Keys;\n@Att_Sigs{keys %Special_Sigs} = values %Special_Sigs;\n\nsub _convert_compat_attrs { #result of running several times should be same\n    my($att) = @_;\n    if (exists $att->{AUTHOR}) {\n        if ($att->{AUTHOR}) {\n            if (!ref($att->{AUTHOR})) {\n                my $t = $att->{AUTHOR};\n                $att->{AUTHOR} = [$t];\n            }\n        } else {\n                $att->{AUTHOR} = [];\n        }\n    }\n}\n\nsub _verify_att {\n    my($att) = @_;\n\n    while( my($key, $val) = each %$att ) {\n        my $sig = $Att_Sigs{$key};\n        unless( defined $sig ) {\n            warn \"WARNING: $key is not a known parameter.\\n\";\n            next;\n        }\n\n        my @sigs   = ref $sig ? @$sig : $sig;\n        my $given  = ref $val;\n        unless( grep { _is_of_type($val, $_) } @sigs ) {\n            my $takes = join \" or \", map { _format_att($_) } @sigs;\n\n            my $has = _format_att($given);\n            warn \"WARNING: $key takes a $takes not a $has.\\n\".\n                 \"         Please inform the author.\\n\";\n        }\n    }\n}\n\n\n# Check if a given thing is a reference or instance of $type\nsub _is_of_type {\n    my($thing, $type) = @_;\n\n    return 1 if ref $thing eq $type;\n\n    local $SIG{__DIE__};\n    return 1 if eval{ $thing->isa($type) };\n\n    return 0;\n}\n\n\nsub _format_att {\n    my $given = shift;\n\n    return $given eq ''        ? \"string/number\"\n         : uc $given eq $given ? \"$given reference\"\n         :                       \"$given object\"\n         ;\n}\n\n\nsub prompt ($;$) {  ## no critic\n    my($mess, $def) = @_;\n    confess(\"prompt function called without an argument\")\n        unless defined $mess;\n\n    my $isa_tty = -t STDIN && (-t STDOUT || !(-f STDOUT || -c STDOUT)) ;\n\n    my $dispdef = defined $def ? \"[$def] \" : \" \";\n    $def = defined $def ? $def : \"\";\n\n    local $|=1;\n    local $\\;\n    print \"$mess $dispdef\";\n\n    my $ans;\n    if ($ENV{PERL_MM_USE_DEFAULT} || (!$isa_tty && eof STDIN)) {\n        print \"$def\\n\";\n    }\n    else {\n        $ans = <STDIN>;\n        if( defined $ans ) {\n            $ans =~ s{\\015?\\012$}{};\n        }\n        else { # user hit ctrl-D\n            print \"\\n\";\n        }\n    }\n\n    return (!defined $ans || $ans eq '') ? $def : $ans;\n}\n\nsub eval_in_subdirs {\n    my($self) = @_;\n    use Cwd qw(cwd abs_path);\n    my $pwd = cwd() || die \"Can't figure out your cwd!\";\n\n    local @INC = map eval {abs_path($_) if -e} || $_, @INC;\n    push @INC, '.';     # '.' has to always be at the end of @INC\n\n    foreach my $dir (@{$self->{DIR}}){\n        my($abs) = $self->catdir($pwd,$dir);\n        eval { $self->eval_in_x($abs); };\n        last if $@;\n    }\n    chdir $pwd;\n    die $@ if $@;\n}\n\nsub eval_in_x {\n    my($self,$dir) = @_;\n    chdir $dir or carp(\"Couldn't change to directory $dir: $!\");\n\n    {\n        package main;\n        do './Makefile.PL';\n    };\n    if ($@) {\n#         if ($@ =~ /prerequisites/) {\n#             die \"MakeMaker WARNING: $@\";\n#         } else {\n#             warn \"WARNING from evaluation of $dir/Makefile.PL: $@\";\n#         }\n        die \"ERROR from evaluation of $dir/Makefile.PL: $@\";\n    }\n}\n\n\n# package name for the classes into which the first object will be blessed\nmy $PACKNAME = 'PACK000';\n\nsub full_setup {\n    $Verbose ||= 0;\n\n    my @dep_macros = qw/\n    PERL_INCDEP        PERL_ARCHLIBDEP     PERL_ARCHIVEDEP\n    /;\n\n    my @fs_macros = qw/\n    FULLPERL XSUBPPDIR\n\n    INST_ARCHLIB INST_SCRIPT INST_BIN INST_LIB INST_MAN1DIR INST_MAN3DIR\n    INSTALLDIRS\n    DESTDIR PREFIX INSTALL_BASE\n    PERLPREFIX      SITEPREFIX      VENDORPREFIX\n    INSTALLPRIVLIB  INSTALLSITELIB  INSTALLVENDORLIB\n    INSTALLARCHLIB  INSTALLSITEARCH INSTALLVENDORARCH\n    INSTALLBIN      INSTALLSITEBIN  INSTALLVENDORBIN\n    INSTALLMAN1DIR          INSTALLMAN3DIR\n    INSTALLSITEMAN1DIR      INSTALLSITEMAN3DIR\n    INSTALLVENDORMAN1DIR    INSTALLVENDORMAN3DIR\n    INSTALLSCRIPT   INSTALLSITESCRIPT  INSTALLVENDORSCRIPT\n    PERL_LIB        PERL_ARCHLIB\n    SITELIBEXP      SITEARCHEXP\n\n    MAKE LIBPERL_A LIB PERL_SRC PERL_INC\n    PPM_INSTALL_EXEC PPM_UNINSTALL_EXEC\n    PPM_INSTALL_SCRIPT PPM_UNINSTALL_SCRIPT\n    /;\n\n    my @attrib_help = qw/\n\n    AUTHOR ABSTRACT ABSTRACT_FROM BINARY_LOCATION\n    C CAPI CCFLAGS CONFIG CONFIGURE DEFINE DIR DISTNAME DISTVNAME\n    DL_FUNCS DL_VARS\n    EXCLUDE_EXT EXE_FILES FIRST_MAKEFILE\n    FULLPERLRUN FULLPERLRUNINST\n    FUNCLIST H IMPORTS\n\n    INC INCLUDE_EXT LDFROM LIBS LICENSE\n    LINKTYPE MAKEAPERL MAKEFILE MAKEFILE_OLD MAN1PODS MAN3PODS MAP_TARGET\n    META_ADD META_MERGE MIN_PERL_VERSION BUILD_REQUIRES CONFIGURE_REQUIRES\n    MYEXTLIB NAME NEEDS_LINKING NOECHO NO_META NO_MYMETA NO_PACKLIST NO_PERLLOCAL\n    NORECURS NO_VC OBJECT OPTIMIZE PERL_MALLOC_OK PERL PERLMAINCC PERLRUN\n    PERLRUNINST PERL_CORE\n    PERM_DIR PERM_RW PERM_RWX MAGICXS\n    PL_FILES PM PM_FILTER PMLIBDIRS PMLIBPARENTDIRS POLLUTE\n    PREREQ_FATAL PREREQ_PM PREREQ_PRINT PRINT_PREREQ\n    SIGN SKIP TEST_REQUIRES TYPEMAPS UNINST VERSION VERSION_FROM XS XSOPT XSPROTOARG\n    XS_VERSION clean depend dist dynamic_lib linkext macro realclean\n    tool_autosplit\n\n    MAN1EXT MAN3EXT\n\n    MACPERL_SRC MACPERL_LIB MACLIBS_68K MACLIBS_PPC MACLIBS_SC MACLIBS_MRC\n    MACLIBS_ALL_68K MACLIBS_ALL_PPC MACLIBS_SHARED\n        /;\n    push @attrib_help, @fs_macros;\n    @macro_fsentity{@fs_macros, @dep_macros} = (1) x (@fs_macros+@dep_macros);\n    @macro_dep{@dep_macros} = (1) x @dep_macros;\n\n    # IMPORTS is used under OS/2 and Win32\n\n    # @Overridable is close to @MM_Sections but not identical.  The\n    # order is important. Many subroutines declare macros. These\n    # depend on each other. Let's try to collect the macros up front,\n    # then pasthru, then the rules.\n\n    # MM_Sections are the sections we have to call explicitly\n    # in Overridable we have subroutines that are used indirectly\n\n\n    @MM_Sections =\n        qw(\n\n post_initialize const_config constants platform_constants\n tool_autosplit tool_xsubpp tools_other\n\n makemakerdflt\n\n dist macro depend cflags const_loadlibs const_cccmd\n post_constants\n\n pasthru\n\n special_targets\n c_o xs_c xs_o\n top_targets blibdirs linkext dlsyms dynamic_bs dynamic\n dynamic_lib static static_lib manifypods processPL\n installbin subdirs\n clean_subdirs clean realclean_subdirs realclean\n metafile signature\n dist_basics dist_core distdir dist_test dist_ci distmeta distsignature\n install force perldepend makefile staticmake test ppd\n\n          ); # loses section ordering\n\n    @Overridable = @MM_Sections;\n    push @Overridable, qw[\n\n libscan makeaperl needs_linking\n subdir_x test_via_harness test_via_script\n\n init_VERSION init_dist init_INST init_INSTALL init_DEST init_dirscan\n init_PM init_MANPODS init_xs init_PERL init_DIRFILESEP init_linker\n                         ];\n\n    push @MM_Sections, qw[\n\n pm_to_blib selfdocument\n\n                         ];\n\n    # Postamble needs to be the last that was always the case\n    push @MM_Sections, \"postamble\";\n    push @Overridable, \"postamble\";\n\n    # All sections are valid keys.\n    @Recognized_Att_Keys{@MM_Sections} = (1) x @MM_Sections;\n\n    # we will use all these variables in the Makefile\n    @Get_from_Config =\n        qw(\n           ar cc cccdlflags ccdlflags dlext dlsrc exe_ext full_ar ld\n           lddlflags ldflags libc lib_ext obj_ext osname osvers ranlib\n           sitelibexp sitearchexp so\n          );\n\n    # 5.5.3 doesn't have any concept of vendor libs\n    push @Get_from_Config, qw( vendorarchexp vendorlibexp ) if $] >= 5.006;\n\n    foreach my $item (@attrib_help){\n        $Recognized_Att_Keys{$item} = 1;\n    }\n    foreach my $item (@Get_from_Config) {\n        $Recognized_Att_Keys{uc $item} = $Config{$item};\n        print \"Attribute '\\U$item\\E' => '$Config{$item}'\\n\"\n            if ($Verbose >= 2);\n    }\n\n    #\n    # When we eval a Makefile.PL in a subdirectory, that one will ask\n    # us (the parent) for the values and will prepend \"..\", so that\n    # all files to be installed end up below OUR ./blib\n    #\n    @Prepend_parent = qw(\n           INST_BIN INST_LIB INST_ARCHLIB INST_SCRIPT\n           MAP_TARGET INST_MAN1DIR INST_MAN3DIR PERL_SRC\n           PERL FULLPERL\n    );\n}\n\nsub new {\n    my($class,$self) = @_;\n    my($key);\n\n    _convert_compat_attrs($self) if defined $self && $self;\n\n    # Store the original args passed to WriteMakefile()\n    foreach my $k (keys %$self) {\n        $self->{ARGS}{$k} = $self->{$k};\n    }\n\n    $self = {} unless defined $self;\n\n    # Temporarily bless it into MM so it can be used as an\n    # object.  It will be blessed into a temp package later.\n    bless $self, \"MM\";\n\n    # Cleanup all the module requirement bits\n    for my $key (qw(PREREQ_PM BUILD_REQUIRES CONFIGURE_REQUIRES TEST_REQUIRES)) {\n        $self->{$key}      ||= {};\n        $self->clean_versions( $key );\n    }\n\n\n    if (\"@ARGV\" =~ /\\bPREREQ_PRINT\\b/) {\n        $self->_PREREQ_PRINT;\n    }\n\n    # PRINT_PREREQ is RedHatism.\n    if (\"@ARGV\" =~ /\\bPRINT_PREREQ\\b/) {\n        $self->_PRINT_PREREQ;\n   }\n\n    print \"MakeMaker (v$VERSION)\\n\" if $Verbose;\n    if (-f \"MANIFEST\" && ! -f \"Makefile\" && ! $ENV{PERL_CORE}){\n        check_manifest();\n    }\n\n    check_hints($self);\n\n    if ( defined $self->{MIN_PERL_VERSION}\n          && $self->{MIN_PERL_VERSION} !~ /^v?[\\d_\\.]+$/ ) {\n      require version;\n      my $normal = eval {\n        local $SIG{__WARN__} = sub {\n            # simulate \"use warnings FATAL => 'all'\" for vintage perls\n            die @_;\n        };\n        version->new( $self->{MIN_PERL_VERSION} )\n      };\n      $self->{MIN_PERL_VERSION} = $normal if defined $normal && !$@;\n    }\n\n    # Translate X.Y.Z to X.00Y00Z\n    if( defined $self->{MIN_PERL_VERSION} ) {\n        $self->{MIN_PERL_VERSION} =~ s{ ^v? (\\d+) \\. (\\d+) \\. (\\d+) $ }\n                                      {sprintf \"%d.%03d%03d\", $1, $2, $3}ex;\n    }\n\n    my $perl_version_ok = eval {\n        local $SIG{__WARN__} = sub {\n            # simulate \"use warnings FATAL => 'all'\" for vintage perls\n            die @_;\n        };\n        !$self->{MIN_PERL_VERSION} or $self->{MIN_PERL_VERSION} <= $]\n    };\n    if (!$perl_version_ok) {\n        if (!defined $perl_version_ok) {\n            die <<'END';\nWarning: MIN_PERL_VERSION is not in a recognized format.\nRecommended is a quoted numerical value like '5.005' or '5.008001'.\nEND\n        }\n        elsif ($self->{PREREQ_FATAL}) {\n            die sprintf <<\"END\", $self->{MIN_PERL_VERSION}, $];\nMakeMaker FATAL: perl version too low for this distribution.\nRequired is %s. We run %s.\nEND\n        }\n        else {\n            warn sprintf\n                \"Warning: Perl version %s or higher required. We run %s.\\n\",\n                $self->{MIN_PERL_VERSION}, $];\n        }\n    }\n\n    my %configure_att;         # record &{$self->{CONFIGURE}} attributes\n    my(%initial_att) = %$self; # record initial attributes\n\n    my(%unsatisfied) = ();\n    my $prereqs = $self->_all_prereqs;\n    foreach my $prereq (sort keys %$prereqs) {\n        my $required_version = $prereqs->{$prereq};\n\n        my $pr_version = 0;\n        my $installed_file;\n\n        if ( $prereq eq 'perl' ) {\n          if ( defined $required_version && $required_version =~ /^v?[\\d_\\.]+$/\n               || $required_version !~ /^v?[\\d_\\.]+$/ ) {\n            require version;\n            my $normal = eval { version->new( $required_version ) };\n            $required_version = $normal if defined $normal;\n          }\n          $installed_file = $prereq;\n          $pr_version = $];\n        }\n        else {\n          $installed_file = MM->_installed_file_for_module($prereq);\n          $pr_version = MM->parse_version($installed_file) if $installed_file;\n          $pr_version = 0 if $pr_version eq 'undef';\n        }\n\n        # convert X.Y_Z alpha version #s to X.YZ for easier comparisons\n        $pr_version =~ s/(\\d+)\\.(\\d+)_(\\d+)/$1.$2$3/;\n\n        if (!$installed_file) {\n            warn sprintf \"Warning: prerequisite %s %s not found.\\n\",\n              $prereq, $required_version\n                   unless $self->{PREREQ_FATAL}\n                       or $ENV{PERL_CORE};\n\n            $unsatisfied{$prereq} = 'not installed';\n        }\n        elsif ($pr_version < $required_version ){\n            warn sprintf \"Warning: prerequisite %s %s not found. We have %s.\\n\",\n              $prereq, $required_version, ($pr_version || 'unknown version')\n                  unless $self->{PREREQ_FATAL}\n                       or $ENV{PERL_CORE};\n\n            $unsatisfied{$prereq} = $required_version ? $required_version : 'unknown version' ;\n        }\n    }\n\n    if (%unsatisfied && $self->{PREREQ_FATAL}){\n        my $failedprereqs = join \"\\n\", map {\"    $_ $unsatisfied{$_}\"}\n                            sort { $a cmp $b } keys %unsatisfied;\n        die <<\"END\";\nMakeMaker FATAL: prerequisites not found.\n$failedprereqs\n\nPlease install these modules first and rerun 'perl Makefile.PL'.\nEND\n    }\n\n    if (defined $self->{CONFIGURE}) {\n        if (ref $self->{CONFIGURE} eq 'CODE') {\n            %configure_att = %{&{$self->{CONFIGURE}}};\n            _convert_compat_attrs(\\%configure_att);\n            $self = { %$self, %configure_att };\n        } else {\n            croak \"Attribute 'CONFIGURE' to WriteMakefile() not a code reference\\n\";\n        }\n    }\n\n    # This is for old Makefiles written pre 5.00, will go away\n    if ( Carp::longmess(\"\") =~ /runsubdirpl/s ){\n        carp(\"WARNING: Please rerun 'perl Makefile.PL' to regenerate your Makefiles\\n\");\n    }\n\n    my $newclass = ++$PACKNAME;\n    local @Parent = @Parent;    # Protect against non-local exits\n    {\n        print \"Blessing Object into class [$newclass]\\n\" if $Verbose>=2;\n        mv_all_methods(\"MY\",$newclass);\n        bless $self, $newclass;\n        push @Parent, $self;\n        require ExtUtils::MY;\n\n        no strict 'refs';   ## no critic;\n        @{\"$newclass\\:\\:ISA\"} = 'MM';\n    }\n\n    if (defined $Parent[-2]){\n        $self->{PARENT} = $Parent[-2];\n        for my $key (@Prepend_parent) {\n            next unless defined $self->{PARENT}{$key};\n\n            # Don't stomp on WriteMakefile() args.\n            next if defined $self->{ARGS}{$key} and\n                    $self->{ARGS}{$key} eq $self->{$key};\n\n            $self->{$key} = $self->{PARENT}{$key};\n\n            if ($Is_VMS && $key =~ /PERL$/) {\n                # PERL or FULLPERL will be a command verb or even a\n                # command with an argument instead of a full file\n                # specification under VMS.  So, don't turn the command\n                # into a filespec, but do add a level to the path of\n                # the argument if not already absolute.\n                my @cmd = split /\\s+/, $self->{$key};\n                $cmd[1] = $self->catfile('[-]',$cmd[1])\n                  unless (@cmd < 2) || $self->file_name_is_absolute($cmd[1]);\n                $self->{$key} = join(' ', @cmd);\n            } else {\n                my $value = $self->{$key};\n                # not going to test in FS so only stripping start\n                $value =~ s/^\"// if $key =~ /PERL$/;\n                $value = $self->catdir(\"..\", $value)\n                  unless $self->file_name_is_absolute($value);\n                $value = qq{\"$value} if $key =~ /PERL$/;\n                $self->{$key} = $value;\n            }\n        }\n        if ($self->{PARENT}) {\n            $self->{PARENT}->{CHILDREN}->{$newclass} = $self;\n            foreach my $opt (qw(POLLUTE PERL_CORE LINKTYPE LD OPTIMIZE)) {\n                if (exists $self->{PARENT}->{$opt}\n                    and not exists $self->{$opt})\n                    {\n                        # inherit, but only if already unspecified\n                        $self->{$opt} = $self->{PARENT}->{$opt};\n                    }\n            }\n        }\n        my @fm = grep /^FIRST_MAKEFILE=/, @ARGV;\n        parse_args($self,@fm) if @fm;\n    }\n    else {\n        parse_args($self, _shellwords($ENV{PERL_MM_OPT} || ''),@ARGV);\n    }\n\n    # RT#91540 PREREQ_FATAL not recognized on command line\n    if (%unsatisfied && $self->{PREREQ_FATAL}){\n        my $failedprereqs = join \"\\n\", map {\"    $_ $unsatisfied{$_}\"}\n                            sort { $a cmp $b } keys %unsatisfied;\n        die <<\"END\";\nMakeMaker FATAL: prerequisites not found.\n$failedprereqs\n\nPlease install these modules first and rerun 'perl Makefile.PL'.\nEND\n    }\n\n    $self->{NAME} ||= $self->guess_name;\n\n    warn \"Warning: NAME must be a package name\\n\"\n      unless $self->{NAME} =~ m!^[A-Z_a-z][0-9A-Z_a-z]*(?:::[0-9A-Z_a-z]+)*$!;\n\n    ($self->{NAME_SYM} = $self->{NAME}) =~ s/\\W+/_/g;\n\n    $self->init_MAKE;\n    $self->init_main;\n    $self->init_VERSION;\n    $self->init_dist;\n    $self->init_INST;\n    $self->init_INSTALL;\n    $self->init_DEST;\n    $self->init_dirscan;\n    $self->init_PM;\n    $self->init_MANPODS;\n    $self->init_xs;\n    $self->init_PERL;\n    $self->init_DIRFILESEP;\n    $self->init_linker;\n    $self->init_ABSTRACT;\n\n    $self->arch_check(\n        $INC{'Config.pm'},\n        $self->catfile($Config{'archlibexp'}, \"Config.pm\")\n    );\n\n    $self->init_tools();\n    $self->init_others();\n    $self->init_platform();\n    $self->init_PERM();\n    my($argv) = neatvalue(\\@ARGV);\n    $argv =~ s/^\\[/(/;\n    $argv =~ s/\\]$/)/;\n\n    push @{$self->{RESULT}}, <<END;\n# This Makefile is for the $self->{NAME} extension to perl.\n#\n# It was generated automatically by MakeMaker version\n# $VERSION (Revision: $Revision) from the contents of\n# Makefile.PL. Don't edit this file, edit Makefile.PL instead.\n#\n#       ANY CHANGES MADE HERE WILL BE LOST!\n#\n#   MakeMaker ARGV: $argv\n#\nEND\n\n    push @{$self->{RESULT}}, $self->_MakeMaker_Parameters_section(\\%initial_att);\n\n    if (defined $self->{CONFIGURE}) {\n       push @{$self->{RESULT}}, <<END;\n\n#   MakeMaker 'CONFIGURE' Parameters:\nEND\n        if (scalar(keys %configure_att) > 0) {\n            foreach my $key (sort keys %configure_att){\n               next if $key eq 'ARGS';\n               my($v) = neatvalue($configure_att{$key});\n               $v =~ s/(CODE|HASH|ARRAY|SCALAR)\\([\\dxa-f]+\\)/$1\\(...\\)/;\n               $v =~ tr/\\n/ /s;\n               push @{$self->{RESULT}}, \"#     $key => $v\";\n            }\n        }\n        else\n        {\n           push @{$self->{RESULT}}, \"# no values returned\";\n        }\n        undef %configure_att;  # free memory\n    }\n\n    # turn the SKIP array into a SKIPHASH hash\n    for my $skip (@{$self->{SKIP} || []}) {\n        $self->{SKIPHASH}{$skip} = 1;\n    }\n    delete $self->{SKIP}; # free memory\n\n    if ($self->{PARENT}) {\n        for (qw/install dist dist_basics dist_core distdir dist_test dist_ci/) {\n            $self->{SKIPHASH}{$_} = 1;\n        }\n    }\n\n    # We run all the subdirectories now. They don't have much to query\n    # from the parent, but the parent has to query them: if they need linking!\n    unless ($self->{NORECURS}) {\n        $self->eval_in_subdirs if @{$self->{DIR}};\n    }\n\n    foreach my $section ( @MM_Sections ){\n        # Support for new foo_target() methods.\n        my $method = $section;\n        $method .= '_target' unless $self->can($method);\n\n        print \"Processing Makefile '$section' section\\n\" if ($Verbose >= 2);\n        my($skipit) = $self->skipcheck($section);\n        if ($skipit){\n            push @{$self->{RESULT}}, \"\\n# --- MakeMaker $section section $skipit.\";\n        } else {\n            my(%a) = %{$self->{$section} || {}};\n            push @{$self->{RESULT}}, \"\\n# --- MakeMaker $section section:\";\n            push @{$self->{RESULT}}, \"# \" . join \", \", %a if $Verbose && %a;\n            push @{$self->{RESULT}}, $self->maketext_filter(\n                $self->$method( %a )\n            );\n        }\n    }\n\n    push @{$self->{RESULT}}, \"\\n# End.\";\n\n    $self;\n}\n\nsub WriteEmptyMakefile {\n    croak \"WriteEmptyMakefile: Need an even number of args\" if @_ % 2;\n\n    my %att = @_;\n    my $self = MM->new(\\%att);\n\n    my $new = $self->{MAKEFILE};\n    my $old = $self->{MAKEFILE_OLD};\n    if (-f $old) {\n        _unlink($old) or warn \"unlink $old: $!\";\n    }\n    if ( -f $new ) {\n        _rename($new, $old) or warn \"rename $new => $old: $!\"\n    }\n    open my $mfh, '>', $new or die \"open $new for write: $!\";\n    print $mfh <<'EOP';\nall :\n\nclean :\n\ninstall :\n\nmakemakerdflt :\n\ntest :\n\nEOP\n    close $mfh or die \"close $new for write: $!\";\n}\n\n\n=begin private\n\n=head3 _installed_file_for_module\n\n  my $file = MM->_installed_file_for_module($module);\n\nReturn the first installed .pm $file associated with the $module.  The\none which will show up when you C<use $module>.\n\n$module is something like \"strict\" or \"Test::More\".\n\n=end private\n\n=cut\n\nsub _installed_file_for_module {\n    my $class  = shift;\n    my $prereq = shift;\n\n    my $file = \"$prereq.pm\";\n    $file =~ s{::}{/}g;\n\n    my $path;\n    for my $dir (@INC) {\n        my $tmp = File::Spec->catfile($dir, $file);\n        if ( -r $tmp ) {\n            $path = $tmp;\n            last;\n        }\n    }\n\n    return $path;\n}\n\n\n# Extracted from MakeMaker->new so we can test it\nsub _MakeMaker_Parameters_section {\n    my $self = shift;\n    my $att  = shift;\n\n    my @result = <<'END';\n#   MakeMaker Parameters:\nEND\n\n    foreach my $key (sort keys %$att){\n        next if $key eq 'ARGS';\n        my $v;\n        if ($key eq 'PREREQ_PM') {\n            # CPAN.pm takes prereqs from this field in 'Makefile'\n            # and does not know about BUILD_REQUIRES\n            $v = neatvalue({\n                %{ $att->{PREREQ_PM} || {} },\n                %{ $att->{BUILD_REQUIRES} || {} },\n                %{ $att->{TEST_REQUIRES} || {} },\n            });\n        } else {\n            $v = neatvalue($att->{$key});\n        }\n\n        $v =~ s/(CODE|HASH|ARRAY|SCALAR)\\([\\dxa-f]+\\)/$1\\(...\\)/;\n        $v =~ tr/\\n/ /s;\n        push @result, \"#     $key => $v\";\n    }\n\n    return @result;\n}\n\n# _shellwords and _parseline borrowed from Text::ParseWords\nsub _shellwords {\n    my (@lines) = @_;\n    my @allwords;\n\n    foreach my $line (@lines) {\n      $line =~ s/^\\s+//;\n      my @words = _parse_line('\\s+', 0, $line);\n      pop @words if (@words and !defined $words[-1]);\n      return() unless (@words || !length($line));\n      push(@allwords, @words);\n    }\n    return(@allwords);\n}\n\nsub _parse_line {\n    my($delimiter, $keep, $line) = @_;\n    my($word, @pieces);\n\n    no warnings 'uninitialized';  # we will be testing undef strings\n\n    while (length($line)) {\n        # This pattern is optimised to be stack conservative on older perls.\n        # Do not refactor without being careful and testing it on very long strings.\n        # See Perl bug #42980 for an example of a stack busting input.\n        $line =~ s/^\n                    (?:\n                        # double quoted string\n                        (\")                             # $quote\n                        ((?>[^\\\\\"]*(?:\\\\.[^\\\\\"]*)*))\"   # $quoted\n        | # --OR--\n                        # singe quoted string\n                        (')                             # $quote\n                        ((?>[^\\\\']*(?:\\\\.[^\\\\']*)*))'   # $quoted\n                    |   # --OR--\n                        # unquoted string\n            (                               # $unquoted\n                            (?:\\\\.|[^\\\\\"'])*?\n                        )\n                        # followed by\n            (                               # $delim\n                            \\Z(?!\\n)                    # EOL\n                        |   # --OR--\n                            (?-x:$delimiter)            # delimiter\n                        |   # --OR--\n                            (?!^)(?=[\"'])               # a quote\n                        )\n        )//xs or return;    # extended layout\n        my ($quote, $quoted, $unquoted, $delim) = (($1 ? ($1,$2) : ($3,$4)), $5, $6);\n\n\n  return() unless( defined($quote) || length($unquoted) || length($delim));\n\n        if ($keep) {\n      $quoted = \"$quote$quoted$quote\";\n  }\n        else {\n      $unquoted =~ s/\\\\(.)/$1/sg;\n      if (defined $quote) {\n    $quoted =~ s/\\\\(.)/$1/sg if ($quote eq '\"');\n    #$quoted =~ s/\\\\([\\\\'])/$1/g if ( $PERL_SINGLE_QUOTE && $quote eq \"'\");\n            }\n  }\n        $word .= substr($line, 0, 0); # leave results tainted\n        $word .= defined $quote ? $quoted : $unquoted;\n\n        if (length($delim)) {\n            push(@pieces, $word);\n            push(@pieces, $delim) if ($keep eq 'delimiters');\n            undef $word;\n        }\n        if (!length($line)) {\n            push(@pieces, $word);\n  }\n    }\n    return(@pieces);\n}\n\nsub check_manifest {\n    print \"Checking if your kit is complete...\\n\";\n    require ExtUtils::Manifest;\n    # avoid warning\n    $ExtUtils::Manifest::Quiet = $ExtUtils::Manifest::Quiet = 1;\n    my(@missed) = ExtUtils::Manifest::manicheck();\n    if (@missed) {\n        print \"Warning: the following files are missing in your kit:\\n\";\n        print \"\\t\", join \"\\n\\t\", @missed;\n        print \"\\n\";\n        print \"Please inform the author.\\n\";\n    } else {\n        print \"Looks good\\n\";\n    }\n}\n\nsub parse_args{\n    my($self, @args) = @_;\n    @args = map { Encode::decode(locale => $_) } @args if $CAN_DECODE;\n    foreach (@args) {\n        unless (m/(.*?)=(.*)/) {\n            ++$Verbose if m/^verb/;\n            next;\n        }\n        my($name, $value) = ($1, $2);\n        if ($value =~ m/^~(\\w+)?/) { # tilde with optional username\n            $value =~ s [^~(\\w*)]\n                [$1 ?\n                 ((getpwnam($1))[7] || \"~$1\") :\n                 (getpwuid($>))[7]\n                 ]ex;\n        }\n\n        # Remember the original args passed it.  It will be useful later.\n        $self->{ARGS}{uc $name} = $self->{uc $name} = $value;\n    }\n\n    # catch old-style 'potential_libs' and inform user how to 'upgrade'\n    if (defined $self->{potential_libs}){\n        my($msg)=\"'potential_libs' => '$self->{potential_libs}' should be\";\n        if ($self->{potential_libs}){\n            print \"$msg changed to:\\n\\t'LIBS' => ['$self->{potential_libs}']\\n\";\n        } else {\n            print \"$msg deleted.\\n\";\n        }\n        $self->{LIBS} = [$self->{potential_libs}];\n        delete $self->{potential_libs};\n    }\n    # catch old-style 'ARMAYBE' and inform user how to 'upgrade'\n    if (defined $self->{ARMAYBE}){\n        my($armaybe) = $self->{ARMAYBE};\n        print \"ARMAYBE => '$armaybe' should be changed to:\\n\",\n                        \"\\t'dynamic_lib' => {ARMAYBE => '$armaybe'}\\n\";\n        my(%dl) = %{$self->{dynamic_lib} || {}};\n        $self->{dynamic_lib} = { %dl, ARMAYBE => $armaybe};\n        delete $self->{ARMAYBE};\n    }\n    if (defined $self->{LDTARGET}){\n        print \"LDTARGET should be changed to LDFROM\\n\";\n        $self->{LDFROM} = $self->{LDTARGET};\n        delete $self->{LDTARGET};\n    }\n    # Turn a DIR argument on the command line into an array\n    if (defined $self->{DIR} && ref \\$self->{DIR} eq 'SCALAR') {\n        # So they can choose from the command line, which extensions they want\n        # the grep enables them to have some colons too much in case they\n        # have to build a list with the shell\n        $self->{DIR} = [grep $_, split \":\", $self->{DIR}];\n    }\n    # Turn a INCLUDE_EXT argument on the command line into an array\n    if (defined $self->{INCLUDE_EXT} && ref \\$self->{INCLUDE_EXT} eq 'SCALAR') {\n        $self->{INCLUDE_EXT} = [grep $_, split '\\s+', $self->{INCLUDE_EXT}];\n    }\n    # Turn a EXCLUDE_EXT argument on the command line into an array\n    if (defined $self->{EXCLUDE_EXT} && ref \\$self->{EXCLUDE_EXT} eq 'SCALAR') {\n        $self->{EXCLUDE_EXT} = [grep $_, split '\\s+', $self->{EXCLUDE_EXT}];\n    }\n\n    foreach my $mmkey (sort keys %$self){\n        next if $mmkey eq 'ARGS';\n        print \"  $mmkey => \", neatvalue($self->{$mmkey}), \"\\n\" if $Verbose;\n        print \"'$mmkey' is not a known MakeMaker parameter name.\\n\"\n            unless exists $Recognized_Att_Keys{$mmkey};\n    }\n    $| = 1 if $Verbose;\n}\n\nsub check_hints {\n    my($self) = @_;\n    # We allow extension-specific hints files.\n\n    require File::Spec;\n    my $curdir = File::Spec->curdir;\n\n    my $hint_dir = File::Spec->catdir($curdir, \"hints\");\n    return unless -d $hint_dir;\n\n    # First we look for the best hintsfile we have\n    my($hint)=\"${^O}_$Config{osvers}\";\n    $hint =~ s/\\./_/g;\n    $hint =~ s/_$//;\n    return unless $hint;\n\n    # Also try without trailing minor version numbers.\n    while (1) {\n        last if -f File::Spec->catfile($hint_dir, \"$hint.pl\");  # found\n    } continue {\n        last unless $hint =~ s/_[^_]*$//; # nothing to cut off\n    }\n    my $hint_file = File::Spec->catfile($hint_dir, \"$hint.pl\");\n\n    return unless -f $hint_file;    # really there\n\n    _run_hintfile($self, $hint_file);\n}\n\nsub _run_hintfile {\n    our $self;\n    local($self) = shift;       # make $self available to the hint file.\n    my($hint_file) = shift;\n\n    local($@, $!);\n    warn \"Processing hints file $hint_file\\n\";\n\n    # Just in case the ./ isn't on the hint file, which File::Spec can\n    # often strip off, we bung the curdir into @INC\n    local @INC = (File::Spec->curdir, @INC);\n    my $ret = do $hint_file;\n    if( !defined $ret ) {\n        my $error = $@ || $!;\n        warn $error;\n    }\n}\n\nsub mv_all_methods {\n    my($from,$to) = @_;\n\n    # Here you see the *current* list of methods that are overridable\n    # from Makefile.PL via MY:: subroutines. As of VERSION 5.07 I'm\n    # still trying to reduce the list to some reasonable minimum --\n    # because I want to make it easier for the user. A.K.\n\n    local $SIG{__WARN__} = sub {\n        # can't use 'no warnings redefined', 5.6 only\n        warn @_ unless $_[0] =~ /^Subroutine .* redefined/\n    };\n    foreach my $method (@Overridable) {\n\n        # We cannot say \"next\" here. Nick might call MY->makeaperl\n        # which isn't defined right now\n\n        # Above statement was written at 4.23 time when Tk-b8 was\n        # around. As Tk-b9 only builds with 5.002something and MM 5 is\n        # standard, we try to enable the next line again. It was\n        # commented out until MM 5.23\n\n        next unless defined &{\"${from}::$method\"};\n\n        {\n            no strict 'refs';   ## no critic\n            *{\"${to}::$method\"} = \\&{\"${from}::$method\"};\n\n            # If we delete a method, then it will be undefined and cannot\n            # be called.  But as long as we have Makefile.PLs that rely on\n            # %MY:: being intact, we have to fill the hole with an\n            # inheriting method:\n\n            {\n                package MY;\n                my $super = \"SUPER::\".$method;\n                *{$method} = sub {\n                    shift->$super(@_);\n                };\n            }\n        }\n    }\n\n    # We have to clean out %INC also, because the current directory is\n    # changed frequently and Graham Barr prefers to get his version\n    # out of a History.pl file which is \"required\" so wouldn't get\n    # loaded again in another extension requiring a History.pl\n\n    # With perl5.002_01 the deletion of entries in %INC caused Tk-b11\n    # to core dump in the middle of a require statement. The required\n    # file was Tk/MMutil.pm.  The consequence is, we have to be\n    # extremely careful when we try to give perl a reason to reload a\n    # library with same name.  The workaround prefers to drop nothing\n    # from %INC and teach the writers not to use such libraries.\n\n#    my $inc;\n#    foreach $inc (keys %INC) {\n#       #warn \"***$inc*** deleted\";\n#       delete $INC{$inc};\n#    }\n}\n\nsub skipcheck {\n    my($self) = shift;\n    my($section) = @_;\n    if ($section eq 'dynamic') {\n        print \"Warning (non-fatal): Target 'dynamic' depends on targets \",\n        \"in skipped section 'dynamic_bs'\\n\"\n            if $self->{SKIPHASH}{dynamic_bs} && $Verbose;\n        print \"Warning (non-fatal): Target 'dynamic' depends on targets \",\n        \"in skipped section 'dynamic_lib'\\n\"\n            if $self->{SKIPHASH}{dynamic_lib} && $Verbose;\n    }\n    if ($section eq 'dynamic_lib') {\n        print \"Warning (non-fatal): Target '\\$(INST_DYNAMIC)' depends on \",\n        \"targets in skipped section 'dynamic_bs'\\n\"\n            if $self->{SKIPHASH}{dynamic_bs} && $Verbose;\n    }\n    if ($section eq 'static') {\n        print \"Warning (non-fatal): Target 'static' depends on targets \",\n        \"in skipped section 'static_lib'\\n\"\n            if $self->{SKIPHASH}{static_lib} && $Verbose;\n    }\n    return 'skipped' if $self->{SKIPHASH}{$section};\n    return '';\n}\n\nsub flush {\n    my $self = shift;\n\n    # This needs a bit more work for more wacky OSen\n    my $type = 'Unix-style';\n    if ( $self->os_flavor_is('Win32') ) {\n      my $make = $self->make;\n      $make = +( File::Spec->splitpath( $make ) )[-1];\n      $make =~ s!\\.exe$!!i;\n      $type = $make . '-style';\n    }\n    elsif ( $Is_VMS ) {\n        $type = $Config{make} . '-style';\n    }\n\n    my $finalname = $self->{MAKEFILE};\n    print \"Generating a $type $finalname\\n\";\n    print \"Writing $finalname for $self->{NAME}\\n\";\n\n    unlink($finalname, \"MakeMaker.tmp\", $Is_VMS ? 'Descrip.MMS' : ());\n    open(my $fh,\">\", \"MakeMaker.tmp\")\n        or die \"Unable to open MakeMaker.tmp: $!\";\n    binmode $fh, ':encoding(locale)' if $CAN_DECODE;\n\n    for my $chunk (@{$self->{RESULT}}) {\n        my $to_write = \"$chunk\\n\";\n        if (!$CAN_DECODE && $] > 5.008) {\n            utf8::encode $to_write;\n        }\n        print $fh \"$chunk\\n\"\n            or die \"Can't write to MakeMaker.tmp: $!\";\n    }\n\n    close $fh\n        or die \"Can't write to MakeMaker.tmp: $!\";\n    _rename(\"MakeMaker.tmp\", $finalname) or\n      warn \"rename MakeMaker.tmp => $finalname: $!\";\n    chmod 0644, $finalname unless $Is_VMS;\n\n    unless ($self->{NO_MYMETA}) {\n        # Write MYMETA.yml to communicate metadata up to the CPAN clients\n        if ( $self->write_mymeta( $self->mymeta ) ) {\n            print \"Writing MYMETA.yml and MYMETA.json\\n\";\n        }\n\n    }\n    my %keep = map { ($_ => 1) } qw(NEEDS_LINKING HAS_LINK_CODE);\n    if ($self->{PARENT} && !$self->{_KEEP_AFTER_FLUSH}) {\n        foreach (keys %$self) { # safe memory\n            delete $self->{$_} unless $keep{$_};\n        }\n    }\n\n    system(\"$Config::Config{eunicefix} $finalname\") unless $Config::Config{eunicefix} eq \":\";\n}\n\n# This is a rename for OS's where the target must be unlinked first.\nsub _rename {\n    my($src, $dest) = @_;\n    chmod 0666, $dest;\n    unlink $dest;\n    return rename $src, $dest;\n}\n\n# This is an unlink for OS's where the target must be writable first.\nsub _unlink {\n    my @files = @_;\n    chmod 0666, @files;\n    return unlink @files;\n}\n\n\n# The following mkbootstrap() is only for installations that are calling\n# the pre-4.1 mkbootstrap() from their old Makefiles. This MakeMaker\n# writes Makefiles, that use ExtUtils::Mkbootstrap directly.\nsub mkbootstrap {\n    die <<END;\n!!! Your Makefile has been built such a long time ago, !!!\n!!! that is unlikely to work with current MakeMaker.   !!!\n!!! Please rebuild your Makefile                       !!!\nEND\n}\n\n# Ditto for mksymlists() as of MakeMaker 5.17\nsub mksymlists {\n    die <<END;\n!!! Your Makefile has been built such a long time ago, !!!\n!!! that is unlikely to work with current MakeMaker.   !!!\n!!! Please rebuild your Makefile                       !!!\nEND\n}\n\nsub neatvalue {\n    my($v) = @_;\n    return \"undef\" unless defined $v;\n    my($t) = ref $v;\n    return \"q[$v]\" unless $t;\n    if ($t eq 'ARRAY') {\n        my(@m, @neat);\n        push @m, \"[\";\n        foreach my $elem (@$v) {\n            push @neat, \"q[$elem]\";\n        }\n        push @m, join \", \", @neat;\n        push @m, \"]\";\n        return join \"\", @m;\n    }\n    return $v unless $t eq 'HASH';\n    my(@m, $key, $val);\n    for my $key (sort keys %$v) {\n        last unless defined $key; # cautious programming in case (undef,undef) is true\n        push @m,\"$key=>\".neatvalue($v->{$key});\n    }\n    return \"{ \".join(', ',@m).\" }\";\n}\n\nsub _find_magic_vstring {\n    my $value = shift;\n    return $value if $UNDER_CORE;\n    my $tvalue = '';\n    require B;\n    my $sv = B::svref_2object(\\$value);\n    my $magic = ref($sv) eq 'B::PVMG' ? $sv->MAGIC : undef;\n    while ( $magic ) {\n        if ( $magic->TYPE eq 'V' ) {\n            $tvalue = $magic->PTR;\n            $tvalue =~ s/^v?(.+)$/v$1/;\n            last;\n        }\n        else {\n            $magic = $magic->MOREMAGIC;\n        }\n    }\n    return $tvalue;\n}\n\n\n# Look for weird version numbers, warn about them and set them to 0\n# before CPAN::Meta chokes.\nsub clean_versions {\n    my($self, $key) = @_;\n    my $reqs = $self->{$key};\n    for my $module (keys %$reqs) {\n        my $v = $reqs->{$module};\n        my $printable = _find_magic_vstring($v);\n        $v = $printable if length $printable;\n        my $version = eval {\n            local $SIG{__WARN__} = sub {\n              # simulate \"use warnings FATAL => 'all'\" for vintage perls\n              die @_;\n            };\n            version->new($v)->stringify;\n        };\n        if( $@ || $reqs->{$module} eq '' ) {\n            if ( $] < 5.008 && $v !~ /^v?[\\d_\\.]+$/ ) {\n               $v = sprintf \"v%vd\", $v unless $v eq '';\n            }\n            carp \"Unparsable version '$v' for prerequisite $module\";\n            $reqs->{$module} = 0;\n        }\n        else {\n            $reqs->{$module} = $version;\n        }\n    }\n}\n\nsub selfdocument {\n    my($self) = @_;\n    my(@m);\n    if ($Verbose){\n        push @m, \"\\n# Full list of MakeMaker attribute values:\";\n        foreach my $key (sort keys %$self){\n            next if $key eq 'RESULT' || $key =~ /^[A-Z][a-z]/;\n            my($v) = neatvalue($self->{$key});\n            $v =~ s/(CODE|HASH|ARRAY|SCALAR)\\([\\dxa-f]+\\)/$1\\(...\\)/;\n            $v =~ tr/\\n/ /s;\n            push @m, \"# $key => $v\";\n        }\n    }\n    join \"\\n\", @m;\n}\n\n1;\n\n__END__\n\n=head1 NAME\n\nExtUtils::MakeMaker - Create a module Makefile\n\n=head1 SYNOPSIS\n\n  use ExtUtils::MakeMaker;\n\n  WriteMakefile(\n      NAME              => \"Foo::Bar\",\n      VERSION_FROM      => \"lib/Foo/Bar.pm\",\n  );\n\n=head1 DESCRIPTION\n\nThis utility is designed to write a Makefile for an extension module\nfrom a Makefile.PL. It is based on the Makefile.SH model provided by\nAndy Dougherty and the perl5-porters.\n\nIt splits the task of generating the Makefile into several subroutines\nthat can be individually overridden.  Each subroutine returns the text\nit wishes to have written to the Makefile.\n\nAs there are various Make programs with incompatible syntax, which\nuse operating system shells, again with incompatible syntax, it is\nimportant for users of this module to know which flavour of Make\na Makefile has been written for so they'll use the correct one and\nwon't have to face the possibly bewildering errors resulting from\nusing the wrong one.\n\nOn POSIX systems, that program will likely be GNU Make; on Microsoft\nWindows, it will be either Microsoft NMake, DMake or GNU Make.\nSee the section on the L</\"MAKE\"> parameter for details.\n\nExtUtils::MakeMaker (EUMM) is object oriented. Each directory below the current\ndirectory that contains a Makefile.PL is treated as a separate\nobject. This makes it possible to write an unlimited number of\nMakefiles with a single invocation of WriteMakefile().\n\nAll inputs to WriteMakefile are Unicode characters, not just octets. EUMM\nseeks to handle all of these correctly. It is currently still not possible\nto portably use Unicode characters in module names, because this requires\nPerl to handle Unicode filenames, which is not yet the case on Windows.\n\n=head2 How To Write A Makefile.PL\n\nSee L<ExtUtils::MakeMaker::Tutorial>.\n\nThe long answer is the rest of the manpage :-)\n\n=head2 Default Makefile Behaviour\n\nThe generated Makefile enables the user of the extension to invoke\n\n  perl Makefile.PL # optionally \"perl Makefile.PL verbose\"\n  make\n  make test        # optionally set TEST_VERBOSE=1\n  make install     # See below\n\nThe Makefile to be produced may be altered by adding arguments of the\nform C<KEY=VALUE>. E.g.\n\n  perl Makefile.PL INSTALL_BASE=~\n\nOther interesting targets in the generated Makefile are\n\n  make config     # to check if the Makefile is up-to-date\n  make clean      # delete local temp files (Makefile gets renamed)\n  make realclean  # delete derived files (including ./blib)\n  make ci         # check in all the files in the MANIFEST file\n  make dist       # see below the Distribution Support section\n\n=head2 make test\n\nMakeMaker checks for the existence of a file named F<test.pl> in the\ncurrent directory, and if it exists it executes the script with the\nproper set of perl C<-I> options.\n\nMakeMaker also checks for any files matching glob(\"t/*.t\"). It will\nexecute all matching files in alphabetical order via the\nL<Test::Harness> module with the C<-I> switches set correctly.\n\nIf you'd like to see the raw output of your tests, set the\nC<TEST_VERBOSE> variable to true.\n\n  make test TEST_VERBOSE=1\n\nIf you want to run particular test files, set the C<TEST_FILES> variable.\nIt is possible to use globbing with this mechanism.\n\n  make test TEST_FILES='t/foobar.t t/dagobah*.t'\n\nWindows users who are using C<nmake> should note that due to a bug in C<nmake>,\nwhen specifying C<TEST_FILES> you must use back-slashes instead of forward-slashes.\n\n  nmake test TEST_FILES='t\\foobar.t t\\dagobah*.t'\n\n=head2 make testdb\n\nA useful variation of the above is the target C<testdb>. It runs the\ntest under the Perl debugger (see L<perldebug>). If the file\nF<test.pl> exists in the current directory, it is used for the test.\n\nIf you want to debug some other testfile, set the C<TEST_FILE> variable\nthusly:\n\n  make testdb TEST_FILE=t/mytest.t\n\nBy default the debugger is called using C<-d> option to perl. If you\nwant to specify some other option, set the C<TESTDB_SW> variable:\n\n  make testdb TESTDB_SW=-Dx\n\n=head2 make install\n\nmake alone puts all relevant files into directories that are named by\nthe macros INST_LIB, INST_ARCHLIB, INST_SCRIPT, INST_MAN1DIR and\nINST_MAN3DIR.  All these default to something below ./blib if you are\nI<not> building below the perl source directory. If you I<are>\nbuilding below the perl source, INST_LIB and INST_ARCHLIB default to\n../../lib, and INST_SCRIPT is not defined.\n\nThe I<install> target of the generated Makefile copies the files found\nbelow each of the INST_* directories to their INSTALL*\ncounterparts. Which counterparts are chosen depends on the setting of\nINSTALLDIRS according to the following table:\n\n                                 INSTALLDIRS set to\n                           perl        site          vendor\n\n                 PERLPREFIX      SITEPREFIX          VENDORPREFIX\n  INST_ARCHLIB   INSTALLARCHLIB  INSTALLSITEARCH     INSTALLVENDORARCH\n  INST_LIB       INSTALLPRIVLIB  INSTALLSITELIB      INSTALLVENDORLIB\n  INST_BIN       INSTALLBIN      INSTALLSITEBIN      INSTALLVENDORBIN\n  INST_SCRIPT    INSTALLSCRIPT   INSTALLSITESCRIPT   INSTALLVENDORSCRIPT\n  INST_MAN1DIR   INSTALLMAN1DIR  INSTALLSITEMAN1DIR  INSTALLVENDORMAN1DIR\n  INST_MAN3DIR   INSTALLMAN3DIR  INSTALLSITEMAN3DIR  INSTALLVENDORMAN3DIR\n\nThe INSTALL... macros in turn default to their %Config\n($Config{installprivlib}, $Config{installarchlib}, etc.) counterparts.\n\nYou can check the values of these variables on your system with\n\n    perl '-V:install.*'\n\nAnd to check the sequence in which the library directories are\nsearched by perl, run\n\n    perl -le 'print join $/, @INC'\n\nSometimes older versions of the module you're installing live in other\ndirectories in @INC.  Because Perl loads the first version of a module it\nfinds, not the newest, you might accidentally get one of these older\nversions even after installing a brand new version.  To delete I<all other\nversions of the module you're installing> (not simply older ones) set the\nC<UNINST> variable.\n\n    make install UNINST=1\n\n\n=head2 INSTALL_BASE\n\nINSTALL_BASE can be passed into Makefile.PL to change where your\nmodule will be installed.  INSTALL_BASE is more like what everyone\nelse calls \"prefix\" than PREFIX is.\n\nTo have everything installed in your home directory, do the following.\n\n    # Unix users, INSTALL_BASE=~ works fine\n    perl Makefile.PL INSTALL_BASE=/path/to/your/home/dir\n\nLike PREFIX, it sets several INSTALL* attributes at once.  Unlike\nPREFIX it is easy to predict where the module will end up.  The\ninstallation pattern looks like this:\n\n    INSTALLARCHLIB     INSTALL_BASE/lib/perl5/$Config{archname}\n    INSTALLPRIVLIB     INSTALL_BASE/lib/perl5\n    INSTALLBIN         INSTALL_BASE/bin\n    INSTALLSCRIPT      INSTALL_BASE/bin\n    INSTALLMAN1DIR     INSTALL_BASE/man/man1\n    INSTALLMAN3DIR     INSTALL_BASE/man/man3\n\nINSTALL_BASE in MakeMaker and C<--install_base> in Module::Build (as\nof 0.28) install to the same location.  If you want MakeMaker and\nModule::Build to install to the same location simply set INSTALL_BASE\nand C<--install_base> to the same location.\n\nINSTALL_BASE was added in 6.31.\n\n\n=head2 PREFIX and LIB attribute\n\nPREFIX and LIB can be used to set several INSTALL* attributes in one\ngo.  Here's an example for installing into your home directory.\n\n    # Unix users, PREFIX=~ works fine\n    perl Makefile.PL PREFIX=/path/to/your/home/dir\n\nThis will install all files in the module under your home directory,\nwith man pages and libraries going into an appropriate place (usually\n~/man and ~/lib).  How the exact location is determined is complicated\nand depends on how your Perl was configured.  INSTALL_BASE works more\nlike what other build systems call \"prefix\" than PREFIX and we\nrecommend you use that instead.\n\nAnother way to specify many INSTALL directories with a single\nparameter is LIB.\n\n    perl Makefile.PL LIB=~/lib\n\nThis will install the module's architecture-independent files into\n~/lib, the architecture-dependent files into ~/lib/$archname.\n\nNote, that in both cases the tilde expansion is done by MakeMaker, not\nby perl by default, nor by make.\n\nConflicts between parameters LIB, PREFIX and the various INSTALL*\narguments are resolved so that:\n\n=over 4\n\n=item *\n\nsetting LIB overrides any setting of INSTALLPRIVLIB, INSTALLARCHLIB,\nINSTALLSITELIB, INSTALLSITEARCH (and they are not affected by PREFIX);\n\n=item *\n\nwithout LIB, setting PREFIX replaces the initial C<$Config{prefix}>\npart of those INSTALL* arguments, even if the latter are explicitly\nset (but are set to still start with C<$Config{prefix}>).\n\n=back\n\nIf the user has superuser privileges, and is not working on AFS or\nrelatives, then the defaults for INSTALLPRIVLIB, INSTALLARCHLIB,\nINSTALLSCRIPT, etc. will be appropriate, and this incantation will be\nthe best:\n\n    perl Makefile.PL;\n    make;\n    make test\n    make install\n\nmake install by default writes some documentation of what has been\ndone into the file C<$(INSTALLARCHLIB)/perllocal.pod>. This feature\ncan be bypassed by calling make pure_install.\n\n=head2 AFS users\n\nwill have to specify the installation directories as these most\nprobably have changed since perl itself has been installed. They will\nhave to do this by calling\n\n    perl Makefile.PL INSTALLSITELIB=/afs/here/today \\\n        INSTALLSCRIPT=/afs/there/now INSTALLMAN3DIR=/afs/for/manpages\n    make\n\nBe careful to repeat this procedure every time you recompile an\nextension, unless you are sure the AFS installation directories are\nstill valid.\n\n=head2 Static Linking of a new Perl Binary\n\nAn extension that is built with the above steps is ready to use on\nsystems supporting dynamic loading. On systems that do not support\ndynamic loading, any newly created extension has to be linked together\nwith the available resources. MakeMaker supports the linking process\nby creating appropriate targets in the Makefile whenever an extension\nis built. You can invoke the corresponding section of the makefile with\n\n    make perl\n\nThat produces a new perl binary in the current directory with all\nextensions linked in that can be found in INST_ARCHLIB, SITELIBEXP,\nand PERL_ARCHLIB. To do that, MakeMaker writes a new Makefile, on\nUNIX, this is called F<Makefile.aperl> (may be system dependent). If you\nwant to force the creation of a new perl, it is recommended that you\ndelete this F<Makefile.aperl>, so the directories are searched through\nfor linkable libraries again.\n\nThe binary can be installed into the directory where perl normally\nresides on your machine with\n\n    make inst_perl\n\nTo produce a perl binary with a different name than C<perl>, either say\n\n    perl Makefile.PL MAP_TARGET=myperl\n    make myperl\n    make inst_perl\n\nor say\n\n    perl Makefile.PL\n    make myperl MAP_TARGET=myperl\n    make inst_perl MAP_TARGET=myperl\n\nIn any case you will be prompted with the correct invocation of the\nC<inst_perl> target that installs the new binary into INSTALLBIN.\n\nmake inst_perl by default writes some documentation of what has been\ndone into the file C<$(INSTALLARCHLIB)/perllocal.pod>. This\ncan be bypassed by calling make pure_inst_perl.\n\nWarning: the inst_perl: target will most probably overwrite your\nexisting perl binary. Use with care!\n\nSometimes you might want to build a statically linked perl although\nyour system supports dynamic loading. In this case you may explicitly\nset the linktype with the invocation of the Makefile.PL or make:\n\n    perl Makefile.PL LINKTYPE=static    # recommended\n\nor\n\n    make LINKTYPE=static                # works on most systems\n\n=head2 Determination of Perl Library and Installation Locations\n\nMakeMaker needs to know, or to guess, where certain things are\nlocated.  Especially INST_LIB and INST_ARCHLIB (where to put the files\nduring the make(1) run), PERL_LIB and PERL_ARCHLIB (where to read\nexisting modules from), and PERL_INC (header files and C<libperl*.*>).\n\nExtensions may be built either using the contents of the perl source\ndirectory tree or from the installed perl library. The recommended way\nis to build extensions after you have run 'make install' on perl\nitself. You can do that in any directory on your hard disk that is not\nbelow the perl source tree. The support for extensions below the ext\ndirectory of the perl distribution is only good for the standard\nextensions that come with perl.\n\nIf an extension is being built below the C<ext/> directory of the perl\nsource then MakeMaker will set PERL_SRC automatically (e.g.,\nC<../..>).  If PERL_SRC is defined and the extension is recognized as\na standard extension, then other variables default to the following:\n\n  PERL_INC     = PERL_SRC\n  PERL_LIB     = PERL_SRC/lib\n  PERL_ARCHLIB = PERL_SRC/lib\n  INST_LIB     = PERL_LIB\n  INST_ARCHLIB = PERL_ARCHLIB\n\nIf an extension is being built away from the perl source then MakeMaker\nwill leave PERL_SRC undefined and default to using the installed copy\nof the perl library. The other variables default to the following:\n\n  PERL_INC     = $archlibexp/CORE\n  PERL_LIB     = $privlibexp\n  PERL_ARCHLIB = $archlibexp\n  INST_LIB     = ./blib/lib\n  INST_ARCHLIB = ./blib/arch\n\nIf perl has not yet been installed then PERL_SRC can be defined on the\ncommand line as shown in the previous section.\n\n\n=head2 Which architecture dependent directory?\n\nIf you don't want to keep the defaults for the INSTALL* macros,\nMakeMaker helps you to minimize the typing needed: the usual\nrelationship between INSTALLPRIVLIB and INSTALLARCHLIB is determined\nby Configure at perl compilation time. MakeMaker supports the user who\nsets INSTALLPRIVLIB. If INSTALLPRIVLIB is set, but INSTALLARCHLIB not,\nthen MakeMaker defaults the latter to be the same subdirectory of\nINSTALLPRIVLIB as Configure decided for the counterparts in %Config,\notherwise it defaults to INSTALLPRIVLIB. The same relationship holds\nfor INSTALLSITELIB and INSTALLSITEARCH.\n\nMakeMaker gives you much more freedom than needed to configure\ninternal variables and get different results. It is worth mentioning\nthat make(1) also lets you configure most of the variables that are\nused in the Makefile. But in the majority of situations this will not\nbe necessary, and should only be done if the author of a package\nrecommends it (or you know what you're doing).\n\n=head2 Using Attributes and Parameters\n\nThe following attributes may be specified as arguments to WriteMakefile()\nor as NAME=VALUE pairs on the command line. Attributes that became\navailable with later versions of MakeMaker are indicated.\n\nIn order to maintain portability of attributes with older versions of\nMakeMaker you may want to use L<App::EUMM::Upgrade> with your C<Makefile.PL>.\n\n=over 2\n\n=item ABSTRACT\n\nOne line description of the module. Will be included in PPD file.\n\n=item ABSTRACT_FROM\n\nName of the file that contains the package description. MakeMaker looks\nfor a line in the POD matching /^($package\\s-\\s)(.*)/. This is typically\nthe first line in the \"=head1 NAME\" section. $2 becomes the abstract.\n\n=item AUTHOR\n\nArray of strings containing name (and email address) of package author(s).\nIs used in CPAN Meta files (META.yml or META.json) and PPD\n(Perl Package Description) files for PPM (Perl Package Manager).\n\n=item BINARY_LOCATION\n\nUsed when creating PPD files for binary packages.  It can be set to a\nfull or relative path or URL to the binary archive for a particular\narchitecture.  For example:\n\n        perl Makefile.PL BINARY_LOCATION=x86/Agent.tar.gz\n\nbuilds a PPD package that references a binary of the C<Agent> package,\nlocated in the C<x86> directory relative to the PPD itself.\n\n=item BUILD_REQUIRES\n\nAvailable in version 6.5503 and above.\n\nA hash of modules that are needed to build your module but not run it.\n\nThis will go into the C<build_requires> field of your F<META.yml> and the C<build> of the C<prereqs> field of your F<META.json>.\n\nDefaults to C<<< { \"ExtUtils::MakeMaker\" => 0 } >>> if this attribute is not specified.\n\nThe format is the same as PREREQ_PM.\n\n=item C\n\nRef to array of *.c file names. Initialised from a directory scan\nand the values portion of the XS attribute hash. This is not\ncurrently used by MakeMaker but may be handy in Makefile.PLs.\n\n=item CCFLAGS\n\nString that will be included in the compiler call command line between\nthe arguments INC and OPTIMIZE.\n\n=item CONFIG\n\nArrayref. E.g. [qw(archname manext)] defines ARCHNAME & MANEXT from\nconfig.sh. MakeMaker will add to CONFIG the following values anyway:\nar\ncc\ncccdlflags\nccdlflags\ndlext\ndlsrc\nld\nlddlflags\nldflags\nlibc\nlib_ext\nobj_ext\nranlib\nsitelibexp\nsitearchexp\nso\n\n=item CONFIGURE\n\nCODE reference. The subroutine should return a hash reference. The\nhash may contain further attributes, e.g. {LIBS =E<gt> ...}, that have to\nbe determined by some evaluation method.\n\n=item CONFIGURE_REQUIRES\n\nAvailable in version 6.52 and above.\n\nA hash of modules that are required to run Makefile.PL itself, but not\nto run your distribution.\n\nThis will go into the C<configure_requires> field of your F<META.yml> and the C<configure> of the C<prereqs> field of your F<META.json>.\n\nDefaults to C<<< { \"ExtUtils::MakeMaker\" => 0 } >>> if this attribute is not specified.\n\nThe format is the same as PREREQ_PM.\n\n=item DEFINE\n\nSomething like C<\"-DHAVE_UNISTD_H\">\n\n=item DESTDIR\n\nThis is the root directory into which the code will be installed.  It\nI<prepends itself to the normal prefix>.  For example, if your code\nwould normally go into F</usr/local/lib/perl> you could set DESTDIR=~/tmp/\nand installation would go into F<~/tmp/usr/local/lib/perl>.\n\nThis is primarily of use for people who repackage Perl modules.\n\nNOTE: Due to the nature of make, it is important that you put the trailing\nslash on your DESTDIR.  F<~/tmp/> not F<~/tmp>.\n\n=item DIR\n\nRef to array of subdirectories containing Makefile.PLs e.g. ['sdbm']\nin ext/SDBM_File\n\n=item DISTNAME\n\nA safe filename for the package.\n\nDefaults to NAME below but with :: replaced with -.\n\nFor example, Foo::Bar becomes Foo-Bar.\n\n=item DISTVNAME\n\nYour name for distributing the package with the version number\nincluded.  This is used by 'make dist' to name the resulting archive\nfile.\n\nDefaults to DISTNAME-VERSION.\n\nFor example, version 1.04 of Foo::Bar becomes Foo-Bar-1.04.\n\nOn some OS's where . has special meaning VERSION_SYM may be used in\nplace of VERSION.\n\n=item DLEXT\n\nSpecifies the extension of the module's loadable object. For example:\n\n  DLEXT => 'unusual_ext', # Default value is $Config{so}\n\nNOTE: When using this option to alter the extension of a module's\nloadable object, it is also necessary that the module's pm file\nspecifies the same change:\n\n  local $DynaLoader::dl_dlext = 'unusual_ext';\n\n=item DL_FUNCS\n\nHashref of symbol names for routines to be made available as universal\nsymbols.  Each key/value pair consists of the package name and an\narray of routine names in that package.  Used only under AIX, OS/2,\nVMS and Win32 at present.  The routine names supplied will be expanded\nin the same way as XSUB names are expanded by the XS() macro.\nDefaults to\n\n  {\"$(NAME)\" => [\"boot_$(NAME)\" ] }\n\ne.g.\n\n  {\"RPC\" => [qw( boot_rpcb rpcb_gettime getnetconfigent )],\n   \"NetconfigPtr\" => [ 'DESTROY'] }\n\nPlease see the L<ExtUtils::Mksymlists> documentation for more information\nabout the DL_FUNCS, DL_VARS and FUNCLIST attributes.\n\n=item DL_VARS\n\nArray of symbol names for variables to be made available as universal symbols.\nUsed only under AIX, OS/2, VMS and Win32 at present.  Defaults to [].\n(e.g. [ qw(Foo_version Foo_numstreams Foo_tree ) ])\n\n=item EXCLUDE_EXT\n\nArray of extension names to exclude when doing a static build.  This\nis ignored if INCLUDE_EXT is present.  Consult INCLUDE_EXT for more\ndetails.  (e.g.  [ qw( Socket POSIX ) ] )\n\nThis attribute may be most useful when specified as a string on the\ncommand line:  perl Makefile.PL EXCLUDE_EXT='Socket Safe'\n\n=item EXE_FILES\n\nRef to array of executable files. The files will be copied to the\nINST_SCRIPT directory. Make realclean will delete them from there\nagain.\n\nIf your executables start with something like #!perl or\n#!/usr/bin/perl MakeMaker will change this to the path of the perl\n'Makefile.PL' was invoked with so the programs will be sure to run\nproperly even if perl is not in /usr/bin/perl.\n\n=item FIRST_MAKEFILE\n\nThe name of the Makefile to be produced.  This is used for the second\nMakefile that will be produced for the MAP_TARGET.\n\nDefaults to 'Makefile' or 'Descrip.MMS' on VMS.\n\n(Note: we couldn't use MAKEFILE because dmake uses this for something\nelse).\n\n=item FULLPERL\n\nPerl binary able to run this extension, load XS modules, etc...\n\n=item FULLPERLRUN\n\nLike PERLRUN, except it uses FULLPERL.\n\n=item FULLPERLRUNINST\n\nLike PERLRUNINST, except it uses FULLPERL.\n\n=item FUNCLIST\n\nThis provides an alternate means to specify function names to be\nexported from the extension.  Its value is a reference to an\narray of function names to be exported by the extension.  These\nnames are passed through unaltered to the linker options file.\n\n=item H\n\nRef to array of *.h file names. Similar to C.\n\n=item IMPORTS\n\nThis attribute is used to specify names to be imported into the\nextension. Takes a hash ref.\n\nIt is only used on OS/2 and Win32.\n\n=item INC\n\nInclude file dirs eg: C<\"-I/usr/5include -I/path/to/inc\">\n\n=item INCLUDE_EXT\n\nArray of extension names to be included when doing a static build.\nMakeMaker will normally build with all of the installed extensions when\ndoing a static build, and that is usually the desired behavior.  If\nINCLUDE_EXT is present then MakeMaker will build only with those extensions\nwhich are explicitly mentioned. (e.g.  [ qw( Socket POSIX ) ])\n\nIt is not necessary to mention DynaLoader or the current extension when\nfilling in INCLUDE_EXT.  If the INCLUDE_EXT is mentioned but is empty then\nonly DynaLoader and the current extension will be included in the build.\n\nThis attribute may be most useful when specified as a string on the\ncommand line:  perl Makefile.PL INCLUDE_EXT='POSIX Socket Devel::Peek'\n\n=item INSTALLARCHLIB\n\nUsed by 'make install', which copies files from INST_ARCHLIB to this\ndirectory if INSTALLDIRS is set to perl.\n\n=item INSTALLBIN\n\nDirectory to install binary files (e.g. tkperl) into if\nINSTALLDIRS=perl.\n\n=item INSTALLDIRS\n\nDetermines which of the sets of installation directories to choose:\nperl, site or vendor.  Defaults to site.\n\n=item INSTALLMAN1DIR\n\n=item INSTALLMAN3DIR\n\nThese directories get the man pages at 'make install' time if\nINSTALLDIRS=perl.  Defaults to $Config{installman*dir}.\n\nIf set to 'none', no man pages will be installed.\n\n=item INSTALLPRIVLIB\n\nUsed by 'make install', which copies files from INST_LIB to this\ndirectory if INSTALLDIRS is set to perl.\n\nDefaults to $Config{installprivlib}.\n\n=item INSTALLSCRIPT\n\nUsed by 'make install' which copies files from INST_SCRIPT to this\ndirectory if INSTALLDIRS=perl.\n\n=item INSTALLSITEARCH\n\nUsed by 'make install', which copies files from INST_ARCHLIB to this\ndirectory if INSTALLDIRS is set to site (default).\n\n=item INSTALLSITEBIN\n\nUsed by 'make install', which copies files from INST_BIN to this\ndirectory if INSTALLDIRS is set to site (default).\n\n=item INSTALLSITELIB\n\nUsed by 'make install', which copies files from INST_LIB to this\ndirectory if INSTALLDIRS is set to site (default).\n\n=item INSTALLSITEMAN1DIR\n\n=item INSTALLSITEMAN3DIR\n\nThese directories get the man pages at 'make install' time if\nINSTALLDIRS=site (default).  Defaults to\n$(SITEPREFIX)/man/man$(MAN*EXT).\n\nIf set to 'none', no man pages will be installed.\n\n=item INSTALLSITESCRIPT\n\nUsed by 'make install' which copies files from INST_SCRIPT to this\ndirectory if INSTALLDIRS is set to site (default).\n\n=item INSTALLVENDORARCH\n\nUsed by 'make install', which copies files from INST_ARCHLIB to this\ndirectory if INSTALLDIRS is set to vendor.\n\n=item INSTALLVENDORBIN\n\nUsed by 'make install', which copies files from INST_BIN to this\ndirectory if INSTALLDIRS is set to vendor.\n\n=item INSTALLVENDORLIB\n\nUsed by 'make install', which copies files from INST_LIB to this\ndirectory if INSTALLDIRS is set to vendor.\n\n=item INSTALLVENDORMAN1DIR\n\n=item INSTALLVENDORMAN3DIR\n\nThese directories get the man pages at 'make install' time if\nINSTALLDIRS=vendor.  Defaults to $(VENDORPREFIX)/man/man$(MAN*EXT).\n\nIf set to 'none', no man pages will be installed.\n\n=item INSTALLVENDORSCRIPT\n\nUsed by 'make install' which copies files from INST_SCRIPT to this\ndirectory if INSTALLDIRS is set to vendor.\n\n=item INST_ARCHLIB\n\nSame as INST_LIB for architecture dependent files.\n\n=item INST_BIN\n\nDirectory to put real binary files during 'make'. These will be copied\nto INSTALLBIN during 'make install'\n\n=item INST_LIB\n\nDirectory where we put library files of this extension while building\nit.\n\n=item INST_MAN1DIR\n\nDirectory to hold the man pages at 'make' time\n\n=item INST_MAN3DIR\n\nDirectory to hold the man pages at 'make' time\n\n=item INST_SCRIPT\n\nDirectory where executable files should be installed during\n'make'. Defaults to \"./blib/script\", just to have a dummy location during\ntesting. make install will copy the files in INST_SCRIPT to\nINSTALLSCRIPT.\n\n=item LD\n\nProgram to be used to link libraries for dynamic loading.\n\nDefaults to $Config{ld}.\n\n=item LDDLFLAGS\n\nAny special flags that might need to be passed to ld to create a\nshared library suitable for dynamic loading.  It is up to the makefile\nto use it.  (See L<Config/lddlflags>)\n\nDefaults to $Config{lddlflags}.\n\n=item LDFROM\n\nDefaults to \"$(OBJECT)\" and is used in the ld command to specify\nwhat files to link/load from (also see dynamic_lib below for how to\nspecify ld flags)\n\n=item LIB\n\nLIB should only be set at C<perl Makefile.PL> time but is allowed as a\nMakeMaker argument. It has the effect of setting both INSTALLPRIVLIB\nand INSTALLSITELIB to that value regardless any explicit setting of\nthose arguments (or of PREFIX).  INSTALLARCHLIB and INSTALLSITEARCH\nare set to the corresponding architecture subdirectory.\n\n=item LIBPERL_A\n\nThe filename of the perllibrary that will be used together with this\nextension. Defaults to libperl.a.\n\n=item LIBS\n\nAn anonymous array of alternative library\nspecifications to be searched for (in order) until\nat least one library is found. E.g.\n\n  'LIBS' => [\"-lgdbm\", \"-ldbm -lfoo\", \"-L/path -ldbm.nfs\"]\n\nMind, that any element of the array\ncontains a complete set of arguments for the ld\ncommand. So do not specify\n\n  'LIBS' => [\"-ltcl\", \"-ltk\", \"-lX11\"]\n\nSee ODBM_File/Makefile.PL for an example, where an array is needed. If\nyou specify a scalar as in\n\n  'LIBS' => \"-ltcl -ltk -lX11\"\n\nMakeMaker will turn it into an array with one element.\n\n=item LICENSE\n\nAvailable in version 6.31 and above.\n\nThe licensing terms of your distribution.  Generally it's \"perl_5\" for the\nsame license as Perl itself.\n\nSee L<CPAN::Meta::Spec> for the list of options.\n\nDefaults to \"unknown\".\n\n=item LINKTYPE\n\n'static' or 'dynamic' (default unless usedl=undef in\nconfig.sh). Should only be used to force static linking (also see\nlinkext below).\n\n=item MAGICXS\n\nWhen this is set to C<1>, C<OBJECT> will be automagically derived from\nC<O_FILES>.\n\n=item MAKE\n\nVariant of make you intend to run the generated Makefile with.  This\nparameter lets Makefile.PL know what make quirks to account for when\ngenerating the Makefile.\n\nMakeMaker also honors the MAKE environment variable.  This parameter\ntakes precedence.\n\nCurrently the only significant values are 'dmake' and 'nmake' for Windows\nusers, instructing MakeMaker to generate a Makefile in the flavour of\nDMake (\"Dennis Vadura's Make\") or Microsoft NMake respectively.\n\nDefaults to $Config{make}, which may go looking for a Make program\nin your environment.\n\nHow are you supposed to know what flavour of Make a Makefile has\nbeen generated for if you didn't specify a value explicitly? Search\nthe generated Makefile for the definition of the MAKE variable,\nwhich is used to recursively invoke the Make utility. That will tell\nyou what Make you're supposed to invoke the Makefile with.\n\n=item MAKEAPERL\n\nBoolean which tells MakeMaker that it should include the rules to\nmake a perl. This is handled automatically as a switch by\nMakeMaker. The user normally does not need it.\n\n=item MAKEFILE_OLD\n\nWhen 'make clean' or similar is run, the $(FIRST_MAKEFILE) will be\nbacked up at this location.\n\nDefaults to $(FIRST_MAKEFILE).old or $(FIRST_MAKEFILE)_old on VMS.\n\n=item MAN1PODS\n\nHashref of pod-containing files. MakeMaker will default this to all\nEXE_FILES files that include POD directives. The files listed\nhere will be converted to man pages and installed as was requested\nat Configure time.\n\nThis hash should map POD files (or scripts containing POD) to the\nman file names under the C<blib/man1/> directory, as in the following\nexample:\n\n  MAN1PODS            => {\n    'doc/command.pod'    => 'blib/man1/command.1',\n    'scripts/script.pl'  => 'blib/man1/script.1',\n  }\n\n=item MAN3PODS\n\nHashref that assigns to *.pm and *.pod files the files into which the\nmanpages are to be written. MakeMaker parses all *.pod and *.pm files\nfor POD directives. Files that contain POD will be the default keys of\nthe MAN3PODS hashref. These will then be converted to man pages during\nC<make> and will be installed during C<make install>.\n\nExample similar to MAN1PODS.\n\n=item MAP_TARGET\n\nIf it is intended that a new perl binary be produced, this variable\nmay hold a name for that binary. Defaults to perl\n\n=item META_ADD\n\n=item META_MERGE\n\nAvailable in version 6.46 and above.\n\nA hashref of items to add to the CPAN Meta file (F<META.yml> or\nF<META.json>).\n\nThey differ in how they behave if they have the same key as the\ndefault metadata.  META_ADD will override the default value with its\nown.  META_MERGE will merge its value with the default.\n\nUnless you want to override the defaults, prefer META_MERGE so as to\nget the advantage of any future defaults.\n\nWhere prereqs are concerned, if META_MERGE is used, prerequisites are merged\nwith their counterpart C<WriteMakefile()> argument\n(PREREQ_PM is merged into {prereqs}{runtime}{requires},\nBUILD_REQUIRES into C<{prereqs}{build}{requires}>,\nCONFIGURE_REQUIRES into C<{prereqs}{configure}{requires}>,\nand TEST_REQUIRES into C<{prereqs}{test}{requires})>.\nWhen prereqs are specified with META_ADD, the only prerequisites added to the\nfile come from the metadata, not C<WriteMakefile()> arguments.\n\nNote that these configuration options are only used for generating F<META.yml>\nand F<META.json> -- they are NOT used for F<MYMETA.yml> and F<MYMETA.json>.\nTherefore data in these fields should NOT be used for dynamic (user-side)\nconfiguration.\n\nBy default CPAN Meta specification C<1.4> is used. In order to use\nCPAN Meta specification C<2.0>, indicate with C<meta-spec> the version\nyou want to use.\n\n  META_MERGE        => {\n\n    \"meta-spec\" => { version => 2 },\n\n    resources => {\n\n      repository => {\n          type => 'git',\n          url => 'git://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker.git',\n          web => 'https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker',\n      },\n\n    },\n\n  },\n\n=item MIN_PERL_VERSION\n\nAvailable in version 6.48 and above.\n\nThe minimum required version of Perl for this distribution.\n\nEither the 5.006001 or the 5.6.1 format is acceptable.\n\n=item MYEXTLIB\n\nIf the extension links to a library that it builds, set this to the\nname of the library (see SDBM_File)\n\n=item NAME\n\nThe package representing the distribution. For example, C<Test::More>\nor C<ExtUtils::MakeMaker>. It will be used to derive information about\nthe distribution such as the L</DISTNAME>, installation locations\nwithin the Perl library and where XS files will be looked for by\ndefault (see L</XS>).\n\nC<NAME> I<must> be a valid Perl package name and it I<must> have an\nassociated C<.pm> file. For example, C<Foo::Bar> is a valid C<NAME>\nand there must exist F<Foo/Bar.pm>.  Any XS code should be in\nF<Bar.xs> unless stated otherwise.\n\nYour distribution B<must> have a C<NAME>.\n\n=item NEEDS_LINKING\n\nMakeMaker will figure out if an extension contains linkable code\nanywhere down the directory tree, and will set this variable\naccordingly, but you can speed it up a very little bit if you define\nthis boolean variable yourself.\n\n=item NOECHO\n\nCommand so make does not print the literal commands it's running.\n\nBy setting it to an empty string you can generate a Makefile that\nprints all commands. Mainly used in debugging MakeMaker itself.\n\nDefaults to C<@>.\n\n=item NORECURS\n\nBoolean.  Attribute to inhibit descending into subdirectories.\n\n=item NO_META\n\nWhen true, suppresses the generation and addition to the MANIFEST of\nthe META.yml and META.json module meta-data files during 'make distdir'.\n\nDefaults to false.\n\n=item NO_MYMETA\n\nWhen true, suppresses the generation of MYMETA.yml and MYMETA.json module\nmeta-data files during 'perl Makefile.PL'.\n\nDefaults to false.\n\n=item NO_PACKLIST\n\nWhen true, suppresses the writing of C<packlist> files for installs.\n\nDefaults to false.\n\n=item NO_PERLLOCAL\n\nWhen true, suppresses the appending of installations to C<perllocal>.\n\nDefaults to false.\n\n=item NO_VC\n\nIn general, any generated Makefile checks for the current version of\nMakeMaker and the version the Makefile was built under. If NO_VC is\nset, the version check is neglected. Do not write this into your\nMakefile.PL, use it interactively instead.\n\n=item OBJECT\n\nList of object files, defaults to '$(BASEEXT)$(OBJ_EXT)', but can be a long\nstring or an array containing all object files, e.g. \"tkpBind.o\ntkpButton.o tkpCanvas.o\" or [\"tkpBind.o\", \"tkpButton.o\", \"tkpCanvas.o\"]\n\n(Where BASEEXT is the last component of NAME, and OBJ_EXT is $Config{obj_ext}.)\n\n=item OPTIMIZE\n\nDefaults to C<-O>. Set it to C<-g> to turn debugging on. The flag is\npassed to subdirectory makes.\n\n=item PERL\n\nPerl binary for tasks that can be done by miniperl.\n\n=item PERL_CORE\n\nSet only when MakeMaker is building the extensions of the Perl core\ndistribution.\n\n=item PERLMAINCC\n\nThe call to the program that is able to compile perlmain.c. Defaults\nto $(CC).\n\n=item PERL_ARCHLIB\n\nSame as for PERL_LIB, but for architecture dependent files.\n\nUsed only when MakeMaker is building the extensions of the Perl core\ndistribution (because normally $(PERL_ARCHLIB) is automatically in @INC,\nand adding it would get in the way of PERL5LIB).\n\n=item PERL_LIB\n\nDirectory containing the Perl library to use.\n\nUsed only when MakeMaker is building the extensions of the Perl core\ndistribution (because normally $(PERL_LIB) is automatically in @INC,\nand adding it would get in the way of PERL5LIB).\n\n=item PERL_MALLOC_OK\n\ndefaults to 0.  Should be set to TRUE if the extension can work with\nthe memory allocation routines substituted by the Perl malloc() subsystem.\nThis should be applicable to most extensions with exceptions of those\n\n=over 4\n\n=item *\n\nwith bugs in memory allocations which are caught by Perl's malloc();\n\n=item *\n\nwhich interact with the memory allocator in other ways than via\nmalloc(), realloc(), free(), calloc(), sbrk() and brk();\n\n=item *\n\nwhich rely on special alignment which is not provided by Perl's malloc().\n\n=back\n\nB<NOTE.>  Neglecting to set this flag in I<any one> of the loaded extension\nnullifies many advantages of Perl's malloc(), such as better usage of\nsystem resources, error detection, memory usage reporting, catchable failure\nof memory allocations, etc.\n\n=item PERLPREFIX\n\nDirectory under which core modules are to be installed.\n\nDefaults to $Config{installprefixexp}, falling back to\n$Config{installprefix}, $Config{prefixexp} or $Config{prefix} should\n$Config{installprefixexp} not exist.\n\nOverridden by PREFIX.\n\n=item PERLRUN\n\nUse this instead of $(PERL) when you wish to run perl.  It will set up\nextra necessary flags for you.\n\n=item PERLRUNINST\n\nUse this instead of $(PERL) when you wish to run perl to work with\nmodules.  It will add things like -I$(INST_ARCH) and other necessary\nflags so perl can see the modules you're about to install.\n\n=item PERL_SRC\n\nDirectory containing the Perl source code (use of this should be\navoided, it may be undefined)\n\n=item PERM_DIR\n\nDesired permission for directories. Defaults to C<755>.\n\n=item PERM_RW\n\nDesired permission for read/writable files. Defaults to C<644>.\n\n=item PERM_RWX\n\nDesired permission for executable files. Defaults to C<755>.\n\n=item PL_FILES\n\nMakeMaker can run programs to generate files for you at build time.\nBy default any file named *.PL (except Makefile.PL and Build.PL) in\nthe top level directory will be assumed to be a Perl program and run\npassing its own basename in as an argument.  For example...\n\n    perl foo.PL foo\n\nThis behavior can be overridden by supplying your own set of files to\nsearch.  PL_FILES accepts a hash ref, the key being the file to run\nand the value is passed in as the first argument when the PL file is run.\n\n    PL_FILES => {'bin/foobar.PL' => 'bin/foobar'}\n\nWould run bin/foobar.PL like this:\n\n    perl bin/foobar.PL bin/foobar\n\nIf multiple files from one program are desired an array ref can be used.\n\n    PL_FILES => {'bin/foobar.PL' => [qw(bin/foobar1 bin/foobar2)]}\n\nIn this case the program will be run multiple times using each target file.\n\n    perl bin/foobar.PL bin/foobar1\n    perl bin/foobar.PL bin/foobar2\n\nPL files are normally run B<after> pm_to_blib and include INST_LIB and\nINST_ARCH in their C<@INC>, so the just built modules can be\naccessed... unless the PL file is making a module (or anything else in\nPM) in which case it is run B<before> pm_to_blib and does not include\nINST_LIB and INST_ARCH in its C<@INC>.  This apparently odd behavior\nis there for backwards compatibility (and it's somewhat DWIM).\n\n\n=item PM\n\nHashref of .pm files and *.pl files to be installed.  e.g.\n\n  {'name_of_file.pm' => '$(INST_LIB)/install_as.pm'}\n\nBy default this will include *.pm and *.pl and the files found in\nthe PMLIBDIRS directories.  Defining PM in the\nMakefile.PL will override PMLIBDIRS.\n\n=item PMLIBDIRS\n\nRef to array of subdirectories containing library files.  Defaults to\n[ 'lib', $(BASEEXT) ]. The directories will be scanned and I<any> files\nthey contain will be installed in the corresponding location in the\nlibrary.  A libscan() method can be used to alter the behaviour.\nDefining PM in the Makefile.PL will override PMLIBDIRS.\n\n(Where BASEEXT is the last component of NAME.)\n\n=item PM_FILTER\n\nA filter program, in the traditional Unix sense (input from stdin, output\nto stdout) that is passed on each .pm file during the build (in the\npm_to_blib() phase).  It is empty by default, meaning no filtering is done.\n\nGreat care is necessary when defining the command if quoting needs to be\ndone.  For instance, you would need to say:\n\n  {'PM_FILTER' => 'grep -v \\\\\"^\\\\#\\\\\"'}\n\nto remove all the leading comments on the fly during the build.  The\nextra \\\\ are necessary, unfortunately, because this variable is interpolated\nwithin the context of a Perl program built on the command line, and double\nquotes are what is used with the -e switch to build that command line.  The\n# is escaped for the Makefile, since what is going to be generated will then\nbe:\n\n  PM_FILTER = grep -v \\\"^\\#\\\"\n\nWithout the \\\\ before the #, we'd have the start of a Makefile comment,\nand the macro would be incorrectly defined.\n\n=item POLLUTE\n\nRelease 5.005 grandfathered old global symbol names by providing preprocessor\nmacros for extension source compatibility.  As of release 5.6, these\npreprocessor definitions are not available by default.  The POLLUTE flag\nspecifies that the old names should still be defined:\n\n  perl Makefile.PL POLLUTE=1\n\nPlease inform the module author if this is necessary to successfully install\na module under 5.6 or later.\n\n=item PPM_INSTALL_EXEC\n\nName of the executable used to run C<PPM_INSTALL_SCRIPT> below. (e.g. perl)\n\n=item PPM_INSTALL_SCRIPT\n\nName of the script that gets executed by the Perl Package Manager after\nthe installation of a package.\n\n=item PPM_UNINSTALL_EXEC\n\nName of the executable used to run C<PPM_UNINSTALL_SCRIPT> below. (e.g. perl)\n\n=item PPM_UNINSTALL_SCRIPT\n\nName of the script that gets executed by the Perl Package Manager before\nthe removal of a package.\n\n=item PREFIX\n\nThis overrides all the default install locations.  Man pages,\nlibraries, scripts, etc...  MakeMaker will try to make an educated\nguess about where to place things under the new PREFIX based on your\nConfig defaults.  Failing that, it will fall back to a structure\nwhich should be sensible for your platform.\n\nIf you specify LIB or any INSTALL* variables they will not be affected\nby the PREFIX.\n\n=item PREREQ_FATAL\n\nBool. If this parameter is true, failing to have the required modules\n(or the right versions thereof) will be fatal. C<perl Makefile.PL>\nwill C<die> instead of simply informing the user of the missing dependencies.\n\nIt is I<extremely> rare to have to use C<PREREQ_FATAL>. Its use by module\nauthors is I<strongly discouraged> and should never be used lightly.\n\nFor dependencies that are required in order to run C<Makefile.PL>,\nsee C<CONFIGURE_REQUIRES>.\n\nModule installation tools have ways of resolving unmet dependencies but\nto do that they need a F<Makefile>.  Using C<PREREQ_FATAL> breaks this.\nThat's bad.\n\nAssuming you have good test coverage, your tests should fail with\nmissing dependencies informing the user more strongly that something\nis wrong.  You can write a F<t/00compile.t> test which will simply\ncheck that your code compiles and stop \"make test\" prematurely if it\ndoesn't.  See L<Test::More/BAIL_OUT> for more details.\n\n\n=item PREREQ_PM\n\nA hash of modules that are needed to run your module.  The keys are\nthe module names ie. Test::More, and the minimum version is the\nvalue. If the required version number is 0 any version will do.\n\nThis will go into the C<requires> field of your F<META.yml> and the C<runtime> of the C<prereqs> field of your F<META.json>.\n\n    PREREQ_PM => {\n        # Require Test::More at least 0.47\n        \"Test::More\" => \"0.47\",\n\n        # Require any version of Acme::Buffy\n        \"Acme::Buffy\" => 0,\n    }\n\n=item PREREQ_PRINT\n\nBool.  If this parameter is true, the prerequisites will be printed to\nstdout and MakeMaker will exit.  The output format is an evalable hash\nref.\n\n  $PREREQ_PM = {\n                 'A::B' => Vers1,\n                 'C::D' => Vers2,\n                 ...\n               };\n\nIf a distribution defines a minimal required perl version, this is\nadded to the output as an additional line of the form:\n\n  $MIN_PERL_VERSION = '5.008001';\n\nIf BUILD_REQUIRES is not empty, it will be dumped as $BUILD_REQUIRES hashref.\n\n=item PRINT_PREREQ\n\nRedHatism for C<PREREQ_PRINT>.  The output format is different, though:\n\n    perl(A::B)>=Vers1 perl(C::D)>=Vers2 ...\n\nA minimal required perl version, if present, will look like this:\n\n    perl(perl)>=5.008001\n\n=item SITEPREFIX\n\nLike PERLPREFIX, but only for the site install locations.\n\nDefaults to $Config{siteprefixexp}.  Perls prior to 5.6.0 didn't have\nan explicit siteprefix in the Config.  In those cases\n$Config{installprefix} will be used.\n\nOverridable by PREFIX\n\n=item SIGN\n\nWhen true, perform the generation and addition to the MANIFEST of the\nSIGNATURE file in the distdir during 'make distdir', via 'cpansign\n-s'.\n\nNote that you need to install the Module::Signature module to\nperform this operation.\n\nDefaults to false.\n\n=item SKIP\n\nArrayref. E.g. [qw(name1 name2)] skip (do not write) sections of the\nMakefile. Caution! Do not use the SKIP attribute for the negligible\nspeedup. It may seriously damage the resulting Makefile. Only use it\nif you really need it.\n\n=item TEST_REQUIRES\n\nAvailable in version 6.64 and above.\n\nA hash of modules that are needed to test your module but not run or\nbuild it.\n\nThis will go into the C<build_requires> field of your F<META.yml> and the C<test> of the C<prereqs> field of your F<META.json>.\n\nThe format is the same as PREREQ_PM.\n\n=item TYPEMAPS\n\nRef to array of typemap file names.  Use this when the typemaps are\nin some directory other than the current directory or when they are\nnot named B<typemap>.  The last typemap in the list takes\nprecedence.  A typemap in the current directory has highest\nprecedence, even if it isn't listed in TYPEMAPS.  The default system\ntypemap has lowest precedence.\n\n=item VENDORPREFIX\n\nLike PERLPREFIX, but only for the vendor install locations.\n\nDefaults to $Config{vendorprefixexp}.\n\nOverridable by PREFIX\n\n=item VERBINST\n\nIf true, make install will be verbose\n\n=item VERSION\n\nYour version number for distributing the package.  This defaults to\n0.1.\n\n=item VERSION_FROM\n\nInstead of specifying the VERSION in the Makefile.PL you can let\nMakeMaker parse a file to determine the version number. The parsing\nroutine requires that the file named by VERSION_FROM contains one\nsingle line to compute the version number. The first line in the file\nthat contains something like a $VERSION assignment or C<package Name\nVERSION> will be used. The following lines will be parsed o.k.:\n\n    # Good\n    package Foo::Bar 1.23;                      # 1.23\n    $VERSION   = '1.00';                        # 1.00\n    *VERSION   = \\'1.01';                       # 1.01\n    ($VERSION) = q$Revision$ =~ /(\\d+)/g;       # The digits in $Revision$\n    $FOO::VERSION = '1.10';                     # 1.10\n    *FOO::VERSION = \\'1.11';                    # 1.11\n\nbut these will fail:\n\n    # Bad\n    my $VERSION         = '1.01';\n    local $VERSION      = '1.02';\n    local $FOO::VERSION = '1.30';\n\n(Putting C<my> or C<local> on the preceding line will work o.k.)\n\n\"Version strings\" are incompatible and should not be used.\n\n    # Bad\n    $VERSION = 1.2.3;\n    $VERSION = v1.2.3;\n\nL<version> objects are fine.  As of MakeMaker 6.35 version.pm will be\nautomatically loaded, but you must declare the dependency on version.pm.\nFor compatibility with older MakeMaker you should load on the same line\nas $VERSION is declared.\n\n    # All on one line\n    use version; our $VERSION = qv(1.2.3);\n\nThe file named in VERSION_FROM is not added as a dependency to\nMakefile. This is not really correct, but it would be a major pain\nduring development to have to rewrite the Makefile for any smallish\nchange in that file. If you want to make sure that the Makefile\ncontains the correct VERSION macro after any change of the file, you\nwould have to do something like\n\n    depend => { Makefile => '$(VERSION_FROM)' }\n\nSee attribute C<depend> below.\n\n=item VERSION_SYM\n\nA sanitized VERSION with . replaced by _.  For places where . has\nspecial meaning (some filesystems, RCS labels, etc...)\n\n=item XS\n\nHashref of .xs files. MakeMaker will default this.  e.g.\n\n  {'name_of_file.xs' => 'name_of_file.c'}\n\nThe .c files will automatically be included in the list of files\ndeleted by a make clean.\n\n=item XSOPT\n\nString of options to pass to xsubpp.  This might include C<-C++> or\nC<-extern>.  Do not include typemaps here; the TYPEMAP parameter exists for\nthat purpose.\n\n=item XSPROTOARG\n\nMay be set to C<-protoypes>, C<-noprototypes> or the empty string.  The\nempty string is equivalent to the xsubpp default, or C<-noprototypes>.\nSee the xsubpp documentation for details.  MakeMaker\ndefaults to the empty string.\n\n=item XS_VERSION\n\nYour version number for the .xs file of this package.  This defaults\nto the value of the VERSION attribute.\n\n=back\n\n=head2 Additional lowercase attributes\n\ncan be used to pass parameters to the methods which implement that\npart of the Makefile.  Parameters are specified as a hash ref but are\npassed to the method as a hash.\n\n=over 2\n\n=item clean\n\n  {FILES => \"*.xyz foo\"}\n\n=item depend\n\n  {ANY_TARGET => ANY_DEPENDENCY, ...}\n\n(ANY_TARGET must not be given a double-colon rule by MakeMaker.)\n\n=item dist\n\n  {TARFLAGS => 'cvfF', COMPRESS => 'gzip', SUFFIX => '.gz',\n  SHAR => 'shar -m', DIST_CP => 'ln', ZIP => '/bin/zip',\n  ZIPFLAGS => '-rl', DIST_DEFAULT => 'private tardist' }\n\nIf you specify COMPRESS, then SUFFIX should also be altered, as it is\nneeded to tell make the target file of the compression. Setting\nDIST_CP to ln can be useful, if you need to preserve the timestamps on\nyour files. DIST_CP can take the values 'cp', which copies the file,\n'ln', which links the file, and 'best' which copies symbolic links and\nlinks the rest. Default is 'best'.\n\n=item dynamic_lib\n\n  {ARMAYBE => 'ar', OTHERLDFLAGS => '...', INST_DYNAMIC_DEP => '...'}\n\n=item linkext\n\n  {LINKTYPE => 'static', 'dynamic' or ''}\n\nNB: Extensions that have nothing but *.pm files had to say\n\n  {LINKTYPE => ''}\n\nwith Pre-5.0 MakeMakers. Since version 5.00 of MakeMaker such a line\ncan be deleted safely. MakeMaker recognizes when there's nothing to\nbe linked.\n\n=item macro\n\n  {ANY_MACRO => ANY_VALUE, ...}\n\n=item postamble\n\nAnything put here will be passed to MY::postamble() if you have one.\n\n=item realclean\n\n  {FILES => '$(INST_ARCHAUTODIR)/*.xyz'}\n\n=item test\n\nSpecify the targets for testing.\n\n  {TESTS => 't/*.t'}\n\nC<RECURSIVE_TEST_FILES> can be used to include all directories\nrecursively under C<t> that contain C<.t> files. It will be ignored if\nyou provide your own C<TESTS> attribute, defaults to false.\n\n  {RECURSIVE_TEST_FILES=>1}\n\n=item tool_autosplit\n\n  {MAXLEN => 8}\n\n=back\n\n=head2 Overriding MakeMaker Methods\n\nIf you cannot achieve the desired Makefile behaviour by specifying\nattributes you may define private subroutines in the Makefile.PL.\nEach subroutine returns the text it wishes to have written to\nthe Makefile. To override a section of the Makefile you can\neither say:\n\n        sub MY::c_o { \"new literal text\" }\n\nor you can edit the default by saying something like:\n\n        package MY; # so that \"SUPER\" works right\n        sub c_o {\n            my $inherited = shift->SUPER::c_o(@_);\n            $inherited =~ s/old text/new text/;\n            $inherited;\n        }\n\nIf you are running experiments with embedding perl as a library into\nother applications, you might find MakeMaker is not sufficient. You'd\nbetter have a look at ExtUtils::Embed which is a collection of utilities\nfor embedding.\n\nIf you still need a different solution, try to develop another\nsubroutine that fits your needs and submit the diffs to\nC<makemaker@perl.org>\n\nFor a complete description of all MakeMaker methods see\nL<ExtUtils::MM_Unix>.\n\nHere is a simple example of how to add a new target to the generated\nMakefile:\n\n    sub MY::postamble {\n        return <<'MAKE_FRAG';\n    $(MYEXTLIB): sdbm/Makefile\n            cd sdbm && $(MAKE) all\n\n    MAKE_FRAG\n    }\n\n=head2 The End Of Cargo Cult Programming\n\nWriteMakefile() now does some basic sanity checks on its parameters to\nprotect against typos and malformatted values.  This means some things\nwhich happened to work in the past will now throw warnings and\npossibly produce internal errors.\n\nSome of the most common mistakes:\n\n=over 2\n\n=item C<< MAN3PODS => ' ' >>\n\nThis is commonly used to suppress the creation of man pages.  MAN3PODS\ntakes a hash ref not a string, but the above worked by accident in old\nversions of MakeMaker.\n\nThe correct code is C<< MAN3PODS => { } >>.\n\n=back\n\n\n=head2 Hintsfile support\n\nMakeMaker.pm uses the architecture-specific information from\nConfig.pm. In addition it evaluates architecture specific hints files\nin a C<hints/> directory. The hints files are expected to be named\nlike their counterparts in C<PERL_SRC/hints>, but with an C<.pl> file\nname extension (eg. C<next_3_2.pl>). They are simply C<eval>ed by\nMakeMaker within the WriteMakefile() subroutine, and can be used to\nexecute commands as well as to include special variables. The rules\nwhich hintsfile is chosen are the same as in Configure.\n\nThe hintsfile is eval()ed immediately after the arguments given to\nWriteMakefile are stuffed into a hash reference $self but before this\nreference becomes blessed. So if you want to do the equivalent to\noverride or create an attribute you would say something like\n\n    $self->{LIBS} = ['-ldbm -lucb -lc'];\n\n=head2 Distribution Support\n\nFor authors of extensions MakeMaker provides several Makefile\ntargets. Most of the support comes from the ExtUtils::Manifest module,\nwhere additional documentation can be found.\n\n=over 4\n\n=item    make distcheck\n\nreports which files are below the build directory but not in the\nMANIFEST file and vice versa. (See ExtUtils::Manifest::fullcheck() for\ndetails)\n\n=item    make skipcheck\n\nreports which files are skipped due to the entries in the\nC<MANIFEST.SKIP> file (See ExtUtils::Manifest::skipcheck() for\ndetails)\n\n=item    make distclean\n\ndoes a realclean first and then the distcheck. Note that this is not\nneeded to build a new distribution as long as you are sure that the\nMANIFEST file is ok.\n\n=item    make veryclean\n\ndoes a realclean first and then removes backup files such as C<*~>,\nC<*.bak>, C<*.old> and C<*.orig>\n\n=item    make manifest\n\nrewrites the MANIFEST file, adding all remaining files found (See\nExtUtils::Manifest::mkmanifest() for details)\n\n=item    make distdir\n\nCopies all the files that are in the MANIFEST file to a newly created\ndirectory with the name C<$(DISTNAME)-$(VERSION)>. If that directory\nexists, it will be removed first.\n\nAdditionally, it will create META.yml and META.json module meta-data file\nin the distdir and add this to the distdir's MANIFEST.  You can shut this\nbehavior off with the NO_META flag.\n\n=item   make disttest\n\nMakes a distdir first, and runs a C<perl Makefile.PL>, a make, and\na make test in that directory.\n\n=item    make tardist\n\nFirst does a distdir. Then a command $(PREOP) which defaults to a null\ncommand, followed by $(TO_UNIX), which defaults to a null command under\nUNIX, and will convert files in distribution directory to UNIX format\notherwise. Next it runs C<tar> on that directory into a tarfile and\ndeletes the directory. Finishes with a command $(POSTOP) which\ndefaults to a null command.\n\n=item    make dist\n\nDefaults to $(DIST_DEFAULT) which in turn defaults to tardist.\n\n=item    make uutardist\n\nRuns a tardist first and uuencodes the tarfile.\n\n=item    make shdist\n\nFirst does a distdir. Then a command $(PREOP) which defaults to a null\ncommand. Next it runs C<shar> on that directory into a sharfile and\ndeletes the intermediate directory again. Finishes with a command\n$(POSTOP) which defaults to a null command.  Note: For shdist to work\nproperly a C<shar> program that can handle directories is mandatory.\n\n=item    make zipdist\n\nFirst does a distdir. Then a command $(PREOP) which defaults to a null\ncommand. Runs C<$(ZIP) $(ZIPFLAGS)> on that directory into a\nzipfile. Then deletes that directory. Finishes with a command\n$(POSTOP) which defaults to a null command.\n\n=item    make ci\n\nDoes a $(CI) and a $(RCS_LABEL) on all files in the MANIFEST file.\n\n=back\n\nCustomization of the dist targets can be done by specifying a hash\nreference to the dist attribute of the WriteMakefile call. The\nfollowing parameters are recognized:\n\n    CI           ('ci -u')\n    COMPRESS     ('gzip --best')\n    POSTOP       ('@ :')\n    PREOP        ('@ :')\n    TO_UNIX      (depends on the system)\n    RCS_LABEL    ('rcs -q -Nv$(VERSION_SYM):')\n    SHAR         ('shar')\n    SUFFIX       ('.gz')\n    TAR          ('tar')\n    TARFLAGS     ('cvf')\n    ZIP          ('zip')\n    ZIPFLAGS     ('-r')\n\nAn example:\n\n    WriteMakefile(\n        ...other options...\n        dist => {\n            COMPRESS => \"bzip2\",\n            SUFFIX   => \".bz2\"\n        }\n    );\n\n\n=head2 Module Meta-Data (META and MYMETA)\n\nLong plaguing users of MakeMaker based modules has been the problem of\ngetting basic information about the module out of the sources\nI<without> running the F<Makefile.PL> and doing a bunch of messy\nheuristics on the resulting F<Makefile>.  Over the years, it has become\nstandard to keep this information in one or more CPAN Meta files\ndistributed with each distribution.\n\nThe original format of CPAN Meta files was L<YAML> and the corresponding\nfile was called F<META.yml>.  In 2010, version 2 of the L<CPAN::Meta::Spec>\nwas released, which mandates JSON format for the metadata in order to\novercome certain compatibility issues between YAML serializers and to\navoid breaking older clients unable to handle a new version of the spec.\nThe L<CPAN::Meta> library is now standard for accessing old and new-style\nMeta files.\n\nIf L<CPAN::Meta> is installed, MakeMaker will automatically generate\nF<META.json> and F<META.yml> files for you and add them to your F<MANIFEST> as\npart of the 'distdir' target (and thus the 'dist' target).  This is intended to\nseamlessly and rapidly populate CPAN with module meta-data.  If you wish to\nshut this feature off, set the C<NO_META> C<WriteMakefile()> flag to true.\n\nAt the 2008 QA Hackathon in Oslo, Perl module toolchain maintainers agrees\nto use the CPAN Meta format to communicate post-configuration requirements\nbetween toolchain components.  These files, F<MYMETA.json> and F<MYMETA.yml>,\nare generated when F<Makefile.PL> generates a F<Makefile> (if L<CPAN::Meta>\nis installed).  Clients like L<CPAN> or L<CPANPLUS> will read this\nfiles to see what prerequisites must be fulfilled before building or testing\nthe distribution.  If you with to shut this feature off, set the C<NO_MYMETA>\nC<WriteMakeFile()> flag to true.\n\n=head2 Disabling an extension\n\nIf some events detected in F<Makefile.PL> imply that there is no way\nto create the Module, but this is a normal state of things, then you\ncan create a F<Makefile> which does nothing, but succeeds on all the\n\"usual\" build targets.  To do so, use\n\n    use ExtUtils::MakeMaker qw(WriteEmptyMakefile);\n    WriteEmptyMakefile();\n\ninstead of WriteMakefile().\n\nThis may be useful if other modules expect this module to be I<built>\nOK, as opposed to I<work> OK (say, this system-dependent module builds\nin a subdirectory of some other distribution, or is listed as a\ndependency in a CPAN::Bundle, but the functionality is supported by\ndifferent means on the current architecture).\n\n=head2 Other Handy Functions\n\n=over 4\n\n=item prompt\n\n    my $value = prompt($message);\n    my $value = prompt($message, $default);\n\nThe C<prompt()> function provides an easy way to request user input\nused to write a makefile.  It displays the $message as a prompt for\ninput.  If a $default is provided it will be used as a default.  The\nfunction returns the $value selected by the user.\n\nIf C<prompt()> detects that it is not running interactively and there\nis nothing on STDIN or if the PERL_MM_USE_DEFAULT environment variable\nis set to true, the $default will be used without prompting.  This\nprevents automated processes from blocking on user input.\n\nIf no $default is provided an empty string will be used instead.\n\n=back\n\n=head2 Supported versions of Perl\n\nPlease note that while this module works on Perl 5.6, it is no longer\nbeing routinely tested on 5.6 - the earliest Perl version being routinely\ntested, and expressly supported, is 5.8.1. However, patches to repair\nany breakage on 5.6 are still being accepted.\n\n=head1 ENVIRONMENT\n\n=over 4\n\n=item PERL_MM_OPT\n\nCommand line options used by C<MakeMaker-E<gt>new()>, and thus by\nC<WriteMakefile()>.  The string is split as the shell would, and the result\nis processed before any actual command line arguments are processed.\n\n  PERL_MM_OPT='CCFLAGS=\"-Wl,-rpath -Wl,/foo/bar/lib\" LIBS=\"-lwibble -lwobble\"'\n\n=item PERL_MM_USE_DEFAULT\n\nIf set to a true value then MakeMaker's prompt function will\nalways return the default without waiting for user input.\n\n=item PERL_CORE\n\nSame as the PERL_CORE parameter.  The parameter overrides this.\n\n=back\n\n=head1 SEE ALSO\n\nL<Module::Build> is a pure-Perl alternative to MakeMaker which does\nnot rely on make or any other external utility.  It is easier to\nextend to suit your needs.\n\nL<Module::Install> is a wrapper around MakeMaker which adds features\nnot normally available.\n\nL<ExtUtils::ModuleMaker> and L<Module::Starter> are both modules to\nhelp you setup your distribution.\n\nL<CPAN::Meta> and L<CPAN::Meta::Spec> explain CPAN Meta files in detail.\n\nL<File::ShareDir::Install> makes it easy to install static, sometimes\nalso referred to as 'shared' files. L<File::ShareDir> helps accessing\nthe shared files after installation.\n\nL<Dist::Zilla> makes it easy for the module author to create MakeMaker-based\ndistributions with lots of bells and whistles.\n\n=head1 AUTHORS\n\nAndy Dougherty C<doughera@lafayette.edu>, Andreas KE<ouml>nig\nC<andreas.koenig@mind.de>, Tim Bunce C<timb@cpan.org>.  VMS\nsupport by Charles Bailey C<bailey@newman.upenn.edu>.  OS/2 support\nby Ilya Zakharevich C<ilya@math.ohio-state.edu>.\n\nCurrently maintained by Michael G Schwern C<schwern@pobox.com>\n\nSend patches and ideas to C<makemaker@perl.org>.\n\nSend bug reports via http://rt.cpan.org/.  Please send your\ngenerated Makefile along with your report.\n\nFor more up-to-date information, see L<https://metacpan.org/release/ExtUtils-MakeMaker>.\n\nRepository available at L<https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker>.\n\n=head1 LICENSE\n\nThis program is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself.\n\nSee L<http://www.perl.com/perl/misc/Artistic.html>\n\n\n=cut\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Win32.pm": "package ExtUtils::MM_Win32;\n\nuse strict;\n\n\n=head1 NAME\n\nExtUtils::MM_Win32 - methods to override UN*X behaviour in ExtUtils::MakeMaker\n\n=head1 SYNOPSIS\n\n use ExtUtils::MM_Win32; # Done internally by ExtUtils::MakeMaker if needed\n\n=head1 DESCRIPTION\n\nSee ExtUtils::MM_Unix for a documentation of the methods provided\nthere. This package overrides the implementation of these methods, not\nthe semantics.\n\n=cut\n\nuse ExtUtils::MakeMaker::Config;\nuse File::Basename;\nuse File::Spec;\nuse ExtUtils::MakeMaker qw( neatvalue );\n\nrequire ExtUtils::MM_Any;\nrequire ExtUtils::MM_Unix;\nour @ISA = qw( ExtUtils::MM_Any ExtUtils::MM_Unix );\nour $VERSION = '7.04_01';\n\n$ENV{EMXSHELL} = 'sh'; # to run `commands`\n\nmy ( $BORLAND, $GCC, $DLLTOOL ) = _identify_compiler_environment( \\%Config );\n\nsub _identify_compiler_environment {\n\tmy ( $config ) = @_;\n\n\tmy $BORLAND = $config->{cc} =~ /^bcc/i ? 1 : 0;\n\tmy $GCC     = $config->{cc} =~ /\\bgcc\\b/i ? 1 : 0;\n\tmy $DLLTOOL = $config->{dlltool} || 'dlltool';\n\n\treturn ( $BORLAND, $GCC, $DLLTOOL );\n}\n\n\n=head2 Overridden methods\n\n=over 4\n\n=item B<dlsyms>\n\n=cut\n\nsub dlsyms {\n    my($self,%attribs) = @_;\n\n    my($funcs) = $attribs{DL_FUNCS} || $self->{DL_FUNCS} || {};\n    my($vars)  = $attribs{DL_VARS} || $self->{DL_VARS} || [];\n    my($funclist) = $attribs{FUNCLIST} || $self->{FUNCLIST} || [];\n    my($imports)  = $attribs{IMPORTS} || $self->{IMPORTS} || {};\n    my(@m);\n\n    if (not $self->{SKIPHASH}{'dynamic'}) {\n\tpush(@m,\"\n$self->{BASEEXT}.def: Makefile.PL\n\",\n     q!\t$(PERLRUN) -MExtUtils::Mksymlists \\\\\n     -e \"Mksymlists('NAME'=>\\\"!, $self->{NAME},\n     q!\\\", 'DLBASE' => '!,$self->{DLBASE},\n     # The above two lines quoted differently to work around\n     # a bug in the 4DOS/4NT command line interpreter.  The visible\n     # result of the bug was files named q('extension_name',) *with the\n     # single quotes and the comma* in the extension build directories.\n     q!', 'DL_FUNCS' => !,neatvalue($funcs),\n     q!, 'FUNCLIST' => !,neatvalue($funclist),\n     q!, 'IMPORTS' => !,neatvalue($imports),\n     q!, 'DL_VARS' => !, neatvalue($vars), q!);\"\n!);\n    }\n    join('',@m);\n}\n\n=item replace_manpage_separator\n\nChanges the path separator with .\n\n=cut\n\nsub replace_manpage_separator {\n    my($self,$man) = @_;\n    $man =~ s,/+,.,g;\n    $man;\n}\n\n\n=item B<maybe_command>\n\nSince Windows has nothing as simple as an executable bit, we check the\nfile extension.\n\nThe PATHEXT env variable will be used to get a list of extensions that\nmight indicate a command, otherwise .com, .exe, .bat and .cmd will be\nused by default.\n\n=cut\n\nsub maybe_command {\n    my($self,$file) = @_;\n    my @e = exists($ENV{'PATHEXT'})\n          ? split(/;/, $ENV{PATHEXT})\n\t  : qw(.com .exe .bat .cmd);\n    my $e = '';\n    for (@e) { $e .= \"\\Q$_\\E|\" }\n    chop $e;\n    # see if file ends in one of the known extensions\n    if ($file =~ /($e)$/i) {\n\treturn $file if -e $file;\n    }\n    else {\n\tfor (@e) {\n\t    return \"$file$_\" if -e \"$file$_\";\n\t}\n    }\n    return;\n}\n\n\n=item B<init_DIRFILESEP>\n\nUsing \\ for Windows, except for \"gmake\" where it is /.\n\n=cut\n\nsub init_DIRFILESEP {\n    my($self) = shift;\n\n    # The ^ makes sure its not interpreted as an escape in nmake\n    $self->{DIRFILESEP} = $self->is_make_type('nmake') ? '^\\\\' :\n                          $self->is_make_type('dmake') ? '\\\\\\\\' :\n                          $self->is_make_type('gmake') ? '/'\n                                                       : '\\\\';\n}\n\n=item init_tools\n\nOverride some of the slower, portable commands with Windows specific ones.\n\n=cut\n\nsub init_tools {\n    my ($self) = @_;\n\n    $self->{NOOP}     ||= 'rem';\n    $self->{DEV_NULL} ||= '> NUL';\n\n    $self->{FIXIN}    ||= $self->{PERL_CORE} ?\n      \"\\$(PERLRUN) $self->{PERL_SRC}\\\\win32\\\\bin\\\\pl2bat.pl\" :\n      'pl2bat.bat';\n\n    $self->SUPER::init_tools;\n\n    # Setting SHELL from $Config{sh} can break dmake.  Its ok without it.\n    delete $self->{SHELL};\n\n    return;\n}\n\n\n=item init_others\n\nOverride the default link and compile tools.\n\nLDLOADLIBS's default is changed to $Config{libs}.\n\nAdjustments are made for Borland's quirks needing -L to come first.\n\n=cut\n\nsub init_others {\n    my $self = shift;\n\n    $self->{LD}     ||= 'link';\n    $self->{AR}     ||= 'lib';\n\n    $self->SUPER::init_others;\n\n    $self->{LDLOADLIBS} ||= $Config{libs};\n    # -Lfoo must come first for Borland, so we put it in LDDLFLAGS\n    if ($BORLAND) {\n        my $libs = $self->{LDLOADLIBS};\n        my $libpath = '';\n        while ($libs =~ s/(?:^|\\s)((\"?)-L.+?\\2)(?:\\s|$)/ /) {\n            $libpath .= ' ' if length $libpath;\n            $libpath .= $1;\n        }\n        $self->{LDLOADLIBS} = $libs;\n        $self->{LDDLFLAGS} ||= $Config{lddlflags};\n        $self->{LDDLFLAGS} .= \" $libpath\";\n    }\n\n    return;\n}\n\n\n=item init_platform\n\nAdd MM_Win32_VERSION.\n\n=item platform_constants\n\n=cut\n\nsub init_platform {\n    my($self) = shift;\n\n    $self->{MM_Win32_VERSION} = $VERSION;\n\n    return;\n}\n\nsub platform_constants {\n    my($self) = shift;\n    my $make_frag = '';\n\n    foreach my $macro (qw(MM_Win32_VERSION))\n    {\n        next unless defined $self->{$macro};\n        $make_frag .= \"$macro = $self->{$macro}\\n\";\n    }\n\n    return $make_frag;\n}\n\n\n=item constants\n\nAdd MAXLINELENGTH for dmake before all the constants are output.\n\n=cut\n\nsub constants {\n    my $self = shift;\n\n    my $make_text = $self->SUPER::constants;\n    return $make_text unless $self->is_make_type('dmake');\n\n    # dmake won't read any single \"line\" (even those with escaped newlines)\n    # larger than a certain size which can be as small as 8k.  PM_TO_BLIB\n    # on large modules like DateTime::TimeZone can create lines over 32k.\n    # So we'll crank it up to a <ironic>WHOPPING</ironic> 64k.\n    #\n    # This has to come here before all the constants and not in\n    # platform_constants which is after constants.\n    my $size = $self->{MAXLINELENGTH} || 800000;\n    my $prefix = qq{\n# Get dmake to read long commands like PM_TO_BLIB\nMAXLINELENGTH = $size\n\n};\n\n    return $prefix . $make_text;\n}\n\n\n=item special_targets\n\nAdd .USESHELL target for dmake.\n\n=cut\n\nsub special_targets {\n    my($self) = @_;\n\n    my $make_frag = $self->SUPER::special_targets;\n\n    $make_frag .= <<'MAKE_FRAG' if $self->is_make_type('dmake');\n.USESHELL :\nMAKE_FRAG\n\n    return $make_frag;\n}\n\n\n=item static_lib\n\nChanges how to run the linker.\n\nThe rest is duplicate code from MM_Unix.  Should move the linker code\nto its own method.\n\n=cut\n\nsub static_lib {\n    my($self) = @_;\n    return '' unless $self->has_link_code;\n\n    my(@m);\n    push(@m, <<'END');\n$(INST_STATIC): $(OBJECT) $(MYEXTLIB) $(INST_ARCHAUTODIR)$(DFSEP).exists\n\t$(RM_RF) $@\nEND\n\n    # If this extension has its own library (eg SDBM_File)\n    # then copy that to $(INST_STATIC) and add $(OBJECT) into it.\n    push @m, <<'MAKE_FRAG' if $self->{MYEXTLIB};\n\t$(CP) $(MYEXTLIB) $@\nMAKE_FRAG\n\n    push @m,\nq{\t$(AR) }.($BORLAND ? '$@ $(OBJECT:^\"+\")'\n\t\t\t  : ($GCC ? '-ru $@ $(OBJECT)'\n\t\t\t          : '-out:$@ $(OBJECT)')).q{\n\t$(CHMOD) $(PERM_RWX) $@\n\t$(NOECHO) $(ECHO) \"$(EXTRALIBS)\" > $(INST_ARCHAUTODIR)\\extralibs.ld\n};\n\n    # Old mechanism - still available:\n    push @m, <<'MAKE_FRAG' if $self->{PERL_SRC} && $self->{EXTRALIBS};\n\t$(NOECHO) $(ECHO) \"$(EXTRALIBS)\" >> $(PERL_SRC)\\ext.libs\nMAKE_FRAG\n\n    join('', @m);\n}\n\n\n=item dynamic_lib\n\nComplicated stuff for Win32 that I don't understand. :(\n\n=cut\n\nsub dynamic_lib {\n    my($self, %attribs) = @_;\n    return '' unless $self->needs_linking(); #might be because of a subdir\n\n    return '' unless $self->has_link_code;\n\n    my($otherldflags) = $attribs{OTHERLDFLAGS} || ($BORLAND ? 'c0d32.obj': '');\n    my($inst_dynamic_dep) = $attribs{INST_DYNAMIC_DEP} || \"\";\n    my($ldfrom) = '$(LDFROM)';\n    my(@m);\n\n    push(@m,'\n# This section creates the dynamically loadable $(INST_DYNAMIC)\n# from $(OBJECT) and possibly $(MYEXTLIB).\nOTHERLDFLAGS = '.$otherldflags.'\nINST_DYNAMIC_DEP = '.$inst_dynamic_dep.'\n\n$(INST_DYNAMIC): $(OBJECT) $(MYEXTLIB) $(BOOTSTRAP) $(INST_ARCHAUTODIR)$(DFSEP).exists $(EXPORT_LIST) $(PERL_ARCHIVEDEP) $(INST_DYNAMIC_DEP)\n');\n    if ($GCC) {\n      push(@m,\n       q{\t}.$DLLTOOL.q{ --def $(EXPORT_LIST) --output-exp dll.exp\n\t$(LD) -o $@ -Wl,--base-file -Wl,dll.base $(LDDLFLAGS) }.$ldfrom.q{ $(OTHERLDFLAGS) $(MYEXTLIB) \"$(PERL_ARCHIVE)\" $(LDLOADLIBS) dll.exp\n\t}.$DLLTOOL.q{ --def $(EXPORT_LIST) --base-file dll.base --output-exp dll.exp\n\t$(LD) -o $@ $(LDDLFLAGS) }.$ldfrom.q{ $(OTHERLDFLAGS) $(MYEXTLIB) \"$(PERL_ARCHIVE)\" $(LDLOADLIBS) dll.exp });\n    } elsif ($BORLAND) {\n      push(@m,\n       q{\t$(LD) $(LDDLFLAGS) $(OTHERLDFLAGS) }.$ldfrom.q{,$@,,}\n       .($self->is_make_type('dmake')\n                ? q{\"$(PERL_ARCHIVE:s,/,\\,)\" $(LDLOADLIBS:s,/,\\,) }\n\t\t .q{$(MYEXTLIB:s,/,\\,),$(EXPORT_LIST:s,/,\\,)}\n\t\t: q{\"$(subst /,\\,$(PERL_ARCHIVE))\" $(subst /,\\,$(LDLOADLIBS)) }\n\t\t .q{$(subst /,\\,$(MYEXTLIB)),$(subst /,\\,$(EXPORT_LIST))})\n       .q{,$(RESFILES)});\n    } else {\t# VC\n      push(@m,\n       q{\t$(LD) -out:$@ $(LDDLFLAGS) }.$ldfrom.q{ $(OTHERLDFLAGS) }\n      .q{$(MYEXTLIB) \"$(PERL_ARCHIVE)\" $(LDLOADLIBS) -def:$(EXPORT_LIST)});\n\n      # Embed the manifest file if it exists\n      push(@m, q{\n\tif exist $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;2\n\tif exist $@.manifest del $@.manifest});\n    }\n    push @m, '\n\t$(CHMOD) $(PERM_RWX) $@\n';\n\n    join('',@m);\n}\n\n=item extra_clean_files\n\nClean out some extra dll.{base,exp} files which might be generated by\ngcc.  Otherwise, take out all *.pdb files.\n\n=cut\n\nsub extra_clean_files {\n    my $self = shift;\n\n    return $GCC ? (qw(dll.base dll.exp)) : ('*.pdb');\n}\n\n=item init_linker\n\n=cut\n\nsub init_linker {\n    my $self = shift;\n\n    $self->{PERL_ARCHIVE}       = \"\\$(PERL_INC)\\\\$Config{libperl}\";\n    $self->{PERL_ARCHIVEDEP}    = \"\\$(PERL_INCDEP)\\\\$Config{libperl}\";\n    $self->{PERL_ARCHIVE_AFTER} = '';\n    $self->{EXPORT_LIST}        = '$(BASEEXT).def';\n}\n\n\n=item perl_script\n\nChecks for the perl program under several common perl extensions.\n\n=cut\n\nsub perl_script {\n    my($self,$file) = @_;\n    return $file if -r $file && -f _;\n    return \"$file.pl\"  if -r \"$file.pl\" && -f _;\n    return \"$file.plx\" if -r \"$file.plx\" && -f _;\n    return \"$file.bat\" if -r \"$file.bat\" && -f _;\n    return;\n}\n\nsub can_dep_space {\n    my $self = shift;\n    1; # with Win32::GetShortPathName\n}\n\n=item quote_dep\n\n=cut\n\nsub quote_dep {\n    my ($self, $arg) = @_;\n    if ($arg =~ / / and not $self->is_make_type('gmake')) {\n        require Win32;\n        $arg = Win32::GetShortPathName($arg);\n        die <<EOF if not defined $arg or $arg =~ / /;\nTried to use make dependency with space for non-GNU make:\n  '$arg'\nFallback to short pathname failed.\nEOF\n        return $arg;\n    }\n    return $self->SUPER::quote_dep($arg);\n}\n\n=item xs_o\n\nThis target is stubbed out.  Not sure why.\n\n=cut\n\nsub xs_o {\n    return ''\n}\n\n\n=item pasthru\n\nAll we send is -nologo to nmake to prevent it from printing its damned\nbanner.\n\n=cut\n\nsub pasthru {\n    my($self) = shift;\n    return \"PASTHRU = \" . ($self->is_make_type('nmake') ? \"-nologo\" : \"\");\n}\n\n\n=item arch_check (override)\n\nNormalize all arguments for consistency of comparison.\n\n=cut\n\nsub arch_check {\n    my $self = shift;\n\n    # Win32 is an XS module, minperl won't have it.\n    # arch_check() is not critical, so just fake it.\n    return 1 unless $self->can_load_xs;\n    return $self->SUPER::arch_check( map { $self->_normalize_path_name($_) } @_);\n}\n\nsub _normalize_path_name {\n    my $self = shift;\n    my $file = shift;\n\n    require Win32;\n    my $short = Win32::GetShortPathName($file);\n    return defined $short ? lc $short : lc $file;\n}\n\n\n=item oneliner\n\nThese are based on what command.com does on Win98.  They may be wrong\nfor other Windows shells, I don't know.\n\n=cut\n\nsub oneliner {\n    my($self, $cmd, $switches) = @_;\n    $switches = [] unless defined $switches;\n\n    # Strip leading and trailing newlines\n    $cmd =~ s{^\\n+}{};\n    $cmd =~ s{\\n+$}{};\n\n    $cmd = $self->quote_literal($cmd);\n    $cmd = $self->escape_newlines($cmd);\n\n    $switches = join ' ', @$switches;\n\n    return qq{\\$(ABSPERLRUN) $switches -e $cmd --};\n}\n\n\nsub quote_literal {\n    my($self, $text, $opts) = @_;\n    $opts->{allow_variables} = 1 unless defined $opts->{allow_variables};\n\n    # See: http://www.autohotkey.net/~deleyd/parameters/parameters.htm#CPP\n\n    # Apply the Microsoft C/C++ parsing rules\n    $text =~ s{\\\\\\\\\"}{\\\\\\\\\\\\\\\\\\\\\"}g;  # \\\\\" -> \\\\\\\\\\\"\n    $text =~ s{(?<!\\\\)\\\\\"}{\\\\\\\\\\\\\"}g; # \\\"  -> \\\\\\\"\n    $text =~ s{(?<!\\\\)\"}{\\\\\"}g;       # \"   -> \\\"\n    $text = qq{\"$text\"} if $text =~ /[ \\t]/;\n\n    # Apply the Command Prompt parsing rules (cmd.exe)\n    my @text = split /(\"[^\"]*\")/, $text;\n    # We should also escape parentheses, but it breaks one-liners containing\n    # $(MACRO)s in makefiles.\n    s{([<>|&^@!])}{^$1}g foreach grep { !/^\"[^\"]*\"$/ } @text;\n    $text = join('', @text);\n\n    # dmake expands {{ to { and }} to }.\n    if( $self->is_make_type('dmake') ) {\n        $text =~ s/{/{{/g;\n        $text =~ s/}/}}/g;\n    }\n\n    $text = $opts->{allow_variables}\n      ? $self->escape_dollarsigns($text) : $self->escape_all_dollarsigns($text);\n\n    return $text;\n}\n\n\nsub escape_newlines {\n    my($self, $text) = @_;\n\n    # Escape newlines\n    $text =~ s{\\n}{\\\\\\n}g;\n\n    return $text;\n}\n\n\n=item cd\n\ndmake can handle Unix style cd'ing but nmake (at least 1.5) cannot.  It\nwants:\n\n    cd dir1\\dir2\n    command\n    another_command\n    cd ..\\..\n\n=cut\n\nsub cd {\n    my($self, $dir, @cmds) = @_;\n\n    return $self->SUPER::cd($dir, @cmds) unless $self->is_make_type('nmake');\n\n    my $cmd = join \"\\n\\t\", map \"$_\", @cmds;\n\n    my $updirs = $self->catdir(map { $self->updir } $self->splitdir($dir));\n\n    # No leading tab and no trailing newline makes for easier embedding.\n    my $make_frag = sprintf <<'MAKE_FRAG', $dir, $cmd, $updirs;\ncd %s\n\t%s\n\tcd %s\nMAKE_FRAG\n\n    chomp $make_frag;\n\n    return $make_frag;\n}\n\n\n=item max_exec_len\n\nnmake 1.50 limits command length to 2048 characters.\n\n=cut\n\nsub max_exec_len {\n    my $self = shift;\n\n    return $self->{_MAX_EXEC_LEN} ||= 2 * 1024;\n}\n\n\n=item os_flavor\n\nWindows is Win32.\n\n=cut\n\nsub os_flavor {\n    return('Win32');\n}\n\n\n=item cflags\n\nDefines the PERLDLL symbol if we are configured for static building since all\ncode destined for the perl5xx.dll must be compiled with the PERLDLL symbol\ndefined.\n\n=cut\n\nsub cflags {\n    my($self,$libperl)=@_;\n    return $self->{CFLAGS} if $self->{CFLAGS};\n    return '' unless $self->needs_linking();\n\n    my $base = $self->SUPER::cflags($libperl);\n    foreach (split /\\n/, $base) {\n        /^(\\S*)\\s*=\\s*(\\S*)$/ and $self->{$1} = $2;\n    };\n    $self->{CCFLAGS} .= \" -DPERLDLL\" if ($self->{LINKTYPE} eq 'static');\n\n    return $self->{CFLAGS} = qq{\nCCFLAGS = $self->{CCFLAGS}\nOPTIMIZE = $self->{OPTIMIZE}\nPERLTYPE = $self->{PERLTYPE}\n};\n\n}\n\n1;\n__END__\n\n=back\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm": "package ExtUtils::MM_Unix;\n\nrequire 5.006;\n\nuse strict;\n\nuse Carp;\nuse ExtUtils::MakeMaker::Config;\nuse File::Basename qw(basename dirname);\nuse DirHandle;\n\nour %Config_Override;\n\nuse ExtUtils::MakeMaker qw($Verbose neatvalue);\n\n# If we make $VERSION an our variable parse_version() breaks\nuse vars qw($VERSION);\n$VERSION = '7.04_01';\n$VERSION = eval $VERSION;  ## no critic [BuiltinFunctions::ProhibitStringyEval]\n\nrequire ExtUtils::MM_Any;\nour @ISA = qw(ExtUtils::MM_Any);\n\nmy %Is;\nBEGIN {\n    $Is{OS2}     = $^O eq 'os2';\n    $Is{Win32}   = $^O eq 'MSWin32' || $Config{osname} eq 'NetWare';\n    $Is{Dos}     = $^O eq 'dos';\n    $Is{VMS}     = $^O eq 'VMS';\n    $Is{OSF}     = $^O eq 'dec_osf';\n    $Is{IRIX}    = $^O eq 'irix';\n    $Is{NetBSD}  = $^O eq 'netbsd';\n    $Is{Interix} = $^O eq 'interix';\n    $Is{SunOS4}  = $^O eq 'sunos';\n    $Is{Solaris} = $^O eq 'solaris';\n    $Is{SunOS}   = $Is{SunOS4} || $Is{Solaris};\n    $Is{BSD}     = ($^O =~ /^(?:free|net|open)bsd$/ or\n                   grep( $^O eq $_, qw(bsdos interix dragonfly) )\n                  );\n    $Is{Android} = $^O =~ /android/;\n}\n\nBEGIN {\n    if( $Is{VMS} ) {\n        # For things like vmsify()\n        require VMS::Filespec;\n        VMS::Filespec->import;\n    }\n}\n\n\n=head1 NAME\n\nExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker\n\n=head1 SYNOPSIS\n\nC<require ExtUtils::MM_Unix;>\n\n=head1 DESCRIPTION\n\nThe methods provided by this package are designed to be used in\nconjunction with ExtUtils::MakeMaker. When MakeMaker writes a\nMakefile, it creates one or more objects that inherit their methods\nfrom a package C<MM>. MM itself doesn't provide any methods, but it\nISA ExtUtils::MM_Unix class. The inheritance tree of MM lets operating\nspecific packages take the responsibility for all the methods provided\nby MM_Unix. We are trying to reduce the number of the necessary\noverrides by defining rather primitive operations within\nExtUtils::MM_Unix.\n\nIf you are going to write a platform specific MM package, please try\nto limit the necessary overrides to primitive methods, and if it is not\npossible to do so, let's work out how to achieve that gain.\n\nIf you are overriding any of these methods in your Makefile.PL (in the\nMY class), please report that to the makemaker mailing list. We are\ntrying to minimize the necessary method overrides and switch to data\ndriven Makefile.PLs wherever possible. In the long run less methods\nwill be overridable via the MY class.\n\n=head1 METHODS\n\nThe following description of methods is still under\ndevelopment. Please refer to the code for not suitably documented\nsections and complain loudly to the makemaker@perl.org mailing list.\nBetter yet, provide a patch.\n\nNot all of the methods below are overridable in a\nMakefile.PL. Overridable methods are marked as (o). All methods are\noverridable by a platform specific MM_*.pm file.\n\nCross-platform methods are being moved into MM_Any.  If you can't find\nsomething that used to be in here, look in MM_Any.\n\n=cut\n\n# So we don't have to keep calling the methods over and over again,\n# we have these globals to cache the values.  Faster and shrtr.\nmy $Curdir  = __PACKAGE__->curdir;\nmy $Rootdir = __PACKAGE__->rootdir;\nmy $Updir   = __PACKAGE__->updir;\n\n\n=head2 Methods\n\n=over 4\n\n=item os_flavor\n\nSimply says that we're Unix.\n\n=cut\n\nsub os_flavor {\n    return('Unix');\n}\n\n\n=item c_o (o)\n\nDefines the suffix rules to compile different flavors of C files to\nobject files.\n\n=cut\n\nsub c_o {\n# --- Translation Sections ---\n\n    my($self) = shift;\n    return '' unless $self->needs_linking();\n    my(@m);\n\n    my $command = '$(CCCMD)';\n    my $flags   = '$(CCCDLFLAGS) \"-I$(PERL_INC)\" $(PASTHRU_DEFINE) $(DEFINE)';\n\n    if (my $cpp = $Config{cpprun}) {\n        my $cpp_cmd = $self->const_cccmd;\n        $cpp_cmd =~ s/^CCCMD\\s*=\\s*\\$\\(CC\\)/$cpp/;\n        push @m, qq{\n.c.i:\n\t$cpp_cmd $flags \\$*.c > \\$*.i\n};\n    }\n\n    push @m, qq{\n.c.s:\n\t$command -S $flags \\$*.c\n\n.c\\$(OBJ_EXT):\n\t$command $flags \\$*.c\n\n.cpp\\$(OBJ_EXT):\n\t$command $flags \\$*.cpp\n\n.cxx\\$(OBJ_EXT):\n\t$command $flags \\$*.cxx\n\n.cc\\$(OBJ_EXT):\n\t$command $flags \\$*.cc\n};\n\n    push @m, qq{\n.C\\$(OBJ_EXT):\n\t$command $flags \\$*.C\n} if !$Is{OS2} and !$Is{Win32} and !$Is{Dos}; #Case-specific\n\n    return join \"\", @m;\n}\n\n=item cflags (o)\n\nDoes very much the same as the cflags script in the perl\ndistribution. It doesn't return the whole compiler command line, but\ninitializes all of its parts. The const_cccmd method then actually\nreturns the definition of the CCCMD macro which uses these parts.\n\n=cut\n\n#'\n\nsub cflags {\n    my($self,$libperl)=@_;\n    return $self->{CFLAGS} if $self->{CFLAGS};\n    return '' unless $self->needs_linking();\n\n    my($prog, $uc, $perltype, %cflags);\n    $libperl ||= $self->{LIBPERL_A} || \"libperl$self->{LIB_EXT}\" ;\n    $libperl =~ s/\\.\\$\\(A\\)$/$self->{LIB_EXT}/;\n\n    @cflags{qw(cc ccflags optimize shellflags)}\n\t= @Config{qw(cc ccflags optimize shellflags)};\n\n    # Perl 5.21.4 adds the (gcc) warning (-Wall ...) and std (-std=c89)\n    # flags to the %Config, and the modules in the core should be built\n    # with the warning flags, but NOT the -std=c89 flags (the latter\n    # would break using any system header files that are strict C99).\n    my @ccextraflags = qw(ccwarnflags);\n    if ($ENV{PERL_CORE}) {\n      for my $x (@ccextraflags) {\n        if (exists $Config{$x}) {\n          $cflags{$x} = $Config{$x};\n        }\n      }\n    }\n\n    my($optdebug) = \"\";\n\n    $cflags{shellflags} ||= '';\n\n    my(%map) =  (\n\t\tD =>   '-DDEBUGGING',\n\t\tE =>   '-DEMBED',\n\t\tDE =>  '-DDEBUGGING -DEMBED',\n\t\tM =>   '-DEMBED -DMULTIPLICITY',\n\t\tDM =>  '-DDEBUGGING -DEMBED -DMULTIPLICITY',\n\t\t);\n\n    if ($libperl =~ /libperl(\\w*)\\Q$self->{LIB_EXT}/){\n\t$uc = uc($1);\n    } else {\n\t$uc = \"\"; # avoid warning\n    }\n    $perltype = $map{$uc} ? $map{$uc} : \"\";\n\n    if ($uc =~ /^D/) {\n\t$optdebug = \"-g\";\n    }\n\n\n    my($name);\n    ( $name = $self->{NAME} . \"_cflags\" ) =~ s/:/_/g ;\n    if ($prog = $Config{$name}) {\n\t# Expand hints for this extension via the shell\n\tprint \"Processing $name hint:\\n\" if $Verbose;\n\tmy(@o)=`cc=\\\"$cflags{cc}\\\"\n\t  ccflags=\\\"$cflags{ccflags}\\\"\n\t  optimize=\\\"$cflags{optimize}\\\"\n\t  perltype=\\\"$cflags{perltype}\\\"\n\t  optdebug=\\\"$cflags{optdebug}\\\"\n\t  eval '$prog'\n\t  echo cc=\\$cc\n\t  echo ccflags=\\$ccflags\n\t  echo optimize=\\$optimize\n\t  echo perltype=\\$perltype\n\t  echo optdebug=\\$optdebug\n\t  `;\n\tforeach my $line (@o){\n\t    chomp $line;\n\t    if ($line =~ /(.*?)=\\s*(.*)\\s*$/){\n\t\t$cflags{$1} = $2;\n\t\tprint \"\t$1 = $2\\n\" if $Verbose;\n\t    } else {\n\t\tprint \"Unrecognised result from hint: '$line'\\n\";\n\t    }\n\t}\n    }\n\n    if ($optdebug) {\n\t$cflags{optimize} = $optdebug;\n    }\n\n    for (qw(ccflags optimize perltype)) {\n        $cflags{$_} ||= '';\n\t$cflags{$_} =~ s/^\\s+//;\n\t$cflags{$_} =~ s/\\s+/ /g;\n\t$cflags{$_} =~ s/\\s+$//;\n\t$self->{uc $_} ||= $cflags{$_};\n    }\n\n    if ($self->{POLLUTE}) {\n\t$self->{CCFLAGS} .= ' -DPERL_POLLUTE ';\n    }\n\n    for my $x (@ccextraflags) {\n      next unless exists $cflags{$x};\n      $self->{CCFLAGS} .= $cflags{$x} =~ m!^\\s! ? $cflags{$x} : ' ' . $cflags{$x};\n    }\n\n    my $pollute = '';\n    if ($Config{usemymalloc} and not $Config{bincompat5005}\n\tand not $Config{ccflags} =~ /-DPERL_POLLUTE_MALLOC\\b/\n\tand $self->{PERL_MALLOC_OK}) {\n\t$pollute = '$(PERL_MALLOC_DEF)';\n    }\n\n    $self->{CCFLAGS}  = quote_paren($self->{CCFLAGS});\n    $self->{OPTIMIZE} = quote_paren($self->{OPTIMIZE});\n\n    return $self->{CFLAGS} = qq{\nCCFLAGS = $self->{CCFLAGS}\nOPTIMIZE = $self->{OPTIMIZE}\nPERLTYPE = $self->{PERLTYPE}\nMPOLLUTE = $pollute\n};\n\n}\n\n\n=item const_cccmd (o)\n\nReturns the full compiler call for C programs and stores the\ndefinition in CONST_CCCMD.\n\n=cut\n\nsub const_cccmd {\n    my($self,$libperl)=@_;\n    return $self->{CONST_CCCMD} if $self->{CONST_CCCMD};\n    return '' unless $self->needs_linking();\n    return $self->{CONST_CCCMD} =\n\tq{CCCMD = $(CC) -c $(PASTHRU_INC) $(INC) \\\\\n\t$(CCFLAGS) $(OPTIMIZE) \\\\\n\t$(PERLTYPE) $(MPOLLUTE) $(DEFINE_VERSION) \\\\\n\t$(XS_DEFINE_VERSION)};\n}\n\n=item const_config (o)\n\nDefines a couple of constants in the Makefile that are imported from\n%Config.\n\n=cut\n\nsub const_config {\n# --- Constants Sections ---\n\n    my($self) = shift;\n    my @m = <<\"END\";\n\n# These definitions are from config.sh (via $INC{'Config.pm'}).\n# They may have been overridden via Makefile.PL or on the command line.\nEND\n\n    my(%once_only);\n    foreach my $key (@{$self->{CONFIG}}){\n        # SITE*EXP macros are defined in &constants; avoid duplicates here\n        next if $once_only{$key};\n        $self->{uc $key} = quote_paren($self->{uc $key});\n        push @m, uc($key) , ' = ' , $self->{uc $key}, \"\\n\";\n        $once_only{$key} = 1;\n    }\n    join('', @m);\n}\n\n=item const_loadlibs (o)\n\nDefines EXTRALIBS, LDLOADLIBS, BSLOADLIBS, LD_RUN_PATH. See\nL<ExtUtils::Liblist> for details.\n\n=cut\n\nsub const_loadlibs {\n    my($self) = shift;\n    return \"\" unless $self->needs_linking;\n    my @m;\n    push @m, qq{\n# $self->{NAME} might depend on some other libraries:\n# See ExtUtils::Liblist for details\n#\n};\n    for my $tmp (qw/\n         EXTRALIBS LDLOADLIBS BSLOADLIBS\n         /) {\n        next unless defined $self->{$tmp};\n        push @m, \"$tmp = $self->{$tmp}\\n\";\n    }\n    # don't set LD_RUN_PATH if empty\n    for my $tmp (qw/\n         LD_RUN_PATH\n         /) {\n        next unless $self->{$tmp};\n        push @m, \"$tmp = $self->{$tmp}\\n\";\n    }\n    return join \"\", @m;\n}\n\n=item constants (o)\n\n  my $make_frag = $mm->constants;\n\nPrints out macros for lots of constants.\n\n=cut\n\nsub constants {\n    my($self) = @_;\n    my @m = ();\n\n    $self->{DFSEP} = '$(DIRFILESEP)';  # alias for internal use\n\n    for my $macro (qw(\n\n              AR_STATIC_ARGS DIRFILESEP DFSEP\n              NAME NAME_SYM\n              VERSION    VERSION_MACRO    VERSION_SYM DEFINE_VERSION\n              XS_VERSION XS_VERSION_MACRO             XS_DEFINE_VERSION\n              INST_ARCHLIB INST_SCRIPT INST_BIN INST_LIB\n              INST_MAN1DIR INST_MAN3DIR\n              MAN1EXT      MAN3EXT\n              INSTALLDIRS INSTALL_BASE DESTDIR PREFIX\n              PERLPREFIX      SITEPREFIX      VENDORPREFIX\n                   ),\n                   (map { (\"INSTALL\".$_,\n                          \"DESTINSTALL\".$_)\n                        } $self->installvars),\n                   qw(\n              PERL_LIB\n              PERL_ARCHLIB PERL_ARCHLIBDEP\n              LIBPERL_A MYEXTLIB\n              FIRST_MAKEFILE MAKEFILE_OLD MAKE_APERL_FILE\n              PERLMAINCC PERL_SRC PERL_INC PERL_INCDEP\n              PERL            FULLPERL          ABSPERL\n              PERLRUN         FULLPERLRUN       ABSPERLRUN\n              PERLRUNINST     FULLPERLRUNINST   ABSPERLRUNINST\n              PERL_CORE\n              PERM_DIR PERM_RW PERM_RWX\n\n\t      ) )\n    {\n\tnext unless defined $self->{$macro};\n\n        # pathnames can have sharp signs in them; escape them so\n        # make doesn't think it is a comment-start character.\n        $self->{$macro} =~ s/#/\\\\#/g;\n\t$self->{$macro} = $self->quote_dep($self->{$macro})\n\t  if $ExtUtils::MakeMaker::macro_dep{$macro};\n\tpush @m, \"$macro = $self->{$macro}\\n\";\n    }\n\n    push @m, qq{\nMAKEMAKER   = $self->{MAKEMAKER}\nMM_VERSION  = $self->{MM_VERSION}\nMM_REVISION = $self->{MM_REVISION}\n};\n\n    push @m, q{\n# FULLEXT = Pathname for extension directory (eg Foo/Bar/Oracle).\n# BASEEXT = Basename part of FULLEXT. May be just equal FULLEXT. (eg Oracle)\n# PARENT_NAME = NAME without BASEEXT and no trailing :: (eg Foo::Bar)\n# DLBASE  = Basename part of dynamic library. May be just equal BASEEXT.\n};\n\n    for my $macro (qw/\n              MAKE\n\t      FULLEXT BASEEXT PARENT_NAME DLBASE VERSION_FROM INC DEFINE OBJECT\n\t      LDFROM LINKTYPE BOOTDEP\n\t      /\t)\n    {\n\tnext unless defined $self->{$macro};\n\tpush @m, \"$macro = $self->{$macro}\\n\";\n    }\n\n    push @m, \"\n# Handy lists of source code files:\nXS_FILES = \".$self->wraplist(sort keys %{$self->{XS}}).\"\nC_FILES  = \".$self->wraplist(@{$self->{C}}).\"\nO_FILES  = \".$self->wraplist(@{$self->{O_FILES}}).\"\nH_FILES  = \".$self->wraplist(@{$self->{H}}).\"\nMAN1PODS = \".$self->wraplist(sort keys %{$self->{MAN1PODS}}).\"\nMAN3PODS = \".$self->wraplist(sort keys %{$self->{MAN3PODS}}).\"\n\";\n\n\n    push @m, q{\n# Where is the Config information that we are using/depend on\nCONFIGDEP = $(PERL_ARCHLIBDEP)$(DFSEP)Config.pm $(PERL_INCDEP)$(DFSEP)config.h\n} if -e File::Spec->catfile( $self->{PERL_INC}, 'config.h' );\n\n\n    push @m, qq{\n# Where to build things\nINST_LIBDIR      = $self->{INST_LIBDIR}\nINST_ARCHLIBDIR  = $self->{INST_ARCHLIBDIR}\n\nINST_AUTODIR     = $self->{INST_AUTODIR}\nINST_ARCHAUTODIR = $self->{INST_ARCHAUTODIR}\n\nINST_STATIC      = $self->{INST_STATIC}\nINST_DYNAMIC     = $self->{INST_DYNAMIC}\nINST_BOOT        = $self->{INST_BOOT}\n};\n\n    push @m, qq{\n# Extra linker info\nEXPORT_LIST        = $self->{EXPORT_LIST}\nPERL_ARCHIVE       = $self->{PERL_ARCHIVE}\nPERL_ARCHIVEDEP    = $self->{PERL_ARCHIVEDEP}\nPERL_ARCHIVE_AFTER = $self->{PERL_ARCHIVE_AFTER}\n};\n\n    push @m, \"\n\nTO_INST_PM = \".$self->wraplist(sort keys %{$self->{PM}}).\"\n\nPM_TO_BLIB = \".$self->wraplist(map { ($_ => $self->{PM}->{$_}) } sort keys %{$self->{PM}}).\"\n\";\n\n    join('',@m);\n}\n\n\n=item depend (o)\n\nSame as macro for the depend attribute.\n\n=cut\n\nsub depend {\n    my($self,%attribs) = @_;\n    my(@m,$key,$val);\n    while (($key,$val) = each %attribs){\n\tlast unless defined $key;\n\tpush @m, \"$key : $val\\n\";\n    }\n    join \"\", @m;\n}\n\n\n=item init_DEST\n\n  $mm->init_DEST\n\nDefines the DESTDIR and DEST* variables paralleling the INSTALL*.\n\n=cut\n\nsub init_DEST {\n    my $self = shift;\n\n    # Initialize DESTDIR\n    $self->{DESTDIR} ||= '';\n\n    # Make DEST variables.\n    foreach my $var ($self->installvars) {\n        my $destvar = 'DESTINSTALL'.$var;\n        $self->{$destvar} ||= '$(DESTDIR)$(INSTALL'.$var.')';\n    }\n}\n\n\n=item init_dist\n\n  $mm->init_dist;\n\nDefines a lot of macros for distribution support.\n\n  macro         description                     default\n\n  TAR           tar command to use              tar\n  TARFLAGS      flags to pass to TAR            cvf\n\n  ZIP           zip command to use              zip\n  ZIPFLAGS      flags to pass to ZIP            -r\n\n  COMPRESS      compression command to          gzip --best\n                use for tarfiles\n  SUFFIX        suffix to put on                .gz\n                compressed files\n\n  SHAR          shar command to use             shar\n\n  PREOP         extra commands to run before\n                making the archive\n  POSTOP        extra commands to run after\n                making the archive\n\n  TO_UNIX       a command to convert linefeeds\n                to Unix style in your archive\n\n  CI            command to checkin your         ci -u\n                sources to version control\n  RCS_LABEL     command to label your sources   rcs -Nv$(VERSION_SYM): -q\n                just after CI is run\n\n  DIST_CP       $how argument to manicopy()     best\n                when the distdir is created\n\n  DIST_DEFAULT  default target to use to        tardist\n                create a distribution\n\n  DISTVNAME     name of the resulting archive   $(DISTNAME)-$(VERSION)\n                (minus suffixes)\n\n=cut\n\nsub init_dist {\n    my $self = shift;\n\n    $self->{TAR}      ||= 'tar';\n    $self->{TARFLAGS} ||= 'cvf';\n    $self->{ZIP}      ||= 'zip';\n    $self->{ZIPFLAGS} ||= '-r';\n    $self->{COMPRESS} ||= 'gzip --best';\n    $self->{SUFFIX}   ||= '.gz';\n    $self->{SHAR}     ||= 'shar';\n    $self->{PREOP}    ||= '$(NOECHO) $(NOOP)'; # eg update MANIFEST\n    $self->{POSTOP}   ||= '$(NOECHO) $(NOOP)'; # eg remove the distdir\n    $self->{TO_UNIX}  ||= '$(NOECHO) $(NOOP)';\n\n    $self->{CI}       ||= 'ci -u';\n    $self->{RCS_LABEL}||= 'rcs -Nv$(VERSION_SYM): -q';\n    $self->{DIST_CP}  ||= 'best';\n    $self->{DIST_DEFAULT} ||= 'tardist';\n\n    ($self->{DISTNAME} = $self->{NAME}) =~ s{::}{-}g unless $self->{DISTNAME};\n    $self->{DISTVNAME} ||= $self->{DISTNAME}.'-'.$self->{VERSION};\n}\n\n=item dist (o)\n\n  my $dist_macros = $mm->dist(%overrides);\n\nGenerates a make fragment defining all the macros initialized in\ninit_dist.\n\n%overrides can be used to override any of the above.\n\n=cut\n\nsub dist {\n    my($self, %attribs) = @_;\n\n    my $make = '';\n    if ( $attribs{SUFFIX} && $attribs{SUFFIX} !~ m!^\\.! ) {\n      $attribs{SUFFIX} = '.' . $attribs{SUFFIX};\n    }\n    foreach my $key (qw(\n            TAR TARFLAGS ZIP ZIPFLAGS COMPRESS SUFFIX SHAR\n            PREOP POSTOP TO_UNIX\n            CI RCS_LABEL DIST_CP DIST_DEFAULT\n            DISTNAME DISTVNAME\n           ))\n    {\n        my $value = $attribs{$key} || $self->{$key};\n        $make .= \"$key = $value\\n\";\n    }\n\n    return $make;\n}\n\n=item dist_basics (o)\n\nDefines the targets distclean, distcheck, skipcheck, manifest, veryclean.\n\n=cut\n\nsub dist_basics {\n    my($self) = shift;\n\n    return <<'MAKE_FRAG';\ndistclean :: realclean distcheck\n\t$(NOECHO) $(NOOP)\n\ndistcheck :\n\t$(PERLRUN) \"-MExtUtils::Manifest=fullcheck\" -e fullcheck\n\nskipcheck :\n\t$(PERLRUN) \"-MExtUtils::Manifest=skipcheck\" -e skipcheck\n\nmanifest :\n\t$(PERLRUN) \"-MExtUtils::Manifest=mkmanifest\" -e mkmanifest\n\nveryclean : realclean\n\t$(RM_F) *~ */*~ *.orig */*.orig *.bak */*.bak *.old */*.old\n\nMAKE_FRAG\n\n}\n\n=item dist_ci (o)\n\nDefines a check in target for RCS.\n\n=cut\n\nsub dist_ci {\n    my($self) = shift;\n    return q{\nci :\n\t$(PERLRUN) \"-MExtUtils::Manifest=maniread\" \\\\\n\t  -e \"@all = keys %{ maniread() };\" \\\\\n\t  -e \"print(qq{Executing $(CI) @all\\n}); system(qq{$(CI) @all});\" \\\\\n\t  -e \"print(qq{Executing $(RCS_LABEL) ...\\n}); system(qq{$(RCS_LABEL) @all});\"\n};\n}\n\n=item dist_core (o)\n\n  my $dist_make_fragment = $MM->dist_core;\n\nPuts the targets necessary for 'make dist' together into one make\nfragment.\n\n=cut\n\nsub dist_core {\n    my($self) = shift;\n\n    my $make_frag = '';\n    foreach my $target (qw(dist tardist uutardist tarfile zipdist zipfile\n                           shdist))\n    {\n        my $method = $target.'_target';\n        $make_frag .= \"\\n\";\n        $make_frag .= $self->$method();\n    }\n\n    return $make_frag;\n}\n\n\n=item B<dist_target>\n\n  my $make_frag = $MM->dist_target;\n\nReturns the 'dist' target to make an archive for distribution.  This\ntarget simply checks to make sure the Makefile is up-to-date and\ndepends on $(DIST_DEFAULT).\n\n=cut\n\nsub dist_target {\n    my($self) = shift;\n\n    my $date_check = $self->oneliner(<<'CODE', ['-l']);\nprint 'Warning: Makefile possibly out of date with $(VERSION_FROM)'\n    if -e '$(VERSION_FROM)' and -M '$(VERSION_FROM)' < -M '$(FIRST_MAKEFILE)';\nCODE\n\n    return sprintf <<'MAKE_FRAG', $date_check;\ndist : $(DIST_DEFAULT) $(FIRST_MAKEFILE)\n\t$(NOECHO) %s\nMAKE_FRAG\n}\n\n=item B<tardist_target>\n\n  my $make_frag = $MM->tardist_target;\n\nReturns the 'tardist' target which is simply so 'make tardist' works.\nThe real work is done by the dynamically named tardistfile_target()\nmethod, tardist should have that as a dependency.\n\n=cut\n\nsub tardist_target {\n    my($self) = shift;\n\n    return <<'MAKE_FRAG';\ntardist : $(DISTVNAME).tar$(SUFFIX)\n\t$(NOECHO) $(NOOP)\nMAKE_FRAG\n}\n\n=item B<zipdist_target>\n\n  my $make_frag = $MM->zipdist_target;\n\nReturns the 'zipdist' target which is simply so 'make zipdist' works.\nThe real work is done by the dynamically named zipdistfile_target()\nmethod, zipdist should have that as a dependency.\n\n=cut\n\nsub zipdist_target {\n    my($self) = shift;\n\n    return <<'MAKE_FRAG';\nzipdist : $(DISTVNAME).zip\n\t$(NOECHO) $(NOOP)\nMAKE_FRAG\n}\n\n=item B<tarfile_target>\n\n  my $make_frag = $MM->tarfile_target;\n\nThe name of this target is the name of the tarball generated by\ntardist.  This target does the actual work of turning the distdir into\na tarball.\n\n=cut\n\nsub tarfile_target {\n    my($self) = shift;\n\n    return <<'MAKE_FRAG';\n$(DISTVNAME).tar$(SUFFIX) : distdir\n\t$(PREOP)\n\t$(TO_UNIX)\n\t$(TAR) $(TARFLAGS) $(DISTVNAME).tar $(DISTVNAME)\n\t$(RM_RF) $(DISTVNAME)\n\t$(COMPRESS) $(DISTVNAME).tar\n\t$(NOECHO) $(ECHO) 'Created $(DISTVNAME).tar$(SUFFIX)'\n\t$(POSTOP)\nMAKE_FRAG\n}\n\n=item zipfile_target\n\n  my $make_frag = $MM->zipfile_target;\n\nThe name of this target is the name of the zip file generated by\nzipdist.  This target does the actual work of turning the distdir into\na zip file.\n\n=cut\n\nsub zipfile_target {\n    my($self) = shift;\n\n    return <<'MAKE_FRAG';\n$(DISTVNAME).zip : distdir\n\t$(PREOP)\n\t$(ZIP) $(ZIPFLAGS) $(DISTVNAME).zip $(DISTVNAME)\n\t$(RM_RF) $(DISTVNAME)\n\t$(NOECHO) $(ECHO) 'Created $(DISTVNAME).zip'\n\t$(POSTOP)\nMAKE_FRAG\n}\n\n=item uutardist_target\n\n  my $make_frag = $MM->uutardist_target;\n\nConverts the tarfile into a uuencoded file\n\n=cut\n\nsub uutardist_target {\n    my($self) = shift;\n\n    return <<'MAKE_FRAG';\nuutardist : $(DISTVNAME).tar$(SUFFIX)\n\tuuencode $(DISTVNAME).tar$(SUFFIX) $(DISTVNAME).tar$(SUFFIX) > $(DISTVNAME).tar$(SUFFIX)_uu\n\t$(NOECHO) $(ECHO) 'Created $(DISTVNAME).tar$(SUFFIX)_uu'\nMAKE_FRAG\n}\n\n\n=item shdist_target\n\n  my $make_frag = $MM->shdist_target;\n\nConverts the distdir into a shell archive.\n\n=cut\n\nsub shdist_target {\n    my($self) = shift;\n\n    return <<'MAKE_FRAG';\nshdist : distdir\n\t$(PREOP)\n\t$(SHAR) $(DISTVNAME) > $(DISTVNAME).shar\n\t$(RM_RF) $(DISTVNAME)\n\t$(NOECHO) $(ECHO) 'Created $(DISTVNAME).shar'\n\t$(POSTOP)\nMAKE_FRAG\n}\n\n\n=item dlsyms (o)\n\nUsed by some OS' to define DL_FUNCS and DL_VARS and write the *.exp files.\n\nNormally just returns an empty string.\n\n=cut\n\nsub dlsyms {\n    return '';\n}\n\n\n=item dynamic_bs (o)\n\nDefines targets for bootstrap files.\n\n=cut\n\nsub dynamic_bs {\n    my($self, %attribs) = @_;\n    return '\nBOOTSTRAP =\n' unless $self->has_link_code();\n\n    my $target = $Is{VMS} ? '$(MMS$TARGET)' : '$@';\n\n    return sprintf <<'MAKE_FRAG', ($target) x 2;\nBOOTSTRAP = $(BASEEXT).bs\n\n# As Mkbootstrap might not write a file (if none is required)\n# we use touch to prevent make continually trying to remake it.\n# The DynaLoader only reads a non-empty file.\n$(BOOTSTRAP) : $(FIRST_MAKEFILE) $(BOOTDEP) $(INST_ARCHAUTODIR)$(DFSEP).exists\n\t$(NOECHO) $(ECHO) \"Running Mkbootstrap for $(NAME) ($(BSLOADLIBS))\"\n\t$(NOECHO) $(PERLRUN) \\\n\t\t\"-MExtUtils::Mkbootstrap\" \\\n\t\t-e \"Mkbootstrap('$(BASEEXT)','$(BSLOADLIBS)');\"\n\t$(NOECHO) $(TOUCH) \"%s\"\n\t$(CHMOD) $(PERM_RW) \"%s\"\nMAKE_FRAG\n}\n\n=item dynamic_lib (o)\n\nDefines how to produce the *.so (or equivalent) files.\n\n=cut\n\nsub dynamic_lib {\n    my($self, %attribs) = @_;\n    return '' unless $self->needs_linking(); #might be because of a subdir\n\n    return '' unless $self->has_link_code;\n\n    my($otherldflags) = $attribs{OTHERLDFLAGS} || \"\";\n    my($inst_dynamic_dep) = $attribs{INST_DYNAMIC_DEP} || \"\";\n    my($armaybe) = $attribs{ARMAYBE} || $self->{ARMAYBE} || \":\";\n    my($ldfrom) = '$(LDFROM)';\n    $armaybe = 'ar' if ($Is{OSF} and $armaybe eq ':');\n    my(@m);\n    my $ld_opt = $Is{OS2} ? '$(OPTIMIZE) ' : '';\t# Useful on other systems too?\n    my $ld_fix = $Is{OS2} ? '|| ( $(RM_F) $@ && sh -c false )' : '';\n    push(@m,'\n# This section creates the dynamically loadable $(INST_DYNAMIC)\n# from $(OBJECT) and possibly $(MYEXTLIB).\nARMAYBE = '.$armaybe.'\nOTHERLDFLAGS = '.$ld_opt.$otherldflags.'\nINST_DYNAMIC_DEP = '.$inst_dynamic_dep.'\nINST_DYNAMIC_FIX = '.$ld_fix.'\n\n$(INST_DYNAMIC): $(OBJECT) $(MYEXTLIB) $(INST_ARCHAUTODIR)$(DFSEP).exists $(EXPORT_LIST) $(PERL_ARCHIVEDEP) $(PERL_ARCHIVE_AFTER) $(INST_DYNAMIC_DEP)\n');\n    if ($armaybe ne ':'){\n\t$ldfrom = 'tmp$(LIB_EXT)';\n\tpush(@m,'\t$(ARMAYBE) cr '.$ldfrom.' $(OBJECT)'.\"\\n\");\n\tpush(@m,'\t$(RANLIB) '.\"$ldfrom\\n\");\n    }\n    $ldfrom = \"-all $ldfrom -none\" if $Is{OSF};\n\n    # The IRIX linker doesn't use LD_RUN_PATH\n    my $ldrun = $Is{IRIX} && $self->{LD_RUN_PATH} ?\n                       qq{-rpath \"$self->{LD_RUN_PATH}\"} : '';\n\n    # For example in AIX the shared objects/libraries from previous builds\n    # linger quite a while in the shared dynalinker cache even when nobody\n    # is using them.  This is painful if one for instance tries to restart\n    # a failed build because the link command will fail unnecessarily 'cos\n    # the shared object/library is 'busy'.\n    push(@m,'\t$(RM_F) $@\n');\n\n    my $libs = '$(LDLOADLIBS)';\n\n    if (($Is{NetBSD} || $Is{Interix} || $Is{Android}) && $Config{'useshrplib'} eq 'true') {\n\t# Use nothing on static perl platforms, and to the flags needed\n\t# to link against the shared libperl library on shared perl\n\t# platforms.  We peek at lddlflags to see if we need -Wl,-R\n\t# or -R to add paths to the run-time library search path.\n        if ($Config{'lddlflags'} =~ /-Wl,-R/) {\n            $libs .= ' \"-L$(PERL_INC)\" \"-Wl,-R$(INSTALLARCHLIB)/CORE\" \"-Wl,-R$(PERL_ARCHLIB)/CORE\" -lperl';\n        } elsif ($Config{'lddlflags'} =~ /-R/) {\n            $libs .= ' \"-L$(PERL_INC)\" \"-R$(INSTALLARCHLIB)/CORE\" \"-R$(PERL_ARCHLIB)/CORE\" -lperl';\n        } elsif ( $Is{Android} ) {\n            # The Android linker will not recognize symbols from\n            # libperl unless the module explicitly depends on it.\n            $libs .= ' \"-L$(PERL_INC)\" -lperl';\n        }\n    }\n\n    my $ld_run_path_shell = \"\";\n    if ($self->{LD_RUN_PATH} ne \"\") {\n\t$ld_run_path_shell = 'LD_RUN_PATH=\"$(LD_RUN_PATH)\" ';\n    }\n\n    push @m, sprintf <<'MAKE', $ld_run_path_shell, $ldrun, $ldfrom, $libs;\n\t%s$(LD) %s $(LDDLFLAGS) %s $(OTHERLDFLAGS) -o $@ $(MYEXTLIB)\t\\\n\t  $(PERL_ARCHIVE) %s $(PERL_ARCHIVE_AFTER) $(EXPORT_LIST)\t\\\n\t  $(INST_DYNAMIC_FIX)\nMAKE\n\n    push @m, <<'MAKE';\n\t$(CHMOD) $(PERM_RWX) $@\n\t$(NOECHO) $(RM_RF) $(BOOTSTRAP)\n\t- $(CP_NONEMPTY) $(BOOTSTRAP) $(INST_BOOT) $(PERM_RW)\nMAKE\n\n    return join('',@m);\n}\n\n=item exescan\n\nDeprecated method. Use libscan instead.\n\n=cut\n\nsub exescan {\n    my($self,$path) = @_;\n    $path;\n}\n\n=item extliblist\n\nCalled by init_others, and calls ext ExtUtils::Liblist. See\nL<ExtUtils::Liblist> for details.\n\n=cut\n\nsub extliblist {\n    my($self,$libs) = @_;\n    require ExtUtils::Liblist;\n    $self->ext($libs, $Verbose);\n}\n\n=item find_perl\n\nFinds the executables PERL and FULLPERL\n\n=cut\n\nsub find_perl {\n    my($self, $ver, $names, $dirs, $trace) = @_;\n\n    if ($trace >= 2){\n        print \"Looking for perl $ver by these names:\n@$names\nin these dirs:\n@$dirs\n\";\n    }\n\n    my $stderr_duped = 0;\n    local *STDERR_COPY;\n\n    unless ($Is{BSD}) {\n        # >& and lexical filehandles together give 5.6.2 indigestion\n        if( open(STDERR_COPY, '>&STDERR') ) {  ## no critic\n            $stderr_duped = 1;\n        }\n        else {\n            warn <<WARNING;\nfind_perl() can't dup STDERR: $!\nYou might see some garbage while we search for Perl\nWARNING\n        }\n    }\n\n    foreach my $name (@$names){\n        foreach my $dir (@$dirs){\n            next unless defined $dir; # $self->{PERL_SRC} may be undefined\n            my ($abs, $val);\n            if ($self->file_name_is_absolute($name)) {     # /foo/bar\n                $abs = $name;\n            } elsif ($self->canonpath($name) eq\n                     $self->canonpath(basename($name))) {  # foo\n                $abs = $self->catfile($dir, $name);\n            } else {                                            # foo/bar\n                $abs = $self->catfile($Curdir, $name);\n            }\n            print \"Checking $abs\\n\" if ($trace >= 2);\n            next unless $self->maybe_command($abs);\n            print \"Executing $abs\\n\" if ($trace >= 2);\n\n            my $version_check = qq{\"$abs\" -le \"require $ver; print qq{VER_OK}\"};\n\n            # To avoid using the unportable 2>&1 to suppress STDERR,\n            # we close it before running the command.\n            # However, thanks to a thread library bug in many BSDs\n            # ( http://www.freebsd.org/cgi/query-pr.cgi?pr=51535 )\n            # we cannot use the fancier more portable way in here\n            # but instead need to use the traditional 2>&1 construct.\n            if ($Is{BSD}) {\n                $val = `$version_check 2>&1`;\n            } else {\n                close STDERR if $stderr_duped;\n                $val = `$version_check`;\n\n                # 5.6.2's 3-arg open doesn't work with >&\n                open STDERR, \">&STDERR_COPY\"  ## no critic\n                        if $stderr_duped;\n            }\n\n            if ($val =~ /^VER_OK/m) {\n                print \"Using PERL=$abs\\n\" if $trace;\n                return $abs;\n            } elsif ($trace >= 2) {\n                print \"Result: '$val' \".($? >> 8).\"\\n\";\n            }\n        }\n    }\n    print \"Unable to find a perl $ver (by these names: @$names, in these dirs: @$dirs)\\n\";\n    0; # false and not empty\n}\n\n\n=item fixin\n\n  $mm->fixin(@files);\n\nInserts the sharpbang or equivalent magic number to a set of @files.\n\n=cut\n\nsub fixin {    # stolen from the pink Camel book, more or less\n    my ( $self, @files ) = @_;\n\n    for my $file (@files) {\n        my $file_new = \"$file.new\";\n        my $file_bak = \"$file.bak\";\n\n        open( my $fixin, '<', $file ) or croak \"Can't process '$file': $!\";\n        local $/ = \"\\n\";\n        chomp( my $line = <$fixin> );\n        next unless $line =~ s/^\\s*\\#!\\s*//;    # Not a shebang file.\n\n        my $shb = $self->_fixin_replace_shebang( $file, $line );\n        next unless defined $shb;\n\n        open( my $fixout, \">\", \"$file_new\" ) or do {\n            warn \"Can't create new $file: $!\\n\";\n            next;\n        };\n\n        # Print out the new #! line (or equivalent).\n        local $\\;\n        local $/;\n        print $fixout $shb, <$fixin>;\n        close $fixin;\n        close $fixout;\n\n        chmod 0666, $file_bak;\n        unlink $file_bak;\n        unless ( _rename( $file, $file_bak ) ) {\n            warn \"Can't rename $file to $file_bak: $!\";\n            next;\n        }\n        unless ( _rename( $file_new, $file ) ) {\n            warn \"Can't rename $file_new to $file: $!\";\n            unless ( _rename( $file_bak, $file ) ) {\n                warn \"Can't rename $file_bak back to $file either: $!\";\n                warn \"Leaving $file renamed as $file_bak\\n\";\n            }\n            next;\n        }\n        unlink $file_bak;\n    }\n    continue {\n        system(\"$Config{'eunicefix'} $file\") if $Config{'eunicefix'} ne ':';\n    }\n}\n\n\nsub _rename {\n    my($old, $new) = @_;\n\n    foreach my $file ($old, $new) {\n        if( $Is{VMS} and basename($file) !~ /\\./ ) {\n            # rename() in 5.8.0 on VMS will not rename a file if it\n            # does not contain a dot yet it returns success.\n            $file = \"$file.\";\n        }\n    }\n\n    return rename($old, $new);\n}\n\nsub _fixin_replace_shebang {\n    my ( $self, $file, $line ) = @_;\n\n    # Now figure out the interpreter name.\n    my ( $cmd, $arg ) = split ' ', $line, 2;\n    $cmd =~ s!^.*/!!;\n\n    # Now look (in reverse) for interpreter in absolute PATH (unless perl).\n    my $interpreter;\n    if ( $cmd =~ m{^perl(?:\\z|[^a-z])} ) {\n        if ( $Config{startperl} =~ m,^\\#!.*/perl, ) {\n            $interpreter = $Config{startperl};\n            $interpreter =~ s,^\\#!,,;\n        }\n        else {\n            $interpreter = $Config{perlpath};\n        }\n    }\n    else {\n        my (@absdirs)\n            = reverse grep { $self->file_name_is_absolute($_) } $self->path;\n        $interpreter = '';\n\n         foreach my $dir (@absdirs) {\n            if ( $self->maybe_command($cmd) ) {\n                warn \"Ignoring $interpreter in $file\\n\"\n                    if $Verbose && $interpreter;\n                $interpreter = $self->catfile( $dir, $cmd );\n            }\n        }\n    }\n\n    # Figure out how to invoke interpreter on this machine.\n\n    my ($does_shbang) = $Config{'sharpbang'} =~ /^\\s*\\#\\!/;\n    my ($shb) = \"\";\n    if ($interpreter) {\n        print \"Changing sharpbang in $file to $interpreter\"\n            if $Verbose;\n         # this is probably value-free on DOSISH platforms\n        if ($does_shbang) {\n            $shb .= \"$Config{'sharpbang'}$interpreter\";\n            $shb .= ' ' . $arg if defined $arg;\n            $shb .= \"\\n\";\n        }\n    }\n    else {\n        warn \"Can't find $cmd in PATH, $file unchanged\"\n            if $Verbose;\n        return;\n    }\n    return $shb\n}\n\n=item force (o)\n\nWrites an empty FORCE: target.\n\n=cut\n\nsub force {\n    my($self) = shift;\n    '# Phony target to force checking subdirectories.\nFORCE :\n\t$(NOECHO) $(NOOP)\n';\n}\n\n=item guess_name\n\nGuess the name of this package by examining the working directory's\nname. MakeMaker calls this only if the developer has not supplied a\nNAME attribute.\n\n=cut\n\n# ';\n\nsub guess_name {\n    my($self) = @_;\n    use Cwd 'cwd';\n    my $name = basename(cwd());\n    $name =~ s|[\\-_][\\d\\.\\-]+\\z||;  # this is new with MM 5.00, we\n                                    # strip minus or underline\n                                    # followed by a float or some such\n    print \"Warning: Guessing NAME [$name] from current directory name.\\n\";\n    $name;\n}\n\n=item has_link_code\n\nReturns true if C, XS, MYEXTLIB or similar objects exist within this\nobject that need a compiler. Does not descend into subdirectories as\nneeds_linking() does.\n\n=cut\n\nsub has_link_code {\n    my($self) = shift;\n    return $self->{HAS_LINK_CODE} if defined $self->{HAS_LINK_CODE};\n    if ($self->{OBJECT} or @{$self->{C} || []} or $self->{MYEXTLIB}){\n\t$self->{HAS_LINK_CODE} = 1;\n\treturn 1;\n    }\n    return $self->{HAS_LINK_CODE} = 0;\n}\n\n\n=item init_dirscan\n\nScans the directory structure and initializes DIR, XS, XS_FILES,\nC, C_FILES, O_FILES, H, H_FILES, PL_FILES, EXE_FILES.\n\nCalled by init_main.\n\n=cut\n\nsub init_dirscan {\t# --- File and Directory Lists (.xs .pm .pod etc)\n    my($self) = @_;\n    my(%dir, %xs, %c, %o, %h, %pl_files, %pm);\n\n    my %ignore = map {( $_ => 1 )} qw(Makefile.PL Build.PL test.pl t);\n\n    # ignore the distdir\n    $Is{VMS} ? $ignore{\"$self->{DISTVNAME}.dir\"} = 1\n            : $ignore{$self->{DISTVNAME}} = 1;\n\n    my $distprefix = $Is{VMS} ? qr/^\\Q$self->{DISTNAME}\\E-v?[\\d\\.]+\\.dir$/i\n                              : qr/^\\Q$self->{DISTNAME}\\E-v?[\\d\\.]+$/;\n\n    @ignore{map lc, keys %ignore} = values %ignore if $Is{VMS};\n\n    if ( defined $self->{XS} and !defined $self->{C} ) {\n\tmy @c_files = grep { m/\\.c(pp|xx)?\\z/i } values %{$self->{XS}};\n\tmy @o_files = grep { m/(?:.(?:o(?:bj)?)|\\$\\(OBJ_EXT\\))\\z/i } values %{$self->{XS}};\n\t%c = map { $_ => 1 } @c_files;\n\t%o = map { $_ => 1 } @o_files;\n    }\n\n    foreach my $name ($self->lsdir($Curdir)){\n\tnext if $name =~ /\\#/;\n\tnext if $name =~ $distprefix && -d $name;\n\t$name = lc($name) if $Is{VMS};\n\tnext if $name eq $Curdir or $name eq $Updir or $ignore{$name};\n\tnext unless $self->libscan($name);\n\tif (-d $name){\n\t    next if -l $name; # We do not support symlinks at all\n            next if $self->{NORECURS};\n\t    $dir{$name} = $name if (-f $self->catfile($name,\"Makefile.PL\"));\n\t} elsif ($name =~ /\\.xs\\z/){\n\t    my($c); ($c = $name) =~ s/\\.xs\\z/.c/;\n\t    $xs{$name} = $c;\n\t    $c{$c} = 1;\n\t} elsif ($name =~ /\\.c(pp|xx|c)?\\z/i){  # .c .C .cpp .cxx .cc\n\t    $c{$name} = 1\n\t\tunless $name =~ m/perlmain\\.c/; # See MAP_TARGET\n\t} elsif ($name =~ /\\.h\\z/i){\n\t    $h{$name} = 1;\n\t} elsif ($name =~ /\\.PL\\z/) {\n\t    ($pl_files{$name} = $name) =~ s/\\.PL\\z// ;\n\t} elsif (($Is{VMS} || $Is{Dos}) && $name =~ /[._]pl$/i) {\n\t    # case-insensitive filesystem, one dot per name, so foo.h.PL\n\t    # under Unix appears as foo.h_pl under VMS or fooh.pl on Dos\n\t    local($/); open(my $pl, '<', $name); my $txt = <$pl>; close $pl;\n\t    if ($txt =~ /Extracting \\S+ \\(with variable substitutions/) {\n\t\t($pl_files{$name} = $name) =~ s/[._]pl\\z//i ;\n\t    }\n\t    else {\n                $pm{$name} = $self->catfile($self->{INST_LIBDIR},$name);\n            }\n\t} elsif ($name =~ /\\.(p[ml]|pod)\\z/){\n\t    $pm{$name} = $self->catfile($self->{INST_LIBDIR},$name);\n\t}\n    }\n\n    $self->{PL_FILES}   ||= \\%pl_files;\n    $self->{DIR}        ||= [sort keys %dir];\n    $self->{XS}         ||= \\%xs;\n    $self->{C}          ||= [sort keys %c];\n    $self->{H}          ||= [sort keys %h];\n    $self->{PM}         ||= \\%pm;\n\n    my @o_files = @{$self->{C}};\n    %o = (%o, map { $_ => 1 } grep s/\\.c(pp|xx|c)?\\z/$self->{OBJ_EXT}/i, @o_files);\n    $self->{O_FILES} = [sort keys %o];\n}\n\n\n=item init_MANPODS\n\nDetermines if man pages should be generated and initializes MAN1PODS\nand MAN3PODS as appropriate.\n\n=cut\n\nsub init_MANPODS {\n    my $self = shift;\n\n    # Set up names of manual pages to generate from pods\n    foreach my $man (qw(MAN1 MAN3)) {\n        if ( $self->{\"${man}PODS\"}\n             or $self->{\"INSTALL${man}DIR\"} =~ /^(none|\\s*)$/\n        ) {\n            $self->{\"${man}PODS\"} ||= {};\n        }\n        else {\n            my $init_method = \"init_${man}PODS\";\n            $self->$init_method();\n        }\n    }\n}\n\n\nsub _has_pod {\n    my($self, $file) = @_;\n\n    my($ispod)=0;\n    if (open( my $fh, '<', $file )) {\n        while (<$fh>) {\n            if (/^=(?:head\\d+|item|pod)\\b/) {\n                $ispod=1;\n                last;\n            }\n        }\n        close $fh;\n    } else {\n        # If it doesn't exist yet, we assume, it has pods in it\n        $ispod = 1;\n    }\n\n    return $ispod;\n}\n\n\n=item init_MAN1PODS\n\nInitializes MAN1PODS from the list of EXE_FILES.\n\n=cut\n\nsub init_MAN1PODS {\n    my($self) = @_;\n\n    if ( exists $self->{EXE_FILES} ) {\n\tforeach my $name (@{$self->{EXE_FILES}}) {\n\t    next unless $self->_has_pod($name);\n\n\t    $self->{MAN1PODS}->{$name} =\n\t\t$self->catfile(\"\\$(INST_MAN1DIR)\",\n\t\t\t       basename($name).\".\\$(MAN1EXT)\");\n\t}\n    }\n}\n\n\n=item init_MAN3PODS\n\nInitializes MAN3PODS from the list of PM files.\n\n=cut\n\nsub init_MAN3PODS {\n    my $self = shift;\n\n    my %manifypods = (); # we collect the keys first, i.e. the files\n                         # we have to convert to pod\n\n    foreach my $name (keys %{$self->{PM}}) {\n\tif ($name =~ /\\.pod\\z/ ) {\n\t    $manifypods{$name} = $self->{PM}{$name};\n\t} elsif ($name =~ /\\.p[ml]\\z/ ) {\n\t    if( $self->_has_pod($name) ) {\n\t\t$manifypods{$name} = $self->{PM}{$name};\n\t    }\n\t}\n    }\n\n    my $parentlibs_re = join '|', @{$self->{PMLIBPARENTDIRS}};\n\n    # Remove \"Configure.pm\" and similar, if it's not the only pod listed\n    # To force inclusion, just name it \"Configure.pod\", or override\n    # MAN3PODS\n    foreach my $name (keys %manifypods) {\n\tif ($self->{PERL_CORE} and $name =~ /(config|setup).*\\.pm/is) {\n\t    delete $manifypods{$name};\n\t    next;\n\t}\n\tmy($manpagename) = $name;\n\t$manpagename =~ s/\\.p(od|m|l)\\z//;\n\t# everything below lib is ok\n\tunless($manpagename =~ s!^\\W*($parentlibs_re)\\W+!!s) {\n\t    $manpagename = $self->catfile(\n\t        split(/::/,$self->{PARENT_NAME}),$manpagename\n\t    );\n\t}\n\t$manpagename = $self->replace_manpage_separator($manpagename);\n\t$self->{MAN3PODS}->{$name} =\n\t    $self->catfile(\"\\$(INST_MAN3DIR)\", \"$manpagename.\\$(MAN3EXT)\");\n    }\n}\n\n\n=item init_PM\n\nInitializes PMLIBDIRS and PM from PMLIBDIRS.\n\n=cut\n\nsub init_PM {\n    my $self = shift;\n\n    # Some larger extensions often wish to install a number of *.pm/pl\n    # files into the library in various locations.\n\n    # The attribute PMLIBDIRS holds an array reference which lists\n    # subdirectories which we should search for library files to\n    # install. PMLIBDIRS defaults to [ 'lib', $self->{BASEEXT} ].  We\n    # recursively search through the named directories (skipping any\n    # which don't exist or contain Makefile.PL files).\n\n    # For each *.pm or *.pl file found $self->libscan() is called with\n    # the default installation path in $_[1]. The return value of\n    # libscan defines the actual installation location.  The default\n    # libscan function simply returns the path.  The file is skipped\n    # if libscan returns false.\n\n    # The default installation location passed to libscan in $_[1] is:\n    #\n    #  ./*.pm\t\t=> $(INST_LIBDIR)/*.pm\n    #  ./xyz/...\t=> $(INST_LIBDIR)/xyz/...\n    #  ./lib/...\t=> $(INST_LIB)/...\n    #\n    # In this way the 'lib' directory is seen as the root of the actual\n    # perl library whereas the others are relative to INST_LIBDIR\n    # (which includes PARENT_NAME). This is a subtle distinction but one\n    # that's important for nested modules.\n\n    unless( $self->{PMLIBDIRS} ) {\n        if( $Is{VMS} ) {\n            # Avoid logical name vs directory collisions\n            $self->{PMLIBDIRS} = ['./lib', \"./$self->{BASEEXT}\"];\n        }\n        else {\n            $self->{PMLIBDIRS} = ['lib', $self->{BASEEXT}];\n        }\n    }\n\n    #only existing directories that aren't in $dir are allowed\n\n    # Avoid $_ wherever possible:\n    # @{$self->{PMLIBDIRS}} = grep -d && !$dir{$_}, @{$self->{PMLIBDIRS}};\n    my (@pmlibdirs) = @{$self->{PMLIBDIRS}};\n    @{$self->{PMLIBDIRS}} = ();\n    my %dir = map { ($_ => $_) } @{$self->{DIR}};\n    foreach my $pmlibdir (@pmlibdirs) {\n\t-d $pmlibdir && !$dir{$pmlibdir} && push @{$self->{PMLIBDIRS}}, $pmlibdir;\n    }\n\n    unless( $self->{PMLIBPARENTDIRS} ) {\n\t@{$self->{PMLIBPARENTDIRS}} = ('lib');\n    }\n\n    return if $self->{PM} and $self->{ARGS}{PM};\n\n    if (@{$self->{PMLIBDIRS}}){\n\tprint \"Searching PMLIBDIRS: @{$self->{PMLIBDIRS}}\\n\"\n\t    if ($Verbose >= 2);\n\trequire File::Find;\n        File::Find::find(sub {\n            if (-d $_){\n                unless ($self->libscan($_)){\n                    $File::Find::prune = 1;\n                }\n                return;\n            }\n            return if /\\#/;\n            return if /~$/;             # emacs temp files\n            return if /,v$/;            # RCS files\n            return if m{\\.swp$};        # vim swap files\n\n\t    my $path   = $File::Find::name;\n            my $prefix = $self->{INST_LIBDIR};\n            my $striplibpath;\n\n\t    my $parentlibs_re = join '|', @{$self->{PMLIBPARENTDIRS}};\n\t    $prefix =  $self->{INST_LIB}\n                if ($striplibpath = $path) =~ s{^(\\W*)($parentlibs_re)\\W}\n\t                                       {$1}i;\n\n\t    my($inst) = $self->catfile($prefix,$striplibpath);\n\t    local($_) = $inst; # for backwards compatibility\n\t    $inst = $self->libscan($inst);\n\t    print \"libscan($path) => '$inst'\\n\" if ($Verbose >= 2);\n\t    return unless $inst;\n\t    $self->{PM}{$path} = $inst;\n\t}, @{$self->{PMLIBDIRS}});\n    }\n}\n\n\n=item init_DIRFILESEP\n\nUsing / for Unix.  Called by init_main.\n\n=cut\n\nsub init_DIRFILESEP {\n    my($self) = shift;\n\n    $self->{DIRFILESEP} = '/';\n}\n\n\n=item init_main\n\nInitializes AR, AR_STATIC_ARGS, BASEEXT, CONFIG, DISTNAME, DLBASE,\nEXE_EXT, FULLEXT, FULLPERL, FULLPERLRUN, FULLPERLRUNINST, INST_*,\nINSTALL*, INSTALLDIRS, LIB_EXT, LIBPERL_A, MAP_TARGET, NAME,\nOBJ_EXT, PARENT_NAME, PERL, PERL_ARCHLIB, PERL_INC, PERL_LIB,\nPERL_SRC, PERLRUN, PERLRUNINST, PREFIX, VERSION,\nVERSION_SYM, XS_VERSION.\n\n=cut\n\nsub init_main {\n    my($self) = @_;\n\n    # --- Initialize Module Name and Paths\n\n    # NAME    = Foo::Bar::Oracle\n    # FULLEXT = Foo/Bar/Oracle\n    # BASEEXT = Oracle\n    # PARENT_NAME = Foo::Bar\n### Only UNIX:\n###    ($self->{FULLEXT} =\n###     $self->{NAME}) =~ s!::!/!g ; #eg. BSD/Foo/Socket\n    $self->{FULLEXT} = $self->catdir(split /::/, $self->{NAME});\n\n\n    # Copied from DynaLoader:\n\n    my(@modparts) = split(/::/,$self->{NAME});\n    my($modfname) = $modparts[-1];\n\n    # Some systems have restrictions on files names for DLL's etc.\n    # mod2fname returns appropriate file base name (typically truncated)\n    # It may also edit @modparts if required.\n    # We require DynaLoader to make sure that mod2fname is loaded\n    eval { require DynaLoader };\n    if (defined &DynaLoader::mod2fname) {\n        $modfname = &DynaLoader::mod2fname(\\@modparts);\n    }\n\n    ($self->{PARENT_NAME}, $self->{BASEEXT}) = $self->{NAME} =~ m!(?:([\\w:]+)::)?(\\w+)\\z! ;\n    $self->{PARENT_NAME} ||= '';\n\n    if (defined &DynaLoader::mod2fname) {\n\t# As of 5.001m, dl_os2 appends '_'\n\t$self->{DLBASE} = $modfname;\n    } else {\n\t$self->{DLBASE} = '$(BASEEXT)';\n    }\n\n\n    # --- Initialize PERL_LIB, PERL_SRC\n\n    # *Real* information: where did we get these two from? ...\n    my $inc_config_dir = dirname($INC{'Config.pm'});\n    my $inc_carp_dir   = dirname($INC{'Carp.pm'});\n\n    unless ($self->{PERL_SRC}){\n        foreach my $dir_count (1..8) { # 8 is the VMS limit for nesting\n            my $dir = $self->catdir(($Updir) x $dir_count);\n\n            if (-f $self->catfile($dir,\"config_h.SH\")   &&\n                -f $self->catfile($dir,\"perl.h\")        &&\n                -f $self->catfile($dir,\"lib\",\"strict.pm\")\n            ) {\n                $self->{PERL_SRC}=$dir ;\n                last;\n            }\n        }\n    }\n\n    warn \"PERL_CORE is set but I can't find your PERL_SRC!\\n\" if\n      $self->{PERL_CORE} and !$self->{PERL_SRC};\n\n    if ($self->{PERL_SRC}){\n\t$self->{PERL_LIB}     ||= $self->catdir(\"$self->{PERL_SRC}\",\"lib\");\n\n        $self->{PERL_ARCHLIB} = $self->{PERL_LIB};\n        $self->{PERL_INC}     = ($Is{Win32}) ?\n            $self->catdir($self->{PERL_LIB},\"CORE\") : $self->{PERL_SRC};\n\n\t# catch a situation that has occurred a few times in the past:\n\tunless (\n\t\t-s $self->catfile($self->{PERL_SRC},'cflags')\n\t\tor\n\t\t$Is{VMS}\n\t\t&&\n\t\t-s $self->catfile($self->{PERL_SRC},'vmsish.h')\n\t\tor\n\t\t$Is{Win32}\n\t       ){\n\t    warn qq{\nYou cannot build extensions below the perl source tree after executing\na 'make clean' in the perl source tree.\n\nTo rebuild extensions distributed with the perl source you should\nsimply Configure (to include those extensions) and then build perl as\nnormal. After installing perl the source tree can be deleted. It is\nnot needed for building extensions by running 'perl Makefile.PL'\nusually without extra arguments.\n\nIt is recommended that you unpack and build additional extensions away\nfrom the perl source tree.\n};\n\t}\n    } else {\n\t# we should also consider $ENV{PERL5LIB} here\n        my $old = $self->{PERL_LIB} || $self->{PERL_ARCHLIB} || $self->{PERL_INC};\n\t$self->{PERL_LIB}     ||= $Config{privlibexp};\n\t$self->{PERL_ARCHLIB} ||= $Config{archlibexp};\n\t$self->{PERL_INC}     = $self->catdir(\"$self->{PERL_ARCHLIB}\",\"CORE\"); # wild guess for now\n\tmy $perl_h;\n\n\tif (not -f ($perl_h = $self->catfile($self->{PERL_INC},\"perl.h\"))\n\t    and not $old){\n\t    # Maybe somebody tries to build an extension with an\n\t    # uninstalled Perl outside of Perl build tree\n\t    my $lib;\n\t    for my $dir (@INC) {\n\t      $lib = $dir, last if -e $self->catfile($dir, \"Config.pm\");\n\t    }\n\t    if ($lib) {\n              # Win32 puts its header files in /perl/src/lib/CORE.\n              # Unix leaves them in /perl/src.\n\t      my $inc = $Is{Win32} ? $self->catdir($lib, \"CORE\" )\n                                  : dirname $lib;\n\t      if (-e $self->catfile($inc, \"perl.h\")) {\n\t\t$self->{PERL_LIB}\t   = $lib;\n\t\t$self->{PERL_ARCHLIB}\t   = $lib;\n\t\t$self->{PERL_INC}\t   = $inc;\n\t\t$self->{UNINSTALLED_PERL}  = 1;\n\t\tprint <<EOP;\n... Detected uninstalled Perl.  Trying to continue.\nEOP\n\t      }\n\t    }\n\t}\n    }\n\n    if ($Is{Android}) {\n    \t# Android fun times!\n    \t# ../../perl -I../../lib -MFile::Glob -e1 works\n    \t# ../../../perl -I../../../lib -MFile::Glob -e1 fails to find\n    \t# the .so for File::Glob.\n    \t# This always affects core perl, but may also affect an installed\n    \t# perl built with -Duserelocatableinc.\n    \t$self->{PERL_LIB} = File::Spec->rel2abs($self->{PERL_LIB});\n    \t$self->{PERL_ARCHLIB} = File::Spec->rel2abs($self->{PERL_ARCHLIB});\n    }\n    $self->{PERL_INCDEP} = $self->{PERL_INC};\n    $self->{PERL_ARCHLIBDEP} = $self->{PERL_ARCHLIB};\n\n    # We get SITELIBEXP and SITEARCHEXP directly via\n    # Get_from_Config. When we are running standard modules, these\n    # won't matter, we will set INSTALLDIRS to \"perl\". Otherwise we\n    # set it to \"site\". I prefer that INSTALLDIRS be set from outside\n    # MakeMaker.\n    $self->{INSTALLDIRS} ||= \"site\";\n\n    $self->{MAN1EXT} ||= $Config{man1ext};\n    $self->{MAN3EXT} ||= $Config{man3ext};\n\n    # Get some stuff out of %Config if we haven't yet done so\n    print \"CONFIG must be an array ref\\n\"\n        if ($self->{CONFIG} and ref $self->{CONFIG} ne 'ARRAY');\n    $self->{CONFIG} = [] unless (ref $self->{CONFIG});\n    push(@{$self->{CONFIG}}, @ExtUtils::MakeMaker::Get_from_Config);\n    push(@{$self->{CONFIG}}, 'shellflags') if $Config{shellflags};\n    my(%once_only);\n    foreach my $m (@{$self->{CONFIG}}){\n        next if $once_only{$m};\n        print \"CONFIG key '$m' does not exist in Config.pm\\n\"\n                unless exists $Config{$m};\n        $self->{uc $m} ||= $Config{$m};\n        $once_only{$m} = 1;\n    }\n\n# This is too dangerous:\n#    if ($^O eq \"next\") {\n#\t$self->{AR} = \"libtool\";\n#\t$self->{AR_STATIC_ARGS} = \"-o\";\n#    }\n# But I leave it as a placeholder\n\n    $self->{AR_STATIC_ARGS} ||= \"cr\";\n\n    # These should never be needed\n    $self->{OBJ_EXT} ||= '.o';\n    $self->{LIB_EXT} ||= '.a';\n\n    $self->{MAP_TARGET} ||= \"perl\";\n\n    $self->{LIBPERL_A} ||= \"libperl$self->{LIB_EXT}\";\n\n    # make a simple check if we find strict\n    warn \"Warning: PERL_LIB ($self->{PERL_LIB}) seems not to be a perl library directory\n        (strict.pm not found)\"\n        unless -f $self->catfile(\"$self->{PERL_LIB}\",\"strict.pm\") ||\n               $self->{NAME} eq \"ExtUtils::MakeMaker\";\n}\n\n=item init_tools\n\nInitializes tools to use their common (and faster) Unix commands.\n\n=cut\n\nsub init_tools {\n    my $self = shift;\n\n    $self->{ECHO}       ||= 'echo';\n    $self->{ECHO_N}     ||= 'echo -n';\n    $self->{RM_F}       ||= \"rm -f\";\n    $self->{RM_RF}      ||= \"rm -rf\";\n    $self->{TOUCH}      ||= \"touch\";\n    $self->{TEST_F}     ||= \"test -f\";\n    $self->{TEST_S}     ||= \"test -s\";\n    $self->{CP}         ||= \"cp\";\n    $self->{MV}         ||= \"mv\";\n    $self->{CHMOD}      ||= \"chmod\";\n    $self->{FALSE}      ||= 'false';\n    $self->{TRUE}       ||= 'true';\n\n    $self->{LD}         ||= 'ld';\n\n    return $self->SUPER::init_tools(@_);\n\n    # After SUPER::init_tools so $Config{shell} has a\n    # chance to get set.\n    $self->{SHELL}      ||= '/bin/sh';\n\n    return;\n}\n\n\n=item init_linker\n\nUnix has no need of special linker flags.\n\n=cut\n\nsub init_linker {\n    my($self) = shift;\n    $self->{PERL_ARCHIVE} ||= '';\n    $self->{PERL_ARCHIVEDEP} ||= '';\n    $self->{PERL_ARCHIVE_AFTER} ||= '';\n    $self->{EXPORT_LIST}  ||= '';\n}\n\n\n=begin _protected\n\n=item init_lib2arch\n\n    $mm->init_lib2arch\n\n=end _protected\n\n=cut\n\nsub init_lib2arch {\n    my($self) = shift;\n\n    # The user who requests an installation directory explicitly\n    # should not have to tell us an architecture installation directory\n    # as well. We look if a directory exists that is named after the\n    # architecture. If not we take it as a sign that it should be the\n    # same as the requested installation directory. Otherwise we take\n    # the found one.\n    for my $libpair ({l=>\"privlib\",   a=>\"archlib\"},\n                     {l=>\"sitelib\",   a=>\"sitearch\"},\n                     {l=>\"vendorlib\", a=>\"vendorarch\"},\n                    )\n    {\n        my $lib = \"install$libpair->{l}\";\n        my $Lib = uc $lib;\n        my $Arch = uc \"install$libpair->{a}\";\n        if( $self->{$Lib} && ! $self->{$Arch} ){\n            my($ilib) = $Config{$lib};\n\n            $self->prefixify($Arch,$ilib,$self->{$Lib});\n\n            unless (-d $self->{$Arch}) {\n                print \"Directory $self->{$Arch} not found\\n\"\n                  if $Verbose;\n                $self->{$Arch} = $self->{$Lib};\n            }\n            print \"Defaulting $Arch to $self->{$Arch}\\n\" if $Verbose;\n        }\n    }\n}\n\n\n=item init_PERL\n\n    $mm->init_PERL;\n\nCalled by init_main.  Sets up ABSPERL, PERL, FULLPERL and all the\n*PERLRUN* permutations.\n\n    PERL is allowed to be miniperl\n    FULLPERL must be a complete perl\n\n    ABSPERL is PERL converted to an absolute path\n\n    *PERLRUN contains everything necessary to run perl, find it's\n         libraries, etc...\n\n    *PERLRUNINST is *PERLRUN + everything necessary to find the\n         modules being built.\n\n=cut\n\nsub init_PERL {\n    my($self) = shift;\n\n    my @defpath = ();\n    foreach my $component ($self->{PERL_SRC}, $self->path(),\n                           $Config{binexp})\n    {\n\tpush @defpath, $component if defined $component;\n    }\n\n    # Build up a set of file names (not command names).\n    my $thisperl = $self->canonpath($^X);\n    $thisperl .= $Config{exe_ext} unless\n                # VMS might have a file version # at the end\n      $Is{VMS} ? $thisperl =~ m/$Config{exe_ext}(;\\d+)?$/i\n              : $thisperl =~ m/$Config{exe_ext}$/i;\n\n    # We need a relative path to perl when in the core.\n    $thisperl = $self->abs2rel($thisperl) if $self->{PERL_CORE};\n\n    my @perls = ($thisperl);\n    push @perls, map { \"$_$Config{exe_ext}\" }\n                     (\"perl$Config{version}\", 'perl5', 'perl');\n\n    # miniperl has priority over all but the canonical perl when in the\n    # core.  Otherwise its a last resort.\n    my $miniperl = \"miniperl$Config{exe_ext}\";\n    if( $self->{PERL_CORE} ) {\n        splice @perls, 1, 0, $miniperl;\n    }\n    else {\n        push @perls, $miniperl;\n    }\n\n    $self->{PERL} ||=\n        $self->find_perl(5.0, \\@perls, \\@defpath, $Verbose );\n\n    my $perl = $self->{PERL};\n    $perl =~ s/^\"//;\n    my $has_mcr = $perl =~ s/^MCR\\s*//;\n    my $perlflags = '';\n    my $stripped_perl;\n    while ($perl) {\n\t($stripped_perl = $perl) =~ s/\"$//;\n\tlast if -x $stripped_perl;\n\tlast unless $perl =~ s/(\\s+\\S+)$//;\n\t$perlflags = $1.$perlflags;\n    }\n    $self->{PERL} = $stripped_perl;\n    $self->{PERL} = 'MCR '.$self->{PERL} if $has_mcr || $Is{VMS};\n\n    # When built for debugging, VMS doesn't create perl.exe but ndbgperl.exe.\n    my $perl_name = 'perl';\n    $perl_name = 'ndbgperl' if $Is{VMS} &&\n      defined $Config{usevmsdebug} && $Config{usevmsdebug} eq 'define';\n\n    # XXX This logic is flawed.  If \"miniperl\" is anywhere in the path\n    # it will get confused.  It should be fixed to work only on the filename.\n    # Define 'FULLPERL' to be a non-miniperl (used in test: target)\n    unless ($self->{FULLPERL}) {\n      ($self->{FULLPERL} = $self->{PERL}) =~ s/\\Q$miniperl\\E$/$perl_name$Config{exe_ext}/i;\n      $self->{FULLPERL} = qq{\"$self->{FULLPERL}\"}.$perlflags;\n    }\n    # Can't have an image name with quotes, and findperl will have\n    # already escaped spaces.\n    $self->{FULLPERL} =~ tr/\"//d if $Is{VMS};\n\n    # Little hack to get around VMS's find_perl putting \"MCR\" in front\n    # sometimes.\n    $self->{ABSPERL} = $self->{PERL};\n    $has_mcr = $self->{ABSPERL} =~ s/^MCR\\s*//;\n    if( $self->file_name_is_absolute($self->{ABSPERL}) ) {\n        $self->{ABSPERL} = '$(PERL)';\n    }\n    else {\n        $self->{ABSPERL} = $self->rel2abs($self->{ABSPERL});\n\n        # Quote the perl command if it contains whitespace\n        $self->{ABSPERL} = $self->quote_literal($self->{ABSPERL})\n          if $self->{ABSPERL} =~ /\\s/;\n\n        $self->{ABSPERL} = 'MCR '.$self->{ABSPERL} if $has_mcr;\n    }\n    $self->{PERL} = qq{\"$self->{PERL}\"}.$perlflags;\n\n    # Can't have an image name with quotes, and findperl will have\n    # already escaped spaces.\n    $self->{PERL} =~ tr/\"//d if $Is{VMS};\n\n    # Are we building the core?\n    $self->{PERL_CORE} = $ENV{PERL_CORE} unless exists $self->{PERL_CORE};\n    $self->{PERL_CORE} = 0               unless defined $self->{PERL_CORE};\n\n    # How do we run perl?\n    foreach my $perl (qw(PERL FULLPERL ABSPERL)) {\n        my $run  = $perl.'RUN';\n\n        $self->{$run}  = qq{\\$($perl)};\n\n        # Make sure perl can find itself before it's installed.\n        $self->{$run} .= q{ \"-I$(PERL_LIB)\" \"-I$(PERL_ARCHLIB)\"}\n          if $self->{UNINSTALLED_PERL} || $self->{PERL_CORE};\n\n        $self->{$perl.'RUNINST'} =\n          sprintf q{$(%sRUN)%s \"-I$(INST_ARCHLIB)\" \"-I$(INST_LIB)\"},\n\t    $perl, $perlflags;\n    }\n\n    return 1;\n}\n\n\n=item init_platform\n\n=item platform_constants\n\nAdd MM_Unix_VERSION.\n\n=cut\n\nsub init_platform {\n    my($self) = shift;\n\n    $self->{MM_Unix_VERSION} = $VERSION;\n    $self->{PERL_MALLOC_DEF} = '-DPERL_EXTMALLOC_DEF -Dmalloc=Perl_malloc '.\n                               '-Dfree=Perl_mfree -Drealloc=Perl_realloc '.\n                               '-Dcalloc=Perl_calloc';\n\n}\n\nsub platform_constants {\n    my($self) = shift;\n    my $make_frag = '';\n\n    foreach my $macro (qw(MM_Unix_VERSION PERL_MALLOC_DEF))\n    {\n        next unless defined $self->{$macro};\n        $make_frag .= \"$macro = $self->{$macro}\\n\";\n    }\n\n    return $make_frag;\n}\n\n\n=item init_PERM\n\n  $mm->init_PERM\n\nCalled by init_main.  Initializes PERL_*\n\n=cut\n\nsub init_PERM {\n    my($self) = shift;\n\n    $self->{PERM_DIR} = 755  unless defined $self->{PERM_DIR};\n    $self->{PERM_RW}  = 644  unless defined $self->{PERM_RW};\n    $self->{PERM_RWX} = 755  unless defined $self->{PERM_RWX};\n\n    return 1;\n}\n\n\n=item init_xs\n\n    $mm->init_xs\n\nSets up macros having to do with XS code.  Currently just INST_STATIC,\nINST_DYNAMIC and INST_BOOT.\n\n=cut\n\nsub init_xs {\n    my $self = shift;\n\n    if ($self->has_link_code()) {\n        $self->{INST_STATIC}  =\n          $self->catfile('$(INST_ARCHAUTODIR)', '$(BASEEXT)$(LIB_EXT)');\n        $self->{INST_DYNAMIC} =\n          $self->catfile('$(INST_ARCHAUTODIR)', '$(DLBASE).$(DLEXT)');\n        $self->{INST_BOOT}    =\n          $self->catfile('$(INST_ARCHAUTODIR)', '$(BASEEXT).bs');\n    } else {\n        $self->{INST_STATIC}  = '';\n        $self->{INST_DYNAMIC} = '';\n        $self->{INST_BOOT}    = '';\n    }\n}\n\n=item install (o)\n\nDefines the install target.\n\n=cut\n\nsub install {\n    my($self, %attribs) = @_;\n    my(@m);\n\n    push @m, q{\ninstall :: pure_install doc_install\n\t$(NOECHO) $(NOOP)\n\ninstall_perl :: pure_perl_install doc_perl_install\n\t$(NOECHO) $(NOOP)\n\ninstall_site :: pure_site_install doc_site_install\n\t$(NOECHO) $(NOOP)\n\ninstall_vendor :: pure_vendor_install doc_vendor_install\n\t$(NOECHO) $(NOOP)\n\npure_install :: pure_$(INSTALLDIRS)_install\n\t$(NOECHO) $(NOOP)\n\ndoc_install :: doc_$(INSTALLDIRS)_install\n\t$(NOECHO) $(NOOP)\n\npure__install : pure_site_install\n\t$(NOECHO) $(ECHO) INSTALLDIRS not defined, defaulting to INSTALLDIRS=site\n\ndoc__install : doc_site_install\n\t$(NOECHO) $(ECHO) INSTALLDIRS not defined, defaulting to INSTALLDIRS=site\n\npure_perl_install :: all\n\t$(NOECHO) $(MOD_INSTALL) \\\n};\n\n    push @m,\nq{\t\tread \"}.$self->catfile('$(PERL_ARCHLIB)','auto','$(FULLEXT)','.packlist').q{\" \\\n\t\twrite \"}.$self->catfile('$(DESTINSTALLARCHLIB)','auto','$(FULLEXT)','.packlist').q{\" \\\n} unless $self->{NO_PACKLIST};\n\n    push @m,\nq{\t\t\"$(INST_LIB)\" \"$(DESTINSTALLPRIVLIB)\" \\\n\t\t\"$(INST_ARCHLIB)\" \"$(DESTINSTALLARCHLIB)\" \\\n\t\t\"$(INST_BIN)\" \"$(DESTINSTALLBIN)\" \\\n\t\t\"$(INST_SCRIPT)\" \"$(DESTINSTALLSCRIPT)\" \\\n\t\t\"$(INST_MAN1DIR)\" \"$(DESTINSTALLMAN1DIR)\" \\\n\t\t\"$(INST_MAN3DIR)\" \"$(DESTINSTALLMAN3DIR)\"\n\t$(NOECHO) $(WARN_IF_OLD_PACKLIST) \\\n\t\t\"}.$self->catdir('$(SITEARCHEXP)','auto','$(FULLEXT)').q{\"\n\n\npure_site_install :: all\n\t$(NOECHO) $(MOD_INSTALL) \\\n};\n    push @m,\nq{\t\tread \"}.$self->catfile('$(SITEARCHEXP)','auto','$(FULLEXT)','.packlist').q{\" \\\n\t\twrite \"}.$self->catfile('$(DESTINSTALLSITEARCH)','auto','$(FULLEXT)','.packlist').q{\" \\\n} unless $self->{NO_PACKLIST};\n\n    push @m,\nq{\t\t\"$(INST_LIB)\" \"$(DESTINSTALLSITELIB)\" \\\n\t\t\"$(INST_ARCHLIB)\" \"$(DESTINSTALLSITEARCH)\" \\\n\t\t\"$(INST_BIN)\" \"$(DESTINSTALLSITEBIN)\" \\\n\t\t\"$(INST_SCRIPT)\" \"$(DESTINSTALLSITESCRIPT)\" \\\n\t\t\"$(INST_MAN1DIR)\" \"$(DESTINSTALLSITEMAN1DIR)\" \\\n\t\t\"$(INST_MAN3DIR)\" \"$(DESTINSTALLSITEMAN3DIR)\"\n\t$(NOECHO) $(WARN_IF_OLD_PACKLIST) \\\n\t\t\"}.$self->catdir('$(PERL_ARCHLIB)','auto','$(FULLEXT)').q{\"\n\npure_vendor_install :: all\n\t$(NOECHO) $(MOD_INSTALL) \\\n};\n    push @m,\nq{\t\tread \"}.$self->catfile('$(VENDORARCHEXP)','auto','$(FULLEXT)','.packlist').q{\" \\\n\t\twrite \"}.$self->catfile('$(DESTINSTALLVENDORARCH)','auto','$(FULLEXT)','.packlist').q{\" \\\n} unless $self->{NO_PACKLIST};\n\n    push @m,\nq{\t\t\"$(INST_LIB)\" \"$(DESTINSTALLVENDORLIB)\" \\\n\t\t\"$(INST_ARCHLIB)\" \"$(DESTINSTALLVENDORARCH)\" \\\n\t\t\"$(INST_BIN)\" \"$(DESTINSTALLVENDORBIN)\" \\\n\t\t\"$(INST_SCRIPT)\" \"$(DESTINSTALLVENDORSCRIPT)\" \\\n\t\t\"$(INST_MAN1DIR)\" \"$(DESTINSTALLVENDORMAN1DIR)\" \\\n\t\t\"$(INST_MAN3DIR)\" \"$(DESTINSTALLVENDORMAN3DIR)\"\n\n};\n\n    push @m, q{\ndoc_perl_install :: all\n\t$(NOECHO) $(NOOP)\n\ndoc_site_install :: all\n\t$(NOECHO) $(NOOP)\n\ndoc_vendor_install :: all\n\t$(NOECHO) $(NOOP)\n\n} if $self->{NO_PERLLOCAL};\n\n    push @m, q{\ndoc_perl_install :: all\n\t$(NOECHO) $(ECHO) Appending installation info to \"$(DESTINSTALLARCHLIB)/perllocal.pod\"\n\t-$(NOECHO) $(MKPATH) \"$(DESTINSTALLARCHLIB)\"\n\t-$(NOECHO) $(DOC_INSTALL) \\\n\t\t\"Module\" \"$(NAME)\" \\\n\t\t\"installed into\" $(INSTALLPRIVLIB) \\\n\t\tLINKTYPE \"$(LINKTYPE)\" \\\n\t\tVERSION \"$(VERSION)\" \\\n\t\tEXE_FILES \"$(EXE_FILES)\" \\\n\t\t>> \"}.$self->catfile('$(DESTINSTALLARCHLIB)','perllocal.pod').q{\"\n\ndoc_site_install :: all\n\t$(NOECHO) $(ECHO) Appending installation info to \"$(DESTINSTALLARCHLIB)/perllocal.pod\"\n\t-$(NOECHO) $(MKPATH) \"$(DESTINSTALLARCHLIB)\"\n\t-$(NOECHO) $(DOC_INSTALL) \\\n\t\t\"Module\" \"$(NAME)\" \\\n\t\t\"installed into\" $(INSTALLSITELIB) \\\n\t\tLINKTYPE \"$(LINKTYPE)\" \\\n\t\tVERSION \"$(VERSION)\" \\\n\t\tEXE_FILES \"$(EXE_FILES)\" \\\n\t\t>> \"}.$self->catfile('$(DESTINSTALLARCHLIB)','perllocal.pod').q{\"\n\ndoc_vendor_install :: all\n\t$(NOECHO) $(ECHO) Appending installation info to \"$(DESTINSTALLARCHLIB)/perllocal.pod\"\n\t-$(NOECHO) $(MKPATH) \"$(DESTINSTALLARCHLIB)\"\n\t-$(NOECHO) $(DOC_INSTALL) \\\n\t\t\"Module\" \"$(NAME)\" \\\n\t\t\"installed into\" $(INSTALLVENDORLIB) \\\n\t\tLINKTYPE \"$(LINKTYPE)\" \\\n\t\tVERSION \"$(VERSION)\" \\\n\t\tEXE_FILES \"$(EXE_FILES)\" \\\n\t\t>> \"}.$self->catfile('$(DESTINSTALLARCHLIB)','perllocal.pod').q{\"\n\n} unless $self->{NO_PERLLOCAL};\n\n    push @m, q{\nuninstall :: uninstall_from_$(INSTALLDIRS)dirs\n\t$(NOECHO) $(NOOP)\n\nuninstall_from_perldirs ::\n\t$(NOECHO) $(UNINSTALL) \"}.$self->catfile('$(PERL_ARCHLIB)','auto','$(FULLEXT)','.packlist').q{\"\n\nuninstall_from_sitedirs ::\n\t$(NOECHO) $(UNINSTALL) \"}.$self->catfile('$(SITEARCHEXP)','auto','$(FULLEXT)','.packlist').q{\"\n\nuninstall_from_vendordirs ::\n\t$(NOECHO) $(UNINSTALL) \"}.$self->catfile('$(VENDORARCHEXP)','auto','$(FULLEXT)','.packlist').q{\"\n};\n\n    join(\"\",@m);\n}\n\n=item installbin (o)\n\nDefines targets to make and to install EXE_FILES.\n\n=cut\n\nsub installbin {\n    my($self) = shift;\n\n    return \"\" unless $self->{EXE_FILES} && ref $self->{EXE_FILES} eq \"ARRAY\";\n    my @exefiles = @{$self->{EXE_FILES}};\n    return \"\" unless @exefiles;\n\n    @exefiles = map vmsify($_), @exefiles if $Is{VMS};\n\n    my %fromto;\n    for my $from (@exefiles) {\n\tmy($path)= $self->catfile('$(INST_SCRIPT)', basename($from));\n\n\tlocal($_) = $path; # for backwards compatibility\n\tmy $to = $self->libscan($path);\n\tprint \"libscan($from) => '$to'\\n\" if ($Verbose >=2);\n\n        $to = vmsify($to) if $Is{VMS};\n\t$fromto{$from} = $to;\n    }\n    my @to   = values %fromto;\n\n    my @m;\n    push(@m, qq{\nEXE_FILES = @exefiles\n\npure_all :: @to\n\t\\$(NOECHO) \\$(NOOP)\n\nrealclean ::\n});\n\n    # realclean can get rather large.\n    push @m, map \"\\t$_\\n\", $self->split_command('$(RM_F)', @to);\n    push @m, \"\\n\";\n\n\n    # A target for each exe file.\n    while (my($from,$to) = each %fromto) {\n\tlast unless defined $from;\n\n\tpush @m, sprintf <<'MAKE', $to, $from, $to, $from, $to, $to, $to;\n%s : %s $(FIRST_MAKEFILE) $(INST_SCRIPT)$(DFSEP).exists $(INST_BIN)$(DFSEP).exists\n\t$(NOECHO) $(RM_F) %s\n\t$(CP) %s %s\n\t$(FIXIN) %s\n\t-$(NOECHO) $(CHMOD) $(PERM_RWX) %s\n\nMAKE\n\n    }\n\n    join \"\", @m;\n}\n\n\n=item linkext (o)\n\nDefines the linkext target which in turn defines the LINKTYPE.\n\n=cut\n\nsub linkext {\n    my($self, %attribs) = @_;\n    # LINKTYPE => static or dynamic or ''\n    my($linktype) = defined $attribs{LINKTYPE} ?\n      $attribs{LINKTYPE} : '$(LINKTYPE)';\n    \"\nlinkext :: $linktype\n\t\\$(NOECHO) \\$(NOOP)\n\";\n}\n\n=item lsdir\n\nTakes as arguments a directory name and a regular expression. Returns\nall entries in the directory that match the regular expression.\n\n=cut\n\nsub lsdir {\n    my($self) = shift;\n    my($dir, $regex) = @_;\n    my(@ls);\n    my $dh = new DirHandle;\n    $dh->open($dir || \".\") or return ();\n    @ls = $dh->read;\n    $dh->close;\n    @ls = grep(/$regex/, @ls) if $regex;\n    @ls;\n}\n\n=item macro (o)\n\nSimple subroutine to insert the macros defined by the macro attribute\ninto the Makefile.\n\n=cut\n\nsub macro {\n    my($self,%attribs) = @_;\n    my(@m,$key,$val);\n    while (($key,$val) = each %attribs){\n\tlast unless defined $key;\n\tpush @m, \"$key = $val\\n\";\n    }\n    join \"\", @m;\n}\n\n=item makeaperl (o)\n\nCalled by staticmake. Defines how to write the Makefile to produce a\nstatic new perl.\n\nBy default the Makefile produced includes all the static extensions in\nthe perl library. (Purified versions of library files, e.g.,\nDynaLoader_pure_p1_c0_032.a are automatically ignored to avoid link errors.)\n\n=cut\n\nsub makeaperl {\n    my($self, %attribs) = @_;\n    my($makefilename, $searchdirs, $static, $extra, $perlinc, $target, $tmp, $libperl) =\n\t@attribs{qw(MAKE DIRS STAT EXTRA INCL TARGET TMP LIBPERL)};\n    my(@m);\n    push @m, \"\n# --- MakeMaker makeaperl section ---\nMAP_TARGET    = $target\nFULLPERL      = $self->{FULLPERL}\n\";\n    return join '', @m if $self->{PARENT};\n\n    my($dir) = join \":\", @{$self->{DIR}};\n\n    unless ($self->{MAKEAPERL}) {\n\tpush @m, q{\n$(MAP_TARGET) :: static $(MAKE_APERL_FILE)\n\t$(MAKE) $(USEMAKEFILE) $(MAKE_APERL_FILE) $@\n\n$(MAKE_APERL_FILE) : $(FIRST_MAKEFILE) pm_to_blib\n\t$(NOECHO) $(ECHO) Writing \\\"$(MAKE_APERL_FILE)\\\" for this $(MAP_TARGET)\n\t$(NOECHO) $(PERLRUNINST) \\\n\t\tMakefile.PL DIR=\"}, $dir, q{\" \\\n\t\tMAKEFILE=$(MAKE_APERL_FILE) LINKTYPE=static \\\n\t\tMAKEAPERL=1 NORECURS=1 CCCDLFLAGS=};\n\n\tforeach (@ARGV){\n\t\tif( /\\s/ ){\n\t\t\ts/=(.*)/='$1'/;\n\t\t}\n\t\tpush @m, \" \\\\\\n\\t\\t$_\";\n\t}\n#\tpush @m, map( \" \\\\\\n\\t\\t$_\", @ARGV );\n\tpush @m, \"\\n\";\n\n\treturn join '', @m;\n    }\n\n\n\n    my($cccmd, $linkcmd, $lperl);\n\n\n    $cccmd = $self->const_cccmd($libperl);\n    $cccmd =~ s/^CCCMD\\s*=\\s*//;\n    $cccmd =~ s/\\$\\(INC\\)/ \"-I$self->{PERL_INC}\" /;\n    $cccmd .= \" $Config{cccdlflags}\"\n\tif ($Config{useshrplib} eq 'true');\n    $cccmd =~ s/\\(CC\\)/\\(PERLMAINCC\\)/;\n\n    # The front matter of the linkcommand...\n    $linkcmd = join ' ', \"\\$(CC)\",\n\t    grep($_, @Config{qw(ldflags ccdlflags)});\n    $linkcmd =~ s/\\s+/ /g;\n    $linkcmd =~ s,(perl\\.exp),\\$(PERL_INC)/$1,;\n\n    # Which *.a files could we make use of...\n    my %static;\n    require File::Find;\n    File::Find::find(sub {\n\treturn unless m/\\Q$self->{LIB_EXT}\\E$/;\n\n        # Skip perl's libraries.\n        return if m/^libperl/ or m/^perl\\Q$self->{LIB_EXT}\\E$/;\n\n\t# Skip purified versions of libraries\n        # (e.g., DynaLoader_pure_p1_c0_032.a)\n\treturn if m/_pure_\\w+_\\w+_\\w+\\.\\w+$/ and -f \"$File::Find::dir/.pure\";\n\n\tif( exists $self->{INCLUDE_EXT} ){\n\t\tmy $found = 0;\n\n\t\t(my $xx = $File::Find::name) =~ s,.*?/auto/,,s;\n\t\t$xx =~ s,/?$_,,;\n\t\t$xx =~ s,/,::,g;\n\n\t\t# Throw away anything not explicitly marked for inclusion.\n\t\t# DynaLoader is implied.\n\t\tforeach my $incl ((@{$self->{INCLUDE_EXT}},'DynaLoader')){\n\t\t\tif( $xx eq $incl ){\n\t\t\t\t$found++;\n\t\t\t\tlast;\n\t\t\t}\n\t\t}\n\t\treturn unless $found;\n\t}\n\telsif( exists $self->{EXCLUDE_EXT} ){\n\t\t(my $xx = $File::Find::name) =~ s,.*?/auto/,,s;\n\t\t$xx =~ s,/?$_,,;\n\t\t$xx =~ s,/,::,g;\n\n\t\t# Throw away anything explicitly marked for exclusion\n\t\tforeach my $excl (@{$self->{EXCLUDE_EXT}}){\n\t\t\treturn if( $xx eq $excl );\n\t\t}\n\t}\n\n\t# don't include the installed version of this extension. I\n\t# leave this line here, although it is not necessary anymore:\n\t# I patched minimod.PL instead, so that Miniperl.pm won't\n\t# include duplicates\n\n\t# Once the patch to minimod.PL is in the distribution, I can\n\t# drop it\n\treturn if $File::Find::name =~ m:auto/$self->{FULLEXT}/$self->{BASEEXT}$self->{LIB_EXT}\\z:;\n\tuse Cwd 'cwd';\n\t$static{cwd() . \"/\" . $_}++;\n    }, grep( -d $_, @{$searchdirs || []}) );\n\n    # We trust that what has been handed in as argument, will be buildable\n    $static = [] unless $static;\n    @static{@{$static}} = (1) x @{$static};\n\n    $extra = [] unless $extra && ref $extra eq 'ARRAY';\n    for (sort keys %static) {\n\tnext unless /\\Q$self->{LIB_EXT}\\E\\z/;\n\t$_ = dirname($_) . \"/extralibs.ld\";\n\tpush @$extra, $_;\n    }\n\n    s/^(.*)/\"-I$1\"/ for @{$perlinc || []};\n\n    $target ||= \"perl\";\n    $tmp    ||= \".\";\n\n# MAP_STATIC doesn't look into subdirs yet. Once \"all\" is made and we\n# regenerate the Makefiles, MAP_STATIC and the dependencies for\n# extralibs.all are computed correctly\n    push @m, \"\nMAP_LINKCMD   = $linkcmd\nMAP_PERLINC   = @{$perlinc || []}\nMAP_STATIC    = \",\njoin(\" \\\\\\n\\t\", reverse sort keys %static), \"\n\nMAP_PRELIBS   = $Config{perllibs} $Config{cryptlib}\n\";\n\n    if (defined $libperl) {\n\t($lperl = $libperl) =~ s/\\$\\(A\\)/$self->{LIB_EXT}/;\n    }\n    unless ($libperl && -f $lperl) { # Ilya's code...\n\tmy $dir = $self->{PERL_SRC} || \"$self->{PERL_ARCHLIB}/CORE\";\n\t$dir = \"$self->{PERL_ARCHLIB}/..\" if $self->{UNINSTALLED_PERL};\n\t$libperl ||= \"libperl$self->{LIB_EXT}\";\n\t$libperl   = \"$dir/$libperl\";\n\t$lperl   ||= \"libperl$self->{LIB_EXT}\";\n\t$lperl     = \"$dir/$lperl\";\n\n        if (! -f $libperl and ! -f $lperl) {\n          # We did not find a static libperl. Maybe there is a shared one?\n          if ($Is{SunOS}) {\n            $lperl  = $libperl = \"$dir/$Config{libperl}\";\n            # SUNOS ld does not take the full path to a shared library\n            $libperl = '' if $Is{SunOS4};\n          }\n        }\n\n\tprint \"Warning: $libperl not found\n    If you're going to build a static perl binary, make sure perl is installed\n    otherwise ignore this warning\\n\"\n\t\tunless (-f $lperl || defined($self->{PERL_SRC}));\n    }\n\n    # SUNOS ld does not take the full path to a shared library\n    my $llibperl = $libperl ? '$(MAP_LIBPERL)' : '-lperl';\n\n    push @m, \"\nMAP_LIBPERL = $libperl\nLLIBPERL    = $llibperl\n\";\n\n    push @m, '\n$(INST_ARCHAUTODIR)/extralibs.all : $(INST_ARCHAUTODIR)$(DFSEP).exists '.join(\" \\\\\\n\\t\", @$extra).'\n\t$(NOECHO) $(RM_F)  $@\n\t$(NOECHO) $(TOUCH) $@\n';\n\n    foreach my $catfile (@$extra){\n\tpush @m, \"\\tcat $catfile >> \\$\\@\\n\";\n    }\n\npush @m, \"\n\\$(MAP_TARGET) :: $tmp/perlmain\\$(OBJ_EXT) \\$(MAP_LIBPERL) \\$(MAP_STATIC) \\$(INST_ARCHAUTODIR)/extralibs.all\n\t\\$(MAP_LINKCMD) -o \\$\\@ \\$(OPTIMIZE) $tmp/perlmain\\$(OBJ_EXT) \\$(LDFROM) \\$(MAP_STATIC) \\$(LLIBPERL) `cat \\$(INST_ARCHAUTODIR)/extralibs.all` \\$(MAP_PRELIBS)\n\t\\$(NOECHO) \\$(ECHO) 'To install the new \\\"\\$(MAP_TARGET)\\\" binary, call'\n\t\\$(NOECHO) \\$(ECHO) '    \\$(MAKE) \\$(USEMAKEFILE) $makefilename inst_perl MAP_TARGET=\\$(MAP_TARGET)'\n\t\\$(NOECHO) \\$(ECHO) 'To remove the intermediate files say'\n\t\\$(NOECHO) \\$(ECHO) '    \\$(MAKE) \\$(USEMAKEFILE) $makefilename map_clean'\n\n$tmp/perlmain\\$(OBJ_EXT): $tmp/perlmain.c\n\";\n    push @m, \"\\t\".$self->cd($tmp, qq[$cccmd \"-I\\$(PERL_INC)\" perlmain.c]).\"\\n\";\n\n    push @m, qq{\n$tmp/perlmain.c: $makefilename}, q{\n\t$(NOECHO) $(ECHO) Writing $@\n\t$(NOECHO) $(PERL) $(MAP_PERLINC) \"-MExtUtils::Miniperl\" \\\\\n\t\t-e \"writemain(grep s#.*/auto/##s, split(q| |, q|$(MAP_STATIC)|))\" > $@t && $(MV) $@t $@\n\n};\n    push @m, \"\\t\", q{$(NOECHO) $(PERL) \"$(INSTALLSCRIPT)/fixpmain\"\n} if (defined (&Dos::UseLFN) && Dos::UseLFN()==0);\n\n\n    push @m, q{\ndoc_inst_perl :\n\t$(NOECHO) $(ECHO) Appending installation info to \"$(DESTINSTALLARCHLIB)/perllocal.pod\"\n\t-$(NOECHO) $(MKPATH) \"$(DESTINSTALLARCHLIB)\"\n\t-$(NOECHO) $(DOC_INSTALL) \\\n\t\t\"Perl binary\" \"$(MAP_TARGET)\" \\\n\t\tMAP_STATIC \"$(MAP_STATIC)\" \\\n\t\tMAP_EXTRA \"`cat $(INST_ARCHAUTODIR)/extralibs.all`\" \\\n\t\tMAP_LIBPERL \"$(MAP_LIBPERL)\" \\\n\t\t>> \"}.$self->catfile('$(DESTINSTALLARCHLIB)','perllocal.pod').q{\"\n\n};\n\n    push @m, q{\ninst_perl : pure_inst_perl doc_inst_perl\n\npure_inst_perl : $(MAP_TARGET)\n\t}.$self->{CP}.q{ $(MAP_TARGET) \"}.$self->catfile('$(DESTINSTALLBIN)','$(MAP_TARGET)').q{\"\n\nclean :: map_clean\n\nmap_clean :\n\t}.$self->{RM_F}.qq{ $tmp/perlmain\\$(OBJ_EXT) $tmp/perlmain.c \\$(MAP_TARGET) $makefilename \\$(INST_ARCHAUTODIR)/extralibs.all\n};\n\n    join '', @m;\n}\n\n=item makefile (o)\n\nDefines how to rewrite the Makefile.\n\n=cut\n\nsub makefile {\n    my($self) = shift;\n    my $m;\n    # We do not know what target was originally specified so we\n    # must force a manual rerun to be sure. But as it should only\n    # happen very rarely it is not a significant problem.\n    $m = '\n$(OBJECT) : $(FIRST_MAKEFILE)\n\n' if $self->{OBJECT};\n\n    my $newer_than_target = $Is{VMS} ? '$(MMS$SOURCE_LIST)' : '$?';\n    my $mpl_args = join \" \", map qq[\"$_\"], @ARGV;\n    my $cross = '';\n    if (defined $::Cross::platform) {\n        # Inherited from win32/buildext.pl\n        $cross = \"-MCross=$::Cross::platform \";\n    }\n    $m .= sprintf <<'MAKE_FRAG', $newer_than_target, $cross, $mpl_args;\n# We take a very conservative approach here, but it's worth it.\n# We move Makefile to Makefile.old here to avoid gnu make looping.\n$(FIRST_MAKEFILE) : Makefile.PL $(CONFIGDEP)\n\t$(NOECHO) $(ECHO) \"Makefile out-of-date with respect to %s\"\n\t$(NOECHO) $(ECHO) \"Cleaning current config before rebuilding Makefile...\"\n\t-$(NOECHO) $(RM_F) $(MAKEFILE_OLD)\n\t-$(NOECHO) $(MV)   $(FIRST_MAKEFILE) $(MAKEFILE_OLD)\n\t- $(MAKE) $(USEMAKEFILE) $(MAKEFILE_OLD) clean $(DEV_NULL)\n\t$(PERLRUN) %sMakefile.PL %s\n\t$(NOECHO) $(ECHO) \"==> Your Makefile has been rebuilt. <==\"\n\t$(NOECHO) $(ECHO) \"==> Please rerun the $(MAKE) command.  <==\"\n\t$(FALSE)\n\nMAKE_FRAG\n\n    return $m;\n}\n\n\n=item maybe_command\n\nReturns true, if the argument is likely to be a command.\n\n=cut\n\nsub maybe_command {\n    my($self,$file) = @_;\n    return $file if -x $file && ! -d $file;\n    return;\n}\n\n\n=item needs_linking (o)\n\nDoes this module need linking? Looks into subdirectory objects (see\nalso has_link_code())\n\n=cut\n\nsub needs_linking {\n    my($self) = shift;\n\n    my $caller = (caller(0))[3];\n    confess(\"needs_linking called too early\") if\n      $caller =~ /^ExtUtils::MakeMaker::/;\n    return $self->{NEEDS_LINKING} if defined $self->{NEEDS_LINKING};\n    if ($self->has_link_code or $self->{MAKEAPERL}){\n\t$self->{NEEDS_LINKING} = 1;\n\treturn 1;\n    }\n    foreach my $child (keys %{$self->{CHILDREN}}) {\n\tif ($self->{CHILDREN}->{$child}->needs_linking) {\n\t    $self->{NEEDS_LINKING} = 1;\n\t    return 1;\n\t}\n    }\n    return $self->{NEEDS_LINKING} = 0;\n}\n\n\n=item parse_abstract\n\nparse a file and return what you think is the ABSTRACT\n\n=cut\n\nsub parse_abstract {\n    my($self,$parsefile) = @_;\n    my $result;\n\n    local $/ = \"\\n\";\n    open(my $fh, '<', $parsefile) or die \"Could not open '$parsefile': $!\";\n    my $inpod = 0;\n    my $pod_encoding;\n    my $package = $self->{DISTNAME};\n    $package =~ s/-/::/g;\n    while (<$fh>) {\n        $inpod = /^=(?!cut)/ ? 1 : /^=cut/ ? 0 : $inpod;\n        next if !$inpod;\n        chop;\n\n        if ( /^=encoding\\s*(.*)$/i ) {\n            $pod_encoding = $1;\n        }\n\n        if ( /^($package(?:\\.pm)? \\s+ -+ \\s+)(.*)/x ) {\n          $result = $2;\n          next;\n        }\n        next unless $result;\n\n        if ( $result && ( /^\\s*$/ || /^\\=/ ) ) {\n          last;\n        }\n        $result = join ' ', $result, $_;\n    }\n    close $fh;\n\n    if ( $pod_encoding and !( $] < 5.008 or !$Config{useperlio} ) ) {\n        # Have to wrap in an eval{} for when running under PERL_CORE\n        # Encode isn't available during build phase and parsing\n        # ABSTRACT isn't important there\n        eval {\n          require Encode;\n          $result = Encode::decode($pod_encoding, $result);\n        }\n    }\n\n    return $result;\n}\n\n=item parse_version\n\n    my $version = MM->parse_version($file);\n\nParse a $file and return what $VERSION is set to by the first assignment.\nIt will return the string \"undef\" if it can't figure out what $VERSION\nis. $VERSION should be for all to see, so C<our $VERSION> or plain $VERSION\nare okay, but C<my $VERSION> is not.\n\nC<<package Foo VERSION>> is also checked for.  The first version\ndeclaration found is used, but this may change as it differs from how\nPerl does it.\n\nparse_version() will try to C<use version> before checking for\nC<$VERSION> so the following will work.\n\n    $VERSION = qv(1.2.3);\n\n=cut\n\nsub parse_version {\n    my($self,$parsefile) = @_;\n    my $result;\n\n    local $/ = \"\\n\";\n    local $_;\n    open(my $fh, '<', $parsefile) or die \"Could not open '$parsefile': $!\";\n    my $inpod = 0;\n    while (<$fh>) {\n        $inpod = /^=(?!cut)/ ? 1 : /^=cut/ ? 0 : $inpod;\n        next if $inpod || /^\\s*#/;\n        chop;\n        next if /^\\s*(if|unless|elsif)/;\n        if ( m{^ \\s* package \\s+ \\w[\\w\\:\\']* \\s+ (v?[0-9._]+) \\s* ;  }x ) {\n            local $^W = 0;\n            $result = $1;\n        }\n        elsif ( m{(?<!\\\\) ([\\$*]) (([\\w\\:\\']*) \\bVERSION)\\b .* (?<![<>=!])\\=[^=]}x ) {\n\t\t\t$result = $self->get_version($parsefile, $1, $2);\n        }\n        else {\n          next;\n        }\n        last if defined $result;\n    }\n    close $fh;\n\n    if ( defined $result && $result !~ /^v?[\\d_\\.]+$/ ) {\n      require version;\n      my $normal = eval { version->new( $result ) };\n      $result = $normal if defined $normal;\n    }\n    $result = \"undef\" unless defined $result;\n    return $result;\n}\n\nsub get_version {\n    my ($self, $parsefile, $sigil, $name) = @_;\n    my $line = $_; # from the while() loop in parse_version\n    {\n        package ExtUtils::MakeMaker::_version;\n        undef *version; # in case of unexpected version() sub\n        eval {\n            require version;\n            version::->import;\n        };\n        no strict;\n        local *{$name};\n        local $^W = 0;\n        $line = $1 if $line =~ m{^(.+)}s;\n        eval($line); ## no critic\n        return ${$name};\n    }\n}\n\n=item pasthru (o)\n\nDefines the string that is passed to recursive make calls in\nsubdirectories.\n\n=cut\n\nsub pasthru {\n    my($self) = shift;\n    my(@m);\n\n    my(@pasthru);\n    my($sep) = $Is{VMS} ? ',' : '';\n    $sep .= \"\\\\\\n\\t\";\n\n    foreach my $key (qw(LIB LIBPERL_A LINKTYPE OPTIMIZE\n                     PREFIX INSTALL_BASE)\n                 )\n    {\n        next unless defined $self->{$key};\n\tpush @pasthru, \"$key=\\\"\\$($key)\\\"\";\n    }\n\n    foreach my $key (qw(DEFINE INC)) {\n        next unless defined $self->{$key};\n\tpush @pasthru, \"PASTHRU_$key=\\\"\\$(PASTHRU_$key)\\\"\";\n    }\n\n    push @m, \"\\nPASTHRU = \", join ($sep, @pasthru), \"\\n\";\n    join \"\", @m;\n}\n\n=item perl_script\n\nTakes one argument, a file name, and returns the file name, if the\nargument is likely to be a perl script. On MM_Unix this is true for\nany ordinary, readable file.\n\n=cut\n\nsub perl_script {\n    my($self,$file) = @_;\n    return $file if -r $file && -f _;\n    return;\n}\n\n=item perldepend (o)\n\nDefines the dependency from all *.h files that come with the perl\ndistribution.\n\n=cut\n\nsub perldepend {\n    my($self) = shift;\n    my(@m);\n\n    my $make_config = $self->cd('$(PERL_SRC)', '$(MAKE) lib/Config.pm');\n\n    push @m, sprintf <<'MAKE_FRAG', $make_config if $self->{PERL_SRC};\n# Check for unpropogated config.sh changes. Should never happen.\n# We do NOT just update config.h because that is not sufficient.\n# An out of date config.h is not fatal but complains loudly!\n$(PERL_INCDEP)/config.h: $(PERL_SRC)/config.sh\n\t-$(NOECHO) $(ECHO) \"Warning: $(PERL_INC)/config.h out of date with $(PERL_SRC)/config.sh\"; $(FALSE)\n\n$(PERL_ARCHLIB)/Config.pm: $(PERL_SRC)/config.sh\n\t$(NOECHO) $(ECHO) \"Warning: $(PERL_ARCHLIB)/Config.pm may be out of date with $(PERL_SRC)/config.sh\"\n\t%s\nMAKE_FRAG\n\n    return join \"\", @m unless $self->needs_linking;\n\n    if ($self->{OBJECT}) {\n        # Need to add an object file dependency on the perl headers.\n        # this is very important for XS modules in perl.git development.\n        push @m, $self->_perl_header_files_fragment(\"/\"); # Directory separator between $(PERL_INC)/header.h\n    }\n\n    push @m, join(\" \", sort values %{$self->{XS}}).\" : \\$(XSUBPPDEPS)\\n\"  if %{$self->{XS}};\n\n    return join \"\\n\", @m;\n}\n\n\n=item pm_to_blib\n\nDefines target that copies all files in the hash PM to their\ndestination and autosplits them. See L<ExtUtils::Install/DESCRIPTION>\n\n=cut\n\nsub pm_to_blib {\n    my $self = shift;\n    my($autodir) = $self->catdir('$(INST_LIB)','auto');\n    my $r = q{\npm_to_blib : $(FIRST_MAKEFILE) $(TO_INST_PM)\n};\n\n    # VMS will swallow '' and PM_FILTER is often empty.  So use q[]\n    my $pm_to_blib = $self->oneliner(<<CODE, ['-MExtUtils::Install']);\npm_to_blib({\\@ARGV}, '$autodir', q[\\$(PM_FILTER)], '\\$(PERM_DIR)')\nCODE\n\n    my @cmds = $self->split_command($pm_to_blib,\n                  map { ($_, $self->{PM}->{$_}) } sort keys %{$self->{PM}});\n\n    $r .= join '', map { \"\\t\\$(NOECHO) $_\\n\" } @cmds;\n    $r .= qq{\\t\\$(NOECHO) \\$(TOUCH) pm_to_blib\\n};\n\n    return $r;\n}\n\n=item post_constants (o)\n\nReturns an empty string per default. Dedicated to overrides from\nwithin Makefile.PL after all constants have been defined.\n\n=cut\n\nsub post_constants{\n    \"\";\n}\n\n=item post_initialize (o)\n\nReturns an empty string per default. Used in Makefile.PLs to add some\nchunk of text to the Makefile after the object is initialized.\n\n=cut\n\nsub post_initialize {\n    \"\";\n}\n\n=item postamble (o)\n\nReturns an empty string. Can be used in Makefile.PLs to write some\ntext to the Makefile at the end.\n\n=cut\n\nsub postamble {\n    \"\";\n}\n\n# transform dot-separated version string into comma-separated quadruple\n# examples:  '1.2.3.4.5' => '1,2,3,4'\n#            '1.2.3'     => '1,2,3,0'\nsub _ppd_version {\n    my ($self, $string) = @_;\n    return join ',', ((split /\\./, $string), (0) x 4)[0..3];\n}\n\n=item ppd\n\nDefines target that creates a PPD (Perl Package Description) file\nfor a binary distribution.\n\n=cut\n\nsub ppd {\n    my($self) = @_;\n\n    my $abstract = $self->{ABSTRACT} || '';\n    $abstract =~ s/\\n/\\\\n/sg;\n    $abstract =~ s/</&lt;/g;\n    $abstract =~ s/>/&gt;/g;\n\n    my $author = join(', ',@{$self->{AUTHOR} || []});\n    $author =~ s/</&lt;/g;\n    $author =~ s/>/&gt;/g;\n\n    my $ppd_file = '$(DISTNAME).ppd';\n\n    my @ppd_cmds = $self->echo(<<'PPD_HTML', $ppd_file, { append => 0, allow_variables => 1 });\n<SOFTPKG NAME=\"$(DISTNAME)\" VERSION=\"$(VERSION)\">\nPPD_HTML\n\n    my $ppd_xml = sprintf <<'PPD_HTML', $abstract, $author;\n    <ABSTRACT>%s</ABSTRACT>\n    <AUTHOR>%s</AUTHOR>\nPPD_HTML\n\n    $ppd_xml .= \"    <IMPLEMENTATION>\\n\";\n    if ( $self->{MIN_PERL_VERSION} ) {\n        my $min_perl_version = $self->_ppd_version($self->{MIN_PERL_VERSION});\n        $ppd_xml .= sprintf <<'PPD_PERLVERS', $min_perl_version;\n        <PERLCORE VERSION=\"%s\" />\nPPD_PERLVERS\n\n    }\n\n    # Don't add \"perl\" to requires.  perl dependencies are\n    # handles by ARCHITECTURE.\n    my %prereqs = %{$self->{PREREQ_PM}};\n    delete $prereqs{perl};\n\n    # Build up REQUIRE\n    foreach my $prereq (sort keys %prereqs) {\n        my $name = $prereq;\n        $name .= '::' unless $name =~ /::/;\n        my $version = $prereqs{$prereq};\n\n        my %attrs = ( NAME => $name );\n        $attrs{VERSION} = $version if $version;\n        my $attrs = join \" \", map { qq[$_=\"$attrs{$_}\"] } sort keys %attrs;\n        $ppd_xml .= qq(        <REQUIRE $attrs />\\n);\n    }\n\n    my $archname = $Config{archname};\n    if ($] >= 5.008) {\n        # archname did not change from 5.6 to 5.8, but those versions may\n        # not be not binary compatible so now we append the part of the\n        # version that changes when binary compatibility may change\n        $archname .= \"-$Config{PERL_REVISION}.$Config{PERL_VERSION}\";\n    }\n    $ppd_xml .= sprintf <<'PPD_OUT', $archname;\n        <ARCHITECTURE NAME=\"%s\" />\nPPD_OUT\n\n    if ($self->{PPM_INSTALL_SCRIPT}) {\n        if ($self->{PPM_INSTALL_EXEC}) {\n            $ppd_xml .= sprintf qq{        <INSTALL EXEC=\"%s\">%s</INSTALL>\\n},\n                  $self->{PPM_INSTALL_EXEC}, $self->{PPM_INSTALL_SCRIPT};\n        }\n        else {\n            $ppd_xml .= sprintf qq{        <INSTALL>%s</INSTALL>\\n},\n                  $self->{PPM_INSTALL_SCRIPT};\n        }\n    }\n\n    if ($self->{PPM_UNINSTALL_SCRIPT}) {\n        if ($self->{PPM_UNINSTALL_EXEC}) {\n            $ppd_xml .= sprintf qq{        <UNINSTALL EXEC=\"%s\">%s</UNINSTALL>\\n},\n                  $self->{PPM_UNINSTALL_EXEC}, $self->{PPM_UNINSTALL_SCRIPT};\n        }\n        else {\n            $ppd_xml .= sprintf qq{        <UNINSTALL>%s</UNINSTALL>\\n},\n                  $self->{PPM_UNINSTALL_SCRIPT};\n        }\n    }\n\n    my ($bin_location) = $self->{BINARY_LOCATION} || '';\n    $bin_location =~ s/\\\\/\\\\\\\\/g;\n\n    $ppd_xml .= sprintf <<'PPD_XML', $bin_location;\n        <CODEBASE HREF=\"%s\" />\n    </IMPLEMENTATION>\n</SOFTPKG>\nPPD_XML\n\n    push @ppd_cmds, $self->echo($ppd_xml, $ppd_file, { append => 1 });\n\n    return sprintf <<'PPD_OUT', join \"\\n\\t\", @ppd_cmds;\n# Creates a PPD (Perl Package Description) for a binary distribution.\nppd :\n\t%s\nPPD_OUT\n\n}\n\n=item prefixify\n\n  $MM->prefixify($var, $prefix, $new_prefix, $default);\n\nUsing either $MM->{uc $var} || $Config{lc $var}, it will attempt to\nreplace it's $prefix with a $new_prefix.\n\nShould the $prefix fail to match I<AND> a PREFIX was given as an\nargument to WriteMakefile() it will set it to the $new_prefix +\n$default.  This is for systems whose file layouts don't neatly fit into\nour ideas of prefixes.\n\nThis is for heuristics which attempt to create directory structures\nthat mirror those of the installed perl.\n\nFor example:\n\n    $MM->prefixify('installman1dir', '/usr', '/home/foo', 'man/man1');\n\nthis will attempt to remove '/usr' from the front of the\n$MM->{INSTALLMAN1DIR} path (initializing it to $Config{installman1dir}\nif necessary) and replace it with '/home/foo'.  If this fails it will\nsimply use '/home/foo/man/man1'.\n\n=cut\n\nsub prefixify {\n    my($self,$var,$sprefix,$rprefix,$default) = @_;\n\n    my $path = $self->{uc $var} ||\n               $Config_Override{lc $var} || $Config{lc $var} || '';\n\n    $rprefix .= '/' if $sprefix =~ m|/$|;\n\n    warn \"  prefixify $var => $path\\n\" if $Verbose >= 2;\n    warn \"    from $sprefix to $rprefix\\n\" if $Verbose >= 2;\n\n    if( $self->{ARGS}{PREFIX} &&\n        $path !~ s{^\\Q$sprefix\\E\\b}{$rprefix}s )\n    {\n\n        warn \"    cannot prefix, using default.\\n\" if $Verbose >= 2;\n        warn \"    no default!\\n\" if !$default && $Verbose >= 2;\n\n        $path = $self->catdir($rprefix, $default) if $default;\n    }\n\n    print \"    now $path\\n\" if $Verbose >= 2;\n    return $self->{uc $var} = $path;\n}\n\n\n=item processPL (o)\n\nDefines targets to run *.PL files.\n\n=cut\n\nsub processPL {\n    my $self = shift;\n    my $pl_files = $self->{PL_FILES};\n\n    return \"\" unless $pl_files;\n\n    my $m = '';\n    foreach my $plfile (sort keys %$pl_files) {\n        my $list = ref($pl_files->{$plfile})\n                     ?  $pl_files->{$plfile}\n\t\t     : [$pl_files->{$plfile}];\n\n\tforeach my $target (@$list) {\n            if( $Is{VMS} ) {\n                $plfile = vmsify($self->eliminate_macros($plfile));\n                $target = vmsify($self->eliminate_macros($target));\n            }\n\n\t    # Normally a .PL file runs AFTER pm_to_blib so it can have\n\t    # blib in its @INC and load the just built modules.  BUT if\n\t    # the generated module is something in $(TO_INST_PM) which\n\t    # pm_to_blib depends on then it can't depend on pm_to_blib\n\t    # else we have a dependency loop.\n\t    my $pm_dep;\n\t    my $perlrun;\n\t    if( defined $self->{PM}{$target} ) {\n\t\t$pm_dep  = '';\n\t\t$perlrun = 'PERLRUN';\n\t    }\n\t    else {\n\t\t$pm_dep  = 'pm_to_blib';\n\t\t$perlrun = 'PERLRUNINST';\n\t    }\n\n            $m .= <<MAKE_FRAG;\n\nall :: $target\n\t\\$(NOECHO) \\$(NOOP)\n\n$target :: $plfile $pm_dep\n\t\\$($perlrun) $plfile $target\nMAKE_FRAG\n\n\t}\n    }\n\n    return $m;\n}\n\n=item quote_paren\n\nBackslashes parentheses C<()> in command line arguments.\nDoesn't handle recursive Makefile C<$(...)> constructs,\nbut handles simple ones.\n\n=cut\n\nsub quote_paren {\n    my $arg = shift;\n    $arg =~ s{\\$\\((.+?)\\)}{\\$\\\\\\\\($1\\\\\\\\)}g;\t# protect $(...)\n    $arg =~ s{(?<!\\\\)([()])}{\\\\$1}g;\t\t# quote unprotected\n    $arg =~ s{\\$\\\\\\\\\\((.+?)\\\\\\\\\\)}{\\$($1)}g;\t# unprotect $(...)\n    return $arg;\n}\n\n=item replace_manpage_separator\n\n  my $man_name = $MM->replace_manpage_separator($file_path);\n\nTakes the name of a package, which may be a nested package, in the\nform 'Foo/Bar.pm' and replaces the slash with C<::> or something else\nsafe for a man page file name.  Returns the replacement.\n\n=cut\n\nsub replace_manpage_separator {\n    my($self,$man) = @_;\n\n    $man =~ s,/+,::,g;\n    return $man;\n}\n\n\n=item cd\n\n=cut\n\nsub cd {\n    my($self, $dir, @cmds) = @_;\n\n    # No leading tab and no trailing newline makes for easier embedding\n    my $make_frag = join \"\\n\\t\", map { \"cd $dir && $_\" } @cmds;\n\n    return $make_frag;\n}\n\n=item oneliner\n\n=cut\n\nsub oneliner {\n    my($self, $cmd, $switches) = @_;\n    $switches = [] unless defined $switches;\n\n    # Strip leading and trailing newlines\n    $cmd =~ s{^\\n+}{};\n    $cmd =~ s{\\n+$}{};\n\n    my @cmds = split /\\n/, $cmd;\n    $cmd = join \" \\n\\t  -e \", map $self->quote_literal($_), @cmds;\n    $cmd = $self->escape_newlines($cmd);\n\n    $switches = join ' ', @$switches;\n\n    return qq{\\$(ABSPERLRUN) $switches -e $cmd --};\n}\n\n\n=item quote_literal\n\nQuotes macro literal value suitable for being used on a command line so\nthat when expanded by make, will be received by command as given to\nthis method:\n\n  my $quoted = $mm->quote_literal(q{it isn't});\n  # returns:\n  #   'it isn'\\''t'\n  print MAKEFILE \"target:\\n\\techo $quoted\\n\";\n  # when run \"make target\", will output:\n  #   it isn't\n\n=cut\n\nsub quote_literal {\n    my($self, $text, $opts) = @_;\n    $opts->{allow_variables} = 1 unless defined $opts->{allow_variables};\n\n    # Quote single quotes\n    $text =~ s{'}{'\\\\''}g;\n\n    $text = $opts->{allow_variables}\n      ? $self->escape_dollarsigns($text) : $self->escape_all_dollarsigns($text);\n\n    return \"'$text'\";\n}\n\n\n=item escape_newlines\n\n=cut\n\nsub escape_newlines {\n    my($self, $text) = @_;\n\n    $text =~ s{\\n}{\\\\\\n}g;\n\n    return $text;\n}\n\n\n=item max_exec_len\n\nUsing POSIX::ARG_MAX.  Otherwise falling back to 4096.\n\n=cut\n\nsub max_exec_len {\n    my $self = shift;\n\n    if (!defined $self->{_MAX_EXEC_LEN}) {\n        if (my $arg_max = eval { require POSIX;  &POSIX::ARG_MAX }) {\n            $self->{_MAX_EXEC_LEN} = $arg_max;\n        }\n        else {      # POSIX minimum exec size\n            $self->{_MAX_EXEC_LEN} = 4096;\n        }\n    }\n\n    return $self->{_MAX_EXEC_LEN};\n}\n\n\n=item static (o)\n\nDefines the static target.\n\n=cut\n\nsub static {\n# --- Static Loading Sections ---\n\n    my($self) = shift;\n    '\n## $(INST_PM) has been moved to the all: target.\n## It remains here for awhile to allow for old usage: \"make static\"\nstatic :: $(FIRST_MAKEFILE) $(INST_STATIC)\n\t$(NOECHO) $(NOOP)\n';\n}\n\n=item static_lib (o)\n\nDefines how to produce the *.a (or equivalent) files.\n\n=cut\n\nsub static_lib {\n    my($self) = @_;\n    return '' unless $self->has_link_code;\n\n    my(@m);\n    push(@m, <<'END');\n\n$(INST_STATIC) : $(OBJECT) $(MYEXTLIB) $(INST_ARCHAUTODIR)$(DFSEP).exists\n\t$(RM_RF) $@\nEND\n\n    # If this extension has its own library (eg SDBM_File)\n    # then copy that to $(INST_STATIC) and add $(OBJECT) into it.\n    push(@m, <<'MAKE_FRAG') if $self->{MYEXTLIB};\n\t$(CP) $(MYEXTLIB) \"$@\"\nMAKE_FRAG\n\n    my $ar;\n    if (exists $self->{FULL_AR} && -x $self->{FULL_AR}) {\n        # Prefer the absolute pathed ar if available so that PATH\n        # doesn't confuse us.  Perl itself is built with the full_ar.\n        $ar = 'FULL_AR';\n    } else {\n        $ar = 'AR';\n    }\n    push @m, sprintf <<'MAKE_FRAG', $ar;\n\t$(%s) $(AR_STATIC_ARGS) $@ $(OBJECT) && $(RANLIB) $@\n\t$(CHMOD) $(PERM_RWX) $@\n\t$(NOECHO) $(ECHO) \"$(EXTRALIBS)\" > \"$(INST_ARCHAUTODIR)/extralibs.ld\"\nMAKE_FRAG\n\n    # Old mechanism - still available:\n    push @m, <<'MAKE_FRAG' if $self->{PERL_SRC} && $self->{EXTRALIBS};\n\t$(NOECHO) $(ECHO) \"$(EXTRALIBS)\" >> \"$(PERL_SRC)/ext.libs\"\nMAKE_FRAG\n\n    join('', @m);\n}\n\n=item staticmake (o)\n\nCalls makeaperl.\n\n=cut\n\nsub staticmake {\n    my($self, %attribs) = @_;\n    my(@static);\n\n    my(@searchdirs)=($self->{PERL_ARCHLIB}, $self->{SITEARCHEXP},  $self->{INST_ARCHLIB});\n\n    # And as it's not yet built, we add the current extension\n    # but only if it has some C code (or XS code, which implies C code)\n    if (@{$self->{C}}) {\n\t@static = $self->catfile($self->{INST_ARCHLIB},\n\t\t\t\t \"auto\",\n\t\t\t\t $self->{FULLEXT},\n\t\t\t\t \"$self->{BASEEXT}$self->{LIB_EXT}\"\n\t\t\t\t);\n    }\n\n    # Either we determine now, which libraries we will produce in the\n    # subdirectories or we do it at runtime of the make.\n\n    # We could ask all subdir objects, but I cannot imagine, why it\n    # would be necessary.\n\n    # Instead we determine all libraries for the new perl at\n    # runtime.\n    my(@perlinc) = ($self->{INST_ARCHLIB}, $self->{INST_LIB}, $self->{PERL_ARCHLIB}, $self->{PERL_LIB});\n\n    $self->makeaperl(MAKE\t=> $self->{MAKEFILE},\n\t\t     DIRS\t=> \\@searchdirs,\n\t\t     STAT\t=> \\@static,\n\t\t     INCL\t=> \\@perlinc,\n\t\t     TARGET\t=> $self->{MAP_TARGET},\n\t\t     TMP\t=> \"\",\n\t\t     LIBPERL\t=> $self->{LIBPERL_A}\n\t\t    );\n}\n\n=item subdir_x (o)\n\nHelper subroutine for subdirs\n\n=cut\n\nsub subdir_x {\n    my($self, $subdir) = @_;\n\n    my $subdir_cmd = $self->cd($subdir,\n      '$(MAKE) $(USEMAKEFILE) $(FIRST_MAKEFILE) all $(PASTHRU)'\n    );\n    return sprintf <<'EOT', $subdir_cmd;\n\nsubdirs ::\n\t$(NOECHO) %s\nEOT\n\n}\n\n=item subdirs (o)\n\nDefines targets to process subdirectories.\n\n=cut\n\nsub subdirs {\n# --- Sub-directory Sections ---\n    my($self) = shift;\n    my(@m);\n    # This method provides a mechanism to automatically deal with\n    # subdirectories containing further Makefile.PL scripts.\n    # It calls the subdir_x() method for each subdirectory.\n    foreach my $dir (@{$self->{DIR}}){\n\tpush(@m, $self->subdir_x($dir));\n####\tprint \"Including $dir subdirectory\\n\";\n    }\n    if (@m){\n\tunshift(@m, \"\n# The default clean, realclean and test targets in this Makefile\n# have automatically been given entries for each subdir.\n\n\");\n    } else {\n\tpush(@m, \"\\n# none\")\n    }\n    join('',@m);\n}\n\n=item test (o)\n\nDefines the test targets.\n\n=cut\n\nsub test {\n# --- Test and Installation Sections ---\n\n    my($self, %attribs) = @_;\n    my $tests = $attribs{TESTS} || '';\n    if (!$tests && -d 't' && defined $attribs{RECURSIVE_TEST_FILES}) {\n        $tests = $self->find_tests_recursive;\n    }\n    elsif (!$tests && -d 't') {\n        $tests = $self->find_tests;\n    }\n    # have to do this because nmake is broken\n    $tests =~ s!/!\\\\!g if $self->is_make_type('nmake');\n    # note: 'test.pl' name is also hardcoded in init_dirscan()\n    my(@m);\n    push(@m,\"\nTEST_VERBOSE=0\nTEST_TYPE=test_\\$(LINKTYPE)\nTEST_FILE = test.pl\nTEST_FILES = $tests\nTESTDB_SW = -d\n\ntestdb :: testdb_\\$(LINKTYPE)\n\ntest :: \\$(TEST_TYPE) subdirs-test\n\nsubdirs-test ::\n\t\\$(NOECHO) \\$(NOOP)\n\n\");\n\n    foreach my $dir (@{ $self->{DIR} }) {\n        my $test = $self->cd($dir, '$(MAKE) test $(PASTHRU)');\n\n        push @m, <<END\nsubdirs-test ::\n\t\\$(NOECHO) $test\n\nEND\n    }\n\n    push(@m, \"\\t\\$(NOECHO) \\$(ECHO) 'No tests defined for \\$(NAME) extension.'\\n\")\n\tunless $tests or -f \"test.pl\" or @{$self->{DIR}};\n    push(@m, \"\\n\");\n\n    push(@m, \"test_dynamic :: pure_all\\n\");\n    push(@m, $self->test_via_harness('$(FULLPERLRUN)', '$(TEST_FILES)'))\n      if $tests;\n    push(@m, $self->test_via_script('$(FULLPERLRUN)', '$(TEST_FILE)'))\n      if -f \"test.pl\";\n    push(@m, \"\\n\");\n\n    push(@m, \"testdb_dynamic :: pure_all\\n\");\n    push(@m, $self->test_via_script('$(FULLPERLRUN) $(TESTDB_SW)',\n                                    '$(TEST_FILE)'));\n    push(@m, \"\\n\");\n\n    # Occasionally we may face this degenerate target:\n    push @m, \"test_ : test_dynamic\\n\\n\";\n\n    if ($self->needs_linking()) {\n\tpush(@m, \"test_static :: pure_all \\$(MAP_TARGET)\\n\");\n\tpush(@m, $self->test_via_harness('./$(MAP_TARGET)', '$(TEST_FILES)')) if $tests;\n\tpush(@m, $self->test_via_script('./$(MAP_TARGET)', '$(TEST_FILE)')) if -f \"test.pl\";\n\tpush(@m, \"\\n\");\n\tpush(@m, \"testdb_static :: pure_all \\$(MAP_TARGET)\\n\");\n\tpush(@m, $self->test_via_script('./$(MAP_TARGET) $(TESTDB_SW)', '$(TEST_FILE)'));\n\tpush(@m, \"\\n\");\n    } else {\n\tpush @m, \"test_static :: test_dynamic\\n\";\n\tpush @m, \"testdb_static :: testdb_dynamic\\n\";\n    }\n    join(\"\", @m);\n}\n\n=item test_via_harness (override)\n\nFor some reason which I forget, Unix machines like to have\nPERL_DL_NONLAZY set for tests.\n\n=cut\n\nsub test_via_harness {\n    my($self, $perl, $tests) = @_;\n    return $self->SUPER::test_via_harness(\"PERL_DL_NONLAZY=1 $perl\", $tests);\n}\n\n=item test_via_script (override)\n\nAgain, the PERL_DL_NONLAZY thing.\n\n=cut\n\nsub test_via_script {\n    my($self, $perl, $script) = @_;\n    return $self->SUPER::test_via_script(\"PERL_DL_NONLAZY=1 $perl\", $script);\n}\n\n\n=item tool_xsubpp (o)\n\nDetermines typemaps, xsubpp version, prototype behaviour.\n\n=cut\n\nsub tool_xsubpp {\n    my($self) = shift;\n    return \"\" unless $self->needs_linking;\n\n    my $xsdir;\n    my @xsubpp_dirs = @INC;\n\n    # Make sure we pick up the new xsubpp if we're building perl.\n    unshift @xsubpp_dirs, $self->{PERL_LIB} if $self->{PERL_CORE};\n\n    my $foundxsubpp = 0;\n    foreach my $dir (@xsubpp_dirs) {\n        $xsdir = $self->catdir($dir, 'ExtUtils');\n        if( -r $self->catfile($xsdir, \"xsubpp\") ) {\n            $foundxsubpp = 1;\n            last;\n        }\n    }\n    die \"ExtUtils::MM_Unix::tool_xsubpp : Can't find xsubpp\" if !$foundxsubpp;\n\n    my $tmdir   = File::Spec->catdir($self->{PERL_LIB},\"ExtUtils\");\n    my(@tmdeps) = $self->catfile($tmdir,'typemap');\n    if( $self->{TYPEMAPS} ){\n        foreach my $typemap (@{$self->{TYPEMAPS}}){\n            if( ! -f  $typemap ) {\n                warn \"Typemap $typemap not found.\\n\";\n            }\n            else {\n                push(@tmdeps,  $typemap);\n            }\n        }\n    }\n    push(@tmdeps, \"typemap\") if -f \"typemap\";\n    my @tmargs = map(qq{-typemap \"$_\"}, @tmdeps);\n    $_ = $self->quote_dep($_) for @tmdeps;\n    if( exists $self->{XSOPT} ){\n        unshift( @tmargs, $self->{XSOPT} );\n    }\n\n    if ($Is{VMS}                          &&\n        $Config{'ldflags'}               &&\n        $Config{'ldflags'} =~ m!/Debug!i &&\n        (!exists($self->{XSOPT}) || $self->{XSOPT} !~ /linenumbers/)\n       )\n    {\n        unshift(@tmargs,'-nolinenumbers');\n    }\n\n\n    $self->{XSPROTOARG} = \"\" unless defined $self->{XSPROTOARG};\n    my $xsdirdep = $self->quote_dep($xsdir);\n    # -dep for use when dependency not command\n\n    return qq{\nXSUBPPDIR = $xsdir\nXSUBPP = \"\\$(XSUBPPDIR)\\$(DFSEP)xsubpp\"\nXSUBPPRUN = \\$(PERLRUN) \\$(XSUBPP)\nXSPROTOARG = $self->{XSPROTOARG}\nXSUBPPDEPS = @tmdeps $xsdirdep\\$(DFSEP)xsubpp\nXSUBPPARGS = @tmargs\nXSUBPP_EXTRA_ARGS =\n};\n}\n\n\n=item all_target\n\nBuild man pages, too\n\n=cut\n\nsub all_target {\n    my $self = shift;\n\n    return <<'MAKE_EXT';\nall :: pure_all manifypods\n\t$(NOECHO) $(NOOP)\nMAKE_EXT\n}\n\n=item top_targets (o)\n\nDefines the targets all, subdirs, config, and O_FILES\n\n=cut\n\nsub top_targets {\n# --- Target Sections ---\n\n    my($self) = shift;\n    my(@m);\n\n    push @m, $self->all_target, \"\\n\" unless $self->{SKIPHASH}{'all'};\n\n    push @m, '\npure_all :: config pm_to_blib subdirs linkext\n\t$(NOECHO) $(NOOP)\n\nsubdirs :: $(MYEXTLIB)\n\t$(NOECHO) $(NOOP)\n\nconfig :: $(FIRST_MAKEFILE) blibdirs\n\t$(NOECHO) $(NOOP)\n';\n\n    push @m, '\n$(O_FILES): $(H_FILES)\n' if @{$self->{O_FILES} || []} && @{$self->{H} || []};\n\n    push @m, q{\nhelp :\n\tperldoc ExtUtils::MakeMaker\n};\n\n    join('',@m);\n}\n\n=item writedoc\n\nObsolete, deprecated method. Not used since Version 5.21.\n\n=cut\n\nsub writedoc {\n# --- perllocal.pod section ---\n    my($self,$what,$name,@attribs)=@_;\n    my $time = localtime;\n    print \"=head2 $time: $what C<$name>\\n\\n=over 4\\n\\n=item *\\n\\n\";\n    print join \"\\n\\n=item *\\n\\n\", map(\"C<$_>\",@attribs);\n    print \"\\n\\n=back\\n\\n\";\n}\n\n=item xs_c (o)\n\nDefines the suffix rules to compile XS files to C.\n\n=cut\n\nsub xs_c {\n    my($self) = shift;\n    return '' unless $self->needs_linking();\n    '\n.xs.c:\n\t$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) $(XSUBPP_EXTRA_ARGS) $*.xs > $*.xsc && $(MV) $*.xsc $*.c\n';\n}\n\n=item xs_cpp (o)\n\nDefines the suffix rules to compile XS files to C++.\n\n=cut\n\nsub xs_cpp {\n    my($self) = shift;\n    return '' unless $self->needs_linking();\n    '\n.xs.cpp:\n\t$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) $*.xs > $*.xsc && $(MV) $*.xsc $*.cpp\n';\n}\n\n=item xs_o (o)\n\nDefines suffix rules to go from XS to object files directly. This is\nonly intended for broken make implementations.\n\n=cut\n\nsub xs_o {\t# many makes are too dumb to use xs_c then c_o\n    my($self) = shift;\n    return '' unless $self->needs_linking();\n    '\n.xs$(OBJ_EXT):\n\t$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) $*.xs > $*.xsc && $(MV) $*.xsc $*.c\n\t$(CCCMD) $(CCCDLFLAGS) \"-I$(PERL_INC)\" $(PASTHRU_DEFINE) $(DEFINE) $*.c\n';\n}\n\n\n1;\n\n=back\n\n=head1 SEE ALSO\n\nL<ExtUtils::MakeMaker>\n\n=cut\n\n__END__\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_AIX.pm": "package ExtUtils::MM_AIX;\n\nuse strict;\nour $VERSION = '7.04_01';\n\nrequire ExtUtils::MM_Unix;\nour @ISA = qw(ExtUtils::MM_Unix);\n\nuse ExtUtils::MakeMaker qw(neatvalue);\n\n\n=head1 NAME\n\nExtUtils::MM_AIX - AIX specific subclass of ExtUtils::MM_Unix\n\n=head1 SYNOPSIS\n\n  Don't use this module directly.\n  Use ExtUtils::MM and let it choose.\n\n=head1 DESCRIPTION\n\nThis is a subclass of ExtUtils::MM_Unix which contains functionality for\nAIX.\n\nUnless otherwise stated it works just like ExtUtils::MM_Unix\n\n=head2 Overridden methods\n\n=head3 dlsyms\n\nDefine DL_FUNCS and DL_VARS and write the *.exp files.\n\n=cut\n\nsub dlsyms {\n    my($self,%attribs) = @_;\n\n    return '' unless $self->needs_linking();\n\n    my($funcs) = $attribs{DL_FUNCS} || $self->{DL_FUNCS} || {};\n    my($vars)  = $attribs{DL_VARS} || $self->{DL_VARS} || [];\n    my($funclist)  = $attribs{FUNCLIST} || $self->{FUNCLIST} || [];\n    my(@m);\n\n    push(@m,\"\ndynamic :: $self->{BASEEXT}.exp\n\n\") unless $self->{SKIPHASH}{'dynamic'}; # dynamic and static are subs, so...\n\n    push(@m,\"\nstatic :: $self->{BASEEXT}.exp\n\n\") unless $self->{SKIPHASH}{'static'};  # we avoid a warning if we tick them\n\n    push(@m,\"\n$self->{BASEEXT}.exp: Makefile.PL\n\",'\t$(PERLRUN) -e \\'use ExtUtils::Mksymlists; \\\\\n\tMksymlists(\"NAME\" => \"',$self->{NAME},'\", \"DL_FUNCS\" => ',\n\tneatvalue($funcs), ', \"FUNCLIST\" => ', neatvalue($funclist),\n\t', \"DL_VARS\" => ', neatvalue($vars), ');\\'\n');\n\n    join('',@m);\n}\n\n\n=head1 AUTHOR\n\nMichael G Schwern <schwern@pobox.com> with code from ExtUtils::MM_Unix\n\n=head1 SEE ALSO\n\nL<ExtUtils::MakeMaker>\n\n=cut\n\n\n1;\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_OS2.pm": "package ExtUtils::MM_OS2;\n\nuse strict;\n\nuse ExtUtils::MakeMaker qw(neatvalue);\nuse File::Spec;\n\nour $VERSION = '7.04_01';\n\nrequire ExtUtils::MM_Any;\nrequire ExtUtils::MM_Unix;\nour @ISA = qw(ExtUtils::MM_Any ExtUtils::MM_Unix);\n\n=pod\n\n=head1 NAME\n\nExtUtils::MM_OS2 - methods to override UN*X behaviour in ExtUtils::MakeMaker\n\n=head1 SYNOPSIS\n\n use ExtUtils::MM_OS2; # Done internally by ExtUtils::MakeMaker if needed\n\n=head1 DESCRIPTION\n\nSee ExtUtils::MM_Unix for a documentation of the methods provided\nthere. This package overrides the implementation of these methods, not\nthe semantics.\n\n=head1 METHODS\n\n=over 4\n\n=item init_dist\n\nDefine TO_UNIX to convert OS2 linefeeds to Unix style.\n\n=cut\n\nsub init_dist {\n    my($self) = @_;\n\n    $self->{TO_UNIX} ||= <<'MAKE_TEXT';\n$(NOECHO) $(TEST_F) tmp.zip && $(RM_F) tmp.zip; $(ZIP) -ll -mr tmp.zip $(DISTVNAME) && unzip -o tmp.zip && $(RM_F) tmp.zip\nMAKE_TEXT\n\n    $self->SUPER::init_dist;\n}\n\nsub dlsyms {\n    my($self,%attribs) = @_;\n\n    my($funcs) = $attribs{DL_FUNCS} || $self->{DL_FUNCS} || {};\n    my($vars)  = $attribs{DL_VARS} || $self->{DL_VARS} || [];\n    my($funclist) = $attribs{FUNCLIST} || $self->{FUNCLIST} || [];\n    my($imports)  = $attribs{IMPORTS} || $self->{IMPORTS} || {};\n    my(@m);\n    (my $boot = $self->{NAME}) =~ s/:/_/g;\n\n    if (not $self->{SKIPHASH}{'dynamic'}) {\n\tpush(@m,\"\n$self->{BASEEXT}.def: Makefile.PL\n\",\n     '\t$(PERL) \"-I$(PERL_ARCHLIB)\" \"-I$(PERL_LIB)\" -e \\'use ExtUtils::Mksymlists; \\\\\n     Mksymlists(\"NAME\" => \"$(NAME)\", \"DLBASE\" => \"$(DLBASE)\", ',\n     '\"VERSION\" => \"$(VERSION)\", \"DISTNAME\" => \"$(DISTNAME)\", ',\n     '\"INSTALLDIRS\" => \"$(INSTALLDIRS)\", ',\n     '\"DL_FUNCS\" => ',neatvalue($funcs),\n     ', \"FUNCLIST\" => ',neatvalue($funclist),\n     ', \"IMPORTS\" => ',neatvalue($imports),\n     ', \"DL_VARS\" => ', neatvalue($vars), ');\\'\n');\n    }\n    if ($self->{IMPORTS} && %{$self->{IMPORTS}}) {\n\t# Make import files (needed for static build)\n\t-d 'tmp_imp' or mkdir 'tmp_imp', 0777 or die \"Can't mkdir tmp_imp\";\n\topen my $imp, '>', 'tmpimp.imp' or die \"Can't open tmpimp.imp\";\n\twhile (my($name, $exp) = each %{$self->{IMPORTS}}) {\n\t    my ($lib, $id) = ($exp =~ /(.*)\\.(.*)/) or die \"Malformed IMPORT `$exp'\";\n\t    print $imp \"$name $lib $id ?\\n\";\n\t}\n\tclose $imp or die \"Can't close tmpimp.imp\";\n\t# print \"emximp -o tmpimp$Config::Config{lib_ext} tmpimp.imp\\n\";\n\tsystem \"emximp -o tmpimp$Config::Config{lib_ext} tmpimp.imp\"\n\t    and die \"Cannot make import library: $!, \\$?=$?\";\n\t# May be running under miniperl, so have no glob...\n\teval { unlink <tmp_imp/*>; 1 } or system \"rm tmp_imp/*\";\n\tsystem \"cd tmp_imp; $Config::Config{ar} x ../tmpimp$Config::Config{lib_ext}\"\n\t    and die \"Cannot extract import objects: $!, \\$?=$?\";\n    }\n    join('',@m);\n}\n\nsub static_lib {\n    my($self) = @_;\n    my $old = $self->ExtUtils::MM_Unix::static_lib();\n    return $old unless $self->{IMPORTS} && %{$self->{IMPORTS}};\n\n    my @chunks = split /\\n{2,}/, $old;\n    shift @chunks unless length $chunks[0]; # Empty lines at the start\n    $chunks[0] .= <<'EOC';\n\n\t$(AR) $(AR_STATIC_ARGS) $@ tmp_imp/* && $(RANLIB) $@\nEOC\n    return join \"\\n\\n\". '', @chunks;\n}\n\nsub replace_manpage_separator {\n    my($self,$man) = @_;\n    $man =~ s,/+,.,g;\n    $man;\n}\n\nsub maybe_command {\n    my($self,$file) = @_;\n    $file =~ s,[/\\\\]+,/,g;\n    return $file if -x $file && ! -d _;\n    return \"$file.exe\" if -x \"$file.exe\" && ! -d _;\n    return \"$file.cmd\" if -x \"$file.cmd\" && ! -d _;\n    return;\n}\n\n=item init_linker\n\n=cut\n\nsub init_linker {\n    my $self = shift;\n\n    $self->{PERL_ARCHIVE} = \"\\$(PERL_INC)/libperl\\$(LIB_EXT)\";\n\n    $self->{PERL_ARCHIVEDEP} ||= '';\n    $self->{PERL_ARCHIVE_AFTER} = $OS2::is_aout\n      ? ''\n      : '$(PERL_INC)/libperl_override$(LIB_EXT)';\n    $self->{EXPORT_LIST} = '$(BASEEXT).def';\n}\n\n=item os_flavor\n\nOS/2 is OS/2\n\n=cut\n\nsub os_flavor {\n    return('OS/2');\n}\n\n=back\n\n=cut\n\n1;\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_VMS.pm": "package ExtUtils::MM_VMS;\n\nuse strict;\n\nuse ExtUtils::MakeMaker::Config;\nrequire Exporter;\n\nBEGIN {\n    # so we can compile the thing on non-VMS platforms.\n    if( $^O eq 'VMS' ) {\n        require VMS::Filespec;\n        VMS::Filespec->import;\n    }\n}\n\nuse File::Basename;\n\nour $VERSION = '7.04_01';\n\nrequire ExtUtils::MM_Any;\nrequire ExtUtils::MM_Unix;\nour @ISA = qw( ExtUtils::MM_Any ExtUtils::MM_Unix );\n\nuse ExtUtils::MakeMaker qw($Verbose neatvalue);\nour $Revision = $ExtUtils::MakeMaker::Revision;\n\n\n=head1 NAME\n\nExtUtils::MM_VMS - methods to override UN*X behaviour in ExtUtils::MakeMaker\n\n=head1 SYNOPSIS\n\n  Do not use this directly.\n  Instead, use ExtUtils::MM and it will figure out which MM_*\n  class to use for you.\n\n=head1 DESCRIPTION\n\nSee ExtUtils::MM_Unix for a documentation of the methods provided\nthere. This package overrides the implementation of these methods, not\nthe semantics.\n\n=head2 Methods always loaded\n\n=over 4\n\n=item wraplist\n\nConverts a list into a string wrapped at approximately 80 columns.\n\n=cut\n\nsub wraplist {\n    my($self) = shift;\n    my($line,$hlen) = ('',0);\n\n    foreach my $word (@_) {\n      # Perl bug -- seems to occasionally insert extra elements when\n      # traversing array (scalar(@array) doesn't show them, but\n      # foreach(@array) does) (5.00307)\n      next unless $word =~ /\\w/;\n      $line .= ' ' if length($line);\n      if ($hlen > 80) { $line .= \"\\\\\\n\\t\"; $hlen = 0; }\n      $line .= $word;\n      $hlen += length($word) + 2;\n    }\n    $line;\n}\n\n\n# This isn't really an override.  It's just here because ExtUtils::MM_VMS\n# appears in @MM::ISA before ExtUtils::Liblist::Kid, so if there isn't an ext()\n# in MM_VMS, then AUTOLOAD is called, and bad things happen.  So, we just\n# mimic inheritance here and hand off to ExtUtils::Liblist::Kid.\n# XXX This hackery will die soon. --Schwern\nsub ext {\n    require ExtUtils::Liblist::Kid;\n    goto &ExtUtils::Liblist::Kid::ext;\n}\n\n=back\n\n=head2 Methods\n\nThose methods which override default MM_Unix methods are marked\n\"(override)\", while methods unique to MM_VMS are marked \"(specific)\".\nFor overridden methods, documentation is limited to an explanation\nof why this method overrides the MM_Unix method; see the ExtUtils::MM_Unix\ndocumentation for more details.\n\n=over 4\n\n=item guess_name (override)\n\nTry to determine name of extension being built.  We begin with the name\nof the current directory.  Since VMS filenames are case-insensitive,\nhowever, we look for a F<.pm> file whose name matches that of the current\ndirectory (presumably the 'main' F<.pm> file for this extension), and try\nto find a C<package> statement from which to obtain the Mixed::Case\npackage name.\n\n=cut\n\nsub guess_name {\n    my($self) = @_;\n    my($defname,$defpm,@pm,%xs);\n    local *PM;\n\n    $defname = basename(fileify($ENV{'DEFAULT'}));\n    $defname =~ s![\\d\\-_]*\\.dir.*$!!;  # Clip off .dir;1 suffix, and package version\n    $defpm = $defname;\n    # Fallback in case for some reason a user has copied the files for an\n    # extension into a working directory whose name doesn't reflect the\n    # extension's name.  We'll use the name of a unique .pm file, or the\n    # first .pm file with a matching .xs file.\n    if (not -e \"${defpm}.pm\") {\n      @pm = glob('*.pm');\n      s/.pm$// for @pm;\n      if (@pm == 1) { ($defpm = $pm[0]) =~ s/.pm$//; }\n      elsif (@pm) {\n        %xs = map { s/.xs$//; ($_,1) } glob('*.xs');  ## no critic\n        if (keys %xs) {\n            foreach my $pm (@pm) {\n                $defpm = $pm, last if exists $xs{$pm};\n            }\n        }\n      }\n    }\n    if (open(my $pm, '<', \"${defpm}.pm\")){\n        while (<$pm>) {\n            if (/^\\s*package\\s+([^;]+)/i) {\n                $defname = $1;\n                last;\n            }\n        }\n        print \"Warning (non-fatal): Couldn't find package name in ${defpm}.pm;\\n\\t\",\n                     \"defaulting package name to $defname\\n\"\n            if eof($pm);\n        close $pm;\n    }\n    else {\n        print \"Warning (non-fatal): Couldn't find ${defpm}.pm;\\n\\t\",\n                     \"defaulting package name to $defname\\n\";\n    }\n    $defname =~ s#[\\d.\\-_]+$##;\n    $defname;\n}\n\n=item find_perl (override)\n\nUse VMS file specification syntax and CLI commands to find and\ninvoke Perl images.\n\n=cut\n\nsub find_perl {\n    my($self, $ver, $names, $dirs, $trace) = @_;\n    my($vmsfile,@sdirs,@snames,@cand);\n    my($rslt);\n    my($inabs) = 0;\n    local *TCF;\n\n    if( $self->{PERL_CORE} ) {\n        # Check in relative directories first, so we pick up the current\n        # version of Perl if we're running MakeMaker as part of the main build.\n        @sdirs = sort { my($absa) = $self->file_name_is_absolute($a);\n                        my($absb) = $self->file_name_is_absolute($b);\n                        if ($absa && $absb) { return $a cmp $b }\n                        else { return $absa ? 1 : ($absb ? -1 : ($a cmp $b)); }\n                      } @$dirs;\n        # Check miniperl before perl, and check names likely to contain\n        # version numbers before \"generic\" names, so we pick up an\n        # executable that's less likely to be from an old installation.\n        @snames = sort { my($ba) = $a =~ m!([^:>\\]/]+)$!;  # basename\n                         my($bb) = $b =~ m!([^:>\\]/]+)$!;\n                         my($ahasdir) = (length($a) - length($ba) > 0);\n                         my($bhasdir) = (length($b) - length($bb) > 0);\n                         if    ($ahasdir and not $bhasdir) { return 1; }\n                         elsif ($bhasdir and not $ahasdir) { return -1; }\n                         else { $bb =~ /\\d/ <=> $ba =~ /\\d/\n                                  or substr($ba,0,1) cmp substr($bb,0,1)\n                                  or length($bb) <=> length($ba) } } @$names;\n    }\n    else {\n        @sdirs  = @$dirs;\n        @snames = @$names;\n    }\n\n    # Image names containing Perl version use '_' instead of '.' under VMS\n    s/\\.(\\d+)$/_$1/ for @snames;\n    if ($trace >= 2){\n        print \"Looking for perl $ver by these names:\\n\";\n        print \"\\t@snames,\\n\";\n        print \"in these dirs:\\n\";\n        print \"\\t@sdirs\\n\";\n    }\n    foreach my $dir (@sdirs){\n        next unless defined $dir; # $self->{PERL_SRC} may be undefined\n        $inabs++ if $self->file_name_is_absolute($dir);\n        if ($inabs == 1) {\n            # We've covered relative dirs; everything else is an absolute\n            # dir (probably an installed location).  First, we'll try\n            # potential command names, to see whether we can avoid a long\n            # MCR expression.\n            foreach my $name (@snames) {\n                push(@cand,$name) if $name =~ /^[\\w\\-\\$]+$/;\n            }\n            $inabs++; # Should happen above in next $dir, but just in case...\n        }\n        foreach my $name (@snames){\n            push @cand, ($name !~ m![/:>\\]]!) ? $self->catfile($dir,$name)\n                                              : $self->fixpath($name,0);\n        }\n    }\n    foreach my $name (@cand) {\n        print \"Checking $name\\n\" if $trace >= 2;\n        # If it looks like a potential command, try it without the MCR\n        if ($name =~ /^[\\w\\-\\$]+$/) {\n            open(my $tcf, \">\", \"temp_mmvms.com\")\n                or die('unable to open temp file');\n            print $tcf \"\\$ set message/nofacil/nosever/noident/notext\\n\";\n            print $tcf \"\\$ $name -e \\\"require $ver; print \\\"\\\"VER_OK\\\\n\\\"\\\"\\\"\\n\";\n            close $tcf;\n            $rslt = `\\@temp_mmvms.com` ;\n            unlink('temp_mmvms.com');\n            if ($rslt =~ /VER_OK/) {\n                print \"Using PERL=$name\\n\" if $trace;\n                return $name;\n            }\n        }\n        next unless $vmsfile = $self->maybe_command($name);\n        $vmsfile =~ s/;[\\d\\-]*$//;  # Clip off version number; we can use a newer version as well\n        print \"Executing $vmsfile\\n\" if ($trace >= 2);\n        open(my $tcf, '>', \"temp_mmvms.com\")\n                or die('unable to open temp file');\n        print $tcf \"\\$ set message/nofacil/nosever/noident/notext\\n\";\n        print $tcf \"\\$ mcr $vmsfile -e \\\"require $ver; print \\\"\\\"VER_OK\\\\n\\\"\\\"\\\" \\n\";\n        close $tcf;\n        $rslt = `\\@temp_mmvms.com`;\n        unlink('temp_mmvms.com');\n        if ($rslt =~ /VER_OK/) {\n            print \"Using PERL=MCR $vmsfile\\n\" if $trace;\n            return \"MCR $vmsfile\";\n        }\n    }\n    print \"Unable to find a perl $ver (by these names: @$names, in these dirs: @$dirs)\\n\";\n    0; # false and not empty\n}\n\n=item _fixin_replace_shebang (override)\n\nHelper routine for MM->fixin(), overridden because there's no such thing as an\nactual shebang line that will be interpreted by the shell, so we just prepend\n$Config{startperl} and preserve the shebang line argument for any switches it\nmay contain.\n\n=cut\n\nsub _fixin_replace_shebang {\n    my ( $self, $file, $line ) = @_;\n\n    my ( undef, $arg ) = split ' ', $line, 2;\n\n    return $Config{startperl} . \"\\n\" . $Config{sharpbang} . \"perl $arg\\n\";\n}\n\n=item maybe_command (override)\n\nFollows VMS naming conventions for executable files.\nIf the name passed in doesn't exactly match an executable file,\nappends F<.Exe> (or equivalent) to check for executable image, and F<.Com>\nto check for DCL procedure.  If this fails, checks directories in DCL$PATH\nand finally F<Sys$System:> for an executable file having the name specified,\nwith or without the F<.Exe>-equivalent suffix.\n\n=cut\n\nsub maybe_command {\n    my($self,$file) = @_;\n    return $file if -x $file && ! -d _;\n    my(@dirs) = ('');\n    my(@exts) = ('',$Config{'exe_ext'},'.exe','.com');\n\n    if ($file !~ m![/:>\\]]!) {\n        for (my $i = 0; defined $ENV{\"DCL\\$PATH;$i\"}; $i++) {\n            my $dir = $ENV{\"DCL\\$PATH;$i\"};\n            $dir .= ':' unless $dir =~ m%[\\]:]$%;\n            push(@dirs,$dir);\n        }\n        push(@dirs,'Sys$System:');\n        foreach my $dir (@dirs) {\n            my $sysfile = \"$dir$file\";\n            foreach my $ext (@exts) {\n                return $file if -x \"$sysfile$ext\" && ! -d _;\n            }\n        }\n    }\n    return 0;\n}\n\n\n=item pasthru (override)\n\nVMS has $(MMSQUALIFIERS) which is a listing of all the original command line\noptions.  This is used in every invocation of make in the VMS Makefile so\nPASTHRU should not be necessary.  Using PASTHRU tends to blow commands past\nthe 256 character limit.\n\n=cut\n\nsub pasthru {\n    return \"PASTHRU=\\n\";\n}\n\n\n=item pm_to_blib (override)\n\nVMS wants a dot in every file so we can't have one called 'pm_to_blib',\nit becomes 'pm_to_blib.' and MMS/K isn't smart enough to know that when\nyou have a target called 'pm_to_blib' it should look for 'pm_to_blib.'.\n\nSo in VMS its pm_to_blib.ts.\n\n=cut\n\nsub pm_to_blib {\n    my $self = shift;\n\n    my $make = $self->SUPER::pm_to_blib;\n\n    $make =~ s{^pm_to_blib :}{pm_to_blib.ts :}m;\n    $make =~ s{\\$\\(TOUCH\\) pm_to_blib}{\\$(TOUCH) pm_to_blib.ts};\n\n    $make = <<'MAKE' . $make;\n# Dummy target to match Unix target name; we use pm_to_blib.ts as\n# timestamp file to avoid repeated invocations under VMS\npm_to_blib : pm_to_blib.ts\n\t$(NOECHO) $(NOOP)\n\nMAKE\n\n    return $make;\n}\n\n\n=item perl_script (override)\n\nIf name passed in doesn't specify a readable file, appends F<.com> or\nF<.pl> and tries again, since it's customary to have file types on all files\nunder VMS.\n\n=cut\n\nsub perl_script {\n    my($self,$file) = @_;\n    return $file if -r $file && ! -d _;\n    return \"$file.com\" if -r \"$file.com\";\n    return \"$file.pl\" if -r \"$file.pl\";\n    return '';\n}\n\n\n=item replace_manpage_separator\n\nUse as separator a character which is legal in a VMS-syntax file name.\n\n=cut\n\nsub replace_manpage_separator {\n    my($self,$man) = @_;\n    $man = unixify($man);\n    $man =~ s#/+#__#g;\n    $man;\n}\n\n=item init_DEST\n\n(override) Because of the difficulty concatenating VMS filepaths we\nmust pre-expand the DEST* variables.\n\n=cut\n\nsub init_DEST {\n    my $self = shift;\n\n    $self->SUPER::init_DEST;\n\n    # Expand DEST variables.\n    foreach my $var ($self->installvars) {\n        my $destvar = 'DESTINSTALL'.$var;\n        $self->{$destvar} = $self->eliminate_macros($self->{$destvar});\n    }\n}\n\n\n=item init_DIRFILESEP\n\nNo separator between a directory path and a filename on VMS.\n\n=cut\n\nsub init_DIRFILESEP {\n    my($self) = shift;\n\n    $self->{DIRFILESEP} = '';\n    return 1;\n}\n\n\n=item init_main (override)\n\n\n=cut\n\nsub init_main {\n    my($self) = shift;\n\n    $self->SUPER::init_main;\n\n    $self->{DEFINE} ||= '';\n    if ($self->{DEFINE} ne '') {\n        my(@terms) = split(/\\s+/,$self->{DEFINE});\n        my(@defs,@udefs);\n        foreach my $def (@terms) {\n            next unless $def;\n            my $targ = \\@defs;\n            if ($def =~ s/^-([DU])//) {    # If it was a Unix-style definition\n                $targ = \\@udefs if $1 eq 'U';\n                $def =~ s/='(.*)'$/=$1/;  # then remove shell-protection ''\n                $def =~ s/^'(.*)'$/$1/;   # from entire term or argument\n            }\n            if ($def =~ /=/) {\n                $def =~ s/\"/\"\"/g;  # Protect existing \" from DCL\n                $def = qq[\"$def\"]; # and quote to prevent parsing of =\n            }\n            push @$targ, $def;\n        }\n\n        $self->{DEFINE} = '';\n        if (@defs)  {\n            $self->{DEFINE}  = '/Define=(' . join(',',@defs)  . ')';\n        }\n        if (@udefs) {\n            $self->{DEFINE} .= '/Undef=('  . join(',',@udefs) . ')';\n        }\n    }\n}\n\n=item init_tools (override)\n\nProvide VMS-specific forms of various utility commands.\n\nSets DEV_NULL to nothing because I don't know how to do it on VMS.\n\nChanges EQUALIZE_TIMESTAMP to set revision date of target file to\none second later than source file, since MMK interprets precisely\nequal revision dates for a source and target file as a sign that the\ntarget needs to be updated.\n\n=cut\n\nsub init_tools {\n    my($self) = @_;\n\n    $self->{NOOP}               = 'Continue';\n    $self->{NOECHO}             ||= '@ ';\n\n    $self->{MAKEFILE}           ||= $self->{FIRST_MAKEFILE} || 'Descrip.MMS';\n    $self->{FIRST_MAKEFILE}     ||= $self->{MAKEFILE};\n    $self->{MAKE_APERL_FILE}    ||= 'Makeaperl.MMS';\n    $self->{MAKEFILE_OLD}       ||= $self->eliminate_macros('$(FIRST_MAKEFILE)_old');\n#\n#   If an extension is not specified, then MMS/MMK assumes an\n#   an extension of .MMS.  If there really is no extension,\n#   then a trailing \".\" needs to be appended to specify a\n#   a null extension.\n#\n    $self->{MAKEFILE} .= '.' unless $self->{MAKEFILE} =~ m/\\./;\n    $self->{FIRST_MAKEFILE} .= '.' unless $self->{FIRST_MAKEFILE} =~ m/\\./;\n    $self->{MAKE_APERL_FILE} .= '.' unless $self->{MAKE_APERL_FILE} =~ m/\\./;\n    $self->{MAKEFILE_OLD} .= '.' unless $self->{MAKEFILE_OLD} =~ m/\\./;\n\n    $self->{MACROSTART}         ||= '/Macro=(';\n    $self->{MACROEND}           ||= ')';\n    $self->{USEMAKEFILE}        ||= '/Descrip=';\n\n    $self->{EQUALIZE_TIMESTAMP} ||= '$(ABSPERLRUN) -we \"open F,qq{>>$ARGV[1]};close F;utime(0,(stat($ARGV[0]))[9]+1,$ARGV[1])\"';\n\n    $self->{MOD_INSTALL} ||=\n      $self->oneliner(<<'CODE', ['-MExtUtils::Install']);\ninstall([ from_to => {split('\\|', <STDIN>)}, verbose => '$(VERBINST)', uninstall_shadows => '$(UNINST)', dir_mode => '$(PERM_DIR)' ]);\nCODE\n\n    $self->{UMASK_NULL} = '! ';\n\n    $self->SUPER::init_tools;\n\n    # Use the default shell\n    $self->{SHELL}    ||= 'Posix';\n\n    # Redirection on VMS goes before the command, not after as on Unix.\n    # $(DEV_NULL) is used once and its not worth going nuts over making\n    # it work.  However, Unix's DEV_NULL is quite wrong for VMS.\n    $self->{DEV_NULL}   = '';\n\n    return;\n}\n\n=item init_platform (override)\n\nAdd PERL_VMS, MM_VMS_REVISION and MM_VMS_VERSION.\n\nMM_VMS_REVISION is for backwards compatibility before MM_VMS had a\n$VERSION.\n\n=cut\n\nsub init_platform {\n    my($self) = shift;\n\n    $self->{MM_VMS_REVISION} = $Revision;\n    $self->{MM_VMS_VERSION}  = $VERSION;\n    $self->{PERL_VMS} = $self->catdir($self->{PERL_SRC}, 'VMS')\n      if $self->{PERL_SRC};\n}\n\n\n=item platform_constants\n\n=cut\n\nsub platform_constants {\n    my($self) = shift;\n    my $make_frag = '';\n\n    foreach my $macro (qw(PERL_VMS MM_VMS_REVISION MM_VMS_VERSION))\n    {\n        next unless defined $self->{$macro};\n        $make_frag .= \"$macro = $self->{$macro}\\n\";\n    }\n\n    return $make_frag;\n}\n\n\n=item init_VERSION (override)\n\nOverride the *DEFINE_VERSION macros with VMS semantics.  Translate the\nMAKEMAKER filepath to VMS style.\n\n=cut\n\nsub init_VERSION {\n    my $self = shift;\n\n    $self->SUPER::init_VERSION;\n\n    $self->{DEFINE_VERSION}    = '\"$(VERSION_MACRO)=\"\"$(VERSION)\"\"\"';\n    $self->{XS_DEFINE_VERSION} = '\"$(XS_VERSION_MACRO)=\"\"$(XS_VERSION)\"\"\"';\n    $self->{MAKEMAKER} = vmsify($INC{'ExtUtils/MakeMaker.pm'});\n}\n\n\n=item constants (override)\n\nFixes up numerous file and directory macros to insure VMS syntax\nregardless of input syntax.  Also makes lists of files\ncomma-separated.\n\n=cut\n\nsub constants {\n    my($self) = @_;\n\n    # Be kind about case for pollution\n    for (@ARGV) { $_ = uc($_) if /POLLUTE/i; }\n\n    # Cleanup paths for directories in MMS macros.\n    foreach my $macro ( qw [\n            INST_BIN INST_SCRIPT INST_LIB INST_ARCHLIB\n            PERL_LIB PERL_ARCHLIB\n            PERL_INC PERL_SRC ],\n                        (map { 'INSTALL'.$_ } $self->installvars)\n                      )\n    {\n        next unless defined $self->{$macro};\n        next if $macro =~ /MAN/ && $self->{$macro} eq 'none';\n        $self->{$macro} = $self->fixpath($self->{$macro},1);\n    }\n\n    # Cleanup paths for files in MMS macros.\n    foreach my $macro ( qw[LIBPERL_A FIRST_MAKEFILE MAKEFILE_OLD\n                           MAKE_APERL_FILE MYEXTLIB] )\n    {\n        next unless defined $self->{$macro};\n        $self->{$macro} = $self->fixpath($self->{$macro},0);\n    }\n\n    # Fixup files for MMS macros\n    # XXX is this list complete?\n    for my $macro (qw/\n                   FULLEXT VERSION_FROM\n\t      /\t) {\n        next unless defined $self->{$macro};\n        $self->{$macro} = $self->fixpath($self->{$macro},0);\n    }\n\n\n    for my $macro (qw/\n                   OBJECT LDFROM\n\t      /\t) {\n        next unless defined $self->{$macro};\n\n        # Must expand macros before splitting on unescaped whitespace.\n        $self->{$macro} = $self->eliminate_macros($self->{$macro});\n        if ($self->{$macro} =~ /(?<!\\^)\\s/) {\n            $self->{$macro} =~ s/(\\\\)?\\n+\\s+/ /g;\n            $self->{$macro} = $self->wraplist(\n                map $self->fixpath($_,0), split /,?(?<!\\^)\\s+/, $self->{$macro}\n            );\n        }\n        else {\n            $self->{$macro} = $self->fixpath($self->{$macro},0);\n        }\n    }\n\n    for my $macro (qw/ XS MAN1PODS MAN3PODS PM /) {\n        # Where is the space coming from? --jhi\n        next unless $self ne \" \" && defined $self->{$macro};\n        my %tmp = ();\n        for my $key (keys %{$self->{$macro}}) {\n            $tmp{$self->fixpath($key,0)} =\n                                     $self->fixpath($self->{$macro}{$key},0);\n        }\n        $self->{$macro} = \\%tmp;\n    }\n\n    for my $macro (qw/ C O_FILES H /) {\n        next unless defined $self->{$macro};\n        my @tmp = ();\n        for my $val (@{$self->{$macro}}) {\n            push(@tmp,$self->fixpath($val,0));\n        }\n        $self->{$macro} = \\@tmp;\n    }\n\n    # mms/k does not define a $(MAKE) macro.\n    $self->{MAKE} = '$(MMS)$(MMSQUALIFIERS)';\n\n    return $self->SUPER::constants;\n}\n\n\n=item special_targets\n\nClear the default .SUFFIXES and put in our own list.\n\n=cut\n\nsub special_targets {\n    my $self = shift;\n\n    my $make_frag .= <<'MAKE_FRAG';\n.SUFFIXES :\n.SUFFIXES : $(OBJ_EXT) .c .cpp .cxx .xs\n\nMAKE_FRAG\n\n    return $make_frag;\n}\n\n=item cflags (override)\n\nBypass shell script and produce qualifiers for CC directly (but warn\nuser if a shell script for this extension exists).  Fold multiple\n/Defines into one, since some C compilers pay attention to only one\ninstance of this qualifier on the command line.\n\n=cut\n\nsub cflags {\n    my($self,$libperl) = @_;\n    my($quals) = $self->{CCFLAGS} || $Config{'ccflags'};\n    my($definestr,$undefstr,$flagoptstr) = ('','','');\n    my($incstr) = '/Include=($(PERL_INC)';\n    my($name,$sys,@m);\n\n    ( $name = $self->{NAME} . \"_cflags\" ) =~ s/:/_/g ;\n    print \"Unix shell script \".$Config{\"$self->{'BASEEXT'}_cflags\"}.\n         \" required to modify CC command for $self->{'BASEEXT'}\\n\"\n    if ($Config{$name});\n\n    if ($quals =~ / -[DIUOg]/) {\n\twhile ($quals =~ / -([Og])(\\d*)\\b/) {\n\t    my($type,$lvl) = ($1,$2);\n\t    $quals =~ s/ -$type$lvl\\b\\s*//;\n\t    if ($type eq 'g') { $flagoptstr = '/NoOptimize'; }\n\t    else { $flagoptstr = '/Optimize' . (defined($lvl) ? \"=$lvl\" : ''); }\n\t}\n\twhile ($quals =~ / -([DIU])(\\S+)/) {\n\t    my($type,$def) = ($1,$2);\n\t    $quals =~ s/ -$type$def\\s*//;\n\t    $def =~ s/\"/\"\"/g;\n\t    if    ($type eq 'D') { $definestr .= qq[\"$def\",]; }\n\t    elsif ($type eq 'I') { $incstr .= ',' . $self->fixpath($def,1); }\n\t    else                 { $undefstr  .= qq[\"$def\",]; }\n\t}\n    }\n    if (length $quals and $quals !~ m!/!) {\n\twarn \"MM_VMS: Ignoring unrecognized CCFLAGS elements \\\"$quals\\\"\\n\";\n\t$quals = '';\n    }\n    $definestr .= q[\"PERL_POLLUTE\",] if $self->{POLLUTE};\n    if (length $definestr) { chop($definestr); $quals .= \"/Define=($definestr)\"; }\n    if (length $undefstr)  { chop($undefstr);  $quals .= \"/Undef=($undefstr)\";   }\n    # Deal with $self->{DEFINE} here since some C compilers pay attention\n    # to only one /Define clause on command line, so we have to\n    # conflate the ones from $Config{'ccflags'} and $self->{DEFINE}\n    # ($self->{DEFINE} has already been VMSified in constants() above)\n    if ($self->{DEFINE}) { $quals .= $self->{DEFINE}; }\n    for my $type (qw(Def Undef)) {\n\tmy(@terms);\n\twhile ($quals =~ m:/${type}i?n?e?=([^/]+):ig) {\n\t\tmy $term = $1;\n\t\t$term =~ s:^\\((.+)\\)$:$1:;\n\t\tpush @terms, $term;\n\t    }\n\tif ($type eq 'Def') {\n\t    push @terms, qw[ $(DEFINE_VERSION) $(XS_DEFINE_VERSION) ];\n\t}\n\tif (@terms) {\n\t    $quals =~ s:/${type}i?n?e?=[^/]+::ig;\n\t    $quals .= \"/${type}ine=(\" . join(',',@terms) . ')';\n\t}\n    }\n\n    $libperl or $libperl = $self->{LIBPERL_A} || \"libperl.olb\";\n\n    # Likewise with $self->{INC} and /Include\n    if ($self->{'INC'}) {\n\tmy(@includes) = split(/\\s+/,$self->{INC});\n\tforeach (@includes) {\n\t    s/^-I//;\n\t    $incstr .= ','.$self->fixpath($_,1);\n\t}\n    }\n    $quals .= \"$incstr)\";\n#    $quals =~ s/,,/,/g; $quals =~ s/\\(,/(/g;\n    $self->{CCFLAGS} = $quals;\n\n    $self->{PERLTYPE} ||= '';\n\n    $self->{OPTIMIZE} ||= $flagoptstr || $Config{'optimize'};\n    if ($self->{OPTIMIZE} !~ m!/!) {\n\tif    ($self->{OPTIMIZE} =~ m!-g!) { $self->{OPTIMIZE} = '/Debug/NoOptimize' }\n\telsif ($self->{OPTIMIZE} =~ /-O(\\d*)/) {\n\t    $self->{OPTIMIZE} = '/Optimize' . (defined($1) ? \"=$1\" : '');\n\t}\n\telse {\n\t    warn \"MM_VMS: Can't parse OPTIMIZE \\\"$self->{OPTIMIZE}\\\"; using default\\n\" if length $self->{OPTIMIZE};\n\t    $self->{OPTIMIZE} = '/Optimize';\n\t}\n    }\n\n    return $self->{CFLAGS} = qq{\nCCFLAGS = $self->{CCFLAGS}\nOPTIMIZE = $self->{OPTIMIZE}\nPERLTYPE = $self->{PERLTYPE}\n};\n}\n\n=item const_cccmd (override)\n\nAdds directives to point C preprocessor to the right place when\nhandling #include E<lt>sys/foo.hE<gt> directives.  Also constructs CC\ncommand line a bit differently than MM_Unix method.\n\n=cut\n\nsub const_cccmd {\n    my($self,$libperl) = @_;\n    my(@m);\n\n    return $self->{CONST_CCCMD} if $self->{CONST_CCCMD};\n    return '' unless $self->needs_linking();\n    if ($Config{'vms_cc_type'} eq 'gcc') {\n        push @m,'\n.FIRST\n\t',$self->{NOECHO},'If F$TrnLnm(\"Sys\").eqs.\"\" Then Define/NoLog SYS GNU_CC_Include:[VMS]';\n    }\n    elsif ($Config{'vms_cc_type'} eq 'vaxc') {\n        push @m,'\n.FIRST\n\t',$self->{NOECHO},'If F$TrnLnm(\"Sys\").eqs.\"\" .and. F$TrnLnm(\"VAXC$Include\").eqs.\"\" Then Define/NoLog SYS Sys$Library\n\t',$self->{NOECHO},'If F$TrnLnm(\"Sys\").eqs.\"\" .and. F$TrnLnm(\"VAXC$Include\").nes.\"\" Then Define/NoLog SYS VAXC$Include';\n    }\n    else {\n        push @m,'\n.FIRST\n\t',$self->{NOECHO},'If F$TrnLnm(\"Sys\").eqs.\"\" .and. F$TrnLnm(\"DECC$System_Include\").eqs.\"\" Then Define/NoLog SYS ',\n\t\t($Config{'archname'} eq 'VMS_AXP' ? 'Sys$Library' : 'DECC$Library_Include'),'\n\t',$self->{NOECHO},'If F$TrnLnm(\"Sys\").eqs.\"\" .and. F$TrnLnm(\"DECC$System_Include\").nes.\"\" Then Define/NoLog SYS DECC$System_Include';\n    }\n\n    push(@m, \"\\n\\nCCCMD = $Config{'cc'} \\$(CCFLAGS)\\$(OPTIMIZE)\\n\");\n\n    $self->{CONST_CCCMD} = join('',@m);\n}\n\n\n=item tools_other (override)\n\nThrow in some dubious extra macros for Makefile args.\n\nAlso keep around the old $(SAY) macro in case somebody's using it.\n\n=cut\n\nsub tools_other {\n    my($self) = @_;\n\n    # XXX Are these necessary?  Does anyone override them?  They're longer\n    # than just typing the literal string.\n    my $extra_tools = <<'EXTRA_TOOLS';\n\n# Just in case anyone is using the old macro.\nUSEMACROS = $(MACROSTART)\nSAY = $(ECHO)\n\nEXTRA_TOOLS\n\n    return $self->SUPER::tools_other . $extra_tools;\n}\n\n=item init_dist (override)\n\nVMSish defaults for some values.\n\n  macro         description                     default\n\n  ZIPFLAGS      flags to pass to ZIP            -Vu\n\n  COMPRESS      compression command to          gzip\n                use for tarfiles\n  SUFFIX        suffix to put on                -gz\n                compressed files\n\n  SHAR          shar command to use             vms_share\n\n  DIST_DEFAULT  default target to use to        tardist\n                create a distribution\n\n  DISTVNAME     Use VERSION_SYM instead of      $(DISTNAME)-$(VERSION_SYM)\n                VERSION for the name\n\n=cut\n\nsub init_dist {\n    my($self) = @_;\n    $self->{ZIPFLAGS}     ||= '-Vu';\n    $self->{COMPRESS}     ||= 'gzip';\n    $self->{SUFFIX}       ||= '-gz';\n    $self->{SHAR}         ||= 'vms_share';\n    $self->{DIST_DEFAULT} ||= 'zipdist';\n\n    $self->SUPER::init_dist;\n\n    $self->{DISTVNAME} = \"$self->{DISTNAME}-$self->{VERSION_SYM}\"\n      unless $self->{ARGS}{DISTVNAME};\n\n    return;\n}\n\n=item c_o (override)\n\nUse VMS syntax on command line.  In particular, $(DEFINE) and\n$(PERL_INC) have been pulled into $(CCCMD).  Also use MM[SK] macros.\n\n=cut\n\nsub c_o {\n    my($self) = @_;\n    return '' unless $self->needs_linking();\n    '\n.c$(OBJ_EXT) :\n\t$(CCCMD) $(CCCDLFLAGS) $(MMS$TARGET_NAME).c\n\n.cpp$(OBJ_EXT) :\n\t$(CCCMD) $(CCCDLFLAGS) $(MMS$TARGET_NAME).cpp\n\n.cxx$(OBJ_EXT) :\n\t$(CCCMD) $(CCCDLFLAGS) $(MMS$TARGET_NAME).cxx\n\n';\n}\n\n=item xs_c (override)\n\nUse MM[SK] macros.\n\n=cut\n\nsub xs_c {\n    my($self) = @_;\n    return '' unless $self->needs_linking();\n    '\n.xs.c :\n\t$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) $(MMS$TARGET_NAME).xs >$(MMS$TARGET)\n';\n}\n\n=item xs_o (override)\n\nUse MM[SK] macros, and VMS command line for C compiler.\n\n=cut\n\nsub xs_o {\t# many makes are too dumb to use xs_c then c_o\n    my($self) = @_;\n    return '' unless $self->needs_linking();\n    '\n.xs$(OBJ_EXT) :\n\t$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) $(MMS$TARGET_NAME).xs >$(MMS$TARGET_NAME).c\n\t$(CCCMD) $(CCCDLFLAGS) $(MMS$TARGET_NAME).c\n';\n}\n\n\n=item dlsyms (override)\n\nCreate VMS linker options files specifying universal symbols for this\nextension's shareable image, and listing other shareable images or\nlibraries to which it should be linked.\n\n=cut\n\nsub dlsyms {\n    my($self,%attribs) = @_;\n\n    return '' unless $self->needs_linking();\n\n    my($funcs) = $attribs{DL_FUNCS} || $self->{DL_FUNCS} || {};\n    my($vars)  = $attribs{DL_VARS}  || $self->{DL_VARS}  || [];\n    my($funclist)  = $attribs{FUNCLIST}  || $self->{FUNCLIST}  || [];\n    my(@m);\n\n    unless ($self->{SKIPHASH}{'dynamic'}) {\n\tpush(@m,'\ndynamic :: $(INST_ARCHAUTODIR)$(BASEEXT).opt\n\t$(NOECHO) $(NOOP)\n');\n    }\n\n    push(@m,'\nstatic :: $(INST_ARCHAUTODIR)$(BASEEXT).opt\n\t$(NOECHO) $(NOOP)\n') unless $self->{SKIPHASH}{'static'};\n\n    push @m,'\n$(INST_ARCHAUTODIR)$(BASEEXT).opt : $(BASEEXT).opt\n\t$(CP) $(MMS$SOURCE) $(MMS$TARGET)\n\n$(BASEEXT).opt : Makefile.PL\n\t$(PERLRUN) -e \"use ExtUtils::Mksymlists;\" -\n\t',qq[-e \"Mksymlists('NAME' => '$self->{NAME}', 'DL_FUNCS' => ],\n\tneatvalue($funcs),q[, 'DL_VARS' => ],neatvalue($vars),\n\tq[, 'FUNCLIST' => ],neatvalue($funclist),qq[)\"\\n];\n\n    push @m, '\t$(PERL) -e \"print \"\"$(INST_STATIC)/Include=';\n    if ($self->{OBJECT} =~ /\\bBASEEXT\\b/ or\n        $self->{OBJECT} =~ /\\b$self->{BASEEXT}\\b/i) {\n        push @m, ($Config{d_vms_case_sensitive_symbols}\n\t           ? uc($self->{BASEEXT}) :'$(BASEEXT)');\n    }\n    else {  # We don't have a \"main\" object file, so pull 'em all in\n        # Upcase module names if linker is being case-sensitive\n        my($upcase) = $Config{d_vms_case_sensitive_symbols};\n        my(@omods) = split ' ', $self->eliminate_macros($self->{OBJECT});\n        for (@omods) {\n            s/\\.[^.]*$//;         # Trim off file type\n            s[\\$\\(\\w+_EXT\\)][];   # even as a macro\n            s/.*[:>\\/\\]]//;       # Trim off dir spec\n            $_ = uc if $upcase;\n        };\n\n        my(@lines);\n        my $tmp = shift @omods;\n        foreach my $elt (@omods) {\n            $tmp .= \",$elt\";\n            if (length($tmp) > 80) { push @lines, $tmp;  $tmp = ''; }\n        }\n        push @lines, $tmp;\n        push @m, '(', join( qq[, -\\\\n\\\\t\"\";\" >>\\$(MMS\\$TARGET)\\n\\t\\$(PERL) -e \"print \"\"], @lines),')';\n    }\n    push @m, '\\n$(INST_STATIC)/Library\\n\"\";\" >>$(MMS$TARGET)',\"\\n\";\n\n    if (length $self->{LDLOADLIBS}) {\n        my($line) = '';\n        foreach my $lib (split ' ', $self->{LDLOADLIBS}) {\n            $lib =~ s%\\$%\\\\\\$%g;  # Escape '$' in VMS filespecs\n            if (length($line) + length($lib) > 160) {\n                push @m, \"\\t\\$(PERL) -e \\\"print qq{$line}\\\" >>\\$(MMS\\$TARGET)\\n\";\n                $line = $lib . '\\n';\n            }\n            else { $line .= $lib . '\\n'; }\n        }\n        push @m, \"\\t\\$(PERL) -e \\\"print qq{$line}\\\" >>\\$(MMS\\$TARGET)\\n\" if $line;\n    }\n\n    join('',@m);\n\n}\n\n=item dynamic_lib (override)\n\nUse VMS Link command.\n\n=cut\n\nsub dynamic_lib {\n    my($self, %attribs) = @_;\n    return '' unless $self->needs_linking(); #might be because of a subdir\n\n    return '' unless $self->has_link_code();\n\n    my($otherldflags) = $attribs{OTHERLDFLAGS} || \"\";\n    my($inst_dynamic_dep) = $attribs{INST_DYNAMIC_DEP} || \"\";\n    my $shr = $Config{'dbgprefix'} . 'PerlShr';\n    my(@m);\n    push @m,\"\n\nOTHERLDFLAGS = $otherldflags\nINST_DYNAMIC_DEP = $inst_dynamic_dep\n\n\";\n    push @m, '\n$(INST_DYNAMIC) : $(INST_STATIC) $(PERL_INC)perlshr_attr.opt $(INST_ARCHAUTODIR)$(DFSEP).exists $(EXPORT_LIST) $(PERL_ARCHIVE) $(INST_DYNAMIC_DEP)\n\tIf F$TrnLNm(\"',$shr,'\").eqs.\"\" Then Define/NoLog/User ',\"$shr Sys\\$Share:$shr.$Config{'dlext'}\",'\n\tLink $(LDFLAGS) /Shareable=$(MMS$TARGET)$(OTHERLDFLAGS) $(BASEEXT).opt/Option,$(PERL_INC)perlshr_attr.opt/Option\n';\n\n    join('',@m);\n}\n\n\n=item static_lib (override)\n\nUse VMS commands to manipulate object library.\n\n=cut\n\nsub static_lib {\n    my($self) = @_;\n    return '' unless $self->needs_linking();\n\n    return '\n$(INST_STATIC) :\n\t$(NOECHO) $(NOOP)\n' unless ($self->{OBJECT} or @{$self->{C} || []} or $self->{MYEXTLIB});\n\n    my(@m);\n    push @m,'\n# Rely on suffix rule for update action\n$(OBJECT) : $(INST_ARCHAUTODIR)$(DFSEP).exists\n\n$(INST_STATIC) : $(OBJECT) $(MYEXTLIB)\n';\n    # If this extension has its own library (eg SDBM_File)\n    # then copy that to $(INST_STATIC) and add $(OBJECT) into it.\n    push(@m, \"\\t\",'$(CP) $(MYEXTLIB) $(MMS$TARGET)',\"\\n\") if $self->{MYEXTLIB};\n\n    push(@m,\"\\t\",'If F$Search(\"$(MMS$TARGET)\").eqs.\"\" Then Library/Object/Create $(MMS$TARGET)',\"\\n\");\n\n    # if there was a library to copy, then we can't use MMS$SOURCE_LIST,\n    # 'cause it's a library and you can't stick them in other libraries.\n    # In that case, we use $OBJECT instead and hope for the best\n    if ($self->{MYEXTLIB}) {\n      push(@m,\"\\t\",'Library/Object/Replace $(MMS$TARGET) $(OBJECT)',\"\\n\");\n    } else {\n      push(@m,\"\\t\",'Library/Object/Replace $(MMS$TARGET) $(MMS$SOURCE_LIST)',\"\\n\");\n    }\n\n    push @m, \"\\t\\$(NOECHO) \\$(PERL) -e 1 >\\$(INST_ARCHAUTODIR)extralibs.ld\\n\";\n    foreach my $lib (split ' ', $self->{EXTRALIBS}) {\n      push(@m,\"\\t\",'$(NOECHO) $(PERL) -e \"print qq{',$lib,'\\n}\" >>$(INST_ARCHAUTODIR)extralibs.ld',\"\\n\");\n    }\n    join('',@m);\n}\n\n\n=item extra_clean_files\n\nClean up some OS specific files.  Plus the temp file used to shorten\na lot of commands.  And the name mangler database.\n\n=cut\n\nsub extra_clean_files {\n    return qw(\n              *.Map *.Dmp *.Lis *.cpp *.$(DLEXT) *.Opt $(BASEEXT).bso\n              .MM_Tmp cxx_repository\n             );\n}\n\n\n=item zipfile_target\n\n=item tarfile_target\n\n=item shdist_target\n\nSyntax for invoking shar, tar and zip differs from that for Unix.\n\n=cut\n\nsub zipfile_target {\n    my($self) = shift;\n\n    return <<'MAKE_FRAG';\n$(DISTVNAME).zip : distdir\n\t$(PREOP)\n\t$(ZIP) \"$(ZIPFLAGS)\" $(MMS$TARGET) [.$(DISTVNAME)...]*.*;\n\t$(RM_RF) $(DISTVNAME)\n\t$(POSTOP)\nMAKE_FRAG\n}\n\nsub tarfile_target {\n    my($self) = shift;\n\n    return <<'MAKE_FRAG';\n$(DISTVNAME).tar$(SUFFIX) : distdir\n\t$(PREOP)\n\t$(TO_UNIX)\n        $(TAR) \"$(TARFLAGS)\" $(DISTVNAME).tar [.$(DISTVNAME)...]\n\t$(RM_RF) $(DISTVNAME)\n\t$(COMPRESS) $(DISTVNAME).tar\n\t$(POSTOP)\nMAKE_FRAG\n}\n\nsub shdist_target {\n    my($self) = shift;\n\n    return <<'MAKE_FRAG';\nshdist : distdir\n\t$(PREOP)\n\t$(SHAR) [.$(DISTVNAME)...]*.*; $(DISTVNAME).share\n\t$(RM_RF) $(DISTVNAME)\n\t$(POSTOP)\nMAKE_FRAG\n}\n\n\n# --- Test and Installation Sections ---\n\n=item install (override)\n\nWork around DCL's 255 character limit several times,and use\nVMS-style command line quoting in a few cases.\n\n=cut\n\nsub install {\n    my($self, %attribs) = @_;\n    my(@m);\n\n    push @m, q[\ninstall :: all pure_install doc_install\n\t$(NOECHO) $(NOOP)\n\ninstall_perl :: all pure_perl_install doc_perl_install\n\t$(NOECHO) $(NOOP)\n\ninstall_site :: all pure_site_install doc_site_install\n\t$(NOECHO) $(NOOP)\n\ninstall_vendor :: all pure_vendor_install doc_vendor_install\n\t$(NOECHO) $(NOOP)\n\npure_install :: pure_$(INSTALLDIRS)_install\n\t$(NOECHO) $(NOOP)\n\ndoc_install :: doc_$(INSTALLDIRS)_install\n        $(NOECHO) $(NOOP)\n\npure__install : pure_site_install\n\t$(NOECHO) $(ECHO) \"INSTALLDIRS not defined, defaulting to INSTALLDIRS=site\"\n\ndoc__install : doc_site_install\n\t$(NOECHO) $(ECHO) \"INSTALLDIRS not defined, defaulting to INSTALLDIRS=site\"\n\n# This hack brought to you by DCL's 255-character command line limit\npure_perl_install ::\n];\n    push @m,\nq[\t$(NOECHO) $(PERLRUN) \"-MFile::Spec\" -e \"print 'read|'.File::Spec->catfile('$(PERL_ARCHLIB)','auto','$(FULLEXT)','.packlist').'|'\" >.MM_tmp\n\t$(NOECHO) $(PERLRUN) \"-MFile::Spec\" -e \"print 'write|'.File::Spec->catfile('$(DESTINSTALLARCHLIB)','auto','$(FULLEXT)','.packlist').'|'\" >>.MM_tmp\n] unless $self->{NO_PACKLIST};\n\n    push @m,\nq[\t$(NOECHO) $(ECHO_N) \"$(INST_LIB)|$(DESTINSTALLPRIVLIB)|\" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_ARCHLIB)|$(DESTINSTALLARCHLIB)|\" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_BIN)|$(DESTINSTALLBIN)|\" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_SCRIPT)|$(DESTINSTALLSCRIPT)|\" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_MAN1DIR) $(DESTINSTALLMAN1DIR) \" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_MAN3DIR)|$(DESTINSTALLMAN3DIR)\" >>.MM_tmp\n\t$(NOECHO) $(MOD_INSTALL) <.MM_tmp\n\t$(NOECHO) $(RM_F) .MM_tmp\n\t$(NOECHO) $(WARN_IF_OLD_PACKLIST) \"].$self->catfile($self->{SITEARCHEXP},'auto',$self->{FULLEXT},'.packlist').q[\"\n\n# Likewise\npure_site_install ::\n];\n    push @m,\nq[\t$(NOECHO) $(PERLRUN) \"-MFile::Spec\" -e \"print 'read|'.File::Spec->catfile('$(SITEARCHEXP)','auto','$(FULLEXT)','.packlist').'|'\" >.MM_tmp\n\t$(NOECHO) $(PERLRUN) \"-MFile::Spec\" -e \"print 'write|'.File::Spec->catfile('$(DESTINSTALLSITEARCH)','auto','$(FULLEXT)','.packlist').'|'\" >>.MM_tmp\n] unless $self->{NO_PACKLIST};\n\n    push @m,\nq[\t$(NOECHO) $(ECHO_N) \"$(INST_LIB)|$(DESTINSTALLSITELIB)|\" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_ARCHLIB)|$(DESTINSTALLSITEARCH)|\" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_BIN)|$(DESTINSTALLSITEBIN)|\" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_SCRIPT)|$(DESTINSTALLSCRIPT)|\" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_MAN1DIR)|$(DESTINSTALLSITEMAN1DIR)|\" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_MAN3DIR)|$(DESTINSTALLSITEMAN3DIR)\" >>.MM_tmp\n\t$(NOECHO) $(MOD_INSTALL) <.MM_tmp\n\t$(NOECHO) $(RM_F) .MM_tmp\n\t$(NOECHO) $(WARN_IF_OLD_PACKLIST) \"].$self->catfile($self->{PERL_ARCHLIB},'auto',$self->{FULLEXT},'.packlist').q[\"\n\npure_vendor_install ::\n];\n    push @m,\nq[\t$(NOECHO) $(PERLRUN) \"-MFile::Spec\" -e \"print 'read|'.File::Spec->catfile('$(VENDORARCHEXP)','auto','$(FULLEXT)','.packlist').'|'\" >.MM_tmp\n\t$(NOECHO) $(PERLRUN) \"-MFile::Spec\" -e \"print 'write|'.File::Spec->catfile('$(DESTINSTALLVENDORARCH)','auto','$(FULLEXT)','.packlist').'|'\" >>.MM_tmp\n] unless $self->{NO_PACKLIST};\n\n    push @m,\nq[\t$(NOECHO) $(ECHO_N) \"$(INST_LIB)|$(DESTINSTALLVENDORLIB)|\" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_ARCHLIB)|$(DESTINSTALLVENDORARCH)|\" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_BIN)|$(DESTINSTALLVENDORBIN)|\" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_SCRIPT)|$(DESTINSTALLSCRIPT)|\" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_MAN1DIR)|$(DESTINSTALLVENDORMAN1DIR)|\" >>.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"$(INST_MAN3DIR)|$(DESTINSTALLVENDORMAN3DIR)\" >>.MM_tmp\n\t$(NOECHO) $(MOD_INSTALL) <.MM_tmp\n\t$(NOECHO) $(RM_F) .MM_tmp\n\n];\n\n    push @m, q[\n# Ditto\ndoc_perl_install ::\n\t$(NOECHO) $(NOOP)\n\n# And again\ndoc_site_install ::\n\t$(NOECHO) $(NOOP)\n\ndoc_vendor_install ::\n\t$(NOECHO) $(NOOP)\n\n] if $self->{NO_PERLLOCAL};\n\n    push @m, q[\n# Ditto\ndoc_perl_install ::\n\t$(NOECHO) $(ECHO) \"Appending installation info to ].$self->catfile($self->{DESTINSTALLARCHLIB}, 'perllocal.pod').q[\"\n\t$(NOECHO) $(MKPATH) $(DESTINSTALLARCHLIB)\n\t$(NOECHO) $(ECHO_N) \"installed into|$(INSTALLPRIVLIB)|\" >.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"LINKTYPE|$(LINKTYPE)|VERSION|$(VERSION)|EXE_FILES|$(EXE_FILES) \" >>.MM_tmp\n\t$(NOECHO) $(DOC_INSTALL) \"Module\" \"$(NAME)\" <.MM_tmp >>].$self->catfile($self->{DESTINSTALLARCHLIB},'perllocal.pod').q[\n\t$(NOECHO) $(RM_F) .MM_tmp\n\n# And again\ndoc_site_install ::\n\t$(NOECHO) $(ECHO) \"Appending installation info to ].$self->catfile($self->{DESTINSTALLARCHLIB}, 'perllocal.pod').q[\"\n\t$(NOECHO) $(MKPATH) $(DESTINSTALLARCHLIB)\n\t$(NOECHO) $(ECHO_N) \"installed into|$(INSTALLSITELIB)|\" >.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"LINKTYPE|$(LINKTYPE)|VERSION|$(VERSION)|EXE_FILES|$(EXE_FILES) \" >>.MM_tmp\n\t$(NOECHO) $(DOC_INSTALL) \"Module\" \"$(NAME)\" <.MM_tmp >>].$self->catfile($self->{DESTINSTALLARCHLIB},'perllocal.pod').q[\n\t$(NOECHO) $(RM_F) .MM_tmp\n\ndoc_vendor_install ::\n\t$(NOECHO) $(ECHO) \"Appending installation info to ].$self->catfile($self->{DESTINSTALLARCHLIB}, 'perllocal.pod').q[\"\n\t$(NOECHO) $(MKPATH) $(DESTINSTALLARCHLIB)\n\t$(NOECHO) $(ECHO_N) \"installed into|$(INSTALLVENDORLIB)|\" >.MM_tmp\n\t$(NOECHO) $(ECHO_N) \"LINKTYPE|$(LINKTYPE)|VERSION|$(VERSION)|EXE_FILES|$(EXE_FILES) \" >>.MM_tmp\n\t$(NOECHO) $(DOC_INSTALL) \"Module\" \"$(NAME)\" <.MM_tmp >>].$self->catfile($self->{DESTINSTALLARCHLIB},'perllocal.pod').q[\n\t$(NOECHO) $(RM_F) .MM_tmp\n\n] unless $self->{NO_PERLLOCAL};\n\n    push @m, q[\nuninstall :: uninstall_from_$(INSTALLDIRS)dirs\n\t$(NOECHO) $(NOOP)\n\nuninstall_from_perldirs ::\n\t$(NOECHO) $(UNINSTALL) ].$self->catfile($self->{PERL_ARCHLIB},'auto',$self->{FULLEXT},'.packlist').q[\n\nuninstall_from_sitedirs ::\n\t$(NOECHO) $(UNINSTALL) ].$self->catfile($self->{SITEARCHEXP},'auto',$self->{FULLEXT},'.packlist').q[\n\nuninstall_from_vendordirs ::\n\t$(NOECHO) $(UNINSTALL) ].$self->catfile($self->{VENDORARCHEXP},'auto',$self->{FULLEXT},'.packlist').q[\n];\n\n    join('',@m);\n}\n\n=item perldepend (override)\n\nUse VMS-style syntax for files; it's cheaper to just do it directly here\nthan to have the MM_Unix method call C<catfile> repeatedly.  Also, if\nwe have to rebuild Config.pm, use MM[SK] to do it.\n\n=cut\n\nsub perldepend {\n    my($self) = @_;\n    my(@m);\n\n    if ($self->{OBJECT}) {\n        # Need to add an object file dependency on the perl headers.\n        # this is very important for XS modules in perl.git development.\n\n        push @m, $self->_perl_header_files_fragment(\"\"); # empty separator on VMS as its in the $(PERL_INC)\n    }\n\n    if ($self->{PERL_SRC}) {\n\tmy(@macros);\n\tmy($mmsquals) = '$(USEMAKEFILE)[.vms]$(FIRST_MAKEFILE)';\n\tpush(@macros,'__AXP__=1') if $Config{'archname'} eq 'VMS_AXP';\n\tpush(@macros,'DECC=1')    if $Config{'vms_cc_type'} eq 'decc';\n\tpush(@macros,'GNUC=1')    if $Config{'vms_cc_type'} eq 'gcc';\n\tpush(@macros,'SOCKET=1')  if $Config{'d_has_sockets'};\n\tpush(@macros,qq[\"CC=$Config{'cc'}\"])  if $Config{'cc'} =~ m!/!;\n\t$mmsquals .= '$(USEMACROS)' . join(',',@macros) . '$(MACROEND)' if @macros;\n\tpush(@m,q[\n# Check for unpropagated config.sh changes. Should never happen.\n# We do NOT just update config.h because that is not sufficient.\n# An out of date config.h is not fatal but complains loudly!\n$(PERL_INC)config.h : $(PERL_SRC)config.sh\n\t$(NOOP)\n\n$(PERL_ARCHLIB)Config.pm : $(PERL_SRC)config.sh\n\t$(NOECHO) Write Sys$Error \"$(PERL_ARCHLIB)Config.pm may be out of date with config.h or genconfig.pl\"\n\tolddef = F$Environment(\"Default\")\n\tSet Default $(PERL_SRC)\n\t$(MMS)],$mmsquals,);\n\tif ($self->{PERL_ARCHLIB} =~ m|\\[-| && $self->{PERL_SRC} =~ m|(\\[-+)|) {\n\t    my($prefix,$target) = ($1,$self->fixpath('$(PERL_ARCHLIB)Config.pm',0));\n\t    $target =~ s/\\Q$prefix/[/;\n\t    push(@m,\" $target\");\n\t}\n\telse { push(@m,' $(MMS$TARGET)'); }\n\tpush(@m,q[\n\tSet Default 'olddef'\n]);\n    }\n\n    push(@m, join(\" \", map($self->fixpath($_,0),values %{$self->{XS}})).\" : \\$(XSUBPPDEPS)\\n\")\n      if %{$self->{XS}};\n\n    join('',@m);\n}\n\n\n=item makeaperl (override)\n\nUndertake to build a new set of Perl images using VMS commands.  Since\nVMS does dynamic loading, it's not necessary to statically link each\nextension into the Perl image, so this isn't the normal build path.\nConsequently, it hasn't really been tested, and may well be incomplete.\n\n=cut\n\nour %olbs;  # needs to be localized\n\nsub makeaperl {\n    my($self, %attribs) = @_;\n    my($makefilename, $searchdirs, $static, $extra, $perlinc, $target, $tmpdir, $libperl) =\n      @attribs{qw(MAKE DIRS STAT EXTRA INCL TARGET TMP LIBPERL)};\n    my(@m);\n    push @m, \"\n# --- MakeMaker makeaperl section ---\nMAP_TARGET    = $target\n\";\n    return join '', @m if $self->{PARENT};\n\n    my($dir) = join \":\", @{$self->{DIR}};\n\n    unless ($self->{MAKEAPERL}) {\n\tpush @m, q{\n$(MAKE_APERL_FILE) : $(FIRST_MAKEFILE)\n\t$(NOECHO) $(ECHO) \"Writing \"\"$(MMS$TARGET)\"\" for this $(MAP_TARGET)\"\n\t$(NOECHO) $(PERLRUNINST) \\\n\t\tMakefile.PL DIR=}, $dir, q{ \\\n\t\tFIRST_MAKEFILE=$(MAKE_APERL_FILE) LINKTYPE=static \\\n\t\tMAKEAPERL=1 NORECURS=1 };\n\n\tpush @m, map(q[ \\\\\\n\\t\\t\"$_\"], @ARGV),q{\n\n$(MAP_TARGET) :: $(MAKE_APERL_FILE)\n\t$(MAKE)$(USEMAKEFILE)$(MAKE_APERL_FILE) static $(MMS$TARGET)\n};\n\tpush @m, \"\\n\";\n\n\treturn join '', @m;\n    }\n\n\n    my($linkcmd,@optlibs,@staticpkgs,$extralist,$targdir,$libperldir,%libseen);\n    local($_);\n\n    # The front matter of the linkcommand...\n    $linkcmd = join ' ', $Config{'ld'},\n\t    grep($_, @Config{qw(large split ldflags ccdlflags)});\n    $linkcmd =~ s/\\s+/ /g;\n\n    # Which *.olb files could we make use of...\n    local(%olbs);       # XXX can this be lexical?\n    $olbs{$self->{INST_ARCHAUTODIR}} = \"$self->{BASEEXT}\\$(LIB_EXT)\";\n    require File::Find;\n    File::Find::find(sub {\n\treturn unless m/\\Q$self->{LIB_EXT}\\E$/;\n\treturn if m/^libperl/;\n\n\tif( exists $self->{INCLUDE_EXT} ){\n\t\tmy $found = 0;\n\n\t\t(my $xx = $File::Find::name) =~ s,.*?/auto/,,;\n\t\t$xx =~ s,/?$_,,;\n\t\t$xx =~ s,/,::,g;\n\n\t\t# Throw away anything not explicitly marked for inclusion.\n\t\t# DynaLoader is implied.\n\t\tforeach my $incl ((@{$self->{INCLUDE_EXT}},'DynaLoader')){\n\t\t\tif( $xx eq $incl ){\n\t\t\t\t$found++;\n\t\t\t\tlast;\n\t\t\t}\n\t\t}\n\t\treturn unless $found;\n\t}\n\telsif( exists $self->{EXCLUDE_EXT} ){\n\t\t(my $xx = $File::Find::name) =~ s,.*?/auto/,,;\n\t\t$xx =~ s,/?$_,,;\n\t\t$xx =~ s,/,::,g;\n\n\t\t# Throw away anything explicitly marked for exclusion\n\t\tforeach my $excl (@{$self->{EXCLUDE_EXT}}){\n\t\t\treturn if( $xx eq $excl );\n\t\t}\n\t}\n\n\t$olbs{$ENV{DEFAULT}} = $_;\n    }, grep( -d $_, @{$searchdirs || []}));\n\n    # We trust that what has been handed in as argument will be buildable\n    $static = [] unless $static;\n    @olbs{@{$static}} = (1) x @{$static};\n\n    $extra = [] unless $extra && ref $extra eq 'ARRAY';\n    # Sort the object libraries in inverse order of\n    # filespec length to try to insure that dependent extensions\n    # will appear before their parents, so the linker will\n    # search the parent library to resolve references.\n    # (e.g. Intuit::DWIM will precede Intuit, so unresolved\n    # references from [.intuit.dwim]dwim.obj can be found\n    # in [.intuit]intuit.olb).\n    for (sort { length($a) <=> length($b) } keys %olbs) {\n\tnext unless $olbs{$_} =~ /\\Q$self->{LIB_EXT}\\E$/;\n\tmy($dir) = $self->fixpath($_,1);\n\tmy($extralibs) = $dir . \"extralibs.ld\";\n\tmy($extopt) = $dir . $olbs{$_};\n\t$extopt =~ s/$self->{LIB_EXT}$/.opt/;\n\tpush @optlibs, \"$dir$olbs{$_}\";\n\t# Get external libraries this extension will need\n\tif (-f $extralibs ) {\n\t    my %seenthis;\n\t    open my $list, \"<\", $extralibs or warn $!,next;\n\t    while (<$list>) {\n\t\tchomp;\n\t\t# Include a library in the link only once, unless it's mentioned\n\t\t# multiple times within a single extension's options file, in which\n\t\t# case we assume the builder needed to search it again later in the\n\t\t# link.\n\t\tmy $skip = exists($libseen{$_}) && !exists($seenthis{$_});\n\t\t$libseen{$_}++;  $seenthis{$_}++;\n\t\tnext if $skip;\n\t\tpush @$extra,$_;\n\t    }\n\t}\n\t# Get full name of extension for ExtUtils::Miniperl\n\tif (-f $extopt) {\n\t    open my $opt, '<', $extopt or die $!;\n\t    while (<$opt>) {\n\t\tnext unless /(?:UNIVERSAL|VECTOR)=boot_([\\w_]+)/;\n\t\tmy $pkg = $1;\n\t\t$pkg =~ s#__*#::#g;\n\t\tpush @staticpkgs,$pkg;\n\t    }\n\t}\n    }\n    # Place all of the external libraries after all of the Perl extension\n    # libraries in the final link, in order to maximize the opportunity\n    # for XS code from multiple extensions to resolve symbols against the\n    # same external library while only including that library once.\n    push @optlibs, @$extra;\n\n    $target = \"Perl$Config{'exe_ext'}\" unless $target;\n    my $shrtarget;\n    ($shrtarget,$targdir) = fileparse($target);\n    $shrtarget =~ s/^([^.]*)/$1Shr/;\n    $shrtarget = $targdir . $shrtarget;\n    $target = \"Perlshr.$Config{'dlext'}\" unless $target;\n    $tmpdir = \"[]\" unless $tmpdir;\n    $tmpdir = $self->fixpath($tmpdir,1);\n    if (@optlibs) { $extralist = join(' ',@optlibs); }\n    else          { $extralist = ''; }\n    # Let ExtUtils::Liblist find the necessary libs for us (but skip PerlShr)\n    # that's what we're building here).\n    push @optlibs, grep { !/PerlShr/i } split ' ', +($self->ext())[2];\n    if ($libperl) {\n\tunless (-f $libperl || -f ($libperl = $self->catfile($Config{'installarchlib'},'CORE',$libperl))) {\n\t    print \"Warning: $libperl not found\\n\";\n\t    undef $libperl;\n\t}\n    }\n    unless ($libperl) {\n\tif (defined $self->{PERL_SRC}) {\n\t    $libperl = $self->catfile($self->{PERL_SRC},\"libperl$self->{LIB_EXT}\");\n\t} elsif (-f ($libperl = $self->catfile($Config{'installarchlib'},'CORE',\"libperl$self->{LIB_EXT}\")) ) {\n\t} else {\n\t    print \"Warning: $libperl not found\n    If you're going to build a static perl binary, make sure perl is installed\n    otherwise ignore this warning\\n\";\n\t}\n    }\n    $libperldir = $self->fixpath((fileparse($libperl))[1],1);\n\n    push @m, '\n# Fill in the target you want to produce if it\\'s not perl\nMAP_TARGET    = ',$self->fixpath($target,0),'\nMAP_SHRTARGET = ',$self->fixpath($shrtarget,0),\"\nMAP_LINKCMD   = $linkcmd\nMAP_PERLINC   = \", $perlinc ? map('\"$_\" ',@{$perlinc}) : '',\"\nMAP_EXTRA     = $extralist\nMAP_LIBPERL = \",$self->fixpath($libperl,0),'\n';\n\n\n    push @m,\"\\n${tmpdir}Makeaperl.Opt : \\$(MAP_EXTRA)\\n\";\n    foreach (@optlibs) {\n\tpush @m,'\t$(NOECHO) $(PERL) -e \"print q{',$_,'}\" >>$(MMS$TARGET)',\"\\n\";\n    }\n    push @m,\"\\n${tmpdir}PerlShr.Opt :\\n\\t\";\n    push @m,'$(NOECHO) $(PERL) -e \"print q{$(MAP_SHRTARGET)}\" >$(MMS$TARGET)',\"\\n\";\n\n    push @m,'\n$(MAP_SHRTARGET) : $(MAP_LIBPERL) Makeaperl.Opt ',\"${libperldir}Perlshr_Attr.Opt\",'\n\t$(MAP_LINKCMD)/Shareable=$(MMS$TARGET) $(MAP_LIBPERL), Makeaperl.Opt/Option ',\"${libperldir}Perlshr_Attr.Opt/Option\",'\n$(MAP_TARGET) : $(MAP_SHRTARGET) ',\"${tmpdir}perlmain\\$(OBJ_EXT) ${tmpdir}PerlShr.Opt\",'\n\t$(MAP_LINKCMD) ',\"${tmpdir}perlmain\\$(OBJ_EXT)\",', PerlShr.Opt/Option\n\t$(NOECHO) $(ECHO) \"To install the new \"\"$(MAP_TARGET)\"\" binary, say\"\n\t$(NOECHO) $(ECHO) \"    $(MAKE)$(USEMAKEFILE)$(FIRST_MAKEFILE) inst_perl $(USEMACROS)MAP_TARGET=$(MAP_TARGET)$(ENDMACRO)\"\n\t$(NOECHO) $(ECHO) \"To remove the intermediate files, say\n\t$(NOECHO) $(ECHO) \"    $(MAKE)$(USEMAKEFILE)$(FIRST_MAKEFILE) map_clean\"\n';\n    push @m,\"\\n${tmpdir}perlmain.c : \\$(FIRST_MAKEFILE)\\n\\t\\$(NOECHO) \\$(PERL) -e 1 >${tmpdir}Writemain.tmp\\n\";\n    push @m, \"# More from the 255-char line length limit\\n\";\n    foreach (@staticpkgs) {\n\tpush @m,'\t$(NOECHO) $(PERL) -e \"print q{',$_,qq[}\" >>${tmpdir}Writemain.tmp\\n];\n    }\n\n    push @m, sprintf <<'MAKE_FRAG', $tmpdir, $tmpdir;\n\t$(NOECHO) $(PERL) $(MAP_PERLINC) -ane \"use ExtUtils::Miniperl; writemain(@F)\" %sWritemain.tmp >$(MMS$TARGET)\n\t$(NOECHO) $(RM_F) %sWritemain.tmp\nMAKE_FRAG\n\n    push @m, q[\n# Still more from the 255-char line length limit\ndoc_inst_perl :\n\t$(NOECHO) $(MKPATH) $(DESTINSTALLARCHLIB)\n\t$(NOECHO) $(ECHO) \"Perl binary $(MAP_TARGET)|\" >.MM_tmp\n\t$(NOECHO) $(ECHO) \"MAP_STATIC|$(MAP_STATIC)|\" >>.MM_tmp\n\t$(NOECHO) $(PERL) -pl040 -e \" \" ].$self->catfile('$(INST_ARCHAUTODIR)','extralibs.all'),q[ >>.MM_tmp\n\t$(NOECHO) $(ECHO) -e \"MAP_LIBPERL|$(MAP_LIBPERL)|\" >>.MM_tmp\n\t$(NOECHO) $(DOC_INSTALL) <.MM_tmp >>].$self->catfile('$(DESTINSTALLARCHLIB)','perllocal.pod').q[\n\t$(NOECHO) $(RM_F) .MM_tmp\n];\n\n    push @m, \"\ninst_perl : pure_inst_perl doc_inst_perl\n\t\\$(NOECHO) \\$(NOOP)\n\npure_inst_perl : \\$(MAP_TARGET)\n\t$self->{CP} \\$(MAP_SHRTARGET) \",$self->fixpath($Config{'installbin'},1),\"\n\t$self->{CP} \\$(MAP_TARGET) \",$self->fixpath($Config{'installbin'},1),\"\n\nclean :: map_clean\n\t\\$(NOECHO) \\$(NOOP)\n\nmap_clean :\n\t\\$(RM_F) ${tmpdir}perlmain\\$(OBJ_EXT) ${tmpdir}perlmain.c \\$(FIRST_MAKEFILE)\n\t\\$(RM_F) ${tmpdir}Makeaperl.Opt ${tmpdir}PerlShr.Opt \\$(MAP_TARGET)\n\";\n\n    join '', @m;\n}\n\n\n# --- Output postprocessing section ---\n\n=item maketext_filter (override)\n\nInsure that colons marking targets are preceded by space, in order\nto distinguish the target delimiter from a colon appearing as\npart of a filespec.\n\n=cut\n\nsub maketext_filter {\n    my($self, $text) = @_;\n\n    $text =~ s/^([^\\s:=]+)(:+\\s)/$1 $2/mg;\n    return $text;\n}\n\n=item prefixify (override)\n\nprefixifying on VMS is simple.  Each should simply be:\n\n    perl_root:[some.dir]\n\nwhich can just be converted to:\n\n    volume:[your.prefix.some.dir]\n\notherwise you get the default layout.\n\nIn effect, your search prefix is ignored and $Config{vms_prefix} is\nused instead.\n\n=cut\n\nsub prefixify {\n    my($self, $var, $sprefix, $rprefix, $default) = @_;\n\n    # Translate $(PERLPREFIX) to a real path.\n    $rprefix = $self->eliminate_macros($rprefix);\n    $rprefix = vmspath($rprefix) if $rprefix;\n    $sprefix = vmspath($sprefix) if $sprefix;\n\n    $default = vmsify($default)\n      unless $default =~ /\\[.*\\]/;\n\n    (my $var_no_install = $var) =~ s/^install//;\n    my $path = $self->{uc $var} ||\n               $ExtUtils::MM_Unix::Config_Override{lc $var} ||\n               $Config{lc $var} || $Config{lc $var_no_install};\n\n    if( !$path ) {\n        warn \"  no Config found for $var.\\n\" if $Verbose >= 2;\n        $path = $self->_prefixify_default($rprefix, $default);\n    }\n    elsif( !$self->{ARGS}{PREFIX} || !$self->file_name_is_absolute($path) ) {\n        # do nothing if there's no prefix or if its relative\n    }\n    elsif( $sprefix eq $rprefix ) {\n        warn \"  no new prefix.\\n\" if $Verbose >= 2;\n    }\n    else {\n\n        warn \"  prefixify $var => $path\\n\"     if $Verbose >= 2;\n        warn \"    from $sprefix to $rprefix\\n\" if $Verbose >= 2;\n\n        my($path_vol, $path_dirs) = $self->splitpath( $path );\n        if( $path_vol eq $Config{vms_prefix}.':' ) {\n            warn \"  $Config{vms_prefix}: seen\\n\" if $Verbose >= 2;\n\n            $path_dirs =~ s{^\\[}{\\[.} unless $path_dirs =~ m{^\\[\\.};\n            $path = $self->_catprefix($rprefix, $path_dirs);\n        }\n        else {\n            $path = $self->_prefixify_default($rprefix, $default);\n        }\n    }\n\n    print \"    now $path\\n\" if $Verbose >= 2;\n    return $self->{uc $var} = $path;\n}\n\n\nsub _prefixify_default {\n    my($self, $rprefix, $default) = @_;\n\n    warn \"  cannot prefix, using default.\\n\" if $Verbose >= 2;\n\n    if( !$default ) {\n        warn \"No default!\\n\" if $Verbose >= 1;\n        return;\n    }\n    if( !$rprefix ) {\n        warn \"No replacement prefix!\\n\" if $Verbose >= 1;\n        return '';\n    }\n\n    return $self->_catprefix($rprefix, $default);\n}\n\nsub _catprefix {\n    my($self, $rprefix, $default) = @_;\n\n    my($rvol, $rdirs) = $self->splitpath($rprefix);\n    if( $rvol ) {\n        return $self->catpath($rvol,\n                                   $self->catdir($rdirs, $default),\n                                   ''\n                                  )\n    }\n    else {\n        return $self->catdir($rdirs, $default);\n    }\n}\n\n\n=item cd\n\n=cut\n\nsub cd {\n    my($self, $dir, @cmds) = @_;\n\n    $dir = vmspath($dir);\n\n    my $cmd = join \"\\n\\t\", map \"$_\", @cmds;\n\n    # No leading tab makes it look right when embedded\n    my $make_frag = sprintf <<'MAKE_FRAG', $dir, $cmd;\nstartdir = F$Environment(\"Default\")\n\tSet Default %s\n\t%s\n\tSet Default 'startdir'\nMAKE_FRAG\n\n    # No trailing newline makes this easier to embed\n    chomp $make_frag;\n\n    return $make_frag;\n}\n\n\n=item oneliner\n\n=cut\n\nsub oneliner {\n    my($self, $cmd, $switches) = @_;\n    $switches = [] unless defined $switches;\n\n    # Strip leading and trailing newlines\n    $cmd =~ s{^\\n+}{};\n    $cmd =~ s{\\n+$}{};\n\n    $cmd = $self->quote_literal($cmd);\n    $cmd = $self->escape_newlines($cmd);\n\n    # Switches must be quoted else they will be lowercased.\n    $switches = join ' ', map { qq{\"$_\"} } @$switches;\n\n    return qq{\\$(ABSPERLRUN) $switches -e $cmd \"--\"};\n}\n\n\n=item B<echo>\n\nperl trips up on \"<foo>\" thinking it's an input redirect.  So we use the\nnative Write command instead.  Besides, its faster.\n\n=cut\n\nsub echo {\n    my($self, $text, $file, $opts) = @_;\n\n    # Compatibility with old options\n    if( !ref $opts ) {\n        my $append = $opts;\n        $opts = { append => $append || 0 };\n    }\n    my $opencmd = $opts->{append} ? 'Open/Append' : 'Open/Write';\n\n    $opts->{allow_variables} = 0 unless defined $opts->{allow_variables};\n\n    my $ql_opts = { allow_variables => $opts->{allow_variables} };\n\n    my @cmds = (\"\\$(NOECHO) $opencmd MMECHOFILE $file \");\n    push @cmds, map { '$(NOECHO) Write MMECHOFILE '.$self->quote_literal($_, $ql_opts) }\n                split /\\n/, $text;\n    push @cmds, '$(NOECHO) Close MMECHOFILE';\n    return @cmds;\n}\n\n\n=item quote_literal\n\n=cut\n\nsub quote_literal {\n    my($self, $text, $opts) = @_;\n    $opts->{allow_variables} = 1 unless defined $opts->{allow_variables};\n\n    # I believe this is all we should need.\n    $text =~ s{\"}{\"\"}g;\n\n    $text = $opts->{allow_variables}\n      ? $self->escape_dollarsigns($text) : $self->escape_all_dollarsigns($text);\n\n    return qq{\"$text\"};\n}\n\n=item escape_dollarsigns\n\nQuote, don't escape.\n\n=cut\n\nsub escape_dollarsigns {\n    my($self, $text) = @_;\n\n    # Quote dollar signs which are not starting a variable\n    $text =~ s{\\$ (?!\\() }{\"\\$\"}gx;\n\n    return $text;\n}\n\n\n=item escape_all_dollarsigns\n\nQuote, don't escape.\n\n=cut\n\nsub escape_all_dollarsigns {\n    my($self, $text) = @_;\n\n    # Quote dollar signs\n    $text =~ s{\\$}{\"\\$\\\"}gx;\n\n    return $text;\n}\n\n=item escape_newlines\n\n=cut\n\nsub escape_newlines {\n    my($self, $text) = @_;\n\n    $text =~ s{\\n}{-\\n}g;\n\n    return $text;\n}\n\n=item max_exec_len\n\n256 characters.\n\n=cut\n\nsub max_exec_len {\n    my $self = shift;\n\n    return $self->{_MAX_EXEC_LEN} ||= 256;\n}\n\n=item init_linker\n\n=cut\n\nsub init_linker {\n    my $self = shift;\n    $self->{EXPORT_LIST} ||= '$(BASEEXT).opt';\n\n    my $shr = $Config{dbgprefix} . 'PERLSHR';\n    if ($self->{PERL_SRC}) {\n        $self->{PERL_ARCHIVE} ||=\n          $self->catfile($self->{PERL_SRC}, \"$shr.$Config{'dlext'}\");\n    }\n    else {\n        $self->{PERL_ARCHIVE} ||=\n          $ENV{$shr} ? $ENV{$shr} : \"Sys\\$Share:$shr.$Config{'dlext'}\";\n    }\n\n    $self->{PERL_ARCHIVEDEP} ||= '';\n    $self->{PERL_ARCHIVE_AFTER} ||= '';\n}\n\n\n=item catdir (override)\n\n=item catfile (override)\n\nEliminate the macros in the output to the MMS/MMK file.\n\n(File::Spec::VMS used to do this for us, but it's being removed)\n\n=cut\n\nsub catdir {\n    my $self = shift;\n\n    # Process the macros on VMS MMS/MMK\n    my @args = map { m{\\$\\(} ? $self->eliminate_macros($_) : $_  } @_;\n\n    my $dir = $self->SUPER::catdir(@args);\n\n    # Fix up the directory and force it to VMS format.\n    $dir = $self->fixpath($dir, 1);\n\n    return $dir;\n}\n\nsub catfile {\n    my $self = shift;\n\n    # Process the macros on VMS MMS/MMK\n    my @args = map { m{\\$\\(} ? $self->eliminate_macros($_) : $_  } @_;\n\n    my $file = $self->SUPER::catfile(@args);\n\n    $file = vmsify($file);\n\n    return $file\n}\n\n\n=item eliminate_macros\n\nExpands MM[KS]/Make macros in a text string, using the contents of\nidentically named elements of C<%$self>, and returns the result\nas a file specification in Unix syntax.\n\nNOTE:  This is the canonical version of the method.  The version in\nFile::Spec::VMS is deprecated.\n\n=cut\n\nsub eliminate_macros {\n    my($self,$path) = @_;\n    return '' unless $path;\n    $self = {} unless ref $self;\n\n    my($npath) = unixify($path);\n    # sometimes unixify will return a string with an off-by-one trailing null\n    $npath =~ s{\\0$}{};\n\n    my($complex) = 0;\n    my($head,$macro,$tail);\n\n    # perform m##g in scalar context so it acts as an iterator\n    while ($npath =~ m#(.*?)\\$\\((\\S+?)\\)(.*)#gs) {\n        if (defined $self->{$2}) {\n            ($head,$macro,$tail) = ($1,$2,$3);\n            if (ref $self->{$macro}) {\n                if (ref $self->{$macro} eq 'ARRAY') {\n                    $macro = join ' ', @{$self->{$macro}};\n                }\n                else {\n                    print \"Note: can't expand macro \\$($macro) containing \",ref($self->{$macro}),\n                          \"\\n\\t(using MMK-specific deferred substitutuon; MMS will break)\\n\";\n                    $macro = \"\\cB$macro\\cB\";\n                    $complex = 1;\n                }\n            }\n            else { ($macro = unixify($self->{$macro})) =~ s#/\\Z(?!\\n)##; }\n            $npath = \"$head$macro$tail\";\n        }\n    }\n    if ($complex) { $npath =~ s#\\cB(.*?)\\cB#\\${$1}#gs; }\n    $npath;\n}\n\n=item fixpath\n\n   my $path = $mm->fixpath($path);\n   my $path = $mm->fixpath($path, $is_dir);\n\nCatchall routine to clean up problem MM[SK]/Make macros.  Expands macros\nin any directory specification, in order to avoid juxtaposing two\nVMS-syntax directories when MM[SK] is run.  Also expands expressions which\nare all macro, so that we can tell how long the expansion is, and avoid\noverrunning DCL's command buffer when MM[KS] is running.\n\nfixpath() checks to see whether the result matches the name of a\ndirectory in the current default directory and returns a directory or\nfile specification accordingly.  C<$is_dir> can be set to true to\nforce fixpath() to consider the path to be a directory or false to force\nit to be a file.\n\nNOTE:  This is the canonical version of the method.  The version in\nFile::Spec::VMS is deprecated.\n\n=cut\n\nsub fixpath {\n    my($self,$path,$force_path) = @_;\n    return '' unless $path;\n    $self = bless {}, $self unless ref $self;\n    my($fixedpath,$prefix,$name);\n\n    if ($path =~ m#^\\$\\([^\\)]+\\)\\Z(?!\\n)#s || $path =~ m#[/:>\\]]#) {\n        if ($force_path or $path =~ /(?:DIR\\)|\\])\\Z(?!\\n)/) {\n            $fixedpath = vmspath($self->eliminate_macros($path));\n        }\n        else {\n            $fixedpath = vmsify($self->eliminate_macros($path));\n        }\n    }\n    elsif ((($prefix,$name) = ($path =~ m#^\\$\\(([^\\)]+)\\)(.+)#s)) && $self->{$prefix}) {\n        my($vmspre) = $self->eliminate_macros(\"\\$($prefix)\");\n        # is it a dir or just a name?\n        $vmspre = ($vmspre =~ m|/| or $prefix =~ /DIR\\Z(?!\\n)/) ? vmspath($vmspre) : '';\n        $fixedpath = ($vmspre ? $vmspre : $self->{$prefix}) . $name;\n        $fixedpath = vmspath($fixedpath) if $force_path;\n    }\n    else {\n        $fixedpath = $path;\n        $fixedpath = vmspath($fixedpath) if $force_path;\n    }\n    # No hints, so we try to guess\n    if (!defined($force_path) and $fixedpath !~ /[:>(.\\]]/) {\n        $fixedpath = vmspath($fixedpath) if -d $fixedpath;\n    }\n\n    # Trim off root dirname if it's had other dirs inserted in front of it.\n    $fixedpath =~ s/\\.000000([\\]>])/$1/;\n    # Special case for VMS absolute directory specs: these will have had device\n    # prepended during trip through Unix syntax in eliminate_macros(), since\n    # Unix syntax has no way to express \"absolute from the top of this device's\n    # directory tree\".\n    if ($path =~ /^[\\[>][^.\\-]/) { $fixedpath =~ s/^[^\\[<]+//; }\n\n    return $fixedpath;\n}\n\n\n=item os_flavor\n\nVMS is VMS.\n\n=cut\n\nsub os_flavor {\n    return('VMS');\n}\n\n\n=item is_make_type (override)\n\nNone of the make types being checked for is viable on VMS,\nplus our $self->{MAKE} is an unexpanded (and unexpandable)\nmacro whose value is known only to the make utility itself.\n\n=cut\n\nsub is_make_type {\n    my($self, $type) = @_;\n    return 0;\n}\n\n\n=back\n\n\n=head1 AUTHOR\n\nOriginal author Charles Bailey F<bailey@newman.upenn.edu>\n\nMaintained by Michael G Schwern F<schwern@pobox.com>\n\nSee L<ExtUtils::MakeMaker> for patching and contact information.\n\n\n=cut\n\n1;\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/ExtUtils-MakeMaker/t/MM_OS2.t": "#!/usr/bin/perl -w\n\nBEGIN {\n    unshift @INC, 't/lib';\n}\nchdir 't';\n\nuse strict;\nuse Test::More;\nif ($^O =~ /os2/i) {\n\tplan( tests => 32 );\n} else {\n\tplan( skip_all => \"This is not OS/2\" );\n}\n\n# for dlsyms, overridden in tests\nBEGIN {\n\tpackage ExtUtils::MM_OS2;\n\tuse subs 'system', 'unlink';\n}\n\n# for maybe_command\nuse File::Spec;\n\nuse_ok( 'ExtUtils::MM_OS2' );\nok( grep( 'ExtUtils::MM_OS2',  @MM::ISA),\n\t'ExtUtils::MM_OS2 should be parent of MM' );\n\n# dlsyms\nmy $mm = bless({\n\tSKIPHASH => {\n\t\tdynamic => 1\n\t},\n\tNAME => 'foo:bar::',\n}, 'ExtUtils::MM_OS2');\n\nis( $mm->dlsyms(), '',\n\t'dlsyms() should return nothing with dynamic flag set' );\n\n$mm->{BASEEXT} = 'baseext';\ndelete $mm->{SKIPHASH};\nmy $res = $mm->dlsyms();\nlike( $res, qr/baseext\\.def: Makefile/,\n\t'... without flag, should return make targets' );\nlike( $res, qr/\"DL_FUNCS\" => \\{  \\}/,\n\t'... should provide empty hash refs where necessary' );\nlike( $res, qr/\"DL_VARS\" => \\[]/, '... and empty array refs too' );\n\n$mm->{FUNCLIST} = 'funclist';\n$res = $mm->dlsyms( IMPORTS => 'imports' );\nlike( $res, qr/\"FUNCLIST\" => .+funclist/,\n\t'... should pick up values from object' );\nlike( $res, qr/\"IMPORTS\" => .+imports/, '... and allow parameter options too' );\n\nmy $can_write;\n{\n\tlocal *OUT;\n\t$can_write = open(OUT, '>tmp_imp');\n}\n\nSKIP: {\n\tskip(\"Cannot write test files: $!\", 7) unless $can_write;\n\n\t$mm->{IMPORTS} = { foo => 'bar' };\n\n\tlocal $@;\n\teval { $mm->dlsyms() };\n\tlike( $@, qr/Can.t mkdir tmp_imp/,\n\t\t'... should die if directory cannot be made' );\n\n\tunlink('tmp_imp') or skip(\"Cannot remove test file: $!\", 9);\n\teval { $mm->dlsyms() };\n\tlike( $@, qr/Malformed IMPORT/, 'should die from malformed import symbols');\n\n\t$mm->{IMPORTS} = { foo => 'bar.baz' };\n\n\tmy @sysfail = ( 1, 0, 1 );\n\tmy ($sysargs, $unlinked);\n\n\t*ExtUtils::MM_OS2::system = sub {\n\t\t$sysargs = shift;\n\t\treturn shift @sysfail;\n\t};\n\n\t*ExtUtils::MM_OS2::unlink = sub {\n\t\t$unlinked++;\n\t};\n\n\teval { $mm->dlsyms() };\n\n\tlike( $sysargs, qr/^emximp/, '... should try to call system() though' );\n\tlike( $@, qr/Cannot make import library/,\n\t\t'... should die if emximp syscall fails' );\n\n\t# sysfail is 0 now, call emximp call should succeed\n\teval { $mm->dlsyms() };\n\tis( $unlinked, 1, '... should attempt to unlink temp files' );\n\tlike( $@, qr/Cannot extract import/,\n\t\t'... should die if other syscall fails' );\n\n\t# make both syscalls succeed\n\t@sysfail = (0, 0);\n\tlocal $@;\n\teval { $mm->dlsyms() };\n\tis( $@, '', '... should not die if both syscalls succeed' );\n}\n\n# static_lib\n{\n\tmy $called = 0;\n\n\t# avoid \"used only once\"\n\tlocal *ExtUtils::MM_Unix::static_lib;\n\t*ExtUtils::MM_Unix::static_lib = sub {\n\t\t$called++;\n\t\treturn \"\\n\\ncalled static_lib\\n\\nline2\\nline3\\n\\nline4\";\n\t};\n\n\tmy $args = bless({ IMPORTS => {}, }, 'MM');\n\n\t# without IMPORTS as a populated hash, there will be no extra data\n\tmy $ret = ExtUtils::MM_OS2::static_lib( $args );\n\tis( $called, 1, 'static_lib() should call parent method' );\n\tlike( $ret, qr/^called static_lib/m,\n\t\t'... should return parent data unless IMPORTS exists' );\n\n\t$args->{IMPORTS} = { foo => 1};\n\t$ret = ExtUtils::MM_OS2::static_lib( $args );\n\tis( $called, 2, '... should call parent method if extra imports passed' );\n\tlike( $ret, qr/^called static_lib\\n\\t\\$\\(AR\\) \\$\\(AR_STATIC_ARGS\\)/m,\n\t\t'... should append make tags to first line from parent method' );\n\tlike( $ret, qr/\\$@\\n\\n\\nline2\\nline3\\n\\nline4/m,\n\t\t'... should include remaining data from parent method' );\n\n}\n\n# replace_manpage_separator\nmy $sep = '//a///b//c/de';\nis( ExtUtils::MM_OS2->replace_manpage_separator($sep), '.a.b.c.de',\n\t'replace_manpage_separator() should turn multiple slashes into periods' );\n\n# maybe_command\n{\n\tlocal *DIR;\n\tmy ($dir, $noext, $exe, $cmd);\n\tmy $found = 0;\n\n\tmy ($curdir, $updir) = (File::Spec->curdir, File::Spec->updir);\n\n\t# we need:\n\t#\t1) a directory\n\t#\t2) an executable file with no extension\n\t# \t3) an executable file with the .exe extension\n\t# \t4) an executable file with the .cmd extension\n\t# we assume there will be one somewhere in the path\n\t# in addition, we need them to be unique enough they do not trip\n\t# an earlier file test in maybe_command().  Portability.\n\n\tforeach my $path (split(/:/, $ENV{PATH})) {\n\t\topendir(DIR, $path) or next;\n\t\twhile (defined(my $file = readdir(DIR))) {\n\t\t\tnext if $file eq $curdir or $file eq $updir;\n\t\t\t$file = File::Spec->catfile($path, $file);\n\t\t\tunless (defined $dir) {\n\t\t\t\tif (-d $file) {\n\t\t\t\t\tnext if ( -x $file . '.exe' or -x $file . '.cmd' );\n\n\t\t\t\t\t$dir = $file;\n\t\t\t\t\t$found++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (-x $file) {\n\t\t\t\tmy $ext;\n\t\t\t\tif ($file =~ s/\\.(exe|cmd)\\z//) {\n\t\t\t\t\t$ext = $1;\n\n\t\t\t\t\t# skip executable files with names too similar\n\t\t\t\t\tnext if -x $file;\n\t\t\t\t\t$file .= '.' . $ext;\n\n\t\t\t\t} else {\n\t\t\t\t\tunless (defined $noext) {\n\t\t\t\t\t\t$noext = $file;\n\t\t\t\t\t\t$found++;\n\t\t\t\t\t}\n\t\t\t\t\tnext;\n\t\t\t\t}\n\n\t\t\t\tunless (defined $exe) {\n\t\t\t\t\tif ($ext eq 'exe') {\n\t\t\t\t\t\t$exe = $file;\n\t\t\t\t\t\t$found++;\n\t\t\t\t\t\tnext;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tunless (defined $cmd) {\n\t\t\t\t\tif ($ext eq 'cmd') {\n\t\t\t\t\t\t$cmd = $file;\n\t\t\t\t\t\t$found++;\n\t\t\t\t\t\tnext;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlast if $found == 4;\n\t\t}\n\t\tlast if $found == 4;\n\t}\n\n\tSKIP: {\n\t\tskip('No appropriate directory found', 1) unless defined $dir;\n\t\tis( ExtUtils::MM_OS2->maybe_command( $dir ), undef,\n\t\t\t'maybe_command() should ignore directories' );\n\t}\n\n\tSKIP: {\n\t\tskip('No non-exension command found', 1) unless defined $noext;\n\t\tis( ExtUtils::MM_OS2->maybe_command( $noext ), $noext,\n\t\t\t'maybe_command() should find executable lacking file extension' );\n\t}\n\n\tSKIP: {\n\t\tskip('No .exe command found', 1) unless defined $exe;\n\t\t(my $noexe = $exe) =~ s/\\.exe\\z//;\n\t\tis( ExtUtils::MM_OS2->maybe_command( $noexe ), $exe,\n\t\t\t'maybe_command() should find .exe file lacking extension' );\n\t}\n\n\tSKIP: {\n\t\tskip('No .cmd command found', 1) unless defined $cmd;\n\t\t(my $nocmd = $cmd) =~ s/\\.cmd\\z//;\n\t\tis( ExtUtils::MM_OS2->maybe_command( $nocmd ), $cmd,\n\t\t\t'maybe_command() should find .cmd file lacking extension' );\n\t}\n}\n\n# file_name_is_absolute\nok( ExtUtils::MM_OS2->file_name_is_absolute( 's:/' ),\n\t'file_name_is_absolute() should be true for paths with volume and slash' );\nok( ExtUtils::MM_OS2->file_name_is_absolute( '\\foo' ),\n\t'... and for paths with leading slash but no volume' );\nok( ! ExtUtils::MM_OS2->file_name_is_absolute( 'arduk' ),\n\t'... but not for paths with no leading slash or volume' );\n\n\n$mm->init_linker;\n\n# PERL_ARCHIVE\nis( $mm->{PERL_ARCHIVE}, '$(PERL_INC)/libperl$(LIB_EXT)', 'PERL_ARCHIVE' );\n\n# PERL_ARCHIVE_AFTER\n{\n\tmy $aout = 0;\n\tlocal *OS2::is_aout;\n\t*OS2::is_aout = \\$aout;\n\n        $mm->init_linker;\n\tisnt( $mm->{PERL_ARCHIVE_AFTER}, '',\n\t\t'PERL_ARCHIVE_AFTER should be empty without $is_aout set' );\n\t$aout = 1;\n\tis( $mm->{PERL_ARCHIVE_AFTER},\n            '$(PERL_INC)/libperl_override$(LIB_EXT)',\n\t\t'... and has libperl_override if it is set' );\n}\n\n# EXPORT_LIST\nis( $mm->{EXPORT_LIST}, '$(BASEEXT).def',\n\t'EXPORT_LIST should add .def to BASEEXT member' );\n\nEND {\n\tuse File::Path;\n\trmtree('tmp_imp');\n\tunlink 'tmpimp.imp';\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/ExtUtils-MakeMaker/t/MM_Unix.t": "#!/usr/bin/perl -w\n\nBEGIN {\n    unshift @INC, 't/lib';\n}\nchdir 't';\n\nBEGIN {\n    use Test::More;\n\n    if( $^O =~ /^VMS|os2|MacOS|MSWin32|cygwin|beos|netware$/i ) {\n        plan skip_all => 'Non-Unix platform';\n    }\n    else {\n        plan tests => 110;\n    }\n}\n\nBEGIN { use_ok( 'ExtUtils::MM_Unix' ); }\n\nuse strict;\nuse File::Spec;\n\nmy $class = 'ExtUtils::MM_Unix';\n\n# only one of the following can be true\n# test should be removed if MM_Unix ever stops handling other OS than Unix\nmy $os =  ($ExtUtils::MM_Unix::Is{OS2}   || 0)\n        + ($ExtUtils::MM_Unix::Is{Win32} || 0)\n        + ($ExtUtils::MM_Unix::Is{Dos}   || 0)\n        + ($ExtUtils::MM_Unix::Is{VMS}   || 0);\ncmp_ok ( $os, '<=', 1,  'There can be only one (or none)');\n\nis($ExtUtils::MM_Unix::VERSION, $ExtUtils::MakeMaker::VERSION, 'MM_Unix has a $VERSION');\n\n# when the following calls like canonpath, catdir etc are replaced by\n# File::Spec calls, the test's become a bit pointless\n\nforeach ( qw( xx/ ./xx/ xx/././xx xx///xx) ) {\n    is ($class->canonpath($_), File::Spec->canonpath($_), \"canonpath $_\");\n}\n\nis ($class->catdir('xx','xx'), File::Spec->catdir('xx','xx'),\n     'catdir(xx, xx) => xx/xx');\nis ($class->catfile('xx','xx','yy'), File::Spec->catfile('xx','xx','yy'),\n     'catfile(xx, xx) => xx/xx');\n\nis ($class->file_name_is_absolute('Bombdadil'),\n    File::Spec->file_name_is_absolute('Bombdadil'),\n     'file_name_is_absolute()');\n\nis ($class->path(), File::Spec->path(), 'path() same as File::Spec->path()');\n\nforeach (qw/updir curdir rootdir/)\n  {\n  is ($class->$_(), File::Spec->$_(), $_ );\n  }\n\nforeach ( qw /\n  c_o\n  clean\n  const_cccmd\n  const_config\n  const_loadlibs\n  constants\n  depend\n  dist\n  dist_basics\n  dist_ci\n  dist_core\n  distdir\n  dist_test\n  dlsyms\n  dynamic\n  dynamic_bs\n  dynamic_lib\n  exescan\n  extliblist\n  find_perl\n  fixin\n  force\n  guess_name\n  init_dirscan\n  init_main\n  init_others\n  install\n  installbin\n  linkext\n  lsdir\n  macro\n  makeaperl\n  makefile\n  manifypods\n  needs_linking\n  pasthru\n  perldepend\n  pm_to_blib\n  ppd\n  prefixify\n  processPL\n  quote_paren\n  realclean\n  static\n  static_lib\n  staticmake\n  subdir_x\n  subdirs\n  test\n  test_via_harness\n  test_via_script\n  tool_autosplit\n  tool_xsubpp\n  tools_other\n  top_targets\n  writedoc\n  xs_c\n  xs_cpp\n  xs_o\n  / )\n  {\n      can_ok($class, $_);\n  }\n\n###############################################################################\n# some more detailed tests for the methods above\n\nok ( join (' ', $class->dist_basics()), 'distclean :: realclean distcheck');\n\n###############################################################################\n# has_link_code tests\n\nmy $t = bless { NAME => \"Foo\" }, $class;\n$t->{HAS_LINK_CODE} = 1;\nis ($t->has_link_code(),1,'has_link_code'); is ($t->{HAS_LINK_CODE},1);\n\n$t->{HAS_LINK_CODE} = 0;\nis ($t->has_link_code(),0); is ($t->{HAS_LINK_CODE},0);\n\ndelete $t->{HAS_LINK_CODE}; delete $t->{OBJECT};\nis ($t->has_link_code(),0); is ($t->{HAS_LINK_CODE},0);\n\ndelete $t->{HAS_LINK_CODE}; $t->{OBJECT} = 1;\nis ($t->has_link_code(),1); is ($t->{HAS_LINK_CODE},1);\n\ndelete $t->{HAS_LINK_CODE}; delete $t->{OBJECT}; $t->{MYEXTLIB} = 1;\nis ($t->has_link_code(),1); is ($t->{HAS_LINK_CODE},1);\n\ndelete $t->{HAS_LINK_CODE}; delete $t->{MYEXTLIB}; $t->{C} = [ 'Gloin' ];\nis ($t->has_link_code(),1); is ($t->{HAS_LINK_CODE},1);\n\n###############################################################################\n# libscan\n\nis ($t->libscan('foo/RCS/bar'),     '', 'libscan on RCS');\nis ($t->libscan('CVS/bar/car'),     '', 'libscan on CVS');\nis ($t->libscan('SCCS'),            '', 'libscan on SCCS');\nis ($t->libscan('.svn/something'),  '', 'libscan on Subversion');\nis ($t->libscan('foo/b~r'),         'foo/b~r',    'libscan on file with ~');\nis ($t->libscan('foo/RCS.pm'),      'foo/RCS.pm', 'libscan on file with RCS');\n\nis ($t->libscan('Fatty'), 'Fatty', 'libscan on something not a VC file' );\n\n###############################################################################\n# maybe_command\n\nopen(FILE, \">command\"); print FILE \"foo\"; close FILE;\nSKIP: {\n    skip(\"no separate execute mode on VOS\", 2) if $^O eq \"vos\";\n\n    ok !$t->maybe_command('command') ,\"non executable file isn't a command\";\n\n    chmod 0755, \"command\";\n    ok ($t->maybe_command('command'),        \"executable file is a command\");\n}\nunlink \"command\";\n\n\n###############################################################################\n# perl_script (on unix any ordinary, readable file)\n\nmy $self_name = 'MM_Unix.t';\nis ($t->perl_script($self_name),$self_name, 'we pass as a perl_script()');\n\n###############################################################################\n# PERM_RW and PERM_RWX\n\n$t->init_PERM;\nis ($t->{PERM_RW},'644', 'PERM_RW is 644');\nis ($t->{PERM_RWX},'755', 'PERM_RWX is 755');\nis ($t->{PERM_DIR},'755', 'PERM_DIR is 755');\n\n\n###############################################################################\n# post_constants, postamble, post_initialize\n\nforeach (qw/ post_constants postamble post_initialize/) {\n  is ($t->$_(),'', \"$_() is an empty string\");\n}\n\n###############################################################################\n# replace_manpage_separator\n\nis ($t->replace_manpage_separator('Foo/Bar'),'Foo::Bar','manpage_separator');\n\n###############################################################################\n\n$t->init_linker;\nforeach (qw/ EXPORT_LIST PERL_ARCHIVE PERL_ARCHIVE_AFTER /)\n{\n    ok( exists $t->{$_}, \"$_ was defined\" );\n    is( $t->{$_}, '', \"$_ is empty on Unix\");\n}\n\n\n{\n    $t->{CCFLAGS} = '-DMY_THING';\n    $t->{LIBPERL_A} = 'libperl.a';\n    $t->{LIB_EXT}   = '.a';\n    local $t->{NEEDS_LINKING} = 1;\n    $t->cflags();\n\n    # Brief bug where CCFLAGS was being blown away\n    like( $t->{CCFLAGS}, qr/\\-DMY_THING/,    'cflags retains CCFLAGS' );\n}\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/ExtUtils-MakeMaker/t/MM_VMS.t": "#!/usr/bin/perl -w\n\nBEGIN {\n    unshift @INC, 't/lib';\n}\nchdir 't';\n\nBEGIN {\n    @Methods = (qw(wraplist\n                   rootdir\n                   ext\n                   guess_name\n                   find_perl\n                   path\n                   maybe_command\n                   perl_script\n                   file_name_is_absolute\n                   replace_manpage_separator\n                   init_others\n                   constants\n                   cflags\n                   const_cccmd\n                   pm_to_blib\n                   tool_autosplit\n                   tool_xsubpp\n                   tools_other\n                   dist\n                   c_o\n                   xs_c\n                   xs_o\n                   top_targets\n                   dlsyms\n                   dynamic_lib\n                   dynamic_bs\n                   static_lib\n                   manifypods\n                   processPL\n                   installbin\n                   subdir_x\n                   clean\n                   realclean\n                   dist_basics\n                   dist_core\n                   distdir\n                   dist_test\n                   install\n                   perldepend\n                   makefile\n                   test\n                   test_via_harness\n                   test_via_script\n                   makeaperl\n                  ));\n}\n\nBEGIN {\n    use Test::More;\n    if ($^O eq 'VMS') {\n        plan( tests => @Methods + 1 );\n    }\n    else {\n        plan( skip_all => \"This is not VMS\" );\n    }\n}\n\nuse_ok( 'ExtUtils::MM_VMS' );\n\nforeach my $meth (@Methods) {\n    can_ok( 'ExtUtils::MM_VMS', $meth);\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/perlcyg.pod": "If you read this file _as_is_, just ignore the funny characters you\nsee. It is written in the POD format (see pod/perlpod.pod) which is\nspecially designed to be readable as is.\n\n=head1 NAME\n\nREADME.cygwin - Perl for Cygwin\n\n=head1 SYNOPSIS\n\nThis document will help you configure, make, test and install Perl\non Cygwin.  This document also describes features of Cygwin that will\naffect how Perl behaves at runtime.\n\nB<NOTE:> There are pre-built Perl packages available for Cygwin and a\nversion of Perl is provided on the Cygwin CD.  If you do not need to\ncustomize the configuration, consider using one of these packages:\n\n  http://cygutils.netpedia.net/\n\n=head1 PREREQUISITES\n\n=head2 Cygwin = GNU+Cygnus+Windows (Don't leave UNIX without it)\n\nThe Cygwin tools are ports of the popular GNU development tools for Win32\nplatforms.  They run thanks to the Cygwin library which provides the UNIX\nsystem calls and environment these programs expect.  More information\nabout this project can be found at:\n\n  http://www.cygwin.com/\n\nA recent net or commercial release of Cygwin is required.\n\nAt the time this document was last updated, Cygwin 1.1.5 was current.\n\nB<NOTE:> At this point, minimal effort has been made to provide\ncompatibility with old (beta) Cygwin releases.  The focus has been to\nprovide a high quality release and not worry about working around old\nbugs.  If you wish to use Perl with Cygwin B20.1 or earlier, consider\nusing perl5.005_03, which is available in source and binary form at\nC<http://cygutils.netpedia.net/>.  If there is significant demand,\na patch kit can be developed to port back to earlier Cygwin versions.\n\n=head2 Cygwin Configuration\n\nWhile building Perl some changes may be necessary to your Cygwin setup so\nthat Perl builds cleanly.  These changes are B<not> required for normal\nPerl usage.\n\nB<NOTE:> The binaries that are built will run on all Win32 versions.\nThey do not depend on your host system (Win9x/WinME, WinNT/Win2K)\nor your Cygwin configuration (I<ntea>, I<ntsec>, binary/text mounts).\nThe only dependencies come from hard-coded pathnames like C</usr/local>.\nHowever, your host system and Cygwin configuration will affect Perl's\nruntime behavior (see L</\"TEST\">).\n\n=over 4\n\n=item * C<PATH>\n\nSet the C<PATH> environment variable so that Configure finds the Cygwin\nversions of programs.  Any Windows directories should be removed or\nmoved to the end of your C<PATH>.\n\n=item * I<nroff>\n\nIf you do not have I<nroff> (which is part of the I<groff> package),\nConfigure will B<not> prompt you to install I<man> pages.\n\n=item * Permissions\n\nOn WinNT with either the I<ntea> or I<ntsec> C<CYGWIN> settings, directory\nand file permissions may not be set correctly.  Since the build process\ncreates directories and files, to be safe you may want to run a `C<chmod\n-R +w *>' on the entire Perl source tree.\n\nAlso, it is a well known WinNT \"feature\" that files created by a login\nthat is a member of the I<Administrators> group will be owned by the\nI<Administrators> group.  Depending on your umask, you may find that you\ncan not write to files that you just created (because you are no longer\nthe owner).  When using the I<ntsec> C<CYGWIN> setting, this is not an\nissue because it \"corrects\" the ownership to what you would expect on\na UNIX system.\n\n=back\n\n=head1 CONFIGURE\n\nThe default options gathered by Configure with the assistance of\nF<hints/cygwin.sh> will build a Perl that supports dynamic loading\n(which requires a shared F<libperl.dll>).\n\nThis will run Configure and keep a record:\n\n  ./Configure 2>&1 | tee log.configure\n\nIf you are willing to accept all the defaults run Configure with B<-de>.\nHowever, several useful customizations are available.\n\n=head2 Strip Binaries\n\nIt is possible to strip the EXEs and DLLs created by the build process.\nThe resulting binaries will be significantly smaller.  If you want the\nbinaries to be stripped, you can either add a B<-s> option when Configure\nprompts you,\n\n  Any additional ld flags (NOT including libraries)? [none] -s\n  Any special flags to pass to gcc to use dynamic linking? [none] -s\n  Any special flags to pass to ld2 to create a dynamically loaded library?\n  [none] -s\n\nor you can edit F<hints/cygwin.sh> and uncomment the relevant variables\nnear the end of the file.\n\n=head2 Optional Libraries\n\nSeveral Perl functions and modules depend on the existence of\nsome optional libraries.  Configure will find them if they are\ninstalled in one of the directories listed as being used for library\nsearches.  Pre-built packages for most of these are available at\nC<http://cygutils.netpedia.net/>.\n\n=over 4\n\n=item * C<-lcrypt>\n\nThe crypt package distributed with Cygwin is a Linux compatible 56-bit\nDES crypt port by Corinna Vinschen.\n\nAlternatively, the crypt libraries in GNU libc have been ported to Cygwin.\n\nThe DES based Ultra Fast Crypt port was done by Alexey Truhan:\n\n  ftp://ftp.franken.de/pub/win32/develop/gnuwin32/cygwin/porters/Okhapkin_Sergey/cw32crypt-dist-0.tgz\n\nNOTE: There are various export restrictions on DES implementations,\nsee the glibc README for more details.\n\nThe MD5 port was done by Andy Piper:\n\n  ftp://ftp.franken.de/pub/win32/develop/gnuwin32/cygwin/porters/Okhapkin_Sergey/libcrypt.tgz\n\n=item * C<-lgdbm> (C<use GDBM_File>)\n\nGDBM is available for Cygwin.  GDBM's ndbm/dbm compatibility feature\nalso makes C<NDBM_File> and C<ODBM_File> possible (although they add\nlittle extra value).\n\nNOTE: The ndbm/dbm emulations only completely work on NTFS partitions.\n\n=item * C<-ldb> (C<use DB_File>)\n\nBerkeleyDB is available for Cygwin.  Some details can be found in\nF<ext/DB_File/DB_File.pm>.\n\nNOTE: The BerkeleyDB library only completely works on NTFS partitions.\n\n=item * C<-lcygipc> (C<use IPC::SysV>)\n\nA port of SysV IPC is available for Cygwin.\n\nNOTE: This has B<not> been extensively tested.  In particular,\nC<d_semctl_semun> is undefined because it fails a Configure test\nand on Win9x the I<shm*()> functions seem to hang.  It also creates\na compile time dependency because F<perl.h> includes F<<sys/ipc.h>>\nand F<<sys/sem.h>> (which will be required in the future when compiling\nCPAN modules).\n\n=back\n\n=head2 Configure-time Options\n\nThe F<INSTALL> document describes several Configure-time options.  Some of\nthese will work with Cygwin, others are not yet possible.  Also, some of\nthese are experimental.  You can either select an option when Configure\nprompts you or you can define (undefine) symbols on the command line.\n\n=over 4\n\n=item * C<-Uusedl>\n\nUndefining this symbol forces Perl to be compiled statically.\n\n=item * C<-Uusemymalloc>\n\nBy default Perl uses the malloc() included with the Perl source.  If you\nwant to force Perl to build with the system malloc() undefine this symbol.\n\n=item * C<-Dusemultiplicity>\n\nMultiplicity is required when embedding Perl in a C program and using\nmore than one interpreter instance.  This works with the Cygwin port.\n\n=item * C<-Duseperlio>\n\nThe PerlIO abstraction works with the Cygwin port.\n\n=item * C<-Duse64bitint>\n\nI<gcc> supports 64-bit integers.  However, several additional long long\nfunctions are necessary to use them within Perl (I<{strtol,strtoul}l>).\nThese are B<not> yet available with Cygwin.\n\n=item * C<-Duselongdouble>\n\nI<gcc> supports long doubles (12 bytes).  However, several additional\nlong double math functions are necessary to use them within Perl\n(I<{atan2,cos,exp,floor,fmod,frexp,isnan,log,modf,pow,sin,sqrt}l,strtold>).\nThese are B<not> yet available with Cygwin.\n\n=item * C<-Dusethreads>\n\nPOSIX threads are B<not> yet implemented in Cygwin.\n\n=item * C<-Duselargefiles>\n\nAlthough Win32 supports large files, Cygwin currently uses 32-bit integers\nfor internal size and position calculations.\n\n=back\n\n=head2 Suspicious Warnings\n\nYou may see some messages during Configure that seem suspicious.\n\n=over 4\n\n=item * I<dlsym()>\n\nI<ld2> is needed to build dynamic libraries, but it does not exist\nwhen dlsym() checking occurs (it is not created until `C<make>' runs).\nYou will see the following message:\n\n  Checking whether your dlsym() needs a leading underscore ...\n  ld2: not found\n  I can't compile and run the test program.\n  I'm guessing that dlsym doesn't need a leading underscore.\n\nSince the guess is correct, this is not a problem.\n\n=item * Win9x and C<d_eofnblk>\n\nWin9x does not correctly report C<EOF> with a non-blocking read on a\nclosed pipe.  You will see the following messages:\n\n  But it also returns -1 to signal EOF, so be careful!\n  WARNING: you can't distinguish between EOF and no data!\n\n  *** WHOA THERE!!! ***\n      The recommended value for $d_eofnblk on this machine was \"define\"!\n      Keep the recommended value? [y]\n\nAt least for consistency with WinNT, you should keep the recommended\nvalue.\n\n=item * Compiler/Preprocessor defines\n\nThe following error occurs because of the Cygwin C<#define> of\nC<_LONG_DOUBLE>:\n\n  Guessing which symbols your C compiler and preprocessor define...\n  try.c:<line#>: parse error\n\nThis failure does not seem to cause any problems.\n\n=back\n\n=head1 MAKE\n\nSimply run I<make> and wait:\n\n  make 2>&1 | tee log.make\n\n=head2 Warnings\n\nWarnings like these are normal:\n\n  warning: overriding commands for target <file>\n  warning: ignoring old commands for target <file>\n\n  dllwrap: no export definition file provided\n  dllwrap: creating one, but that may not be what you want\n\n=head2 ld2\n\nDuring `C<make>', I<ld2> will be created and installed in your $installbin\ndirectory (where you said to put public executables).  It does not\nwait until the `C<make install>' process to install the I<ld2> script,\nthis is because the remainder of the `C<make>' refers to I<ld2> without\nfully specifying its path and does this from multiple subdirectories.\nThe assumption is that $installbin is in your current C<PATH>.  If this\nis not the case `C<make>' will fail at some point.  If this happens,\njust manually copy I<ld2> from the source directory to somewhere in\nyour C<PATH>.\n\n=head1 TEST\n\nThere are two steps to running the test suite:\n\n  make test 2>&1 | tee log.make-test\n\n  cd t;./perl harness 2>&1 | tee ../log.harness\n\nThe same tests are run both times, but more information is provided when\nrunning as `C<./perl harness>'.\n\nTest results vary depending on your host system and your Cygwin\nconfiguration.  If a test can pass in some Cygwin setup, it is always\nattempted and explainable test failures are documented.  It is possible\nfor Perl to pass all the tests, but it is more likely that some tests\nwill fail for one of the reasons listed below.\n\n=head2 File Permissions\n\nUNIX file permissions are based on sets of mode bits for\n{read,write,execute} for each {user,group,other}.  By default Cygwin\nonly tracks the Win32 read-only attribute represented as the UNIX file\nuser write bit (files are always readable, files are executable if they\nhave a F<.{com,bat,exe}> extension or begin with C<#!>, directories are\nalways readable and executable).  On WinNT with the I<ntea> C<CYGWIN>\nsetting, the additional mode bits are stored as extended file attributes.\nOn WinNT with the I<ntsec> C<CYGWIN> setting, permissions use the standard\nWinNT security descriptors and access control lists.  Without one of\nthese options, these tests will fail:\n\n  Failed Test           List of failed\n  ------------------------------------\n  io/fs.t               5, 7, 9-10\n  lib/anydbm.t          2\n  lib/db-btree.t        20\n  lib/db-hash.t         16\n  lib/db-recno.t        18\n  lib/gdbm.t            2\n  lib/ndbm.t            2\n  lib/odbm.t            2\n  lib/sdbm.t            2\n  op/stat.t             9, 20 (.tmp not an executable extension)\n\n=head2 Hard Links\n\nFAT partitions do not support hard links (whereas NTFS does), in which\ncase Cygwin implements link() by copying the file.  On remote (network)\ndrives Cygwin's stat() always sets C<st_nlink> to 1, so the link count\nfor remote directories and files is not available.  In either case,\nthese tests will fail:\n\n  Failed Test           List of failed\n  ------------------------------------\n  io/fs.t               4\n  op/stat.t             3\n\n=head2 Filetime Granularity\n\nOn FAT partitions the filetime granularity is 2 seconds.  The following\ntest will fail:\n\n  Failed Test           List of failed\n  ------------------------------------\n  io/fs.t               18\n\n=head2 Tainting Checks\n\nWhen Perl is running in taint mode, C<$ENV{PATH}> is considered tainted\nand not used, so DLLs not in the default system directories will not\nbe found.  While the tests are running you will see warnings popup from\nthe system with messages like:\n\n  Win9x\n    Error Starting Program\n    A required .DLL file, CYGWIN1.DLL, was not found\n\n  WinNT\n    perl.exe - Unable to Locate DLL\n    The dynamic link library cygwin1.dll could not be found in the\n      specified path ...\n\nJust click OK and ignore them.  When running `C<make test>', 2 popups\noccur.  During `C<./perl harness>', 4 popups occur.  Also, these tests\nwill fail:\n\n  Failed Test           List of failed\n  ------------------------------------\n  op/taint.t            1, 3, 31, 37\n\nAlternatively, you can copy F<cygwin1.dll> into the directory where the\ntests run:\n\n  cp /bin/cygwin1.dll t\n\nor one of the Windows system directories (although, this is B<not>\nrecommended).\n\n=head2 /etc/group\n\nCygwin does not require F</etc/group>, in which case the F<op/grent.t>\ntest will be skipped.  The check performed by F<op/grent.t> expects to\nsee entries that use the members field, otherwise this test will fail:\n\n  Failed Test           List of failed\n  ------------------------------------\n  op/grent.t            1\n\n=head2 Script Portability\n\nCygwin does an outstanding job of providing UNIX-like semantics on top of\nWin32 systems.  However, in addition to the items noted above, there are\nsome differences that you should know about.  This is a very brief guide\nto portability, more information can be found in the Cygwin documentation.\n\n=over 4\n\n=item * Pathnames\n\nCygwin pathnames can be separated by forward (F</>) or backward (F<\\>)\nslashes.  They may also begin with drive letters (F<C:>) or Universal\nNaming Codes (F<//UNC>).  DOS device names (F<aux>, F<con>, F<prn>,\nF<com*>, F<lpt?>, F<nul>) are invalid as base filenames.  However, they\ncan be used in extensions (e.g., F<hello.aux>).  Names may contain all\nprintable characters except these:\n\n  : * ? \" < > |\n\nFile names are case insensitive, but case preserving.  A pathname that\ncontains a backslash or drive letter is a Win32 pathname (and not subject\nto the translations applied to POSIX style pathnames).\n\n=item * Text/Binary\n\nWhen a file is opened it is in either text or binary mode.  In text mode\na file is subject to CR/LF/Ctrl-Z translations.  With Cygwin, the default\nmode for an open() is determined by the mode of the mount that underlies\nthe file.  Perl provides a binmode() function to set binary mode on files\nthat otherwise would be treated as text.  sysopen() with the C<O_TEXT>\nflag sets text mode on files that otherwise would be treated as binary:\n\n    sysopen(FOO, \"bar\", O_WRONLY|O_CREAT|O_TEXT)\n\nlseek(), tell() and sysseek() only work with files opened in binary mode.\n\nThe text/binary issue is covered at length in the Cygwin documentation.\n\n=item * F<.exe>\n\nThe Cygwin stat(), lstat() and readlink() functions make the F<.exe>\nextension transparent by looking for F<foo.exe> when you ask for F<foo>\n(unless a F<foo> also exists).  Cygwin does not require a F<.exe>\nextension, but I<gcc> adds it automatically when building a program.\nHowever, when accessing an executable as a normal file (e.g., I<cp>\nin a makefile) the F<.exe> is not transparent.  The I<install> included\nwith Cygwin automatically appends a F<.exe> when necessary.\n\n=item * chown()\n\nOn WinNT chown() can change a file's user and group IDs.  On Win9x chown()\nis a no-op, although this is appropriate since there is no security model.\n\n=item * Miscellaneous\n\nFile locking using the C<F_GETLK> command to fcntl() is a stub that\nreturns C<ENOSYS>.\n\nWin9x can not rename() an open file (although WinNT can).\n\nThe Cygwin chroot() implementation has holes (it can not restrict file\naccess by native Win32 programs).\n\n=back\n\n=head1 INSTALL\n\nThis will install Perl, including I<man> pages.\n\n  make install | tee log.make-install\n\nNOTE: If C<STDERR> is redirected `C<make install>' will B<not> prompt\nyou to install I<perl> into F</usr/bin>.\n\nYou may need to be I<Administrator> to run `C<make install>'.  If you\nare not, you must have write access to the directories in question.\n\nInformation on installing the Perl documentation in HTML format can be\nfound in the F<INSTALL> document.\n\n=head1 MANIFEST\n\nThese are the files in the Perl release that contain references to Cygwin.\nThese very brief notes attempt to explain the reason for all conditional\ncode.  Hopefully, keeping this up to date will allow the Cygwin port to\nbe kept as clean as possible.\n\n=over 4\n\n=item Documentation\n\n  INSTALL README.cygwin README.win32 MANIFEST\n  Changes Changes5.005 Changes5.004 Changes5.6\n  pod/perl.pod pod/perlport.pod pod/perlfaq3.pod\n  pod/perldelta.pod pod/perl5004delta.pod pod/perl56delta.pod\n  pod/perlhist.pod pod/perlmodlib.pod pod/buildtoc.PL pod/perltoc.pod\n\n=item Build, Configure, Make, Install\n\n  cygwin/Makefile.SHs\n  cygwin/ld2.in\n  cygwin/perlld.in\n  ext/IPC/SysV/hints/cygwin.pl\n  ext/NDBM_File/hints/cygwin.pl\n  ext/ODBM_File/hints/cygwin.pl\n  hints/cygwin.sh\n  Configure             - help finding hints from uname,\n                          shared libperl required for dynamic loading\n  Makefile.SH           - linklibperl\n  Porting/patchls       - cygwin in port list\n  installman            - man pages with :: translated to .\n  installperl           - install dll/ld2/perlld, install to pods\n  makedepend.SH         - uwinfix\n\n=item Tests\n\n  t/io/tell.t           - binmode\n  t/lib/b.t             - ignore Cwd from os_extras\n  t/lib/glob-basic.t    - Win32 directory list access differs from read mode\n  t/op/magic.t          - $^X/symlink WORKAROUND, s/.exe//\n  t/op/stat.t           - no /dev, skip Win32 ftCreationTime quirk\n                          (cache manager sometimes preserves ctime of file\n                          previously created and deleted), no -u (setuid)\n\n=item Compiled Perl Source\n\n  EXTERN.h              - __declspec(dllimport)\n  XSUB.h                - __declspec(dllexport)\n  cygwin/cygwin.c       - os_extras (getcwd, spawn)\n  perl.c                - os_extras\n  perl.h                - binmode\n  doio.c                - win9x can not rename a file when it is open\n  pp_sys.c              - do not define h_errno, pp_system with spawn\n  util.c                - use setenv\n\n=item Compiled Module Source\n\n  ext/POSIX/POSIX.xs    - tzname defined externally\n  ext/SDBM_File/sdbm/pair.c\n                        - EXTCONST needs to be redefined from EXTERN.h\n  ext/SDBM_File/sdbm/sdbm.c\n                        - binary open\n\n=item Perl Modules/Scripts\n\n  lib/Cwd.pm            - hook to internal Cwd::cwd\n  lib/ExtUtils/MakeMaker.pm\n                        - require MM_Cygwin.pm\n  lib/ExtUtils/MM_Cygwin.pm\n                        - canonpath, cflags, manifypods, perl_archive\n  lib/File/Find.pm      - on remote drives stat() always sets st_nlink to 1\n  lib/File/Spec/Unix.pm - preserve //unc\n  lib/File/Temp.pm      - no directory sticky bit\n  lib/perl5db.pl        - use stdin not /dev/tty\n  utils/perldoc.PL      - version comment\n\n=back\n\n=head1 BUGS\n\nWhen I<make> starts, it warns about overriding commands for F<perlmain.o>.\n\n`C<make clean>' does not remove library F<.def> or F<.exe.stackdump>\nfiles.\n\nThe I<ld2> script contains references to the source directory.  You should\nchange these to $installbin after `C<make install>'.\n\nSupport for swapping real and effective user and group IDs is incomplete.\nOn WinNT Cygwin provides setuid(), seteuid(), setgid() and setegid().\nHowever, additional Cygwin calls for manipulating WinNT access tokens\nand security contexts are required.\n\nWhen building DLLs, `C<dllwrap --export-all-symbols>' is used to export\nglobal symbols.  It might be better to generate an explicit F<.def> file\n(see F<makedef.pl>).  Also, DLLs can now be build with `C<gcc -shared>'.\n\n=head1 AUTHORS\n\nCharles Wilson <cwilson@ece.gatech.edu>,\nEric Fifer <egf7@columbia.edu>,\nalexander smishlajev <als@turnhere.com>,\nSteven Morlock <newspost@morlock.net>,\nSebastien Barre <Sebastien.Barre@utc.fr>,\nTeun Burgers <burgers@ecn.nl>.\n\n=head1 HISTORY\n\nLast updated: 9 November 2000\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/perlcygo.txt": "NAME\nREADME.cygwin - Perl for Cygwin\nSYNOPSIS\nThis document will help you configure, make, test and install Perl on Cygwin. This document also describes features of Cygwin that will affect how Perl behaves at runtime.\nNOTE: There are pre-built Perl packages available for Cygwin and a version of Perl is provided on the Cygwin CD. If you do not need to customize the configuration, consider using one of these packages:\n  http://cygutils.netpedia.net/\nPREREQUISITES\nCygwin = GNU+Cygnus+Windows (Don't leave UNIX without it)\nThe Cygwin tools are ports of the popular GNU development tools for Win32 platforms. They run thanks to the Cygwin library which provides the UNIX system calls and environment these programs expect. More information about this project can be found at:\n  http://www.cygwin.com/\nA recent net or commercial release of Cygwin is required.\nAt the time this document was last updated, Cygwin 1.1.5 was current.\nNOTE: At this point, minimal effort has been made to provide compatibility with old (beta) Cygwin releases. The focus has been to provide a high quality release and not worry about working around old bugs. If you wish to use Perl with Cygwin B20.1 or earlier, consider using perl5.005_03, which is available in source and binary form at http://cygutils.netpedia.net/. If there is significant demand, a patch kit can be developed to port back to earlier Cygwin versions.\nCygwin Configuration\nWhile building Perl some changes may be necessary to your Cygwin setup so that Perl builds cleanly. These changes are not required for normal Perl usage.\nNOTE: The binaries that are built will run on all Win32 versions. They do not depend on your host system (Win9x/WinME, WinNT/Win2K) or your Cygwin configuration (ntea, ntsec, binary/text mounts). The only dependencies come from hard-coded pathnames like /usr/local. However, your host system and Cygwin configuration will affect Perl's runtime behavior (see \"TEST\").\nPATH\nSet the PATH environment variable so that Configure finds the Cygwin versions of programs. Any Windows directories should be removed or moved to the end of your PATH.\nnroff\nIf you do not have nroff (which is part of the groff package), Configure will not prompt you to install man pages.\nPermissions\nOn WinNT with either the ntea or ntsec CYGWIN settings, directory and file permissions may not be set correctly. Since the build process creates directories and files, to be safe you may want to run a `chmod -R +w *' on the entire Perl source tree.\nAlso, it is a well known WinNT \"feature\" that files created by a login that is a member of the Administrators group will be owned by the Administrators group. Depending on your umask, you may find that you can not write to files that you just created (because you are no longer the owner). When using the ntsec CYGWIN setting, this is not an issue because it \"corrects\" the ownership to what you would expect on a UNIX system.\nCONFIGURE\nThe default options gathered by Configure with the assistance of hints/cygwin.sh will build a Perl that supports dynamic loading (which requires a shared libperl.dll).\nThis will run Configure and keep a record:\n  ./Configure 2>&1 | tee log.configure\nIf you are willing to accept all the defaults run Configure with -de. However, several useful customizations are available.\nStrip Binaries\nIt is possible to strip the EXEs and DLLs created by the build process. The resulting binaries will be significantly smaller. If you want the binaries to be stripped, you can either add a -s option when Configure prompts you,\n  Any additional ld flags (NOT including libraries)? [none] -s\n  Any special flags to pass to gcc to use dynamic linking? [none] -s\n  Any special flags to pass to ld2 to create a dynamically loaded library?\n  [none] -s\nor you can edit hints/cygwin.sh and uncomment the relevant variables near the end of the file.\nOptional Libraries\nSeveral Perl functions and modules depend on the existence of some optional libraries. Configure will find them if they are installed in one of the directories listed as being used for library searches. Pre-built packages for most of these are available at http://cygutils.netpedia.net/.\n-lcrypt\nThe crypt package distributed with Cygwin is a Linux compatible 56-bit DES crypt port by Corinna Vinschen.\nAlternatively, the crypt libraries in GNU libc have been ported to Cygwin.\nThe DES based Ultra Fast Crypt port was done by Alexey Truhan:\n  ftp://ftp.franken.de/pub/win32/develop/gnuwin32/cygwin/porters/Okhapkin_Sergey/cw32crypt-dist-0.tgz\nNOTE: There are various export restrictions on DES implementations, see the glibc README for more details.\nThe MD5 port was done by Andy Piper:\n  ftp://ftp.franken.de/pub/win32/develop/gnuwin32/cygwin/porters/Okhapkin_Sergey/libcrypt.tgz\n-lgdbm (use GDBM_File)\nGDBM is available for Cygwin. GDBM's ndbm/dbm compatibility feature also makes NDBM_File and ODBM_File possible (although they add little extra value).\nNOTE: The ndbm/dbm emulations only completely work on NTFS partitions.\n-ldb (use DB_File)\nBerkeleyDB is available for Cygwin. Some details can be found in ext/DB_File/DB_File.pm.\nNOTE: The BerkeleyDB library only completely works on NTFS partitions.\n-lcygipc (use IPC::SysV)\nA port of SysV IPC is available for Cygwin.\nNOTE: This has not been extensively tested. In particular, d_semctl_semun is undefined because it fails a Configure test and on Win9x the shm*() functions seem to hang. It also creates a compile time dependency because perl.h includes <sys/ipc.h> and <sys/sem.h> (which will be required in the future when compiling CPAN modules).\nConfigure-time Options\nThe INSTALL document describes several Configure-time options. Some of these will work with Cygwin, others are not yet possible. Also, some of these are experimental. You can either select an option when Configure prompts you or you can define (undefine) symbols on the command line.\n-Uusedl\nUndefining this symbol forces Perl to be compiled statically.\n-Uusemymalloc\nBy default Perl uses the malloc() included with the Perl source. If you want to force Perl to build with the system malloc() undefine this symbol.\n-Dusemultiplicity\nMultiplicity is required when embedding Perl in a C program and using more than one interpreter instance. This works with the Cygwin port.\n-Duseperlio\nThe PerlIO abstraction works with the Cygwin port.\n-Duse64bitint\ngcc supports 64-bit integers. However, several additional long long functions are necessary to use them within Perl ({strtol,strtoul}l). These are not yet available with Cygwin.\n-Duselongdouble\ngcc supports long doubles (12 bytes). However, several additional long double math functions are necessary to use them within Perl ({atan2,cos,exp,floor,fmod,frexp,isnan,log,modf,pow,sin,sqrt}l,strtold). These are not yet available with Cygwin.\n-Dusethreads\nPOSIX threads are not yet implemented in Cygwin.\n-Duselargefiles\nAlthough Win32 supports large files, Cygwin currently uses 32-bit integers for internal size and position calculations.\nSuspicious Warnings\nYou may see some messages during Configure that seem suspicious.\ndlsym()\nld2 is needed to build dynamic libraries, but it does not exist when dlsym() checking occurs (it is not created until `make' runs). You will see the following message:\n  Checking whether your dlsym() needs a leading underscore ...\n  ld2: not found\n  I can't compile and run the test program.\n  I'm guessing that dlsym doesn't need a leading underscore.\nSince the guess is correct, this is not a problem.\nWin9x and d_eofnblk\nWin9x does not correctly report EOF with a non-blocking read on a closed pipe. You will see the following messages:\n  But it also returns -1 to signal EOF, so be careful!\n  WARNING: you can't distinguish between EOF and no data!\n  *** WHOA THERE!!! ***\n      The recommended value for $d_eofnblk on this machine was \"define\"!\n      Keep the recommended value? [y]\nAt least for consistency with WinNT, you should keep the recommended value.\nCompiler/Preprocessor defines\nThe following error occurs because of the Cygwin #define of _LONG_DOUBLE:\n  Guessing which symbols your C compiler and preprocessor define...\n  try.c:<line#>: parse error\nThis failure does not seem to cause any problems.\nMAKE\nSimply run make and wait:\n  make 2>&1 | tee log.make\nWarnings\nWarnings like these are normal:\n  warning: overriding commands for target <file>\n  warning: ignoring old commands for target <file>\n  dllwrap: no export definition file provided\n  dllwrap: creating one, but that may not be what you want\nld2\nDuring `make', ld2 will be created and installed in your $installbin directory (where you said to put public executables). It does not wait until the `make install' process to install the ld2 script, this is because the remainder of the `make' refers to ld2 without fully specifying its path and does this from multiple subdirectories. The assumption is that $installbin is in your current PATH. If this is not the case `make' will fail at some point. If this happens, just manually copy ld2 from the source directory to somewhere in your PATH.\nTEST\nThere are two steps to running the test suite:\n  make test 2>&1 | tee log.make-test\n  cd t;./perl harness 2>&1 | tee ../log.harness\nThe same tests are run both times, but more information is provided when running as `./perl harness'.\nTest results vary depending on your host system and your Cygwin configuration. If a test can pass in some Cygwin setup, it is always attempted and explainable test failures are documented. It is possible for Perl to pass all the tests, but it is more likely that some tests will fail for one of the reasons listed below.\nFile Permissions\nUNIX file permissions are based on sets of mode bits for {read,write,execute} for each {user,group,other}. By default Cygwin only tracks the Win32 read-only attribute represented as the UNIX file user write bit (files are always readable, files are executable if they have a .{com,bat,exe} extension or begin with #!, directories are always readable and executable). On WinNT with the ntea CYGWIN setting, the additional mode bits are stored as extended file attributes. On WinNT with the ntsec CYGWIN setting, permissions use the standard WinNT security descriptors and access control lists. Without one of these options, these tests will fail:\n  Failed Test           List of failed\n  ------------------------------------\n  io/fs.t               5, 7, 9-10\n  lib/anydbm.t          2\n  lib/db-btree.t        20\n  lib/db-hash.t         16\n  lib/db-recno.t        18\n  lib/gdbm.t            2\n  lib/ndbm.t            2\n  lib/odbm.t            2\n  lib/sdbm.t            2\n  op/stat.t             9, 20 (.tmp not an executable extension)\nHard Links\nFAT partitions do not support hard links (whereas NTFS does), in which case Cygwin implements link() by copying the file. On remote (network) drives Cygwin's stat() always sets st_nlink to 1, so the link count for remote directories and files is not available. In either case, these tests will fail:\n  Failed Test           List of failed\n  ------------------------------------\n  io/fs.t               4\n  op/stat.t             3\nFiletime Granularity\nOn FAT partitions the filetime granularity is 2 seconds. The following test will fail:\n  Failed Test           List of failed\n  ------------------------------------\n  io/fs.t               18\nTainting Checks\nWhen Perl is running in taint mode, $ENV{PATH} is considered tainted and not used, so DLLs not in the default system directories will not be found. While the tests are running you will see warnings popup from the system with messages like:\n  Win9x\n    Error Starting Program\n    A required .DLL file, CYGWIN1.DLL, was not found\n  WinNT\n    perl.exe - Unable to Locate DLL\n    The dynamic link library cygwin1.dll could not be found in the\n      specified path ...\nJust click OK and ignore them. When running `make test', 2 popups occur. During `./perl harness', 4 popups occur. Also, these tests will fail:\n  Failed Test           List of failed\n  ------------------------------------\n  op/taint.t            1, 3, 31, 37\nAlternatively, you can copy cygwin1.dll into the directory where the tests run:\n  cp /bin/cygwin1.dll t\nor one of the Windows system directories (although, this is not recommended).\n/etc/group\nCygwin does not require /etc/group, in which case the op/grent.t test will be skipped. The check performed by op/grent.t expects to see entries that use the members field, otherwise this test will fail:\n  Failed Test           List of failed\n  ------------------------------------\n  op/grent.t            1\nScript Portability\nCygwin does an outstanding job of providing UNIX-like semantics on top of Win32 systems. However, in addition to the items noted above, there are some differences that you should know about. This is a very brief guide to portability, more information can be found in the Cygwin documentation.\nPathnames\nCygwin pathnames can be separated by forward (/) or backward (\\) slashes. They may also begin with drive letters (C:) or Universal Naming Codes (//UNC). DOS device names (aux, con, prn, com*, lpt?, nul) are invalid as base filenames. However, they can be used in extensions (e.g., hello.aux). Names may contain all printable characters except these:\n  : * ? \" < > |\nFile names are case insensitive, but case preserving. A pathname that contains a backslash or drive letter is a Win32 pathname (and not subject to the translations applied to POSIX style pathnames).\nText/Binary\nWhen a file is opened it is in either text or binary mode. In text mode a file is subject to CR/LF/Ctrl-Z translations. With Cygwin, the default mode for an open() is determined by the mode of the mount that underlies the file. Perl provides a binmode() function to set binary mode on files that otherwise would be treated as text. sysopen() with the O_TEXT flag sets text mode on files that otherwise would be treated as binary:\n    sysopen(FOO, \"bar\", O_WRONLY|O_CREAT|O_TEXT)\nlseek(), tell() and sysseek() only work with files opened in binary mode.\nThe text/binary issue is covered at length in the Cygwin documentation.\n.exe\nThe Cygwin stat(), lstat() and readlink() functions make the .exe extension transparent by looking for foo.exe when you ask for foo (unless a foo also exists). Cygwin does not require a .exe extension, but gcc adds it automatically when building a program. However, when accessing an executable as a normal file (e.g., cp in a makefile) the .exe is not transparent. The install included with Cygwin automatically appends a .exe when necessary.\nchown()\nOn WinNT chown() can change a file's user and group IDs. On Win9x chown() is a no-op, although this is appropriate since there is no security model.\nMiscellaneous\nFile locking using the F_GETLK command to fcntl() is a stub that returns ENOSYS.\nWin9x can not rename() an open file (although WinNT can).\nThe Cygwin chroot() implementation has holes (it can not restrict file access by native Win32 programs).\nINSTALL\nThis will install Perl, including man pages.\n  make install | tee log.make-install\nNOTE: If STDERR is redirected `make install' will not prompt you to install perl into /usr/bin.\nYou may need to be Administrator to run `make install'. If you are not, you must have write access to the directories in question.\nInformation on installing the Perl documentation in HTML format can be found in the INSTALL document.\nMANIFEST\nThese are the files in the Perl release that contain references to Cygwin. These very brief notes attempt to explain the reason for all conditional code. Hopefully, keeping this up to date will allow the Cygwin port to be kept as clean as possible.\nDocumentation\n  INSTALL README.cygwin README.win32 MANIFEST\n  Changes Changes5.005 Changes5.004 Changes5.6\n  pod/perl.pod pod/perlport.pod pod/perlfaq3.pod\n  pod/perldelta.pod pod/perl5004delta.pod pod/perl56delta.pod\n  pod/perlhist.pod pod/perlmodlib.pod pod/buildtoc.PL pod/perltoc.pod\nBuild, Configure, Make, Install\n  cygwin/Makefile.SHs\n  cygwin/ld2.in\n  cygwin/perlld.in\n  ext/IPC/SysV/hints/cygwin.pl\n  ext/NDBM_File/hints/cygwin.pl\n  ext/ODBM_File/hints/cygwin.pl\n  hints/cygwin.sh\n  Configure             - help finding hints from uname,\n                          shared libperl required for dynamic loading\n  Makefile.SH           - linklibperl\n  Porting/patchls       - cygwin in port list\n  installman            - man pages with :: translated to .\n  installperl           - install dll/ld2/perlld, install to pods\n  makedepend.SH         - uwinfix\nTests\n  t/io/tell.t           - binmode\n  t/lib/b.t             - ignore Cwd from os_extras\n  t/lib/glob-basic.t    - Win32 directory list access differs from read mode\n  t/op/magic.t          - $^X/symlink WORKAROUND, s/.exe//\n  t/op/stat.t           - no /dev, skip Win32 ftCreationTime quirk\n                          (cache manager sometimes preserves ctime of file\n                          previously created and deleted), no -u (setuid)\nCompiled Perl Source\n  EXTERN.h              - __declspec(dllimport)\n  XSUB.h                - __declspec(dllexport)\n  cygwin/cygwin.c       - os_extras (getcwd, spawn)\n  perl.c                - os_extras\n  perl.h                - binmode\n  doio.c                - win9x can not rename a file when it is open\n  pp_sys.c              - do not define h_errno, pp_system with spawn\n  util.c                - use setenv\nCompiled Module Source\n  ext/POSIX/POSIX.xs    - tzname defined externally\n  ext/SDBM_File/sdbm/pair.c\n                        - EXTCONST needs to be redefined from EXTERN.h\n  ext/SDBM_File/sdbm/sdbm.c\n                        - binary open\nPerl Modules/Scripts\n  lib/Cwd.pm            - hook to internal Cwd::cwd\n  lib/ExtUtils/MakeMaker.pm\n                        - require MM_Cygwin.pm\n  lib/ExtUtils/MM_Cygwin.pm\n                        - canonpath, cflags, manifypods, perl_archive\n  lib/File/Find.pm      - on remote drives stat() always sets st_nlink to 1\n  lib/File/Spec/Unix.pm - preserve //unc\n  lib/File/Temp.pm      - no directory sticky bit\n  lib/perl5db.pl        - use stdin not /dev/tty\n  utils/perldoc.PL      - version comment\nBUGS\nWhen make starts, it warns about overriding commands for perlmain.o.\n`make clean' does not remove library .def or .exe.stackdump files.\nThe ld2 script contains references to the source directory. You should change these to $installbin after `make install'.\nSupport for swapping real and effective user and group IDs is incomplete. On WinNT Cygwin provides setuid(), seteuid(), setgid() and setegid(). However, additional Cygwin calls for manipulating WinNT access tokens and security contexts are required.\nWhen building DLLs, `dllwrap --export-all-symbols' is used to export global symbols. It might be better to generate an explicit .def file (see makedef.pl). Also, DLLs can now be build with `gcc -shared'.\nAUTHORS\nCharles Wilson <cwilson@ece.gatech.edu>, Eric Fifer <egf7@columbia.edu>, alexander smishlajev <als@turnhere.com>, Steven Morlock <newspost@morlock.net>, Sebastien Barre <Sebastien.Barre@utc.fr>, Teun Burgers <burgers@ecn.nl>.\nHISTORY\nLast updated: 9 November 2000\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/dist/ExtUtils-CBuilder/lib/ExtUtils/CBuilder/Platform/VMS.pm": "package ExtUtils::CBuilder::Platform::VMS;\n$ExtUtils::CBuilder::Platform::VMS::VERSION = '0.280221';\nuse strict;\nuse ExtUtils::CBuilder::Base;\n\nuse vars qw(@ISA);\n@ISA = qw(ExtUtils::CBuilder::Base);\n\nuse File::Spec::Functions qw(catfile catdir);\nuse Config;\n\n# We do prelink, but don't want the parent to redo it.\n\nsub need_prelink { 0 }\n\nsub arg_defines {\n  my ($self, %args) = @_;\n\n  s/\"/\"\"/g foreach values %args;\n\n  my @config_defines;\n\n  # VMS can only have one define qualifier; add the one from config, if any.\n  if ($self->{config}{ccflags} =~ s{/  def[^=]+  =+  \\(?  ([^\\/\\)]*)  } {}ix) {\n    push @config_defines, $1;\n  }\n\n  return '' unless keys(%args) || @config_defines;\n\n  return ('/define=(' \n          . join(',', \n\t\t @config_defines,\n                 map \"\\\"$_\" . ( length($args{$_}) ? \"=$args{$_}\" : '') . \"\\\"\", \n                     keys %args) \n          . ')');\n}\n\nsub arg_include_dirs {\n  my ($self, @dirs) = @_;\n\n  # VMS can only have one include list, add the one from config.\n  if ($self->{config}{ccflags} =~ s{/inc[^=]+(?:=)+(?:\\()?([^\\/\\)]*)} {}i) {\n    unshift @dirs, $1;\n  }\n  return unless @dirs;\n\n  return ('/include=(' . join(',', @dirs) . ')');\n}\n\n# We override the compile method because we consume the includes and defines\n# parts of ccflags in the process of compiling but don't save those parts\n# anywhere, so $self->{config}{ccflags} needs to be reset for each compile\n# operation.  \n\nsub compile {\n  my ($self, %args) = @_;\n\n  $self->{config}{ccflags} = $Config{ccflags};\n  $self->{config}{ccflags} = $ENV{CFLAGS} if defined $ENV{CFLAGS};\n\n  return $self->SUPER::compile(%args);\n}\n\nsub _do_link {\n  my ($self, $type, %args) = @_;\n  \n  my $objects = delete $args{objects};\n  $objects = [$objects] unless ref $objects;\n  \n  if ($args{lddl}) {\n\n    # prelink will call Mksymlists, which creates the extension-specific\n    # linker options file and populates it with the boot symbol.\n\n    my @temp_files = $self->prelink(%args, dl_name => $args{module_name});\n\n    # We now add the rest of what we need to the linker options file.  We\n    # should replicate the functionality of C<ExtUtils::MM_VMS::dlsyms>,\n    # but there is as yet no infrastructure for handling object libraries,\n    # so for now we depend on object files being listed individually on the \n    # command line, which should work for simple cases.  We do bring in our\n    # own version of C<ExtUtils::Liblist::Kid::ext> so that any additional\n    # libraries (including PERLSHR) can be added to the options file.\n\n    my @optlibs = $self->_liblist_ext( $args{'libs'} );\n\n    my $optfile = 'sys$disk:[]' . $temp_files[0];\n    open my $opt_fh, '>>', $optfile \n        or die \"_do_link: Unable to open $optfile: $!\";\n    for my $lib (@optlibs) {print $opt_fh \"$lib\\n\" if length $lib }\n    close $opt_fh;\n\n    $objects->[-1] .= ',';\n    push @$objects, $optfile . '/OPTIONS,';\n\n    # This one not needed for DEC C, but leave for completeness.\n    push @$objects, $self->perl_inc() . 'perlshr_attr.opt/OPTIONS';\n  }\n\n  return $self->SUPER::_do_link($type, %args, objects => $objects);\n}\n\nsub arg_nolink { return; }\n\nsub arg_object_file {\n  my ($self, $file) = @_;\n  return \"/obj=$file\";\n}\n\nsub arg_exec_file {\n  my ($self, $file) = @_;\n  return (\"/exe=$file\");\n}\n\nsub arg_share_object_file {\n  my ($self, $file) = @_;\n  return (\"$self->{config}{lddlflags}=$file\");\n}\n\n# The following is reproduced almost verbatim from ExtUtils::Liblist::Kid::_vms_ext.\n# We can't just call that because it's tied up with the MakeMaker object hierarchy.\n\nsub _liblist_ext {\n  my($self, $potential_libs,$verbose,$give_libs) = @_;\n  $verbose ||= 0;\n\n  my(@crtls,$crtlstr);\n  @crtls = ( ($self->{'config'}{'ldflags'} =~ m-/Debug-i ? $self->{'config'}{'dbgprefix'} : '')\n              . 'PerlShr/Share' );\n  push(@crtls, grep { not /\\(/ } split /\\s+/, $self->{'config'}{'perllibs'});\n  push(@crtls, grep { not /\\(/ } split /\\s+/, $self->{'config'}{'libc'});\n  # In general, we pass through the basic libraries from %Config unchanged.\n  # The one exception is that if we're building in the Perl source tree, and\n  # a library spec could be resolved via a logical name, we go to some trouble\n  # to ensure that the copy in the local tree is used, rather than one to\n  # which a system-wide logical may point.\n  if ($self->perl_src) {\n    my($lib,$locspec,$type);\n    foreach $lib (@crtls) { \n      if (($locspec,$type) = $lib =~ m{^([\\w\\$-]+)(/\\w+)?} and $locspec =~ /perl/i) {\n        if    (lc $type eq '/share')   { $locspec .= $self->{'config'}{'exe_ext'}; }\n        elsif (lc $type eq '/library') { $locspec .= $self->{'config'}{'lib_ext'}; }\n        else                           { $locspec .= $self->{'config'}{'obj_ext'}; }\n        $locspec = catfile($self->perl_src, $locspec);\n        $lib = \"$locspec$type\" if -e $locspec;\n      }\n    }\n  }\n  $crtlstr = @crtls ? join(' ',@crtls) : '';\n\n  unless ($potential_libs) {\n    warn \"Result:\\n\\tEXTRALIBS: \\n\\tLDLOADLIBS: $crtlstr\\n\" if $verbose;\n    return ('', '', $crtlstr, '', ($give_libs ? [] : ()));\n  }\n\n  my(@dirs,@libs,$dir,$lib,%found,@fndlibs,$ldlib);\n  my $cwd = cwd();\n  my($so,$lib_ext,$obj_ext) = @{$self->{'config'}}{'so','lib_ext','obj_ext'};\n  # List of common Unix library names and their VMS equivalents\n  # (VMS equivalent of '' indicates that the library is automatically\n  # searched by the linker, and should be skipped here.)\n  my(@flibs, %libs_seen);\n  my %libmap = ( 'm' => '', 'f77' => '', 'F77' => '', 'V77' => '', 'c' => '',\n                 'malloc' => '', 'crypt' => '', 'resolv' => '', 'c_s' => '',\n                 'socket' => '', 'X11' => 'DECW$XLIBSHR',\n                 'Xt' => 'DECW$XTSHR', 'Xm' => 'DECW$XMLIBSHR',\n                 'Xmu' => 'DECW$XMULIBSHR');\n\n  warn \"Potential libraries are '$potential_libs'\\n\" if $verbose;\n\n  # First, sort out directories and library names in the input\n  foreach $lib (split ' ',$potential_libs) {\n    push(@dirs,$1),   next if $lib =~ /^-L(.*)/;\n    push(@dirs,$lib), next if $lib =~ /[:>\\]]$/;\n    push(@dirs,$lib), next if -d $lib;\n    push(@libs,$1),   next if $lib =~ /^-l(.*)/;\n    push(@libs,$lib);\n  }\n  push(@dirs,split(' ',$self->{'config'}{'libpth'}));\n\n  # Now make sure we've got VMS-syntax absolute directory specs\n  # (We don't, however, check whether someone's hidden a relative\n  # path in a logical name.)\n  foreach $dir (@dirs) {\n    unless (-d $dir) {\n      warn \"Skipping nonexistent Directory $dir\\n\" if $verbose > 1;\n      $dir = '';\n      next;\n    }\n    warn \"Resolving directory $dir\\n\" if $verbose;\n    if (!File::Spec->file_name_is_absolute($dir)) { \n        $dir = catdir($cwd,$dir); \n    }\n  }\n  @dirs = grep { length($_) } @dirs;\n  unshift(@dirs,''); # Check each $lib without additions first\n\n  LIB: foreach $lib (@libs) {\n    if (exists $libmap{$lib}) {\n      next unless length $libmap{$lib};\n      $lib = $libmap{$lib};\n    }\n\n    my(@variants,$variant,$cand);\n    my($ctype) = '';\n\n    # If we don't have a file type, consider it a possibly abbreviated name and\n    # check for common variants.  We try these first to grab libraries before\n    # a like-named executable image (e.g. -lperl resolves to perlshr.exe\n    # before perl.exe).\n    if ($lib !~ /\\.[^:>\\]]*$/) {\n      push(@variants,\"${lib}shr\",\"${lib}rtl\",\"${lib}lib\");\n      push(@variants,\"lib$lib\") if $lib !~ /[:>\\]]/;\n    }\n    push(@variants,$lib);\n    warn \"Looking for $lib\\n\" if $verbose;\n    foreach $variant (@variants) {\n      my($fullname, $name);\n\n      foreach $dir (@dirs) {\n        my($type);\n\n        $name = \"$dir$variant\";\n        warn \"\\tChecking $name\\n\" if $verbose > 2;\n        $fullname = VMS::Filespec::rmsexpand($name);\n        if (defined $fullname and -f $fullname) {\n          # It's got its own suffix, so we'll have to figure out the type\n          if    ($fullname =~ /(?:$so|exe)$/i)      { $type = 'SHR'; }\n          elsif ($fullname =~ /(?:$lib_ext|olb)$/i) { $type = 'OLB'; }\n          elsif ($fullname =~ /(?:$obj_ext|obj)$/i) {\n            warn \"Note (probably harmless): \"\n                .\"Plain object file $fullname found in library list\\n\";\n            $type = 'OBJ';\n          }\n          else {\n            warn \"Note (probably harmless): \"\n                .\"Unknown library type for $fullname; assuming shared\\n\";\n            $type = 'SHR';\n          }\n        }\n        elsif (-f ($fullname = VMS::Filespec::rmsexpand($name,$so))      or\n               -f ($fullname = VMS::Filespec::rmsexpand($name,'.exe')))     {\n          $type = 'SHR';\n          $name = $fullname unless $fullname =~ /exe;?\\d*$/i;\n        }\n        elsif (not length($ctype) and  # If we've got a lib already, \n                                       # don't bother\n               ( -f ($fullname = VMS::Filespec::rmsexpand($name,$lib_ext)) or\n                 -f ($fullname = VMS::Filespec::rmsexpand($name,'.olb'))))  {\n          $type = 'OLB';\n          $name = $fullname unless $fullname =~ /olb;?\\d*$/i;\n        }\n        elsif (not length($ctype) and  # If we've got a lib already, \n                                       # don't bother\n               ( -f ($fullname = VMS::Filespec::rmsexpand($name,$obj_ext)) or\n                 -f ($fullname = VMS::Filespec::rmsexpand($name,'.obj'))))  {\n          warn \"Note (probably harmless): \"\n\t\t       .\"Plain object file $fullname found in library list\\n\";\n          $type = 'OBJ';\n          $name = $fullname unless $fullname =~ /obj;?\\d*$/i;\n        }\n        if (defined $type) {\n          $ctype = $type; $cand = $name;\n          last if $ctype eq 'SHR';\n        }\n      }\n      if ($ctype) { \n        push @{$found{$ctype}}, $cand;\n        warn \"\\tFound as $cand (really $fullname), type $ctype\\n\" \n          if $verbose > 1;\n\tpush @flibs, $name unless $libs_seen{$fullname}++;\n        next LIB;\n      }\n    }\n    warn \"Note (probably harmless): \"\n\t\t .\"No library found for $lib\\n\";\n  }\n\n  push @fndlibs, @{$found{OBJ}}                      if exists $found{OBJ};\n  push @fndlibs, map { \"$_/Library\" } @{$found{OLB}} if exists $found{OLB};\n  push @fndlibs, map { \"$_/Share\"   } @{$found{SHR}} if exists $found{SHR};\n  $lib = join(' ',@fndlibs);\n\n  $ldlib = $crtlstr ? \"$lib $crtlstr\" : $lib;\n  warn \"Result:\\n\\tEXTRALIBS: $lib\\n\\tLDLOADLIBS: $ldlib\\n\" if $verbose;\n  wantarray ? ($lib, '', $ldlib, '', ($give_libs ? \\@flibs : ())) : $lib;\n}\n\n1;\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/os2/dlfcn.h": "void *dlopen(const char *path, int mode);\nvoid *dlsym(void *handle, const char *symbol);\nchar *dlerror(void);\nint dlclose(void *handle);\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/os2/os2.sym": "ctermid\nget_sysinfo\nPerl_OS2_init\nOS2_Perl_data\ndlopen\ndlsym\ndlerror\ndlclose\nmy_tmpfile\nmy_tmpnam\nmy_flock\nmy_rmdir\nmy_mkdir\nmalloc_mutex\nthreads_mutex\nnthreads\nnthreads_cond\nos2_cond_wait\npthread_join\npthread_create\npthread_detach\nXS_Cwd_change_drive\nXS_Cwd_current_drive\nXS_Cwd_extLibpath\nXS_Cwd_extLibpath_set\nXS_Cwd_sys_abspath\nXS_Cwd_sys_chdir\nXS_Cwd_sys_cwd\nXS_Cwd_sys_is_absolute\nXS_Cwd_sys_is_relative\nXS_Cwd_sys_is_rooted\nXS_DynaLoader_mod2fname\nXS_File__Copy_syscopy\nPerl_Register_MQ\nPerl_Deregister_MQ\nPerl_Serve_Messages\nPerl_Process_Messages\ninit_PMWIN_entries\nPMWIN_entries\nPerl_hab_GET\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/os2/dl_os2.c": "#include \"dlfcn.h\"\n#include \"string.h\"\n#include \"stdio.h\"\n\n#define INCL_BASE\n#include <os2.h>\n#include <float.h>\n#include <stdlib.h>\n\nstatic ULONG retcode;\nstatic char fail[300];\n\nstatic ULONG dllHandle;\nstatic int handle_found;\nstatic int handle_loaded;\n#ifdef PERL_CORE\n\n#include \"EXTERN.h\"\n#include \"perl.h\"\n\n#else\n\nchar *os2error(int rc);\n\n#endif\n\n#ifdef DLOPEN_INITTERM\nunsigned long _DLL_InitTerm(unsigned long modHandle, unsigned long flag)\n{\n    switch (flag) {\n    case 0:     /* INIT */\n        /* Save handle */\n        dllHandle = modHandle;\n\thandle_found = 1;\n        return TRUE;\n\n    case 1:     /* TERM */\n\thandle_found = 0;\n        dllHandle = (unsigned long)NULLHANDLE;\n        return TRUE;\n    }\n\n    return FALSE;\n}\n\n#endif\n\nHMODULE\nfind_myself(void)\n{\n\n  static APIRET APIENTRY (*pDosQueryModFromEIP) (HMODULE * hmod, ULONG * obj, ULONG BufLen, PCHAR Buf,\n\t\t    ULONG * Offset, ULONG Address);\n  HMODULE doscalls_h, mod;\n  static int failed;\n  ULONG obj, offset, rc;\n  char buf[260];\n\n  if (failed)\n\treturn 0;\n  failed = 1;\n  doscalls_h = (HMODULE)dlopen(\"DOSCALLS\",0);\n  if (!doscalls_h)\n\treturn 0;\n/*  {&doscalls_handle, NULL, 360}, */\t/* DosQueryModFromEIP */\n  rc = DosQueryProcAddr(doscalls_h, 360, 0, (PFN*)&pDosQueryModFromEIP);\n  if (rc)\n\treturn 0;\n  rc = pDosQueryModFromEIP(&mod, &obj, sizeof(buf), buf, &offset, (ULONG)dlopen);\n  if (rc)\n\treturn 0;\n  failed = 0;\n  handle_found = 1;\n  dllHandle = mod;\n  return mod;\n}\n\nvoid *\ndlopen(const char *path, int mode)\n{\n\tHMODULE handle;\n\tchar tmp[260];\n\tconst char *beg, *dot;\n\tULONG rc;\n\tunsigned fpflag = _control87(0,0);\n\n\tfail[0] = 0;\n\tif (!path) {\t\t\t/* Our own handle. */\n\t    if (handle_found || find_myself()) {\n\t\tchar dllname[260];\n\n\t\tif (handle_loaded)\n\t\t    return (void*)dllHandle;\n\t\trc = DosQueryModuleName(dllHandle, sizeof(dllname), dllname);\n\t\tif (rc) {\n\t            strcpy(fail, \"can't find my DLL name by the handle\");\n\t\t    retcode = rc;\n\t\t    return 0;\n\t\t}\n\t\trc = DosLoadModule(fail, sizeof fail, dllname, &handle);\n\t\tif (rc) {\n\t            strcpy(fail, \"can't load my own DLL\");\n\t\t    retcode = rc;\n\t\t    return 0;\n\t\t}\n\t\thandle_loaded = 1;\n\t\tgoto ret;\n\t    }\n\t    retcode = ERROR_MOD_NOT_FOUND;\n            strcpy(fail, \"can't load from myself: compiled without -DDLOPEN_INITTERM\");\n\t    return 0;\n\t}\n\tif ((rc = DosLoadModule(fail, sizeof fail, (char*)path, &handle)) == 0)\n\t\tgoto ret;\n\n\tretcode = rc;\n\n\tif (strlen(path) >= sizeof(tmp))\n\t    return NULL;\n\n\t/* Not found. Check for non-FAT name and try truncated name. */\n\t/* Don't know if this helps though... */\n\tfor (beg = dot = path + strlen(path);\n\t     beg > path && !strchr(\":/\\\\\", *(beg-1));\n\t     beg--)\n\t\tif (*beg == '.')\n\t\t\tdot = beg;\n\tif (dot - beg > 8) {\n\t\tint n = beg+8-path;\n\n\t\tmemmove(tmp, path, n);\n\t\tmemmove(tmp+n, dot, strlen(dot)+1);\n\t\tif (DosLoadModule(fail, sizeof fail, tmp, &handle) == 0)\n\t\t    goto ret;\n\t}\n\thandle = 0;\n\n      ret:\n\t_control87(fpflag, MCW_EM); /* Some modules reset FP flags on load */\n\treturn (void *)handle;\n}\n\n#define ERROR_WRONG_PROCTYPE 0xffffffff\n\nvoid *\ndlsym(void *handle, const char *symbol)\n{\n\tULONG rc, type;\n\tPFN addr;\n\n\tfail[0] = 0;\n\trc = DosQueryProcAddr((HMODULE)handle, 0, symbol, &addr);\n\tif (rc == 0) {\n\t\trc = DosQueryProcType((HMODULE)handle, 0, symbol, &type);\n\t\tif (rc == 0 && type == PT_32BIT)\n\t\t\treturn (void *)addr;\n\t\trc = ERROR_WRONG_PROCTYPE;\n\t}\n\tretcode = rc;\n\treturn NULL;\n}\n\nchar *\ndlerror(void)\n{\n\tstatic char buf[700];\n\tULONG len;\n\tchar *err;\n\n\tif (retcode == 0)\n\t\treturn NULL;\n\tif (retcode == ERROR_WRONG_PROCTYPE)\n\t    err = \"Wrong procedure type\";\n\telse\n\t    err = os2error(retcode);\n\tlen = strlen(err);\n\tif (len > sizeof(buf) - 1)\n\t    len = sizeof(buf) - 1;\n\tstrncpy(buf, err, len+1);\n\tif (fail[0] && len + strlen(fail) < sizeof(buf) - 100)\n\t    sprintf(buf + len, \", possible problematic module: '%s'\", fail);\n\tretcode = 0;\n\treturn buf;\n}\n\nint\ndlclose(void *handle)\n{\n\tULONG rc;\n\n\tif ((rc = DosFreeModule((HMODULE)handle)) == 0) return 0;\n\n\tretcode = rc;\n\treturn 2;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/os2/os2add.sym": "dlopen\ndlsym\ndlerror\ndlclose\nmalloc\nrealloc\nfree\ncalloc\nctermid\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/symbian/config.sh": "#!\\\\bin\\\\sh\nAuthor=''\n_a='.a'\n_o='.o'\nafs='false'\nafsroot='/afs'\nalignbytes='4'\naphostname='localhost'\napiversion='5.005'\nar=':'\narchlib='\\\\system\\\\libs\\\\perl\\\\x.y.z\\\\thumb-symbian'\narchlibexp='\\\\system\\\\libs\\\\perl\\\\x.y.z\\\\thumb-symbian'\narchname='thumb-symbian'\nasctime_r_proto='0'\nbin='\\\\system\\\\apps\\\\perl'\nbincompat5005='n'\nbinexp='\\\\system\\\\apps\\\\perl'\nbootstrap_charset='undef'\nbyteorder='1234'\ncastflags='0'\ncc='gcc'\ncccdlflags=''\nccdlflags=''\ncf_by='root@localhost'\ncf_time='Thu Jan  1 00:00:00 GMT 1970'\ncharbits='8'\nclocktype='clock_t'\ncpp_stuff='42'\ncpplast=''\ncppminus='-'\ncpprun='gcc -E'\ncppstdin='gcc -E'\ncrypt_r_proto='0'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEUldbl='undef'\nd_PRIFUldbl='undef'\nd_PRIGUldbl='undef'\nd_PRIXU64='undef'\nd_PRId64='undef'\nd_PRIeldbl='undef'\nd_PRIfldbl='undef'\nd_PRIgldbl='undef'\nd_PRIi64='undef'\nd_PRIo64='undef'\nd_PRIu64='undef'\nd_PRIx64='undef'\nd_SCNfldbl='undef'\nd__fwalk='undef'\nd_access='undef'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='undef'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='undef'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bcmp='undef'\nd_bcopy='undef'\nd_bsd='undef'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_bzero='undef'\nd_c99_variadic_macros='undef'\nd_casti32='undef'\nd_castneg='undef'\nd_cbrt='undef'\nd_charvspr='undef'\nd_chown='undef'\nd_chroot='undef'\nd_chsize='undef'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='undef'\nd_cmsghdr_s='undef'\nd_const='define'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='undef'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='undef'\nd_dbl_dig='undef'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='undef'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='define'\nd_dladdr='undef'\nd_dlerror='undef'\nd_dlopen='undef'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='undef'\nd_eaccess='undef'\nd_endgrent='undef'\nd_endgrent_r='undef'\nd_endhent='undef'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='undef'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_eofnblk='undef'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='undef'\nd_fchdir='undef'\nd_fchmod='undef'\nd_fchown='undef'\nd_fcntl='undef'\nd_fcntl_can_lock='undef'\nd_fd_macros='undef'\nd_fd_set='undef'\nd_fdim='undef'\nd_fds_bits='undef'\nd_fegetround='undef'\nd_fgetpos='undef'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='define'\nd_flock='undef'\nd_flockproto='undef'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='undef'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='undef'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='define'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='undef'\nd_ftello='undef'\nd_ftime='undef'\nd_futimes='undef'\nd_futimesat='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='undef'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='undef'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='undef'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='undef'\nd_getlogin='undef'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='undef'\nd_getpagsz='undef'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='undef'\nd_getppid='undef'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='undef'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspent='undef'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='define'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_hasmntopt='undef'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='undef'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='undef'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='undef'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='undef'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='undef'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='undef'\nd_link='undef'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='undef'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_longdbl='undef'\nd_longlong='undef'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='undef'\nd_lstat='undef'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='undef'\nd_mbstowcs='undef'\nd_mbtowc='undef'\nd_memchr='define'\nd_memcmp='define'\nd_memcpy='define'\nd_memmove='define'\nd_memset='define'\nd_mkdir='define'\nd_mkdtemp='undef'\nd_mkfifo='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='undef'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='undef'\nd_nan='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='undef'\nd_nv_zero_is_allbits_zero='define'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='undef'\nd_pathconf='undef'\nd_pause='undef'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe='undef'\nd_poll='undef'\nd_portable='undef'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='undef'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='undef'\nd_readv='undef'\nd_recvmsg='undef'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_safebcpy='undef'\nd_safemcpy='undef'\nd_sanemcmp='undef'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='define'\nd_select='undef'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='undef'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='undef'\nd_setlocale='undef'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='undef'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='undef'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='undef'\nd_setvbuf='define'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='undef'\nd_signbit='undef'\nd_sigprocmask='undef'\nd_sigsetjmp='undef'\nd_sin6_scope_id='undef'\nd_sitearch='define'\nd_sitecustomize='undef'\nd_sitecustomize='undef'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='undef'\nd_sockpair='undef'\nd_socks5_init='undef'\nd_sprintf_returns_strlen='define'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='undef'\nd_statvfs='undef'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='undef'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='undef'\nd_stdstdio='undef'\nd_strchr='define'\nd_strcoll='undef'\nd_strctcpy='undef'\nd_strerrm='strerror(e)'\nd_strerror='define'\nd_strerror_r='undef'\nd_strftime='undef'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strtod='define'\nd_strtol='define'\nd_strtold='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='undef'\nd_suidsafe='undef'\nd_symlink='undef'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='undef'\nd_sysernlst=''\nd_syserrlst='undef'\nd_system='define'\nd_tcgetpgrp='undef'\nd_tcsetpgrp='undef'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='undef'\nd_time='define'\nd_timegm='undef'\nd_times='define'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='undef'\nd_u32align='define'\nd_ualarm='undef'\nd_umask='undef'\nd_uname='undef'\nd_union_semun='undef'\nd_unordered='undef'\nd_unsetenv='undef'\nd_usleep='define'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='undef'\nd_voidtty=''\nd_volatile='define'\nd_vprintf='define'\nd_vsnprintf='undef'\nd_wait4='undef'\nd_waitpid='undef'\nd_wcscmp='undef'\nd_wcstombs='undef'\nd_wcsxfrm='undef'\nd_wctomb='undef'\nd_writev='undef'\nd_xenix='undef'\ndb_hashtype='u_int32_t'\ndb_prefixtype='size_t'\ndb_version_major='0'\ndb_version_minor='0'\ndb_version_patch='0'\ndirentrytype='struct dirent'\ndlext='dll'\ndlsrc='dl_symbian.xs'\ndoublekind='4'\ndoublesize='8'\ndrand01=\"((rand() & 0x7FFF) / (double) ((unsigned long)1 << 15))\"\ndrand48_r_proto='0'\ndtrace=''\neagain='EAGAIN'\nebcdic='undef'\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext='.exe'\nfflushNULL='undef'\nfflushall='undef'\nfirstmakefile='makefile'\nfpossize='4'\nfpostype=fpos_t\nfreetype=void\nfull_ar=':'\nfull_csh=':'\nfull_sed=':'\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"lu\"'\ngidsign='1'\ngidsize='4'\ngidtype=int\ngmtime_r_proto='0'\ngroupstype=int\nh_fcntl='false'\nh_sysfile='true'\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='int64_t'\ni8size='1'\ni8type='char'\ni_arpainet='undef'\ni_assert='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='undef'\ni_execinfo='undef'\ni_fcntl='define'\ni_fenv='undef'\ni_float='undef'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='undef'\ni_ieeefp='undef'\ni_inttypes='undef'\ni_langinfo='undef'\ni_libutil='undef'\ni_limits='define'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='undef'\ni_mallocmalloc='undef'\ni_math='define'\ni_memory='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='define'\ni_neterrno='undef'\ni_netinettcp='undef'\ni_niin='define'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='define'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdarg='define'\ni_stdbool='undef'\ni_stddef='undef'\ni_stdint='undef'\ni_stdlib='define'\ni_string='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='undef'\ni_sysin='undef'\ni_sysioctl='define'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='undef'\ni_syspoll='undef'\ni_sysresrc='undef'\ni_syssecrt='undef'\ni_sysselct='undef'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='define'\ni_systimek='undef'\ni_systimes='define'\ni_systypes='define'\ni_sysuio='undef'\ni_sysun='undef'\ni_sysutsname='undef'\ni_sysvfs='undef'\ni_syswait='undef'\ni_termio='undef'\ni_termios='undef'\ni_time='define'\ni_unistd='define'\ni_ustat='undef'\ni_utime='undef'\ni_values='undef'\ni_varargs='undef'\ni_varhdr='stdarg.h'\ni_vfork='undef'\nignore_versioned_solibs='y'\ninc_version_list=''\ninc_version_list_init='0'\ninstallprefix='\\\\system'\ninstallprefixexp='\\\\system'\ninstallsitearch='\\\\system\\\\libs\\\\perl\\\\siteperl\\\\x.y.z\\\\thumb-symbian'\ninstallsitelib='\\\\system\\\\libs\\\\perl\\\\siteperl\\\\x.y.z'\ninstallstyle='lib\\\\perl5'\ninstallusrbinperl='undef'\nintsize='4'\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nld=':'\nlddlflags=''\nldflags=''\nlib_ext='.a'\nlibc='stdlib'\nlibm_lib_version='0'\nlibperl='libperl.a'\nlocaltime_r_proto='0'\nlongdblkind=0\nlongdblsize=8\nlonglongsize=8\nlongsize='4'\nlseeksize=4\nlseektype=int\nmad='undef'\nmake='make'\nmalloctype='int*'\nmalloctype='void *'\nmmaptype='void *'\nmodetype='mode_t'\nmodetype=int\nmultiarch='undef'\nmyarchname='thumb-symbian'\nmyuname='symbian'\nneed_va_copy='undef'\nnetdb_hlen_type='int'\nnetdb_host_type='const char *'\nnetdb_name_type='const char *'\nnetdb_net_type='unsigned long'\nnroff='nroff'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='0'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.o'\nold_pthread_create_joinable=''\noptimize='-O2'\norderlib='false'\nosname='symbian'\nosvers='7.0s'\notherlibdirs=''\npackage=''\npath_sep=';'\nperl_static_inline='static'\nphostname='hostname'\npidtype='int'\npm_apiversion='5.005'\nprivlib='\\\\system\\\\libs\\\\perl\\\\x.y.z'\nprivlibexp='\\\\system\\\\libs\\\\perl\\\\x.y.z'\nprocselfexe=''\nprototype='define'\nptrsize='4'\nquadkind='4'\nquadtype='int64_t'\nrandbits='48'\nrandfunc='drand48'\nrandom_r_proto='0'\nrandseedtype='int'\nranlib=':'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEUldbl='\"llE\"'\nsPRIFUldbl='\"llF\"'\nsPRIGUldbl='\"llG\"'\nsPRIXU64='\"LX\"'\nsPRId64='\"Ld\"'\nsPRIeldbl=''\nsPRIfldbl=''\nsPRIgldbl=''\nsPRIi64='\"Li\"'\nsPRIo64='\"Lo\"'\nsPRIu64='\"Lu\"'\nsPRIx64='\"Lx\"'\nsSCNfldbl=''\nsched_yield='sched_yield()'\nscriptdir='\\\\system\\\\apps\\\\perl'\nscriptdirexp='\\\\system\\\\apps\\\\perl'\nsdkvers=''\nseedfunc='srand'\nselectminbits='32'\nselecttype=int\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh=':'\nshmattype='void *'\nshortsize=2\nsig_name_init='0'\nsig_num_init='0'\nsig_size='1'\nsignal_t=void\nsitearch='\\\\system\\\\libs\\\\perl\\\\siteperl\\\\x.y.z\\\\thumb-symbian'\nsitearchexp='\\\\system\\\\libs\\\\perl\\\\siteperl\\\\x.y.z\\\\thumb-symbian'\nsitelib='\\\\system\\\\libs\\\\perl\\\\siteperl\\\\x.y.z'\nsitelib_stem='\\\\system\\\\libs\\\\perl'\nsitelibexp='\\\\system\\\\libs\\\\perl\\\\siteperl\\\\x.y.z'\nsiteprefix='\\\\system'\nsiteprefixexp='\\\\system'\nsizesize=4\nsizetype=size_t\nso='o'\nsocksizetype='unsigned int'\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc=''\nssizetype=int\nst_ino_sign='1'\nst_ino_size='4'\nstartperl=''\nstdchar=char\nstdio_base='((fp)->_IO_read_base)'\nstdio_bufsiz='((fp)->_IO_read_end - (fp)->_IO_read_base)'\nstdio_cnt='((fp)->_IO_read_end - (fp)->_IO_read_ptr)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_IO_read_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\ntargetarch='thumb-symbian'\ntargetsh=':'\ntimetype=time_t\ntmpnam_r_proto='0'\ntouch='touch'\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='uint64_t'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"lu\"'\nuidsign='1'\nuidsize='4'\nuidtype=int\nuquadtype='uint64_t'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='undef'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='undef'\nuselongdouble='undef'\nusemallocwrap='define'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='false'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='n'\nusevfork='false'\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvaproto='undef'\nvendorarch=''\nvendorarchexp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorprefix=''\nvendorprefixexp=''\nversion='x.y.z'\nversiononly='undef'\nxs_apiversion='5.008'\nzip=''\nPERL_CONFIG_SH='true'\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/Cross/config.sh-arm-linux": "#!/bin/sh\n#\n# This file was produced by running the Configure script. It holds all the\n# definitions figured out by Configure. Should you modify one of these values,\n# do not forget to propagate your changes by running \"Configure -der\". You may\n# instead choose to run each of the .SH files by yourself, or \"Configure -S\".\n#\n\n# Package name      : perl5\n# Source directory  : .\n# Configuration time: Wed Sep  3 22:24:58 EDT 2003\n# Configured by     : red\n# Target system     : linux openzaurus.criticalintegration.com 2.4.6-rmk1-np2-embedix #15 Wed Aug 6 07:49:44 UTC 2003 armv4l unknown \n\nAuthor=''\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nMcc='Mcc'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.a'\n_exe=''\n_o='.o'\nafs='false'\nafsroot='/afs'\nalignbytes='4'\nansi2knr=''\naphostname='/bin/hostname'\napi_revision='5'\napi_subversion='0'\napi_version='22'\napi_versionstring='5.22.0'\nar='ar'\narchlib='/usr/lib/perl5/5.22.0/armv4l-linux'\narchlibexp='/usr/lib/perl5/5.22.0/armv4l-linux'\narchname64=''\narchname='armv4l-linux'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5.0'\nbash=''\nbin='/usr/bin'\nbinexp='/usr/bin'\nbison='bison'\nbootstrap_charset='undef'\nbyacc='byacc'\nbyteorder='1234'\nc=''\ncastflags='0'\ncat='cat'\ncc='cc'\ncccdlflags='-fpic'\nccdlflags='-rdynamic -Wl,-rpath,/usr/lib/perl5/5.22.0/armv4l-linux/CORE'\nccflags='-fno-strict-aliasing -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\nccflags_uselargefiles='-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\nccname='arm-linux-gcc'\nccsymbols='__APCS_32__=1 __ARM_ARCH_3__=1 __CHAR_UNSIGNED__=1 __GNUC_MINOR__=95 __arm__=1 __linux=1 __linux__=1 __unix=1 __unix__=1 cpu=arm machine=arm system=posix system=unix'\nccversion=''\ncf_by='red'\ncf_email='red@criticalintegration.com'\ncf_time='Wed Sep  3 22:24:58 EDT 2003'\ncharbits='8'\nchgrp=''\nchmod='chmod'\nchown=''\nclocktype='clock_t'\ncomm='comm'\ncompress=''\ncontains='grep'\ncp='cp'\ncpio=''\ncpp='cpp'\ncpp_stuff='42'\ncppccsymbols='__ELF__=1 __GNUC__=2 linux=1 unix=1'\ncppflags='-fno-strict-aliasing -I/usr/local/include'\ncpplast='-'\ncppminus='-'\ncpprun='cc -E'\ncppstdin='cc -E'\ncppsymbols='_FILE_OFFSET_BITS=64 __GLIBC__=2 __GLIBC_MINOR__=2 __GNUC_MINOR__=95 __GNU_LIBRARY__=6 _LARGEFILE_SOURCE=1 _POSIX_C_SOURCE=199506 _POSIX_SOURCE=1 __STDC__=1 __USE_BSD=1 __USE_FILE_OFFSET64=1 __USE_LARGEFILE=1 __USE_MISC=1 __USE_POSIX=1 __USE_POSIX199309=1 __USE_POSIX199506=1 __USE_POSIX2=1 __USE_SVID=1 __linux=1 __linux__=1 __unix=1 __unix__=1'\ncrypt_r_proto='0'\ncryptlib=''\ncsh='csh'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='gcvt((x),(n),(b))'\nd_PRIEUldbl='define'\nd_PRIFUldbl='define'\nd_PRIGUldbl='define'\nd_PRIXU64='define'\nd_PRId64='define'\nd_PRIeldbl='define'\nd_PRIfldbl='define'\nd_PRIgldbl='define'\nd_PRIi64='define'\nd_PRIo64='define'\nd_PRIu64='define'\nd_PRIx64='define'\nd_SCNfldbl='define'\nd__fwalk='undef'\nd_access='define'\nd_accessx='undef'\nd_acosh='define'\nd_aintl='undef'\nd_alarm='define'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='define'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bcmp='define'\nd_bcopy='define'\nd_bsd='undef'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_choose_expr='define'\nd_builtin_expect='define'\nd_bzero='define'\nd_c99_variadic_macros='undef'\nd_casti32='define'\nd_castneg='define'\nd_cbrt='undef'\nd_charvspr='undef'\nd_chown='define'\nd_chroot='define'\nd_chsize='undef'\nd_class='undef'\nd_clearenv='define'\nd_closedir='define'\nd_cmsghdr_s='define'\nd_const='define'\nd_copysign='undef'\nd_copysignl='define'\nd_cplusplus='undef'\nd_crypt='define'\nd_crypt_r='undef'\nd_csh='define'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='define'\nd_dbl_dig='define'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='define'\nd_dirnamlen='undef'\nd_dladdr='undef'\nd_dlerror='define'\nd_dlopen='define'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_drand48_r='undef'\nd_drand48proto='define'\nd_dup2='define'\nd_eaccess='undef'\nd_endgrent='define'\nd_endgrent_r='undef'\nd_endhent='define'\nd_endhostent_r='undef'\nd_endnent='define'\nd_endnetent_r='undef'\nd_endpent='define'\nd_endprotoent_r='undef'\nd_endpwent='define'\nd_endpwent_r='undef'\nd_endsent='define'\nd_endservent_r='undef'\nd_eofnblk='define'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='define'\nd_fchdir='define'\nd_fchmod='define'\nd_fchown='define'\nd_fcntl='define'\nd_fcntl_can_lock='define'\nd_fd_macros='define'\nd_fd_set='define'\nd_fdim='undef'\nd_fds_bits='undef'\nd_fegetround='define'\nd_fgetpos='define'\nd_finite='define'\nd_finitel='define'\nd_flexfnam='define'\nd_flock='define'\nd_flockproto='define'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='define'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='define'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_frexpl='define'\nd_fs_data_s='undef'\nd_fseeko='define'\nd_fsetpos='define'\nd_fstatfs='define'\nd_fstatvfs='define'\nd_fsync='define'\nd_ftello='define'\nd_ftime='undef'\nd_futimes='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='define'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='define'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='define'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='define'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='define'\nd_getnameinfo='undef'\nd_getnbyaddr='define'\nd_getnbyname='define'\nd_getnent='define'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='define'\nd_getpagsz='define'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='define'\nd_getpgid='define'\nd_getpgrp2='undef'\nd_getpgrp='define'\nd_getppid='define'\nd_getprior='define'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='define'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='define'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspnam='define'\nd_getspnam_r='undef'\nd_gettimeod='define'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='define'\nd_grpasswd='define'\nd_hasmntopt='define'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='define'\nd_inc_version_list='define'\nd_index='undef'\nd_inetaton='define'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='define'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='define'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='define'\nd_isinfl='define'\nd_isless='undef'\nd_isnan='define'\nd_isnanl='define'\nd_isnormal='undef'\nd_j0='define'\nd_j0l='define'\nd_killpg='define'\nd_lc_monetary_2008='undef'\nd_lchown='define'\nd_ldbl_dig='define'\nd_ldexpl='define'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='define'\nd_link='define'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='define'\nd_lockf='define'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_longdbl='define'\nd_longlong='define'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='define'\nd_lstat='define'\nd_madvise='define'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memchr='define'\nd_memcmp='define'\nd_memcpy='define'\nd_memmove='define'\nd_memset='define'\nd_mkdir='define'\nd_mkdtemp='define'\nd_mkfifo='define'\nd_mkstemp='define'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='define'\nd_modfl='define'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='define'\nd_msg='define'\nd_msg_ctrunc='define'\nd_msg_dontroute='define'\nd_msg_oob='define'\nd_msg_peek='define'\nd_msg_proxy='define'\nd_msgctl='define'\nd_msgget='define'\nd_msghdr_s='define'\nd_msgrcv='define'\nd_msgsnd='define'\nd_msync='define'\nd_munmap='define'\nd_mymalloc='undef'\nd_nan='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='define'\nd_nl_langinfo='define'\nd_nv_preserves_uv='define'\nd_nv_zero_is_allbits_zero='undef'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='define'\nd_pathconf='define'\nd_pause='define'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe='define'\nd_poll='define'\nd_portable='define'\nd_prctl='define'\nd_prctl_set_name='define'\nd_printf_format_null='undef'\nd_procselfexe='define'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='define'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='define'\nd_pwpasswd='define'\nd_pwquota='undef'\nd_qgcvt='define'\nd_quad='define'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='define'\nd_readv='define'\nd_recvmsg='define'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_safebcpy='undef'\nd_safemcpy='undef'\nd_sanemcmp='define'\nd_sbrkproto='define'\nd_scalbn='undef'\nd_scalbnl='define'\nd_sched_yield='define'\nd_scm_rights='define'\nd_seekdir='define'\nd_select='define'\nd_sem='define'\nd_semctl='define'\nd_semctl_semid_ds='define'\nd_semctl_semun='define'\nd_semget='define'\nd_semop='define'\nd_sendmsg='define'\nd_setegid='define'\nd_seteuid='define'\nd_setgrent='define'\nd_setgrent_r='undef'\nd_setgrps='define'\nd_sethent='define'\nd_sethostent_r='undef'\nd_setitimer='define'\nd_setlinebuf='define'\nd_setlocale='define'\nd_setlocale_r='undef'\nd_setnent='define'\nd_setnetent_r='undef'\nd_setpent='define'\nd_setpgid='define'\nd_setpgrp2='undef'\nd_setpgrp='define'\nd_setprior='define'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='define'\nd_setpwent_r='undef'\nd_setregid='define'\nd_setresgid='define'\nd_setresuid='define'\nd_setreuid='define'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='define'\nd_setservent_r='undef'\nd_setsid='define'\nd_setvbuf='define'\nd_shm='define'\nd_shmat='define'\nd_shmatprototype='define'\nd_shmctl='define'\nd_shmdt='define'\nd_shmget='define'\nd_sigaction='define'\nd_signbit='define'\nd_sigprocmask='define'\nd_sigsetjmp='define'\nd_sin6_scope_id='undef'\nd_sitearch='define'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='define'\nd_sockpair='define'\nd_socks5_init='undef'\nd_sprintf_returns_strlen='define'\nd_sqrtl='define'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='define'\nd_statfs_f_flags='undef'\nd_statfs_s='define'\nd_static_inline='undef'\nd_statvfs='define'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='define'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='define'\nd_stdio_stream_array='undef'\nd_stdiobase='define'\nd_stdstdio='define'\nd_strchr='define'\nd_strcoll='define'\nd_strctcpy='define'\nd_strerrm='strerror(e)'\nd_strerror='define'\nd_strerror_r='undef'\nd_strftime='define'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strtod='define'\nd_strtol='define'\nd_strtold='define'\nd_strtoll='define'\nd_strtoq='define'\nd_strtoul='define'\nd_strtoull='define'\nd_strtouq='define'\nd_strxfrm='define'\nd_suidsafe='undef'\nd_symlink='define'\nd_syscall='define'\nd_syscallproto='define'\nd_sysconf='define'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='define'\nd_tcsetpgrp='define'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='undef'\nd_time='define'\nd_timegm='define'\nd_times='define'\nd_tm_tm_gmtoff='define'\nd_tm_tm_zone='define'\nd_tmpnam_r='undef'\nd_trunc='undef'\nd_truncate='define'\nd_truncl='define'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='undef'\nd_ualarm='define'\nd_umask='define'\nd_uname='define'\nd_union_semun='undef'\nd_unordered='undef'\nd_unsetenv='define'\nd_usleep='define'\nd_usleepproto='define'\nd_ustat='define'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vendorscript='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_volatile='define'\nd_vprintf='define'\nd_vsnprintf='define'\nd_wait4='define'\nd_waitpid='define'\nd_wcscmp='undef'\nd_wcstombs='define'\nd_wcsxfrm='undef'\nd_wctomb='define'\nd_writev='define'\nd_xenix='undef'\ndate='date'\ndb_hashtype='u_int32_t'\ndb_prefixtype='size_t'\ndb_version_major=''\ndb_version_minor=''\ndb_version_patch=''\ndirentrytype='struct dirent'\ndlext='so'\ndlsrc='dl_dlopen.xs'\ndoublekind='3'\ndoublesize='8'\ndrand01='Perl_drand48()'\ndrand48_r_proto='0'\ndtrace=''\ndynamic_ext='B ByteLoader Cwd Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes re threads threads/shared'\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='egrep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext=''\nexpr='expr'\nextensions='B ByteLoader Cwd Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes re threads threads/shared Errno'\nextras=''\nfflushNULL='define'\nfflushall='undef'\nfind=''\nfirstmakefile='makefile'\nflex=''\nfpossize='16'\nfpostype='fpos_t'\nfreetype='void'\nfrom=':'\nfull_ar='/usr/bin/ar'\nfull_csh='/bin/csh'\nfull_sed='/bin/sed'\ngccansipedantic=''\ngccosandvers=''\ngccversion='2.95.3 20010125 (prerelease)'\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"lu\"'\ngidsign='1'\ngidsize='4'\ngidtype='gid_t'\nglibpth='/usr/shlib  /lib /usr/lib /usr/lib/386 /lib/386 /usr/ccs/lib /usr/ucblib /usr/local/lib '\ngmake='gmake'\ngmtime_r_proto='0'\ngnulibc_version='2.2.2'\ngrep='grep'\ngroupcat='cat /etc/group'\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='false'\nh_sysfile='true'\nhint='recommended'\nhostcat='cat /etc/hosts'\nhtml1dir=' '\nhtml1direxp=''\nhtml3dir=' '\nhtml3direxp=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='long long'\ni8size='1'\ni8type='char'\ni_arpainet='define'\ni_assert='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='define'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='define'\ni_execinfo='undef'\ni_fcntl='undef'\ni_fenv='define'\ni_float='define'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='define'\ni_ieeefp='undef'\ni_inttypes='define'\ni_langinfo='define'\ni_libutil='undef'\ni_limits='define'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='define'\ni_mallocmalloc='undef'\ni_math='define'\ni_memory='undef'\ni_mntent='define'\ni_ndbm='undef'\ni_netdb='define'\ni_neterrno='undef'\ni_netinettcp='define'\ni_niin='define'\ni_poll='define'\ni_prot='undef'\ni_pthread='define'\ni_pwd='define'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='define'\ni_socks='undef'\ni_stdarg='define'\ni_stdbool='undef'\ni_stddef='define'\ni_stdint='define'\ni_stdlib='define'\ni_string='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='define'\ni_sysfile='define'\ni_sysfilio='undef'\ni_sysin='undef'\ni_sysioctl='define'\ni_syslog='define'\ni_sysmman='define'\ni_sysmode='undef'\ni_sysmount='define'\ni_sysndir='undef'\ni_sysparam='define'\ni_syspoll='undef'\ni_sysresrc='define'\ni_syssecrt='undef'\ni_sysselct='define'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='define'\ni_sysstatvfs='define'\ni_systime='define'\ni_systimek='undef'\ni_systimes='define'\ni_systypes='define'\ni_sysuio='define'\ni_sysun='define'\ni_sysutsname='define'\ni_sysvfs='define'\ni_syswait='define'\ni_termio='undef'\ni_termios='define'\ni_time='define'\ni_unistd='define'\ni_ustat='define'\ni_utime='define'\ni_values='define'\ni_varargs='undef'\ni_varhdr='stdarg.h'\ni_vfork='undef'\nignore_versioned_solibs='y'\ninc_version_list=' '\ninc_version_list_init='0'\nincpath=''\ninews=''\ninstallarchlib='./install_me_here/usr/lib/perl5/5.22.0/armv4l-linux'\ninstallbin='./install_me_here/usr/bin'\ninstallhtml1dir=''\ninstallhtml3dir=''\ninstallman1dir='./install_me_here/usr/share/man/man1'\ninstallman3dir='./install_me_here/usr/share/man/man3'\ninstallprefix='./install_me_here/usr'\ninstallprefixexp='./install_me_here/usr'\ninstallprivlib='./install_me_here/usr/lib/perl5/5.22.0'\ninstallscript='./install_me_here/usr/bin'\ninstallsitearch='./install_me_here/usr/lib/perl5/site_perl/5.22.0/armv4l-linux'\ninstallsitebin='./install_me_here/usr/bin'\ninstallsitehtml1dir=''\ninstallsitehtml3dir=''\ninstallsitelib='./install_me_here/usr/lib/perl5/site_perl/5.22.0'\ninstallsiteman1dir='./install_me_here/usr/share/man/man1'\ninstallsiteman3dir='./install_me_here/usr/share/man/man3'\ninstallsitescript='./install_me_here/usr/bin'\ninstallstyle='./install_me_herelib/perl5'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorhtml1dir=''\ninstallvendorhtml3dir=''\ninstallvendorlib=''\ninstallvendorman1dir=''\ninstallvendorman3dir=''\ninstallvendorscript=''\nintsize='4'\nissymlink='/usr/bin/test -h'\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nknown_extensions='B ByteLoader Cwd DB_File Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call GDBM_File I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 NDBM_File ODBM_File Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes re threads threads/shared'\nksh=''\nld='cc'\nlddlflags='-shared -L/usr/local/lib'\nldflags=' -L/usr/local/lib'\nldflags_uselargefiles=''\nldlibpthname='LD_LIBRARY_PATH'\nless='less'\nlib_ext='.a'\nlibc='/lib/libc-2.2.2.so'\nlibperl='libperl.so'\nlibpth='/usr/local/lib /lib /usr/lib'\nlibs='-lnsl -ldl -lm -lcrypt -lutil -lc'\nlibsdirs=' /usr/lib'\nlibsfiles=' libnsl.so libdl.so libm.so libcrypt.so libutil.so libc.so'\nlibsfound=' /usr/lib/libnsl.so /usr/lib/libdl.so /usr/lib/libm.so /usr/lib/libcrypt.so /usr/lib/libutil.so /usr/lib/libc.so'\nlibspath=' /usr/local/lib /lib /usr/lib'\nlibswanted='socket bind inet nsl nm ndbm gdbm dbm db malloc dl ld sun m crypt sec util c cposix posix ucb BSD'\nlibswanted_uselargefiles=''\nline=''\nlint=''\nlkflags=''\nln='ln'\nlns='/bin/ln -s'\nlocaltime_r_proto='0'\nlocincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'\nloclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'\nlongdblkind='0'\nlongdblsize='8'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='ls'\nlseeksize='8'\nlseektype='off_t'\nmad='undef'\nmail=''\nmailx=''\nmake='make'\nmake_set_make='#'\nmallocobj=''\nmallocsrc=''\nmalloctype='void *'\nman1dir='/usr/share/man/man1'\nman1direxp='/usr/share/man/man1'\nman1ext='1'\nman3dir='/usr/share/man/man3'\nman3direxp='/usr/share/man/man3'\nman3ext='3'\nmips_type=''\nmistrustnm=''\nmkdir='mkdir'\nmmaptype='void *'\nmodetype='mode_t'\nmore='more'\nmultiarch='undef'\nmv=''\nmyarchname='armv4l-linux'\nmydomain='.criticalintegration.com'\nmyhostname='openzaurus'\nmyuname='linux openzaurus.criticalintegration.com 2.4.6-rmk1-np2-embedix #15 Wed Aug 6 07:49:44 UTC 2003 armv4l unknown '\nn='-n'\nneed_va_copy='undef'\nnetdb_hlen_type='size_t'\nnetdb_host_type='const void *'\nnetdb_name_type='const char *'\nnetdb_net_type='in_addr_t'\nnm='nm'\nnm_opt=''\nnm_so_opt='--dynamic'\nnonxs_ext='Errno'\nnroff='nroff'\nnvEUformat='\"E\"'\nnvFUformat='\"F\"'\nnvGUformat='\"G\"'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='32'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.o'\nold_pthread_create_joinable=''\noptimize='-O2'\norderlib='false'\nosname='linux'\nosvers='2.4.6-rmk1-np2-embedix'\notherlibdirs=' '\npackage='perl5'\npager='/usr/bin/less'\npasscat='cat /etc/passwd'\npatchlevel='9'\npath_sep=':'\nperl5='/usr/bin/perl'\nperl=''\nperl_patchlevel=''\nperl_static_inline='static'\nperladmin='red@criticalintegration.com'\nperllibs='-lnsl -ldl -lm -lcrypt -lutil -lc'\nperlpath='/usr/bin/perl'\npg='pg'\nphostname='hostname'\npidtype='pid_t'\nplibpth=''\npmake=''\npr=''\nprefix='/usr'\nprefixexp='/usr'\nprivlib='/usr/lib/perl5/5.22.0'\nprivlibexp='/usr/lib/perl5/5.22.0'\nprocselfexe='\"/proc/self/exe\"'\nprototype='define'\nptrsize='4'\nquadkind='3'\nquadtype='long long'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nranlib=':'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='rm'\nrmail=''\nrun=''\nrunnm='false'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEUldbl='\"E\"'\nsPRIFUldbl='\"F\"'\nsPRIGUldbl='\"G\"'\nsPRIXU64='\"LX\"'\nsPRId64='\"Ld\"'\nsPRIeldbl='\"e\"'\nsPRIfldbl='\"f\"'\nsPRIgldbl='\"g\"'\nsPRIi64='\"Li\"'\nsPRIo64='\"Lo\"'\nsPRIu64='\"Lu\"'\nsPRIx64='\"Lx\"'\nsSCNfldbl='\"f\"'\nsched_yield='sched_yield()'\nscriptdir='/usr/bin'\nscriptdirexp='/usr/bin'\nsed='sed'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype='fd_set *'\nsendmail=''\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='/bin/sh'\nshar=''\nsharpbang='#!'\nshmattype='void *'\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='64'\nsig_name='ZERO HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH IO PWR SYS RTMIN NUM33 NUM34 NUM35 NUM36 NUM37 NUM38 NUM39 NUM40 NUM41 NUM42 NUM43 NUM44 NUM45 NUM46 NUM47 NUM48 NUM49 NUM50 NUM51 NUM52 NUM53 NUM54 NUM55 NUM56 NUM57 NUM58 NUM59 NUM60 NUM61 NUM62 RTMAX IOT CLD POLL UNUSED '\nsig_name_init='\"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"TRAP\", \"ABRT\", \"BUS\", \"FPE\", \"KILL\", \"USR1\", \"SEGV\", \"USR2\", \"PIPE\", \"ALRM\", \"TERM\", \"STKFLT\", \"CHLD\", \"CONT\", \"STOP\", \"TSTP\", \"TTIN\", \"TTOU\", \"URG\", \"XCPU\", \"XFSZ\", \"VTALRM\", \"PROF\", \"WINCH\", \"IO\", \"PWR\", \"SYS\", \"RTMIN\", \"NUM33\", \"NUM34\", \"NUM35\", \"NUM36\", \"NUM37\", \"NUM38\", \"NUM39\", \"NUM40\", \"NUM41\", \"NUM42\", \"NUM43\", \"NUM44\", \"NUM45\", \"NUM46\", \"NUM47\", \"NUM48\", \"NUM49\", \"NUM50\", \"NUM51\", \"NUM52\", \"NUM53\", \"NUM54\", \"NUM55\", \"NUM56\", \"NUM57\", \"NUM58\", \"NUM59\", \"NUM60\", \"NUM61\", \"NUM62\", \"RTMAX\", \"IOT\", \"CLD\", \"POLL\", \"UNUSED\", 0'\nsig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 6 17 29 31 '\nsig_num_init='0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 6, 17, 29, 31, 0'\nsig_size='68'\nsignal_t='void'\nsitearch='/usr/lib/perl5/site_perl/5.22.0/armv4l-linux'\nsitearchexp='/usr/lib/perl5/site_perl/5.22.0/armv4l-linux'\nsitebin='/usr/bin'\nsitebinexp='/usr/bin'\nsitehtml1dir=''\nsitehtml1direxp=''\nsitehtml3dir=''\nsitehtml3direxp=''\nsitelib='/usr/lib/perl5/site_perl/5.22.0'\nsitelib_stem='/usr/lib/perl5/site_perl'\nsitelibexp='/usr/lib/perl5/site_perl/5.22.0'\nsiteman1dir='/usr/share/man/man1'\nsiteman1direxp='/usr/share/man/man1'\nsiteman3dir='/usr/share/man/man3'\nsiteman3direxp='/usr/share/man/man3'\nsiteprefix='/usr'\nsiteprefixexp='/usr'\nsitescript='/usr/bin'\nsitescriptexp='/usr/bin'\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nso='so'\nsockethdr=''\nsocketlib=''\nsocksizetype='socklen_t'\nsort='sort'\nspackage='Perl5'\nspitshell='cat'\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc='.'\nssizetype='ssize_t'\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!/usr/bin/perl'\nstartsh='#!/bin/sh'\nstatic_ext=' '\nstdchar='char'\nstdio_base='((fp)->_IO_read_base)'\nstdio_bufsiz='((fp)->_IO_read_end - (fp)->_IO_read_base)'\nstdio_cnt='((fp)->_IO_read_end - (fp)->_IO_read_ptr)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_IO_read_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/usr/include/string.h'\nsubmit=''\nsubversion='0'\nsysman='/usr/share/man/man1'\ntail=''\ntar=''\ntargetarch=''\ntargetsh='/bin/sh'\ntbl=''\ntee=''\ntest='test'\ntimeincl='/usr/include/sys/time.h /usr/include/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\nto=':'\ntouch='touch'\ntr='tr'\ntrnl='\\n'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned long long'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"lu\"'\nuidsign='1'\nuidsize='4'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned long long'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='define'\nusedtrace='undef'\nusefaststdio='define'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='define'\nuselongdouble='undef'\nusemallocwrap='define'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='true'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvaproto='undef'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorhtml1dir=' '\nvendorhtml1direxp=''\nvendorhtml3dir=' '\nvendorhtml3direxp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorman1dir=' '\nvendorman1direxp=''\nvendorman3dir=' '\nvendorman3direxp=''\nvendorprefix=''\nvendorprefixexp=''\nvendorscript=''\nvendorscriptexp=''\nversion='5.22.0'\nversion_patchlevel_string='version 22 subversion 0'\nversiononly='undef'\nvi=''\nxlibpth='/usr/lib/386 /lib/386'\nyacc='yacc'\nyaccflags=''\nzcat=''\nzip='zip'\n# Configure command line arguments.\nconfig_arg0='Configure'\nconfig_args=''\nconfig_argc=0\nPERL_REVISION=5\nPERL_VERSION=22\nPERL_SUBVERSION=0\nPERL_API_REVISION=5\nPERL_API_VERSION=22\nPERL_API_SUBVERSION=0\nPERL_PATCHLEVEL=\nPERL_CONFIG_SH=true\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/Cross/config.sh-arm-linux-n770": "#!/bin/sh\n#\n# This file was produced by running the Configure script. It holds all the\n# definitions figured out by Configure. Should you modify one of these values,\n# do not forget to propagate your changes by running \"Configure -der\". You may\n# instead choose to run each of the .SH files by yourself, or \"Configure -S\".\n#\n\n# Package name      : perl5\n# Source directory  : .\n# Configuration time: Wed Sep  3 22:24:58 EDT 2003\n# Configured by     : vadrer\n# Target system     : linux nokia770 armv5teji1\n\nAuthor=''\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nMcc='Mcc'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.arma'\n_exe='.arm'\n_o='.armo'\nafs='false'\nafsroot='/afs'\nalignbytes='4'\nansi2knr=''\naphostname='/bin/hostname'\napi_revision='5'\napi_subversion='0'\napi_version='22'\napi_versionstring='5.22.0'\nar='ar'\narchlib='/usr/lib/perl5/5.22.0/armv4l-linux'\narchlibexp='/usr/lib/perl5/5.22.0/armv4l-linux'\narchname64=''\narchname='armv4l-linux'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5.0'\nbash=''\nbin='/usr/bin'\nbinexp='/usr/bin'\nbison='bison'\nbyacc='byacc'\nbyteorder='1234'\nc=''\ncastflags='0'\ncat='cat'\ncc='arm-none-linux-gnueabi-gcc'\ncccdlflags='-fpic'\nccdlflags='-rdynamic -Wl,-rpath,/usr/lib/perl5/5.22.0/armv4l-linux/CORE'\nccflags='-fno-strict-aliasing -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\nccflags_uselargefiles='-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\nccname='arm-linux-gcc'\nccsymbols='__APCS_32__=1 __ARM_ARCH_3__=1 __CHAR_UNSIGNED__=1 __GNUC_MINOR__=95 __arm__=1 __linux=1 __linux__=1 __unix=1 __unix__=1 cpu=arm machine=arm system=posix system=unix'\nccversion=''\ncf_by='red'\ncf_email='red@criticalintegration.com'\ncf_time='Wed Sep  3 22:24:58 EDT 2003'\nchgrp=''\nchmod='chmod'\nchown=''\nclocktype='clock_t'\ncomm='comm'\ncompress=''\ncontains='grep'\ncp='cp'\ncpio=''\ncpp='cpp'\ncpp_stuff='42'\ncppccsymbols='__ELF__=1 __GNUC__=2 linux=1 unix=1'\ncppflags='-fno-strict-aliasing -I/usr/local/include'\ncpplast='-'\ncppminus='-'\ncpprun='arm-none-linux-gnueabi-gcc -E'\ncppstdin='arm-none-linux-gnueabi-gcc -E'\ncppsymbols='_FILE_OFFSET_BITS=64 __GLIBC__=2 __GLIBC_MINOR__=2 __GNUC_MINOR__=95 __GNU_LIBRARY__=6 _LARGEFILE_SOURCE=1 _POSIX_C_SOURCE=199506 _POSIX_SOURCE=1 __STDC__=1 __USE_BSD=1 __USE_FILE_OFFSET64=1 __USE_LARGEFILE=1 __USE_MISC=1 __USE_POSIX=1 __USE_POSIX199309=1 __USE_POSIX199506=1 __USE_POSIX2=1 __USE_SVID=1 __linux=1 __linux__=1 __unix=1 __unix__=1'\ncrypt_r_proto='0'\ncryptlib=''\ncsh='csh'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='gcvt((x),(n),(b))'\nd_PRIEUldbl='define'\nd_PRIFUldbl='define'\nd_PRIGUldbl='define'\nd_PRIXU64='define'\nd_PRId64='define'\nd_PRIeldbl='define'\nd_PRIfldbl='define'\nd_PRIgldbl='define'\nd_PRIi64='define'\nd_PRIo64='define'\nd_PRIu64='define'\nd_PRIx64='define'\nd_SCNfldbl='define'\nd__fwalk='undef'\nd_access='define'\nd_accessx='undef'\nd_aintl='undef'\nd_alarm='define'\nd_archlib='define'\nd_asctime_r='undef'\nd_atolf='undef'\nd_atoll='define'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_bcmp='define'\nd_bcopy='define'\nd_bsd='undef'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_choose_expr='define'\nd_builtin_expect='define'\nd_bzero='define'\nd_c99_variadic_macros='undef'\nd_casti32='define'\nd_castneg='define'\nd_charvspr='undef'\nd_chown='define'\nd_chroot='define'\nd_chsize='undef'\nd_class='undef'\nd_clearenv='define'\nd_closedir='define'\nd_cmsghdr_s='define'\nd_const='define'\nd_copysignl='define'\nd_cplusplus='undef'\nd_crypt='define'\nd_crypt_r='undef'\nd_csh='define'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime_r='undef'\nd_cuserid='define'\nd_dbl_dig='define'\nd_dbminitproto='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='define'\nd_dirnamlen='undef'\nd_dlerror='define'\nd_dlopen='define'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_drand48_r='undef'\nd_drand48proto='define'\nd_dup2='define'\nd_eaccess='undef'\nd_endgrent='define'\nd_endgrent_r='undef'\nd_endhent='define'\nd_endhostent_r='undef'\nd_endnent='define'\nd_endnetent_r='undef'\nd_endpent='define'\nd_endprotoent_r='undef'\nd_endpwent='define'\nd_endpwent_r='undef'\nd_endsent='define'\nd_endservent_r='undef'\nd_eofnblk='define'\nd_eunice='undef'\nd_faststdio='define'\nd_fchdir='define'\nd_fchmod='define'\nd_fchown='define'\nd_fcntl='define'\nd_fcntl_can_lock='define'\nd_fd_macros='define'\nd_fd_set='define'\nd_fds_bits='undef'\nd_fgetpos='define'\nd_finite='define'\nd_finitel='define'\nd_flexfnam='define'\nd_flock='define'\nd_flockproto='define'\nd_fork='define'\nd_fp_class='undef'\nd_fpathconf='define'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpos64_t='undef'\nd_frexpl='define'\nd_fs_data_s='undef'\nd_fseeko='define'\nd_fsetpos='define'\nd_fstatfs='define'\nd_fstatvfs='define'\nd_fsync='define'\nd_ftello='define'\nd_ftime='undef'\nd_futimes='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='define'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='define'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='define'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='define'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='define'\nd_getnbyaddr='define'\nd_getnbyname='define'\nd_getnent='define'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='define'\nd_getpagsz='define'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='define'\nd_getpgid='define'\nd_getpgrp2='undef'\nd_getpgrp='define'\nd_getppid='define'\nd_getprior='define'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='define'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='define'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspnam='define'\nd_getspnam_r='undef'\nd_gettimeod='define'\nd_gmtime_r='undef'\nd_gnulibc='define'\nd_grpasswd='define'\nd_hasmntopt='define'\nd_htonl='define'\nd_ilogbl='define'\nd_inc_version_list='define'\nd_index='undef'\nd_inetaton='define'\nd_int64_t='define'\nd_isascii='define'\nd_isfinite='undef'\nd_isinf='define'\nd_isnan='define'\nd_isnanl='define'\nd_killpg='define'\nd_lchown='define'\nd_ldbl_dig='define'\nd_libm_lib_version='define'\nd_link='define'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='define'\nd_lockf='define'\nd_longdbl='define'\nd_longlong='define'\nd_lseekproto='define'\nd_lstat='define'\nd_madvise='define'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memchr='define'\nd_memcmp='define'\nd_memcpy='define'\nd_memmove='define'\nd_memset='define'\nd_mkdir='define'\nd_mkdtemp='define'\nd_mkfifo='define'\nd_mkstemp='define'\nd_mkstemps='undef'\nd_mktime='define'\nd_mmap='define'\nd_modfl='define'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='define'\nd_msg='define'\nd_msg_ctrunc='define'\nd_msg_dontroute='define'\nd_msg_oob='define'\nd_msg_peek='define'\nd_msg_proxy='define'\nd_msgctl='define'\nd_msgget='define'\nd_msghdr_s='define'\nd_msgrcv='define'\nd_msgsnd='define'\nd_msync='define'\nd_munmap='define'\nd_mymalloc='undef'\nd_nice='define'\nd_nl_langinfo='define'\nd_nv_preserves_uv='define'\nd_nv_zero_is_allbits_zero='undef'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='define'\nd_pathconf='define'\nd_pause='define'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe='define'\nd_poll='define'\nd_portable='define'\nd_printf_format_null='undef'\nd_procselfexe='define'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='define'\nd_pthread_yield='undef'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='define'\nd_pwpasswd='define'\nd_pwquota='undef'\nd_qgcvt='define'\nd_quad='define'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='define'\nd_readv='define'\nd_recvmsg='define'\nd_rename='define'\nd_rewinddir='define'\nd_rmdir='define'\nd_safebcpy='undef'\nd_safemcpy='undef'\nd_sanemcmp='define'\nd_sbrkproto='define'\nd_scalbnl='define'\nd_sched_yield='define'\nd_scm_rights='define'\nd_seekdir='define'\nd_select='define'\nd_sem='define'\nd_semctl='define'\nd_semctl_semid_ds='define'\nd_semctl_semun='define'\nd_semget='define'\nd_semop='define'\nd_sendmsg='define'\nd_setegid='define'\nd_seteuid='define'\nd_setgrent='define'\nd_setgrent_r='undef'\nd_setgrps='define'\nd_sethent='define'\nd_sethostent_r='undef'\nd_setitimer='define'\nd_setlinebuf='define'\nd_setlocale='define'\nd_setlocale_r='undef'\nd_setnent='define'\nd_setnetent_r='undef'\nd_setpent='define'\nd_setpgid='define'\nd_setpgrp2='undef'\nd_setpgrp='define'\nd_setprior='define'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='define'\nd_setpwent_r='undef'\nd_setregid='define'\nd_setresgid='define'\nd_setresuid='define'\nd_setreuid='define'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='define'\nd_setservent_r='undef'\nd_setsid='define'\nd_setvbuf='define'\nd_shm='define'\nd_shmat='define'\nd_shmatprototype='define'\nd_shmctl='define'\nd_shmdt='define'\nd_shmget='define'\nd_sigaction='define'\nd_signbit='define'\nd_sigprocmask='define'\nd_sigsetjmp='define'\nd_sitearch='define'\nd_snprintf='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='define'\nd_sockpair='define'\nd_socks5_init='undef'\nd_sprintf_returns_strlen='define'\nd_sqrtl='define'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_statblks='define'\nd_statfs_f_flags='undef'\nd_statfs_s='define'\nd_statvfs='define'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='define'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='define'\nd_stdio_stream_array='undef'\nd_stdiobase='define'\nd_stdstdio='define'\nd_strchr='define'\nd_strcoll='define'\nd_strctcpy='define'\nd_strerrm='strerror(e)'\nd_strerror='define'\nd_strerror_r='undef'\nd_strftime='define'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strtod='define'\nd_strtol='define'\nd_strtold='define'\nd_strtoll='define'\nd_strtoq='define'\nd_strtoul='define'\nd_strtoull='define'\nd_strtouq='define'\nd_strxfrm='define'\nd_suidsafe='undef'\nd_symlink='define'\nd_syscall='define'\nd_syscallproto='define'\nd_sysconf='define'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='define'\nd_tcsetpgrp='define'\nd_telldir='define'\nd_telldirproto='define'\nd_time='define'\nd_timegm='define'\nd_times='define'\nd_tm_tm_gmtoff='define'\nd_tm_tm_zone='define'\nd_tmpnam_r='undef'\nd_truncate='define'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='undef'\nd_ualarm='define'\nd_umask='define'\nd_uname='define'\nd_union_semun='undef'\nd_unordered='undef'\nd_unsetenv='define'\nd_usleep='define'\nd_usleepproto='define'\nd_ustat='define'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vendorscript='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_volatile='define'\nd_vprintf='define'\nd_vsnprintf='define'\nd_wait4='define'\nd_waitpid='define'\nd_wcstombs='define'\nd_wctomb='define'\nd_writev='define'\nd_xenix='undef'\ndate='date'\ndb_hashtype='u_int32_t'\ndb_prefixtype='size_t'\ndb_version_major=''\ndb_version_minor=''\ndb_version_patch=''\ndirentrytype='struct dirent'\ndlext='so'\ndlsrc='dl_dlopen.xs'\ndoublesize='8'\ndrand01='Perl_drand48()'\ndrand48_r_proto='0'\ndynamic_ext='B ByteLoader Cwd Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes re threads threads/shared'\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='egrep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext=''\nexpr='expr'\nextensions='B ByteLoader Cwd Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes re threads threads/shared Errno'\nextras=''\nfflushNULL='define'\nfflushall='undef'\nfind=''\nfirstmakefile='makefile'\nflex=''\nfpossize='16'\nfpostype='fpos_t'\nfreetype='void'\nfrom=':'\nfull_ar='/usr/bin/ar'\nfull_csh='/bin/csh'\nfull_sed='/bin/sed'\ngccansipedantic=''\ngccosandvers=''\ngccversion='2.95.3 20010125 (prerelease)'\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"lu\"'\ngidsign='1'\ngidsize='4'\ngidtype='gid_t'\nglibpth='/usr/shlib  /lib /usr/lib /usr/lib/386 /lib/386 /usr/ccs/lib /usr/ucblib /usr/local/lib '\ngmake='gmake'\ngmtime_r_proto='0'\ngnulibc_version='2.2.2'\ngrep='grep'\ngroupcat='cat /etc/group'\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='false'\nh_sysfile='true'\nhint='recommended'\nhostcat='cat /etc/hosts'\nhtml1dir=' '\nhtml1direxp=''\nhtml3dir=' '\nhtml3direxp=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='long long'\ni8size='1'\ni8type='char'\ni_arpainet='define'\ni_assert='define'\ni_bsdioctl=''\ni_crypt='define'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='define'\ni_fcntl='undef'\ni_float='define'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='define'\ni_ieeefp='undef'\ni_inttypes='define'\ni_langinfo='define'\ni_libutil='undef'\ni_limits='define'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='define'\ni_mallocmalloc='undef'\ni_math='define'\ni_memory='undef'\ni_mntent='define'\ni_ndbm='undef'\ni_netdb='define'\ni_neterrno='undef'\ni_netinettcp='define'\ni_niin='define'\ni_poll='define'\ni_prot='undef'\ni_pthread='define'\ni_pwd='define'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='define'\ni_socks='undef'\ni_stdarg='define'\ni_stddef='define'\ni_stdlib='define'\ni_string='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='define'\ni_sysfile='define'\ni_sysfilio='undef'\ni_sysin='undef'\ni_sysioctl='define'\ni_syslog='define'\ni_sysmman='define'\ni_sysmode='undef'\ni_sysmount='define'\ni_sysndir='undef'\ni_syspoll='define'\ni_sysparam='define'\ni_sysresrc='define'\ni_syssecrt='undef'\ni_sysselct='define'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='define'\ni_sysstatvfs='define'\ni_systime='define'\ni_systimek='undef'\ni_systimes='define'\ni_systypes='define'\ni_sysuio='define'\ni_sysun='define'\ni_sysutsname='define'\ni_sysvfs='define'\ni_syswait='define'\ni_termio='undef'\ni_termios='define'\ni_time='define'\ni_unistd='define'\ni_ustat='define'\ni_utime='define'\ni_values='define'\ni_varargs='undef'\ni_varhdr='stdarg.h'\ni_vfork='undef'\nignore_versioned_solibs='y'\ninc_version_list=' '\ninc_version_list_init='0'\nincpath=''\ninews=''\ninstallarchlib='./install_me_here/usr/lib/perl5/5.22.0/armv4l-linux'\ninstallbin='./install_me_here/usr/bin'\ninstallhtml1dir=''\ninstallhtml3dir=''\ninstallman1dir='./install_me_here/usr/share/man/man1'\ninstallman3dir='./install_me_here/usr/share/man/man3'\ninstallprefix='./install_me_here/usr'\ninstallprefixexp='./install_me_here/usr'\ninstallprivlib='./install_me_here/usr/lib/perl5/5.22.0'\ninstallscript='./install_me_here/usr/bin'\ninstallsitearch='./install_me_here/usr/lib/perl5/site_perl/5.22.0/armv4l-linux'\ninstallsitebin='./install_me_here/usr/bin'\ninstallsitehtml1dir=''\ninstallsitehtml3dir=''\ninstallsitelib='./install_me_here/usr/lib/perl5/site_perl/5.22.0'\ninstallsiteman1dir='./install_me_here/usr/share/man/man1'\ninstallsiteman3dir='./install_me_here/usr/share/man/man3'\ninstallsitescript='./install_me_here/usr/bin'\ninstallstyle='./install_me_herelib/perl5'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorhtml1dir=''\ninstallvendorhtml3dir=''\ninstallvendorlib=''\ninstallvendorman1dir=''\ninstallvendorman3dir=''\ninstallvendorscript=''\nintsize='4'\nissymlink='/usr/bin/test -h'\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nknown_extensions='B ByteLoader Cwd DB_File Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call GDBM_File I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 NDBM_File ODBM_File Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes re threads threads/shared'\nksh=''\nld='arm-none-linux-gnueabi-gcc'\nlddlflags='-shared -L/usr/local/lib'\nldflags=' -L/usr/local/lib'\nldflags_uselargefiles=''\nldlibpthname='LD_LIBRARY_PATH'\nless='less'\nlib_ext='.arma'\nlibc='/lib/libc-2.2.2.so'\nlibperl='libperl.arma'\nlibpth='/usr/local/lib /lib /usr/lib'\nlibs='-lnsl -ldl -lm -lcrypt -lutil -lc'\nlibsdirs=' /usr/lib'\nlibsfiles=' libnsl.so libdl.so libm.so libcrypt.so libutil.so libc.so'\nlibsfound=' /usr/lib/libnsl.so /usr/lib/libdl.so /usr/lib/libm.so /usr/lib/libcrypt.so /usr/lib/libutil.so /usr/lib/libc.so'\nlibspath=' /usr/local/lib /lib /usr/lib'\nlibswanted='socket bind inet nsl nm ndbm gdbm dbm db malloc dl ld sun m crypt sec util c cposix posix ucb BSD'\nlibswanted_uselargefiles=''\nline=''\nlint=''\nlkflags=''\nln='ln'\nlns='/bin/ln -s'\nlocaltime_r_proto='0'\nlocincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'\nloclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'\nlongdblsize='8'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='ls'\nlseeksize='8'\nlseektype='off_t'\nmad='undef'\nmail=''\nmailx=''\nmake='make'\nmake_set_make='#'\nmallocobj=''\nmallocsrc=''\nmalloctype='void *'\nman1dir='/usr/share/man/man1'\nman1direxp='/usr/share/man/man1'\nman1ext='1'\nman3dir='/usr/share/man/man3'\nman3direxp='/usr/share/man/man3'\nman3ext='3'\nmips_type=''\nmistrustnm=''\nmkdir='mkdir'\nmmaptype='void *'\nmodetype='mode_t'\nmore='more'\nmultiarch='undef'\nmv=''\nmyarchname='armv4l-linux'\nmydomain='.criticalintegration.com'\nmyhostname='openzaurus'\nmyuname='linux openzaurus.criticalintegration.com 2.4.6-rmk1-np2-embedix #15 Wed Aug 6 07:49:44 UTC 2003 armv4l unknown '\nn='-n'\nneed_va_copy='undef'\nnetdb_hlen_type='size_t'\nnetdb_host_type='const void *'\nnetdb_name_type='const char *'\nnetdb_net_type='in_addr_t'\nnm='nm'\nnm_opt=''\nnm_so_opt='--dynamic'\nnonxs_ext='Errno'\nnroff='nroff'\nnvEUformat='\"E\"'\nnvFUformat='\"F\"'\nnvGUformat='\"G\"'\nnv_preserves_uv_bits='32'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.armo'\nold_pthread_create_joinable=''\noptimize='-O2'\norderlib='false'\nosname='linux'\nosvers='2.6'\notherlibdirs=' '\npackage='perl5'\npager='/usr/bin/less'\npasscat='cat /etc/passwd'\npatchlevel='11'\npath_sep=':'\nperl5='/usr/bin/perl'\nperl=''\nperl_patchlevel=''\nperladmin='red@criticalintegration.com'\nperllibs='-lnsl -ldl -lm -lcrypt -lutil -lc'\nperlpath='/usr/bin/perl'\npg='pg'\nphostname='hostname'\npidtype='pid_t'\nplibpth=''\npmake=''\npr=''\nprefix='/usr'\nprefixexp='/usr'\nprivlib='/usr/lib/perl5/5.22.0'\nprivlibexp='/usr/lib/perl5/5.22.0'\nprocselfexe='\"/proc/self/exe\"'\nprototype='define'\nptrsize='4'\nquadkind='3'\nquadtype='long long'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nranlib=':'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='rm'\nrmail=''\nrun=''\nrunnm='false'\nsPRIEUldbl='\"E\"'\nsPRIFUldbl='\"F\"'\nsPRIGUldbl='\"G\"'\nsPRIXU64='\"LX\"'\nsPRId64='\"Ld\"'\nsPRIeldbl='\"e\"'\nsPRIfldbl='\"f\"'\nsPRIgldbl='\"g\"'\nsPRIi64='\"Li\"'\nsPRIo64='\"Lo\"'\nsPRIu64='\"Lu\"'\nsPRIx64='\"Lx\"'\nsSCNfldbl='\"f\"'\nsched_yield='sched_yield()'\nscriptdir='/usr/bin'\nscriptdirexp='/usr/bin'\nsed='sed'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype='fd_set *'\nsendmail=''\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='/bin/sh'\nshar=''\nsharpbang='#!'\nshmattype='void *'\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='64'\nsig_name='ZERO HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH IO PWR SYS RTMIN NUM33 NUM34 NUM35 NUM36 NUM37 NUM38 NUM39 NUM40 NUM41 NUM42 NUM43 NUM44 NUM45 NUM46 NUM47 NUM48 NUM49 NUM50 NUM51 NUM52 NUM53 NUM54 NUM55 NUM56 NUM57 NUM58 NUM59 NUM60 NUM61 NUM62 RTMAX IOT CLD POLL UNUSED '\nsig_name_init='\"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"TRAP\", \"ABRT\", \"BUS\", \"FPE\", \"KILL\", \"USR1\", \"SEGV\", \"USR2\", \"PIPE\", \"ALRM\", \"TERM\", \"STKFLT\", \"CHLD\", \"CONT\", \"STOP\", \"TSTP\", \"TTIN\", \"TTOU\", \"URG\", \"XCPU\", \"XFSZ\", \"VTALRM\", \"PROF\", \"WINCH\", \"IO\", \"PWR\", \"SYS\", \"RTMIN\", \"NUM33\", \"NUM34\", \"NUM35\", \"NUM36\", \"NUM37\", \"NUM38\", \"NUM39\", \"NUM40\", \"NUM41\", \"NUM42\", \"NUM43\", \"NUM44\", \"NUM45\", \"NUM46\", \"NUM47\", \"NUM48\", \"NUM49\", \"NUM50\", \"NUM51\", \"NUM52\", \"NUM53\", \"NUM54\", \"NUM55\", \"NUM56\", \"NUM57\", \"NUM58\", \"NUM59\", \"NUM60\", \"NUM61\", \"NUM62\", \"RTMAX\", \"IOT\", \"CLD\", \"POLL\", \"UNUSED\", 0'\nsig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 6 17 29 31 '\nsig_num_init='0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 6, 17, 29, 31, 0'\nsig_size='68'\nsignal_t='void'\nsitearch='/usr/lib/perl5/site_perl/5.22.0/armv4l-linux'\nsitearchexp='/usr/lib/perl5/site_perl/5.22.0/armv4l-linux'\nsitebin='/usr/bin'\nsitebinexp='/usr/bin'\nsitehtml1dir=''\nsitehtml1direxp=''\nsitehtml3dir=''\nsitehtml3direxp=''\nsitelib='/usr/lib/perl5/site_perl/5.22.0'\nsitelib_stem='/usr/lib/perl5/site_perl'\nsitelibexp='/usr/lib/perl5/site_perl/5.22.0'\nsiteman1dir='/usr/share/man/man1'\nsiteman1direxp='/usr/share/man/man1'\nsiteman3dir='/usr/share/man/man3'\nsiteman3direxp='/usr/share/man/man3'\nsiteprefix='/usr'\nsiteprefixexp='/usr'\nsitescript='/usr/bin'\nsitescriptexp='/usr/bin'\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nso='so'\nsockethdr=''\nsocketlib=''\nsocksizetype='socklen_t'\nsort='sort'\nspackage='Perl5'\nspitshell='cat'\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc='.'\nssizetype='ssize_t'\nstartperl='#!/usr/bin/perl'\nstartsh='#!/bin/sh'\nstatic_ext='DynaLoader '\nstdchar='char'\nstdio_base='((fp)->_IO_read_base)'\nstdio_bufsiz='((fp)->_IO_read_end - (fp)->_IO_read_base)'\nstdio_cnt='((fp)->_IO_read_end - (fp)->_IO_read_ptr)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_IO_read_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/usr/include/string.h'\nsubmit=''\nsubversion='0'\nsysman='/usr/share/man/man1'\ntail=''\ntar=''\ntargetarch=''\ntbl=''\ntee=''\ntest='test'\ntimeincl='/usr/include/sys/time.h /usr/include/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\nto=':'\ntouch='touch'\ntr='tr'\ntrnl='\\n'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned long long'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"lu\"'\nuidsign='1'\nuidsize='4'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned long long'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecrosscompile='undef'\nusedl='define'\nusedtrace='undef'\nusefaststdio='define'\nuseithreads='undef'\nuselargefiles='define'\nuselongdouble='undef'\nusemallocwrap='define'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='true'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorhtml1dir=' '\nvendorhtml1direxp=''\nvendorhtml3dir=' '\nvendorhtml3direxp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorman1dir=' '\nvendorman1direxp=''\nvendorman3dir=' '\nvendorman3direxp=''\nvendorprefix=''\nvendorprefixexp=''\nvendorscript=''\nvendorscriptexp=''\nversion='5.22.0'\nversion_patchlevel_string='version 22 subversion 0'\nversiononly='undef'\nvi=''\nxlibpth='/usr/lib/386 /lib/386'\nyacc='yacc'\nyaccflags=''\nzcat=''\nzip='zip'\n# Configure command line arguments.\nconfig_arg0='Configure'\nconfig_args=''\nconfig_argc=0\nPERL_REVISION=5\nPERL_VERSION=22\nPERL_SUBVERSION=0\nPERL_API_REVISION=5\nPERL_API_VERSION=22\nPERL_API_SUBVERSION=0\nPERL_PATCHLEVEL=\nPERL_CONFIG_SH=true\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/plan9/myconfig.plan9": "#!/bin/rc\n\n# This script is designed to provide a handy summary of the configuration\n# information being used to build perl. This is especially useful if you\n# are requesting help from comp.lang.perl.misc on usenet or via mail.\n\n#This script is the \"myconfig\" script altered to run on Plan 9. \n#Last Modified: 28-Jun-96 Luther Huffman  lutherh@stratcom.com\n\n\n. config.sh\n\n# Note that the text lines /^Summary of/ .. /^\\s*$/ are copied into Config.pm.\n# XXX Add d_sigaction (?) once it's defined.\n\n$spitshell<<!GROK!THIS!\n\nSummary of my $package ($baserev version $PERL_VERSION subversion $PERL_SUBVERSION) configuration:\n  Platform:\n    osname=$osname, osver=$osvers, archname=$archname\n    uname='$myuname'\n    hint=$hint, useposix=$useposix \n  Compiler:\n    cc='$cc', optimize='$optimize', gccversion=$gccversion\n    cppflags='$cppflags'\n    ccflags ='$ccflags'\n    stdchar='$stdchar', d_stdstdio=$d_stdstdio, usevfork=$usevfork\n    castflags=$castflags, d_casti32=$d_casti32, d_castneg=$d_castneg\n    intsize=$intsize, alignbytes=$alignbytes, usemymalloc=$usemymalloc, randbits=$randbits\n  Linker and Libraries:\n    ld='$ld', ldflags ='$ldflags'\n    libpth=$libpth\n    libs=$libs\n    libc=$libc, so=$so\n  Dynamic Linking:\n    dlsrc=$dlsrc, dlext=$dlext, d_dlsymun=$d_dlsymun, ccdlflags='$ccdlflags'\n    cccdlflags='$cccdlflags', lddlflags='$lddlflags'\n\n!GROK!THIS!\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/plan9/config.plan9": "/*\n * This file is mangled by fndvers (and perhaps other scripts) to produce\n * the config.h for Plan 9. It was handwritten because the standard\n * configuration scripts were written in a shell dialect incomprehensible\n * to Plan 9. \n * config.h for Plan 9\n * Version: 5.8.0\n */                 \n\n/* Configuration time: 21-Oct-1996 15:11\n * Configured by: Luther Huffman, lutherh@stratcom.com\n * Target system: Plan 9\n */\n\n/*\n * Mangled by Jarkko Hietaniemi 2003-02-02 based on Russ Cox'\n * blood, sweat, and tears.\n *\n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* CAT2:\n *\tThis macro catenates 2 tokens together.\n */\n\n#define CAT2(a,b)a ## b\n#define CAT3(a,b,c)a ## b ## c\n#define CAT4(a,b,c,d)a ## b ## c ## d\n#define CAT5(a,b,c,d,e)a ## b ## c ## d ## e\n#define StGiFy(a)# a\n#define STRINGIFY(a)StGiFy(a)\n#define SCAT2(a,b)StGiFy(a) StGiFy(b)\n#define SCAT3(a,b,c)StGiFy(a) StGiFy(b) StGiFy(c)\n#define SCAT4(a,b,c,d)StGiFy(a) StGiFy(b) StGiFy(c) StGiFy(d)\n#define SCAT5(a,b,c,d,e)StGiFy(a) StGiFy(b) StGiFy(c) StGiFy(d) StGiFy(e)\n\n/* config-start */\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble. Usual values are 2, 4 and 8.\n */\n#if (_P9P_OBJTYPE == 386) || (_P9P_OBJTYPE==power)\n#\tdefine MEM_ALIGNBYTES 4\t /* config-skip */\n#else\n# if _P9P_OBJTYPE == 68020\n#\tdefine MEM_ALIGNBYTES 2  /* config-skip */\n# else\n#\tdefine MEM_ALIGNBYTES 8 /* config-skip */\n# endif\n#endif\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n#define BIN \"/_P9P_OBJTYPE/bin\"\t/*  */\n#define BIN_EXP \"/_P9P_OBJTYPE/bin\"\t/*  */\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"/bin/sed\"\t/**/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_AINTL\t\t/ **/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n#define HAS_ALARM\t\t/**/\n\n/* HASATTRIBUTE:\n *\tThis symbol indicates the C compiler can check for function attributes,\n *\tsuch as printf formats. This is normally only supported by GNU cc.\n */\n/*#define HASATTRIBUTE \t/* config-skip */\n#ifndef HASATTRIBUTE\n#ifdef __attribute__\n#undef __attribute__\n#endif\n#define __attribute__(_arg_)\n#endif\n\n/* HAS_BCMP:\n *\tThis symbol is defined if the bcmp() routine is available to\n *\tcompare blocks of memory.\n */\n#define HAS_BCMP\t/**/\n\n/* HAS_BCOPY:\n *\tThis symbol is defined if the bcopy() routine is available to\n *\tcopy blocks of memory.\n */\n#define HAS_BCOPY\t/**/\n\n/* HAS_BZERO:\n *\tThis symbol is defined if the bzero() routine is available to\n *\tset a memory block to 0.\n */\n#define HAS_BZERO\t/**/\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n#define HAS_CHOWN\t\t/**/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n/*#define HAS_CHROOT\t\t/ **/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n/*#define\tHAS_CHSIZE\t\t/ **/\n\n/* HASCONST:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe const type. There is no need to actually test for that symbol\n *\twithin your programs. The mere use of the \"const\" keyword will\n *\ttrigger the necessary tests.\n */\n#define HASCONST\t/**/\n#ifndef HASCONST\n#define const\n#endif\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n#define HAS_CUSERID\t\t/**/\n\n/* HAS_DBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol DBL_DIG, which is the number\n *\tof significant digits in a double precision number.  If this\n *\tsymbol is not defined, a guess of 15 is usually pretty good.\n */\n#define HAS_DBL_DIG \t/* */\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n#define HAS_DIFFTIME\t\t/**/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n/*#define HAS_DLERROR\t/ **/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n#define HAS_DUP2\t/**/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n#define HAS_FCHMOD\t\t/**/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n/*#define HAS_FCHOWN\t\t/ **/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n#define HAS_FCNTL\t\t/**/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n#define HAS_FGETPOS\t/**/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_FLOCK\t\t/ **/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n#define HAS_FORK\t\t/**/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n#define HAS_FSETPOS\t/**/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n#define HAS_GETTIMEOFDAY\t/**/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */ /* config-skip */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n#define HAS_GETGROUPS\t\t/* config-skip */\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n#define HAS_GETLOGIN\t\t/**/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n/*#define HAS_GETPGID\t\t/ **/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n/*#define HAS_GETPGRP2\t\t/ **/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n#define HAS_GETPPID\t\t/**/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n/*#define HAS_GETPRIORITY\t\t/ **/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n/*#define HAS_INET_ATON\t\t/ **/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n/*#define HAS_KILLPG\t/ **/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n/* #define HAS_LINK\t/**/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n#define HAS_LOCALECONV\t/**/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_LOCKF\t\t/ **/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n/*#define HAS_LSTAT\t\t/**/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n#define HAS_MBLEN\t\t/**/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to covert a multibyte string into a wide character string.\n */\n#define\tHAS_MBSTOWCS\t\t/**/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto covert a multibyte to a wide character.\n */\n#define HAS_MBTOWC\t\t/**/\n\n/* HAS_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tto compare blocks of memory.\n */\n#define HAS_MEMCMP\t/**/\n\n/* HAS_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy blocks of memory.\n */\n#define HAS_MEMCPY\t/**/\n\n/* HAS_MEMMOVE:\n *\tThis symbol, if defined, indicates that the memmove routine is available\n *\tto copy potentially overlapping blocks of memory. This should be used\n *\tonly when HAS_SAFE_BCOPY is not defined. If neither is there, roll your\n *\town version.\n */\n#define HAS_MEMMOVE\t/**/\n\n/* HAS_MEMSET:\n *\tThis symbol, if defined, indicates that the memset routine is available\n *\tto set blocks of memory.\n */\n#define HAS_MEMSET\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n#define HAS_MKDIR\t\t/**/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n#define HAS_MKFIFO\t\t/**/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n#define HAS_MKTIME\t\t/**/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n/*#define HAS_MSYNC\t\t/ **/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n/*#define HAS_MUNMAP\t\t/ **/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n/*#define HAS_NICE\t\t/ **/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n#define HAS_PATHCONF\t\t/**/\n#define HAS_FPATHCONF\t\t/**/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n#define HAS_PAUSE\t\t/**/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n#define HAS_PIPE\t\t/**/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors. You may safely\n *\tinclude <poll.h> when this symbol is defined.\n */\n/*#define HAS_POLL\t\t/ **/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#define HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n/*#define HAS_SEEKDIR\t\t/ **/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n/*#define HAS_TELLDIR\t\t/ **/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_REWINDDIR\t\t/**/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n/*#define HAS_READLINK\t\t/**/\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#define HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n#define HAS_RMDIR\t\t/**/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n#define HAS_SELECT\t/* config-skip */\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n/*#define HAS_SETEGID\t\t/ **/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n/*#define HAS_SETEUID\t\t/ **/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n#define HAS_SETLINEBUF\t\t/**/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n#define HAS_SETLOCALE\t/**/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n#define HAS_SETPGID\t/**/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n/*#define HAS_SETPGRP2\t\t/ **/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n/*#define HAS_SETPRIORITY\t\t/ **/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n/*#define HAS_SETREGID\t\t/ **/\n/*#define HAS_SETRESGID\t\t/ **/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n/*#define HAS_SETREUID\t\t/ **/\n/*#define HAS_SETRESUID\t\t/ **/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n/*#define HAS_SETRGID\t\t/ **/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n/*#define HAS_SETRUID\t\t/ **/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n#define HAS_SETSID\t/**/\n\n/* HAS_STRCHR:\n *\tThis symbol is defined to indicate that the strchr()/strrchr()\n *\tfunctions are available for string searching. If not, try the\n *\tindex()/rindex() pair.\n */\n/* HAS_INDEX:\n *\tThis symbol is defined to indicate that the index()/rindex()\n *\tfunctions are available for string searching.\n */\n#define HAS_STRCHR\t/**/\n/*#define HAS_INDEX\t/ **/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n#define HAS_STRCOLL\t/**/\n\n/* USE_STRUCT_COPY:\n *\tThis symbol, if defined, indicates that this C compiler knows how\n *\tto copy structures.  If undefined, you'll need to use a block copy\n *\troutine of some sort instead.\n */\n#define\tUSE_STRUCT_COPY\t/**/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n#define HAS_STRTOD\t/**/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#define HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n#define HAS_STRXFRM\t/**/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n/*#define HAS_SYMLINK\t/**/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n/*#define HAS_SYSCALL\t/ **/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n#define HAS_SYSCONF\t/**/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n#define HAS_SYSTEM\t/**/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n#define HAS_TCGETPGRP\t\t/**/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n#define HAS_TCSETPGRP\t\t/**/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n/*#define HAS_TRUNCATE\t/ **/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n#define HAS_TZNAME\t\t/**/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n#define HAS_UMASK\t\t/**/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n/*#define HAS_USLEEP\t\t/ **/\n\n/* HASVOLATILE:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe volatile declaration.\n */\n#define\tHASVOLATILE\t/**/\n#ifndef HASVOLATILE\n#define volatile\t/* config-skip */\n#endif\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n/*#define HAS_WAIT4\t/ **/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n#define HAS_WAITPID\t/**/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n#define HAS_WCSTOMBS\t/**/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto covert a wide character to a multibyte.\n */\n#define HAS_WCTOMB\t\t/**/\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n#define\tI_ARPA_INET\t\t/**/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n/*#define I_DBM\t/ **/\n/*#define I_RPCSVC_DBM\t/ **/\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#define I_DIRENT\t\t/**/\n/*#define DIRNAMLEN\t/ **/\n#define Direntry_t struct dirent\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n/*#define I_DLFCN\t\t/ **/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n#define I_FCNTL\t/**/\n\n/* I_FLOAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <float.h> to get definition of symbols like DBL_MAX or\n *\tDBL_MIN, i.e. machine dependent floating point values.\n */\n#define I_FLOAT\t\t/**/\n\n/* I_LIMITS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <limits.h> to get definition of symbols like WORD_BIT or\n *\tLONG_MAX, i.e. machine dependant limitations.\n */\n#define I_LIMITS\t\t/**/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n#define\tI_LOCALE\t\t/**/\n\n/* I_MATH:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <math.h>.\n */\n#define I_MATH\t\t/**/\n\n/* I_MEMORY:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <memory.h>.\n */\n/*#define I_MEMORY\t\t/ **/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and \n *\tshould be included.\n */\n/*#define I_NET_ERRNO\t\t/* config-skip */\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n#define I_NETINET_IN\t/* config-skip */\n\n/* I_STDDEF:\n *\tThis symbol, if defined, indicates that <stddef.h> exists and should\n *\tbe included.\n */\n#define I_STDDEF\t/**/\n\n/* I_STDLIB:\n *\tThis symbol, if defined, indicates that <stdlib.h> exists and should\n *\tbe included.\n */\n#define I_STDLIB\t\t/**/\n\n/* I_STRING:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <string.h> (USG systems) instead of <strings.h> (BSD systems).\n */\n#define I_STRING\t\t/**/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n/*#define I_SYS_DIR\t\t/ **/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n/*#define I_SYS_FILE\t\t/ **/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n#define\tI_SYS_IOCTL\t\t/**/\n/*#define I_SYS_SOCKIO\t/ **/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n/*#define I_SYS_NDIR\t/ **/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n#define I_SYS_PARAM\t\t/**/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n#define I_SYS_RESOURCE\t\t/**/\n\n/* Plan 9: file position in Plan 9 is <select.h> */\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n#define I_SYS_SELECT\t/**/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#define\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n#define\tI_SYS_TIMES\t\t/**/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n#define\tI_SYS_TYPES\t\t/**/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n#define I_SYS_UN\t\t/**/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n#define I_SYS_WAIT\t/**/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/*#define I_TERMIO\t\t/ **/\n#define I_TERMIOS\t\t/**/\n/*#define I_SGTTY\t\t/ **/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n#define I_UNISTD\t\t/**/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n#define I_UTIME\t\t/**/\n\n/* I_VALUES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <values.h> to get definition of symbols like MINFLOAT or\n *\tMAXLONG, i.e. machine dependant limitations.  Probably, you\n *\tshould use <limits.h> instead, if it is available.\n */\n/*#define I_VALUES\t\t/ **/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n/*#define I_VFORK\t/ **/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE 4\t\t/**/\n#define LONGSIZE 4\t\t/**/\n#define SHORTSIZE 2\t\t/**/\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n/*#define MULTIARCH\t\t/ **/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpart, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, or QUAD_IS_INT64_T.\n */\n#define HAS_QUAD\t/**/\n#ifdef HAS_QUAD\n#   define Quad_t long long\t/**/\n#   define Uquad_t unsigned long long\t/**/\n#   define QUADKIND 3\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#endif\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_ACCESSX\t\t/ **/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_EACCESS\t\t/ **/\n\n/* I_SYS_ACCESS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/access.h>.\n */\n/*#define   I_SYS_ACCESS                / **/\n\n/* I_SYS_SECURITY:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/security.h>.\n */\n/*#define   I_SYS_SECURITY\t/ **/\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"plan9\"\t\t/**/\n#define OSVERS \"1\"\t\t/**/\n\n/* PLAN9:\n * This symbol, if defined, indicates that the program is running under the\n * Plan 9 operating system.\n */\n#define PLAN9           /**/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.\n */\n#if defined(MULTIARCH)\n#  define MEM_ALIGNBYTES 8\n#else\n#define MEM_ALIGNBYTES 4\n#endif\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for perl.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define ARCHLIB_EXP \"/_P9P_OBJTYPE/lib/perl/_P9P_VERSION\"\n#define ARCHLIB \"/_P9P_OBJTYPE/lib/perl/_P9P_VERSION\"\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"plan9__P9P_OBJTYPE\"  /**/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n/*#define HAS_ATOLF\t\t/ **/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n#define HAS_ATOLL\t\t/**/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n#define BIN \"/usr/bin\"\t/**/\n#define BIN_EXP \"/usr/bin\"\t/**/\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\tin a UV, i.e. 0x1234 or 0x4321 or 0x12345678, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries (eg. on NeXT systems), use compiler-defined macros to\n *\tdetermine the byte order.\n *\tOn NeXT 3.2 (and greater), you can build \"Fat\" Multiple Architecture\n *\tBinaries (MAB) on either big endian or little endian machines.\n *\tThe endian-ness is available at compile-time.  This only matters\n *\tfor perl, where the config.h can be generated and installed on \n *\tone system, and used by a different architecture to build an\n *\textension.  Older versions of NeXT that might not have\n *\tdefined either *_ENDIAN__ were all on Motorola 680x0 series,\n *\tso the default case (for NeXT) is big endian to catch them. \n *\tThis might matter for NeXT 3.0.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\t/* config-skip */\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\t/* config-skip */\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#  if !defined(BYTEORDER) && (defined(NeXT) || defined(__NeXT__))\n#    define BYTEORDER 0x4321\n#  endif\n#else\n#define BYTEORDER 0x1234\t/* large digits for MSB */\n#endif /* NeXT */\n\n/* CAT2:\n *\tThis macro catenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if 42 == 1\n#define CAT2(a,b)\ta/**/b\n#define STRINGIFY(a)\t\"a\"\n\t\t/* If you can get stringification with catify, tell me how! */\n#endif\n#if 42 == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\t\n#define PeRl_StGiFy(a)\t#a\n/* the additional level of indirection enables these macros to be\n * used as arguments to other macros.  See K&R 2nd ed., page 231. */\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if 42 != 1 && 42 != 42\n#   include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.\t Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"cppstdin\"\n#define CPPMINUS \"\"\n#define CPPRUN \"/bin/cpp\"\n#define CPPLAST \"\"\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n/*#define HAS__FWALK\t\t/ **/\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n#define HAS_ACCESS\t\t/**/\n\n/* HAS_ASCTIME_R:\n *\tThis symbol, if defined, indicates that the asctime_r routine\n *\tis available to asctime re-entrantly.\n */\n/* ASCTIME_R_PROTO:\n *\tThis symbol encodes the prototype of asctime_r.\n *\tIt is zero if d_asctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_asctime_r\n *\tis defined.\n */\n/*#define HAS_ASCTIME_R\t   / **/\n#define ASCTIME_R_PROTO 0\t   /**/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n/*#define\tCASTI32\t\t/ **/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n/*#define\tCASTNEGFLOAT\t\t/* config-skip */\n#if _P9P_OBJTYPE == 386\n#  define CASTFLAGS 3           /**/ /* config-skip */\n#else\n#  define CASTFLAGS 0           /**/ /* config-skip */\n#endif\n\n/* HAS_CLASS:\n *\tThis symbol, if defined, indicates that the class routine is\n *\tavailable to classify doubles.  Available for example in AIX.\n *\tThe returned values are defined in <float.h> and are:\n *\n *\tFP_PLUS_NORM\tPositive normalized, nonzero\n *\tFP_MINUS_NORM\tNegative normalized, nonzero\n *\tFP_PLUS_DENORM\tPositive denormalized, nonzero\n *\tFP_MINUS_DENORM\tNegative denormalized, nonzero\n *\tFP_PLUS_ZERO\t+0.0\n *\tFP_MINUS_ZERO\t-0.0\n *\tFP_PLUS_INF\t+INF\n *\tFP_MINUS_INF\t-INF\n *\tFP_NANS\t\tSignaling Not a Number (NaNS)\n *\tFP_NANQ\t\tQuiet Not a Number (NaNQ)\n */\n/*#define HAS_CLASS\t\t/ **/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n/*#define VOID_CLOSEDIR\t\t/ **/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_CMSGHDR\t/ **/\n\n/* HAS_CRYPT_R:\n *\tThis symbol, if defined, indicates that the crypt_r routine\n *\tis available to crypt re-entrantly.\n */\n/* CRYPT_R_PROTO:\n *\tThis symbol encodes the prototype of crypt_r.\n *\tIt is zero if d_crypt_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_crypt_r\n *\tis defined.\n */\n/*#define HAS_CRYPT_R\t   / **/\n#define CRYPT_R_PROTO 0\t   /**/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n/*#define HAS_CSH\t\t/ **/\n#ifdef HAS_CSH\n#define CSH \"csh\"\t/**/\n#endif\n\n/* HAS_CTIME_R:\n *\tThis symbol, if defined, indicates that the ctime_r routine\n *\tis available to ctime re-entrantly.\n */\n/* CTIME_R_PROTO:\n *\tThis symbol encodes the prototype of ctime_r.\n *\tIt is zero if d_ctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctime_r\n *\tis defined.\n */\n/*#define HAS_CTIME_R\t   / **/\n#define CTIME_R_PROTO 0\t   /**/\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n/*#define \tDLSYM_NEEDS_UNDERSCORE \t/ **/\n\n/* HAS_DRAND48_R:\n *\tThis symbol, if defined, indicates that the drand48_r routine\n *\tis available to drand48 re-entrantly.\n */\n/* DRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of drand48_r.\n *\tIt is zero if d_drand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_drand48_r\n *\tis defined.\n */\n/*#define HAS_DRAND48_R\t   / **/\n#define DRAND48_R_PROTO 0\t   /**/\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n/*#define\tHAS_DRAND48_PROTO\t/ **/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n#define HAS_ENDGRENT\t\t/**/\n\n/* HAS_ENDGRENT_R:\n *\tThis symbol, if defined, indicates that the endgrent_r routine\n *\tis available to endgrent re-entrantly.\n */\n/* ENDGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of endgrent_r.\n *\tIt is zero if d_endgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endgrent_r\n *\tis defined.\n */\n/*#define HAS_ENDGRENT_R\t   / **/\n#define ENDGRENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n#define HAS_ENDHOSTENT\t\t/**/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n/*#define HAS_ENDNETENT\t\t/ **/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n/*#define HAS_ENDPROTOENT\t\t/ **/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n#define HAS_ENDPWENT\t\t/**/\n\n/* HAS_ENDPWENT_R:\n *\tThis symbol, if defined, indicates that the endpwent_r routine\n *\tis available to endpwent re-entrantly.\n */\n/* ENDPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of endpwent_r.\n *\tIt is zero if d_endpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endpwent_r\n *\tis defined.\n */\n/*#define HAS_ENDPWENT_R\t   / **/\n#define ENDPWENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n/*#define HAS_ENDSERVENT\t\t/ **/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n/*#define HAS_FAST_STDIO\t\t/**/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n/*#define HAS_FCHDIR\t\t/ **/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n/*#define FCNTL_CAN_LOCK\t\t/ **/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n/*#define HAS_FD_SET\t/ **/\n\n/* HAS_FINITE:\n *\tThis symbol, if defined, indicates that the finite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_FINITE\t\t/ **/\n\n/* HAS_FINITEL:\n *\tThis symbol, if defined, indicates that the finitel routine is\n *\tavailable to check whether a long double is finite\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_FINITEL\t\t/ **/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n#define\tFLEXFILENAMES\t\t/**/\n\n/* HAS_FP_CLASS:\n *\tThis symbol, if defined, indicates that the fp_class routine is\n *\tavailable to classify doubles.  Available for example in Digital UNIX.\n *\tThe returned values are defined in <math.h> and are:\n *\n *\tFP_SNAN           Signaling NaN (Not-a-Number)\n *\tFP_QNAN           Quiet NaN (Not-a-Number)\n *\tFP_POS_INF        +infinity\n *\tFP_NEG_INF        -infinity\n *\tFP_POS_NORM       Positive normalized\n *\tFP_NEG_NORM       Negative normalized\n *\tFP_POS_DENORM     Positive denormalized\n *\tFP_NEG_DENORM     Negative denormalized\n *\tFP_POS_ZERO       +0.0 (positive zero)\n *\tFP_NEG_ZERO       -0.0 (negative zero)\n */\n/*#define HAS_FP_CLASS\t\t/ **/\n\n/* HAS_FPCLASS:\n *\tThis symbol, if defined, indicates that the fpclass routine is\n *\tavailable to classify doubles.  Available for example in Solaris/SVR4.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASS\t\t/ **/\n\n/* HAS_FPCLASSIFY:\n *\tThis symbol, if defined, indicates that the fpclassify routine is\n *\tavailable to classify doubles.  Available for example in HP-UX.\n *\tThe returned values are defined in <math.h> and are\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/*#define HAS_FPCLASSIFY\t\t/ **/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n/*#define\tHAS_FPOS64_T    \t/ **/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n/*#define HAS_FREXPL\t\t/ **/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_FS_DATA\t/ **/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FSEEKO\t\t/ **/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATFS\t\t/ **/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n#define HAS_FSYNC\t\t/**/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FTELLO\t\t/ **/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tThe usual values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) sprintf((b),\"%.*g\",(n),(x))\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n#define HAS_GETCWD\t\t/**/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enhanced (shadow) password entries by name.\n */\n/*#define HAS_GETESPWNAM\t\t/ **/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n/*#define HAS_GETFSSTAT\t\t/ **/\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n#define HAS_GETGRENT\t\t/**/\n\n/* HAS_GETGRENT_R:\n *\tThis symbol, if defined, indicates that the getgrent_r routine\n *\tis available to getgrent re-entrantly.\n */\n/* GETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of getgrent_r.\n *\tIt is zero if d_getgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrent_r\n *\tis defined.\n */\n/*#define HAS_GETGRENT_R\t   / **/\n#define GETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_GETGRGID_R:\n *\tThis symbol, if defined, indicates that the getgrgid_r routine\n *\tis available to getgrgid re-entrantly.\n */\n/* GETGRGID_R_PROTO:\n *\tThis symbol encodes the prototype of getgrgid_r.\n *\tIt is zero if d_getgrgid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrgid_r\n *\tis defined.\n */\n/*#define HAS_GETGRGID_R\t   / **/\n#define GETGRGID_R_PROTO 0\t   /**/\n\n/* HAS_GETGRNAM_R:\n *\tThis symbol, if defined, indicates that the getgrnam_r routine\n *\tis available to getgrnam re-entrantly.\n */\n/* GETGRNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getgrnam_r.\n *\tIt is zero if d_getgrnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrnam_r\n *\tis defined.\n */\n/*#define HAS_GETGRNAM_R\t   / **/\n#define GETGRNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n#define HAS_GETHOSTBYADDR\t\t/**/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n#define HAS_GETHOSTBYNAME\t\t/**/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n/*#define HAS_GETHOSTENT\t\t/ **/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n#define HAS_GETHOSTNAME\t/**/\n#define HAS_UNAME\t\t/**/\n/*#define HAS_PHOSTNAME\t/ **/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"/bin/uname -n\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETHOST_PROTOS\t/ **/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n/*#define HAS_GETITIMER\t\t/ **/\n\n/* HAS_GETLOGIN_R:\n *\tThis symbol, if defined, indicates that the getlogin_r routine\n *\tis available to getlogin re-entrantly.\n */\n/* GETLOGIN_R_PROTO:\n *\tThis symbol encodes the prototype of getlogin_r.\n *\tIt is zero if d_getlogin_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getlogin_r\n *\tis defined.\n */\n/*#define HAS_GETLOGIN_R\t   / **/\n#define GETLOGIN_R_PROTO 0\t   /**/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n/*#define HAS_GETMNT\t\t/ **/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n/*#define HAS_GETMNTENT\t\t/ **/\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n/*#define HAS_GETNETBYADDR\t\t/ **/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n/*#define HAS_GETNETBYNAME\t\t/ **/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n/*#define HAS_GETNETENT\t\t/ **/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETNET_PROTOS\t/ **/\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n/*#define HAS_GETPAGESIZE\t\t/ **/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n/*#define HAS_GETPROTOENT\t\t/ **/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n#define HAS_GETPGRP\t\t/**/\n/*#define USE_BSD_GETPGRP\t/ **/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n#define HAS_GETPROTOBYNAME\t\t/**/\n/*#define HAS_GETPROTOBYNUMBER\t\t/ **/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETPROTO_PROTOS\t/ **/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n/*#define HAS_GETPRPWNAM\t\t/ **/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n#define HAS_GETPWENT\t\t/**/\n\n/* HAS_GETPWENT_R:\n *\tThis symbol, if defined, indicates that the getpwent_r routine\n *\tis available to getpwent re-entrantly.\n */\n/* GETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of getpwent_r.\n *\tIt is zero if d_getpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwent_r\n *\tis defined.\n */\n/*#define HAS_GETPWENT_R\t   / **/\n#define GETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPWNAM_R:\n *\tThis symbol, if defined, indicates that the getpwnam_r routine\n *\tis available to getpwnam re-entrantly.\n */\n/* GETPWNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getpwnam_r.\n *\tIt is zero if d_getpwnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwnam_r\n *\tis defined.\n */\n/*#define HAS_GETPWNAM_R\t   / **/\n#define GETPWNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETPWUID_R:\n *\tThis symbol, if defined, indicates that the getpwuid_r routine\n *\tis available to getpwuid re-entrantly.\n */\n/* GETPWUID_R_PROTO:\n *\tThis symbol encodes the prototype of getpwuid_r.\n *\tIt is zero if d_getpwuid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwuid_r\n *\tis defined.\n */\n/*#define HAS_GETPWUID_R\t   / **/\n#define GETPWUID_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n/*#define HAS_GETSERVENT\t\t/ **/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETSERV_PROTOS\t/ **/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n/*#define HAS_GETSPNAM\t\t/ **/\n\n/* HAS_GETSPNAM_R:\n *\tThis symbol, if defined, indicates that the getspnam_r routine\n *\tis available to getspnam re-entrantly.\n */\n/* GETSPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getspnam_r.\n *\tIt is zero if d_getspnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getspnam_r\n *\tis defined.\n */\n/*#define HAS_GETSPNAM_R\t   / **/\n#define GETSPNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n#define HAS_GETSERVBYNAME\t\t/**/\n/*#define HAS_GETSERVBYPORT\t\t/ **/\n\n/* HAS_GMTIME_R:\n *\tThis symbol, if defined, indicates that the gmtime_r routine\n *\tis available to gmtime re-entrantly.\n */\n/* GMTIME_R_PROTO:\n *\tThis symbol encodes the prototype of gmtime_r.\n *\tIt is zero if d_gmtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gmtime_r\n *\tis defined.\n */\n/*#define HAS_GMTIME_R\t   / **/\n#define GMTIME_R_PROTO 0\t   /**/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n/*#define HAS_GNULIBC  \t/ **/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n/*#define HAS_HASMNTOPT\t\t/ **/\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n#define HAS_HTONL\t\t/**/\n#define HAS_HTONS\t\t/**/\n#define HAS_NTOHL\t\t/**/\n#define HAS_NTOHS\t\t/**/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n/*#define HAS_ILOGBL\t\t/**/\n\n/* HAS_INT64_T:\n *     This symbol will defined if the C compiler supports int64_t.\n *     Usually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n#define     HAS_INT64_T               /**/\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii \n *\tis available.\n */\n/*#define HAS_ISASCII\t\t/ **/\n\n/* HAS_ISFINITE:\n *\tThis symbol, if defined, indicates that the isfinite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_ISFINITE\t\t/ **/\n\n/* HAS_ISINF:\n *\tThis symbol, if defined, indicates that the isinf routine is\n *\tavailable to check whether a double is an infinity.\n */\n/*#define HAS_ISINF\t\t/ **/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n/*#define HAS_ISNAN\t\t/ **/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n/*#define HAS_ISNANL\t\t/ **/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n/*#define HAS_LCHOWN\t\t/ **/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n#define HAS_LDBL_DIG \t/* */\n\n/* HAS_LOCALTIME_R:\n *\tThis symbol, if defined, indicates that the localtime_r routine\n *\tis available to localtime re-entrantly.\n */\n/* LOCALTIME_R_NEEDS_TZSET:\n *\tMany libc's localtime_r implementations do not call tzset,\n *\tmaking them differ from localtime(), and making timezone\n *\tchanges using $ENV{TZ} without explicitly calling tzset\n *\timpossible. This symbol makes us call tzset before localtime_r\n */\n/* LOCALTIME_R_PROTO:\n *\tThis symbol encodes the prototype of localtime_r.\n *\tIt is zero if d_localtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_localtime_r\n *\tis defined.\n */\n/*#define HAS_LOCALTIME_R\t   / **/\n/*#define LOCALTIME_R_NEEDS_TZSET\t   / **/\n#define LOCALTIME_R_PROTO 0\t   /**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the \n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.\n */\n#define HAS_LONG_DOUBLE\t\t/**/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE 8\t\t/**/\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the \n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n#define HAS_LONG_LONG\t\t/**/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE 8\t\t/**/\n#endif\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n/*#define\tHAS_LSEEK_PROTO\t/ **/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n/*#define HAS_MADVISE\t\t/ **/\n\n/* HAS_MEMCHR:\n *\tThis symbol, if defined, indicates that the memchr routine is available\n *\tto locate characters within a C string.\n */\n#define HAS_MEMCHR\t/**/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n/*#define HAS_MKDTEMP\t\t/ **/\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n/*#define HAS_MKSTEMP\t\t/ **/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to exclusively create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n/*#define HAS_MKSTEMPS\t\t/ **/\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'cadd_t'.\n */\n/*#define HAS_MMAP\t\t/ **/\n#define Mmap_t void *\t/**/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/* HAS_MODFL_POW32_BUG:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tbroken for long doubles >= pow(2, 32).\n *\tFor example from 4294967303.150000 one would get 4294967302.000000\n *\tand 1.150000.  The bug has been seen in certain versions of glibc,\n *\trelease 2.2.2 is known to be okay.\n */\n/*#define HAS_MODFL\t\t/ **/\n/*#define HAS_MODFL_POW32_BUG\t\t/ **/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n/*#define HAS_MPROTECT\t\t/ **/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n/*#define HAS_MSG\t\t/ **/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_MSGHDR\t/ **/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n/*#define\tHAS_OFF64_T    \t\t/ **/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n#define HAS_OPEN3\t\t/**/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n/*#define OLD_PTHREAD_CREATE_JOINABLE  / **/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield \n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/*#define HAS_PTHREAD_YIELD\t/ **/\n#define SCHED_YIELD\tundef\t/**/\n/*#define HAS_SCHED_YIELD\t/ **/\n\n/* HAS_RANDOM_R:\n *\tThis symbol, if defined, indicates that the random_r routine\n *\tis available to random re-entrantly.\n */\n/* RANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of random_r.\n *\tIt is zero if d_random_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r\n *\tis defined.\n */\n/*#define HAS_RANDOM_R\t   / **/\n#define RANDOM_R_PROTO 0\t   /**/\n\n/* HAS_READDIR_R:\n *\tThis symbol, if defined, indicates that the readdir_r routine\n *\tis available to readdir re-entrantly.\n */\n/* READDIR_R_PROTO:\n *\tThis symbol encodes the prototype of readdir_r.\n *\tIt is zero if d_readdir_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir_r\n *\tis defined.\n */\n/*#define HAS_READDIR_R\t   / **/\n#define READDIR_R_PROTO 0\t   /**/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n#define HAS_READV\t\t/**/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_RECVMSG\t\t/ **/\n\n/* HAS_SAFE_BCOPY:\n *\tThis symbol, if defined, indicates that the bcopy routine is available\n *\tto copy potentially overlapping memory blocks. Normally, you should\n *\tprobably use memmove() or memcpy(). If neither is defined, roll your\n *\town version.\n */\n/*#define HAS_SAFE_BCOPY\t/ **/\n\n/* HAS_SAFE_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy potentially overlapping memory blocks.  If you need to\n *\tcopy overlapping memory blocks, you should check HAS_MEMMOVE and\n *\tuse memmove() instead, if available.\n */\n/*#define HAS_SAFE_MEMCPY\t/ **/\n\n/* HAS_SANE_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tand can be used to compare relative magnitudes of chars with their high\n *\tbits set.  If it is not defined, roll your own version.\n */\n#define HAS_SANE_MEMCMP\t/**/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n/*#define\tHAS_SBRK_PROTO\t/ **/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n/*#define HAS_SEM\t\t/ **/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n/*#define HAS_SCALBNL\t\t/**/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_SENDMSG\t\t/ **/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n#define HAS_SETGRENT\t\t/**/\n\n/* HAS_SETGRENT_R:\n *\tThis symbol, if defined, indicates that the setgrent_r routine\n *\tis available to setgrent re-entrantly.\n */\n/* SETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of setgrent_r.\n *\tIt is zero if d_setgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setgrent_r\n *\tis defined.\n */\n/*#define HAS_SETGRENT_R\t   / **/\n#define SETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_SETGROUPS\t\t/* config-skip */\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n/*#define HAS_SETHOSTENT\t\t/ **/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n/*#define HAS_SETITIMER\t\t/ **/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n/*#define HAS_SETNETENT\t\t/ **/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n/*#define HAS_SETPROTOENT\t\t/ **/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n/*#define HAS_SETPGRP\t\t/ **/\n/*#define USE_BSD_SETPGRP\t/ **/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n/*#define HAS_SETPROCTITLE\t\t/ **/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n#define HAS_SETPWENT\t\t/**/\n\n/* HAS_SETPWENT_R:\n *\tThis symbol, if defined, indicates that the setpwent_r routine\n *\tis available to setpwent re-entrantly.\n */\n/* SETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of setpwent_r.\n *\tIt is zero if d_setpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setpwent_r\n *\tis defined.\n */\n/*#define HAS_SETPWENT_R\t   / **/\n#define SETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n/*#define HAS_SETSERVENT\t\t/ **/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n#define HAS_SETVBUF\t\t/**/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n/*#define HAS_SHM\t\t/ **/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n#define HAS_SIGACTION\t/**/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n#define HAS_SIGSETJMP\t/* config-skip */\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\t/* config-skip */\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\t/* config-skip */\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\t/* config-skip */\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_STATIC_INLINE:\n *\tThis symbol, if defined, indicates that the C compiler supports\n *\tC99-style static inline.  That is, the function can't be called\n *\tfrom another translation unit.\n */\n/* PERL_STATIC_INLINE:\n *\tThis symbol gives the best-guess incantation to use for static\n *\tinline functions.  If HAS_STATIC_INLINE is defined, this will\n *\tgive C99-style inline.  If HAS_STATIC_INLINE is not defined,\n *\tthis will give a plain 'static'.  It will always be defined\n *\tto something that gives static linkage.\n *\tPossibilities include\n *\t\tstatic inline       (c99)\n *\t\tstatic __inline__   (gcc -ansi)\n *\t\tstatic __inline     (MSVC)\n *\t\tstatic _inline      (older MSVC)\n *\t\tstatic              (c89 compilers)\n */\n/*#define HAS_STATIC_INLINE\t\t\t\t/ **/\n#define PERL_STATIC_INLINE static           \t/**/\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n/* HAS_MSG_CTRUNC:\n *\tThis symbol, if defined, indicates that the MSG_CTRUNC is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_DONTROUTE:\n *\tThis symbol, if defined, indicates that the MSG_DONTROUTE is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_OOB:\n *\tThis symbol, if defined, indicates that the MSG_OOB is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PEEK:\n *\tThis symbol, if defined, indicates that the MSG_PEEK is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PROXY:\n *\tThis symbol, if defined, indicates that the MSG_PROXY is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_SCM_RIGHTS:\n *\tThis symbol, if defined, indicates that the SCM_RIGHTS is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n#define\tHAS_SOCKET\t\t/**/\n#define\tHAS_SOCKETPAIR\t/**/\n/*#define\tHAS_MSG_CTRUNC\t/ **/\n/*#define\tHAS_MSG_DONTROUTE\t/ **/\n/*#define\tHAS_MSG_OOB\t/ **/\n/*#define\tHAS_MSG_PEEK\t/ **/\n/*#define\tHAS_MSG_PROXY\t/ **/\n/*#define\tHAS_SCM_RIGHTS\t/ **/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n/*#define HAS_SOCKS5_INIT\t\t/ **/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n/*#define HAS_SQRTL\t\t/ **/\n\n/* HAS_SRAND48_R:\n *\tThis symbol, if defined, indicates that the srand48_r routine\n *\tis available to srand48 re-entrantly.\n */\n/* SRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of srand48_r.\n *\tIt is zero if d_srand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srand48_r\n *\tis defined.\n */\n/*#define HAS_SRAND48_R\t   / **/\n#define SRAND48_R_PROTO 0\t   /**/\n\n/* HAS_SRANDOM_R:\n *\tThis symbol, if defined, indicates that the srandom_r routine\n *\tis available to srandom re-entrantly.\n */\n/* SRANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of srandom_r.\n *\tIt is zero if d_srandom_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srandom_r\n *\tis defined.\n */\n/*#define HAS_SRANDOM_R\t   / **/\n#define SRANDOM_R_PROTO 0\t   /**/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n/*#define USE_STAT_BLOCKS \t/ **/\n#endif\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n/*#define HAS_STRUCT_STATFS_F_FLAGS\t\t/ **/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_STATFS\t/ **/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATVFS\t\t/ **/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n/*#define USE_STDIO_PTR \t/ **/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\t((fp)->_ptr)\n/*#define STDIO_PTR_LVALUE \t\t/ **/\n#define FILE_cnt(fp)\t((fp)->_cnt)\n/*#define STDIO_CNT_LVALUE \t\t/ **/\n/*#define STDIO_PTR_LVAL_SETS_CNT\t/ **/\n/*#define STDIO_PTR_LVAL_NOCHANGE_CNT\t/ **/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n/*#define USE_STDIO_BASE \t/ **/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\t((fp)->_base)\n#define FILE_bufsiz(fp)\t((fp)->_cnt + (fp)->_ptr - (fp)->_base)\n#endif\n\n/* HAS_STRERROR:\n *\tThis symbol, if defined, indicates that the strerror routine is\n *\tavailable to translate error numbers to strings. See the writeup\n *\tof Strerror() in this file before you try to define your own.\n */\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n/* Strerror:\n *\tThis preprocessor symbol is defined as a macro if strerror() is\n *\tnot available to translate error numbers to strings but sys_errlist[]\n *\tarray is there.\n */\n#define HAS_STRERROR\t\t/**/\n#define HAS_SYS_ERRLIST\t/**/\n#define Strerror(e) strerror(e)\n\n/* HAS_STRERROR_R:\n *\tThis symbol, if defined, indicates that the strerror_r routine\n *\tis available to strerror re-entrantly.\n */\n/* STRERROR_R_PROTO:\n *\tThis symbol encodes the prototype of strerror_r.\n *\tIt is zero if d_strerror_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_strerror_r\n *\tis defined.\n */\n/*#define HAS_STRERROR_R\t   / **/\n#define STRERROR_R_PROTO 0\t   /**/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD\t\t/ **/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n/*#define HAS_STRTOLL\t\t/ **/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n/*#define HAS_STRTOQ\t\t/ **/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#define HAS_STRTOUL\t/**/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n/*#define HAS_STRTOULL\t\t/ **/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n/*#define HAS_STRTOUQ\t\t/ **/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n/*#define\tHAS_TELLDIR_PROTO\t/ **/\n\n/* HAS_TIME:\n *\tThis symbol, if defined, indicates that the time() routine exists.\n */\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#define HAS_TIME\t\t/**/\n#define Time_t time_t\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n * use getrusage(). It may be necessary to include <sys/times.h>.\n */\n#define HAS_TIMES\t\t/**/\n\n/* HAS_TMPNAM_R:\n *\tThis symbol, if defined, indicates that the tmpnam_r routine\n *\tis available to tmpnam re-entrantly.\n */\n/* TMPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of tmpnam_r.\n *\tIt is zero if d_tmpnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_tmpnam_r\n *\tis defined.\n */\n/*#define HAS_TMPNAM_R\t   / **/\n#define TMPNAM_R_PROTO 0\t   /**/\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n/*#define HAS_UALARM\t\t/ **/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n/*#define HAS_UNION_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMID_DS\t/ **/\n\n/* HAS_UNORDERED:\n *\tThis symbol, if defined, indicates that the unordered routine is\n *\tavailable to check whether two doubles are unordered\n *\t(effectively: whether either of them is NaN)\n */\n/*#define HAS_UNORDERED\t\t/ **/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n/*#define HAS_USTAT\t\t/ **/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n/*#define HAS_VFORK\t/ **/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t void\t/* Signal handler's return type */\n\n/* HAS_VPRINTF:\n *\tThis symbol, if defined, indicates that the vprintf routine is available\n *\tto printf with a pointer to an argument list.  If unavailable, you\n *\tmay need to write your own, probably in terms of _doprnt().\n */\n/* USE_CHAR_VSPRINTF:\n *\tThis symbol is defined if this system has vsprintf() returning type\n *\t(char*).  The trend seems to be to declare it as \"int vsprintf()\".  It\n *\tis up to the package author to declare vsprintf correctly based on the\n *\tsymbol.\n */\n#define HAS_VPRINTF\t/**/\n#define USE_CHAR_VSPRINTF \t/**/\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n#define HAS_WRITEV\t\t/**/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n/*#define USE_DYNAMIC_LOADING\t\t/ **/\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE 8\t\t/**/\n\n/* EBCDIC:\n *     This symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n/*#define\tEBCDIC \t\t/ **/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) does flush\n *\tall pending stdio output.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n#define\tFFLUSH_NULL \t\t/**/\n/*#define\tFFLUSH_ALL \t\t/ **/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t fpos_t\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t\"hd\"\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedess of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t-1\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size 2\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t gid_t\t\t/* Type for getgid(), etc... */ /* config-skip */\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc... \n *\tIt may be necessary to include <sys/types.h> to get any \n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t gid_t\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\tu_int32_t\t\t/**/\n#define DB_Prefix_t\tsize_t  \t/**/\n#define DB_VERSION_MAJOR_CFG\t  \t/**/\n#define DB_VERSION_MINOR_CFG\t  \t/**/\n#define DB_VERSION_PATCH_CFG\t  \t/**/\n\n/* I_FP_CLASS:\n *\tThis symbol, if defined, indicates that <fp_class.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP_CLASS\t\t/ **/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n#define I_GRP\t\t/**/\n/*#define GRPASSWD\t/ **/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_IEEEFP\t\t/ **/\n\n/* I_INTTYPES:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <inttypes.h>.\n */\n#define   I_INTTYPES                /**/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LIBUTIL\t\t/ **/\n\n/* I_MACH_CTHREADS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <mach/cthreads.h>.\n */\n/*#define   I_MACH_CTHREADS\t/ **/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n/*#define\tI_MNTENT\t\t/ **/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n#define I_NETDB\t\t/**/\n\n/* I_NETINET_TCP:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <netinet/tcp.h>.\n */\n#define   I_NETINET_TCP                /**/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included.\n */\n/*#define\tI_POLL\t\t/ **/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n/*#define\tI_PROT\t\t/ **/\n\n/* I_PTHREAD:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <pthread.h>.\n */\n/*#define   I_PTHREAD\t/ **/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n#define I_PWD\t\t/**/\n/*#define PWQUOTA\t/ **/\n/*#define PWAGE\t/ **/\n/*#define PWCHANGE\t/ **/\n/*#define PWCLASS\t/ **/\n/*#define PWEXPIRE\t/ **/\n/*#define PWCOMMENT\t/ **/\n/*#define PWGECOS\t/ **/\n/*#define PWPASSWD\t/ **/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SHADOW\t\t/ **/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SOCKS\t\t/ **/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SUNMATH\t\t/ **/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSLOG\t\t/ **/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSMODE\t\t/ **/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_MOUNT\t\t/ **/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n/*#define\tI_SYS_STATFS\t\t/ **/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_STATVFS\t\t/ **/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n#define\tI_SYSUIO\t\t/**/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n#define\tI_SYSUTSNAME\t\t/**/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_VFS\t\t/ **/\n\n/* Plan 9: P9 has both <time.h> and <sys/time.h> */\n/* I_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n#define I_SYS_TIME\t/**/\n\n\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n/* HAS_TM_TM_ZONE:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_zone field.\n */\n#define I_TIME\t\t/**/\n/*#define I_SYS_TIME\t\t/ **/\n/*#define I_SYS_TIME_KERNEL\t\t/ **/\n/*#define HAS_TM_TM_ZONE\t\t/ **/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n/*#define\tI_USTAT\t\t/ **/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n#define PERL_INC_VERSION_LIST 0\t\t/**/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n * \talso as /usr/bin/perl.\n */\n/*#define INSTALL_USR_BIN_PERL\t/ **/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n#define PERL_PRIfldbl\t\"f\"\t/**/\n#define PERL_PRIgldbl\t\"g\"\t/**/\n#define PERL_PRIeldbl\t\"e\"\t/**/\n#define PERL_SCNfldbl\t\"f\"\t/**/\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t off_t\t\t/* <offset> type */\n#define LSEEKSIZE 8\t\t/* <offset> size */\n#define Off_t_size 8\t/* <offset> size */\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n * void, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t void *\t\t\t/**/\n#define Free_t void\t\t\t/**/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n#define MYMALLOC\t\t\t/**/\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes \n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t mode_t\t /* file mode parameter for system calls */\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK O_NONBLOCK\n#define VAL_EAGAIN EAGAIN\n#define RD_NODATA -1\n#define EOF_NONBLOCK\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n/*#define\tNEED_VA_COPY\t\t/ **/\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\tchar * /**/\n#define Netdb_hlen_t\t\tsize_t /**/\n#define Netdb_name_t\t\tchar * /**/\n#define Netdb_net_t\t\tlong /**/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n/*#define PERL_OTHERLIBDIRS \" \"\t\t/ **/\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n#define\tIVTYPE\t\tlong\t\t/**/\n#define\tUVTYPE\t\tunsigned long\t\t/**/\n#define\tI8TYPE\t\tchar\t\t/**/\n#define\tU8TYPE\t\tunsigned char\t\t/**/\n#define\tI16TYPE\t\tshort\t/**/\n#define\tU16TYPE\t\tunsigned short\t/**/\n#define\tI32TYPE\t\tlong\t/**/\n#define\tU32TYPE\t\tunsigned long\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\tlong long\t/**/\n#define\tU64TYPE\t\tunsigned long long\t/**/\n#endif\n#define\tNVTYPE\t\tdouble\t\t/**/\n#define\tIVSIZE\t\t4\t\t/**/\n#define\tUVSIZE\t\t4\t\t/**/\n#define\tI8SIZE\t\t1\t\t/**/\n#define\tU8SIZE\t\t1\t\t/**/\n#define\tI16SIZE\t\t2\t/**/\n#define\tU16SIZE\t\t2\t/**/\n#define\tI32SIZE\t\t4\t/**/\n#define\tU32SIZE\t\t4\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t8\t/**/\n#define\tU64SIZE\t\t8\t/**/\n#endif\n#define\tNVSIZE\t\t8\t\t/**/\n/*#define\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\t31\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t\"ld\"\t\t/**/\n#define\tUVuf\t\t\"lu\"\t\t/**/\n#define\tUVof\t\t\"lo\"\t\t/**/\n#define\tUVxf\t\t\"lx\"\t\t/**/\n#define\tUVXf\t\t\"lX\"\t\t/**/\n#define\tNVef\t\t\"e\"\t\t/**/\n#define\tNVff\t\t\"f\"\t\t/**/\n#define\tNVgf\t\t\"g\"\t\t/**/\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t pid_t\t\t/* PID type */\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"/sys/lib/perl/5.22.0\"\t\t/**/\n#define PRIVLIB_EXP \"/sys/lib/perl/5.22.0\"\t\t/**/\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE 4\t\t/**/\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\t(rand() / (double) ((unsigned long)1 << 15))\t\t/**/\n#define Rand_seed_t\t\tunsigned\t\t/**/\n#define seedDrand01(x)\tsrand((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t15\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS \t32\t/**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you \n *\thave select(), of course.\n */\n#define Select_fd_set_t \tfd_set*\t/**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_num list.\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup. \n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.  \n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name list.\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME \"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"ABRT\", \"FPE\", \"KILL\", \"SEGV\", \"PIPE\", \"ALRM\", \"TERM\", \"USR1\", \"USR2\", \"BUS\", \"CHLD\", \"CONT\", \"STOP\", \"TSTP\", \"TTIN\", \"TTOU\", \"NUM21\", \"NUM22\", \"NUM23\", \"NUM24\", \"NUM25\", \"NUM26\", \"NUM27\", \"NUM28\", \"NUM29\", \"NUM30\", \"NUM31\", \"NUM32\", \"NUM33\", \"NUM34\", \"NUM35\", \"NUM36\", \"NUM37\", \"NUM38\", \"NUM39\", \"NUM40\", \"NUM41\", \"NUM42\", \"NUM43\", \"NUM44\", \"NUM45\", \"NUM46\", \"NUM47\", \"NUM48\", \"NUM49\", 0\t\t/**/\n#define SIG_NUM  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0\t\t/**/\n#define SIG_SIZE 50\t\t\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define SITEARCH_EXP  \"/_P9P_OBJTYPE/lib/perl/_P9P_VERSION/site_perl\"\t/* */\n#define SITEARCH  \"/_P9P_OBJTYPE/lib/perl/_P9P_VERSION/site_perl\"\t/* */\n\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"/sys/lib/perl/5.22.0/site_perl\"\t\t/**/\n#define SITELIB_EXP \"/sys/lib/perl/5.22.0/site_perl\"\t\t/**/\n#define SITELIB_STEM \"/sys/lib/perl/5.22.0/site_perl\"\t\t/**/\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size 4\t\t/* */\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t size_t\t /* length parameter for string functions */\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\tint /**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t ssize_t\t /* signed count of bytes */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"#!/bin/perl\"\t\t/**/\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR char\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n/*#define\tHAS_STDIO_STREAM_ARRAY\t/ **/\n#define STDIO_STREAM_ARRAY\t\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t\"hd\"\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedess of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t-1\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size 2\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t uid_t\t\t/* UID type */\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n/*#define\tUSE_64_BIT_INT\t\t/ **/\n#endif\n\n#ifndef USE_64_BIT_ALL\n/*#define\tUSE_64_BIT_ALL\t\t/ **/\n#endif\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n/*#define\tUSE_FAST_STDIO\t\t/ **/\n#endif\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n#define\tUSE_LARGE_FILES\t\t/**/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n/*#define\tUSE_LONG_DOUBLE\t\t/ **/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n/*#define\tUSE_MORE_BITS\t\t/ **/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n/*#define\tMULTIPLICITY\t\t/ **/\n#endif\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n#define\tUSE_PERLIO\t\t/**/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n/*#define\tUSE_SOCKS\t\t/ **/\n#endif\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* USE_5005THREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the 5.005-based threading implementation.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n/*#define\tUSE_5005THREADS\t\t/ **/\n/*#define\tUSE_ITHREADS\t\t/ **/\n#if defined(USE_5005THREADS) && !defined(USE_ITHREADS)\n#define\t\tUSE_THREADS\t\t/* until src is revised*/\n#endif\n/*#define\tOLD_PTHREADS_API\t\t/ **/\n/*#define\tUSE_REENTRANT_API\t/ **/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front. \n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor \n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define PERL_VENDORARCH \"\"\t\t/ **/\n/*#define PERL_VENDORARCH_EXP \"\"\t\t/ **/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n/*#define PERL_VENDORLIB_EXP \"\"\t\t/ **/\n/*#define PERL_VENDORLIB_STEM \"\"\t\t/ **/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n/*#define HAS_CRYPT\t\t/ **/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n/*#define SETUID_SCRIPTS_ARE_SECURE_NOW\t/ **/\n/*#define DOSUID\t\t/ **/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t \t/* config-skip */\n/*#define HAS_SHMAT_PROTOTYPE\t/ **/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/*#define I_NDBM\t/ **/\n\n/* I_STDARG:\n *\tThis symbol, if defined, indicates that <stdarg.h> exists and should\n *\tbe included.\n */\n/* I_VARARGS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <varargs.h>.\n */\n#define I_STDARG\t\t/**/\n/*#define I_VARARGS\t/ **/\n\n/* CAN_PROTOTYPE:\n *\tIf defined, this macro indicates that the C compiler can handle\n *\tfunction prototypes.\n */\n/* _:\n *\tThis macro is used to declare function parameters for folks who want\n *\tto make declarations with prototypes using a different style than\n *\tthe above macros.  Use double parentheses.  For example:\n *\n *\t\tint main _((int argc, char *argv[]));\n */\n#define\tCAN_PROTOTYPE\t/**/\n#ifdef CAN_PROTOTYPE\n#define\t_(args) args\n#else\n#define\t_(args) ()\n#endif\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"/bin/sh\"  /* config-skip */\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n/*#define\tUSE_CROSS_COMPILE\t/ **/\n#define\tPERL_TARGETARCH\t\"\"\t/**/\n#endif\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n/*#define HAS_COPYSIGNL\t\t/**/\n\n/* USE_CPLUSPLUS:\n *\tThis symbol, if defined, indicates that a C++ compiler was\n *\tused to compiled Perl and will be used to compile extensions.\n */\n/*#define USE_CPLUSPLUS\t\t/**/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n/*#define\tHAS_DBMINIT_PROTO\t/ **/\n\n/* HAS_DIRFD:\n *\tThis manifest constant lets the C program know that dirfd\n *\tis available.\n */\n/*#define HAS_DIRFD\t\t/ **/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n/*#define\tHAS_FLOCK_PROTO\t/ **/\n\n/* HAS_FPCLASSL:\n *\tThis symbol, if defined, indicates that the fpclassl routine is\n *\tavailable to classify long doubles.  Available for example in IRIX.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASSL\t\t/ **/\n\n/* HAS_NL_LANGINFO:\n *\tThis symbol, if defined, indicates that the nl_langinfo routine is\n *\tavailable to return local data.  You will also need <langinfo.h>\n *\tand therefore I_LANGINFO.\n */\n/*#define HAS_NL_LANGINFO\t\t/ **/\n\n/* HAS_PROCSELFEXE:\n *\tThis symbol is defined if PROCSELFEXE_PATH is a symlink\n *\tto the absolute pathname of the executing program.\n */\n/* PROCSELFEXE_PATH:\n *\tIf HAS_PROCSELFEXE is defined this symbol is the filename\n *\tof the symbolic link pointing to the absolute pathname of\n *\tthe executing program.\n */\n/*#define HAS_PROCSELFEXE\t/ **/\n#if defined(HAS_PROCSELFEXE) && !defined(PROCSELFEXE_PATH)\n#define PROCSELFEXE_PATH\t\t/**/\n#endif\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n/*#define HAS_PTHREAD_ATTR_SETSCOPE\t\t/ **/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n#define HAS_SIGPROCMASK\t\t/**/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n/*#define HAS_SOCKATMARK\t\t/ **/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n/*#define\tHAS_SOCKATMARK_PROTO\t/ **/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESGID_PROTO\t/ **/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESUID_PROTO\t/ **/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n#define HAS_STRFTIME\t\t/**/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n/*#define\tHAS_SYSCALL_PROTO\t/ **/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n#ifndef U32_ALIGNMENT_REQUIRED\n#define U32_ALIGNMENT_REQUIRED\t/**/\n#endif\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n/*#define\tHAS_USLEEP_PROTO\t/ **/\n\n/* I_CRYPT:\n *\tThis symbol, if defined, indicates that <crypt.h> exists and\n *\tshould be included.\n */\n/*#define\tI_CRYPT\t\t/ **/\n\n/* I_FP:\n *\tThis symbol, if defined, indicates that <fp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP\t\t/ **/\n\n/* I_LANGINFO:\n *\tThis symbol, if defined, indicates that <langinfo.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LANGINFO\t\t/ **/\n\n/* HAS_CTERMID_R:\n *\tThis symbol, if defined, indicates that the ctermid_r routine\n *\tis available to ctermid re-entrantly.\n */\n/* CTERMID_R_PROTO:\n *\tThis symbol encodes the prototype of ctermid_r.\n *\tIt is zero if d_ctermid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctermid_r\n *\tis defined.\n */\n/*#define HAS_CTERMID_R\t   / **/\n#define CTERMID_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT_R:\n *\tThis symbol, if defined, indicates that the endhostent_r routine\n *\tis available to endhostent re-entrantly.\n */\n/* ENDHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of endhostent_r.\n *\tIt is zero if d_endhostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endhostent_r\n *\tis defined.\n */\n/*#define HAS_ENDHOSTENT_R\t   / **/\n#define ENDHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDNETENT_R:\n *\tThis symbol, if defined, indicates that the endnetent_r routine\n *\tis available to endnetent re-entrantly.\n */\n/* ENDNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of endnetent_r.\n *\tIt is zero if d_endnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endnetent_r\n *\tis defined.\n */\n/*#define HAS_ENDNETENT_R\t   / **/\n#define ENDNETENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPROTOENT_R:\n *\tThis symbol, if defined, indicates that the endprotoent_r routine\n *\tis available to endprotoent re-entrantly.\n */\n/* ENDPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of endprotoent_r.\n *\tIt is zero if d_endprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endprotoent_r\n *\tis defined.\n */\n/*#define HAS_ENDPROTOENT_R\t   / **/\n#define ENDPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT_R:\n *\tThis symbol, if defined, indicates that the endservent_r routine\n *\tis available to endservent re-entrantly.\n */\n/* ENDSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of endservent_r.\n *\tIt is zero if d_endservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endservent_r\n *\tis defined.\n */\n/*#define HAS_ENDSERVENT_R\t   / **/\n#define ENDSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR_R:\n *\tThis symbol, if defined, indicates that the gethostbyaddr_r routine\n *\tis available to gethostbyaddr re-entrantly.\n */\n/* GETHOSTBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyaddr_r.\n *\tIt is zero if d_gethostbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYADDR_R\t   / **/\n#define GETHOSTBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYNAME_R:\n *\tThis symbol, if defined, indicates that the gethostbyname_r routine\n *\tis available to gethostbyname re-entrantly.\n */\n/* GETHOSTBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyname_r.\n *\tIt is zero if d_gethostbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyname_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYNAME_R\t   / **/\n#define GETHOSTBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the gethostent_r routine\n *\tis available to gethostent re-entrantly.\n */\n/* GETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of gethostent_r.\n *\tIt is zero if d_gethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostent_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTENT_R\t   /* config-skip */\n#define GETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYADDR_R:\n *\tThis symbol, if defined, indicates that the getnetbyaddr_r routine\n *\tis available to getnetbyaddr re-entrantly.\n */\n/* GETNETBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyaddr_r.\n *\tIt is zero if d_getnetbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYADDR_R\t   / **/\n#define GETNETBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYNAME_R:\n *\tThis symbol, if defined, indicates that the getnetbyname_r routine\n *\tis available to getnetbyname re-entrantly.\n */\n/* GETNETBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyname_r.\n *\tIt is zero if d_getnetbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyname_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYNAME_R\t   / **/\n#define GETNETBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETNETENT_R:\n *\tThis symbol, if defined, indicates that the getnetent_r routine\n *\tis available to getnetent re-entrantly.\n */\n/* GETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of getnetent_r.\n *\tIt is zero if d_getnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetent_r\n *\tis defined.\n */\n/*#define HAS_GETNETENT_R\t   / **/\n#define GETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNAME_R:\n *\tThis symbol, if defined, indicates that the getprotobyname_r routine\n *\tis available to getprotobyname re-entrantly.\n */\n/* GETPROTOBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobyname_r.\n *\tIt is zero if d_getprotobyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobyname_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNAME_R\t   / **/\n#define GETPROTOBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNUMBER_R:\n *\tThis symbol, if defined, indicates that the getprotobynumber_r routine\n *\tis available to getprotobynumber re-entrantly.\n */\n/* GETPROTOBYNUMBER_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobynumber_r.\n *\tIt is zero if d_getprotobynumber_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobynumber_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNUMBER_R\t   / **/\n#define GETPROTOBYNUMBER_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the getprotoent_r routine\n *\tis available to getprotoent re-entrantly.\n */\n/* GETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of getprotoent_r.\n *\tIt is zero if d_getprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotoent_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOENT_R\t   / **/\n#define GETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME_R:\n *\tThis symbol, if defined, indicates that the getservbyname_r routine\n *\tis available to getservbyname re-entrantly.\n */\n/* GETSERVBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyname_r.\n *\tIt is zero if d_getservbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyname_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYNAME_R\t   / **/\n#define GETSERVBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYPORT_R:\n *\tThis symbol, if defined, indicates that the getservbyport_r routine\n *\tis available to getservbyport re-entrantly.\n */\n/* GETSERVBYPORT_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyport_r.\n *\tIt is zero if d_getservbyport_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYPORT_R\t   / **/\n#define GETSERVBYPORT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT_R:\n *\tThis symbol, if defined, indicates that the getservent_r routine\n *\tis available to getservent re-entrantly.\n */\n/* GETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of getservent_r.\n *\tIt is zero if d_getservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservent_r\n *\tis defined.\n */\n/*#define HAS_GETSERVENT_R\t   / **/\n#define GETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n/*#define HAS_PTHREAD_ATFORK\t\t/ **/\n\n/* HAS_READDIR64_R:\n *\tThis symbol, if defined, indicates that the readdir64_r routine\n *\tis available to readdir64 re-entrantly.\n */\n/* READDIR64_R_PROTO:\n *\tThis symbol encodes the prototype of readdir64_r.\n *\tIt is zero if d_readdir64_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir64_r\n *\tis defined.\n */\n/*#define HAS_READDIR64_R\t   / **/\n#define READDIR64_R_PROTO 0\t   /**/\n\n/* HAS_SETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the sethostent_r routine\n *\tis available to sethostent re-entrantly.\n */\n/* SETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of sethostent_r.\n *\tIt is zero if d_sethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_sethostent_r\n *\tis defined.\n */\n/*#define HAS_SETHOSTENT_R\t   / **/\n#define SETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_SETLOCALE_R:\n *\tThis symbol, if defined, indicates that the setlocale_r routine\n *\tis available to setlocale re-entrantly.\n */\n/* SETLOCALE_R_PROTO:\n *\tThis symbol encodes the prototype of setlocale_r.\n *\tIt is zero if d_setlocale_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setlocale_r\n *\tis defined.\n */\n/*#define HAS_SETLOCALE_R\t   / **/\n#define SETLOCALE_R_PROTO 0\t   /**/\n\n/* HAS_SETNETENT_R:\n *\tThis symbol, if defined, indicates that the setnetent_r routine\n *\tis available to setnetent re-entrantly.\n */\n/* SETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of setnetent_r.\n *\tIt is zero if d_setnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setnetent_r\n *\tis defined.\n */\n/*#define HAS_SETNETENT_R\t   / **/\n#define SETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the setprotoent_r routine\n *\tis available to setprotoent re-entrantly.\n */\n/* SETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of setprotoent_r.\n *\tIt is zero if d_setprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setprotoent_r\n *\tis defined.\n */\n/*#define HAS_SETPROTOENT_R\t   / **/\n#define SETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT_R:\n *\tThis symbol, if defined, indicates that the setservent_r routine\n *\tis available to setservent re-entrantly.\n */\n/* SETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of setservent_r.\n *\tIt is zero if d_setservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setservent_r\n *\tis defined.\n */\n/*#define HAS_SETSERVENT_R\t   / **/\n#define SETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_TTYNAME_R:\n *\tThis symbol, if defined, indicates that the ttyname_r routine\n *\tis available to ttyname re-entrantly.\n */\n/* TTYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of ttyname_r.\n *\tIt is zero if d_ttyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ttyname_r\n *\tis defined.\n */\n/*#define HAS_TTYNAME_R\t   / **/\n#define TTYNAME_R_PROTO 0\t   /**/\n\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/plan9/config_h.sample": "/*\n * This file was produced by running the config_h.SH script, which\n * gets its values from config.sh, which is generally produced by\n * running Configure.\n *\n * Feel free to modify any of this as the need arises.  Note, however,\n * that running config_h.SH again will wipe out any changes you've made.\n * For a more permanent change edit config.sh and rerun config_h.SH.\n *\n * $Id: Config_h.U,v 3.0.1.5 1997/02/28 14:57:43 ram Exp $\n */\n\n/*\n * Package name      : perl\n * Source directory  : .\n * Configuration time: Sun Nov 24 20:57:48 EST 2002\n * Configured by     : 9trouble\n * Target system     : plan9 17genr 1 0 generic pcfl \n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"/bin/sed\"\t/**/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_AINTL\t\t/ **/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n#define HAS_ALARM\t\t/**/\n\n/* HASATTRIBUTE:\n *\tThis symbol indicates the C compiler can check for function attributes,\n *\tsuch as printf formats. This is normally only supported by GNU cc.\n */\n/*#define HASATTRIBUTE \t/ **/\n#ifndef HASATTRIBUTE\n#ifdef __attribute__\n#undef __attribute__\n#endif\n#define __attribute__(_arg_)\n#endif\n\n/* HAS_BCMP:\n *\tThis symbol is defined if the bcmp() routine is available to\n *\tcompare blocks of memory.\n */\n#define HAS_BCMP\t/**/\n\n/* HAS_BCOPY:\n *\tThis symbol is defined if the bcopy() routine is available to\n *\tcopy blocks of memory.\n */\n#define HAS_BCOPY\t/**/\n\n/* HAS_BZERO:\n *\tThis symbol is defined if the bzero() routine is available to\n *\tset a memory block to 0.\n */\n#define HAS_BZERO\t/**/\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n#define HAS_CHOWN\t\t/**/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n/*#define HAS_CHROOT\t\t/ **/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n/*#define\tHAS_CHSIZE\t\t/ **/\n\n/* HASCONST:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe const type. There is no need to actually test for that symbol\n *\twithin your programs. The mere use of the \"const\" keyword will\n *\ttrigger the necessary tests.\n */\n#define HASCONST\t/**/\n#ifndef HASCONST\n#define const\n#endif\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n#define HAS_CUSERID\t\t/**/\n\n/* HAS_DBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol DBL_DIG, which is the number\n *\tof significant digits in a double precision number.  If this\n *\tsymbol is not defined, a guess of 15 is usually pretty good.\n */\n#define HAS_DBL_DIG \t/* */\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n#define HAS_DIFFTIME\t\t/**/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n/*#define HAS_DLERROR\t/ **/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n#define HAS_DUP2\t/**/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n#define HAS_FCHMOD\t\t/**/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n/*#define HAS_FCHOWN\t\t/ **/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n#define HAS_FCNTL\t\t/**/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n#define HAS_FGETPOS\t/**/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_FLOCK\t\t/ **/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n#define HAS_FORK\t\t/**/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n#define HAS_FSETPOS\t/**/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n#define HAS_GETTIMEOFDAY\t/**/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n#define HAS_GETGROUPS\t\t/**/\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n#define HAS_GETLOGIN\t\t/**/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n/*#define HAS_GETPGID\t\t/ **/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n/*#define HAS_GETPGRP2\t\t/ **/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n#define HAS_GETPPID\t\t/**/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n/*#define HAS_GETPRIORITY\t\t/ **/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n/*#define HAS_INET_ATON\t\t/ **/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n/*#define HAS_KILLPG\t/ **/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n/* #define HAS_LINK\t/**/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n#define HAS_LOCALECONV\t/**/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_LOCKF\t\t/ **/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n/*#define HAS_LSTAT\t\t/ **/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n#define HAS_MBLEN\t\t/**/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to covert a multibyte string into a wide character string.\n */\n#define\tHAS_MBSTOWCS\t\t/**/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto covert a multibyte to a wide character.\n */\n#define HAS_MBTOWC\t\t/**/\n\n/* HAS_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tto compare blocks of memory.\n */\n#define HAS_MEMCMP\t/**/\n\n/* HAS_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy blocks of memory.\n */\n#define HAS_MEMCPY\t/**/\n\n/* HAS_MEMMOVE:\n *\tThis symbol, if defined, indicates that the memmove routine is available\n *\tto copy potentially overlapping blocks of memory. This should be used\n *\tonly when HAS_SAFE_BCOPY is not defined. If neither is there, roll your\n *\town version.\n */\n#define HAS_MEMMOVE\t/**/\n\n/* HAS_MEMSET:\n *\tThis symbol, if defined, indicates that the memset routine is available\n *\tto set blocks of memory.\n */\n#define HAS_MEMSET\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n#define HAS_MKDIR\t\t/**/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n#define HAS_MKFIFO\t\t/**/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n#define HAS_MKTIME\t\t/**/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n/*#define HAS_MSYNC\t\t/ **/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n/*#define HAS_MUNMAP\t\t/ **/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n/*#define HAS_NICE\t\t/ **/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n#define HAS_PATHCONF\t\t/**/\n#define HAS_FPATHCONF\t\t/**/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n#define HAS_PAUSE\t\t/**/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n#define HAS_PIPE\t\t/**/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors. You may safely\n *\tinclude <poll.h> when this symbol is defined.\n */\n/*#define HAS_POLL\t\t/ **/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#define HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n/*#define HAS_SEEKDIR\t\t/ **/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n/*#define HAS_TELLDIR\t\t/ **/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_REWINDDIR\t\t/**/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n/*#define HAS_READLINK\t\t/* */\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#define HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n#define HAS_RMDIR\t\t/**/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n#define HAS_SELECT\t/**/\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n/*#define HAS_SETEGID\t\t/ **/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n/*#define HAS_SETEUID\t\t/ **/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n#define HAS_SETLINEBUF\t\t/**/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n#define HAS_SETLOCALE\t/**/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n#define HAS_SETPGID\t/**/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n/*#define HAS_SETPGRP2\t\t/ **/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n/*#define HAS_SETPRIORITY\t\t/ **/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n/*#define HAS_SETREGID\t\t/ **/\n/*#define HAS_SETRESGID\t\t/ **/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n/*#define HAS_SETREUID\t\t/ **/\n/*#define HAS_SETRESUID\t\t/ **/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n/*#define HAS_SETRGID\t\t/ **/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n/*#define HAS_SETRUID\t\t/ **/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n#define HAS_SETSID\t/**/\n\n/* HAS_STRCHR:\n *\tThis symbol is defined to indicate that the strchr()/strrchr()\n *\tfunctions are available for string searching. If not, try the\n *\tindex()/rindex() pair.\n */\n/* HAS_INDEX:\n *\tThis symbol is defined to indicate that the index()/rindex()\n *\tfunctions are available for string searching.\n */\n#define HAS_STRCHR\t/**/\n/*#define HAS_INDEX\t/ **/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n#define HAS_STRCOLL\t/**/\n\n/* USE_STRUCT_COPY:\n *\tThis symbol, if defined, indicates that this C compiler knows how\n *\tto copy structures.  If undefined, you'll need to use a block copy\n *\troutine of some sort instead.\n */\n#define\tUSE_STRUCT_COPY\t/**/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n#define HAS_STRTOD\t/**/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#define HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n#define HAS_STRXFRM\t/**/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n/*#define HAS_SYMLINK\t/ **/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n/*#define HAS_SYSCALL\t/ **/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n#define HAS_SYSCONF\t/**/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n#define HAS_SYSTEM\t/**/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n#define HAS_TCGETPGRP\t\t/**/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n#define HAS_TCSETPGRP\t\t/**/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n/*#define HAS_TRUNCATE\t/ **/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n#define HAS_TZNAME\t\t/**/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n#define HAS_UMASK\t\t/**/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n/*#define HAS_USLEEP\t\t/ **/\n\n/* HASVOLATILE:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe volatile declaration.\n */\n#define\tHASVOLATILE\t/**/\n#ifndef HASVOLATILE\n#define volatile\n#endif\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n/*#define HAS_WAIT4\t/ **/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n#define HAS_WAITPID\t/**/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n#define HAS_WCSTOMBS\t/**/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto covert a wide character to a multibyte.\n */\n#define HAS_WCTOMB\t\t/**/\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n#define\tI_ARPA_INET\t\t/**/\n\n/* I_ASSERT:\n *\tThis symbol, if defined, indicates to the C program that it could\n *\tinclude <assert.h> to get the assert() macro.\n */\n#define\tI_ASSERT\t\t/**/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n/*#define I_DBM\t/ **/\n/*#define I_RPCSVC_DBM\t/ **/\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#define I_DIRENT\t\t/**/\n/*#define DIRNAMLEN\t/ **/\n#define Direntry_t struct dirent\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n/*#define I_DLFCN\t\t/ **/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n#define I_FCNTL\t/**/\n\n/* I_FLOAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <float.h> to get definition of symbols like DBL_MAX or\n *\tDBL_MIN, i.e. machine dependent floating point values.\n */\n#define I_FLOAT\t\t/**/\n\n/* I_LIMITS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <limits.h> to get definition of symbols like WORD_BIT or\n *\tLONG_MAX, i.e. machine dependant limitations.\n */\n#define I_LIMITS\t\t/**/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n#define\tI_LOCALE\t\t/**/\n\n/* I_MATH:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <math.h>.\n */\n#define I_MATH\t\t/**/\n\n/* I_MEMORY:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <memory.h>.\n */\n/*#define I_MEMORY\t\t/ **/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and \n *\tshould be included.\n */\n/*#define I_NET_ERRNO\t\t/ **/\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n#define I_NETINET_IN\t/**/\n\n/* I_STDDEF:\n *\tThis symbol, if defined, indicates that <stddef.h> exists and should\n *\tbe included.\n */\n#define I_STDDEF\t/**/\n\n/* I_STDLIB:\n *\tThis symbol, if defined, indicates that <stdlib.h> exists and should\n *\tbe included.\n */\n#define I_STDLIB\t\t/**/\n\n/* I_STRING:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <string.h> (USG systems) instead of <strings.h> (BSD systems).\n */\n#define I_STRING\t\t/**/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n/*#define I_SYS_DIR\t\t/ **/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n/*#define I_SYS_FILE\t\t/ **/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n#define\tI_SYS_IOCTL\t\t/**/\n/*#define I_SYS_SOCKIO\t/ **/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n/*#define I_SYS_NDIR\t/ **/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n#define I_SYS_PARAM\t\t/**/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n#define I_SYS_RESOURCE\t\t/**/\n\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n#define I_SYS_SELECT\t/**/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#define\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n#define\tI_SYS_TIMES\t\t/**/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n#define\tI_SYS_TYPES\t\t/**/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n#define I_SYS_UN\t\t/**/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n#define I_SYS_WAIT\t/**/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/*#define I_TERMIO\t\t/ **/\n#define I_TERMIOS\t\t/**/\n/*#define I_SGTTY\t\t/ **/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n#define I_UNISTD\t\t/**/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n#define I_UTIME\t\t/**/\n\n/* I_VALUES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <values.h> to get definition of symbols like MINFLOAT or\n *\tMAXLONG, i.e. machine dependant limitations.  Probably, you\n *\tshould use <limits.h> instead, if it is available.\n */\n/*#define I_VALUES\t\t/ **/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n/*#define I_VFORK\t/ **/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE 4\t\t/**/\n#define LONGSIZE 4\t\t/**/\n#define SHORTSIZE 2\t\t/**/\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n/*#define MULTIARCH\t\t/ **/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpart, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, or QUAD_IS_INT64_T.\n */\n#define HAS_QUAD\t/**/\n#ifdef HAS_QUAD\n#   define Quad_t long long\t/**/\n#   define Uquad_t unsigned long long\t/**/\n#   define QUADKIND 3\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#endif\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_ACCESSX\t\t/ **/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_EACCESS\t\t/ **/\n\n/* I_SYS_ACCESS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/access.h>.\n */\n/*#define   I_SYS_ACCESS                / **/\n\n/* I_SYS_SECURITY:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/security.h>.\n */\n/*#define   I_SYS_SECURITY\t/ **/\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"plan9\"\t\t/**/\n#define OSVERS \"1\"\t\t/**/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.\n */\n#if defined(MULTIARCH)\n#  define MEM_ALIGNBYTES 8\n#else\n#define MEM_ALIGNBYTES 4\n#endif\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for perl.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define ARCHLIB \"/sys/lib/perl/5.8.0/386\"\t\t/**/\n#define ARCHLIB_EXP \"/sys/lib/perl/5.8.0/386\"\t\t/**/\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"386\"\t\t/**/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n/*#define HAS_ATOLF\t\t/ **/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n#define HAS_ATOLL\t\t/**/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n#define BIN \"/usr/bin\"\t/**/\n#define BIN_EXP \"/usr/bin\"\t/**/\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\tin a UV, i.e. 0x1234 or 0x4321 or 0x12345678, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries (eg. on NeXT systems), use compiler-defined macros to\n *\tdetermine the byte order.\n *\tOn NeXT 3.2 (and greater), you can build \"Fat\" Multiple Architecture\n *\tBinaries (MAB) on either big endian or little endian machines.\n *\tThe endian-ness is available at compile-time.  This only matters\n *\tfor perl, where the config.h can be generated and installed on \n *\tone system, and used by a different architecture to build an\n *\textension.  Older versions of NeXT that might not have\n *\tdefined either *_ENDIAN__ were all on Motorola 680x0 series,\n *\tso the default case (for NeXT) is big endian to catch them. \n *\tThis might matter for NeXT 3.0.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#  if !defined(BYTEORDER) && (defined(NeXT) || defined(__NeXT__))\n#    define BYTEORDER 0x4321\n#  endif\n#else\n#define BYTEORDER 0x1234\t/* large digits for MSB */\n#endif /* NeXT */\n\n/* CAT2:\n *\tThis macro catenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if 42 == 1\n#define CAT2(a,b)\ta/**/b\n#define STRINGIFY(a)\t\"a\"\n\t\t/* If you can get stringification with catify, tell me how! */\n#endif\n#if 42 == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\t\n#define PeRl_StGiFy(a)\t#a\n/* the additional level of indirection enables these macros to be\n * used as arguments to other macros.  See K&R 2nd ed., page 231. */\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if 42 != 1 && 42 != 42\n#   include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.\t Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"cppstdin\"\n#define CPPMINUS \"\"\n#define CPPRUN \"/bin/cpp\"\n#define CPPLAST \"\"\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n/*#define HAS__FWALK\t\t/ **/\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n#define HAS_ACCESS\t\t/**/\n\n/* HAS_ASCTIME_R:\n *\tThis symbol, if defined, indicates that the asctime_r routine\n *\tis available to asctime re-entrantly.\n */\n/* ASCTIME_R_PROTO:\n *\tThis symbol encodes the prototype of asctime_r.\n *\tIt is zero if d_asctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_asctime_r\n *\tis defined.\n */\n/*#define HAS_ASCTIME_R\t   / **/\n#define ASCTIME_R_PROTO 0\t   /**/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n/*#define\tCASTI32\t\t/ **/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n/*#define\tCASTNEGFLOAT\t\t/ **/\n#define CASTFLAGS 7\t\t/**/\n\n/* HAS_CLASS:\n *\tThis symbol, if defined, indicates that the class routine is\n *\tavailable to classify doubles.  Available for example in AIX.\n *\tThe returned values are defined in <float.h> and are:\n *\n *\tFP_PLUS_NORM\tPositive normalized, nonzero\n *\tFP_MINUS_NORM\tNegative normalized, nonzero\n *\tFP_PLUS_DENORM\tPositive denormalized, nonzero\n *\tFP_MINUS_DENORM\tNegative denormalized, nonzero\n *\tFP_PLUS_ZERO\t+0.0\n *\tFP_MINUS_ZERO\t-0.0\n *\tFP_PLUS_INF\t+INF\n *\tFP_MINUS_INF\t-INF\n *\tFP_NANS\t\tSignaling Not a Number (NaNS)\n *\tFP_NANQ\t\tQuiet Not a Number (NaNQ)\n */\n/*#define HAS_CLASS\t\t/ **/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n/*#define VOID_CLOSEDIR\t\t/ **/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_CMSGHDR\t/ **/\n\n/* HAS_CRYPT_R:\n *\tThis symbol, if defined, indicates that the crypt_r routine\n *\tis available to crypt re-entrantly.\n */\n/* CRYPT_R_PROTO:\n *\tThis symbol encodes the prototype of crypt_r.\n *\tIt is zero if d_crypt_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_crypt_r\n *\tis defined.\n */\n/*#define HAS_CRYPT_R\t   / **/\n#define CRYPT_R_PROTO 0\t   /**/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n/*#define HAS_CSH\t\t/ **/\n#ifdef HAS_CSH\n#define CSH \"csh\"\t/**/\n#endif\n\n/* HAS_CTIME_R:\n *\tThis symbol, if defined, indicates that the ctime_r routine\n *\tis available to ctime re-entrantly.\n */\n/* CTIME_R_PROTO:\n *\tThis symbol encodes the prototype of ctime_r.\n *\tIt is zero if d_ctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctime_r\n *\tis defined.\n */\n/*#define HAS_CTIME_R\t   / **/\n#define CTIME_R_PROTO 0\t   /**/\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n/*#define \tDLSYM_NEEDS_UNDERSCORE \t/ **/\n\n/* HAS_DRAND48_R:\n *\tThis symbol, if defined, indicates that the drand48_r routine\n *\tis available to drand48 re-entrantly.\n */\n/* DRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of drand48_r.\n *\tIt is zero if d_drand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_drand48_r\n *\tis defined.\n */\n/*#define HAS_DRAND48_R\t   / **/\n#define DRAND48_R_PROTO 0\t   /**/\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n/*#define\tHAS_DRAND48_PROTO\t/ **/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n#define HAS_ENDGRENT\t\t/**/\n\n/* HAS_ENDGRENT_R:\n *\tThis symbol, if defined, indicates that the endgrent_r routine\n *\tis available to endgrent re-entrantly.\n */\n/* ENDGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of endgrent_r.\n *\tIt is zero if d_endgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endgrent_r\n *\tis defined.\n */\n/*#define HAS_ENDGRENT_R\t   / **/\n#define ENDGRENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n#define HAS_ENDHOSTENT\t\t/**/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n/*#define HAS_ENDNETENT\t\t/ **/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n/*#define HAS_ENDPROTOENT\t\t/ **/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n#define HAS_ENDPWENT\t\t/**/\n\n/* HAS_ENDPWENT_R:\n *\tThis symbol, if defined, indicates that the endpwent_r routine\n *\tis available to endpwent re-entrantly.\n */\n/* ENDPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of endpwent_r.\n *\tIt is zero if d_endpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endpwent_r\n *\tis defined.\n */\n/*#define HAS_ENDPWENT_R\t   / **/\n#define ENDPWENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n/*#define HAS_ENDSERVENT\t\t/ **/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n/*#define HAS_FAST_STDIO\t\t/**/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n/*#define HAS_FCHDIR\t\t/ **/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n/*#define FCNTL_CAN_LOCK\t\t/ **/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n/*#define HAS_FD_SET\t/ **/\n\n/* HAS_FINITE:\n *\tThis symbol, if defined, indicates that the finite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_FINITE\t\t/ **/\n\n/* HAS_FINITEL:\n *\tThis symbol, if defined, indicates that the finitel routine is\n *\tavailable to check whether a long double is finite\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_FINITEL\t\t/ **/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n#define\tFLEXFILENAMES\t\t/**/\n\n/* HAS_FP_CLASS:\n *\tThis symbol, if defined, indicates that the fp_class routine is\n *\tavailable to classify doubles.  Available for example in Digital UNIX.\n *\tThe returned values are defined in <math.h> and are:\n *\n *\tFP_SNAN           Signaling NaN (Not-a-Number)\n *\tFP_QNAN           Quiet NaN (Not-a-Number)\n *\tFP_POS_INF        +infinity\n *\tFP_NEG_INF        -infinity\n *\tFP_POS_NORM       Positive normalized\n *\tFP_NEG_NORM       Negative normalized\n *\tFP_POS_DENORM     Positive denormalized\n *\tFP_NEG_DENORM     Negative denormalized\n *\tFP_POS_ZERO       +0.0 (positive zero)\n *\tFP_NEG_ZERO       -0.0 (negative zero)\n */\n/*#define HAS_FP_CLASS\t\t/ **/\n\n/* HAS_FPCLASS:\n *\tThis symbol, if defined, indicates that the fpclass routine is\n *\tavailable to classify doubles.  Available for example in Solaris/SVR4.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASS\t\t/ **/\n\n/* HAS_FPCLASSIFY:\n *\tThis symbol, if defined, indicates that the fpclassify routine is\n *\tavailable to classify doubles.  Available for example in HP-UX.\n *\tThe returned values are defined in <math.h> and are\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/*#define HAS_FPCLASSIFY\t\t/ **/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n/*#define\tHAS_FPOS64_T    \t/ **/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n/*#define HAS_FREXPL\t\t/ **/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_FS_DATA\t/ **/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FSEEKO\t\t/ **/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATFS\t\t/ **/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n#define HAS_FSYNC\t\t/**/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FTELLO\t\t/ **/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tThe usual values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) sprintf((b),\"%.*g\",(n),(x))\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n#define HAS_GETCWD\t\t/**/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enhanced (shadow) password entries by name.\n */\n/*#define HAS_GETESPWNAM\t\t/ **/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n/*#define HAS_GETFSSTAT\t\t/ **/\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n#define HAS_GETGRENT\t\t/**/\n\n/* HAS_GETGRENT_R:\n *\tThis symbol, if defined, indicates that the getgrent_r routine\n *\tis available to getgrent re-entrantly.\n */\n/* GETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of getgrent_r.\n *\tIt is zero if d_getgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrent_r\n *\tis defined.\n */\n/*#define HAS_GETGRENT_R\t   / **/\n#define GETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_GETGRGID_R:\n *\tThis symbol, if defined, indicates that the getgrgid_r routine\n *\tis available to getgrgid re-entrantly.\n */\n/* GETGRGID_R_PROTO:\n *\tThis symbol encodes the prototype of getgrgid_r.\n *\tIt is zero if d_getgrgid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrgid_r\n *\tis defined.\n */\n/*#define HAS_GETGRGID_R\t   / **/\n#define GETGRGID_R_PROTO 0\t   /**/\n\n/* HAS_GETGRNAM_R:\n *\tThis symbol, if defined, indicates that the getgrnam_r routine\n *\tis available to getgrnam re-entrantly.\n */\n/* GETGRNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getgrnam_r.\n *\tIt is zero if d_getgrnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrnam_r\n *\tis defined.\n */\n/*#define HAS_GETGRNAM_R\t   / **/\n#define GETGRNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n#define HAS_GETHOSTBYADDR\t\t/**/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n#define HAS_GETHOSTBYNAME\t\t/**/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n/*#define HAS_GETHOSTENT\t\t/ **/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n#define HAS_GETHOSTNAME\t/**/\n#define HAS_UNAME\t\t/**/\n/*#define HAS_PHOSTNAME\t/ **/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"/bin/uname -n\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETHOST_PROTOS\t/ **/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n/*#define HAS_GETITIMER\t\t/ **/\n\n/* HAS_GETLOGIN_R:\n *\tThis symbol, if defined, indicates that the getlogin_r routine\n *\tis available to getlogin re-entrantly.\n */\n/* GETLOGIN_R_PROTO:\n *\tThis symbol encodes the prototype of getlogin_r.\n *\tIt is zero if d_getlogin_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getlogin_r\n *\tis defined.\n */\n/*#define HAS_GETLOGIN_R\t   / **/\n#define GETLOGIN_R_PROTO 0\t   /**/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n/*#define HAS_GETMNT\t\t/ **/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n/*#define HAS_GETMNTENT\t\t/ **/\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n/*#define HAS_GETNETBYADDR\t\t/ **/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n/*#define HAS_GETNETBYNAME\t\t/ **/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n/*#define HAS_GETNETENT\t\t/ **/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETNET_PROTOS\t/ **/\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n/*#define HAS_GETPAGESIZE\t\t/ **/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n/*#define HAS_GETPROTOENT\t\t/ **/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n#define HAS_GETPGRP\t\t/**/\n/*#define USE_BSD_GETPGRP\t/ **/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n#define HAS_GETPROTOBYNAME\t\t/**/\n/*#define HAS_GETPROTOBYNUMBER\t\t/ **/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETPROTO_PROTOS\t/ **/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n/*#define HAS_GETPRPWNAM\t\t/ **/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n#define HAS_GETPWENT\t\t/**/\n\n/* HAS_GETPWENT_R:\n *\tThis symbol, if defined, indicates that the getpwent_r routine\n *\tis available to getpwent re-entrantly.\n */\n/* GETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of getpwent_r.\n *\tIt is zero if d_getpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwent_r\n *\tis defined.\n */\n/*#define HAS_GETPWENT_R\t   / **/\n#define GETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPWNAM_R:\n *\tThis symbol, if defined, indicates that the getpwnam_r routine\n *\tis available to getpwnam re-entrantly.\n */\n/* GETPWNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getpwnam_r.\n *\tIt is zero if d_getpwnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwnam_r\n *\tis defined.\n */\n/*#define HAS_GETPWNAM_R\t   / **/\n#define GETPWNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETPWUID_R:\n *\tThis symbol, if defined, indicates that the getpwuid_r routine\n *\tis available to getpwuid re-entrantly.\n */\n/* GETPWUID_R_PROTO:\n *\tThis symbol encodes the prototype of getpwuid_r.\n *\tIt is zero if d_getpwuid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwuid_r\n *\tis defined.\n */\n/*#define HAS_GETPWUID_R\t   / **/\n#define GETPWUID_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n/*#define HAS_GETSERVENT\t\t/ **/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETSERV_PROTOS\t/ **/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n/*#define HAS_GETSPNAM\t\t/ **/\n\n/* HAS_GETSPNAM_R:\n *\tThis symbol, if defined, indicates that the getspnam_r routine\n *\tis available to getspnam re-entrantly.\n */\n/* GETSPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getspnam_r.\n *\tIt is zero if d_getspnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getspnam_r\n *\tis defined.\n */\n/*#define HAS_GETSPNAM_R\t   / **/\n#define GETSPNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n#define HAS_GETSERVBYNAME\t\t/**/\n/*#define HAS_GETSERVBYPORT\t\t/ **/\n\n/* HAS_GMTIME_R:\n *\tThis symbol, if defined, indicates that the gmtime_r routine\n *\tis available to gmtime re-entrantly.\n */\n/* GMTIME_R_PROTO:\n *\tThis symbol encodes the prototype of gmtime_r.\n *\tIt is zero if d_gmtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gmtime_r\n *\tis defined.\n */\n/*#define HAS_GMTIME_R\t   / **/\n#define GMTIME_R_PROTO 0\t   /**/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n/*#define HAS_GNULIBC  \t/ **/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n/*#define HAS_HASMNTOPT\t\t/ **/\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n#define HAS_HTONL\t\t/**/\n#define HAS_HTONS\t\t/**/\n#define HAS_NTOHL\t\t/**/\n#define HAS_NTOHS\t\t/**/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n/*#define HAS_ILOGBL\t\t/**/\n\n/* HAS_INT64_T:\n *     This symbol will defined if the C compiler supports int64_t.\n *     Usually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n#define     HAS_INT64_T               /**/\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii \n *\tis available.\n */\n/*#define HAS_ISASCII\t\t/ **/\n\n/* HAS_ISFINITE:\n *\tThis symbol, if defined, indicates that the isfinite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_ISFINITE\t\t/ **/\n\n/* HAS_ISINF:\n *\tThis symbol, if defined, indicates that the isinf routine is\n *\tavailable to check whether a double is an infinity.\n */\n/*#define HAS_ISINF\t\t/ **/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n/*#define HAS_ISNAN\t\t/ **/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n/*#define HAS_ISNANL\t\t/ **/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n/*#define HAS_LCHOWN\t\t/ **/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n#define HAS_LDBL_DIG \t/* */\n\n/* HAS_LOCALTIME_R:\n *\tThis symbol, if defined, indicates that the localtime_r routine\n *\tis available to localtime re-entrantly.\n */\n/* LOCALTIME_R_NEEDS_TZSET:\n *\tMany libc's localtime_r implementations do not call tzset,\n *\tmaking them differ from localtime(), and making timezone\n *\tchanges using $ENV{TZ} without explicitly calling tzset\n *\timpossible. This symbol makes us call tzset before localtime_r\n */\n/* LOCALTIME_R_PROTO:\n *\tThis symbol encodes the prototype of localtime_r.\n *\tIt is zero if d_localtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_localtime_r\n *\tis defined.\n */\n/*#define HAS_LOCALTIME_R\t   / **/\n/*#define LOCALTIME_R_NEEDS_TZSET\t   / **/\n#define LOCALTIME_R_PROTO 0\t   /**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the \n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.\n */\n#define HAS_LONG_DOUBLE\t\t/**/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE 8\t\t/**/\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the \n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n#define HAS_LONG_LONG\t\t/**/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE 8\t\t/**/\n#endif\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n/*#define\tHAS_LSEEK_PROTO\t/ **/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n/*#define HAS_MADVISE\t\t/ **/\n\n/* HAS_MEMCHR:\n *\tThis symbol, if defined, indicates that the memchr routine is available\n *\tto locate characters within a C string.\n */\n#define HAS_MEMCHR\t/**/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n/*#define HAS_MKDTEMP\t\t/ **/\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n/*#define HAS_MKSTEMP\t\t/ **/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to exclusively create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n/*#define HAS_MKSTEMPS\t\t/ **/\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'cadd_t'.\n */\n/*#define HAS_MMAP\t\t/ **/\n#define Mmap_t void *\t/**/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/* HAS_MODFL_POW32_BUG:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tbroken for long doubles >= pow(2, 32).\n *\tFor example from 4294967303.150000 one would get 4294967302.000000\n *\tand 1.150000.  The bug has been seen in certain versions of glibc,\n *\trelease 2.2.2 is known to be okay.\n */\n/*#define HAS_MODFL\t\t/ **/\n/*#define HAS_MODFL_POW32_BUG\t\t/ **/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n/*#define HAS_MPROTECT\t\t/ **/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n/*#define HAS_MSG\t\t/ **/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_MSGHDR\t/ **/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n/*#define\tHAS_OFF64_T    \t\t/ **/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n#define HAS_OPEN3\t\t/**/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n/*#define OLD_PTHREAD_CREATE_JOINABLE  / **/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield \n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/*#define HAS_PTHREAD_YIELD\t/ **/\n#define SCHED_YIELD\tundef\t/**/\n/*#define HAS_SCHED_YIELD\t/ **/\n\n/* HAS_RANDOM_R:\n *\tThis symbol, if defined, indicates that the random_r routine\n *\tis available to random re-entrantly.\n */\n/* RANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of random_r.\n *\tIt is zero if d_random_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r\n *\tis defined.\n */\n/*#define HAS_RANDOM_R\t   / **/\n#define RANDOM_R_PROTO 0\t   /**/\n\n/* HAS_READDIR_R:\n *\tThis symbol, if defined, indicates that the readdir_r routine\n *\tis available to readdir re-entrantly.\n */\n/* READDIR_R_PROTO:\n *\tThis symbol encodes the prototype of readdir_r.\n *\tIt is zero if d_readdir_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir_r\n *\tis defined.\n */\n/*#define HAS_READDIR_R\t   / **/\n#define READDIR_R_PROTO 0\t   /**/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n#define HAS_READV\t\t/**/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_RECVMSG\t\t/ **/\n\n/* HAS_SAFE_BCOPY:\n *\tThis symbol, if defined, indicates that the bcopy routine is available\n *\tto copy potentially overlapping memory blocks. Normally, you should\n *\tprobably use memmove() or memcpy(). If neither is defined, roll your\n *\town version.\n */\n/*#define HAS_SAFE_BCOPY\t/ **/\n\n/* HAS_SAFE_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy potentially overlapping memory blocks.  If you need to\n *\tcopy overlapping memory blocks, you should check HAS_MEMMOVE and\n *\tuse memmove() instead, if available.\n */\n/*#define HAS_SAFE_MEMCPY\t/ **/\n\n/* HAS_SANE_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tand can be used to compare relative magnitudes of chars with their high\n *\tbits set.  If it is not defined, roll your own version.\n */\n#define HAS_SANE_MEMCMP\t/**/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n/*#define\tHAS_SBRK_PROTO\t/ **/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n/*#define HAS_SEM\t\t/ **/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n/*#define HAS_SCALBNL\t\t/**/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_SENDMSG\t\t/ **/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n#define HAS_SETGRENT\t\t/**/\n\n/* HAS_SETGRENT_R:\n *\tThis symbol, if defined, indicates that the setgrent_r routine\n *\tis available to setgrent re-entrantly.\n */\n/* SETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of setgrent_r.\n *\tIt is zero if d_setgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setgrent_r\n *\tis defined.\n */\n/*#define HAS_SETGRENT_R\t   / **/\n#define SETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_SETGROUPS\t\t/ **/\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n/*#define HAS_SETHOSTENT\t\t/ **/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n/*#define HAS_SETITIMER\t\t/ **/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n/*#define HAS_SETNETENT\t\t/ **/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n/*#define HAS_SETPROTOENT\t\t/ **/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n/*#define HAS_SETPGRP\t\t/ **/\n/*#define USE_BSD_SETPGRP\t/ **/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n/*#define HAS_SETPROCTITLE\t\t/ **/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n#define HAS_SETPWENT\t\t/**/\n\n/* HAS_SETPWENT_R:\n *\tThis symbol, if defined, indicates that the setpwent_r routine\n *\tis available to setpwent re-entrantly.\n */\n/* SETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of setpwent_r.\n *\tIt is zero if d_setpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setpwent_r\n *\tis defined.\n */\n/*#define HAS_SETPWENT_R\t   / **/\n#define SETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n/*#define HAS_SETSERVENT\t\t/ **/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n#define HAS_SETVBUF\t\t/**/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n/*#define HAS_SHM\t\t/ **/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n#define HAS_SIGACTION\t/**/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n#define HAS_SIGSETJMP\t/**/\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n/* HAS_MSG_CTRUNC:\n *\tThis symbol, if defined, indicates that the MSG_CTRUNC is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_DONTROUTE:\n *\tThis symbol, if defined, indicates that the MSG_DONTROUTE is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_OOB:\n *\tThis symbol, if defined, indicates that the MSG_OOB is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PEEK:\n *\tThis symbol, if defined, indicates that the MSG_PEEK is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PROXY:\n *\tThis symbol, if defined, indicates that the MSG_PROXY is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_SCM_RIGHTS:\n *\tThis symbol, if defined, indicates that the SCM_RIGHTS is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n#define\tHAS_SOCKET\t\t/**/\n#define\tHAS_SOCKETPAIR\t/**/\n/*#define\tHAS_MSG_CTRUNC\t/ **/\n/*#define\tHAS_MSG_DONTROUTE\t/ **/\n/*#define\tHAS_MSG_OOB\t/ **/\n/*#define\tHAS_MSG_PEEK\t/ **/\n/*#define\tHAS_MSG_PROXY\t/ **/\n/*#define\tHAS_SCM_RIGHTS\t/ **/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n/*#define HAS_SOCKS5_INIT\t\t/ **/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n/*#define HAS_SQRTL\t\t/ **/\n\n/* HAS_SRAND48_R:\n *\tThis symbol, if defined, indicates that the srand48_r routine\n *\tis available to srand48 re-entrantly.\n */\n/* SRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of srand48_r.\n *\tIt is zero if d_srand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srand48_r\n *\tis defined.\n */\n/*#define HAS_SRAND48_R\t   / **/\n#define SRAND48_R_PROTO 0\t   /**/\n\n/* HAS_SRANDOM_R:\n *\tThis symbol, if defined, indicates that the srandom_r routine\n *\tis available to srandom re-entrantly.\n */\n/* SRANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of srandom_r.\n *\tIt is zero if d_srandom_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srandom_r\n *\tis defined.\n */\n/*#define HAS_SRANDOM_R\t   / **/\n#define SRANDOM_R_PROTO 0\t   /**/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n/*#define USE_STAT_BLOCKS \t/ **/\n#endif\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n/*#define HAS_STRUCT_STATFS_F_FLAGS\t\t/ **/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_STATFS\t/ **/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATVFS\t\t/ **/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n/*#define USE_STDIO_PTR \t/ **/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\t((fp)->_ptr)\n/*#define STDIO_PTR_LVALUE \t\t/ **/\n#define FILE_cnt(fp)\t((fp)->_cnt)\n/*#define STDIO_CNT_LVALUE \t\t/ **/\n/*#define STDIO_PTR_LVAL_SETS_CNT\t/ **/\n/*#define STDIO_PTR_LVAL_NOCHANGE_CNT\t/ **/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n/*#define USE_STDIO_BASE \t/ **/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\t((fp)->_base)\n#define FILE_bufsiz(fp)\t((fp)->_cnt + (fp)->_ptr - (fp)->_base)\n#endif\n\n/* HAS_STRERROR:\n *\tThis symbol, if defined, indicates that the strerror routine is\n *\tavailable to translate error numbers to strings. See the writeup\n *\tof Strerror() in this file before you try to define your own.\n */\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n/* Strerror:\n *\tThis preprocessor symbol is defined as a macro if strerror() is\n *\tnot available to translate error numbers to strings but sys_errlist[]\n *\tarray is there.\n */\n#define HAS_STRERROR\t\t/**/\n#define HAS_SYS_ERRLIST\t/**/\n#define Strerror(e) strerror(e)\n\n/* HAS_STRERROR_R:\n *\tThis symbol, if defined, indicates that the strerror_r routine\n *\tis available to strerror re-entrantly.\n */\n/* STRERROR_R_PROTO:\n *\tThis symbol encodes the prototype of strerror_r.\n *\tIt is zero if d_strerror_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_strerror_r\n *\tis defined.\n */\n/*#define HAS_STRERROR_R\t   / **/\n#define STRERROR_R_PROTO 0\t   /**/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD\t\t/ **/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n/*#define HAS_STRTOLL\t\t/ **/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n/*#define HAS_STRTOQ\t\t/ **/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#define HAS_STRTOUL\t/**/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n/*#define HAS_STRTOULL\t\t/ **/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n/*#define HAS_STRTOUQ\t\t/ **/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n/*#define\tHAS_TELLDIR_PROTO\t/ **/\n\n/* HAS_TIME:\n *\tThis symbol, if defined, indicates that the time() routine exists.\n */\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#define HAS_TIME\t\t/**/\n#define Time_t time_t\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n * use getrusage(). It may be necessary to include <sys/times.h>.\n */\n#define HAS_TIMES\t\t/**/\n\n/* HAS_TMPNAM_R:\n *\tThis symbol, if defined, indicates that the tmpnam_r routine\n *\tis available to tmpnam re-entrantly.\n */\n/* TMPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of tmpnam_r.\n *\tIt is zero if d_tmpnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_tmpnam_r\n *\tis defined.\n */\n/*#define HAS_TMPNAM_R\t   / **/\n#define TMPNAM_R_PROTO 0\t   /**/\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n/*#define HAS_UALARM\t\t/ **/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n/*#define HAS_UNION_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMID_DS\t/ **/\n\n/* HAS_UNORDERED:\n *\tThis symbol, if defined, indicates that the unordered routine is\n *\tavailable to check whether two doubles are unordered\n *\t(effectively: whether either of them is NaN)\n */\n/*#define HAS_UNORDERED\t\t/ **/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n/*#define HAS_USTAT\t\t/ **/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n/*#define HAS_VFORK\t/ **/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t void\t/* Signal handler's return type */\n\n/* HAS_VPRINTF:\n *\tThis symbol, if defined, indicates that the vprintf routine is available\n *\tto printf with a pointer to an argument list.  If unavailable, you\n *\tmay need to write your own, probably in terms of _doprnt().\n */\n/* USE_CHAR_VSPRINTF:\n *\tThis symbol is defined if this system has vsprintf() returning type\n *\t(char*).  The trend seems to be to declare it as \"int vsprintf()\".  It\n *\tis up to the package author to declare vsprintf correctly based on the\n *\tsymbol.\n */\n#define HAS_VPRINTF\t/**/\n#define USE_CHAR_VSPRINTF \t/**/\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n#define HAS_WRITEV\t\t/**/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n/*#define USE_DYNAMIC_LOADING\t\t/ **/\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE 8\t\t/**/\n\n/* EBCDIC:\n *     This symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n/*#define\tEBCDIC \t\t/ **/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) does flush\n *\tall pending stdio output.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n#define\tFFLUSH_NULL \t\t/**/\n/*#define\tFFLUSH_ALL \t\t/ **/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t fpos_t\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t\"hd\"\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedess of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t-1\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size 2\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t gid_t\t\t/* Type for getgid(), etc... */\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc... \n *\tIt may be necessary to include <sys/types.h> to get any \n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t gid_t\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\tu_int32_t\t\t/**/\n#define DB_Prefix_t\tsize_t  \t/**/\n#define DB_VERSION_MAJOR_CFG\t  \t/**/\n#define DB_VERSION_MINOR_CFG\t  \t/**/\n#define DB_VERSION_PATCH_CFG\t  \t/**/\n\n/* I_FP_CLASS:\n *\tThis symbol, if defined, indicates that <fp_class.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP_CLASS\t\t/ **/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n#define I_GRP\t\t/**/\n/*#define GRPASSWD\t/ **/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_IEEEFP\t\t/ **/\n\n/* I_INTTYPES:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <inttypes.h>.\n */\n#define   I_INTTYPES                /**/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LIBUTIL\t\t/ **/\n\n/* I_MACH_CTHREADS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <mach/cthreads.h>.\n */\n/*#define   I_MACH_CTHREADS\t/ **/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n/*#define\tI_MNTENT\t\t/ **/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n#define I_NETDB\t\t/**/\n\n/* I_NETINET_TCP:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <netinet/tcp.h>.\n */\n#define   I_NETINET_TCP                /**/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included.\n */\n/*#define\tI_POLL\t\t/ **/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n/*#define\tI_PROT\t\t/ **/\n\n/* I_PTHREAD:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <pthread.h>.\n */\n/*#define   I_PTHREAD\t/ **/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n#define I_PWD\t\t/**/\n/*#define PWQUOTA\t/ **/\n/*#define PWAGE\t/ **/\n/*#define PWCHANGE\t/ **/\n/*#define PWCLASS\t/ **/\n/*#define PWEXPIRE\t/ **/\n/*#define PWCOMMENT\t/ **/\n/*#define PWGECOS\t/ **/\n/*#define PWPASSWD\t/ **/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SHADOW\t\t/ **/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SOCKS\t\t/ **/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SUNMATH\t\t/ **/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSLOG\t\t/ **/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSMODE\t\t/ **/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_MOUNT\t\t/ **/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n/*#define\tI_SYS_STATFS\t\t/ **/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_STATVFS\t\t/ **/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n#define\tI_SYSUIO\t\t/**/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n#define\tI_SYSUTSNAME\t\t/**/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_VFS\t\t/ **/\n\n/* I_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n#define I_SYS_TIME\t/**/\n\n\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n/* HAS_TM_TM_ZONE:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_zone field.\n */\n#define I_TIME\t\t/**/\n/*#define I_SYS_TIME\t\t/ **/\n/*#define I_SYS_TIME_KERNEL\t\t/ **/\n/*#define HAS_TM_TM_ZONE\t\t/ **/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n/*#define\tI_USTAT\t\t/ **/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n#define PERL_INC_VERSION_LIST 0\t\t/**/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n * \talso as /usr/bin/perl.\n */\n/*#define INSTALL_USR_BIN_PERL\t/ **/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n#define PERL_PRIfldbl\t\"f\"\t/**/\n#define PERL_PRIgldbl\t\"g\"\t/**/\n#define PERL_PRIeldbl\t\"e\"\t/**/\n#define PERL_SCNfldbl\t\"f\"\t/**/\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t off_t\t\t/* <offset> type */\n#define LSEEKSIZE 8\t\t/* <offset> size */\n#define Off_t_size 8\t/* <offset> size */\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n * void, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t void *\t\t\t/**/\n#define Free_t void\t\t\t/**/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n#define MYMALLOC\t\t\t/**/\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes \n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t mode_t\t /* file mode parameter for system calls */\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK O_NONBLOCK\n#define VAL_EAGAIN EAGAIN\n#define RD_NODATA -1\n#define EOF_NONBLOCK\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n/*#define\tNEED_VA_COPY\t\t/ **/\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\tchar * /**/\n#define Netdb_hlen_t\t\tsize_t /**/\n#define Netdb_name_t\t\tchar * /**/\n#define Netdb_net_t\t\tlong /**/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n/*#define PERL_OTHERLIBDIRS \" \"\t\t/ **/\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n#define\tIVTYPE\t\tlong\t\t/**/\n#define\tUVTYPE\t\tunsigned long\t\t/**/\n#define\tI8TYPE\t\tchar\t\t/**/\n#define\tU8TYPE\t\tunsigned char\t\t/**/\n#define\tI16TYPE\t\tshort\t/**/\n#define\tU16TYPE\t\tunsigned short\t/**/\n#define\tI32TYPE\t\tlong\t/**/\n#define\tU32TYPE\t\tunsigned long\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\tlong long\t/**/\n#define\tU64TYPE\t\tunsigned long long\t/**/\n#endif\n#define\tNVTYPE\t\tdouble\t\t/**/\n#define\tIVSIZE\t\t4\t\t/**/\n#define\tUVSIZE\t\t4\t\t/**/\n#define\tI8SIZE\t\t1\t\t/**/\n#define\tU8SIZE\t\t1\t\t/**/\n#define\tI16SIZE\t\t2\t/**/\n#define\tU16SIZE\t\t2\t/**/\n#define\tI32SIZE\t\t4\t/**/\n#define\tU32SIZE\t\t4\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t8\t/**/\n#define\tU64SIZE\t\t8\t/**/\n#endif\n#define\tNVSIZE\t\t8\t\t/**/\n#undef\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\t31\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t\"ld\"\t\t/**/\n#define\tUVuf\t\t\"lu\"\t\t/**/\n#define\tUVof\t\t\"lo\"\t\t/**/\n#define\tUVxf\t\t\"lx\"\t\t/**/\n#define\tUVXf\t\t\"lX\"\t\t/**/\n#define\tNVef\t\t\"e\"\t\t/**/\n#define\tNVff\t\t\"f\"\t\t/**/\n#define\tNVgf\t\t\"g\"\t\t/**/\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t pid_t\t\t/* PID type */\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"/sys/lib/perl/5.8.0\"\t\t/**/\n#define PRIVLIB_EXP \"/sys/lib/perl/5.8.0\"\t\t/**/\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE 4\t\t/**/\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\t(rand() / (double) ((unsigned long)1 << 15))\t\t/**/\n#define Rand_seed_t\t\tunsigned\t\t/**/\n#define seedDrand01(x)\tsrand((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t15\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS \t32\t/**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you \n *\thave select(), of course.\n */\n#define Select_fd_set_t \tfd_set*\t/**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_num list.\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup. \n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.  \n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name list.\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME \"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"ABRT\", \"FPE\", \"KILL\", \"SEGV\", \"PIPE\", \"ALRM\", \"TERM\", \"USR1\", \"USR2\", \"BUS\", \"CHLD\", \"CONT\", \"STOP\", \"TSTP\", \"TTIN\", \"TTOU\", \"NUM21\", \"NUM22\", \"NUM23\", \"NUM24\", \"NUM25\", \"NUM26\", \"NUM27\", \"NUM28\", \"NUM29\", \"NUM30\", \"NUM31\", \"NUM32\", \"NUM33\", \"NUM34\", \"NUM35\", \"NUM36\", \"NUM37\", \"NUM38\", \"NUM39\", \"NUM40\", \"NUM41\", \"NUM42\", \"NUM43\", \"NUM44\", \"NUM45\", \"NUM46\", \"NUM47\", \"NUM48\", \"NUM49\", 0\t\t/**/\n#define SIG_NUM  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0\t\t/**/\n#define SIG_SIZE 50\t\t\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define SITEARCH \"/sys/lib/perl/5.8.0/site_perl/386\"\t\t/**/\n#define SITEARCH_EXP \"/sys/lib/perl/site_perl/386\"\t\t/**/\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"/sys/lib/perl/5.8.0/site_perl\"\t\t/**/\n#define SITELIB_EXP \"/sys/lib/perl/5.8.0/site_perl\"\t\t/**/\n#define SITELIB_STEM \"/sys/lib/perl/5.8.0/site_perl\"\t\t/**/\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size 4\t\t/* */\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t size_t\t /* length parameter for string functions */\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\tint /**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t ssize_t\t /* signed count of bytes */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"#!/bin/perl\"\t\t/**/\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR char\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n/*#define\tHAS_STDIO_STREAM_ARRAY\t/ **/\n#define STDIO_STREAM_ARRAY\t\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t\"hd\"\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedess of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t-1\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size 2\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t uid_t\t\t/* UID type */\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n/*#define\tUSE_64_BIT_INT\t\t/ **/\n#endif\n\n#ifndef USE_64_BIT_ALL\n/*#define\tUSE_64_BIT_ALL\t\t/ **/\n#endif\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n/*#define\tUSE_FAST_STDIO\t\t/ **/\n#endif\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n#define\tUSE_LARGE_FILES\t\t/**/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n/*#define\tUSE_LONG_DOUBLE\t\t/ **/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n/*#define\tUSE_MORE_BITS\t\t/ **/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n/*#define\tMULTIPLICITY\t\t/ **/\n#endif\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n#define\tUSE_PERLIO\t\t/**/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n/*#define\tUSE_SOCKS\t\t/ **/\n#endif\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* USE_5005THREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the 5.005-based threading implementation.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n/*#define\tUSE_5005THREADS\t\t/ **/\n/*#define\tUSE_ITHREADS\t\t/ **/\n#if defined(USE_5005THREADS) && !defined(USE_ITHREADS)\n#define\t\tUSE_THREADS\t\t/* until src is revised*/\n#endif\n/*#define\tOLD_PTHREADS_API\t\t/ **/\n/*#define\tUSE_REENTRANT_API\t/ **/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front. \n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor \n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define PERL_VENDORARCH \"\"\t\t/ **/\n/*#define PERL_VENDORARCH_EXP \"\"\t\t/ **/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n/*#define PERL_VENDORLIB_EXP \"\"\t\t/ **/\n/*#define PERL_VENDORLIB_STEM \"\"\t\t/ **/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n/*#define HAS_CRYPT\t\t/ **/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n/*#define SETUID_SCRIPTS_ARE_SECURE_NOW\t/ **/\n/*#define DOSUID\t\t/ **/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t \t/**/\n/*#define HAS_SHMAT_PROTOTYPE\t/ **/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/*#define I_NDBM\t/ **/\n\n/* I_STDARG:\n *\tThis symbol, if defined, indicates that <stdarg.h> exists and should\n *\tbe included.\n */\n/* I_VARARGS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <varargs.h>.\n */\n#define I_STDARG\t\t/**/\n/*#define I_VARARGS\t/ **/\n\n/* CAN_PROTOTYPE:\n *\tIf defined, this macro indicates that the C compiler can handle\n *\tfunction prototypes.\n */\n/* _:\n *\tThis macro is used to declare function parameters for folks who want\n *\tto make declarations with prototypes using a different style than\n *\tthe above macros.  Use double parentheses.  For example:\n *\n *\t\tint main _((int argc, char *argv[]));\n */\n#define\tCAN_PROTOTYPE\t/**/\n#ifdef CAN_PROTOTYPE\n#define\t_(args) args\n#else\n#define\t_(args) ()\n#endif\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"/bin/sh\"  /**/\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n/*#define\tUSE_CROSS_COMPILE\t/ **/\n#define\tPERL_TARGETARCH\t\"\"\t/**/\n#endif\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n/*#define HAS_COPYSIGNL\t\t/**/\n\n/* USE_CPLUSPLUS:\n *\tThis symbol, if defined, indicates that a C++ compiler was\n *\tused to compiled Perl and will be used to compile extensions.\n */\n/*#define USE_CPLUSPLUS\t\t/**/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n/*#define\tHAS_DBMINIT_PROTO\t/ **/\n\n/* HAS_DIRFD:\n *\tThis manifest constant lets the C program know that dirfd\n *\tis available.\n */\n/*#define HAS_DIRFD\t\t/ **/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n/*#define\tHAS_FLOCK_PROTO\t/ **/\n\n/* HAS_FPCLASSL:\n *\tThis symbol, if defined, indicates that the fpclassl routine is\n *\tavailable to classify long doubles.  Available for example in IRIX.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASSL\t\t/ **/\n\n/* HAS_NL_LANGINFO:\n *\tThis symbol, if defined, indicates that the nl_langinfo routine is\n *\tavailable to return local data.  You will also need <langinfo.h>\n *\tand therefore I_LANGINFO.\n */\n/*#define HAS_NL_LANGINFO\t\t/ **/\n\n/* HAS_PROCSELFEXE:\n *\tThis symbol is defined if PROCSELFEXE_PATH is a symlink\n *\tto the absolute pathname of the executing program.\n */\n/* PROCSELFEXE_PATH:\n *\tIf HAS_PROCSELFEXE is defined this symbol is the filename\n *\tof the symbolic link pointing to the absolute pathname of\n *\tthe executing program.\n */\n/*#define HAS_PROCSELFEXE\t/ **/\n#if defined(HAS_PROCSELFEXE) && !defined(PROCSELFEXE_PATH)\n#define PROCSELFEXE_PATH\t\t/**/\n#endif\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n/*#define HAS_PTHREAD_ATTR_SETSCOPE\t\t/ **/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n#define HAS_SIGPROCMASK\t\t/**/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n/*#define HAS_SOCKATMARK\t\t/ **/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n/*#define\tHAS_SOCKATMARK_PROTO\t/ **/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESGID_PROTO\t/ **/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESUID_PROTO\t/ **/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n#define HAS_STRFTIME\t\t/**/\n\n/* HAS_STRLCAT\n *      This symbol, if defined, indicates that the strlcat routine is\n *      available to do string concatenation.\n */\n/*#define HAS_STRLCAT\t\t\t/**/\n\n/* HAS_STRLCPY:\n *      This symbol, if defined, indicates that the strlcpy routine is\n *      available to do string copying.\n */\n/*#define HAS_STRLCPY\t\t\t/**/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n/*#define\tHAS_SYSCALL_PROTO\t/ **/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n#ifndef U32_ALIGNMENT_REQUIRED\n#define U32_ALIGNMENT_REQUIRED\t/**/\n#endif\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n/*#define\tHAS_USLEEP_PROTO\t/ **/\n\n/* I_CRYPT:\n *\tThis symbol, if defined, indicates that <crypt.h> exists and\n *\tshould be included.\n */\n/*#define\tI_CRYPT\t\t/ **/\n\n/* I_FP:\n *\tThis symbol, if defined, indicates that <fp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP\t\t/ **/\n\n/* I_LANGINFO:\n *\tThis symbol, if defined, indicates that <langinfo.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LANGINFO\t\t/ **/\n\n/* HAS_CTERMID_R:\n *\tThis symbol, if defined, indicates that the ctermid_r routine\n *\tis available to ctermid re-entrantly.\n */\n/* CTERMID_R_PROTO:\n *\tThis symbol encodes the prototype of ctermid_r.\n *\tIt is zero if d_ctermid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctermid_r\n *\tis defined.\n */\n/*#define HAS_CTERMID_R\t   / **/\n#define CTERMID_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT_R:\n *\tThis symbol, if defined, indicates that the endhostent_r routine\n *\tis available to endhostent re-entrantly.\n */\n/* ENDHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of endhostent_r.\n *\tIt is zero if d_endhostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endhostent_r\n *\tis defined.\n */\n/*#define HAS_ENDHOSTENT_R\t   / **/\n#define ENDHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDNETENT_R:\n *\tThis symbol, if defined, indicates that the endnetent_r routine\n *\tis available to endnetent re-entrantly.\n */\n/* ENDNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of endnetent_r.\n *\tIt is zero if d_endnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endnetent_r\n *\tis defined.\n */\n/*#define HAS_ENDNETENT_R\t   / **/\n#define ENDNETENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPROTOENT_R:\n *\tThis symbol, if defined, indicates that the endprotoent_r routine\n *\tis available to endprotoent re-entrantly.\n */\n/* ENDPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of endprotoent_r.\n *\tIt is zero if d_endprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endprotoent_r\n *\tis defined.\n */\n/*#define HAS_ENDPROTOENT_R\t   / **/\n#define ENDPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT_R:\n *\tThis symbol, if defined, indicates that the endservent_r routine\n *\tis available to endservent re-entrantly.\n */\n/* ENDSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of endservent_r.\n *\tIt is zero if d_endservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endservent_r\n *\tis defined.\n */\n/*#define HAS_ENDSERVENT_R\t   / **/\n#define ENDSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR_R:\n *\tThis symbol, if defined, indicates that the gethostbyaddr_r routine\n *\tis available to gethostbyaddr re-entrantly.\n */\n/* GETHOSTBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyaddr_r.\n *\tIt is zero if d_gethostbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYADDR_R\t   / **/\n#define GETHOSTBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYNAME_R:\n *\tThis symbol, if defined, indicates that the gethostbyname_r routine\n *\tis available to gethostbyname re-entrantly.\n */\n/* GETHOSTBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyname_r.\n *\tIt is zero if d_gethostbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyname_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYNAME_R\t   / **/\n#define GETHOSTBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the gethostent_r routine\n *\tis available to gethostent re-entrantly.\n */\n/* GETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of gethostent_r.\n *\tIt is zero if d_gethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostent_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTENT_R\t   / **/\n#define GETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYADDR_R:\n *\tThis symbol, if defined, indicates that the getnetbyaddr_r routine\n *\tis available to getnetbyaddr re-entrantly.\n */\n/* GETNETBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyaddr_r.\n *\tIt is zero if d_getnetbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYADDR_R\t   / **/\n#define GETNETBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYNAME_R:\n *\tThis symbol, if defined, indicates that the getnetbyname_r routine\n *\tis available to getnetbyname re-entrantly.\n */\n/* GETNETBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyname_r.\n *\tIt is zero if d_getnetbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyname_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYNAME_R\t   / **/\n#define GETNETBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETNETENT_R:\n *\tThis symbol, if defined, indicates that the getnetent_r routine\n *\tis available to getnetent re-entrantly.\n */\n/* GETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of getnetent_r.\n *\tIt is zero if d_getnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetent_r\n *\tis defined.\n */\n/*#define HAS_GETNETENT_R\t   / **/\n#define GETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNAME_R:\n *\tThis symbol, if defined, indicates that the getprotobyname_r routine\n *\tis available to getprotobyname re-entrantly.\n */\n/* GETPROTOBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobyname_r.\n *\tIt is zero if d_getprotobyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobyname_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNAME_R\t   / **/\n#define GETPROTOBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNUMBER_R:\n *\tThis symbol, if defined, indicates that the getprotobynumber_r routine\n *\tis available to getprotobynumber re-entrantly.\n */\n/* GETPROTOBYNUMBER_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobynumber_r.\n *\tIt is zero if d_getprotobynumber_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobynumber_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNUMBER_R\t   / **/\n#define GETPROTOBYNUMBER_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the getprotoent_r routine\n *\tis available to getprotoent re-entrantly.\n */\n/* GETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of getprotoent_r.\n *\tIt is zero if d_getprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotoent_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOENT_R\t   / **/\n#define GETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME_R:\n *\tThis symbol, if defined, indicates that the getservbyname_r routine\n *\tis available to getservbyname re-entrantly.\n */\n/* GETSERVBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyname_r.\n *\tIt is zero if d_getservbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyname_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYNAME_R\t   / **/\n#define GETSERVBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYPORT_R:\n *\tThis symbol, if defined, indicates that the getservbyport_r routine\n *\tis available to getservbyport re-entrantly.\n */\n/* GETSERVBYPORT_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyport_r.\n *\tIt is zero if d_getservbyport_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYPORT_R\t   / **/\n#define GETSERVBYPORT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT_R:\n *\tThis symbol, if defined, indicates that the getservent_r routine\n *\tis available to getservent re-entrantly.\n */\n/* GETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of getservent_r.\n *\tIt is zero if d_getservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservent_r\n *\tis defined.\n */\n/*#define HAS_GETSERVENT_R\t   / **/\n#define GETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n/*#define HAS_PTHREAD_ATFORK\t\t/ **/\n\n/* HAS_READDIR64_R:\n *\tThis symbol, if defined, indicates that the readdir64_r routine\n *\tis available to readdir64 re-entrantly.\n */\n/* READDIR64_R_PROTO:\n *\tThis symbol encodes the prototype of readdir64_r.\n *\tIt is zero if d_readdir64_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir64_r\n *\tis defined.\n */\n/*#define HAS_READDIR64_R\t   / **/\n#define READDIR64_R_PROTO 0\t   /**/\n\n/* HAS_SETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the sethostent_r routine\n *\tis available to sethostent re-entrantly.\n */\n/* SETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of sethostent_r.\n *\tIt is zero if d_sethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_sethostent_r\n *\tis defined.\n */\n/*#define HAS_SETHOSTENT_R\t   / **/\n#define SETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_SETLOCALE_R:\n *\tThis symbol, if defined, indicates that the setlocale_r routine\n *\tis available to setlocale re-entrantly.\n */\n/* SETLOCALE_R_PROTO:\n *\tThis symbol encodes the prototype of setlocale_r.\n *\tIt is zero if d_setlocale_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setlocale_r\n *\tis defined.\n */\n/*#define HAS_SETLOCALE_R\t   / **/\n#define SETLOCALE_R_PROTO 0\t   /**/\n\n/* HAS_SETNETENT_R:\n *\tThis symbol, if defined, indicates that the setnetent_r routine\n *\tis available to setnetent re-entrantly.\n */\n/* SETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of setnetent_r.\n *\tIt is zero if d_setnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setnetent_r\n *\tis defined.\n */\n/*#define HAS_SETNETENT_R\t   / **/\n#define SETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the setprotoent_r routine\n *\tis available to setprotoent re-entrantly.\n */\n/* SETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of setprotoent_r.\n *\tIt is zero if d_setprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setprotoent_r\n *\tis defined.\n */\n/*#define HAS_SETPROTOENT_R\t   / **/\n#define SETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT_R:\n *\tThis symbol, if defined, indicates that the setservent_r routine\n *\tis available to setservent re-entrantly.\n */\n/* SETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of setservent_r.\n *\tIt is zero if d_setservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setservent_r\n *\tis defined.\n */\n/*#define HAS_SETSERVENT_R\t   / **/\n#define SETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_TTYNAME_R:\n *\tThis symbol, if defined, indicates that the ttyname_r routine\n *\tis available to ttyname re-entrantly.\n */\n/* TTYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of ttyname_r.\n *\tIt is zero if d_ttyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ttyname_r\n *\tis defined.\n */\n/*#define HAS_TTYNAME_R\t   / **/\n#define TTYNAME_R_PROTO 0\t   /**/\n\n#endif\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/plan9/config_sh.sample": "#!/bin/sh\n#\n# This file was produced by running the Configure script. It holds all the\n# definitions figured out by Configure. Should you modify one of these values,\n# do not forget to propagate your changes by running \"Configure -der\". You may\n# instead choose to run each of the .SH files by yourself, or \"Configure -S\".\n#\n\n# Package name      : perl5\n# Source directory  : .\n# Configuration time: Sun Nov 24 20:57:48 EST 2002\n# Configured by     : unknown\n# Target system     : plan9 17genr 1 0 generic pcfl \n\nAuthor=''\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nMcc='Mcc'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.a'\n_exe=''\n_o='.o'\nafs='false'\nafsroot='/afs'\nalignbytes='4'\nansi2knr=''\naphostname='/bin/uname -n'\napi_revision='5'\napi_subversion='0'\napi_version='22'\napi_versionstring='5.22.0'\nar='ar'\narchlib='/sys/lib/perl5/5.22.0/386'\narchlibexp='/sys/lib/perl5/5.22.0/386'\narchname64=''\narchname='386'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5.0'\nbash=''\nbin='/usr/bin'\nbinexp='/usr/bin'\nbison='bison'\nbootstrap_charset='undef'\nbyacc='byacc'\nbyteorder='1234'\nc=''\ncastflags='7'\ncat='cat'\ncc='cc'\ncccdlflags=''\nccdlflags=''\nccflags=''\nccflags_uselargefiles=''\nccname='cc'\nccsymbols='_POSIX_SOURCE= _BSD_EXTENSION='\nccversion=''\ncf_by='9trouble'\ncf_email='9trouble@plan9.bell-labs.com'\ncf_time='Sun Nov 24 20:57:48 EST 2002'\ncharbits='8'\nchgrp=''\nchmod='chmod'\nchown=''\nclocktype='clock_t'\ncomm='comm'\ncompress=''\ncontains='grep'\ncp='cp'\ncpio=''\ncpp='cpp'\ncpp_stuff='42'\ncppccsymbols='__STDC__=1'\ncppflags=''\ncpplast=''\ncppminus=''\ncpprun='/bin/cpp'\ncppstdin='cppstdin'\ncppsymbols='_POSIX_SOURCE=1 _BSD_EXTENSION=1'\ncrypt_r_proto='0'\ncryptlib=''\ncsh='csh'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEUldbl='define'\nd_PRIFUldbl='define'\nd_PRIGUldbl='define'\nd_PRIXU64='define'\nd_PRId64='define'\nd_PRIeldbl='define'\nd_PRIfldbl='define'\nd_PRIgldbl='define'\nd_PRIi64='define'\nd_PRIo64='define'\nd_PRIu64='define'\nd_PRIx64='define'\nd_SCNfldbl='define'\nd__fwalk='undef'\nd_access='define'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='define'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='define'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bcmp='define'\nd_bcopy='define'\nd_bsd='undef'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_bzero='define'\nd_c99_variadic_macros='undef'\nd_casti32='undef'\nd_castneg='undef'\nd_cbrt='undef'\nd_charvspr='define'\nd_chown='define'\nd_chroot='undef'\nd_chsize='undef'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='define'\nd_cmsghdr_s='undef'\nd_const='define'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='undef'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='define'\nd_dbl_dig='define'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='undef'\nd_dladdr='undef'\nd_dlerror='undef'\nd_dlopen='undef'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='define'\nd_eaccess='undef'\nd_endgrent='define'\nd_endgrent_r='undef'\nd_endhent='define'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='define'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_eofnblk='define'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='undef'\nd_fchdir='undef'\nd_fchmod='define'\nd_fchown='undef'\nd_fcntl='define'\nd_fcntl_can_lock='undef'\nd_fd_macros='undef'\nd_fd_set='undef'\nd_fdim='undef'\nd_fds_bits='undef'\nd_fegetround='undef'\nd_fgetpos='define'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='define'\nd_flock='undef'\nd_flockproto='undef'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='define'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='define'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='define'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='define'\nd_ftello='undef'\nd_ftime='undef'\nd_futimes='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='define'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='define'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='undef'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='undef'\nd_getitimer='undef'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='undef'\nd_getpagsz='undef'\nd_getpbyname='define'\nd_getpbynumber='undef'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='define'\nd_getppid='define'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='undef'\nd_getprpwnam='undef'\nd_getpwent='define'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='undef'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='undef'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='define'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_hasmntopt='undef'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='define'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='undef'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='undef'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='undef'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='define'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='0'\nd_link='define'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='define'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_longdbl='define'\nd_longlong='define'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='undef'\nd_lstat='define'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memchr='define'\nd_memcmp='define'\nd_memcpy='define'\nd_memmove='define'\nd_memset='define'\nd_mkdir='define'\nd_mkdtemp='undef'\nd_mkfifo='define'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='define'\nd_nan='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='undef'\nd_nv_zero_is_allbits_zero='undef'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='define'\nd_pathconf='define'\nd_pause='define'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe='define'\nd_poll='undef'\nd_portable='define'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='undef'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='define'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='define'\nd_readv='define'\nd_recvmsg='undef'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_safebcpy='undef'\nd_safemcpy='undef'\nd_sanemcmp='define'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='undef'\nd_select='define'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='define'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='define'\nd_setlocale='define'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='define'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='define'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='define'\nd_setvbuf='define'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='define'\nd_signbit='define'\nd_sigprocmask='define'\nd_sigsetjmp='define'\nd_sin6_scope_id='undef'\nd_sitearch='define'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='undef'\nd_sockpair='define'\nd_socks5_init='undef'\nd_sprintf_returns_strlen='undef'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='undef'\nd_statvfs='undef'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='undef'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='undef'\nd_stdstdio='undef'\nd_strchr='define'\nd_strcoll='define'\nd_strctcpy='define'\nd_strerrm='strerror(e)'\nd_strerror='define'\nd_strerror_r='undef'\nd_strftime='define'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strtod='define'\nd_strtol='define'\nd_strtold='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='define'\nd_suidsafe='undef'\nd_symlink='define'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='define'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='define'\nd_tcsetpgrp='define'\nd_telldir='undef'\nd_telldirproto='undef'\nd_tgamma='undef'\nd_time='define'\nd_timegm='undef'\nd_times='define'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='define'\nd_ualarm='undef'\nd_umask='define'\nd_uname='define'\nd_union_semun='undef'\nd_unordered='undef'\nd_unsetenv='undef'\nd_usleep='undef'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_volatile='define'\nd_vprintf='define'\nd_vsnprintf='undef'\nd_wait4='undef'\nd_waitpid='define'\nd_wcscmp='undef'\nd_wcstombs='define'\nd_wcsxfrm='undef'\nd_wctomb='define'\nd_writev='define'\nd_xenix='undef'\ndate='date'\ndb_hashtype='u_int32_t'\ndb_prefixtype='size_t'\ndb_version_major=''\ndb_version_minor=''\ndb_version_patch=''\ndirentrytype='struct dirent'\ndlext='none'\ndlsrc='dl_none.xs'\ndoublekind='3'\ndoublesize='8'\ndrand01='(rand() / (double) ((unsigned long)1 << 15))'\ndrand48_r_proto='0'\ndtrace=''\ndynamic_ext=''\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='grep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext=''\nexpr='expr'\nextensions='B ByteLoader Cwd Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call IO List/Util MIME/Base64 Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize attributes re threads threads/shared Encode/Byte Encode/CN Encode/EBCDIC Encode/JP Encode/KR Encode/Symbol Encode/TW Encode/Unicode Errno'\nextras=''\nfflushNULL='define'\nfflushall='undef'\nfind=''\nfirstmakefile='makefile'\nflex=''\nfpossize='8'\nfpostype='fpos_t'\nfreetype='void'\nfrom=':'\nfull_ar='/bin/ar'\nfull_csh='csh'\nfull_sed='/bin/sed'\ngccosandvers=''\ngccversion=''\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"hd\"'\ngidsign='-1'\ngidsize='2'\ngidtype='gid_t'\nglibpth=''\ngmake='gmake'\ngmtime_r_proto='0'\ngnulibc_version=''\ngrep='grep'\ngroupcat=''\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='true'\nh_sysfile='false'\nhint='recommended'\nhostcat=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='long long'\ni8size='1'\ni8type='char'\ni_arpainet='define'\ni_assert='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='undef'\ni_execinfo='undef'\ni_fcntl='define'\ni_fenv='undef'\ni_float='define'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='define'\ni_ieeefp='undef'\ni_inttypes='define'\ni_langinfo='undef'\ni_libutil='undef'\ni_limits='define'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='undef'\ni_mallocmalloc='undef'\ni_math='define'\ni_memory='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='define'\ni_neterrno='undef'\ni_netinettcp='define'\ni_niin='define'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='define'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdarg='define'\ni_stdbool='undef'\ni_stddef='define'\ni_stdint='undef'\ni_stdlib='define'\ni_string='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='undef'\ni_sysin='undef'\ni_sysioctl='define'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='define'\ni_syspoll='undef'\ni_sysresrc='define'\ni_syssecrt='undef'\ni_sysselct='define'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='undef'\ni_systimek='undef'\ni_systimes='define'\ni_systypes='define'\ni_sysuio='define'\ni_sysun='define'\ni_sysutsname='define'\ni_sysvfs='undef'\ni_syswait='define'\ni_termio='undef'\ni_termios='define'\ni_time='define'\ni_unistd='define'\ni_ustat='undef'\ni_utime='define'\ni_values='undef'\ni_varargs='undef'\ni_varhdr='stdarg.h'\ni_vfork='undef'\nignore_versioned_solibs=''\ninc_version_list=' '\ninc_version_list_init='0'\nincpath=''\ninews=''\ninstallarchlib='/sys/lib/perl/5.22.0/386'\ninstallbin='/usr/bin'\ninstallman1dir='/sys/man/1pub'\ninstallman3dir='/sys/man/2pub'\ninstallprefix='/usr'\ninstallprefixexp='/usr'\ninstallprivlib='/sys/lib/perl/5.22.0'\ninstallscript='/usr/bin'\ninstallsitearch='/sys/lib/perl/5.22.0/site_perl/386'\ninstallsitebin='/usr/bin'\ninstallsitelib='/sys/lib/perl/5.22.0/site_perl'\ninstallstyle='lib/perl5'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorlib=''\nintsize='4'\nissymlink='/bin/test -h'\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nknown_extensions='B ByteLoader Cwd DB_File Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call GDBM_File I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 NDBM_File ODBM_File Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes re threads threads/shared'\nksh=''\nld='ld'\nlddlflags=''\nldflags=''\nldflags_uselargefiles=''\nldlibpthname='LD_LIBRARY_PATH'\nless='less'\nlib_ext='.a'\nlibc=''\nlibperl='libperl.a'\nlibpth='/lib'\nlibs=' '\nlibsdirs=''\nlibsfiles=''\nlibsfound=''\nlibspath=' /lib'\nlibswanted='socket bind inet nsl nm ndbm gdbm dbm db malloc dl ld sun m c cposix posix ndir dir crypt sec ucb bsd BSD PW x util'\nlibswanted_uselargefiles=''\nline=''\nlint=''\nlkflags=''\nln='ln'\nlns='/bin/ln -s'\nlocaltime_r_proto='0'\nlocincpth=''\nloclibpth=''\nlongdblkind='0'\nlongdblsize='8'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='ls'\nlseeksize='8'\nlseektype='off_t'\nmad='undef'\nmail=''\nmailx=''\nmake='make'\nmake_set_make='#'\nmallocobj='malloc.o'\nmallocsrc='malloc.c'\nmalloctype='void *'\nman1dir='/sys/man/1pub'\nman1direxp='/sys/man/1pub'\nman1ext=''\nman3dir='/sys/man/2pub'\nman3direxp='/sys/man/2pub'\nman3ext=''\nmips_type=''\nmkdir='mkdir'\nmmaptype='void *'\nmodetype='mode_t'\nmore='more'\nmultiarch='undef'\nmv=''\nmyarchname='386'\nmydomain='.nonet'\nmyhostname='17genr'\nmyuname='plan9 17genr 1 0 generic pcfl '\nn='-n'\nneed_va_copy='undef'\nnetdb_hlen_type='size_t'\nnetdb_host_type='char *'\nnetdb_name_type='char *'\nnetdb_net_type='long'\nnm='nm'\nnm_opt=''\nnm_so_opt=''\nnonxs_ext='Errno'\nnroff='nroff'\nnvEUformat='\"E\"'\nnvFUformat='\"F\"'\nnvGUformat='\"G\"'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='31'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.o'\nold_pthread_create_joinable=''\noptimize='-O'\norderlib='false'\nosname='plan9'\nosvers='1'\notherlibdirs=' '\npackage='perl5'\npager='/usr/ucb/more'\npasscat=''\npatchlevel='8'\npath_sep=':'\nperl5=''\nperl=''\nperl_patchlevel=''\nperl_static_inline='static'\nperladmin='9trouble@plan9.bell-labs.com'\nperllibs=' '\nperlpath='/bin/perl'\npg='pg'\nphostname='uname -n'\npidtype='pid_t'\nplibpth=''\npmake=''\npr=''\nprefix='/usr'\nprefixexp='/usr'\nprivlib='/sys/lib/perl/5.22.0'\nprivlibexp='/sys/lib/perl/5.22.0'\nprocselfexe=''\nprototype='define'\nptrsize='4'\nquadkind='3'\nquadtype='long long'\nrandbits='15'\nrandfunc='rand'\nrandom_r_proto='0'\nrandseedtype='unsigned'\nranlib=':'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='rm'\nrmail=''\nrun=''\nrunnm='false'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEUldbl='\"E\"'\nsPRIFUldbl='\"F\"'\nsPRIGUldbl='\"G\"'\nsPRIXU64='\"llX\"'\nsPRId64='\"lld\"'\nsPRIeldbl='\"e\"'\nsPRIfldbl='\"f\"'\nsPRIgldbl='\"g\"'\nsPRIi64='\"lli\"'\nsPRIo64='\"llo\"'\nsPRIu64='\"llu\"'\nsPRIx64='\"llx\"'\nsSCNfldbl='\"f\"'\nsched_yield='undef'\nscriptdir='/usr/bin'\nscriptdirexp='/usr/bin'\nsed='sed'\nseedfunc='srand'\nselectminbits='32'\nselecttype='int *'\nsendmail=''\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='/bin/sh'\nshar=''\nsharpbang='#!'\nshmattype=''\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='50'\nsig_name='ZERO HUP INT QUIT ILL ABRT FPE KILL SEGV PIPE ALRM TERM USR1 USR2 BUS CHLD CONT STOP TSTP TTIN TTOU NUM21 NUM22 NUM23 NUM24 NUM25 NUM26 NUM27 NUM28 NUM29 NUM30 NUM31 NUM32 NUM33 NUM34 NUM35 NUM36 NUM37 NUM38 NUM39 NUM40 NUM41 NUM42 NUM43 NUM44 NUM45 NUM46 NUM47 NUM48 NUM49 '\nsig_name_init='\"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"ABRT\", \"FPE\", \"KILL\", \"SEGV\", \"PIPE\", \"ALRM\", \"TERM\", \"USR1\", \"USR2\", \"BUS\", \"CHLD\", \"CONT\", \"STOP\", \"TSTP\", \"TTIN\", \"TTOU\", \"NUM21\", \"NUM22\", \"NUM23\", \"NUM24\", \"NUM25\", \"NUM26\", \"NUM27\", \"NUM28\", \"NUM29\", \"NUM30\", \"NUM31\", \"NUM32\", \"NUM33\", \"NUM34\", \"NUM35\", \"NUM36\", \"NUM37\", \"NUM38\", \"NUM39\", \"NUM40\", \"NUM41\", \"NUM42\", \"NUM43\", \"NUM44\", \"NUM45\", \"NUM46\", \"NUM47\", \"NUM48\", \"NUM49\", 0'\nsig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 '\nsig_num_init='0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0'\nsig_size='50'\nsignal_t='void'\nsitearch='/sys/lib/perl/5.22.0/site_perl/386'\nsitearchexp='/sys/lib/perl/site_perl/386'\nsitebin='/usr/bin'\nsitebinexp='/usr/bin'\nsitelib='/sys/lib/perl/5.22.0/site_perl'\nsitelib_stem='/sys/lib/perl/5.22.0/site_perl'\nsitelibexp='/sys/lib/perl/5.22.0/site_perl'\nsiteprefix='/usr'\nsiteprefixexp='/usr'\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nso='so'\nsockethdr=''\nsocketlib=''\nsocksizetype='int'\nsort='sort'\nspackage='Perl5'\nspitshell='cat'\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc='.'\nssizetype='ssize_t'\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!/bin/perl'\nstartsh='#!/bin/sh'\nstatic_ext='B ByteLoader Cwd Data/Dumper Devel/DProf Devel/PPPort Devel/Peek Digest/MD5 Encode Fcntl File/Glob Filter/Util/Call IO List/Util MIME/Base64 Opcode POSIX PerlIO/encoding PerlIO/scalar PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Unicode/Collate Unicode/Normalize attributes re threads threads/shared Encode/Byte Encode/CN Encode/EBCDIC Encode/JP Encode/KR Encode/Symbol Encode/TW Encode/Unicode'\nstdchar='char'\nstdio_base='((fp)->_base)'\nstdio_bufsiz='((fp)->_cnt + (fp)->_ptr - (fp)->_base)'\nstdio_cnt='((fp)->_cnt)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/sys/include/ape/string.h'\nsubmit=''\nsubversion='0'\nsysman='/sys/man/1pub'\ntail=''\ntar=''\ntargetarch=''\ntargetsh='/bin/sh'\ntbl=''\ntee=''\ntest='test'\ntimeincl='/sys/include/ape/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\nto=':'\ntouch='touch'\ntr='tr'\ntrnl='\\012'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned long long'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"hd\"'\nuidsign='-1'\nuidsize='2'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned long long'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='undef'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='define'\nuselongdouble='undef'\nusemallocwrap='undef'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='y'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='false'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvaproto='undef'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorprefix=''\nvendorprefixexp=''\nversion='5.22.0'\nversion_patchlevel_string='version 22 subversion 0'\nversiononly='undef'\nvi=''\nxlibpth=''\nyacc='yacc'\nyaccflags=''\nzcat=''\nzip='zip'\n# Configure command line arguments.\nconfig_arg0='./Configure'\nconfig_args=''\nconfig_argc=0\nPERL_REVISION=5\nPERL_VERSION=22\nPERL_SUBVERSION=0\nPERL_API_REVISION=5\nPERL_API_VERSION=22\nPERL_API_SUBVERSION=0\nPERL_PATCHLEVEL=\nPERL_CONFIG_SH=true\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/Porting/config.sh": "#!/bin/sh\n#\n# This file was produced by running the Configure script. It holds all the\n# definitions figured out by Configure. Should you modify one of these values,\n# do not forget to propagate your changes by running \"Configure -der\". You may\n# instead choose to run each of the .SH files by yourself, or \"Configure -S\".\n#\n\n# Package name      : perl5\n# Source directory  : .\n# Configuration time: Wed Apr  9 12:26:42 CEST 2014\n# Configured by     : merijn\n# Target system     : linux lx09 3.11.10-7-desktop #1 smp preempt mon feb 3 09:41:24 utc 2014 (750023e) i686 i686 i386 gnulinux \n\n: Configure command line arguments.\nconfig_arg0='./Configure'\nconfig_args='-Dusedevel -Duse64bitint -des'\nconfig_argc=3\nconfig_arg1='-Dusedevel'\nconfig_arg2='-Duse64bitint'\nconfig_arg3='-des'\n\nAuthor=''\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.a'\n_exe=''\n_o='.o'\nafs='false'\nafsroot='/afs'\nalignbytes='4'\nansi2knr=''\naphostname='/bin/hostname'\napi_revision='5'\napi_subversion='0'\napi_version='22'\napi_versionstring='5.22.0'\nar='ar'\narchlib='/pro/lib/perl5/5.22.0/i686-linux-64int'\narchlibexp='/pro/lib/perl5/5.22.0/i686-linux-64int'\narchname64='64int'\narchname='i686-linux-64int'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5.0'\nbash=''\nbin='/pro/bin'\nbin_ELF='define'\nbinexp='/pro/bin'\nbison='bison'\nbootstrap_charset='undef'\nbyacc='byacc'\nbyteorder='12345678'\nc=''\ncastflags='0'\ncat='cat'\ncc='cc'\ncccdlflags='-fPIC'\nccdlflags='-Wl,-E'\nccflags='-fwrapv -fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\nccflags_uselargefiles='-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\nccname='gcc'\nccsymbols=''\nccversion=''\ncf_by='merijn'\ncf_email='hmbrand@cpan.org'\ncf_time='Wed Apr  9 12:26:42 CEST 2014'\ncharbits='8'\ncharsize='1'\nchgrp=''\nchmod='chmod'\nchown=''\nclocktype='clock_t'\ncomm='comm'\ncompress=''\ncontains='grep'\ncp='cp'\ncpio=''\ncpp='cpp'\ncpp_stuff='42'\ncppccsymbols=''\ncppflags='-fwrapv -fno-strict-aliasing -pipe -fstack-protector -I/pro/local/include'\ncpplast='-'\ncppminus='-'\ncpprun='cc  -E'\ncppstdin='cc  -E'\ncppsymbols='__ATOMIC_ACQ_REL=4 __ATOMIC_ACQUIRE=2 __ATOMIC_CONSUME=1 __ATOMIC_HLE_ACQUIRE=65536 __ATOMIC_HLE_RELEASE=131072 __ATOMIC_RELAXED=0 __ATOMIC_RELEASE=3 __ATOMIC_SEQ_CST=5 __BIGGEST_ALIGNMENT__=16 __BYTE_ORDER__=1234 __CHAR16_TYPE__=short\\ unsigned\\ int __CHAR32_TYPE__=unsigned\\ int __CHAR_BIT__=8 __code_model_32__=1 __DBL_DECIMAL_DIG__=17 __DBL_DENORM_MIN__=((double)4.94065645841246544177e-324L) __DBL_DIG__=15 __DBL_EPSILON__=((double)2.22044604925031308085e-16L) __DBL_HAS_DENORM__=1 __DBL_HAS_INFINITY__=1 __DBL_HAS_QUIET_NAN__=1 __DBL_MANT_DIG__=53 __DBL_MAX_10_EXP__=308 __DBL_MAX__=((double)1.79769313486231570815e+308L) __DBL_MAX_EXP__=1024 __DBL_MIN_10_EXP__=(-307) __DBL_MIN__=((double)2.22507385850720138309e-308L) __DBL_MIN_EXP__=(-1021) __DEC128_EPSILON__=1E-33DL __DEC128_MANT_DIG__=34 __DEC128_MAX__=9.999999999999999999999999999999999E6144DL __DEC128_MAX_EXP__=6145 __DEC128_MIN__=1E-6143DL __DEC128_MIN_EXP__=(-6142) __DEC128_SUBNORMAL_MIN__=0.000000000000000000000000000000001E-6143DL __DEC32_EPSILON__=1E-6DF __DEC32_MANT_DIG__=7 __DEC32_MAX__=9.999999E96DF __DEC32_MAX_EXP__=97 __DEC32_MIN__=1E-95DF __DEC32_MIN_EXP__=(-94) __DEC32_SUBNORMAL_MIN__=0.000001E-95DF __DEC64_EPSILON__=1E-15DD __DEC64_MANT_DIG__=16 __DEC64_MAX__=9.999999999999999E384DD __DEC64_MAX_EXP__=385 __DEC64_MIN__=1E-383DD __DEC64_MIN_EXP__=(-382) __DEC64_SUBNORMAL_MIN__=0.000000000000001E-383DD __DEC_EVAL_METHOD__=2 __DECIMAL_BID_FORMAT__=1 __DECIMAL_DIG__=21 __ELF__=1 _FILE_OFFSET_BITS=64 __FINITE_MATH_ONLY__=0 __FLOAT_WORD_ORDER__=1234 __FLT_DECIMAL_DIG__=9 __FLT_DENORM_MIN__=1.40129846432481707092e-45F __FLT_DIG__=6 __FLT_EPSILON__=1.19209289550781250000e-7F __FLT_EVAL_METHOD__=2 __FLT_HAS_DENORM__=1 __FLT_HAS_INFINITY__=1 __FLT_HAS_QUIET_NAN__=1 __FLT_MANT_DIG__=24 __FLT_MAX_10_EXP__=38 __FLT_MAX__=3.40282346638528859812e+38F __FLT_MAX_EXP__=128 __FLT_MIN_10_EXP__=(-37) __FLT_MIN__=1.17549435082228750797e-38F __FLT_MIN_EXP__=(-125) __FLT_RADIX__=2 __GCC_ATOMIC_BOOL_LOCK_FREE=2 __GCC_ATOMIC_CHAR16_T_LOCK_FREE=2 __GCC_ATOMIC_CHAR32_T_LOCK_FREE=2 __GCC_ATOMIC_CHAR_LOCK_FREE=2 __GCC_ATOMIC_INT_LOCK_FREE=2 __GCC_ATOMIC_LLONG_LOCK_FREE=2 __GCC_ATOMIC_LONG_LOCK_FREE=2 __GCC_ATOMIC_POINTER_LOCK_FREE=2 __GCC_ATOMIC_SHORT_LOCK_FREE=2 __GCC_ATOMIC_TEST_AND_SET_TRUEVAL=1 __GCC_ATOMIC_WCHAR_T_LOCK_FREE=2 __GCC_HAVE_DWARF2_CFI_ASM=1 __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1=1 __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2=1 __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4=1 __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8=1 __GLIBC__=2 __GLIBC_MINOR__=18 __GNUC__=4 __GNUC_GNU_INLINE__=1 __GNUC_MINOR__=8 __GNUC_PATCHLEVEL__=1 __GNU_LIBRARY__=6 __gnu_linux__=1 __GXX_ABI_VERSION=1002 __i386=1 __i386__=1 i386=1 __i586=1 __i586__=1 __INT16_C=__INT16_C __INT16_MAX__=32767 __INT16_TYPE__=short\\ int __INT32_C=__INT32_C __INT32_MAX__=2147483647 __INT32_TYPE__=int __INT64_C=__INT64_C __INT64_MAX__=9223372036854775807LL __INT64_TYPE__=long\\ long\\ int __INT8_C=__INT8_C __INT8_MAX__=127 __INT8_TYPE__=signed\\ char __INT_FAST16_MAX__=2147483647 __INT_FAST16_TYPE__=int __INT_FAST32_MAX__=2147483647 __INT_FAST32_TYPE__=int __INT_FAST64_MAX__=9223372036854775807LL __INT_FAST64_TYPE__=long\\ long\\ int __INT_FAST8_MAX__=127 __INT_FAST8_TYPE__=signed\\ char __INT_LEAST16_MAX__=32767 __INT_LEAST16_TYPE__=short\\ int __INT_LEAST32_MAX__=2147483647 __INT_LEAST32_TYPE__=int __INT_LEAST64_MAX__=9223372036854775807LL __INT_LEAST64_TYPE__=long\\ long\\ int __INT_LEAST8_MAX__=127 __INT_LEAST8_TYPE__=signed\\ char __INT_MAX__=2147483647 __INTMAX_C=__INTMAX_C __INTMAX_MAX__=9223372036854775807LL __INTMAX_TYPE__=long\\ long\\ int __INTPTR_MAX__=2147483647 __INTPTR_TYPE__=int _LARGEFILE_SOURCE=1 __LDBL_DENORM_MIN__=3.64519953188247460253e-4951L __LDBL_DIG__=18 __LDBL_EPSILON__=1.08420217248550443401e-19L __LDBL_HAS_DENORM__=1 __LDBL_HAS_INFINITY__=1 __LDBL_HAS_QUIET_NAN__=1 __LDBL_MANT_DIG__=64 __LDBL_MAX_10_EXP__=4932 __LDBL_MAX__=1.18973149535723176502e+4932L __LDBL_MAX_EXP__=16384 __LDBL_MIN_10_EXP__=(-4931) __LDBL_MIN__=3.36210314311209350626e-4932L __LDBL_MIN_EXP__=(-16381) __linux=1 __linux__=1 linux=1 __LONG_LONG_MAX__=9223372036854775807LL __LONG_MAX__=2147483647L __ORDER_BIG_ENDIAN__=4321 __ORDER_LITTLE_ENDIAN__=1234 __ORDER_PDP_ENDIAN__=3412 __pentium=1 __pentium__=1 _POSIX_C_SOURCE=200809L _POSIX_SOURCE=1 __PRAGMA_REDEFINE_EXTNAME=1 __PTRDIFF_MAX__=2147483647 __PTRDIFF_TYPE__=int __REGISTER_PREFIX__= __SCHAR_MAX__=127 __SHRT_MAX__=32767 __SIG_ATOMIC_MAX__=2147483647 __SIG_ATOMIC_MIN__=(-2147483647\\ -\\ 1) __SIG_ATOMIC_TYPE__=int __SIZE_MAX__=4294967295U __SIZEOF_DOUBLE__=8 __SIZEOF_FLOAT__=4 __SIZEOF_INT__=4 __SIZEOF_LONG__=4 __SIZEOF_LONG_DOUBLE__=12 __SIZEOF_LONG_LONG__=8 __SIZEOF_POINTER__=4 __SIZEOF_PTRDIFF_T__=4 __SIZEOF_SHORT__=2 __SIZEOF_SIZE_T__=4 __SIZEOF_WCHAR_T__=4 __SIZEOF_WINT_T__=4 __SIZE_TYPE__=unsigned\\ int __STDC__=1 __STDC_HOSTED__=1 __STDC_IEC_559__=1 __STDC_IEC_559_COMPLEX__=1 __STDC_ISO_10646__=201103L __STDC_NO_THREADS__=1 _STDC_PREDEF_H=1 __UINT16_C=__UINT16_C __UINT16_MAX__=65535 __UINT16_TYPE__=short\\ unsigned\\ int __UINT32_C=__UINT32_C __UINT32_MAX__=4294967295U __UINT32_TYPE__=unsigned\\ int __UINT64_C=__UINT64_C __UINT64_MAX__=18446744073709551615ULL __UINT64_TYPE__=long\\ long\\ unsigned\\ int __UINT8_C=__UINT8_C __UINT8_MAX__=255 __UINT8_TYPE__=unsigned\\ char __UINT_FAST16_MAX__=4294967295U __UINT_FAST16_TYPE__=unsigned\\ int __UINT_FAST32_MAX__=4294967295U __UINT_FAST32_TYPE__=unsigned\\ int __UINT_FAST64_MAX__=18446744073709551615ULL __UINT_FAST64_TYPE__=long\\ long\\ unsigned\\ int __UINT_FAST8_MAX__=255 __UINT_FAST8_TYPE__=unsigned\\ char __UINT_LEAST16_MAX__=65535 __UINT_LEAST16_TYPE__=short\\ unsigned\\ int __UINT_LEAST32_MAX__=4294967295U __UINT_LEAST32_TYPE__=unsigned\\ int __UINT_LEAST64_MAX__=18446744073709551615ULL __UINT_LEAST64_TYPE__=long\\ long\\ unsigned\\ int __UINT_LEAST8_MAX__=255 __UINT_LEAST8_TYPE__=unsigned\\ char __UINTMAX_C=__UINTMAX_C __UINTMAX_MAX__=18446744073709551615ULL __UINTMAX_TYPE__=long\\ long\\ unsigned\\ int __UINTPTR_MAX__=4294967295U __UINTPTR_TYPE__=unsigned\\ int __unix=1 __unix__=1 unix=1 __USE_BSD=1 __USE_FILE_OFFSET64=1 __USE_LARGEFILE=1 __USE_MISC=1 __USE_POSIX=1 __USE_POSIX199309=1 __USE_POSIX199506=1 __USE_POSIX2=1 __USER_LABEL_PREFIX__= __USE_SVID=1 __VERSION__=\"4.8.1\\ 20130909\\ [gcc-4_8-branch\\ revision\\ 202388]\" __WCHAR_MAX__=2147483647L __WCHAR_MIN__=(-2147483647L\\ -\\ 1) __WCHAR_TYPE__=long\\ int __WINT_MAX__=4294967295U __WINT_MIN__=0U __WINT_TYPE__=unsigned\\ int'\ncrypt_r_proto='0'\ncryptlib=''\ncsh='tcsh'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='gcvt((x),(n),(b))'\nd_PRIEUldbl='define'\nd_PRIFUldbl='define'\nd_PRIGUldbl='define'\nd_PRIXU64='define'\nd_PRId64='define'\nd_PRIeldbl='define'\nd_PRIfldbl='define'\nd_PRIgldbl='define'\nd_PRIi64='define'\nd_PRIo64='define'\nd_PRIu64='define'\nd_PRIx64='define'\nd_SCNfldbl='define'\nd__fwalk='undef'\nd_access='define'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='define'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='define'\nd_attribute_deprecated='define'\nd_attribute_format='define'\nd_attribute_malloc='define'\nd_attribute_nonnull='define'\nd_attribute_noreturn='define'\nd_attribute_pure='define'\nd_attribute_unused='define'\nd_attribute_warn_unused_result='define'\nd_backtrace='undef'\nd_bcmp='define'\nd_bcopy='define'\nd_bsd='undef'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_choose_expr='define'\nd_builtin_expect='define'\nd_bzero='define'\nd_c99_variadic_macros='define'\nd_casti32='undef'\nd_castneg='define'\nd_cbrt='undef'\nd_charvspr='undef'\nd_chown='define'\nd_chroot='define'\nd_chsize='undef'\nd_class='undef'\nd_clearenv='define'\nd_closedir='define'\nd_cmsghdr_s='define'\nd_const='define'\nd_copysign='undef'\nd_copysignl='define'\nd_cplusplus='undef'\nd_crypt='define'\nd_crypt_r='undef'\nd_csh='define'\nd_ctermid='define'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='define'\nd_dbl_dig='define'\nd_dbminitproto='define'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='define'\nd_dirnamlen='undef'\nd_dladdr='undef'\nd_dlerror='define'\nd_dlopen='define'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_drand48_r='undef'\nd_drand48proto='define'\nd_dup2='define'\nd_eaccess='define'\nd_endgrent='define'\nd_endgrent_r='undef'\nd_endhent='define'\nd_endhostent_r='undef'\nd_endnent='define'\nd_endnetent_r='undef'\nd_endpent='define'\nd_endprotoent_r='undef'\nd_endpwent='define'\nd_endpwent_r='undef'\nd_endsent='define'\nd_endservent_r='undef'\nd_eofnblk='define'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='define'\nd_fchdir='define'\nd_fchmod='define'\nd_fchown='define'\nd_fcntl='define'\nd_fcntl_can_lock='define'\nd_fd_macros='define'\nd_fd_set='define'\nd_fdim='undef'\nd_fds_bits='undef'\nd_fegetround='undef'\nd_fgetpos='define'\nd_finite='define'\nd_finitel='define'\nd_flexfnam='define'\nd_flock='define'\nd_flockproto='define'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='define'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='define'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_frexpl='define'\nd_fs_data_s='undef'\nd_fseeko='define'\nd_fsetpos='define'\nd_fstatfs='define'\nd_fstatvfs='define'\nd_fsync='define'\nd_ftello='define'\nd_ftime='undef'\nd_futimes='define'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='define'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='define'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='define'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='define'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='define'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='define'\nd_getnameinfo='define'\nd_getnbyaddr='define'\nd_getnbyname='define'\nd_getnent='define'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='define'\nd_getpagsz='define'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='define'\nd_getpgid='define'\nd_getpgrp2='undef'\nd_getpgrp='define'\nd_getppid='define'\nd_getprior='define'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='define'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='define'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspnam='define'\nd_getspnam_r='undef'\nd_gettimeod='define'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='define'\nd_grpasswd='define'\nd_hasmntopt='define'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='define'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='define'\nd_inetntop='define'\nd_inetpton='define'\nd_int64_t='define'\nd_ip_mreq='define'\nd_ip_mreq_source='define'\nd_ipv6_mreq='define'\nd_ipv6_mreq_source='undef'\nd_isascii='define'\nd_isblank='define'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='define'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='define'\nd_isnanl='define'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='define'\nd_lc_monetary_2008='undef'\nd_lchown='define'\nd_ldbl_dig='define'\nd_ldexpl='define'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='define'\nd_libname_unique='undef'\nd_link='define'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='define'\nd_lockf='define'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_longdbl='define'\nd_longlong='define'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='define'\nd_lstat='define'\nd_madvise='define'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memchr='define'\nd_memcmp='define'\nd_memcpy='define'\nd_memmove='define'\nd_memset='define'\nd_mkdir='define'\nd_mkdtemp='define'\nd_mkfifo='define'\nd_mkstemp='define'\nd_mkstemps='define'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='define'\nd_modfl='define'\nd_modfl_pow32_bug='undef'\nd_modflproto='define'\nd_mprotect='define'\nd_msg='define'\nd_msg_ctrunc='define'\nd_msg_dontroute='define'\nd_msg_oob='define'\nd_msg_peek='define'\nd_msg_proxy='define'\nd_msgctl='define'\nd_msgget='define'\nd_msghdr_s='define'\nd_msgrcv='define'\nd_msgsnd='define'\nd_msync='define'\nd_munmap='define'\nd_mymalloc='undef'\nd_nan='undef'\nd_ndbm='define'\nd_ndbm_h_uses_prototypes='define'\nd_nearbyint='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='define'\nd_nl_langinfo='define'\nd_nv_preserves_uv='undef'\nd_nv_zero_is_allbits_zero='define'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='define'\nd_pathconf='define'\nd_pause='define'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe='define'\nd_poll='define'\nd_portable='define'\nd_prctl='define'\nd_prctl_set_name='define'\nd_printf_format_null='define'\nd_procselfexe='define'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='define'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='define'\nd_pwpasswd='define'\nd_pwquota='undef'\nd_qgcvt='define'\nd_quad='define'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='define'\nd_readv='define'\nd_recvmsg='define'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_safebcpy='undef'\nd_safemcpy='undef'\nd_sanemcmp='define'\nd_sbrkproto='define'\nd_scalbn='undef'\nd_scalbnl='define'\nd_sched_yield='define'\nd_scm_rights='define'\nd_seekdir='define'\nd_select='define'\nd_sem='define'\nd_semctl='define'\nd_semctl_semid_ds='define'\nd_semctl_semun='define'\nd_semget='define'\nd_semop='define'\nd_sendmsg='define'\nd_setegid='define'\nd_seteuid='define'\nd_setgrent='define'\nd_setgrent_r='undef'\nd_setgrps='define'\nd_sethent='define'\nd_sethostent_r='undef'\nd_setitimer='define'\nd_setlinebuf='define'\nd_setlocale='define'\nd_setlocale_r='undef'\nd_setnent='define'\nd_setnetent_r='undef'\nd_setpent='define'\nd_setpgid='define'\nd_setpgrp2='undef'\nd_setpgrp='define'\nd_setprior='define'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='define'\nd_setpwent_r='undef'\nd_setregid='define'\nd_setresgid='define'\nd_setresuid='define'\nd_setreuid='define'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='define'\nd_setservent_r='undef'\nd_setsid='define'\nd_setvbuf='define'\nd_shm='define'\nd_shmat='define'\nd_shmatprototype='define'\nd_shmctl='define'\nd_shmdt='define'\nd_shmget='define'\nd_sigaction='define'\nd_signbit='define'\nd_sigprocmask='define'\nd_sigsetjmp='define'\nd_sin6_scope_id='define'\nd_sitearch='define'\nd_snprintf='define'\nd_sockaddr_in6='define'\nd_sockaddr_sa_len='undef'\nd_sockatmark='define'\nd_sockatmarkproto='define'\nd_socket='define'\nd_socklen_t='define'\nd_sockpair='define'\nd_socks5_init='undef'\nd_sprintf_returns_strlen='define'\nd_sqrtl='define'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='define'\nd_statfs_f_flags='define'\nd_statfs_s='define'\nd_static_inline='define'\nd_statvfs='define'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='define'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='define'\nd_stdio_stream_array='undef'\nd_stdiobase='define'\nd_stdstdio='define'\nd_strchr='define'\nd_strcoll='define'\nd_strctcpy='define'\nd_strerrm='strerror(e)'\nd_strerror='define'\nd_strerror_r='undef'\nd_strftime='define'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strtod='define'\nd_strtol='define'\nd_strtold='define'\nd_strtoll='define'\nd_strtoq='define'\nd_strtoul='define'\nd_strtoull='define'\nd_strtouq='define'\nd_strxfrm='define'\nd_suidsafe='undef'\nd_symlink='define'\nd_syscall='define'\nd_syscallproto='define'\nd_sysconf='define'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='define'\nd_tcsetpgrp='define'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='undef'\nd_time='define'\nd_timegm='define'\nd_times='define'\nd_tm_tm_gmtoff='define'\nd_tm_tm_zone='define'\nd_tmpnam_r='undef'\nd_trunc='undef'\nd_truncate='define'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='define'\nd_ualarm='define'\nd_umask='define'\nd_uname='define'\nd_union_semun='undef'\nd_unordered='undef'\nd_unsetenv='define'\nd_usleep='define'\nd_usleepproto='define'\nd_ustat='define'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vendorscript='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_volatile='define'\nd_vprintf='define'\nd_vsnprintf='define'\nd_wait4='define'\nd_waitpid='define'\nd_wcscmp='undef'\nd_wcstombs='define'\nd_wcsxfrm='undef'\nd_wctomb='define'\nd_writev='define'\nd_xenix='undef'\ndate='date'\ndb_hashtype='u_int32_t'\ndb_prefixtype='size_t'\ndb_version_major='4'\ndb_version_minor='8'\ndb_version_patch='30'\ndirentrytype='struct dirent'\ndlext='so'\ndlsrc='dl_dlopen.xs'\ndoublekind='3'\ndoublesize='8'\ndrand01='Perl_drand48()'\ndrand48_r_proto='0'\ndtrace=''\ndynamic_ext='arybase attributes B Compress/Raw/Bzip2 Compress/Raw/Zlib Cwd Data/Dumper DB_File Devel/Peek Devel/PPPort Digest/MD5 Digest/SHA Encode Fcntl File/DosGlob File/Glob Filter/Util/Call GDBM_File Hash/Util Hash/Util/FieldHash I18N/Langinfo IO IPC/SysV List/Util Math/BigInt/FastCalc MIME/Base64 mro NDBM_File ODBM_File Opcode PerlIO/encoding PerlIO/mmap PerlIO/scalar PerlIO/via POSIX re SDBM_File Socket Storable Sys/Hostname Sys/Syslog threads threads/shared Tie/Hash/NamedCapture Time/HiRes Time/Piece Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap'\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='egrep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext=''\nexpr='expr'\nextensions='arybase attributes B Compress/Raw/Bzip2 Compress/Raw/Zlib Cwd Data/Dumper DB_File Devel/Peek Devel/PPPort Digest/MD5 Digest/SHA Encode Fcntl File/DosGlob File/Glob Filter/Util/Call GDBM_File Hash/Util Hash/Util/FieldHash I18N/Langinfo IO IPC/SysV List/Util Math/BigInt/FastCalc MIME/Base64 mro NDBM_File ODBM_File Opcode PerlIO/encoding PerlIO/mmap PerlIO/scalar PerlIO/via POSIX re SDBM_File Socket Storable Sys/Hostname Sys/Syslog threads threads/shared Tie/Hash/NamedCapture Time/HiRes Time/Piece Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap Archive/Tar Attribute/Handlers autodie AutoLoader autouse base B/Debug bignum Carp CGI Config/Perl/V constant CPAN CPAN/Meta CPAN/Meta/Requirements CPAN/Meta/YAML Devel/SelfStubber Digest Dumpvalue encoding/warnings Env Errno Exporter ExtUtils/CBuilder ExtUtils/Command ExtUtils/Constant ExtUtils/Install ExtUtils/MakeMaker ExtUtils/Manifest ExtUtils/Miniperl ExtUtils/ParseXS FileCache File/Fetch File/Find File/Path File/Temp Filter/Simple Getopt/Long HTTP/Tiny I18N/Collate I18N/LangTags if IO/Compress IO/Socket/IP IO/Zlib IPC/Cmd IPC/Open3 JSON/PP lib libnet Locale/Codes Locale/Maketext Locale/Maketext/Simple Math/BigInt Math/BigRat Math/Complex Memoize Module/Build Module/CoreList Module/Load Module/Load/Conditional Module/Loaded Module/Metadata Net/Ping NEXT Package/Constants Params/Check parent Parse/CPAN/Meta perlfaq PerlIO/via/QuotedPrint Perl/OSType Pod/Checker Pod/Escapes Pod/Functions Pod/Html podlators Pod/Parser Pod/Perldoc Pod/Simple Pod/Usage Safe Search/Dict SelfLoader Term/ANSIColor Term/Cap Term/Complete Term/ReadLine Test Test/Harness Test/Simple Text/Abbrev Text/Balanced Text/ParseWords Text/Tabs Thread/Queue Thread/Semaphore Tie/File Tie/Memoize Tie/RefHash Time/Local version XSLoader'\nextern_C='extern'\nextras=''\nfflushNULL='define'\nfflushall='undef'\nfind=''\nfirstmakefile='makefile'\nflex=''\nfpossize='16'\nfpostype='fpos_t'\nfreetype='void'\nfrom=':'\nfull_ar='/usr/bin/ar'\nfull_csh='/usr/bin/tcsh'\nfull_sed='/usr/bin/sed'\ngccansipedantic=''\ngccosandvers=''\ngccversion='4.8.1 20130909 [gcc-4_8-branch revision 202388]'\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"lu\"'\ngidsign='1'\ngidsize='4'\ngidtype='gid_t'\nglibpth='/usr/shlib  /lib /usr/lib /usr/lib/386 /lib/386 /usr/ccs/lib /usr/ucblib /usr/local/lib '\ngmake='gmake'\ngmtime_r_proto='0'\ngnulibc_version='2.18'\ngrep='grep'\ngroupcat='cat /etc/group'\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='false'\nh_sysfile='true'\nhint='recommended'\nhostcat='ypcat hosts'\nhostgenerate=''\nhostosname=''\nhostperl=''\nhtml1dir=' '\nhtml1direxp=''\nhtml3dir=' '\nhtml3direxp=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='long long'\ni8size='1'\ni8type='signed char'\ni_arpainet='define'\ni_assert='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='define'\ni_db='define'\ni_dbm='define'\ni_dirent='define'\ni_dlfcn='define'\ni_execinfo='undef'\ni_fcntl='undef'\ni_fenv='undef'\ni_float='define'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='define'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='define'\ni_ieeefp='undef'\ni_inttypes='define'\ni_langinfo='define'\ni_libutil='undef'\ni_limits='define'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='define'\ni_mallocmalloc='undef'\ni_math='define'\ni_memory='undef'\ni_mntent='define'\ni_ndbm='define'\ni_netdb='define'\ni_neterrno='undef'\ni_netinettcp='define'\ni_niin='define'\ni_poll='define'\ni_prot='undef'\ni_pthread='define'\ni_pwd='define'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='define'\ni_socks='define'\ni_stdarg='define'\ni_stdbool='define'\ni_stddef='define'\ni_stdint='undef'\ni_stdlib='define'\ni_string='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='define'\ni_sysfile='define'\ni_sysfilio='undef'\ni_sysin='undef'\ni_sysioctl='define'\ni_syslog='define'\ni_sysmman='define'\ni_sysmode='undef'\ni_sysmount='define'\ni_sysndir='undef'\ni_sysparam='define'\ni_syspoll='define'\ni_sysresrc='define'\ni_syssecrt='undef'\ni_sysselct='define'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='define'\ni_sysstatvfs='define'\ni_systime='define'\ni_systimek='undef'\ni_systimes='define'\ni_systypes='define'\ni_sysuio='define'\ni_sysun='define'\ni_sysutsname='define'\ni_sysvfs='define'\ni_syswait='define'\ni_termio='undef'\ni_termios='define'\ni_time='define'\ni_unistd='define'\ni_ustat='define'\ni_utime='define'\ni_values='define'\ni_varargs='undef'\ni_varhdr='stdarg.h'\ni_vfork='undef'\nignore_versioned_solibs='y'\ninc_version_list=''\ninc_version_list_init='0'\nincpath=''\nincpth='/usr/lib/gcc/i586-suse-linux/4.8/include /usr/local/include /usr/lib/gcc/i586-suse-linux/4.8/include-fixed /usr/lib/gcc/i586-suse-linux/4.8/../../../../i586-suse-linux/include /usr/include'\ninews=''\ninitialinstalllocation='/pro/bin'\ninstallarchlib='/pro/lib/perl5/5.22.0/i686-linux-64int'\ninstallbin='/pro/bin'\ninstallhtml1dir=''\ninstallhtml3dir=''\ninstallman1dir='/pro/local/man/man1'\ninstallman3dir='/pro/local/man/man3'\ninstallprefix='/pro'\ninstallprefixexp='/pro'\ninstallprivlib='/pro/lib/perl5/5.22.0'\ninstallscript='/pro/bin'\ninstallsitearch='/pro/lib/perl5/site_perl/5.22.0/i686-linux-64int'\ninstallsitebin='/pro/bin'\ninstallsitehtml1dir=''\ninstallsitehtml3dir=''\ninstallsitelib='/pro/lib/perl5/site_perl/5.22.0'\ninstallsiteman1dir='/pro/local/man/man1'\ninstallsiteman3dir='/pro/local/man/man3'\ninstallsitescript='/pro/bin'\ninstallstyle='lib/perl5'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorhtml1dir=''\ninstallvendorhtml3dir=''\ninstallvendorlib=''\ninstallvendorman1dir=''\ninstallvendorman3dir=''\ninstallvendorscript=''\nintsize='4'\nissymlink='test -h'\nivdformat='\"Ld\"'\nivsize='8'\nivtype='long long'\nknown_extensions='Archive/Tar arybase Attribute/Handlers attributes autodie AutoLoader autouse B base B/Debug bignum Carp CGI Compress/Raw/Bzip2 Compress/Raw/Zlib Config/Perl/V constant CPAN CPAN/Meta CPAN/Meta/Requirements CPAN/Meta/YAML Cwd Data/Dumper DB_File Devel/Peek Devel/PPPort Devel/SelfStubber Digest Digest/MD5 Digest/SHA Dumpvalue Encode encoding/warnings Env Errno Exporter ExtUtils/CBuilder ExtUtils/Command ExtUtils/Constant ExtUtils/Install ExtUtils/MakeMaker ExtUtils/Manifest ExtUtils/Miniperl ExtUtils/ParseXS Fcntl FileCache File/DosGlob File/Fetch File/Find File/Glob File/Path File/Temp Filter/Simple Filter/Util/Call GDBM_File Getopt/Long Hash/Util Hash/Util/FieldHash HTTP/Tiny I18N/Collate I18N/Langinfo I18N/LangTags if IO IO/Compress IO/Socket/IP IO/Zlib IPC/Cmd IPC/Open3 IPC/SysV JSON/PP lib libnet List/Util Locale/Codes Locale/Maketext Locale/Maketext/Simple Math/BigInt Math/BigInt/FastCalc Math/BigRat Math/Complex Memoize MIME/Base64 Module/Build Module/CoreList Module/Load Module/Load/Conditional Module/Loaded Module/Metadata mro NDBM_File Net/Ping NEXT ODBM_File Opcode Package/Constants Params/Check parent Parse/CPAN/Meta perlfaq PerlIO/encoding PerlIO/mmap PerlIO/scalar PerlIO/via PerlIO/via/QuotedPrint Perl/OSType Pod/Checker Pod/Escapes Pod/Functions Pod/Html podlators Pod/Parser Pod/Perldoc Pod/Simple Pod/Usage POSIX re Safe SDBM_File Search/Dict SelfLoader Socket Storable Sys/Hostname Sys/Syslog Term/ANSIColor Term/Cap Term/Complete Term/ReadLine Test Test/Harness Test/Simple Text/Abbrev Text/Balanced Text/ParseWords Text/Tabs Thread/Queue threads Thread/Semaphore threads/shared Tie/File Tie/Hash/NamedCapture Tie/Memoize Tie/RefHash Time/HiRes Time/Local Time/Piece Unicode/Collate Unicode/Normalize version VMS/DCLsym VMS/Filespec VMS/Stdio Win32 Win32API/File Win32CORE XS/APItest XSLoader XS/Typemap '\nksh=''\nld='cc'\nld_can_script='define'\nlddlflags='-shared -O2 -L/pro/local/lib -fstack-protector'\nldflags='-L/pro/local/lib -fstack-protector'\nldflags_uselargefiles=''\nldlibpthname='LD_LIBRARY_PATH'\nless='less'\nlib_ext='.a'\nlibc='libc-2.18.so'\nlibperl='libperl.a'\nlibpth='/usr/local/lib /usr/lib/gcc/i586-suse-linux/4.8/include-fixed /usr/lib/gcc/i586-suse-linux/4.8/../../../../i586-suse-linux/lib /usr/lib /pro/local/lib /lib'\nlibs='-lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat'\nlibsdirs=' /usr/lib'\nlibsfiles=' libnsl.so libgdbm.so libdb.so libdl.so libm.so libcrypt.so libutil.so libc.so libgdbm_compat.so'\nlibsfound=' /usr/lib/libnsl.so /usr/lib/libgdbm.so /usr/lib/libdb.so /usr/lib/libdl.so /usr/lib/libm.so /usr/lib/libcrypt.so /usr/lib/libutil.so /usr/lib/libc.so /usr/lib/libgdbm_compat.so'\nlibspath=' /usr/local/lib /usr/lib/gcc/i586-suse-linux/4.8/include-fixed /usr/lib/gcc/i586-suse-linux/4.8/../../../../i586-suse-linux/lib /usr/lib /pro/local/lib /lib'\nlibswanted='socket inet nsl nm gdbm dbm db malloc dl ld sun m crypt sec util c cposix posix ucb BSD gdbm_compat'\nlibswanted_uselargefiles=''\nline=''\nlint=''\nlkflags=''\nln='ln'\nlns='/usr/bin/ln -s'\nlocaltime_r_proto='0'\nlocincpth='/pro/local/include'\nloclibpth='/pro/local/lib'\nlongdblkind='3'\nlongdblsize='12'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='ls'\nlseeksize='8'\nlseektype='off_t'\nmad='undef'\nmail=''\nmailx=''\nmake='make'\nmake_set_make='#'\nmallocobj=''\nmallocsrc=''\nmalloctype='void *'\nman1dir='/pro/local/man/man1'\nman1direxp='/pro/local/man/man1'\nman1ext='1'\nman3dir='/pro/local/man/man3'\nman3direxp='/pro/local/man/man3'\nman3ext='3'\nmips_type=''\nmistrustnm=''\nmkdir='mkdir'\nmmaptype='void *'\nmodetype='mode_t'\nmore='more'\nmultiarch='undef'\nmv=''\nmyarchname='i686-linux'\nmydomain='.(none)'\nmyhostname='lx09'\nmyuname='linux lx09 3.11.10-7-desktop #1 smp preempt mon feb 3 09:41:24 utc 2014 (750023e) i686 i686 i386 gnulinux '\nn='-n'\nneed_va_copy='undef'\nnetdb_hlen_type='size_t'\nnetdb_host_type='const void *'\nnetdb_name_type='const char *'\nnetdb_net_type='in_addr_t'\nnm='nm'\nnm_opt=''\nnm_so_opt='--dynamic'\nnonxs_ext='Archive/Tar Attribute/Handlers autodie AutoLoader autouse base B/Debug bignum Carp CGI Config/Perl/V constant CPAN CPAN/Meta CPAN/Meta/Requirements CPAN/Meta/YAML Devel/SelfStubber Digest Dumpvalue encoding/warnings Env Errno Exporter ExtUtils/CBuilder ExtUtils/Command ExtUtils/Constant ExtUtils/Install ExtUtils/MakeMaker ExtUtils/Manifest ExtUtils/Miniperl ExtUtils/ParseXS FileCache File/Fetch File/Find File/Path File/Temp Filter/Simple Getopt/Long HTTP/Tiny I18N/Collate I18N/LangTags if IO/Compress IO/Socket/IP IO/Zlib IPC/Cmd IPC/Open3 JSON/PP lib libnet Locale/Codes Locale/Maketext Locale/Maketext/Simple Math/BigInt Math/BigRat Math/Complex Memoize Module/Build Module/CoreList Module/Load Module/Load/Conditional Module/Loaded Module/Metadata Net/Ping NEXT Package/Constants Params/Check parent Parse/CPAN/Meta perlfaq PerlIO/via/QuotedPrint Perl/OSType Pod/Checker Pod/Escapes Pod/Functions Pod/Html podlators Pod/Parser Pod/Perldoc Pod/Simple Pod/Usage Safe Search/Dict SelfLoader Term/ANSIColor Term/Cap Term/Complete Term/ReadLine Test Test/Harness Test/Simple Text/Abbrev Text/Balanced Text/ParseWords Text/Tabs Thread/Queue Thread/Semaphore Tie/File Tie/Memoize Tie/RefHash Time/Local version XSLoader'\nnroff='nroff'\nnvEUformat='\"E\"'\nnvFUformat='\"F\"'\nnvGUformat='\"G\"'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='53'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.o'\nold_pthread_create_joinable=''\noptimize='-O2'\norderlib='false'\nosname='linux'\nosvers='3.11.10-7-desktop'\notherlibdirs=' '\npackage='perl5'\npager='/pro/bin/less -R'\npasscat='cat /etc/passwd'\npatchlevel='19'\npath_sep=':'\nperl5='/pro/bin/perl'\nperl='perl'\nperl_patchlevel=''\nperl_static_inline='static __inline__'\nperladmin='hmbrand@cpan.org'\nperllibs='-lnsl -ldl -lm -lcrypt -lutil -lc'\nperlpath='/pro/bin/perl5.22.0'\npg='pg'\nphostname='hostname'\npidtype='pid_t'\nplibpth='/lib/i586-suse-linux/4.8 /lib /usr/lib/i586-suse-linux/4.8 /usr/lib'\npmake=''\npr=''\nprefix='/pro'\nprefixexp='/pro'\nprivlib='/pro/lib/perl5/5.22.0'\nprivlibexp='/pro/lib/perl5/5.22.0'\nprocselfexe='\"/proc/self/exe\"'\nprototype='define'\nptrsize='4'\nquadkind='3'\nquadtype='long long'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nranlib=':'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='rm'\nrm_try='/usr/bin/rm -f try try a.out .out try.[cho] try..o core core.try* try.core*'\nrmail=''\nrun=''\nrunnm='false'\nsGMTIME_max='2147483647'\nsGMTIME_min='-2147483648'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='-2147483648'\nsPRIEUldbl='\"LE\"'\nsPRIFUldbl='\"LF\"'\nsPRIGUldbl='\"LG\"'\nsPRIXU64='\"LX\"'\nsPRId64='\"Ld\"'\nsPRIeldbl='\"Le\"'\nsPRIfldbl='\"Lf\"'\nsPRIgldbl='\"Lg\"'\nsPRIi64='\"Li\"'\nsPRIo64='\"Lo\"'\nsPRIu64='\"Lu\"'\nsPRIx64='\"Lx\"'\nsSCNfldbl='\"Lf\"'\nsched_yield='sched_yield()'\nscriptdir='/pro/bin'\nscriptdirexp='/pro/bin'\nsed='sed'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype='fd_set *'\nsendmail=''\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='/bin/sh'\nshar=''\nsharpbang='#!'\nshmattype='void *'\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='65'\nsig_name='ZERO HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH IO PWR SYS NUM32 NUM33 RTMIN NUM35 NUM36 NUM37 NUM38 NUM39 NUM40 NUM41 NUM42 NUM43 NUM44 NUM45 NUM46 NUM47 NUM48 NUM49 NUM50 NUM51 NUM52 NUM53 NUM54 NUM55 NUM56 NUM57 NUM58 NUM59 NUM60 NUM61 NUM62 NUM63 RTMAX IOT CLD POLL UNUSED '\nsig_name_init='\"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"TRAP\", \"ABRT\", \"BUS\", \"FPE\", \"KILL\", \"USR1\", \"SEGV\", \"USR2\", \"PIPE\", \"ALRM\", \"TERM\", \"STKFLT\", \"CHLD\", \"CONT\", \"STOP\", \"TSTP\", \"TTIN\", \"TTOU\", \"URG\", \"XCPU\", \"XFSZ\", \"VTALRM\", \"PROF\", \"WINCH\", \"IO\", \"PWR\", \"SYS\", \"NUM32\", \"NUM33\", \"RTMIN\", \"NUM35\", \"NUM36\", \"NUM37\", \"NUM38\", \"NUM39\", \"NUM40\", \"NUM41\", \"NUM42\", \"NUM43\", \"NUM44\", \"NUM45\", \"NUM46\", \"NUM47\", \"NUM48\", \"NUM49\", \"NUM50\", \"NUM51\", \"NUM52\", \"NUM53\", \"NUM54\", \"NUM55\", \"NUM56\", \"NUM57\", \"NUM58\", \"NUM59\", \"NUM60\", \"NUM61\", \"NUM62\", \"NUM63\", \"RTMAX\", \"IOT\", \"CLD\", \"POLL\", \"UNUSED\", 0'\nsig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 6 17 29 31 '\nsig_num_init='0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 6, 17, 29, 31, 0'\nsig_size='69'\nsignal_t='void'\nsitearch='/pro/lib/perl5/site_perl/5.22.0/i686-linux-64int'\nsitearchexp='/pro/lib/perl5/site_perl/5.22.0/i686-linux-64int'\nsitebin='/pro/bin'\nsitebinexp='/pro/bin'\nsitehtml1dir=''\nsitehtml1direxp=''\nsitehtml3dir=''\nsitehtml3direxp=''\nsitelib='/pro/lib/perl5/site_perl/5.22.0'\nsitelib_stem='/pro/lib/perl5/site_perl'\nsitelibexp='/pro/lib/perl5/site_perl/5.22.0'\nsiteman1dir='/pro/local/man/man1'\nsiteman1direxp='/pro/local/man/man1'\nsiteman3dir='/pro/local/man/man3'\nsiteman3direxp='/pro/local/man/man3'\nsiteprefix='/pro'\nsiteprefixexp='/pro'\nsitescript='/pro/bin'\nsitescriptexp='/pro/bin'\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nso='so'\nsockethdr=''\nsocketlib=''\nsocksizetype='socklen_t'\nsort='sort'\nspackage='Perl5'\nspitshell='cat'\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc='.'\nssizetype='ssize_t'\nst_ino_sign='1'\nst_ino_size='8'\nstartperl='#!/pro/bin/perl5.22.0'\nstartsh='#!/bin/sh'\nstatic_ext=' '\nstdchar='char'\nstdio_base='((fp)->_IO_read_base)'\nstdio_bufsiz='((fp)->_IO_read_end - (fp)->_IO_read_base)'\nstdio_cnt='((fp)->_IO_read_end - (fp)->_IO_read_ptr)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_IO_read_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/usr/include/string.h'\nsubmit=''\nsubversion='0'\nsysman='/usr/share/man/man1'\nsysroot=''\ntail=''\ntar=''\ntargetarch=''\ntargetdir=''\ntargetenv=''\ntargethost=''\ntargetmkdir=''\ntargetport=''\ntargetsh='/bin/sh'\ntbl=''\ntee=''\ntest='test'\ntimeincl='/usr/include/sys/time.h /usr/include/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\nto=':'\ntouch='touch'\ntr='tr'\ntrnl='\\n'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned long long'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"lu\"'\nuidsign='1'\nuidsize='4'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned long long'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='define'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='define'\nusedl='define'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='define'\nuselongdouble='undef'\nusemallocwrap='define'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='false'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nuseversionedarchname='undef'\nusevfork='false'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"LX\"'\nuvoformat='\"Lo\"'\nuvsize='8'\nuvtype='unsigned long long'\nuvuformat='\"Lu\"'\nuvxformat='\"Lx\"'\nvaproto='define'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorhtml1dir=' '\nvendorhtml1direxp=''\nvendorhtml3dir=' '\nvendorhtml3direxp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorman1dir=' '\nvendorman1direxp=''\nvendorman3dir=' '\nvendorman3direxp=''\nvendorprefix=''\nvendorprefixexp=''\nvendorscript=''\nvendorscriptexp=''\nversion='5.22.0'\nversion_patchlevel_string='version 22 subversion 0'\nversiononly='define'\nvi=''\nxlibpth='/usr/lib/386 /lib/386'\nyacc='/pro/3gl/CPAN/bin/byacc'\nyaccflags=''\nzcat=''\nzip='zip'\nPERL_REVISION=5\nPERL_VERSION=22\nPERL_SUBVERSION=0\nPERL_API_REVISION=5\nPERL_API_VERSION=22\nPERL_API_SUBVERSION=0\nPERL_PATCHLEVEL=''\nPERL_CONFIG_SH=true\n: Variables propagated from previous config.sh file.\nlibdb_needs_pthread='N'\nlibdirs=' /lib /pro/local/lib'\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/NetWare/config_H.wc": "/*\n * This file was produced by running the config_h.SH script, which\n * gets its values from undef, which is generally produced by\n * running Configure.\n *\n * Feel free to modify any of this as the need arises.  Note, however,\n * that running config_h.SH again will wipe out any changes you've made.\n * For a more permanent change edit undef and rerun config_h.SH.\n *\n * $Id: Config_h.U,v 3.0.1.5 1997/02/28 14:57:43 ram Exp $\n */\n\n/*\n * Package name      : perl5\n * Source directory  : \n * Configuration time: Thu Jun 21 17:44:02 2001\n * Configured by     : Administrator\n * Target system     : \n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"\"\t/**/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_AINTL\t\t/ **/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n/*#define HAS_ALARM\t\t/**/\n\n/* HASATTRIBUTE:\n *\tThis symbol indicates the C compiler can check for function attributes,\n *\tsuch as printf formats. This is normally only supported by GNU cc.\n */\n/*#define HASATTRIBUTE \t/**/\n#ifndef HASATTRIBUTE\n#ifdef __attribute__\n#undef __attribute__\n#endif\n#define __attribute__(_arg_)\n#endif\n\n/* HAS_BCMP:\n *\tThis symbol is defined if the bcmp() routine is available to\n *\tcompare blocks of memory.\n */\n/*#define HAS_BCMP\t/**/\n\n/* HAS_BCOPY:\n *\tThis symbol is defined if the bcopy() routine is available to\n *\tcopy blocks of memory.\n */\n/*#define HAS_BCOPY\t/**/\n\n/* HAS_BZERO:\n *\tThis symbol is defined if the bzero() routine is available to\n *\tset a memory block to 0.\n */\n/*#define HAS_BZERO\t/**/\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n/*#define HAS_CHOWN\t\t/**/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n/*#define HAS_CHROOT\t\t/**/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n#define\tHAS_CHSIZE\t\t/**/\n\n/* HASCONST:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe const type. There is no need to actually test for that symbol\n *\twithin your programs. The mere use of the \"const\" keyword will\n *\ttrigger the necessary tests.\n */\n#define HASCONST\t/**/\n#ifndef HASCONST\n#define const\n#endif\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n/*#define HAS_CRYPT\t\t/**/\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n/*#define HAS_CUSERID\t\t/**/\n\n/* HAS_DBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol DBL_DIG, which is the number\n *\tof significant digits in a double precision number.  If this\n *\tsymbol is not defined, a guess of 15 is usually pretty good.\n */\n#define HAS_DBL_DIG \t/**/\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n#define HAS_DIFFTIME\t\t/**/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n#define HAS_DLERROR\t/**/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n#define HAS_DUP2\t/**/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n/*#define HAS_FAST_STDIO\t\t/**/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n/*#define HAS_FCHDIR\t\t/**/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n/*#define HAS_FCHMOD\t\t/**/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n/*#define HAS_FCHOWN\t\t/**/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n/*#define HAS_FCNTL\t\t/**/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n#define HAS_FGETPOS\t/**/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n#define HAS_FLOCK\t\t/**/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n/*#define HAS_FORK\t\t/**/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n#define HAS_FSETPOS\t/**/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n/*#define HAS_GETTIMEOFDAY\t/**/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_GETGROUPS\t\t/**/\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n#define HAS_GETLOGIN\t\t/**/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n/*#define HAS_GETPGID\t\t/**/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n/*#define HAS_GETPGRP2\t\t/**/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n/*#define HAS_GETPPID\t\t/**/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n/*#define HAS_GETPRIORITY\t\t/**/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n/*#define HAS_INET_ATON\t\t/**/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n/*#define HAS_KILLPG\t/**/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n#define HAS_LINK\t/**/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n#define HAS_LOCALECONV\t/**/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_LOCKF\t\t/**/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n/*#define HAS_LSTAT\t\t/**/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n#define HAS_MBLEN\t\t/**/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to covert a multibyte string into a wide character string.\n */\n#define\tHAS_MBSTOWCS\t\t/**/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto covert a multibyte to a wide character.\n */\n#define HAS_MBTOWC\t\t/**/\n\n/* HAS_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tto compare blocks of memory.\n */\n#define HAS_MEMCMP\t/**/\n\n/* HAS_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy blocks of memory.\n */\n#define HAS_MEMCPY\t/**/\n\n/* HAS_MEMMOVE:\n *\tThis symbol, if defined, indicates that the memmove routine is available\n *\tto copy potentially overlapping blocks of memory. This should be used\n *\tonly when HAS_SAFE_BCOPY is not defined. If neither is there, roll your\n *\town version.\n */\n#define HAS_MEMMOVE\t/**/\n\n/* HAS_MEMSET:\n *\tThis symbol, if defined, indicates that the memset routine is available\n *\tto set blocks of memory.\n */\n#define HAS_MEMSET\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n#define HAS_MKDIR\t\t/**/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n/*#define HAS_MKFIFO\t\t/**/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n#define HAS_MKTIME\t\t/**/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n/*#define HAS_MSYNC\t\t/**/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n/*#define HAS_MUNMAP\t\t/**/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n/*#define HAS_NICE\t\t/**/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n/*#define HAS_PATHCONF\t\t/**/\n/*#define HAS_FPATHCONF\t\t/**/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n/*#define HAS_PAUSE\t\t/**/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n#define HAS_PIPE\t\t/**/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors. You may safely\n *\tinclude <poll.h> when this symbol is defined.\n */\n/*#define HAS_POLL\t\t/**/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#define HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_SEEKDIR\t\t/**/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_TELLDIR\t\t/**/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_REWINDDIR\t\t/**/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n/*#define HAS_READLINK\t\t/**/\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#define HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n#define HAS_RMDIR\t\t/**/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n#define HAS_SELECT\t/**/\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n/*#define HAS_SETEGID\t\t/**/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n/*#define HAS_SETEUID\t\t/**/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n/*#define HAS_SETLINEBUF\t\t/**/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n#define HAS_SETLOCALE\t/**/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n/*#define HAS_SETPGID\t/**/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n/*#define HAS_SETPGRP2\t\t/**/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n/*#define HAS_SETPRIORITY\t\t/**/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n/*#define HAS_SETREGID\t\t/**/\n/*#define HAS_SETRESGID\t\t/**/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n/*#define HAS_SETREUID\t\t/**/\n/*#define HAS_SETRESUID\t\t/**/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n/*#define HAS_SETRGID\t\t/**/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n/*#define HAS_SETRUID\t\t/**/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n/*#define HAS_SETSID\t/**/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t void *\t/**/\n/*#define HAS_SHMAT_PROTOTYPE\t/**/\n\n/* HAS_STRCHR:\n *\tThis symbol is defined to indicate that the strchr()/strrchr()\n *\tfunctions are available for string searching. If not, try the\n *\tindex()/rindex() pair.\n */\n/* HAS_INDEX:\n *\tThis symbol is defined to indicate that the index()/rindex()\n *\tfunctions are available for string searching.\n */\n#define HAS_STRCHR\t/**/\n/*#define HAS_INDEX\t/**/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n#define HAS_STRCOLL\t/**/\n\n/* USE_STRUCT_COPY:\n *\tThis symbol, if defined, indicates that this C compiler knows how\n *\tto copy structures.  If undefined, you'll need to use a block copy\n *\troutine of some sort instead.\n */\n#define\tUSE_STRUCT_COPY\t/**/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n#define HAS_STRTOD\t/**/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#define HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n#define HAS_STRXFRM\t/**/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n/*#define HAS_SYMLINK\t/**/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n/*#define HAS_SYSCALL\t/**/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n/*#define HAS_SYSCONF\t/**/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n#define HAS_SYSTEM\t/**/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n/*#define HAS_TCGETPGRP\t\t/**/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n/*#define HAS_TCSETPGRP\t\t/**/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n/*#define HAS_TRUNCATE\t/**/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n#define HAS_TZNAME\t\t/**/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n#define HAS_UMASK\t\t/**/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n/*#define HAS_USLEEP\t\t/**/\n\n/* HASVOLATILE:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe volatile declaration.\n */\n#define\tHASVOLATILE\t/**/\n#ifndef HASVOLATILE\n#define volatile\n#endif\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n/*#define HAS_WAIT4\t/**/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n#define HAS_WAITPID\t/**/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n#define HAS_WCSTOMBS\t/**/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto covert a wide character to a multibyte.\n */\n#define HAS_WCTOMB\t\t/**/\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n#define\tI_ARPA_INET\t\t/**/\n\n/* I_ASSERT:\n *\tThis symbol, if defined, indicates to the C program that it could\n *\tinclude <assert.h> to get the assert() macro.\n */\n#define\tI_ASSERT\t\t/**/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n/*#define I_DBM\t/**/\n#define I_RPCSVC_DBM\t/**/\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#define I_DIRENT\t\t/**/\n/*#define DIRNAMLEN\t/**/\n#define Direntry_t DIR\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n#define I_DLFCN\t\t/**/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n#define I_FCNTL\t/**/\n\n/* I_FLOAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <float.h> to get definition of symbols like DBL_MAX or\n *\tDBL_MIN, i.e. machine dependent floating point values.\n */\n#define I_FLOAT\t\t/**/\n\n/* I_LIMITS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <limits.h> to get definition of symbols like WORD_BIT or\n *\tLONG_MAX, i.e. machine dependant limitations.\n */\n#define I_LIMITS\t\t/**/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n#define\tI_LOCALE\t\t/**/\n\n/* I_MATH:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <math.h>.\n */\n#define I_MATH\t\t/**/\n\n/* I_MEMORY:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <memory.h>.\n */\n/*#define I_MEMORY\t\t/**/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/*#define I_NDBM\t/**/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and \n *\tshould be included.\n */\n/*#define I_NET_ERRNO\t\t/**/\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n#define I_NETINET_IN\t/**/\n\n/* I_STDDEF:\n *\tThis symbol, if defined, indicates that <stddef.h> exists and should\n *\tbe included.\n */\n#define I_STDDEF\t/**/\n\n/* I_STDLIB:\n *\tThis symbol, if defined, indicates that <stdlib.h> exists and should\n *\tbe included.\n */\n#define I_STDLIB\t\t/**/\n\n/* I_STRING:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <string.h> (USG systems) instead of <strings.h> (BSD systems).\n */\n#define I_STRING\t\t/**/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n/*#define I_SYS_DIR\t\t/**/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n/*#define I_SYS_FILE\t\t/**/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n#define\tI_SYS_IOCTL\t\t/**/\n#define I_SYS_SOCKIO\t/**/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n/*#define I_SYS_NDIR\t/**/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n/*#define I_SYS_PARAM\t\t/**/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n/*#define I_SYS_RESOURCE\t\t/**/\n\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n/*#define I_SYS_SELECT\t/**/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#define\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n/*#define\tI_SYS_TIMES\t\t/**/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n#define\tI_SYS_TYPES\t\t/**/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n/*#define I_SYS_UN\t\t/**/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n/*#define I_SYS_WAIT\t/**/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/*#define I_TERMIO\t\t/**/\n/*#define I_TERMIOS\t\t/**/\n/*#define I_SGTTY\t\t/**/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n/*#define I_UNISTD\t\t/**/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n#define I_UTIME\t\t/**/\n\n/* I_VALUES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <values.h> to get definition of symbols like MINFLOAT or\n *\tMAXLONG, i.e. machine dependant limitations.  Probably, you\n *\tshould use <limits.h> instead, if it is available.\n */\n/*#define I_VALUES\t\t/**/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n/*#define I_VFORK\t/**/\n\n/* CAN_PROTOTYPE:\n *\tIf defined, this macro indicates that the C compiler can handle\n *\tfunction prototypes.\n */\n#define\tCAN_PROTOTYPE\t/**/\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"cmd /x /c\"  /**/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE 4\t\t/**/\n#define LONGSIZE 4\t\t/**/\n#define SHORTSIZE 2\t\t/**/\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n/*#define MULTIARCH\t\t/**/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpart, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, or QUAD_IS_INT64_T.\n */\n/*#define HAS_QUAD\t/**/\n#ifdef HAS_QUAD\n#   define Quad_t __int64\t/**/\n#   define Uquad_t unsigned __int64\t/**/\n#   define QUADKIND 5\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#endif\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_ACCESSX\t\t/**/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_EACCESS\t\t/**/\n\n/* I_SYS_ACCESS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/access.h>.\n */\n/*#define   I_SYS_ACCESS                /**/\n\n/* I_SYS_SECURITY:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/security.h>.\n */\n/*#define   I_SYS_SECURITY\t/**/\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"NetWare\"\t\t/**/\n#define OSVERS \"5.x\"\t\t/**/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.\n */\n#if defined(MULTIARCH)\n#  define MEM_ALIGNBYTES 8\n#else\n#define MEM_ALIGNBYTES 8\n#endif\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for perl5.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define ARCHLIB \"c:\\\\perl\\\\5.22.0\\\\lib\\\\NetWare-x86-multi-thread\"\t\t/**/\n/*#define ARCHLIB_EXP \"\"\t/**/\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"NetWare-x86-multi-thread\"\t\t/**/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n/*#define HAS_ATOLF\t\t/**/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n/*#define HAS_ATOLL\t\t/**/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n#define BIN \"c:\\\\perl\\\\5.22.0\\\\bin\\\\NetWare-x86-multi-thread\"\t/**/\n#define BIN_EXP \"c:\\\\perl\\\\5.22.0\\\\bin\\\\NetWare-x86-multi-thread\"\t/**/\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\ti.e. 0x1234 or 0x4321, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries (eg. on NeXT systems), use compiler-defined macros to\n *\tdetermine the byte order.\n *\tOn NeXT 3.2 (and greater), you can build \"Fat\" Multiple Architecture\n *\tBinaries (MAB) on either big endian or little endian machines.\n *\tThe endian-ness is available at compile-time.  This only matters\n *\tfor perl, where the config.h can be generated and installed on \n *\tone system, and used by a different architecture to build an\n *\textension.  Older versions of NeXT that might not have\n *\tdefined either *_ENDIAN__ were all on Motorola 680x0 series,\n *\tso the default case (for NeXT) is big endian to catch them. \n *\tThis might matter for NeXT 3.0.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#  if !defined(BYTEORDER) && (defined(NeXT) || defined(__NeXT__))\n#    define BYTEORDER 0x4321\n#  endif\n#else\n#define BYTEORDER 0x1234\t/* large digits for MSB */\n#endif /* NeXT */\n\n/* CAT2:\n *\tThis macro catenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if 42 == 1\n#define CAT2(a,b)\ta/**/b\n#define STRINGIFY(a)\t\"a\"\n\t\t/* If you can get stringification with catify, tell me how! */\n#endif\n#if 42 == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\t\n#define PeRl_StGiFy(a)\t#a\n/* the additional level of indirection enables these macros to be\n * used as arguments to other macros.  See K&R 2nd ed., page 231. */\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if 42 != 1 && 42 != 42\n#   include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.\t Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"cl -nologo -E\"\n#define CPPMINUS \"\"\n#define CPPRUN \"cl -nologo -E\"\n#define CPPLAST \"\"\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n/*#define HAS__FWALK\t\t/**/\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n#define HAS_ACCESS\t\t/**/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n/*#define\tCASTI32\t\t/**/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n#define\tCASTNEGFLOAT\t\t/**/\n#define CASTFLAGS 0\t\t/**/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n/*#define VOID_CLOSEDIR\t\t/**/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_CMSGHDR\t/**/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n/*#define HAS_CSH\t\t/**/\n#ifdef HAS_CSH\n#define CSH \"\"\t/**/\n#endif\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n/*#define \tDLSYM_NEEDS_UNDERSCORE \t/**/\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n/*#define\tHAS_DRAND48_PROTO\t/**/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n/*#define HAS_ENDGRENT\t\t/**/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n/*#define HAS_ENDHOSTENT\t\t/**/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n/*#define HAS_ENDNETENT\t\t/**/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n/*#define HAS_ENDPROTOENT\t\t/**/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n/*#define HAS_ENDPWENT\t\t/**/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n/*#define HAS_ENDSERVENT\t\t/**/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n/*#define FCNTL_CAN_LOCK\t\t/**/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n#define HAS_FD_SET\t/**/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n#define\tFLEXFILENAMES\t\t/**/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n/*#define\tHAS_FPOS64_T    \t/**/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n/*#define HAS_FREXPL\t\t/**/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_FS_DATA\t/**/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FSEEKO\t\t/**/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATFS\t\t/**/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n/*#define HAS_FSYNC\t\t/**/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FTELLO\t\t/**/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tPossible values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) sprintf((b),\"%.*g\",(n),(x))\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n#define HAS_GETCWD\t\t/**/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enhanced (shadow) password entries by name.\n */\n/*#define HAS_GETESPWNAM\t\t/**/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n/*#define HAS_GETFSSTAT\t\t/**/\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n/*#define HAS_GETGRENT\t\t/**/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n#define HAS_GETHOSTBYADDR\t\t/**/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n#define HAS_GETHOSTBYNAME\t\t/**/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n/*#define HAS_GETHOSTENT\t\t/**/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n#define HAS_GETHOSTNAME\t/**/\n#define HAS_UNAME\t\t/**/\n/*#define HAS_PHOSTNAME\t/**/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETHOST_PROTOS\t/**/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n/*#define HAS_GETITIMER\t\t/**/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n/*#define HAS_GETMNT\t\t/**/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n/*#define HAS_GETMNTENT\t\t/**/\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n/*#define HAS_GETNETBYADDR\t\t/**/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n/*#define HAS_GETNETBYNAME\t\t/**/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n/*#define HAS_GETNETENT\t\t/**/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETNET_PROTOS\t/**/\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n/*#define HAS_GETPAGESIZE\t\t/**/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n/*#define HAS_GETPROTOENT\t\t/**/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n/*#define HAS_GETPGRP\t\t/**/\n/*#define USE_BSD_GETPGRP\t/**/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n#define HAS_GETPROTOBYNAME\t\t/**/\n#define HAS_GETPROTOBYNUMBER\t\t/**/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETPROTO_PROTOS\t/**/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n/*#define HAS_GETPRPWNAM\t\t/**/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n/*#define HAS_GETPWENT\t\t/**/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n/*#define HAS_GETSERVENT\t\t/**/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETSERV_PROTOS\t/**/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n/*#define HAS_GETSPNAM\t\t/**/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n#define HAS_GETSERVBYNAME\t\t/**/\n#define HAS_GETSERVBYPORT\t\t/**/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n/*#define HAS_GNULIBC  \t/**/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n/*#define HAS_HASMNTOPT\t\t/**/\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n#define HAS_HTONL\t\t/**/\n#define HAS_HTONS\t\t/**/\n#define HAS_NTOHL\t\t/**/\n#define HAS_NTOHS\t\t/**/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n/*#define HAS_ILOGBL\t\t/**/\n\n/* HAS_INT64_T:\n *     This symbol will defined if the C compiler supports int64_t.\n *     Usually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n/*#define     HAS_INT64_T               /**/\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii \n *\tis available.\n */\n#define HAS_ISASCII\t\t/**/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n/*#define HAS_ISNAN\t\t/**/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n/*#define HAS_ISNANL\t\t/**/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n/*#define HAS_LCHOWN\t\t/**/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n#define HAS_LDBL_DIG \t/**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the \n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.\n */\n#define HAS_LONG_DOUBLE\t\t/**/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE 10\t\t/**/\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the \n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n/*#define HAS_LONG_LONG\t\t/**/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE 8\t\t/**/\n#endif\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n#define\tHAS_LSEEK_PROTO\t/**/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n/*#define HAS_MADVISE\t\t/**/\n\n/* HAS_MEMCHR:\n *\tThis symbol, if defined, indicates that the memchr routine is available\n *\tto locate characters within a C string.\n */\n#define HAS_MEMCHR\t/**/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n/*#define HAS_MKDTEMP\t\t/**/\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n/*#define HAS_MKSTEMP\t\t/**/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to exclusively create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n/*#define HAS_MKSTEMPS\t\t/**/\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'cadd_t'.\n */\n/*#define HAS_MMAP\t\t/**/\n#define Mmap_t void *\t/**/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/* HAS_MODFL_POW32_BUG:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tbroken for long doubles >= pow(2, 32).\n *\tFor example from 4294967303.150000 one would get 4294967302.000000\n *\tand 1.150000.  The bug has been seen in certain versions of glibc,\n *\trelease 2.2.2 is known to be okay.\n */\n/*#define HAS_MODFL\t\t/**/\n/*#define HAS_MODFL_POW32_BUG\t\t/**/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n/*#define HAS_MPROTECT\t\t/**/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n/*#define HAS_MSG\t\t/**/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_MSGHDR\t/**/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n/*#define\tHAS_OFF64_T    \t\t/**/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n/*#define HAS_OPEN3\t\t/**/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n/*#define OLD_PTHREAD_CREATE_JOINABLE  /**/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield \n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/*#define HAS_PTHREAD_YIELD\t/**/\n#define SCHED_YIELD\t\t/**/\n/*#define HAS_SCHED_YIELD\t/**/\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n/*#define HAS_PTHREAD_ATTR_SETSCOPE\t\t/ **/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n/*#define HAS_READV\t\t/**/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_RECVMSG\t\t/**/\n\n/* HAS_SAFE_BCOPY:\n *\tThis symbol, if defined, indicates that the bcopy routine is available\n *\tto copy potentially overlapping memory blocks. Otherwise you should\n *\tprobably use memmove() or memcpy(). If neither is defined, roll your\n *\town version.\n */\n/*#define HAS_SAFE_BCOPY\t/**/\n\n/* HAS_SAFE_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy potentially overlapping memory blocks. Otherwise you should\n *\tprobably use memmove() or memcpy(). If neither is defined, roll your\n *\town version.\n */\n/*#define HAS_SAFE_MEMCPY\t/**/\n\n/* HAS_SANE_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tand can be used to compare relative magnitudes of chars with their high\n *\tbits set.  If it is not defined, roll your own version.\n */\n#define HAS_SANE_MEMCMP\t/**/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n/*#define\tHAS_SBRK_PROTO\t/**/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n/*#define HAS_SEM\t\t/**/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n/*#define HAS_SCALBNL\t\t/**/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_SENDMSG\t\t/**/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n/*#define HAS_SETGRENT\t\t/**/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_SETGROUPS\t\t/**/\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n/*#define HAS_SETHOSTENT\t\t/**/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n/*#define HAS_SETITIMER\t\t/**/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n/*#define HAS_SETNETENT\t\t/**/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n/*#define HAS_SETPROTOENT\t\t/**/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n/*#define HAS_SETPGRP\t\t/**/\n/*#define USE_BSD_SETPGRP\t/**/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n/*#define HAS_SETPROCTITLE\t\t/**/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n/*#define HAS_SETPWENT\t\t/**/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n/*#define HAS_SETSERVENT\t\t/**/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n#define HAS_SETVBUF\t\t/**/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n/*#define HAS_SHM\t\t/**/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n/*#define HAS_SIGACTION\t/**/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/*#define HAS_SIGSETJMP\t/**/\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_STATIC_INLINE:\n *\tThis symbol, if defined, indicates that the C compiler supports\n *\tC99-style static inline.  That is, the function can't be called\n *\tfrom another translation unit.\n */\n/* PERL_STATIC_INLINE:\n *\tThis symbol gives the best-guess incantation to use for static\n *\tinline functions.  If HAS_STATIC_INLINE is defined, this will\n *\tgive C99-style inline.  If HAS_STATIC_INLINE is not defined,\n *\tthis will give a plain 'static'.  It will always be defined\n *\tto something that gives static linkage.\n *\tPossibilities include\n *\t\tstatic inline       (c99)\n *\t\tstatic __inline__   (gcc -ansi)\n *\t\tstatic __inline     (MSVC)\n *\t\tstatic _inline      (older MSVC)\n *\t\tstatic              (c89 compilers)\n */\n/*#define HAS_STATIC_INLINE\t\t\t\t/ **/\n#define PERL_STATIC_INLINE static           \t/**/\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n/* HAS_MSG_CTRUNC:\n *\tThis symbol, if defined, indicates that the MSG_CTRUNC is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_DONTROUTE:\n *\tThis symbol, if defined, indicates that the MSG_DONTROUTE is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_OOB:\n *\tThis symbol, if defined, indicates that the MSG_OOB is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PEEK:\n *\tThis symbol, if defined, indicates that the MSG_PEEK is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PROXY:\n *\tThis symbol, if defined, indicates that the MSG_PROXY is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_SCM_RIGHTS:\n *\tThis symbol, if defined, indicates that the SCM_RIGHTS is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n#define\tHAS_SOCKET\t\t/**/\n/*#define\tHAS_SOCKETPAIR\t/**/\n/*#define\tHAS_MSG_CTRUNC\t/**/\n/*#define\tHAS_MSG_DONTROUTE\t/**/\n/*#define\tHAS_MSG_OOB\t/**/\n/*#define\tHAS_MSG_PEEK\t/**/\n/*#define\tHAS_MSG_PROXY\t/**/\n/*#define\tHAS_SCM_RIGHTS\t/**/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n/*#define HAS_SOCKS5_INIT\t\t/**/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n/*#define HAS_SQRTL\t\t/**/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n/*#define USE_STAT_BLOCKS \t/**/\n#endif\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n/*#define HAS_STRUCT_STATFS_F_FLAGS\t\t/**/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_STATFS\t/**/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATVFS\t\t/**/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n/*#define USE_STDIO_PTR \t/**/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\t((fp)->_ptr)\n/*#define STDIO_PTR_LVALUE \t\t/**/\n#define FILE_cnt(fp)\t((fp)->_cnt)\n/*#define STDIO_CNT_LVALUE \t\t/**/\n/*#define STDIO_PTR_LVAL_SETS_CNT\t/**/\n/*#define STDIO_PTR_LVAL_NOCHANGE_CNT\t/**/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n/*#define USE_STDIO_BASE \t/**/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\t((fp)->_base)\n#define FILE_bufsiz(fp)\t((fp)->_cnt + (fp)->_ptr - (fp)->_base)\n#endif\n\n/* HAS_STRERROR:\n *\tThis symbol, if defined, indicates that the strerror routine is\n *\tavailable to translate error numbers to strings. See the writeup\n *\tof Strerror() in this file before you try to define your own.\n */\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n/* Strerror:\n *\tThis preprocessor symbol is defined as a macro if strerror() is\n *\tnot available to translate error numbers to strings but sys_errlist[]\n *\tarray is there.\n */\n#define HAS_STRERROR\t\t/**/\n#define HAS_SYS_ERRLIST\t/**/\n#define Strerror(e) strerror(e)\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD\t\t/**/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n/*#define HAS_STRTOLL\t\t/**/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n/*#define HAS_STRTOQ\t\t/**/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#define HAS_STRTOUL\t/**/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n/*#define HAS_STRTOULL\t\t/**/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n/*#define HAS_STRTOUQ\t\t/**/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n#define\tHAS_TELLDIR_PROTO\t/**/\n\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#define Time_t time_t\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n * use getrusage(). It may be necessary to include <sys/times.h>.\n */\n/*#define HAS_TIMES\t\t/**/\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n/*#define HAS_UALARM\t\t/**/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n#define HAS_UNION_SEMUN\t/**/\n/*#define USE_SEMCTL_SEMUN\t/**/\n/*#define USE_SEMCTL_SEMID_DS\t/**/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n/*#define HAS_USTAT\t\t/**/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n/*#define HAS_VFORK\t/**/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t void\t/* Signal handler's return type */\n\n/* HAS_VPRINTF:\n *\tThis symbol, if defined, indicates that the vprintf routine is available\n *\tto printf with a pointer to an argument list.  If unavailable, you\n *\tmay need to write your own, probably in terms of _doprnt().\n */\n/* USE_CHAR_VSPRINTF:\n *\tThis symbol is defined if this system has vsprintf() returning type\n *\t(char*).  The trend seems to be to declare it as \"int vsprintf()\".  It\n *\tis up to the package author to declare vsprintf correctly based on the\n *\tsymbol.\n */\n#define HAS_VPRINTF\t/**/\n/*#define USE_CHAR_VSPRINTF \t/**/\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n/*#define HAS_WRITEV\t\t/**/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n#define USE_DYNAMIC_LOADING\t\t/**/\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE 8\t\t/**/\n\n/* EBCDIC:\n *     This symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n/*#define\tEBCDIC \t\t/**/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) does flush\n *\tall pending stdio output.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n#define\tFFLUSH_NULL \t\t/**/\n/*#define\tFFLUSH_ALL \t\t/**/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t fpos_t\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t\"ld\"\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedess of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t-1\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size 4\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t gid_t\t\t/* Type for getgid(), etc... */\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc... \n *\tIt may be necessary to include <sys/types.h> to get any \n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t gid_t\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\tint\t\t/**/\n#define DB_Prefix_t\tint  \t/**/\n#define DB_VERSION_MAJOR_CFG\tundef  \t/**/\n#define DB_VERSION_MINOR_CFG\tundef  \t/**/\n#define DB_VERSION_PATCH_CFG\tundef  \t/**/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n/*#define I_GRP\t\t/**/\n/*#define GRPASSWD\t/**/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_IEEEFP\t\t/**/\n\n/* I_INTTYPES:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <inttypes.h>.\n */\n/*#define   I_INTTYPES                /**/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LIBUTIL\t\t/**/\n\n/* I_MACH_CTHREADS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <mach/cthreads.h>.\n */\n/*#define   I_MACH_CTHREADS\t/**/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n/*#define\tI_MNTENT\t\t/**/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n#define I_NETDB\t\t/**/\n\n/* I_NETINET_TCP:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <netinet/tcp.h>.\n */\n/*#define   I_NETINET_TCP                /**/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included.\n */\n/*#define\tI_POLL\t\t/**/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n/*#define\tI_PROT\t\t/**/\n\n/* I_PTHREAD:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <pthread.h>.\n */\n/*#define   I_PTHREAD\t/**/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n/*#define I_PWD\t\t/**/\n/*#define PWQUOTA\t/**/\n/*#define PWAGE\t/**/\n/*#define PWCHANGE\t/**/\n/*#define PWCLASS\t/**/\n/*#define PWEXPIRE\t/**/\n/*#define PWCOMMENT\t/**/\n/*#define PWGECOS\t/**/\n/*#define PWPASSWD\t/**/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SHADOW\t\t/**/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SOCKS\t\t/**/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SUNMATH\t\t/**/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSLOG\t\t/**/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSMODE\t\t/**/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_MOUNT\t\t/**/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n/*#define\tI_SYS_STATFS\t\t/**/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_STATVFS\t\t/**/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUIO\t\t/**/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n#define\tI_SYSUTSNAME\t\t/**/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_VFS\t\t/**/\n\n/* I_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n#define I_TIME\t\t/**/\n/*#define I_SYS_TIME\t\t/**/\n/*#define I_SYS_TIME_KERNEL\t\t/**/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n/*#define\tI_USTAT\t\t/**/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n#define PERL_INC_VERSION_LIST 0\t\t/**/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n * \talso as /usr/bin/perl.\n */\n/*#define INSTALL_USR_BIN_PERL\t/**/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n/*#define PERL_PRIfldbl\t\"f\"\t/**/\n/*#define PERL_PRIgldbl\t\"g\"\t/**/\n/*#define PERL_PRIeldbl\t\"e\"\t/**/\n/*#define PERL_SCNfldbl\tundef\t/**/\n\n#$d_PRIfldbl PERL_PRIfldbl\t$sPRIfldbl\t/**/\n#$d_PRIgldbl PERL_PRIgldbl\t$sPRIgldbl\t/**/\n#$d_PRIeldbl PERL_PRIeldbl\t$sPRIeldbl\t/**/\n\n/*#$d_SCNfldbl PERL_SCNfldbl\t$sSCNfldbl\t/**/\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t off_t\t\t/* <offset> type */\n#define LSEEKSIZE 4\t\t/* <offset> size */\n#define Off_t_size 4\t/* <offset> size */\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n * void, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t void *\t\t\t/**/\n#define Free_t void\t\t\t/**/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n/*#define MYMALLOC\t\t\t/**/\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes \n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t mode_t\t /* file mode parameter for system calls */\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK O_NONBLOCK\n#define VAL_EAGAIN EAGAIN\n#define RD_NODATA -1\n#define EOF_NONBLOCK\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n/*#define\tNEED_VA_COPY\t\t/**/\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\tchar * /**/\n#define Netdb_hlen_t\t\tint /**/\n#define Netdb_name_t\t\tchar * /**/\n#define Netdb_net_t\t\tlong /**/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n/*#define PERL_OTHERLIBDIRS \"undef\"\t\t/**/\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n/* NV_ZERO_IS_ALLBITS_ZERO:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tstores 0.0 in memory as all bits zero.\n */\n#define\tIVTYPE\t\tlong\t\t/**/\n#define\tUVTYPE\t\tunsigned long\t\t/**/\n#define\tI8TYPE\t\tchar\t\t/**/\n#define\tU8TYPE\t\tunsigned char\t\t/**/\n#define\tI16TYPE\t\tshort\t/**/\n#define\tU16TYPE\t\tunsigned short\t/**/\n#define\tI32TYPE\t\tlong\t/**/\n#define\tU32TYPE\t\tunsigned long\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\t__int64\t/**/\n#define\tU64TYPE\t\tunsigned __int64\t/**/\n#endif\n#define\tNVTYPE\t\tdouble\t\t/**/\n#define\tIVSIZE\t\t4\t\t/**/\n#define\tUVSIZE\t\t4\t\t/**/\n#define\tI8SIZE\t\t1\t\t/**/\n#define\tU8SIZE\t\t1\t\t/**/\n#define\tI16SIZE\t\t2\t/**/\n#define\tU16SIZE\t\t2\t/**/\n#define\tI32SIZE\t\t4\t/**/\n#define\tU32SIZE\t\t4\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t8\t/**/\n#define\tU64SIZE\t\t8\t/**/\n#endif\n#define\tNVSIZE\t\t8\t\t/**/\n#define\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\tundef\n#undef\tNV_ZERO_IS_ALLBITS_ZERO\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t\"ld\"\t\t/**/\n#define\tUVuf\t\t\"lu\"\t\t/**/\n#define\tUVof\t\t\"lo\"\t\t/**/\n#define\tUVxf\t\t\"lx\"\t\t/**/\n#define\tUVXf\t\t\"lX\"\t\t/**/\n#define\tNVef\t\t\"e\"\t\t/**/\n#define\tNVff\t\t\"f\"\t\t/**/\n#define\tNVgf\t\t\"g\"\t\t/**/\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t int\t\t/* PID type */\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"sys:\\\\perl\\\\lib\"\t\t/**/\n#define PRIVLIB_EXP (fnNwGetEnvironmentStr(\"PRIVLIB\", PRIVLIB))\t/**/\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE 4\t\t/**/\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\t(rand()/(double)((unsigned)1<<RANDBITS))\t\t/**/\n#define Rand_seed_t\t\tunsigned\t\t/**/\n#define seedDrand01(x)\tsrand((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t15\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS \t32\t/**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you \n *\thave select(), of course.\n */\n#define Select_fd_set_t \tfd_set *\t/**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_num list.\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup. \n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.  \n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name list.\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME \"ZERO\", \"NUM01\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0\t\t/**/\n#define SIG_NUM  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0\t\t/**/\n#define SIG_SIZE 27\t\t\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define SITEARCH \"c:\\\\perl\\\\site\\\\5.22.0\\\\lib\\\\NetWare-x86-multi-thread\"\t\t/**/\n/*#define SITEARCH_EXP \"\"\t/**/\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"c:\\\\perl\\\\site\\\\5.22.0\\\\lib\"\t\t/**/\n/*#define SITELIB_EXP \"\"\t/**/\n#define SITELIB_STEM \"\"\t\t/**/\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size 4\t\t/**/\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t size_t\t /* length parameter for string functions */\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\tint /**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t int\t /* signed count of bytes */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"#!perl\"\t\t/**/\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR char\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n/*#define\tHAS_STDIO_STREAM_ARRAY\t/**/\n#define STDIO_STREAM_ARRAY\t\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t\"ld\"\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedess of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t-1\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size 4\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t uid_t\t\t/* UID type */\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n/*#define\tUSE_64_BIT_INT\t\t/**/\n#endif\n\n#ifndef USE_64_BIT_ALL\n/*#define\tUSE_64_BIT_ALL\t\t/**/\n#endif\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n/*#define\tUSE_FAST_STDIO\t\t/ **/\n#endif\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n/*#define\tUSE_LARGE_FILES\t\t/**/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n/*#define\tUSE_LONG_DOUBLE\t\t/**/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n/*#define\tUSE_MORE_BITS\t\t/**/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n#define\tMULTIPLICITY\t\t/**/\n#endif\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n/*#define\tUSE_PERLIO\t\t/**/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n/*#define\tUSE_SOCKS\t\t/**/\n#endif\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n#define\tUSE_ITHREADS\t\t/**/\n/*#define\tOLD_PTHREADS_API\t\t/**/\n/*#define\tUSE_REENTRANT_API\t/**/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front. \n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor \n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define PERL_VENDORARCH \"\"\t\t/**/\n/*#define PERL_VENDORARCH_EXP \"\"\t\t/**/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n/*#define PERL_VENDORLIB_EXP \"\"\t\t/**/\n/*#define PERL_VENDORLIB_STEM \"\"\t\t/**/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n/*#define SETUID_SCRIPTS_ARE_SECURE_NOW\t/**/\n/*#define DOSUID\t\t/**/\n\n/* I_STDARG:\n *\tThis symbol, if defined, indicates that <stdarg.h> exists and should\n *\tbe included.\n */\n/* I_VARARGS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <varargs.h>.\n */\n#define I_STDARG\t\t/**/\n/*#define I_VARARGS\t/**/\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n/*#define\tUSE_CROSS_COMPILE\t/**/\n#define\tPERL_TARGETARCH\t\"undef\"\t/**/\n#endif\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n/*#define HAS_COPYSIGNL\t\t/**/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n/*#define\tHAS_DBMINIT_PROTO\t/**/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n/*#define\tHAS_FLOCK_PROTO\t/**/\n\n/* HAS_REALPATH:\n *\tThis symbol, if defined, indicates that the realpath routine is\n *\tavailable to do resolve paths.\n */\n/*#define HAS_REALPATH\t\t/**/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n/*#define HAS_SIGPROCMASK\t\t/**/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n/*#define HAS_SOCKATMARK\t\t/**/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n/*#define\tHAS_SOCKATMARK_PROTO\t/**/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESGID_PROTO\t/**/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESUID_PROTO\t/**/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n#define HAS_STRFTIME\t\t/**/\n\n/* HAS_STRLCAT\n *      This symbol, if defined, indicates that the strlcat routine is\n *      available to do string concatenation.\n */\n/*#define HAS_STRLCAT\t\t\t/**/\n\n/* HAS_STRLCPY:\n *      This symbol, if defined, indicates that the strlcpy routine is\n *      available to do string copying.\n */\n/*#define HAS_STRLCPY\t\t\t/**/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n/*#define\tHAS_SYSCALL_PROTO\t/**/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n/*#define U32_ALIGNMENT_REQUIRED\t/**/\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n/*#define\tHAS_USLEEP_PROTO\t/**/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n/*#define HAS_PTHREAD_ATFORK\t\t/**/\n\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/NetWare/config.wc": "## Configured by: ~cf_email~\n## Target system: NetWare \nAuthor='Guruprasad'\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nMcc='Mcc'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.lib'\n_exe='.exe'\n_nlm='.nlm'\n_nlp='.nlp'\n_o='.obj'\nafs='false'\nalignbytes='8'\nansi2knr=''\naphostname=''\napi_revision='~PERL_API_REVISION~'\napi_subversion='~PERL_API_SUBVERSION~'\napi_version='~PERL_API_VERSION~'\napi_versionstring='~PERL_API_REVISION~.~PERL_API_VERSION~.~PERL_API_SUBVERSION~'\nar='lib386'\narchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchlibexp='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchname64=''\narchname='NetWare'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5'\nbash=''\nbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbinexp='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbison=''\nbootstrap_charset='undef'\nbyacc='byacc'\nbyteorder='1234'\nc=''\ncastflags='0'\ncat='type'\ncc='mwccnlm'\ncccdlflags=' '\nccdlflags=' '\nccflags='-MD -DNETWARE'\nccsymbols=''\ncf_by='nobody'\ncf_email='nobody@no.where.net'\ncf_time=''\ncharbits='8'\nchgrp=''\nchmod=''\nchown=''\nclocktype='clock_t'\ncomm=''\ncompress=''\ncontains='grep'\ncp='copy'\ncpio=''\ncpp='cl -nologo -E'\ncpp_stuff='42'\ncppccsymbols=''\ncppflags='-DNETWARE'\ncpplast=''\ncppminus=''\ncpprun='cl -nologo -E'\ncppstdin='cl -nologo -E'\ncppsymbols=''\ncrosscompile='undef'\ncrypt_r_proto='0'\ncryptlib=''\ncsh='undef'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEldbl='undef'\nd_PRIFldbl='define'\nd_PRIGldbl='define'\nd_PRIX64='undef'\nd_PRId64='undef'\nd_PRIeldbl='undef'\nd_PRIfldbl='define'\nd_PRIgldbl='define'\nd_PRIi64='undef'\nd_PRIo64='undef'\nd_PRIu64='undef'\nd_PRIx64='undef'\nd_SCNfldbl='undef'\nd__fwalk='undef'\nd_access='define'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='undef'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='undef'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bcmp='undef'\nd_bcopy='undef'\nd_bsd='define'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_bzero='undef'\nd_c99_variadic_macros='undef'\nd_casti32='undef'\nd_castneg='define'\nd_cbrt='undef'\nd_charvspr='undef'\nd_chown='undef'\nd_chroot='undef'\nd_chsize='define'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='define'\nd_cmsghdr_s='undef'\nd_const='define'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='undef'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='undef'\nd_dbl_dig='define'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='undef'\nd_dladdr='undef'\nd_dlerror='define'\nd_dlopen='define'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='define'\nd_eaccess='undef'\nd_endgrent='undef'\nd_endgrent_r='undef'\nd_endhent='undef'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='undef'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_endspent='undef'\nd_eofnblk='define'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='undef'\nd_fchdir='undef'\nd_fchmod='undef'\nd_fchown='undef'\nd_fcntl='undef'\nd_fcntl_can_lock='undef'\nd_fd_macros='define'\nd_fd_set='define'\nd_fdim='undef'\nd_fds_bits='define'\nd_fegetround='undef'\nd_fgetpos='define'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='define'\nd_flock='define'\nd_flockproto='undef'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='undef'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='undef'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='define'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='undef'\nd_ftello='undef'\nd_ftime='define'\nd_futimes='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='undef'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='undef'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='undef'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='undef'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='define'\nd_getpagsz='undef'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='undef'\nd_getppid='undef'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='undef'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspent='undef'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='undef'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_hasmntopt='undef'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='undef'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='define'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='undef'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='undef'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='define'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='undef'\nd_link='define'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='define'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_longdbl='define'\nd_longlong='undef'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='define'\nd_lstat='undef'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memchr='define'\nd_memcmp='define'\nd_memcpy='define'\nd_memmove='define'\nd_memset='define'\nd_mkdir='define'\nd_mkdtemp='undef'\nd_mkfifo='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='undef'\nd_nan='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='define'\nd_nv_zero_is_allbits_zero='undef'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='undef'\nd_pathconf='undef'\nd_pause='undef'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe='define'\nd_poll='undef'\nd_portable='define'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='undef'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='undef'\nd_readv='undef'\nd_recvmsg='undef'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_safebcpy='undef'\nd_safemcpy='undef'\nd_sanemcmp='define'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='define'\nd_select='define'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='undef'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='undef'\nd_setlocale='define'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='undef'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='undef'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='undef'\nd_setspent='undef'\nd_setvbuf='define'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='undef'\nd_signbit='undef'\nd_sigprocmask='undef'\nd_sigsetjmp='undef'\nd_sin6_scope_id='undef'\nd_sitearch='undef'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='undef'\nd_sockpair='undef'\nd_socks5_init='undef'\nd_sprintf_returns_strlen='undef'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='undef'\nd_statvfs='undef'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='undef'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='undef'\nd_stdstdio='undef'\nd_strchr='define'\nd_strcoll='define'\nd_strctcpy='define'\nd_strerrm='strerror(e)'\nd_strerror='define'\nd_strerror_r='undef'\nd_strftime='define'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strtod='define'\nd_strtol='define'\nd_strtold='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='define'\nd_suidsafe='undef'\nd_symlink='undef'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='undef'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='undef'\nd_tcsetpgrp='undef'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='undef'\nd_time='define'\nd_timegm='undef'\nd_times='undef'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='undef'\nd_ualarm='undef'\nd_umask='define'\nd_uname='define'\nd_union_semun='define'\nd_unordered='undef'\nd_unsetenv='undef'\nd_usleep='undef'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_volatile='define'\nd_vprintf='define'\nd_vsnprintf='undef'\nd_wait4='undef'\nd_waitpid='define'\nd_wcscmp='undef'\nd_wcstombs='define'\nd_wcsxfrm='undef'\nd_wctomb='define'\nd_writev='undef'\nd_xenix='undef'\ndate='date'\ndb_hashtype='int'\ndb_prefixtype='int'\ndb_version_major='0'\ndb_version_minor='0'\ndb_version_patch='0'\ndef_perlroot='sys:\\perl\\scripts'\ndef_temp='sys:\\perl\\temp'\ndirentrytype='DIR'\ndlext='nlm'\ndlsrc='dl_netware.xs'\ndoublekind='3'\ndoublesize='8'\ndrand01='Perl_drand48()'\ndrand48_r_proto='0'\ndtrace=''\ndynamic_ext='Socket IO Fcntl Opcode SDBM_File attributes'\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='egrep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext='.exe'\nexpr='expr'\nextensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nfflushNULL='define'\nfflushall='undef'\nfind='find'\nfirstmakefile='makefile'\nflex=''\nfpossize='4'\nfpostype='fpos_t'\nfreetype='void'\nfull_ar=''\nfull_csh=''\nfull_sed=''\ngccversion=''\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"ld\"'\ngidsign='-1'\ngidsize='4'\ngidtype='gid_t'\nglibpth='/usr/shlib  /lib/pa1.1 /usr/lib/large /lib /usr/lib /usr/lib/386 /lib/386 /lib/large /usr/lib/small /lib/small /usr/ccs/lib /usr/ucblib /usr/shlib '\ngmtime_r_proto='0'\ngrep='grep'\ngroupcat=''\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='false'\nh_sysfile='true'\nhint='recommended'\nhostcat='ypcat hosts'\nhuge=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='__int64'\ni8size='1'\ni8type='char'\ni_arpainet='define'\ni_assert='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='define'\ni_execinfo='undef'\ni_fcntl='define'\ni_fenv='undef'\ni_float='define'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='undef'\ni_ieeefp='undef'\ni_inttypes='undef'\ni_langinfo='undef'\ni_libutil='undef'\ni_limits='define'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='define'\ni_mallocmalloc='undef'\ni_math='define'\ni_memory='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='define'\ni_neterrno='undef'\ni_netinettcp='undef'\ni_niin='define'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='undef'\ni_quadmath='undef'\ni_rpcsvcdbm='define'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdarg='define'\ni_stdbool='define'\ni_stddef='define'\ni_stdint='undef'\ni_stdlib='define'\ni_string='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='define'\ni_sysin='undef'\ni_sysioctl='define'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='undef'\ni_syspoll='undef'\ni_sysresrc='undef'\ni_syssecrt='undef'\ni_sysselct='undef'\ni_syssockio='define'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='undef'\ni_systimek='undef'\ni_systimes='undef'\ni_systypes='define'\ni_sysuio='undef'\ni_sysun='undef'\ni_sysutsname='define'\ni_sysvfs='undef'\ni_syswait='undef'\ni_termio='undef'\ni_termios='undef'\ni_time='define'\ni_unistd='undef'\ni_ustat='undef'\ni_utime='define'\ni_values='undef'\ni_varargs='undef'\ni_varhdr='varargs.h'\ni_vfork='undef'\nignore_versioned_solibs=''\ninc_version_list=''\ninc_version_list_init='0'\nincpath=''\ninews=''\ninstallarchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\ninstallbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallhtmldir='~INST_TOP~~INST_VER~\\html'\ninstallhtmlhelpdir='~INST_TOP~~INST_VER~\\htmlhelp'\ninstallman1dir='~INST_TOP~~INST_VER~\\man\\man1'\ninstallman3dir='~INST_TOP~~INST_VER~\\man\\man3'\ninstallnwlcgi='~INST_NW_TOP2~~INST_NW_VER~\\lcgi'\ninstallnwlib='~INST_NW_TOP2~~INST_NW_VER~\\lib'\ninstallnwscripts='~INST_NW_TOP2~~INST_NW_VER~\\scripts'\ninstallnwsystem='~INST_NW_TOP2~~INST_NW_VER~\\system'\ninstallprefix='~INST_TOP~~INST_VER~'\ninstallprefixexp='~INST_TOP~~INST_VER~'\ninstallprivlib='~INST_TOP~~INST_VER~\\lib'\ninstallscript='~INST_TOP~~INST_VER~\\bin'\ninstallsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\ninstallsitebin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallsitelib='~INST_TOP~\\site~INST_VER~\\lib'\ninstallstyle='lib'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorlib=''\nintsize='4'\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nknown_extensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nksh=''\nlarge=''\nld='link'\nlddlflags='-dll ~LINK_FLAGS~'\nldflags='~LINK_FLAGS~'\nldlibpthname=''\nless='less'\nlib_ext='.lib'\nlibc=''\nlibperl='perl.lib'\nlibpth=''\nlibs=''\nlibsdirs=''\nlibsfiles=''\nlibsfound=''\nlibspath=''\nlibswanted='net socket inet nsl nm ndbm gdbm dbm db malloc dl ld sun m c cposix posix ndir dir crypt ucb bsd BSD PW x'\nline='line'\nlint=''\nlkflags=''\nln=''\nlns='copy'\nlocaltime_r_proto='0'\nlocincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'\nloclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'\nlongdblkind='3'\nlongdblsize='10'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='dir'\nlseeksize='4'\nlseektype='off_t'\nmad='undef'\nmail=''\nmailx=''\nmake='nmake'\nmake_set_make='#'\nmallocobj='malloc.o'\nmallocsrc='malloc.c'\nmalloctype='void *'\nman1dir='~INST_TOP~~INST_VER~\\man\\man1'\nman1direxp='~INST_TOP~~INST_VER~\\man\\man1'\nman1ext='1'\nman3dir='~INST_TOP~~INST_VER~\\man\\man3'\nman3direxp='~INST_TOP~~INST_VER~\\man\\man3'\nman3ext='3'\nmedium=''\nmips_type=''\nmkdir='mkdir'\nmmaptype='void *'\nmodels='none'\nmodetype='mode_t'\nmore='more /e'\nmultiarch='undef'\nmv=''\nmyarchname='MSWin32'\nmydomain=''\nmyhostname=''\nmyuname=''\nn='-n'\nneed_va_copy='define'\nnetdb_hlen_type='int'\nnetdb_host_type='char *'\nnetdb_name_type='char *'\nnetdb_net_type='long'\nnm=''\nnm_opt=''\nnm_so_opt=''\nnonxs_ext='Errno'\nnroff=''\nnvEUformat='\"E\"'\nnvFUformat='\"F\"'\nnvGUformat='\"G\"'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='32'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.obj'\nold_pthread_create_joinable=''\noptimize='-O'\norderlib='false'\nosname='NetWare'\nosvers='5.x'\notherlibdirs=''\npackage='perl5'\npager='more /e'\npasscat=''\npatchlevel='~PATCHLEVEL~'\npath_sep=';'\nperl5=''\nperl='perl'\nperl_static_inline='static'\nperladmin=''\nperlpath='~INST_TOP~~INST_VER~\\bin~INST_ARCH~\\perl.nlm'\npg=''\nphostname='hostname'\npidtype='int'\nplibpth=''\npmake=''\npr=''\nprefix='~INST_TOP~'\nprefixexp='~INST_DRV~'\nprivlib='~INST_NW_TOP1~\\lib'\nprivlibexp='~INST_TOP~~INST_VER~\\lib'\nprocselfexe=''\nprototype='define'\nptrsize='4'\nquadkind='5'\nquadtype='__int64'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nranlib='rem'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='del'\nrmail=''\nrunnm='true'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEldbl='\"E\"'\nsPRIFldbl='\"F\"'\nsPRIGldbl='\"G\"'\nsPRIX64='\"lX\"'\nsPRId64='\"ld\"'\nsPRIeldbl='\"e\"'\nsPRIfldbl='\"f\"'\nsPRIgldbl='\"g\"'\nsPRIi64='\"li\"'\nsPRIo64='\"lo\"'\nsPRIu64='\"lu\"'\nsPRIx64='\"lx\"'\nsSCNfldbl=''\nsched_yield=''\nscriptdir='~INST_TOP~~INST_VER~\\bin'\nscriptdirexp='~INST_TOP~~INST_VER~\\bin'\nsed='sed'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype='fd_set *'\nsendmail='blat'\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='cmd /x /c'\nshar=''\nsharpbang='#!'\nshmattype='void *'\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='26'\nsig_name='ZERO NUM01 INT QUIT ILL NUM05 NUM06 NUM07 FPE KILL NUM10 SEGV NUM12 PIPE ALRM TERM NUM16 NUM17 NUM18 NUM19 CHLD BREAK ABRT STOP NUM24 CONT CLD'\nsig_name_init='\"ZERO\", \"NUM01\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0'\nsig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 20 0'\nsig_num_init='0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0'\nsig_size='27'\nsignal_t='void'\nsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitearchexp='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitebin='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitebinexp='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitelib='~INST_TOP~\\site~INST_VER~\\lib'\nsitelib_stem=''\nsitelibexp='~INST_TOP~\\site~INST_VER~\\lib'\nsiteprefix='~INST_TOP~\\site~INST_VER~'\nsiteprefixexp='~INST_TOP~\\site~INST_VER~'\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nsmall=''\nso='dll'\nsockethdr=''\nsocketlib=''\nsocksizetype='int'\nsort='sort'\nspackage='Perl5'\nspitshell=''\nsplit=''\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc=''\nssizetype='int'\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!perl'\nstartsh='#!/bin/sh'\nstatic_ext='DynaLoader'\nstdchar='char'\nstdio_base='((fp)->_base)'\nstdio_bufsiz='((fp)->_cnt + (fp)->_ptr - (fp)->_base)'\nstdio_cnt='((fp)->_cnt)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/usr/include/string.h'\nsubmit=''\nsubversion='~SUBVERSION~'\nsysman='/usr/man/man1'\ntail=''\ntar=''\ntargetarch=''\ntargetsh='cmd /x /c'\ntbl=''\ntee=''\ntest=''\ntimeincl='/usr/include/sys/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\ntouch='touch'\ntr=''\ntrnl='\\012'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned __int64'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"ld\"'\nuidsign='-1'\nuidsize='4'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned __int64'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='define'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='define'\nusekernprocpathname='undef'\nuselargefiles='undef'\nuselongdouble='undef'\nusemallocwrap='undef'\nusemorebits='undef'\nusemultiplicity='define'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='undef'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='true'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='true'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvaproto='undef'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorprefix=''\nvendorprefixexp=''\nversion='~VERSION~'\nvi=''\nxlibpth='/usr/lib/386 /lib/386'\nzcat=''\nzip='zip'\nPERL_REVISION='~PERL_REVISION~'\nPERL_SUBVERSION='~PERL_SUBVERSION~'\nPERL_VERSION='~PERL_VERSION~'\nPERL_API_REVISION='~PERL_API_REVISION~'\nPERL_API_SUBVERSION='~PERL_API_SUBVERSION~'\nPERL_API_VERSION='~PERL_API_VERSION~'\nPATCHLEVEL='~PERL_VERSION~'\nSUBVERSION='~PERL_SUBVERSION~'\nPERL_CONFIG_SH='true'\nbase_import=''\nnlm_version=''\nmpktool=''\ntoolpath=''\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/vms/myconfig.com": "$! #!/bin/sh  ---> MYCONFIG.COM\n\n$! # This script is designed to provide a handy summary of the configuration\n$! # information being used to build perl. This is especially useful if you\n$! # are requesting help from comp.lang.perl.misc on usenet or via mail.\n\n$! DCL-ified by Peter Prymmer <pvhp@lns62.lns.cornell.edu> 22-DEC-1995\n$! DCL usage (choose one):\n$!      @MYCONFIG                                                       !or\n$!      @MYCONFIG/OUTPUT=MYCONFIG.OUT                                   !or\n$!      @MYCONFIG [node::][which$disk:][[dir.subdir]]CONFIG.SH          !or\n$!      @MYCONFIG/OUTPUT=MYCONFIG.OUT [node::][w$disk:][[dir]]CONFIG.SH\n$!  version 2:\n$! Incorporates Charles Bailey's ideas about bootstrapping system info - \n$! myconfig.com is now callable as a \"myconfig\" target in your maker and\n$! may even work if miniperl.exe and config.sh files fail to be made.\n$! Thus if: \n$!      MMK/DESCRIP=[.VMS]                             !(or MMS or MAKE)\n$! does not work then try:\n$!      MMK/DESCRIP=[.VMS]/OUTPUT=MYPERLBUILD.PROBLEM  !(or MMS or MAKE)\n$! Then discuss the MYPERLBUILD.PROBLEM file with a local expert.\n$! If that still does not work then try:\n$!      MMK/DESCRIP=[.VMS]/OUT=MYNONFIG.OUT MYCONFIG   !(or MMS or MAKE)\n$! send output (MYNONFIG.OUT) to an outside expert and ask politely for help.\n\n$ ECHO = \"WRITE SYS$OUTPUT \" \n$ RATHER_LONG_DEFAULT_DIRECTORY_NAME = F$ENVIRONMENT(\"DEFAULT\")\n\n$ if (p1.nes.\"\").and.(p2.eqs.\"\")\n$   then RATHER_LONG_FILENAME_TO_FIND = p1 !no typo-checking (experts only)\n$   else RATHER_LONG_FILENAME_TO_FIND = \"CONFIG.SH\"\n$ endif\n$Research:\n$ RATHER_LONG_FILENAME_SEARCH = F$Search(RATHER_LONG_FILENAME_TO_FIND)\n$ if RATHER_LONG_FILENAME_SEARCH.EQS.\"\" \n$   then\n$     if f$parse(f$environment(\"DEFAULT\"),,,\"DIRECTORY\",).NES.\"[000000]\"\n$       then \n$         set default [-]\n$         goto Research\n$       else\n$ \t  ECHO \"Can't find the perl config.sh file produced by Configure\"\n$         set default 'RATHER_LONG_DEFAULT_DIRECTORY_NAME'\n$!         exit 3\n$         goto cannot_find_config_sh\n$     endif\n$ endif\n\n$ open/read RATHER_LONG_CONFIG_FILE_HANDLE 'RATHER_LONG_FILENAME_SEARCH' \n$Loop:\n$  read/end_of_file = Done RATHER_LONG_CONFIG_FILE_HANDLE  line\n$  name = f$extract(0,f$locate(\"=\",line),line)\n$  start = f$locate(\"'\",line)+1\n$  stop = f$locate(\"'\",line)\n$  value = f$extract(start,stop-start,line)\n$  if (f$locate(\"#\",name).eqs.f$length(name)).and. -\n      (name.nes.\"\").and. -\n      (name.nes.\"'\") -               !bug in configure.com for osvers='' ?\n        then $$'name' = \"'\" + value  !$ not necessary but looks more sh-ish\n$ goto Loop\n\n$Done:\n$ close RATHER_LONG_CONFIG_FILE_HANDLE \n$ goto spit_it_out\n\n$cannot_find_config_sh:\n$! these parameters are assumed to be passed from make/mm[s|k]:\n$!   p1=$(CC),    p2=$(CFLAGS), p3=$(LINKFLAGS), \n$!   p4=$(LIBS1), p5=$(LIBS2),  p6=$(SOCKLIB),\n$!   p7=$(EXT),   p8=$(DBG)\n$! so assign to appropriate $var:\n$ $cc = \"'\"+p1+\"'\"            ! p1=$(CC) from make\n$ $ccflags = \"'\"+p2+\"'\"       ! p2=$(CFLAGS) from make\n$ $ldflags = \"'\"+p3+\"'\"       ! p3=$(LINKFLAGS) from make \n$ $libs = \"'\"+p4+\" \"+p5+\" \"+p6+\"'\" ! p4$(LIBS1),p5$(LIBS2),p6$(SOCKLIB)frm make\n$ $staticexts = \"'\"+p7+\"'\"         ! p7=$(EXT) from make\n\n$!  hard-coded stuff (for now): \n$ $cppflags = \"'\"+\"'\"  !(vestigal)\n$ $optimize = \"'\"+\"'\"  !descrip.mms has /Optimize=2 in $(XTRACCFLAGS)\n\n$ $osname = \"'\"+f$edit(f$getsyi(\"NODE_SWTYPE\"),\"COLLAPSE\")\n$ $osvers = f$edit(f$getsyi(\"VERSION\")-\"V\",\"COLLAPSE\")\n$ if f$getsyi(\"HW_MODEL\").GT.1024\n$   then $$archname = \"'VMS_AXP'\"  !string from descrip.mms vmsperl 12-21-95\n$   else $$archname = \"'VMS_VAX'\"  !string from descrip.mms vmsperl 12-21-95\n$ endif\n$ $myname = \"\"\n$  if $myname.eqs.\"\" then $$myname = f$trnlnm(\"ARPANET_HOST_NAME\")\n$  if $myname.eqs.\"\" then $$myname = f$trnlnm(\"INTERNET_HOST_NAME\")\n$  if $myname.eqs.\"\" then $$myname = f$trnlnm(\"MULTINET_HOST_NAME\")\n$  if $myname.eqs.\"\" then $$myname = f$trnlnm(\"UCX$INET_HOST_NAME\")\n$  if $myname.eqs.\"\" then $$myname = f$trnlnm(\"TCPWARE_DOMAINNAME\")\n$  if $myname.eqs.\"\" then $$myname = f$trnlnm(\"NEWS_ADDRESS\")\n$  if $myname.eqs.\"\" then $$myname = f$trnlnm(\"SYS$NODE\")\n$!  Is this same as configure.com ? (spacing/order unknown):\n$ $myuname=$osname+\" \"+$myname+\" \"+$osvers+\" \"+F$GetSyi(\"HW_NAME\")+\"'\"\n$ $osname = $osname+\"'\"\n$ $osvers = \"'\"+$osvers+\"'\"\n\n$look_for_patchlevel_h:\n$!\n$ RATHER_LONG_FILENAME_TO_FIND = \"PATCHLEVEL.H\"\n$Research_patchlevel_h:\n$ RATHER_LONG_FILENAME_SEARCH = F$Search(RATHER_LONG_FILENAME_TO_FIND)\n$ if RATHER_LONG_FILENAME_SEARCH.EQS.\"\" \n$   then\n$     if f$parse(f$environment(\"DEFAULT\"),,,\"DIRECTORY\",).NES.\"[000000]\"\n$       then \n$         set default [-]\n$         goto Research_patchlevel_h\n$       else\n$ \t  ECHO \"Can't find the header file patchlevel.h used to make config.sh\"\n$         set default 'RATHER_LONG_DEFAULT_DIRECTORY_NAME'\n$         goto spit_it_out\n$     endif\n$ endif\n\n$ open/read RATHER_LONG_CONFIG_FILE_HANDLE 'RATHER_LONG_FILENAME_SEARCH' \n$read_patchlevel_h:\n$ read/end_of_file = patchlevel_h_Done RATHER_LONG_CONFIG_FILE_HANDLE  line\n$ if f$locate(\"PERL_VERSION\",line).ne.f$length(line)\n$   then\n$     line = f$edit(line,\"TRIM,COMPRESS\")\n$     $PATCHLEVEL = f$element(2,\" \",line)\n$     if f$type($SUBVERSION).nes.\"\" then goto patchlevel_h_Done\n$ endif\n$ if f$locate(\"PERL_SUBVERSION\",line).ne.f$length(line)\n$   then\n$     line = f$edit(line,\"TRIM,COMPRESS\")\n$     $SUBVERSION = f$element(2,\" \",line)\n$     if f$type($PATCHLEVEL).nes.\"\" then goto patchlevel_h_Done\n$ endif\n$ goto read_patchlevel_h\n\n$patchlevel_h_Done:\n$ close RATHER_LONG_CONFIG_FILE_HANDLE \n$ if $PATCHLEVEL.eqs.\"\"\n$   then\n$     echo \"warning: PERL_VERSION was not found in ''RATHER_LONG_FILENAME_TO_FIND':\" \n$ endif\n$!\n$spit_it_out:\n$ if (p8.nes.\"\").and.($ld.nes.\"\") then $ld = $ld + \" DBG='\"+p8+\"'\" \n$! $spitshell = ECHO !<<!GROK!THIS! \n$ ECHO \" \"\n$ ECHO \"Summary of my ''$package' (version ''$PATCHLEVEL' subversion ''$SUBVERSION') configuration:\"\n$ ECHO \"  Platform:\"\n$ ECHO \"    osname=''$osname', osvers=''$osvers', archname=''$archname'\"\n$ ECHO \"     uname=''$myuname'\"                             !->d_has_uname?\n$ ECHO \"     hint=''$hint' d_sigaction='undef'\"             !->hintfile?\n$ ECHO \"     static exts=''$staticexts'\"                    ! added for VMS\n$ ECHO \"   Compiler:\"\n$ ECHO \"     cc=''$cc', optimize=''$optimize', ld=''$ld'\"\n$ ECHO \"     cppflags=''$cppflags'\"\n$ ECHO \"     ccflags =''$ccflags'\"                          !->vms_cc_type?\n$ ECHO \"     ldflags =''$ldflags'\"\n$ ECHO \"     stdchar=''$stdchar', d_stdstdio=''$d_stdstdio', usevfork=''$usevfork'\"\n$ ECHO \"     castflags=''$castflags', d_casti32=''$d_casti32', d_castneg=''$d_castneg'\"\n$ ECHO \"     intsize=''$intsize', alignbytes=''$alignbytes', usemymalloc=''$usemymalloc', randbits=''$randbits'\"\n$ ECHO \"   Libraries:\"\n$ ECHO \"     so=''$so'\"\n$ ECHO \"     libpth=''$libpth'\"\n$ ECHO \"     libs=''$libs'\"\n$ ECHO \"     libc=''$libc'\"\n$ ECHO \"   Dynamic Linking:\"\n$ ECHO \"     dlsrc=''$dlsrc', dlext=''$dlext', d_dlsymun=''$d_dlsymun'\"\n$ ECHO \"     cccdlflags=''$cccdlflags', ccdlflags=''$ccdlflags', lddlflags=''$lddlflags'\"\n$ ECHO \" \" \n$ !GROK!THIS!\n$ SET DEFAULT 'RATHER_LONG_DEFAULT_DIRECTORY_NAME'\n$ EXIT\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/win32/config_H.vc": "/* This file was produced by running the config_h.SH script, which\n * gets its values from undef, which is generally produced by\n * running Configure.\n *\n * Feel free to modify any of this as the need arises.  Note, however,\n * that running config_h.SH again will wipe out any changes you've made.\n * For a more permanent change edit undef and rerun config_h.SH.\n */\n\n/* Package name      : perl5\n * Source directory  : \n * Configuration time: Wed Sep 17 13:53:56 2014\n * Configured by     : shay\n * Target system     : \n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"\"\t/**/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n#define HAS_ALARM\t\t/**/\n\n/* HAS_BCMP:\n *\tThis symbol is defined if the bcmp() routine is available to\n *\tcompare blocks of memory.\n */\n/*#define HAS_BCMP\t/ **/\n\n/* HAS_BCOPY:\n *\tThis symbol is defined if the bcopy() routine is available to\n *\tcopy blocks of memory.\n */\n/*#define HAS_BCOPY\t/ **/\n\n/* HAS_BZERO:\n *\tThis symbol is defined if the bzero() routine is available to\n *\tset a memory block to 0.\n */\n/*#define HAS_BZERO\t/ **/\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n/*#define HAS_CHOWN\t\t/ **/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n/*#define HAS_CHROOT\t\t/ **/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n#define\tHAS_CHSIZE\t\t/**/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n#define HAS_CRYPT\t\t/**/\n\n/* HAS_CTERMID:\n *\tThis symbol, if defined, indicates that the ctermid routine is\n *\tavailable to generate filename for terminal.\n */\n/*#define HAS_CTERMID\t\t/ **/\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n/*#define HAS_CUSERID\t\t/ **/\n\n/* HAS_DBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol DBL_DIG, which is the number\n *\tof significant digits in a double precision number.  If this\n *\tsymbol is not defined, a guess of 15 is usually pretty good.\n */\n#define HAS_DBL_DIG \t/**/\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n#define HAS_DIFFTIME\t\t/**/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n#define HAS_DLERROR\t/**/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n#define HAS_DUP2\t/**/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n/*#define HAS_FCHMOD\t\t/ **/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n/*#define HAS_FCHOWN\t\t/ **/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n/*#define HAS_FCNTL\t\t/ **/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n#define HAS_FGETPOS\t/**/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n#define HAS_FLOCK\t\t/**/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n/*#define HAS_FORK\t\t/ **/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n#define HAS_FSETPOS\t/**/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n#define HAS_GETTIMEOFDAY\t/**/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_GETGROUPS\t\t/ **/\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n#define HAS_GETLOGIN\t\t/**/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n/*#define HAS_GETPGID\t\t/ **/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n/*#define HAS_GETPGRP2\t\t/ **/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n/*#define HAS_GETPPID\t\t/ **/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n/*#define HAS_GETPRIORITY\t\t/ **/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n/*#define HAS_INET_ATON\t\t/ **/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n#define HAS_KILLPG\t/**/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n#define HAS_LINK\t/**/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n#define HAS_LOCALECONV\t/**/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_LOCKF\t\t/ **/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n/*#define HAS_LSTAT\t\t/ **/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n#define HAS_MBLEN\t\t/**/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to convert a multibyte string into a wide character string.\n */\n#define\tHAS_MBSTOWCS\t\t/**/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto convert a multibyte to a wide character.\n */\n#define HAS_MBTOWC\t\t/**/\n\n/* HAS_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tto compare blocks of memory.\n */\n#define HAS_MEMCMP\t/**/\n\n/* HAS_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy blocks of memory.\n */\n#define HAS_MEMCPY\t/**/\n\n/* HAS_MEMMOVE:\n *\tThis symbol, if defined, indicates that the memmove routine is available\n *\tto copy potentially overlapping blocks of memory. This should be used\n *\tonly when HAS_SAFE_BCOPY is not defined. If neither is there, roll your\n *\town version.\n */\n#define HAS_MEMMOVE\t/**/\n\n/* HAS_MEMSET:\n *\tThis symbol, if defined, indicates that the memset routine is available\n *\tto set blocks of memory.\n */\n#define HAS_MEMSET\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n#define HAS_MKDIR\t\t/**/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n/*#define HAS_MKFIFO\t\t/ **/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n#define HAS_MKTIME\t\t/**/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n/*#define HAS_MSYNC\t\t/ **/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n/*#define HAS_MUNMAP\t\t/ **/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n/*#define HAS_NICE\t\t/ **/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n/*#define HAS_PATHCONF\t\t/ **/\n/*#define HAS_FPATHCONF\t\t/ **/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n#define HAS_PAUSE\t\t/**/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n#define HAS_PIPE\t\t/**/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors.  Please check I_POLL and\n *\tI_SYS_POLL to know which header should be included as well.\n */\n/*#define HAS_POLL\t\t/ **/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#define HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_SEEKDIR\t\t/**/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_TELLDIR\t\t/**/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_REWINDDIR\t\t/**/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n/*#define HAS_READLINK\t\t/ **/\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#define HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n#define HAS_RMDIR\t\t/**/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n#define HAS_SELECT\t/**/\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n/*#define HAS_SETEGID\t\t/ **/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n/*#define HAS_SETEUID\t\t/ **/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_SETGROUPS\t\t/ **/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n/*#define HAS_SETLINEBUF\t\t/ **/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n#define HAS_SETLOCALE\t/**/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n/*#define HAS_SETPGID\t/ **/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n/*#define HAS_SETPGRP2\t\t/ **/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n/*#define HAS_SETPRIORITY\t\t/ **/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n/*#define HAS_SETREGID\t\t/ **/\n/*#define HAS_SETRESGID\t\t/ **/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n/*#define HAS_SETREUID\t\t/ **/\n/*#define HAS_SETRESUID\t\t/ **/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n/*#define HAS_SETRGID\t\t/ **/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n/*#define HAS_SETRUID\t\t/ **/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n/*#define HAS_SETSID\t/ **/\n\n/* HAS_STRCHR:\n *\tThis symbol is defined to indicate that the strchr()/strrchr()\n *\tfunctions are available for string searching. If not, try the\n *\tindex()/rindex() pair.\n */\n/* HAS_INDEX:\n *\tThis symbol is defined to indicate that the index()/rindex()\n *\tfunctions are available for string searching.\n */\n#define HAS_STRCHR\t/**/\n/*#define HAS_INDEX\t/ **/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n#define HAS_STRCOLL\t/**/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n#define HAS_STRTOD\t/**/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#define HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n#define HAS_STRXFRM\t/**/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n/*#define HAS_SYMLINK\t/ **/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n/*#define HAS_SYSCALL\t/ **/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n/*#define HAS_SYSCONF\t/ **/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n#define HAS_SYSTEM\t/**/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n/*#define HAS_TCGETPGRP\t\t/ **/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n/*#define HAS_TCSETPGRP\t\t/ **/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n/*#define HAS_TRUNCATE\t/ **/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n#define HAS_TZNAME\t\t/**/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n#define HAS_UMASK\t\t/**/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n/*#define HAS_USLEEP\t\t/ **/\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n/*#define HAS_WAIT4\t/ **/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n#define HAS_WAITPID\t/**/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n#define HAS_WCSTOMBS\t/**/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto convert a wide character to a multibyte.\n */\n#define HAS_WCTOMB\t\t/**/\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc... \n *\tIt may be necessary to include <sys/types.h> to get any \n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t gid_t\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n#define\tI_ARPA_INET\t\t/**/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n/*#define I_DBM\t/ **/\n/*#define I_RPCSVC_DBM\t/ **/\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n#define I_DLFCN\t\t/**/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n#define I_FCNTL\t/**/\n\n/* I_FLOAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <float.h> to get definition of symbols like DBL_MAX or\n *\tDBL_MIN, i.e. machine dependent floating point values.\n */\n#define I_FLOAT\t\t/**/\n\n/* I_GDBM:\n *\tThis symbol, if defined, indicates that <gdbm.h> exists and should\n *\tbe included.\n */\n/*#define I_GDBM\t/ **/\n\n/* I_LIMITS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <limits.h> to get definition of symbols like WORD_BIT or\n *\tLONG_MAX, i.e. machine dependant limitations.\n */\n#define I_LIMITS\t\t/**/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n#define\tI_LOCALE\t\t/**/\n\n/* I_MATH:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <math.h>.\n */\n#define I_MATH\t\t/**/\n\n/* I_MEMORY:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <memory.h>.\n */\n/*#define I_MEMORY\t\t/ **/\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n/*#define I_NETINET_IN\t/ **/\n\n/* I_STDDEF:\n *\tThis symbol, if defined, indicates that <stddef.h> exists and should\n *\tbe included.\n */\n#define I_STDDEF\t/**/\n\n/* I_STDLIB:\n *\tThis symbol, if defined, indicates that <stdlib.h> exists and should\n *\tbe included.\n */\n#define I_STDLIB\t\t/**/\n\n/* I_STRING:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <string.h> (USG systems) instead of <strings.h> (BSD systems).\n */\n#define I_STRING\t\t/**/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n/*#define I_SYS_DIR\t\t/ **/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n/*#define I_SYS_FILE\t\t/ **/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n/*#define\tI_SYS_IOCTL\t\t/ **/\n/*#define I_SYS_SOCKIO\t/ **/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n/*#define I_SYS_NDIR\t/ **/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n/*#define I_SYS_PARAM\t\t/ **/\n\n/* I_SYS_POLL:\n *\tThis symbol, if defined, indicates that the program may include\n *\t<sys/poll.h>.  When I_POLL is also defined, it's probably safest\n *\tto only include <poll.h>.\n */\n/*#define I_SYS_POLL\t/ **/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n/*#define I_SYS_RESOURCE\t\t/ **/\n\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n/*#define I_SYS_SELECT\t/ **/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#define\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n/*#define\tI_SYS_TIMES\t\t/ **/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n#define\tI_SYS_TYPES\t\t/**/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n/*#define I_SYS_UN\t\t/ **/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n/*#define I_SYS_WAIT\t/ **/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n/*#define I_UNISTD\t\t/ **/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n#define I_UTIME\t\t/**/\n\n/* I_VALUES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <values.h> to get definition of symbols like MINFLOAT or\n *\tMAXLONG, i.e. machine dependant limitations.  Probably, you\n *\tshould use <limits.h> instead, if it is available.\n */\n/*#define I_VALUES\t\t/ **/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n/*#define I_VFORK\t/ **/\n\n/* CAN_VAPROTO:\n *\tThis variable is defined on systems supporting prototype declaration\n *\tof functions with a variable number of arguments.\n */\n/* _V:\n *\tThis macro is used to declare function parameters in prototypes for\n *\tfunctions with a variable number of parameters. Use double parentheses.\n *\tFor example:\n *\n *\t\tint printf _V((char *fmt, ...));\n *\n *\tRemember to use the plain simple _() macro when declaring a function\n *\twith no variable number of arguments, since it might be possible to\n *\thave a non-effect _V() macro and still get prototypes via _().\n */\n/*#define CAN_VAPROTO\t/ **/\n#ifdef CAN_VAPROTO\n#define\t_V(args) args\n#else\n#define\t_V(args) ()\n#endif\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"MSWin32\"\t\t/**/\n#define OSVERS \"6.1\"\t\t/**/\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n/*#define MULTIARCH\t\t/ **/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.  For cross-compiling\n *  \tor multiarch support, Configure will set a minimum of 8.\n */\n#define MEM_ALIGNBYTES 8\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for perl5.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define ARCHLIB \"c:\\\\perl\\\\lib\"\t\t/**/\n/*#define ARCHLIB_EXP \"\"\t/ **/\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"MSWin32-x86\"\t\t/**/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n/* PERL_RELOCATABLE_INC:\n *\tThis symbol, if defined, indicates that we'd like to relocate entries\n *\tin @INC at run time based on the location of the perl binary.\n */\n#define BIN \"c:\\\\perl\\\\bin\"\t/**/\n#define BIN_EXP \"c:\\\\perl\\\\bin\"\t/**/\n#define PERL_RELOCATABLE_INC \"undef\" \t\t/**/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE 4\t\t/**/\n#define LONGSIZE 4\t\t/**/\n#define SHORTSIZE 2\t\t/**/\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\tin a UV, i.e. 0x1234 or 0x4321 or 0x12345678, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries, use compiler-defined macros to\n *\tdetermine the byte order.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#else\n#define BYTEORDER 0x1234\t/* large digits for MSB */\n#endif\n\n/* CHARBITS:\n *\tThis symbol contains the size of a char, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define CHARBITS 8\t\t/**/\n\n/* CAT2:\n *\tThis macro concatenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if 42 == 1\n#define CAT2(a,b)\ta/**/b\n#define STRINGIFY(a)\t\"a\"\n#endif\n#if 42 == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\n#define PeRl_StGiFy(a)\t#a\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if 42 != 1 && 42 != 42\n#include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.\t Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"cppstdin\"\n#define CPPMINUS \"\"\n#define CPPRUN \"cl -nologo -E\"\n#define CPPLAST \"\"\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n#define HAS_ACCESS\t\t/**/\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_ACCESSX\t\t/ **/\n\n/* HAS_ASCTIME_R:\n *\tThis symbol, if defined, indicates that the asctime_r routine\n *\tis available to asctime re-entrantly.\n */\n/* ASCTIME_R_PROTO:\n *\tThis symbol encodes the prototype of asctime_r.\n *\tIt is zero if d_asctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_asctime_r\n *\tis defined.\n */\n/*#define HAS_ASCTIME_R\t   / **/\n#define ASCTIME_R_PROTO 0\t   /**/\n\n/* HASATTRIBUTE_FORMAT:\n *\tCan we handle GCC attribute for checking printf-style formats\n */\n/* PRINTF_FORMAT_NULL_OK:\n *\tAllows __printf__ format to be null when checking printf-style\n */\n/* HASATTRIBUTE_MALLOC:\n *\tCan we handle GCC attribute for malloc-style functions.\n */\n/* HASATTRIBUTE_NONNULL:\n *\tCan we handle GCC attribute for nonnull function parms.\n */\n/* HASATTRIBUTE_NORETURN:\n *\tCan we handle GCC attribute for functions that do not return\n */\n/* HASATTRIBUTE_PURE:\n *\tCan we handle GCC attribute for pure functions\n */\n/* HASATTRIBUTE_UNUSED:\n *\tCan we handle GCC attribute for unused variables and arguments\n */\n/* HASATTRIBUTE_DEPRECATED:\n *\tCan we handle GCC attribute for marking deprecated APIs\n */\n/* HASATTRIBUTE_WARN_UNUSED_RESULT:\n *\tCan we handle GCC attribute for warning on unused results\n */\n/*#define HASATTRIBUTE_DEPRECATED\t/ **/\n/*#define HASATTRIBUTE_FORMAT\t/ **/\n/*#define PRINTF_FORMAT_NULL_OK\t/ **/\n/*#define HASATTRIBUTE_NORETURN\t/ **/\n/*#define HASATTRIBUTE_MALLOC\t/ **/\n/*#define HASATTRIBUTE_NONNULL\t/ **/\n/*#define HASATTRIBUTE_PURE\t/ **/\n/*#define HASATTRIBUTE_UNUSED\t/ **/\n/*#define HASATTRIBUTE_WARN_UNUSED_RESULT\t/ **/\n\n/* HAS_BACKTRACE:\n *\tThis symbol, if defined, indicates that the backtrace() routine is\n *\tavailable to get a stack trace.  The <execinfo.h> header must be\n *\tincluded to use this routine.\n */\n/*#define HAS_BACKTRACE\t/ **/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n/*#define\tCASTI32\t\t/ **/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n#define\tCASTNEGFLOAT\t\t/**/\n#define CASTFLAGS 0\t\t/**/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n/*#define VOID_CLOSEDIR\t\t/ **/\n\n/* HASCONST:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe const type. There is no need to actually test for that symbol\n *\twithin your programs. The mere use of the \"const\" keyword will\n *\ttrigger the necessary tests.\n */\n#define HASCONST\t/**/\n#ifndef HASCONST\n#define const\n#endif\n\n/* HAS_CRYPT_R:\n *\tThis symbol, if defined, indicates that the crypt_r routine\n *\tis available to crypt re-entrantly.\n */\n/* CRYPT_R_PROTO:\n *\tThis symbol encodes the prototype of crypt_r.\n *\tIt is zero if d_crypt_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_crypt_r\n *\tis defined.\n */\n/*#define HAS_CRYPT_R\t   / **/\n#define CRYPT_R_PROTO 0\t   /**/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n/*#define HAS_CSH\t\t/ **/\n#ifdef HAS_CSH\n#define CSH \"\"\t/**/\n#endif\n\n/* HAS_CTERMID_R:\n *\tThis symbol, if defined, indicates that the ctermid_r routine\n *\tis available to ctermid re-entrantly.\n */\n/* CTERMID_R_PROTO:\n *\tThis symbol encodes the prototype of ctermid_r.\n *\tIt is zero if d_ctermid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctermid_r\n *\tis defined.\n */\n/*#define HAS_CTERMID_R\t   / **/\n#define CTERMID_R_PROTO 0\t   /**/\n\n/* HAS_CTIME_R:\n *\tThis symbol, if defined, indicates that the ctime_r routine\n *\tis available to ctime re-entrantly.\n */\n/* CTIME_R_PROTO:\n *\tThis symbol encodes the prototype of ctime_r.\n *\tIt is zero if d_ctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctime_r\n *\tis defined.\n */\n/*#define HAS_CTIME_R\t   / **/\n#define CTIME_R_PROTO 0\t   /**/\n\n/* HAS_DLADDR:\n *\tThis symbol, if defined, indicates that the dladdr() routine is\n *\tavailable to query dynamic linker information for an address.\n *\tThe <dlfcn.h> header must be included to use this routine.\n */\n/*#define HAS_DLADDR\t/ **/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n/*#define SETUID_SCRIPTS_ARE_SECURE_NOW\t/ **/\n/*#define DOSUID\t\t/ **/\n\n/* HAS_DRAND48_R:\n *\tThis symbol, if defined, indicates that the drand48_r routine\n *\tis available to drand48 re-entrantly.\n */\n/* DRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of drand48_r.\n *\tIt is zero if d_drand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_drand48_r\n *\tis defined.\n */\n/*#define HAS_DRAND48_R\t   / **/\n#define DRAND48_R_PROTO 0\t   /**/\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n/*#define\tHAS_DRAND48_PROTO\t/ **/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_EACCESS\t\t/ **/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n/*#define HAS_ENDGRENT\t\t/ **/\n\n/* HAS_ENDGRENT_R:\n *\tThis symbol, if defined, indicates that the endgrent_r routine\n *\tis available to endgrent re-entrantly.\n */\n/* ENDGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of endgrent_r.\n *\tIt is zero if d_endgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endgrent_r\n *\tis defined.\n */\n/*#define HAS_ENDGRENT_R\t   / **/\n#define ENDGRENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n/*#define HAS_ENDHOSTENT\t\t/ **/\n\n/* HAS_ENDHOSTENT_R:\n *\tThis symbol, if defined, indicates that the endhostent_r routine\n *\tis available to endhostent re-entrantly.\n */\n/* ENDHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of endhostent_r.\n *\tIt is zero if d_endhostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endhostent_r\n *\tis defined.\n */\n/*#define HAS_ENDHOSTENT_R\t   / **/\n#define ENDHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n/*#define HAS_ENDNETENT\t\t/ **/\n\n/* HAS_ENDNETENT_R:\n *\tThis symbol, if defined, indicates that the endnetent_r routine\n *\tis available to endnetent re-entrantly.\n */\n/* ENDNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of endnetent_r.\n *\tIt is zero if d_endnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endnetent_r\n *\tis defined.\n */\n/*#define HAS_ENDNETENT_R\t   / **/\n#define ENDNETENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n/*#define HAS_ENDPROTOENT\t\t/ **/\n\n/* HAS_ENDPROTOENT_R:\n *\tThis symbol, if defined, indicates that the endprotoent_r routine\n *\tis available to endprotoent re-entrantly.\n */\n/* ENDPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of endprotoent_r.\n *\tIt is zero if d_endprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endprotoent_r\n *\tis defined.\n */\n/*#define HAS_ENDPROTOENT_R\t   / **/\n#define ENDPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n/*#define HAS_ENDPWENT\t\t/ **/\n\n/* HAS_ENDPWENT_R:\n *\tThis symbol, if defined, indicates that the endpwent_r routine\n *\tis available to endpwent re-entrantly.\n */\n/* ENDPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of endpwent_r.\n *\tIt is zero if d_endpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endpwent_r\n *\tis defined.\n */\n/*#define HAS_ENDPWENT_R\t   / **/\n#define ENDPWENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n/*#define HAS_ENDSERVENT\t\t/ **/\n\n/* HAS_ENDSERVENT_R:\n *\tThis symbol, if defined, indicates that the endservent_r routine\n *\tis available to endservent re-entrantly.\n */\n/* ENDSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of endservent_r.\n *\tIt is zero if d_endservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endservent_r\n *\tis defined.\n */\n/*#define HAS_ENDSERVENT_R\t   / **/\n#define ENDSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n#define HAS_FD_SET\t/**/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n#define\tFLEXFILENAMES\t\t/**/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tThe usual values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) sprintf((b),\"%.*g\",(n),(x))\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n/*#define HAS_GETGRENT\t\t/ **/\n\n/* HAS_GETGRENT_R:\n *\tThis symbol, if defined, indicates that the getgrent_r routine\n *\tis available to getgrent re-entrantly.\n */\n/* GETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of getgrent_r.\n *\tIt is zero if d_getgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrent_r\n *\tis defined.\n */\n/*#define HAS_GETGRENT_R\t   / **/\n#define GETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_GETGRGID_R:\n *\tThis symbol, if defined, indicates that the getgrgid_r routine\n *\tis available to getgrgid re-entrantly.\n */\n/* GETGRGID_R_PROTO:\n *\tThis symbol encodes the prototype of getgrgid_r.\n *\tIt is zero if d_getgrgid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrgid_r\n *\tis defined.\n */\n/*#define HAS_GETGRGID_R\t   / **/\n#define GETGRGID_R_PROTO 0\t   /**/\n\n/* HAS_GETGRNAM_R:\n *\tThis symbol, if defined, indicates that the getgrnam_r routine\n *\tis available to getgrnam re-entrantly.\n */\n/* GETGRNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getgrnam_r.\n *\tIt is zero if d_getgrnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrnam_r\n *\tis defined.\n */\n/*#define HAS_GETGRNAM_R\t   / **/\n#define GETGRNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n#define HAS_GETHOSTBYADDR\t\t/**/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n#define HAS_GETHOSTBYNAME\t\t/**/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n/*#define HAS_GETHOSTENT\t\t/ **/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n#define HAS_GETHOSTNAME\t/**/\n#define HAS_UNAME\t\t/**/\n/*#define HAS_PHOSTNAME\t/ **/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETHOSTBYADDR_R:\n *\tThis symbol, if defined, indicates that the gethostbyaddr_r routine\n *\tis available to gethostbyaddr re-entrantly.\n */\n/* GETHOSTBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyaddr_r.\n *\tIt is zero if d_gethostbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYADDR_R\t   / **/\n#define GETHOSTBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYNAME_R:\n *\tThis symbol, if defined, indicates that the gethostbyname_r routine\n *\tis available to gethostbyname re-entrantly.\n */\n/* GETHOSTBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyname_r.\n *\tIt is zero if d_gethostbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyname_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYNAME_R\t   / **/\n#define GETHOSTBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the gethostent_r routine\n *\tis available to gethostent re-entrantly.\n */\n/* GETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of gethostent_r.\n *\tIt is zero if d_gethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostent_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTENT_R\t   / **/\n#define GETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETHOST_PROTOS\t/**/\n\n/* HAS_GETLOGIN_R:\n *\tThis symbol, if defined, indicates that the getlogin_r routine\n *\tis available to getlogin re-entrantly.\n */\n/* GETLOGIN_R_PROTO:\n *\tThis symbol encodes the prototype of getlogin_r.\n *\tIt is zero if d_getlogin_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getlogin_r\n *\tis defined.\n */\n/*#define HAS_GETLOGIN_R\t   / **/\n#define GETLOGIN_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n/*#define HAS_GETNETBYADDR\t\t/ **/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n/*#define HAS_GETNETBYNAME\t\t/ **/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n/*#define HAS_GETNETENT\t\t/ **/\n\n/* HAS_GETNETBYADDR_R:\n *\tThis symbol, if defined, indicates that the getnetbyaddr_r routine\n *\tis available to getnetbyaddr re-entrantly.\n */\n/* GETNETBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyaddr_r.\n *\tIt is zero if d_getnetbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYADDR_R\t   / **/\n#define GETNETBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYNAME_R:\n *\tThis symbol, if defined, indicates that the getnetbyname_r routine\n *\tis available to getnetbyname re-entrantly.\n */\n/* GETNETBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyname_r.\n *\tIt is zero if d_getnetbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyname_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYNAME_R\t   / **/\n#define GETNETBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETNETENT_R:\n *\tThis symbol, if defined, indicates that the getnetent_r routine\n *\tis available to getnetent re-entrantly.\n */\n/* GETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of getnetent_r.\n *\tIt is zero if d_getnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetent_r\n *\tis defined.\n */\n/*#define HAS_GETNETENT_R\t   / **/\n#define GETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETNET_PROTOS\t/ **/\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n/*#define HAS_GETPAGESIZE\t\t/ **/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n/*#define HAS_GETPROTOENT\t\t/ **/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n/*#define HAS_GETPGRP\t\t/ **/\n/*#define USE_BSD_GETPGRP\t/ **/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n#define HAS_GETPROTOBYNAME\t\t/**/\n#define HAS_GETPROTOBYNUMBER\t\t/**/\n\n/* HAS_GETPROTOBYNAME_R:\n *\tThis symbol, if defined, indicates that the getprotobyname_r routine\n *\tis available to getprotobyname re-entrantly.\n */\n/* GETPROTOBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobyname_r.\n *\tIt is zero if d_getprotobyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobyname_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNAME_R\t   / **/\n#define GETPROTOBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNUMBER_R:\n *\tThis symbol, if defined, indicates that the getprotobynumber_r routine\n *\tis available to getprotobynumber re-entrantly.\n */\n/* GETPROTOBYNUMBER_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobynumber_r.\n *\tIt is zero if d_getprotobynumber_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobynumber_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNUMBER_R\t   / **/\n#define GETPROTOBYNUMBER_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the getprotoent_r routine\n *\tis available to getprotoent re-entrantly.\n */\n/* GETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of getprotoent_r.\n *\tIt is zero if d_getprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotoent_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOENT_R\t   / **/\n#define GETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETPROTO_PROTOS\t/**/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n/*#define HAS_GETPWENT\t\t/ **/\n\n/* HAS_GETPWENT_R:\n *\tThis symbol, if defined, indicates that the getpwent_r routine\n *\tis available to getpwent re-entrantly.\n */\n/* GETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of getpwent_r.\n *\tIt is zero if d_getpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwent_r\n *\tis defined.\n */\n/*#define HAS_GETPWENT_R\t   / **/\n#define GETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPWNAM_R:\n *\tThis symbol, if defined, indicates that the getpwnam_r routine\n *\tis available to getpwnam re-entrantly.\n */\n/* GETPWNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getpwnam_r.\n *\tIt is zero if d_getpwnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwnam_r\n *\tis defined.\n */\n/*#define HAS_GETPWNAM_R\t   / **/\n#define GETPWNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETPWUID_R:\n *\tThis symbol, if defined, indicates that the getpwuid_r routine\n *\tis available to getpwuid re-entrantly.\n */\n/* GETPWUID_R_PROTO:\n *\tThis symbol encodes the prototype of getpwuid_r.\n *\tIt is zero if d_getpwuid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwuid_r\n *\tis defined.\n */\n/*#define HAS_GETPWUID_R\t   / **/\n#define GETPWUID_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n/*#define HAS_GETSERVENT\t\t/ **/\n\n/* HAS_GETSERVBYNAME_R:\n *\tThis symbol, if defined, indicates that the getservbyname_r routine\n *\tis available to getservbyname re-entrantly.\n */\n/* GETSERVBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyname_r.\n *\tIt is zero if d_getservbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyname_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYNAME_R\t   / **/\n#define GETSERVBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYPORT_R:\n *\tThis symbol, if defined, indicates that the getservbyport_r routine\n *\tis available to getservbyport re-entrantly.\n */\n/* GETSERVBYPORT_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyport_r.\n *\tIt is zero if d_getservbyport_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYPORT_R\t   / **/\n#define GETSERVBYPORT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT_R:\n *\tThis symbol, if defined, indicates that the getservent_r routine\n *\tis available to getservent re-entrantly.\n */\n/* GETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of getservent_r.\n *\tIt is zero if d_getservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservent_r\n *\tis defined.\n */\n/*#define HAS_GETSERVENT_R\t   / **/\n#define GETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETSERV_PROTOS\t/**/\n\n/* HAS_GETSPNAM_R:\n *\tThis symbol, if defined, indicates that the getspnam_r routine\n *\tis available to getspnam re-entrantly.\n */\n/* GETSPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getspnam_r.\n *\tIt is zero if d_getspnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getspnam_r\n *\tis defined.\n */\n/*#define HAS_GETSPNAM_R\t   / **/\n#define GETSPNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n#define HAS_GETSERVBYNAME\t\t/**/\n#define HAS_GETSERVBYPORT\t\t/**/\n\n/* HAS_GMTIME_R:\n *\tThis symbol, if defined, indicates that the gmtime_r routine\n *\tis available to gmtime re-entrantly.\n */\n/* GMTIME_R_PROTO:\n *\tThis symbol encodes the prototype of gmtime_r.\n *\tIt is zero if d_gmtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gmtime_r\n *\tis defined.\n */\n/*#define HAS_GMTIME_R\t   / **/\n#define GMTIME_R_PROTO 0\t   /**/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n/*#define HAS_GNULIBC  \t/ **/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n#define HAS_HTONL\t\t/**/\n#define HAS_HTONS\t\t/**/\n#define HAS_NTOHL\t\t/**/\n#define HAS_NTOHS\t\t/**/\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii\n *\tis available.\n */\n#define HAS_ISASCII\t\t/**/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n/*#define HAS_LCHOWN\t\t/ **/\n\n/* HAS_LOCALTIME_R:\n *\tThis symbol, if defined, indicates that the localtime_r routine\n *\tis available to localtime re-entrantly.\n */\n/* LOCALTIME_R_NEEDS_TZSET:\n *\tMany libc's localtime_r implementations do not call tzset,\n *\tmaking them differ from localtime(), and making timezone\n *\tchanges using \\undef{TZ} without explicitly calling tzset\n *\timpossible. This symbol makes us call tzset before localtime_r\n */\n/*#define LOCALTIME_R_NEEDS_TZSET / **/\n#ifdef LOCALTIME_R_NEEDS_TZSET\n#define L_R_TZSET tzset(),\n#else\n#define L_R_TZSET\n#endif\n\n/* LOCALTIME_R_PROTO:\n *\tThis symbol encodes the prototype of localtime_r.\n *\tIt is zero if d_localtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_localtime_r\n *\tis defined.\n */\n/*#define HAS_LOCALTIME_R\t   / **/\n#define LOCALTIME_R_PROTO 0\t   /**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.\n */\n/* HAS_LDEXPL:\n *\tThis symbol, if defined, indicates that the ldexpl routine is\n *\tavailable to shift a long double floating-point number\n *\tby an integral power of 2.\n */\n/* LONG_DOUBLEKIND:\n *\tLONG_DOUBLEKIND will be one of\n *\tLONG_DOUBLE_IS_DOUBLE\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_UNKNOWN_FORMAT\n *\tIt is only defined if the system supports long doubles.\n */\n/*#define  HAS_LDEXPL\t\t/ **/\n#define HAS_LONG_DOUBLE\t\t/**/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE 8\t\t/**/\n#define LONG_DOUBLEKIND 0\t\t/**/\n#define LONG_DOUBLE_IS_DOUBLE\t\t\t\t0\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\t1\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\t2\n#define LONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\t\t3\n#define LONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\t\t4\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LITTLE_ENDIAN\t5\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BIG_ENDIAN\t6\n#define LONG_DOUBLE_IS_UNKNOWN_FORMAT\t\t\t-1\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n/*#define HAS_LONG_LONG\t\t/ **/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE 8\t\t/**/\n#endif\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n#define\tHAS_LSEEK_PROTO\t/**/\n\n/* HAS_MEMCHR:\n *\tThis symbol, if defined, indicates that the memchr routine is available\n *\tto locate characters within a C string.\n */\n#define HAS_MEMCHR\t/**/\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n/*#define HAS_MKSTEMP\t\t/ **/\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'caddr_t'.\n */\n/*#define HAS_MMAP\t\t/ **/\n#define Mmap_t void *\t/**/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n/*#define HAS_MSG\t\t/ **/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n/*#define HAS_OPEN3\t\t/ **/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n/*#define OLD_PTHREAD_CREATE_JOINABLE  / **/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n/*#define HAS_PTHREAD_ATFORK\t\t/ **/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/*#define HAS_PTHREAD_YIELD\t/ **/\n#define SCHED_YIELD\t\t/**/\n/*#define HAS_SCHED_YIELD\t/ **/\n\n/* HAS_RANDOM_R:\n *\tThis symbol, if defined, indicates that the random_r routine\n *\tis available to random re-entrantly.\n */\n/* RANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of random_r.\n *\tIt is zero if d_random_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r\n *\tis defined.\n */\n/*#define HAS_RANDOM_R\t   / **/\n#define RANDOM_R_PROTO 0\t   /**/\n\n/* HAS_READDIR64_R:\n *\tThis symbol, if defined, indicates that the readdir64_r routine\n *\tis available to readdir64 re-entrantly.\n */\n/* READDIR64_R_PROTO:\n *\tThis symbol encodes the prototype of readdir64_r.\n *\tIt is zero if d_readdir64_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir64_r\n *\tis defined.\n */\n/*#define HAS_READDIR64_R\t   / **/\n#define READDIR64_R_PROTO 0\t   /**/\n\n/* HAS_READDIR_R:\n *\tThis symbol, if defined, indicates that the readdir_r routine\n *\tis available to readdir re-entrantly.\n */\n/* READDIR_R_PROTO:\n *\tThis symbol encodes the prototype of readdir_r.\n *\tIt is zero if d_readdir_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir_r\n *\tis defined.\n */\n/*#define HAS_READDIR_R\t   / **/\n#define READDIR_R_PROTO 0\t   /**/\n\n/* HAS_SAFE_BCOPY:\n *\tThis symbol, if defined, indicates that the bcopy routine is available\n *\tto copy potentially overlapping memory blocks. Normally, you should\n *\tprobably use memmove() or memcpy(). If neither is defined, roll your\n *\town version.\n */\n/*#define HAS_SAFE_BCOPY\t/ **/\n\n/* HAS_SAFE_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy potentially overlapping memory blocks.  If you need to\n *\tcopy overlapping memory blocks, you should check HAS_MEMMOVE and\n *\tuse memmove() instead, if available.\n */\n/*#define HAS_SAFE_MEMCPY\t/ **/\n\n/* HAS_SANE_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tand can be used to compare relative magnitudes of chars with their high\n *\tbits set.  If it is not defined, roll your own version.\n */\n#define HAS_SANE_MEMCMP\t/**/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n/*#define HAS_SEM\t\t/ **/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n/*#define HAS_SETGRENT\t\t/ **/\n\n/* HAS_SETGRENT_R:\n *\tThis symbol, if defined, indicates that the setgrent_r routine\n *\tis available to setgrent re-entrantly.\n */\n/* SETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of setgrent_r.\n *\tIt is zero if d_setgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setgrent_r\n *\tis defined.\n */\n/*#define HAS_SETGRENT_R\t   / **/\n#define SETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n/*#define HAS_SETHOSTENT\t\t/ **/\n\n/* HAS_SETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the sethostent_r routine\n *\tis available to sethostent re-entrantly.\n */\n/* SETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of sethostent_r.\n *\tIt is zero if d_sethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_sethostent_r\n *\tis defined.\n */\n/*#define HAS_SETHOSTENT_R\t   / **/\n#define SETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_SETLOCALE_R:\n *\tThis symbol, if defined, indicates that the setlocale_r routine\n *\tis available to setlocale re-entrantly.\n */\n/* SETLOCALE_R_PROTO:\n *\tThis symbol encodes the prototype of setlocale_r.\n *\tIt is zero if d_setlocale_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setlocale_r\n *\tis defined.\n */\n/*#define HAS_SETLOCALE_R\t   / **/\n#define SETLOCALE_R_PROTO 0\t   /**/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n/*#define HAS_SETNETENT\t\t/ **/\n\n/* HAS_SETNETENT_R:\n *\tThis symbol, if defined, indicates that the setnetent_r routine\n *\tis available to setnetent re-entrantly.\n */\n/* SETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of setnetent_r.\n *\tIt is zero if d_setnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setnetent_r\n *\tis defined.\n */\n/*#define HAS_SETNETENT_R\t   / **/\n#define SETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n/*#define HAS_SETPROTOENT\t\t/ **/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n/*#define HAS_SETPGRP\t\t/ **/\n/*#define USE_BSD_SETPGRP\t/ **/\n\n/* HAS_SETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the setprotoent_r routine\n *\tis available to setprotoent re-entrantly.\n */\n/* SETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of setprotoent_r.\n *\tIt is zero if d_setprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setprotoent_r\n *\tis defined.\n */\n/*#define HAS_SETPROTOENT_R\t   / **/\n#define SETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n/*#define HAS_SETPWENT\t\t/ **/\n\n/* HAS_SETPWENT_R:\n *\tThis symbol, if defined, indicates that the setpwent_r routine\n *\tis available to setpwent re-entrantly.\n */\n/* SETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of setpwent_r.\n *\tIt is zero if d_setpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setpwent_r\n *\tis defined.\n */\n/*#define HAS_SETPWENT_R\t   / **/\n#define SETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n/*#define HAS_SETSERVENT\t\t/ **/\n\n/* HAS_SETSERVENT_R:\n *\tThis symbol, if defined, indicates that the setservent_r routine\n *\tis available to setservent re-entrantly.\n */\n/* SETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of setservent_r.\n *\tIt is zero if d_setservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setservent_r\n *\tis defined.\n */\n/*#define HAS_SETSERVENT_R\t   / **/\n#define SETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n#define HAS_SETVBUF\t\t/**/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n/*#define HAS_SHM\t\t/ **/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t void *\t/**/\n/*#define HAS_SHMAT_PROTOTYPE\t/ **/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n/*#define HAS_SIGACTION\t/ **/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/*#define HAS_SIGSETJMP\t/ **/\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n/* HAS_MSG_CTRUNC:\n *\tThis symbol, if defined, indicates that the MSG_CTRUNC is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_DONTROUTE:\n *\tThis symbol, if defined, indicates that the MSG_DONTROUTE is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_OOB:\n *\tThis symbol, if defined, indicates that the MSG_OOB is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PEEK:\n *\tThis symbol, if defined, indicates that the MSG_PEEK is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PROXY:\n *\tThis symbol, if defined, indicates that the MSG_PROXY is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_SCM_RIGHTS:\n *\tThis symbol, if defined, indicates that the SCM_RIGHTS is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_SOCKADDR_SA_LEN:\n *\tThis symbol, if defined, indicates that the struct sockaddr\n *\tstructure has a member called sa_len, indicating the length of\n *\tthe structure.\n */\n/* HAS_SOCKADDR_IN6:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct sockaddr_in6;\n */\n/* HAS_SIN6_SCOPE_ID:\n *\tThis symbol, if defined, indicates that the struct sockaddr_in6\n *\tstructure has a member called sin6_scope_id.\n */\n/* HAS_IP_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq;\n */\n/* HAS_IP_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq_source;\n */\n/* HAS_IPV6_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq;\n */\n/* HAS_IPV6_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq_source;\n */\n#define\tHAS_SOCKET\t\t/**/\n/*#define\tHAS_SOCKETPAIR\t/ **/\n/*#define\tHAS_SOCKADDR_SA_LEN\t/ **/\n/*#define\tHAS_MSG_CTRUNC\t/ **/\n/*#define\tHAS_MSG_DONTROUTE\t/ **/\n/*#define\tHAS_MSG_OOB\t/ **/\n/*#define\tHAS_MSG_PEEK\t/ **/\n/*#define\tHAS_MSG_PROXY\t/ **/\n/*#define\tHAS_SCM_RIGHTS\t/ **/\n/*#define\tHAS_SOCKADDR_IN6\t/ **/\n#define\tHAS_SIN6_SCOPE_ID\t/**/\n/*#define\tHAS_IP_MREQ\t/ **/\n/*#define\tHAS_IP_MREQ_SOURCE\t/ **/\n/*#define\tHAS_IPV6_MREQ\t/ **/\n/*#define\tHAS_IPV6_MREQ_SOURCE\t/ **/\n\n/* HAS_SRAND48_R:\n *\tThis symbol, if defined, indicates that the srand48_r routine\n *\tis available to srand48 re-entrantly.\n */\n/* SRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of srand48_r.\n *\tIt is zero if d_srand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srand48_r\n *\tis defined.\n */\n/*#define HAS_SRAND48_R\t   / **/\n#define SRAND48_R_PROTO 0\t   /**/\n\n/* HAS_SRANDOM_R:\n *\tThis symbol, if defined, indicates that the srandom_r routine\n *\tis available to srandom re-entrantly.\n */\n/* SRANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of srandom_r.\n *\tIt is zero if d_srandom_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srandom_r\n *\tis defined.\n */\n/*#define HAS_SRANDOM_R\t   / **/\n#define SRANDOM_R_PROTO 0\t   /**/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n/*#define USE_STAT_BLOCKS \t/ **/\n#endif\n\n/* HAS_STATIC_INLINE:\n *\tThis symbol, if defined, indicates that the C compiler supports\n *\tC99-style static inline.  That is, the function can't be called\n *\tfrom another translation unit.\n */\n/* PERL_STATIC_INLINE:\n *\tThis symbol gives the best-guess incantation to use for static\n *\tinline functions.  If HAS_STATIC_INLINE is defined, this will\n *\tgive C99-style inline.  If HAS_STATIC_INLINE is not defined,\n *\tthis will give a plain 'static'.  It will always be defined\n *\tto something that gives static linkage.\n *\tPossibilities include\n *\t\tstatic inline       (c99)\n *\t\tstatic __inline__   (gcc -ansi)\n *\t\tstatic __inline     (MSVC)\n *\t\tstatic _inline      (older MSVC)\n *\t\tstatic              (c89 compilers)\n */\n#define HAS_STATIC_INLINE\t\t\t\t/**/\n#define PERL_STATIC_INLINE static __inline\t/**/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n#define USE_STDIO_PTR \t/**/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\t((fp)->_ptr)\n#define STDIO_PTR_LVALUE \t\t/**/\n#define FILE_cnt(fp)\t((fp)->_cnt)\n#define STDIO_CNT_LVALUE \t\t/**/\n/*#define STDIO_PTR_LVAL_SETS_CNT\t/ **/\n#define STDIO_PTR_LVAL_NOCHANGE_CNT\t/**/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n#define USE_STDIO_BASE \t/**/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\t((fp)->_base)\n#define FILE_bufsiz(fp)\t((fp)->_cnt + (fp)->_ptr - (fp)->_base)\n#endif\n\n/* USE_STRUCT_COPY:\n *\tThis symbol, if defined, indicates that this C compiler knows how\n *\tto copy structures.  If undefined, you'll need to use a block copy\n *\troutine of some sort instead.\n */\n#define\tUSE_STRUCT_COPY\t/**/\n\n/* HAS_STRERROR:\n *\tThis symbol, if defined, indicates that the strerror routine is\n *\tavailable to translate error numbers to strings. See the writeup\n *\tof Strerror() in this file before you try to define your own.\n */\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n/* Strerror:\n *\tThis preprocessor symbol is defined as a macro if strerror() is\n *\tnot available to translate error numbers to strings but sys_errlist[]\n *\tarray is there.\n */\n#define HAS_STRERROR\t\t/**/\n#define HAS_SYS_ERRLIST\t/**/\n#define Strerror(e) strerror(e)\n\n/* HAS_STRERROR_R:\n *\tThis symbol, if defined, indicates that the strerror_r routine\n *\tis available to strerror re-entrantly.\n */\n/* STRERROR_R_PROTO:\n *\tThis symbol encodes the prototype of strerror_r.\n *\tIt is zero if d_strerror_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_strerror_r\n *\tis defined.\n */\n/*#define HAS_STRERROR_R\t   / **/\n#define STRERROR_R_PROTO 0\t   /**/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#define HAS_STRTOUL\t/**/\n\n/* HAS_TIME:\n *\tThis symbol, if defined, indicates that the time() routine exists.\n */\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#define HAS_TIME\t\t/**/\n#define Time_t time_t\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n * use getrusage(). It may be necessary to include <sys/times.h>.\n */\n#define HAS_TIMES\t\t/**/\n\n/* HAS_TMPNAM_R:\n *\tThis symbol, if defined, indicates that the tmpnam_r routine\n *\tis available to tmpnam re-entrantly.\n */\n/* TMPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of tmpnam_r.\n *\tIt is zero if d_tmpnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_tmpnam_r\n *\tis defined.\n */\n/*#define HAS_TMPNAM_R\t   / **/\n#define TMPNAM_R_PROTO 0\t   /**/\n\n/* HAS_TTYNAME_R:\n *\tThis symbol, if defined, indicates that the ttyname_r routine\n *\tis available to ttyname re-entrantly.\n */\n/* TTYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of ttyname_r.\n *\tIt is zero if d_ttyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ttyname_r\n *\tis defined.\n */\n/*#define HAS_TTYNAME_R\t   / **/\n#define TTYNAME_R_PROTO 0\t   /**/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n#define HAS_UNION_SEMUN\t/**/\n/*#define USE_SEMCTL_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMID_DS\t/ **/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n/*#define HAS_VFORK\t/ **/\n\n/* HAS_PSEUDOFORK:\n *\tThis symbol, if defined, indicates that an emulation of the\n *\tfork routine is available.\n */\n/*#define HAS_PSEUDOFORK\t/ **/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t void\t/* Signal handler's return type */\n\n/* HASVOLATILE:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe volatile declaration.\n */\n#define\tHASVOLATILE\t/**/\n#ifndef HASVOLATILE\n#define volatile\n#endif\n\n/* HAS_VPRINTF:\n *\tThis symbol, if defined, indicates that the vprintf routine is available\n *\tto printf with a pointer to an argument list.  If unavailable, you\n *\tmay need to write your own, probably in terms of _doprnt().\n */\n/* USE_CHAR_VSPRINTF:\n *\tThis symbol is defined if this system has vsprintf() returning type\n *\t(char*).  The trend seems to be to declare it as \"int vsprintf()\".  It\n *\tis up to the package author to declare vsprintf correctly based on the\n *\tsymbol.\n */\n#define HAS_VPRINTF\t/**/\n/*#define USE_CHAR_VSPRINTF \t/ **/\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE 8\t\t/**/\n\n/* EBCDIC:\n *\tThis symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n/*#define\tEBCDIC \t\t/ **/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t fpos_t\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t\"ld\"\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedness of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t-1\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size 4\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t gid_t\t\t/* Type for getgid(), etc... */\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#define I_DIRENT\t\t/**/\n#define DIRNAMLEN\t/**/\n#define Direntry_t struct direct\n\n/* I_EXECINFO:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <execinfo.h> for backtrace() support.\n */\n/*#define I_EXECINFO\t\t/ **/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n/*#define I_GRP\t\t/ **/\n/*#define GRPASSWD\t/ **/\n\n/* I_MACH_CTHREADS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <mach/cthreads.h>.\n */\n/*#define   I_MACH_CTHREADS\t/ **/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/* I_GDBMNDBM:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> exists and should\n *\tbe included.  This was the location of the ndbm.h compatibility file\n *\tin RedHat 7.1.\n */\n/* I_GDBM_NDBM:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> exists and should\n *\tbe included.  This is the location of the ndbm.h compatibility file\n *\tin Debian 4.0.\n */\n/* NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBMNDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBM_NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/*#define I_NDBM\t/ **/\n/*#define I_GDBMNDBM\t/ **/\n/*#define I_GDBM_NDBM\t/ **/\n/*#define NDBM_H_USES_PROTOTYPES\t/ **/\n/*#define GDBMNDBM_H_USES_PROTOTYPES\t/ **/\n/*#define GDBM_NDBM_H_USES_PROTOTYPES\t/ **/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n/*#define I_NETDB\t\t/ **/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and\n *\tshould be included.\n */\n/*#define I_NET_ERRNO\t\t/ **/\n\n/* I_PTHREAD:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <pthread.h>.\n */\n/*#define   I_PTHREAD\t/ **/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n/*#define I_PWD\t\t/ **/\n/*#define PWQUOTA\t/ **/\n/*#define PWAGE\t/ **/\n/*#define PWCHANGE\t/ **/\n/*#define PWCLASS\t/ **/\n/*#define PWEXPIRE\t/ **/\n/*#define PWCOMMENT\t/ **/\n/*#define PWGECOS\t/ **/\n/*#define PWPASSWD\t/ **/\n\n/* I_SYS_ACCESS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/access.h>.\n */\n/*#define   I_SYS_ACCESS                / **/\n\n/* I_SYS_SECURITY:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/security.h>.\n */\n/*#define   I_SYS_SECURITY\t/ **/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUIO\t\t/ **/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/*#define I_TERMIO\t\t/ **/\n/*#define I_TERMIOS\t\t/ **/\n/*#define I_SGTTY\t\t/ **/\n\n/* I_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n/* HAS_TM_TM_ZONE:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_zone field.\n */\n/* HAS_TM_TM_GMTOFF:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_gmtoff field.\n */\n#define I_TIME\t\t/**/\n/*#define I_SYS_TIME\t\t/ **/\n/*#define I_SYS_TIME_KERNEL\t\t/ **/\n/*#define HAS_TM_TM_ZONE\t\t/ **/\n/*#define HAS_TM_TM_GMTOFF\t\t/ **/\n\n/* I_STDARG:\n *\tThis symbol, if defined, indicates that <stdarg.h> exists and should\n *\tbe included.\n */\n/* I_VARARGS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <varargs.h>.\n */\n#define I_STDARG\t\t/**/\n/*#define I_VARARGS\t/ **/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n/*#define PERL_INC_VERSION_LIST 0\t\t/ **/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n * \talso as /usr/bin/perl.\n */\n/*#define INSTALL_USR_BIN_PERL\t/ **/\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t long\t\t/* <offset> type */\n#define LSEEKSIZE 4\t\t/* <offset> size */\n#define Off_t_size 4\t/* <offset> size */\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n * void, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t void *\t\t\t/**/\n#define Free_t void\t\t\t/**/\n\n/* PERL_MALLOC_WRAP:\n *\tThis symbol, if defined, indicates that we'd like malloc wrap checks.\n */\n#define PERL_MALLOC_WRAP\t\t/**/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n/*#define MYMALLOC\t\t\t/ **/\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes\n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t mode_t\t /* file mode parameter for system calls */\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK O_NONBLOCK\n#define VAL_EAGAIN EAGAIN\n#define RD_NODATA -1\n#define EOF_NONBLOCK\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\tchar * /**/\n#define Netdb_hlen_t\t\tint /**/\n#define Netdb_name_t\t\tchar * /**/\n#define Netdb_net_t\t\tlong /**/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n/*#define PERL_OTHERLIBDIRS \"\"\t\t/ **/\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t int\t\t/* PID type */\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"c:\\\\perl\\\\lib\"\t\t/**/\n#define PRIVLIB_EXP (win32_get_privlib(PERL_VERSION_STRING, NULL))\t/**/\n\n/* CAN_PROTOTYPE:\n *\tIf defined, this macro indicates that the C compiler can handle\n *\tfunction prototypes.\n */\n/* _:\n *\tThis macro is used to declare function parameters for folks who want\n *\tto make declarations with prototypes using a different style than\n *\tthe above macros.  Use double parentheses.  For example:\n *\n *\t\tint main _((int argc, char *argv[]));\n */\n#define\tCAN_PROTOTYPE\t/**/\n#ifdef CAN_PROTOTYPE\n#define\t_(args) args\n#else\n#define\t_(args) ()\n#endif\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE 4\t\t/**/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpart, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, QUAD_IS_INT64_T,\n *\tor QUAD_IS___INT64.\n */\n#define HAS_QUAD\t/**/\n#ifdef HAS_QUAD\n#   define Quad_t __int64\t/**/\n#   define Uquad_t unsigned __int64\t/**/\n#   define QUADKIND 5\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#   define QUAD_IS___INT64\t5\n#endif\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\tPerl_drand48()\t\t/**/\n#define Rand_seed_t\t\tU32\t\t/**/\n#define seedDrand01(x)\tPerl_drand48_init((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t48\t\t/**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you\n *\thave select(), of course.\n */\n#define Select_fd_set_t \tPerl_fd_set *\t/**/\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"cmd /x /c\"  /**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_name_init list.\n *\tNote that this variable is initialized from the sig_name_init,\n *\tnot from sig_name (which is unused).\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup.\n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.\n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name_init list.\n *\tNote that this variable is initialized from the sig_num_init,\n *\tnot from sig_num (which is unused).\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME \"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0\t\t/**/\n#define SIG_NUM  0, 1, 2, 21, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0\t\t/**/\n#define SIG_SIZE 27\t\t\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define SITEARCH \"c:\\\\perl\\\\site\\\\lib\"\t\t/**/\n/*#define SITEARCH_EXP \"\"\t/ **/\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"c:\\\\perl\\\\site\\\\lib\"\t\t/**/\n#define SITELIB_EXP (win32_get_sitelib(PERL_VERSION_STRING, NULL))\t/**/\n#define SITELIB_STEM \"\"\t\t/**/\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size 4\t\t/**/\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t size_t\t /* length parameter for string functions */\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\tint /**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t int\t /* signed count of bytes */\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR char\t/**/\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t\"ld\"\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedness of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t-1\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size 4\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t uid_t\t\t/* UID type */\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* USE_5005THREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the 5.005-based threading implementation.\n *\tOnly valid up to 5.8.x.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n/*#define\tUSE_5005THREADS\t\t/ **/\n/*#define\tUSE_ITHREADS\t\t/ **/\n#if defined(USE_5005THREADS) && !defined(USE_ITHREADS)\n#define\t\tUSE_THREADS\t\t/* until src is revised*/\n#endif\n/*#define\tOLD_PTHREADS_API\t\t/ **/\n/*#define\tUSE_REENTRANT_API\t/ **/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front.\n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor\n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define PERL_VENDORARCH \"\"\t\t/ **/\n/*#define PERL_VENDORARCH_EXP \"\"\t\t/ **/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n/*#define PERL_VENDORLIB_EXP \"\"\t\t/ **/\n/*#define PERL_VENDORLIB_STEM \"\"\t\t/ **/\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n/*#define\tUSE_CROSS_COMPILE\t/ **/\n#define\tPERL_TARGETARCH\t\"\"\t/**/\n#endif\n\n/* PERL_USE_DEVEL:\n *\tThis symbol, if defined, indicates that Perl was configured with\n *\t-Dusedevel, to enable development features.  This should not be\n *\tdone for production builds.\n */\n/*#define\tPERL_USE_DEVEL\t\t/ **/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n/*#define HAS_ATOLF\t\t/ **/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n/*#define HAS_ATOLL\t\t/ **/\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n/*#define HAS__FWALK\t\t/ **/\n\n/* HAS_ACOSH:\n *\tThis symbol, if defined, indicates that the acosh routine is\n *\tavailable to do the inverse hyperbolic cosine function.\n */\n/*#define HAS_ACOSH\t\t/ **/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_AINTL\t\t/ **/\n\n/* HAS_BUILTIN_CHOOSE_EXPR:\n *\tCan we handle GCC builtin for compile-time ternary-like expressions\n */\n/* HAS_BUILTIN_EXPECT:\n *\tCan we handle GCC builtin for telling that certain values are more\n *\tlikely\n */\n/*#define HAS_BUILTIN_EXPECT\t/ **/\n/*#define HAS_BUILTIN_CHOOSE_EXPR\t/ **/\n\n/* HAS_C99_VARIADIC_MACROS:\n *\tIf defined, the compiler supports C99 variadic macros.\n */\n/*#define\tHAS_C99_VARIADIC_MACROS\t/ **/\n\n/* HAS_CLASS:\n *\tThis symbol, if defined, indicates that the class routine is\n *\tavailable to classify doubles.  Available for example in AIX.\n *\tThe returned values are defined in <float.h> and are:\n *\n *\tFP_PLUS_NORM\tPositive normalized, nonzero\n *\tFP_MINUS_NORM\tNegative normalized, nonzero\n *\tFP_PLUS_DENORM\tPositive denormalized, nonzero\n *\tFP_MINUS_DENORM\tNegative denormalized, nonzero\n *\tFP_PLUS_ZERO\t+0.0\n *\tFP_MINUS_ZERO\t-0.0\n *\tFP_PLUS_INF\t+INF\n *\tFP_MINUS_INF\t-INF\n *\tFP_NANS\t\tSignaling Not a Number (NaNS)\n *\tFP_NANQ\t\tQuiet Not a Number (NaNQ)\n */\n/*#define HAS_CLASS\t\t/ **/\n\n/* HAS_CLEARENV:\n *\tThis symbol, if defined, indicates that the clearenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_CLEARENV\t\t/ **/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_CMSGHDR\t/ **/\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n/*#define HAS_COPYSIGNL\t\t/ **/\n\n/* USE_CPLUSPLUS:\n *\tThis symbol, if defined, indicates that a C++ compiler was\n *\tused to compiled Perl and will be used to compile extensions.\n */\n/*#define USE_CPLUSPLUS\t\t/ **/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n/*#define\tHAS_DBMINIT_PROTO\t/ **/\n\n/* HAS_DIR_DD_FD:\n *\tThis symbol, if defined, indicates that the the DIR* dirstream\n *\tstructure contains a member variable named dd_fd.\n */\n/*#define HAS_DIR_DD_FD\t\t/ **/\n\n/* HAS_DIRFD:\n *\tThis manifest constant lets the C program know that dirfd\n *\tis available.\n */\n/*#define HAS_DIRFD\t\t/ **/\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n/*#define \tDLSYM_NEEDS_UNDERSCORE \t/ **/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n#define HAS_FAST_STDIO\t\t/**/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n/*#define HAS_FCHDIR\t\t/ **/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n/*#define FCNTL_CAN_LOCK\t\t/ **/\n\n/* HAS_FEGETROUND:\n *\tThis symbol, if defined, indicates that the fegetround routine is\n *\tavailable to return the macro corresponding to the current rounding\n *\tmode.\n */\n/*#define HAS_FEGETROUND\t/ **/\n\n/* HAS_FINITE:\n *\tThis symbol, if defined, indicates that the finite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_FINITE\t\t/ **/\n\n/* HAS_FINITEL:\n *\tThis symbol, if defined, indicates that the finitel routine is\n *\tavailable to check whether a long double is finite\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_FINITEL\t\t/ **/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n#define\tHAS_FLOCK_PROTO\t/**/\n\n/* HAS_FP_CLASS:\n *\tThis symbol, if defined, indicates that the fp_class routine is\n *\tavailable to classify doubles.  Available for example in Digital UNIX.\n *\tThe returned values are defined in <math.h> and are:\n *\n *\tFP_SNAN           Signaling NaN (Not-a-Number)\n *\tFP_QNAN           Quiet NaN (Not-a-Number)\n *\tFP_POS_INF        +infinity\n *\tFP_NEG_INF        -infinity\n *\tFP_POS_NORM       Positive normalized\n *\tFP_NEG_NORM       Negative normalized\n *\tFP_POS_DENORM     Positive denormalized\n *\tFP_NEG_DENORM     Negative denormalized\n *\tFP_POS_ZERO       +0.0 (positive zero)\n *\tFP_NEG_ZERO       -0.0 (negative zero)\n */\n/*#define HAS_FP_CLASS\t\t/ **/\n\n/* HAS_FP_CLASSL:\n *\tThis symbol, if defined, indicates that the fp_classl routine is\n *\tavailable to classify long doubles.  Available for example in\n *\tDigital UNIX.  See for possible values HAS_FP_CLASS.\n */\n/*#define HAS_FP_CLASSL\t\t/ **/\n\n/* HAS_FPCLASS:\n *\tThis symbol, if defined, indicates that the fpclass routine is\n *\tavailable to classify doubles.  Available for example in Solaris/SVR4.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASS\t\t/ **/\n\n/* HAS_FPCLASSIFY:\n *\tThis symbol, if defined, indicates that the fpclassify routine is\n *\tavailable to classify doubles.  Available for example in HP-UX.\n *\tThe returned values are defined in <math.h> and are\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/* HAS_FP_CLASSIFY:\n *\tThis symbol, if defined, indicates that the fp_classify routine is\n *\tavailable to classify doubles. The values are defined in <math.h>\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/*#define\tHAS_FPCLASSIFY\t\t/ **/\n/*#define\tHAS_FP_CLASSIFY\t\t/ **/\n\n/* HAS_FPCLASSL:\n *\tThis symbol, if defined, indicates that the fpclassl routine is\n *\tavailable to classify long doubles.  Available for example in IRIX.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASSL\t\t/ **/\n\n/* HAS_FPGETROUND:\n *\tThis symbol, if defined, indicates that the fpgetround routine is\n *\tavailable to get the floating point rounding mode.\n */\n/*#define HAS_FPGETROUND\t\t/ **/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n/*#define\tHAS_FPOS64_T    \t/ **/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n/*#define HAS_FREXPL\t\t/ **/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_FS_DATA\t/ **/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FSEEKO\t\t/ **/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATFS\t\t/ **/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n/*#define HAS_FSYNC\t\t/ **/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FTELLO\t\t/ **/\n\n/* HAS_FUTIMES:\n *\tThis symbol, if defined, indicates that the futimes routine is\n *\tavailable to change file descriptor time stamps with struct timevals.\n */\n/*#define HAS_FUTIMES\t\t/ **/\n\n/* HAS_GETADDRINFO:\n *\tThis symbol, if defined, indicates that the getaddrinfo() function\n *\tis available for use.\n */\n/*#define HAS_GETADDRINFO\t\t/ **/\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n#define HAS_GETCWD\t\t/**/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enhanced (shadow) password entries by name.\n */\n/*#define HAS_GETESPWNAM\t\t/ **/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n/*#define HAS_GETFSSTAT\t\t/ **/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n/*#define HAS_GETITIMER\t\t/ **/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n/*#define HAS_GETMNT\t\t/ **/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n/*#define HAS_GETMNTENT\t\t/ **/\n\n/* HAS_GETNAMEINFO:\n *\tThis symbol, if defined, indicates that the getnameinfo() function\n *\tis available for use.\n */\n/*#define HAS_GETNAMEINFO\t\t/ **/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n/*#define HAS_GETPRPWNAM\t\t/ **/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n/*#define HAS_GETSPNAM\t\t/ **/\n\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n/*#define HAS_HASMNTOPT\t\t/ **/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n/*#define HAS_ILOGBL\t\t/ **/\n\n/* HAS_INETNTOP:\n *\tThis symbol, if defined, indicates that the inet_ntop() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n/*#define HAS_INETNTOP\t\t/ **/\n\n/* HAS_INETPTON:\n *\tThis symbol, if defined, indicates that the inet_pton() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n/*#define HAS_INETPTON\t\t/ **/\n\n/* HAS_INT64_T:\n *     This symbol will defined if the C compiler supports int64_t.\n *     Usually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n/*#define     HAS_INT64_T               / **/\n\n/* HAS_ISBLANK:\n *\tThis manifest constant lets the C program know that isblank\n *\tis available.\n */\n/*#define HAS_ISBLANK\t\t/ **/\n\n/* HAS_ISFINITE:\n *\tThis symbol, if defined, indicates that the isfinite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_ISFINITE\t\t/ **/\n\n/* HAS_ISFINITEL:\n *\tThis symbol, if defined, indicates that the isfinitel routine is\n *\tavailable to check whether a long double is finite.\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_ISFINITEL\t\t/ **/\n\n/* HAS_ISINF:\n *\tThis symbol, if defined, indicates that the isinf routine is\n *\tavailable to check whether a double is an infinity.\n */\n/*#define HAS_ISINF\t\t/ **/\n\n/* HAS_ISINFL:\n *\tThis symbol, if defined, indicates that the isinfl routine is\n *\tavailable to check whether a long double is an infinity.\n */\n/*#define HAS_ISINFL\t\t/ **/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n#define HAS_ISNAN\t\t/**/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n/*#define HAS_ISNANL\t\t/ **/\n\n/* HAS_J0:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0() function is available for Bessel functions of the first\n *\tkind of the order zero, for doubles.\n */\n/* HAS_J0L:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0l() function is available for Bessel functions of the first\n *\tkind of the order zero, for long doubles.\n */\n/*#define\tHAS_J0\t\t/ **/\n/*#define\tHAS_J0L\t\t/ **/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n#define HAS_LDBL_DIG \t/**/\n\n/* LIBM_LIB_VERSION:\n *\tThis symbol, if defined, indicates that libm exports _LIB_VERSION\n *\tand that math.h defines the enum to manipulate it.\n */\n/*#define LIBM_LIB_VERSION\t\t/ **/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n/*#define HAS_MADVISE\t\t/ **/\n\n/* HAS_MALLOC_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_SIZE\t\t/ **/\n\n/* HAS_MALLOC_GOOD_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_good_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_GOOD_SIZE\t/ **/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n/*#define HAS_MKDTEMP\t\t/ **/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to exclusively create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n/*#define HAS_MKSTEMPS\t\t/ **/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/* HAS_MODFL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the modfl() function.  Otherwise, it is up\n *\tto the program to supply one.\n */\n/* HAS_MODFL_POW32_BUG:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tbroken for long doubles >= pow(2, 32).\n *\tFor example from 4294967303.150000 one would get 4294967302.000000\n *\tand 1.150000.  The bug has been seen in certain versions of glibc,\n *\trelease 2.2.2 is known to be okay.\n */\n/*#define HAS_MODFL\t\t/ **/\n/*#define HAS_MODFL_PROTO\t\t/ **/\n/*#define HAS_MODFL_POW32_BUG\t\t/ **/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n/*#define HAS_MPROTECT\t\t/ **/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_MSGHDR\t/ **/\n\n/* HAS_NL_LANGINFO:\n *\tThis symbol, if defined, indicates that the nl_langinfo routine is\n *\tavailable to return local data.  You will also need <langinfo.h>\n *\tand therefore I_LANGINFO.\n */\n/*#define HAS_NL_LANGINFO\t\t/ **/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n/*#define\tHAS_OFF64_T    \t\t/ **/\n\n/* HAS_PRCTL:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title.\n */\n/* HAS_PRCTL_SET_NAME:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title and supports PR_SET_NAME.\n */\n/*#define HAS_PRCTL\t\t/ **/\n/*#define HAS_PRCTL_SET_NAME\t\t/ **/\n\n/* HAS_PROCSELFEXE:\n *\tThis symbol is defined if PROCSELFEXE_PATH is a symlink\n *\tto the absolute pathname of the executing program.\n */\n/* PROCSELFEXE_PATH:\n *\tIf HAS_PROCSELFEXE is defined this symbol is the filename\n *\tof the symbolic link pointing to the absolute pathname of\n *\tthe executing program.\n */\n/*#define HAS_PROCSELFEXE\t/ **/\n#if defined(HAS_PROCSELFEXE) && !defined(PROCSELFEXE_PATH)\n#define PROCSELFEXE_PATH\t\t/**/\n#endif\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n/*#define HAS_PTHREAD_ATTR_SETSCOPE\t\t/ **/\n\n/* HAS_PTRDIFF_T:\n *\tThis symbol will be defined if the C compiler supports ptrdiff_t.\n */\n#define\tHAS_PTRDIFF_T    \t\t/**/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n/*#define HAS_READV\t\t/ **/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_RECVMSG\t\t/ **/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n/*#define\tHAS_SBRK_PROTO\t/ **/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n/*#define HAS_SCALBNL\t\t/ **/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_SENDMSG\t\t/ **/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n/*#define HAS_SETITIMER\t\t/ **/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n/*#define HAS_SETPROCTITLE\t\t/ **/\n\n/* HAS_SIGNBIT:\n *\tThis symbol, if defined, indicates that the signbit routine is\n *\tavailable to check if the given number has the sign bit set.\n *\tThis should include correct testing of -0.0.  This will only be set\n *\tif the signbit() routine is safe to use with the NV type used internally\n *\tin perl.  Users should call Perl_signbit(), which will be #defined to\n *\tthe system's signbit() function or macro if this symbol is defined.\n */\n/*#define HAS_SIGNBIT\t\t/ **/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n/*#define HAS_SIGPROCMASK\t\t/ **/\n\n/* USE_SITECUSTOMIZE:\n *\tThis symbol, if defined, indicates that sitecustomize should\n *\tbe used.\n */\n#ifndef USE_SITECUSTOMIZE\n/*#define\tUSE_SITECUSTOMIZE\t\t/ **/\n#endif\n\n/* HAS_SNPRINTF:\n *\tThis symbol, if defined, indicates that the snprintf () library\n *\tfunction is available for use.\n */\n/* HAS_VSNPRINTF:\n *\tThis symbol, if defined, indicates that the vsnprintf () library\n *\tfunction is available for use.\n */\n#define HAS_SNPRINTF\t/**/\n#define HAS_VSNPRINTF\t/**/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n/*#define HAS_SOCKATMARK\t\t/ **/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n/*#define\tHAS_SOCKATMARK_PROTO\t/ **/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n/*#define HAS_SOCKS5_INIT\t\t/ **/\n\n/* SPRINTF_RETURNS_STRLEN:\n *\tThis variable defines whether sprintf returns the length of the string\n *\t(as per the ANSI spec). Some C libraries retain compatibility with\n *\tpre-ANSI C and return a pointer to the passed in buffer; for these\n *\tthis variable will be undef.\n */\n#define SPRINTF_RETURNS_STRLEN\t/**/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n/*#define HAS_SQRTL\t\t/ **/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESGID_PROTO\t/ **/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESUID_PROTO\t/ **/\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n/*#define HAS_STRUCT_STATFS_F_FLAGS\t\t/ **/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_STATFS\t/ **/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATVFS\t\t/ **/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n#define HAS_STRFTIME\t\t/**/\n\n/* HAS_STRLCAT:\n *\tThis symbol, if defined, indicates that the strlcat () routine is\n *\tavailable to do string concatenation.\n */\n/*#define HAS_STRLCAT\t\t/ **/\n\n/* HAS_STRLCPY:\n *\tThis symbol, if defined, indicates that the strlcpy () routine is\n *\tavailable to do string copying.\n */\n/*#define HAS_STRLCPY\t\t/ **/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD\t\t/ **/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n/*#define HAS_STRTOLL\t\t/ **/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n/*#define HAS_STRTOQ\t\t/ **/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n/*#define HAS_STRTOULL\t\t/ **/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n/*#define HAS_STRTOUQ\t\t/ **/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n/*#define\tHAS_SYSCALL_PROTO\t/ **/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n#define\tHAS_TELLDIR_PROTO\t/**/\n\n/* HAS_CTIME64:\n *\tThis symbol, if defined, indicates that the ctime64 () routine is\n *\tavailable to do the 64bit variant of ctime ()\n */\n/* HAS_LOCALTIME64:\n *\tThis symbol, if defined, indicates that the localtime64 () routine is\n *\tavailable to do the 64bit variant of localtime ()\n */\n/* HAS_GMTIME64:\n *\tThis symbol, if defined, indicates that the gmtime64 () routine is\n *\tavailable to do the 64bit variant of gmtime ()\n */\n/* HAS_MKTIME64:\n *\tThis symbol, if defined, indicates that the mktime64 () routine is\n *\tavailable to do the 64bit variant of mktime ()\n */\n/* HAS_DIFFTIME64:\n *\tThis symbol, if defined, indicates that the difftime64 () routine is\n *\tavailable to do the 64bit variant of difftime ()\n */\n/* HAS_ASCTIME64:\n *\tThis symbol, if defined, indicates that the asctime64 () routine is\n *\tavailable to do the 64bit variant of asctime ()\n */\n/*#define\tHAS_CTIME64\t\t/ **/\n/*#define\tHAS_LOCALTIME64\t\t/ **/\n/*#define\tHAS_GMTIME64\t\t/ **/\n/*#define\tHAS_MKTIME64\t\t/ **/\n/*#define\tHAS_DIFFTIME64\t\t/ **/\n/*#define\tHAS_ASCTIME64\t\t/ **/\n\n/* HAS_TIMEGM:\n *\tThis symbol, if defined, indicates that the timegm routine is\n *\tavailable to do the opposite of gmtime ()\n */\n/*#define HAS_TIMEGM\t\t/ **/\n\n/* HAS_TRUNCL:\n *\tThis symbol, if defined, indicates that the truncl routine is\n *\tavailable. If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_TRUNCL\t\t/ **/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n#ifndef U32_ALIGNMENT_REQUIRED\n#define U32_ALIGNMENT_REQUIRED\t/**/\n#endif\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n/*#define HAS_UALARM\t\t/ **/\n\n/* HAS_UNORDERED:\n *\tThis symbol, if defined, indicates that the unordered routine is\n *\tavailable to check whether two doubles are unordered\n *\t(effectively: whether either of them is NaN)\n */\n/*#define HAS_UNORDERED\t\t/ **/\n\n/* HAS_UNSETENV:\n *\tThis symbol, if defined, indicates that the unsetenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_UNSETENV\t\t/ **/\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n/*#define\tHAS_USLEEP_PROTO\t/ **/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n/*#define HAS_USTAT\t\t/ **/\n\n/* HAS_WCSCMP:\n *\tThis symbol, if defined, indicates that the wcscmp routine is\n *\tavailable to compare two wide character strings.\n */\n#define HAS_WCSCMP\t/**/\n\n/* HAS_WCSXFRM:\n *\tThis symbol, if defined, indicates that the wcsxfrm routine is\n *\tavailable to tranform a wide character string for wcscmp().\n */\n#define HAS_WCSXFRM\t/**/\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n/*#define HAS_WRITEV\t\t/ **/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n#define USE_DYNAMIC_LOADING\t\t/**/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) correctly\n *\tflushes all pending stdio output without side effects. In\n *\tparticular, on some platforms calling fflush(NULL) *still*\n *\tcorrupts STDIN if it is a pipe.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n#define\tFFLUSH_NULL \t\t/**/\n/*#define\tFFLUSH_ALL \t\t/ **/\n\n/* I_ASSERT:\n *\tThis symbol, if defined, indicates that <assert.h> exists and\n *\tcould be included by the C program to get the assert() macro.\n */\n#define\tI_ASSERT\t\t/**/\n\n/* I_BFD:\n *\tThis symbol, if defined, indicates that <bfd.h> exists and\n *\tcan be included.\n */\n/*#define\tI_BFD\t\t/ **/\n\n/* I_CRYPT:\n *\tThis symbol, if defined, indicates that <crypt.h> exists and\n *\tshould be included.\n */\n/*#define\tI_CRYPT\t\t/ **/\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\tint\t\t/**/\n#define DB_Prefix_t\tint  \t/**/\n#define DB_VERSION_MAJOR_CFG\t0  \t/**/\n#define DB_VERSION_MINOR_CFG\t0  \t/**/\n#define DB_VERSION_PATCH_CFG\t0  \t/**/\n\n/* I_FENV:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <fenv.h> to get the floating point environment definitions.\n */\n/*#define I_FENV\t\t/ **/\n\n/* I_FP:\n *\tThis symbol, if defined, indicates that <fp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP\t\t/ **/\n\n/* I_FP_CLASS:\n *\tThis symbol, if defined, indicates that <fp_class.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP_CLASS\t\t/ **/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_IEEEFP\t\t/ **/\n\n/* I_INTTYPES:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <inttypes.h>.\n */\n/*#define   I_INTTYPES                / **/\n\n/* I_LANGINFO:\n *\tThis symbol, if defined, indicates that <langinfo.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LANGINFO\t\t/ **/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LIBUTIL\t\t/ **/\n\n/* I_MALLOCMALLOC:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <malloc/malloc.h>.\n */\n/*#define I_MALLOCMALLOC\t\t/ **/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n/*#define\tI_MNTENT\t\t/ **/\n\n/* I_NETINET_TCP:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <netinet/tcp.h>.\n */\n/*#define   I_NETINET_TCP                / **/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included. (see also HAS_POLL)\n */\n/*#define\tI_POLL\t\t/ **/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n/*#define\tI_PROT\t\t/ **/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SHADOW\t\t/ **/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SOCKS\t\t/ **/\n\n/* I_STDBOOL:\n *\tThis symbol, if defined, indicates that <stdbool.h> exists and\n *\tcan be included.\n */\n/*#define\tI_STDBOOL\t\t/ **/\n\n/* I_STDINT:\n *\tThis symbol, if defined, indicates that <stdint.h> exists and\n *\tshould be included.\n */\n/*#define I_STDINT\t\t/ **/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SUNMATH\t\t/ **/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSLOG\t\t/ **/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSMODE\t\t/ **/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_MOUNT\t\t/ **/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n/*#define\tI_SYS_STATFS\t\t/ **/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_STATVFS\t\t/ **/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUTSNAME\t\t/ **/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_VFS\t\t/ **/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n/*#define\tI_USTAT\t\t/ **/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n/*#define PERL_PRIfldbl\t\"f\"\t/ **/\n/*#define PERL_PRIgldbl\t\"g\"\t/ **/\n/*#define PERL_PRIeldbl\t\"e\"\t/ **/\n/*#define PERL_SCNfldbl\t\"f\"\t/ **/\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n/*#define\tNEED_VA_COPY\t\t/ **/\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n/* NV_OVERFLOWS_INTEGERS_AT:\n *\tThis symbol gives the largest integer value that NVs can hold. This\n *\tvalue + 1.0 cannot be stored accurately. It is expressed as constant\n *\tfloating point expression to reduce the chance of decimal/binary\n *\tconversion issues. If it can not be determined, the value 0 is given.\n */\n/* NV_ZERO_IS_ALLBITS_ZERO:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tstores 0.0 in memory as all bits zero.\n */\n#define\tIVTYPE\t\tlong\t\t/**/\n#define\tUVTYPE\t\tunsigned long\t\t/**/\n#define\tI8TYPE\t\tchar\t\t/**/\n#define\tU8TYPE\t\tunsigned char\t\t/**/\n#define\tI16TYPE\t\tshort\t/**/\n#define\tU16TYPE\t\tunsigned short\t/**/\n#define\tI32TYPE\t\tlong\t/**/\n#define\tU32TYPE\t\tunsigned long\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\t__int64\t/**/\n#define\tU64TYPE\t\tunsigned __int64\t/**/\n#endif\n#define\tNVTYPE\t\tdouble\t\t/**/\n#define\tIVSIZE\t\t4\t\t/**/\n#define\tUVSIZE\t\t4\t\t/**/\n#define\tI8SIZE\t\t1\t\t/**/\n#define\tU8SIZE\t\t1\t\t/**/\n#define\tI16SIZE\t\t2\t/**/\n#define\tU16SIZE\t\t2\t/**/\n#define\tI32SIZE\t\t4\t/**/\n#define\tU32SIZE\t\t4\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t8\t/**/\n#define\tU64SIZE\t\t8\t/**/\n#endif\n#define\tNVSIZE\t\t8\t\t/**/\n#define\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\t32\n#define\tNV_OVERFLOWS_INTEGERS_AT\t256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0\n#define\tNV_ZERO_IS_ALLBITS_ZERO\n#if UVSIZE == 8\n#   ifdef BYTEORDER\n#       if BYTEORDER == 0x1234\n#           undef BYTEORDER\n#           define BYTEORDER 0x12345678\n#       else\n#           if BYTEORDER == 0x4321\n#               undef BYTEORDER\n#               define BYTEORDER 0x87654321\n#           endif\n#       endif\n#   endif\n#endif\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t\"ld\"\t\t/**/\n#define\tUVuf\t\t\"lu\"\t\t/**/\n#define\tUVof\t\t\"lo\"\t\t/**/\n#define\tUVxf\t\t\"lx\"\t\t/**/\n#define\tUVXf\t\t\"lX\"\t\t/**/\n#define\tNVef\t\t\"e\"\t\t/**/\n#define\tNVff\t\t\"f\"\t\t/**/\n#define\tNVgf\t\t\"g\"\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS \t32\t/**/\n\n/* ST_INO_SIZE:\n *\tThis variable contains the size of struct stat's st_ino in bytes.\n */\n/* ST_INO_SIGN:\n *\tThis symbol holds the signedness of struct stat's st_ino.\n *\t1 for unsigned, -1 for signed.\n */\n#define ST_INO_SIGN 1\t/* st_ino sign */\n#define ST_INO_SIZE 4\t/* st_ino size */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"#!perl\"\t\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n/*#define\tHAS_STDIO_STREAM_ARRAY\t/ **/\n#ifdef HAS_STDIO_STREAM_ARRAY\n#define STDIO_STREAM_ARRAY\t\n#endif\n\n/* GMTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* GMTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n#define GMTIME_MAX\t\t2147483647\t/**/\n#define GMTIME_MIN\t\t0\t/**/\n#define LOCALTIME_MAX\t2147483647\t/**/\n#define LOCALTIME_MIN\t0\t/**/\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n/*#define\tUSE_64_BIT_INT\t\t/ **/\n#endif\n#ifndef USE_64_BIT_ALL\n/*#define\tUSE_64_BIT_ALL\t\t/ **/\n#endif\n\n/* USE_CBACKTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for backtrace.\n */\n/*#define USE_CBACKTRACE\t\t/ **/\n\n/* USE_DTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for DTrace.\n */\n/*#define USE_DTRACE\t\t/ **/\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n/*#define\tUSE_FAST_STDIO\t\t/ **/\n#endif\n\n/* USE_KERN_PROC_PATHNAME:\n *\tThis symbol, if defined, indicates that we can use sysctl with\n *\tKERN_PROC_PATHNAME to get a full path for the executable, and hence\n * \tconvert $^X to an absolute path.\n */\n/*#define USE_KERN_PROC_PATHNAME\t/ **/\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n/*#define\tUSE_LARGE_FILES\t\t/ **/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n/*#define\tUSE_LONG_DOUBLE\t\t/ **/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n/*#define\tUSE_MORE_BITS\t\t/ **/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n/*#define\tMULTIPLICITY\t\t/ **/\n#endif\n\n/* USE_NSGETEXECUTABLEPATH:\n *\tThis symbol, if defined, indicates that we can use _NSGetExecutablePath\n *\tand realpath to get a full path for the executable, and hence convert\n *\t$^X to an absolute path.\n */\n/*#define USE_NSGETEXECUTABLEPATH\t/ **/\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n#define\tUSE_PERLIO\t\t/**/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n/*#define\tUSE_SOCKS\t\t/ **/\n#endif\n\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/win32/config_H.ce": "/*\n * This file was produced by running the config_h.SH script, which\n * gets its values from undef, which is generally produced by\n * running Configure.\n *\n * Feel free to modify any of this as the need arises.  Note, however,\n * that running config_h.SH again will wipe out any changes you've made.\n * For a more permanent change edit undef and rerun config_h.SH.\n *\n * $Id: Config_h.U,v 3.0.1.5 1997/02/28 14:57:43 ram Exp $\n */\n\n/*\n * Package name      : perl5\n * Source directory  :\n * Configuration time: Thu Nov 10 20:47:18 2005\n * Configured by     : vkon\n * Target system     :\n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"\"\t/**/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n/*#define HAS_ALARM\t\t/**/\n\n/* HAS_BCMP:\n *\tThis symbol is defined if the bcmp() routine is available to\n *\tcompare blocks of memory.\n */\n/*#define HAS_BCMP\t/**/\n\n/* HAS_BCOPY:\n *\tThis symbol is defined if the bcopy() routine is available to\n *\tcopy blocks of memory.\n */\n/*#define HAS_BCOPY\t/**/\n\n/* HAS_BZERO:\n *\tThis symbol is defined if the bzero() routine is available to\n *\tset a memory block to 0.\n */\n/*#define HAS_BZERO\t/**/\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n/*#define HAS_CHOWN\t\t/**/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n/*#define HAS_CHROOT\t\t/**/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n#define\tHAS_CHSIZE\t\t/**/\n\n/* HASCONST:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe const type. There is no need to actually test for that symbol\n *\twithin your programs. The mere use of the \"const\" keyword will\n *\ttrigger the necessary tests.\n */\n#define HASCONST\t/**/\n#ifndef HASCONST\n#define const\n#endif\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n/*#define HAS_CUSERID\t\t/**/\n\n/* HAS_DBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol DBL_DIG, which is the number\n *\tof significant digits in a double precision number.  If this\n *\tsymbol is not defined, a guess of 15 is usually pretty good.\n */\n#define HAS_DBL_DIG \t/**/\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n#define HAS_DIFFTIME\t\t/**/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n#define HAS_DLERROR\t/**/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n#define HAS_DUP2\t/**/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n/*#define HAS_FCHMOD\t\t/**/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n/*#define HAS_FCHOWN\t\t/**/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n/*#define HAS_FCNTL\t\t/**/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n#define HAS_FGETPOS\t/**/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_FLOCK\t\t/**/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n/*#define HAS_FORK\t\t/**/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n#define HAS_FSETPOS\t/**/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n/*#define HAS_GETTIMEOFDAY\t/**/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_GETGROUPS\t\t/**/\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n#define HAS_GETLOGIN\t\t/**/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n/*#define HAS_GETPGID\t\t/**/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n/*#define HAS_GETPGRP2\t\t/**/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n/*#define HAS_GETPPID\t\t/**/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n/*#define HAS_GETPRIORITY\t\t/**/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n/*#define HAS_INET_ATON\t\t/**/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n/*#define HAS_KILLPG\t/**/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n#define HAS_LINK\t/**/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n/*#define HAS_LOCALECONV\t/**/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_LOCKF\t\t/**/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n/*#define HAS_LSTAT\t\t/**/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n#define HAS_MBLEN\t\t/**/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to covert a multibyte string into a wide character string.\n */\n#define\tHAS_MBSTOWCS\t\t/**/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto covert a multibyte to a wide character.\n */\n#define HAS_MBTOWC\t\t/**/\n\n/* HAS_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tto compare blocks of memory.\n */\n#define HAS_MEMCMP\t/**/\n\n/* HAS_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy blocks of memory.\n */\n#define HAS_MEMCPY\t/**/\n\n/* HAS_MEMMOVE:\n *\tThis symbol, if defined, indicates that the memmove routine is available\n *\tto copy potentially overlapping blocks of memory. This should be used\n *\tonly when HAS_SAFE_BCOPY is not defined. If neither is there, roll your\n *\town version.\n */\n#define HAS_MEMMOVE\t/**/\n\n/* HAS_MEMSET:\n *\tThis symbol, if defined, indicates that the memset routine is available\n *\tto set blocks of memory.\n */\n#define HAS_MEMSET\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n#define HAS_MKDIR\t\t/**/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n/*#define HAS_MKFIFO\t\t/**/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n#define HAS_MKTIME\t\t/**/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n/*#define HAS_MSYNC\t\t/**/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n/*#define HAS_MUNMAP\t\t/**/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n/*#define HAS_NICE\t\t/**/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n/*#define HAS_PATHCONF\t\t/**/\n/*#define HAS_FPATHCONF\t\t/**/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n#define HAS_PAUSE\t\t/**/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n/*#define HAS_PIPE\t\t/**/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors. You may safely\n *\tinclude <poll.h> when this symbol is defined.\n */\n/*#define HAS_POLL\t\t/**/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#define HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_SEEKDIR\t\t/**/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_TELLDIR\t\t/**/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_REWINDDIR\t\t/**/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n/*#define HAS_READLINK\t\t/**/\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#define HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n#define HAS_RMDIR\t\t/**/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n#define HAS_SELECT\t/**/\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n/*#define HAS_SETEGID\t\t/**/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n/*#define HAS_SETEUID\t\t/**/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n/*#define HAS_SETLINEBUF\t\t/**/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n#define HAS_SETLOCALE\t/**/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n/*#define HAS_SETPGID\t/**/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n/*#define HAS_SETPGRP2\t\t/**/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n/*#define HAS_SETPRIORITY\t\t/**/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n/*#define HAS_SETREGID\t\t/**/\n/*#define HAS_SETRESGID\t\t/**/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n/*#define HAS_SETREUID\t\t/**/\n/*#define HAS_SETRESUID\t\t/**/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n/*#define HAS_SETRGID\t\t/**/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n/*#define HAS_SETRUID\t\t/**/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n/*#define HAS_SETSID\t/**/\n\n/* HAS_STRCHR:\n *\tThis symbol is defined to indicate that the strchr()/strrchr()\n *\tfunctions are available for string searching. If not, try the\n *\tindex()/rindex() pair.\n */\n/* HAS_INDEX:\n *\tThis symbol is defined to indicate that the index()/rindex()\n *\tfunctions are available for string searching.\n */\n#define HAS_STRCHR\t/**/\n/*#define HAS_INDEX\t/**/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n#define HAS_STRCOLL\t/**/\n\n/* USE_STRUCT_COPY:\n *\tThis symbol, if defined, indicates that this C compiler knows how\n *\tto copy structures.  If undefined, you'll need to use a block copy\n *\troutine of some sort instead.\n */\n#define\tUSE_STRUCT_COPY\t/**/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n#define HAS_STRTOD\t/**/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#define HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n/*#define HAS_STRXFRM\t/**/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n/*#define HAS_SYMLINK\t/**/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n/*#define HAS_SYSCALL\t/**/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n/*#define HAS_SYSCONF\t/**/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n#define HAS_SYSTEM\t/**/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n/*#define HAS_TCGETPGRP\t\t/**/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n/*#define HAS_TCSETPGRP\t\t/**/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n/*#define HAS_TRUNCATE\t/**/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n#define HAS_TZNAME\t\t/**/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n#define HAS_UMASK\t\t/**/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n/*#define HAS_USLEEP\t\t/**/\n\n/* HASVOLATILE:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe volatile declaration.\n */\n#define\tHASVOLATILE\t/**/\n#ifndef HASVOLATILE\n#define volatile\n#endif\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n/*#define HAS_WAIT4\t/**/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n#define HAS_WAITPID\t/**/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n#define HAS_WCSTOMBS\t/**/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto covert a wide character to a multibyte.\n */\n#define HAS_WCTOMB\t\t/**/\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n#define\tI_ARPA_INET\t\t/**/\n\n/* I_ASSERT:\n *\tThis symbol, if defined, indicates to the C program that it could\n *\tinclude <assert.h> to get the assert() macro.\n */\n#define\tI_ASSERT\t\t/**/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n/*#define I_DBM\t/**/\n/*#define I_RPCSVC_DBM\t/ **/\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#define I_DIRENT\t\t/**/\n#define DIRNAMLEN\t/**/\n#define Direntry_t struct direct\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n#define I_DLFCN\t\t/**/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n#define I_FCNTL\t/**/\n\n/* I_FLOAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <float.h> to get definition of symbols like DBL_MAX or\n *\tDBL_MIN, i.e. machine dependent floating point values.\n */\n#define I_FLOAT\t\t/**/\n\n/* I_LIMITS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <limits.h> to get definition of symbols like WORD_BIT or\n *\tLONG_MAX, i.e. machine dependant limitations.\n */\n#define I_LIMITS\t\t/**/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n/*#define\tI_LOCALE\t\t/**/\n\n/* I_MATH:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <math.h>.\n */\n#define I_MATH\t\t/**/\n\n/* I_MEMORY:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <memory.h>.\n */\n/*#define I_MEMORY\t\t/**/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and\n *\tshould be included.\n */\n/*#define I_NET_ERRNO\t\t/**/\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n/*#define I_NETINET_IN\t/**/\n\n/* I_STDDEF:\n *\tThis symbol, if defined, indicates that <stddef.h> exists and should\n *\tbe included.\n */\n#define I_STDDEF\t/**/\n\n/* I_STDLIB:\n *\tThis symbol, if defined, indicates that <stdlib.h> exists and should\n *\tbe included.\n */\n#define I_STDLIB\t\t/**/\n\n/* I_STRING:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <string.h> (USG systems) instead of <strings.h> (BSD systems).\n */\n#define I_STRING\t\t/**/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n/*#define I_SYS_DIR\t\t/**/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n/*#define I_SYS_FILE\t\t/**/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n/*#define\tI_SYS_IOCTL\t\t/**/\n/*#define I_SYS_SOCKIO\t/**/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n/*#define I_SYS_NDIR\t/**/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n/*#define I_SYS_PARAM\t\t/**/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n/*#define I_SYS_RESOURCE\t\t/**/\n\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n/*#define I_SYS_SELECT\t/**/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#define\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n/*#define\tI_SYS_TIMES\t\t/**/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n/*#define\tI_SYS_TYPES\t\t/**/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n/*#define I_SYS_UN\t\t/**/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n/*#define I_SYS_WAIT\t/**/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/*#define I_TERMIO\t\t/**/\n/*#define I_TERMIOS\t\t/**/\n/*#define I_SGTTY\t\t/**/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n/*#define I_UNISTD\t\t/**/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n#define I_UTIME\t\t/**/\n\n/* I_VALUES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <values.h> to get definition of symbols like MINFLOAT or\n *\tMAXLONG, i.e. machine dependant limitations.  Probably, you\n *\tshould use <limits.h> instead, if it is available.\n */\n/*#define I_VALUES\t\t/**/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n/*#define I_VFORK\t/**/\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_ACCESSX\t\t/**/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_EACCESS\t\t/**/\n\n/* I_SYS_ACCESS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/access.h>.\n */\n/*#define   I_SYS_ACCESS                /**/\n\n/* I_SYS_SECURITY:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/security.h>.\n */\n/*#define   I_SYS_SECURITY\t/**/\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"MSWin32\"\t\t/**/\n#define OSVERS \"4.0\"\t\t/**/\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n#define\tUSE_CROSS_COMPILE\t/**/\n#define\tPERL_TARGETARCH\t\"wince\"\t/**/\n#endif\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n/*#define MULTIARCH\t\t/**/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.\n */\n#if defined(MULTIARCH)\n#  define MEM_ALIGNBYTES 8\n#else\n#define MEM_ALIGNBYTES 8\n#endif\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for perl5.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define ARCHLIB \"\\\\Storage Card\\\\perl58m\\\\lib\"\t\t/**/\n/*#define ARCHLIB_EXP \"\"\t/**/\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"MS Pocket PC-WCE300-ARM\"\t\t/**/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n/*#define HAS_ATOLF\t\t/**/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n/*#define HAS_ATOLL\t\t/**/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n#define BIN \"\\\\Storage Card\\\\perl58m\\\\bin\"\t/**/\n#define BIN_EXP \"\\\\Storage Card\\\\perl58m\\\\bin\"\t/**/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE 4\t\t/**/\n#define LONGSIZE 4\t\t/**/\n#define SHORTSIZE 2\t\t/**/\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\tin a UV, i.e. 0x1234 or 0x4321 or 0x12345678, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries (eg. on NeXT systems), use compiler-defined macros to\n *\tdetermine the byte order.\n *\tOn NeXT 3.2 (and greater), you can build \"Fat\" Multiple Architecture\n *\tBinaries (MAB) on either big endian or little endian machines.\n *\tThe endian-ness is available at compile-time.  This only matters\n *\tfor perl, where the config.h can be generated and installed on\n *\tone system, and used by a different architecture to build an\n *\textension.  Older versions of NeXT that might not have\n *\tdefined either *_ENDIAN__ were all on Motorola 680x0 series,\n *\tso the default case (for NeXT) is big endian to catch them.\n *\tThis might matter for NeXT 3.0.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#  if !defined(BYTEORDER) && (defined(NeXT) || defined(__NeXT__))\n#    define BYTEORDER 0x4321\n#  endif\n#else\n#define BYTEORDER 0x1234\t/* large digits for MSB */\n#endif /* NeXT */\n\n/* CHARBITS:\n *\tThis symbol contains the size of a char, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define CHARBITS 8\t\t/**/\n\n/* CAT2:\n *\tThis macro concatenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if 42 == 1\n#define CAT2(a,b)\ta/**/b\n#define STRINGIFY(a)\t\"a\"\n\t\t/* If you can get stringification with catify, tell me how! */\n#endif\n#if 42 == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\n#define PeRl_StGiFy(a)\t#a\n/* the additional level of indirection enables these macros to be\n * used as arguments to other macros.  See K&R 2nd ed., page 231. */\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if 42 != 1 && 42 != 42\n#   include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.\t Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"clarm.exe -nologo -E\"\n#define CPPMINUS \"\"\n#define CPPRUN \"clarm.exe -nologo -E\"\n#define CPPLAST \"\"\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n/*#define HAS__FWALK\t\t/**/\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n#define HAS_ACCESS\t\t/**/\n\n/* HAS_ASCTIME_R:\n *\tThis symbol, if defined, indicates that the asctime_r routine\n *\tis available to asctime re-entrantly.\n */\n/* ASCTIME_R_PROTO:\n *\tThis symbol encodes the prototype of asctime_r.\n *\tIt is zero if d_asctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_asctime_r\n *\tis defined.\n */\n/*#define HAS_ASCTIME_R\t   /**/\n#define ASCTIME_R_PROTO 0\t   /**/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n/*#define\tCASTI32\t\t/**/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n#define\tCASTNEGFLOAT\t\t/**/\n#define CASTFLAGS 0\t\t/**/\n\n/* HAS_CLASS:\n *\tThis symbol, if defined, indicates that the class routine is\n *\tavailable to classify doubles.  Available for example in AIX.\n *\tThe returned values are defined in <float.h> and are:\n *\n *\tFP_PLUS_NORM\tPositive normalized, nonzero\n *\tFP_MINUS_NORM\tNegative normalized, nonzero\n *\tFP_PLUS_DENORM\tPositive denormalized, nonzero\n *\tFP_MINUS_DENORM\tNegative denormalized, nonzero\n *\tFP_PLUS_ZERO\t+0.0\n *\tFP_MINUS_ZERO\t-0.0\n *\tFP_PLUS_INF\t+INF\n *\tFP_MINUS_INF\t-INF\n *\tFP_NANS\t\tSignaling Not a Number (NaNS)\n *\tFP_NANQ\t\tQuiet Not a Number (NaNQ)\n */\n/*#define HAS_CLASS\t\t/**/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n/*#define VOID_CLOSEDIR\t\t/**/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_CMSGHDR\t/**/\n\n/* HAS_CRYPT_R:\n *\tThis symbol, if defined, indicates that the crypt_r routine\n *\tis available to crypt re-entrantly.\n */\n/* CRYPT_R_PROTO:\n *\tThis symbol encodes the prototype of crypt_r.\n *\tIt is zero if d_crypt_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_crypt_r\n *\tis defined.\n */\n/*#define HAS_CRYPT_R\t   /**/\n#define CRYPT_R_PROTO 0\t   /**/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n/*#define HAS_CSH\t\t/**/\n#ifdef HAS_CSH\n#define CSH \"\"\t/**/\n#endif\n\n/* HAS_CTIME_R:\n *\tThis symbol, if defined, indicates that the ctime_r routine\n *\tis available to ctime re-entrantly.\n */\n/* CTIME_R_PROTO:\n *\tThis symbol encodes the prototype of ctime_r.\n *\tIt is zero if d_ctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctime_r\n *\tis defined.\n */\n/*#define HAS_CTIME_R\t   /**/\n#define CTIME_R_PROTO 0\t   /**/\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n/*#define \tDLSYM_NEEDS_UNDERSCORE \t/**/\n\n/* HAS_DRAND48_R:\n *\tThis symbol, if defined, indicates that the drand48_r routine\n *\tis available to drand48 re-entrantly.\n */\n/* DRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of drand48_r.\n *\tIt is zero if d_drand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_drand48_r\n *\tis defined.\n */\n/*#define HAS_DRAND48_R\t   /**/\n#define DRAND48_R_PROTO 0\t   /**/\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n/*#define\tHAS_DRAND48_PROTO\t/**/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n/*#define HAS_ENDGRENT\t\t/**/\n\n/* HAS_ENDGRENT_R:\n *\tThis symbol, if defined, indicates that the endgrent_r routine\n *\tis available to endgrent re-entrantly.\n */\n/* ENDGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of endgrent_r.\n *\tIt is zero if d_endgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endgrent_r\n *\tis defined.\n */\n/*#define HAS_ENDGRENT_R\t   /**/\n#define ENDGRENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n/*#define HAS_ENDHOSTENT\t\t/**/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n/*#define HAS_ENDNETENT\t\t/**/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n/*#define HAS_ENDPROTOENT\t\t/**/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n/*#define HAS_ENDPWENT\t\t/**/\n\n/* HAS_ENDPWENT_R:\n *\tThis symbol, if defined, indicates that the endpwent_r routine\n *\tis available to endpwent re-entrantly.\n */\n/* ENDPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of endpwent_r.\n *\tIt is zero if d_endpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endpwent_r\n *\tis defined.\n */\n/*#define HAS_ENDPWENT_R\t   /**/\n#define ENDPWENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n/*#define HAS_ENDSERVENT\t\t/**/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n/*#define HAS_FCHDIR\t\t/**/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n/*#define FCNTL_CAN_LOCK\t\t/**/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n#define HAS_FD_SET\t/**/\n\n/* HAS_FINITE:\n *\tThis symbol, if defined, indicates that the finite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_FINITE\t\t/**/\n\n/* HAS_FINITEL:\n *\tThis symbol, if defined, indicates that the finitel routine is\n *\tavailable to check whether a long double is finite\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_FINITEL\t\t/**/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n#define\tFLEXFILENAMES\t\t/**/\n\n/* HAS_FP_CLASS:\n *\tThis symbol, if defined, indicates that the fp_class routine is\n *\tavailable to classify doubles.  Available for example in Digital UNIX.\n *\tThe returned values are defined in <math.h> and are:\n *\n *\tFP_SNAN           Signaling NaN (Not-a-Number)\n *\tFP_QNAN           Quiet NaN (Not-a-Number)\n *\tFP_POS_INF        +infinity\n *\tFP_NEG_INF        -infinity\n *\tFP_POS_NORM       Positive normalized\n *\tFP_NEG_NORM       Negative normalized\n *\tFP_POS_DENORM     Positive denormalized\n *\tFP_NEG_DENORM     Negative denormalized\n *\tFP_POS_ZERO       +0.0 (positive zero)\n *\tFP_NEG_ZERO       -0.0 (negative zero)\n */\n/*#define HAS_FP_CLASS\t\t/**/\n\n/* HAS_FPCLASS:\n *\tThis symbol, if defined, indicates that the fpclass routine is\n *\tavailable to classify doubles.  Available for example in Solaris/SVR4.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASS\t\t/**/\n\n/* HAS_FPCLASSIFY:\n *\tThis symbol, if defined, indicates that the fpclassify routine is\n *\tavailable to classify doubles.  Available for example in HP-UX.\n *\tThe returned values are defined in <math.h> and are\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/*#define HAS_FPCLASSIFY\t\t/**/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n/*#define\tHAS_FPOS64_T    \t/**/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n/*#define HAS_FREXPL\t\t/**/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_FS_DATA\t/**/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FSEEKO\t\t/**/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATFS\t\t/**/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n/*#define HAS_FSYNC\t\t/**/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FTELLO\t\t/**/\n\n/* HAS_FUTIMES:\n *\tThis symbol, if defined, indicates that the futimes routine is\n *\tavailable to change file descriptor time stamps with struct timevals.\n */\n/*#define HAS_FUTIMES\t\t/**/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tThe usual values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) sprintf((b),\"%.*g\",(n),(x))\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n#define HAS_GETCWD\t\t/**/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enchanced (shadow) password entries by name.\n */\n/*#define HAS_GETESPWNAM\t\t/**/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n/*#define HAS_GETFSSTAT\t\t/**/\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n/*#define HAS_GETGRENT\t\t/**/\n\n/* HAS_GETGRENT_R:\n *\tThis symbol, if defined, indicates that the getgrent_r routine\n *\tis available to getgrent re-entrantly.\n */\n/* GETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of getgrent_r.\n *\tIt is zero if d_getgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrent_r\n *\tis defined.\n */\n/*#define HAS_GETGRENT_R\t   /**/\n#define GETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_GETGRGID_R:\n *\tThis symbol, if defined, indicates that the getgrgid_r routine\n *\tis available to getgrgid re-entrantly.\n */\n/* GETGRGID_R_PROTO:\n *\tThis symbol encodes the prototype of getgrgid_r.\n *\tIt is zero if d_getgrgid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrgid_r\n *\tis defined.\n */\n/*#define HAS_GETGRGID_R\t   /**/\n#define GETGRGID_R_PROTO 0\t   /**/\n\n/* HAS_GETGRNAM_R:\n *\tThis symbol, if defined, indicates that the getgrnam_r routine\n *\tis available to getgrnam re-entrantly.\n */\n/* GETGRNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getgrnam_r.\n *\tIt is zero if d_getgrnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrnam_r\n *\tis defined.\n */\n/*#define HAS_GETGRNAM_R\t   /**/\n#define GETGRNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n#define HAS_GETHOSTBYADDR\t\t/**/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n#define HAS_GETHOSTBYNAME\t\t/**/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n/*#define HAS_GETHOSTENT\t\t/**/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n#define HAS_GETHOSTNAME\t/**/\n#define HAS_UNAME\t\t/**/\n/*#define HAS_PHOSTNAME\t/**/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETHOST_PROTOS\t/**/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n/*#define HAS_GETITIMER\t\t/**/\n\n/* HAS_GETLOGIN_R:\n *\tThis symbol, if defined, indicates that the getlogin_r routine\n *\tis available to getlogin re-entrantly.\n */\n/* GETLOGIN_R_PROTO:\n *\tThis symbol encodes the prototype of getlogin_r.\n *\tIt is zero if d_getlogin_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getlogin_r\n *\tis defined.\n */\n/*#define HAS_GETLOGIN_R\t   /**/\n#define GETLOGIN_R_PROTO 0\t   /**/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n/*#define HAS_GETMNT\t\t/**/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n/*#define HAS_GETMNTENT\t\t/**/\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n/*#define HAS_GETNETBYADDR\t\t/**/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n/*#define HAS_GETNETBYNAME\t\t/**/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n/*#define HAS_GETNETENT\t\t/**/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETNET_PROTOS\t/**/\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n/*#define HAS_GETPAGESIZE\t\t/**/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n/*#define HAS_GETPROTOENT\t\t/**/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n/*#define HAS_GETPGRP\t\t/**/\n/*#define USE_BSD_GETPGRP\t/**/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n#define HAS_GETPROTOBYNAME\t\t/**/\n#define HAS_GETPROTOBYNUMBER\t\t/**/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETPROTO_PROTOS\t/**/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n/*#define HAS_GETPRPWNAM\t\t/**/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n/*#define HAS_GETPWENT\t\t/**/\n\n/* HAS_GETPWENT_R:\n *\tThis symbol, if defined, indicates that the getpwent_r routine\n *\tis available to getpwent re-entrantly.\n */\n/* GETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of getpwent_r.\n *\tIt is zero if d_getpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwent_r\n *\tis defined.\n */\n/*#define HAS_GETPWENT_R\t   /**/\n#define GETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPWNAM_R:\n *\tThis symbol, if defined, indicates that the getpwnam_r routine\n *\tis available to getpwnam re-entrantly.\n */\n/* GETPWNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getpwnam_r.\n *\tIt is zero if d_getpwnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwnam_r\n *\tis defined.\n */\n/*#define HAS_GETPWNAM_R\t   /**/\n#define GETPWNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETPWUID_R:\n *\tThis symbol, if defined, indicates that the getpwuid_r routine\n *\tis available to getpwuid re-entrantly.\n */\n/* GETPWUID_R_PROTO:\n *\tThis symbol encodes the prototype of getpwuid_r.\n *\tIt is zero if d_getpwuid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwuid_r\n *\tis defined.\n */\n/*#define HAS_GETPWUID_R\t   /**/\n#define GETPWUID_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n/*#define HAS_GETSERVENT\t\t/**/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETSERV_PROTOS\t/**/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n/*#define HAS_GETSPNAM\t\t/**/\n\n/* HAS_GETSPNAM_R:\n *\tThis symbol, if defined, indicates that the getspnam_r routine\n *\tis available to getspnam re-entrantly.\n */\n/* GETSPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getspnam_r.\n *\tIt is zero if d_getspnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getspnam_r\n *\tis defined.\n */\n/*#define HAS_GETSPNAM_R\t   /**/\n#define GETSPNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n#define HAS_GETSERVBYNAME\t\t/**/\n#define HAS_GETSERVBYPORT\t\t/**/\n\n/* HAS_GMTIME_R:\n *\tThis symbol, if defined, indicates that the gmtime_r routine\n *\tis available to gmtime re-entrantly.\n */\n/* GMTIME_R_PROTO:\n *\tThis symbol encodes the prototype of gmtime_r.\n *\tIt is zero if d_gmtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gmtime_r\n *\tis defined.\n */\n/*#define HAS_GMTIME_R\t   /**/\n#define GMTIME_R_PROTO 0\t   /**/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n/*#define HAS_GNULIBC  \t/**/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n/*#define HAS_HASMNTOPT\t\t/**/\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n#define HAS_HTONL\t\t/**/\n#define HAS_HTONS\t\t/**/\n#define HAS_NTOHL\t\t/**/\n#define HAS_NTOHS\t\t/**/\n\n/* HAS_INT64_T:\n *     This symbol will defined if the C compiler supports int64_t.\n *     Usually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n/*#define     HAS_INT64_T               /**/\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii\n *\tis available.\n */\n#define HAS_ISASCII\t\t/**/\n\n/* HAS_ISFINITE:\n *\tThis symbol, if defined, indicates that the isfinite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_ISFINITE\t\t/**/\n\n/* HAS_ISINF:\n *\tThis symbol, if defined, indicates that the isinf routine is\n *\tavailable to check whether a double is an infinity.\n */\n/*#define HAS_ISINF\t\t/**/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n#define HAS_ISNAN\t\t/**/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n/*#define HAS_ISNANL\t\t/**/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n/*#define HAS_LCHOWN\t\t/**/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n#define HAS_LDBL_DIG \t/**/\n\n/* HAS_LOCALTIME_R:\n *\tThis symbol, if defined, indicates that the localtime_r routine\n *\tis available to localtime re-entrantly.\n */\n/* LOCALTIME_R_NEEDS_TZSET:\n *\tMany libc's localtime_r implementations do not call tzset,\n *\tmaking them differ from localtime(), and making timezone\n *\tchanges using \\undef{TZ} without explicitly calling tzset\n *\timpossible. This symbol makes us call tzset before localtime_r\n */\n/*#define LOCALTIME_R_NEEDS_TZSET /**/\n#ifdef LOCALTIME_R_NEEDS_TZSET\n#define L_R_TZSET tzset(),\n#else\n#define L_R_TZSET\n#endif\n\n/* LOCALTIME_R_PROTO:\n *\tThis symbol encodes the prototype of localtime_r.\n *\tIt is zero if d_localtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_localtime_r\n *\tis defined.\n */\n/*#define HAS_LOCALTIME_R\t   /**/\n#define LOCALTIME_R_PROTO 0\t   /**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.\n */\n/*#define HAS_LONG_DOUBLE\t\t/**/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE 10\t\t/**/\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n/*#define HAS_LONG_LONG\t\t/**/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE 8\t\t/**/\n#endif\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n#define\tHAS_LSEEK_PROTO\t/**/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n/*#define HAS_MADVISE\t\t/**/\n\n/* HAS_MALLOC_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_SIZE\t\t/**/\n\n/* HAS_MALLOC_GOOD_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_good_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_GOOD_SIZE\t/**/\n\n/* HAS_MEMCHR:\n *\tThis symbol, if defined, indicates that the memchr routine is available\n *\tto locate characters within a C string.\n */\n#define HAS_MEMCHR\t/**/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n/*#define HAS_MKDTEMP\t\t/**/\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n/*#define HAS_MKSTEMP\t\t/**/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to excluslvely create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n/*#define HAS_MKSTEMPS\t\t/**/\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'cadd_t'.\n */\n/*#define HAS_MMAP\t\t/**/\n#define Mmap_t void *\t/**/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/* HAS_MODFL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the modfl() function.  Otherwise, it is up\n *\tto the program to supply one.\n */\n/* HAS_MODFL_POW32_BUG:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tbroken for long doubles >= pow(2, 32).\n *\tFor example from 4294967303.150000 one would get 4294967302.000000\n *\tand 1.150000.  The bug has been seen in certain versions of glibc,\n *\trelease 2.2.2 is known to be okay.\n */\n/*#define HAS_MODFL\t\t/**/\n/*#define HAS_MODFL_PROTO\t\t/**/\n/*#define HAS_MODFL_POW32_BUG\t\t/**/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n/*#define HAS_MPROTECT\t\t/**/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n/*#define HAS_MSG\t\t/**/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_MSGHDR\t/**/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n/*#define\tHAS_OFF64_T    \t\t/**/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n/*#define HAS_OPEN3\t\t/**/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n/*#define OLD_PTHREAD_CREATE_JOINABLE  /**/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/*#define HAS_PTHREAD_YIELD\t/**/\n#define SCHED_YIELD\t\t/**/\n/*#define HAS_SCHED_YIELD\t/**/\n\n/* HAS_RANDOM_R:\n *\tThis symbol, if defined, indicates that the random_r routine\n *\tis available to random re-entrantly.\n */\n/* RANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of random_r.\n *\tIt is zero if d_random_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r\n *\tis defined.\n */\n/*#define HAS_RANDOM_R\t   /**/\n#define RANDOM_R_PROTO 0\t   /**/\n\n/* HAS_READDIR_R:\n *\tThis symbol, if defined, indicates that the readdir_r routine\n *\tis available to readdir re-entrantly.\n */\n/* READDIR_R_PROTO:\n *\tThis symbol encodes the prototype of readdir_r.\n *\tIt is zero if d_readdir_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir_r\n *\tis defined.\n */\n/*#define HAS_READDIR_R\t   /**/\n#define READDIR_R_PROTO 0\t   /**/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n/*#define HAS_READV\t\t/**/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_RECVMSG\t\t/**/\n\n/* HAS_SAFE_BCOPY:\n *\tThis symbol, if defined, indicates that the bcopy routine is available\n *\tto copy potentially overlapping memory blocks. Normally, you should\n *\tprobably use memmove() or memcpy(). If neither is defined, roll your\n *\town version.\n */\n/*#define HAS_SAFE_BCOPY\t/**/\n\n/* HAS_SAFE_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy potentially overlapping memory blocks.  If you need to\n *\tcopy overlapping memory blocks, you should check HAS_MEMMOVE and\n *\tuse memmove() instead, if available.\n */\n/*#define HAS_SAFE_MEMCPY\t/**/\n\n/* HAS_SANE_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tand can be used to compare relative magnitudes of chars with their high\n *\tbits set.  If it is not defined, roll your own version.\n */\n#define HAS_SANE_MEMCMP\t/**/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n/*#define\tHAS_SBRK_PROTO\t/**/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n/*#define HAS_SEM\t\t/**/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_SENDMSG\t\t/**/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n/*#define HAS_SETGRENT\t\t/**/\n\n/* HAS_SETGRENT_R:\n *\tThis symbol, if defined, indicates that the setgrent_r routine\n *\tis available to setgrent re-entrantly.\n */\n/* SETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of setgrent_r.\n *\tIt is zero if d_setgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setgrent_r\n *\tis defined.\n */\n/*#define HAS_SETGRENT_R\t   /**/\n#define SETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_SETGROUPS\t\t/**/\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n/*#define HAS_SETHOSTENT\t\t/**/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n/*#define HAS_SETITIMER\t\t/**/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n/*#define HAS_SETNETENT\t\t/**/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n/*#define HAS_SETPROTOENT\t\t/**/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n/*#define HAS_SETPGRP\t\t/**/\n/*#define USE_BSD_SETPGRP\t/**/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n/*#define HAS_SETPROCTITLE\t\t/**/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n/*#define HAS_SETPWENT\t\t/**/\n\n/* HAS_SETPWENT_R:\n *\tThis symbol, if defined, indicates that the setpwent_r routine\n *\tis available to setpwent re-entrantly.\n */\n/* SETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of setpwent_r.\n *\tIt is zero if d_setpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setpwent_r\n *\tis defined.\n */\n/*#define HAS_SETPWENT_R\t   /**/\n#define SETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n/*#define HAS_SETSERVENT\t\t/**/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n/*#define HAS_SETVBUF\t\t/**/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n/*#define HAS_SHM\t\t/**/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n/*#define HAS_SIGACTION\t/**/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/*#define HAS_SIGSETJMP\t/**/\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_STATIC_INLINE:\n *\tThis symbol, if defined, indicates that the C compiler supports\n *\tC99-style static inline.  That is, the function can't be called\n *\tfrom another translation unit.\n */\n/* PERL_STATIC_INLINE:\n *\tThis symbol gives the best-guess incantation to use for static\n *\tinline functions.  If HAS_STATIC_INLINE is defined, this will\n *\tgive C99-style inline.  If HAS_STATIC_INLINE is not defined,\n *\tthis will give a plain 'static'.  It will always be defined\n *\tto something that gives static linkage.\n *\tPossibilities include\n *\t\tstatic inline       (c99)\n *\t\tstatic __inline__   (gcc -ansi)\n *\t\tstatic __inline     (MSVC)\n *\t\tstatic _inline      (older MSVC)\n *\t\tstatic              (c89 compilers)\n */\n/*#define HAS_STATIC_INLINE\t\t\t\t/ **/\n#define PERL_STATIC_INLINE static           \t/**/\n\n/* USE_SITECUSTOMIZE:\n *\tThis symbol, if defined, indicates that sitecustomize should\n *\tbe used.\n */\n/*#define\tUSE_SITECUSTOMIZE\t\t/**/\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n/* HAS_MSG_CTRUNC:\n *\tThis symbol, if defined, indicates that the MSG_CTRUNC is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_DONTROUTE:\n *\tThis symbol, if defined, indicates that the MSG_DONTROUTE is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_OOB:\n *\tThis symbol, if defined, indicates that the MSG_OOB is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PEEK:\n *\tThis symbol, if defined, indicates that the MSG_PEEK is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PROXY:\n *\tThis symbol, if defined, indicates that the MSG_PROXY is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_SCM_RIGHTS:\n *\tThis symbol, if defined, indicates that the SCM_RIGHTS is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n#define\tHAS_SOCKET\t\t/**/\n/*#define\tHAS_SOCKETPAIR\t/**/\n/*#define\tHAS_MSG_CTRUNC\t/**/\n/*#define\tHAS_MSG_DONTROUTE\t/**/\n/*#define\tHAS_MSG_OOB\t/**/\n/*#define\tHAS_MSG_PEEK\t/**/\n/*#define\tHAS_MSG_PROXY\t/**/\n/*#define\tHAS_SCM_RIGHTS\t/**/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n/*#define HAS_SOCKS5_INIT\t\t/**/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n/*#define HAS_SQRTL\t\t/**/\n\n/* HAS_SRAND48_R:\n *\tThis symbol, if defined, indicates that the srand48_r routine\n *\tis available to srand48 re-entrantly.\n */\n/* SRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of srand48_r.\n *\tIt is zero if d_srand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srand48_r\n *\tis defined.\n */\n/*#define HAS_SRAND48_R\t   /**/\n#define SRAND48_R_PROTO 0\t   /**/\n\n/* HAS_SRANDOM_R:\n *\tThis symbol, if defined, indicates that the srandom_r routine\n *\tis available to srandom re-entrantly.\n */\n/* SRANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of srandom_r.\n *\tIt is zero if d_srandom_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srandom_r\n *\tis defined.\n */\n/*#define HAS_SRANDOM_R\t   /**/\n#define SRANDOM_R_PROTO 0\t   /**/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n/*#define USE_STAT_BLOCKS \t/**/\n#endif\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n/*#define HAS_STRUCT_STATFS_F_FLAGS\t\t/**/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_STATFS\t/**/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATVFS\t\t/**/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n/*#define USE_STDIO_PTR \t/**/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\n/*#define STDIO_PTR_LVALUE \t\t/**/\n#define FILE_cnt(fp)\n/*#define STDIO_CNT_LVALUE \t\t/**/\n/*#define STDIO_PTR_LVAL_SETS_CNT\t/**/\n/*#define STDIO_PTR_LVAL_NOCHANGE_CNT\t/**/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n/*#define USE_STDIO_BASE \t/**/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\n#define FILE_bufsiz(fp)\n#endif\n\n/* HAS_STRERROR:\n *\tThis symbol, if defined, indicates that the strerror routine is\n *\tavailable to translate error numbers to strings. See the writeup\n *\tof Strerror() in this file before you try to define your own.\n */\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n/* Strerror:\n *\tThis preprocessor symbol is defined as a macro if strerror() is\n *\tnot available to translate error numbers to strings but sys_errlist[]\n *\tarray is there.\n */\n#define HAS_STRERROR\t\t/**/\n#define HAS_SYS_ERRLIST\t/**/\n#define Strerror(e) strerror(e)\n\n/* HAS_STRERROR_R:\n *\tThis symbol, if defined, indicates that the strerror_r routine\n *\tis available to strerror re-entrantly.\n */\n/* STRERROR_R_PROTO:\n *\tThis symbol encodes the prototype of strerror_r.\n *\tIt is zero if d_strerror_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_strerror_r\n *\tis defined.\n */\n/*#define HAS_STRERROR_R\t   /**/\n#define STRERROR_R_PROTO 0\t   /**/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD\t\t/**/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n/*#define HAS_STRTOLL\t\t/**/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n/*#define HAS_STRTOQ\t\t/**/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#define HAS_STRTOUL\t/**/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n/*#define HAS_STRTOULL\t\t/**/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n/*#define HAS_STRTOUQ\t\t/**/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n#define\tHAS_TELLDIR_PROTO\t/**/\n\n/* HAS_TIME:\n *\tThis symbol, if defined, indicates that the time() routine exists.\n */\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#define HAS_TIME\t\t/**/\n#define Time_t time_t\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n * use getrusage(). It may be necessary to include <sys/times.h>.\n */\n#define HAS_TIMES\t\t/**/\n\n/* HAS_TMPNAM_R:\n *\tThis symbol, if defined, indicates that the tmpnam_r routine\n *\tis available to tmpnam re-entrantly.\n */\n/* TMPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of tmpnam_r.\n *\tIt is zero if d_tmpnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_tmpnam_r\n *\tis defined.\n */\n/*#define HAS_TMPNAM_R\t   /**/\n#define TMPNAM_R_PROTO 0\t   /**/\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n/*#define HAS_UALARM\t\t/**/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n#define HAS_UNION_SEMUN\t/**/\n/*#define USE_SEMCTL_SEMUN\t/**/\n/*#define USE_SEMCTL_SEMID_DS\t/**/\n\n/* HAS_UNORDERED:\n *\tThis symbol, if defined, indicates that the unordered routine is\n *\tavailable to check whether two doubles are unordered\n *\t(effectively: whether either of them is NaN)\n */\n/*#define HAS_UNORDERED\t\t/**/\n\n/* HAS_UNSETENV:\n *\tThis symbol, if defined, indicates that the unsetenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_UNSETENV\t\t/**/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n/*#define HAS_USTAT\t\t/**/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n/*#define HAS_VFORK\t/**/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t void\t/* Signal handler's return type */\n\n/* HAS_VPRINTF:\n *\tThis symbol, if defined, indicates that the vprintf routine is available\n *\tto printf with a pointer to an argument list.  If unavailable, you\n *\tmay need to write your own, probably in terms of _doprnt().\n */\n/* USE_CHAR_VSPRINTF:\n *\tThis symbol is defined if this system has vsprintf() returning type\n *\t(char*).  The trend seems to be to declare it as \"int vsprintf()\".  It\n *\tis up to the package author to declare vsprintf correctly based on the\n *\tsymbol.\n */\n#define HAS_VPRINTF\t/**/\n/*#define USE_CHAR_VSPRINTF \t/**/\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n/*#define HAS_WRITEV\t\t/**/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n#define USE_DYNAMIC_LOADING\t\t/**/\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE 8\t\t/**/\n\n/* EBCDIC:\n *     This symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n/*#define\tEBCDIC \t\t/**/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) does flush\n *\tall pending stdio output.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n#define\tFFLUSH_NULL \t\t/**/\n/*#define\tFFLUSH_ALL \t\t/**/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t fpos_t\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t\"ld\"\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedess of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t-1\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size 4\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t gid_t\t\t/* Type for getgid(), etc... */\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc...\n *\tIt may be necessary to include <sys/types.h> to get any\n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t gid_t\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\tint\t\t/**/\n#define DB_Prefix_t\tint  \t/**/\n#define DB_VERSION_MAJOR_CFG\tundef  \t/**/\n#define DB_VERSION_MINOR_CFG\tundef  \t/**/\n#define DB_VERSION_PATCH_CFG\tundef  \t/**/\n\n/* I_FP_CLASS:\n *\tThis symbol, if defined, indicates that <fp_class.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP_CLASS\t\t/**/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n/*#define I_GRP\t\t/**/\n/*#define GRPASSWD\t/**/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_IEEEFP\t\t/**/\n\n/* I_INTTYPES:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <inttypes.h>.\n */\n/*#define   I_INTTYPES                /**/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LIBUTIL\t\t/**/\n\n/* I_MACH_CTHREADS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <mach/cthreads.h>.\n */\n/*#define   I_MACH_CTHREADS\t/**/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n/*#define\tI_MNTENT\t\t/**/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n/*#define I_NETDB\t\t/**/\n\n/* I_NETINET_TCP:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <netinet/tcp.h>.\n */\n/*#define   I_NETINET_TCP                /**/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included.\n */\n/*#define\tI_POLL\t\t/**/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n/*#define\tI_PROT\t\t/**/\n\n/* I_PTHREAD:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <pthread.h>.\n */\n/*#define   I_PTHREAD\t/**/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n/*#define I_PWD\t\t/**/\n/*#define PWQUOTA\t/**/\n/*#define PWAGE\t/**/\n/*#define PWCHANGE\t/**/\n/*#define PWCLASS\t/**/\n/*#define PWEXPIRE\t/**/\n/*#define PWCOMMENT\t/**/\n/*#define PWGECOS\t/**/\n/*#define PWPASSWD\t/**/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SHADOW\t\t/**/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SOCKS\t\t/**/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SUNMATH\t\t/**/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSLOG\t\t/**/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSMODE\t\t/**/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_MOUNT\t\t/**/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n/*#define\tI_SYS_STATFS\t\t/**/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_STATVFS\t\t/**/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUIO\t\t/**/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUTSNAME\t\t/**/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_VFS\t\t/**/\n\n/* I_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n/* HAS_TM_TM_ZONE:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_zone field.\n */\n/* HAS_TM_TM_GMTOFF:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_gmtoff field.\n */\n/*#define I_TIME\t\t/**/\n/*#define I_SYS_TIME\t\t/**/\n/*#define I_SYS_TIME_KERNEL\t\t/**/\n/*#define HAS_TM_TM_ZONE\t\t/**/\n/*#define HAS_TM_TM_GMTOFF\t\t/**/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n/*#define\tI_USTAT\t\t/**/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n#define PERL_INC_VERSION_LIST 0\t\t/**/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n * \talso as /usr/bin/perl.\n */\n/*#define INSTALL_USR_BIN_PERL\t/**/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n/*#define PERL_PRIfldbl\t\"f\"\t/**/\n/*#define PERL_PRIgldbl\t\"g\"\t/**/\n/*#define PERL_PRIeldbl\t\"e\"\t/**/\n/*#define PERL_SCNfldbl\tundef\t/**/\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t long\t\t/* <offset> type */\n#define LSEEKSIZE 4\t\t/* <offset> size */\n#define Off_t_size 4\t/* <offset> size */\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n * void, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t void *\t\t\t/**/\n#define Free_t void\t\t\t/**/\n\n/* PERL_MALLOC_WRAP:\n *\tThis symbol, if defined, indicates that we'd like malloc wrap checks.\n */\n#define PERL_MALLOC_WRAP\t\t/**/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n#define MYMALLOC\t\t\t/**/\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes\n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t mode_t\t /* file mode parameter for system calls */\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK O_NONBLOCK\n#define VAL_EAGAIN EAGAIN\n#define RD_NODATA -1\n#define EOF_NONBLOCK\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n/*#define\tNEED_VA_COPY\t\t/**/\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\tchar * /**/\n#define Netdb_hlen_t\t\tint /**/\n#define Netdb_name_t\t\tchar * /**/\n#define Netdb_net_t\t\tlong /**/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n/*#define PERL_OTHERLIBDIRS \"\"\t\t/**/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpar, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, or QUAD_IS_INT64_T.\n */\n/*#define HAS_QUAD\t/**/\n#ifdef HAS_QUAD\n#   define Quad_t __int64\t/**/\n#   define Uquad_t unsigned __int64\t/**/\n#   define QUADKIND 5\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#endif\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n/* NV_OVERFLOWS_INTEGERS_AT\n *\tThis symbol gives the largest integer value that NVs can hold. This\n *\tvalue + 1.0 cannot be stored accurately. It is expressed as constant\n *\tfloating point expression to reduce the chance of decimale/binary\n *\tconversion issues. If it can not be determined, the value 0 is given.\n */\n/* NV_ZERO_IS_ALLBITS_ZERO\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tstores 0.0 in memory as all bits zero.\n */\n#define\tIVTYPE\t\tlong\t\t/**/\n#define\tUVTYPE\t\tunsigned long\t\t/**/\n#define\tI8TYPE\t\tchar\t\t/**/\n#define\tU8TYPE\t\tunsigned char\t\t/**/\n#define\tI16TYPE\t\tshort\t/**/\n#define\tU16TYPE\t\tunsigned short\t/**/\n#define\tI32TYPE\t\tlong\t/**/\n#define\tU32TYPE\t\tunsigned long\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\t__int64\t/**/\n#define\tU64TYPE\t\tunsigned __int64\t/**/\n#endif\n#define\tNVTYPE\t\tdouble\t\t/**/\n#define\tIVSIZE\t\t4\t\t/**/\n#define\tUVSIZE\t\t4\t\t/**/\n#define\tI8SIZE\t\t1\t\t/**/\n#define\tU8SIZE\t\t1\t\t/**/\n#define\tI16SIZE\t\t2\t/**/\n#define\tU16SIZE\t\t2\t/**/\n#define\tI32SIZE\t\t4\t/**/\n#define\tU32SIZE\t\t4\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t8\t/**/\n#define\tU64SIZE\t\t8\t/**/\n#endif\n#define\tNVSIZE\t\t8\t\t/**/\n#define\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\tundef\n#define\tNV_OVERFLOWS_INTEGERS_AT\t256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0\n#undef\tNV_ZERO_IS_ALLBITS_ZERO\n#if UVSIZE == 8\n#   ifdef BYTEORDER\n#       if BYTEORDER == 0x1234\n#           undef BYTEORDER\n#           define BYTEORDER 0x12345678\n#       else\n#           if BYTEORDER == 0x4321\n#               undef BYTEORDER\n#               define BYTEORDER 0x87654321\n#           endif\n#       endif\n#   endif\n#endif\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t\"ld\"\t\t/**/\n#define\tUVuf\t\t\"lu\"\t\t/**/\n#define\tUVof\t\t\"lo\"\t\t/**/\n#define\tUVxf\t\t\"lx\"\t\t/**/\n#define\tUVXf\t\t\"lX\"\t\t/**/\n#define\tNVef\t\t\"e\"\t\t/**/\n#define\tNVff\t\t\"f\"\t\t/**/\n#define\tNVgf\t\t\"g\"\t\t/**/\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t int\t\t/* PID type */\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"\\\\Storage Card\\\\perl58m\\\\lib\"\t\t/**/\n#define PRIVLIB_EXP (win32_get_privlib(PERL_VERSION_STRING, NULL))\t/**/\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE 4\t\t/**/\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\t(rand()/(double)((unsigned)1<<RANDBITS))\t\t/**/\n#define Rand_seed_t\t\tunsigned\t\t/**/\n#define seedDrand01(x)\tsrand((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t15\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS \t32\t/**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you\n *\thave select(), of course.\n */\n#define Select_fd_set_t \tPerl_fd_set *\t/**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_name_init list.\n *\tNote that this variable is initialized from the sig_name_init,\n *\tnot from sig_name (which is unused).\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup.\n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.\n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name_init list.\n *\tNote that this variable is initialized from the sig_num_init,\n *\tnot from sig_num (which is unused).\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME \"ZERO\", \"NUM01\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0\t\t/**/\n#define SIG_NUM  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0\t\t/**/\n#define SIG_SIZE 27\t\t\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define SITEARCH \"\\\\Storage Card\\\\perl58m\\\\site\\\\lib\"\t\t/**/\n/*#define SITEARCH_EXP \"\"\t/**/\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"\\\\Storage Card\\\\perl58m\\\\site\\\\lib\"\t\t/**/\n#define SITELIB_EXP (win32_get_sitelib(PERL_VERSION_STRING, NULL))\t/**/\n#define SITELIB_STEM \"\"\t\t/**/\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size 4\t\t/**/\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t size_t\t /* length paramater for string functions */\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\tint /**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t int\t /* signed count of bytes */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"#!perl\"\t\t/**/\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR char\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n/*#define\tHAS_STDIO_STREAM_ARRAY\t/**/\n#define STDIO_STREAM_ARRAY\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t\"ld\"\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedess of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t-1\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size 4\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t uid_t\t\t/* UID type */\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n/*#define\tUSE_64_BIT_INT\t\t/**/\n#endif\n\n#ifndef USE_64_BIT_ALL\n/*#define\tUSE_64_BIT_ALL\t\t/**/\n#endif\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n/*#define\tUSE_LARGE_FILES\t\t/**/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n/*#define\tUSE_LONG_DOUBLE\t\t/**/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n/*#define\tUSE_MORE_BITS\t\t/**/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n/*#define\tMULTIPLICITY\t\t/**/\n#endif\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n#define\tUSE_PERLIO\t\t/**/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n/*#define\tUSE_SOCKS\t\t/**/\n#endif\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* USE_5005THREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the 5.005-based threading implementation.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n/*#define\tUSE_5005THREADS\t\t/**/\n/*#define\tUSE_ITHREADS\t\t/**/\n#if defined(USE_5005THREADS) && !defined(USE_ITHREADS)\n#define\t\tUSE_THREADS\t\t/* until src is revised*/\n#endif\n/*#define\tOLD_PTHREADS_API\t\t/**/\n/*#define\tUSE_REENTRANT_API\t/**/\n\n/* USE_DTRACE\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for DTrace.\n */\n/*#define USE_DTRACE\t\t\t/ **/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front.\n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor\n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define PERL_VENDORARCH \"\"\t\t/**/\n/*#define PERL_VENDORARCH_EXP \"\"\t\t/**/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n/*#define PERL_VENDORLIB_EXP \"\"\t\t/**/\n/*#define PERL_VENDORLIB_STEM \"\"\t\t/**/\n\n/* HASATTRIBUTE_FORMAT:\n *\tCan we handle GCC attribute for checking printf-style formats\n */\n/* HASATTRIBUTE_MALLOC:\n *\tCan we handle GCC attribute for malloc-style functions.\n */\n/* HASATTRIBUTE_NONNULL:\n *\tCan we handle GCC attribute for nonnull function parms.\n */\n/* HASATTRIBUTE_NORETURN:\n *\tCan we handle GCC attribute for functions that do not return\n */\n/* HASATTRIBUTE_PURE:\n *\tCan we handle GCC attribute for pure functions\n */\n/* HASATTRIBUTE_UNUSED:\n *\tCan we handle GCC attribute for unused variables and arguments\n */\n/* HASATTRIBUTE_WARN_UNUSED_RESULT:\n *\tCan we handle GCC attribute for warning on unused results\n */\n/*#define HASATTRIBUTE_FORMAT\t/**/\n/*#define HASATTRIBUTE_NORETURN\t/**/\n/*#define HASATTRIBUTE_MALLOC\t/**/\n/*#define HASATTRIBUTE_NONNULL\t/**/\n/*#define HASATTRIBUTE_PURE\t/**/\n/*#define HASATTRIBUTE_UNUSED\t/**/\n/*#define HASATTRIBUTE_WARN_UNUSED_RESULT\t/**/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n/*#define HAS_CRYPT\t\t/**/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n/*#define SETUID_SCRIPTS_ARE_SECURE_NOW\t/**/\n/*#define DOSUID\t\t/**/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t void *\t/**/\n/*#define HAS_SHMAT_PROTOTYPE\t/**/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/*#define I_NDBM\t/**/\n\n/* I_STDARG:\n *\tThis symbol, if defined, indicates that <stdarg.h> exists and should\n *\tbe included.\n */\n/* I_VARARGS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <varargs.h>.\n */\n#define I_STDARG\t\t/**/\n/*#define I_VARARGS\t/**/\n\n/* CAN_PROTOTYPE:\n *\tIf defined, this macro indicates that the C compiler can handle\n *\tfunction prototypes.\n */\n/* _:\n *\tThis macro is used to declare function parameters for folks who want\n *\tto make declarations with prototypes using a different style than\n *\tthe above macros.  Use double parentheses.  For example:\n *\n *\t\tint main _((int argc, char *argv[]));\n */\n#define\tCAN_PROTOTYPE\t/**/\n#ifdef CAN_PROTOTYPE\n#define\t_(args) args\n#else\n#define\t_(args) ()\n#endif\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"cmd /x /c\"  /**/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_AINTL\t\t/**/\n\n/* HAS_CLEARENV:\n *\tThis symbol, if defined, indicates that the clearenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_CLEARENV\t\t/**/\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n/*#define HAS_COPYSIGNL\t\t/**/\n\n/* USE_CPLUSPLUS:\n *\tThis symbol, if defined, indicates that a C++ compiler was\n *\tused to compiled Perl and will be used to compile extensions.\n */\n/*#define USE_CPLUSPLUS\t\t/**/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n/*#define\tHAS_DBMINIT_PROTO\t/**/\n\n/* HAS_DIRFD:\n *\tThis manifest constant lets the C program know that dirfd\n *\tis available.\n */\n/*#define HAS_DIRFD\t\t/**/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n/*#define HAS_FAST_STDIO\t\t/**/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n/*#define\tHAS_FLOCK_PROTO\t/**/\n\n/* HAS_FPCLASSL:\n *\tThis symbol, if defined, indicates that the fpclassl routine is\n *\tavailable to classify long doubles.  Available for example in IRIX.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASSL\t\t/**/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n/*#define HAS_ILOGBL\t\t/**/\n\n/* LIBM_LIB_VERSION:\n *\tThis symbol, if defined, indicates that libm exports _LIB_VERSION\n *\tand that math.h defines the enum to manipulate it.\n */\n/*#define LIBM_LIB_VERSION\t\t/**/\n\n/* HAS_NL_LANGINFO:\n *\tThis symbol, if defined, indicates that the nl_langinfo routine is\n *\tavailable to return local data.  You will also need <langinfo.h>\n *\tand therefore I_LANGINFO.\n */\n/*#define HAS_NL_LANGINFO\t\t/**/\n\n/* HAS_PROCSELFEXE:\n *\tThis symbol is defined if PROCSELFEXE_PATH is a symlink\n *\tto the absolute pathname of the executing program.\n */\n/* PROCSELFEXE_PATH:\n *\tIf HAS_PROCSELFEXE is defined this symbol is the filename\n *\tof the symbolic link pointing to the absolute pathname of\n *\tthe executing program.\n */\n/*#define HAS_PROCSELFEXE\t/**/\n#if defined(HAS_PROCSELFEXE) && !defined(PROCSELFEXE_PATH)\n#define PROCSELFEXE_PATH\t\t/**/\n#endif\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n/*#define HAS_PTHREAD_ATTR_SETSCOPE\t\t/**/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n/*#define HAS_SCALBNL\t\t/**/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n/*#define HAS_SIGPROCMASK\t\t/**/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n/*#define HAS_SOCKATMARK\t\t/**/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n/*#define\tHAS_SOCKATMARK_PROTO\t/**/\n\n/* SPRINTF_RETURNS_STRLEN:\n *\tThis variable defines whether sprintf returns the length of the string\n *\t(as per the ANSI spec). Some C libraries retain compatibility with\n *\tpre-ANSI C and return a pointer to the passed in buffer; for these\n *\tthis variable will be undef.\n */\n#define SPRINTF_RETURNS_STRLEN\t/**/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESGID_PROTO\t/**/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESUID_PROTO\t/**/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n/*#define HAS_STRFTIME\t\t/**/\n\n/* HAS_STRLCAT:\n *\tThis symbol, if defined, indicates that the strlcat () routine is\n *\tavailable to do string concatenation.\n */\n/*#define HAS_STRLCAT\t\t/**/\n\n/* HAS_STRLCPY:\n *\tThis symbol, if defined, indicates that the strlcpy () routine is\n *\tavailable to do string copying.\n */\n/*#define HAS_STRLCPY\t\t/**/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n/*#define\tHAS_SYSCALL_PROTO\t/**/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n#ifndef U32_ALIGNMENT_REQUIRED\n/*#define U32_ALIGNMENT_REQUIRED\t/**/\n#endif\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n/*#define\tHAS_USLEEP_PROTO\t/**/\n\n/* I_CRYPT:\n *\tThis symbol, if defined, indicates that <crypt.h> exists and\n *\tshould be included.\n */\n/*#define\tI_CRYPT\t\t/**/\n\n/* I_FP:\n *\tThis symbol, if defined, indicates that <fp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP\t\t/**/\n\n/* I_LANGINFO:\n *\tThis symbol, if defined, indicates that <langinfo.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LANGINFO\t\t/**/\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n/*#define\tUSE_FAST_STDIO\t\t/**/\n#endif\n\n/* PERL_RELOCATABLE_INC:\n *\tThis symbol, if defined, indicates that we'd like to relocate entries\n *\tin @INC at run time based on the location of the perl binary.\n */\n#define PERL_RELOCATABLE_INC \"undef\" \t\t/**/\n\n/* HAS_CTERMID_R:\n *\tThis symbol, if defined, indicates that the ctermid_r routine\n *\tis available to ctermid re-entrantly.\n */\n/* CTERMID_R_PROTO:\n *\tThis symbol encodes the prototype of ctermid_r.\n *\tIt is zero if d_ctermid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctermid_r\n *\tis defined.\n */\n/*#define HAS_CTERMID_R\t   /**/\n#define CTERMID_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT_R:\n *\tThis symbol, if defined, indicates that the endhostent_r routine\n *\tis available to endhostent re-entrantly.\n */\n/* ENDHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of endhostent_r.\n *\tIt is zero if d_endhostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endhostent_r\n *\tis defined.\n */\n/*#define HAS_ENDHOSTENT_R\t   /**/\n#define ENDHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDNETENT_R:\n *\tThis symbol, if defined, indicates that the endnetent_r routine\n *\tis available to endnetent re-entrantly.\n */\n/* ENDNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of endnetent_r.\n *\tIt is zero if d_endnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endnetent_r\n *\tis defined.\n */\n/*#define HAS_ENDNETENT_R\t   /**/\n#define ENDNETENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPROTOENT_R:\n *\tThis symbol, if defined, indicates that the endprotoent_r routine\n *\tis available to endprotoent re-entrantly.\n */\n/* ENDPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of endprotoent_r.\n *\tIt is zero if d_endprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endprotoent_r\n *\tis defined.\n */\n/*#define HAS_ENDPROTOENT_R\t   /**/\n#define ENDPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT_R:\n *\tThis symbol, if defined, indicates that the endservent_r routine\n *\tis available to endservent re-entrantly.\n */\n/* ENDSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of endservent_r.\n *\tIt is zero if d_endservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endservent_r\n *\tis defined.\n */\n/*#define HAS_ENDSERVENT_R\t   /**/\n#define ENDSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR_R:\n *\tThis symbol, if defined, indicates that the gethostbyaddr_r routine\n *\tis available to gethostbyaddr re-entrantly.\n */\n/* GETHOSTBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyaddr_r.\n *\tIt is zero if d_gethostbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYADDR_R\t   /**/\n#define GETHOSTBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYNAME_R:\n *\tThis symbol, if defined, indicates that the gethostbyname_r routine\n *\tis available to gethostbyname re-entrantly.\n */\n/* GETHOSTBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyname_r.\n *\tIt is zero if d_gethostbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyname_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYNAME_R\t   /**/\n#define GETHOSTBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the gethostent_r routine\n *\tis available to gethostent re-entrantly.\n */\n/* GETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of gethostent_r.\n *\tIt is zero if d_gethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostent_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTENT_R\t   /**/\n#define GETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYADDR_R:\n *\tThis symbol, if defined, indicates that the getnetbyaddr_r routine\n *\tis available to getnetbyaddr re-entrantly.\n */\n/* GETNETBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyaddr_r.\n *\tIt is zero if d_getnetbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYADDR_R\t   /**/\n#define GETNETBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYNAME_R:\n *\tThis symbol, if defined, indicates that the getnetbyname_r routine\n *\tis available to getnetbyname re-entrantly.\n */\n/* GETNETBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyname_r.\n *\tIt is zero if d_getnetbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyname_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYNAME_R\t   /**/\n#define GETNETBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETNETENT_R:\n *\tThis symbol, if defined, indicates that the getnetent_r routine\n *\tis available to getnetent re-entrantly.\n */\n/* GETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of getnetent_r.\n *\tIt is zero if d_getnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetent_r\n *\tis defined.\n */\n/*#define HAS_GETNETENT_R\t   /**/\n#define GETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNAME_R:\n *\tThis symbol, if defined, indicates that the getprotobyname_r routine\n *\tis available to getprotobyname re-entrantly.\n */\n/* GETPROTOBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobyname_r.\n *\tIt is zero if d_getprotobyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobyname_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNAME_R\t   /**/\n#define GETPROTOBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNUMBER_R:\n *\tThis symbol, if defined, indicates that the getprotobynumber_r routine\n *\tis available to getprotobynumber re-entrantly.\n */\n/* GETPROTOBYNUMBER_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobynumber_r.\n *\tIt is zero if d_getprotobynumber_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobynumber_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNUMBER_R\t   /**/\n#define GETPROTOBYNUMBER_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the getprotoent_r routine\n *\tis available to getprotoent re-entrantly.\n */\n/* GETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of getprotoent_r.\n *\tIt is zero if d_getprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotoent_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOENT_R\t   /**/\n#define GETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME_R:\n *\tThis symbol, if defined, indicates that the getservbyname_r routine\n *\tis available to getservbyname re-entrantly.\n */\n/* GETSERVBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyname_r.\n *\tIt is zero if d_getservbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyname_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYNAME_R\t   /**/\n#define GETSERVBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYPORT_R:\n *\tThis symbol, if defined, indicates that the getservbyport_r routine\n *\tis available to getservbyport re-entrantly.\n */\n/* GETSERVBYPORT_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyport_r.\n *\tIt is zero if d_getservbyport_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYPORT_R\t   /**/\n#define GETSERVBYPORT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT_R:\n *\tThis symbol, if defined, indicates that the getservent_r routine\n *\tis available to getservent re-entrantly.\n */\n/* GETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of getservent_r.\n *\tIt is zero if d_getservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservent_r\n *\tis defined.\n */\n/*#define HAS_GETSERVENT_R\t   /**/\n#define GETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n/*#define HAS_PTHREAD_ATFORK\t\t/**/\n\n/* HAS_READDIR64_R:\n *\tThis symbol, if defined, indicates that the readdir64_r routine\n *\tis available to readdir64 re-entrantly.\n */\n/* READDIR64_R_PROTO:\n *\tThis symbol encodes the prototype of readdir64_r.\n *\tIt is zero if d_readdir64_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir64_r\n *\tis defined.\n */\n/*#define HAS_READDIR64_R\t   /**/\n#define READDIR64_R_PROTO 0\t   /**/\n\n/* HAS_SETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the sethostent_r routine\n *\tis available to sethostent re-entrantly.\n */\n/* SETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of sethostent_r.\n *\tIt is zero if d_sethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_sethostent_r\n *\tis defined.\n */\n/*#define HAS_SETHOSTENT_R\t   /**/\n#define SETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_SETLOCALE_R:\n *\tThis symbol, if defined, indicates that the setlocale_r routine\n *\tis available to setlocale re-entrantly.\n */\n/* SETLOCALE_R_PROTO:\n *\tThis symbol encodes the prototype of setlocale_r.\n *\tIt is zero if d_setlocale_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setlocale_r\n *\tis defined.\n */\n/*#define HAS_SETLOCALE_R\t   /**/\n#define SETLOCALE_R_PROTO 0\t   /**/\n\n/* HAS_SETNETENT_R:\n *\tThis symbol, if defined, indicates that the setnetent_r routine\n *\tis available to setnetent re-entrantly.\n */\n/* SETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of setnetent_r.\n *\tIt is zero if d_setnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setnetent_r\n *\tis defined.\n */\n/*#define HAS_SETNETENT_R\t   /**/\n#define SETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the setprotoent_r routine\n *\tis available to setprotoent re-entrantly.\n */\n/* SETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of setprotoent_r.\n *\tIt is zero if d_setprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setprotoent_r\n *\tis defined.\n */\n/*#define HAS_SETPROTOENT_R\t   /**/\n#define SETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT_R:\n *\tThis symbol, if defined, indicates that the setservent_r routine\n *\tis available to setservent re-entrantly.\n */\n/* SETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of setservent_r.\n *\tIt is zero if d_setservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setservent_r\n *\tis defined.\n */\n/*#define HAS_SETSERVENT_R\t   /**/\n#define SETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_TTYNAME_R:\n *\tThis symbol, if defined, indicates that the ttyname_r routine\n *\tis available to ttyname re-entrantly.\n */\n/* TTYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of ttyname_r.\n *\tIt is zero if d_ttyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ttyname_r\n *\tis defined.\n */\n/*#define HAS_TTYNAME_R\t   /**/\n#define TTYNAME_R_PROTO 0\t   /**/\n/* GMTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* GMTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n#define GMTIME_MAX\t\t2147483647\t/**/\n#define GMTIME_MIN\t\t0\t/**/\n#define LOCALTIME_MAX\t2147483647\t/**/\n#define LOCALTIME_MIN\t0\t/**/\n\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/win32/config.ce": "## Configured by: ~cf_email~\n## Target system: WINCE\nAuthor=''\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nMcc='Mcc'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.lib' # keep this for WinCE, as it is used by some mods...\n_exe='.exe'\n_o='.obj'\nafs='false'\nalignbytes='8'\nansi2knr=''\naphostname=''\napi_revision='~PERL_API_REVISION~'\napi_subversion='~PERL_API_SUBVERSION~'\napi_version='~PERL_API_VERSION~'\napi_versionstring='~PERL_API_REVISION~.~PERL_API_VERSION~.~PERL_API_SUBVERSION~'\nar='lib'\narchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchlibexp='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchname64=''\narchname='wince'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5'\nbash=''\nbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbinexp='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbison=''\nbootstrap_charset='undef'\nbyacc='byacc'\nbyteorder='1234'\nc=''\ncastflags='0'\ncat='type'\ncc='~cc~'\ncccdlflags=' '\nccdlflags=' '\nccflags='-DWIN32'\nccsymbols=''\ncf_by='nobody'\ncf_email='nobody@no.where.net'\ncf_time=''\ncharbits='8'\nchgrp=''\nchmod=''\nchown=''\nclocktype='clock_t'\ncomm=''\ncompress=''\ncontains='grep'\ncp='copy'\ncpio=''\ncpp='~cc~ -nologo -E'\ncpp_stuff='42'\ncppccsymbols=''\ncppflags='-DWIN32'\ncpplast=''\ncppminus=''\ncpprun='~cc~ -nologo -E'\ncppstdin='~cc~ -nologo -E'\ncppsymbols=''\ncrosscompile='undef'\ncrypt_r_proto='0'\ncryptlib=''\ncsh='undef'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEldbl='undef'\nd_PRIFldbl='undef'\nd_PRIGldbl='undef'\nd_PRIX64='undef'\nd_PRId64='undef'\nd_PRIeldbl='undef'\nd_PRIfldbl='undef'\nd_PRIgldbl='undef'\nd_PRIi64='undef'\nd_PRIo64='undef'\nd_PRIu64='undef'\nd_PRIx64='undef'\nd_SCNfldbl='undef'\nd__fwalk='undef'\nd_access='define'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='undef'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='undef'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bcmp='undef'\nd_bcopy='undef'\nd_bsd='define'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_bzero='undef'\nd_c99_variadic_macros='undef'\nd_casti32='undef'\nd_castneg='define'\nd_cbrt='undef'\nd_charvspr='undef'\nd_chown='undef'\nd_chroot='undef'\nd_chsize='define'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='define'\nd_cmsghdr_s='undef'\nd_const='define'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='undef'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='undef'\nd_dbl_dig='define'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='define'\nd_dladdr='undef'\nd_dlerror='define'\nd_dlopen='define'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='define'\nd_eaccess='undef'\nd_endgrent='undef'\nd_endgrent_r='undef'\nd_endhent='undef'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='undef'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_endspent='undef'\nd_eofnblk='define'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='undef'\nd_fchdir='undef'\nd_fchmod='undef'\nd_fchown='undef'\nd_fcntl='undef'\nd_fcntl_can_lock='undef'\nd_fd_macros='define'\nd_fd_set='define'\nd_fdim='undef'\nd_fds_bits='define'\nd_fegetround='undef'\nd_fgetpos='define'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='define'\nd_flock='undef'\nd_flockproto='undef'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='undef'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='undef'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='define'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='undef'\nd_ftello='undef'\nd_ftime='define'\nd_futimes='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='undef'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='undef'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='undef'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='undef'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='undef'\nd_getpagsz='undef'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='undef'\nd_getppid='undef'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='undef'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspent='undef'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='undef'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_hasmntopt='undef'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='undef'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='define'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='define'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='undef'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='define'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='undef'\nd_link='define'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='undef'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_longdbl='undef'\nd_longlong='undef'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='define'\nd_lstat='undef'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memchr='define'\nd_memcmp='define'\nd_memcpy='define'\nd_memmove='define'\nd_memset='define'\nd_mkdir='define'\nd_mkdtemp='undef'\nd_mkfifo='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='~PERL_MALLOC~'\nd_nan='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='define'\nd_nv_zero_is_allbits_zero='undef'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='undef'\nd_pathconf='undef'\nd_pause='define'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe='undef'\nd_poll='undef'\nd_portable='define'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='undef'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='undef'\nd_readv='undef'\nd_recvmsg='undef'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_safebcpy='undef'\nd_safemcpy='undef'\nd_sanemcmp='define'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='define'\nd_select='define'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='undef'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='undef'\nd_setlocale='define'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='undef'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='undef'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='undef'\nd_setspent='undef'\nd_setvbuf='undef'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='undef'\nd_signbit='undef'\nd_sigprocmask='undef'\nd_sigsetjmp='undef'\nd_sin6_scope_id='undef'\nd_sitearch='define'\nd_snprintf='undef'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='undef'\nd_sockpair='undef'\nd_socks5_init='undef'\nd_sprintf_returns_strlen='define'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='undef'\nd_statvfs='undef'\nd_stdio_cnt_lval='undef'\nd_stdio_ptr_lval='undef'\nd_stdio_ptr_lval_nochange_cnt='undef'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='undef'\nd_stdstdio='undef'\nd_strchr='define'\nd_strcoll='define'\nd_strctcpy='define'\nd_strerrm='strerror(e)'\nd_strerror='define'\nd_strerror_r='undef'\nd_strftime='undef'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strtod='define'\nd_strtol='define'\nd_strtold='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='undef'\nd_suidsafe='undef'\nd_symlink='undef'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='undef'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='undef'\nd_tcsetpgrp='undef'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='undef'\nd_time='define'\nd_timegm='undef'\nd_times='define'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='undef'\nd_ualarm='undef'\nd_umask='define'\nd_uname='define'\nd_union_semun='define'\nd_unordered='undef'\nd_unsetenv='undef'\nd_usleep='undef'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_volatile='define'\nd_vprintf='define'\nd_vsnprintf='undef'\nd_wait4='undef'\nd_waitpid='define'\nd_wcscmp='undef'\nd_wcstombs='define'\nd_wcsxfrm='undef'\nd_wctomb='define'\nd_writev='undef'\nd_xenix='undef'\ndate='date'\ndb_hashtype='int'\ndb_prefixtype='int'\ndb_version_major='0'\ndb_version_minor='0'\ndb_version_patch='0'\ndirentrytype='struct direct'\ndlext='dll'\ndlsrc='dl_win32.xs'\ndoublekind='3'\ndoublesize='8'\ndrand01='Perl_drand48()'\ndrand48_r_proto='0'\ndtrace=''\ndynamic_ext='Socket IO Fcntl Opcode SDBM_File attributes'\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='egrep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext='.exe'\nexpr='expr'\nextensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nfflushNULL='define'\nfflushall='undef'\nfind='find'\nfirstmakefile='makefile'\nflex=''\nfpossize='4'\nfpostype='fpos_t'\nfreetype='void'\nfull_ar=''\nfull_csh=''\nfull_sed=''\ngccversion=''\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"ld\"'\ngidsign='-1'\ngidsize='4'\ngidtype='gid_t'\nglibpth='/usr/shlib  /lib/pa1.1 /usr/lib/large /lib /usr/lib /usr/lib/386 /lib/386 /lib/large /usr/lib/small /lib/small /usr/ccs/lib /usr/ucblib /usr/shlib '\ngmtime_r_proto='0'\ngrep='grep'\ngroupcat=''\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='true'\nh_sysfile='true'\nhint='recommended'\nhostcat='ypcat hosts'\nhuge=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='__int64'\ni8size='1'\ni8type='char'\ni_arpainet='define'\ni_assert='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='define'\ni_execinfo='undef'\ni_fcntl='define'\ni_fenv='undef'\ni_float='define'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='undef'\ni_ieeefp='undef'\ni_inttypes='undef'\ni_langinfo='undef'\ni_libutil='undef'\ni_limits='define'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='define'\ni_mallocmalloc='undef'\ni_math='define'\ni_memory='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='undef'\ni_neterrno='undef'\ni_netinettcp='undef'\ni_niin='undef'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='undef'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdarg='define'\ni_stdbool='undef'\ni_stddef='define'\ni_stdint='undef'\ni_stdlib='define'\ni_string='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='define'\ni_sysin='undef'\ni_sysioctl='undef'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='undef'\ni_syspoll='undef'\ni_sysresrc='undef'\ni_syssecrt='undef'\ni_sysselct='undef'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='undef'\ni_systimek='undef'\ni_systimes='undef'\ni_systypes='undef'\ni_sysuio='undef'\ni_sysun='undef'\ni_sysutsname='undef'\ni_sysvfs='undef'\ni_syswait='undef'\ni_termio='undef'\ni_termios='undef'\ni_time='undef'\ni_unistd='undef'\ni_ustat='undef'\ni_utime='define'\ni_values='undef'\ni_varargs='undef'\ni_varhdr='varargs.h'\ni_vfork='undef'\nignore_versioned_solibs=''\ninc_version_list=''\ninc_version_list_init='0'\nincpath=''\ninews=''\ninstallarchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\ninstallbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallhtmldir='~INST_TOP~~INST_VER~\\html'\ninstallhtmlhelpdir='~INST_TOP~~INST_VER~\\htmlhelp'\ninstallman1dir='~INST_TOP~~INST_VER~\\man\\man1'\ninstallman3dir='~INST_TOP~~INST_VER~\\man\\man3'\ninstallprefix='~INST_TOP~~INST_VER~'\ninstallprefixexp='~INST_TOP~~INST_VER~'\ninstallprivlib='~INST_TOP~~INST_VER~\\lib'\ninstallscript='~INST_TOP~~INST_VER~\\bin'\ninstallsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\ninstallsitebin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallsitelib='~INST_TOP~\\site~INST_VER~\\lib'\ninstallstyle='lib'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorlib=''\nintsize='4'\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nknown_extensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nksh=''\nlarge=''\nld='link'\nlddlflags='-dll ~LINK_FLAGS~'\nldflags='~LINK_FLAGS~'\nldlibpthname=''\nless='less'\nlib_ext='.lib'\nlibc='msvcrt.lib'\nlibperl='perl.lib'\nlibpth=''\nlibs=''\nlibsdirs=''\nlibsfiles=''\nlibsfound=''\nlibspath=''\nlibswanted='net socket inet nsl nm ndbm gdbm dbm db malloc dl ld sun m c cposix posix ndir dir crypt ucb bsd BSD PW x'\nline='line'\nlint=''\nlkflags=''\nln=''\nlns='copy'\nlocaltime_r_proto='0'\nlocincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'\nloclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'\nlongdblkind='3'\nlongdblsize='10'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='dir'\nlseeksize='4'\nlseektype='long'\nmad='undef'\nmail=''\nmailx=''\nmake='nmake'\nmake_set_make='#'\nmallocobj='malloc.o'\nmallocsrc='malloc.c'\nmalloctype='void *'\nman1dir='~INST_TOP~~INST_VER~\\man\\man1'\nman1direxp='~INST_TOP~~INST_VER~\\man\\man1'\nman1ext='1'\nman3dir='~INST_TOP~~INST_VER~\\man\\man3'\nman3direxp='~INST_TOP~~INST_VER~\\man\\man3'\nman3ext='3'\nmedium=''\nmips_type=''\nmkdir='mkdir'\nmmaptype='void *'\nmodels='none'\nmodetype='mode_t'\nmore='more /e'\nmultiarch='undef'\nmv=''\nmyarchname='wince'\nmydomain=''\nmyhostname=''\nmyuname=''\nn='-n'\nneed_va_copy='undef'\nnetdb_hlen_type='int'\nnetdb_host_type='char *'\nnetdb_name_type='char *'\nnetdb_net_type='long'\nnm=''\nnm_opt=''\nnm_so_opt=''\nnonxs_ext='Errno'\nnroff=''\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='32'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.obj'\nold_pthread_create_joinable=''\noptimize='-O'\norderlib='false'\nosname='MSWin32'\nosvers='4.0'\notherlibdirs=''\npackage='perl5'\npager='more /e'\npasscat=''\npatchlevel='~PERL_VERSION~'\npath_sep=';'\nperl5=''\nperl='perl'\nperl_patchlevel='~PERL_PATCHLEVEL~'\nperl_static_inline='static'\nperladmin=''\nperlpath='~INST_TOP~~INST_VER~\\bin~INST_ARCH~\\perl.exe'\npg=''\nphostname='hostname'\npidtype='int'\nplibpth=''\npmake=''\npr=''\nprefix='~INST_TOP~'\nprefixexp='~INST_TOP~'\nprivlib='~INST_TOP~~INST_VER~\\lib'\nprivlibexp='~INST_TOP~~INST_VER~\\lib'\nprocselfexe=''\nprototype='define'\nptrsize='4'\nquadkind='5'\nquadtype='__int64'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nranlib='rem'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='del'\nrmail=''\nrunnm='true'\nsGMTIME_max='2147483647'\nsGMTIME_min='0'\nsLOCALTIME_max='2147483647'\nsLOCALTIME_min='0'\nsPRIEldbl='\"E\"'\nsPRIFldbl='\"F\"'\nsPRIGldbl='\"G\"'\nsPRIX64='\"lX\"'\nsPRId64='\"ld\"'\nsPRIeldbl='\"e\"'\nsPRIfldbl='\"f\"'\nsPRIgldbl='\"g\"'\nsPRIi64='\"li\"'\nsPRIo64='\"lo\"'\nsPRIu64='\"lu\"'\nsPRIx64='\"lx\"'\nsSCNfldbl=''\nsched_yield=''\nscriptdir='~INST_TOP~~INST_VER~\\bin'\nscriptdirexp='~INST_TOP~~INST_VER~\\bin'\nsed='sed'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype='Perl_fd_set *'\nsendmail='blat'\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='cmd /x /c'\nshar=''\nsharpbang='#!'\nshmattype='void *'\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='26'\nsig_name='ZERO NUM01 INT QUIT ILL NUM05 NUM06 NUM07 FPE KILL NUM10 SEGV NUM12 PIPE ALRM TERM NUM16 NUM17 NUM18 NUM19 CHLD BREAK ABRT STOP NUM24 CONT CLD'\nsig_name_init='\"ZERO\", \"NUM01\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0'\nsig_num='0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 20 0'\nsig_num_init='0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0'\nsig_size='27'\nsignal_t='void'\nsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitearchexp='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitebin='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitebinexp='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitelib='~INST_TOP~\\site~INST_VER~\\lib'\nsitelib_stem=''\nsitelibexp='~INST_TOP~\\site~INST_VER~\\lib'\nsiteprefix='~INST_TOP~\\site~INST_VER~'\nsiteprefixexp='~INST_TOP~\\site~INST_VER~'\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nsmall=''\nso='dll'\nsockethdr=''\nsocketlib=''\nsocksizetype='int'\nsort='sort'\nspackage='Perl5'\nspitshell=''\nsplit=''\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc=''\nssizetype='int'\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!perl'\nstartsh='#!/bin/sh'\nstatic_ext='DynaLoader'\nstdchar='char'\nstdio_base=''\nstdio_bufsiz=''\nstdio_cnt=''\nstdio_filbuf=''\nstdio_ptr=''\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/usr/include/string.h'\nsubmit=''\nsubversion='~PERL_SUBVERSION~'\nsysman='/usr/man/man1'\ntail=''\ntar=''\ntargetarch='wince'\ntargetsh='cmd /x /c'\ntbl=''\ntee=''\ntest=''\ntimeincl='/usr/include/sys/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\ntouch='touch'\ntr=''\ntrnl='\\012'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned __int64'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"ld\"'\nuidsign='-1'\nuidsize='4'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned __int64'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='define'\nusedevel='undef'\nusedl='define'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='~USE_ITHREADS~'\nusekernprocpathname='undef'\nuselargefiles='undef'\nuselongdouble='undef'\nusemallocwrap='define'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='true'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvaproto='undef'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorprefix=''\nvendorprefixexp=''\nversion=''\nversiononly='undef'\nvi=''\nxlibpth='/usr/lib/386 /lib/386'\nzcat=''\nzip='zip'\nPERL_REVISION='~PERL_REVISION~'\nPERL_SUBVERSION='~PERL_SUBVERSION~'\nPERL_VERSION='~PERL_VERSION~'\nPERL_API_REVISION='~PERL_API_REVISION~'\nPERL_API_SUBVERSION='~PERL_API_SUBVERSION~'\nPERL_API_VERSION='~PERL_API_VERSION~'\nPATCHLEVEL='~PERL_VERSION~'\nPERL_PATCHLEVEL='~PERL_PATCHLEVEL~'\nPERL_CONFIG_SH='true'\nCONFIGDOTSH='true'\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/win32/config.vc": "## Configured by: ~cf_email~\n## Target system: WIN32\nAuthor=''\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.lib'\n_exe='.exe'\n_o='.obj'\nafs='false'\nafsroot='/afs'\nalignbytes='8'\nansi2knr=''\naphostname=''\napi_revision='~PERL_API_REVISION~'\napi_subversion='~PERL_API_SUBVERSION~'\napi_version='~PERL_API_VERSION~'\napi_versionstring='~PERL_API_REVISION~.~PERL_API_VERSION~.~PERL_API_SUBVERSION~'\nar='lib -ltcg'\narchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchlibexp='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchname64=''\narchname='MSWin32'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5'\nbash=''\nbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbinexp='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbison=''\nbootstrap_charset='undef'\nbyacc='byacc'\nbyteorder='1234'\nc=''\ncastflags='0'\ncat='type'\ncc='cl'\ncccdlflags=' '\nccdlflags=' '\nccflags='-MD -DWIN32'\nccflags_uselargefiles=''\nccname='~cc~'\nccsymbols=''\nccversion=''\ncf_by='nobody'\ncf_email='nobody@no.where.net'\ncf_time=''\ncharbits='8'\nchgrp=''\nchmod=''\nchown=''\nclocktype='clock_t'\ncomm=''\ncompress=''\ncontains='grep'\ncp='copy'\ncpio=''\ncpp='~cc~ -nologo -E'\ncpp_stuff='42'\ncppccsymbols=''\ncppflags='-DWIN32'\ncpplast=''\ncppminus=''\ncpprun='~cc~ -nologo -E'\ncppstdin='cppstdin'\ncppsymbols=''\ncrypt_r_proto='0'\ncryptlib=''\ncsh='undef'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEUldbl='undef'\nd_PRIFUldbl='undef'\nd_PRIGUldbl='undef'\nd_PRIXU64='define'\nd_PRId64='define'\nd_PRIeldbl='undef'\nd_PRIfldbl='undef'\nd_PRIgldbl='undef'\nd_PRIi64='define'\nd_PRIo64='define'\nd_PRIu64='define'\nd_PRIx64='define'\nd_SCNfldbl='undef'\nd__fwalk='undef'\nd_access='define'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='define'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='undef'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bcmp='undef'\nd_bcopy='undef'\nd_bsd='define'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_bzero='undef'\nd_c99_variadic_macros='undef'\nd_casti32='undef'\nd_castneg='define'\nd_cbrt='undef'\nd_charvspr='undef'\nd_chown='undef'\nd_chroot='undef'\nd_chsize='define'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='define'\nd_cmsghdr_s='undef'\nd_const='define'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='define'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='undef'\nd_dbl_dig='define'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='define'\nd_dladdr='undef'\nd_dlerror='define'\nd_dlopen='define'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='define'\nd_eaccess='undef'\nd_endgrent='undef'\nd_endgrent_r='undef'\nd_endhent='undef'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='undef'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_eofnblk='define'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='define'\nd_fchdir='undef'\nd_fchmod='undef'\nd_fchown='undef'\nd_fcntl='undef'\nd_fcntl_can_lock='undef'\nd_fd_macros='define'\nd_fd_set='define'\nd_fdim='undef'\nd_fds_bits='define'\nd_fegetround='undef'\nd_fgetpos='define'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='define'\nd_flock='define'\nd_flockproto='define'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='undef'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='undef'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='define'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='undef'\nd_ftello='undef'\nd_ftime='define'\nd_futimes='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='undef'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='undef'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='undef'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='undef'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='undef'\nd_getpagsz='undef'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='undef'\nd_getppid='undef'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='undef'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='define'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_hasmntopt='undef'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='undef'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='define'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='define'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='define'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='define'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='undef'\nd_link='define'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='define'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_longdbl='define'\nd_longlong='undef'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='define'\nd_lstat='undef'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memchr='define'\nd_memcmp='define'\nd_memcpy='define'\nd_memmove='define'\nd_memset='define'\nd_mkdir='define'\nd_mkdtemp='undef'\nd_mkfifo='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='undef'\nd_nan='undef'\nd_ndbm='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='define'\nd_nv_zero_is_allbits_zero='define'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='undef'\nd_pathconf='undef'\nd_pause='define'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe='define'\nd_poll='undef'\nd_portable='define'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='define'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='undef'\nd_readv='undef'\nd_recvmsg='undef'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_safebcpy='undef'\nd_safemcpy='undef'\nd_sanemcmp='define'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='define'\nd_select='define'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='undef'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='undef'\nd_setlocale='define'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='undef'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='undef'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='undef'\nd_setvbuf='define'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='undef'\nd_signbit='undef'\nd_sigprocmask='undef'\nd_sigsetjmp='undef'\nd_sin6_scope_id='define'\nd_sitearch='define'\nd_snprintf='define'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='undef'\nd_sockpair='undef'\nd_socks5_init='undef'\nd_sprintf_returns_strlen='define'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='define'\nd_statvfs='undef'\nd_stdio_cnt_lval='define'\nd_stdio_ptr_lval='define'\nd_stdio_ptr_lval_nochange_cnt='define'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='define'\nd_stdstdio='define'\nd_strchr='define'\nd_strcoll='define'\nd_strctcpy='define'\nd_strerrm='strerror(e)'\nd_strerror='define'\nd_strerror_r='undef'\nd_strftime='define'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strtod='define'\nd_strtol='define'\nd_strtold='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='define'\nd_suidsafe='undef'\nd_symlink='undef'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='undef'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='undef'\nd_tcsetpgrp='undef'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='undef'\nd_time='define'\nd_timegm='undef'\nd_times='define'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='define'\nd_ualarm='undef'\nd_umask='define'\nd_uname='define'\nd_union_semun='define'\nd_unordered='undef'\nd_unsetenv='undef'\nd_usleep='undef'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vendorscript='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_volatile='define'\nd_vprintf='define'\nd_vsnprintf='define'\nd_wait4='undef'\nd_waitpid='define'\nd_wcscmp='define'\nd_wcstombs='define'\nd_wcsxfrm='define'\nd_wctomb='define'\nd_writev='undef'\nd_xenix='undef'\ndate='date'\ndb_hashtype='int'\ndb_prefixtype='int'\ndb_version_major='0'\ndb_version_minor='0'\ndb_version_patch='0'\ndirentrytype='struct direct'\ndlext='dll'\ndlsrc='dl_win32.xs'\ndoublekind='3'\ndoublesize='8'\ndrand01='Perl_drand48()'\ndrand48_r_proto='0'\ndtrace=''\ndynamic_ext='Socket IO Fcntl Opcode SDBM_File attributes'\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='egrep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext='.exe'\nexpr='expr'\nextensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nextern_C='extern'\nextras=''\nfflushNULL='define'\nfflushall='undef'\nfind='find'\nfirstmakefile='makefile'\nflex=''\nfpossize='8'\nfpostype='fpos_t'\nfreetype='void'\nfrom=':'\nfull_ar=''\nfull_csh=''\nfull_sed=''\ngccansipedantic=''\ngccosandvers=''\ngccversion=''\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"ld\"'\ngidsign='-1'\ngidsize='4'\ngidtype='gid_t'\nglibpth='/usr/shlib  /lib/pa1.1 /usr/lib/large /lib /usr/lib /usr/lib/386 /lib/386 /lib/large /usr/lib/small /lib/small /usr/ccs/lib /usr/ucblib /usr/shlib '\ngmake='gmake'\ngmtime_r_proto='0'\ngnulibc_version=''\ngrep='grep'\ngroupcat=''\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='false'\nh_sysfile='true'\nhint='recommended'\nhostcat='ypcat hosts'\nhtml1dir=' '\nhtml1direxp=''\nhtml3dir=' '\nhtml3direxp=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='__int64'\ni8size='1'\ni8type='char'\ni_arpainet='define'\ni_assert='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='define'\ni_execinfo='undef'\ni_fcntl='define'\ni_fenv='undef'\ni_float='define'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='undef'\ni_ieeefp='undef'\ni_inttypes='undef'\ni_langinfo='undef'\ni_libutil='undef'\ni_limits='define'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='define'\ni_mallocmalloc='undef'\ni_math='define'\ni_memory='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='undef'\ni_neterrno='undef'\ni_netinettcp='undef'\ni_niin='undef'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='undef'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdarg='define'\ni_stdbool='undef'\ni_stddef='define'\ni_stdint='undef'\ni_stdlib='define'\ni_string='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='define'\ni_sysin='undef'\ni_sysioctl='undef'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='undef'\ni_syspoll='undef'\ni_sysresrc='undef'\ni_syssecrt='undef'\ni_sysselct='undef'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='undef'\ni_systimek='undef'\ni_systimes='undef'\ni_systypes='define'\ni_sysuio='undef'\ni_sysun='undef'\ni_sysutsname='undef'\ni_sysvfs='undef'\ni_syswait='undef'\ni_termio='undef'\ni_termios='undef'\ni_time='define'\ni_unistd='undef'\ni_ustat='undef'\ni_utime='define'\ni_values='undef'\ni_varargs='undef'\ni_varhdr='varargs.h'\ni_vfork='undef'\nignore_versioned_solibs=''\ninc_version_list=''\ninc_version_list_init='0'\nincpath=''\ninews=''\ninitialinstalllocation=''\ninstallarchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\ninstallbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallhtml1dir=''\ninstallhtml3dir=''\ninstallhtmldir='~INST_TOP~~INST_VER~\\html'\ninstallhtmlhelpdir='~INST_TOP~~INST_VER~\\htmlhelp'\ninstallman1dir='~INST_TOP~~INST_VER~\\man\\man1'\ninstallman3dir='~INST_TOP~~INST_VER~\\man\\man3'\ninstallprefix='~INST_TOP~~INST_VER~'\ninstallprefixexp='~INST_TOP~~INST_VER~'\ninstallprivlib='~INST_TOP~~INST_VER~\\lib'\ninstallscript='~INST_TOP~~INST_VER~\\bin'\ninstallsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\ninstallsitebin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallsitehtml1dir=''\ninstallsitehtml3dir=''\ninstallsitelib='~INST_TOP~\\site~INST_VER~\\lib'\ninstallsiteman1dir=''\ninstallsiteman3dir=''\ninstallsitescript=''\ninstallstyle='lib'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorhtml1dir=''\ninstallvendorhtml3dir=''\ninstallvendorlib=''\ninstallvendorman1dir=''\ninstallvendorman3dir=''\ninstallvendorscript=''\nintsize='4'\nissymlink=''\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nknown_extensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nksh=''\nld='link'\nlddlflags='-dll ~LINK_FLAGS~'\nldflags='~LINK_FLAGS~'\nldflags_uselargefiles=''\nldlibpthname=''\nless='less'\nlib_ext='.lib'\nlibc='msvcrt.lib'\nlibperl='perl.lib'\nlibpth=''\nlibs=''\nlibsdirs=''\nlibsfiles=''\nlibsfound=''\nlibspath=''\nlibswanted='net socket inet nsl nm ndbm gdbm dbm db malloc dl ld sun m c cposix posix ndir dir crypt ucb bsd BSD PW x'\nlibswanted_uselargefiles='net socket inet nsl nm ndbm gdbm dbm db malloc dl ld sun m c cposix posix ndir dir crypt ucb bsd BSD PW x'\nline='line'\nlint=''\nlkflags=''\nln=''\nlns='copy'\nlocaltime_r_proto='0'\nlocincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'\nloclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'\nlongdblkind='0'\nlongdblsize='8'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='dir'\nlseeksize='4'\nlseektype='long'\nmad='undef'\nmail=''\nmailx=''\nmake='nmake'\nmake_set_make='#'\nmallocobj='malloc.o'\nmallocsrc='malloc.c'\nmalloctype='void *'\nman1dir='~INST_TOP~~INST_VER~\\man\\man1'\nman1direxp='~INST_TOP~~INST_VER~\\man\\man1'\nman1ext='1'\nman3dir='~INST_TOP~~INST_VER~\\man\\man3'\nman3direxp='~INST_TOP~~INST_VER~\\man\\man3'\nman3ext='3'\nmips_type=''\nmistrustnm=''\nmkdir='mkdir'\nmmaptype='void *'\nmodetype='mode_t'\nmore='more /e'\nmultiarch='undef'\nmv=''\nmyarchname='MSWin32'\nmydomain=''\nmyhostname=''\nmyuname=''\nn='-n'\nneed_va_copy='undef'\nnetdb_hlen_type='int'\nnetdb_host_type='char *'\nnetdb_name_type='char *'\nnetdb_net_type='long'\nnm=''\nnm_opt=''\nnm_so_opt=''\nnonxs_ext='Errno'\nnroff=''\nnvEUformat='\"E\"'\nnvFUformat='\"F\"'\nnvGUformat='\"G\"'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='32'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.obj'\nold_pthread_create_joinable=''\noptimize='-O'\norderlib='false'\nosname='MSWin32'\nosvers='4.0'\notherlibdirs=''\npackage='perl5'\npager='more /e'\npasscat=''\npatchlevel='~PERL_VERSION~'\npath_sep=';'\nperl5=''\nperl='perl'\nperl_patchlevel='~PERL_PATCHLEVEL~'\nperl_static_inline='static __inline'\nperladmin=''\nperllibs='~libs~'\nperlpath='~INST_TOP~~INST_VER~\\bin~INST_ARCH~\\perl.exe'\npg=''\nphostname='hostname'\npidtype='int'\nplibpth=''\npmake=''\npr=''\nprefix='~INST_TOP~'\nprefixexp='~INST_TOP~'\nprivlib='~INST_TOP~~INST_VER~\\lib'\nprivlibexp='~INST_TOP~~INST_VER~\\lib'\nprocselfexe=''\nprototype='define'\nptrsize='4'\nquadkind='5'\nquadtype='__int64'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nranlib='rem'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='del'\nrm_try=''\nrmail=''\nrun=''\nrunnm='true'\nsGMTIME_max=\"2147483647\"\nsGMTIME_min=\"0\"\nsLOCALTIME_max=\"2147483647\"\nsLOCALTIME_min=\"0\"\nsPRIEUldbl='\"E\"'\nsPRIFUldbl='\"F\"'\nsPRIGUldbl='\"G\"'\nsPRIXU64='\"lX\"'\nsPRId64='\"ld\"'\nsPRIeldbl='\"e\"'\nsPRIfldbl='\"f\"'\nsPRIgldbl='\"g\"'\nsPRIi64='\"li\"'\nsPRIo64='\"lo\"'\nsPRIu64='\"lu\"'\nsPRIx64='\"lx\"'\nsSCNfldbl='\"f\"'\nsched_yield=''\nscriptdir='~INST_TOP~~INST_VER~\\bin'\nscriptdirexp='~INST_TOP~~INST_VER~\\bin'\nsed='sed'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype='Perl_fd_set *'\nsendmail='blat'\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='cmd /x /c'\nshar=''\nsharpbang='#!'\nshmattype='void *'\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='26'\nsig_name='ZERO HUP INT QUIT ILL NUM05 NUM06 NUM07 FPE KILL NUM10 SEGV NUM12 PIPE ALRM TERM NUM16 NUM17 NUM18 NUM19 CHLD BREAK ABRT STOP NUM24 CONT CLD'\nsig_name_init='\"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0'\nsig_num='0 1 2 21 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 20'\nsig_num_init='0, 1, 2, 21, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0'\nsig_size='27'\nsignal_t='void'\nsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitearchexp='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitebin='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitebinexp='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitehtml1dir=''\nsitehtml1direxp=''\nsitehtml3dir=''\nsitehtml3direxp=''\nsitelib='~INST_TOP~\\site~INST_VER~\\lib'\nsitelib_stem=''\nsitelibexp='~INST_TOP~\\site~INST_VER~\\lib'\nsiteman1dir=''\nsiteman1direxp=''\nsiteman3dir=''\nsiteman3direxp=''\nsiteprefix='~INST_TOP~\\site~INST_VER~'\nsiteprefixexp='~INST_TOP~\\site~INST_VER~'\nsitescript=''\nsitescriptexp=''\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nso='dll'\nsockethdr=''\nsocketlib=''\nsocksizetype='int'\nsort='sort'\nspackage='Perl5'\nspitshell=''\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc=''\nssizetype='int'\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!perl'\nstartsh='#!/bin/sh'\nstatic_ext=' '\nstdchar='char'\nstdio_base='((fp)->_base)'\nstdio_bufsiz='((fp)->_cnt + (fp)->_ptr - (fp)->_base)'\nstdio_cnt='((fp)->_cnt)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/usr/include/string.h'\nsubmit=''\nsubversion='~PERL_SUBVERSION~'\nsysman='/usr/man/man1'\ntail=''\ntar=''\ntargetarch=''\ntargetsh='cmd /x /c'\ntbl=''\ntee=''\ntest=''\ntimeincl='/usr/include/sys/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\nto=':'\ntouch='touch'\ntr=''\ntrnl='\\012'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned __int64'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"ld\"'\nuidsign='-1'\nuidsize='4'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned __int64'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='define'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='undef'\nuselongdouble='undef'\nusemallocwrap='define'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='true'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvaproto='undef'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorhtml1dir=' '\nvendorhtml1direxp=''\nvendorhtml3dir=' '\nvendorhtml3direxp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorman1dir=' '\nvendorman1direxp=''\nvendorman3dir=' '\nvendorman3direxp=''\nvendorprefix=''\nvendorprefixexp=''\nvendorscript=''\nvendorscriptexp=''\nversion=''\nversion_patchlevel_string=''\nversiononly='undef'\nvi=''\nxlibpth='/usr/lib/386 /lib/386'\nyacc='yacc'\nyaccflags=''\nzcat=''\nzip='zip'\nPERL_REVISION='~PERL_REVISION~'\nPERL_SUBVERSION='~PERL_SUBVERSION~'\nPERL_VERSION='~PERL_VERSION~'\nPERL_API_REVISION='~PERL_API_REVISION~'\nPERL_API_SUBVERSION='~PERL_API_SUBVERSION~'\nPERL_API_VERSION='~PERL_API_VERSION~'\nPERL_PATCHLEVEL='~PERL_PATCHLEVEL~'\nPERL_CONFIG_SH='true'\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/win32/config.gc": "## Configured by: ~cf_email~\n## Target system: WIN32\nAuthor=''\nDate='$Date'\nHeader=''\nId='$Id'\nLocker=''\nLog='$Log'\nRCSfile='$RCSfile'\nRevision='$Revision'\nSource=''\nState=''\n_a='.a'\n_exe='.exe'\n_o='.o'\nafs='false'\nafsroot='/afs'\nalignbytes='8'\nansi2knr=''\naphostname=''\napi_revision='~PERL_API_REVISION~'\napi_subversion='~PERL_API_SUBVERSION~'\napi_version='~PERL_API_VERSION~'\napi_versionstring='~PERL_API_REVISION~.~PERL_API_VERSION~.~PERL_API_SUBVERSION~'\nar='~ARCHPREFIX~ar'\narchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchlibexp='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\narchname64=''\narchname='MSWin32'\narchobjs=''\nasctime_r_proto='0'\nawk='awk'\nbaserev='5'\nbash=''\nbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbinexp='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\nbison=''\nbootstrap_charset='undef'\nbyacc='byacc'\nbyteorder='1234'\nc=''\ncastflags='0'\ncat='type'\ncc='~ARCHPREFIX~gcc'\ncccdlflags=' '\nccdlflags=' '\nccflags='-MD -DWIN32'\nccflags_uselargefiles=''\nccname='~cc~'\nccsymbols=''\nccversion=''\ncf_by='nobody'\ncf_email='nobody@no.where.net'\ncf_time=''\ncharbits='8'\nchgrp=''\nchmod=''\nchown=''\nclocktype='clock_t'\ncomm=''\ncompress=''\ncontains='grep'\ncp='copy'\ncpio=''\ncpp='~cc~ -E'\ncpp_stuff='42'\ncppccsymbols=''\ncppflags='-DWIN32'\ncpplast=''\ncppminus='-'\ncpprun='~cc~ -E'\ncppstdin='~cc~ -E'\ncppsymbols=''\ncrypt_r_proto='0'\ncryptlib=''\ncsh='undef'\nctermid_r_proto='0'\nctime_r_proto='0'\nd_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\nd_PRIEUldbl='undef'\nd_PRIFUldbl='undef'\nd_PRIGUldbl='undef'\nd_PRIXU64='define'\nd_PRId64='define'\nd_PRIeldbl='undef'\nd_PRIfldbl='undef'\nd_PRIgldbl='undef'\nd_PRIi64='define'\nd_PRIo64='define'\nd_PRIu64='define'\nd_PRIx64='define'\nd_SCNfldbl='undef'\nd__fwalk='undef'\nd_access='define'\nd_accessx='undef'\nd_acosh='undef'\nd_aintl='undef'\nd_alarm='define'\nd_archlib='define'\nd_asctime64='undef'\nd_asctime_r='undef'\nd_asinh='undef'\nd_atanh='undef'\nd_atolf='undef'\nd_atoll='undef'\nd_attribute_deprecated='undef'\nd_attribute_format='undef'\nd_attribute_malloc='undef'\nd_attribute_nonnull='undef'\nd_attribute_noreturn='undef'\nd_attribute_pure='undef'\nd_attribute_unused='undef'\nd_attribute_warn_unused_result='undef'\nd_backtrace='undef'\nd_bcmp='undef'\nd_bcopy='undef'\nd_bsd='define'\nd_bsdgetpgrp='undef'\nd_bsdsetpgrp='undef'\nd_builtin_choose_expr='undef'\nd_builtin_expect='undef'\nd_bzero='undef'\nd_c99_variadic_macros='undef'\nd_casti32='define'\nd_castneg='define'\nd_cbrt='undef'\nd_charvspr='undef'\nd_chown='undef'\nd_chroot='undef'\nd_chsize='define'\nd_class='undef'\nd_clearenv='undef'\nd_closedir='define'\nd_cmsghdr_s='undef'\nd_const='define'\nd_copysign='undef'\nd_copysignl='undef'\nd_cplusplus='undef'\nd_crypt='define'\nd_crypt_r='undef'\nd_csh='undef'\nd_ctermid='undef'\nd_ctermid_r='undef'\nd_ctime64='undef'\nd_ctime_r='undef'\nd_cuserid='undef'\nd_dbl_dig='define'\nd_dbminitproto='undef'\nd_difftime64='undef'\nd_difftime='define'\nd_dir_dd_fd='undef'\nd_dirfd='undef'\nd_dirnamlen='define'\nd_dladdr='undef'\nd_dlerror='define'\nd_dlopen='define'\nd_dlsymun='undef'\nd_dosuid='undef'\nd_drand48_r='undef'\nd_drand48proto='undef'\nd_dup2='define'\nd_eaccess='undef'\nd_endgrent='undef'\nd_endgrent_r='undef'\nd_endhent='undef'\nd_endhostent_r='undef'\nd_endnent='undef'\nd_endnetent_r='undef'\nd_endpent='undef'\nd_endprotoent_r='undef'\nd_endpwent='undef'\nd_endpwent_r='undef'\nd_endsent='undef'\nd_endservent_r='undef'\nd_eofnblk='define'\nd_erf='undef'\nd_erfc='undef'\nd_eunice='undef'\nd_exp2='undef'\nd_expm1='undef'\nd_faststdio='define'\nd_fchdir='undef'\nd_fchmod='undef'\nd_fchown='undef'\nd_fcntl='undef'\nd_fcntl_can_lock='undef'\nd_fd_macros='define'\nd_fd_set='define'\nd_fdim='undef'\nd_fds_bits='define'\nd_fegetround='undef'\nd_fgetpos='define'\nd_finite='undef'\nd_finitel='undef'\nd_flexfnam='define'\nd_flock='define'\nd_flockproto='define'\nd_fma='undef'\nd_fmax='undef'\nd_fmin='undef'\nd_fork='undef'\nd_fp_class='undef'\nd_fp_classify='undef'\nd_fp_classl='undef'\nd_fpathconf='undef'\nd_fpclass='undef'\nd_fpclassify='undef'\nd_fpclassl='undef'\nd_fpgetround='undef'\nd_fpos64_t='undef'\nd_frexpl='undef'\nd_fs_data_s='undef'\nd_fseeko='undef'\nd_fsetpos='define'\nd_fstatfs='undef'\nd_fstatvfs='undef'\nd_fsync='undef'\nd_ftello='undef'\nd_ftime='define'\nd_futimes='undef'\nd_gdbm_ndbm_h_uses_prototypes='undef'\nd_gdbmndbm_h_uses_prototypes='undef'\nd_getaddrinfo='undef'\nd_getcwd='define'\nd_getespwnam='undef'\nd_getfsstat='undef'\nd_getgrent='undef'\nd_getgrent_r='undef'\nd_getgrgid_r='undef'\nd_getgrnam_r='undef'\nd_getgrps='undef'\nd_gethbyaddr='define'\nd_gethbyname='define'\nd_gethent='undef'\nd_gethname='define'\nd_gethostbyaddr_r='undef'\nd_gethostbyname_r='undef'\nd_gethostent_r='undef'\nd_gethostprotos='define'\nd_getitimer='undef'\nd_getlogin='define'\nd_getlogin_r='undef'\nd_getmnt='undef'\nd_getmntent='undef'\nd_getnameinfo='undef'\nd_getnbyaddr='undef'\nd_getnbyname='undef'\nd_getnent='undef'\nd_getnetbyaddr_r='undef'\nd_getnetbyname_r='undef'\nd_getnetent_r='undef'\nd_getnetprotos='undef'\nd_getpagsz='undef'\nd_getpbyname='define'\nd_getpbynumber='define'\nd_getpent='undef'\nd_getpgid='undef'\nd_getpgrp2='undef'\nd_getpgrp='undef'\nd_getppid='undef'\nd_getprior='undef'\nd_getprotobyname_r='undef'\nd_getprotobynumber_r='undef'\nd_getprotoent_r='undef'\nd_getprotoprotos='define'\nd_getprpwnam='undef'\nd_getpwent='undef'\nd_getpwent_r='undef'\nd_getpwnam_r='undef'\nd_getpwuid_r='undef'\nd_getsbyname='define'\nd_getsbyport='define'\nd_getsent='undef'\nd_getservbyname_r='undef'\nd_getservbyport_r='undef'\nd_getservent_r='undef'\nd_getservprotos='define'\nd_getspnam='undef'\nd_getspnam_r='undef'\nd_gettimeod='define'\nd_gmtime64='undef'\nd_gmtime_r='undef'\nd_gnulibc='undef'\nd_grpasswd='undef'\nd_hasmntopt='undef'\nd_htonl='define'\nd_hypot='undef'\nd_ilogb='undef'\nd_ilogbl='undef'\nd_inc_version_list='undef'\nd_index='undef'\nd_inetaton='undef'\nd_inetntop='undef'\nd_inetpton='undef'\nd_int64_t='undef'\nd_ip_mreq='undef'\nd_ip_mreq_source='undef'\nd_ipv6_mreq='undef'\nd_ipv6_mreq_source='undef'\nd_isascii='define'\nd_isblank='undef'\nd_isfinite='undef'\nd_isfinitel='undef'\nd_isinf='undef'\nd_isinfl='undef'\nd_isless='undef'\nd_isnan='define'\nd_isnanl='undef'\nd_isnormal='undef'\nd_j0='undef'\nd_j0l='undef'\nd_killpg='define'\nd_lc_monetary_2008='undef'\nd_lchown='undef'\nd_ldbl_dig='define'\nd_ldexpl='undef'\nd_lgamma='undef'\nd_lgamma_r='undef'\nd_libm_lib_version='undef'\nd_link='define'\nd_llrint='undef'\nd_llrintl='undef'\nd_llround='undef'\nd_llroundl='undef'\nd_localtime64='undef'\nd_localtime_r='undef'\nd_localtime_r_needs_tzset='undef'\nd_locconv='define'\nd_lockf='undef'\nd_log1p='undef'\nd_log2='undef'\nd_logb='undef'\nd_longdbl='define'\nd_longlong='define'\nd_lrint='undef'\nd_lrintl='undef'\nd_lround='undef'\nd_lroundl='undef'\nd_lseekproto='define'\nd_lstat='undef'\nd_madvise='undef'\nd_malloc_good_size='undef'\nd_malloc_size='undef'\nd_mblen='define'\nd_mbstowcs='define'\nd_mbtowc='define'\nd_memchr='define'\nd_memcmp='define'\nd_memcpy='define'\nd_memmove='define'\nd_memset='define'\nd_mkdir='define'\nd_mkdtemp='undef'\nd_mkfifo='undef'\nd_mkstemp='undef'\nd_mkstemps='undef'\nd_mktime64='undef'\nd_mktime='define'\nd_mmap='undef'\nd_modfl='undef'\nd_modfl_pow32_bug='undef'\nd_modflproto='undef'\nd_mprotect='undef'\nd_msg='undef'\nd_msg_ctrunc='undef'\nd_msg_dontroute='undef'\nd_msg_oob='undef'\nd_msg_peek='undef'\nd_msg_proxy='undef'\nd_msgctl='undef'\nd_msgget='undef'\nd_msghdr_s='undef'\nd_msgrcv='undef'\nd_msgsnd='undef'\nd_msync='undef'\nd_munmap='undef'\nd_mymalloc='undef'\nd_nan='undef'\nd_ndbm='undef'\nd_ndbm_h_uses_prototypes='undef'\nd_nearbyint='undef'\nd_nextafter='undef'\nd_nexttoward='undef'\nd_nice='undef'\nd_nl_langinfo='undef'\nd_nv_preserves_uv='define'\nd_nv_zero_is_allbits_zero='define'\nd_off64_t='undef'\nd_old_pthread_create_joinable='undef'\nd_oldpthreads='undef'\nd_oldsock='undef'\nd_open3='undef'\nd_pathconf='undef'\nd_pause='define'\nd_perl_otherlibdirs='undef'\nd_phostname='undef'\nd_pipe='define'\nd_poll='undef'\nd_portable='define'\nd_prctl='undef'\nd_prctl_set_name='undef'\nd_printf_format_null='undef'\nd_procselfexe='undef'\nd_pseudofork='undef'\nd_pthread_atfork='undef'\nd_pthread_attr_setscope='undef'\nd_pthread_yield='undef'\nd_ptrdiff_t='define'\nd_pwage='undef'\nd_pwchange='undef'\nd_pwclass='undef'\nd_pwcomment='undef'\nd_pwexpire='undef'\nd_pwgecos='undef'\nd_pwpasswd='undef'\nd_pwquota='undef'\nd_qgcvt='undef'\nd_quad='define'\nd_random_r='undef'\nd_readdir64_r='undef'\nd_readdir='define'\nd_readdir_r='undef'\nd_readlink='undef'\nd_readv='undef'\nd_recvmsg='undef'\nd_regcomp='undef'\nd_remainder='undef'\nd_remquo='undef'\nd_rename='define'\nd_rewinddir='define'\nd_rint='undef'\nd_rmdir='define'\nd_round='undef'\nd_safebcpy='undef'\nd_safemcpy='undef'\nd_sanemcmp='define'\nd_sbrkproto='undef'\nd_scalbn='undef'\nd_scalbnl='undef'\nd_sched_yield='undef'\nd_scm_rights='undef'\nd_seekdir='define'\nd_select='define'\nd_sem='undef'\nd_semctl='undef'\nd_semctl_semid_ds='undef'\nd_semctl_semun='undef'\nd_semget='undef'\nd_semop='undef'\nd_sendmsg='undef'\nd_setegid='undef'\nd_seteuid='undef'\nd_setgrent='undef'\nd_setgrent_r='undef'\nd_setgrps='undef'\nd_sethent='undef'\nd_sethostent_r='undef'\nd_setitimer='undef'\nd_setlinebuf='undef'\nd_setlocale='define'\nd_setlocale_r='undef'\nd_setnent='undef'\nd_setnetent_r='undef'\nd_setpent='undef'\nd_setpgid='undef'\nd_setpgrp2='undef'\nd_setpgrp='undef'\nd_setprior='undef'\nd_setproctitle='undef'\nd_setprotoent_r='undef'\nd_setpwent='undef'\nd_setpwent_r='undef'\nd_setregid='undef'\nd_setresgid='undef'\nd_setresuid='undef'\nd_setreuid='undef'\nd_setrgid='undef'\nd_setruid='undef'\nd_setsent='undef'\nd_setservent_r='undef'\nd_setsid='undef'\nd_setvbuf='define'\nd_shm='undef'\nd_shmat='undef'\nd_shmatprototype='undef'\nd_shmctl='undef'\nd_shmdt='undef'\nd_shmget='undef'\nd_sigaction='undef'\nd_signbit='undef'\nd_sigprocmask='undef'\nd_sigsetjmp='undef'\nd_sin6_scope_id='define'\nd_sitearch='define'\nd_snprintf='define'\nd_sockaddr_in6='undef'\nd_sockaddr_sa_len='undef'\nd_sockatmark='undef'\nd_sockatmarkproto='undef'\nd_socket='define'\nd_socklen_t='undef'\nd_sockpair='undef'\nd_socks5_init='undef'\nd_sprintf_returns_strlen='define'\nd_sqrtl='undef'\nd_srand48_r='undef'\nd_srandom_r='undef'\nd_sresgproto='undef'\nd_sresuproto='undef'\nd_stat='define'\nd_statblks='undef'\nd_statfs_f_flags='undef'\nd_statfs_s='undef'\nd_static_inline='define'\nd_statvfs='undef'\nd_stdio_cnt_lval='define'\nd_stdio_ptr_lval='define'\nd_stdio_ptr_lval_nochange_cnt='define'\nd_stdio_ptr_lval_sets_cnt='undef'\nd_stdio_stream_array='undef'\nd_stdiobase='define'\nd_stdstdio='define'\nd_strchr='define'\nd_strcoll='define'\nd_strctcpy='define'\nd_strerrm='strerror(e)'\nd_strerror='define'\nd_strerror_r='undef'\nd_strftime='define'\nd_strlcat='undef'\nd_strlcpy='undef'\nd_strtod='define'\nd_strtol='define'\nd_strtold='undef'\nd_strtoll='undef'\nd_strtoq='undef'\nd_strtoul='define'\nd_strtoull='undef'\nd_strtouq='undef'\nd_strxfrm='define'\nd_suidsafe='undef'\nd_symlink='undef'\nd_syscall='undef'\nd_syscallproto='undef'\nd_sysconf='undef'\nd_sysernlst=''\nd_syserrlst='define'\nd_system='define'\nd_tcgetpgrp='undef'\nd_tcsetpgrp='undef'\nd_telldir='define'\nd_telldirproto='define'\nd_tgamma='undef'\nd_time='define'\nd_timegm='undef'\nd_times='define'\nd_tm_tm_gmtoff='undef'\nd_tm_tm_zone='undef'\nd_tmpnam_r='undef'\nd_trunc='undef'\nd_truncate='undef'\nd_truncl='undef'\nd_ttyname_r='undef'\nd_tzname='define'\nd_u32align='define'\nd_ualarm='undef'\nd_umask='define'\nd_uname='define'\nd_union_semun='define'\nd_unordered='undef'\nd_unsetenv='undef'\nd_usleep='undef'\nd_usleepproto='undef'\nd_ustat='undef'\nd_vendorarch='undef'\nd_vendorbin='undef'\nd_vendorlib='undef'\nd_vendorscript='undef'\nd_vfork='undef'\nd_void_closedir='undef'\nd_voidsig='define'\nd_voidtty=''\nd_volatile='define'\nd_vprintf='define'\nd_vsnprintf='define'\nd_wait4='undef'\nd_waitpid='define'\nd_wcscmp='define'\nd_wcstombs='define'\nd_wcsxfrm='define'\nd_wctomb='define'\nd_writev='undef'\nd_xenix='undef'\ndate='date'\ndb_hashtype='int'\ndb_prefixtype='int'\ndb_version_major='0'\ndb_version_minor='0'\ndb_version_patch='0'\ndirentrytype='struct direct'\ndlext='dll'\ndlltool='~ARCHPREFIX~dlltool'\ndlsrc='dl_win32.xs'\ndoublekind='3'\ndoublesize='8'\ndrand01='Perl_drand48()'\ndrand48_r_proto='0'\ndtrace=''\ndynamic_ext='Socket IO Fcntl Opcode SDBM_File attributes'\neagain='EAGAIN'\nebcdic='undef'\necho='echo'\negrep='egrep'\nemacs=''\nendgrent_r_proto='0'\nendhostent_r_proto='0'\nendnetent_r_proto='0'\nendprotoent_r_proto='0'\nendpwent_r_proto='0'\nendservent_r_proto='0'\neunicefix=':'\nexe_ext='.exe'\nexpr='expr'\nextensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nextern_C='extern'\nextras=''\nfflushNULL='define'\nfflushall='undef'\nfind='find'\nfirstmakefile='makefile'\nflex=''\nfpossize='8'\nfpostype='fpos_t'\nfreetype='void'\nfrom=':'\nfull_ar=''\nfull_csh=''\nfull_sed=''\ngccansipedantic=''\ngccosandvers=''\ngccversion=''\ngetgrent_r_proto='0'\ngetgrgid_r_proto='0'\ngetgrnam_r_proto='0'\ngethostbyaddr_r_proto='0'\ngethostbyname_r_proto='0'\ngethostent_r_proto='0'\ngetlogin_r_proto='0'\ngetnetbyaddr_r_proto='0'\ngetnetbyname_r_proto='0'\ngetnetent_r_proto='0'\ngetprotobyname_r_proto='0'\ngetprotobynumber_r_proto='0'\ngetprotoent_r_proto='0'\ngetpwent_r_proto='0'\ngetpwnam_r_proto='0'\ngetpwuid_r_proto='0'\ngetservbyname_r_proto='0'\ngetservbyport_r_proto='0'\ngetservent_r_proto='0'\ngetspnam_r_proto='0'\ngidformat='\"ld\"'\ngidsign='-1'\ngidsize='4'\ngidtype='gid_t'\nglibpth='/usr/shlib  /lib/pa1.1 /usr/lib/large /lib /usr/lib /usr/lib/386 /lib/386 /lib/large /usr/lib/small /lib/small /usr/ccs/lib /usr/ucblib /usr/shlib '\ngmake='gmake'\ngmtime_r_proto='0'\ngnulibc_version=''\ngrep='grep'\ngroupcat=''\ngroupstype='gid_t'\ngzip='gzip'\nh_fcntl='false'\nh_sysfile='true'\nhint='recommended'\nhostcat='ypcat hosts'\nhtml1dir=' '\nhtml1direxp=''\nhtml3dir=' '\nhtml3direxp=''\ni16size='2'\ni16type='short'\ni32size='4'\ni32type='long'\ni64size='8'\ni64type='long long'\ni8size='1'\ni8type='char'\ni_arpainet='define'\ni_assert='define'\ni_bfd='undef'\ni_bsdioctl=''\ni_crypt='undef'\ni_db='undef'\ni_dbm='undef'\ni_dirent='define'\ni_dlfcn='define'\ni_execinfo='undef'\ni_fcntl='define'\ni_fenv='undef'\ni_float='define'\ni_fp='undef'\ni_fp_class='undef'\ni_gdbm='undef'\ni_gdbm_ndbm='undef'\ni_gdbmndbm='undef'\ni_grp='undef'\ni_ieeefp='undef'\ni_inttypes='undef'\ni_langinfo='undef'\ni_libutil='undef'\ni_limits='define'\ni_locale='define'\ni_machcthr='undef'\ni_malloc='define'\ni_mallocmalloc='undef'\ni_math='define'\ni_memory='undef'\ni_mntent='undef'\ni_ndbm='undef'\ni_netdb='undef'\ni_neterrno='undef'\ni_netinettcp='undef'\ni_niin='undef'\ni_poll='undef'\ni_prot='undef'\ni_pthread='undef'\ni_pwd='undef'\ni_quadmath='undef'\ni_rpcsvcdbm='undef'\ni_sgtty='undef'\ni_shadow='undef'\ni_socks='undef'\ni_stdarg='define'\ni_stdbool='define'\ni_stddef='define'\ni_stdint='undef'\ni_stdlib='define'\ni_string='define'\ni_sunmath='undef'\ni_sysaccess='undef'\ni_sysdir='undef'\ni_sysfile='undef'\ni_sysfilio='define'\ni_sysin='undef'\ni_sysioctl='undef'\ni_syslog='undef'\ni_sysmman='undef'\ni_sysmode='undef'\ni_sysmount='undef'\ni_sysndir='undef'\ni_sysparam='undef'\ni_syspoll='undef'\ni_sysresrc='undef'\ni_syssecrt='undef'\ni_sysselct='undef'\ni_syssockio='undef'\ni_sysstat='define'\ni_sysstatfs='undef'\ni_sysstatvfs='undef'\ni_systime='undef'\ni_systimek='undef'\ni_systimes='undef'\ni_systypes='define'\ni_sysuio='undef'\ni_sysun='undef'\ni_sysutsname='undef'\ni_sysvfs='undef'\ni_syswait='undef'\ni_termio='undef'\ni_termios='undef'\ni_time='define'\ni_unistd='undef'\ni_ustat='undef'\ni_utime='define'\ni_values='undef'\ni_varargs='undef'\ni_varhdr='varargs.h'\ni_vfork='undef'\nignore_versioned_solibs=''\ninc_version_list=''\ninc_version_list_init='0'\nincpath=''\ninews=''\ninitialinstalllocation=''\ninstallarchlib='~INST_TOP~~INST_VER~\\lib~INST_ARCH~'\ninstallbin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallhtml1dir=''\ninstallhtml3dir=''\ninstallhtmldir='~INST_TOP~~INST_VER~\\html'\ninstallhtmlhelpdir='~INST_TOP~~INST_VER~\\htmlhelp'\ninstallman1dir='~INST_TOP~~INST_VER~\\man\\man1'\ninstallman3dir='~INST_TOP~~INST_VER~\\man\\man3'\ninstallprefix='~INST_TOP~~INST_VER~'\ninstallprefixexp='~INST_TOP~~INST_VER~'\ninstallprivlib='~INST_TOP~~INST_VER~\\lib'\ninstallscript='~INST_TOP~~INST_VER~\\bin'\ninstallsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\ninstallsitebin='~INST_TOP~~INST_VER~\\bin~INST_ARCH~'\ninstallsitehtml1dir=''\ninstallsitehtml3dir=''\ninstallsitelib='~INST_TOP~\\site~INST_VER~\\lib'\ninstallsiteman1dir=''\ninstallsiteman3dir=''\ninstallsitescript=''\ninstallstyle='lib'\ninstallusrbinperl='undef'\ninstallvendorarch=''\ninstallvendorbin=''\ninstallvendorhtml1dir=''\ninstallvendorhtml3dir=''\ninstallvendorlib=''\ninstallvendorman1dir=''\ninstallvendorman3dir=''\ninstallvendorscript=''\nintsize='4'\nissymlink=''\nivdformat='\"ld\"'\nivsize='4'\nivtype='long'\nknown_extensions='~static_ext~ ~dynamic_ext~ ~nonxs_ext~'\nksh=''\nld='~ARCHPREFIX~g++'\nlddlflags='-mdll ~LINK_FLAGS~'\nldflags='~LINK_FLAGS~'\nldflags_uselargefiles=''\nldlibpthname=''\nless='less'\nlib_ext='.a'\nlibc='libmsvcrt.a'\nlibperl='libperl.a'\nlibpth=''\nlibs=''\nlibsdirs=''\nlibsfiles=''\nlibsfound=''\nlibspath=''\nlibswanted='net socket inet nsl nm ndbm gdbm dbm db malloc dl ld sun m c cposix posix ndir dir crypt ucb bsd BSD PW x'\nlibswanted_uselargefiles='net socket inet nsl nm ndbm gdbm dbm db malloc dl ld sun m c cposix posix ndir dir crypt ucb bsd BSD PW x'\nline='line'\nlint=''\nlkflags=''\nln=''\nlns='copy'\nlocaltime_r_proto='0'\nlocincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'\nloclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib'\nlongdblkind='3'\nlongdblsize='12'\nlonglongsize='8'\nlongsize='4'\nlp=''\nlpr=''\nls='dir'\nlseeksize='4'\nlseektype='long'\nmad='undef'\nmail=''\nmailx=''\nmake='dmake'\nmake_set_make='#'\nmallocobj='malloc.o'\nmallocsrc='malloc.c'\nmalloctype='void *'\nman1dir='~INST_TOP~~INST_VER~\\man\\man1'\nman1direxp='~INST_TOP~~INST_VER~\\man\\man1'\nman1ext='1'\nman3dir='~INST_TOP~~INST_VER~\\man\\man3'\nman3direxp='~INST_TOP~~INST_VER~\\man\\man3'\nman3ext='3'\nmips_type=''\nmistrustnm=''\nmkdir='mkdir'\nmmaptype='void *'\nmodetype='mode_t'\nmore='more /e'\nmultiarch='undef'\nmv=''\nmyarchname='MSWin32'\nmydomain=''\nmyhostname=''\nmyuname=''\nn='-n'\nneed_va_copy='undef'\nnetdb_hlen_type='int'\nnetdb_host_type='char *'\nnetdb_name_type='char *'\nnetdb_net_type='long'\nnm='~ARCHPREFIX~nm'\nnm_opt=''\nnm_so_opt=''\nnonxs_ext='Errno'\nnroff=''\nnvEUformat='\"E\"'\nnvFUformat='\"F\"'\nnvGUformat='\"G\"'\nnv_overflows_integers_at='256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0'\nnv_preserves_uv_bits='32'\nnveformat='\"e\"'\nnvfformat='\"f\"'\nnvgformat='\"g\"'\nnvsize='8'\nnvtype='double'\no_nonblock='O_NONBLOCK'\nobj_ext='.o'\nold_pthread_create_joinable=''\noptimize='-O2'\norderlib='false'\nosname='MSWin32'\nosvers='4.0'\notherlibdirs=''\npackage='perl5'\npager='more /e'\npasscat=''\npatchlevel='~PERL_VERSION~'\npath_sep=';'\nperl5=''\nperl='perl'\nperl_patchlevel='~PERL_PATCHLEVEL~'\nperl_static_inline='static __inline__'\nperladmin=''\nperllibs='~libs~'\nperlpath='~INST_TOP~~INST_VER~\\bin~INST_ARCH~\\perl.exe'\npg=''\nphostname='hostname'\npidtype='int'\nplibpth=''\npmake=''\npr=''\nprefix='~INST_TOP~'\nprefixexp='~INST_TOP~'\nprivlib='~INST_TOP~~INST_VER~\\lib'\nprivlibexp='~INST_TOP~~INST_VER~\\lib'\nprocselfexe=''\nprototype='define'\nptrsize='4'\nquadkind='3'\nquadtype='long long'\nrandbits='48'\nrandfunc='Perl_drand48'\nrandom_r_proto='0'\nrandseedtype='U32'\nranlib='rem'\nrd_nodata='-1'\nreaddir64_r_proto='0'\nreaddir_r_proto='0'\nrevision='5'\nrm='del'\nrm_try=''\nrmail=''\nrun=''\nrunnm='true'\nsGMTIME_max=\"2147483647\"\nsGMTIME_min=\"0\"\nsLOCALTIME_max=\"2147483647\"\nsLOCALTIME_min=\"0\"\nsPRIEUldbl='\"LE\"'\nsPRIFUldbl='\"LF\"'\nsPRIGUldbl='\"LG\"'\nsPRIXU64='\"lX\"'\nsPRId64='\"ld\"'\nsPRIeldbl='\"Le\"'\nsPRIfldbl='\"Lf\"'\nsPRIgldbl='\"Lg\"'\nsPRIi64='\"li\"'\nsPRIo64='\"lo\"'\nsPRIu64='\"lu\"'\nsPRIx64='\"lx\"'\nsSCNfldbl='\"Lf\"'\nsched_yield=''\nscriptdir='~INST_TOP~~INST_VER~\\bin'\nscriptdirexp='~INST_TOP~~INST_VER~\\bin'\nsed='sed'\nseedfunc='Perl_drand48_init'\nselectminbits='32'\nselecttype='Perl_fd_set *'\nsendmail='blat'\nsetgrent_r_proto='0'\nsethostent_r_proto='0'\nsetlocale_r_proto='0'\nsetnetent_r_proto='0'\nsetprotoent_r_proto='0'\nsetpwent_r_proto='0'\nsetservent_r_proto='0'\nsh='cmd /x /c'\nshar=''\nsharpbang='#!'\nshmattype='void *'\nshortsize='2'\nshrpenv=''\nshsharp='true'\nsig_count='26'\nsig_name='ZERO HUP INT QUIT ILL NUM05 NUM06 NUM07 FPE KILL NUM10 SEGV NUM12 PIPE ALRM TERM NUM16 NUM17 NUM18 NUM19 CHLD BREAK ABRT STOP NUM24 CONT CLD'\nsig_name_init='\"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0'\nsig_num='0 1 2 21 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 20'\nsig_num_init='0, 1, 2, 21, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0'\nsig_size='27'\nsignal_t='void'\nsitearch='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitearchexp='~INST_TOP~\\site~INST_VER~\\lib~INST_ARCH~'\nsitebin='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitebinexp='~INST_TOP~\\site~INST_VER~\\bin~INST_ARCH~'\nsitehtml1dir=''\nsitehtml1direxp=''\nsitehtml3dir=''\nsitehtml3direxp=''\nsitelib='~INST_TOP~\\site~INST_VER~\\lib'\nsitelib_stem=''\nsitelibexp='~INST_TOP~\\site~INST_VER~\\lib'\nsiteman1dir=''\nsiteman1direxp=''\nsiteman3dir=''\nsiteman3direxp=''\nsiteprefix='~INST_TOP~\\site~INST_VER~'\nsiteprefixexp='~INST_TOP~\\site~INST_VER~'\nsitescript=''\nsitescriptexp=''\nsizesize='4'\nsizetype='size_t'\nsleep=''\nsmail=''\nso='dll'\nsockethdr=''\nsocketlib=''\nsocksizetype='int'\nsort='sort'\nspackage='Perl5'\nspitshell=''\nsrand48_r_proto='0'\nsrandom_r_proto='0'\nsrc=''\nssizetype='int'\nst_ino_sign='1'\nst_ino_size='4'\nstartperl='#!perl'\nstartsh='#!/bin/sh'\nstatic_ext=' '\nstdchar='char'\nstdio_base='((fp)->_base)'\nstdio_bufsiz='((fp)->_cnt + (fp)->_ptr - (fp)->_base)'\nstdio_cnt='((fp)->_cnt)'\nstdio_filbuf=''\nstdio_ptr='((fp)->_ptr)'\nstdio_stream_array=''\nstrerror_r_proto='0'\nstrings='/usr/include/string.h'\nsubmit=''\nsubversion='~PERL_SUBVERSION~'\nsysman='/usr/man/man1'\ntail=''\ntar=''\ntargetarch=''\ntargetsh='cmd /x /c'\ntbl=''\ntee=''\ntest=''\ntimeincl='/usr/include/sys/time.h '\ntimetype='time_t'\ntmpnam_r_proto='0'\nto=':'\ntouch='touch'\ntr=''\ntrnl='\\012'\ntroff=''\nttyname_r_proto='0'\nu16size='2'\nu16type='unsigned short'\nu32size='4'\nu32type='unsigned long'\nu64size='8'\nu64type='unsigned long long'\nu8size='1'\nu8type='unsigned char'\nuidformat='\"ld\"'\nuidsign='-1'\nuidsize='4'\nuidtype='uid_t'\nuname='uname'\nuniq='uniq'\nuquadtype='unsigned long long'\nuse5005threads='undef'\nuse64bitall='undef'\nuse64bitint='undef'\nusecbacktrace='undef'\nusecrosscompile='undef'\nusedevel='undef'\nusedl='define'\nusedtrace='undef'\nusefaststdio='undef'\nuseithreads='undef'\nusekernprocpathname='undef'\nuselargefiles='undef'\nuselongdouble='undef'\nusemallocwrap='define'\nusemorebits='undef'\nusemultiplicity='undef'\nusemymalloc='n'\nusenm='false'\nusensgetexecutablepath='undef'\nuseopcode='true'\nuseperlio='define'\nuseposix='true'\nusequadmath='undef'\nusereentrant='undef'\nuserelocatableinc='undef'\nuseshrplib='true'\nusesitecustomize='undef'\nusesocks='undef'\nusethreads='undef'\nusevendorprefix='undef'\nusevfork='false'\nusrinc='/usr/include'\nuuname=''\nuvXUformat='\"lX\"'\nuvoformat='\"lo\"'\nuvsize='4'\nuvtype='unsigned long'\nuvuformat='\"lu\"'\nuvxformat='\"lx\"'\nvaproto='undef'\nvendorarch=''\nvendorarchexp=''\nvendorbin=''\nvendorbinexp=''\nvendorhtml1dir=' '\nvendorhtml1direxp=''\nvendorhtml3dir=' '\nvendorhtml3direxp=''\nvendorlib=''\nvendorlib_stem=''\nvendorlibexp=''\nvendorman1dir=' '\nvendorman1direxp=''\nvendorman3dir=' '\nvendorman3direxp=''\nvendorprefix=''\nvendorprefixexp=''\nvendorscript=''\nvendorscriptexp=''\nversion=''\nversion_patchlevel_string=''\nversiononly='undef'\nvi=''\nxlibpth='/usr/lib/386 /lib/386'\nyacc='yacc'\nyaccflags=''\nzcat=''\nzip='zip'\nPERL_REVISION='~PERL_REVISION~'\nPERL_SUBVERSION='~PERL_SUBVERSION~'\nPERL_VERSION='~PERL_VERSION~'\nPERL_API_REVISION='~PERL_API_REVISION~'\nPERL_API_SUBVERSION='~PERL_API_SUBVERSION~'\nPERL_API_VERSION='~PERL_API_VERSION~'\nPERL_PATCHLEVEL='~PERL_PATCHLEVEL~'\nPERL_CONFIG_SH='true'\n",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/win32/config_H.gc": "/* This file was produced by running the config_h.SH script, which\n * gets its values from undef, which is generally produced by\n * running Configure.\n *\n * Feel free to modify any of this as the need arises.  Note, however,\n * that running config_h.SH again will wipe out any changes you've made.\n * For a more permanent change edit undef and rerun config_h.SH.\n */\n\n/* Package name      : perl5\n * Source directory  : \n * Configuration time: Wed Sep 17 14:09:08 2014\n * Configured by     : shay\n * Target system     : \n */\n\n#ifndef _config_h_\n#define _config_h_\n\n/* LOC_SED:\n *\tThis symbol holds the complete pathname to the sed program.\n */\n#define LOC_SED \t\"\"\t/**/\n\n/* HAS_ALARM:\n *\tThis symbol, if defined, indicates that the alarm routine is\n *\tavailable.\n */\n#define HAS_ALARM\t\t/**/\n\n/* HAS_BCMP:\n *\tThis symbol is defined if the bcmp() routine is available to\n *\tcompare blocks of memory.\n */\n/*#define HAS_BCMP\t/ **/\n\n/* HAS_BCOPY:\n *\tThis symbol is defined if the bcopy() routine is available to\n *\tcopy blocks of memory.\n */\n/*#define HAS_BCOPY\t/ **/\n\n/* HAS_BZERO:\n *\tThis symbol is defined if the bzero() routine is available to\n *\tset a memory block to 0.\n */\n/*#define HAS_BZERO\t/ **/\n\n/* HAS_CHOWN:\n *\tThis symbol, if defined, indicates that the chown routine is\n *\tavailable.\n */\n/*#define HAS_CHOWN\t\t/ **/\n\n/* HAS_CHROOT:\n *\tThis symbol, if defined, indicates that the chroot routine is\n *\tavailable.\n */\n/*#define HAS_CHROOT\t\t/ **/\n\n/* HAS_CHSIZE:\n *\tThis symbol, if defined, indicates that the chsize routine is available\n *\tto truncate files.  You might need a -lx to get this routine.\n */\n#define\tHAS_CHSIZE\t\t/**/\n\n/* HAS_CRYPT:\n *\tThis symbol, if defined, indicates that the crypt routine is available\n *\tto encrypt passwords and the like.\n */\n#define HAS_CRYPT\t\t/**/\n\n/* HAS_CTERMID:\n *\tThis symbol, if defined, indicates that the ctermid routine is\n *\tavailable to generate filename for terminal.\n */\n/*#define HAS_CTERMID\t\t/ **/\n\n/* HAS_CUSERID:\n *\tThis symbol, if defined, indicates that the cuserid routine is\n *\tavailable to get character login names.\n */\n/*#define HAS_CUSERID\t\t/ **/\n\n/* HAS_DBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol DBL_DIG, which is the number\n *\tof significant digits in a double precision number.  If this\n *\tsymbol is not defined, a guess of 15 is usually pretty good.\n */\n#define HAS_DBL_DIG \t/**/\n\n/* HAS_DIFFTIME:\n *\tThis symbol, if defined, indicates that the difftime routine is\n *\tavailable.\n */\n#define HAS_DIFFTIME\t\t/**/\n\n/* HAS_DLERROR:\n *\tThis symbol, if defined, indicates that the dlerror routine is\n *\tavailable to return a string describing the last error that\n *\toccurred from a call to dlopen(), dlclose() or dlsym().\n */\n#define HAS_DLERROR\t/**/\n\n/* HAS_DUP2:\n *\tThis symbol, if defined, indicates that the dup2 routine is\n *\tavailable to duplicate file descriptors.\n */\n#define HAS_DUP2\t/**/\n\n/* HAS_FCHMOD:\n *\tThis symbol, if defined, indicates that the fchmod routine is available\n *\tto change mode of opened files.  If unavailable, use chmod().\n */\n/*#define HAS_FCHMOD\t\t/ **/\n\n/* HAS_FCHOWN:\n *\tThis symbol, if defined, indicates that the fchown routine is available\n *\tto change ownership of opened files.  If unavailable, use chown().\n */\n/*#define HAS_FCHOWN\t\t/ **/\n\n/* HAS_FCNTL:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe fcntl() function exists.\n */\n/*#define HAS_FCNTL\t\t/ **/\n\n/* HAS_FGETPOS:\n *\tThis symbol, if defined, indicates that the fgetpos routine is\n *\tavailable to get the file position indicator, similar to ftell().\n */\n#define HAS_FGETPOS\t/**/\n\n/* HAS_FLOCK:\n *\tThis symbol, if defined, indicates that the flock routine is\n *\tavailable to do file locking.\n */\n#define HAS_FLOCK\t\t/**/\n\n/* HAS_FORK:\n *\tThis symbol, if defined, indicates that the fork routine is\n *\tavailable.\n */\n/*#define HAS_FORK\t\t/ **/\n\n/* HAS_FSETPOS:\n *\tThis symbol, if defined, indicates that the fsetpos routine is\n *\tavailable to set the file position indicator, similar to fseek().\n */\n#define HAS_FSETPOS\t/**/\n\n/* HAS_GETTIMEOFDAY:\n *\tThis symbol, if defined, indicates that the gettimeofday() system\n *\tcall is available for a sub-second accuracy clock. Usually, the file\n *\t<sys/resource.h> needs to be included (see I_SYS_RESOURCE).\n *\tThe type \"Timeval\" should be used to refer to \"struct timeval\".\n */\n#define HAS_GETTIMEOFDAY\t/**/\n#ifdef HAS_GETTIMEOFDAY\n#define Timeval struct timeval\t/* Structure used by gettimeofday() */\n#endif\n\n/* HAS_GETGROUPS:\n *\tThis symbol, if defined, indicates that the getgroups() routine is\n *\tavailable to get the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_GETGROUPS\t\t/ **/\n\n/* HAS_GETLOGIN:\n *\tThis symbol, if defined, indicates that the getlogin routine is\n *\tavailable to get the login name.\n */\n#define HAS_GETLOGIN\t\t/**/\n\n/* HAS_GETPGID:\n *\tThis symbol, if defined, indicates to the C program that \n *\tthe getpgid(pid) function is available to get the\n *\tprocess group id.\n */\n/*#define HAS_GETPGID\t\t/ **/\n\n/* HAS_GETPGRP2:\n *\tThis symbol, if defined, indicates that the getpgrp2() (as in DG/UX)\n *\troutine is available to get the current process group.\n */\n/*#define HAS_GETPGRP2\t\t/ **/\n\n/* HAS_GETPPID:\n *\tThis symbol, if defined, indicates that the getppid routine is\n *\tavailable to get the parent process ID.\n */\n/*#define HAS_GETPPID\t\t/ **/\n\n/* HAS_GETPRIORITY:\n *\tThis symbol, if defined, indicates that the getpriority routine is\n *\tavailable to get a process's priority.\n */\n/*#define HAS_GETPRIORITY\t\t/ **/\n\n/* HAS_INET_ATON:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tinet_aton() function is available to parse IP address \"dotted-quad\"\n *\tstrings.\n */\n/*#define HAS_INET_ATON\t\t/ **/\n\n/* HAS_KILLPG:\n *\tThis symbol, if defined, indicates that the killpg routine is available\n *\tto kill process groups.  If unavailable, you probably should use kill\n *\twith a negative process number.\n */\n#define HAS_KILLPG\t/**/\n\n/* HAS_LINK:\n *\tThis symbol, if defined, indicates that the link routine is\n *\tavailable to create hard links.\n */\n#define HAS_LINK\t/**/\n\n/* HAS_LOCALECONV:\n *\tThis symbol, if defined, indicates that the localeconv routine is\n *\tavailable for numeric and monetary formatting conventions.\n */\n#define HAS_LOCALECONV\t/**/\n\n/* HAS_LOCKF:\n *\tThis symbol, if defined, indicates that the lockf routine is\n *\tavailable to do file locking.\n */\n/*#define HAS_LOCKF\t\t/ **/\n\n/* HAS_LSTAT:\n *\tThis symbol, if defined, indicates that the lstat routine is\n *\tavailable to do file stats on symbolic links.\n */\n/*#define HAS_LSTAT\t\t/ **/\n\n/* HAS_MBLEN:\n *\tThis symbol, if defined, indicates that the mblen routine is available\n *\tto find the number of bytes in a multibye character.\n */\n#define HAS_MBLEN\t\t/**/\n\n/* HAS_MBSTOWCS:\n *\tThis symbol, if defined, indicates that the mbstowcs routine is\n *\tavailable to convert a multibyte string into a wide character string.\n */\n#define\tHAS_MBSTOWCS\t\t/**/\n\n/* HAS_MBTOWC:\n *\tThis symbol, if defined, indicates that the mbtowc routine is available\n *\tto convert a multibyte to a wide character.\n */\n#define HAS_MBTOWC\t\t/**/\n\n/* HAS_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tto compare blocks of memory.\n */\n#define HAS_MEMCMP\t/**/\n\n/* HAS_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy blocks of memory.\n */\n#define HAS_MEMCPY\t/**/\n\n/* HAS_MEMMOVE:\n *\tThis symbol, if defined, indicates that the memmove routine is available\n *\tto copy potentially overlapping blocks of memory. This should be used\n *\tonly when HAS_SAFE_BCOPY is not defined. If neither is there, roll your\n *\town version.\n */\n#define HAS_MEMMOVE\t/**/\n\n/* HAS_MEMSET:\n *\tThis symbol, if defined, indicates that the memset routine is available\n *\tto set blocks of memory.\n */\n#define HAS_MEMSET\t/**/\n\n/* HAS_MKDIR:\n *\tThis symbol, if defined, indicates that the mkdir routine is available\n *\tto create directories.  Otherwise you should fork off a new process to\n *\texec /bin/mkdir.\n */\n#define HAS_MKDIR\t\t/**/\n\n/* HAS_MKFIFO:\n *\tThis symbol, if defined, indicates that the mkfifo routine is\n *\tavailable to create FIFOs. Otherwise, mknod should be able to\n *\tdo it for you. However, if mkfifo is there, mknod might require\n *\tsuper-user privileges which mkfifo will not.\n */\n/*#define HAS_MKFIFO\t\t/ **/\n\n/* HAS_MKTIME:\n *\tThis symbol, if defined, indicates that the mktime routine is\n *\tavailable.\n */\n#define HAS_MKTIME\t\t/**/\n\n/* HAS_MSYNC:\n *\tThis symbol, if defined, indicates that the msync system call is\n *\tavailable to synchronize a mapped file.\n */\n/*#define HAS_MSYNC\t\t/ **/\n\n/* HAS_MUNMAP:\n *\tThis symbol, if defined, indicates that the munmap system call is\n *\tavailable to unmap a region, usually mapped by mmap().\n */\n/*#define HAS_MUNMAP\t\t/ **/\n\n/* HAS_NICE:\n *\tThis symbol, if defined, indicates that the nice routine is\n *\tavailable.\n */\n/*#define HAS_NICE\t\t/ **/\n\n/* HAS_PATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given filename.\n */\n/* HAS_FPATHCONF:\n *\tThis symbol, if defined, indicates that pathconf() is available\n *\tto determine file-system related limits and options associated\n *\twith a given open file descriptor.\n */\n/*#define HAS_PATHCONF\t\t/ **/\n/*#define HAS_FPATHCONF\t\t/ **/\n\n/* HAS_PAUSE:\n *\tThis symbol, if defined, indicates that the pause routine is\n *\tavailable to suspend a process until a signal is received.\n */\n#define HAS_PAUSE\t\t/**/\n\n/* HAS_PIPE:\n *\tThis symbol, if defined, indicates that the pipe routine is\n *\tavailable to create an inter-process channel.\n */\n#define HAS_PIPE\t\t/**/\n\n/* HAS_POLL:\n *\tThis symbol, if defined, indicates that the poll routine is\n *\tavailable to poll active file descriptors.  Please check I_POLL and\n *\tI_SYS_POLL to know which header should be included as well.\n */\n/*#define HAS_POLL\t\t/ **/\n\n/* HAS_READDIR:\n *\tThis symbol, if defined, indicates that the readdir routine is\n *\tavailable to read directory entries. You may have to include\n *\t<dirent.h>. See I_DIRENT.\n */\n#define HAS_READDIR\t\t/**/\n\n/* HAS_SEEKDIR:\n *\tThis symbol, if defined, indicates that the seekdir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_SEEKDIR\t\t/**/\n\n/* HAS_TELLDIR:\n *\tThis symbol, if defined, indicates that the telldir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_TELLDIR\t\t/**/\n\n/* HAS_REWINDDIR:\n *\tThis symbol, if defined, indicates that the rewinddir routine is\n *\tavailable. You may have to include <dirent.h>. See I_DIRENT.\n */\n#define HAS_REWINDDIR\t\t/**/\n\n/* HAS_READLINK:\n *\tThis symbol, if defined, indicates that the readlink routine is\n *\tavailable to read the value of a symbolic link.\n */\n/*#define HAS_READLINK\t\t/ **/\n\n/* HAS_RENAME:\n *\tThis symbol, if defined, indicates that the rename routine is available\n *\tto rename files.  Otherwise you should do the unlink(), link(), unlink()\n *\ttrick.\n */\n#define HAS_RENAME\t/**/\n\n/* HAS_RMDIR:\n *\tThis symbol, if defined, indicates that the rmdir routine is\n *\tavailable to remove directories. Otherwise you should fork off a\n *\tnew process to exec /bin/rmdir.\n */\n#define HAS_RMDIR\t\t/**/\n\n/* HAS_SELECT:\n *\tThis symbol, if defined, indicates that the select routine is\n *\tavailable to select active file descriptors. If the timeout field\n *\tis used, <sys/time.h> may need to be included.\n */\n#define HAS_SELECT\t/**/\n\n/* HAS_SETEGID:\n *\tThis symbol, if defined, indicates that the setegid routine is available\n *\tto change the effective gid of the current program.\n */\n/*#define HAS_SETEGID\t\t/ **/\n\n/* HAS_SETEUID:\n *\tThis symbol, if defined, indicates that the seteuid routine is available\n *\tto change the effective uid of the current program.\n */\n/*#define HAS_SETEUID\t\t/ **/\n\n/* HAS_SETGROUPS:\n *\tThis symbol, if defined, indicates that the setgroups() routine is\n *\tavailable to set the list of process groups.  If unavailable, multiple\n *\tgroups are probably not supported.\n */\n/*#define HAS_SETGROUPS\t\t/ **/\n\n/* HAS_SETLINEBUF:\n *\tThis symbol, if defined, indicates that the setlinebuf routine is\n *\tavailable to change stderr or stdout from block-buffered or unbuffered\n *\tto a line-buffered mode.\n */\n/*#define HAS_SETLINEBUF\t\t/ **/\n\n/* HAS_SETLOCALE:\n *\tThis symbol, if defined, indicates that the setlocale routine is\n *\tavailable to handle locale-specific ctype implementations.\n */\n#define HAS_SETLOCALE\t/**/\n\n/* HAS_SETPGID:\n *\tThis symbol, if defined, indicates that the setpgid(pid, gpid)\n *\troutine is available to set process group ID.\n */\n/*#define HAS_SETPGID\t/ **/\n\n/* HAS_SETPGRP2:\n *\tThis symbol, if defined, indicates that the setpgrp2() (as in DG/UX)\n *\troutine is available to set the current process group.\n */\n/*#define HAS_SETPGRP2\t\t/ **/\n\n/* HAS_SETPRIORITY:\n *\tThis symbol, if defined, indicates that the setpriority routine is\n *\tavailable to set a process's priority.\n */\n/*#define HAS_SETPRIORITY\t\t/ **/\n\n/* HAS_SETREGID:\n *\tThis symbol, if defined, indicates that the setregid routine is\n *\tavailable to change the real and effective gid of the current\n *\tprocess.\n */\n/* HAS_SETRESGID:\n *\tThis symbol, if defined, indicates that the setresgid routine is\n *\tavailable to change the real, effective and saved gid of the current\n *\tprocess.\n */\n/*#define HAS_SETREGID\t\t/ **/\n/*#define HAS_SETRESGID\t\t/ **/\n\n/* HAS_SETREUID:\n *\tThis symbol, if defined, indicates that the setreuid routine is\n *\tavailable to change the real and effective uid of the current\n *\tprocess.\n */\n/* HAS_SETRESUID:\n *\tThis symbol, if defined, indicates that the setresuid routine is\n *\tavailable to change the real, effective and saved uid of the current\n *\tprocess.\n */\n/*#define HAS_SETREUID\t\t/ **/\n/*#define HAS_SETRESUID\t\t/ **/\n\n/* HAS_SETRGID:\n *\tThis symbol, if defined, indicates that the setrgid routine is available\n *\tto change the real gid of the current program.\n */\n/*#define HAS_SETRGID\t\t/ **/\n\n/* HAS_SETRUID:\n *\tThis symbol, if defined, indicates that the setruid routine is available\n *\tto change the real uid of the current program.\n */\n/*#define HAS_SETRUID\t\t/ **/\n\n/* HAS_SETSID:\n *\tThis symbol, if defined, indicates that the setsid routine is\n *\tavailable to set the process group ID.\n */\n/*#define HAS_SETSID\t/ **/\n\n/* HAS_STRCHR:\n *\tThis symbol is defined to indicate that the strchr()/strrchr()\n *\tfunctions are available for string searching. If not, try the\n *\tindex()/rindex() pair.\n */\n/* HAS_INDEX:\n *\tThis symbol is defined to indicate that the index()/rindex()\n *\tfunctions are available for string searching.\n */\n#define HAS_STRCHR\t/**/\n/*#define HAS_INDEX\t/ **/\n\n/* HAS_STRCOLL:\n *\tThis symbol, if defined, indicates that the strcoll routine is\n *\tavailable to compare strings using collating information.\n */\n#define HAS_STRCOLL\t/**/\n\n/* HAS_STRTOD:\n *\tThis symbol, if defined, indicates that the strtod routine is\n *\tavailable to provide better numeric string conversion than atof().\n */\n#define HAS_STRTOD\t/**/\n\n/* HAS_STRTOL:\n *\tThis symbol, if defined, indicates that the strtol routine is available\n *\tto provide better numeric string conversion than atoi() and friends.\n */\n#define HAS_STRTOL\t/**/\n\n/* HAS_STRXFRM:\n *\tThis symbol, if defined, indicates that the strxfrm() routine is\n *\tavailable to transform strings.\n */\n#define HAS_STRXFRM\t/**/\n\n/* HAS_SYMLINK:\n *\tThis symbol, if defined, indicates that the symlink routine is available\n *\tto create symbolic links.\n */\n/*#define HAS_SYMLINK\t/ **/\n\n/* HAS_SYSCALL:\n *\tThis symbol, if defined, indicates that the syscall routine is\n *\tavailable to call arbitrary system calls. If undefined, that's tough.\n */\n/*#define HAS_SYSCALL\t/ **/\n\n/* HAS_SYSCONF:\n *\tThis symbol, if defined, indicates that sysconf() is available\n *\tto determine system related limits and options.\n */\n/*#define HAS_SYSCONF\t/ **/\n\n/* HAS_SYSTEM:\n *\tThis symbol, if defined, indicates that the system routine is\n *\tavailable to issue a shell command.\n */\n#define HAS_SYSTEM\t/**/\n\n/* HAS_TCGETPGRP:\n *\tThis symbol, if defined, indicates that the tcgetpgrp routine is\n *\tavailable to get foreground process group ID.\n */\n/*#define HAS_TCGETPGRP\t\t/ **/\n\n/* HAS_TCSETPGRP:\n *\tThis symbol, if defined, indicates that the tcsetpgrp routine is\n *\tavailable to set foreground process group ID.\n */\n/*#define HAS_TCSETPGRP\t\t/ **/\n\n/* HAS_TRUNCATE:\n *\tThis symbol, if defined, indicates that the truncate routine is\n *\tavailable to truncate files.\n */\n/*#define HAS_TRUNCATE\t/ **/\n\n/* HAS_TZNAME:\n *\tThis symbol, if defined, indicates that the tzname[] array is\n *\tavailable to access timezone names.\n */\n#define HAS_TZNAME\t\t/**/\n\n/* HAS_UMASK:\n *\tThis symbol, if defined, indicates that the umask routine is\n *\tavailable to set and get the value of the file creation mask.\n */\n#define HAS_UMASK\t\t/**/\n\n/* HAS_USLEEP:\n *\tThis symbol, if defined, indicates that the usleep routine is\n *\tavailable to let the process sleep on a sub-second accuracy.\n */\n/*#define HAS_USLEEP\t\t/ **/\n\n/* HAS_WAIT4:\n *\tThis symbol, if defined, indicates that wait4() exists.\n */\n/*#define HAS_WAIT4\t/ **/\n\n/* HAS_WAITPID:\n *\tThis symbol, if defined, indicates that the waitpid routine is\n *\tavailable to wait for child process.\n */\n#define HAS_WAITPID\t/**/\n\n/* HAS_WCSTOMBS:\n *\tThis symbol, if defined, indicates that the wcstombs routine is\n *\tavailable to convert wide character strings to multibyte strings.\n */\n#define HAS_WCSTOMBS\t/**/\n\n/* HAS_WCTOMB:\n *\tThis symbol, if defined, indicates that the wctomb routine is available\n *\tto convert a wide character to a multibyte.\n */\n#define HAS_WCTOMB\t\t/**/\n\n/* Groups_t:\n *\tThis symbol holds the type used for the second argument to\n *\tgetgroups() and setgroups().  Usually, this is the same as\n *\tgidtype (gid_t) , but sometimes it isn't.\n *\tIt can be int, ushort, gid_t, etc... \n *\tIt may be necessary to include <sys/types.h> to get any \n *\ttypedef'ed information.  This is only required if you have\n *\tgetgroups() or setgroups()..\n */\n#if defined(HAS_GETGROUPS) || defined(HAS_SETGROUPS)\n#define Groups_t gid_t\t/* Type for 2nd arg to [sg]etgroups() */\n#endif\n\n/* I_ARPA_INET:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <arpa/inet.h> to get inet_addr and friends declarations.\n */\n#define\tI_ARPA_INET\t\t/**/\n\n/* I_DBM:\n *\tThis symbol, if defined, indicates that <dbm.h> exists and should\n *\tbe included.\n */\n/* I_RPCSVC_DBM:\n *\tThis symbol, if defined, indicates that <rpcsvc/dbm.h> exists and\n *\tshould be included.\n */\n/*#define I_DBM\t/ **/\n/*#define I_RPCSVC_DBM\t/ **/\n\n/* I_DLFCN:\n *\tThis symbol, if defined, indicates that <dlfcn.h> exists and should\n *\tbe included.\n */\n#define I_DLFCN\t\t/**/\n\n/* I_FCNTL:\n *\tThis manifest constant tells the C program to include <fcntl.h>.\n */\n#define I_FCNTL\t/**/\n\n/* I_FLOAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <float.h> to get definition of symbols like DBL_MAX or\n *\tDBL_MIN, i.e. machine dependent floating point values.\n */\n#define I_FLOAT\t\t/**/\n\n/* I_GDBM:\n *\tThis symbol, if defined, indicates that <gdbm.h> exists and should\n *\tbe included.\n */\n/*#define I_GDBM\t/ **/\n\n/* I_LIMITS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <limits.h> to get definition of symbols like WORD_BIT or\n *\tLONG_MAX, i.e. machine dependant limitations.\n */\n#define I_LIMITS\t\t/**/\n\n/* I_LOCALE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <locale.h>.\n */\n#define\tI_LOCALE\t\t/**/\n\n/* I_MATH:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <math.h>.\n */\n#define I_MATH\t\t/**/\n\n/* I_MEMORY:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <memory.h>.\n */\n/*#define I_MEMORY\t\t/ **/\n\n/* I_NETINET_IN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <netinet/in.h>. Otherwise, you may try <sys/in.h>.\n */\n/*#define I_NETINET_IN\t/ **/\n\n/* I_STDDEF:\n *\tThis symbol, if defined, indicates that <stddef.h> exists and should\n *\tbe included.\n */\n#define I_STDDEF\t/**/\n\n/* I_STDLIB:\n *\tThis symbol, if defined, indicates that <stdlib.h> exists and should\n *\tbe included.\n */\n#define I_STDLIB\t\t/**/\n\n/* I_STRING:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <string.h> (USG systems) instead of <strings.h> (BSD systems).\n */\n#define I_STRING\t\t/**/\n\n/* I_SYS_DIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/dir.h>.\n */\n/*#define I_SYS_DIR\t\t/ **/\n\n/* I_SYS_FILE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/file.h> to get definition of R_OK and friends.\n */\n/*#define I_SYS_FILE\t\t/ **/\n\n/* I_SYS_IOCTL:\n *\tThis symbol, if defined, indicates that <sys/ioctl.h> exists and should\n *\tbe included. Otherwise, include <sgtty.h> or <termio.h>.\n */\n/* I_SYS_SOCKIO:\n *\tThis symbol, if defined, indicates the <sys/sockio.h> should be included\n *\tto get socket ioctl options, like SIOCATMARK.\n */\n/*#define\tI_SYS_IOCTL\t\t/ **/\n/*#define I_SYS_SOCKIO\t/ **/\n\n/* I_SYS_NDIR:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/ndir.h>.\n */\n/*#define I_SYS_NDIR\t/ **/\n\n/* I_SYS_PARAM:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/param.h>.\n */\n/*#define I_SYS_PARAM\t\t/ **/\n\n/* I_SYS_POLL:\n *\tThis symbol, if defined, indicates that the program may include\n *\t<sys/poll.h>.  When I_POLL is also defined, it's probably safest\n *\tto only include <poll.h>.\n */\n/*#define I_SYS_POLL\t/ **/\n\n/* I_SYS_RESOURCE:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/resource.h>.\n */\n/*#define I_SYS_RESOURCE\t\t/ **/\n\n/* I_SYS_SELECT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/select.h> in order to get definition of struct timeval.\n */\n/*#define I_SYS_SELECT\t/ **/\n\n/* I_SYS_STAT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/stat.h>.\n */\n#define\tI_SYS_STAT\t\t/**/\n\n/* I_SYS_TIMES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/times.h>.\n */\n/*#define\tI_SYS_TIMES\t\t/ **/\n\n/* I_SYS_TYPES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/types.h>.\n */\n#define\tI_SYS_TYPES\t\t/**/\n\n/* I_SYS_UN:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/un.h> to get UNIX domain socket definitions.\n */\n/*#define I_SYS_UN\t\t/ **/\n\n/* I_SYS_WAIT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/wait.h>.\n */\n/*#define I_SYS_WAIT\t/ **/\n\n/* I_UNISTD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <unistd.h>.\n */\n/*#define I_UNISTD\t\t/ **/\n\n/* I_UTIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <utime.h>.\n */\n#define I_UTIME\t\t/**/\n\n/* I_VALUES:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <values.h> to get definition of symbols like MINFLOAT or\n *\tMAXLONG, i.e. machine dependant limitations.  Probably, you\n *\tshould use <limits.h> instead, if it is available.\n */\n/*#define I_VALUES\t\t/ **/\n\n/* I_VFORK:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude vfork.h.\n */\n/*#define I_VFORK\t/ **/\n\n/* CAN_VAPROTO:\n *\tThis variable is defined on systems supporting prototype declaration\n *\tof functions with a variable number of arguments.\n */\n/* _V:\n *\tThis macro is used to declare function parameters in prototypes for\n *\tfunctions with a variable number of parameters. Use double parentheses.\n *\tFor example:\n *\n *\t\tint printf _V((char *fmt, ...));\n *\n *\tRemember to use the plain simple _() macro when declaring a function\n *\twith no variable number of arguments, since it might be possible to\n *\thave a non-effect _V() macro and still get prototypes via _().\n */\n/*#define CAN_VAPROTO\t/ **/\n#ifdef CAN_VAPROTO\n#define\t_V(args) args\n#else\n#define\t_V(args) ()\n#endif\n\n/* OSNAME:\n *\tThis symbol contains the name of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n/* OSVERS:\n *\tThis symbol contains the version of the operating system, as determined\n *\tby Configure.  You shouldn't rely on it too much; the specific\n *\tfeature tests from Configure are generally more reliable.\n */\n#define OSNAME \"MSWin32\"\t\t/**/\n#define OSVERS \"6.1\"\t\t/**/\n\n/* MULTIARCH:\n *\tThis symbol, if defined, signifies that the build\n *\tprocess will produce some binary files that are going to be\n *\tused in a cross-platform environment.  This is the case for\n *\texample with the NeXT \"fat\" binaries that contain executables\n *\tfor several CPUs.\n */\n/*#define MULTIARCH\t\t/ **/\n\n/* MEM_ALIGNBYTES:\n *\tThis symbol contains the number of bytes required to align a\n *\tdouble, or a long double when applicable. Usual values are 2,\n *\t4 and 8. The default is eight, for safety.  For cross-compiling\n *  \tor multiarch support, Configure will set a minimum of 8.\n */\n#define MEM_ALIGNBYTES 8\n\n/* ARCHLIB:\n *\tThis variable, if defined, holds the name of the directory in\n *\twhich the user wants to put architecture-dependent public\n *\tlibrary files for perl5.  It is most often a local directory\n *\tsuch as /usr/local/lib.  Programs using this variable must be\n *\tprepared to deal with filename expansion.  If ARCHLIB is the\n *\tsame as PRIVLIB, it is not defined, since presumably the\n *\tprogram already searches PRIVLIB.\n */\n/* ARCHLIB_EXP:\n *\tThis symbol contains the ~name expanded version of ARCHLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define ARCHLIB \"c:\\\\perl\\\\lib\"\t\t/**/\n/*#define ARCHLIB_EXP \"\"\t/ **/\n\n/* ARCHNAME:\n *\tThis symbol holds a string representing the architecture name.\n *\tIt may be used to construct an architecture-dependant pathname\n *\twhere library files may be held under a private library, for\n *\tinstance.\n */\n#define ARCHNAME \"MSWin32-x86\"\t\t/**/\n\n/* BIN:\n *\tThis symbol holds the path of the bin directory where the package will\n *\tbe installed. Program must be prepared to deal with ~name substitution.\n */\n/* BIN_EXP:\n *\tThis symbol is the filename expanded version of the BIN symbol, for\n *\tprograms that do not want to deal with that at run-time.\n */\n/* PERL_RELOCATABLE_INC:\n *\tThis symbol, if defined, indicates that we'd like to relocate entries\n *\tin @INC at run time based on the location of the perl binary.\n */\n#define BIN \"c:\\\\perl\\\\bin\"\t/**/\n#define BIN_EXP \"c:\\\\perl\\\\bin\"\t/**/\n#define PERL_RELOCATABLE_INC \"undef\" \t\t/**/\n\n/* INTSIZE:\n *\tThis symbol contains the value of sizeof(int) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* LONGSIZE:\n *\tThis symbol contains the value of sizeof(long) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n/* SHORTSIZE:\n *\tThis symbol contains the value of sizeof(short) so that the C\n *\tpreprocessor can make decisions based on it.\n */\n#define INTSIZE 4\t\t/**/\n#define LONGSIZE 4\t\t/**/\n#define SHORTSIZE 2\t\t/**/\n\n/* BYTEORDER:\n *\tThis symbol holds the hexadecimal constant defined in byteorder,\n *\tin a UV, i.e. 0x1234 or 0x4321 or 0x12345678, etc...\n *\tIf the compiler supports cross-compiling or multiple-architecture\n *\tbinaries, use compiler-defined macros to\n *\tdetermine the byte order.\n */\n#if defined(MULTIARCH)\n#  ifdef __LITTLE_ENDIAN__\n#    if LONGSIZE == 4\n#      define BYTEORDER 0x1234\n#    else\n#      if LONGSIZE == 8\n#        define BYTEORDER 0x12345678\n#      endif\n#    endif\n#  else\n#    ifdef __BIG_ENDIAN__\n#      if LONGSIZE == 4\n#        define BYTEORDER 0x4321\n#      else\n#        if LONGSIZE == 8\n#          define BYTEORDER 0x87654321\n#        endif\n#      endif\n#    endif\n#  endif\n#else\n#define BYTEORDER 0x1234\t/* large digits for MSB */\n#endif\n\n/* CHARBITS:\n *\tThis symbol contains the size of a char, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define CHARBITS 8\t\t/**/\n\n/* CAT2:\n *\tThis macro concatenates 2 tokens together.\n */\n/* STRINGIFY:\n *\tThis macro surrounds its token with double quotes.\n */\n#if 42 == 1\n#define CAT2(a,b)\ta/**/b\n#undef STRINGIFY\n#define STRINGIFY(a)\t\"a\"\n#endif\n#if 42 == 42\n#define PeRl_CaTiFy(a, b)\ta ## b\n#define PeRl_StGiFy(a)\t#a\n#define CAT2(a,b)\tPeRl_CaTiFy(a,b)\n#define StGiFy(a)\tPeRl_StGiFy(a)\n#undef STRINGIFY\n#define STRINGIFY(a)\tPeRl_StGiFy(a)\n#endif\n#if 42 != 1 && 42 != 42\n#include \"Bletch: How does this C preprocessor concatenate tokens?\"\n#endif\n\n/* CPPSTDIN:\n *\tThis symbol contains the first part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.\t Typical value of \"cc -E\" or \"/lib/cpp\", but it can also\n *\tcall a wrapper. See CPPRUN.\n */\n/* CPPMINUS:\n *\tThis symbol contains the second part of the string which will invoke\n *\tthe C preprocessor on the standard input and produce to standard\n *\toutput.  This symbol will have the value \"-\" if CPPSTDIN needs a minus\n *\tto specify standard input, otherwise the value is \"\".\n */\n/* CPPRUN:\n *\tThis symbol contains the string which will invoke a C preprocessor on\n *\tthe standard input and produce to standard output. It needs to end\n *\twith CPPLAST, after all other preprocessor flags have been specified.\n *\tThe main difference with CPPSTDIN is that this program will never be a\n *\tpointer to a shell wrapper, i.e. it will be empty if no preprocessor is\n *\tavailable directly to the user. Note that it may well be different from\n *\tthe preprocessor used to compile the C program.\n */\n/* CPPLAST:\n *\tThis symbol is intended to be used along with CPPRUN in the same manner\n *\tsymbol CPPMINUS is used with CPPSTDIN. It contains either \"-\" or \"\".\n */\n#define CPPSTDIN \"gcc -E\"\n#define CPPMINUS \"-\"\n#define CPPRUN \"gcc -E\"\n#define CPPLAST \"\"\n\n/* HAS_ACCESS:\n *\tThis manifest constant lets the C program know that the access()\n *\tsystem call is available to check for accessibility using real UID/GID.\n *\t(always present on UNIX.)\n */\n#define HAS_ACCESS\t\t/**/\n\n/* HAS_ACCESSX:\n *\tThis symbol, if defined, indicates that the accessx routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_ACCESSX\t\t/ **/\n\n/* HAS_ASCTIME_R:\n *\tThis symbol, if defined, indicates that the asctime_r routine\n *\tis available to asctime re-entrantly.\n */\n/* ASCTIME_R_PROTO:\n *\tThis symbol encodes the prototype of asctime_r.\n *\tIt is zero if d_asctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_asctime_r\n *\tis defined.\n */\n/*#define HAS_ASCTIME_R\t   / **/\n#define ASCTIME_R_PROTO 0\t   /**/\n\n/* The HASATTRIBUTE_* defines are left undefined here because they vary from\n * one version of GCC to another.  Instead, they are defined on the basis of\n * the compiler version in <perl.h>.\n */\n/* HASATTRIBUTE_FORMAT:\n *\tCan we handle GCC attribute for checking printf-style formats\n */\n/* PRINTF_FORMAT_NULL_OK:\n *\tAllows __printf__ format to be null when checking printf-style\n */\n/* HASATTRIBUTE_MALLOC:\n *\tCan we handle GCC attribute for malloc-style functions.\n */\n/* HASATTRIBUTE_NONNULL:\n *\tCan we handle GCC attribute for nonnull function parms.\n */\n/* HASATTRIBUTE_NORETURN:\n *\tCan we handle GCC attribute for functions that do not return\n */\n/* HASATTRIBUTE_PURE:\n *\tCan we handle GCC attribute for pure functions\n */\n/* HASATTRIBUTE_UNUSED:\n *\tCan we handle GCC attribute for unused variables and arguments\n */\n/* HASATTRIBUTE_DEPRECATED:\n *\tCan we handle GCC attribute for marking deprecated APIs\n */\n/* HASATTRIBUTE_WARN_UNUSED_RESULT:\n *\tCan we handle GCC attribute for warning on unused results\n */\n/*#define HASATTRIBUTE_DEPRECATED\t/ **/\n/*#define HASATTRIBUTE_FORMAT\t/ **/\n/*#define PRINTF_FORMAT_NULL_OK\t/ **/\n/*#define HASATTRIBUTE_NORETURN\t/ **/\n/*#define HASATTRIBUTE_MALLOC\t/ **/\n/*#define HASATTRIBUTE_NONNULL\t/ **/\n/*#define HASATTRIBUTE_PURE\t/ **/\n/*#define HASATTRIBUTE_UNUSED\t/ **/\n/*#define HASATTRIBUTE_WARN_UNUSED_RESULT\t/ **/\n\n/* HAS_BACKTRACE:\n *\tThis symbol, if defined, indicates that the backtrace() routine is\n *\tavailable to get a stack trace.  The <execinfo.h> header must be\n *\tincluded to use this routine.\n */\n/*#define HAS_BACKTRACE\t/ **/\n\n/* CASTI32:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tor large floating point numbers to 32-bit ints.\n */\n#define\tCASTI32\t\t/**/\n\n/* CASTNEGFLOAT:\n *\tThis symbol is defined if the C compiler can cast negative\n *\tnumbers to unsigned longs, ints and shorts.\n */\n/* CASTFLAGS:\n *\tThis symbol contains flags that say what difficulties the compiler\n *\thas casting odd floating values to unsigned long:\n *\t\t0 = ok\n *\t\t1 = couldn't cast < 0\n *\t\t2 = couldn't cast >= 0x80000000\n *\t\t4 = couldn't cast in argument expression list\n */\n#define\tCASTNEGFLOAT\t\t/**/\n#define CASTFLAGS 0\t\t/**/\n\n/* VOID_CLOSEDIR:\n *\tThis symbol, if defined, indicates that the closedir() routine\n *\tdoes not return a value.\n */\n/*#define VOID_CLOSEDIR\t\t/ **/\n\n/* HASCONST:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe const type. There is no need to actually test for that symbol\n *\twithin your programs. The mere use of the \"const\" keyword will\n *\ttrigger the necessary tests.\n */\n#define HASCONST\t/**/\n#ifndef HASCONST\n#define const\n#endif\n\n/* HAS_CRYPT_R:\n *\tThis symbol, if defined, indicates that the crypt_r routine\n *\tis available to crypt re-entrantly.\n */\n/* CRYPT_R_PROTO:\n *\tThis symbol encodes the prototype of crypt_r.\n *\tIt is zero if d_crypt_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_crypt_r\n *\tis defined.\n */\n/*#define HAS_CRYPT_R\t   / **/\n#define CRYPT_R_PROTO 0\t   /**/\n\n/* HAS_CSH:\n *\tThis symbol, if defined, indicates that the C-shell exists.\n */\n/* CSH:\n *\tThis symbol, if defined, contains the full pathname of csh.\n */\n/*#define HAS_CSH\t\t/ **/\n#ifdef HAS_CSH\n#define CSH \"\"\t/**/\n#endif\n\n/* HAS_CTERMID_R:\n *\tThis symbol, if defined, indicates that the ctermid_r routine\n *\tis available to ctermid re-entrantly.\n */\n/* CTERMID_R_PROTO:\n *\tThis symbol encodes the prototype of ctermid_r.\n *\tIt is zero if d_ctermid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctermid_r\n *\tis defined.\n */\n/*#define HAS_CTERMID_R\t   / **/\n#define CTERMID_R_PROTO 0\t   /**/\n\n/* HAS_CTIME_R:\n *\tThis symbol, if defined, indicates that the ctime_r routine\n *\tis available to ctime re-entrantly.\n */\n/* CTIME_R_PROTO:\n *\tThis symbol encodes the prototype of ctime_r.\n *\tIt is zero if d_ctime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ctime_r\n *\tis defined.\n */\n/*#define HAS_CTIME_R\t   / **/\n#define CTIME_R_PROTO 0\t   /**/\n\n/* HAS_DLADDR:\n *\tThis symbol, if defined, indicates that the dladdr() routine is\n *\tavailable to query dynamic linker information for an address.\n *\tThe <dlfcn.h> header must be included to use this routine.\n */\n/*#define HAS_DLADDR\t/ **/\n\n/* SETUID_SCRIPTS_ARE_SECURE_NOW:\n *\tThis symbol, if defined, indicates that the bug that prevents\n *\tsetuid scripts from being secure is not present in this kernel.\n */\n/* DOSUID:\n *\tThis symbol, if defined, indicates that the C program should\n *\tcheck the script that it is executing for setuid/setgid bits, and\n *\tattempt to emulate setuid/setgid on systems that have disabled\n *\tsetuid #! scripts because the kernel can't do it securely.\n *\tIt is up to the package designer to make sure that this emulation\n *\tis done securely.  Among other things, it should do an fstat on\n *\tthe script it just opened to make sure it really is a setuid/setgid\n *\tscript, it should make sure the arguments passed correspond exactly\n *\tto the argument on the #! line, and it should not trust any\n *\tsubprocesses to which it must pass the filename rather than the\n *\tfile descriptor of the script to be executed.\n */\n/*#define SETUID_SCRIPTS_ARE_SECURE_NOW\t/ **/\n/*#define DOSUID\t\t/ **/\n\n/* HAS_DRAND48_R:\n *\tThis symbol, if defined, indicates that the drand48_r routine\n *\tis available to drand48 re-entrantly.\n */\n/* DRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of drand48_r.\n *\tIt is zero if d_drand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_drand48_r\n *\tis defined.\n */\n/*#define HAS_DRAND48_R\t   / **/\n#define DRAND48_R_PROTO 0\t   /**/\n\n/* HAS_DRAND48_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the drand48() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern double drand48(void);\n */\n/*#define\tHAS_DRAND48_PROTO\t/ **/\n\n/* HAS_EACCESS:\n *\tThis symbol, if defined, indicates that the eaccess routine is\n *\tavailable to do extended access checks.\n */\n/*#define HAS_EACCESS\t\t/ **/\n\n/* HAS_ENDGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the group database.\n */\n/*#define HAS_ENDGRENT\t\t/ **/\n\n/* HAS_ENDGRENT_R:\n *\tThis symbol, if defined, indicates that the endgrent_r routine\n *\tis available to endgrent re-entrantly.\n */\n/* ENDGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of endgrent_r.\n *\tIt is zero if d_endgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endgrent_r\n *\tis defined.\n */\n/*#define HAS_ENDGRENT_R\t   / **/\n#define ENDGRENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDHOSTENT:\n *\tThis symbol, if defined, indicates that the endhostent() routine is\n *\tavailable to close whatever was being used for host queries.\n */\n/*#define HAS_ENDHOSTENT\t\t/ **/\n\n/* HAS_ENDHOSTENT_R:\n *\tThis symbol, if defined, indicates that the endhostent_r routine\n *\tis available to endhostent re-entrantly.\n */\n/* ENDHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of endhostent_r.\n *\tIt is zero if d_endhostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endhostent_r\n *\tis defined.\n */\n/*#define HAS_ENDHOSTENT_R\t   / **/\n#define ENDHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDNETENT:\n *\tThis symbol, if defined, indicates that the endnetent() routine is\n *\tavailable to close whatever was being used for network queries.\n */\n/*#define HAS_ENDNETENT\t\t/ **/\n\n/* HAS_ENDNETENT_R:\n *\tThis symbol, if defined, indicates that the endnetent_r routine\n *\tis available to endnetent re-entrantly.\n */\n/* ENDNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of endnetent_r.\n *\tIt is zero if d_endnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endnetent_r\n *\tis defined.\n */\n/*#define HAS_ENDNETENT_R\t   / **/\n#define ENDNETENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPROTOENT:\n *\tThis symbol, if defined, indicates that the endprotoent() routine is\n *\tavailable to close whatever was being used for protocol queries.\n */\n/*#define HAS_ENDPROTOENT\t\t/ **/\n\n/* HAS_ENDPROTOENT_R:\n *\tThis symbol, if defined, indicates that the endprotoent_r routine\n *\tis available to endprotoent re-entrantly.\n */\n/* ENDPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of endprotoent_r.\n *\tIt is zero if d_endprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endprotoent_r\n *\tis defined.\n */\n/*#define HAS_ENDPROTOENT_R\t   / **/\n#define ENDPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDPWENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for finalizing sequential access of the passwd database.\n */\n/*#define HAS_ENDPWENT\t\t/ **/\n\n/* HAS_ENDPWENT_R:\n *\tThis symbol, if defined, indicates that the endpwent_r routine\n *\tis available to endpwent re-entrantly.\n */\n/* ENDPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of endpwent_r.\n *\tIt is zero if d_endpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endpwent_r\n *\tis defined.\n */\n/*#define HAS_ENDPWENT_R\t   / **/\n#define ENDPWENT_R_PROTO 0\t   /**/\n\n/* HAS_ENDSERVENT:\n *\tThis symbol, if defined, indicates that the endservent() routine is\n *\tavailable to close whatever was being used for service queries.\n */\n/*#define HAS_ENDSERVENT\t\t/ **/\n\n/* HAS_ENDSERVENT_R:\n *\tThis symbol, if defined, indicates that the endservent_r routine\n *\tis available to endservent re-entrantly.\n */\n/* ENDSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of endservent_r.\n *\tIt is zero if d_endservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_endservent_r\n *\tis defined.\n */\n/*#define HAS_ENDSERVENT_R\t   / **/\n#define ENDSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_FD_SET:\n *\tThis symbol, when defined, indicates presence of the fd_set typedef\n *\tin <sys/types.h>\n */\n#define HAS_FD_SET\t/**/\n\n/* FLEXFILENAMES:\n *\tThis symbol, if defined, indicates that the system supports filenames\n *\tlonger than 14 characters.\n */\n#define\tFLEXFILENAMES\t\t/**/\n\n/* Gconvert:\n *\tThis preprocessor macro is defined to convert a floating point\n *\tnumber to a string without a trailing decimal point.  This\n *\temulates the behavior of sprintf(\"%g\"), but is sometimes much more\n *\tefficient.  If gconvert() is not available, but gcvt() drops the\n *\ttrailing decimal point, then gcvt() is used.  If all else fails,\n *\ta macro using sprintf(\"%g\") is used. Arguments for the Gconvert\n *\tmacro are: value, number of digits, whether trailing zeros should\n *\tbe retained, and the output buffer.\n *\tThe usual values are:\n *\t\td_Gconvert='gconvert((x),(n),(t),(b))'\n *\t\td_Gconvert='gcvt((x),(n),(b))'\n *\t\td_Gconvert='sprintf((b),\"%.*g\",(n),(x))'\n *\tThe last two assume trailing zeros should not be kept.\n */\n#define Gconvert(x,n,t,b) sprintf((b),\"%.*g\",(n),(x))\n\n/* HAS_GETGRENT:\n *\tThis symbol, if defined, indicates that the getgrent routine is\n *\tavailable for sequential access of the group database.\n */\n/*#define HAS_GETGRENT\t\t/ **/\n\n/* HAS_GETGRENT_R:\n *\tThis symbol, if defined, indicates that the getgrent_r routine\n *\tis available to getgrent re-entrantly.\n */\n/* GETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of getgrent_r.\n *\tIt is zero if d_getgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrent_r\n *\tis defined.\n */\n/*#define HAS_GETGRENT_R\t   / **/\n#define GETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_GETGRGID_R:\n *\tThis symbol, if defined, indicates that the getgrgid_r routine\n *\tis available to getgrgid re-entrantly.\n */\n/* GETGRGID_R_PROTO:\n *\tThis symbol encodes the prototype of getgrgid_r.\n *\tIt is zero if d_getgrgid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrgid_r\n *\tis defined.\n */\n/*#define HAS_GETGRGID_R\t   / **/\n#define GETGRGID_R_PROTO 0\t   /**/\n\n/* HAS_GETGRNAM_R:\n *\tThis symbol, if defined, indicates that the getgrnam_r routine\n *\tis available to getgrnam re-entrantly.\n */\n/* GETGRNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getgrnam_r.\n *\tIt is zero if d_getgrnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getgrnam_r\n *\tis defined.\n */\n/*#define HAS_GETGRNAM_R\t   / **/\n#define GETGRNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYADDR:\n *\tThis symbol, if defined, indicates that the gethostbyaddr() routine is\n *\tavailable to look up hosts by their IP addresses.\n */\n#define HAS_GETHOSTBYADDR\t\t/**/\n\n/* HAS_GETHOSTBYNAME:\n *\tThis symbol, if defined, indicates that the gethostbyname() routine is\n *\tavailable to look up host names in some data base or other.\n */\n#define HAS_GETHOSTBYNAME\t\t/**/\n\n/* HAS_GETHOSTENT:\n *\tThis symbol, if defined, indicates that the gethostent() routine is\n *\tavailable to look up host names in some data base or another.\n */\n/*#define HAS_GETHOSTENT\t\t/ **/\n\n/* HAS_GETHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tgethostname() routine to derive the host name.  See also HAS_UNAME\n *\tand PHOSTNAME.\n */\n/* HAS_UNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tuname() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand PHOSTNAME.\n */\n/* PHOSTNAME:\n *\tThis symbol, if defined, indicates the command to feed to the\n *\tpopen() routine to derive the host name.  See also HAS_GETHOSTNAME\n *\tand HAS_UNAME.\tNote that the command uses a fully qualified path,\n *\tso that it is safe even if used by a process with super-user\n *\tprivileges.\n */\n/* HAS_PHOSTNAME:\n *\tThis symbol, if defined, indicates that the C program may use the\n *\tcontents of PHOSTNAME as a command to feed to the popen() routine\n *\tto derive the host name.\n */\n#define HAS_GETHOSTNAME\t/**/\n#define HAS_UNAME\t\t/**/\n/*#define HAS_PHOSTNAME\t/ **/\n#ifdef HAS_PHOSTNAME\n#define PHOSTNAME \"\"\t/* How to get the host name */\n#endif\n\n/* HAS_GETHOSTBYADDR_R:\n *\tThis symbol, if defined, indicates that the gethostbyaddr_r routine\n *\tis available to gethostbyaddr re-entrantly.\n */\n/* GETHOSTBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyaddr_r.\n *\tIt is zero if d_gethostbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYADDR_R\t   / **/\n#define GETHOSTBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTBYNAME_R:\n *\tThis symbol, if defined, indicates that the gethostbyname_r routine\n *\tis available to gethostbyname re-entrantly.\n */\n/* GETHOSTBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of gethostbyname_r.\n *\tIt is zero if d_gethostbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostbyname_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTBYNAME_R\t   / **/\n#define GETHOSTBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the gethostent_r routine\n *\tis available to gethostent re-entrantly.\n */\n/* GETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of gethostent_r.\n *\tIt is zero if d_gethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gethostent_r\n *\tis defined.\n */\n/*#define HAS_GETHOSTENT_R\t   / **/\n#define GETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_GETHOST_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for gethostent(), gethostbyname(), and\n *\tgethostbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETHOST_PROTOS\t/**/\n\n/* HAS_GETLOGIN_R:\n *\tThis symbol, if defined, indicates that the getlogin_r routine\n *\tis available to getlogin re-entrantly.\n */\n/* GETLOGIN_R_PROTO:\n *\tThis symbol encodes the prototype of getlogin_r.\n *\tIt is zero if d_getlogin_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getlogin_r\n *\tis defined.\n */\n/*#define HAS_GETLOGIN_R\t   / **/\n#define GETLOGIN_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYADDR:\n *\tThis symbol, if defined, indicates that the getnetbyaddr() routine is\n *\tavailable to look up networks by their IP addresses.\n */\n/*#define HAS_GETNETBYADDR\t\t/ **/\n\n/* HAS_GETNETBYNAME:\n *\tThis symbol, if defined, indicates that the getnetbyname() routine is\n *\tavailable to look up networks by their names.\n */\n/*#define HAS_GETNETBYNAME\t\t/ **/\n\n/* HAS_GETNETENT:\n *\tThis symbol, if defined, indicates that the getnetent() routine is\n *\tavailable to look up network names in some data base or another.\n */\n/*#define HAS_GETNETENT\t\t/ **/\n\n/* HAS_GETNETBYADDR_R:\n *\tThis symbol, if defined, indicates that the getnetbyaddr_r routine\n *\tis available to getnetbyaddr re-entrantly.\n */\n/* GETNETBYADDR_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyaddr_r.\n *\tIt is zero if d_getnetbyaddr_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyaddr_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYADDR_R\t   / **/\n#define GETNETBYADDR_R_PROTO 0\t   /**/\n\n/* HAS_GETNETBYNAME_R:\n *\tThis symbol, if defined, indicates that the getnetbyname_r routine\n *\tis available to getnetbyname re-entrantly.\n */\n/* GETNETBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getnetbyname_r.\n *\tIt is zero if d_getnetbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetbyname_r\n *\tis defined.\n */\n/*#define HAS_GETNETBYNAME_R\t   / **/\n#define GETNETBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETNETENT_R:\n *\tThis symbol, if defined, indicates that the getnetent_r routine\n *\tis available to getnetent re-entrantly.\n */\n/* GETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of getnetent_r.\n *\tIt is zero if d_getnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getnetent_r\n *\tis defined.\n */\n/*#define HAS_GETNETENT_R\t   / **/\n#define GETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_GETNET_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getnetent(), getnetbyname(), and\n *\tgetnetbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n/*#define\tHAS_GETNET_PROTOS\t/ **/\n\n/* HAS_GETPAGESIZE:\n *\tThis symbol, if defined, indicates that the getpagesize system call\n *\tis available to get system page size, which is the granularity of\n *\tmany memory management calls.\n */\n/*#define HAS_GETPAGESIZE\t\t/ **/\n\n/* HAS_GETPROTOENT:\n *\tThis symbol, if defined, indicates that the getprotoent() routine is\n *\tavailable to look up protocols in some data base or another.\n */\n/*#define HAS_GETPROTOENT\t\t/ **/\n\n/* HAS_GETPGRP:\n *\tThis symbol, if defined, indicates that the getpgrp routine is\n *\tavailable to get the current process group.\n */\n/* USE_BSD_GETPGRP:\n *\tThis symbol, if defined, indicates that getpgrp needs one\n *\targuments whereas USG one needs none.\n */\n/*#define HAS_GETPGRP\t\t/ **/\n/*#define USE_BSD_GETPGRP\t/ **/\n\n/* HAS_GETPROTOBYNAME:\n *\tThis symbol, if defined, indicates that the getprotobyname()\n *\troutine is available to look up protocols by their name.\n */\n/* HAS_GETPROTOBYNUMBER:\n *\tThis symbol, if defined, indicates that the getprotobynumber()\n *\troutine is available to look up protocols by their number.\n */\n#define HAS_GETPROTOBYNAME\t\t/**/\n#define HAS_GETPROTOBYNUMBER\t\t/**/\n\n/* HAS_GETPROTOBYNAME_R:\n *\tThis symbol, if defined, indicates that the getprotobyname_r routine\n *\tis available to getprotobyname re-entrantly.\n */\n/* GETPROTOBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobyname_r.\n *\tIt is zero if d_getprotobyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobyname_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNAME_R\t   / **/\n#define GETPROTOBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOBYNUMBER_R:\n *\tThis symbol, if defined, indicates that the getprotobynumber_r routine\n *\tis available to getprotobynumber re-entrantly.\n */\n/* GETPROTOBYNUMBER_R_PROTO:\n *\tThis symbol encodes the prototype of getprotobynumber_r.\n *\tIt is zero if d_getprotobynumber_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotobynumber_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOBYNUMBER_R\t   / **/\n#define GETPROTOBYNUMBER_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the getprotoent_r routine\n *\tis available to getprotoent re-entrantly.\n */\n/* GETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of getprotoent_r.\n *\tIt is zero if d_getprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getprotoent_r\n *\tis defined.\n */\n/*#define HAS_GETPROTOENT_R\t   / **/\n#define GETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPROTO_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getprotoent(), getprotobyname(), and\n *\tgetprotobyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETPROTO_PROTOS\t/**/\n\n/* HAS_GETPWENT:\n *\tThis symbol, if defined, indicates that the getpwent routine is\n *\tavailable for sequential access of the passwd database.\n *\tIf this is not available, the older getpw() function may be available.\n */\n/*#define HAS_GETPWENT\t\t/ **/\n\n/* HAS_GETPWENT_R:\n *\tThis symbol, if defined, indicates that the getpwent_r routine\n *\tis available to getpwent re-entrantly.\n */\n/* GETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of getpwent_r.\n *\tIt is zero if d_getpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwent_r\n *\tis defined.\n */\n/*#define HAS_GETPWENT_R\t   / **/\n#define GETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_GETPWNAM_R:\n *\tThis symbol, if defined, indicates that the getpwnam_r routine\n *\tis available to getpwnam re-entrantly.\n */\n/* GETPWNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getpwnam_r.\n *\tIt is zero if d_getpwnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwnam_r\n *\tis defined.\n */\n/*#define HAS_GETPWNAM_R\t   / **/\n#define GETPWNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETPWUID_R:\n *\tThis symbol, if defined, indicates that the getpwuid_r routine\n *\tis available to getpwuid re-entrantly.\n */\n/* GETPWUID_R_PROTO:\n *\tThis symbol encodes the prototype of getpwuid_r.\n *\tIt is zero if d_getpwuid_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getpwuid_r\n *\tis defined.\n */\n/*#define HAS_GETPWUID_R\t   / **/\n#define GETPWUID_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT:\n *\tThis symbol, if defined, indicates that the getservent() routine is\n *\tavailable to look up network services in some data base or another.\n */\n/*#define HAS_GETSERVENT\t\t/ **/\n\n/* HAS_GETSERVBYNAME_R:\n *\tThis symbol, if defined, indicates that the getservbyname_r routine\n *\tis available to getservbyname re-entrantly.\n */\n/* GETSERVBYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyname_r.\n *\tIt is zero if d_getservbyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyname_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYNAME_R\t   / **/\n#define GETSERVBYNAME_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYPORT_R:\n *\tThis symbol, if defined, indicates that the getservbyport_r routine\n *\tis available to getservbyport re-entrantly.\n */\n/* GETSERVBYPORT_R_PROTO:\n *\tThis symbol encodes the prototype of getservbyport_r.\n *\tIt is zero if d_getservbyport_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservbyport_r\n *\tis defined.\n */\n/*#define HAS_GETSERVBYPORT_R\t   / **/\n#define GETSERVBYPORT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVENT_R:\n *\tThis symbol, if defined, indicates that the getservent_r routine\n *\tis available to getservent re-entrantly.\n */\n/* GETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of getservent_r.\n *\tIt is zero if d_getservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getservent_r\n *\tis defined.\n */\n/*#define HAS_GETSERVENT_R\t   / **/\n#define GETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_GETSERV_PROTOS:\n *\tThis symbol, if defined, indicates that <netdb.h> includes\n *\tprototypes for getservent(), getservbyname(), and\n *\tgetservbyaddr().  Otherwise, it is up to the program to guess\n *\tthem.  See netdbtype.U for probing for various Netdb_xxx_t types.\n */\n#define\tHAS_GETSERV_PROTOS\t/**/\n\n/* HAS_GETSPNAM_R:\n *\tThis symbol, if defined, indicates that the getspnam_r routine\n *\tis available to getspnam re-entrantly.\n */\n/* GETSPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of getspnam_r.\n *\tIt is zero if d_getspnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_getspnam_r\n *\tis defined.\n */\n/*#define HAS_GETSPNAM_R\t   / **/\n#define GETSPNAM_R_PROTO 0\t   /**/\n\n/* HAS_GETSERVBYNAME:\n *\tThis symbol, if defined, indicates that the getservbyname()\n *\troutine is available to look up services by their name.\n */\n/* HAS_GETSERVBYPORT:\n *\tThis symbol, if defined, indicates that the getservbyport()\n *\troutine is available to look up services by their port.\n */\n#define HAS_GETSERVBYNAME\t\t/**/\n#define HAS_GETSERVBYPORT\t\t/**/\n\n/* HAS_GMTIME_R:\n *\tThis symbol, if defined, indicates that the gmtime_r routine\n *\tis available to gmtime re-entrantly.\n */\n/* GMTIME_R_PROTO:\n *\tThis symbol encodes the prototype of gmtime_r.\n *\tIt is zero if d_gmtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_gmtime_r\n *\tis defined.\n */\n/*#define HAS_GMTIME_R\t   / **/\n#define GMTIME_R_PROTO 0\t   /**/\n\n/* HAS_GNULIBC:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe GNU C library is being used.  A better check is to use\n *\tthe __GLIBC__ and __GLIBC_MINOR__ symbols supplied with glibc.\n */\n/*#define HAS_GNULIBC  \t/ **/\n#if defined(HAS_GNULIBC) && !defined(_GNU_SOURCE)\n#   define _GNU_SOURCE\n#endif\n\n/* HAS_HTONL:\n *\tThis symbol, if defined, indicates that the htonl() routine (and\n *\tfriends htons() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_HTONS:\n *\tThis symbol, if defined, indicates that the htons() routine (and\n *\tfriends htonl() ntohl() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHL:\n *\tThis symbol, if defined, indicates that the ntohl() routine (and\n *\tfriends htonl() htons() ntohs()) are available to do network\n *\torder byte swapping.\n */\n/* HAS_NTOHS:\n *\tThis symbol, if defined, indicates that the ntohs() routine (and\n *\tfriends htonl() htons() ntohl()) are available to do network\n *\torder byte swapping.\n */\n#define HAS_HTONL\t\t/**/\n#define HAS_HTONS\t\t/**/\n#define HAS_NTOHL\t\t/**/\n#define HAS_NTOHS\t\t/**/\n\n/* HAS_ISASCII:\n *\tThis manifest constant lets the C program know that isascii\n *\tis available.\n */\n#define HAS_ISASCII\t\t/**/\n\n/* HAS_LCHOWN:\n *\tThis symbol, if defined, indicates that the lchown routine is\n *\tavailable to operate on a symbolic link (instead of following the\n *\tlink).\n */\n/*#define HAS_LCHOWN\t\t/ **/\n\n/* HAS_LOCALTIME_R:\n *\tThis symbol, if defined, indicates that the localtime_r routine\n *\tis available to localtime re-entrantly.\n */\n/* LOCALTIME_R_NEEDS_TZSET:\n *\tMany libc's localtime_r implementations do not call tzset,\n *\tmaking them differ from localtime(), and making timezone\n *\tchanges using \\undef{TZ} without explicitly calling tzset\n *\timpossible. This symbol makes us call tzset before localtime_r\n */\n/*#define LOCALTIME_R_NEEDS_TZSET / **/\n#ifdef LOCALTIME_R_NEEDS_TZSET\n#define L_R_TZSET tzset(),\n#else\n#define L_R_TZSET\n#endif\n\n/* LOCALTIME_R_PROTO:\n *\tThis symbol encodes the prototype of localtime_r.\n *\tIt is zero if d_localtime_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_localtime_r\n *\tis defined.\n */\n/*#define HAS_LOCALTIME_R\t   / **/\n#define LOCALTIME_R_PROTO 0\t   /**/\n\n/* HAS_LONG_DOUBLE:\n *\tThis symbol will be defined if the C compiler supports long\n *\tdoubles.\n */\n/* LONG_DOUBLESIZE:\n *\tThis symbol contains the size of a long double, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long doubles.\n */\n/* HAS_LDEXPL:\n *\tThis symbol, if defined, indicates that the ldexpl routine is\n *\tavailable to shift a long double floating-point number\n *\tby an integral power of 2.\n */\n/* LONG_DOUBLEKIND:\n *\tLONG_DOUBLEKIND will be one of\n *\tLONG_DOUBLE_IS_DOUBLE\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LITTLE_ENDIAN\n *\tLONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BIG_ENDIAN\n *\tLONG_DOUBLE_IS_UNKNOWN_FORMAT\n *\tIt is only defined if the system supports long doubles.\n */\n/*#define  HAS_LDEXPL\t\t/ **/\n#define HAS_LONG_DOUBLE\t\t/**/\n#ifdef HAS_LONG_DOUBLE\n#define LONG_DOUBLESIZE 12\t\t/**/\n#define LONG_DOUBLEKIND 3\t\t/**/\n#define LONG_DOUBLE_IS_DOUBLE\t\t\t\t0\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_LITTLE_ENDIAN\t1\n#define LONG_DOUBLE_IS_IEEE_754_128_BIT_BIG_ENDIAN\t2\n#define LONG_DOUBLE_IS_X86_80_BIT_LITTLE_ENDIAN\t\t3\n#define LONG_DOUBLE_IS_X86_80_BIT_BIG_ENDIAN\t\t4\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_LITTLE_ENDIAN\t5\n#define LONG_DOUBLE_IS_DOUBLEDOUBLE_128_BIT_BIG_ENDIAN\t6\n#define LONG_DOUBLE_IS_UNKNOWN_FORMAT\t\t\t-1\n#endif\n\n/* HAS_LONG_LONG:\n *\tThis symbol will be defined if the C compiler supports long long.\n */\n/* LONGLONGSIZE:\n *\tThis symbol contains the size of a long long, so that the\n *\tC preprocessor can make decisions based on it.  It is only\n *\tdefined if the system supports long long.\n */\n#define HAS_LONG_LONG\t\t/**/\n#ifdef HAS_LONG_LONG\n#define LONGLONGSIZE 8\t\t/**/\n#endif\n\n/* HAS_LSEEK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the lseek() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern off_t lseek(int, off_t, int);\n */\n#define\tHAS_LSEEK_PROTO\t/**/\n\n/* HAS_MEMCHR:\n *\tThis symbol, if defined, indicates that the memchr routine is available\n *\tto locate characters within a C string.\n */\n#define HAS_MEMCHR\t/**/\n\n/* HAS_MKSTEMP:\n *\tThis symbol, if defined, indicates that the mkstemp routine is\n *\tavailable to exclusively create and open a uniquely named\n *\ttemporary file.\n */\n#if __MINGW64_VERSION_MAJOR >= 4\n#define HAS_MKSTEMP\n#endif\n\n/* HAS_MMAP:\n *\tThis symbol, if defined, indicates that the mmap system call is\n *\tavailable to map a file into memory.\n */\n/* Mmap_t:\n *\tThis symbol holds the return type of the mmap() system call\n *\t(and simultaneously the type of the first argument).\n *\tUsually set to 'void *' or 'caddr_t'.\n */\n/*#define HAS_MMAP\t\t/ **/\n#define Mmap_t void *\t/**/\n\n/* HAS_MSG:\n *\tThis symbol, if defined, indicates that the entire msg*(2) library is\n *\tsupported (IPC mechanism based on message queues).\n */\n/*#define HAS_MSG\t\t/ **/\n\n/* HAS_OPEN3:\n *\tThis manifest constant lets the C program know that the three\n *\targument form of open(2) is available.\n */\n/*#define HAS_OPEN3\t\t/ **/\n\n/* OLD_PTHREAD_CREATE_JOINABLE:\n *\tThis symbol, if defined, indicates how to create pthread\n *\tin joinable (aka undetached) state.  NOTE: not defined\n *\tif pthread.h already has defined PTHREAD_CREATE_JOINABLE\n *\t(the new version of the constant).\n *\tIf defined, known values are PTHREAD_CREATE_UNDETACHED\n *\tand __UNDETACHED.\n */\n/*#define OLD_PTHREAD_CREATE_JOINABLE  / **/\n\n/* HAS_PTHREAD_ATFORK:\n *\tThis symbol, if defined, indicates that the pthread_atfork routine\n *\tis available to setup fork handlers.\n */\n/*#define HAS_PTHREAD_ATFORK\t\t/ **/\n\n/* HAS_PTHREAD_YIELD:\n *\tThis symbol, if defined, indicates that the pthread_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/* SCHED_YIELD:\n *\tThis symbol defines the way to yield the execution of\n *\tthe current thread.  Known ways are sched_yield,\n *\tpthread_yield, and pthread_yield with NULL.\n */\n/* HAS_SCHED_YIELD:\n *\tThis symbol, if defined, indicates that the sched_yield\n *\troutine is available to yield the execution of the current\n *\tthread.\t sched_yield is preferable to pthread_yield.\n */\n/*#define HAS_PTHREAD_YIELD\t/ **/\n#define SCHED_YIELD\t\t/**/\n/*#define HAS_SCHED_YIELD\t/ **/\n\n/* HAS_RANDOM_R:\n *\tThis symbol, if defined, indicates that the random_r routine\n *\tis available to random re-entrantly.\n */\n/* RANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of random_r.\n *\tIt is zero if d_random_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_random_r\n *\tis defined.\n */\n/*#define HAS_RANDOM_R\t   / **/\n#define RANDOM_R_PROTO 0\t   /**/\n\n/* HAS_READDIR64_R:\n *\tThis symbol, if defined, indicates that the readdir64_r routine\n *\tis available to readdir64 re-entrantly.\n */\n/* READDIR64_R_PROTO:\n *\tThis symbol encodes the prototype of readdir64_r.\n *\tIt is zero if d_readdir64_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir64_r\n *\tis defined.\n */\n/*#define HAS_READDIR64_R\t   / **/\n#define READDIR64_R_PROTO 0\t   /**/\n\n/* HAS_READDIR_R:\n *\tThis symbol, if defined, indicates that the readdir_r routine\n *\tis available to readdir re-entrantly.\n */\n/* READDIR_R_PROTO:\n *\tThis symbol encodes the prototype of readdir_r.\n *\tIt is zero if d_readdir_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_readdir_r\n *\tis defined.\n */\n/*#define HAS_READDIR_R\t   / **/\n#define READDIR_R_PROTO 0\t   /**/\n\n/* HAS_SAFE_BCOPY:\n *\tThis symbol, if defined, indicates that the bcopy routine is available\n *\tto copy potentially overlapping memory blocks. Normally, you should\n *\tprobably use memmove() or memcpy(). If neither is defined, roll your\n *\town version.\n */\n/*#define HAS_SAFE_BCOPY\t/ **/\n\n/* HAS_SAFE_MEMCPY:\n *\tThis symbol, if defined, indicates that the memcpy routine is available\n *\tto copy potentially overlapping memory blocks.  If you need to\n *\tcopy overlapping memory blocks, you should check HAS_MEMMOVE and\n *\tuse memmove() instead, if available.\n */\n/*#define HAS_SAFE_MEMCPY\t/ **/\n\n/* HAS_SANE_MEMCMP:\n *\tThis symbol, if defined, indicates that the memcmp routine is available\n *\tand can be used to compare relative magnitudes of chars with their high\n *\tbits set.  If it is not defined, roll your own version.\n */\n#define HAS_SANE_MEMCMP\t/**/\n\n/* HAS_SEM:\n *\tThis symbol, if defined, indicates that the entire sem*(2) library is\n *\tsupported.\n */\n/*#define HAS_SEM\t\t/ **/\n\n/* HAS_SETGRENT:\n *\tThis symbol, if defined, indicates that the setgrent routine is\n *\tavailable for initializing sequential access of the group database.\n */\n/*#define HAS_SETGRENT\t\t/ **/\n\n/* HAS_SETGRENT_R:\n *\tThis symbol, if defined, indicates that the setgrent_r routine\n *\tis available to setgrent re-entrantly.\n */\n/* SETGRENT_R_PROTO:\n *\tThis symbol encodes the prototype of setgrent_r.\n *\tIt is zero if d_setgrent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setgrent_r\n *\tis defined.\n */\n/*#define HAS_SETGRENT_R\t   / **/\n#define SETGRENT_R_PROTO 0\t   /**/\n\n/* HAS_SETHOSTENT:\n *\tThis symbol, if defined, indicates that the sethostent() routine is\n *\tavailable.\n */\n/*#define HAS_SETHOSTENT\t\t/ **/\n\n/* HAS_SETHOSTENT_R:\n *\tThis symbol, if defined, indicates that the sethostent_r routine\n *\tis available to sethostent re-entrantly.\n */\n/* SETHOSTENT_R_PROTO:\n *\tThis symbol encodes the prototype of sethostent_r.\n *\tIt is zero if d_sethostent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_sethostent_r\n *\tis defined.\n */\n/*#define HAS_SETHOSTENT_R\t   / **/\n#define SETHOSTENT_R_PROTO 0\t   /**/\n\n/* HAS_SETLOCALE_R:\n *\tThis symbol, if defined, indicates that the setlocale_r routine\n *\tis available to setlocale re-entrantly.\n */\n/* SETLOCALE_R_PROTO:\n *\tThis symbol encodes the prototype of setlocale_r.\n *\tIt is zero if d_setlocale_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setlocale_r\n *\tis defined.\n */\n/*#define HAS_SETLOCALE_R\t   / **/\n#define SETLOCALE_R_PROTO 0\t   /**/\n\n/* HAS_SETNETENT:\n *\tThis symbol, if defined, indicates that the setnetent() routine is\n *\tavailable.\n */\n/*#define HAS_SETNETENT\t\t/ **/\n\n/* HAS_SETNETENT_R:\n *\tThis symbol, if defined, indicates that the setnetent_r routine\n *\tis available to setnetent re-entrantly.\n */\n/* SETNETENT_R_PROTO:\n *\tThis symbol encodes the prototype of setnetent_r.\n *\tIt is zero if d_setnetent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setnetent_r\n *\tis defined.\n */\n/*#define HAS_SETNETENT_R\t   / **/\n#define SETNETENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPROTOENT:\n *\tThis symbol, if defined, indicates that the setprotoent() routine is\n *\tavailable.\n */\n/*#define HAS_SETPROTOENT\t\t/ **/\n\n/* HAS_SETPGRP:\n *\tThis symbol, if defined, indicates that the setpgrp routine is\n *\tavailable to set the current process group.\n */\n/* USE_BSD_SETPGRP:\n *\tThis symbol, if defined, indicates that setpgrp needs two\n *\targuments whereas USG one needs none.  See also HAS_SETPGID\n *\tfor a POSIX interface.\n */\n/*#define HAS_SETPGRP\t\t/ **/\n/*#define USE_BSD_SETPGRP\t/ **/\n\n/* HAS_SETPROTOENT_R:\n *\tThis symbol, if defined, indicates that the setprotoent_r routine\n *\tis available to setprotoent re-entrantly.\n */\n/* SETPROTOENT_R_PROTO:\n *\tThis symbol encodes the prototype of setprotoent_r.\n *\tIt is zero if d_setprotoent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setprotoent_r\n *\tis defined.\n */\n/*#define HAS_SETPROTOENT_R\t   / **/\n#define SETPROTOENT_R_PROTO 0\t   /**/\n\n/* HAS_SETPWENT:\n *\tThis symbol, if defined, indicates that the setpwent routine is\n *\tavailable for initializing sequential access of the passwd database.\n */\n/*#define HAS_SETPWENT\t\t/ **/\n\n/* HAS_SETPWENT_R:\n *\tThis symbol, if defined, indicates that the setpwent_r routine\n *\tis available to setpwent re-entrantly.\n */\n/* SETPWENT_R_PROTO:\n *\tThis symbol encodes the prototype of setpwent_r.\n *\tIt is zero if d_setpwent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setpwent_r\n *\tis defined.\n */\n/*#define HAS_SETPWENT_R\t   / **/\n#define SETPWENT_R_PROTO 0\t   /**/\n\n/* HAS_SETSERVENT:\n *\tThis symbol, if defined, indicates that the setservent() routine is\n *\tavailable.\n */\n/*#define HAS_SETSERVENT\t\t/ **/\n\n/* HAS_SETSERVENT_R:\n *\tThis symbol, if defined, indicates that the setservent_r routine\n *\tis available to setservent re-entrantly.\n */\n/* SETSERVENT_R_PROTO:\n *\tThis symbol encodes the prototype of setservent_r.\n *\tIt is zero if d_setservent_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_setservent_r\n *\tis defined.\n */\n/*#define HAS_SETSERVENT_R\t   / **/\n#define SETSERVENT_R_PROTO 0\t   /**/\n\n/* HAS_SETVBUF:\n *\tThis symbol, if defined, indicates that the setvbuf routine is\n *\tavailable to change buffering on an open stdio stream.\n *\tto a line-buffered mode.\n */\n#define HAS_SETVBUF\t\t/**/\n\n/* HAS_SHM:\n *\tThis symbol, if defined, indicates that the entire shm*(2) library is\n *\tsupported.\n */\n/*#define HAS_SHM\t\t/ **/\n\n/* Shmat_t:\n *\tThis symbol holds the return type of the shmat() system call.\n *\tUsually set to 'void *' or 'char *'.\n */\n/* HAS_SHMAT_PROTOTYPE:\n *\tThis symbol, if defined, indicates that the sys/shm.h includes\n *\ta prototype for shmat().  Otherwise, it is up to the program to\n *\tguess one.  Shmat_t shmat(int, Shmat_t, int) is a good guess,\n *\tbut not always right so it should be emitted by the program only\n *\twhen HAS_SHMAT_PROTOTYPE is not defined to avoid conflicting defs.\n */\n#define Shmat_t void *\t/**/\n/*#define HAS_SHMAT_PROTOTYPE\t/ **/\n\n/* HAS_SIGACTION:\n *\tThis symbol, if defined, indicates that Vr4's sigaction() routine\n *\tis available.\n */\n/*#define HAS_SIGACTION\t/ **/\n\n/* HAS_SIGSETJMP:\n *\tThis variable indicates to the C program that the sigsetjmp()\n *\troutine is available to save the calling process's registers\n *\tand stack environment for later use by siglongjmp(), and\n *\tto optionally save the process's signal mask.  See\n *\tSigjmp_buf, Sigsetjmp, and Siglongjmp.\n */\n/* Sigjmp_buf:\n *\tThis is the buffer type to be used with Sigsetjmp and Siglongjmp.\n */\n/* Sigsetjmp:\n *\tThis macro is used in the same way as sigsetjmp(), but will invoke\n *\ttraditional setjmp() if sigsetjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/* Siglongjmp:\n *\tThis macro is used in the same way as siglongjmp(), but will invoke\n *\ttraditional longjmp() if siglongjmp isn't available.\n *\tSee HAS_SIGSETJMP.\n */\n/*#define HAS_SIGSETJMP\t/ **/\n#ifdef HAS_SIGSETJMP\n#define Sigjmp_buf sigjmp_buf\n#define Sigsetjmp(buf,save_mask) sigsetjmp((buf),(save_mask))\n#define Siglongjmp(buf,retval) siglongjmp((buf),(retval))\n#else\n#define Sigjmp_buf jmp_buf\n#define Sigsetjmp(buf,save_mask) setjmp((buf))\n#define Siglongjmp(buf,retval) longjmp((buf),(retval))\n#endif\n\n/* HAS_SOCKET:\n *\tThis symbol, if defined, indicates that the BSD socket interface is\n *\tsupported.\n */\n/* HAS_SOCKETPAIR:\n *\tThis symbol, if defined, indicates that the BSD socketpair() call is\n *\tsupported.\n */\n/* HAS_MSG_CTRUNC:\n *\tThis symbol, if defined, indicates that the MSG_CTRUNC is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_DONTROUTE:\n *\tThis symbol, if defined, indicates that the MSG_DONTROUTE is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_OOB:\n *\tThis symbol, if defined, indicates that the MSG_OOB is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PEEK:\n *\tThis symbol, if defined, indicates that the MSG_PEEK is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_MSG_PROXY:\n *\tThis symbol, if defined, indicates that the MSG_PROXY is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_SCM_RIGHTS:\n *\tThis symbol, if defined, indicates that the SCM_RIGHTS is supported.\n *\tChecking just with #ifdef might not be enough because this symbol\n *\thas been known to be an enum.\n */\n/* HAS_SOCKADDR_SA_LEN:\n *\tThis symbol, if defined, indicates that the struct sockaddr\n *\tstructure has a member called sa_len, indicating the length of\n *\tthe structure.\n */\n/* HAS_SOCKADDR_IN6:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct sockaddr_in6;\n */\n/* HAS_SIN6_SCOPE_ID:\n *\tThis symbol, if defined, indicates that the struct sockaddr_in6\n *\tstructure has a member called sin6_scope_id.\n */\n/* HAS_IP_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq;\n */\n/* HAS_IP_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ip_mreq_source;\n */\n/* HAS_IPV6_MREQ:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq;\n */\n/* HAS_IPV6_MREQ_SOURCE:\n *\tThis symbol, if defined, indicates the availability of\n *\tstruct ipv6_mreq_source;\n */\n#define\tHAS_SOCKET\t\t/**/\n/*#define\tHAS_SOCKETPAIR\t/ **/\n/*#define\tHAS_SOCKADDR_SA_LEN\t/ **/\n/*#define\tHAS_MSG_CTRUNC\t/ **/\n/*#define\tHAS_MSG_DONTROUTE\t/ **/\n/*#define\tHAS_MSG_OOB\t/ **/\n/*#define\tHAS_MSG_PEEK\t/ **/\n/*#define\tHAS_MSG_PROXY\t/ **/\n/*#define\tHAS_SCM_RIGHTS\t/ **/\n/*#define\tHAS_SOCKADDR_IN6\t/ **/\n#define\tHAS_SIN6_SCOPE_ID\t/**/\n/*#define\tHAS_IP_MREQ\t/ **/\n/*#define\tHAS_IP_MREQ_SOURCE\t/ **/\n/*#define\tHAS_IPV6_MREQ\t/ **/\n/*#define\tHAS_IPV6_MREQ_SOURCE\t/ **/\n\n/* HAS_SRAND48_R:\n *\tThis symbol, if defined, indicates that the srand48_r routine\n *\tis available to srand48 re-entrantly.\n */\n/* SRAND48_R_PROTO:\n *\tThis symbol encodes the prototype of srand48_r.\n *\tIt is zero if d_srand48_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srand48_r\n *\tis defined.\n */\n/*#define HAS_SRAND48_R\t   / **/\n#define SRAND48_R_PROTO 0\t   /**/\n\n/* HAS_SRANDOM_R:\n *\tThis symbol, if defined, indicates that the srandom_r routine\n *\tis available to srandom re-entrantly.\n */\n/* SRANDOM_R_PROTO:\n *\tThis symbol encodes the prototype of srandom_r.\n *\tIt is zero if d_srandom_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_srandom_r\n *\tis defined.\n */\n/*#define HAS_SRANDOM_R\t   / **/\n#define SRANDOM_R_PROTO 0\t   /**/\n\n/* USE_STAT_BLOCKS:\n *\tThis symbol is defined if this system has a stat structure declaring\n *\tst_blksize and st_blocks.\n */\n#ifndef USE_STAT_BLOCKS\n/*#define USE_STAT_BLOCKS \t/ **/\n#endif\n\n/* HAS_STATIC_INLINE:\n *\tThis symbol, if defined, indicates that the C compiler supports\n *\tC99-style static inline.  That is, the function can't be called\n *\tfrom another translation unit.\n */\n/* PERL_STATIC_INLINE:\n *\tThis symbol gives the best-guess incantation to use for static\n *\tinline functions.  If HAS_STATIC_INLINE is defined, this will\n *\tgive C99-style inline.  If HAS_STATIC_INLINE is not defined,\n *\tthis will give a plain 'static'.  It will always be defined\n *\tto something that gives static linkage.\n *\tPossibilities include\n *\t\tstatic inline       (c99)\n *\t\tstatic __inline__   (gcc -ansi)\n *\t\tstatic __inline     (MSVC)\n *\t\tstatic _inline      (older MSVC)\n *\t\tstatic              (c89 compilers)\n */\n#define HAS_STATIC_INLINE\t\t\t\t/**/\n#define PERL_STATIC_INLINE static __inline__\t/**/\n\n/* USE_STDIO_PTR:\n *\tThis symbol is defined if the _ptr and _cnt fields (or similar)\n *\tof the stdio FILE structure can be used to access the stdio buffer\n *\tfor a file handle.  If this is defined, then the FILE_ptr(fp)\n *\tand FILE_cnt(fp) macros will also be defined and should be used\n *\tto access these fields.\n */\n/* FILE_ptr:\n *\tThis macro is used to access the _ptr field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_PTR_LVALUE:\n *\tThis symbol is defined if the FILE_ptr macro can be used as an\n *\tlvalue.\n */\n/* FILE_cnt:\n *\tThis macro is used to access the _cnt field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_PTR is defined.\n */\n/* STDIO_CNT_LVALUE:\n *\tThis symbol is defined if the FILE_cnt macro can be used as an\n *\tlvalue.\n */\n/* STDIO_PTR_LVAL_SETS_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n has the side effect of decreasing the\n *\tvalue of File_cnt(fp) by n.\n */\n/* STDIO_PTR_LVAL_NOCHANGE_CNT:\n *\tThis symbol is defined if using the FILE_ptr macro as an lvalue\n *\tto increase the pointer by n leaves File_cnt(fp) unchanged.\n */\n#define USE_STDIO_PTR \t/**/\n#ifdef USE_STDIO_PTR\n#define FILE_ptr(fp)\t((fp)->_ptr)\n#define STDIO_PTR_LVALUE \t\t/**/\n#define FILE_cnt(fp)\t((fp)->_cnt)\n#define STDIO_CNT_LVALUE \t\t/**/\n/*#define STDIO_PTR_LVAL_SETS_CNT\t/ **/\n#define STDIO_PTR_LVAL_NOCHANGE_CNT\t/**/\n#endif\n\n/* USE_STDIO_BASE:\n *\tThis symbol is defined if the _base field (or similar) of the\n *\tstdio FILE structure can be used to access the stdio buffer for\n *\ta file handle.  If this is defined, then the FILE_base(fp) macro\n *\twill also be defined and should be used to access this field.\n *\tAlso, the FILE_bufsiz(fp) macro will be defined and should be used\n *\tto determine the number of bytes in the buffer.  USE_STDIO_BASE\n *\twill never be defined unless USE_STDIO_PTR is.\n */\n/* FILE_base:\n *\tThis macro is used to access the _base field (or equivalent) of the\n *\tFILE structure pointed to by its argument. This macro will always be\n *\tdefined if USE_STDIO_BASE is defined.\n */\n/* FILE_bufsiz:\n *\tThis macro is used to determine the number of bytes in the I/O\n *\tbuffer pointed to by _base field (or equivalent) of the FILE\n *\tstructure pointed to its argument. This macro will always be defined\n *\tif USE_STDIO_BASE is defined.\n */\n#define USE_STDIO_BASE \t/**/\n#ifdef USE_STDIO_BASE\n#define FILE_base(fp)\t((fp)->_base)\n#define FILE_bufsiz(fp)\t((fp)->_cnt + (fp)->_ptr - (fp)->_base)\n#endif\n\n/* USE_STRUCT_COPY:\n *\tThis symbol, if defined, indicates that this C compiler knows how\n *\tto copy structures.  If undefined, you'll need to use a block copy\n *\troutine of some sort instead.\n */\n#define\tUSE_STRUCT_COPY\t/**/\n\n/* HAS_STRERROR:\n *\tThis symbol, if defined, indicates that the strerror routine is\n *\tavailable to translate error numbers to strings. See the writeup\n *\tof Strerror() in this file before you try to define your own.\n */\n/* HAS_SYS_ERRLIST:\n *\tThis symbol, if defined, indicates that the sys_errlist array is\n *\tavailable to translate error numbers to strings. The extern int\n *\tsys_nerr gives the size of that table.\n */\n/* Strerror:\n *\tThis preprocessor symbol is defined as a macro if strerror() is\n *\tnot available to translate error numbers to strings but sys_errlist[]\n *\tarray is there.\n */\n#define HAS_STRERROR\t\t/**/\n#define HAS_SYS_ERRLIST\t/**/\n#define Strerror(e) strerror(e)\n\n/* HAS_STRERROR_R:\n *\tThis symbol, if defined, indicates that the strerror_r routine\n *\tis available to strerror re-entrantly.\n */\n/* STRERROR_R_PROTO:\n *\tThis symbol encodes the prototype of strerror_r.\n *\tIt is zero if d_strerror_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_strerror_r\n *\tis defined.\n */\n/*#define HAS_STRERROR_R\t   / **/\n#define STRERROR_R_PROTO 0\t   /**/\n\n/* HAS_STRTOUL:\n *\tThis symbol, if defined, indicates that the strtoul routine is\n *\tavailable to provide conversion of strings to unsigned long.\n */\n#define HAS_STRTOUL\t/**/\n\n/* HAS_TIME:\n *\tThis symbol, if defined, indicates that the time() routine exists.\n */\n/* Time_t:\n *\tThis symbol holds the type returned by time(). It can be long,\n *\tor time_t on BSD sites (in which case <sys/types.h> should be\n *\tincluded).\n */\n#define HAS_TIME\t\t/**/\n#define Time_t time_t\t\t/* Time type */\n\n/* HAS_TIMES:\n *\tThis symbol, if defined, indicates that the times() routine exists.\n *\tNote that this became obsolete on some systems (SUNOS), which now\n * use getrusage(). It may be necessary to include <sys/times.h>.\n */\n#define HAS_TIMES\t\t/**/\n\n/* HAS_TMPNAM_R:\n *\tThis symbol, if defined, indicates that the tmpnam_r routine\n *\tis available to tmpnam re-entrantly.\n */\n/* TMPNAM_R_PROTO:\n *\tThis symbol encodes the prototype of tmpnam_r.\n *\tIt is zero if d_tmpnam_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_tmpnam_r\n *\tis defined.\n */\n/*#define HAS_TMPNAM_R\t   / **/\n#define TMPNAM_R_PROTO 0\t   /**/\n\n/* HAS_TTYNAME_R:\n *\tThis symbol, if defined, indicates that the ttyname_r routine\n *\tis available to ttyname re-entrantly.\n */\n/* TTYNAME_R_PROTO:\n *\tThis symbol encodes the prototype of ttyname_r.\n *\tIt is zero if d_ttyname_r is undef, and one of the\n *\tREENTRANT_PROTO_T_ABC macros of reentr.h if d_ttyname_r\n *\tis defined.\n */\n/*#define HAS_TTYNAME_R\t   / **/\n#define TTYNAME_R_PROTO 0\t   /**/\n\n/* HAS_UNION_SEMUN:\n *\tThis symbol, if defined, indicates that the union semun is\n *\tdefined by including <sys/sem.h>.  If not, the user code\n *\tprobably needs to define it as:\n *\tunion semun {\n *\t    int val;\n *\t    struct semid_ds *buf;\n *\t    unsigned short *array;\n *\t}\n */\n/* USE_SEMCTL_SEMUN:\n *\tThis symbol, if defined, indicates that union semun is\n *\tused for semctl IPC_STAT.\n */\n/* USE_SEMCTL_SEMID_DS:\n *\tThis symbol, if defined, indicates that struct semid_ds * is\n *\tused for semctl IPC_STAT.\n */\n#define HAS_UNION_SEMUN\t/**/\n/*#define USE_SEMCTL_SEMUN\t/ **/\n/*#define USE_SEMCTL_SEMID_DS\t/ **/\n\n/* HAS_VFORK:\n *\tThis symbol, if defined, indicates that vfork() exists.\n */\n/*#define HAS_VFORK\t/ **/\n\n/* HAS_PSEUDOFORK:\n *\tThis symbol, if defined, indicates that an emulation of the\n *\tfork routine is available.\n */\n/*#define HAS_PSEUDOFORK\t/ **/\n\n/* Signal_t:\n *\tThis symbol's value is either \"void\" or \"int\", corresponding to the\n *\tappropriate return type of a signal handler.  Thus, you can declare\n *\ta signal handler using \"Signal_t (*handler)()\", and define the\n *\thandler using \"Signal_t handler(sig)\".\n */\n#define Signal_t void\t/* Signal handler's return type */\n\n/* HASVOLATILE:\n *\tThis symbol, if defined, indicates that this C compiler knows about\n *\tthe volatile declaration.\n */\n#define\tHASVOLATILE\t/**/\n#ifndef HASVOLATILE\n#define volatile\n#endif\n\n/* HAS_VPRINTF:\n *\tThis symbol, if defined, indicates that the vprintf routine is available\n *\tto printf with a pointer to an argument list.  If unavailable, you\n *\tmay need to write your own, probably in terms of _doprnt().\n */\n/* USE_CHAR_VSPRINTF:\n *\tThis symbol is defined if this system has vsprintf() returning type\n *\t(char*).  The trend seems to be to declare it as \"int vsprintf()\".  It\n *\tis up to the package author to declare vsprintf correctly based on the\n *\tsymbol.\n */\n#define HAS_VPRINTF\t/**/\n/*#define USE_CHAR_VSPRINTF \t/ **/\n\n/* DOUBLESIZE:\n *\tThis symbol contains the size of a double, so that the C preprocessor\n *\tcan make decisions based on it.\n */\n#define DOUBLESIZE 8\t\t/**/\n\n/* EBCDIC:\n *\tThis symbol, if defined, indicates that this system uses\n *\tEBCDIC encoding.\n */\n/*#define\tEBCDIC \t\t/ **/\n\n/* Fpos_t:\n *\tThis symbol holds the type used to declare file positions in libc.\n *\tIt can be fpos_t, long, uint, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Fpos_t fpos_t\t\t/* File position type */\n\n/* Gid_t_f:\n *\tThis symbol defines the format string used for printing a Gid_t.\n */\n#define\tGid_t_f\t\t\"ld\"\t\t/**/\n\n/* Gid_t_sign:\n *\tThis symbol holds the signedness of a Gid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Gid_t_sign\t-1\t\t/* GID sign */\n\n/* Gid_t_size:\n *\tThis symbol holds the size of a Gid_t in bytes.\n */\n#define Gid_t_size 4\t\t/* GID size */\n\n/* Gid_t:\n *\tThis symbol holds the return type of getgid() and the type of\n *\targument to setrgid() and related functions.  Typically,\n *\tit is the type of group ids in the kernel. It can be int, ushort,\n *\tgid_t, etc... It may be necessary to include <sys/types.h> to get\n *\tany typedef'ed information.\n */\n#define Gid_t gid_t\t\t/* Type for getgid(), etc... */\n\n/* I_DIRENT:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <dirent.h>. Using this symbol also triggers the definition\n *\tof the Direntry_t define which ends up being 'struct dirent' or\n *\t'struct direct' depending on the availability of <dirent.h>.\n */\n/* DIRNAMLEN:\n *\tThis symbol, if defined, indicates to the C program that the length\n *\tof directory entry names is provided by a d_namlen field.  Otherwise\n *\tyou need to do strlen() on the d_name field.\n */\n/* Direntry_t:\n *\tThis symbol is set to 'struct direct' or 'struct dirent' depending on\n *\twhether dirent is available or not. You should use this pseudo type to\n *\tportably declare your directory entries.\n */\n#define I_DIRENT\t\t/**/\n#define DIRNAMLEN\t/**/\n#define Direntry_t struct direct\n\n/* I_EXECINFO:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <execinfo.h> for backtrace() support.\n */\n/*#define I_EXECINFO\t\t/ **/\n\n/* I_GRP:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <grp.h>.\n */\n/* GRPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct group\n *\tin <grp.h> contains gr_passwd.\n */\n/*#define I_GRP\t\t/ **/\n/*#define GRPASSWD\t/ **/\n\n/* I_MACH_CTHREADS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <mach/cthreads.h>.\n */\n/*#define   I_MACH_CTHREADS\t/ **/\n\n/* I_NDBM:\n *\tThis symbol, if defined, indicates that <ndbm.h> exists and should\n *\tbe included.\n */\n/* I_GDBMNDBM:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> exists and should\n *\tbe included.  This was the location of the ndbm.h compatibility file\n *\tin RedHat 7.1.\n */\n/* I_GDBM_NDBM:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> exists and should\n *\tbe included.  This is the location of the ndbm.h compatibility file\n *\tin Debian 4.0.\n */\n/* NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBMNDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm/ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/* GDBM_NDBM_H_USES_PROTOTYPES:\n *\tThis symbol, if defined, indicates that <gdbm-ndbm.h> uses real ANSI C\n *\tprototypes instead of K&R style function declarations without any\n *\tparameter information. While ANSI C prototypes are supported in C++,\n *\tK&R style function declarations will yield errors.\n */\n/*#define I_NDBM\t/ **/\n/*#define I_GDBMNDBM\t/ **/\n/*#define I_GDBM_NDBM\t/ **/\n/*#define NDBM_H_USES_PROTOTYPES\t/ **/\n/*#define GDBMNDBM_H_USES_PROTOTYPES\t/ **/\n/*#define GDBM_NDBM_H_USES_PROTOTYPES\t/ **/\n\n/* I_NETDB:\n *\tThis symbol, if defined, indicates that <netdb.h> exists and\n *\tshould be included.\n */\n/*#define I_NETDB\t\t/ **/\n\n/* I_NET_ERRNO:\n *\tThis symbol, if defined, indicates that <net/errno.h> exists and\n *\tshould be included.\n */\n/*#define I_NET_ERRNO\t\t/ **/\n\n/* I_PTHREAD:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <pthread.h>.\n */\n/*#define   I_PTHREAD\t/ **/\n\n/* I_PWD:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <pwd.h>.\n */\n/* PWQUOTA:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_quota.\n */\n/* PWAGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_age.\n */\n/* PWCHANGE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_change.\n */\n/* PWCLASS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_class.\n */\n/* PWEXPIRE:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_expire.\n */\n/* PWCOMMENT:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_comment.\n */\n/* PWGECOS:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_gecos.\n */\n/* PWPASSWD:\n *\tThis symbol, if defined, indicates to the C program that struct passwd\n *\tcontains pw_passwd.\n */\n/*#define I_PWD\t\t/ **/\n/*#define PWQUOTA\t/ **/\n/*#define PWAGE\t/ **/\n/*#define PWCHANGE\t/ **/\n/*#define PWCLASS\t/ **/\n/*#define PWEXPIRE\t/ **/\n/*#define PWCOMMENT\t/ **/\n/*#define PWGECOS\t/ **/\n/*#define PWPASSWD\t/ **/\n\n/* I_SYS_ACCESS:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/access.h>.\n */\n/*#define   I_SYS_ACCESS                / **/\n\n/* I_SYS_SECURITY:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <sys/security.h>.\n */\n/*#define   I_SYS_SECURITY\t/ **/\n\n/* I_SYSUIO:\n *\tThis symbol, if defined, indicates that <sys/uio.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUIO\t\t/ **/\n\n/* I_TERMIO:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<termio.h> rather than <sgtty.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/* I_TERMIOS:\n *\tThis symbol, if defined, indicates that the program should include\n *\tthe POSIX termios.h rather than sgtty.h or termio.h.\n *\tThere are also differences in the ioctl() calls that depend on the\n *\tvalue of this symbol.\n */\n/* I_SGTTY:\n *\tThis symbol, if defined, indicates that the program should include\n *\t<sgtty.h> rather than <termio.h>.  There are also differences in\n *\tthe ioctl() calls that depend on the value of this symbol.\n */\n/*#define I_TERMIO\t\t/ **/\n/*#define I_TERMIOS\t\t/ **/\n/*#define I_SGTTY\t\t/ **/\n\n/* I_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <time.h>.\n */\n/* I_SYS_TIME:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h>.\n */\n/* I_SYS_TIME_KERNEL:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <sys/time.h> with KERNEL defined.\n */\n/* HAS_TM_TM_ZONE:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_zone field.\n */\n/* HAS_TM_TM_GMTOFF:\n *\tThis symbol, if defined, indicates to the C program that\n *\tthe struct tm has a tm_gmtoff field.\n */\n#define I_TIME\t\t/**/\n/*#define I_SYS_TIME\t\t/ **/\n/*#define I_SYS_TIME_KERNEL\t\t/ **/\n/*#define HAS_TM_TM_ZONE\t\t/ **/\n/*#define HAS_TM_TM_GMTOFF\t\t/ **/\n\n/* I_STDARG:\n *\tThis symbol, if defined, indicates that <stdarg.h> exists and should\n *\tbe included.\n */\n/* I_VARARGS:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <varargs.h>.\n */\n#define I_STDARG\t\t/**/\n/*#define I_VARARGS\t/ **/\n\n/* PERL_INC_VERSION_LIST:\n *\tThis variable specifies the list of subdirectories in over\n *\twhich perl.c:incpush() and lib/lib.pm will automatically\n *\tsearch when adding directories to @INC, in a format suitable\n *\tfor a C initialization string.  See the inc_version_list entry\n *\tin Porting/Glossary for more details.\n */\n/*#define PERL_INC_VERSION_LIST 0\t\t/ **/\n\n/* INSTALL_USR_BIN_PERL:\n *\tThis symbol, if defined, indicates that Perl is to be installed\n * \talso as /usr/bin/perl.\n */\n/*#define INSTALL_USR_BIN_PERL\t/ **/\n\n/* Off_t:\n *\tThis symbol holds the type used to declare offsets in the kernel.\n *\tIt can be int, long, off_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n/* LSEEKSIZE:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n/* Off_t_size:\n *\tThis symbol holds the number of bytes used by the Off_t.\n */\n#define Off_t long\t\t/* <offset> type */\n#define LSEEKSIZE 4\t\t/* <offset> size */\n#define Off_t_size 4\t/* <offset> size */\n\n/* Free_t:\n *\tThis variable contains the return type of free().  It is usually\n * void, but occasionally int.\n */\n/* Malloc_t:\n *\tThis symbol is the type of pointer returned by malloc and realloc.\n */\n#define Malloc_t void *\t\t\t/**/\n#define Free_t void\t\t\t/**/\n\n/* PERL_MALLOC_WRAP:\n *\tThis symbol, if defined, indicates that we'd like malloc wrap checks.\n */\n#define PERL_MALLOC_WRAP\t\t/**/\n\n/* MYMALLOC:\n *\tThis symbol, if defined, indicates that we're using our own malloc.\n */\n/*#define MYMALLOC\t\t\t/ **/\n\n/* Mode_t:\n *\tThis symbol holds the type used to declare file modes\n *\tfor systems calls.  It is usually mode_t, but may be\n *\tint or unsigned short.  It may be necessary to include <sys/types.h>\n *\tto get any typedef'ed information.\n */\n#define Mode_t mode_t\t /* file mode parameter for system calls */\n\n/* VAL_O_NONBLOCK:\n *\tThis symbol is to be used during open() or fcntl(F_SETFL) to turn on\n *\tnon-blocking I/O for the file descriptor. Note that there is no way\n *\tback, i.e. you cannot turn it blocking again this way. If you wish to\n *\talternatively switch between blocking and non-blocking, use the\n *\tioctl(FIOSNBIO) call instead, but that is not supported by all devices.\n */\n/* VAL_EAGAIN:\n *\tThis symbol holds the errno error code set by read() when no data was\n *\tpresent on the non-blocking file descriptor.\n */\n/* RD_NODATA:\n *\tThis symbol holds the return code from read() when no data is present\n *\ton the non-blocking file descriptor. Be careful! If EOF_NONBLOCK is\n *\tnot defined, then you can't distinguish between no data and EOF by\n *\tissuing a read(). You'll have to find another way to tell for sure!\n */\n/* EOF_NONBLOCK:\n *\tThis symbol, if defined, indicates to the C program that a read() on\n *\ta non-blocking file descriptor will return 0 on EOF, and not the value\n *\theld in RD_NODATA (-1 usually, in that case!).\n */\n#define VAL_O_NONBLOCK O_NONBLOCK\n#define VAL_EAGAIN EAGAIN\n#define RD_NODATA -1\n#define EOF_NONBLOCK\n\n/* Netdb_host_t:\n *\tThis symbol holds the type used for the 1st argument\n *\tto gethostbyaddr().\n */\n/* Netdb_hlen_t:\n *\tThis symbol holds the type used for the 2nd argument\n *\tto gethostbyaddr().\n */\n/* Netdb_name_t:\n *\tThis symbol holds the type used for the argument to\n *\tgethostbyname().\n */\n/* Netdb_net_t:\n *\tThis symbol holds the type used for the 1st argument to\n *\tgetnetbyaddr().\n */\n#define Netdb_host_t\t\tchar * /**/\n#define Netdb_hlen_t\t\tint /**/\n#define Netdb_name_t\t\tchar * /**/\n#define Netdb_net_t\t\tlong /**/\n\n/* PERL_OTHERLIBDIRS:\n *\tThis variable contains a colon-separated set of paths for the perl\n *\tbinary to search for additional library files or modules.\n *\tThese directories will be tacked to the end of @INC.\n *\tPerl will automatically search below each path for version-\n *\tand architecture-specific directories.  See PERL_INC_VERSION_LIST\n *\tfor more details.\n */\n/*#define PERL_OTHERLIBDIRS \"\"\t\t/ **/\n\n/* Pid_t:\n *\tThis symbol holds the type used to declare process ids in the kernel.\n *\tIt can be int, uint, pid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Pid_t int\t\t/* PID type */\n\n/* PRIVLIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n */\n/* PRIVLIB_EXP:\n *\tThis symbol contains the ~name expanded version of PRIVLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define PRIVLIB \"c:\\\\perl\\\\lib\"\t\t/**/\n#define PRIVLIB_EXP (win32_get_privlib(PERL_VERSION_STRING, NULL))\t/**/\n\n/* CAN_PROTOTYPE:\n *\tIf defined, this macro indicates that the C compiler can handle\n *\tfunction prototypes.\n */\n/* _:\n *\tThis macro is used to declare function parameters for folks who want\n *\tto make declarations with prototypes using a different style than\n *\tthe above macros.  Use double parentheses.  For example:\n *\n *\t\tint main _((int argc, char *argv[]));\n */\n#define\tCAN_PROTOTYPE\t/**/\n#ifdef CAN_PROTOTYPE\n#define\t_(args) args\n#else\n#define\t_(args) ()\n#endif\n\n/* PTRSIZE:\n *\tThis symbol contains the size of a pointer, so that the C preprocessor\n *\tcan make decisions based on it.  It will be sizeof(void *) if\n *\tthe compiler supports (void *); otherwise it will be\n *\tsizeof(char *).\n */\n#define PTRSIZE 4\t\t/**/\n\n/* HAS_QUAD:\n *\tThis symbol, if defined, tells that there's a 64-bit integer type,\n *\tQuad_t, and its unsigned counterpart, Uquad_t. QUADKIND will be one\n *\tof QUAD_IS_INT, QUAD_IS_LONG, QUAD_IS_LONG_LONG, QUAD_IS_INT64_T,\n *\tor QUAD_IS___INT64.\n */\n#define HAS_QUAD\t/**/\n#ifdef HAS_QUAD\n#   define Quad_t long long\t/**/\n#   define Uquad_t unsigned long long\t/**/\n#   define QUADKIND 3\t/**/\n#   define QUAD_IS_INT\t1\n#   define QUAD_IS_LONG\t2\n#   define QUAD_IS_LONG_LONG\t3\n#   define QUAD_IS_INT64_T\t4\n#   define QUAD_IS___INT64\t5\n#endif\n\n/* Drand01:\n *\tThis macro is to be used to generate uniformly distributed\n *\trandom numbers over the range [0., 1.[.  You may have to supply\n *\tan 'extern double drand48();' in your program since SunOS 4.1.3\n *\tdoesn't provide you with anything relevant in its headers.\n *\tSee HAS_DRAND48_PROTO.\n */\n/* Rand_seed_t:\n *\tThis symbol defines the type of the argument of the\n *\trandom seed function.\n */\n/* seedDrand01:\n *\tThis symbol defines the macro to be used in seeding the\n *\trandom number generator (see Drand01).\n */\n/* RANDBITS:\n *\tThis symbol indicates how many bits are produced by the\n *\tfunction used to generate normalized random numbers.\n *\tValues include 15, 16, 31, and 48.\n */\n#define Drand01()\t\tPerl_drand48()\t\t/**/\n#define Rand_seed_t\t\tU32\t\t/**/\n#define seedDrand01(x)\tPerl_drand48_init((Rand_seed_t)x)\t/**/\n#define RANDBITS\t\t48\t\t/**/\n\n/* Select_fd_set_t:\n *\tThis symbol holds the type used for the 2nd, 3rd, and 4th\n *\targuments to select.  Usually, this is 'fd_set *', if HAS_FD_SET\n *\tis defined, and 'int *' otherwise.  This is only useful if you\n *\thave select(), of course.\n */\n#define Select_fd_set_t \tPerl_fd_set *\t/**/\n\n/* SH_PATH:\n *\tThis symbol contains the full pathname to the shell used on this\n *\ton this system to execute Bourne shell scripts.  Usually, this will be\n *\t/bin/sh, though it's possible that some systems will have /bin/ksh,\n *\t/bin/pdksh, /bin/ash, /bin/bash, or even something such as\n *\tD:/bin/sh.exe.\n */\n#define SH_PATH \"cmd /x /c\"  /**/\n\n/* SIG_NAME:\n *\tThis symbol contains a list of signal names in order of\n *\tsignal number. This is intended\n *\tto be used as a static array initialization, like this:\n *\t\tchar *sig_name[] = { SIG_NAME };\n *\tThe signals in the list are separated with commas, and each signal\n *\tis surrounded by double quotes. There is no leading SIG in the signal\n *\tname, i.e. SIGQUIT is known as \"QUIT\".\n *\tGaps in the signal numbers (up to NSIG) are filled in with NUMnn,\n *\tetc., where nn is the actual signal number (e.g. NUM37).\n *\tThe signal number for sig_name[i] is stored in sig_num[i].\n *\tThe last element is 0 to terminate the list with a NULL.  This\n *\tcorresponds to the 0 at the end of the sig_name_init list.\n *\tNote that this variable is initialized from the sig_name_init,\n *\tnot from sig_name (which is unused).\n */\n/* SIG_NUM:\n *\tThis symbol contains a list of signal numbers, in the same order as the\n *\tSIG_NAME list. It is suitable for static array initialization, as in:\n *\t\tint sig_num[] = { SIG_NUM };\n *\tThe signals in the list are separated with commas, and the indices\n *\twithin that list and the SIG_NAME list match, so it's easy to compute\n *\tthe signal name from a number or vice versa at the price of a small\n *\tdynamic linear lookup.\n *\tDuplicates are allowed, but are moved to the end of the list.\n *\tThe signal number corresponding to sig_name[i] is sig_number[i].\n *\tif (i < NSIG) then sig_number[i] == i.\n *\tThe last element is 0, corresponding to the 0 at the end of\n *\tthe sig_name_init list.\n *\tNote that this variable is initialized from the sig_num_init,\n *\tnot from sig_num (which is unused).\n */\n/* SIG_SIZE:\n *\tThis variable contains the number of elements of the SIG_NAME\n *\tand SIG_NUM arrays, excluding the final NULL entry.\n */\n#define SIG_NAME \"ZERO\", \"HUP\", \"INT\", \"QUIT\", \"ILL\", \"NUM05\", \"NUM06\", \"NUM07\", \"FPE\", \"KILL\", \"NUM10\", \"SEGV\", \"NUM12\", \"PIPE\", \"ALRM\", \"TERM\", \"NUM16\", \"NUM17\", \"NUM18\", \"NUM19\", \"CHLD\", \"BREAK\", \"ABRT\", \"STOP\", \"NUM24\", \"CONT\", \"CLD\", 0\t\t/**/\n#define SIG_NUM  0, 1, 2, 21, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 20, 0\t\t/**/\n#define SIG_SIZE 27\t\t\t/**/\n\n/* SITEARCH:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-dependent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITEARCH_EXP:\n *\tThis symbol contains the ~name expanded version of SITEARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n#define SITEARCH \"c:\\\\perl\\\\site\\\\lib\"\t\t/**/\n/*#define SITEARCH_EXP \"\"\t/ **/\n\n/* SITELIB:\n *\tThis symbol contains the name of the private library for this package.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.  The program\n *\tshould be prepared to do ~ expansion.\n *\tThe standard distribution will put nothing in this directory.\n *\tAfter perl has been installed, users may install their own local\n *\tarchitecture-independent modules in this directory with\n *\t\tMakeMaker Makefile.PL\n *\tor equivalent.  See INSTALL for details.\n */\n/* SITELIB_EXP:\n *\tThis symbol contains the ~name expanded version of SITELIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* SITELIB_STEM:\n *\tThis define is SITELIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n#define SITELIB \"c:\\\\perl\\\\site\\\\lib\"\t\t/**/\n#define SITELIB_EXP (win32_get_sitelib(PERL_VERSION_STRING, NULL))\t/**/\n#define SITELIB_STEM \"\"\t\t/**/\n\n/* Size_t_size:\n *\tThis symbol holds the size of a Size_t in bytes.\n */\n#define Size_t_size 4\t\t/**/\n\n/* Size_t:\n *\tThis symbol holds the type used to declare length parameters\n *\tfor string functions.  It is usually size_t, but may be\n *\tunsigned long, int, etc.  It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Size_t size_t\t /* length parameter for string functions */\n\n/* Sock_size_t:\n *\tThis symbol holds the type used for the size argument of\n *\tvarious socket calls (just the base type, not the pointer-to).\n */\n#define Sock_size_t\t\tint /**/\n\n/* SSize_t:\n *\tThis symbol holds the type used by functions that return\n *\ta count of bytes or an error condition.  It must be a signed type.\n *\tIt is usually ssize_t, but may be long or int, etc.\n *\tIt may be necessary to include <sys/types.h> or <unistd.h>\n *\tto get any typedef'ed information.\n *\tWe will pick a type such that sizeof(SSize_t) == sizeof(Size_t).\n */\n#define SSize_t int\t /* signed count of bytes */\n\n/* STDCHAR:\n *\tThis symbol is defined to be the type of char used in stdio.h.\n *\tIt has the values \"unsigned char\" or \"char\".\n */\n#define STDCHAR char\t/**/\n\n/* Uid_t_f:\n *\tThis symbol defines the format string used for printing a Uid_t.\n */\n#define\tUid_t_f\t\t\"ld\"\t\t/**/\n\n/* Uid_t_sign:\n *\tThis symbol holds the signedness of a Uid_t.\n *\t1 for unsigned, -1 for signed.\n */\n#define Uid_t_sign\t-1\t\t/* UID sign */\n\n/* Uid_t_size:\n *\tThis symbol holds the size of a Uid_t in bytes.\n */\n#define Uid_t_size 4\t\t/* UID size */\n\n/* Uid_t:\n *\tThis symbol holds the type used to declare user ids in the kernel.\n *\tIt can be int, ushort, uid_t, etc... It may be necessary to include\n *\t<sys/types.h> to get any typedef'ed information.\n */\n#define Uid_t uid_t\t\t/* UID type */\n\n/* USE_ITHREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the interpreter-based threading implementation.\n */\n/* USE_5005THREADS:\n *\tThis symbol, if defined, indicates that Perl should be built to\n *\tuse the 5.005-based threading implementation.\n *\tOnly valid up to 5.8.x.\n */\n/* OLD_PTHREADS_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use the old draft POSIX threads API.\n */\n/* USE_REENTRANT_API:\n *\tThis symbol, if defined, indicates that Perl should\n *\ttry to use the various _r versions of library functions.\n *\tThis is extremely experimental.\n */\n/*#define\tUSE_5005THREADS\t\t/ **/\n/*#define\tUSE_ITHREADS\t\t/ **/\n#if defined(USE_5005THREADS) && !defined(USE_ITHREADS)\n#define\t\tUSE_THREADS\t\t/* until src is revised*/\n#endif\n/*#define\tOLD_PTHREADS_API\t\t/ **/\n/*#define\tUSE_REENTRANT_API\t/ **/\n\n/* PERL_VENDORARCH:\n *\tIf defined, this symbol contains the name of a private library.\n *\tThe library is private in the sense that it needn't be in anyone's\n *\texecution path, but it should be accessible by the world.\n *\tIt may have a ~ on the front.\n *\tThe standard distribution will put nothing in this directory.\n *\tVendors who distribute perl may wish to place their own\n *\tarchitecture-dependent modules and extensions in this directory with\n *\t\tMakeMaker Makefile.PL INSTALLDIRS=vendor\n *\tor equivalent.  See INSTALL for details.\n */\n/* PERL_VENDORARCH_EXP:\n *\tThis symbol contains the ~name expanded version of PERL_VENDORARCH, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/*#define PERL_VENDORARCH \"\"\t\t/ **/\n/*#define PERL_VENDORARCH_EXP \"\"\t\t/ **/\n\n/* PERL_VENDORLIB_EXP:\n *\tThis symbol contains the ~name expanded version of VENDORLIB, to be used\n *\tin programs that are not prepared to deal with ~ expansion at run-time.\n */\n/* PERL_VENDORLIB_STEM:\n *\tThis define is PERL_VENDORLIB_EXP with any trailing version-specific component\n *\tremoved.  The elements in inc_version_list (inc_version_list.U) can\n *\tbe tacked onto this variable to generate a list of directories to search.\n */\n/*#define PERL_VENDORLIB_EXP \"\"\t\t/ **/\n/*#define PERL_VENDORLIB_STEM \"\"\t\t/ **/\n\n/* USE_CROSS_COMPILE:\n *\tThis symbol, if defined, indicates that Perl is being cross-compiled.\n */\n/* PERL_TARGETARCH:\n *\tThis symbol, if defined, indicates the target architecture\n *\tPerl has been cross-compiled to.  Undefined if not a cross-compile.\n */\n#ifndef USE_CROSS_COMPILE\n/*#define\tUSE_CROSS_COMPILE\t/ **/\n#define\tPERL_TARGETARCH\t\"\"\t/**/\n#endif\n\n/* PERL_USE_DEVEL:\n *\tThis symbol, if defined, indicates that Perl was configured with\n *\t-Dusedevel, to enable development features.  This should not be\n *\tdone for production builds.\n */\n/*#define\tPERL_USE_DEVEL\t\t/ **/\n\n/* HAS_ATOLF:\n *\tThis symbol, if defined, indicates that the atolf routine is\n *\tavailable to convert strings into long doubles.\n */\n/*#define HAS_ATOLF\t\t/ **/\n\n/* HAS_ATOLL:\n *\tThis symbol, if defined, indicates that the atoll routine is\n *\tavailable to convert strings into long longs.\n */\n/*#define HAS_ATOLL\t\t/ **/\n\n/* HAS__FWALK:\n *\tThis symbol, if defined, indicates that the _fwalk system call is\n *\tavailable to apply a function to all the file handles.\n */\n/*#define HAS__FWALK\t\t/ **/\n\n/* HAS_ACOSH:\n *\tThis symbol, if defined, indicates that the acosh routine is\n *\tavailable to do the inverse hyperbolic cosine function.\n */\n/*#define HAS_ACOSH\t\t/ **/\n\n/* HAS_AINTL:\n *\tThis symbol, if defined, indicates that the aintl routine is\n *\tavailable.  If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_AINTL\t\t/ **/\n\n/* HAS_BUILTIN_CHOOSE_EXPR:\n *\tCan we handle GCC builtin for compile-time ternary-like expressions\n */\n/* HAS_BUILTIN_EXPECT:\n *\tCan we handle GCC builtin for telling that certain values are more\n *\tlikely\n */\n/*#define HAS_BUILTIN_EXPECT\t/ **/\n/*#define HAS_BUILTIN_CHOOSE_EXPR\t/ **/\n\n/* HAS_C99_VARIADIC_MACROS:\n *\tIf defined, the compiler supports C99 variadic macros.\n */\n/*#define\tHAS_C99_VARIADIC_MACROS\t/ **/\n\n/* HAS_CLASS:\n *\tThis symbol, if defined, indicates that the class routine is\n *\tavailable to classify doubles.  Available for example in AIX.\n *\tThe returned values are defined in <float.h> and are:\n *\n *\tFP_PLUS_NORM\tPositive normalized, nonzero\n *\tFP_MINUS_NORM\tNegative normalized, nonzero\n *\tFP_PLUS_DENORM\tPositive denormalized, nonzero\n *\tFP_MINUS_DENORM\tNegative denormalized, nonzero\n *\tFP_PLUS_ZERO\t+0.0\n *\tFP_MINUS_ZERO\t-0.0\n *\tFP_PLUS_INF\t+INF\n *\tFP_MINUS_INF\t-INF\n *\tFP_NANS\t\tSignaling Not a Number (NaNS)\n *\tFP_NANQ\t\tQuiet Not a Number (NaNQ)\n */\n/*#define HAS_CLASS\t\t/ **/\n\n/* HAS_CLEARENV:\n *\tThis symbol, if defined, indicates that the clearenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_CLEARENV\t\t/ **/\n\n/* HAS_STRUCT_CMSGHDR:\n *\tThis symbol, if defined, indicates that the struct cmsghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_CMSGHDR\t/ **/\n\n/* HAS_COPYSIGNL:\n *\tThis symbol, if defined, indicates that the copysignl routine is\n *\tavailable.  If aintl is also present we can emulate modfl.\n */\n/*#define HAS_COPYSIGNL\t\t/ **/\n\n/* USE_CPLUSPLUS:\n *\tThis symbol, if defined, indicates that a C++ compiler was\n *\tused to compiled Perl and will be used to compile extensions.\n */\n/*#define USE_CPLUSPLUS\t\t/ **/\n\n/* HAS_DBMINIT_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the dbminit() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int dbminit(char *);\n */\n/*#define\tHAS_DBMINIT_PROTO\t/ **/\n\n/* HAS_DIR_DD_FD:\n *\tThis symbol, if defined, indicates that the the DIR* dirstream\n *\tstructure contains a member variable named dd_fd.\n */\n/*#define HAS_DIR_DD_FD\t\t/ **/\n\n/* HAS_DIRFD:\n *\tThis manifest constant lets the C program know that dirfd\n *\tis available.\n */\n/*#define HAS_DIRFD\t\t/ **/\n\n/* DLSYM_NEEDS_UNDERSCORE:\n *\tThis symbol, if defined, indicates that we need to prepend an\n *\tunderscore to the symbol name before calling dlsym().  This only\n *\tmakes sense if you *have* dlsym, which we will presume is the\n *\tcase if you're using dl_dlopen.xs.\n */\n/*#define \tDLSYM_NEEDS_UNDERSCORE \t/ **/\n\n/* HAS_FAST_STDIO:\n *\tThis symbol, if defined, indicates that the \"fast stdio\"\n *\tis available to manipulate the stdio buffers directly.\n */\n#define HAS_FAST_STDIO\t\t/**/\n\n/* HAS_FCHDIR:\n *\tThis symbol, if defined, indicates that the fchdir routine is\n *\tavailable to change directory using a file descriptor.\n */\n/*#define HAS_FCHDIR\t\t/ **/\n\n/* FCNTL_CAN_LOCK:\n *\tThis symbol, if defined, indicates that fcntl() can be used\n *\tfor file locking.  Normally on Unix systems this is defined.\n *\tIt may be undefined on VMS.\n */\n/*#define FCNTL_CAN_LOCK\t\t/ **/\n\n/* HAS_FEGETROUND:\n *\tThis symbol, if defined, indicates that the fegetround routine is\n *\tavailable to return the macro corresponding to the current rounding\n *\tmode.\n */\n/*#define HAS_FEGETROUND\t/ **/\n\n/* HAS_FINITE:\n *\tThis symbol, if defined, indicates that the finite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_FINITE\t\t/ **/\n\n/* HAS_FINITEL:\n *\tThis symbol, if defined, indicates that the finitel routine is\n *\tavailable to check whether a long double is finite\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_FINITEL\t\t/ **/\n\n/* HAS_FLOCK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the flock() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int flock(int, int);\n */\n#define\tHAS_FLOCK_PROTO\t/**/\n\n/* HAS_FP_CLASS:\n *\tThis symbol, if defined, indicates that the fp_class routine is\n *\tavailable to classify doubles.  Available for example in Digital UNIX.\n *\tThe returned values are defined in <math.h> and are:\n *\n *\tFP_SNAN           Signaling NaN (Not-a-Number)\n *\tFP_QNAN           Quiet NaN (Not-a-Number)\n *\tFP_POS_INF        +infinity\n *\tFP_NEG_INF        -infinity\n *\tFP_POS_NORM       Positive normalized\n *\tFP_NEG_NORM       Negative normalized\n *\tFP_POS_DENORM     Positive denormalized\n *\tFP_NEG_DENORM     Negative denormalized\n *\tFP_POS_ZERO       +0.0 (positive zero)\n *\tFP_NEG_ZERO       -0.0 (negative zero)\n */\n/*#define HAS_FP_CLASS\t\t/ **/\n\n/* HAS_FP_CLASSL:\n *\tThis symbol, if defined, indicates that the fp_classl routine is\n *\tavailable to classify long doubles.  Available for example in\n *\tDigital UNIX.  See for possible values HAS_FP_CLASS.\n */\n/*#define HAS_FP_CLASSL\t\t/ **/\n\n/* HAS_FPCLASS:\n *\tThis symbol, if defined, indicates that the fpclass routine is\n *\tavailable to classify doubles.  Available for example in Solaris/SVR4.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASS\t\t/ **/\n\n/* HAS_FPCLASSIFY:\n *\tThis symbol, if defined, indicates that the fpclassify routine is\n *\tavailable to classify doubles.  Available for example in HP-UX.\n *\tThe returned values are defined in <math.h> and are\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/* HAS_FP_CLASSIFY:\n *\tThis symbol, if defined, indicates that the fp_classify routine is\n *\tavailable to classify doubles. The values are defined in <math.h>\n *\n *           FP_NORMAL     Normalized\n *           FP_ZERO       Zero\n *           FP_INFINITE   Infinity\n *           FP_SUBNORMAL  Denormalized\n *           FP_NAN        NaN\n *\n */\n/*#define\tHAS_FPCLASSIFY\t\t/ **/\n/*#define\tHAS_FP_CLASSIFY\t\t/ **/\n\n/* HAS_FPCLASSL:\n *\tThis symbol, if defined, indicates that the fpclassl routine is\n *\tavailable to classify long doubles.  Available for example in IRIX.\n *\tThe returned values are defined in <ieeefp.h> and are:\n *\n *\tFP_SNAN\t\tsignaling NaN\n *\tFP_QNAN\t\tquiet NaN\n *\tFP_NINF\t\tnegative infinity\n *\tFP_PINF\t\tpositive infinity\n *\tFP_NDENORM\tnegative denormalized non-zero\n *\tFP_PDENORM\tpositive denormalized non-zero\n *\tFP_NZERO\tnegative zero\n *\tFP_PZERO\tpositive zero\n *\tFP_NNORM\tnegative normalized non-zero\n *\tFP_PNORM\tpositive normalized non-zero\n */\n/*#define HAS_FPCLASSL\t\t/ **/\n\n/* HAS_FPGETROUND:\n *\tThis symbol, if defined, indicates that the fpgetround routine is\n *\tavailable to get the floating point rounding mode.\n */\n/*#define HAS_FPGETROUND\t\t/ **/\n\n/* HAS_FPOS64_T:\n *\tThis symbol will be defined if the C compiler supports fpos64_t.\n */\n/*#define\tHAS_FPOS64_T    \t/ **/\n\n/* HAS_FREXPL:\n *\tThis symbol, if defined, indicates that the frexpl routine is\n *\tavailable to break a long double floating-point number into\n *\ta normalized fraction and an integral power of 2.\n */\n/*#define HAS_FREXPL\t\t/ **/\n\n/* HAS_STRUCT_FS_DATA:\n *\tThis symbol, if defined, indicates that the struct fs_data\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_FS_DATA\t/ **/\n\n/* HAS_FSEEKO:\n *\tThis symbol, if defined, indicates that the fseeko routine is\n *\tavailable to fseek beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FSEEKO\t\t/ **/\n\n/* HAS_FSTATFS:\n *\tThis symbol, if defined, indicates that the fstatfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATFS\t\t/ **/\n\n/* HAS_FSYNC:\n *\tThis symbol, if defined, indicates that the fsync routine is\n *\tavailable to write a file's modified data and attributes to\n *\tpermanent storage.\n */\n/*#define HAS_FSYNC\t\t/ **/\n\n/* HAS_FTELLO:\n *\tThis symbol, if defined, indicates that the ftello routine is\n *\tavailable to ftell beyond 32 bits (useful for ILP32 hosts).\n */\n/*#define HAS_FTELLO\t\t/ **/\n\n/* HAS_FUTIMES:\n *\tThis symbol, if defined, indicates that the futimes routine is\n *\tavailable to change file descriptor time stamps with struct timevals.\n */\n/*#define HAS_FUTIMES\t\t/ **/\n\n/* HAS_GETADDRINFO:\n *\tThis symbol, if defined, indicates that the getaddrinfo() function\n *\tis available for use.\n */\n/*#define HAS_GETADDRINFO\t\t/ **/\n\n/* HAS_GETCWD:\n *\tThis symbol, if defined, indicates that the getcwd routine is\n *\tavailable to get the current working directory.\n */\n#define HAS_GETCWD\t\t/**/\n\n/* HAS_GETESPWNAM:\n *\tThis symbol, if defined, indicates that the getespwnam system call is\n *\tavailable to retrieve enhanced (shadow) password entries by name.\n */\n/*#define HAS_GETESPWNAM\t\t/ **/\n\n/* HAS_GETFSSTAT:\n *\tThis symbol, if defined, indicates that the getfsstat routine is\n *\tavailable to stat filesystems in bulk.\n */\n/*#define HAS_GETFSSTAT\t\t/ **/\n\n/* HAS_GETITIMER:\n *\tThis symbol, if defined, indicates that the getitimer routine is\n *\tavailable to return interval timers.\n */\n/*#define HAS_GETITIMER\t\t/ **/\n\n/* HAS_GETMNT:\n *\tThis symbol, if defined, indicates that the getmnt routine is\n *\tavailable to get filesystem mount info by filename.\n */\n/*#define HAS_GETMNT\t\t/ **/\n\n/* HAS_GETMNTENT:\n *\tThis symbol, if defined, indicates that the getmntent routine is\n *\tavailable to iterate through mounted file systems to get their info.\n */\n/*#define HAS_GETMNTENT\t\t/ **/\n\n/* HAS_GETNAMEINFO:\n *\tThis symbol, if defined, indicates that the getnameinfo() function\n *\tis available for use.\n */\n/*#define HAS_GETNAMEINFO\t\t/ **/\n\n/* HAS_GETPRPWNAM:\n *\tThis symbol, if defined, indicates that the getprpwnam system call is\n *\tavailable to retrieve protected (shadow) password entries by name.\n */\n/*#define HAS_GETPRPWNAM\t\t/ **/\n\n/* HAS_GETSPNAM:\n *\tThis symbol, if defined, indicates that the getspnam system call is\n *\tavailable to retrieve SysV shadow password entries by name.\n */\n/*#define HAS_GETSPNAM\t\t/ **/\n\n/* HAS_HASMNTOPT:\n *\tThis symbol, if defined, indicates that the hasmntopt routine is\n *\tavailable to query the mount options of file systems.\n */\n/*#define HAS_HASMNTOPT\t\t/ **/\n\n/* HAS_ILOGBL:\n *\tThis symbol, if defined, indicates that the ilogbl routine is\n *\tavailable.  If scalbnl is also present we can emulate frexpl.\n */\n/*#define HAS_ILOGBL\t\t/ **/\n\n/* HAS_INETNTOP:\n *\tThis symbol, if defined, indicates that the inet_ntop() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n/*#define HAS_INETNTOP\t\t/ **/\n\n/* HAS_INETPTON:\n *\tThis symbol, if defined, indicates that the inet_pton() function\n *\tis available to parse IPv4 and IPv6 strings.\n */\n/*#define HAS_INETPTON\t\t/ **/\n\n/* HAS_INT64_T:\n *     This symbol will defined if the C compiler supports int64_t.\n *     Usually the <inttypes.h> needs to be included, but sometimes\n *\t<sys/types.h> is enough.\n */\n/*#define     HAS_INT64_T               / **/\n\n/* HAS_ISBLANK:\n *\tThis manifest constant lets the C program know that isblank\n *\tis available.\n */\n/*#define HAS_ISBLANK\t\t/ **/\n\n/* HAS_ISFINITE:\n *\tThis symbol, if defined, indicates that the isfinite routine is\n *\tavailable to check whether a double is finite (non-infinity non-NaN).\n */\n/*#define HAS_ISFINITE\t\t/ **/\n\n/* HAS_ISFINITEL:\n *\tThis symbol, if defined, indicates that the isfinitel routine is\n *\tavailable to check whether a long double is finite.\n *\t(non-infinity non-NaN).\n */\n/*#define HAS_ISFINITEL\t\t/ **/\n\n/* HAS_ISINF:\n *\tThis symbol, if defined, indicates that the isinf routine is\n *\tavailable to check whether a double is an infinity.\n */\n/*#define HAS_ISINF\t\t/ **/\n\n/* HAS_ISINFL:\n *\tThis symbol, if defined, indicates that the isinfl routine is\n *\tavailable to check whether a long double is an infinity.\n */\n/*#define HAS_ISINFL\t\t/ **/\n\n/* HAS_ISNAN:\n *\tThis symbol, if defined, indicates that the isnan routine is\n *\tavailable to check whether a double is a NaN.\n */\n#define HAS_ISNAN\t\t/**/\n\n/* HAS_ISNANL:\n *\tThis symbol, if defined, indicates that the isnanl routine is\n *\tavailable to check whether a long double is a NaN.\n */\n/*#define HAS_ISNANL\t\t/ **/\n\n/* HAS_J0:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0() function is available for Bessel functions of the first\n *\tkind of the order zero, for doubles.\n */\n/* HAS_J0L:\n *\tThis symbol, if defined, indicates to the C program that the\n *\tj0l() function is available for Bessel functions of the first\n *\tkind of the order zero, for long doubles.\n */\n/*#define\tHAS_J0\t\t/ **/\n/*#define\tHAS_J0L\t\t/ **/\n\n/* HAS_LDBL_DIG:\n *\tThis symbol, if defined, indicates that this system's <float.h>\n *\tor <limits.h> defines the symbol LDBL_DIG, which is the number\n *\tof significant digits in a long double precision number. Unlike\n *\tfor DBL_DIG, there's no good guess for LDBL_DIG if it is undefined.\n */\n#define HAS_LDBL_DIG \t/**/\n\n/* LIBM_LIB_VERSION:\n *\tThis symbol, if defined, indicates that libm exports _LIB_VERSION\n *\tand that math.h defines the enum to manipulate it.\n */\n/*#define LIBM_LIB_VERSION\t\t/ **/\n\n/* HAS_MADVISE:\n *\tThis symbol, if defined, indicates that the madvise system call is\n *\tavailable to map a file into memory.\n */\n/*#define HAS_MADVISE\t\t/ **/\n\n/* HAS_MALLOC_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_SIZE\t\t/ **/\n\n/* HAS_MALLOC_GOOD_SIZE:\n *\tThis symbol, if defined, indicates that the malloc_good_size\n *\troutine is available for use.\n */\n/*#define HAS_MALLOC_GOOD_SIZE\t/ **/\n\n/* HAS_MKDTEMP:\n *\tThis symbol, if defined, indicates that the mkdtemp routine is\n *\tavailable to exclusively create a uniquely named temporary directory.\n */\n/*#define HAS_MKDTEMP\t\t/ **/\n\n/* HAS_MKSTEMPS:\n *\tThis symbol, if defined, indicates that the mkstemps routine is\n *\tavailable to exclusively create and open a uniquely named\n *\t(with a suffix) temporary file.\n */\n/*#define HAS_MKSTEMPS\t\t/ **/\n\n/* HAS_MODFL:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tavailable to split a long double x into a fractional part f and\n *\tan integer part i such that |f| < 1.0 and (f + i) = x.\n */\n/* HAS_MODFL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the modfl() function.  Otherwise, it is up\n *\tto the program to supply one.\n */\n/* HAS_MODFL_POW32_BUG:\n *\tThis symbol, if defined, indicates that the modfl routine is\n *\tbroken for long doubles >= pow(2, 32).\n *\tFor example from 4294967303.150000 one would get 4294967302.000000\n *\tand 1.150000.  The bug has been seen in certain versions of glibc,\n *\trelease 2.2.2 is known to be okay.\n */\n/*#define HAS_MODFL\t\t/ **/\n/*#define HAS_MODFL_PROTO\t\t/ **/\n/*#define HAS_MODFL_POW32_BUG\t\t/ **/\n\n/* HAS_MPROTECT:\n *\tThis symbol, if defined, indicates that the mprotect system call is\n *\tavailable to modify the access protection of a memory mapped file.\n */\n/*#define HAS_MPROTECT\t\t/ **/\n\n/* HAS_STRUCT_MSGHDR:\n *\tThis symbol, if defined, indicates that the struct msghdr\n *\tis supported.\n */\n/*#define HAS_STRUCT_MSGHDR\t/ **/\n\n/* HAS_NL_LANGINFO:\n *\tThis symbol, if defined, indicates that the nl_langinfo routine is\n *\tavailable to return local data.  You will also need <langinfo.h>\n *\tand therefore I_LANGINFO.\n */\n/*#define HAS_NL_LANGINFO\t\t/ **/\n\n/* HAS_OFF64_T:\n *\tThis symbol will be defined if the C compiler supports off64_t.\n */\n/*#define\tHAS_OFF64_T    \t\t/ **/\n\n/* HAS_PRCTL:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title.\n */\n/* HAS_PRCTL_SET_NAME:\n *\tThis symbol, if defined, indicates that the prctl routine is\n *\tavailable to set process title and supports PR_SET_NAME.\n */\n/*#define HAS_PRCTL\t\t/ **/\n/*#define HAS_PRCTL_SET_NAME\t\t/ **/\n\n/* HAS_PROCSELFEXE:\n *\tThis symbol is defined if PROCSELFEXE_PATH is a symlink\n *\tto the absolute pathname of the executing program.\n */\n/* PROCSELFEXE_PATH:\n *\tIf HAS_PROCSELFEXE is defined this symbol is the filename\n *\tof the symbolic link pointing to the absolute pathname of\n *\tthe executing program.\n */\n/*#define HAS_PROCSELFEXE\t/ **/\n#if defined(HAS_PROCSELFEXE) && !defined(PROCSELFEXE_PATH)\n#define PROCSELFEXE_PATH\t\t/**/\n#endif\n\n/* HAS_PTHREAD_ATTR_SETSCOPE:\n *\tThis symbol, if defined, indicates that the pthread_attr_setscope\n *\tsystem call is available to set the contention scope attribute of\n *\ta thread attribute object.\n */\n/*#define HAS_PTHREAD_ATTR_SETSCOPE\t\t/ **/\n\n/* HAS_PTRDIFF_T:\n *\tThis symbol will be defined if the C compiler supports ptrdiff_t.\n */\n#define\tHAS_PTRDIFF_T    \t\t/**/\n\n/* HAS_READV:\n *\tThis symbol, if defined, indicates that the readv routine is\n *\tavailable to do gather reads.  You will also need <sys/uio.h>\n *\tand there I_SYSUIO.\n */\n/*#define HAS_READV\t\t/ **/\n\n/* HAS_RECVMSG:\n *\tThis symbol, if defined, indicates that the recvmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_RECVMSG\t\t/ **/\n\n/* HAS_SBRK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sbrk() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern void* sbrk(int);\n *\t\textern void* sbrk(size_t);\n */\n/*#define\tHAS_SBRK_PROTO\t/ **/\n\n/* HAS_SCALBNL:\n *\tThis symbol, if defined, indicates that the scalbnl routine is\n *\tavailable.  If ilogbl is also present we can emulate frexpl.\n */\n/*#define HAS_SCALBNL\t\t/ **/\n\n/* HAS_SENDMSG:\n *\tThis symbol, if defined, indicates that the sendmsg routine is\n *\tavailable to send structured socket messages.\n */\n/*#define HAS_SENDMSG\t\t/ **/\n\n/* HAS_SETITIMER:\n *\tThis symbol, if defined, indicates that the setitimer routine is\n *\tavailable to set interval timers.\n */\n/*#define HAS_SETITIMER\t\t/ **/\n\n/* HAS_SETPROCTITLE:\n *\tThis symbol, if defined, indicates that the setproctitle routine is\n *\tavailable to set process title.\n */\n/*#define HAS_SETPROCTITLE\t\t/ **/\n\n/* HAS_SIGNBIT:\n *\tThis symbol, if defined, indicates that the signbit routine is\n *\tavailable to check if the given number has the sign bit set.\n *\tThis should include correct testing of -0.0.  This will only be set\n *\tif the signbit() routine is safe to use with the NV type used internally\n *\tin perl.  Users should call Perl_signbit(), which will be #defined to\n *\tthe system's signbit() function or macro if this symbol is defined.\n */\n/*#define HAS_SIGNBIT\t\t/ **/\n\n/* HAS_SIGPROCMASK:\n *\tThis symbol, if defined, indicates that the sigprocmask\n *\tsystem call is available to examine or change the signal mask\n *\tof the calling process.\n */\n/*#define HAS_SIGPROCMASK\t\t/ **/\n\n/* USE_SITECUSTOMIZE:\n *\tThis symbol, if defined, indicates that sitecustomize should\n *\tbe used.\n */\n#ifndef USE_SITECUSTOMIZE\n/*#define\tUSE_SITECUSTOMIZE\t\t/ **/\n#endif\n\n/* HAS_SNPRINTF:\n *\tThis symbol, if defined, indicates that the snprintf () library\n *\tfunction is available for use.\n */\n/* HAS_VSNPRINTF:\n *\tThis symbol, if defined, indicates that the vsnprintf () library\n *\tfunction is available for use.\n */\n#define HAS_SNPRINTF\t/**/\n#define HAS_VSNPRINTF\t/**/\n\n/* HAS_SOCKATMARK:\n *\tThis symbol, if defined, indicates that the sockatmark routine is\n *\tavailable to test whether a socket is at the out-of-band mark.\n */\n/*#define HAS_SOCKATMARK\t\t/ **/\n\n/* HAS_SOCKATMARK_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the sockatmark() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int sockatmark(int);\n */\n/*#define\tHAS_SOCKATMARK_PROTO\t/ **/\n\n/* HAS_SOCKS5_INIT:\n *\tThis symbol, if defined, indicates that the socks5_init routine is\n *\tavailable to initialize SOCKS 5.\n */\n/*#define HAS_SOCKS5_INIT\t\t/ **/\n\n/* SPRINTF_RETURNS_STRLEN:\n *\tThis variable defines whether sprintf returns the length of the string\n *\t(as per the ANSI spec). Some C libraries retain compatibility with\n *\tpre-ANSI C and return a pointer to the passed in buffer; for these\n *\tthis variable will be undef.\n */\n#define SPRINTF_RETURNS_STRLEN\t/**/\n\n/* HAS_SQRTL:\n *\tThis symbol, if defined, indicates that the sqrtl routine is\n *\tavailable to do long double square roots.\n */\n/*#define HAS_SQRTL\t\t/ **/\n\n/* HAS_SETRESGID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresgid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresgid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESGID_PROTO\t/ **/\n\n/* HAS_SETRESUID_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the setresuid() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int setresuid(uid_t ruid, uid_t euid, uid_t suid);\n */\n/*#define\tHAS_SETRESUID_PROTO\t/ **/\n\n/* HAS_STRUCT_STATFS_F_FLAGS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tdoes have the f_flags member containing the mount flags of\n *\tthe filesystem containing the file.\n *\tThis kind of struct statfs is coming from <sys/mount.h> (BSD 4.3),\n *\tnot from <sys/statfs.h> (SYSV).  Older BSDs (like Ultrix) do not\n *\thave statfs() and struct statfs, they have ustat() and getmnt()\n *\twith struct ustat and struct fs_data.\n */\n/*#define HAS_STRUCT_STATFS_F_FLAGS\t\t/ **/\n\n/* HAS_STRUCT_STATFS:\n *\tThis symbol, if defined, indicates that the struct statfs\n *\tto do statfs() is supported.\n */\n/*#define HAS_STRUCT_STATFS\t/ **/\n\n/* HAS_FSTATVFS:\n *\tThis symbol, if defined, indicates that the fstatvfs routine is\n *\tavailable to stat filesystems by file descriptors.\n */\n/*#define HAS_FSTATVFS\t\t/ **/\n\n/* HAS_STRFTIME:\n *\tThis symbol, if defined, indicates that the strftime routine is\n *\tavailable to do time formatting.\n */\n#define HAS_STRFTIME\t\t/**/\n\n/* HAS_STRLCAT:\n *\tThis symbol, if defined, indicates that the strlcat () routine is\n *\tavailable to do string concatenation.\n */\n/*#define HAS_STRLCAT\t\t/ **/\n\n/* HAS_STRLCPY:\n *\tThis symbol, if defined, indicates that the strlcpy () routine is\n *\tavailable to do string copying.\n */\n/*#define HAS_STRLCPY\t\t/ **/\n\n/* HAS_STRTOLD:\n *\tThis symbol, if defined, indicates that the strtold routine is\n *\tavailable to convert strings to long doubles.\n */\n/*#define HAS_STRTOLD\t\t/ **/\n\n/* HAS_STRTOLL:\n *\tThis symbol, if defined, indicates that the strtoll routine is\n *\tavailable to convert strings to long longs.\n */\n/*#define HAS_STRTOLL\t\t/ **/\n\n/* HAS_STRTOQ:\n *\tThis symbol, if defined, indicates that the strtoq routine is\n *\tavailable to convert strings to long longs (quads).\n */\n/*#define HAS_STRTOQ\t\t/ **/\n\n/* HAS_STRTOULL:\n *\tThis symbol, if defined, indicates that the strtoull routine is\n *\tavailable to convert strings to unsigned long longs.\n */\n/*#define HAS_STRTOULL\t\t/ **/\n\n/* HAS_STRTOUQ:\n *\tThis symbol, if defined, indicates that the strtouq routine is\n *\tavailable to convert strings to unsigned long longs (quads).\n */\n/*#define HAS_STRTOUQ\t\t/ **/\n\n/* HAS_SYSCALL_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the syscall() function.  Otherwise, it is up\n *\tto the program to supply one.  Good guesses are\n *\t\textern int syscall(int,  ...);\n *\t\textern int syscall(long, ...);\n */\n/*#define\tHAS_SYSCALL_PROTO\t/ **/\n\n/* HAS_TELLDIR_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the telldir() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern long telldir(DIR*);\n */\n#define\tHAS_TELLDIR_PROTO\t/**/\n\n/* HAS_CTIME64:\n *\tThis symbol, if defined, indicates that the ctime64 () routine is\n *\tavailable to do the 64bit variant of ctime ()\n */\n/* HAS_LOCALTIME64:\n *\tThis symbol, if defined, indicates that the localtime64 () routine is\n *\tavailable to do the 64bit variant of localtime ()\n */\n/* HAS_GMTIME64:\n *\tThis symbol, if defined, indicates that the gmtime64 () routine is\n *\tavailable to do the 64bit variant of gmtime ()\n */\n/* HAS_MKTIME64:\n *\tThis symbol, if defined, indicates that the mktime64 () routine is\n *\tavailable to do the 64bit variant of mktime ()\n */\n/* HAS_DIFFTIME64:\n *\tThis symbol, if defined, indicates that the difftime64 () routine is\n *\tavailable to do the 64bit variant of difftime ()\n */\n/* HAS_ASCTIME64:\n *\tThis symbol, if defined, indicates that the asctime64 () routine is\n *\tavailable to do the 64bit variant of asctime ()\n */\n/*#define\tHAS_CTIME64\t\t/ **/\n/*#define\tHAS_LOCALTIME64\t\t/ **/\n/*#define\tHAS_GMTIME64\t\t/ **/\n/*#define\tHAS_MKTIME64\t\t/ **/\n/*#define\tHAS_DIFFTIME64\t\t/ **/\n/*#define\tHAS_ASCTIME64\t\t/ **/\n\n/* HAS_TIMEGM:\n *\tThis symbol, if defined, indicates that the timegm routine is\n *\tavailable to do the opposite of gmtime ()\n */\n/*#define HAS_TIMEGM\t\t/ **/\n\n/* HAS_TRUNCL:\n *\tThis symbol, if defined, indicates that the truncl routine is\n *\tavailable. If copysignl is also present we can emulate modfl.\n */\n/*#define HAS_TRUNCL\t\t/ **/\n\n/* U32_ALIGNMENT_REQUIRED:\n *\tThis symbol, if defined, indicates that you must access\n *\tcharacter data through U32-aligned pointers.\n */\n#ifndef U32_ALIGNMENT_REQUIRED\n#define U32_ALIGNMENT_REQUIRED\t/**/\n#endif\n\n/* HAS_UALARM:\n *\tThis symbol, if defined, indicates that the ualarm routine is\n *\tavailable to do alarms with microsecond granularity.\n */\n/*#define HAS_UALARM\t\t/ **/\n\n/* HAS_UNORDERED:\n *\tThis symbol, if defined, indicates that the unordered routine is\n *\tavailable to check whether two doubles are unordered\n *\t(effectively: whether either of them is NaN)\n */\n/*#define HAS_UNORDERED\t\t/ **/\n\n/* HAS_UNSETENV:\n *\tThis symbol, if defined, indicates that the unsetenv () routine is\n *\tavailable for use.\n */\n/*#define HAS_UNSETENV\t\t/ **/\n\n/* HAS_USLEEP_PROTO:\n *\tThis symbol, if defined, indicates that the system provides\n *\ta prototype for the usleep() function.  Otherwise, it is up\n *\tto the program to supply one.  A good guess is\n *\t\textern int usleep(useconds_t);\n */\n/*#define\tHAS_USLEEP_PROTO\t/ **/\n\n/* HAS_USTAT:\n *\tThis symbol, if defined, indicates that the ustat system call is\n *\tavailable to query file system statistics by dev_t.\n */\n/*#define HAS_USTAT\t\t/ **/\n\n/* HAS_WCSCMP:\n *\tThis symbol, if defined, indicates that the wcscmp routine is\n *\tavailable to compare two wide character strings.\n */\n#define HAS_WCSCMP\t/**/\n\n/* HAS_WCSXFRM:\n *\tThis symbol, if defined, indicates that the wcsxfrm routine is\n *\tavailable to tranform a wide character string for wcscmp().\n */\n#define HAS_WCSXFRM\t/**/\n\n/* HAS_WRITEV:\n *\tThis symbol, if defined, indicates that the writev routine is\n *\tavailable to do scatter writes.\n */\n/*#define HAS_WRITEV\t\t/ **/\n\n/* USE_DYNAMIC_LOADING:\n *\tThis symbol, if defined, indicates that dynamic loading of\n *\tsome sort is available.\n */\n#define USE_DYNAMIC_LOADING\t\t/**/\n\n/* FFLUSH_NULL:\n *\tThis symbol, if defined, tells that fflush(NULL) correctly\n *\tflushes all pending stdio output without side effects. In\n *\tparticular, on some platforms calling fflush(NULL) *still*\n *\tcorrupts STDIN if it is a pipe.\n */\n/* FFLUSH_ALL:\n *\tThis symbol, if defined, tells that to flush\n *\tall pending stdio output one must loop through all\n *\tthe stdio file handles stored in an array and fflush them.\n *\tNote that if fflushNULL is defined, fflushall will not\n *\teven be probed for and will be left undefined.\n */\n#define\tFFLUSH_NULL \t\t/**/\n/*#define\tFFLUSH_ALL \t\t/ **/\n\n/* I_ASSERT:\n *\tThis symbol, if defined, indicates that <assert.h> exists and\n *\tcould be included by the C program to get the assert() macro.\n */\n#define\tI_ASSERT\t\t/**/\n\n/* I_BFD:\n *\tThis symbol, if defined, indicates that <bfd.h> exists and\n *\tcan be included.\n */\n/*#define\tI_BFD\t\t/ **/\n\n/* I_CRYPT:\n *\tThis symbol, if defined, indicates that <crypt.h> exists and\n *\tshould be included.\n */\n/*#define\tI_CRYPT\t\t/ **/\n\n/* DB_Prefix_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is u_int32_t.\n */\n/* DB_Hash_t:\n *\tThis symbol contains the type of the prefix structure element\n *\tin the <db.h> header file.  In older versions of DB, it was\n *\tint, while in newer ones it is size_t.\n */\n/* DB_VERSION_MAJOR_CFG:\n *\tThis symbol, if defined, defines the major version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n */\n/* DB_VERSION_MINOR_CFG:\n *\tThis symbol, if defined, defines the minor version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n/* DB_VERSION_PATCH_CFG:\n *\tThis symbol, if defined, defines the patch version number of\n *\tBerkeley DB found in the <db.h> header when Perl was configured.\n *\tFor DB version 1 this is always 0.\n */\n#define DB_Hash_t\tint\t\t/**/\n#define DB_Prefix_t\tint  \t/**/\n#define DB_VERSION_MAJOR_CFG\t0  \t/**/\n#define DB_VERSION_MINOR_CFG\t0  \t/**/\n#define DB_VERSION_PATCH_CFG\t0  \t/**/\n\n/* I_FENV:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <fenv.h> to get the floating point environment definitions.\n */\n/*#define I_FENV\t\t/ **/\n\n/* I_FP:\n *\tThis symbol, if defined, indicates that <fp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP\t\t/ **/\n\n/* I_FP_CLASS:\n *\tThis symbol, if defined, indicates that <fp_class.h> exists and\n *\tshould be included.\n */\n/*#define\tI_FP_CLASS\t\t/ **/\n\n/* I_IEEEFP:\n *\tThis symbol, if defined, indicates that <ieeefp.h> exists and\n *\tshould be included.\n */\n/*#define\tI_IEEEFP\t\t/ **/\n\n/* I_INTTYPES:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <inttypes.h>.\n */\n/*#define   I_INTTYPES                / **/\n\n/* I_LANGINFO:\n *\tThis symbol, if defined, indicates that <langinfo.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LANGINFO\t\t/ **/\n\n/* I_LIBUTIL:\n *\tThis symbol, if defined, indicates that <libutil.h> exists and\n *\tshould be included.\n */\n/*#define\tI_LIBUTIL\t\t/ **/\n\n/* I_MALLOCMALLOC:\n *\tThis symbol, if defined, indicates to the C program that it should\n *\tinclude <malloc/malloc.h>.\n */\n/*#define I_MALLOCMALLOC\t\t/ **/\n\n/* I_MNTENT:\n *\tThis symbol, if defined, indicates that <mntent.h> exists and\n *\tshould be included.\n */\n/*#define\tI_MNTENT\t\t/ **/\n\n/* I_NETINET_TCP:\n *     This symbol, if defined, indicates to the C program that it should\n *     include <netinet/tcp.h>.\n */\n/*#define   I_NETINET_TCP                / **/\n\n/* I_POLL:\n *\tThis symbol, if defined, indicates that <poll.h> exists and\n *\tshould be included. (see also HAS_POLL)\n */\n/*#define\tI_POLL\t\t/ **/\n\n/* I_PROT:\n *\tThis symbol, if defined, indicates that <prot.h> exists and\n *\tshould be included.\n */\n/*#define\tI_PROT\t\t/ **/\n\n/* I_SHADOW:\n *\tThis symbol, if defined, indicates that <shadow.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SHADOW\t\t/ **/\n\n/* I_SOCKS:\n *\tThis symbol, if defined, indicates that <socks.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SOCKS\t\t/ **/\n\n/* I_STDBOOL:\n *\tThis symbol, if defined, indicates that <stdbool.h> exists and\n *\tcan be included.\n */\n#define\tI_STDBOOL\t\t/**/\n\n/* I_STDINT:\n *\tThis symbol, if defined, indicates that <stdint.h> exists and\n *\tshould be included.\n */\n/*#define I_STDINT\t\t/ **/\n\n/* I_SUNMATH:\n *\tThis symbol, if defined, indicates that <sunmath.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SUNMATH\t\t/ **/\n\n/* I_SYSLOG:\n *\tThis symbol, if defined, indicates that <syslog.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSLOG\t\t/ **/\n\n/* I_SYSMODE:\n *\tThis symbol, if defined, indicates that <sys/mode.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSMODE\t\t/ **/\n\n/* I_SYS_MOUNT:\n *\tThis symbol, if defined, indicates that <sys/mount.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_MOUNT\t\t/ **/\n\n/* I_SYS_STATFS:\n *\tThis symbol, if defined, indicates that <sys/statfs.h> exists.\n */\n/*#define\tI_SYS_STATFS\t\t/ **/\n\n/* I_SYS_STATVFS:\n *\tThis symbol, if defined, indicates that <sys/statvfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_STATVFS\t\t/ **/\n\n/* I_SYSUTSNAME:\n *\tThis symbol, if defined, indicates that <sys/utsname.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYSUTSNAME\t\t/ **/\n\n/* I_SYS_VFS:\n *\tThis symbol, if defined, indicates that <sys/vfs.h> exists and\n *\tshould be included.\n */\n/*#define\tI_SYS_VFS\t\t/ **/\n\n/* I_USTAT:\n *\tThis symbol, if defined, indicates that <ustat.h> exists and\n *\tshould be included.\n */\n/*#define\tI_USTAT\t\t/ **/\n\n/* PERL_PRIfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for output.\n */\n/* PERL_PRIgldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'g') for output.\n */\n/* PERL_PRIeldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'e') for output.\n */\n/* PERL_SCNfldbl:\n *\tThis symbol, if defined, contains the string used by stdio to\n *\tformat long doubles (format 'f') for input.\n */\n/*#define PERL_PRIfldbl\t\"Lf\"\t/ **/\n/*#define PERL_PRIgldbl\t\"Lg\"\t/ **/\n/*#define PERL_PRIeldbl\t\"Le\"\t/ **/\n/*#define PERL_SCNfldbl\t\"Lf\"\t/ **/\n\n/* NEED_VA_COPY:\n *\tThis symbol, if defined, indicates that the system stores\n *\tthe variable argument list datatype, va_list, in a format\n *\tthat cannot be copied by simple assignment, so that some\n *\tother means must be used when copying is required.\n *\tAs such systems vary in their provision (or non-provision)\n *\tof copying mechanisms, handy.h defines a platform-\n *\tindependent macro, Perl_va_copy(src, dst), to do the job.\n */\n/*#define\tNEED_VA_COPY\t\t/ **/\n\n/* IVTYPE:\n *\tThis symbol defines the C type used for Perl's IV.\n */\n/* UVTYPE:\n *\tThis symbol defines the C type used for Perl's UV.\n */\n/* I8TYPE:\n *\tThis symbol defines the C type used for Perl's I8.\n */\n/* U8TYPE:\n *\tThis symbol defines the C type used for Perl's U8.\n */\n/* I16TYPE:\n *\tThis symbol defines the C type used for Perl's I16.\n */\n/* U16TYPE:\n *\tThis symbol defines the C type used for Perl's U16.\n */\n/* I32TYPE:\n *\tThis symbol defines the C type used for Perl's I32.\n */\n/* U32TYPE:\n *\tThis symbol defines the C type used for Perl's U32.\n */\n/* I64TYPE:\n *\tThis symbol defines the C type used for Perl's I64.\n */\n/* U64TYPE:\n *\tThis symbol defines the C type used for Perl's U64.\n */\n/* NVTYPE:\n *\tThis symbol defines the C type used for Perl's NV.\n */\n/* IVSIZE:\n *\tThis symbol contains the sizeof(IV).\n */\n/* UVSIZE:\n *\tThis symbol contains the sizeof(UV).\n */\n/* I8SIZE:\n *\tThis symbol contains the sizeof(I8).\n */\n/* U8SIZE:\n *\tThis symbol contains the sizeof(U8).\n */\n/* I16SIZE:\n *\tThis symbol contains the sizeof(I16).\n */\n/* U16SIZE:\n *\tThis symbol contains the sizeof(U16).\n */\n/* I32SIZE:\n *\tThis symbol contains the sizeof(I32).\n */\n/* U32SIZE:\n *\tThis symbol contains the sizeof(U32).\n */\n/* I64SIZE:\n *\tThis symbol contains the sizeof(I64).\n */\n/* U64SIZE:\n *\tThis symbol contains the sizeof(U64).\n */\n/* NVSIZE:\n *\tThis symbol contains the sizeof(NV).\n */\n/* NV_PRESERVES_UV:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tcan preserve all the bits of a variable of type UVTYPE.\n */\n/* NV_PRESERVES_UV_BITS:\n *\tThis symbol contains the number of bits a variable of type NVTYPE\n *\tcan preserve of a variable of type UVTYPE.\n */\n/* NV_OVERFLOWS_INTEGERS_AT:\n *\tThis symbol gives the largest integer value that NVs can hold. This\n *\tvalue + 1.0 cannot be stored accurately. It is expressed as constant\n *\tfloating point expression to reduce the chance of decimal/binary\n *\tconversion issues. If it can not be determined, the value 0 is given.\n */\n/* NV_ZERO_IS_ALLBITS_ZERO:\n *\tThis symbol, if defined, indicates that a variable of type NVTYPE\n *\tstores 0.0 in memory as all bits zero.\n */\n#define\tIVTYPE\t\tlong\t\t/**/\n#define\tUVTYPE\t\tunsigned long\t\t/**/\n#define\tI8TYPE\t\tchar\t\t/**/\n#define\tU8TYPE\t\tunsigned char\t\t/**/\n#define\tI16TYPE\t\tshort\t/**/\n#define\tU16TYPE\t\tunsigned short\t/**/\n#define\tI32TYPE\t\tlong\t/**/\n#define\tU32TYPE\t\tunsigned long\t/**/\n#ifdef HAS_QUAD\n#define\tI64TYPE\t\tlong long\t/**/\n#define\tU64TYPE\t\tunsigned long long\t/**/\n#endif\n#define\tNVTYPE\t\tdouble\t\t/**/\n#define\tIVSIZE\t\t4\t\t/**/\n#define\tUVSIZE\t\t4\t\t/**/\n#define\tI8SIZE\t\t1\t\t/**/\n#define\tU8SIZE\t\t1\t\t/**/\n#define\tI16SIZE\t\t2\t/**/\n#define\tU16SIZE\t\t2\t/**/\n#define\tI32SIZE\t\t4\t/**/\n#define\tU32SIZE\t\t4\t/**/\n#ifdef HAS_QUAD\n#define\tI64SIZE\t\t8\t/**/\n#define\tU64SIZE\t\t8\t/**/\n#endif\n#define\tNVSIZE\t\t8\t\t/**/\n#define\tNV_PRESERVES_UV\n#define\tNV_PRESERVES_UV_BITS\t32\n#define\tNV_OVERFLOWS_INTEGERS_AT\t256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0\n#define\tNV_ZERO_IS_ALLBITS_ZERO\n#if UVSIZE == 8\n#   ifdef BYTEORDER\n#       if BYTEORDER == 0x1234\n#           undef BYTEORDER\n#           define BYTEORDER 0x12345678\n#       else\n#           if BYTEORDER == 0x4321\n#               undef BYTEORDER\n#               define BYTEORDER 0x87654321\n#           endif\n#       endif\n#   endif\n#endif\n\n/* IVdf:\n *\tThis symbol defines the format string used for printing a Perl IV\n *\tas a signed decimal integer.\n */\n/* UVuf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned decimal integer.\n */\n/* UVof:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned octal integer.\n */\n/* UVxf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in lowercase abcdef.\n */\n/* UVXf:\n *\tThis symbol defines the format string used for printing a Perl UV\n *\tas an unsigned hexadecimal integer in uppercase ABCDEF.\n */\n/* NVef:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %e-ish floating point format.\n */\n/* NVff:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %f-ish floating point format.\n */\n/* NVgf:\n *\tThis symbol defines the format string used for printing a Perl NV\n *\tusing %g-ish floating point format.\n */\n#define\tIVdf\t\t\"ld\"\t\t/**/\n#define\tUVuf\t\t\"lu\"\t\t/**/\n#define\tUVof\t\t\"lo\"\t\t/**/\n#define\tUVxf\t\t\"lx\"\t\t/**/\n#define\tUVXf\t\t\"lX\"\t\t/**/\n#define\tNVef\t\t\"e\"\t\t/**/\n#define\tNVff\t\t\"f\"\t\t/**/\n#define\tNVgf\t\t\"g\"\t\t/**/\n\n/* SELECT_MIN_BITS:\n *\tThis symbol holds the minimum number of bits operated by select.\n *\tThat is, if you do select(n, ...), how many bits at least will be\n *\tcleared in the masks if some activity is detected.  Usually this\n *\tis either n or 32*ceil(n/32), especially many little-endians do\n *\tthe latter.  This is only useful if you have select(), naturally.\n */\n#define SELECT_MIN_BITS \t32\t/**/\n\n/* ST_INO_SIZE:\n *\tThis variable contains the size of struct stat's st_ino in bytes.\n */\n/* ST_INO_SIGN:\n *\tThis symbol holds the signedness of struct stat's st_ino.\n *\t1 for unsigned, -1 for signed.\n */\n#define ST_INO_SIGN 1\t/* st_ino sign */\n#define ST_INO_SIZE 4\t/* st_ino size */\n\n/* STARTPERL:\n *\tThis variable contains the string to put in front of a perl\n *\tscript to make sure (one hopes) that it runs with perl and not\n *\tsome shell.\n */\n#define STARTPERL \"#!perl\"\t\t/**/\n\n/* HAS_STDIO_STREAM_ARRAY:\n *\tThis symbol, if defined, tells that there is an array\n *\tholding the stdio streams.\n */\n/* STDIO_STREAM_ARRAY:\n *\tThis symbol tells the name of the array holding the stdio streams.\n *\tUsual values include _iob, __iob, and __sF.\n */\n/*#define\tHAS_STDIO_STREAM_ARRAY\t/ **/\n#ifdef HAS_STDIO_STREAM_ARRAY\n#define STDIO_STREAM_ARRAY\t\n#endif\n\n/* GMTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* GMTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function gmtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MAX:\n *\tThis symbol contains the maximum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n/* LOCALTIME_MIN:\n *\tThis symbol contains the minimum value for the time_t offset that\n *\tthe system function localtime () accepts, and defaults to 0\n */\n#define GMTIME_MAX\t\t2147483647\t/**/\n#define GMTIME_MIN\t\t0\t/**/\n#define LOCALTIME_MAX\t2147483647\t/**/\n#define LOCALTIME_MIN\t0\t/**/\n\n/* USE_64_BIT_INT:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be employed (be they 32 or 64 bits).  The minimal possible\n *\t64-bitness is used, just enough to get 64-bit integers into Perl.\n *\tThis may mean using for example \"long longs\", while your memory\n *\tmay still be limited to 2 gigabytes.\n */\n/* USE_64_BIT_ALL:\n *\tThis symbol, if defined, indicates that 64-bit integers should\n *\tbe used when available.  If not defined, the native integers\n *\twill be used (be they 32 or 64 bits).  The maximal possible\n *\t64-bitness is employed: LP64 or ILP64, meaning that you will\n *\tbe able to use more than 2 gigabytes of memory.  This mode is\n *\teven more binary incompatible than USE_64_BIT_INT. You may not\n *\tbe able to run the resulting executable in a 32-bit CPU at all or\n *\tyou may need at least to reboot your OS to 64-bit mode.\n */\n#ifndef USE_64_BIT_INT\n/*#define\tUSE_64_BIT_INT\t\t/ **/\n#endif\n#ifndef USE_64_BIT_ALL\n/*#define\tUSE_64_BIT_ALL\t\t/ **/\n#endif\n\n/* USE_CBACKTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for backtrace.\n */\n/*#define USE_CBACKTRACE\t\t/ **/\n\n/* USE_DTRACE:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built with support for DTrace.\n */\n/*#define USE_DTRACE\t\t/ **/\n\n/* USE_FAST_STDIO:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use 'fast stdio'.\n *\tDefaults to define in Perls 5.8 and earlier, to undef later.\n */\n#ifndef USE_FAST_STDIO\n/*#define\tUSE_FAST_STDIO\t\t/ **/\n#endif\n\n/* USE_KERN_PROC_PATHNAME:\n *\tThis symbol, if defined, indicates that we can use sysctl with\n *\tKERN_PROC_PATHNAME to get a full path for the executable, and hence\n * \tconvert $^X to an absolute path.\n */\n/*#define USE_KERN_PROC_PATHNAME\t/ **/\n\n/* USE_LARGE_FILES:\n *\tThis symbol, if defined, indicates that large file support\n *\tshould be used when available.\n */\n#ifndef USE_LARGE_FILES\n/*#define\tUSE_LARGE_FILES\t\t/ **/\n#endif\n\n/* USE_LONG_DOUBLE:\n *\tThis symbol, if defined, indicates that long doubles should\n *\tbe used when available.\n */\n#ifndef USE_LONG_DOUBLE\n/*#define\tUSE_LONG_DOUBLE\t\t/ **/\n#endif\n\n/* USE_MORE_BITS:\n *\tThis symbol, if defined, indicates that 64-bit interfaces and\n *\tlong doubles should be used when available.\n */\n#ifndef USE_MORE_BITS\n/*#define\tUSE_MORE_BITS\t\t/ **/\n#endif\n\n/* MULTIPLICITY:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use multiplicity.\n */\n#ifndef MULTIPLICITY\n/*#define\tMULTIPLICITY\t\t/ **/\n#endif\n\n/* USE_NSGETEXECUTABLEPATH:\n *\tThis symbol, if defined, indicates that we can use _NSGetExecutablePath\n *\tand realpath to get a full path for the executable, and hence convert\n *\t$^X to an absolute path.\n */\n/*#define USE_NSGETEXECUTABLEPATH\t/ **/\n\n/* USE_PERLIO:\n *\tThis symbol, if defined, indicates that the PerlIO abstraction should\n *\tbe used throughout.  If not defined, stdio should be\n *\tused in a fully backward compatible manner.\n */\n#ifndef USE_PERLIO\n#define\tUSE_PERLIO\t\t/**/\n#endif\n\n/* USE_SOCKS:\n *\tThis symbol, if defined, indicates that Perl should\n *\tbe built to use socks.\n */\n#ifndef USE_SOCKS\n/*#define\tUSE_SOCKS\t\t/ **/\n#endif\n\n#endif\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/lib/utf8.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Checker/lib/Pod/Checker.pm",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Parse-CPAN-Meta/t/data/BadMETA.yml",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Archive-Tar/t/src/long/foo.tbz",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Archive-Tar/t/src/long/foo.tgz",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Archive-Tar/t/src/short/foo.tbz",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Archive-Tar/t/src/short/foo.tgz",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Unicode-Collate/t/loc_test.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Sys-Syslog/win32/PerlLog.mc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/PerlIO-via-QuotedPrint/t/QuotedPrint.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/IPC-Cmd/t/src/x.tgz",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/podlators/t/man.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/CPAN-Meta-YAML/t/data/utf_16_le_bom.yml",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/CPAN-Meta-YAML/t/data/latin1.yml",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Module-Metadata/corpus/BOMTest/UTF16LE.pm",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Module-Metadata/corpus/BOMTest/UTF16BE.pm",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/lib/Encode/CJKConstants.pm",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/lib/Encode/JP/H2Z.pm",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/jisx0201.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/big5-eten.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/jisx0208.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/enc_module.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/ksc5601.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/mime_header_iso2022jp.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/Mod_EUCJP.pm",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/enc_module.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/at-tw.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/big5-hkscs.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/at-cn.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/jperl.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/enc_data.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/jisx0212.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Encode/t/gb2312.enc",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/pulltitl.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/encod02.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/encwarn01.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/s2763_sjis.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/fet_cont.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/koi8r.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/lat1frim.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/cp1256.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/laozi38b.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/iso6.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/thai_iso11.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/lat1fr.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/laozi38p.pod",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/8859_7.pod",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/fet_dup.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/pasternak_cp1251.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus/laozi38.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/testlib1/Zonk/Pronk.pm",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus2/polish_utf16le_bom.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus2/polish_utf16be_bom.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/cpan/Pod-Simple/t/corpus2/fiqhakbar_iso6.txt",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/dist/Storable/t/utf8hash.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/win32/perlexe.ico",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/t/io/utf8.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/t/uni/tr_eucjp.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/t/uni/tr_sjis.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/t/uni/latin2.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/t/uni/greek.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/t/op/utfhash.t",
        "/tmp/vanessa/spack-stage/spack-stage-perl-5.22.0-ucynkcoh2adnxual6wb2x5jof3rinig7/spack-src/t/op/lc.t"
    ],
    "total_files": 5032
}