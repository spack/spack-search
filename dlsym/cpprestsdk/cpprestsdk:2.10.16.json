{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/vcpkg/ports/ffmpeg/0004-fix-debug-build.patch": "diff --git a/configure b/configure\nindex bd2de34..fba948a 100755\n--- a/configure\n+++ b/configure\n@@ -3993,6 +3993,9 @@ for opt do\n         --libfuzzer=*)\n             libfuzzer_path=\"$optval\"\n         ;;\n+        --debug)\n+            enable debug_configure\n+        ;;\n         *)\n             optname=\"${opt%%=*}\"\n             optname=\"${optname#--}\"\n@@ -6152,8 +6155,13 @@ fi\n \n enabled  zlib && { check_pkg_config zlib zlib \"zlib.h\" zlibVersion ||\n                    check_lib zlib   zlib.h      zlibVersion    -lz; }\n-enabled bzlib && check_lib bzlib bzlib.h BZ2_bzlibVersion    -lbz2\n-enabled  lzma && check_lib lzma   lzma.h lzma_version_number -llzma\n+if enabled debug_configure; then\n+    enabled bzlib && check_lib bzlib bzlib.h BZ2_bzlibVersion    -lbz2d\n+    enabled  lzma && check_lib lzma   lzma.h lzma_version_number -llzmad\n+else\n+    enabled bzlib && check_lib bzlib bzlib.h BZ2_bzlibVersion    -lbz2\n+    enabled  lzma && check_lib lzma   lzma.h lzma_version_number -llzma\n+fi\n \n # On some systems dynamic loading requires no extra linker flags\n check_lib libdl dlfcn.h \"dlopen dlsym\" || check_lib libdl dlfcn.h \"dlopen dlsym\" -ldl\n",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/tests/common/TestRunner/test_module_loader.cpp": "/***\n * Copyright (C) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n *\n * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n */\n#ifdef WIN32\n#include <Windows.h>\n#else\n#include \"dlfcn.h\"\n#include <boost/filesystem.hpp>\n#endif\n\n#include \"test_module_loader.h\"\n#include <iostream>\n\nclass test_module\n{\npublic:\n    test_module(const std::string& dllName) : m_dllName(dllName), m_handle(nullptr) {}\n\n    GetTestsFunc get_test_list()\n    {\n#if defined(_WIN32)\n        return (GetTestsFunc)GetProcAddress(m_handle, \"GetTestList\");\n#else\n        auto ptr = dlsym(m_handle, \"GetTestList\");\n        if (ptr == nullptr)\n        {\n            std::cerr << \"couldn't find GetTestList\"\n                      <<\n#ifdef __APPLE__\n                \" \" << dlerror() <<\n#endif\n                std::endl;\n        }\n        return (GetTestsFunc)ptr;\n#endif\n    }\n\n    unsigned long load()\n    {\n        if (m_handle == nullptr)\n        {\n#if defined(_WIN32)\n            // Make sure ends in .dll\n            if (*(m_dllName.end() - 1) != 'l' || *(m_dllName.end() - 2) != 'l' || *(m_dllName.end() - 3) != 'd' ||\n                *(m_dllName.end() - 4) != '.')\n            {\n                return (unsigned long)-1;\n            }\n            m_handle = LoadLibraryA(m_dllName.c_str());\n            if (m_handle == nullptr)\n            {\n                return GetLastError();\n            }\n            return 0;\n#else\n#ifdef __APPLE__\n            auto exe_directory = getcwd(nullptr, 0);\n            auto path = std::string(exe_directory) + \"/\" + m_dllName;\n            free(exe_directory);\n#else\n            auto path = boost::filesystem::initial_path().string() + \"/\" + m_dllName;\n#endif\n\n            m_handle = dlopen(path.c_str(), RTLD_LAZY | RTLD_GLOBAL);\n            if (m_handle == nullptr)\n            {\n                std::cerr << std::string(dlerror()) << std::endl;\n                return -1;\n            }\n            return 0;\n#endif\n        }\n        return 0;\n    }\n\n    unsigned long unload()\n    {\n        if (m_handle != nullptr)\n        {\n#if defined(_WIN32)\n            if (!FreeLibrary(m_handle))\n            {\n                return GetLastError();\n            }\n            m_handle = nullptr;\n            return 0;\n#else\n            if (dlclose(m_handle) != 0)\n            {\n                std::cerr << std::string(dlerror()) << std::endl;\n                return -1;\n            }\n            m_handle = nullptr;\n            return 0;\n#endif\n        }\n        return 0;\n    }\n\nprivate:\n    const std::string m_dllName;\n\n#if defined(_WIN32)\n    HMODULE m_handle;\n#else\n    void* m_handle;\n#endif\n\n    test_module(const test_module&) = delete;\n    test_module& operator=(const test_module&) = delete;\n};\n\ntest_module_loader::test_module_loader() {}\n\ntest_module_loader::~test_module_loader()\n{\n    for (auto iter = m_modules.begin(); iter != m_modules.end(); ++iter)\n    {\n        iter->second->unload();\n        delete iter->second;\n    }\n}\n\nunsigned long test_module_loader::load(const std::string& dllName)\n{\n    // Check if the module is already loaded.\n    if (m_modules.find(dllName) != m_modules.end())\n    {\n        return 0;\n    }\n\n    test_module* pModule;\n    pModule = new test_module(dllName);\n\n    // Load dll.\n    const unsigned long error_code = pModule->load();\n    if (error_code != 0)\n    {\n        delete pModule;\n        return error_code;\n    }\n    else\n    {\n        m_modules[dllName] = pModule;\n    }\n    return 0;\n}\n\nUnitTest::TestList g_list;\n\nUnitTest::TestList& test_module_loader::get_test_list(const std::string& dllName)\n{\n    GetTestsFunc getTestsFunc = m_modules[dllName]->get_test_list();\n\n    // If there is no GetTestList function then it must be a dll without any tests.\n    // Simply return an empty TestList.\n    if (getTestsFunc == nullptr)\n    {\n        return g_list;\n    }\n\n    return getTestsFunc();\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/ThirdPartyNotices.txt",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/vcpkg/ports/irrlicht/fix-encoding.patch",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/vcpkg/ports/devil/0001_fix-encoding.patch",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/vcpkg/ports/opencsg/illegal_char.patch",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/.git/objects/pack/pack-b090f77aad40a5578f5625bb916f3816121ce535.pack",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/.git/objects/pack/pack-b090f77aad40a5578f5625bb916f3816121ce535.idx",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/.git/modules/vcpkg/objects/pack/pack-e3c87539df7d8cc6ca8135842939c5b37dfa887b.pack",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/.git/modules/vcpkg/objects/pack/pack-e3c87539df7d8cc6ca8135842939c5b37dfa887b.idx",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/.git/modules/websocketpp/objects/pack/pack-ccc028fd7d9b6e3ea1f6ac02a52f039c0addf7b6.idx",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/.git/modules/websocketpp/objects/pack/pack-ccc028fd7d9b6e3ea1f6ac02a52f039c0addf7b6.pack",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/libs/websocketpp/test/http/perf.out",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/libs/websocketpp/test/http/a.out",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/libs/websocketpp/test/http/test.out",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/src/utilities/Resource.rc",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/tests/functional/misc/atl_headers/header_test.rc",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/FacebookDemo/FacebookDemo_TemporaryKey.pfx",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/FacebookDemo/Assets/Logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/FacebookDemo/Assets/SplashScreen.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/FacebookDemo/Assets/SmallLogo.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/FacebookDemo/Assets/StoreLogo.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/BlackJack/BlackJack_UIClient/BlackJack_UIClient_TemporaryKey.pfx",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/BlackJack/BlackJack_UIClient/Cards.PNG",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/BlackJack/BlackJack_UIClient/Assets/Logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/BlackJack/BlackJack_UIClient/Assets/SplashScreen.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/BlackJack/BlackJack_UIClient/Assets/SmallLogo.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/BlackJack/BlackJack_UIClient/Assets/StoreLogo.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/OAuth2Live/OAuth2Live_TemporaryKey.pfx",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/OAuth2Live/Assets/Logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/OAuth2Live/Assets/SplashScreen.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/OAuth2Live/Assets/SmallLogo.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/OAuth2Live/Assets/StoreLogo.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/WindowsLiveAuth/WindowsLiveAuth_TemporaryKey.pfx",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/WindowsLiveAuth/Assets/Logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/WindowsLiveAuth/Assets/SplashScreen.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/WindowsLiveAuth/Assets/SmallLogo.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/WindowsLiveAuth/Assets/StoreLogo.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/CasaLens/image/logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/CasaLens/image/bing-logo.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/CasaLens/image/wall.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/CasaLens/CasaLens141/image/logo.png",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/CasaLens/CasaLens141/image/bing-logo.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-cpprestsdk-2.10.16-wmwhwtweh7fjmlqckhz2vw75552psvql/spack-src/Release/samples/CasaLens/CasaLens141/image/wall.jpg"
    ],
    "total_files": 3943
}