{
    "matches": {
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/C_tests/test2012_28.c": "// # 1 \"handler_file.c\"\n// # 1 \"<built-in>\"\n// # 1 \"<command-line>\"\n// # 1 \"handler_file.c\"\n// # 25 \"handler_file.c\"\n// # 1 \"common-internal.h\" 1\n// # 28 \"common-internal.h\"\n// # 1 \"../config.h\" 1\n// # 29 \"common-internal.h\" 2\n// # 1 \"../constants.h\" 1\n// # 30 \"common-internal.h\" 2\n\n\n\n\n\n\n// # 1 \"common.h\" 1\n// # 33 \"common.h\"\n// # 1 \"../cherokee/macros.h\" 1\n// # 33 \"../cherokee/macros.h\"\n// # 1 \"/usr/include/stdio.h\" 1 3 4\n// # 28 \"/usr/include/stdio.h\" 3 4\n// # 1 \"/usr/include/features.h\" 1 3 4\n// # 329 \"/usr/include/features.h\" 3 4\n// # 1 \"/usr/include/sys/cdefs.h\" 1 3 4\n// # 313 \"/usr/include/sys/cdefs.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 314 \"/usr/include/sys/cdefs.h\" 2 3 4\n// # 330 \"/usr/include/features.h\" 2 3 4\n// # 352 \"/usr/include/features.h\" 3 4\n// # 1 \"/usr/include/gnu/stubs.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 5 \"/usr/include/gnu/stubs.h\" 2 3 4\n\n\n\n\n// # 1 \"/usr/include/gnu/stubs-64.h\" 1 3 4\n// # 10 \"/usr/include/gnu/stubs.h\" 2 3 4\n// # 353 \"/usr/include/features.h\" 2 3 4\n// # 29 \"/usr/include/stdio.h\" 2 3 4\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 214 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 3 4\ntypedef long unsigned int size_t;\n// # 35 \"/usr/include/stdio.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/types.h\" 1 3 4\n// # 28 \"/usr/include/bits/types.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 29 \"/usr/include/bits/types.h\" 2 3 4\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 32 \"/usr/include/bits/types.h\" 2 3 4\n\n\ntypedef unsigned char __u_char;\ntypedef unsigned short int __u_short;\ntypedef unsigned int __u_int;\ntypedef unsigned long int __u_long;\n\n\ntypedef signed char __int8_t;\ntypedef unsigned char __uint8_t;\ntypedef signed short int __int16_t;\ntypedef unsigned short int __uint16_t;\ntypedef signed int __int32_t;\ntypedef unsigned int __uint32_t;\n\ntypedef signed long int __int64_t;\ntypedef unsigned long int __uint64_t;\n\n\n\n\n\n\n\ntypedef long int __quad_t;\ntypedef unsigned long int __u_quad_t;\n// # 134 \"/usr/include/bits/types.h\" 3 4\n// # 1 \"/usr/include/bits/typesizes.h\" 1 3 4\n// # 135 \"/usr/include/bits/types.h\" 2 3 4\n\n\ntypedef unsigned long int __dev_t;\ntypedef unsigned int __uid_t;\ntypedef unsigned int __gid_t;\ntypedef unsigned long int __ino_t;\ntypedef unsigned long int __ino64_t;\ntypedef unsigned int __mode_t;\ntypedef unsigned long int __nlink_t;\ntypedef long int __off_t;\ntypedef long int __off64_t;\ntypedef int __pid_t;\ntypedef struct { int __val[2]; } __fsid_t;\ntypedef long int __clock_t;\ntypedef unsigned long int __rlim_t;\ntypedef unsigned long int __rlim64_t;\ntypedef unsigned int __id_t;\ntypedef long int __time_t;\ntypedef unsigned int __useconds_t;\ntypedef long int __suseconds_t;\n\ntypedef int __daddr_t;\ntypedef long int __swblk_t;\ntypedef int __key_t;\n\n\ntypedef int __clockid_t;\n\n\ntypedef void * __timer_t;\n\n\ntypedef long int __blksize_t;\n\n\n\n\ntypedef long int __blkcnt_t;\ntypedef long int __blkcnt64_t;\n\n\ntypedef unsigned long int __fsblkcnt_t;\ntypedef unsigned long int __fsblkcnt64_t;\n\n\ntypedef unsigned long int __fsfilcnt_t;\ntypedef unsigned long int __fsfilcnt64_t;\n\ntypedef long int __ssize_t;\n\n\n\ntypedef __off64_t __loff_t;\ntypedef __quad_t *__qaddr_t;\ntypedef char *__caddr_t;\n\n\ntypedef long int __intptr_t;\n\n\ntypedef unsigned int __socklen_t;\n// # 37 \"/usr/include/stdio.h\" 2 3 4\n\n\n\n\n\n\n\n\n\ntypedef struct _IO_FILE FILE;\n\n\n\n\n\n// # 62 \"/usr/include/stdio.h\" 3 4\ntypedef struct _IO_FILE __FILE;\n// # 72 \"/usr/include/stdio.h\" 3 4\n// # 1 \"/usr/include/libio.h\" 1 3 4\n// # 32 \"/usr/include/libio.h\" 3 4\n// # 1 \"/usr/include/_G_config.h\" 1 3 4\n// # 14 \"/usr/include/_G_config.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 326 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 3 4\ntypedef int wchar_t;\n// # 355 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 3 4\ntypedef unsigned int wint_t;\n// # 15 \"/usr/include/_G_config.h\" 2 3 4\n// # 24 \"/usr/include/_G_config.h\" 3 4\n// # 1 \"/usr/include/wchar.h\" 1 3 4\n// # 48 \"/usr/include/wchar.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 49 \"/usr/include/wchar.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/wchar.h\" 1 3 4\n// # 51 \"/usr/include/wchar.h\" 2 3 4\n// # 76 \"/usr/include/wchar.h\" 3 4\ntypedef struct\n{\n  int __count;\n  union\n  {\n    wint_t __wch;\n    char __wchb[4];\n  } __value;\n} __mbstate_t;\n// # 25 \"/usr/include/_G_config.h\" 2 3 4\n\ntypedef struct\n{\n  __off_t __pos;\n  __mbstate_t __state;\n} _G_fpos_t;\ntypedef struct\n{\n  __off64_t __pos;\n  __mbstate_t __state;\n} _G_fpos64_t;\n// # 44 \"/usr/include/_G_config.h\" 3 4\n// # 1 \"/usr/include/gconv.h\" 1 3 4\n// # 28 \"/usr/include/gconv.h\" 3 4\n// # 1 \"/usr/include/wchar.h\" 1 3 4\n// # 48 \"/usr/include/wchar.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 49 \"/usr/include/wchar.h\" 2 3 4\n// # 29 \"/usr/include/gconv.h\" 2 3 4\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 32 \"/usr/include/gconv.h\" 2 3 4\n\n\n\n\n\nenum\n{\n  __GCONV_OK = 0,\n  __GCONV_NOCONV,\n  __GCONV_NODB,\n  __GCONV_NOMEM,\n\n  __GCONV_EMPTY_INPUT,\n  __GCONV_FULL_OUTPUT,\n  __GCONV_ILLEGAL_INPUT,\n  __GCONV_INCOMPLETE_INPUT,\n\n  __GCONV_ILLEGAL_DESCRIPTOR,\n  __GCONV_INTERNAL_ERROR\n};\n\n\n\nenum\n{\n  __GCONV_IS_LAST = 0x0001,\n  __GCONV_IGNORE_ERRORS = 0x0002\n};\n\n\n\nstruct __gconv_step;\nstruct __gconv_step_data;\nstruct __gconv_loaded_object;\nstruct __gconv_trans_data;\n\n\n\ntypedef int (*__gconv_fct) (struct __gconv_step *, struct __gconv_step_data *,\n       __const unsigned char **, __const unsigned char *,\n       unsigned char **, size_t *, int, int);\n\n\ntypedef wint_t (*__gconv_btowc_fct) (struct __gconv_step *, unsigned char);\n\n\ntypedef int (*__gconv_init_fct) (struct __gconv_step *);\ntypedef void (*__gconv_end_fct) (struct __gconv_step *);\n\n\n\ntypedef int (*__gconv_trans_fct) (struct __gconv_step *,\n      struct __gconv_step_data *, void *,\n      __const unsigned char *,\n      __const unsigned char **,\n      __const unsigned char *, unsigned char **,\n      size_t *);\n\n\ntypedef int (*__gconv_trans_context_fct) (void *, __const unsigned char *,\n       __const unsigned char *,\n       unsigned char *, unsigned char *);\n\n\ntypedef int (*__gconv_trans_query_fct) (__const char *, __const char ***,\n     size_t *);\n\n\ntypedef int (*__gconv_trans_init_fct) (void **, const char *);\ntypedef void (*__gconv_trans_end_fct) (void *);\n\nstruct __gconv_trans_data\n{\n\n  __gconv_trans_fct __trans_fct;\n  __gconv_trans_context_fct __trans_context_fct;\n  __gconv_trans_end_fct __trans_end_fct;\n  void *__data;\n  struct __gconv_trans_data *__next;\n};\n\n\n\nstruct __gconv_step\n{\n  struct __gconv_loaded_object *__shlib_handle;\n  __const char *__modname;\n\n  int __counter;\n\n  char *__from_name;\n  char *__to_name;\n\n  __gconv_fct __fct;\n  __gconv_btowc_fct __btowc_fct;\n  __gconv_init_fct __init_fct;\n  __gconv_end_fct __end_fct;\n\n\n\n  int __min_needed_from;\n  int __max_needed_from;\n  int __min_needed_to;\n  int __max_needed_to;\n\n\n  int __stateful;\n\n  void *__data;\n};\n\n\n\nstruct __gconv_step_data\n{\n  unsigned char *__outbuf;\n  unsigned char *__outbufend;\n\n\n\n  int __flags;\n\n\n\n  int __invocation_counter;\n\n\n\n  int __internal_use;\n\n  __mbstate_t *__statep;\n  __mbstate_t __state;\n\n\n\n  struct __gconv_trans_data *__trans;\n};\n\n\n\ntypedef struct __gconv_info\n{\n  size_t __nsteps;\n  struct __gconv_step *__steps;\n  __extension__ struct __gconv_step_data __data [];\n} *__gconv_t;\n// # 45 \"/usr/include/_G_config.h\" 2 3 4\ntypedef union\n{\n  struct __gconv_info __cd;\n  struct\n  {\n    struct __gconv_info __cd;\n    struct __gconv_step_data __data;\n  } __combined;\n} _G_iconv_t;\n\ntypedef int _G_int16_t __attribute__ ((__mode__ (__HI__)));\ntypedef int _G_int32_t __attribute__ ((__mode__ (__SI__)));\ntypedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));\ntypedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));\n// # 33 \"/usr/include/libio.h\" 2 3 4\n// # 53 \"/usr/include/libio.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stdarg.h\" 1 3 4\n// # 43 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stdarg.h\" 3 4\ntypedef __builtin_va_list __gnuc_va_list;\n// # 54 \"/usr/include/libio.h\" 2 3 4\n// # 167 \"/usr/include/libio.h\" 3 4\nstruct _IO_jump_t; struct _IO_FILE;\n// # 177 \"/usr/include/libio.h\" 3 4\ntypedef void _IO_lock_t;\n\n\n\n\n\nstruct _IO_marker {\n  struct _IO_marker *_next;\n  struct _IO_FILE *_sbuf;\n\n\n\n  int _pos;\n// # 200 \"/usr/include/libio.h\" 3 4\n};\n\n\nenum __codecvt_result\n{\n  __codecvt_ok,\n  __codecvt_partial,\n  __codecvt_error,\n  __codecvt_noconv\n};\n// # 268 \"/usr/include/libio.h\" 3 4\nstruct _IO_FILE {\n  int _flags;\n\n\n\n\n  char* _IO_read_ptr;\n  char* _IO_read_end;\n  char* _IO_read_base;\n  char* _IO_write_base;\n  char* _IO_write_ptr;\n  char* _IO_write_end;\n  char* _IO_buf_base;\n  char* _IO_buf_end;\n\n  char *_IO_save_base;\n  char *_IO_backup_base;\n  char *_IO_save_end;\n\n  struct _IO_marker *_markers;\n\n  struct _IO_FILE *_chain;\n\n  int _fileno;\n\n\n\n  int _flags2;\n\n  __off_t _old_offset;\n\n\n\n  unsigned short _cur_column;\n  signed char _vtable_offset;\n  char _shortbuf[1];\n\n\n\n  _IO_lock_t *_lock;\n// # 316 \"/usr/include/libio.h\" 3 4\n  __off64_t _offset;\n// # 325 \"/usr/include/libio.h\" 3 4\n  void *__pad1;\n  void *__pad2;\n  void *__pad3;\n  void *__pad4;\n  size_t __pad5;\n\n  int _mode;\n\n  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];\n\n};\n\n\ntypedef struct _IO_FILE _IO_FILE;\n\n\nstruct _IO_FILE_plus;\n\nextern struct _IO_FILE_plus _IO_2_1_stdin_;\nextern struct _IO_FILE_plus _IO_2_1_stdout_;\nextern struct _IO_FILE_plus _IO_2_1_stderr_;\n// # 361 \"/usr/include/libio.h\" 3 4\ntypedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);\n\n\n\n\n\n\n\ntypedef __ssize_t __io_write_fn (void *__cookie, __const char *__buf,\n     size_t __n);\n\n\n\n\n\n\n\ntypedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);\n\n\ntypedef int __io_close_fn (void *__cookie);\n\n\n\n\ntypedef __io_read_fn cookie_read_function_t;\ntypedef __io_write_fn cookie_write_function_t;\ntypedef __io_seek_fn cookie_seek_function_t;\ntypedef __io_close_fn cookie_close_function_t;\n\n\ntypedef struct\n{\n  __io_read_fn *read;\n  __io_write_fn *write;\n  __io_seek_fn *seek;\n  __io_close_fn *close;\n} _IO_cookie_io_functions_t;\ntypedef _IO_cookie_io_functions_t cookie_io_functions_t;\n\nstruct _IO_cookie_file;\n\n\nextern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,\n        void *__cookie, _IO_cookie_io_functions_t __fns);\n\n\n\n\n\n\n\nextern int __underflow (_IO_FILE *);\nextern int __uflow (_IO_FILE *);\nextern int __overflow (_IO_FILE *, int);\nextern wint_t __wunderflow (_IO_FILE *);\nextern wint_t __wuflow (_IO_FILE *);\nextern wint_t __woverflow (_IO_FILE *, wint_t);\n// # 451 \"/usr/include/libio.h\" 3 4\nextern int _IO_getc (_IO_FILE *__fp);\nextern int _IO_putc (int __c, _IO_FILE *__fp);\nextern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__));\nextern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__));\n\nextern int _IO_peekc_locked (_IO_FILE *__fp);\n\n\n\n\n\nextern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__));\nextern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__));\nextern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__));\n// # 481 \"/usr/include/libio.h\" 3 4\nextern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,\n   __gnuc_va_list, int *__restrict);\nextern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,\n    __gnuc_va_list);\nextern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);\nextern size_t _IO_sgetn (_IO_FILE *, void *, size_t);\n\nextern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);\nextern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);\n\nextern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__));\n// # 73 \"/usr/include/stdio.h\" 2 3 4\n\n\n\n\ntypedef __gnuc_va_list va_list;\n// # 86 \"/usr/include/stdio.h\" 3 4\n\n\ntypedef _G_fpos_t fpos_t;\n\n\n\n\n\ntypedef _G_fpos64_t fpos64_t;\n// # 138 \"/usr/include/stdio.h\" 3 4\n// # 1 \"/usr/include/bits/stdio_lim.h\" 1 3 4\n// # 139 \"/usr/include/stdio.h\" 2 3 4\n\n\n\nextern struct _IO_FILE *stdin;\nextern struct _IO_FILE *stdout;\nextern struct _IO_FILE *stderr;\n\n\n\n\n\n\n\n\n\nextern int remove (__const char *__filename) __attribute__ ((__nothrow__));\n\nextern int rename (__const char *__old, __const char *__new) __attribute__ ((__nothrow__));\n\n\n\n\nextern int renameat (int __oldfd, __const char *__old, int __newfd,\n       __const char *__new) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern FILE *tmpfile (void);\n// # 181 \"/usr/include/stdio.h\" 3 4\nextern FILE *tmpfile64 (void);\n\n\n\nextern char *tmpnam (char *__s) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__));\n// # 203 \"/usr/include/stdio.h\" 3 4\nextern char *tempnam (__const char *__dir, __const char *__pfx)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__));\n\n\n\n\n\n\n\n\nextern int fclose (FILE *__stream);\n\n\n\n\nextern int fflush (FILE *__stream);\n\n// # 228 \"/usr/include/stdio.h\" 3 4\nextern int fflush_unlocked (FILE *__stream);\n// # 238 \"/usr/include/stdio.h\" 3 4\nextern int fcloseall (void);\n\n\n\n\n\n\n\n\n\nextern FILE *fopen (__const char *__restrict __filename,\n      __const char *__restrict __modes);\n\n\n\n\nextern FILE *freopen (__const char *__restrict __filename,\n        __const char *__restrict __modes,\n        FILE *__restrict __stream);\n// # 269 \"/usr/include/stdio.h\" 3 4\n\n\nextern FILE *fopen64 (__const char *__restrict __filename,\n        __const char *__restrict __modes);\nextern FILE *freopen64 (__const char *__restrict __filename,\n   __const char *__restrict __modes,\n   FILE *__restrict __stream);\n\n\n\n\nextern FILE *fdopen (int __fd, __const char *__modes) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern FILE *fopencookie (void *__restrict __magic_cookie,\n     __const char *__restrict __modes,\n     _IO_cookie_io_functions_t __io_funcs) __attribute__ ((__nothrow__));\n\n\nextern FILE *fmemopen (void *__s, size_t __len, __const char *__modes) __attribute__ ((__nothrow__));\n\n\n\n\nextern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__));\n\n\n\nextern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,\n      int __modes, size_t __n) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,\n         size_t __size) __attribute__ ((__nothrow__));\n\n\nextern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern int fprintf (FILE *__restrict __stream,\n      __const char *__restrict __format, ...);\n\n\n\n\nextern int printf (__const char *__restrict __format, ...);\n\nextern int sprintf (char *__restrict __s,\n      __const char *__restrict __format, ...) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int vfprintf (FILE *__restrict __s, __const char *__restrict __format,\n       __gnuc_va_list __arg);\n\n\n\n\nextern int vprintf (__const char *__restrict __format, __gnuc_va_list __arg);\n\nextern int vsprintf (char *__restrict __s, __const char *__restrict __format,\n       __gnuc_va_list __arg) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int snprintf (char *__restrict __s, size_t __maxlen,\n       __const char *__restrict __format, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));\n\nextern int vsnprintf (char *__restrict __s, size_t __maxlen,\n        __const char *__restrict __format, __gnuc_va_list __arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));\n\n\n\n\n\n\nextern int vasprintf (char **__restrict __ptr, __const char *__restrict __f,\n        __gnuc_va_list __arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0)));\nextern int __asprintf (char **__restrict __ptr,\n         __const char *__restrict __fmt, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));\nextern int asprintf (char **__restrict __ptr,\n       __const char *__restrict __fmt, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));\n\n\n\n\n\n\n\nextern int vdprintf (int __fd, __const char *__restrict __fmt,\n       __gnuc_va_list __arg)\n     __attribute__ ((__format__ (__printf__, 2, 0)));\nextern int dprintf (int __fd, __const char *__restrict __fmt, ...)\n     __attribute__ ((__format__ (__printf__, 2, 3)));\n\n\n\n\n\n\n\n\nextern int fscanf (FILE *__restrict __stream,\n     __const char *__restrict __format, ...) ;\n\n\n\n\nextern int scanf (__const char *__restrict __format, ...) ;\n\nextern int sscanf (__const char *__restrict __s,\n     __const char *__restrict __format, ...) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern int vfscanf (FILE *__restrict __s, __const char *__restrict __format,\n      __gnuc_va_list __arg)\n     __attribute__ ((__format__ (__scanf__, 2, 0))) ;\n\n\n\n\n\nextern int vscanf (__const char *__restrict __format, __gnuc_va_list __arg)\n     __attribute__ ((__format__ (__scanf__, 1, 0))) ;\n\n\nextern int vsscanf (__const char *__restrict __s,\n      __const char *__restrict __format, __gnuc_va_list __arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__scanf__, 2, 0)));\n\n\n\n\n\n\n\n\n\nextern int fgetc (FILE *__stream);\nextern int getc (FILE *__stream);\n\n\n\n\n\nextern int getchar (void);\n\n// # 460 \"/usr/include/stdio.h\" 3 4\nextern int getc_unlocked (FILE *__stream);\nextern int getchar_unlocked (void);\n// # 471 \"/usr/include/stdio.h\" 3 4\nextern int fgetc_unlocked (FILE *__stream);\n\n\n\n\n\n\n\n\n\n\n\nextern int fputc (int __c, FILE *__stream);\nextern int putc (int __c, FILE *__stream);\n\n\n\n\n\nextern int putchar (int __c);\n\n// # 504 \"/usr/include/stdio.h\" 3 4\nextern int fputc_unlocked (int __c, FILE *__stream);\n\n\n\n\n\n\n\nextern int putc_unlocked (int __c, FILE *__stream);\nextern int putchar_unlocked (int __c);\n\n\n\n\n\n\nextern int getw (FILE *__stream);\n\n\nextern int putw (int __w, FILE *__stream);\n\n\n\n\n\n\n\n\nextern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)\n     ;\n\n\n\n\n\n\nextern char *gets (char *__s) ;\n\n// # 550 \"/usr/include/stdio.h\" 3 4\nextern char *fgets_unlocked (char *__restrict __s, int __n,\n        FILE *__restrict __stream) ;\n// # 566 \"/usr/include/stdio.h\" 3 4\nextern __ssize_t __getdelim (char **__restrict __lineptr,\n          size_t *__restrict __n, int __delimiter,\n          FILE *__restrict __stream) ;\nextern __ssize_t getdelim (char **__restrict __lineptr,\n        size_t *__restrict __n, int __delimiter,\n        FILE *__restrict __stream) ;\n\n\n\n\n\n\n\nextern __ssize_t getline (char **__restrict __lineptr,\n       size_t *__restrict __n,\n       FILE *__restrict __stream) ;\n\n\n\n\n\n\n\n\nextern int fputs (__const char *__restrict __s, FILE *__restrict __stream);\n\n\n\n\n\nextern int puts (__const char *__s);\n\n\n\n\n\n\nextern int ungetc (int __c, FILE *__stream);\n\n\n\n\n\n\nextern size_t fread (void *__restrict __ptr, size_t __size,\n       size_t __n, FILE *__restrict __stream) ;\n\n\n\n\nextern size_t fwrite (__const void *__restrict __ptr, size_t __size,\n        size_t __n, FILE *__restrict __s) ;\n\n// # 627 \"/usr/include/stdio.h\" 3 4\nextern int fputs_unlocked (__const char *__restrict __s,\n      FILE *__restrict __stream);\n// # 638 \"/usr/include/stdio.h\" 3 4\nextern size_t fread_unlocked (void *__restrict __ptr, size_t __size,\n         size_t __n, FILE *__restrict __stream) ;\nextern size_t fwrite_unlocked (__const void *__restrict __ptr, size_t __size,\n          size_t __n, FILE *__restrict __stream) ;\n\n\n\n\n\n\n\n\nextern int fseek (FILE *__stream, long int __off, int __whence);\n\n\n\n\nextern long int ftell (FILE *__stream) ;\n\n\n\n\nextern void rewind (FILE *__stream);\n\n// # 674 \"/usr/include/stdio.h\" 3 4\nextern int fseeko (FILE *__stream, __off_t __off, int __whence);\n\n\n\n\nextern __off_t ftello (FILE *__stream) ;\n// # 693 \"/usr/include/stdio.h\" 3 4\n\n\n\n\n\n\nextern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);\n\n\n\n\nextern int fsetpos (FILE *__stream, __const fpos_t *__pos);\n// # 716 \"/usr/include/stdio.h\" 3 4\n\n\n\nextern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);\nextern __off64_t ftello64 (FILE *__stream) ;\nextern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);\nextern int fsetpos64 (FILE *__stream, __const fpos64_t *__pos);\n\n\n\n\nextern void clearerr (FILE *__stream) __attribute__ ((__nothrow__));\n\nextern int feof (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\nextern int ferror (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__));\nextern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;\nextern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\n\n\nextern void perror (__const char *__s);\n\n\n\n\n\n\n// # 1 \"/usr/include/bits/sys_errlist.h\" 1 3 4\n// # 27 \"/usr/include/bits/sys_errlist.h\" 3 4\nextern int sys_nerr;\nextern __const char *__const sys_errlist[];\n\n\nextern int _sys_nerr;\nextern __const char *__const _sys_errlist[];\n// # 755 \"/usr/include/stdio.h\" 2 3 4\n\n\n\n\nextern int fileno (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;\n// # 774 \"/usr/include/stdio.h\" 3 4\nextern FILE *popen (__const char *__command, __const char *__modes) ;\n\n\n\n\n\nextern int pclose (FILE *__stream);\n\n\n\n\n\nextern char *ctermid (char *__s) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *cuserid (char *__s);\n\n\n\n\nstruct obstack;\n\n\nextern int obstack_printf (struct obstack *__restrict __obstack,\n      __const char *__restrict __format, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));\nextern int obstack_vprintf (struct obstack *__restrict __obstack,\n       __const char *__restrict __format,\n       __gnuc_va_list __args)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0)));\n\n\n\n\n\n\n\nextern void flockfile (FILE *__stream) __attribute__ ((__nothrow__));\n\n\n\nextern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\n\nextern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__));\n// # 844 \"/usr/include/stdio.h\" 3 4\n\n// # 34 \"../cherokee/macros.h\" 2\n// # 1 \"/usr/include/stdlib.h\" 1 3 4\n// # 33 \"/usr/include/stdlib.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 34 \"/usr/include/stdlib.h\" 2 3 4\n\n\n\n\n\n\n\n\n// # 1 \"/usr/include/bits/waitflags.h\" 1 3 4\n// # 43 \"/usr/include/stdlib.h\" 2 3 4\n// # 1 \"/usr/include/bits/waitstatus.h\" 1 3 4\n// # 65 \"/usr/include/bits/waitstatus.h\" 3 4\n// # 1 \"/usr/include/endian.h\" 1 3 4\n// # 37 \"/usr/include/endian.h\" 3 4\n// # 1 \"/usr/include/bits/endian.h\" 1 3 4\n// # 38 \"/usr/include/endian.h\" 2 3 4\n// # 66 \"/usr/include/bits/waitstatus.h\" 2 3 4\n\nunion wait\n  {\n    int w_status;\n    struct\n      {\n\n unsigned int __w_termsig:7;\n unsigned int __w_coredump:1;\n unsigned int __w_retcode:8;\n unsigned int:16;\n\n\n\n\n\n\n\n      } __wait_terminated;\n    struct\n      {\n\n unsigned int __w_stopval:8;\n unsigned int __w_stopsig:8;\n unsigned int:16;\n\n\n\n\n\n\n      } __wait_stopped;\n  };\n// # 44 \"/usr/include/stdlib.h\" 2 3 4\n// # 68 \"/usr/include/stdlib.h\" 3 4\ntypedef union\n  {\n    union wait *__uptr;\n    int *__iptr;\n  } __WAIT_STATUS __attribute__ ((__transparent_union__));\n// # 96 \"/usr/include/stdlib.h\" 3 4\n\n\ntypedef struct\n  {\n    int quot;\n    int rem;\n  } div_t;\n\n\n\ntypedef struct\n  {\n    long int quot;\n    long int rem;\n  } ldiv_t;\n\n\n\n\n\n\n\n__extension__ typedef struct\n  {\n    long long int quot;\n    long long int rem;\n  } lldiv_t;\n\n\n// # 140 \"/usr/include/stdlib.h\" 3 4\nextern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern double atof (__const char *__nptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern int atoi (__const char *__nptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern long int atol (__const char *__nptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n__extension__ extern long long int atoll (__const char *__nptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern double strtod (__const char *__restrict __nptr,\n        char **__restrict __endptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern float strtof (__const char *__restrict __nptr,\n       char **__restrict __endptr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern long double strtold (__const char *__restrict __nptr,\n       char **__restrict __endptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern long int strtol (__const char *__restrict __nptr,\n   char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern unsigned long int strtoul (__const char *__restrict __nptr,\n      char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n__extension__\nextern long long int strtoq (__const char *__restrict __nptr,\n        char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n__extension__\nextern unsigned long long int strtouq (__const char *__restrict __nptr,\n           char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n__extension__\nextern long long int strtoll (__const char *__restrict __nptr,\n         char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n__extension__\nextern unsigned long long int strtoull (__const char *__restrict __nptr,\n     char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n// # 236 \"/usr/include/stdlib.h\" 3 4\n// # 1 \"/usr/include/xlocale.h\" 1 3 4\n// # 28 \"/usr/include/xlocale.h\" 3 4\ntypedef struct __locale_struct\n{\n\n  struct locale_data *__locales[13];\n\n\n  const unsigned short int *__ctype_b;\n  const int *__ctype_tolower;\n  const int *__ctype_toupper;\n\n\n  const char *__names[13];\n} *__locale_t;\n// # 237 \"/usr/include/stdlib.h\" 2 3 4\n\n\n\nextern long int strtol_l (__const char *__restrict __nptr,\n     char **__restrict __endptr, int __base,\n     __locale_t __loc) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;\n\nextern unsigned long int strtoul_l (__const char *__restrict __nptr,\n        char **__restrict __endptr,\n        int __base, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;\n\n__extension__\nextern long long int strtoll_l (__const char *__restrict __nptr,\n    char **__restrict __endptr, int __base,\n    __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;\n\n__extension__\nextern unsigned long long int strtoull_l (__const char *__restrict __nptr,\n       char **__restrict __endptr,\n       int __base, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;\n\nextern double strtod_l (__const char *__restrict __nptr,\n   char **__restrict __endptr, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;\n\nextern float strtof_l (__const char *__restrict __nptr,\n         char **__restrict __endptr, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;\n\nextern long double strtold_l (__const char *__restrict __nptr,\n         char **__restrict __endptr,\n         __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;\n\n\n\n\n\n\nextern double __strtod_internal (__const char *__restrict __nptr,\n     char **__restrict __endptr, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\nextern float __strtof_internal (__const char *__restrict __nptr,\n    char **__restrict __endptr, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\nextern long double __strtold_internal (__const char *__restrict __nptr,\n           char **__restrict __endptr,\n           int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern long int __strtol_internal (__const char *__restrict __nptr,\n       char **__restrict __endptr,\n       int __base, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern unsigned long int __strtoul_internal (__const char *__restrict __nptr,\n          char **__restrict __endptr,\n          int __base, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n__extension__\nextern long long int __strtoll_internal (__const char *__restrict __nptr,\n      char **__restrict __endptr,\n      int __base, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n__extension__\nextern unsigned long long int __strtoull_internal (__const char *\n         __restrict __nptr,\n         char **__restrict __endptr,\n         int __base, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 429 \"/usr/include/stdlib.h\" 3 4\nextern char *l64a (long int __n) __attribute__ ((__nothrow__)) ;\n\n\nextern long int a64l (__const char *__s)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n// # 1 \"/usr/include/sys/types.h\" 1 3 4\n// # 29 \"/usr/include/sys/types.h\" 3 4\n\n\n\n\n\n\ntypedef __u_char u_char;\ntypedef __u_short u_short;\ntypedef __u_int u_int;\ntypedef __u_long u_long;\ntypedef __quad_t quad_t;\ntypedef __u_quad_t u_quad_t;\ntypedef __fsid_t fsid_t;\n\n\n\n\ntypedef __loff_t loff_t;\n\n\n\ntypedef __ino_t ino_t;\n\n\n\n\n\n\ntypedef __ino64_t ino64_t;\n\n\n\n\ntypedef __dev_t dev_t;\n\n\n\n\ntypedef __gid_t gid_t;\n\n\n\n\ntypedef __mode_t mode_t;\n\n\n\n\ntypedef __nlink_t nlink_t;\n\n\n\n\ntypedef __uid_t uid_t;\n\n\n\n\n\ntypedef __off_t off_t;\n\n\n\n\n\n\ntypedef __off64_t off64_t;\n\n\n\n\ntypedef __pid_t pid_t;\n\n\n\n\ntypedef __id_t id_t;\n\n\n\n\ntypedef __ssize_t ssize_t;\n\n\n\n\n\ntypedef __daddr_t daddr_t;\ntypedef __caddr_t caddr_t;\n\n\n\n\n\ntypedef __key_t key_t;\n// # 133 \"/usr/include/sys/types.h\" 3 4\n// # 1 \"/usr/include/time.h\" 1 3 4\n// # 59 \"/usr/include/time.h\" 3 4\n\n\ntypedef __clock_t clock_t;\n\n\n\n// # 75 \"/usr/include/time.h\" 3 4\n\n\ntypedef __time_t time_t;\n\n\n\n// # 93 \"/usr/include/time.h\" 3 4\ntypedef __clockid_t clockid_t;\n// # 105 \"/usr/include/time.h\" 3 4\ntypedef __timer_t timer_t;\n// # 134 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\ntypedef __useconds_t useconds_t;\n\n\n\ntypedef __suseconds_t suseconds_t;\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 148 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\ntypedef unsigned long int ulong;\ntypedef unsigned short int ushort;\ntypedef unsigned int uint;\n// # 195 \"/usr/include/sys/types.h\" 3 4\ntypedef int int8_t __attribute__ ((__mode__ (__QI__)));\ntypedef int int16_t __attribute__ ((__mode__ (__HI__)));\ntypedef int int32_t __attribute__ ((__mode__ (__SI__)));\ntypedef int int64_t __attribute__ ((__mode__ (__DI__)));\n\n\ntypedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));\ntypedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));\ntypedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));\ntypedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));\n\ntypedef int register_t __attribute__ ((__mode__ (__word__)));\n// # 220 \"/usr/include/sys/types.h\" 3 4\n// # 1 \"/usr/include/sys/select.h\" 1 3 4\n// # 31 \"/usr/include/sys/select.h\" 3 4\n// # 1 \"/usr/include/bits/select.h\" 1 3 4\n// # 32 \"/usr/include/sys/select.h\" 2 3 4\n\n\n// # 1 \"/usr/include/bits/sigset.h\" 1 3 4\n// # 23 \"/usr/include/bits/sigset.h\" 3 4\ntypedef int __sig_atomic_t;\n\n\n\n\ntypedef struct\n  {\n    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];\n  } __sigset_t;\n// # 35 \"/usr/include/sys/select.h\" 2 3 4\n\n\n\ntypedef __sigset_t sigset_t;\n\n\n\n\n\n// # 1 \"/usr/include/time.h\" 1 3 4\n// # 121 \"/usr/include/time.h\" 3 4\nstruct timespec\n  {\n    __time_t tv_sec;\n    long int tv_nsec;\n  };\n// # 45 \"/usr/include/sys/select.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/time.h\" 1 3 4\n// # 69 \"/usr/include/bits/time.h\" 3 4\nstruct timeval\n  {\n    __time_t tv_sec;\n    __suseconds_t tv_usec;\n  };\n// # 47 \"/usr/include/sys/select.h\" 2 3 4\n// # 55 \"/usr/include/sys/select.h\" 3 4\ntypedef long int __fd_mask;\n// # 67 \"/usr/include/sys/select.h\" 3 4\ntypedef struct\n  {\n\n\n\n    __fd_mask fds_bits[1024 / (8 * sizeof (__fd_mask))];\n\n\n\n\n\n  } fd_set;\n\n\n\n\n\n\ntypedef __fd_mask fd_mask;\n// # 99 \"/usr/include/sys/select.h\" 3 4\n\n// # 109 \"/usr/include/sys/select.h\" 3 4\nextern int select (int __nfds, fd_set *__restrict __readfds,\n     fd_set *__restrict __writefds,\n     fd_set *__restrict __exceptfds,\n     struct timeval *__restrict __timeout);\n// # 121 \"/usr/include/sys/select.h\" 3 4\nextern int pselect (int __nfds, fd_set *__restrict __readfds,\n      fd_set *__restrict __writefds,\n      fd_set *__restrict __exceptfds,\n      const struct timespec *__restrict __timeout,\n      const __sigset_t *__restrict __sigmask);\n\n\n\n// # 221 \"/usr/include/sys/types.h\" 2 3 4\n\n\n// # 1 \"/usr/include/sys/sysmacros.h\" 1 3 4\n// # 29 \"/usr/include/sys/sysmacros.h\" 3 4\n__extension__\nextern __inline unsigned int gnu_dev_major (unsigned long long int __dev)\n     __attribute__ ((__nothrow__));\n__extension__\nextern __inline unsigned int gnu_dev_minor (unsigned long long int __dev)\n     __attribute__ ((__nothrow__));\n__extension__\nextern __inline unsigned long long int gnu_dev_makedev (unsigned int __major,\n       unsigned int __minor)\n     __attribute__ ((__nothrow__));\n\n\n__extension__ extern __inline unsigned int\n__attribute__ ((__nothrow__)) gnu_dev_major (unsigned long long int __dev)\n{\n  return ((__dev >> 8) & 0xfff) | ((unsigned int) (__dev >> 32) & ~0xfff);\n}\n\n__extension__ extern __inline unsigned int\n__attribute__ ((__nothrow__)) gnu_dev_minor (unsigned long long int __dev)\n{\n  return (__dev & 0xff) | ((unsigned int) (__dev >> 12) & ~0xff);\n}\n\n__extension__ extern __inline unsigned long long int\n__attribute__ ((__nothrow__)) gnu_dev_makedev (unsigned int __major, unsigned int __minor)\n{\n  return ((__minor & 0xff) | ((__major & 0xfff) << 8)\n   | (((unsigned long long int) (__minor & ~0xff)) << 12)\n   | (((unsigned long long int) (__major & ~0xfff)) << 32));\n}\n// # 224 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\n\ntypedef __blksize_t blksize_t;\n\n\n\n\n\n\ntypedef __blkcnt_t blkcnt_t;\n\n\n\ntypedef __fsblkcnt_t fsblkcnt_t;\n\n\n\ntypedef __fsfilcnt_t fsfilcnt_t;\n// # 262 \"/usr/include/sys/types.h\" 3 4\ntypedef __blkcnt64_t blkcnt64_t;\ntypedef __fsblkcnt64_t fsblkcnt64_t;\ntypedef __fsfilcnt64_t fsfilcnt64_t;\n\n\n\n\n\n// # 1 \"/usr/include/bits/pthreadtypes.h\" 1 3 4\n// # 23 \"/usr/include/bits/pthreadtypes.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 24 \"/usr/include/bits/pthreadtypes.h\" 2 3 4\n// # 50 \"/usr/include/bits/pthreadtypes.h\" 3 4\ntypedef unsigned long int pthread_t;\n\n\ntypedef union\n{\n  char __size[56];\n  long int __align;\n} pthread_attr_t;\n\n\n\ntypedef struct __pthread_internal_list\n{\n  struct __pthread_internal_list *__prev;\n  struct __pthread_internal_list *__next;\n} __pthread_list_t;\n// # 76 \"/usr/include/bits/pthreadtypes.h\" 3 4\ntypedef union\n{\n  struct __pthread_mutex_s\n  {\n    int __lock;\n    unsigned int __count;\n    int __owner;\n\n    unsigned int __nusers;\n\n\n\n    int __kind;\n\n    int __spins;\n    __pthread_list_t __list;\n// # 101 \"/usr/include/bits/pthreadtypes.h\" 3 4\n  } __data;\n  char __size[40];\n  long int __align;\n} pthread_mutex_t;\n\ntypedef union\n{\n  char __size[4];\n  int __align;\n} pthread_mutexattr_t;\n\n\n\n\ntypedef union\n{\n  struct\n  {\n    int __lock;\n    unsigned int __futex;\n    __extension__ unsigned long long int __total_seq;\n    __extension__ unsigned long long int __wakeup_seq;\n    __extension__ unsigned long long int __woken_seq;\n    void *__mutex;\n    unsigned int __nwaiters;\n    unsigned int __broadcast_seq;\n  } __data;\n  char __size[48];\n  __extension__ long long int __align;\n} pthread_cond_t;\n\ntypedef union\n{\n  char __size[4];\n  int __align;\n} pthread_condattr_t;\n\n\n\ntypedef unsigned int pthread_key_t;\n\n\n\ntypedef int pthread_once_t;\n\n\n\n\n\ntypedef union\n{\n\n  struct\n  {\n    int __lock;\n    unsigned int __nr_readers;\n    unsigned int __readers_wakeup;\n    unsigned int __writer_wakeup;\n    unsigned int __nr_readers_queued;\n    unsigned int __nr_writers_queued;\n    int __writer;\n    int __shared;\n    unsigned long int __pad1;\n    unsigned long int __pad2;\n\n\n    unsigned int __flags;\n  } __data;\n// # 187 \"/usr/include/bits/pthreadtypes.h\" 3 4\n  char __size[56];\n  long int __align;\n} pthread_rwlock_t;\n\ntypedef union\n{\n  char __size[8];\n  long int __align;\n} pthread_rwlockattr_t;\n\n\n\n\n\ntypedef volatile int pthread_spinlock_t;\n\n\n\n\ntypedef union\n{\n  char __size[32];\n  long int __align;\n} pthread_barrier_t;\n\ntypedef union\n{\n  char __size[4];\n  int __align;\n} pthread_barrierattr_t;\n// # 271 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\n// # 439 \"/usr/include/stdlib.h\" 2 3 4\n\n\n\n\n\n\nextern long int random (void) __attribute__ ((__nothrow__));\n\n\nextern void srandom (unsigned int __seed) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *initstate (unsigned int __seed, char *__statebuf,\n   size_t __statelen) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\nextern char *setstate (char *__statebuf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\n\nstruct random_data\n  {\n    int32_t *fptr;\n    int32_t *rptr;\n    int32_t *state;\n    int rand_type;\n    int rand_deg;\n    int rand_sep;\n    int32_t *end_ptr;\n  };\n\nextern int random_r (struct random_data *__restrict __buf,\n       int32_t *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern int srandom_r (unsigned int __seed, struct random_data *__buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\nextern int initstate_r (unsigned int __seed, char *__restrict __statebuf,\n   size_t __statelen,\n   struct random_data *__restrict __buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n\nextern int setstate_r (char *__restrict __statebuf,\n         struct random_data *__restrict __buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\nextern int rand (void) __attribute__ ((__nothrow__));\n\nextern void srand (unsigned int __seed) __attribute__ ((__nothrow__));\n\n\n\n\nextern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern double drand48 (void) __attribute__ ((__nothrow__));\nextern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern long int lrand48 (void) __attribute__ ((__nothrow__));\nextern long int nrand48 (unsigned short int __xsubi[3])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern long int mrand48 (void) __attribute__ ((__nothrow__));\nextern long int jrand48 (unsigned short int __xsubi[3])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern void srand48 (long int __seedval) __attribute__ ((__nothrow__));\nextern unsigned short int *seed48 (unsigned short int __seed16v[3])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\nextern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nstruct drand48_data\n  {\n    unsigned short int __x[3];\n    unsigned short int __old_x[3];\n    unsigned short int __c;\n    unsigned short int __init;\n    unsigned long long int __a;\n  };\n\n\nextern int drand48_r (struct drand48_data *__restrict __buffer,\n        double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern int erand48_r (unsigned short int __xsubi[3],\n        struct drand48_data *__restrict __buffer,\n        double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int lrand48_r (struct drand48_data *__restrict __buffer,\n        long int *__restrict __result)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern int nrand48_r (unsigned short int __xsubi[3],\n        struct drand48_data *__restrict __buffer,\n        long int *__restrict __result)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int mrand48_r (struct drand48_data *__restrict __buffer,\n        long int *__restrict __result)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern int jrand48_r (unsigned short int __xsubi[3],\n        struct drand48_data *__restrict __buffer,\n        long int *__restrict __result)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int srand48_r (long int __seedval, struct drand48_data *__buffer)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\nextern int seed48_r (unsigned short int __seed16v[3],\n       struct drand48_data *__buffer) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern int lcong48_r (unsigned short int __param[7],\n        struct drand48_data *__buffer)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\n\n\n\nextern void *malloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;\n\nextern void *calloc (size_t __nmemb, size_t __size)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;\n\n\n\n\n\n\n\nextern void *realloc (void *__ptr, size_t __size)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));\n\nextern void free (void *__ptr) __attribute__ ((__nothrow__));\n\n\n\n\nextern void cfree (void *__ptr) __attribute__ ((__nothrow__));\n\n\n\n// # 1 \"/usr/include/alloca.h\" 1 3 4\n// # 25 \"/usr/include/alloca.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 26 \"/usr/include/alloca.h\" 2 3 4\n\n\n\n\n\n\n\nextern void *alloca (size_t __size) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n// # 613 \"/usr/include/stdlib.h\" 2 3 4\n\n\n\n\nextern void *valloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;\n\n\n\n\nextern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\nextern void abort (void) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));\n\n\n\nextern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern void exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));\n\n\n\n\n\n\nextern void _Exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));\n\n\n\n\n\n\nextern char *getenv (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\nextern char *__secure_getenv (__const char *__name)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern int putenv (char *__string) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int setenv (__const char *__name, __const char *__value, int __replace)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\nextern int unsetenv (__const char *__name) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int clearenv (void) __attribute__ ((__nothrow__));\n// # 698 \"/usr/include/stdlib.h\" 3 4\nextern char *mktemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 709 \"/usr/include/stdlib.h\" 3 4\nextern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;\n// # 719 \"/usr/include/stdlib.h\" 3 4\nextern int mkstemp64 (char *__template) __attribute__ ((__nonnull__ (1))) ;\n// # 729 \"/usr/include/stdlib.h\" 3 4\nextern char *mkdtemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n\n\n\nextern int system (__const char *__command) ;\n\n\n\n\n\n\n\nextern char *canonicalize_file_name (__const char *__name)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 756 \"/usr/include/stdlib.h\" 3 4\nextern char *realpath (__const char *__restrict __name,\n         char *__restrict __resolved) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\ntypedef int (*__compar_fn_t) (__const void *, __const void *);\n\n\ntypedef __compar_fn_t comparison_fn_t;\n\n\n\n\n\n\nextern void *bsearch (__const void *__key, __const void *__base,\n        size_t __nmemb, size_t __size, __compar_fn_t __compar)\n     __attribute__ ((__nonnull__ (1, 2, 5))) ;\n\n\n\nextern void qsort (void *__base, size_t __nmemb, size_t __size,\n     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));\n\n\n\nextern int abs (int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\nextern long int labs (long int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\n\n\n\n__extension__ extern long long int llabs (long long int __x)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\n\n\n\n\n\n\n\nextern div_t div (int __numer, int __denom)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\nextern ldiv_t ldiv (long int __numer, long int __denom)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\n\n\n\n\n__extension__ extern lldiv_t lldiv (long long int __numer,\n        long long int __denom)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\n\n// # 821 \"/usr/include/stdlib.h\" 3 4\nextern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,\n     int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;\n\n\n\n\nextern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,\n     int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;\n\n\n\n\nextern char *gcvt (double __value, int __ndigit, char *__buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;\n\n\n\n\nextern char *qecvt (long double __value, int __ndigit,\n      int *__restrict __decpt, int *__restrict __sign)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;\nextern char *qfcvt (long double __value, int __ndigit,\n      int *__restrict __decpt, int *__restrict __sign)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;\nextern char *qgcvt (long double __value, int __ndigit, char *__buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;\n\n\n\n\nextern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,\n     int *__restrict __sign, char *__restrict __buf,\n     size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));\nextern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,\n     int *__restrict __sign, char *__restrict __buf,\n     size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));\n\nextern int qecvt_r (long double __value, int __ndigit,\n      int *__restrict __decpt, int *__restrict __sign,\n      char *__restrict __buf, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));\nextern int qfcvt_r (long double __value, int __ndigit,\n      int *__restrict __decpt, int *__restrict __sign,\n      char *__restrict __buf, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));\n\n\n\n\n\n\n\nextern int mblen (__const char *__s, size_t __n) __attribute__ ((__nothrow__)) ;\n\n\nextern int mbtowc (wchar_t *__restrict __pwc,\n     __const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__)) ;\n\n\nextern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__)) ;\n\n\n\nextern size_t mbstowcs (wchar_t *__restrict __pwcs,\n   __const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__));\n\nextern size_t wcstombs (char *__restrict __s,\n   __const wchar_t *__restrict __pwcs, size_t __n)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern int rpmatch (__const char *__response) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 909 \"/usr/include/stdlib.h\" 3 4\nextern int getsubopt (char **__restrict __optionp,\n        char *__const *__restrict __tokens,\n        char **__restrict __valuep)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3))) ;\n\n\n\n\n\nextern void setkey (__const char *__key) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\n\nextern int posix_openpt (int __oflag) ;\n\n\n\n\n\n\n\nextern int grantpt (int __fd) __attribute__ ((__nothrow__));\n\n\n\nextern int unlockpt (int __fd) __attribute__ ((__nothrow__));\n\n\n\n\nextern char *ptsname (int __fd) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\nextern int ptsname_r (int __fd, char *__buf, size_t __buflen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\nextern int getpt (void);\n\n\n\n\n\n\nextern int getloadavg (double __loadavg[], int __nelem)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 977 \"/usr/include/stdlib.h\" 3 4\n\n// # 35 \"../cherokee/macros.h\" 2\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stdarg.h\" 1 3 4\n// # 36 \"../cherokee/macros.h\" 2\n// # 34 \"common.h\" 2\n\n\n\n\ntypedef enum {\n false = 0,\n true = 1\n} cherokee_boolean_t;\n\ntypedef enum {\n ret_no_sys = -4,\n ret_nomem = -3,\n ret_deny = -2,\n ret_error = -1,\n ret_ok = 0,\n ret_eof = 1,\n ret_eof_have_data = 2,\n ret_not_found = 3,\n ret_file_not_found = 4,\n ret_eagain = 5,\n ret_ok_and_sent = 6\n} ret_t;\n\ntypedef unsigned int crc_t;\n\ntypedef int cint_t;\ntypedef char cchar_t;\ntypedef short cshort_t;\ntypedef long clong_t;\ntypedef long long cllong_t;\n\ntypedef unsigned int cuint_t;\ntypedef unsigned char cuchar_t;\ntypedef unsigned short cushort_t;\ntypedef unsigned long culong_t;\ntypedef unsigned long long cullong_t;\n\ntypedef void (*cherokee_func_free_t) (void *);\n\n\n// # 37 \"common-internal.h\" 2\n// # 1 \"threading.h\" 1\n// # 28 \"threading.h\"\n// # 1 \"common.h\" 1\n// # 29 \"threading.h\" 2\n\n\n\n\n// # 1 \"/usr/include/pthread.h\" 1 3 4\n// # 24 \"/usr/include/pthread.h\" 3 4\n// # 1 \"/usr/include/sched.h\" 1 3 4\n// # 29 \"/usr/include/sched.h\" 3 4\n// # 1 \"/usr/include/time.h\" 1 3 4\n// # 30 \"/usr/include/sched.h\" 2 3 4\n\n\n// # 1 \"/usr/include/bits/sched.h\" 1 3 4\n// # 65 \"/usr/include/bits/sched.h\" 3 4\nstruct sched_param\n  {\n    int __sched_priority;\n  };\n\n\n\n\n\nextern int clone (int (*__fn) (void *__arg), void *__child_stack,\n    int __flags, void *__arg, ...) __attribute__ ((__nothrow__));\n\n\nextern int unshare (int __flags) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\n\n\nstruct __sched_param\n  {\n    int __sched_priority;\n  };\n// # 104 \"/usr/include/bits/sched.h\" 3 4\ntypedef unsigned long int __cpu_mask;\n\n\n\n\n\n\ntypedef struct\n{\n  __cpu_mask __bits[1024 / (8 * sizeof (__cpu_mask))];\n} cpu_set_t;\n// # 33 \"/usr/include/sched.h\" 2 3 4\n\n\n\n\n\n\n\nextern int sched_setparam (__pid_t __pid, __const struct sched_param *__param)\n     __attribute__ ((__nothrow__));\n\n\nextern int sched_getparam (__pid_t __pid, struct sched_param *__param) __attribute__ ((__nothrow__));\n\n\nextern int sched_setscheduler (__pid_t __pid, int __policy,\n          __const struct sched_param *__param) __attribute__ ((__nothrow__));\n\n\nextern int sched_getscheduler (__pid_t __pid) __attribute__ ((__nothrow__));\n\n\nextern int sched_yield (void) __attribute__ ((__nothrow__));\n\n\nextern int sched_get_priority_max (int __algorithm) __attribute__ ((__nothrow__));\n\n\nextern int sched_get_priority_min (int __algorithm) __attribute__ ((__nothrow__));\n\n\nextern int sched_rr_get_interval (__pid_t __pid, struct timespec *__t) __attribute__ ((__nothrow__));\n// # 76 \"/usr/include/sched.h\" 3 4\nextern int sched_setaffinity (__pid_t __pid, size_t __cpusetsize,\n         __const cpu_set_t *__cpuset) __attribute__ ((__nothrow__));\n\n\nextern int sched_getaffinity (__pid_t __pid, size_t __cpusetsize,\n         cpu_set_t *__cpuset) __attribute__ ((__nothrow__));\n\n\n\n// # 25 \"/usr/include/pthread.h\" 2 3 4\n// # 1 \"/usr/include/time.h\" 1 3 4\n// # 31 \"/usr/include/time.h\" 3 4\n\n\n\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 40 \"/usr/include/time.h\" 2 3 4\n\n\n\n// # 1 \"/usr/include/bits/time.h\" 1 3 4\n// # 44 \"/usr/include/time.h\" 2 3 4\n// # 132 \"/usr/include/time.h\" 3 4\n\n\nstruct tm\n{\n  int tm_sec;\n  int tm_min;\n  int tm_hour;\n  int tm_mday;\n  int tm_mon;\n  int tm_year;\n  int tm_wday;\n  int tm_yday;\n  int tm_isdst;\n\n\n  long int tm_gmtoff;\n  __const char *tm_zone;\n\n\n\n\n};\n\n\n\n\n\n\n\n\nstruct itimerspec\n  {\n    struct timespec it_interval;\n    struct timespec it_value;\n  };\n\n\nstruct sigevent;\n// # 181 \"/usr/include/time.h\" 3 4\n\n\n\nextern clock_t clock (void) __attribute__ ((__nothrow__));\n\n\nextern time_t time (time_t *__timer) __attribute__ ((__nothrow__));\n\n\nextern double difftime (time_t __time1, time_t __time0)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\nextern time_t mktime (struct tm *__tp) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern size_t strftime (char *__restrict __s, size_t __maxsize,\n   __const char *__restrict __format,\n   __const struct tm *__restrict __tp) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *strptime (__const char *__restrict __s,\n         __const char *__restrict __fmt, struct tm *__tp)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern size_t strftime_l (char *__restrict __s, size_t __maxsize,\n     __const char *__restrict __format,\n     __const struct tm *__restrict __tp,\n     __locale_t __loc) __attribute__ ((__nothrow__));\n\nextern char *strptime_l (__const char *__restrict __s,\n    __const char *__restrict __fmt, struct tm *__tp,\n    __locale_t __loc) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern struct tm *gmtime (__const time_t *__timer) __attribute__ ((__nothrow__));\n\n\n\nextern struct tm *localtime (__const time_t *__timer) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern struct tm *gmtime_r (__const time_t *__restrict __timer,\n       struct tm *__restrict __tp) __attribute__ ((__nothrow__));\n\n\n\nextern struct tm *localtime_r (__const time_t *__restrict __timer,\n          struct tm *__restrict __tp) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *asctime (__const struct tm *__tp) __attribute__ ((__nothrow__));\n\n\nextern char *ctime (__const time_t *__timer) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern char *asctime_r (__const struct tm *__restrict __tp,\n   char *__restrict __buf) __attribute__ ((__nothrow__));\n\n\nextern char *ctime_r (__const time_t *__restrict __timer,\n        char *__restrict __buf) __attribute__ ((__nothrow__));\n\n\n\n\nextern char *__tzname[2];\nextern int __daylight;\nextern long int __timezone;\n\n\n\n\nextern char *tzname[2];\n\n\n\nextern void tzset (void) __attribute__ ((__nothrow__));\n\n\n\nextern int daylight;\nextern long int timezone;\n\n\n\n\n\nextern int stime (__const time_t *__when) __attribute__ ((__nothrow__));\n// # 312 \"/usr/include/time.h\" 3 4\nextern time_t timegm (struct tm *__tp) __attribute__ ((__nothrow__));\n\n\nextern time_t timelocal (struct tm *__tp) __attribute__ ((__nothrow__));\n\n\nextern int dysize (int __year) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n// # 327 \"/usr/include/time.h\" 3 4\nextern int nanosleep (__const struct timespec *__requested_time,\n        struct timespec *__remaining);\n\n\n\nextern int clock_getres (clockid_t __clock_id, struct timespec *__res) __attribute__ ((__nothrow__));\n\n\nextern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) __attribute__ ((__nothrow__));\n\n\nextern int clock_settime (clockid_t __clock_id, __const struct timespec *__tp)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int clock_nanosleep (clockid_t __clock_id, int __flags,\n       __const struct timespec *__req,\n       struct timespec *__rem);\n\n\nextern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) __attribute__ ((__nothrow__));\n\n\n\n\nextern int timer_create (clockid_t __clock_id,\n    struct sigevent *__restrict __evp,\n    timer_t *__restrict __timerid) __attribute__ ((__nothrow__));\n\n\nextern int timer_delete (timer_t __timerid) __attribute__ ((__nothrow__));\n\n\nextern int timer_settime (timer_t __timerid, int __flags,\n     __const struct itimerspec *__restrict __value,\n     struct itimerspec *__restrict __ovalue) __attribute__ ((__nothrow__));\n\n\nextern int timer_gettime (timer_t __timerid, struct itimerspec *__value)\n     __attribute__ ((__nothrow__));\n\n\nextern int timer_getoverrun (timer_t __timerid) __attribute__ ((__nothrow__));\n// # 389 \"/usr/include/time.h\" 3 4\nextern int getdate_err;\n// # 398 \"/usr/include/time.h\" 3 4\nextern struct tm *getdate (__const char *__string);\n// # 412 \"/usr/include/time.h\" 3 4\nextern int getdate_r (__const char *__restrict __string,\n        struct tm *__restrict __resbufp);\n\n\n\n// # 26 \"/usr/include/pthread.h\" 2 3 4\n\n\n// # 1 \"/usr/include/signal.h\" 1 3 4\n// # 31 \"/usr/include/signal.h\" 3 4\n\n\n// # 1 \"/usr/include/bits/sigset.h\" 1 3 4\n// # 34 \"/usr/include/signal.h\" 2 3 4\n// # 400 \"/usr/include/signal.h\" 3 4\n\n// # 29 \"/usr/include/pthread.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/setjmp.h\" 1 3 4\n// # 27 \"/usr/include/bits/setjmp.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 28 \"/usr/include/bits/setjmp.h\" 2 3 4\n\n\n\n\ntypedef long int __jmp_buf[8];\n// # 31 \"/usr/include/pthread.h\" 2 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 32 \"/usr/include/pthread.h\" 2 3 4\n\n\n\nenum\n{\n  PTHREAD_CREATE_JOINABLE,\n\n  PTHREAD_CREATE_DETACHED\n\n};\n\n\n\nenum\n{\n  PTHREAD_MUTEX_TIMED_NP,\n  PTHREAD_MUTEX_RECURSIVE_NP,\n  PTHREAD_MUTEX_ERRORCHECK_NP,\n  PTHREAD_MUTEX_ADAPTIVE_NP\n\n  ,\n  PTHREAD_MUTEX_NORMAL = PTHREAD_MUTEX_TIMED_NP,\n  PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,\n  PTHREAD_MUTEX_ERRORCHECK = PTHREAD_MUTEX_ERRORCHECK_NP,\n  PTHREAD_MUTEX_DEFAULT = PTHREAD_MUTEX_NORMAL\n\n\n\n  , PTHREAD_MUTEX_FAST_NP = PTHREAD_MUTEX_TIMED_NP\n\n};\n\n\n\n\nenum\n{\n  PTHREAD_MUTEX_STALLED_NP,\n  PTHREAD_MUTEX_ROBUST_NP\n};\n\n\n\n\n\nenum\n{\n  PTHREAD_PRIO_NONE,\n  PTHREAD_PRIO_INHERIT,\n  PTHREAD_PRIO_PROTECT\n};\n// # 114 \"/usr/include/pthread.h\" 3 4\nenum\n{\n  PTHREAD_RWLOCK_PREFER_READER_NP,\n  PTHREAD_RWLOCK_PREFER_WRITER_NP,\n  PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,\n  PTHREAD_RWLOCK_DEFAULT_NP = PTHREAD_RWLOCK_PREFER_READER_NP\n};\n// # 146 \"/usr/include/pthread.h\" 3 4\nenum\n{\n  PTHREAD_INHERIT_SCHED,\n\n  PTHREAD_EXPLICIT_SCHED\n\n};\n\n\n\nenum\n{\n  PTHREAD_SCOPE_SYSTEM,\n\n  PTHREAD_SCOPE_PROCESS\n\n};\n\n\n\nenum\n{\n  PTHREAD_PROCESS_PRIVATE,\n\n  PTHREAD_PROCESS_SHARED\n\n};\n// # 181 \"/usr/include/pthread.h\" 3 4\nstruct _pthread_cleanup_buffer\n{\n  void (*__routine) (void *);\n  void *__arg;\n  int __canceltype;\n  struct _pthread_cleanup_buffer *__prev;\n};\n\n\nenum\n{\n  PTHREAD_CANCEL_ENABLE,\n\n  PTHREAD_CANCEL_DISABLE\n\n};\nenum\n{\n  PTHREAD_CANCEL_DEFERRED,\n\n  PTHREAD_CANCEL_ASYNCHRONOUS\n\n};\n// # 219 \"/usr/include/pthread.h\" 3 4\n\n\n\n\n\nextern int pthread_create (pthread_t *__restrict __newthread,\n      __const pthread_attr_t *__restrict __attr,\n      void *(*__start_routine) (void *),\n      void *__restrict __arg) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));\n\n\n\n\n\nextern void pthread_exit (void *__retval) __attribute__ ((__noreturn__));\n\n\n\n\n\n\n\nextern int pthread_join (pthread_t __th, void **__thread_return);\n\n\n\n\nextern int pthread_tryjoin_np (pthread_t __th, void **__thread_return) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern int pthread_timedjoin_np (pthread_t __th, void **__thread_return,\n     __const struct timespec *__abstime);\n\n\n\n\n\n\nextern int pthread_detach (pthread_t __th) __attribute__ ((__nothrow__));\n\n\n\nextern pthread_t pthread_self (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\nextern int pthread_equal (pthread_t __thread1, pthread_t __thread2) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern int pthread_attr_init (pthread_attr_t *__attr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_attr_destroy (pthread_attr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_attr_getdetachstate (__const pthread_attr_t *__attr,\n     int *__detachstate)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_attr_setdetachstate (pthread_attr_t *__attr,\n     int __detachstate)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_attr_getguardsize (__const pthread_attr_t *__attr,\n          size_t *__guardsize)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_attr_setguardsize (pthread_attr_t *__attr,\n          size_t __guardsize)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_attr_getschedparam (__const pthread_attr_t *__restrict\n           __attr,\n           struct sched_param *__restrict __param)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_attr_setschedparam (pthread_attr_t *__restrict __attr,\n           __const struct sched_param *__restrict\n           __param) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_attr_getschedpolicy (__const pthread_attr_t *__restrict\n     __attr, int *__restrict __policy)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_attr_setschedpolicy (pthread_attr_t *__attr, int __policy)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_attr_getinheritsched (__const pthread_attr_t *__restrict\n      __attr, int *__restrict __inherit)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_attr_setinheritsched (pthread_attr_t *__attr,\n      int __inherit)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_attr_getscope (__const pthread_attr_t *__restrict __attr,\n      int *__restrict __scope)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_attr_setscope (pthread_attr_t *__attr, int __scope)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_attr_getstackaddr (__const pthread_attr_t *__restrict\n          __attr, void **__restrict __stackaddr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__deprecated__));\n\n\n\n\n\nextern int pthread_attr_setstackaddr (pthread_attr_t *__attr,\n          void *__stackaddr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__));\n\n\nextern int pthread_attr_getstacksize (__const pthread_attr_t *__restrict\n          __attr, size_t *__restrict __stacksize)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\nextern int pthread_attr_setstacksize (pthread_attr_t *__attr,\n          size_t __stacksize)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_attr_getstack (__const pthread_attr_t *__restrict __attr,\n      void **__restrict __stackaddr,\n      size_t *__restrict __stacksize)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3)));\n\n\n\n\nextern int pthread_attr_setstack (pthread_attr_t *__attr, void *__stackaddr,\n      size_t __stacksize) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int pthread_attr_setaffinity_np (pthread_attr_t *__attr,\n     size_t __cpusetsize,\n     __const cpu_set_t *__cpuset)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));\n\n\n\nextern int pthread_attr_getaffinity_np (__const pthread_attr_t *__attr,\n     size_t __cpusetsize,\n     cpu_set_t *__cpuset)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));\n\n\n\n\n\nextern int pthread_getattr_np (pthread_t __th, pthread_attr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\n\n\n\nextern int pthread_setschedparam (pthread_t __target_thread, int __policy,\n      __const struct sched_param *__param)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));\n\n\nextern int pthread_getschedparam (pthread_t __target_thread,\n      int *__restrict __policy,\n      struct sched_param *__restrict __param)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n\n\nextern int pthread_setschedprio (pthread_t __target_thread, int __prio)\n     __attribute__ ((__nothrow__));\n\n\n\n\nextern int pthread_getconcurrency (void) __attribute__ ((__nothrow__));\n\n\nextern int pthread_setconcurrency (int __level) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern int pthread_yield (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern int pthread_setaffinity_np (pthread_t __th, size_t __cpusetsize,\n       __const cpu_set_t *__cpuset)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));\n\n\nextern int pthread_getaffinity_np (pthread_t __th, size_t __cpusetsize,\n       cpu_set_t *__cpuset)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));\n// # 465 \"/usr/include/pthread.h\" 3 4\nextern int pthread_once (pthread_once_t *__once_control,\n    void (*__init_routine) (void)) __attribute__ ((__nonnull__ (1, 2)));\n// # 477 \"/usr/include/pthread.h\" 3 4\nextern int pthread_setcancelstate (int __state, int *__oldstate);\n\n\n\nextern int pthread_setcanceltype (int __type, int *__oldtype);\n\n\nextern int pthread_cancel (pthread_t __th);\n\n\n\n\nextern void pthread_testcancel (void);\n\n\n\n\ntypedef struct\n{\n  struct\n  {\n    __jmp_buf __cancel_jmp_buf;\n    int __mask_was_saved;\n  } __cancel_jmp_buf[1];\n  void *__pad[4];\n} __pthread_unwind_buf_t __attribute__ ((__aligned__));\n// # 511 \"/usr/include/pthread.h\" 3 4\nstruct __pthread_cleanup_frame\n{\n  void (*__cancel_routine) (void *);\n  void *__cancel_arg;\n  int __do_it;\n  int __cancel_type;\n};\n// # 651 \"/usr/include/pthread.h\" 3 4\nextern void __pthread_register_cancel (__pthread_unwind_buf_t *__buf)\n     ;\n// # 662 \"/usr/include/pthread.h\" 3 4\nextern void __pthread_unregister_cancel (__pthread_unwind_buf_t *__buf)\n  ;\n// # 685 \"/usr/include/pthread.h\" 3 4\nextern void __pthread_register_cancel_defer (__pthread_unwind_buf_t *__buf)\n     ;\n// # 697 \"/usr/include/pthread.h\" 3 4\nextern void __pthread_unregister_cancel_restore (__pthread_unwind_buf_t *__buf)\n  ;\n\n\n\nextern void __pthread_unwind_next (__pthread_unwind_buf_t *__buf)\n     __attribute__ ((__noreturn__))\n\n     __attribute__ ((__weak__))\n\n     ;\n\n\n\nstruct __jmp_buf_tag;\nextern int __sigsetjmp (struct __jmp_buf_tag *__env, int __savemask) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int pthread_mutex_init (pthread_mutex_t *__mutex,\n          __const pthread_mutexattr_t *__mutexattr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_mutex_destroy (pthread_mutex_t *__mutex)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_mutex_trylock (pthread_mutex_t *__mutex)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_mutex_lock (pthread_mutex_t *__mutex)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_mutex_timedlock (pthread_mutex_t *__restrict __mutex,\n                                    __const struct timespec *__restrict\n                                    __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern int pthread_mutex_unlock (pthread_mutex_t *__mutex)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int pthread_mutex_getprioceiling (__const pthread_mutex_t *\n      __restrict __mutex,\n      int *__restrict __prioceiling)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern int pthread_mutex_setprioceiling (pthread_mutex_t *__restrict __mutex,\n      int __prioceiling,\n      int *__restrict __old_ceiling)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));\n\n\n\n\n\nextern int pthread_mutex_consistent_np (pthread_mutex_t *__mutex)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\n\nextern int pthread_mutexattr_init (pthread_mutexattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_mutexattr_destroy (pthread_mutexattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_mutexattr_getpshared (__const pthread_mutexattr_t *\n      __restrict __attr,\n      int *__restrict __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_mutexattr_setpshared (pthread_mutexattr_t *__attr,\n      int __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_mutexattr_gettype (__const pthread_mutexattr_t *__restrict\n          __attr, int *__restrict __kind)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\nextern int pthread_mutexattr_settype (pthread_mutexattr_t *__attr, int __kind)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_mutexattr_getprotocol (__const pthread_mutexattr_t *\n       __restrict __attr,\n       int *__restrict __protocol)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern int pthread_mutexattr_setprotocol (pthread_mutexattr_t *__attr,\n       int __protocol)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_mutexattr_getprioceiling (__const pthread_mutexattr_t *\n          __restrict __attr,\n          int *__restrict __prioceiling)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_mutexattr_setprioceiling (pthread_mutexattr_t *__attr,\n          int __prioceiling)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int pthread_mutexattr_getrobust_np (__const pthread_mutexattr_t *__attr,\n        int *__robustness)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_mutexattr_setrobust_np (pthread_mutexattr_t *__attr,\n        int __robustness)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 845 \"/usr/include/pthread.h\" 3 4\nextern int pthread_rwlock_init (pthread_rwlock_t *__restrict __rwlock,\n    __const pthread_rwlockattr_t *__restrict\n    __attr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_rwlock_destroy (pthread_rwlock_t *__rwlock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_rwlock_rdlock (pthread_rwlock_t *__rwlock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_rwlock_tryrdlock (pthread_rwlock_t *__rwlock)\n  __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_rwlock_timedrdlock (pthread_rwlock_t *__restrict __rwlock,\n           __const struct timespec *__restrict\n           __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern int pthread_rwlock_wrlock (pthread_rwlock_t *__rwlock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_rwlock_trywrlock (pthread_rwlock_t *__rwlock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_rwlock_timedwrlock (pthread_rwlock_t *__restrict __rwlock,\n           __const struct timespec *__restrict\n           __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern int pthread_rwlock_unlock (pthread_rwlock_t *__rwlock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int pthread_rwlockattr_init (pthread_rwlockattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_rwlockattr_destroy (pthread_rwlockattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_rwlockattr_getpshared (__const pthread_rwlockattr_t *\n       __restrict __attr,\n       int *__restrict __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_rwlockattr_setpshared (pthread_rwlockattr_t *__attr,\n       int __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_rwlockattr_getkind_np (__const pthread_rwlockattr_t *\n       __restrict __attr,\n       int *__restrict __pref)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_rwlockattr_setkind_np (pthread_rwlockattr_t *__attr,\n       int __pref) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\n\nextern int pthread_cond_init (pthread_cond_t *__restrict __cond,\n         __const pthread_condattr_t *__restrict\n         __cond_attr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_cond_destroy (pthread_cond_t *__cond)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_cond_signal (pthread_cond_t *__cond)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_cond_broadcast (pthread_cond_t *__cond)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int pthread_cond_wait (pthread_cond_t *__restrict __cond,\n         pthread_mutex_t *__restrict __mutex)\n     __attribute__ ((__nonnull__ (1, 2)));\n// # 957 \"/usr/include/pthread.h\" 3 4\nextern int pthread_cond_timedwait (pthread_cond_t *__restrict __cond,\n       pthread_mutex_t *__restrict __mutex,\n       __const struct timespec *__restrict\n       __abstime) __attribute__ ((__nonnull__ (1, 2, 3)));\n\n\n\n\nextern int pthread_condattr_init (pthread_condattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_condattr_destroy (pthread_condattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_condattr_getpshared (__const pthread_condattr_t *\n                                        __restrict __attr,\n                                        int *__restrict __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_condattr_setpshared (pthread_condattr_t *__attr,\n                                        int __pshared) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_condattr_getclock (__const pthread_condattr_t *\n          __restrict __attr,\n          __clockid_t *__restrict __clock_id)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_condattr_setclock (pthread_condattr_t *__attr,\n          __clockid_t __clock_id)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 1001 \"/usr/include/pthread.h\" 3 4\nextern int pthread_spin_init (pthread_spinlock_t *__lock, int __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_spin_destroy (pthread_spinlock_t *__lock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_spin_lock (pthread_spinlock_t *__lock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_spin_trylock (pthread_spinlock_t *__lock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_spin_unlock (pthread_spinlock_t *__lock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int pthread_barrier_init (pthread_barrier_t *__restrict __barrier,\n     __const pthread_barrierattr_t *__restrict\n     __attr, unsigned int __count)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_barrier_destroy (pthread_barrier_t *__barrier)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_barrier_wait (pthread_barrier_t *__barrier)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_barrierattr_init (pthread_barrierattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_barrierattr_destroy (pthread_barrierattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_barrierattr_getpshared (__const pthread_barrierattr_t *\n        __restrict __attr,\n        int *__restrict __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_barrierattr_setpshared (pthread_barrierattr_t *__attr,\n                                           int __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 1068 \"/usr/include/pthread.h\" 3 4\nextern int pthread_key_create (pthread_key_t *__key,\n          void (*__destr_function) (void *))\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_key_delete (pthread_key_t __key) __attribute__ ((__nothrow__));\n\n\nextern void *pthread_getspecific (pthread_key_t __key) __attribute__ ((__nothrow__));\n\n\nextern int pthread_setspecific (pthread_key_t __key,\n    __const void *__pointer) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern int pthread_getcpuclockid (pthread_t __thread_id,\n      __clockid_t *__clock_id)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n// # 1102 \"/usr/include/pthread.h\" 3 4\nextern int pthread_atfork (void (*__prepare) (void),\n      void (*__parent) (void),\n      void (*__child) (void)) __attribute__ ((__nothrow__));\n// # 1116 \"/usr/include/pthread.h\" 3 4\n\n// # 34 \"threading.h\" 2\n\n\nextern pthread_mutexattr_t cherokee_mutexattr_fast;\nextern pthread_mutexattr_t cherokee_mutexattr_errorcheck;\n// # 48 \"threading.h\"\nextern pthread_key_t thread_error_writer_ptr;\nextern pthread_key_t thread_connection_ptr;\n\n\n\n\nret_t cherokee_threading_init (void);\nret_t cherokee_threading_free (void);\n// # 38 \"common-internal.h\" 2\n// # 1 \"error_log.h\" 1\n// # 32 \"error_log.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"error_log.h\" 2\n// # 1 \"../cherokee/logger.h\" 1\n// # 32 \"../cherokee/logger.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/logger.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 32 \"../cherokee/buffer.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/buffer.h\" 2\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 152 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 3 4\ntypedef long int ptrdiff_t;\n// # 34 \"../cherokee/buffer.h\" 2\n\n\n// # 1 \"/usr/include/string.h\" 1 3 4\n// # 28 \"/usr/include/string.h\" 3 4\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 34 \"/usr/include/string.h\" 2 3 4\n\n\n\n\nextern void *memcpy (void *__restrict __dest,\n       __const void *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern void *memmove (void *__dest, __const void *__src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\nextern void *memccpy (void *__restrict __dest, __const void *__restrict __src,\n        int __c, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int memcmp (__const void *__s1, __const void *__s2, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern void *memchr (__const void *__s, int __c, size_t __n)\n      __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern void *rawmemchr (__const void *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern void *memrchr (__const void *__s, int __c, size_t __n)\n      __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern char *strcpy (char *__restrict __dest, __const char *__restrict __src)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern char *strncpy (char *__restrict __dest,\n        __const char *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern char *strcat (char *__restrict __dest, __const char *__restrict __src)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern char *strncat (char *__restrict __dest, __const char *__restrict __src,\n        size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int strcmp (__const char *__s1, __const char *__s2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern int strncmp (__const char *__s1, __const char *__s2, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int strcoll (__const char *__s1, __const char *__s2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern size_t strxfrm (char *__restrict __dest,\n         __const char *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n// # 121 \"/usr/include/string.h\" 3 4\nextern int strcoll_l (__const char *__s1, __const char *__s2, __locale_t __l)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));\n\nextern size_t strxfrm_l (char *__dest, __const char *__src, size_t __n,\n    __locale_t __l) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n\n\n\n\nextern char *strdup (__const char *__s)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern char *strndup (__const char *__string, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));\n// # 165 \"/usr/include/string.h\" 3 4\n\n\nextern char *strchr (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\nextern char *strrchr (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern char *strchrnul (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern size_t strcspn (__const char *__s, __const char *__reject)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern size_t strspn (__const char *__s, __const char *__accept)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern char *strpbrk (__const char *__s, __const char *__accept)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern char *strstr (__const char *__haystack, __const char *__needle)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern char *strtok (char *__restrict __s, __const char *__restrict __delim)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\nextern char *__strtok_r (char *__restrict __s,\n    __const char *__restrict __delim,\n    char **__restrict __save_ptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n\nextern char *strtok_r (char *__restrict __s, __const char *__restrict __delim,\n         char **__restrict __save_ptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n\n\n\n\nextern char *strcasestr (__const char *__haystack, __const char *__needle)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\nextern void *memmem (__const void *__haystack, size_t __haystacklen,\n       __const void *__needle, size_t __needlelen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 3)));\n\n\n\nextern void *__mempcpy (void *__restrict __dest,\n   __const void *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern void *mempcpy (void *__restrict __dest,\n        __const void *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern size_t strlen (__const char *__s)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern size_t strnlen (__const char *__string, size_t __maxlen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern char *strerror (int __errnum) __attribute__ ((__nothrow__));\n\n// # 281 \"/usr/include/string.h\" 3 4\nextern char *strerror_r (int __errnum, char *__buf, size_t __buflen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\n\nextern void __bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern void bcopy (__const void *__src, void *__dest, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int bcmp (__const void *__s1, __const void *__s2, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern char *index (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern char *rindex (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int ffs (int __i) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\n\n\nextern int ffsl (long int __l) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n__extension__ extern int ffsll (long long int __ll)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\n\n\nextern int strcasecmp (__const char *__s1, __const char *__s2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int strncasecmp (__const char *__s1, __const char *__s2, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern int strcasecmp_l (__const char *__s1, __const char *__s2,\n    __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));\n\nextern int strncasecmp_l (__const char *__s1, __const char *__s2,\n     size_t __n, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));\n\n\n\n\n\nextern char *strsep (char **__restrict __stringp,\n       __const char *__restrict __delim)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\nextern int strverscmp (__const char *__s1, __const char *__s2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern char *strsignal (int __sig) __attribute__ ((__nothrow__));\n\n\nextern char *__stpcpy (char *__restrict __dest, __const char *__restrict __src)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern char *stpcpy (char *__restrict __dest, __const char *__restrict __src)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern char *__stpncpy (char *__restrict __dest,\n   __const char *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern char *stpncpy (char *__restrict __dest,\n        __const char *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern char *strfry (char *__string) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern void *memfrob (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern char *basename (__const char *__filename) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 426 \"/usr/include/string.h\" 3 4\n\n// # 37 \"../cherokee/buffer.h\" 2\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 1 3 4\n// # 11 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/syslimits.h\" 1 3 4\n\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 1 3 4\n// # 122 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 3 4\n// # 1 \"/usr/include/limits.h\" 1 3 4\n// # 145 \"/usr/include/limits.h\" 3 4\n// # 1 \"/usr/include/bits/posix1_lim.h\" 1 3 4\n// # 153 \"/usr/include/bits/posix1_lim.h\" 3 4\n// # 1 \"/usr/include/bits/local_lim.h\" 1 3 4\n// # 36 \"/usr/include/bits/local_lim.h\" 3 4\n// # 1 \"/usr/include/linux/limits.h\" 1 3 4\n// # 37 \"/usr/include/bits/local_lim.h\" 2 3 4\n// # 154 \"/usr/include/bits/posix1_lim.h\" 2 3 4\n// # 146 \"/usr/include/limits.h\" 2 3 4\n\n\n\n// # 1 \"/usr/include/bits/posix2_lim.h\" 1 3 4\n// # 150 \"/usr/include/limits.h\" 2 3 4\n\n\n\n// # 1 \"/usr/include/bits/xopen_lim.h\" 1 3 4\n// # 34 \"/usr/include/bits/xopen_lim.h\" 3 4\n// # 1 \"/usr/include/bits/stdio_lim.h\" 1 3 4\n// # 35 \"/usr/include/bits/xopen_lim.h\" 2 3 4\n// # 154 \"/usr/include/limits.h\" 2 3 4\n// # 123 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 2 3 4\n// # 8 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/syslimits.h\" 2 3 4\n// # 12 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 2 3 4\n// # 38 \"../cherokee/buffer.h\" 2\n\n\n\n\ntypedef struct {\n char *buf;\n cuint_t size;\n cuint_t len;\n} cherokee_buffer_t;\n// # 60 \"../cherokee/buffer.h\"\nret_t cherokee_buffer_new (cherokee_buffer_t **buf);\nret_t cherokee_buffer_free (cherokee_buffer_t *buf);\nret_t cherokee_buffer_init (cherokee_buffer_t *buf);\nret_t cherokee_buffer_mrproper (cherokee_buffer_t *buf);\nvoid cherokee_buffer_fake (cherokee_buffer_t *buf, const char *str, cuint_t len);\n\nvoid cherokee_buffer_clean (cherokee_buffer_t *buf);\nret_t cherokee_buffer_dup (cherokee_buffer_t *buf, cherokee_buffer_t **dup);\nvoid cherokee_buffer_swap_buffers (cherokee_buffer_t *buf, cherokee_buffer_t *second);\n\nret_t cherokee_buffer_add (cherokee_buffer_t *buf, const char *txt, size_t size);\nret_t cherokee_buffer_add_long10 (cherokee_buffer_t *buf, clong_t lNum);\nret_t cherokee_buffer_add_llong10 (cherokee_buffer_t *buf, cllong_t lNum);\nret_t cherokee_buffer_add_ulong10 (cherokee_buffer_t *buf, culong_t ulNum);\nret_t cherokee_buffer_add_ullong10 (cherokee_buffer_t *buf, cullong_t ulNum);\nret_t cherokee_buffer_add_ulong16 (cherokee_buffer_t *buf, culong_t ulNum);\nret_t cherokee_buffer_add_ullong16 (cherokee_buffer_t *buf, cullong_t ulNum);\nret_t cherokee_buffer_add_va (cherokee_buffer_t *buf, const char *format, ...);\nret_t cherokee_buffer_add_va_fixed (cherokee_buffer_t *buf, const char *format, ...);\nret_t cherokee_buffer_add_va_list (cherokee_buffer_t *buf, const char *format, va_list args);\nret_t cherokee_buffer_add_char (cherokee_buffer_t *buf, char c);\nret_t cherokee_buffer_add_char_n (cherokee_buffer_t *buf, char c, int n);\nret_t cherokee_buffer_add_buffer (cherokee_buffer_t *buf, cherokee_buffer_t *buf2);\nret_t cherokee_buffer_add_buffer_slice (cherokee_buffer_t *buf, cherokee_buffer_t *buf2, ssize_t begin, ssize_t end);\nret_t cherokee_buffer_add_fsize (cherokee_buffer_t *buf, unsigned long long size);\nret_t cherokee_buffer_prepend (cherokee_buffer_t *buf, const char *txt, size_t size);\n\ncint_t cherokee_buffer_cmp (cherokee_buffer_t *buf, char *txt, cuint_t txt_len);\ncint_t cherokee_buffer_cmp_buf (cherokee_buffer_t *buf, cherokee_buffer_t *buf2);\ncint_t cherokee_buffer_case_cmp (cherokee_buffer_t *buf, char *txt, cuint_t txt_len);\ncint_t cherokee_buffer_case_cmp_buf (cherokee_buffer_t *buf, cherokee_buffer_t *buf2);\n\nret_t cherokee_buffer_read_file (cherokee_buffer_t *buf, char *filename);\nret_t cherokee_buffer_read_from_fd (cherokee_buffer_t *buf, int fd, size_t size, size_t *ret_size);\n\nret_t cherokee_buffer_move_to_begin (cherokee_buffer_t *buf, cuint_t pos);\nret_t cherokee_buffer_drop_ending (cherokee_buffer_t *buf, cuint_t num_chars);\nret_t cherokee_buffer_multiply (cherokee_buffer_t *buf, int num);\nret_t cherokee_buffer_swap_chars (cherokee_buffer_t *buf, char a, char b);\nret_t cherokee_buffer_remove_dups (cherokee_buffer_t *buf, char c);\nret_t cherokee_buffer_remove_string (cherokee_buffer_t *buf, char *string, int string_len);\nret_t cherokee_buffer_remove_chunk (cherokee_buffer_t *buf, cuint_t from, cuint_t len);\nret_t cherokee_buffer_replace_string (cherokee_buffer_t *buf, const char *subs, int subs_len, const char *repl, int repl_len);\nret_t cherokee_buffer_substitute_string (cherokee_buffer_t *bufsrc, cherokee_buffer_t *bufdst, char *subs, int subs_len, char *repl, int repl_len);\nret_t cherokee_buffer_trim (cherokee_buffer_t *buf);\nret_t cherokee_buffer_insert (cherokee_buffer_t *buf, char *txt, size_t txt_len, size_t pos);\nret_t cherokee_buffer_insert_buffer (cherokee_buffer_t *buf, cherokee_buffer_t *src, size_t pos);\n\nret_t cherokee_buffer_get_utf8_len (cherokee_buffer_t *buf, cuint_t *len);\nret_t cherokee_buffer_ensure_addlen (cherokee_buffer_t *buf, size_t alen);\nret_t cherokee_buffer_ensure_size (cherokee_buffer_t *buf, size_t size);\n\nint cherokee_buffer_is_ending (cherokee_buffer_t *buf, char c);\nchar cherokee_buffer_end_char (cherokee_buffer_t *buf);\nsize_t cherokee_buffer_cnt_spn (cherokee_buffer_t *buf, cuint_t offset, const char *str);\nsize_t cherokee_buffer_cnt_cspn (cherokee_buffer_t *buf, cuint_t offset, const char *str);\n\ncrc_t cherokee_buffer_crc32 (cherokee_buffer_t *buf);\nret_t cherokee_buffer_encode_base64 (cherokee_buffer_t *buf, cherokee_buffer_t *encoded);\nret_t cherokee_buffer_decode_base64 (cherokee_buffer_t *buf);\nret_t cherokee_buffer_encode_md5 (cherokee_buffer_t *buf, cherokee_buffer_t *encoded);\nret_t cherokee_buffer_encode_md5_digest (cherokee_buffer_t *buf);\nret_t cherokee_buffer_encode_sha1 (cherokee_buffer_t *buf, cherokee_buffer_t *encoded);\nret_t cherokee_buffer_encode_sha1_digest (cherokee_buffer_t *buf);\nret_t cherokee_buffer_encode_sha1_base64 (cherokee_buffer_t *buf, cherokee_buffer_t *encoded);\nret_t cherokee_buffer_encode_sha512 (cherokee_buffer_t *buf, cherokee_buffer_t *encoded);\nret_t cherokee_buffer_encode_sha512_digest (cherokee_buffer_t *buf);\nret_t cherokee_buffer_encode_sha512_base64 (cherokee_buffer_t *buf, cherokee_buffer_t *encoded);\nret_t cherokee_buffer_encode_hex (cherokee_buffer_t *buf, cherokee_buffer_t *encoded);\nret_t cherokee_buffer_decode_hex (cherokee_buffer_t *buf);\nret_t cherokee_buffer_unescape_uri (cherokee_buffer_t *buf);\nret_t cherokee_buffer_escape_uri (cherokee_buffer_t *buf, cherokee_buffer_t *src);\nret_t cherokee_buffer_escape_uri_delims (cherokee_buffer_t *buf, cherokee_buffer_t *src);\nret_t cherokee_buffer_escape_arg (cherokee_buffer_t *buf, cherokee_buffer_t *src);\nret_t cherokee_buffer_add_escape_html (cherokee_buffer_t *buf, cherokee_buffer_t *src);\nret_t cherokee_buffer_escape_html (cherokee_buffer_t *buf, cherokee_buffer_t *src);\nret_t cherokee_buffer_add_comma_marks (cherokee_buffer_t *buf);\n\nret_t cherokee_buffer_to_lowcase (cherokee_buffer_t *buf);\nret_t cherokee_buffer_split_lines (cherokee_buffer_t *buf, int columns, const char *indent);\n\nret_t cherokee_buffer_print_debug (cherokee_buffer_t *buf, int length);\n\n\n\n// # 34 \"../cherokee/logger.h\" 2\n// # 1 \"../cherokee/module.h\" 1\n// # 32 \"../cherokee/module.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/module.h\" 2\n// # 1 \"../cherokee/plugin.h\" 1\n// # 32 \"../cherokee/plugin.h\"\n// # 1 \"../cherokee/http.h\" 1\n// # 32 \"../cherokee/http.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/http.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"../cherokee/http.h\" 2\n\n\n\n\ntypedef enum {\n http_version_09,\n http_version_10,\n http_version_11,\n http_version_unknown\n} cherokee_http_version_t;\n\ntypedef enum {\n http_unknown = 0LL,\n http_all_methods = 0x1FFFFFFFFLL,\n\n http_get = 1,\n http_post = 1LL << 1,\n http_head = 1LL << 2,\n http_put = 1LL << 3,\n http_options = 1LL << 4,\n http_delete = 1LL << 5,\n http_trace = 1LL << 6,\n http_connect = 1LL << 7,\n\n http_copy = 1LL << 8,\n http_lock = 1LL << 9,\n http_mkcol = 1LL << 10,\n http_move = 1LL << 11,\n http_notify = 1LL << 12,\n http_poll = 1LL << 13,\n http_propfind = 1LL << 14,\n http_proppatch = 1LL << 15,\n http_search = 1LL << 16,\n http_subscribe = 1LL << 17,\n http_unlock = 1LL << 18,\n http_unsubscribe = 1LL << 19,\n http_report = 1LL << 20,\n http_patch = 1LL << 21,\n http_version_control = 1LL << 22,\n http_checkout = 1LL << 23,\n http_uncheckout = 1LL << 24,\n http_checkin = 1LL << 25,\n http_update = 1LL << 26,\n http_label = 1LL << 27,\n http_mkworkspace = 1LL << 28,\n http_mkactivity = 1LL << 29,\n http_baseline_control = 1LL << 30,\n http_merge = 1LL << 31,\n http_invalid = 1LL << 32,\n http_purge = 1LL << 33\n} cherokee_http_method_t;\n\n\n\n\n\ntypedef enum {\n http_auth_nothing = 0,\n http_auth_basic = 1,\n http_auth_digest = 1 << 1\n} cherokee_http_auth_t;\n\ntypedef enum {\n http_upgrade_nothing,\n http_upgrade_http11,\n http_upgrade_tls10\n} cherokee_http_upgrade_t;\n\ntypedef enum {\n http_unset = 0,\n http_continue = 100,\n http_switching_protocols = 101,\n http_processing = 102,\n http_ok = 200,\n http_created = 201,\n http_accepted = 202,\n http_non_authoritative_info = 203,\n http_no_content = 204,\n http_reset_content = 205,\n http_partial_content = 206,\n http_multi_status = 207,\n http_im_used = 226,\n http_multiple_choices = 300,\n http_moved_permanently = 301,\n http_moved_temporarily = 302,\n  http_see_other = 303,\n http_not_modified = 304,\n http_use_proxy = 305,\n http_temporary_redirect = 307,\n http_bad_request = 400,\n http_unauthorized = 401,\n http_payment_required = 402,\n http_access_denied = 403,\n http_not_found = 404,\n http_method_not_allowed = 405,\n http_not_acceptable = 406,\n http_proxy_auth_required = 407,\n http_request_timeout = 408,\n http_conflict = 409,\n http_gone = 410,\n http_length_required = 411,\n http_precondition_failed = 412,\n  http_request_entity_too_large = 413,\n http_request_uri_too_long = 414,\n http_unsupported_media_type = 415,\n http_range_not_satisfiable = 416,\n http_expectation_failed = 417,\n http_unprocessable_entity = 422,\n http_locked = 423,\n http_failed_dependency = 424,\n http_unordered_collection = 425,\n http_upgrade_required = 426,\n http_retry_with = 449,\n http_internal_error = 500,\n http_not_implemented = 501,\n http_bad_gateway = 502,\n http_service_unavailable = 503,\n http_gateway_timeout = 504,\n http_version_not_supported = 505,\n http_variant_also_negotiates = 506,\n http_insufficient_storage = 507,\n http_bandwidth_limit_exceeded = 509,\n http_not_extended = 510\n} cherokee_http_t;\n// # 249 \"../cherokee/http.h\"\nret_t cherokee_http_method_to_string (cherokee_http_method_t method, const char **str, cuint_t *str_len);\nret_t cherokee_http_string_to_method (cherokee_buffer_t *string, cherokee_http_method_t *method);\nret_t cherokee_http_version_to_string (cherokee_http_version_t version, const char **str, cuint_t *str_len);\nret_t cherokee_http_code_to_string (cherokee_http_t code, const char **str);\nret_t cherokee_http_code_copy (cherokee_http_t code, cherokee_buffer_t *buf);\n\n\n// # 33 \"../cherokee/plugin.h\" 2\n\n\n\n\n\n\ntypedef enum {\n cherokee_generic = 1,\n cherokee_logger = 1 << 1,\n cherokee_handler = 1 << 2,\n cherokee_encoder = 1 << 3,\n cherokee_validator = 1 << 4,\n cherokee_balancer = 1 << 5,\n cherokee_rule = 1 << 6,\n cherokee_vrule = 1 << 7,\n cherokee_cryptor = 1 << 8,\n cherokee_collector = 1 << 9\n} cherokee_plugin_type_t;\n\n\n\n\ntypedef struct {\n cherokee_plugin_type_t type;\n void *instance;\n void *configure;\n const char *name;\n} cherokee_plugin_info_t;\n\n\n\n\n\n\ntypedef struct {\n cherokee_plugin_info_t plugin;\n cherokee_http_method_t valid_methods;\n} cherokee_plugin_info_handler_t;\n\ntypedef struct {\n cherokee_plugin_info_t plugin;\n cherokee_http_auth_t valid_methods;\n} cherokee_plugin_info_validator_t;\n// # 153 \"../cherokee/plugin.h\"\n\n// # 34 \"../cherokee/module.h\" 2\n// # 1 \"../cherokee/config_node.h\" 1\n// # 32 \"../cherokee/config_node.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/config_node.h\" 2\n// # 1 \"../cherokee/list.h\" 1\n// # 32 \"../cherokee/list.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/list.h\" 2\n\n\n\n\nstruct list_entry {\n struct list_entry *next;\n struct list_entry *prev;\n};\n\ntypedef struct list_entry cherokee_list_t;\ntypedef struct list_entry cherokee_list_entry_t;\n// # 67 \"../cherokee/list.h\"\nstatic inline int\ncherokee_list_empty (cherokee_list_t *list)\n{\n return (list->next == list);\n}\n\nstatic inline void\ncherokee_list_add (cherokee_list_t *new_entry, cherokee_list_t *head)\n{\n new_entry->next = head->next;\n new_entry->prev = head;\n head->next->prev = new_entry;\n head->next = new_entry;\n}\n\nstatic inline void\ncherokee_list_add_tail (cherokee_list_t *new_entry, cherokee_list_t *head)\n{\n new_entry->next = head;\n new_entry->prev = head->prev;\n head->prev->next = new_entry;\n head->prev = new_entry;\n}\n\nstatic inline void\ncherokee_list_del (cherokee_list_t *entry)\n{\n entry->next->prev = entry->prev;\n entry->prev->next = entry->next;\n}\n\nstatic inline void\ncherokee_list_reparent (cherokee_list_t *list, cherokee_list_t *new_entry)\n{\n if (cherokee_list_empty(list))\n  return;\n\n new_entry->next = list->next;\n new_entry->prev = list->prev;\n new_entry->prev->next = new_entry;\n new_entry->next->prev = new_entry;\n}\n\nvoid cherokee_list_sort (cherokee_list_t *head, int (*cmp)(cherokee_list_t *a, cherokee_list_t *b));\nret_t cherokee_list_get_len (cherokee_list_t *head, size_t *len);\n\n\n\n\n\ntypedef void (*cherokee_list_free_func) (void *);\n\ntypedef struct {\n cherokee_list_entry_t list;\n void *info;\n} cherokee_list_item_t;\n\n\n\n\nret_t cherokee_list_add_content (cherokee_list_t *head, void *item);\nret_t cherokee_list_add_tail_content (cherokee_list_t *head, void *item);\nret_t cherokee_list_invert (cherokee_list_t *head);\n\nret_t cherokee_list_content_free (cherokee_list_t *head, cherokee_list_free_func free_func);\nret_t cherokee_list_content_free_item (cherokee_list_t *head, cherokee_list_free_func free_func);\nret_t cherokee_list_content_free_item_simple (cherokee_list_t *head);\n\n\n\n// # 34 \"../cherokee/config_node.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 35 \"../cherokee/config_node.h\" 2\n\n\n\ntypedef struct {\n    cherokee_list_t entry;\n    cherokee_list_t child;\n\n    cherokee_buffer_t key;\n    cherokee_buffer_t val;\n} cherokee_config_node_t;\n\n\n\n\n\n\ntypedef ret_t (* cherokee_config_node_while_func_t) (cherokee_config_node_t *, void *);\ntypedef ret_t (* cherokee_config_node_list_func_t) (char *, void *);\n\nret_t cherokee_config_node_new (cherokee_config_node_t **conf);\nret_t cherokee_config_node_free (cherokee_config_node_t *conf);\nret_t cherokee_config_node_init (cherokee_config_node_t *conf);\nret_t cherokee_config_node_mrproper (cherokee_config_node_t *conf);\n\nret_t cherokee_config_node_add (cherokee_config_node_t *conf, const char *key, cherokee_buffer_t *val);\nret_t cherokee_config_node_add_buf (cherokee_config_node_t *conf, cherokee_buffer_t *key, cherokee_buffer_t *val);\n\nret_t cherokee_config_node_get (cherokee_config_node_t *conf, const char *key, cherokee_config_node_t **entry);\nret_t cherokee_config_node_get_buf (cherokee_config_node_t *conf, cherokee_buffer_t *key, cherokee_config_node_t **entry);\n\nret_t cherokee_config_node_while (cherokee_config_node_t *conf, cherokee_config_node_while_func_t func, void *data);\n\n\n\nret_t cherokee_config_node_read (cherokee_config_node_t *conf, const char *key, cherokee_buffer_t **buf);\nret_t cherokee_config_node_copy (cherokee_config_node_t *conf, const char *key, cherokee_buffer_t *buf);\n\nret_t cherokee_config_node_read_path (cherokee_config_node_t *conf, const char *key, cherokee_buffer_t **buf);\nret_t cherokee_config_node_read_int (cherokee_config_node_t *conf, const char *key, int *num);\nret_t cherokee_config_node_read_long (cherokee_config_node_t *conf, const char *key, long *num);\nret_t cherokee_config_node_read_bool (cherokee_config_node_t *conf, const char *key, cherokee_boolean_t *val);\nret_t cherokee_config_node_read_list (cherokee_config_node_t *conf, const char *key,\n           cherokee_config_node_list_func_t func, void *param);\n\nret_t cherokee_config_node_convert_list (cherokee_config_node_t *conf, const char *key, cherokee_list_t *list);\n\n\n// # 35 \"../cherokee/module.h\" 2\n// # 1 \"../cherokee/server.h\" 1\n// # 32 \"../cherokee/server.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/server.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"../cherokee/server.h\" 2\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 35 \"../cherokee/server.h\" 2\n\n\n\n\ntypedef struct cherokee_server cherokee_server_t;\n\n\nret_t cherokee_server_new (cherokee_server_t **srv);\nret_t cherokee_server_free (cherokee_server_t *srv);\nret_t cherokee_server_clean (cherokee_server_t *srv);\n\nret_t cherokee_server_initialize (cherokee_server_t *srv);\nret_t cherokee_server_step (cherokee_server_t *srv);\nret_t cherokee_server_stop (cherokee_server_t *srv);\n\nvoid cherokee_server_set_min_latency (cherokee_server_t *srv, int msecs);\nret_t cherokee_server_unlock_threads (cherokee_server_t *srv);\n\nret_t cherokee_server_read_config_file (cherokee_server_t *srv, const char *filename);\nret_t cherokee_server_read_config_string (cherokee_server_t *srv, cherokee_buffer_t *string);\n\nret_t cherokee_server_daemonize (cherokee_server_t *srv);\nret_t cherokee_server_write_pidfile (cherokee_server_t *srv);\n\nret_t cherokee_server_get_conns_num (cherokee_server_t *srv, cuint_t *num);\nret_t cherokee_server_get_active_conns (cherokee_server_t *srv, cuint_t *num);\nret_t cherokee_server_get_reusable_conns (cherokee_server_t *srv, cuint_t *num);\n\nret_t cherokee_server_set_backup_mode (cherokee_server_t *srv, cherokee_boolean_t active);\nret_t cherokee_server_get_backup_mode (cherokee_server_t *srv, cherokee_boolean_t *active);\nret_t cherokee_server_log_reopen (cherokee_server_t *srv);\n\n\n\nret_t cherokee_server_handle_HUP (cherokee_server_t *srv);\nret_t cherokee_server_handle_TERM (cherokee_server_t *srv);\nvoid cherokee_server_handle_panic (cherokee_server_t *srv);\n\n\n\n// # 36 \"../cherokee/module.h\" 2\n\n\n\n\n\ntypedef void * module_func_init_t;\ntypedef ret_t (* module_func_new_t) (void *);\ntypedef ret_t (* module_func_free_t) (void *);\ntypedef ret_t (* module_func_props_free_t) (void *);\ntypedef ret_t (* module_func_configure_t) (cherokee_config_node_t *conf, cherokee_server_t *srv, void **props);\n\n\n\n\ntypedef struct {\n module_func_props_free_t free;\n} cherokee_module_props_t;\n\n\n\n\n\n\n\ntypedef struct {\n cherokee_plugin_info_t *info;\n cherokee_module_props_t *props;\n\n module_func_new_t instance;\n void *init;\n module_func_free_t free;\n} cherokee_module_t;\n\n\n\n\n\n\nret_t cherokee_module_init_base (cherokee_module_t *module, cherokee_module_props_t *props, cherokee_plugin_info_t *info);\nret_t cherokee_module_get_name (cherokee_module_t *module, const char **name);\n\n\n\nret_t cherokee_module_props_init_base (cherokee_module_props_t *prop, module_func_props_free_t free_func);\nret_t cherokee_module_props_free_base (cherokee_module_props_t *prop);\nret_t cherokee_module_props_free (cherokee_module_props_t *prop);\n\n\n\n// # 35 \"../cherokee/logger.h\" 2\n// # 1 \"../cherokee/logger_writer.h\" 1\n// # 32 \"../cherokee/logger_writer.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/logger_writer.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"../cherokee/logger_writer.h\" 2\n// # 1 \"../cherokee/config_node.h\" 1\n// # 35 \"../cherokee/logger_writer.h\" 2\n\n\n\n\n\ntypedef enum {\n cherokee_logger_writer_stderr,\n cherokee_logger_writer_file,\n cherokee_logger_writer_syslog,\n cherokee_logger_writer_pipe\n} cherokee_logger_writer_types_t;\n\ntypedef struct {\n cherokee_list_t listed;\n cherokee_logger_writer_types_t type;\n\n int fd;\n size_t max_bufsize;\n cherokee_buffer_t buffer;\n\n cherokee_buffer_t filename;\n cherokee_buffer_t command;\n\n cherokee_boolean_t initialized;\n\n void *priv;\n} cherokee_logger_writer_t;\n\n\n\nret_t cherokee_logger_writer_new (cherokee_logger_writer_t **writer);\nret_t cherokee_logger_writer_new_stderr (cherokee_logger_writer_t **writer);\nret_t cherokee_logger_writer_free (cherokee_logger_writer_t *writer);\n\nret_t cherokee_logger_writer_configure (cherokee_logger_writer_t *writer, cherokee_config_node_t *conf);\n\nret_t cherokee_logger_writer_open (cherokee_logger_writer_t *writer);\nret_t cherokee_logger_writer_reopen (cherokee_logger_writer_t *writer);\nret_t cherokee_logger_writer_flush (cherokee_logger_writer_t *writer, cherokee_boolean_t locked);\n\nret_t cherokee_logger_writer_get_buf (cherokee_logger_writer_t *writer, cherokee_buffer_t **buf);\nret_t cherokee_logger_writer_release_buf (cherokee_logger_writer_t *writer);\n\n\nret_t cherokee_logger_writer_get_id (cherokee_config_node_t *conf, cherokee_buffer_t *id);\n\n\n// # 36 \"../cherokee/logger.h\" 2\n\n\n\n\n\n\ntypedef ret_t (* logger_func_new_t) (void **logger, void *vsrv, cherokee_config_node_t *config);\ntypedef ret_t (* logger_func_init_t) (void *logger);\ntypedef ret_t (* logger_func_free_t) (void *logger);\ntypedef ret_t (* logger_func_flush_t) (void *logger);\ntypedef ret_t (* logger_func_reopen_t) (void *logger);\ntypedef ret_t (* logger_func_write_access_t) (void *logger, void *conn);\n\n\ntypedef struct {\n cherokee_module_t module;\n struct cherokee_logger_private *priv;\n cherokee_boolean_t utc_time;\n\n\n\n logger_func_flush_t flush;\n logger_func_reopen_t reopen;\n logger_func_write_access_t write_access;\n} cherokee_logger_t;\n// # 79 \"../cherokee/logger.h\"\nret_t cherokee_logger_init_base (cherokee_logger_t *logger,\n           cherokee_plugin_info_t *info,\n           cherokee_config_node_t *config);\n\n\n\nret_t cherokee_logger_init (cherokee_logger_t *logger);\nret_t cherokee_logger_free (cherokee_logger_t *logger);\n\nret_t cherokee_logger_reopen (cherokee_logger_t *logger);\nret_t cherokee_logger_flush (cherokee_logger_t *logger);\nret_t cherokee_logger_write_access (cherokee_logger_t *logger, void *conn);\n\nret_t cherokee_logger_set_backup_mode (cherokee_logger_t *logger, cherokee_boolean_t active);\nret_t cherokee_logger_get_backup_mode (cherokee_logger_t *logger, cherokee_boolean_t *active);\n\n\n// # 34 \"error_log.h\" 2\n// # 1 \"../cherokee/errors_defs.h\" 1\n// # 35 \"error_log.h\" 2\n\ntypedef enum {\n cherokee_err_warning,\n cherokee_err_error,\n cherokee_err_critical\n} cherokee_error_type_t;\n\ntypedef struct {\n int id;\n const char *title;\n const char *description;\n const char *admin_url;\n const char *debug;\n int show_backtrace;\n} cherokee_error_t;\n// # 74 \"error_log.h\"\nret_t cherokee_error_log (cherokee_error_type_t type,\n      const char *filename,\n      int line,\n      int error_num, ...);\n\nret_t cherokee_error_errno_log (int errnumber,\n      cherokee_error_type_t type,\n      const char *filename,\n      int line,\n      int error_num, ...);\n\nret_t cherokee_error_set_default (cherokee_logger_writer_t *writer);\n// # 39 \"common-internal.h\" 2\n// # 65 \"common-internal.h\"\n// # 1 \"/usr/include/fcntl.h\" 1 3 4\n// # 30 \"/usr/include/fcntl.h\" 3 4\n\n\n\n\n// # 1 \"/usr/include/bits/fcntl.h\" 1 3 4\n// # 25 \"/usr/include/bits/fcntl.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 26 \"/usr/include/bits/fcntl.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/uio.h\" 1 3 4\n// # 44 \"/usr/include/bits/uio.h\" 3 4\nstruct iovec\n  {\n    void *iov_base;\n    size_t iov_len;\n  };\n// # 28 \"/usr/include/bits/fcntl.h\" 2 3 4\n// # 155 \"/usr/include/bits/fcntl.h\" 3 4\nstruct flock\n  {\n    short int l_type;\n    short int l_whence;\n\n    __off_t l_start;\n    __off_t l_len;\n\n\n\n\n    __pid_t l_pid;\n  };\n\n\nstruct flock64\n  {\n    short int l_type;\n    short int l_whence;\n    __off64_t l_start;\n    __off64_t l_len;\n    __pid_t l_pid;\n  };\n// # 222 \"/usr/include/bits/fcntl.h\" 3 4\n\n\n\n\n\nextern ssize_t readahead (int __fd, __off64_t __offset, size_t __count)\n    __attribute__ ((__nothrow__));\n\n\n\nextern int sync_file_range (int __fd, __off64_t __from, __off64_t __to,\n       unsigned int __flags);\n\n\n\nextern int vmsplice (int __fdout, const struct iovec *__iov, size_t __count,\n       unsigned int __flags);\n\n\nextern int splice (int __fdin, __off64_t *__offin, int __fdout,\n     __off64_t *__offout, size_t __len, unsigned int __flags)\n    __attribute__ ((__nothrow__));\n\n\nextern int tee (int __fdin, int __fdout, size_t __len, unsigned int __flags)\n    __attribute__ ((__nothrow__));\n\n\n\n\n// # 35 \"/usr/include/fcntl.h\" 2 3 4\n\n\n\n// # 1 \"/usr/include/sys/stat.h\" 1 3 4\n// # 103 \"/usr/include/sys/stat.h\" 3 4\n\n\n// # 1 \"/usr/include/bits/stat.h\" 1 3 4\n// # 43 \"/usr/include/bits/stat.h\" 3 4\nstruct stat\n  {\n    __dev_t st_dev;\n\n\n\n\n    __ino_t st_ino;\n\n\n\n\n\n\n\n    __nlink_t st_nlink;\n    __mode_t st_mode;\n\n    __uid_t st_uid;\n    __gid_t st_gid;\n\n    int pad0;\n\n    __dev_t st_rdev;\n\n\n\n\n    __off_t st_size;\n\n\n\n    __blksize_t st_blksize;\n\n    __blkcnt_t st_blocks;\n// # 88 \"/usr/include/bits/stat.h\" 3 4\n    struct timespec st_atim;\n    struct timespec st_mtim;\n    struct timespec st_ctim;\n// # 103 \"/usr/include/bits/stat.h\" 3 4\n    long int __unused[3];\n// # 112 \"/usr/include/bits/stat.h\" 3 4\n  };\n\n\n\nstruct stat64\n  {\n    __dev_t st_dev;\n\n    __ino64_t st_ino;\n    __nlink_t st_nlink;\n    __mode_t st_mode;\n\n\n\n\n\n\n    __uid_t st_uid;\n    __gid_t st_gid;\n\n    int pad0;\n    __dev_t st_rdev;\n    __off_t st_size;\n\n\n\n\n\n    __blksize_t st_blksize;\n    __blkcnt64_t st_blocks;\n\n\n\n\n\n\n\n    struct timespec st_atim;\n    struct timespec st_mtim;\n    struct timespec st_ctim;\n// # 164 \"/usr/include/bits/stat.h\" 3 4\n    long int __unused[3];\n\n\n\n  };\n// # 106 \"/usr/include/sys/stat.h\" 2 3 4\n// # 207 \"/usr/include/sys/stat.h\" 3 4\nextern int stat (__const char *__restrict __file,\n   struct stat *__restrict __buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern int fstat (int __fd, struct stat *__buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n// # 226 \"/usr/include/sys/stat.h\" 3 4\nextern int stat64 (__const char *__restrict __file,\n     struct stat64 *__restrict __buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern int fstat64 (int __fd, struct stat64 *__buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\n\n\n\nextern int fstatat (int __fd, __const char *__restrict __file,\n      struct stat *__restrict __buf, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n// # 250 \"/usr/include/sys/stat.h\" 3 4\nextern int fstatat64 (int __fd, __const char *__restrict __file,\n        struct stat64 *__restrict __buf, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n\n\n\n\n\n\nextern int lstat (__const char *__restrict __file,\n    struct stat *__restrict __buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n// # 272 \"/usr/include/sys/stat.h\" 3 4\nextern int lstat64 (__const char *__restrict __file,\n      struct stat64 *__restrict __buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern int chmod (__const char *__file, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int lchmod (__const char *__file, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int fchmod (int __fd, __mode_t __mode) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int fchmodat (int __fd, __const char *__file, __mode_t mode, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;\n\n\n\n\n\n\nextern __mode_t umask (__mode_t __mask) __attribute__ ((__nothrow__));\n\n\n\n\nextern __mode_t getumask (void) __attribute__ ((__nothrow__));\n\n\n\nextern int mkdir (__const char *__path, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int mkdirat (int __fd, __const char *__path, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\n\n\nextern int mknod (__const char *__path, __mode_t __mode, __dev_t __dev)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int mknodat (int __fd, __const char *__path, __mode_t __mode,\n      __dev_t __dev) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\nextern int mkfifo (__const char *__path, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int mkfifoat (int __fd, __const char *__path, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n// # 380 \"/usr/include/sys/stat.h\" 3 4\nextern int __fxstat (int __ver, int __fildes, struct stat *__stat_buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));\nextern int __xstat (int __ver, __const char *__filename,\n      struct stat *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\nextern int __lxstat (int __ver, __const char *__filename,\n       struct stat *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\nextern int __fxstatat (int __ver, int __fildes, __const char *__filename,\n         struct stat *__stat_buf, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4)));\n// # 413 \"/usr/include/sys/stat.h\" 3 4\nextern int __fxstat64 (int __ver, int __fildes, struct stat64 *__stat_buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));\nextern int __xstat64 (int __ver, __const char *__filename,\n        struct stat64 *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\nextern int __lxstat64 (int __ver, __const char *__filename,\n         struct stat64 *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\nextern int __fxstatat64 (int __ver, int __fildes, __const char *__filename,\n    struct stat64 *__stat_buf, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4)));\n\nextern int __xmknod (int __ver, __const char *__path, __mode_t __mode,\n       __dev_t *__dev) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n\nextern int __xmknodat (int __ver, int __fd, __const char *__path,\n         __mode_t __mode, __dev_t *__dev)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 5)));\n\n\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) stat (__const char *__path, struct stat *__statbuf)\n{\n  return __xstat (1, __path, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) lstat (__const char *__path, struct stat *__statbuf)\n{\n  return __lxstat (1, __path, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) fstat (int __fd, struct stat *__statbuf)\n{\n  return __fxstat (1, __fd, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) fstatat (int __fd, __const char *__filename, struct stat *__statbuf, int __flag)\n\n{\n  return __fxstatat (1, __fd, __filename, __statbuf, __flag);\n}\n\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) mknod (__const char *__path, __mode_t __mode, __dev_t __dev)\n{\n  return __xmknod (0, __path, __mode, &__dev);\n}\n\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) mknodat (int __fd, __const char *__path, __mode_t __mode, __dev_t __dev)\n\n{\n  return __xmknodat (0, __fd, __path, __mode, &__dev);\n}\n\n\n\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) stat64 (__const char *__path, struct stat64 *__statbuf)\n{\n  return __xstat64 (1, __path, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) lstat64 (__const char *__path, struct stat64 *__statbuf)\n{\n  return __lxstat64 (1, __path, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) fstat64 (int __fd, struct stat64 *__statbuf)\n{\n  return __fxstat64 (1, __fd, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) fstatat64 (int __fd, __const char *__filename, struct stat64 *__statbuf, int __flag)\n\n{\n  return __fxstatat64 (1, __fd, __filename, __statbuf, __flag);\n}\n\n\n\n\n\n\n\n// # 39 \"/usr/include/fcntl.h\" 2 3 4\n// # 76 \"/usr/include/fcntl.h\" 3 4\nextern int fcntl (int __fd, int __cmd, ...);\n// # 85 \"/usr/include/fcntl.h\" 3 4\nextern int open (__const char *__file, int __oflag, ...) __attribute__ ((__nonnull__ (1)));\n// # 95 \"/usr/include/fcntl.h\" 3 4\nextern int open64 (__const char *__file, int __oflag, ...) __attribute__ ((__nonnull__ (1)));\n// # 109 \"/usr/include/fcntl.h\" 3 4\nextern int openat (int __fd, __const char *__file, int __oflag, ...)\n     __attribute__ ((__nonnull__ (2)));\n// # 120 \"/usr/include/fcntl.h\" 3 4\nextern int openat64 (int __fd, __const char *__file, int __oflag, ...)\n     __attribute__ ((__nonnull__ (2)));\n// # 130 \"/usr/include/fcntl.h\" 3 4\nextern int creat (__const char *__file, __mode_t __mode) __attribute__ ((__nonnull__ (1)));\n// # 140 \"/usr/include/fcntl.h\" 3 4\nextern int creat64 (__const char *__file, __mode_t __mode) __attribute__ ((__nonnull__ (1)));\n// # 159 \"/usr/include/fcntl.h\" 3 4\nextern int lockf (int __fd, int __cmd, __off_t __len);\n// # 168 \"/usr/include/fcntl.h\" 3 4\nextern int lockf64 (int __fd, int __cmd, __off64_t __len);\n\n\n\n\n\n\n\nextern int posix_fadvise (int __fd, __off_t __offset, __off_t __len,\n     int __advise) __attribute__ ((__nothrow__));\n// # 188 \"/usr/include/fcntl.h\" 3 4\nextern int posix_fadvise64 (int __fd, __off64_t __offset, __off64_t __len,\n       int __advise) __attribute__ ((__nothrow__));\n// # 198 \"/usr/include/fcntl.h\" 3 4\nextern int posix_fallocate (int __fd, __off_t __offset, __off_t __len);\n// # 209 \"/usr/include/fcntl.h\" 3 4\nextern int posix_fallocate64 (int __fd, __off64_t __offset, __off64_t __len);\n\n\n\n\n// # 66 \"common-internal.h\" 2\n\n\n\n\n\n\n\n// # 1 \"/usr/include/dlfcn.h\" 1 3 4\n// # 26 \"/usr/include/dlfcn.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 27 \"/usr/include/dlfcn.h\" 2 3 4\n\n\n// # 1 \"/usr/include/bits/dlfcn.h\" 1 3 4\n// # 58 \"/usr/include/bits/dlfcn.h\" 3 4\n\n\n\nextern void _dl_mcount_wrapper_check (void *__selfpc) __attribute__ ((__nothrow__));\n\n\n// # 30 \"/usr/include/dlfcn.h\" 2 3 4\n// # 46 \"/usr/include/dlfcn.h\" 3 4\ntypedef long int Lmid_t;\n\n\n\n\n\n\n\n\n\n\n\nextern void *dlopen (__const char *__file, int __mode) __attribute__ ((__nothrow__));\n\n\n\nextern int dlclose (void *__handle) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern void *dlsym (void *__restrict __handle,\n      __const char *__restrict __name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\nextern void *dlmopen (Lmid_t __nsid, __const char *__file, int __mode) __attribute__ ((__nothrow__));\n\n\n\nextern void *dlvsym (void *__restrict __handle,\n       __const char *__restrict __name,\n       __const char *__restrict __version)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n\n\n\n\n\nextern char *dlerror (void) __attribute__ ((__nothrow__));\n\n\n\n\n\ntypedef struct\n{\n  __const char *dli_fname;\n  void *dli_fbase;\n  __const char *dli_sname;\n  void *dli_saddr;\n} Dl_info;\n\n\n\nextern int dladdr (__const void *__address, Dl_info *__info)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\nextern int dladdr1 (__const void *__address, Dl_info *__info,\n      void **__extra_info, int __flags) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\nenum\n  {\n\n    RTLD_DL_SYMENT = 1,\n\n\n    RTLD_DL_LINKMAP = 2\n  };\n\n\n\n\n\n\n\nextern int dlinfo (void *__restrict __handle,\n     int __request, void *__restrict __arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));\n\n\nenum\n  {\n\n    RTLD_DI_LMID = 1,\n\n\n\n    RTLD_DI_LINKMAP = 2,\n\n    RTLD_DI_CONFIGADDR = 3,\n\n\n\n\n\n\n    RTLD_DI_SERINFO = 4,\n    RTLD_DI_SERINFOSIZE = 5,\n\n\n\n    RTLD_DI_ORIGIN = 6,\n\n    RTLD_DI_PROFILENAME = 7,\n    RTLD_DI_PROFILEOUT = 8,\n\n\n\n\n    RTLD_DI_TLS_MODID = 9,\n\n\n\n\n\n    RTLD_DI_TLS_DATA = 10,\n\n    RTLD_DI_MAX = 10\n  };\n\n\n\n\ntypedef struct\n{\n  char *dls_name;\n  unsigned int dls_flags;\n} Dl_serpath;\n\n\n\ntypedef struct\n{\n  size_t dls_size;\n  unsigned int dls_cnt;\n  Dl_serpath dls_serpath[1];\n} Dl_serinfo;\n\n\n\n\n// # 74 \"common-internal.h\" 2\n\n\n\n// # 1 \"/usr/include/inttypes.h\" 1 3 4\n// # 28 \"/usr/include/inttypes.h\" 3 4\n// # 1 \"/usr/include/stdint.h\" 1 3 4\n// # 28 \"/usr/include/stdint.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 29 \"/usr/include/stdint.h\" 2 3 4\n// # 49 \"/usr/include/stdint.h\" 3 4\ntypedef unsigned char uint8_t;\ntypedef unsigned short int uint16_t;\n\ntypedef unsigned int uint32_t;\n\n\n\ntypedef unsigned long int uint64_t;\n// # 66 \"/usr/include/stdint.h\" 3 4\ntypedef signed char int_least8_t;\ntypedef short int int_least16_t;\ntypedef int int_least32_t;\n\ntypedef long int int_least64_t;\n\n\n\n\n\n\ntypedef unsigned char uint_least8_t;\ntypedef unsigned short int uint_least16_t;\ntypedef unsigned int uint_least32_t;\n\ntypedef unsigned long int uint_least64_t;\n// # 91 \"/usr/include/stdint.h\" 3 4\ntypedef signed char int_fast8_t;\n\ntypedef long int int_fast16_t;\ntypedef long int int_fast32_t;\ntypedef long int int_fast64_t;\n// # 104 \"/usr/include/stdint.h\" 3 4\ntypedef unsigned char uint_fast8_t;\n\ntypedef unsigned long int uint_fast16_t;\ntypedef unsigned long int uint_fast32_t;\ntypedef unsigned long int uint_fast64_t;\n// # 120 \"/usr/include/stdint.h\" 3 4\ntypedef long int intptr_t;\n\n\ntypedef unsigned long int uintptr_t;\n// # 135 \"/usr/include/stdint.h\" 3 4\ntypedef long int intmax_t;\ntypedef unsigned long int uintmax_t;\n// # 29 \"/usr/include/inttypes.h\" 2 3 4\n\n\n\n\n\n\ntypedef int __gwchar_t;\n// # 274 \"/usr/include/inttypes.h\" 3 4\n\n\n\n\n\ntypedef struct\n  {\n    long int quot;\n    long int rem;\n  } imaxdiv_t;\n// # 298 \"/usr/include/inttypes.h\" 3 4\nextern intmax_t imaxabs (intmax_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\nextern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)\n      __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\nextern intmax_t strtoimax (__const char *__restrict __nptr,\n      char **__restrict __endptr, int __base) __attribute__ ((__nothrow__));\n\n\nextern uintmax_t strtoumax (__const char *__restrict __nptr,\n       char ** __restrict __endptr, int __base) __attribute__ ((__nothrow__));\n\n\nextern intmax_t wcstoimax (__const __gwchar_t *__restrict __nptr,\n      __gwchar_t **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__));\n\n\nextern uintmax_t wcstoumax (__const __gwchar_t *__restrict __nptr,\n       __gwchar_t ** __restrict __endptr, int __base)\n     __attribute__ ((__nothrow__));\n// # 459 \"/usr/include/inttypes.h\" 3 4\n\n// # 78 \"common-internal.h\" 2\n// # 93 \"common-internal.h\"\n// # 1 \"/usr/include/sys/ipc.h\" 1 3 4\n// # 29 \"/usr/include/sys/ipc.h\" 3 4\n// # 1 \"/usr/include/bits/ipctypes.h\" 1 3 4\n// # 33 \"/usr/include/bits/ipctypes.h\" 3 4\ntypedef int __ipc_pid_t;\n// # 30 \"/usr/include/sys/ipc.h\" 2 3 4\n// # 1 \"/usr/include/bits/ipc.h\" 1 3 4\n// # 43 \"/usr/include/bits/ipc.h\" 3 4\nstruct ipc_perm\n  {\n    __key_t __key;\n    __uid_t uid;\n    __gid_t gid;\n    __uid_t cuid;\n    __gid_t cgid;\n    unsigned short int mode;\n    unsigned short int __pad1;\n    unsigned short int __seq;\n    unsigned short int __pad2;\n    unsigned long int __unused1;\n    unsigned long int __unused2;\n  };\n// # 31 \"/usr/include/sys/ipc.h\" 2 3 4\n// # 52 \"/usr/include/sys/ipc.h\" 3 4\n\n\n\nextern key_t ftok (__const char *__pathname, int __proj_id) __attribute__ ((__nothrow__));\n\n\n// # 94 \"common-internal.h\" 2\n// # 1 \"/usr/include/sys/sem.h\" 1 3 4\n// # 25 \"/usr/include/sys/sem.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 26 \"/usr/include/sys/sem.h\" 2 3 4\n\n\n\n\n\n// # 1 \"/usr/include/bits/sem.h\" 1 3 4\n// # 39 \"/usr/include/bits/sem.h\" 3 4\nstruct semid_ds\n{\n  struct ipc_perm sem_perm;\n  __time_t sem_otime;\n  unsigned long int __unused1;\n  __time_t sem_ctime;\n  unsigned long int __unused2;\n  unsigned long int sem_nsems;\n  unsigned long int __unused3;\n  unsigned long int __unused4;\n};\n// # 73 \"/usr/include/bits/sem.h\" 3 4\nstruct seminfo\n{\n  int semmap;\n  int semmni;\n  int semmns;\n  int semmnu;\n  int semmsl;\n  int semopm;\n  int semume;\n  int semusz;\n  int semvmx;\n  int semaem;\n};\n// # 32 \"/usr/include/sys/sem.h\" 2 3 4\n// # 42 \"/usr/include/sys/sem.h\" 3 4\nstruct sembuf\n{\n  unsigned short int sem_num;\n  short int sem_op;\n  short int sem_flg;\n};\n\n\n\n\n\nextern int semctl (int __semid, int __semnum, int __cmd, ...) __attribute__ ((__nothrow__));\n\n\nextern int semget (key_t __key, int __nsems, int __semflg) __attribute__ ((__nothrow__));\n\n\nextern int semop (int __semid, struct sembuf *__sops, size_t __nsops) __attribute__ ((__nothrow__));\n\n\n\nextern int semtimedop (int __semid, struct sembuf *__sops, size_t __nsops,\n         __const struct timespec *__timeout) __attribute__ ((__nothrow__));\n\n\n\n// # 95 \"common-internal.h\" 2\n// # 26 \"handler_file.c\" 2\n\n\n\n// # 1 \"/usr/include/unistd.h\" 1 3 4\n// # 28 \"/usr/include/unistd.h\" 3 4\n\n// # 173 \"/usr/include/unistd.h\" 3 4\n// # 1 \"/usr/include/bits/posix_opt.h\" 1 3 4\n// # 174 \"/usr/include/unistd.h\" 2 3 4\n\n\n\n// # 1 \"/usr/include/bits/environments.h\" 1 3 4\n// # 23 \"/usr/include/bits/environments.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 24 \"/usr/include/bits/environments.h\" 2 3 4\n// # 178 \"/usr/include/unistd.h\" 2 3 4\n// # 197 \"/usr/include/unistd.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 198 \"/usr/include/unistd.h\" 2 3 4\n// # 245 \"/usr/include/unistd.h\" 3 4\ntypedef __socklen_t socklen_t;\n// # 258 \"/usr/include/unistd.h\" 3 4\nextern int access (__const char *__name, int __type) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int euidaccess (__const char *__name, int __type)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int eaccess (__const char *__name, int __type)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int faccessat (int __fd, __const char *__file, int __type, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;\n// # 301 \"/usr/include/unistd.h\" 3 4\nextern __off_t lseek (int __fd, __off_t __offset, int __whence) __attribute__ ((__nothrow__));\n// # 312 \"/usr/include/unistd.h\" 3 4\nextern __off64_t lseek64 (int __fd, __off64_t __offset, int __whence)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int close (int __fd);\n\n\n\n\n\n\nextern ssize_t read (int __fd, void *__buf, size_t __nbytes) ;\n\n\n\n\n\nextern ssize_t write (int __fd, __const void *__buf, size_t __n) ;\n// # 343 \"/usr/include/unistd.h\" 3 4\nextern ssize_t pread (int __fd, void *__buf, size_t __nbytes,\n        __off_t __offset) ;\n\n\n\n\n\n\nextern ssize_t pwrite (int __fd, __const void *__buf, size_t __n,\n         __off_t __offset) ;\n// # 371 \"/usr/include/unistd.h\" 3 4\nextern ssize_t pread64 (int __fd, void *__buf, size_t __nbytes,\n   __off64_t __offset) ;\n\n\nextern ssize_t pwrite64 (int __fd, __const void *__buf, size_t __n,\n    __off64_t __offset) ;\n\n\n\n\n\n\n\nextern int pipe (int __pipedes[2]) __attribute__ ((__nothrow__)) ;\n// # 393 \"/usr/include/unistd.h\" 3 4\nextern unsigned int alarm (unsigned int __seconds) __attribute__ ((__nothrow__));\n// # 405 \"/usr/include/unistd.h\" 3 4\nextern unsigned int sleep (unsigned int __seconds);\n\n\n\n\n\n\nextern __useconds_t ualarm (__useconds_t __value, __useconds_t __interval)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int usleep (__useconds_t __useconds);\n// # 429 \"/usr/include/unistd.h\" 3 4\nextern int pause (void);\n\n\n\nextern int chown (__const char *__file, __uid_t __owner, __gid_t __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern int fchown (int __fd, __uid_t __owner, __gid_t __group) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern int lchown (__const char *__file, __uid_t __owner, __gid_t __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n\nextern int fchownat (int __fd, __const char *__file, __uid_t __owner,\n       __gid_t __group, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;\n\n\n\nextern int chdir (__const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern int fchdir (int __fd) __attribute__ ((__nothrow__)) ;\n// # 471 \"/usr/include/unistd.h\" 3 4\nextern char *getcwd (char *__buf, size_t __size) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\nextern char *get_current_dir_name (void) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern char *getwd (char *__buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__)) ;\n\n\n\n\nextern int dup (int __fd) __attribute__ ((__nothrow__)) ;\n\n\nextern int dup2 (int __fd, int __fd2) __attribute__ ((__nothrow__));\n\n\nextern char **__environ;\n\nextern char **environ;\n\n\n\n\n\nextern int execve (__const char *__path, char *__const __argv[],\n     char *__const __envp[]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int fexecve (int __fd, char *__const __argv[], char *__const __envp[])\n     __attribute__ ((__nothrow__));\n\n\n\n\nextern int execv (__const char *__path, char *__const __argv[])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int execle (__const char *__path, __const char *__arg, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int execl (__const char *__path, __const char *__arg, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int execvp (__const char *__file, char *__const __argv[])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int execlp (__const char *__file, __const char *__arg, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int nice (int __inc) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern void _exit (int __status) __attribute__ ((__noreturn__));\n\n\n\n\n\n// # 1 \"/usr/include/bits/confname.h\" 1 3 4\n// # 26 \"/usr/include/bits/confname.h\" 3 4\nenum\n  {\n    _PC_LINK_MAX,\n\n    _PC_MAX_CANON,\n\n    _PC_MAX_INPUT,\n\n    _PC_NAME_MAX,\n\n    _PC_PATH_MAX,\n\n    _PC_PIPE_BUF,\n\n    _PC_CHOWN_RESTRICTED,\n\n    _PC_NO_TRUNC,\n\n    _PC_VDISABLE,\n\n    _PC_SYNC_IO,\n\n    _PC_ASYNC_IO,\n\n    _PC_PRIO_IO,\n\n    _PC_SOCK_MAXBUF,\n\n    _PC_FILESIZEBITS,\n\n    _PC_REC_INCR_XFER_SIZE,\n\n    _PC_REC_MAX_XFER_SIZE,\n\n    _PC_REC_MIN_XFER_SIZE,\n\n    _PC_REC_XFER_ALIGN,\n\n    _PC_ALLOC_SIZE_MIN,\n\n    _PC_SYMLINK_MAX,\n\n    _PC_2_SYMLINKS\n\n  };\n\n\nenum\n  {\n    _SC_ARG_MAX,\n\n    _SC_CHILD_MAX,\n\n    _SC_CLK_TCK,\n\n    _SC_NGROUPS_MAX,\n\n    _SC_OPEN_MAX,\n\n    _SC_STREAM_MAX,\n\n    _SC_TZNAME_MAX,\n\n    _SC_JOB_CONTROL,\n\n    _SC_SAVED_IDS,\n\n    _SC_REALTIME_SIGNALS,\n\n    _SC_PRIORITY_SCHEDULING,\n\n    _SC_TIMERS,\n\n    _SC_ASYNCHRONOUS_IO,\n\n    _SC_PRIORITIZED_IO,\n\n    _SC_SYNCHRONIZED_IO,\n\n    _SC_FSYNC,\n\n    _SC_MAPPED_FILES,\n\n    _SC_MEMLOCK,\n\n    _SC_MEMLOCK_RANGE,\n\n    _SC_MEMORY_PROTECTION,\n\n    _SC_MESSAGE_PASSING,\n\n    _SC_SEMAPHORES,\n\n    _SC_SHARED_MEMORY_OBJECTS,\n\n    _SC_AIO_LISTIO_MAX,\n\n    _SC_AIO_MAX,\n\n    _SC_AIO_PRIO_DELTA_MAX,\n\n    _SC_DELAYTIMER_MAX,\n\n    _SC_MQ_OPEN_MAX,\n\n    _SC_MQ_PRIO_MAX,\n\n    _SC_VERSION,\n\n    _SC_PAGESIZE,\n\n\n    _SC_RTSIG_MAX,\n\n    _SC_SEM_NSEMS_MAX,\n\n    _SC_SEM_VALUE_MAX,\n\n    _SC_SIGQUEUE_MAX,\n\n    _SC_TIMER_MAX,\n\n\n\n\n    _SC_BC_BASE_MAX,\n\n    _SC_BC_DIM_MAX,\n\n    _SC_BC_SCALE_MAX,\n\n    _SC_BC_STRING_MAX,\n\n    _SC_COLL_WEIGHTS_MAX,\n\n    _SC_EQUIV_CLASS_MAX,\n\n    _SC_EXPR_NEST_MAX,\n\n    _SC_LINE_MAX,\n\n    _SC_RE_DUP_MAX,\n\n    _SC_CHARCLASS_NAME_MAX,\n\n\n    _SC_2_VERSION,\n\n    _SC_2_C_BIND,\n\n    _SC_2_C_DEV,\n\n    _SC_2_FORT_DEV,\n\n    _SC_2_FORT_RUN,\n\n    _SC_2_SW_DEV,\n\n    _SC_2_LOCALEDEF,\n\n\n    _SC_PII,\n\n    _SC_PII_XTI,\n\n    _SC_PII_SOCKET,\n\n    _SC_PII_INTERNET,\n\n    _SC_PII_OSI,\n\n    _SC_POLL,\n\n    _SC_SELECT,\n\n    _SC_UIO_MAXIOV,\n\n    _SC_IOV_MAX = _SC_UIO_MAXIOV,\n\n    _SC_PII_INTERNET_STREAM,\n\n    _SC_PII_INTERNET_DGRAM,\n\n    _SC_PII_OSI_COTS,\n\n    _SC_PII_OSI_CLTS,\n\n    _SC_PII_OSI_M,\n\n    _SC_T_IOV_MAX,\n\n\n\n    _SC_THREADS,\n\n    _SC_THREAD_SAFE_FUNCTIONS,\n\n    _SC_GETGR_R_SIZE_MAX,\n\n    _SC_GETPW_R_SIZE_MAX,\n\n    _SC_LOGIN_NAME_MAX,\n\n    _SC_TTY_NAME_MAX,\n\n    _SC_THREAD_DESTRUCTOR_ITERATIONS,\n\n    _SC_THREAD_KEYS_MAX,\n\n    _SC_THREAD_STACK_MIN,\n\n    _SC_THREAD_THREADS_MAX,\n\n    _SC_THREAD_ATTR_STACKADDR,\n\n    _SC_THREAD_ATTR_STACKSIZE,\n\n    _SC_THREAD_PRIORITY_SCHEDULING,\n\n    _SC_THREAD_PRIO_INHERIT,\n\n    _SC_THREAD_PRIO_PROTECT,\n\n    _SC_THREAD_PROCESS_SHARED,\n\n\n    _SC_NPROCESSORS_CONF,\n\n    _SC_NPROCESSORS_ONLN,\n\n    _SC_PHYS_PAGES,\n\n    _SC_AVPHYS_PAGES,\n\n    _SC_ATEXIT_MAX,\n\n    _SC_PASS_MAX,\n\n\n    _SC_XOPEN_VERSION,\n\n    _SC_XOPEN_XCU_VERSION,\n\n    _SC_XOPEN_UNIX,\n\n    _SC_XOPEN_CRYPT,\n\n    _SC_XOPEN_ENH_I18N,\n\n    _SC_XOPEN_SHM,\n\n\n    _SC_2_CHAR_TERM,\n\n    _SC_2_C_VERSION,\n\n    _SC_2_UPE,\n\n\n    _SC_XOPEN_XPG2,\n\n    _SC_XOPEN_XPG3,\n\n    _SC_XOPEN_XPG4,\n\n\n    _SC_CHAR_BIT,\n\n    _SC_CHAR_MAX,\n\n    _SC_CHAR_MIN,\n\n    _SC_INT_MAX,\n\n    _SC_INT_MIN,\n\n    _SC_LONG_BIT,\n\n    _SC_WORD_BIT,\n\n    _SC_MB_LEN_MAX,\n\n    _SC_NZERO,\n\n    _SC_SSIZE_MAX,\n\n    _SC_SCHAR_MAX,\n\n    _SC_SCHAR_MIN,\n\n    _SC_SHRT_MAX,\n\n    _SC_SHRT_MIN,\n\n    _SC_UCHAR_MAX,\n\n    _SC_UINT_MAX,\n\n    _SC_ULONG_MAX,\n\n    _SC_USHRT_MAX,\n\n\n    _SC_NL_ARGMAX,\n\n    _SC_NL_LANGMAX,\n\n    _SC_NL_MSGMAX,\n\n    _SC_NL_NMAX,\n\n    _SC_NL_SETMAX,\n\n    _SC_NL_TEXTMAX,\n\n\n    _SC_XBS5_ILP32_OFF32,\n\n    _SC_XBS5_ILP32_OFFBIG,\n\n    _SC_XBS5_LP64_OFF64,\n\n    _SC_XBS5_LPBIG_OFFBIG,\n\n\n    _SC_XOPEN_LEGACY,\n\n    _SC_XOPEN_REALTIME,\n\n    _SC_XOPEN_REALTIME_THREADS,\n\n\n    _SC_ADVISORY_INFO,\n\n    _SC_BARRIERS,\n\n    _SC_BASE,\n\n    _SC_C_LANG_SUPPORT,\n\n    _SC_C_LANG_SUPPORT_R,\n\n    _SC_CLOCK_SELECTION,\n\n    _SC_CPUTIME,\n\n    _SC_THREAD_CPUTIME,\n\n    _SC_DEVICE_IO,\n\n    _SC_DEVICE_SPECIFIC,\n\n    _SC_DEVICE_SPECIFIC_R,\n\n    _SC_FD_MGMT,\n\n    _SC_FIFO,\n\n    _SC_PIPE,\n\n    _SC_FILE_ATTRIBUTES,\n\n    _SC_FILE_LOCKING,\n\n    _SC_FILE_SYSTEM,\n\n    _SC_MONOTONIC_CLOCK,\n\n    _SC_MULTI_PROCESS,\n\n    _SC_SINGLE_PROCESS,\n\n    _SC_NETWORKING,\n\n    _SC_READER_WRITER_LOCKS,\n\n    _SC_SPIN_LOCKS,\n\n    _SC_REGEXP,\n\n    _SC_REGEX_VERSION,\n\n    _SC_SHELL,\n\n    _SC_SIGNALS,\n\n    _SC_SPAWN,\n\n    _SC_SPORADIC_SERVER,\n\n    _SC_THREAD_SPORADIC_SERVER,\n\n    _SC_SYSTEM_DATABASE,\n\n    _SC_SYSTEM_DATABASE_R,\n\n    _SC_TIMEOUTS,\n\n    _SC_TYPED_MEMORY_OBJECTS,\n\n    _SC_USER_GROUPS,\n\n    _SC_USER_GROUPS_R,\n\n    _SC_2_PBS,\n\n    _SC_2_PBS_ACCOUNTING,\n\n    _SC_2_PBS_LOCATE,\n\n    _SC_2_PBS_MESSAGE,\n\n    _SC_2_PBS_TRACK,\n\n    _SC_SYMLOOP_MAX,\n\n    _SC_STREAMS,\n\n    _SC_2_PBS_CHECKPOINT,\n\n\n    _SC_V6_ILP32_OFF32,\n\n    _SC_V6_ILP32_OFFBIG,\n\n    _SC_V6_LP64_OFF64,\n\n    _SC_V6_LPBIG_OFFBIG,\n\n\n    _SC_HOST_NAME_MAX,\n\n    _SC_TRACE,\n\n    _SC_TRACE_EVENT_FILTER,\n\n    _SC_TRACE_INHERIT,\n\n    _SC_TRACE_LOG,\n\n\n    _SC_LEVEL1_ICACHE_SIZE,\n\n    _SC_LEVEL1_ICACHE_ASSOC,\n\n    _SC_LEVEL1_ICACHE_LINESIZE,\n\n    _SC_LEVEL1_DCACHE_SIZE,\n\n    _SC_LEVEL1_DCACHE_ASSOC,\n\n    _SC_LEVEL1_DCACHE_LINESIZE,\n\n    _SC_LEVEL2_CACHE_SIZE,\n\n    _SC_LEVEL2_CACHE_ASSOC,\n\n    _SC_LEVEL2_CACHE_LINESIZE,\n\n    _SC_LEVEL3_CACHE_SIZE,\n\n    _SC_LEVEL3_CACHE_ASSOC,\n\n    _SC_LEVEL3_CACHE_LINESIZE,\n\n    _SC_LEVEL4_CACHE_SIZE,\n\n    _SC_LEVEL4_CACHE_ASSOC,\n\n    _SC_LEVEL4_CACHE_LINESIZE,\n\n\n\n    _SC_IPV6 = _SC_LEVEL1_ICACHE_SIZE + 50,\n\n    _SC_RAW_SOCKETS\n\n  };\n\n\nenum\n  {\n    _CS_PATH,\n\n\n    _CS_V6_WIDTH_RESTRICTED_ENVS,\n\n\n    _CS_GNU_LIBC_VERSION,\n\n    _CS_GNU_LIBPTHREAD_VERSION,\n\n\n    _CS_LFS_CFLAGS = 1000,\n\n    _CS_LFS_LDFLAGS,\n\n    _CS_LFS_LIBS,\n\n    _CS_LFS_LINTFLAGS,\n\n    _CS_LFS64_CFLAGS,\n\n    _CS_LFS64_LDFLAGS,\n\n    _CS_LFS64_LIBS,\n\n    _CS_LFS64_LINTFLAGS,\n\n\n    _CS_XBS5_ILP32_OFF32_CFLAGS = 1100,\n\n    _CS_XBS5_ILP32_OFF32_LDFLAGS,\n\n    _CS_XBS5_ILP32_OFF32_LIBS,\n\n    _CS_XBS5_ILP32_OFF32_LINTFLAGS,\n\n    _CS_XBS5_ILP32_OFFBIG_CFLAGS,\n\n    _CS_XBS5_ILP32_OFFBIG_LDFLAGS,\n\n    _CS_XBS5_ILP32_OFFBIG_LIBS,\n\n    _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,\n\n    _CS_XBS5_LP64_OFF64_CFLAGS,\n\n    _CS_XBS5_LP64_OFF64_LDFLAGS,\n\n    _CS_XBS5_LP64_OFF64_LIBS,\n\n    _CS_XBS5_LP64_OFF64_LINTFLAGS,\n\n    _CS_XBS5_LPBIG_OFFBIG_CFLAGS,\n\n    _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,\n\n    _CS_XBS5_LPBIG_OFFBIG_LIBS,\n\n    _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,\n\n\n    _CS_POSIX_V6_ILP32_OFF32_CFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFF32_LIBS,\n\n    _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFFBIG_LIBS,\n\n    _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,\n\n    _CS_POSIX_V6_LP64_OFF64_CFLAGS,\n\n    _CS_POSIX_V6_LP64_OFF64_LDFLAGS,\n\n    _CS_POSIX_V6_LP64_OFF64_LIBS,\n\n    _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,\n\n    _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,\n\n    _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,\n\n    _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,\n\n    _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS\n\n  };\n// # 555 \"/usr/include/unistd.h\" 2 3 4\n\n\nextern long int pathconf (__const char *__path, int __name)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern long int fpathconf (int __fd, int __name) __attribute__ ((__nothrow__));\n\n\nextern long int sysconf (int __name) __attribute__ ((__nothrow__));\n\n\n\nextern size_t confstr (int __name, char *__buf, size_t __len) __attribute__ ((__nothrow__));\n\n\n\n\nextern __pid_t getpid (void) __attribute__ ((__nothrow__));\n\n\nextern __pid_t getppid (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern __pid_t getpgrp (void) __attribute__ ((__nothrow__));\n// # 591 \"/usr/include/unistd.h\" 3 4\nextern __pid_t __getpgid (__pid_t __pid) __attribute__ ((__nothrow__));\n\nextern __pid_t getpgid (__pid_t __pid) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int setpgid (__pid_t __pid, __pid_t __pgid) __attribute__ ((__nothrow__));\n// # 617 \"/usr/include/unistd.h\" 3 4\nextern int setpgrp (void) __attribute__ ((__nothrow__));\n// # 634 \"/usr/include/unistd.h\" 3 4\nextern __pid_t setsid (void) __attribute__ ((__nothrow__));\n\n\n\nextern __pid_t getsid (__pid_t __pid) __attribute__ ((__nothrow__));\n\n\n\nextern __uid_t getuid (void) __attribute__ ((__nothrow__));\n\n\nextern __uid_t geteuid (void) __attribute__ ((__nothrow__));\n\n\nextern __gid_t getgid (void) __attribute__ ((__nothrow__));\n\n\nextern __gid_t getegid (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern int getgroups (int __size, __gid_t __list[]) __attribute__ ((__nothrow__)) ;\n\n\n\nextern int group_member (__gid_t __gid) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int setuid (__uid_t __uid) __attribute__ ((__nothrow__));\n\n\n\n\nextern int setreuid (__uid_t __ruid, __uid_t __euid) __attribute__ ((__nothrow__));\n\n\n\n\nextern int seteuid (__uid_t __uid) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int setgid (__gid_t __gid) __attribute__ ((__nothrow__));\n\n\n\n\nextern int setregid (__gid_t __rgid, __gid_t __egid) __attribute__ ((__nothrow__));\n\n\n\n\nextern int setegid (__gid_t __gid) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int getresuid (__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid)\n     __attribute__ ((__nothrow__));\n\n\n\nextern int getresgid (__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid)\n     __attribute__ ((__nothrow__));\n\n\n\nextern int setresuid (__uid_t __ruid, __uid_t __euid, __uid_t __suid)\n     __attribute__ ((__nothrow__));\n\n\n\nextern int setresgid (__gid_t __rgid, __gid_t __egid, __gid_t __sgid)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern __pid_t fork (void) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern __pid_t vfork (void) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *ttyname (int __fd) __attribute__ ((__nothrow__));\n\n\n\nextern int ttyname_r (int __fd, char *__buf, size_t __buflen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;\n\n\n\nextern int isatty (int __fd) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int ttyslot (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern int link (__const char *__from, __const char *__to)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;\n\n\n\n\nextern int linkat (int __fromfd, __const char *__from, int __tofd,\n     __const char *__to, int __flags)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4))) ;\n\n\n\n\nextern int symlink (__const char *__from, __const char *__to)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;\n\n\n\n\nextern ssize_t readlink (__const char *__restrict __path,\n    char *__restrict __buf, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;\n\n\n\n\nextern int symlinkat (__const char *__from, int __tofd,\n        __const char *__to) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;\n\n\nextern ssize_t readlinkat (int __fd, __const char *__restrict __path,\n      char *__restrict __buf, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3))) ;\n\n\n\nextern int unlink (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int unlinkat (int __fd, __const char *__name, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\nextern int rmdir (__const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern __pid_t tcgetpgrp (int __fd) __attribute__ ((__nothrow__));\n\n\nextern int tcsetpgrp (int __fd, __pid_t __pgrp_id) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern char *getlogin (void);\n\n\n\n\n\n\n\nextern int getlogin_r (char *__name, size_t __name_len) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int setlogin (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 837 \"/usr/include/unistd.h\" 3 4\n// # 1 \"/usr/include/getopt.h\" 1 3 4\n// # 59 \"/usr/include/getopt.h\" 3 4\nextern char *optarg;\n// # 73 \"/usr/include/getopt.h\" 3 4\nextern int optind;\n\n\n\n\nextern int opterr;\n\n\n\nextern int optopt;\n// # 152 \"/usr/include/getopt.h\" 3 4\nextern int getopt (int ___argc, char *const *___argv, const char *__shortopts)\n       __attribute__ ((__nothrow__));\n// # 838 \"/usr/include/unistd.h\" 2 3 4\n\n\n\n\n\n\n\nextern int gethostname (char *__name, size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int sethostname (__const char *__name, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern int sethostid (long int __id) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\nextern int getdomainname (char *__name, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\nextern int setdomainname (__const char *__name, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern int vhangup (void) __attribute__ ((__nothrow__));\n\n\nextern int revoke (__const char *__file) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n\n\nextern int profil (unsigned short int *__sample_buffer, size_t __size,\n     size_t __offset, unsigned int __scale)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int acct (__const char *__name) __attribute__ ((__nothrow__));\n\n\n\nextern char *getusershell (void) __attribute__ ((__nothrow__));\nextern void endusershell (void) __attribute__ ((__nothrow__));\nextern void setusershell (void) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int daemon (int __nochdir, int __noclose) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\nextern int chroot (__const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern char *getpass (__const char *__prompt) __attribute__ ((__nonnull__ (1)));\n// # 923 \"/usr/include/unistd.h\" 3 4\nextern int fsync (int __fd);\n\n\n\n\n\n\nextern long int gethostid (void);\n\n\nextern void sync (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern int getpagesize (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\n\n\nextern int getdtablesize (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern int truncate (__const char *__file, __off_t __length)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 960 \"/usr/include/unistd.h\" 3 4\nextern int truncate64 (__const char *__file, __off64_t __length)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 970 \"/usr/include/unistd.h\" 3 4\nextern int ftruncate (int __fd, __off_t __length) __attribute__ ((__nothrow__)) ;\n// # 980 \"/usr/include/unistd.h\" 3 4\nextern int ftruncate64 (int __fd, __off64_t __length) __attribute__ ((__nothrow__)) ;\n// # 990 \"/usr/include/unistd.h\" 3 4\nextern int brk (void *__addr) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\nextern void *sbrk (intptr_t __delta) __attribute__ ((__nothrow__));\n// # 1011 \"/usr/include/unistd.h\" 3 4\nextern long int syscall (long int __sysno, ...) __attribute__ ((__nothrow__));\n// # 1065 \"/usr/include/unistd.h\" 3 4\nextern int fdatasync (int __fildes);\n\n\n\n\n\n\n\nextern char *crypt (__const char *__key, __const char *__salt)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern void encrypt (char *__block, int __edflag) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern void swab (__const void *__restrict __from, void *__restrict __to,\n    ssize_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\n\nextern char *ctermid (char *__s) __attribute__ ((__nothrow__));\n// # 1103 \"/usr/include/unistd.h\" 3 4\n\n// # 30 \"handler_file.c\" 2\n// # 1 \"/usr/include/errno.h\" 1 3 4\n// # 32 \"/usr/include/errno.h\" 3 4\n\n\n\n\n// # 1 \"/usr/include/bits/errno.h\" 1 3 4\n// # 25 \"/usr/include/bits/errno.h\" 3 4\n// # 1 \"/usr/include/linux/errno.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/asm/errno.h\" 1 3 4\n\n\n\n\n// # 1 \"/usr/include/asm-x86_64/errno.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/asm-generic/errno.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/asm-generic/errno-base.h\" 1 3 4\n// # 5 \"/usr/include/asm-generic/errno.h\" 2 3 4\n// # 5 \"/usr/include/asm-x86_64/errno.h\" 2 3 4\n// # 6 \"/usr/include/asm/errno.h\" 2 3 4\n// # 5 \"/usr/include/linux/errno.h\" 2 3 4\n// # 26 \"/usr/include/bits/errno.h\" 2 3 4\n// # 43 \"/usr/include/bits/errno.h\" 3 4\nextern int *__errno_location (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n// # 37 \"/usr/include/errno.h\" 2 3 4\n// # 55 \"/usr/include/errno.h\" 3 4\nextern char *program_invocation_name, *program_invocation_short_name;\n\n\n\n\n// # 69 \"/usr/include/errno.h\" 3 4\ntypedef int error_t;\n// # 31 \"handler_file.c\" 2\n\n\n// # 1 \"server.h\" 1\n// # 34 \"handler_file.c\" 2\n// # 1 \"server-protected.h\" 1\n// # 31 \"server-protected.h\"\n// # 1 \"/usr/include/sys/time.h\" 1 3 4\n// # 29 \"/usr/include/sys/time.h\" 3 4\n// # 1 \"/usr/include/bits/time.h\" 1 3 4\n// # 30 \"/usr/include/sys/time.h\" 2 3 4\n// # 39 \"/usr/include/sys/time.h\" 3 4\n\n// # 57 \"/usr/include/sys/time.h\" 3 4\nstruct timezone\n  {\n    int tz_minuteswest;\n    int tz_dsttime;\n  };\n\ntypedef struct timezone *__restrict __timezone_ptr_t;\n// # 73 \"/usr/include/sys/time.h\" 3 4\nextern int gettimeofday (struct timeval *__restrict __tv,\n    __timezone_ptr_t __tz) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int settimeofday (__const struct timeval *__tv,\n    __const struct timezone *__tz)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int adjtime (__const struct timeval *__delta,\n      struct timeval *__olddelta) __attribute__ ((__nothrow__));\n\n\n\n\nenum __itimer_which\n  {\n\n    ITIMER_REAL = 0,\n\n\n    ITIMER_VIRTUAL = 1,\n\n\n\n    ITIMER_PROF = 2\n\n  };\n\n\n\nstruct itimerval\n  {\n\n    struct timeval it_interval;\n\n    struct timeval it_value;\n  };\n\n\n\n\ntypedef enum __itimer_which __itimer_which_t;\n\n\n\n\n\n\nextern int getitimer (__itimer_which_t __which,\n        struct itimerval *__value) __attribute__ ((__nothrow__));\n\n\n\n\nextern int setitimer (__itimer_which_t __which,\n        __const struct itimerval *__restrict __new,\n        struct itimerval *__restrict __old) __attribute__ ((__nothrow__));\n\n\n\n\nextern int utimes (__const char *__file, __const struct timeval __tvp[2])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int lutimes (__const char *__file, __const struct timeval __tvp[2])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int futimes (int __fd, __const struct timeval __tvp[2]) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int futimesat (int __fd, __const char *__file,\n        __const struct timeval __tvp[2]) __attribute__ ((__nothrow__));\n// # 191 \"/usr/include/sys/time.h\" 3 4\n\n// # 32 \"server-protected.h\" 2\n// # 44 \"server-protected.h\"\n// # 1 \"server.h\" 1\n// # 45 \"server-protected.h\" 2\n// # 1 \"list.h\" 1\n// # 46 \"server-protected.h\" 2\n// # 1 \"fdpoll.h\" 1\n// # 32 \"fdpoll.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"fdpoll.h\" 2\n\n\n\n\n\n\n\n\ntypedef enum {\n cherokee_poll_epoll,\n cherokee_poll_kqueue,\n cherokee_poll_port,\n cherokee_poll_poll,\n cherokee_poll_select,\n cherokee_poll_win32,\n cherokee_poll_UNSET\n} cherokee_poll_type_t;\n\n\n\ntypedef struct cherokee_fdpoll cherokee_fdpoll_t;\n\nret_t cherokee_fdpoll_get_fdlimits(cherokee_poll_type_t type, cuint_t *sys_fd_limit, cuint_t *fd_limit);\n\nret_t cherokee_fdpoll_new (cherokee_fdpoll_t **fdp, cherokee_poll_type_t type, int sys_fd_limit, int fd_limit);\nret_t cherokee_fdpoll_best_new (cherokee_fdpoll_t **fdp, int sys_limit, int limit);\nret_t cherokee_fdpoll_free (cherokee_fdpoll_t *fdp);\n\nret_t cherokee_fdpoll_get_method (cherokee_fdpoll_t *fdp, cherokee_poll_type_t *poll_type);\nret_t cherokee_fdpoll_get_method_str (cherokee_fdpoll_t *fdp, const char **str_method);\nret_t cherokee_fdpoll_str_to_method (char *str_method, cherokee_poll_type_t *poll_method);\n\nret_t cherokee_fdpoll_add (cherokee_fdpoll_t *fdp, int fd, int rw);\nret_t cherokee_fdpoll_del (cherokee_fdpoll_t *fdp, int fd);\nret_t cherokee_fdpoll_reset (cherokee_fdpoll_t *fdp, int fd);\nret_t cherokee_fdpoll_set_mode (cherokee_fdpoll_t *fdp, int fd, int rw);\nint cherokee_fdpoll_check (cherokee_fdpoll_t *fdp, int fd, int rw);\nint cherokee_fdpoll_watch (cherokee_fdpoll_t *fdp, int timeout_msecs);\nret_t cherokee_fdpoll_is_full (cherokee_fdpoll_t *fdp);\nint cherokee_fdpoll_is_empty (cherokee_fdpoll_t *fdp);\n\n\n// # 47 \"server-protected.h\" 2\n// # 1 \"virtual_server.h\" 1\n// # 31 \"virtual_server.h\"\n// # 1 \"avl.h\" 1\n// # 32 \"avl.h\"\n// # 1 \"../cherokee/buffer.h\" 1\n// # 33 \"avl.h\" 2\n// # 1 \"../cherokee/avl_generic.h\" 1\n// # 32 \"../cherokee/avl_generic.h\"\n// # 1 \"../cherokee/buffer.h\" 1\n// # 33 \"../cherokee/avl_generic.h\" 2\n\n\n\n\n\n\n\ntypedef struct cherokee_avl_generic_node cherokee_avl_generic_node_t;\n\nstruct cherokee_avl_generic_node {\n short balance;\n struct cherokee_avl_generic_node *left;\n struct cherokee_avl_generic_node *right;\n cherokee_boolean_t left_child;\n cherokee_boolean_t right_child;\n void *value;\n};\n\n\n\nret_t cherokee_avl_generic_node_init (cherokee_avl_generic_node_t *node);\n\n\n\n\n\ntypedef struct cherokee_avl_generic cherokee_avl_generic_t;\n\ntypedef ret_t (*avl_gen_node_mrproper_t) (cherokee_avl_generic_node_t *);\ntypedef ret_t (*avl_gen_node_cmp_t) (cherokee_avl_generic_node_t *, cherokee_avl_generic_node_t *, cherokee_avl_generic_t *);\ntypedef ret_t (*avl_gen_node_is_empty_t) (cherokee_avl_generic_node_t *);\n\n\nstruct cherokee_avl_generic {\n cherokee_avl_generic_node_t *root;\n\n\n avl_gen_node_mrproper_t node_mrproper;\n avl_gen_node_cmp_t node_cmp;\n avl_gen_node_is_empty_t node_is_empty;\n};\n\n\n\nret_t cherokee_avl_generic_init (cherokee_avl_generic_t *avl);\n\n\n\n\ntypedef ret_t (* cherokee_avl_generic_while_func_t) (cherokee_avl_generic_node_t *key, void *value, void *param);\n\nret_t cherokee_avl_mrproper (cherokee_avl_generic_t *avl, cherokee_func_free_t free_func);\nret_t cherokee_avl_free (cherokee_avl_generic_t *avl, cherokee_func_free_t free_func);\nret_t cherokee_avl_check (cherokee_avl_generic_t *avl);\nret_t cherokee_avl_len (cherokee_avl_generic_t *avl, size_t *len);\nint cherokee_avl_is_empty (cherokee_avl_generic_t *avl);\n\nret_t cherokee_avl_generic_add (cherokee_avl_generic_t *avl, cherokee_avl_generic_node_t *key, void *value);\nret_t cherokee_avl_generic_del (cherokee_avl_generic_t *avl, cherokee_avl_generic_node_t *key, void **value);\nret_t cherokee_avl_generic_get (cherokee_avl_generic_t *avl, cherokee_avl_generic_node_t *key, void **value);\n\nret_t cherokee_avl_generic_while (cherokee_avl_generic_t *avl,\n      cherokee_avl_generic_while_func_t func,\n      void *param,\n      cherokee_avl_generic_node_t **key,\n      void **value);\n\n\n// # 34 \"avl.h\" 2\n\n\n\n\n\n\ntypedef struct {\n cherokee_avl_generic_node_t base;\n cherokee_buffer_t key;\n} cherokee_avl_node_t;\n\n\n\ntypedef struct {\n cherokee_avl_generic_t base;\n cherokee_boolean_t case_insensitive;\n} cherokee_avl_t;\n\n\n\n\n\n\nret_t cherokee_avl_init (cherokee_avl_t *avl);\nret_t cherokee_avl_new (cherokee_avl_t **avl);\nret_t cherokee_avl_set_case (cherokee_avl_t *avl, cherokee_boolean_t case_insensitive);\n\nret_t cherokee_avl_add (cherokee_avl_t *avl, cherokee_buffer_t *key, void *value);\nret_t cherokee_avl_del (cherokee_avl_t *avl, cherokee_buffer_t *key, void **value);\nret_t cherokee_avl_get (cherokee_avl_t *avl, cherokee_buffer_t *key, void **value);\n\nret_t cherokee_avl_add_ptr (cherokee_avl_t *avl, const char *key, void *value);\nret_t cherokee_avl_del_ptr (cherokee_avl_t *avl, const char *key, void **value);\nret_t cherokee_avl_get_ptr (cherokee_avl_t *avl, const char *key, void **value);\n\n\ntypedef ret_t (* cherokee_avl_while_func_t) (cherokee_buffer_t *key, void *value, void *param);\n\nret_t cherokee_avl_while (cherokee_avl_generic_t *avl,\n     cherokee_avl_while_func_t func,\n     void *param,\n     cherokee_buffer_t **key,\n     void **value);\n\n\n\n// # 32 \"virtual_server.h\" 2\n// # 1 \"list.h\" 1\n// # 33 \"virtual_server.h\" 2\n// # 1 \"handler.h\" 1\n// # 32 \"handler.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"handler.h\" 2\n// # 1 \"../cherokee/module.h\" 1\n// # 34 \"handler.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 35 \"handler.h\" 2\n\n\n\n\ntypedef enum {\n hsupport_nothing = 0,\n hsupport_length = 1,\n hsupport_maybe_length = 1 << 1,\n hsupport_range = 1 << 2,\n hsupport_error = 1 << 3,\n hsupport_full_headers = 1 << 4\n} cherokee_handler_support_t;\n\n\n\n\ntypedef ret_t (* handler_func_new_t) (void **handler, void *cnt, cherokee_module_props_t *properties);\ntypedef ret_t (* handler_func_init_t) (void *handler);\ntypedef ret_t (* handler_func_read_post_t) (void *handler);\ntypedef ret_t (* handler_func_step_t) (void *handler, cherokee_buffer_t *buffer);\ntypedef ret_t (* handler_func_add_headers_t) (void *handler, cherokee_buffer_t *buffer);\ntypedef ret_t (* handler_func_configure_t) (cherokee_config_node_t *, cherokee_server_t *, cherokee_module_props_t **);\n\n\n\n\ntypedef struct {\n cherokee_module_t module;\n\n\n\n handler_func_read_post_t read_post;\n handler_func_add_headers_t add_headers;\n handler_func_step_t step;\n\n\n\n void *connection;\n cherokee_handler_support_t support;\n} cherokee_handler_t;\n// # 87 \"handler.h\"\ntypedef struct {\n cherokee_module_props_t base;\n cherokee_http_method_t valid_methods;\n} cherokee_handler_props_t;\n// # 118 \"handler.h\"\nret_t cherokee_handler_init_base (cherokee_handler_t *hdl, void *conn, cherokee_handler_props_t *props, cherokee_plugin_info_handler_t *info);\nret_t cherokee_handler_free_base (cherokee_handler_t *hdl);\n\n\n\nret_t cherokee_handler_init (cherokee_handler_t *hdl);\nret_t cherokee_handler_free (cherokee_handler_t *hdl);\nret_t cherokee_handler_read_post (cherokee_handler_t *hdl);\nret_t cherokee_handler_add_headers (cherokee_handler_t *hdl, cherokee_buffer_t *buffer);\nret_t cherokee_handler_step (cherokee_handler_t *hdl, cherokee_buffer_t *buffer);\n\n\n\nret_t cherokee_handler_props_init_base (cherokee_handler_props_t *props, module_func_props_free_t free_func);\nret_t cherokee_handler_props_free_base (cherokee_handler_props_t *props);\n\n\n\nret_t cherokee_handler_add_header_options (cherokee_handler_t *hdl, cherokee_buffer_t *buffer);\n\n\n// # 34 \"virtual_server.h\" 2\n// # 1 \"config_entry.h\" 1\n// # 32 \"config_entry.h\"\n// # 1 \"common.h\" 1\n// # 33 \"config_entry.h\" 2\n\n\n\n// # 1 \"avl.h\" 1\n// # 37 \"config_entry.h\" 2\n// # 1 \"handler.h\" 1\n// # 38 \"config_entry.h\" 2\n// # 1 \"http.h\" 1\n// # 39 \"config_entry.h\" 2\n// # 1 \"validator.h\" 1\n// # 32 \"validator.h\"\n// # 1 \"common.h\" 1\n// # 33 \"validator.h\" 2\n// # 1 \"buffer.h\" 1\n// # 34 \"validator.h\" 2\n// # 1 \"module.h\" 1\n// # 35 \"validator.h\" 2\n// # 1 \"http.h\" 1\n// # 36 \"validator.h\" 2\n// # 1 \"connection.h\" 1\n// # 32 \"connection.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"connection.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"connection.h\" 2\n\n\n\n\ntypedef struct cherokee_connection cherokee_connection_t;\n\n\n\n\n\nret_t cherokee_connection_set_cork (cherokee_connection_t *conn, cherokee_boolean_t enable);\nret_t cherokee_connection_parse_args (cherokee_connection_t *conn);\n\n\n\nconst char *cherokee_connection_get_phase_str (cherokee_connection_t *conn);\n\n\n// # 37 \"validator.h\" 2\n// # 1 \"config_node.h\" 1\n// # 38 \"validator.h\" 2\n\n\n\n\n\n\ntypedef ret_t (* validator_func_new_t) (void **validator, cherokee_module_props_t *props);\ntypedef ret_t (* validator_func_check_t) (void *validator, void *conn);\ntypedef ret_t (* validator_func_add_headers_t) (void *validator, void *conn, cherokee_buffer_t *buf);\ntypedef ret_t (* validator_func_configure_t) (cherokee_config_node_t *, cherokee_server_t *, cherokee_module_props_t **);\n\n\n\n\ntypedef struct {\n cherokee_module_t module;\n\n\n\n validator_func_check_t check;\n validator_func_add_headers_t add_headers;\n\n\n\n cherokee_http_auth_t support;\n\n\n\n cherokee_buffer_t user;\n cherokee_buffer_t passwd;\n cherokee_buffer_t realm;\n cherokee_buffer_t response;\n cherokee_buffer_t uri;\n cherokee_buffer_t qop;\n cherokee_buffer_t nonce;\n cherokee_buffer_t cnonce;\n cherokee_buffer_t algorithm;\n cherokee_buffer_t nc;\n\n} cherokee_validator_t;\n\n\n\n\n\n\ntypedef struct {\n cherokee_module_props_t base;\n cherokee_http_auth_t valid_methods;\n} cherokee_validator_props_t;\n// # 115 \"validator.h\"\nret_t cherokee_validator_init_base (cherokee_validator_t *validator, cherokee_validator_props_t *props, cherokee_plugin_info_validator_t *info);\nret_t cherokee_validator_free_base (cherokee_validator_t *validator);\n\n\n\nret_t cherokee_validator_configure (cherokee_config_node_t *conf, void *config_entry);\nret_t cherokee_validator_free (cherokee_validator_t *validator);\nret_t cherokee_validator_check (cherokee_validator_t *validator, void *conn);\nret_t cherokee_validator_add_headers (cherokee_validator_t *validator, void *conn, cherokee_buffer_t *buf);\n\n\n\nret_t cherokee_validator_parse_basic (cherokee_validator_t *validator, char *str, cuint_t str_len);\nret_t cherokee_validator_parse_digest (cherokee_validator_t *validator, char *str, cuint_t str_len);\nret_t cherokee_validator_digest_response (cherokee_validator_t *validator, char *A1, cherokee_buffer_t *buf, cherokee_connection_t *conn);\nret_t cherokee_validator_digest_check (cherokee_validator_t *validator, cherokee_buffer_t *passwd, cherokee_connection_t *conn);\n\n\n\nret_t cherokee_validator_props_init_base (cherokee_validator_props_t *props, module_func_props_free_t free_func);\nret_t cherokee_validator_props_free_base (cherokee_validator_props_t *props);\n\n\n// # 40 \"config_entry.h\" 2\n// # 1 \"nullable.h\" 1\n// # 33 \"nullable.h\"\n\n\ntypedef int cherokee_null_bool_t;\ntypedef int cherokee_null_int_t;\n// # 46 \"nullable.h\"\n\n// # 41 \"config_entry.h\" 2\n// # 1 \"encoder.h\" 1\n// # 32 \"encoder.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"encoder.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"encoder.h\" 2\n// # 1 \"../cherokee/module.h\" 1\n// # 35 \"encoder.h\" 2\n\n\n\n\ntypedef enum {\n cherokee_encoder_unset,\n cherokee_encoder_allow,\n cherokee_encoder_forbid\n} cherokee_encoder_perms_t;\n\n\n\n\ntypedef ret_t (* encoder_func_new_t) (void **encoder, void *props);\ntypedef ret_t (* encoder_func_free_t) (void *encoder);\ntypedef ret_t (* encoder_func_add_headers_t) (void *encoder, cherokee_buffer_t *buf);\ntypedef ret_t (* encoder_func_init_t) (void *encoder, void *conn);\ntypedef ret_t (* encoder_func_encode_t) (void *encoder, cherokee_buffer_t *in, cherokee_buffer_t *out);\ntypedef ret_t (* encoder_func_flush_t) (void *encoder, cherokee_buffer_t *in, cherokee_buffer_t *out);\ntypedef ret_t (* encoder_func_configure_t) (cherokee_config_node_t *, cherokee_server_t *, cherokee_module_props_t **);\n\n\n\n\ntypedef struct {\n cherokee_module_props_t base;\n cherokee_encoder_perms_t perms;\n encoder_func_new_t instance_func;\n} cherokee_encoder_props_t;\n\n\n\n\n\n\ntypedef struct {\n cherokee_module_t module;\n\n\n\n encoder_func_add_headers_t add_headers;\n encoder_func_encode_t encode;\n encoder_func_flush_t flush;\n\n\n\n void *conn;\n} cherokee_encoder_t;\n// # 110 \"encoder.h\"\nret_t cherokee_encoder_init_base (cherokee_encoder_t *enc,\n        cherokee_plugin_info_t *info,\n        cherokee_encoder_props_t *props);\n\n\n\nret_t cherokee_encoder_configure (cherokee_config_node_t *config,\n      cherokee_server_t *srv,\n      cherokee_module_props_t **_props);\n\nret_t cherokee_encoder_props_init_base (cherokee_encoder_props_t *props,\n     module_func_props_free_t free_func);\n\nret_t cherokee_encoder_props_free_base (cherokee_encoder_props_t *encoder_props);\n\n\n\nret_t cherokee_encoder_free (cherokee_encoder_t *enc);\nret_t cherokee_encoder_add_headers (cherokee_encoder_t *enc, cherokee_buffer_t *buf);\nret_t cherokee_encoder_init (cherokee_encoder_t *enc, void *conn);\nret_t cherokee_encoder_encode (cherokee_encoder_t *enc, cherokee_buffer_t *in, cherokee_buffer_t *out);\nret_t cherokee_encoder_flush (cherokee_encoder_t *enc, cherokee_buffer_t *in, cherokee_buffer_t *out);\n\n\n\n// # 42 \"config_entry.h\" 2\n// # 1 \"flcache.h\" 1\n// # 32 \"flcache.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"flcache.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"flcache.h\" 2\n// # 1 \"../cherokee/avl_flcache.h\" 1\n// # 32 \"../cherokee/avl_flcache.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/avl_flcache.h\" 2\n// # 1 \"../cherokee/avl_generic.h\" 1\n// # 34 \"../cherokee/avl_flcache.h\" 2\n// # 1 \"../cherokee/connection.h\" 1\n// # 35 \"../cherokee/avl_flcache.h\" 2\n\n\n\ntypedef enum {\n flcache_status_undef,\n flcache_status_storing,\n flcache_status_ready\n} cherokee_flcache_status_t;\n\n\n\ntypedef struct {\n cherokee_avl_generic_node_t base;\n cherokee_list_t to_del;\n\n cint_t ref_count;\n pthread_mutex_t ref_count_mutex;\n\n cherokee_buffer_t request;\n cherokee_buffer_t query_string;\n cherokee_buffer_t content_encoding;\n\n cherokee_connection_t *conn_ref;\n\n cherokee_flcache_status_t status;\n cherokee_buffer_t file;\n cullong_t file_size;\n\n time_t created_at;\n time_t valid_until;\n} cherokee_avl_flcache_node_t;\n\n\n\n\ntypedef struct {\n cherokee_avl_generic_t base;\n pthread_rwlock_t base_rwlock;\n} cherokee_avl_flcache_t;\n\n\n\n\n\n\nret_t cherokee_avl_flcache_init (cherokee_avl_flcache_t *avl);\nret_t cherokee_avl_flcache_mrproper (cherokee_avl_flcache_t *avl, cherokee_func_free_t free_value);\nret_t cherokee_avl_flcache_cleanup (cherokee_avl_flcache_t *avl);\n\nret_t cherokee_avl_flcache_add (cherokee_avl_flcache_t *avl,\n           cherokee_connection_t *conn,\n           cherokee_avl_flcache_node_t **node);\n\nret_t cherokee_avl_flcache_get (cherokee_avl_flcache_t *avl,\n           cherokee_connection_t *conn,\n           cherokee_avl_flcache_node_t **node);\n\nret_t cherokee_avl_flcache_del (cherokee_avl_flcache_t *avl,\n           cherokee_avl_flcache_node_t *node);\n\nret_t cherokee_avl_flcache_purge_path (cherokee_avl_flcache_t *avl,\n           cherokee_buffer_t *path);\n\n\n// # 35 \"flcache.h\" 2\n// # 1 \"../cherokee/connection.h\" 1\n// # 36 \"flcache.h\" 2\n// # 1 \"../cherokee/config_node.h\" 1\n// # 37 \"flcache.h\" 2\n\n\n\n\ntypedef struct cherokee_flcache cherokee_flcache_t;\ntypedef struct cherokee_flcache_entry cherokee_flcache_entry_t;\ntypedef struct cherokee_flcache_conn cherokee_flcache_conn_t;\n\n\n\n\ntypedef enum {\n flcache_mode_undef,\n flcache_mode_in,\n flcache_mode_out,\n flcache_mode_error\n} cherokee_flcache_mode_t;\n\ntypedef enum {\n flcache_policy_explicitly_allowed,\n flcache_policy_all_but_forbidden\n} cherokee_flcache_policy_t;\n\n\nstruct cherokee_flcache {\n cherokee_avl_flcache_t request_map;\n cherokee_buffer_t local_directory;\n culong_t last_file_id;\n};\n\nstruct cherokee_flcache_conn {\n cherokee_flcache_mode_t mode;\n int fd;\n\n\n clong_t header_sent;\n clong_t response_sent;\n cherokee_avl_flcache_node_t *avl_node_ref;\n cherokee_buffer_t header;\n};\n\n\n\n\nret_t cherokee_flcache_new (cherokee_flcache_t **flcache);\nret_t cherokee_flcache_free (cherokee_flcache_t *flcache);\nret_t cherokee_flcache_configure (cherokee_flcache_t *flcache, cherokee_config_node_t *conf, void *vserver);\n\nret_t cherokee_flcache_cleanup (cherokee_flcache_t *flcache);\nret_t cherokee_flcache_req_get_cached (cherokee_flcache_t *flcache, cherokee_connection_t *conn);\nret_t cherokee_flcache_req_is_storable (cherokee_flcache_t *flcache, cherokee_connection_t *conn);\nret_t cherokee_flcache_req_set_store (cherokee_flcache_t *flcache, cherokee_connection_t *conn);\nret_t cherokee_flcache_del_entry (cherokee_flcache_t *flcache, cherokee_avl_flcache_node_t *entry);\nret_t cherokee_flcache_purge_path (cherokee_flcache_t *flcache, cherokee_buffer_t *path);\n\n\n\nret_t cherokee_flcache_conn_init (cherokee_flcache_conn_t *flcache_conn);\nret_t cherokee_flcache_conn_clean (cherokee_flcache_conn_t *flcache_conn);\n\nret_t cherokee_flcache_conn_write_header (cherokee_flcache_conn_t *flcache_conn, cherokee_connection_t *conn);\nret_t cherokee_flcache_conn_write_body (cherokee_flcache_conn_t *flcache_conn, cherokee_connection_t *conn);\nret_t cherokee_flcache_conn_commit_header (cherokee_flcache_conn_t *flcache_conn, cherokee_connection_t *conn);\n\nret_t cherokee_flcache_conn_send_header (cherokee_flcache_conn_t *flcache_conn, cherokee_connection_t *conn);\nret_t cherokee_flcache_conn_send_body (cherokee_flcache_conn_t *flcache_conn, cherokee_connection_t *conn);\n\n\n\n// # 43 \"config_entry.h\" 2\n\n\n\n\ntypedef enum {\n cherokee_expiration_none,\n cherokee_expiration_epoch,\n cherokee_expiration_max,\n cherokee_expiration_time\n} cherokee_expiration_t;\n\ntypedef enum {\n cherokee_expiration_prop_none = 0,\n\n\n cherokee_expiration_prop_public = 1,\n cherokee_expiration_prop_private = 1 << 1,\n cherokee_expiration_prop_no_cache = 1 << 2,\n\n\n cherokee_expiration_prop_no_store = 1 << 3,\n cherokee_expiration_prop_no_transform = 1 << 4,\n\n\n cherokee_expiration_prop_must_revalidate = 1 << 5,\n cherokee_expiration_prop_proxy_revalidate = 1 << 6,\n} cherokee_expiration_props_t;\n\n\nstruct cherokee_config_entry {\n\n\n cherokee_buffer_t *document_root;\n cherokee_boolean_t only_secure;\n cherokee_null_bool_t no_log;\n void *access;\n cherokee_list_t *header_ops;\n\n\n\n handler_func_new_t handler_new_func;\n cherokee_http_method_t handler_methods;\n cherokee_module_props_t *handler_properties;\n\n\n\n validator_func_new_t validator_new_func;\n cherokee_module_props_t *validator_properties;\n\n cherokee_buffer_t *auth_realm;\n cherokee_http_auth_t authentication;\n cherokee_avl_t *users;\n\n\n\n cherokee_expiration_t expiration;\n time_t expiration_time;\n cherokee_expiration_props_t expiration_prop;\n\n\n\n cherokee_null_bool_t flcache;\n cherokee_flcache_policy_t flcache_policy;\n cherokee_list_t *flcache_cookies_disregard;\n\n\n\n cherokee_avl_t *encoders;\n\n\n\n cuint_t limit_bps;\n\n\n\n cherokee_null_int_t timeout_lapse;\n cherokee_buffer_t *timeout_header;\n};\n\ntypedef struct cherokee_config_entry cherokee_config_entry_t;\ntypedef struct cherokee_config_entry cherokee_config_entry_ref_t;\n\n\n\n\n\nret_t cherokee_config_entry_new (cherokee_config_entry_t **entry);\nret_t cherokee_config_entry_free (cherokee_config_entry_t *entry);\nret_t cherokee_config_entry_init (cherokee_config_entry_t *entry);\nret_t cherokee_config_entry_mrproper (cherokee_config_entry_t *entry);\n\nret_t cherokee_config_entry_set_encoder (cherokee_config_entry_t *entry,\n      cherokee_buffer_t *encoder_name,\n      cherokee_plugin_info_t *plugin_info,\n      cherokee_encoder_props_t *encoder_props);\n\nret_t cherokee_config_entry_set_handler (cherokee_config_entry_t *entry,\n      cherokee_plugin_info_handler_t *plugin_info);\n\nret_t cherokee_config_entry_complete (cherokee_config_entry_t *entry,\n      cherokee_config_entry_t *source);\n\nret_t cherokee_config_entry_print (cherokee_config_entry_t *entry);\n\n\n\nret_t cherokee_config_entry_ref_init (cherokee_config_entry_ref_t *entry);\nret_t cherokee_config_entry_ref_clean (cherokee_config_entry_ref_t *entry);\n// # 35 \"virtual_server.h\" 2\n// # 1 \"logger.h\" 1\n// # 36 \"virtual_server.h\" 2\n// # 1 \"config_node.h\" 1\n// # 37 \"virtual_server.h\" 2\n// # 1 \"rule_list.h\" 1\n// # 32 \"rule_list.h\"\n// # 1 \"../cherokee/rule.h\" 1\n// # 32 \"../cherokee/rule.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/rule.h\" 2\n// # 1 \"../cherokee/module.h\" 1\n// # 34 \"../cherokee/rule.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 35 \"../cherokee/rule.h\" 2\n// # 1 \"../cherokee/list.h\" 1\n// # 36 \"../cherokee/rule.h\" 2\n// # 1 \"../cherokee/plugin.h\" 1\n// # 37 \"../cherokee/rule.h\" 2\n// # 1 \"../cherokee/config_entry.h\" 1\n// # 38 \"../cherokee/rule.h\" 2\n\n\n\n\n\n\n\n\ntypedef ret_t (* rule_func_new_t) (void **rule);\ntypedef ret_t (* rule_func_configure_t) (void *rule, cherokee_config_node_t *conf, void *vsrv);\ntypedef ret_t (* rule_func_match_t) (void *rule, void *cnt, void *ret_conf);\n\n\n\nstruct cherokee_rule {\n cherokee_module_t module;\n\n\n cherokee_list_t list_node;\n cherokee_config_entry_t config;\n\n cherokee_boolean_t final;\n cuint_t priority;\n struct cherokee_rule *parent_rule;\n\n\n rule_func_match_t match;\n rule_func_configure_t configure;\n};\n\ntypedef struct cherokee_rule cherokee_rule_t;\n// # 84 \"../cherokee/rule.h\"\nret_t cherokee_rule_free (cherokee_rule_t *rule);\n\n\n\nret_t cherokee_rule_init_base (cherokee_rule_t *rule, cherokee_plugin_info_t *info);\n\n\n\nret_t cherokee_rule_match (cherokee_rule_t *rule, void *cnt, void *ret_conf);\nret_t cherokee_rule_configure (cherokee_rule_t *rule, cherokee_config_node_t *conf, void *vsrv);\n\n\n\nvoid cherokee_rule_get_config (cherokee_rule_t *rule, cherokee_config_entry_t **config);\n\n\n// # 33 \"rule_list.h\" 2\n// # 1 \"../cherokee/list.h\" 1\n// # 34 \"rule_list.h\" 2\n// # 1 \"../cherokee/connection.h\" 1\n// # 35 \"rule_list.h\" 2\n\n\n\ntypedef struct {\n cherokee_list_t rules;\n cherokee_rule_t *def_rule;\n} cherokee_rule_list_t;\n\n\nret_t cherokee_rule_list_init (cherokee_rule_list_t *list);\nret_t cherokee_rule_list_mrproper (cherokee_rule_list_t *list);\n\nret_t cherokee_rule_list_add (cherokee_rule_list_t *list, cherokee_rule_t *rule);\nret_t cherokee_rule_list_sort (cherokee_rule_list_t *list);\n\nret_t cherokee_rule_list_match (cherokee_rule_list_t *list,\n       cherokee_connection_t *conn,\n       cherokee_config_entry_t *ret_config);\n\n\n// # 38 \"virtual_server.h\" 2\n// # 1 \"cryptor.h\" 1\n// # 32 \"cryptor.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"cryptor.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"cryptor.h\" 2\n// # 1 \"../cherokee/module.h\" 1\n// # 35 \"cryptor.h\" 2\n\n\n\n\n\n\n\ntypedef ret_t (* cryptor_func_new_t) (void **cryp);\ntypedef ret_t (* cryptor_func_free_t) (void *cryp);\ntypedef ret_t (* cryptor_func_configure_t) (void *cryp, cherokee_config_node_t *, cherokee_server_t *);\ntypedef ret_t (* cryptor_func_vserver_new_t) (void *cryp, void *vsrv, void **vserver_crypt);\ntypedef ret_t (* cryptor_func_socket_new_t) (void *cryp, void **socket_crypt);\ntypedef ret_t (* cryptor_func_client_new_t) (void *cryp, void **client_crypt);\n\n\ntypedef ret_t (* cryptor_vsrv_func_free_t) (void *cryp);\n\n\ntypedef ret_t (* cryptor_socket_func_free_t) (void *cryp);\ntypedef ret_t (* cryptor_socket_func_clean_t) (void *cryp);\ntypedef ret_t (* cryptor_socket_func_init_tls_t)(void *cryp, void *sock, void *vsrv, void *conn, void *blocking);\ntypedef ret_t (* cryptor_socket_func_shutdown_t)(void *cryp);\ntypedef ret_t (* cryptor_socket_func_read_t) (void *cryp, char *buf, int len, size_t *re_len);\ntypedef ret_t (* cryptor_socket_func_write_t) (void *cryp, char *buf, int len, size_t *re_len);\ntypedef int (* cryptor_socket_func_pending_t) (void *cryp);\n\n\ntypedef ret_t (* cryptor_client_func_init_t) (void *cryp, void *host, void *socket);\n\n\n\ntypedef struct {\n cherokee_module_t module;\n cint_t timeout_handshake;\n cherokee_boolean_t allow_SSLv2;\n\n\n cryptor_func_configure_t configure;\n cryptor_func_vserver_new_t vserver_new;\n cryptor_func_socket_new_t socket_new;\n cryptor_func_client_new_t client_new;\n} cherokee_cryptor_t;\n\ntypedef struct {\n\n cryptor_vsrv_func_free_t free;\n} cherokee_cryptor_vserver_t;\n\ntypedef struct {\n cherokee_boolean_t initialized;\n void *vserver_ref;\n\n\n cryptor_socket_func_free_t free;\n cryptor_socket_func_clean_t clean;\n cryptor_socket_func_init_tls_t init_tls;\n cryptor_socket_func_shutdown_t shutdown;\n cryptor_socket_func_read_t read;\n cryptor_socket_func_write_t write;\n cryptor_socket_func_pending_t pending;\n} cherokee_cryptor_socket_t;\n\ntypedef struct {\n cherokee_cryptor_socket_t base;\n} cherokee_cryptor_client_t;\n// # 129 \"cryptor.h\"\nret_t cherokee_cryptor_init_base (cherokee_cryptor_t *cryp,\n        cherokee_plugin_info_t *info);\nret_t cherokee_cryptor_free_base (cherokee_cryptor_t *cryp);\nret_t cherokee_cryptor_free (cherokee_cryptor_t *cryp);\n\nret_t cherokee_cryptor_configure (cherokee_cryptor_t *cryp,\n        cherokee_config_node_t *conf,\n        cherokee_server_t *srv);\n\nret_t cherokee_cryptor_vserver_new (cherokee_cryptor_t *cryp,\n        void *vsrv,\n        cherokee_cryptor_vserver_t **cryp_vsrv);\n\nret_t cherokee_cryptor_socket_new (cherokee_cryptor_t *cryp,\n        cherokee_cryptor_socket_t **cryp_sock);\n\nret_t cherokee_cryptor_client_new (cherokee_cryptor_t *cryp,\n        cherokee_cryptor_client_t **cryp_client);\n\n\n\nret_t cherokee_cryptor_vserver_init_base (cherokee_cryptor_vserver_t *cryp);\nret_t cherokee_cryptor_vserver_free (cherokee_cryptor_vserver_t *cryp);\n\n\n\nret_t cherokee_cryptor_socket_init_base (cherokee_cryptor_socket_t *cryp);\nret_t cherokee_cryptor_socket_clean_base (cherokee_cryptor_socket_t *cryp);\n\nret_t cherokee_cryptor_socket_free (cherokee_cryptor_socket_t *cryp);\nret_t cherokee_cryptor_socket_clean (cherokee_cryptor_socket_t *cryp);\nret_t cherokee_cryptor_socket_shutdown (cherokee_cryptor_socket_t *cryp);\nret_t cherokee_cryptor_socket_init_tls (cherokee_cryptor_socket_t *cryp,\n        void *sock,\n        void *vsrv,\n        void *conn,\n        void *blocking);\nret_t cherokee_cryptor_socket_read (cherokee_cryptor_socket_t *cryp,\n        char *buf,\n        int buf_size,\n        size_t *pcnt_read);\nret_t cherokee_cryptor_socket_write (cherokee_cryptor_socket_t *cryp,\n        char *buf,\n        int buf_len,\n        size_t *written);\nint cherokee_cryptor_socket_pending (cherokee_cryptor_socket_t *cryp);\n\n\n\nret_t cherokee_cryptor_client_init (cherokee_cryptor_client_t *cryp,\n        cherokee_buffer_t *host,\n        void *socket);\n\n\n// # 39 \"virtual_server.h\" 2\n// # 1 \"vrule.h\" 1\n// # 32 \"vrule.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"vrule.h\" 2\n// # 1 \"../cherokee/module.h\" 1\n// # 34 \"vrule.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 35 \"vrule.h\" 2\n// # 1 \"../cherokee/list.h\" 1\n// # 36 \"vrule.h\" 2\n// # 1 \"../cherokee/plugin.h\" 1\n// # 37 \"vrule.h\" 2\n\n\n\n\n\n\n\n\ntypedef ret_t (* vrule_func_new_t) (void **vrule);\ntypedef ret_t (* vrule_func_configure_t) (void *vrule, cherokee_config_node_t *conf, void *vsrv);\ntypedef ret_t (* vrule_func_match_t) (void *vrule, cherokee_buffer_t *host, void *conn);\n\n\n\ntypedef struct {\n cherokee_module_t module;\n\n\n cherokee_list_t list_node;\n cuint_t priority;\n void *virtual_server;\n\n\n vrule_func_match_t match;\n vrule_func_configure_t configure;\n} cherokee_vrule_t;\n// # 79 \"vrule.h\"\nret_t cherokee_vrule_free (cherokee_vrule_t *vrule);\n\n\n\nret_t cherokee_vrule_init_base (cherokee_vrule_t *vrule, cherokee_plugin_info_t *info);\n\n\n\nret_t cherokee_vrule_match (cherokee_vrule_t *vrule, cherokee_buffer_t *host, void *conn);\nret_t cherokee_vrule_configure (cherokee_vrule_t *vrule, cherokee_config_node_t *conf, void *vsrv);\n\n\n// # 40 \"virtual_server.h\" 2\n// # 1 \"gen_evhost.h\" 1\n// # 32 \"gen_evhost.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"gen_evhost.h\" 2\n// # 1 \"../cherokee/module.h\" 1\n// # 34 \"gen_evhost.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 35 \"gen_evhost.h\" 2\n// # 1 \"../cherokee/plugin.h\" 1\n// # 36 \"gen_evhost.h\" 2\n// # 1 \"../cherokee/template.h\" 1\n// # 32 \"../cherokee/template.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/template.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"../cherokee/template.h\" 2\n// # 1 \"../cherokee/list.h\" 1\n// # 35 \"../cherokee/template.h\" 2\n\n\n\ntypedef ret_t (* cherokee_tem_repl_func_t) (void *template, void *token, cherokee_buffer_t *output, void *param);\n\ntypedef struct {\n cherokee_buffer_t text;\n cherokee_list_t tokens;\n cherokee_list_t replacements;\n} cherokee_template_t;\n\ntypedef struct {\n cherokee_list_t listed;\n cherokee_buffer_t key;\n cherokee_tem_repl_func_t func;\n void *param;\n} cherokee_template_token_t;\n\n\n\n\n\n\n\nret_t cherokee_template_init (cherokee_template_t *tem);\nret_t cherokee_template_mrproper (cherokee_template_t *tem);\n\nret_t cherokee_template_new_token (cherokee_template_t *tem,\n        cherokee_template_token_t **token);\nret_t cherokee_template_set_token (cherokee_template_t *tem,\n        const char *name,\n        cherokee_tem_repl_func_t func,\n        void *param,\n        cherokee_template_token_t **token);\n\nret_t cherokee_template_parse (cherokee_template_t *tem,\n        cherokee_buffer_t *incoming);\n\nret_t cherokee_template_parse_file (cherokee_template_t *tem,\n        const char *file);\n\nret_t cherokee_template_render (cherokee_template_t *tem,\n        cherokee_buffer_t *output,\n        void *param);\n\n\n// # 37 \"gen_evhost.h\" 2\n// # 1 \"../cherokee/config_entry.h\" 1\n// # 38 \"gen_evhost.h\" 2\n// # 1 \"../cherokee/plugin_loader.h\" 1\n// # 32 \"../cherokee/plugin_loader.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/plugin_loader.h\" 2\n// # 1 \"../cherokee/module.h\" 1\n// # 34 \"../cherokee/plugin_loader.h\" 2\n// # 1 \"../cherokee/avl.h\" 1\n// # 35 \"../cherokee/plugin_loader.h\" 2\n// # 1 \"../cherokee/plugin.h\" 1\n// # 36 \"../cherokee/plugin_loader.h\" 2\n\n\n\ntypedef struct {\n cherokee_plugin_info_t *info;\n void *dlopen_ref;\n cherokee_boolean_t built_in;\n} cherokee_plugin_loader_entry_t;\n\ntypedef struct {\n cherokee_avl_t table;\n cherokee_buffer_t module_dir;\n cherokee_buffer_t deps_dir;\n} cherokee_plugin_loader_t;\n\n\n\n\n\nret_t cherokee_plugin_loader_init (cherokee_plugin_loader_t *loader);\nret_t cherokee_plugin_loader_mrproper (cherokee_plugin_loader_t *loader);\n\nret_t cherokee_plugin_loader_set_directory (cherokee_plugin_loader_t *loader, cherokee_buffer_t *dir);\nret_t cherokee_plugin_loader_set_deps_dir (cherokee_plugin_loader_t *loader, cherokee_buffer_t *dir);\nret_t cherokee_plugin_loader_load (cherokee_plugin_loader_t *loader, const char *modname);\nret_t cherokee_plugin_loader_load_no_global (cherokee_plugin_loader_t *loader, const char *modname);\nret_t cherokee_plugin_loader_unload (cherokee_plugin_loader_t *loader, const char *modname);\n\nret_t cherokee_plugin_loader_get (cherokee_plugin_loader_t *loader, const char *modname, cherokee_plugin_info_t **info);\nret_t cherokee_plugin_loader_get_info (cherokee_plugin_loader_t *loader, const char *modname, cherokee_plugin_info_t **info);\nret_t cherokee_plugin_loader_get_sym (cherokee_plugin_loader_t *loader, const char *modname, const char *name, void **sym);\n\nret_t cherokee_plugin_loader_get_mods_info (cherokee_plugin_loader_t *loader, cherokee_buffer_t *builtin);\n\n\n// # 39 \"gen_evhost.h\" 2\n\n\n\ntypedef ret_t (* evhost_func_new_t) (void **evhost, void *vsrv);\ntypedef ret_t (* evhost_func_configure_t) (void *evhost, cherokee_config_node_t *conf);\ntypedef ret_t (* evhost_func_droot_t) (void *evhost, void *conn);\n\ntypedef struct {\n\n cherokee_module_t module;\n\n\n cherokee_template_t tpl_document_root;\n cherokee_boolean_t check_document_root;\n\n\n evhost_func_droot_t func_document_root;\n\n} cherokee_generic_evhost_t;\n\n\n\nvoid cherokee_plugin_evhost_init (cherokee_plugin_loader_t *loader);\n\nret_t cherokee_generic_evhost_new (cherokee_generic_evhost_t **evhost);\nret_t cherokee_generic_evhost_configure (cherokee_generic_evhost_t *evhost,\n      cherokee_config_node_t *config);\n\n// # 41 \"virtual_server.h\" 2\n// # 1 \"collector.h\" 1\n// # 32 \"collector.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"collector.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"collector.h\" 2\n// # 1 \"../cherokee/module.h\" 1\n// # 35 \"collector.h\" 2\n// # 1 \"../cherokee/connection.h\" 1\n// # 36 \"collector.h\" 2\n\n\n\n\n\ntypedef ret_t (* collector_func_new_t) (void **collector,\n          cherokee_plugin_info_t *info,\n          cherokee_config_node_t *config);\ntypedef ret_t (* collector_func_free_t) (void *collector);\ntypedef ret_t (* collector_func_init_t) (void *collector);\n\ntypedef ret_t (* collector_func_new_vsrv_t) (void *collector,\n          cherokee_config_node_t *config,\n          void **collector_vsrv);\n\ntypedef ret_t (* collector_vsrv_func_init_t) (void *collector_vsrv,\n           void *vsrv);\n\n\ntypedef struct {\n cherokee_module_t module;\n void *priv;\n\n\n\n collector_func_free_t free;\n\n\n\n off_t rx;\n off_t rx_partial;\n off_t tx;\n off_t tx_partial;\n} cherokee_collector_base_t;\n\ntypedef struct {\n cherokee_collector_base_t collector;\n\n\n\n collector_func_new_vsrv_t new_vsrv;\n collector_func_init_t init;\n\n\n\n cullong_t accepts;\n cullong_t accepts_partial;\n cullong_t requests;\n cullong_t requests_partial;\n cullong_t timeouts;\n cullong_t timeouts_partial;\n} cherokee_collector_t;\n\ntypedef struct {\n cherokee_collector_base_t collector;\n cherokee_collector_t *srv_collector;\n\n\n\n collector_vsrv_func_init_t init;\n\n\n\n time_t srv_next_update;\n off_t srv_rx_partial;\n off_t srv_tx_partial;\n} cherokee_collector_vsrv_t;\n// # 127 \"collector.h\"\nret_t cherokee_collector_init_base (cherokee_collector_t *collector,\n             cherokee_plugin_info_t *info,\n             cherokee_config_node_t *config);\n\nret_t cherokee_collector_vsrv_init_base (cherokee_collector_vsrv_t *collector_vsrv,\n      cherokee_config_node_t *config);\n\n\n\n\nret_t cherokee_collector_init (cherokee_collector_t *collector);\nret_t cherokee_collector_free (cherokee_collector_t *collector);\n\nret_t cherokee_collector_log_accept (cherokee_collector_t *collector);\nret_t cherokee_collector_log_request (cherokee_collector_t *collector);\nret_t cherokee_collector_log_timeout (cherokee_collector_t *collector);\n\n\n\nret_t cherokee_collector_vsrv_new (cherokee_collector_t *collector,\n          cherokee_config_node_t *config,\n          cherokee_collector_vsrv_t **collector_vsrv);\nret_t cherokee_collector_vsrv_free (cherokee_collector_vsrv_t *collector_vsrv);\nret_t cherokee_collector_vsrv_init (cherokee_collector_vsrv_t *collector_vsrv,\n          void *vsrv);\n\nret_t cherokee_collector_vsrv_count (cherokee_collector_vsrv_t *collector_vsrv,\n          off_t rx,\n          off_t tx);\n\n\n// # 42 \"virtual_server.h\" 2\n// # 1 \"flcache.h\" 1\n// # 43 \"virtual_server.h\" 2\n\ntypedef struct {\n cherokee_list_t list_node;\n void *server_ref;\n\n cherokee_buffer_t name;\n cuint_t priority;\n cherokee_vrule_t *matching;\n cherokee_boolean_t match_nick;\n\n cherokee_rule_list_t rules;\n cherokee_boolean_t keepalive;\n cint_t post_max_len;\n\n cherokee_config_entry_t *default_handler;\n cherokee_config_entry_t *error_handler;\n\n cherokee_logger_t *logger;\n cherokee_logger_writer_t *error_writer;\n cherokee_collector_vsrv_t *collector;\n\n cherokee_buffer_t userdir;\n cherokee_rule_list_t userdir_rules;\n\n cherokee_buffer_t root;\n cherokee_list_t index_list;\n cherokee_flcache_t *flcache;\n void *evhost;\n\n cuint_t verify_depth;\n cherokee_buffer_t server_cert;\n cherokee_buffer_t server_key;\n cherokee_buffer_t certs_ca;\n cherokee_buffer_t req_client_certs;\n cherokee_buffer_t ciphers;\n cherokee_cryptor_vserver_t *cryptor;\n\n struct {\n  cherokee_boolean_t enabled;\n  cherokee_boolean_t subdomains;\n  cuint_t max_age;\n } hsts;\n\n} cherokee_virtual_server_t;\n\n\n\n\n\nret_t cherokee_virtual_server_new (cherokee_virtual_server_t **vserver, void *server);\nret_t cherokee_virtual_server_free (cherokee_virtual_server_t *vserver);\nret_t cherokee_virtual_server_clean (cherokee_virtual_server_t *vserver);\n\nret_t cherokee_virtual_server_configure (cherokee_virtual_server_t *vserver,\n      cuint_t prio,\n      cherokee_config_node_t *config);\n\nret_t cherokee_virtual_server_new_rule (cherokee_virtual_server_t *vserver,\n      cherokee_config_node_t *config,\n      cuint_t priority,\n      cherokee_rule_t **rule);\n\nret_t cherokee_virtual_server_new_vrule (cherokee_virtual_server_t *vserver,\n      cherokee_config_node_t *config,\n      cherokee_vrule_t **vrule);\n\nret_t cherokee_virtual_server_init_tls (cherokee_virtual_server_t *vserver);\nret_t cherokee_virtual_server_has_tls (cherokee_virtual_server_t *vserver);\n\nvoid cherokee_virtual_server_add_rx (cherokee_virtual_server_t *vserver, size_t rx);\nvoid cherokee_virtual_server_add_tx (cherokee_virtual_server_t *vserver, size_t tx);\n\nret_t cherokee_virtual_server_get_error_log (cherokee_virtual_server_t *vserver,\n          cherokee_logger_writer_t **writer);\n// # 48 \"server-protected.h\" 2\n// # 1 \"thread.h\" 1\n// # 34 \"thread.h\"\n// # 1 \"list.h\" 1\n// # 35 \"thread.h\" 2\n// # 1 \"socket.h\" 1\n// # 30 \"socket.h\"\n// # 1 \"socket_lowlevel.h\" 1\n// # 37 \"socket_lowlevel.h\"\n// # 1 \"/usr/include/netdb.h\" 1 3 4\n// # 28 \"/usr/include/netdb.h\" 3 4\n// # 1 \"/usr/include/netinet/in.h\" 1 3 4\n// # 24 \"/usr/include/netinet/in.h\" 3 4\n// # 1 \"/usr/include/sys/socket.h\" 1 3 4\n// # 25 \"/usr/include/sys/socket.h\" 3 4\n\n\n// # 1 \"/usr/include/sys/uio.h\" 1 3 4\n// # 26 \"/usr/include/sys/uio.h\" 3 4\n\n\n\n// # 1 \"/usr/include/bits/uio.h\" 1 3 4\n// # 30 \"/usr/include/sys/uio.h\" 2 3 4\n// # 40 \"/usr/include/sys/uio.h\" 3 4\nextern ssize_t readv (int __fd, __const struct iovec *__iovec, int __count);\n// # 50 \"/usr/include/sys/uio.h\" 3 4\nextern ssize_t writev (int __fd, __const struct iovec *__iovec, int __count);\n\n\n// # 28 \"/usr/include/sys/socket.h\" 2 3 4\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 30 \"/usr/include/sys/socket.h\" 2 3 4\n\n\n\n\n\n// # 1 \"/usr/include/bits/socket.h\" 1 3 4\n// # 29 \"/usr/include/bits/socket.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 30 \"/usr/include/bits/socket.h\" 2 3 4\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 1 3 4\n// # 32 \"/usr/include/bits/socket.h\" 2 3 4\n// # 41 \"/usr/include/bits/socket.h\" 3 4\nenum __socket_type\n{\n  SOCK_STREAM = 1,\n\n\n  SOCK_DGRAM = 2,\n\n\n  SOCK_RAW = 3,\n\n  SOCK_RDM = 4,\n\n  SOCK_SEQPACKET = 5,\n\n\n  SOCK_PACKET = 10\n\n\n\n};\n// # 142 \"/usr/include/bits/socket.h\" 3 4\n// # 1 \"/usr/include/bits/sockaddr.h\" 1 3 4\n// # 29 \"/usr/include/bits/sockaddr.h\" 3 4\ntypedef unsigned short int sa_family_t;\n// # 143 \"/usr/include/bits/socket.h\" 2 3 4\n\n\nstruct sockaddr\n  {\n    sa_family_t sa_family;\n    char sa_data[14];\n  };\n// # 162 \"/usr/include/bits/socket.h\" 3 4\nstruct sockaddr_storage\n  {\n    sa_family_t ss_family;\n    __uint64_t __ss_align;\n    char __ss_padding[(128 - (2 * sizeof (__uint64_t)))];\n  };\n\n\n\nenum\n  {\n    MSG_OOB = 0x01,\n\n    MSG_PEEK = 0x02,\n\n    MSG_DONTROUTE = 0x04,\n\n\n\n    MSG_TRYHARD = MSG_DONTROUTE,\n\n\n    MSG_CTRUNC = 0x08,\n\n    MSG_PROXY = 0x10,\n\n    MSG_TRUNC = 0x20,\n\n    MSG_DONTWAIT = 0x40,\n\n    MSG_EOR = 0x80,\n\n    MSG_WAITALL = 0x100,\n\n    MSG_FIN = 0x200,\n\n    MSG_SYN = 0x400,\n\n    MSG_CONFIRM = 0x800,\n\n    MSG_RST = 0x1000,\n\n    MSG_ERRQUEUE = 0x2000,\n\n    MSG_NOSIGNAL = 0x4000,\n\n    MSG_MORE = 0x8000\n\n  };\n\n\n\n\nstruct msghdr\n  {\n    void *msg_name;\n    socklen_t msg_namelen;\n\n    struct iovec *msg_iov;\n    size_t msg_iovlen;\n\n    void *msg_control;\n    size_t msg_controllen;\n\n\n\n\n    int msg_flags;\n  };\n\n\nstruct cmsghdr\n  {\n    size_t cmsg_len;\n\n\n\n\n    int cmsg_level;\n    int cmsg_type;\n\n    __extension__ unsigned char __cmsg_data [];\n\n  };\n// # 263 \"/usr/include/bits/socket.h\" 3 4\nextern struct cmsghdr *__cmsg_nxthdr (struct msghdr *__mhdr,\n          struct cmsghdr *__cmsg) __attribute__ ((__nothrow__));\n// # 290 \"/usr/include/bits/socket.h\" 3 4\nenum\n  {\n    SCM_RIGHTS = 0x01\n\n\n    , SCM_CREDENTIALS = 0x02\n\n\n  };\n\n\n\nstruct ucred\n{\n  pid_t pid;\n  uid_t uid;\n  gid_t gid;\n};\n\n\n// # 1 \"/usr/include/asm/socket.h\" 1 3 4\n\n\n\n\n// # 1 \"/usr/include/asm-x86_64/socket.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/asm/sockios.h\" 1 3 4\n\n\n\n\n// # 1 \"/usr/include/asm-x86_64/sockios.h\" 1 3 4\n// # 6 \"/usr/include/asm/sockios.h\" 2 3 4\n// # 5 \"/usr/include/asm-x86_64/socket.h\" 2 3 4\n// # 6 \"/usr/include/asm/socket.h\" 2 3 4\n// # 311 \"/usr/include/bits/socket.h\" 2 3 4\n\n\n\nstruct linger\n  {\n    int l_onoff;\n    int l_linger;\n  };\n// # 36 \"/usr/include/sys/socket.h\" 2 3 4\n\n\n\n\nstruct osockaddr\n  {\n    unsigned short int sa_family;\n    unsigned char sa_data[14];\n  };\n\n\n\n\nenum\n{\n  SHUT_RD = 0,\n\n  SHUT_WR,\n\n  SHUT_RDWR\n\n};\n// # 87 \"/usr/include/sys/socket.h\" 3 4\ntypedef union { struct sockaddr *__restrict __sockaddr__; struct sockaddr_at *__restrict __sockaddr_at__; struct sockaddr_ax25 *__restrict __sockaddr_ax25__; struct sockaddr_dl *__restrict __sockaddr_dl__; struct sockaddr_eon *__restrict __sockaddr_eon__; struct sockaddr_in *__restrict __sockaddr_in__; struct sockaddr_in6 *__restrict __sockaddr_in6__; struct sockaddr_inarp *__restrict __sockaddr_inarp__; struct sockaddr_ipx *__restrict __sockaddr_ipx__; struct sockaddr_iso *__restrict __sockaddr_iso__; struct sockaddr_ns *__restrict __sockaddr_ns__; struct sockaddr_un *__restrict __sockaddr_un__; struct sockaddr_x25 *__restrict __sockaddr_x25__;\n       } __SOCKADDR_ARG __attribute__ ((__transparent_union__));\n\n\ntypedef union { __const struct sockaddr *__restrict __sockaddr__; __const struct sockaddr_at *__restrict __sockaddr_at__; __const struct sockaddr_ax25 *__restrict __sockaddr_ax25__; __const struct sockaddr_dl *__restrict __sockaddr_dl__; __const struct sockaddr_eon *__restrict __sockaddr_eon__; __const struct sockaddr_in *__restrict __sockaddr_in__; __const struct sockaddr_in6 *__restrict __sockaddr_in6__; __const struct sockaddr_inarp *__restrict __sockaddr_inarp__; __const struct sockaddr_ipx *__restrict __sockaddr_ipx__; __const struct sockaddr_iso *__restrict __sockaddr_iso__; __const struct sockaddr_ns *__restrict __sockaddr_ns__; __const struct sockaddr_un *__restrict __sockaddr_un__; __const struct sockaddr_x25 *__restrict __sockaddr_x25__;\n       } __CONST_SOCKADDR_ARG __attribute__ ((__transparent_union__));\n\n\n\n\n\n\n\nextern int socket (int __domain, int __type, int __protocol) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int socketpair (int __domain, int __type, int __protocol,\n         int __fds[2]) __attribute__ ((__nothrow__));\n\n\nextern int bind (int __fd, __CONST_SOCKADDR_ARG __addr, socklen_t __len)\n     __attribute__ ((__nothrow__));\n\n\nextern int getsockname (int __fd, __SOCKADDR_ARG __addr,\n   socklen_t *__restrict __len) __attribute__ ((__nothrow__));\n// # 124 \"/usr/include/sys/socket.h\" 3 4\nextern int connect (int __fd, __CONST_SOCKADDR_ARG __addr, socklen_t __len);\n\n\n\nextern int getpeername (int __fd, __SOCKADDR_ARG __addr,\n   socklen_t *__restrict __len) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern ssize_t send (int __fd, __const void *__buf, size_t __n, int __flags);\n\n\n\n\n\n\nextern ssize_t recv (int __fd, void *__buf, size_t __n, int __flags);\n\n\n\n\n\n\nextern ssize_t sendto (int __fd, __const void *__buf, size_t __n,\n         int __flags, __CONST_SOCKADDR_ARG __addr,\n         socklen_t __addr_len);\n// # 161 \"/usr/include/sys/socket.h\" 3 4\nextern ssize_t recvfrom (int __fd, void *__restrict __buf, size_t __n,\n    int __flags, __SOCKADDR_ARG __addr,\n    socklen_t *__restrict __addr_len);\n\n\n\n\n\n\n\nextern ssize_t sendmsg (int __fd, __const struct msghdr *__message,\n   int __flags);\n\n\n\n\n\n\nextern ssize_t recvmsg (int __fd, struct msghdr *__message, int __flags);\n\n\n\n\n\nextern int getsockopt (int __fd, int __level, int __optname,\n         void *__restrict __optval,\n         socklen_t *__restrict __optlen) __attribute__ ((__nothrow__));\n\n\n\n\nextern int setsockopt (int __fd, int __level, int __optname,\n         __const void *__optval, socklen_t __optlen) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int listen (int __fd, int __n) __attribute__ ((__nothrow__));\n// # 209 \"/usr/include/sys/socket.h\" 3 4\nextern int accept (int __fd, __SOCKADDR_ARG __addr,\n     socklen_t *__restrict __addr_len);\n\n\n\n\n\n\n\nextern int shutdown (int __fd, int __how) __attribute__ ((__nothrow__));\n\n\n\n\nextern int sockatmark (int __fd) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern int isfdtype (int __fd, int __fdtype) __attribute__ ((__nothrow__));\n// # 240 \"/usr/include/sys/socket.h\" 3 4\n\n// # 25 \"/usr/include/netinet/in.h\" 2 3 4\n\n\n\n\n\n\nenum\n  {\n    IPPROTO_IP = 0,\n\n    IPPROTO_HOPOPTS = 0,\n\n    IPPROTO_ICMP = 1,\n\n    IPPROTO_IGMP = 2,\n\n    IPPROTO_IPIP = 4,\n\n    IPPROTO_TCP = 6,\n\n    IPPROTO_EGP = 8,\n\n    IPPROTO_PUP = 12,\n\n    IPPROTO_UDP = 17,\n\n    IPPROTO_IDP = 22,\n\n    IPPROTO_TP = 29,\n\n    IPPROTO_IPV6 = 41,\n\n    IPPROTO_ROUTING = 43,\n\n    IPPROTO_FRAGMENT = 44,\n\n    IPPROTO_RSVP = 46,\n\n    IPPROTO_GRE = 47,\n\n    IPPROTO_ESP = 50,\n\n    IPPROTO_AH = 51,\n\n    IPPROTO_ICMPV6 = 58,\n\n    IPPROTO_NONE = 59,\n\n    IPPROTO_DSTOPTS = 60,\n\n    IPPROTO_MTP = 92,\n\n    IPPROTO_ENCAP = 98,\n\n    IPPROTO_PIM = 103,\n\n    IPPROTO_COMP = 108,\n\n    IPPROTO_SCTP = 132,\n\n    IPPROTO_RAW = 255,\n\n    IPPROTO_MAX\n  };\n\n\n\ntypedef uint16_t in_port_t;\n\n\nenum\n  {\n    IPPORT_ECHO = 7,\n    IPPORT_DISCARD = 9,\n    IPPORT_SYSTAT = 11,\n    IPPORT_DAYTIME = 13,\n    IPPORT_NETSTAT = 15,\n    IPPORT_FTP = 21,\n    IPPORT_TELNET = 23,\n    IPPORT_SMTP = 25,\n    IPPORT_TIMESERVER = 37,\n    IPPORT_NAMESERVER = 42,\n    IPPORT_WHOIS = 43,\n    IPPORT_MTP = 57,\n\n    IPPORT_TFTP = 69,\n    IPPORT_RJE = 77,\n    IPPORT_FINGER = 79,\n    IPPORT_TTYLINK = 87,\n    IPPORT_SUPDUP = 95,\n\n\n    IPPORT_EXECSERVER = 512,\n    IPPORT_LOGINSERVER = 513,\n    IPPORT_CMDSERVER = 514,\n    IPPORT_EFSSERVER = 520,\n\n\n    IPPORT_BIFFUDP = 512,\n    IPPORT_WHOSERVER = 513,\n    IPPORT_ROUTESERVER = 520,\n\n\n    IPPORT_RESERVED = 1024,\n\n\n    IPPORT_USERRESERVED = 5000\n  };\n\n\n\ntypedef uint32_t in_addr_t;\nstruct in_addr\n  {\n    in_addr_t s_addr;\n  };\n// # 193 \"/usr/include/netinet/in.h\" 3 4\nstruct in6_addr\n  {\n    union\n      {\n uint8_t u6_addr8[16];\n uint16_t u6_addr16[8];\n uint32_t u6_addr32[4];\n      } in6_u;\n\n\n\n  };\n\nextern const struct in6_addr in6addr_any;\nextern const struct in6_addr in6addr_loopback;\n// # 219 \"/usr/include/netinet/in.h\" 3 4\nstruct sockaddr_in\n  {\n    sa_family_t sin_family;\n    in_port_t sin_port;\n    struct in_addr sin_addr;\n\n\n    unsigned char sin_zero[sizeof (struct sockaddr) -\n      (sizeof (unsigned short int)) -\n      sizeof (in_port_t) -\n      sizeof (struct in_addr)];\n  };\n\n\nstruct sockaddr_in6\n  {\n    sa_family_t sin6_family;\n    in_port_t sin6_port;\n    uint32_t sin6_flowinfo;\n    struct in6_addr sin6_addr;\n    uint32_t sin6_scope_id;\n  };\n\n\n\nstruct ip_mreq\n  {\n\n    struct in_addr imr_multiaddr;\n\n\n    struct in_addr imr_interface;\n  };\n\nstruct ip_mreq_source\n  {\n\n    struct in_addr imr_multiaddr;\n\n\n    struct in_addr imr_interface;\n\n\n    struct in_addr imr_sourceaddr;\n  };\n\n\nstruct ipv6_mreq\n  {\n\n    struct in6_addr ipv6mr_multiaddr;\n\n\n    unsigned int ipv6mr_interface;\n  };\n\n\n\nstruct group_req\n  {\n\n    uint32_t gr_interface;\n\n\n    struct sockaddr_storage gr_group;\n  };\n\nstruct group_source_req\n  {\n\n    uint32_t gsr_interface;\n\n\n    struct sockaddr_storage gsr_group;\n\n\n    struct sockaddr_storage gsr_source;\n  };\n\n\n\nstruct ip_msfilter\n  {\n\n    struct in_addr imsf_multiaddr;\n\n\n    struct in_addr imsf_interface;\n\n\n    uint32_t imsf_fmode;\n\n\n    uint32_t imsf_numsrc;\n\n    struct in_addr imsf_slist[1];\n  };\n\n\n\n\n\nstruct group_filter\n  {\n\n    uint32_t gf_interface;\n\n\n    struct sockaddr_storage gf_group;\n\n\n    uint32_t gf_fmode;\n\n\n    uint32_t gf_numsrc;\n\n    struct sockaddr_storage gf_slist[1];\n};\n// # 345 \"/usr/include/netinet/in.h\" 3 4\n// # 1 \"/usr/include/bits/in.h\" 1 3 4\n// # 82 \"/usr/include/bits/in.h\" 3 4\nstruct ip_opts\n  {\n    struct in_addr ip_dst;\n    char ip_opts[40];\n  };\n\n\nstruct ip_mreqn\n  {\n    struct in_addr imr_multiaddr;\n    struct in_addr imr_address;\n    int imr_ifindex;\n  };\n\n\nstruct in_pktinfo\n  {\n    int ipi_ifindex;\n    struct in_addr ipi_spec_dst;\n    struct in_addr ipi_addr;\n  };\n// # 346 \"/usr/include/netinet/in.h\" 2 3 4\n// # 354 \"/usr/include/netinet/in.h\" 3 4\nextern uint32_t ntohl (uint32_t __netlong) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\nextern uint16_t ntohs (uint16_t __netshort)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__));\nextern uint32_t htonl (uint32_t __hostlong)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__));\nextern uint16_t htons (uint16_t __hostshort)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\n\n\n// # 1 \"/usr/include/bits/byteswap.h\" 1 3 4\n// # 27 \"/usr/include/bits/byteswap.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 28 \"/usr/include/bits/byteswap.h\" 2 3 4\n// # 366 \"/usr/include/netinet/in.h\" 2 3 4\n// # 428 \"/usr/include/netinet/in.h\" 3 4\nextern int bindresvport (int __sockfd, struct sockaddr_in *__sock_in) __attribute__ ((__nothrow__));\n\n\nextern int bindresvport6 (int __sockfd, struct sockaddr_in6 *__sock_in)\n     __attribute__ ((__nothrow__));\n// # 456 \"/usr/include/netinet/in.h\" 3 4\nstruct in6_pktinfo\n  {\n    struct in6_addr ipi6_addr;\n    unsigned int ipi6_ifindex;\n  };\n\n\nstruct ip6_mtuinfo\n  {\n    struct sockaddr_in6 ip6m_addr;\n    uint32_t ip6m_mtu;\n  };\n\n\n\n\nextern int inet6_option_space (int __nbytes)\n     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\nextern int inet6_option_init (void *__bp, struct cmsghdr **__cmsgp,\n         int __type) __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\nextern int inet6_option_append (struct cmsghdr *__cmsg,\n    __const uint8_t *__typep, int __multx,\n    int __plusy) __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\nextern uint8_t *inet6_option_alloc (struct cmsghdr *__cmsg, int __datalen,\n        int __multx, int __plusy)\n     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\nextern int inet6_option_next (__const struct cmsghdr *__cmsg,\n         uint8_t **__tptrp)\n     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\nextern int inet6_option_find (__const struct cmsghdr *__cmsg,\n         uint8_t **__tptrp, int __type)\n     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\n\n\n\nextern int inet6_opt_init (void *__extbuf, socklen_t __extlen) __attribute__ ((__nothrow__));\nextern int inet6_opt_append (void *__extbuf, socklen_t __extlen, int __offset,\n        uint8_t __type, socklen_t __len, uint8_t __align,\n        void **__databufp) __attribute__ ((__nothrow__));\nextern int inet6_opt_finish (void *__extbuf, socklen_t __extlen, int __offset)\n     __attribute__ ((__nothrow__));\nextern int inet6_opt_set_val (void *__databuf, int __offset, void *__val,\n         socklen_t __vallen) __attribute__ ((__nothrow__));\nextern int inet6_opt_next (void *__extbuf, socklen_t __extlen, int __offset,\n      uint8_t *__typep, socklen_t *__lenp,\n      void **__databufp) __attribute__ ((__nothrow__));\nextern int inet6_opt_find (void *__extbuf, socklen_t __extlen, int __offset,\n      uint8_t __type, socklen_t *__lenp,\n      void **__databufp) __attribute__ ((__nothrow__));\nextern int inet6_opt_get_val (void *__databuf, int __offset, void *__val,\n         socklen_t __vallen) __attribute__ ((__nothrow__));\n\n\n\nextern socklen_t inet6_rth_space (int __type, int __segments) __attribute__ ((__nothrow__));\nextern void *inet6_rth_init (void *__bp, socklen_t __bp_len, int __type,\n        int __segments) __attribute__ ((__nothrow__));\nextern int inet6_rth_add (void *__bp, __const struct in6_addr *__addr) __attribute__ ((__nothrow__));\nextern int inet6_rth_reverse (__const void *__in, void *__out) __attribute__ ((__nothrow__));\nextern int inet6_rth_segments (__const void *__bp) __attribute__ ((__nothrow__));\nextern struct in6_addr *inet6_rth_getaddr (__const void *__bp, int __index)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int getipv4sourcefilter (int __s, struct in_addr __interface_addr,\n    struct in_addr __group, uint32_t *__fmode,\n    uint32_t *__numsrc, struct in_addr *__slist)\n     __attribute__ ((__nothrow__));\n\n\nextern int setipv4sourcefilter (int __s, struct in_addr __interface_addr,\n    struct in_addr __group, uint32_t __fmode,\n    uint32_t __numsrc,\n    __const struct in_addr *__slist)\n     __attribute__ ((__nothrow__));\n\n\n\nextern int getsourcefilter (int __s, uint32_t __interface_addr,\n       __const struct sockaddr *__group,\n       socklen_t __grouplen, uint32_t *__fmode,\n       uint32_t *__numsrc,\n       struct sockaddr_storage *__slist) __attribute__ ((__nothrow__));\n\n\nextern int setsourcefilter (int __s, uint32_t __interface_addr,\n       __const struct sockaddr *__group,\n       socklen_t __grouplen, uint32_t __fmode,\n       uint32_t __numsrc,\n       __const struct sockaddr_storage *__slist) __attribute__ ((__nothrow__));\n\n\n\n// # 29 \"/usr/include/netdb.h\" 2 3 4\n\n\n\n\n// # 1 \"/usr/include/rpc/netdb.h\" 1 3 4\n// # 42 \"/usr/include/rpc/netdb.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 43 \"/usr/include/rpc/netdb.h\" 2 3 4\n\n\n\nstruct rpcent\n{\n  char *r_name;\n  char **r_aliases;\n  int r_number;\n};\n\nextern void setrpcent (int __stayopen) __attribute__ ((__nothrow__));\nextern void endrpcent (void) __attribute__ ((__nothrow__));\nextern struct rpcent *getrpcbyname (__const char *__name) __attribute__ ((__nothrow__));\nextern struct rpcent *getrpcbynumber (int __number) __attribute__ ((__nothrow__));\nextern struct rpcent *getrpcent (void) __attribute__ ((__nothrow__));\n\n\nextern int getrpcbyname_r (__const char *__name, struct rpcent *__result_buf,\n      char *__buffer, size_t __buflen,\n      struct rpcent **__result) __attribute__ ((__nothrow__));\n\nextern int getrpcbynumber_r (int __number, struct rpcent *__result_buf,\n        char *__buffer, size_t __buflen,\n        struct rpcent **__result) __attribute__ ((__nothrow__));\n\nextern int getrpcent_r (struct rpcent *__result_buf, char *__buffer,\n   size_t __buflen, struct rpcent **__result) __attribute__ ((__nothrow__));\n\n\n\n// # 34 \"/usr/include/netdb.h\" 2 3 4\n\n\n\n\n// # 1 \"/usr/include/bits/siginfo.h\" 1 3 4\n// # 25 \"/usr/include/bits/siginfo.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 26 \"/usr/include/bits/siginfo.h\" 2 3 4\n\n\n\n\n\n\n\ntypedef union sigval\n  {\n    int sival_int;\n    void *sival_ptr;\n  } sigval_t;\n// # 273 \"/usr/include/bits/siginfo.h\" 3 4\ntypedef struct sigevent\n  {\n    sigval_t sigev_value;\n    int sigev_signo;\n    int sigev_notify;\n\n    union\n      {\n int _pad[((64 / sizeof (int)) - 4)];\n\n\n\n __pid_t _tid;\n\n struct\n   {\n     void (*_function) (sigval_t);\n     void *_attribute;\n   } _sigev_thread;\n      } _sigev_un;\n  } sigevent_t;\n\n\n\n\n\n\nenum\n{\n  SIGEV_SIGNAL = 0,\n\n  SIGEV_NONE,\n\n  SIGEV_THREAD,\n\n\n  SIGEV_THREAD_ID = 4\n\n};\n// # 39 \"/usr/include/netdb.h\" 2 3 4\n\n\n\n\n// # 1 \"/usr/include/bits/netdb.h\" 1 3 4\n// # 27 \"/usr/include/bits/netdb.h\" 3 4\nstruct netent\n{\n  char *n_name;\n  char **n_aliases;\n  int n_addrtype;\n  uint32_t n_net;\n};\n// # 44 \"/usr/include/netdb.h\" 2 3 4\n// # 54 \"/usr/include/netdb.h\" 3 4\n\n\n\n\n\n\n\nextern int *__h_errno_location (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n// # 88 \"/usr/include/netdb.h\" 3 4\nextern void herror (__const char *__str) __attribute__ ((__nothrow__));\n\n\nextern __const char *hstrerror (int __err_num) __attribute__ ((__nothrow__));\n\n\n\n\nstruct hostent\n{\n  char *h_name;\n  char **h_aliases;\n  int h_addrtype;\n  int h_length;\n  char **h_addr_list;\n\n};\n\n\n\n\n\n\nextern void sethostent (int __stay_open);\n\n\n\n\n\nextern void endhostent (void);\n\n\n\n\n\n\nextern struct hostent *gethostent (void);\n\n\n\n\n\n\nextern struct hostent *gethostbyaddr (__const void *__addr, __socklen_t __len,\n          int __type);\n\n\n\n\n\nextern struct hostent *gethostbyname (__const char *__name);\n// # 149 \"/usr/include/netdb.h\" 3 4\nextern struct hostent *gethostbyname2 (__const char *__name, int __af);\n// # 161 \"/usr/include/netdb.h\" 3 4\nextern int gethostent_r (struct hostent *__restrict __result_buf,\n    char *__restrict __buf, size_t __buflen,\n    struct hostent **__restrict __result,\n    int *__restrict __h_errnop);\n\nextern int gethostbyaddr_r (__const void *__restrict __addr, __socklen_t __len,\n       int __type,\n       struct hostent *__restrict __result_buf,\n       char *__restrict __buf, size_t __buflen,\n       struct hostent **__restrict __result,\n       int *__restrict __h_errnop);\n\nextern int gethostbyname_r (__const char *__restrict __name,\n       struct hostent *__restrict __result_buf,\n       char *__restrict __buf, size_t __buflen,\n       struct hostent **__restrict __result,\n       int *__restrict __h_errnop);\n\nextern int gethostbyname2_r (__const char *__restrict __name, int __af,\n        struct hostent *__restrict __result_buf,\n        char *__restrict __buf, size_t __buflen,\n        struct hostent **__restrict __result,\n        int *__restrict __h_errnop);\n// # 192 \"/usr/include/netdb.h\" 3 4\nextern void setnetent (int __stay_open);\n\n\n\n\n\nextern void endnetent (void);\n\n\n\n\n\n\nextern struct netent *getnetent (void);\n\n\n\n\n\n\nextern struct netent *getnetbyaddr (uint32_t __net, int __type);\n\n\n\n\n\nextern struct netent *getnetbyname (__const char *__name);\n// # 231 \"/usr/include/netdb.h\" 3 4\nextern int getnetent_r (struct netent *__restrict __result_buf,\n   char *__restrict __buf, size_t __buflen,\n   struct netent **__restrict __result,\n   int *__restrict __h_errnop);\n\nextern int getnetbyaddr_r (uint32_t __net, int __type,\n      struct netent *__restrict __result_buf,\n      char *__restrict __buf, size_t __buflen,\n      struct netent **__restrict __result,\n      int *__restrict __h_errnop);\n\nextern int getnetbyname_r (__const char *__restrict __name,\n      struct netent *__restrict __result_buf,\n      char *__restrict __buf, size_t __buflen,\n      struct netent **__restrict __result,\n      int *__restrict __h_errnop);\n\n\n\n\nstruct servent\n{\n  char *s_name;\n  char **s_aliases;\n  int s_port;\n  char *s_proto;\n};\n\n\n\n\n\n\nextern void setservent (int __stay_open);\n\n\n\n\n\nextern void endservent (void);\n\n\n\n\n\n\nextern struct servent *getservent (void);\n\n\n\n\n\n\nextern struct servent *getservbyname (__const char *__name,\n          __const char *__proto);\n\n\n\n\n\n\nextern struct servent *getservbyport (int __port, __const char *__proto);\n// # 303 \"/usr/include/netdb.h\" 3 4\nextern int getservent_r (struct servent *__restrict __result_buf,\n    char *__restrict __buf, size_t __buflen,\n    struct servent **__restrict __result);\n\nextern int getservbyname_r (__const char *__restrict __name,\n       __const char *__restrict __proto,\n       struct servent *__restrict __result_buf,\n       char *__restrict __buf, size_t __buflen,\n       struct servent **__restrict __result);\n\nextern int getservbyport_r (int __port, __const char *__restrict __proto,\n       struct servent *__restrict __result_buf,\n       char *__restrict __buf, size_t __buflen,\n       struct servent **__restrict __result);\n\n\n\n\nstruct protoent\n{\n  char *p_name;\n  char **p_aliases;\n  int p_proto;\n};\n\n\n\n\n\n\nextern void setprotoent (int __stay_open);\n\n\n\n\n\nextern void endprotoent (void);\n\n\n\n\n\n\nextern struct protoent *getprotoent (void);\n\n\n\n\n\nextern struct protoent *getprotobyname (__const char *__name);\n\n\n\n\n\nextern struct protoent *getprotobynumber (int __proto);\n// # 369 \"/usr/include/netdb.h\" 3 4\nextern int getprotoent_r (struct protoent *__restrict __result_buf,\n     char *__restrict __buf, size_t __buflen,\n     struct protoent **__restrict __result);\n\nextern int getprotobyname_r (__const char *__restrict __name,\n        struct protoent *__restrict __result_buf,\n        char *__restrict __buf, size_t __buflen,\n        struct protoent **__restrict __result);\n\nextern int getprotobynumber_r (int __proto,\n          struct protoent *__restrict __result_buf,\n          char *__restrict __buf, size_t __buflen,\n          struct protoent **__restrict __result);\n// # 390 \"/usr/include/netdb.h\" 3 4\nextern int setnetgrent (__const char *__netgroup);\n\n\n\n\n\n\n\nextern void endnetgrent (void);\n// # 407 \"/usr/include/netdb.h\" 3 4\nextern int getnetgrent (char **__restrict __hostp,\n   char **__restrict __userp,\n   char **__restrict __domainp);\n// # 418 \"/usr/include/netdb.h\" 3 4\nextern int innetgr (__const char *__netgroup, __const char *__host,\n      __const char *__user, __const char *domain);\n\n\n\n\n\n\n\nextern int getnetgrent_r (char **__restrict __hostp,\n     char **__restrict __userp,\n     char **__restrict __domainp,\n     char *__restrict __buffer, size_t __buflen);\n// # 446 \"/usr/include/netdb.h\" 3 4\nextern int rcmd (char **__restrict __ahost, unsigned short int __rport,\n   __const char *__restrict __locuser,\n   __const char *__restrict __remuser,\n   __const char *__restrict __cmd, int *__restrict __fd2p);\n// # 458 \"/usr/include/netdb.h\" 3 4\nextern int rcmd_af (char **__restrict __ahost, unsigned short int __rport,\n      __const char *__restrict __locuser,\n      __const char *__restrict __remuser,\n      __const char *__restrict __cmd, int *__restrict __fd2p,\n      sa_family_t __af);\n// # 474 \"/usr/include/netdb.h\" 3 4\nextern int rexec (char **__restrict __ahost, int __rport,\n    __const char *__restrict __name,\n    __const char *__restrict __pass,\n    __const char *__restrict __cmd, int *__restrict __fd2p);\n// # 486 \"/usr/include/netdb.h\" 3 4\nextern int rexec_af (char **__restrict __ahost, int __rport,\n       __const char *__restrict __name,\n       __const char *__restrict __pass,\n       __const char *__restrict __cmd, int *__restrict __fd2p,\n       sa_family_t __af);\n// # 500 \"/usr/include/netdb.h\" 3 4\nextern int ruserok (__const char *__rhost, int __suser,\n      __const char *__remuser, __const char *__locuser);\n// # 510 \"/usr/include/netdb.h\" 3 4\nextern int ruserok_af (__const char *__rhost, int __suser,\n         __const char *__remuser, __const char *__locuser,\n         sa_family_t __af);\n// # 522 \"/usr/include/netdb.h\" 3 4\nextern int rresvport (int *__alport);\n// # 531 \"/usr/include/netdb.h\" 3 4\nextern int rresvport_af (int *__alport, sa_family_t __af);\n\n\n\n\n\n\nstruct addrinfo\n{\n  int ai_flags;\n  int ai_family;\n  int ai_socktype;\n  int ai_protocol;\n  socklen_t ai_addrlen;\n  struct sockaddr *ai_addr;\n  char *ai_canonname;\n  struct addrinfo *ai_next;\n};\n\n\n\nstruct gaicb\n{\n  const char *ar_name;\n  const char *ar_service;\n  const struct addrinfo *ar_request;\n  struct addrinfo *ar_result;\n\n  int __return;\n  int __unused[5];\n};\n// # 631 \"/usr/include/netdb.h\" 3 4\nextern int getaddrinfo (__const char *__restrict __name,\n   __const char *__restrict __service,\n   __const struct addrinfo *__restrict __req,\n   struct addrinfo **__restrict __pai);\n\n\nextern void freeaddrinfo (struct addrinfo *__ai) __attribute__ ((__nothrow__));\n\n\nextern __const char *gai_strerror (int __ecode) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int getnameinfo (__const struct sockaddr *__restrict __sa,\n   socklen_t __salen, char *__restrict __host,\n   socklen_t __hostlen, char *__restrict __serv,\n   socklen_t __servlen, unsigned int __flags);\n// # 661 \"/usr/include/netdb.h\" 3 4\nextern int getaddrinfo_a (int __mode, struct gaicb *__list[__restrict],\n     int __ent, struct sigevent *__restrict __sig);\n// # 672 \"/usr/include/netdb.h\" 3 4\nextern int gai_suspend (__const struct gaicb *__const __list[], int __ent,\n   __const struct timespec *__timeout);\n\n\nextern int gai_error (struct gaicb *__req) __attribute__ ((__nothrow__));\n\n\nextern int gai_cancel (struct gaicb *__gaicbp) __attribute__ ((__nothrow__));\n\n\n\n// # 38 \"socket_lowlevel.h\" 2\n\n\n\n// # 1 \"/usr/include/sys/un.h\" 1 3 4\n// # 27 \"/usr/include/sys/un.h\" 3 4\n\n\n\nstruct sockaddr_un\n  {\n    sa_family_t sun_family;\n    char sun_path[108];\n  };\n// # 45 \"/usr/include/sys/un.h\" 3 4\n\n// # 42 \"socket_lowlevel.h\" 2\n\n\n\n\n\n\n\n// # 1 \"/usr/include/arpa/inet.h\" 1 3 4\n// # 31 \"/usr/include/arpa/inet.h\" 3 4\n\n\n\n\nextern in_addr_t inet_addr (__const char *__cp) __attribute__ ((__nothrow__));\n\n\nextern in_addr_t inet_lnaof (struct in_addr __in) __attribute__ ((__nothrow__));\n\n\n\nextern struct in_addr inet_makeaddr (in_addr_t __net, in_addr_t __host)\n     __attribute__ ((__nothrow__));\n\n\nextern in_addr_t inet_netof (struct in_addr __in) __attribute__ ((__nothrow__));\n\n\n\nextern in_addr_t inet_network (__const char *__cp) __attribute__ ((__nothrow__));\n\n\n\nextern char *inet_ntoa (struct in_addr __in) __attribute__ ((__nothrow__));\n\n\n\n\nextern int inet_pton (int __af, __const char *__restrict __cp,\n        void *__restrict __buf) __attribute__ ((__nothrow__));\n\n\n\n\nextern __const char *inet_ntop (int __af, __const void *__restrict __cp,\n    char *__restrict __buf, socklen_t __len)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int inet_aton (__const char *__cp, struct in_addr *__inp) __attribute__ ((__nothrow__));\n\n\n\nextern char *inet_neta (in_addr_t __net, char *__buf, size_t __len) __attribute__ ((__nothrow__));\n\n\n\n\nextern char *inet_net_ntop (int __af, __const void *__cp, int __bits,\n       char *__buf, size_t __len) __attribute__ ((__nothrow__));\n\n\n\n\nextern int inet_net_pton (int __af, __const char *__cp,\n     void *__buf, size_t __len) __attribute__ ((__nothrow__));\n\n\n\n\nextern unsigned int inet_nsap_addr (__const char *__cp,\n        unsigned char *__buf, int __len) __attribute__ ((__nothrow__));\n\n\n\nextern char *inet_nsap_ntoa (int __len, __const unsigned char *__cp,\n        char *__buf) __attribute__ ((__nothrow__));\n\n\n\n// # 50 \"socket_lowlevel.h\" 2\n// # 81 \"socket_lowlevel.h\"\ntypedef struct {\n union {\n  struct in_addr addr_ipv4;\n  struct in6_addr addr_ipv6;\n } addr;\n unsigned short family;\n} cherokee_in_addr_t;\n// # 31 \"socket.h\" 2\n// # 1 \"buffer.h\" 1\n// # 32 \"socket.h\" 2\n\n// # 1 \"fdpoll.h\" 1\n// # 34 \"socket.h\" 2\n// # 1 \"cryptor.h\" 1\n// # 35 \"socket.h\" 2\n\n\n\n\ntypedef enum {\n socket_reading = 0,\n socket_writing = 1,\n socket_closed = (-1)\n} cherokee_socket_status_t;\n\n\n\n\ntypedef enum {\n non_TLS,\n TLS\n} cherokee_socket_type_t;\n\n\n\n\ntypedef union {\n struct sockaddr sa;\n struct sockaddr_in sa_in;\n\n\n struct sockaddr_un sa_un;\n\n\n struct sockaddr_in6 sa_in6;\n\n\n struct sockaddr_storage sa_stor;\n\n} cherokee_sockaddr_t;\n\n\n\n\ntypedef struct {\n int socket;\n cherokee_sockaddr_t client_addr;\n socklen_t client_addr_len;\n cherokee_socket_status_t status;\n cherokee_socket_type_t is_tls;\n cherokee_cryptor_socket_t *cryptor;\n} cherokee_socket_t;\n// # 112 \"socket.h\"\nret_t cherokee_socket_init (cherokee_socket_t *socket);\nret_t cherokee_socket_mrproper (cherokee_socket_t *socket);\nret_t cherokee_socket_clean (cherokee_socket_t *socket);\n\nret_t cherokee_socket_init_tls (cherokee_socket_t *socket, cherokee_virtual_server_t *vserver, cherokee_connection_t *conn, cherokee_socket_status_t *blocking);\nret_t cherokee_socket_init_client_tls (cherokee_socket_t *socket, cherokee_buffer_t *host);\n\nret_t cherokee_socket_close (cherokee_socket_t *socket);\nret_t cherokee_socket_shutdown (cherokee_socket_t *socket, int how);\nret_t cherokee_socket_reset (cherokee_socket_t *socket);\nret_t cherokee_socket_accept (cherokee_socket_t *socket, cherokee_socket_t *server_socket);\nret_t cherokee_socket_accept_fd (cherokee_socket_t *socket, int *new_fd, cherokee_sockaddr_t *sa);\nint cherokee_socket_pending_read (cherokee_socket_t *socket);\nret_t cherokee_socket_flush (cherokee_socket_t *socket);\nret_t cherokee_socket_test_read (cherokee_socket_t *socket);\n\nret_t cherokee_socket_create_fd (cherokee_socket_t *socket, unsigned short int family);\nret_t cherokee_socket_bind (cherokee_socket_t *socket, int port, cherokee_buffer_t *listen_to);\nret_t cherokee_socket_listen (cherokee_socket_t *socket, int backlog);\n\nret_t cherokee_socket_bufwrite (cherokee_socket_t *socket, cherokee_buffer_t *buf, size_t *written);\nret_t cherokee_socket_bufread (cherokee_socket_t *socket, cherokee_buffer_t *buf, size_t count, size_t *read);\nret_t cherokee_socket_sendfile (cherokee_socket_t *socket, int fd, size_t size, off_t *offset, ssize_t *sent);\nret_t cherokee_socket_connect (cherokee_socket_t *socket);\n\nret_t cherokee_socket_ntop (cherokee_socket_t *socket, char *buf, size_t buf_size);\nret_t cherokee_socket_pton (cherokee_socket_t *socket, cherokee_buffer_t *buf);\nret_t cherokee_socket_gethostbyname (cherokee_socket_t *socket, cherokee_buffer_t *hostname);\nret_t cherokee_socket_set_status (cherokee_socket_t *socket, cherokee_socket_status_t status);\nret_t cherokee_socket_set_cork (cherokee_socket_t *socket, cherokee_boolean_t enable);\n\n\n\n\nret_t cherokee_socket_read (cherokee_socket_t *socket, char *buf, int buf_size, size_t *pcnt_read);\nret_t cherokee_socket_write (cherokee_socket_t *socket, const char *buf, int len, size_t *pcnt_written);\nret_t cherokee_socket_writev (cherokee_socket_t *socket, const struct iovec *vector, uint16_t vector_len, size_t *pcnt_written);\n\n\n\nret_t cherokee_socket_set_sockaddr (cherokee_socket_t *socket, int fd, cherokee_sockaddr_t *sa);\nret_t cherokee_socket_update_from_addrinfo (cherokee_socket_t *socket, const struct addrinfo *addr_info, cuint_t num);\n// # 36 \"thread.h\" 2\n// # 1 \"connection.h\" 1\n// # 37 \"thread.h\" 2\n// # 1 \"connection-protected.h\" 1\n// # 56 \"connection-protected.h\"\n// # 1 \"http.h\" 1\n// # 57 \"connection-protected.h\" 2\n// # 1 \"list.h\" 1\n// # 58 \"connection-protected.h\" 2\n// # 1 \"avl.h\" 1\n// # 59 \"connection-protected.h\" 2\n\n// # 1 \"header.h\" 1\n// # 33 \"header.h\"\n// # 1 \"buffer.h\" 1\n// # 34 \"header.h\" 2\n// # 1 \"http.h\" 1\n// # 35 \"header.h\" 2\n\n\n\n\n\n\n\ntypedef enum {\n header_accept,\n header_accept_charset,\n header_accept_encoding,\n header_accept_language,\n header_authorization,\n header_connection,\n header_content_length,\n header_content_type,\n header_set_cookie,\n header_cookie,\n header_host,\n header_if_modified_since,\n header_if_none_match,\n header_if_range,\n header_keepalive,\n header_location,\n header_range,\n header_referer,\n header_transfer_encoding,\n header_upgrade,\n header_user_agent,\n header_x_forwarded_for,\n header_x_forwarded_host,\n header_x_real_ip,\n header_expect,\n HEADER_LENGTH\n} cherokee_common_header_t;\n\n\ntypedef enum {\n header_type_request,\n header_type_response,\n header_type_basic\n} cherokee_header_type_t;\n\n\ntypedef struct cherokee_header cherokee_header_t;\n\n\n\ntypedef ret_t (* cherokee_header_foreach_func_t) (cherokee_buffer_t *header, cherokee_buffer_t *content, void *data);\n\nret_t cherokee_header_new (cherokee_header_t **hdr, cherokee_header_type_t type);\nret_t cherokee_header_init (cherokee_header_t *hdr, cherokee_header_type_t type);\nret_t cherokee_header_free (cherokee_header_t *hdr);\nret_t cherokee_header_mrproper (cherokee_header_t *hdr);\n\nret_t cherokee_header_clean (cherokee_header_t *hdr);\nret_t cherokee_header_parse (cherokee_header_t *hdr, cherokee_buffer_t *buffer, cherokee_http_t *error_code);\nret_t cherokee_header_has_header (cherokee_header_t *hdr, cherokee_buffer_t *buffer, int tail_len);\n\nret_t cherokee_header_get_length (cherokee_header_t *hdr, cuint_t *len);\nret_t cherokee_header_foreach_unknown (cherokee_header_t *hdr, cherokee_header_foreach_func_t func, void *data);\n\nret_t cherokee_header_copy_request (cherokee_header_t *hdr, cherokee_buffer_t *request);\nret_t cherokee_header_copy_query_string (cherokee_header_t *hdr, cherokee_buffer_t *query_string);\nret_t cherokee_header_copy_request_w_args (cherokee_header_t *hdr, cherokee_buffer_t *request);\nret_t cherokee_header_get_request_w_args (cherokee_header_t *hdr, char **req, int *req_len);\n\nret_t cherokee_header_has_known (cherokee_header_t *hdr, cherokee_common_header_t header);\nret_t cherokee_header_get_known (cherokee_header_t *hdr, cherokee_common_header_t header, char **info, cuint_t *info_len);\nret_t cherokee_header_get_unknown (cherokee_header_t *hdr, const char *name, cuint_t name_len, char **header, cuint_t *header_len);\n\nret_t cherokee_header_copy_known (cherokee_header_t *hdr, cherokee_common_header_t header, cherokee_buffer_t *buf);\nret_t cherokee_header_copy_unknown (cherokee_header_t *hdr, const char *name, cuint_t name_len, cherokee_buffer_t *buf);\n\nret_t cherokee_header_copy_method (cherokee_header_t *hdr, cherokee_buffer_t *buf);\nret_t cherokee_header_copy_version (cherokee_header_t *hdr, cherokee_buffer_t *buf);\n\n\n\n// # 61 \"connection-protected.h\" 2\n// # 1 \"logger.h\" 1\n// # 62 \"connection-protected.h\" 2\n// # 1 \"handler.h\" 1\n// # 63 \"connection-protected.h\" 2\n// # 1 \"encoder.h\" 1\n// # 64 \"connection-protected.h\" 2\n// # 1 \"iocache.h\" 1\n// # 32 \"iocache.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"iocache.h\" 2\n// # 1 \"../cherokee/server.h\" 1\n// # 34 \"iocache.h\" 2\n// # 1 \"../cherokee/cache.h\" 1\n// # 32 \"../cherokee/cache.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/cache.h\" 2\n// # 1 \"../cherokee/list.h\" 1\n// # 34 \"../cherokee/cache.h\" 2\n// # 1 \"../cherokee/avl.h\" 1\n// # 35 \"../cherokee/cache.h\" 2\n// # 1 \"../cherokee/config_node.h\" 1\n// # 36 \"../cherokee/cache.h\" 2\n\n\ntypedef struct cherokee_cache cherokee_cache_t;\ntypedef struct cherokee_cache_priv cherokee_cache_priv_t;\ntypedef struct cherokee_cache_entry cherokee_cache_entry_t;\n\n\ntypedef ret_t (* cherokee_cache_new_func_t) (struct cherokee_cache *cache,\n           cherokee_buffer_t *key,\n           void *param,\n           struct cherokee_cache_entry **ret);\n\ntypedef ret_t (* cherokee_cache_get_stats_t) (struct cherokee_cache *cache,\n           cherokee_buffer_t *key);\n\ntypedef ret_t (* cherokee_cache_entry_clean_t) (struct cherokee_cache_entry *entry);\ntypedef ret_t (* cherokee_cache_entry_fetch_t) (struct cherokee_cache_entry *entry);\ntypedef ret_t (* cherokee_cache_entry_free_t) (struct cherokee_cache_entry *entry);\n\n\ntypedef enum {\n cache_no_list = 0,\n cache_t1,\n cache_t2,\n cache_b1,\n cache_b2\n} cherokee_cache_list_t;\n\n\nstruct cherokee_cache {\n\n cherokee_avl_t map;\n\n\n cherokee_list_t _t1;\n cherokee_list_t _b1;\n cint_t len_t1;\n cint_t len_b1;\n\n\n cherokee_list_t _t2;\n cherokee_list_t _b2;\n cint_t len_t2;\n cint_t len_b2;\n\n\n cint_t max_size;\n cint_t target_t1;\n\n\n cuint_t count;\n cuint_t count_hit;\n cuint_t count_miss;\n\n\n cherokee_cache_new_func_t new_cb;\n void *new_cb_param;\n cherokee_cache_get_stats_t stats_cb;\n\n\n cherokee_cache_priv_t *priv;\n};\n\nstruct cherokee_cache_entry {\n\n cherokee_list_t listed;\n cherokee_buffer_t key;\n cherokee_cache_list_t in_list;\n\n cint_t ref_count;\n void *mutex;\n cherokee_cache_t *cache;\n\n\n cherokee_cache_entry_clean_t clean_cb;\n cherokee_cache_entry_fetch_t fetch_cb;\n cherokee_cache_entry_free_t free_cb;\n};\n// # 122 \"../cherokee/cache.h\"\nret_t cherokee_cache_entry_init (cherokee_cache_entry_t *entry,\n      cherokee_buffer_t *key,\n      cherokee_cache_t *cache,\n      void *mutex);\nret_t cherokee_cache_entry_unref (cherokee_cache_entry_t **entry);\n\n\n\nret_t cherokee_cache_init (cherokee_cache_t *cache);\nret_t cherokee_cache_mrproper (cherokee_cache_t *cache);\nret_t cherokee_cache_clean (cherokee_cache_t *cache);\n\n\n\nret_t cherokee_cache_configure (cherokee_cache_t *cache,\n    cherokee_config_node_t *conf);\n\nret_t cherokee_cache_get (cherokee_cache_t *cache,\n    cherokee_buffer_t *key,\n    cherokee_cache_entry_t **entry);\n\nret_t cherokee_cache_get_stats (cherokee_cache_t *cache,\n    cherokee_buffer_t *info);\n// # 35 \"iocache.h\" 2\n// # 1 \"../cherokee/config_node.h\" 1\n// # 36 \"iocache.h\" 2\n\n\n\n\n\ntypedef struct {\n cherokee_cache_t cache;\n\n\n cuint_t max_file_size;\n cuint_t min_file_size;\n cuint_t lasting_mmap;\n cuint_t lasting_stat;\n} cherokee_iocache_t;\n\ntypedef enum {\n iocache_nothing = 0,\n iocache_stat = 1,\n iocache_mmap = 1 << 1\n} cherokee_iocache_info_t;\n\ntypedef struct {\n\n cherokee_cache_entry_t base;\n cherokee_iocache_info_t info;\n\n\n struct stat state;\n ret_t state_ret;\n void *mmaped;\n size_t mmaped_len;\n} cherokee_iocache_entry_t;\n\n\n\n\n\n\n\nret_t cherokee_iocache_new (cherokee_iocache_t **iocache);\nret_t cherokee_iocache_free (cherokee_iocache_t *iocache);\n\nret_t cherokee_iocache_init (cherokee_iocache_t *iocache);\nret_t cherokee_iocache_mrproper (cherokee_iocache_t *iocache);\n\nret_t cherokee_iocache_configure (cherokee_iocache_t *iocache,\n     cherokee_config_node_t *conf);\n\n\n\nret_t cherokee_iocache_entry_unref (cherokee_iocache_entry_t **entry);\n\n\n\nret_t cherokee_iocache_autoget (cherokee_iocache_t *iocache,\n     cherokee_buffer_t *file,\n     cherokee_iocache_info_t info,\n     cherokee_iocache_entry_t **ret_io);\n\nret_t cherokee_iocache_autoget_fd (cherokee_iocache_t *iocache,\n     cherokee_buffer_t *file,\n     cherokee_iocache_info_t info,\n     int *fd,\n     cherokee_iocache_entry_t **ret_io);\n\n\nret_t cherokee_iocache_get_mmaped_size (cherokee_iocache_t *iocache, size_t *total);\n// # 65 \"connection-protected.h\" 2\n// # 1 \"post.h\" 1\n// # 28 \"post.h\"\n// # 1 \"common.h\" 1\n// # 29 \"post.h\" 2\n\n\n\ntypedef enum {\n        post_enc_regular,\n        post_enc_chunked\n} cherokee_post_encoding_t;\n\ntypedef enum {\n cherokee_post_read_header_init,\n cherokee_post_read_header_100cont\n} cherokee_post_rh_phase_t;\n\ntypedef enum {\n cherokee_post_send_phase_read,\n cherokee_post_send_phase_write\n} cherokee_post_send_phase_t;\n\ntypedef struct {\n off_t len;\n cherokee_boolean_t has_info;\n cherokee_post_encoding_t encoding;\n cherokee_post_rh_phase_t read_header_phase;\n cherokee_buffer_t read_header_100cont;\n cherokee_buffer_t header_surplus;\n cherokee_buffer_t progress_id;\n\n struct {\n  off_t read;\n  cherokee_post_send_phase_t phase;\n  cherokee_buffer_t buffer;\n } send;\n\n struct {\n  cherokee_boolean_t last;\n  off_t processed;\n  cherokee_buffer_t buffer;\n  cherokee_boolean_t retransmit;\n } chunked;\n\n} cherokee_post_t;\n\n\n\n\n\n\nret_t cherokee_post_init (cherokee_post_t *post);\nret_t cherokee_post_clean (cherokee_post_t *post);\nret_t cherokee_post_mrproper (cherokee_post_t *post);\n\nret_t cherokee_post_read_header (cherokee_post_t *post, void *conn);\nint cherokee_post_read_finished (cherokee_post_t *post);\nint cherokee_post_has_buffered_info (cherokee_post_t *post);\n\n\n\n\nret_t cherokee_post_read (cherokee_post_t *post,\n           cherokee_socket_t *sock_in,\n           cherokee_buffer_t *buffer);\n\n\n\nret_t cherokee_post_send_to_socket (cherokee_post_t *post,\n           cherokee_socket_t *sock_in,\n           cherokee_socket_t *sock_out,\n           cherokee_buffer_t *buffer,\n           cherokee_socket_status_t *blocking,\n           cherokee_boolean_t *did_IO);\n\nret_t cherokee_post_send_to_fd (cherokee_post_t *post,\n           cherokee_socket_t *sock_in,\n           int fd_out,\n           cherokee_buffer_t *tmp,\n           cherokee_socket_status_t *blocking,\n           cherokee_boolean_t *did_IO);\n\n\n// # 66 \"connection-protected.h\" 2\n// # 1 \"header-protected.h\" 1\n// # 32 \"header-protected.h\"\n// # 1 \"header.h\" 1\n// # 33 \"header-protected.h\" 2\n\n\ntypedef struct {\n off_t info_off;\n off_t info_len;\n} cherokee_header_entry_t;\n\ntypedef struct {\n off_t header_off;\n off_t header_info_off;\n int header_info_len;\n} cherokee_header_unknown_entry_t;\n\n\nstruct cherokee_header {\n\n\n cherokee_header_entry_t header[HEADER_LENGTH];\n\n\n\n cherokee_header_unknown_entry_t *unknowns;\n cint_t unknowns_len;\n\n\n\n cherokee_header_type_t type;\n cherokee_http_version_t version;\n cherokee_http_method_t method;\n cherokee_http_t response;\n\n\n\n off_t request_off;\n cint_t request_len;\n cint_t request_args_len;\n\n\n\n off_t query_string_off;\n cint_t query_string_len;\n\n\n\n cherokee_buffer_t *input_buffer;\n crc_t input_buffer_crc;\n uint32_t input_header_len;\n};\n// # 67 \"connection-protected.h\" 2\n// # 1 \"regex.h\" 1\n// # 32 \"regex.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"regex.h\" 2\n// # 1 \"../cherokee/list.h\" 1\n// # 34 \"regex.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 35 \"regex.h\" 2\n// # 1 \"../cherokee/config_node.h\" 1\n// # 36 \"regex.h\" 2\n// # 1 \"./pcre/pcre.h\" 1\n// # 195 \"./pcre/pcre.h\"\nstruct real_pcre;\ntypedef struct real_pcre pcre;\n// # 210 \"./pcre/pcre.h\"\ntypedef struct pcre_extra {\n  unsigned long int flags;\n  void *study_data;\n  unsigned long int match_limit;\n  void *callout_data;\n  const unsigned char *tables;\n  unsigned long int match_limit_recursion;\n} pcre_extra;\n\n\n\n\n\n\ntypedef struct pcre_callout_block {\n  int version;\n\n  int callout_number;\n  int *offset_vector;\n  const char * subject;\n  int subject_length;\n  int start_match;\n  int current_position;\n  int capture_top;\n  int capture_last;\n  void *callout_data;\n\n  int pattern_position;\n  int next_item_length;\n\n} pcre_callout_block;\n// # 249 \"./pcre/pcre.h\"\nextern void *(*pcre_malloc)(size_t);\nextern void (*pcre_free)(void *);\nextern void *(*pcre_stack_malloc)(size_t);\nextern void (*pcre_stack_free)(void *);\nextern int (*pcre_callout)(pcre_callout_block *);\n// # 264 \"./pcre/pcre.h\"\nextern pcre *pcre_compile(const char *, int, const char **, int *,\n                  const unsigned char *);\nextern pcre *pcre_compile2(const char *, int, int *, const char **,\n                  int *, const unsigned char *);\nextern int pcre_config(int, void *);\nextern int pcre_copy_named_substring(const pcre *, const char *,\n                  int *, int, const char *, char *, int);\nextern int pcre_copy_substring(const char *, int *, int, int, char *,\n                  int);\nextern int pcre_dfa_exec(const pcre *, const pcre_extra *,\n                  const char *, int, int, int, int *, int , int *, int);\nextern int pcre_exec(const pcre *, const pcre_extra *, const char *,\n                   int, int, int, int *, int);\nextern void pcre_free_substring(const char *);\nextern void pcre_free_substring_list(const char **);\nextern int pcre_fullinfo(const pcre *, const pcre_extra *, int,\n                  void *);\nextern int pcre_get_named_substring(const pcre *, const char *,\n                  int *, int, const char *, const char **);\nextern int pcre_get_stringnumber(const pcre *, const char *);\nextern int pcre_get_stringtable_entries(const pcre *, const char *,\n                  char **, char **);\nextern int pcre_get_substring(const char *, int *, int, int,\n                  const char **);\nextern int pcre_get_substring_list(const char *, int *, int,\n                  const char ***);\nextern int pcre_info(const pcre *, int *, int *);\nextern const unsigned char *pcre_maketables(void);\nextern int pcre_refcount(pcre *, int);\nextern pcre_extra *pcre_study(const pcre *, int, const char **);\nextern const char *pcre_version(void);\n// # 37 \"regex.h\" 2\n\n\n\n\n\n\ntypedef struct cherokee_regex_table cherokee_regex_table_t;\n\n\n\n\nret_t cherokee_regex_table_new (cherokee_regex_table_t **table);\nret_t cherokee_regex_table_free (cherokee_regex_table_t *table);\nret_t cherokee_regex_table_clean (cherokee_regex_table_t *table);\n\nret_t cherokee_regex_table_get (cherokee_regex_table_t *table, char *pattern, void **pcre);\nret_t cherokee_regex_table_add (cherokee_regex_table_t *table, char *pattern);\n\n\n\ntypedef struct {\n cherokee_list_t listed;\n pcre *re;\n char hidden;\n cherokee_buffer_t subs;\n} cherokee_regex_entry_t;\n\n\n\nret_t cherokee_regex_list_configure (cherokee_list_t *list,\n         cherokee_config_node_t *conf,\n         cherokee_regex_table_t *regexs);\n\nret_t cherokee_regex_list_mrproper (cherokee_list_t *list);\n\n\n\nret_t cherokee_regex_substitute (cherokee_buffer_t *regex_str,\n     cherokee_buffer_t *source,\n     cherokee_buffer_t *target,\n     cint_t ovector[],\n     cint_t stringcount,\n     char dollar_char);\n\n\n// # 68 \"connection-protected.h\" 2\n// # 1 \"bind.h\" 1\n// # 29 \"bind.h\"\n// # 1 \"list.h\" 1\n// # 30 \"bind.h\" 2\n// # 1 \"buffer.h\" 1\n// # 31 \"bind.h\" 2\n// # 1 \"config_node.h\" 1\n// # 32 \"bind.h\" 2\n\n// # 1 \"version.h\" 1\n// # 33 \"version.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 34 \"version.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 35 \"version.h\" 2\n\n\n\n\ntypedef enum {\n cherokee_version_product,\n cherokee_version_minor,\n cherokee_version_minimal,\n cherokee_version_os,\n cherokee_version_full\n} cherokee_server_token_t;\n\nret_t cherokee_version_add (cherokee_buffer_t *buf, cherokee_server_token_t level);\nret_t cherokee_version_add_w_port (cherokee_buffer_t *buf, cherokee_server_token_t level, cuint_t port);\nret_t cherokee_version_add_simple (cherokee_buffer_t *buf, cherokee_server_token_t level);\n\n\n\n// # 34 \"bind.h\" 2\n\ntypedef struct {\n cherokee_list_t listed;\n int id;\n\n\n cherokee_socket_t socket;\n\n\n cherokee_buffer_t ip;\n int port;\n\n\n cherokee_buffer_t server_string;\n cherokee_buffer_t server_string_w_port;\n\n cherokee_buffer_t server_address;\n cherokee_buffer_t server_port;\n\n\n cuint_t accept_continuous;\n cuint_t accept_continuous_max;\n cuint_t accept_recalculate;\n} cherokee_bind_t;\n\n\n\n\n\nret_t cherokee_bind_new (cherokee_bind_t **listener);\nret_t cherokee_bind_free (cherokee_bind_t *listener);\n\nret_t cherokee_bind_configure (cherokee_bind_t *listener, cherokee_config_node_t *config);\nret_t cherokee_bind_set_default (cherokee_bind_t *listener);\nret_t cherokee_bind_accept_more (cherokee_bind_t *listener, ret_t prev_ret);\n\nret_t cherokee_bind_init_port (cherokee_bind_t *listener,\n     cuint_t listen_queue,\n     cherokee_boolean_t ipv6,\n     cherokee_server_token_t token);\n// # 69 \"connection-protected.h\" 2\n// # 1 \"bogotime.h\" 1\n// # 28 \"bogotime.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 29 \"bogotime.h\" 2\n\n\n\n\n\n\n\n// # 1 \"../cherokee/buffer.h\" 1\n// # 37 \"bogotime.h\" 2\n\ntypedef unsigned long long cherokee_msec_t;\ntypedef void (*bogotime_callback_t) (void *param);\n\n\n\n\n\nextern struct timeval cherokee_bogonow_tv;\nextern volatile cherokee_msec_t cherokee_bogonow_msec;\nextern volatile time_t cherokee_bogonow_now;\nextern long cherokee_bogonow_tzloc;\n\n\nextern struct tm cherokee_bogonow_tmloc;\nextern struct tm cherokee_bogonow_tmgmt;\nextern cherokee_buffer_t cherokee_bogonow_strgmt;\n\n\n\nret_t cherokee_bogotime_init (void);\nret_t cherokee_bogotime_free (void);\n\nret_t cherokee_bogotime_update (void);\nret_t cherokee_bogotime_try_update (void);\n\n\nvoid cherokee_bogotime_lock_read (void);\nvoid cherokee_bogotime_release (void);\n\n\nret_t cherokee_bogotime_add_callback (bogotime_callback_t func, void *param, time_t elapse);\n// # 70 \"connection-protected.h\" 2\n// # 1 \"config_entry.h\" 1\n// # 71 \"connection-protected.h\" 2\n\ntypedef enum {\n phase_nothing,\n phase_tls_handshake,\n phase_reading_header,\n phase_processing_header,\n phase_setup_connection,\n phase_init,\n phase_reading_post,\n phase_add_headers,\n phase_send_headers,\n phase_stepping,\n phase_shutdown,\n phase_lingering\n} cherokee_connection_phase_t;\n// # 97 \"connection-protected.h\"\ntypedef cuint_t cherokee_connection_options_t;\n\n\nstruct cherokee_connection {\n cherokee_list_t list_node;\n\n\n\n void *server;\n void *vserver;\n void *thread;\n cherokee_bind_t *bind;\n cherokee_config_entry_ref_t config_entry;\n\n\n\n culong_t id;\n cherokee_buffer_t self_trace;\n\n\n\n cherokee_socket_t socket;\n cherokee_http_upgrade_t upgrade;\n cherokee_connection_options_t options;\n cherokee_handler_t *handler;\n\n cherokee_logger_t *logger_ref;\n cherokee_buffer_t logger_real_ip;\n\n\n\n cherokee_buffer_t incoming_header;\n cherokee_buffer_t header_buffer;\n cherokee_buffer_t buffer;\n\n\n\n cherokee_connection_phase_t phase;\n cherokee_http_t error_code;\n cherokee_buffer_t error_internal_url;\n cherokee_buffer_t error_internal_qs;\n cherokee_http_t error_internal_code;\n\n\n\n cherokee_header_t header;\n\n\n\n encoder_func_new_t encoder_new_func;\n cherokee_encoder_props_t *encoder_props;\n cherokee_encoder_t *encoder;\n cherokee_buffer_t encoder_buffer;\n\n\n\n\n cherokee_buffer_t local_directory;\n cherokee_buffer_t web_directory;\n cherokee_buffer_t request;\n cherokee_buffer_t pathinfo;\n cherokee_buffer_t userdir;\n cherokee_buffer_t query_string;\n cherokee_avl_t *arguments;\n\n cherokee_buffer_t host;\n cherokee_buffer_t host_port;\n cherokee_buffer_t effective_directory;\n cherokee_buffer_t request_original;\n cherokee_buffer_t query_string_original;\n\n\n\n cherokee_validator_t *validator;\n cherokee_http_auth_t auth_type;\n cherokee_http_auth_t req_auth_type;\n\n\n\n off_t rx;\n size_t rx_partial;\n off_t tx;\n size_t tx_partial;\n time_t traffic_next;\n\n\n\n cherokee_post_t post;\n\n\n\n uint32_t keepalive;\n time_t timeout;\n time_t timeout_lapse;\n cherokee_buffer_t *timeout_header;\n\n\n\n int polling_fd;\n cherokee_socket_status_t polling_mode;\n cherokee_boolean_t polling_multiple;\n\n off_t range_start;\n off_t range_end;\n\n void *mmaped;\n off_t mmaped_len;\n cherokee_iocache_entry_t *io_entry_ref;\n\n\n\n cherokee_flcache_conn_t flcache;\n\n\n\n int regex_ovector[(20*3)];\n int regex_ovecsize;\n int regex_host_ovector[(20*3)];\n int regex_host_ovecsize;\n\n\n\n cherokee_expiration_t expiration;\n time_t expiration_time;\n cherokee_expiration_props_t expiration_prop;\n\n\n\n cherokee_boolean_t chunked_encoding;\n cherokee_boolean_t chunked_last_package;\n cherokee_buffer_t chunked_len;\n size_t chunked_sent;\n struct iovec chunks[3];\n uint16_t chunksn;\n\n\n\n cherokee_buffer_t redirect;\n cuint_t respins;\n\n\n\n cherokee_boolean_t limit_rate;\n cuint_t limit_bps;\n cherokee_msec_t limit_blocked_until;\n};\n// # 255 \"connection-protected.h\"\nret_t cherokee_connection_new (cherokee_connection_t **conn);\nret_t cherokee_connection_free (cherokee_connection_t *conn);\nret_t cherokee_connection_clean (cherokee_connection_t *conn);\nret_t cherokee_connection_clean_close (cherokee_connection_t *conn);\n\n\n\nret_t cherokee_connection_shutdown_wr (cherokee_connection_t *conn);\nret_t cherokee_connection_linger_read (cherokee_connection_t *conn);\n\n\n\nret_t cherokee_connection_send (cherokee_connection_t *conn);\nret_t cherokee_connection_send_header (cherokee_connection_t *conn);\nret_t cherokee_connection_send_header_and_mmaped (cherokee_connection_t *conn);\nret_t cherokee_connection_recv (cherokee_connection_t *conn, cherokee_buffer_t *buffer, off_t to_read, off_t *len);\n\n\n\nret_t cherokee_connection_create_handler (cherokee_connection_t *conn, cherokee_config_entry_t *config_entry);\nret_t cherokee_connection_create_encoder (cherokee_connection_t *conn, cherokee_avl_t *accept_enc);\nret_t cherokee_connection_setup_error_handler (cherokee_connection_t *conn);\nret_t cherokee_connection_setup_hsts_handler (cherokee_connection_t *conn);\nret_t cherokee_connection_check_authentication (cherokee_connection_t *conn, cherokee_config_entry_t *config_entry);\nret_t cherokee_connection_check_ip_validation (cherokee_connection_t *conn, cherokee_config_entry_t *config_entry);\nret_t cherokee_connection_check_only_secure (cherokee_connection_t *conn, cherokee_config_entry_t *config_entry);\nret_t cherokee_connection_check_http_method (cherokee_connection_t *conn, cherokee_config_entry_t *config_entry);\nret_t cherokee_connection_set_rate (cherokee_connection_t *conn, cherokee_config_entry_t *config_entry);\nvoid cherokee_connection_set_keepalive (cherokee_connection_t *conn);\nvoid cherokee_connection_set_chunked_encoding (cherokee_connection_t *conn);\nint cherokee_connection_should_include_length (cherokee_connection_t *conn);\nret_t cherokee_connection_instance_encoder (cherokee_connection_t *conn);\nret_t cherokee_connection_sleep (cherokee_connection_t *conn, cherokee_msec_t msecs);\nvoid cherokee_connection_update_timeout (cherokee_connection_t *conn);\nvoid cherokee_connection_add_expiration_header (cherokee_connection_t *conn, cherokee_buffer_t *buffer, cherokee_boolean_t use_maxage);\nret_t cherokee_connection_build_host_port_string (cherokee_connection_t *conn, cherokee_buffer_t *buf);\n\n\n\nret_t cherokee_connection_open_request (cherokee_connection_t *conn);\nret_t cherokee_connection_reading_check (cherokee_connection_t *conn);\nret_t cherokee_connection_step (cherokee_connection_t *conn);\n\n\n\nret_t cherokee_connection_read_post (cherokee_connection_t *conn);\nret_t cherokee_connection_build_header (cherokee_connection_t *conn);\nret_t cherokee_connection_get_request (cherokee_connection_t *conn);\nret_t cherokee_connection_parse_range (cherokee_connection_t *conn);\nint cherokee_connection_is_userdir (cherokee_connection_t *conn);\n\nret_t cherokee_connection_build_local_directory (cherokee_connection_t *conn, cherokee_virtual_server_t *vsrv);\nret_t cherokee_connection_build_local_directory_userdir (cherokee_connection_t *conn, cherokee_virtual_server_t *vsrv);\nret_t cherokee_connection_set_custom_droot (cherokee_connection_t *conn, cherokee_config_entry_t *entry);\n\nret_t cherokee_connection_clean_error_headers (cherokee_connection_t *conn);\nret_t cherokee_connection_set_redirect (cherokee_connection_t *conn, cherokee_buffer_t *address);\n\nret_t cherokee_connection_clean_for_respin (cherokee_connection_t *conn);\nint cherokee_connection_use_webdir (cherokee_connection_t *conn);\n\n\n\nret_t cherokee_connection_log (cherokee_connection_t *conn);\nret_t cherokee_connection_update_vhost_traffic (cherokee_connection_t *conn);\nchar *cherokee_connection_print (cherokee_connection_t *conn);\n\n\n\nvoid cherokee_connection_rx_add (cherokee_connection_t *conn, ssize_t rx);\nvoid cherokee_connection_tx_add (cherokee_connection_t *conn, ssize_t tx);\n// # 38 \"thread.h\" 2\n// # 1 \"fdpoll.h\" 1\n// # 39 \"thread.h\" 2\n// # 1 \"avl.h\" 1\n// # 40 \"thread.h\" 2\n// # 1 \"limiter.h\" 1\n// # 28 \"limiter.h\"\n// # 1 \"common.h\" 1\n// # 29 \"limiter.h\" 2\n// # 1 \"list.h\" 1\n// # 30 \"limiter.h\" 2\n\n\ntypedef struct {\n cherokee_list_t conns;\n cuint_t conns_num;\n} cherokee_limiter_t;\n\nret_t cherokee_limiter_init (cherokee_limiter_t *limiter);\nret_t cherokee_limiter_mrproper (cherokee_limiter_t *limiter);\n\nret_t cherokee_limiter_add_conn (cherokee_limiter_t *limiter,\n           void *conn);\n\ncherokee_msec_t\n      cherokee_limiter_get_time_limit (cherokee_limiter_t *limiter,\n           cherokee_msec_t fdwatch_msecs);\n\nret_t cherokee_limiter_reactive (cherokee_limiter_t *limiter,\n           void *thread);\n// # 41 \"thread.h\" 2\n\n\ntypedef enum {\n thread_sync,\n thread_async\n} cherokee_thread_type_t;\n\n\ntypedef struct {\n cherokee_list_t base;\n\n\n pthread_t thread;\n pthread_mutex_t starting_lock;\n pthread_mutex_t ownership;\n\n\n cherokee_fdpoll_t *fdpoll;\n cherokee_thread_type_t thread_type;\n\n time_t bogo_now;\n struct tm bogo_now_tmgmt;\n struct tm bogo_now_tmloc;\n cherokee_buffer_t bogo_now_strgmt;\n\n cherokee_buffer_t tmp_buf1;\n cherokee_buffer_t tmp_buf2;\n\n void *server;\n cherokee_boolean_t exit;\n cherokee_boolean_t ended;\n\n cuint_t conns_num;\n cuint_t conns_max;\n cuint_t conns_keepalive_max;\n\n int active_list_num;\n cherokee_list_t active_list;\n int polling_list_num;\n cherokee_list_t polling_list;\n cherokee_list_t reuse_list;\n int reuse_list_num;\n cherokee_limiter_t limiter;\n cherokee_boolean_t is_full;\n\n int pending_conns_num;\n int pending_read_num;\n\n cherokee_avl_t *fastcgi_servers;\n cherokee_func_free_t fastcgi_free_func;\n\n} cherokee_thread_t;\n// # 102 \"thread.h\"\nret_t cherokee_thread_step_MULTI_THREAD (cherokee_thread_t *thd, cherokee_boolean_t dont_block);\n\n\n\nret_t cherokee_thread_step_SINGLE_THREAD (cherokee_thread_t *thd);\n\n\nret_t cherokee_thread_new (cherokee_thread_t **thd,\n                             void *server,\n                             cherokee_thread_type_t type,\n                             cherokee_poll_type_t fdtype,\n                             cint_t system_fd_num,\n                             cint_t fds_max,\n                             cint_t conns_max,\n        cint_t keepalive_max);\n\nret_t cherokee_thread_free (cherokee_thread_t *thd);\n\nret_t cherokee_thread_unlock (cherokee_thread_t *thd);\nret_t cherokee_thread_wait_end (cherokee_thread_t *thd);\n\nret_t cherokee_thread_deactive_to_polling (cherokee_thread_t *thd, cherokee_connection_t *conn, int fd, int rw, char multi);\nint cherokee_thread_connection_num (cherokee_thread_t *thd);\n\nret_t cherokee_thread_retire_active_connection (cherokee_thread_t *thd, cherokee_connection_t *conn);\nret_t cherokee_thread_inject_active_connection (cherokee_thread_t *thd, cherokee_connection_t *conn);\n\nret_t cherokee_thread_close_all_connections (cherokee_thread_t *thd);\nret_t cherokee_thread_close_polling_connections (cherokee_thread_t *thd, int fd, cuint_t *num);\n// # 49 \"server-protected.h\" 2\n// # 1 \"plugin_loader.h\" 1\n// # 50 \"server-protected.h\" 2\n// # 1 \"icons.h\" 1\n// # 28 \"icons.h\"\n// # 1 \"common.h\" 1\n// # 29 \"icons.h\" 2\n// # 1 \"avl.h\" 1\n// # 30 \"icons.h\" 2\n// # 1 \"list.h\" 1\n// # 31 \"icons.h\" 2\n// # 1 \"buffer.h\" 1\n// # 32 \"icons.h\" 2\n// # 1 \"config_node.h\" 1\n// # 33 \"icons.h\" 2\n\n\ntypedef struct {\n cherokee_avl_t files;\n cherokee_avl_t suffixes;\n cherokee_list_t file_matching;\n\n cherokee_buffer_t default_icon;\n cherokee_buffer_t directory_icon;\n cherokee_buffer_t parentdir_icon;\n} cherokee_icons_t;\n\n\n\n\nret_t cherokee_icons_new (cherokee_icons_t **icons);\nret_t cherokee_icons_free (cherokee_icons_t *icons);\nret_t cherokee_icons_clean (cherokee_icons_t *icons);\n\nret_t cherokee_icons_configure (cherokee_icons_t *icons, cherokee_config_node_t *config);\nret_t cherokee_icons_get_icon (cherokee_icons_t *icons, cherokee_buffer_t *file, cherokee_buffer_t **icon);\n\nret_t cherokee_icons_add_file (cherokee_icons_t *icons, cherokee_buffer_t *icon, cherokee_buffer_t *file);\nret_t cherokee_icons_add_suffix (cherokee_icons_t *icons, cherokee_buffer_t *icon, cherokee_buffer_t *suffix);\n\nret_t cherokee_icons_set_default (cherokee_icons_t *icons, cherokee_buffer_t *icon);\nret_t cherokee_icons_set_directory (cherokee_icons_t *icons, cherokee_buffer_t *icon);\nret_t cherokee_icons_set_parentdir (cherokee_icons_t *icons, cherokee_buffer_t *icon);\n// # 51 \"server-protected.h\" 2\n// # 1 \"iocache.h\" 1\n// # 52 \"server-protected.h\" 2\n// # 1 \"regex.h\" 1\n// # 53 \"server-protected.h\" 2\n// # 1 \"nonce.h\" 1\n// # 32 \"nonce.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"nonce.h\" 2\n// # 1 \"../cherokee/connection.h\" 1\n// # 34 \"nonce.h\" 2\n\n\n\n\ntypedef struct cherokee_nonce_table cherokee_nonce_table_t;\n\nret_t cherokee_nonce_table_new (cherokee_nonce_table_t **nonces);\nret_t cherokee_nonce_table_free (cherokee_nonce_table_t *nonces);\nret_t cherokee_nonce_table_cleanup (cherokee_nonce_table_t *nonces);\n\nret_t cherokee_nonce_table_check (cherokee_nonce_table_t *nonces, cherokee_buffer_t *nonce);\nret_t cherokee_nonce_table_remove (cherokee_nonce_table_t *nonces, cherokee_buffer_t *nonce);\nret_t cherokee_nonce_table_generate (cherokee_nonce_table_t *nonces, cherokee_connection_t *conn, cherokee_buffer_t *nonce);\n\n\n\n// # 54 \"server-protected.h\" 2\n// # 1 \"mime.h\" 1\n// # 32 \"mime.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"mime.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"mime.h\" 2\n// # 1 \"../cherokee/list.h\" 1\n// # 35 \"mime.h\" 2\n// # 1 \"../cherokee/mime_entry.h\" 1\n// # 32 \"../cherokee/mime_entry.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/mime_entry.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"../cherokee/mime_entry.h\" 2\n// # 1 \"../cherokee/list.h\" 1\n// # 35 \"../cherokee/mime_entry.h\" 2\n\n\n\n\ntypedef struct cherokee_mime_entry cherokee_mime_entry_t;\n\n\nret_t cherokee_mime_entry_new (cherokee_mime_entry_t **mentry);\nret_t cherokee_mime_entry_free (cherokee_mime_entry_t *mentry);\n\nret_t cherokee_mime_entry_set_type (cherokee_mime_entry_t *mentry, cherokee_buffer_t *type);\nret_t cherokee_mime_entry_get_type (cherokee_mime_entry_t *mentry, cherokee_buffer_t **name);\n\nret_t cherokee_mime_entry_set_maxage (cherokee_mime_entry_t *mentry, cuint_t maxage);\nret_t cherokee_mime_entry_get_maxage (cherokee_mime_entry_t *mentry, cuint_t *maxage);\n\n\n// # 36 \"mime.h\" 2\n// # 1 \"../cherokee/config_node.h\" 1\n// # 37 \"mime.h\" 2\n\n\n\ntypedef struct cherokee_mime cherokee_mime_t;\n\n\n\nret_t cherokee_mime_new (cherokee_mime_t **mime);\nret_t cherokee_mime_free (cherokee_mime_t *mime);\nret_t cherokee_mime_configure (cherokee_mime_t *mime, cherokee_config_node_t *config);\n\nret_t cherokee_mime_get_by_suffix (cherokee_mime_t *mime, char *suffix, cherokee_mime_entry_t **entry);\n\n\n// # 55 \"server-protected.h\" 2\n// # 1 \"config_node.h\" 1\n// # 56 \"server-protected.h\" 2\n// # 1 \"version.h\" 1\n// # 57 \"server-protected.h\" 2\n// # 1 \"cryptor.h\" 1\n// # 58 \"server-protected.h\" 2\n// # 1 \"logger_writer.h\" 1\n// # 59 \"server-protected.h\" 2\n// # 1 \"collector.h\" 1\n// # 60 \"server-protected.h\" 2\n// # 1 \"post_track.h\" 1\n// # 28 \"post_track.h\"\n// # 1 \"common.h\" 1\n// # 29 \"post_track.h\" 2\n\n// # 1 \"module.h\" 1\n// # 31 \"post_track.h\" 2\n// # 1 \"avl.h\" 1\n// # 32 \"post_track.h\" 2\n// # 1 \"plugin_loader.h\" 1\n// # 33 \"post_track.h\" 2\n\n\n\ntypedef ret_t (* post_track_new_t) (void **track);\ntypedef ret_t (* post_track_configure_t) (void *track, cherokee_config_node_t *config);\ntypedef ret_t (* post_track_register_t) (void *track, cherokee_connection_t *);\ntypedef ret_t (* post_track_unregister_t) (void *track, cherokee_post_t *);\n\ntypedef struct {\n\n cherokee_module_t module;\n\n\n post_track_configure_t func_configure;\n post_track_register_t func_register;\n post_track_unregister_t func_unregister;\n\n\n pthread_mutex_t lock;\n\n\n cherokee_avl_t posts_lookup;\n cherokee_list_t posts_list;\n time_t last_purge;\n} cherokee_post_track_t;\n\n\n\nvoid cherokee_plugin_post_track_init (cherokee_plugin_loader_t *loader);\n\nret_t cherokee_generic_post_track_new (cherokee_post_track_t **track);\nret_t cherokee_generic_post_track_configure (cherokee_post_track_t *track,\n          cherokee_config_node_t *config);\n\nret_t cherokee_generic_post_track_get (cherokee_post_track_t *track,\n          cherokee_buffer_t *progress_id,\n          const char **out_status,\n          off_t *out_size,\n          off_t *out_received);\n\n\n// # 61 \"server-protected.h\" 2\n\nstruct cherokee_server {\n\n\n time_t start_time;\n cherokee_buffer_t panic_action;\n\n\n\n cherokee_boolean_t wanna_exit;\n cherokee_boolean_t wanna_reinit;\n\n\n\n cherokee_list_t vservers;\n\n\n\n cherokee_thread_t *main_thread;\n cint_t thread_num;\n cherokee_list_t thread_list;\n cint_t thread_policy;\n\n\n\n cherokee_plugin_loader_t loader;\n cherokee_avl_t encoders;\n\n\n\n cherokee_regex_table_t *regexs;\n cherokee_nonce_table_t *nonces;\n\n\n\n int nonces_cleanup_lapse;\n time_t nonces_cleanup_next;\n\n int flcache_lapse;\n time_t flcache_next;\n\n\n\n cherokee_logger_writer_t *error_writer;\n\n cherokee_list_t logger_writers;\n cherokee_avl_t logger_writers_index;\n\n int log_flush_lapse;\n time_t log_flush_next;\n\n\n\n cherokee_cryptor_t *cryptor;\n cherokee_post_track_t *post_track;\n cherokee_collector_t *collector;\n\n\n\n int fdlimit_custom;\n int fdlimit_available;\n cherokee_poll_type_t fdpoll_method;\n\n\n\n cuint_t conns_max;\n cint_t conns_reuse_max;\n\n cherokee_boolean_t keepalive;\n cuint_t keepalive_max;\n cherokee_boolean_t chunked_encoding;\n\n\n\n cherokee_boolean_t ipv6;\n int fdwatch_msecs;\n int listen_queue;\n cherokee_boolean_t tls_enabled;\n\n cherokee_list_t listeners;\n pthread_mutex_t listeners_mutex;\n\n\n\n cherokee_server_token_t server_token;\n\n\n\n uid_t user;\n uid_t user_orig;\n gid_t group;\n gid_t group_orig;\n\n cherokee_buffer_t chroot;\n cherokee_boolean_t chrooted;\n\n\n\n cherokee_iocache_t *iocache;\n cherokee_boolean_t iocache_enabled;\n\n\n\n cherokee_mime_t *mime;\n cherokee_icons_t *icons;\n cherokee_avl_t sources;\n\n\n\n int timeout;\n cherokee_buffer_t timeout_header;\n\n struct {\n  off_t min;\n  off_t max;\n } sendfile;\n\n\n\n cherokee_config_node_t config;\n\n\n\n cherokee_buffer_t pidfile;\n cherokee_buffer_t themes_dir;\n};\n\n\nret_t cherokee_server_del_connection (cherokee_server_t *srv, char *begin);\nret_t cherokee_server_get_vserver (cherokee_server_t *srv, cherokee_buffer_t *name, cherokee_connection_t *conn, cherokee_virtual_server_t **vsrv);\nret_t cherokee_server_get_next_bind (cherokee_server_t *srv, cherokee_bind_t *bind, cherokee_bind_t **next);\nret_t cherokee_server_get_log_writer (cherokee_server_t *srv, cherokee_config_node_t *config, cherokee_logger_writer_t **writer);\n// # 35 \"handler_file.c\" 2\n// # 1 \"dtm.h\" 1\n// # 32 \"dtm.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"dtm.h\" 2\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 34 \"dtm.h\" 2\n\n\n\n\n\n\n\n\n\n\n\n\nconst\nchar *cherokee_dtm_wday_name (int idxName);\nconst\nchar *cherokee_dtm_month_name(int idxName);\n\nret_t cherokee_dtm_str2time (char *cstr, int cstr_len, time_t *time);\nsize_t cherokee_dtm_gmttm2str (char *bufstr, size_t bufsize, struct tm *ptm);\n\n\n// # 36 \"handler_file.c\" 2\n// # 1 \"mime.h\" 1\n// # 37 \"handler_file.c\" 2\n// # 1 \"header.h\" 1\n// # 38 \"handler_file.c\" 2\n\n// # 1 \"handler_file.h\" 1\n// # 35 \"handler_file.h\"\n// # 1 \"buffer.h\" 1\n// # 36 \"handler_file.h\" 2\n// # 1 \"handler.h\" 1\n// # 37 \"handler_file.h\" 2\n// # 1 \"connection.h\" 1\n// # 38 \"handler_file.h\" 2\n// # 1 \"mime.h\" 1\n// # 39 \"handler_file.h\" 2\n// # 1 \"plugin_loader.h\" 1\n// # 40 \"handler_file.h\" 2\n\n\n\ntypedef struct {\n cherokee_handler_props_t base;\n cherokee_boolean_t use_cache;\n} cherokee_handler_file_props_t;\n\n\ntypedef struct {\n cherokee_handler_t handler;\n\n int fd;\n off_t offset;\n struct stat *info;\n cherokee_mime_entry_t *mime;\n struct stat cache_info;\n\n cherokee_boolean_t using_sendfile;\n cherokee_boolean_t not_modified;\n} cherokee_handler_file_t;\n// # 70 \"handler_file.h\"\nvoid cherokee_plugin_file_init (cherokee_plugin_loader_t *loader);\n\nret_t cherokee_handler_file_new (cherokee_handler_t **hdl, cherokee_connection_t *cnt, cherokee_module_props_t *props);\nret_t cherokee_handler_file_configure (cherokee_config_node_t *conf, cherokee_server_t *srv, cherokee_module_props_t **_props);\nret_t cherokee_handler_file_props_free (cherokee_handler_file_props_t *props);\n\n\n\nret_t cherokee_handler_file_init (cherokee_handler_file_t *hdl);\nret_t cherokee_handler_file_free (cherokee_handler_file_t *hdl);\nvoid cherokee_handler_file_get_name (cherokee_handler_file_t *hdl, const char **name);\nret_t cherokee_handler_file_step (cherokee_handler_file_t *hdl, cherokee_buffer_t *buffer);\nret_t cherokee_handler_file_add_headers (cherokee_handler_file_t *hdl, cherokee_buffer_t *buffer);\n\n\n\nret_t cherokee_handler_file_custom_init (cherokee_handler_file_t *hdl, cherokee_buffer_t *local_file);\nret_t cherokee_handler_file_seek (cherokee_handler_file_t *hdl, off_t start);\n// # 40 \"handler_file.c\" 2\n// # 1 \"connection.h\" 1\n// # 41 \"handler_file.c\" 2\n\n// # 1 \"module.h\" 1\n// # 43 \"handler_file.c\" 2\n// # 1 \"iocache.h\" 1\n// # 44 \"handler_file.c\" 2\n// # 1 \"util.h\" 1\n// # 32 \"util.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"util.h\" 2\n// # 1 \"../cherokee/avl.h\" 1\n// # 34 \"util.h\" 2\n// # 1 \"../cherokee/trace.h\" 1\n// # 32 \"../cherokee/trace.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/trace.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"../cherokee/trace.h\" 2\n\n\n\nret_t cherokee_trace_init (void);\nret_t cherokee_trace_set_modules (cherokee_buffer_t *modules);\nvoid cherokee_trace_do_trace (const char *entry, const char *file, int line, const char *func, const char *fmt, ...);\nret_t cherokee_trace_get_trace (cherokee_buffer_t **buf_ref);\nint cherokee_trace_is_tracing (void);\n\n\n// # 35 \"util.h\" 2\n// # 1 \"../cherokee/plugin_loader.h\" 1\n// # 36 \"util.h\" 2\n// # 46 \"util.h\"\n// # 1 \"/usr/include/pwd.h\" 1 3 4\n// # 28 \"/usr/include/pwd.h\" 3 4\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 34 \"/usr/include/pwd.h\" 2 3 4\n// # 50 \"/usr/include/pwd.h\" 3 4\nstruct passwd\n{\n  char *pw_name;\n  char *pw_passwd;\n  __uid_t pw_uid;\n  __gid_t pw_gid;\n  char *pw_gecos;\n  char *pw_dir;\n  char *pw_shell;\n};\n// # 73 \"/usr/include/pwd.h\" 3 4\nextern void setpwent (void);\n\n\n\n\n\nextern void endpwent (void);\n\n\n\n\n\nextern struct passwd *getpwent (void);\n// # 95 \"/usr/include/pwd.h\" 3 4\nextern struct passwd *fgetpwent (FILE *__stream);\n\n\n\n\n\n\n\nextern int putpwent (__const struct passwd *__restrict __p,\n       FILE *__restrict __f);\n\n\n\n\n\n\nextern struct passwd *getpwuid (__uid_t __uid);\n\n\n\n\n\nextern struct passwd *getpwnam (__const char *__name);\n// # 140 \"/usr/include/pwd.h\" 3 4\nextern int getpwent_r (struct passwd *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct passwd **__restrict __result);\n\n\nextern int getpwuid_r (__uid_t __uid,\n         struct passwd *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct passwd **__restrict __result);\n\nextern int getpwnam_r (__const char *__restrict __name,\n         struct passwd *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct passwd **__restrict __result);\n// # 164 \"/usr/include/pwd.h\" 3 4\nextern int fgetpwent_r (FILE *__restrict __stream,\n   struct passwd *__restrict __resultbuf,\n   char *__restrict __buffer, size_t __buflen,\n   struct passwd **__restrict __result);\n// # 181 \"/usr/include/pwd.h\" 3 4\nextern int getpw (__uid_t __uid, char *__buffer);\n\n\n\n// # 47 \"util.h\" 2\n\n\n\n// # 1 \"/usr/include/grp.h\" 1 3 4\n// # 28 \"/usr/include/grp.h\" 3 4\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 34 \"/usr/include/grp.h\" 2 3 4\n// # 43 \"/usr/include/grp.h\" 3 4\nstruct group\n  {\n    char *gr_name;\n    char *gr_passwd;\n    __gid_t gr_gid;\n    char **gr_mem;\n  };\n// # 63 \"/usr/include/grp.h\" 3 4\nextern void setgrent (void);\n\n\n\n\n\nextern void endgrent (void);\n\n\n\n\n\nextern struct group *getgrent (void);\n// # 85 \"/usr/include/grp.h\" 3 4\nextern struct group *fgetgrent (FILE *__stream);\n// # 95 \"/usr/include/grp.h\" 3 4\nextern int putgrent (__const struct group *__restrict __p,\n       FILE *__restrict __f);\n\n\n\n\n\n\nextern struct group *getgrgid (__gid_t __gid);\n\n\n\n\n\nextern struct group *getgrnam (__const char *__name);\n// # 133 \"/usr/include/grp.h\" 3 4\nextern int getgrent_r (struct group *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct group **__restrict __result);\n\n\n\n\n\n\nextern int getgrgid_r (__gid_t __gid, struct group *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct group **__restrict __result);\n\n\n\n\n\nextern int getgrnam_r (__const char *__restrict __name,\n         struct group *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct group **__restrict __result);\n// # 163 \"/usr/include/grp.h\" 3 4\nextern int fgetgrent_r (FILE *__restrict __stream,\n   struct group *__restrict __resultbuf,\n   char *__restrict __buffer, size_t __buflen,\n   struct group **__restrict __result);\n// # 175 \"/usr/include/grp.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 176 \"/usr/include/grp.h\" 2 3 4\n\n\nextern int setgroups (size_t __n, __const __gid_t *__groups) __attribute__ ((__nothrow__));\n// # 188 \"/usr/include/grp.h\" 3 4\nextern int getgrouplist (__const char *__user, __gid_t __group,\n    __gid_t *__groups, int *__ngroups);\n// # 199 \"/usr/include/grp.h\" 3 4\nextern int initgroups (__const char *__user, __gid_t __group);\n\n\n\n\n// # 51 \"util.h\" 2\n// # 62 \"util.h\"\n// # 1 \"/usr/include/dirent.h\" 1 3 4\n// # 28 \"/usr/include/dirent.h\" 3 4\n\n// # 62 \"/usr/include/dirent.h\" 3 4\n// # 1 \"/usr/include/bits/dirent.h\" 1 3 4\n// # 23 \"/usr/include/bits/dirent.h\" 3 4\nstruct dirent\n  {\n\n    __ino_t d_ino;\n    __off_t d_off;\n\n\n\n\n    unsigned short int d_reclen;\n    unsigned char d_type;\n    char d_name[256];\n  };\n\n\nstruct dirent64\n  {\n    __ino64_t d_ino;\n    __off64_t d_off;\n    unsigned short int d_reclen;\n    unsigned char d_type;\n    char d_name[256];\n  };\n// # 63 \"/usr/include/dirent.h\" 2 3 4\n// # 98 \"/usr/include/dirent.h\" 3 4\nenum\n  {\n    DT_UNKNOWN = 0,\n\n    DT_FIFO = 1,\n\n    DT_CHR = 2,\n\n    DT_DIR = 4,\n\n    DT_BLK = 6,\n\n    DT_REG = 8,\n\n    DT_LNK = 10,\n\n    DT_SOCK = 12,\n\n    DT_WHT = 14\n\n  };\n// # 128 \"/usr/include/dirent.h\" 3 4\ntypedef struct __dirstream DIR;\n\n\n\n\n\n\nextern DIR *opendir (__const char *__name) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern DIR *fdopendir (int __fd);\n\n\n\n\n\n\n\nextern int closedir (DIR *__dirp) __attribute__ ((__nonnull__ (1)));\n// # 163 \"/usr/include/dirent.h\" 3 4\nextern struct dirent *readdir (DIR *__dirp) __attribute__ ((__nonnull__ (1)));\n// # 174 \"/usr/include/dirent.h\" 3 4\nextern struct dirent64 *readdir64 (DIR *__dirp) __attribute__ ((__nonnull__ (1)));\n// # 184 \"/usr/include/dirent.h\" 3 4\nextern int readdir_r (DIR *__restrict __dirp,\n        struct dirent *__restrict __entry,\n        struct dirent **__restrict __result)\n     __attribute__ ((__nonnull__ (1, 2, 3)));\n// # 201 \"/usr/include/dirent.h\" 3 4\nextern int readdir64_r (DIR *__restrict __dirp,\n   struct dirent64 *__restrict __entry,\n   struct dirent64 **__restrict __result)\n     __attribute__ ((__nonnull__ (1, 2, 3)));\n\n\n\n\nextern void rewinddir (DIR *__dirp) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern void seekdir (DIR *__dirp, long int __pos) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern long int telldir (DIR *__dirp) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int dirfd (DIR *__dirp) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 243 \"/usr/include/dirent.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 244 \"/usr/include/dirent.h\" 2 3 4\n\n\n\n\n\n\nextern int scandir (__const char *__restrict __dir,\n      struct dirent ***__restrict __namelist,\n      int (*__selector) (__const struct dirent *),\n      int (*__cmp) (__const void *, __const void *))\n     __attribute__ ((__nonnull__ (1, 2)));\n// # 271 \"/usr/include/dirent.h\" 3 4\nextern int scandir64 (__const char *__restrict __dir,\n        struct dirent64 ***__restrict __namelist,\n        int (*__selector) (__const struct dirent64 *),\n        int (*__cmp) (__const void *, __const void *))\n     __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\nextern int alphasort (__const void *__e1, __const void *__e2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n// # 293 \"/usr/include/dirent.h\" 3 4\nextern int alphasort64 (__const void *__e1, __const void *__e2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern int versionsort (__const void *__e1, __const void *__e2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n// # 314 \"/usr/include/dirent.h\" 3 4\nextern int versionsort64 (__const void *__e1, __const void *__e2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n// # 324 \"/usr/include/dirent.h\" 3 4\nextern __ssize_t getdirentries (int __fd, char *__restrict __buf,\n    size_t __nbytes,\n    __off_t *__restrict __basep)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n// # 341 \"/usr/include/dirent.h\" 3 4\nextern __ssize_t getdirentries64 (int __fd, char *__restrict __buf,\n      size_t __nbytes,\n      __off64_t *__restrict __basep)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n\n\n\n\n\n// # 63 \"util.h\" 2\n// # 1 \"/usr/include/errno.h\" 1 3 4\n// # 64 \"util.h\" 2\n\n// # 1 \"../cherokee/buffer.h\" 1\n// # 66 \"util.h\" 2\n// # 1 \"../cherokee/iocache.h\" 1\n// # 67 \"util.h\" 2\n\n\n\n// # 87 \"util.h\"\nchar *strnstr (const char *s, const char *find, size_t slen);\n\n\n\n\n\nsize_t strlcat (char *dst, const char *src, size_t siz);\n\n\n\n\n\nchar *strncasestr (const char *s, const char *find, size_t slen);\nchar *strncasestrn (const char *s, size_t slen, const char *find, size_t findlen);\n\n\n\n\n\nextern const char hex2dec_tab[256];\nextern const char *month[13];\n\n\n\nchar *cherokee_strerror_r (int err, char *buf, size_t bufsize);\nint cherokee_isbigendian (void);\nchar *cherokee_min_str (char *s1, char *s2);\nchar *cherokee_max_str (char *s1, char *s2);\nint cherokee_estimate_va_length (const char *format, va_list ap);\nlong cherokee_eval_formated_time (cherokee_buffer_t *buf);\nret_t cherokee_fix_dirpath (cherokee_buffer_t *buf);\n\nret_t cherokee_find_header_end (cherokee_buffer_t *buf,\n         char **end,\n         cuint_t *sep_len);\n\nret_t cherokee_find_header_end_cstr (char *c_str,\n           cint_t c_len,\n           char **end,\n           cuint_t *sep_len);\n\nret_t cherokee_parse_host (cherokee_buffer_t *buf,\n         cherokee_buffer_t *host,\n         cuint_t *port);\n\nint cherokee_string_is_ipv6 (cherokee_buffer_t *ip);\nret_t cherokee_copy_local_address (void *socket, cherokee_buffer_t *buf);\n\nret_t cherokee_buf_add_bogonow (cherokee_buffer_t *buf,\n         cherokee_boolean_t update);\n\nret_t cherokee_buf_add_backtrace (cherokee_buffer_t *buf, int n_skip, const char *new_line, const char *line_pre);\n\nret_t cherokee_find_exec_in_path (const char *bin_name,\n         cherokee_buffer_t *fullpath);\n\nret_t cherokee_atoi (const char *str, int *ret_value);\nret_t cherokee_atob (const char *str, cherokee_boolean_t *ret_value);\n\n\n\nstruct tm *cherokee_gmtime (const time_t *timep, struct tm *result);\nstruct tm *cherokee_localtime (const time_t *timep, struct tm *result);\nlong *cherokee_get_timezone_ref (void);\n\n\n\nDIR * cherokee_opendir (const char *dirname);\nint cherokee_readdir (DIR *dirstream, struct dirent *entry, struct dirent **result);\nint cherokee_closedir (DIR *dirstream);\n\nint cherokee_stat (const char *restrict path, struct stat *buf);\nint cherokee_lstat (const char *restrict path, struct stat *buf);\nint cherokee_fstat (int filedes, struct stat *buf);\nint cherokee_access (const char *pathname, int mode);\nint cherokee_open (const char *path, int oflag, int mode);\nint cherokee_unlink (const char *path);\nint cherokee_pipe (int fildes[2]);\n\nret_t cherokee_gethostbyname (cherokee_buffer_t *hostname, struct addrinfo **addr);\n\nret_t cherokee_gethostname (cherokee_buffer_t *buf);\nret_t cherokee_syslog (int priority, cherokee_buffer_t *buf);\n\nret_t cherokee_getpwnam (const char *name, struct passwd *pwbuf, char *buf, size_t buflen);\nret_t cherokee_getpwuid (uid_t uid, struct passwd *pwbuf, char *buf, size_t buflen);\nret_t cherokee_getpwnam_uid (const char *name, struct passwd *pwbuf, char *buf, size_t buflen);\nret_t cherokee_getgrnam (const char *name, struct group *pwbuf, char *buf, size_t buflen);\nret_t cherokee_getgrgid (gid_t gid, struct group *pwbuf, char *buf, size_t buflen);\nret_t cherokee_getgrnam_gid (const char *name, struct group *pwbuf, char *buf, size_t buflen);\n\nret_t cherokee_mkstemp (cherokee_buffer_t *buffer, int *fd);\nret_t cherokee_mkdtemp (char *template);\n\nret_t cherokee_mkdir (const char *path, int mode);\nret_t cherokee_mkdir_p (cherokee_buffer_t *path, int mode);\nret_t cherokee_mkdir_p_perm (cherokee_buffer_t *dir_path, int create_mode, int ensure_perm);\nret_t cherokee_rm_rf (cherokee_buffer_t *path, uid_t uid);\n\nvoid cherokee_random_seed (void);\nlong cherokee_random (void);\n\nret_t cherokee_ntop (int family, struct sockaddr *addr, char *dst, size_t cnt);\nret_t cherokee_wait_pid (int pid, int *retcode);\nret_t cherokee_reset_signals (void);\n\nret_t cherokee_io_stat (cherokee_iocache_t *iocache,\n         cherokee_buffer_t *path,\n         cherokee_boolean_t useit,\n         struct stat *info_space,\n         cherokee_iocache_entry_t **io_entry,\n         struct stat **info);\n\n\n\nret_t cherokee_fd_set_nonblocking (int fd, cherokee_boolean_t enable);\nret_t cherokee_fd_set_nodelay (int fd, cherokee_boolean_t enable);\nret_t cherokee_fd_set_closexec (int fd);\nret_t cherokee_fd_set_reuseaddr (int fd);\nret_t cherokee_fd_close (int fd);\n\n\n\nret_t cherokee_sys_fdlimit_get (cuint_t *limit);\nret_t cherokee_sys_fdlimit_set (cuint_t limit);\nret_t cherokee_get_shell (const char **shell, const char **binary);\nret_t cherokee_tmp_dir_copy (cherokee_buffer_t *buffer);\n\n\n\nret_t cherokee_iovec_skip_sent (struct iovec orig[], uint16_t orig_len,\n    struct iovec dest[], uint16_t *dest_len,\n    size_t sent);\nret_t cherokee_iovec_was_sent (struct iovec orig[], uint16_t orig_len, size_t sent);\n\n\n\nvoid cherokee_trace (const char *entry, const char *file, int line, const char *func, const char *fmt, ...);\n\n\n\nret_t cherokee_path_short (cherokee_buffer_t *path);\nret_t cherokee_path_arg_eval (cherokee_buffer_t *path);\n\n\n\nret_t cherokee_split_pathinfo (cherokee_buffer_t *path,\n       cuint_t init_pos,\n       int allow_dirs,\n       char **pathinfo,\n       int *pathinfo_len);\n\nret_t cherokee_split_arguments (cherokee_buffer_t *request,\n       int init_pos,\n       char **arguments,\n       int *arguments_len);\n\nret_t cherokee_parse_query_string (cherokee_buffer_t *qstring,\n       cherokee_avl_t *arguments);\n\nchar *cherokee_header_get_next_line (char *line);\nret_t cherokee_header_del_entry (cherokee_buffer_t *header,\n          const char *header_name,\n          int header_name_len);\n\n\n\n// # 45 \"handler_file.c\" 2\n// # 1 \"handler_dirlist.h\" 1\n// # 33 \"handler_dirlist.h\"\n// # 1 \"list.h\" 1\n// # 34 \"handler_dirlist.h\" 2\n// # 1 \"buffer.h\" 1\n// # 35 \"handler_dirlist.h\" 2\n// # 1 \"handler.h\" 1\n// # 36 \"handler_dirlist.h\" 2\n// # 1 \"plugin_loader.h\" 1\n// # 37 \"handler_dirlist.h\" 2\n\n\ntypedef enum {\n Name_Down,\n Name_Up,\n Size_Down,\n Size_Up,\n Date_Down,\n Date_Up\n} cherokee_dirlist_sort_t;\n\ntypedef enum {\n dirlist_phase_add_header,\n dirlist_phase_add_parent_dir,\n dirlist_phase_add_entries,\n dirlist_phase_add_footer,\n dirlist_phase_finished\n} cherokee_dirlist_phase_t;\n\n\ntypedef struct {\n cherokee_handler_props_t props;\n\n cherokee_list_t notice_files;\n cherokee_list_t hidden_files;\n\n\n\n  cherokee_boolean_t show_size;\n cherokee_boolean_t show_date;\n cherokee_boolean_t show_user;\n cherokee_boolean_t show_group;\n cherokee_boolean_t show_icons;\n cherokee_boolean_t show_symlinks;\n cherokee_boolean_t show_hidden;\n cherokee_boolean_t show_backup;\n\n\n\n cherokee_buffer_t header;\n cherokee_buffer_t footer;\n cherokee_buffer_t entry;\n cherokee_buffer_t css;\n\n\n\n cherokee_boolean_t redir_symlinks;\n cherokee_buffer_t icon_web_dir;\n} cherokee_handler_dirlist_props_t;\n\n\ntypedef struct {\n cherokee_handler_t handler;\n\n\n\n cherokee_list_t dirs;\n cherokee_list_t files;\n\n\n\n cherokee_dirlist_sort_t sort;\n cherokee_dirlist_phase_t phase;\n\n\n\n cuint_t longest_filename;\n cherokee_list_t *dir_ptr;\n cherokee_list_t *file_ptr;\n  cherokee_buffer_t header;\n\n cherokee_buffer_t public_dir;\n} cherokee_handler_dirlist_t;\n// # 118 \"handler_dirlist.h\"\nvoid cherokee_plugin_dirlist_init (cherokee_plugin_loader_t *loader);\n\nret_t cherokee_handler_dirlist_new (cherokee_handler_t **hdl, void *cnt, cherokee_module_props_t *properties);\nret_t cherokee_handler_dirlist_configure (cherokee_config_node_t *conf, cherokee_server_t *srv, cherokee_module_props_t **_props);\nret_t cherokee_handler_dirlist_props_free (cherokee_handler_dirlist_props_t *props);\n\n\n\nret_t cherokee_handler_dirlist_init (cherokee_handler_dirlist_t *dhdl);\nret_t cherokee_handler_dirlist_free (cherokee_handler_dirlist_t *dhdl);\nvoid cherokee_handler_dirlist_get_name (cherokee_handler_dirlist_t *dhdl, char **name);\nret_t cherokee_handler_dirlist_step (cherokee_handler_dirlist_t *dhdl, cherokee_buffer_t *buffer);\nret_t cherokee_handler_dirlist_add_headers (cherokee_handler_dirlist_t *dhdl, cherokee_buffer_t *buffer);\n// # 46 \"handler_file.c\" 2\n// # 1 \"error_log.h\" 1\n// # 47 \"handler_file.c\" 2\n\n\n\n\n\n\nvoid cherokee_plugin_file_init (cherokee_plugin_loader_t *loader) { ((void)(loader)); } \nret_t cherokee_handler_file_configure ( cherokee_config_node_t *, cherokee_server_t *, cherokee_module_props_t **); \ncherokee_plugin_info_handler_t cherokee_file_info = { { cherokee_handler, (void *)cherokee_handler_file_new, (void *)cherokee_handler_file_configure, \"file\" }, (http_get | http_head | http_options) };\n\n\n\n\nret_t\ncherokee_handler_file_props_free (cherokee_handler_file_props_t *props)\n{\n return cherokee_handler_props_free_base (((cherokee_handler_props_t *)(props)));\n}\n\n\nret_t\ncherokee_handler_file_configure (cherokee_config_node_t *conf,\n     cherokee_server_t *srv,\n     cherokee_module_props_t **_props)\n{\n ret_t ret;\n cherokee_list_t *i;\n cherokee_handler_file_props_t *props;\n\n ((void)(srv));\n\n if (*_props == ((void *)0)) {\n  cherokee_handler_file_props_t * n = (cherokee_handler_file_props_t *) malloc (sizeof(cherokee_handler_file_props_t)); do { if (!(n != ((void *)0))) { do { fprintf(stderr, \"%s:%d - \"\"assertion `%s' failed\\n\", \"handler_file.c\", 77,\"n != NULL\"); fflush(stderr); } while(0); return (ret_nomem); } } while(0);\n\n  cherokee_handler_props_init_base (((cherokee_handler_props_t *)(n)),\n        ((module_func_props_free_t)(cherokee_handler_file_props_free)));\n\n  n->use_cache = true;\n  *_props = ((cherokee_module_props_t *)(n));\n }\n\n props = ((cherokee_handler_file_props_t *)(*_props));\n\n for (i = (&conf->child)->next; i != (&conf->child); i = i->next) {\n  cherokee_config_node_t *subconf = ((cherokee_config_node_t *)(i));\n\n  if ((cherokee_buffer_case_cmp ((&subconf->key), (char *)((\"iocache\")), sizeof((\"iocache\"))-1) == 0)) {\n   ret = cherokee_atob (subconf->val.buf, &props->use_cache);\n   if (ret != ret_ok) return ret;\n  }\n }\n\n return ret_ok;\n}\n\n\nret_t\ncherokee_handler_file_new (cherokee_handler_t **hdl,\n      cherokee_connection_t *cnt,\n      cherokee_module_props_t *props)\n{\n cherokee_handler_file_t * n = (cherokee_handler_file_t *) malloc (sizeof(cherokee_handler_file_t)); do { if (!(n != ((void *)0))) { do { fprintf(stderr, \"%s:%d - \"\"assertion `%s' failed\\n\", \"handler_file.c\", 106,\"n != NULL\"); fflush(stderr); } while(0); return (ret_nomem); } } while(0);\n\n do { } while(0);;\n\n\n\n cherokee_handler_init_base (((cherokee_handler_t *)(n)), cnt, ((cherokee_handler_props_t *)(props)), ((cherokee_plugin_info_handler_t *)(&cherokee_file_info)));\n\n ((cherokee_module_t *) (n))->free = (module_func_free_t) cherokee_handler_file_free;\n ((cherokee_module_t *) (n))->init = (handler_func_init_t) cherokee_handler_file_init;\n ((cherokee_handler_t *)(n))->step = (handler_func_step_t) cherokee_handler_file_step;\n ((cherokee_handler_t *)(n))->add_headers = (handler_func_add_headers_t) cherokee_handler_file_add_headers;\n\n\n\n ((cherokee_handler_t *)(n))->support = hsupport_range;\n\n\n\n n->fd = -1;\n n->offset = 0;\n n->mime = ((void *)0);\n n->info = ((void *)0);\n n->using_sendfile = false;\n n->not_modified = false;\n\n\n\n *hdl = ((cherokee_handler_t *)(n));\n return ret_ok;\n}\n\n\nret_t\ncherokee_handler_file_free (cherokee_handler_file_t *fhdl)\n{\n if (fhdl->fd != -1) {\n  cherokee_fd_close (fhdl->fd);\n  fhdl->fd = -1;\n }\n\n return ret_ok;\n}\n\n\nstatic ret_t\ncheck_cached (cherokee_handler_file_t *fhdl)\n{\n ret_t ret;\n char *header;\n cuint_t header_len;\n cherokee_boolean_t has_modified_since = false;\n cherokee_boolean_t has_etag = false;\n cherokee_boolean_t not_modified_ms = false;\n cherokee_boolean_t not_modified_etag = false;\n cherokee_connection_t *conn = (((cherokee_connection_t *)(((cherokee_handler_t *)(fhdl))->connection)));\n cherokee_thread_t *thread = ((((cherokee_thread_t *)(((cherokee_connection_t *)((((cherokee_connection_t *)(((cherokee_handler_t *)(fhdl))->connection)))))->thread))));\n cherokee_buffer_t *etag_local = (&((cherokee_thread_t *)(thread))->tmp_buf1);\n\n cherokee_buffer_clean (etag_local);\n\n\n\n ret = cherokee_header_get_known (&conn->header, header_if_modified_since, &header, &header_len);\n if (ret == ret_ok) {\n  char tmp;\n  time_t req_time = 0;\n  char *end = header + header_len;\n\n  has_modified_since = true;\n\n\n\n  tmp = *end;\n  *end = '\\0';\n\n\n\n  ret = cherokee_dtm_str2time (header, header_len, &req_time);\n  if ((ret == ret_error)) {\n   cherokee_error_log (cherokee_err_warning, \"handler_file.c\", 186, 38, header);\n\n  } else if ((ret == ret_ok)) {\n\n\n   if (fhdl->info->st_mtim.tv_sec <= req_time) {\n    not_modified_ms = true;\n   }\n  }\n\n\n\n  *end = tmp;\n }\n\n\n\n if (conn->header.version < http_version_11) {\n  fhdl->not_modified = not_modified_ms;\n  return ret_ok;\n }\n\n\n\n ret = cherokee_header_get_known (&conn->header, header_if_none_match, &header, &header_len);\n if (ret == ret_ok) {\n\n\n  if ((((cherokee_buffer_t *)(etag_local))->len == 0)) {\n   cherokee_buffer_add_char (etag_local, '\"');\n   cherokee_buffer_add_ullong16 (etag_local, (cullong_t) fhdl->info->st_mtim.tv_sec);\n   cherokee_buffer_add (etag_local, \"=\", (sizeof(\"=\") - 1));\n   cherokee_buffer_add_ullong16 (etag_local, (cullong_t) fhdl->info->st_size);\n   cherokee_buffer_add_char (etag_local, '\"');\n  }\n\n\n\n  if ((header_len == etag_local->len) &&\n      (strncmp (header, etag_local->buf, etag_local->len) == 0))\n  {\n   not_modified_etag = true;\n  }\n\n  has_etag = true;\n }\n\n\n\n ret = cherokee_header_get_known (&conn->header, header_if_range, &header, &header_len);\n if (ret == ret_ok) {\n  char tmp;\n  char *end = header + header_len;\n\n\n\n  tmp = *end;\n  *end = '\\0';\n\n\n\n  if (strchr (header, '=')) {\n\n\n   if ((((cherokee_buffer_t *)(etag_local))->len == 0)) {\n    cherokee_buffer_add_char (etag_local, '\"');\n    cherokee_buffer_add_ullong16 (etag_local, (cullong_t) fhdl->info->st_mtim.tv_sec);\n    cherokee_buffer_add (etag_local, \"=\", (sizeof(\"=\") - 1));\n    cherokee_buffer_add_ullong16 (etag_local, (cullong_t) fhdl->info->st_size);\n    cherokee_buffer_add_char (etag_local, '\"');\n   }\n\n\n\n   if ((header_len == etag_local->len) &&\n       (strncmp (header, etag_local->buf, etag_local->len) == 0))\n   {\n    not_modified_etag = true;\n   }\n\n   has_etag = true;\n  }\n\n\n\n  else {\n   time_t req_time = 0;\n\n   ret = cherokee_dtm_str2time (header, header_len, &req_time);\n   if ((ret == ret_error)) {\n    cherokee_error_log (cherokee_err_warning, \"handler_file.c\", 276, 38, header);\n\n   } else if ((ret == ret_ok)) {\n// # 288 \"handler_file.c\"\n    if (fhdl->info->st_mtim.tv_sec > req_time) {\n     conn->error_code = http_ok;\n\n     conn->range_start = -1;\n     conn->range_end = -1;\n    }\n   }\n  }\n\n\n\n  *end = tmp;\n }\n\n\n\n\n if (has_modified_since && has_etag) {\n  if (not_modified_ms && not_modified_etag) {\n   fhdl->not_modified = true;\n   return ret_ok;\n  }\n } else {\n  if (not_modified_ms || not_modified_etag) {\n   fhdl->not_modified = true;\n   return ret_ok;\n  }\n }\n\n return ret_ok;\n}\n\n\nstatic ret_t\nopen_local_directory (cherokee_handler_file_t *fhdl, cherokee_buffer_t *local_file)\n{\n cherokee_connection_t *conn = (((cherokee_connection_t *)(((cherokee_handler_t *)(fhdl))->connection)));\n\n\n\n if (fhdl->fd > 0)\n  return ret_ok;\n\n\n\n fhdl->fd = cherokee_open (local_file->buf, 00 | 0, 0);\n if (fhdl->fd > 0) {\n  cherokee_fd_set_closexec (fhdl->fd);\n  return ret_ok;\n }\n\n\n\n switch ((*__errno_location ())) {\n case 13:\n  conn->error_code = http_access_denied;\n  break;\n case 2:\n  conn->error_code = http_not_found;\n  break;\n default:\n  conn->error_code = http_internal_error;\n }\n return ret_error;\n}\n\n\nstatic ret_t\nstat_local_directory (cherokee_handler_file_t *fhdl,\n        cherokee_buffer_t *local_file,\n        cherokee_iocache_entry_t **io_entry,\n        struct stat **info)\n{\n int re;\n ret_t ret;\n cherokee_connection_t *conn = (((cherokee_connection_t *)(((cherokee_handler_t *)(fhdl))->connection)));\n cherokee_server_t *srv = (((cherokee_server_t *)(((cherokee_connection_t *)(conn))->server)));\n\n\n\n if ((srv->iocache != ((void *)0)) &&\n     ((((cherokee_handler_file_props_t *)(((cherokee_module_t *) (fhdl))->props)))->use_cache))\n {\n  ret = cherokee_iocache_autoget (srv->iocache, local_file, iocache_stat, io_entry);\n  do { } while(0);\n\n  switch (ret) {\n  case ret_ok:\n  case ret_ok_and_sent:\n   *info = &(*io_entry)->state;\n   return (*io_entry)->state_ret;\n\n  case ret_no_sys:\n   goto without;\n\n  case ret_deny:\n   conn->error_code = http_access_denied;\n   break;\n  case ret_not_found:\n   conn->error_code = http_not_found;\n   break;\n  default:\n   do { fprintf (stderr, \"file %s:%d (%s): ret code unknown ret=%d\\n\", \"handler_file.c\", 390, __func__, ret); fflush (stderr); } while (0);\n   conn->error_code = http_internal_error;\n  }\n\n  return ret_error;\n }\n\n\n\nwithout:\n re = cherokee_stat (local_file->buf, &fhdl->cache_info);\n do { } while(0);\n\n if (re >= 0) {\n  *info = &fhdl->cache_info;\n  return ret_ok;\n }\n\n switch ((*__errno_location ())) {\n case 2:\n  conn->error_code = http_not_found;\n  break;\n case 13:\n  conn->error_code = http_access_denied;\n  break;\n default:\n  conn->error_code = http_internal_error;\n }\n\n return ret_error;\n}\n\n\nret_t\ncherokee_handler_file_custom_init (cherokee_handler_file_t *fhdl,\n       cherokee_buffer_t *local_file)\n{\n ret_t ret;\n char *ext;\n cherokee_iocache_entry_t *io_entry = ((void *)0);\n cherokee_boolean_t use_io = false;\n cherokee_connection_t *conn = (((cherokee_connection_t *)(((cherokee_handler_t *)(fhdl))->connection)));\n cherokee_server_t *srv = ((((cherokee_server_t *)(((cherokee_connection_t *)((((cherokee_connection_t *)(((cherokee_handler_t *)(fhdl))->connection)))))->server))));\n\n\n\n ret = stat_local_directory (fhdl, local_file, &io_entry, &fhdl->info);\n switch (ret) {\n case ret_ok:\n  break;\n case ret_not_found:\n  conn->error_code = http_not_found;\n  ret = ret_error;\n  goto out;\n default:\n  goto out;\n }\n\n\n\n if (((((fhdl->info->st_mode)) & 0170000) == (0040000))) {\n  conn->error_code = http_access_denied;\n  ret = ret_error;\n  goto out;\n }\n\n\n\n if (srv->mime != ((void *)0)) {\n  ext = (local_file->buf + local_file->len) - 1;\n  while (ext > local_file->buf) {\n   if (*ext == '.') {\n    ret = cherokee_mime_get_by_suffix (srv->mime, ext+1, &fhdl->mime);\n    if (ret == ret_ok)\n     break;\n   }\n   ext--;\n  }\n }\n\n\n\n ret = check_cached (fhdl);\n if ((ret != ret_ok) || (fhdl->not_modified)) {\n\n\n  conn->range_start = 0;\n  conn->range_end = 0;\n  goto out;\n }\n\n\n\n use_io = ((srv->iocache != ((void *)0)) &&\n    (conn->encoder_new_func == ((void *)0)) &&\n    ((((cherokee_handler_file_props_t *)(((cherokee_module_t *) (fhdl))->props)))->use_cache) &&\n    (conn->socket.is_tls == non_TLS) &&\n    (conn->flcache.mode == flcache_mode_undef) &&\n    (((conn->header.method) != http_head)) &&\n    (fhdl->info->st_size <= srv->iocache->max_file_size) &&\n    (fhdl->info->st_size >= srv->iocache->min_file_size));\n\n do { } while(0);\n\n if (use_io) {\n  ret = cherokee_iocache_autoget_fd (srv->iocache,\n         local_file,\n         iocache_mmap,\n         &fhdl->fd,\n         &io_entry);\n\n  do { } while(0);\n\n\n  switch (ret) {\n  case ret_ok:\n  case ret_ok_and_sent:\n   break;\n  case ret_no_sys:\n   use_io = false;\n   break;\n  case ret_deny:\n   conn->error_code = http_access_denied;\n   ret = ret_error;\n   goto out;\n  case ret_not_found:\n   conn->error_code = http_not_found;\n   ret = ret_error;\n   goto out;\n  default:\n   goto out;\n  }\n\n\n\n  if (io_entry->mmaped == ((void *)0))\n   use_io = false;\n }\n\n\n\n if (! use_io) {\n  ret = open_local_directory (fhdl, local_file);\n  if (ret != ret_ok) {\n   goto out;\n  }\n }\n\n\n\n if (((((fhdl->info->st_mode)) & 0170000) == (0040000))) {\n  conn->error_code = http_access_denied;\n  ret = ret_error;\n  goto out;\n }\n\n\n\n if ((conn->range_start >= fhdl->info->st_size))\n {\n\n\n\n  conn->range_start = 0;\n  conn->range_end = fhdl->info->st_size;\n  conn->error_code = http_range_not_satisfiable;\n\n  ret = ret_error;\n  goto out;\n }\n\n if (((conn->range_end >= fhdl->info->st_size)))\n {\n\n\n\n  conn->range_end = -1;\n }\n\n\n\n if ((conn->range_start > -1) ||\n     (conn->range_end > -1))\n {\n  conn->error_code = http_partial_content;\n }\n\n\n\n if (conn->range_end == -1) {\n  if (conn->range_start == -1) {\n   conn->range_start = 0;\n  }\n  conn->range_end = fhdl->info->st_size - 1;\n } else {\n  if (conn->range_start == -1) {\n   conn->range_start = fhdl->info->st_size - conn->range_end;\n   conn->range_end = fhdl->info->st_size - 1;\n  }\n }\n\n\n\n if ((use_io) &&\n     (io_entry != ((void *)0)) &&\n     (io_entry->mmaped != ((void *)0)))\n {\n  off_t len;\n\n\n\n  conn->io_entry_ref = io_entry;\n\n  len = conn->range_end - conn->range_start + 1;\n\n  conn->mmaped = ((char *)io_entry->mmaped) + conn->range_start;\n  conn->mmaped_len = len;\n } else {\n\n\n  cherokee_iocache_entry_unref (&io_entry);\n\n\n\n  if ((conn->range_start != 0) && (conn->mmaped == ((void *)0))) {\n   fhdl->offset = conn->range_start;\n   lseek (fhdl->fd, fhdl->offset, 0);\n  }\n }\n\n\n\n\n fhdl->using_sendfile = ((conn->mmaped == ((void *)0)) &&\n    (conn->encoder == ((void *)0)) &&\n    (conn->encoder_new_func == ((void *)0)) &&\n    (conn->socket.is_tls == non_TLS) &&\n    (conn->flcache.mode == flcache_mode_undef) &&\n    (fhdl->info->st_size >= srv->sendfile.min) &&\n    (fhdl->info->st_size < srv->sendfile.max));\n\n if (fhdl->using_sendfile) {\n  cherokee_connection_set_cork (conn, true);\n  conn->options |= ((1 << 2));\n }\n\n\n return ret_ok;\n\nout:\n cherokee_iocache_entry_unref (&io_entry);\n return ret;\n}\n\n\nret_t\ncherokee_handler_file_init (cherokee_handler_file_t *fhdl)\n{\n ret_t ret;\n  cherokee_connection_t *conn = (((cherokee_connection_t *)(((cherokee_handler_t *)(fhdl))->connection)));\n\n\n\n if (((((cherokee_connection_t *)(((cherokee_handler_t *)(fhdl))->connection)))->header.method == http_options)) {\n  return ret_ok;\n }\n\n\n\n cherokee_buffer_add_buffer (&conn->local_directory, &conn->request);\n ret = cherokee_handler_file_custom_init (fhdl, &conn->local_directory);\n\n\n\n cherokee_buffer_drop_ending (&conn->local_directory, conn->request.len);\n return ret;\n}\n\n\nret_t\ncherokee_handler_file_add_headers (cherokee_handler_file_t *fhdl,\n       cherokee_buffer_t *buffer)\n{\n ret_t ret;\n char bufstr[(29 + 1)];\n struct tm modified_tm;\n size_t szlen = 0;\n off_t content_length = 0;\n cherokee_connection_t *conn = (((cherokee_connection_t *)(((cherokee_handler_t *)(fhdl))->connection)));\n\n\n\n if (((((cherokee_connection_t *)(((cherokee_handler_t *)(fhdl))->connection)))->header.method == http_options)) {\n  cherokee_buffer_add (buffer, \"Content-Length: 0\"\"\\r\\n\", (sizeof(\"Content-Length: 0\"\"\\r\\n\") - 1));\n  cherokee_handler_add_header_options (((cherokee_handler_t *)(fhdl)), buffer);\n  return ret_ok;\n }\n\n\n\n memset (&modified_tm, 0, sizeof(struct tm));\n\n\n\n if (conn->header.version >= http_version_11) {\n\n\n  cherokee_buffer_add (buffer, \"ETag: \\\"\", (sizeof(\"ETag: \\\"\") - 1));\n  cherokee_buffer_add_ullong16(buffer, (cullong_t) fhdl->info->st_mtim.tv_sec);\n  cherokee_buffer_add (buffer, \"=\", (sizeof(\"=\") - 1));\n  cherokee_buffer_add_ullong16(buffer, (cullong_t) fhdl->info->st_size);\n  cherokee_buffer_add (buffer, \"\\\"\" \"\\r\\n\", (sizeof(\"\\\"\" \"\\r\\n\") - 1));\n }\n\n\n\n cherokee_gmtime (&fhdl->info->st_mtim.tv_sec, &modified_tm);\n\n szlen = cherokee_dtm_gmttm2str(bufstr, (29 + 1), &modified_tm);\n\n cherokee_buffer_add (buffer, \"Last-Modified: \", (sizeof(\"Last-Modified: \") - 1));\n cherokee_buffer_add (buffer, bufstr, szlen);\n cherokee_buffer_add (buffer, \"\\r\\n\", (sizeof(\"\\r\\n\") - 1));\n\n\n\n\n if (fhdl->mime != ((void *)0)) {\n  cuint_t maxage;\n  cherokee_buffer_t *mime = ((void *)0);\n\n  cherokee_mime_entry_get_type (fhdl->mime, &mime);\n  cherokee_buffer_add (buffer, \"Content-Type: \", (sizeof(\"Content-Type: \") - 1));\n  cherokee_buffer_add_buffer (buffer, mime);\n  cherokee_buffer_add (buffer, \"\\r\\n\", (sizeof(\"\\r\\n\") - 1));\n\n  ret = cherokee_mime_entry_get_maxage (fhdl->mime, &maxage);\n  if (ret == ret_ok) {\n\n\n\n   if (conn->expiration == cherokee_expiration_none) {\n    conn->expiration = cherokee_expiration_time;\n    conn->expiration_time = maxage;\n   }\n  }\n }\n\n\n\n if (fhdl->not_modified) {\n\n\n  ((cherokee_handler_t *)(fhdl))->support |= hsupport_error;\n\n  conn->error_code = http_not_modified;\n  return ret_ok;\n }\n\n\n if (cherokee_connection_should_include_length(conn)) {\n\n  ((cherokee_handler_t *)(fhdl))->support |= hsupport_length;\n\n\n\n  content_length = conn->range_end - conn->range_start + 1;\n  if ((content_length < 0)) {\n   content_length = 0;\n  }\n\n  if (conn->error_code == http_partial_content) {\n\n\n\n\n   cherokee_buffer_add (buffer, \"Content-Range: bytes \", (sizeof(\"Content-Range: bytes \") - 1));\n   cherokee_buffer_add_ullong10(buffer, (cullong_t)conn->range_start);\n   cherokee_buffer_add (buffer, \"-\", (sizeof(\"-\") - 1));\n   cherokee_buffer_add_ullong10(buffer, (cullong_t)(conn->range_end));\n   cherokee_buffer_add (buffer, \"/\", (sizeof(\"/\") - 1));\n   cherokee_buffer_add_ullong10(buffer, (cullong_t)fhdl->info->st_size);\n   cherokee_buffer_add (buffer, \"\\r\\n\", (sizeof(\"\\r\\n\") - 1));\n  }\n\n\n\n\n  cherokee_buffer_add (buffer, \"Content-Length: \", (sizeof(\"Content-Length: \") - 1));\n  cherokee_buffer_add_ullong10(buffer, (cullong_t) content_length);\n  cherokee_buffer_add (buffer, \"\\r\\n\", (sizeof(\"\\r\\n\") - 1));\n }\n\n return ret_ok;\n}\n\n\nret_t\ncherokee_handler_file_step (cherokee_handler_file_t *fhdl, cherokee_buffer_t *buffer)\n{\n off_t total;\n size_t size;\n cherokee_connection_t *conn = (((cherokee_connection_t *)(((cherokee_handler_t *)(fhdl))->connection)));\n\n\n\n if (((((cherokee_connection_t *)(((cherokee_handler_t *)(fhdl))->connection)))->header.method == http_options)) {\n  return ret_eof;\n }\n\n\n if (fhdl->using_sendfile) {\n  ret_t ret;\n  ssize_t sent;\n  off_t to_send;\n\n  to_send = conn->range_end - fhdl->offset + 1;\n  if ((conn->limit_bps > 0) &&\n      (conn->limit_bps < to_send))\n  {\n   to_send = conn->limit_bps;\n  }\n\n  ret = cherokee_socket_sendfile (&conn->socket,\n      fhdl->fd,\n      to_send,\n      &fhdl->offset,\n      &sent);\n\n\n\n\n\n\n  if (conn->options & (1 << 2)) {\n   cherokee_connection_set_cork (conn, false);\n   conn->options &= ~((1 << 2));\n  }\n\n  if (ret == ret_no_sys) {\n   fhdl->using_sendfile = false;\n   goto exit_sendfile;\n  }\n\n  if (ret != ret_ok) {\n   return ret;\n  }\n\n\n\n\n  cherokee_connection_tx_add (conn, sent);\n\n  if (fhdl->offset >= conn->range_end) {\n   return ret_eof;\n  }\n\n  return ret_ok_and_sent;\n }\n\nexit_sendfile:\n\n\n\n size = (((16 * 1024)<(conn->range_end - fhdl->offset + 1)) ? (16 * 1024) : (conn->range_end - fhdl->offset + 1));\n\n\n\n cherokee_buffer_ensure_size (buffer, size + 1);\n\n\n\n do {\n  total = read (fhdl->fd, buffer->buf, size);\n } while ((total == -1) && ((*__errno_location ()) == 4));\n\n switch (total) {\n case 0:\n  return ret_eof;\n case -1:\n  return ret_error;\n default:\n  buffer->len = total;\n  buffer->buf[buffer->len] = '\\0';\n  fhdl->offset += total;\n }\n\n\n\n if (fhdl->offset >= conn->range_end) {\n  return ret_eof_have_data;\n }\n\n return ret_ok;\n}\n\nret_t\ncherokee_handler_file_seek (cherokee_handler_file_t *hdl,\n       off_t start)\n{\n cherokee_connection_t *conn = (((cherokee_connection_t *)(((cherokee_handler_t *)(hdl))->connection)));\n\n conn->range_start = start;\n hdl->offset = start;\n\n return ret_ok;\n}\n",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/C_tests/test2012_19.c": "// # 1 \"init.c\"\n// # 1 \"<built-in>\"\n// # 1 \"<command-line>\"\n// # 1 \"init.c\"\n// # 25 \"init.c\"\n// # 1 \"common-internal.h\" 1\n// # 28 \"common-internal.h\"\n// # 1 \"../config.h\" 1\n// # 29 \"common-internal.h\" 2\n// # 1 \"../constants.h\" 1\n// # 30 \"common-internal.h\" 2\n\n\n\n\n\n\n// # 1 \"common.h\" 1\n// # 33 \"common.h\"\n// # 1 \"../cherokee/macros.h\" 1\n// # 33 \"../cherokee/macros.h\"\n// # 1 \"/usr/include/stdio.h\" 1 3 4\n// # 28 \"/usr/include/stdio.h\" 3 4\n// # 1 \"/usr/include/features.h\" 1 3 4\n// # 329 \"/usr/include/features.h\" 3 4\n// # 1 \"/usr/include/sys/cdefs.h\" 1 3 4\n// # 313 \"/usr/include/sys/cdefs.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 314 \"/usr/include/sys/cdefs.h\" 2 3 4\n// # 330 \"/usr/include/features.h\" 2 3 4\n// # 352 \"/usr/include/features.h\" 3 4\n// # 1 \"/usr/include/gnu/stubs.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 5 \"/usr/include/gnu/stubs.h\" 2 3 4\n\n\n\n\n// # 1 \"/usr/include/gnu/stubs-64.h\" 1 3 4\n// # 10 \"/usr/include/gnu/stubs.h\" 2 3 4\n// # 353 \"/usr/include/features.h\" 2 3 4\n// # 29 \"/usr/include/stdio.h\" 2 3 4\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 214 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 3 4\ntypedef long unsigned int size_t;\n// # 35 \"/usr/include/stdio.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/types.h\" 1 3 4\n// # 28 \"/usr/include/bits/types.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 29 \"/usr/include/bits/types.h\" 2 3 4\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 32 \"/usr/include/bits/types.h\" 2 3 4\n\n\ntypedef unsigned char __u_char;\ntypedef unsigned short int __u_short;\ntypedef unsigned int __u_int;\ntypedef unsigned long int __u_long;\n\n\ntypedef signed char __int8_t;\ntypedef unsigned char __uint8_t;\ntypedef signed short int __int16_t;\ntypedef unsigned short int __uint16_t;\ntypedef signed int __int32_t;\ntypedef unsigned int __uint32_t;\n\ntypedef signed long int __int64_t;\ntypedef unsigned long int __uint64_t;\n\n\n\n\n\n\n\ntypedef long int __quad_t;\ntypedef unsigned long int __u_quad_t;\n// # 134 \"/usr/include/bits/types.h\" 3 4\n// # 1 \"/usr/include/bits/typesizes.h\" 1 3 4\n// # 135 \"/usr/include/bits/types.h\" 2 3 4\n\n\ntypedef unsigned long int __dev_t;\ntypedef unsigned int __uid_t;\ntypedef unsigned int __gid_t;\ntypedef unsigned long int __ino_t;\ntypedef unsigned long int __ino64_t;\ntypedef unsigned int __mode_t;\ntypedef unsigned long int __nlink_t;\ntypedef long int __off_t;\ntypedef long int __off64_t;\ntypedef int __pid_t;\ntypedef struct { int __val[2]; } __fsid_t;\ntypedef long int __clock_t;\ntypedef unsigned long int __rlim_t;\ntypedef unsigned long int __rlim64_t;\ntypedef unsigned int __id_t;\ntypedef long int __time_t;\ntypedef unsigned int __useconds_t;\ntypedef long int __suseconds_t;\n\ntypedef int __daddr_t;\ntypedef long int __swblk_t;\ntypedef int __key_t;\n\n\ntypedef int __clockid_t;\n\n\ntypedef void * __timer_t;\n\n\ntypedef long int __blksize_t;\n\n\n\n\ntypedef long int __blkcnt_t;\ntypedef long int __blkcnt64_t;\n\n\ntypedef unsigned long int __fsblkcnt_t;\ntypedef unsigned long int __fsblkcnt64_t;\n\n\ntypedef unsigned long int __fsfilcnt_t;\ntypedef unsigned long int __fsfilcnt64_t;\n\ntypedef long int __ssize_t;\n\n\n\ntypedef __off64_t __loff_t;\ntypedef __quad_t *__qaddr_t;\ntypedef char *__caddr_t;\n\n\ntypedef long int __intptr_t;\n\n\ntypedef unsigned int __socklen_t;\n// # 37 \"/usr/include/stdio.h\" 2 3 4\n\n\n\n\n\n\n\n\n\ntypedef struct _IO_FILE FILE;\n\n\n\n\n\n// # 62 \"/usr/include/stdio.h\" 3 4\ntypedef struct _IO_FILE __FILE;\n// # 72 \"/usr/include/stdio.h\" 3 4\n// # 1 \"/usr/include/libio.h\" 1 3 4\n// # 32 \"/usr/include/libio.h\" 3 4\n// # 1 \"/usr/include/_G_config.h\" 1 3 4\n// # 14 \"/usr/include/_G_config.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 326 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 3 4\ntypedef int wchar_t;\n// # 355 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 3 4\ntypedef unsigned int wint_t;\n// # 15 \"/usr/include/_G_config.h\" 2 3 4\n// # 24 \"/usr/include/_G_config.h\" 3 4\n// # 1 \"/usr/include/wchar.h\" 1 3 4\n// # 48 \"/usr/include/wchar.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 49 \"/usr/include/wchar.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/wchar.h\" 1 3 4\n// # 51 \"/usr/include/wchar.h\" 2 3 4\n// # 76 \"/usr/include/wchar.h\" 3 4\ntypedef struct\n{\n  int __count;\n  union\n  {\n    wint_t __wch;\n    char __wchb[4];\n  } __value;\n} __mbstate_t;\n// # 25 \"/usr/include/_G_config.h\" 2 3 4\n\ntypedef struct\n{\n  __off_t __pos;\n  __mbstate_t __state;\n} _G_fpos_t;\ntypedef struct\n{\n  __off64_t __pos;\n  __mbstate_t __state;\n} _G_fpos64_t;\n// # 44 \"/usr/include/_G_config.h\" 3 4\n// # 1 \"/usr/include/gconv.h\" 1 3 4\n// # 28 \"/usr/include/gconv.h\" 3 4\n// # 1 \"/usr/include/wchar.h\" 1 3 4\n// # 48 \"/usr/include/wchar.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 49 \"/usr/include/wchar.h\" 2 3 4\n// # 29 \"/usr/include/gconv.h\" 2 3 4\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 32 \"/usr/include/gconv.h\" 2 3 4\n\n\n\n\n\nenum\n{\n  __GCONV_OK = 0,\n  __GCONV_NOCONV,\n  __GCONV_NODB,\n  __GCONV_NOMEM,\n\n  __GCONV_EMPTY_INPUT,\n  __GCONV_FULL_OUTPUT,\n  __GCONV_ILLEGAL_INPUT,\n  __GCONV_INCOMPLETE_INPUT,\n\n  __GCONV_ILLEGAL_DESCRIPTOR,\n  __GCONV_INTERNAL_ERROR\n};\n\n\n\nenum\n{\n  __GCONV_IS_LAST = 0x0001,\n  __GCONV_IGNORE_ERRORS = 0x0002\n};\n\n\n\nstruct __gconv_step;\nstruct __gconv_step_data;\nstruct __gconv_loaded_object;\nstruct __gconv_trans_data;\n\n\n\ntypedef int (*__gconv_fct) (struct __gconv_step *, struct __gconv_step_data *,\n       __const unsigned char **, __const unsigned char *,\n       unsigned char **, size_t *, int, int);\n\n\ntypedef wint_t (*__gconv_btowc_fct) (struct __gconv_step *, unsigned char);\n\n\ntypedef int (*__gconv_init_fct) (struct __gconv_step *);\ntypedef void (*__gconv_end_fct) (struct __gconv_step *);\n\n\n\ntypedef int (*__gconv_trans_fct) (struct __gconv_step *,\n      struct __gconv_step_data *, void *,\n      __const unsigned char *,\n      __const unsigned char **,\n      __const unsigned char *, unsigned char **,\n      size_t *);\n\n\ntypedef int (*__gconv_trans_context_fct) (void *, __const unsigned char *,\n       __const unsigned char *,\n       unsigned char *, unsigned char *);\n\n\ntypedef int (*__gconv_trans_query_fct) (__const char *, __const char ***,\n     size_t *);\n\n\ntypedef int (*__gconv_trans_init_fct) (void **, const char *);\ntypedef void (*__gconv_trans_end_fct) (void *);\n\nstruct __gconv_trans_data\n{\n\n  __gconv_trans_fct __trans_fct;\n  __gconv_trans_context_fct __trans_context_fct;\n  __gconv_trans_end_fct __trans_end_fct;\n  void *__data;\n  struct __gconv_trans_data *__next;\n};\n\n\n\nstruct __gconv_step\n{\n  struct __gconv_loaded_object *__shlib_handle;\n  __const char *__modname;\n\n  int __counter;\n\n  char *__from_name;\n  char *__to_name;\n\n  __gconv_fct __fct;\n  __gconv_btowc_fct __btowc_fct;\n  __gconv_init_fct __init_fct;\n  __gconv_end_fct __end_fct;\n\n\n\n  int __min_needed_from;\n  int __max_needed_from;\n  int __min_needed_to;\n  int __max_needed_to;\n\n\n  int __stateful;\n\n  void *__data;\n};\n\n\n\nstruct __gconv_step_data\n{\n  unsigned char *__outbuf;\n  unsigned char *__outbufend;\n\n\n\n  int __flags;\n\n\n\n  int __invocation_counter;\n\n\n\n  int __internal_use;\n\n  __mbstate_t *__statep;\n  __mbstate_t __state;\n\n\n\n  struct __gconv_trans_data *__trans;\n};\n\n\n\ntypedef struct __gconv_info\n{\n  size_t __nsteps;\n  struct __gconv_step *__steps;\n  __extension__ struct __gconv_step_data __data [];\n} *__gconv_t;\n// # 45 \"/usr/include/_G_config.h\" 2 3 4\ntypedef union\n{\n  struct __gconv_info __cd;\n  struct\n  {\n    struct __gconv_info __cd;\n    struct __gconv_step_data __data;\n  } __combined;\n} _G_iconv_t;\n\ntypedef int _G_int16_t __attribute__ ((__mode__ (__HI__)));\ntypedef int _G_int32_t __attribute__ ((__mode__ (__SI__)));\ntypedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));\ntypedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));\n// # 33 \"/usr/include/libio.h\" 2 3 4\n// # 53 \"/usr/include/libio.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stdarg.h\" 1 3 4\n// # 43 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stdarg.h\" 3 4\ntypedef __builtin_va_list __gnuc_va_list;\n// # 54 \"/usr/include/libio.h\" 2 3 4\n// # 167 \"/usr/include/libio.h\" 3 4\nstruct _IO_jump_t; struct _IO_FILE;\n// # 177 \"/usr/include/libio.h\" 3 4\ntypedef void _IO_lock_t;\n\n\n\n\n\nstruct _IO_marker {\n  struct _IO_marker *_next;\n  struct _IO_FILE *_sbuf;\n\n\n\n  int _pos;\n// # 200 \"/usr/include/libio.h\" 3 4\n};\n\n\nenum __codecvt_result\n{\n  __codecvt_ok,\n  __codecvt_partial,\n  __codecvt_error,\n  __codecvt_noconv\n};\n// # 268 \"/usr/include/libio.h\" 3 4\nstruct _IO_FILE {\n  int _flags;\n\n\n\n\n  char* _IO_read_ptr;\n  char* _IO_read_end;\n  char* _IO_read_base;\n  char* _IO_write_base;\n  char* _IO_write_ptr;\n  char* _IO_write_end;\n  char* _IO_buf_base;\n  char* _IO_buf_end;\n\n  char *_IO_save_base;\n  char *_IO_backup_base;\n  char *_IO_save_end;\n\n  struct _IO_marker *_markers;\n\n  struct _IO_FILE *_chain;\n\n  int _fileno;\n\n\n\n  int _flags2;\n\n  __off_t _old_offset;\n\n\n\n  unsigned short _cur_column;\n  signed char _vtable_offset;\n  char _shortbuf[1];\n\n\n\n  _IO_lock_t *_lock;\n// # 316 \"/usr/include/libio.h\" 3 4\n  __off64_t _offset;\n// # 325 \"/usr/include/libio.h\" 3 4\n  void *__pad1;\n  void *__pad2;\n  void *__pad3;\n  void *__pad4;\n  size_t __pad5;\n\n  int _mode;\n\n  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];\n\n};\n\n\ntypedef struct _IO_FILE _IO_FILE;\n\n\nstruct _IO_FILE_plus;\n\nextern struct _IO_FILE_plus _IO_2_1_stdin_;\nextern struct _IO_FILE_plus _IO_2_1_stdout_;\nextern struct _IO_FILE_plus _IO_2_1_stderr_;\n// # 361 \"/usr/include/libio.h\" 3 4\ntypedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);\n\n\n\n\n\n\n\ntypedef __ssize_t __io_write_fn (void *__cookie, __const char *__buf,\n     size_t __n);\n\n\n\n\n\n\n\ntypedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);\n\n\ntypedef int __io_close_fn (void *__cookie);\n\n\n\n\ntypedef __io_read_fn cookie_read_function_t;\ntypedef __io_write_fn cookie_write_function_t;\ntypedef __io_seek_fn cookie_seek_function_t;\ntypedef __io_close_fn cookie_close_function_t;\n\n\ntypedef struct\n{\n  __io_read_fn *read;\n  __io_write_fn *write;\n  __io_seek_fn *seek;\n  __io_close_fn *close;\n} _IO_cookie_io_functions_t;\ntypedef _IO_cookie_io_functions_t cookie_io_functions_t;\n\nstruct _IO_cookie_file;\n\n\nextern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,\n        void *__cookie, _IO_cookie_io_functions_t __fns);\n\n\n\n\n\n\n\nextern int __underflow (_IO_FILE *);\nextern int __uflow (_IO_FILE *);\nextern int __overflow (_IO_FILE *, int);\nextern wint_t __wunderflow (_IO_FILE *);\nextern wint_t __wuflow (_IO_FILE *);\nextern wint_t __woverflow (_IO_FILE *, wint_t);\n// # 451 \"/usr/include/libio.h\" 3 4\nextern int _IO_getc (_IO_FILE *__fp);\nextern int _IO_putc (int __c, _IO_FILE *__fp);\nextern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__));\nextern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__));\n\nextern int _IO_peekc_locked (_IO_FILE *__fp);\n\n\n\n\n\nextern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__));\nextern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__));\nextern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__));\n// # 481 \"/usr/include/libio.h\" 3 4\nextern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,\n   __gnuc_va_list, int *__restrict);\nextern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,\n    __gnuc_va_list);\nextern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);\nextern size_t _IO_sgetn (_IO_FILE *, void *, size_t);\n\nextern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);\nextern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);\n\nextern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__));\n// # 73 \"/usr/include/stdio.h\" 2 3 4\n\n\n\n\ntypedef __gnuc_va_list va_list;\n// # 86 \"/usr/include/stdio.h\" 3 4\n\n\ntypedef _G_fpos_t fpos_t;\n\n\n\n\n\ntypedef _G_fpos64_t fpos64_t;\n// # 138 \"/usr/include/stdio.h\" 3 4\n// # 1 \"/usr/include/bits/stdio_lim.h\" 1 3 4\n// # 139 \"/usr/include/stdio.h\" 2 3 4\n\n\n\nextern struct _IO_FILE *stdin;\nextern struct _IO_FILE *stdout;\nextern struct _IO_FILE *stderr;\n\n\n\n\n\n\n\n\n\nextern int remove (__const char *__filename) __attribute__ ((__nothrow__));\n\nextern int rename (__const char *__old, __const char *__new) __attribute__ ((__nothrow__));\n\n\n\n\nextern int renameat (int __oldfd, __const char *__old, int __newfd,\n       __const char *__new) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern FILE *tmpfile (void);\n// # 181 \"/usr/include/stdio.h\" 3 4\nextern FILE *tmpfile64 (void);\n\n\n\nextern char *tmpnam (char *__s) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__));\n// # 203 \"/usr/include/stdio.h\" 3 4\nextern char *tempnam (__const char *__dir, __const char *__pfx)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__));\n\n\n\n\n\n\n\n\nextern int fclose (FILE *__stream);\n\n\n\n\nextern int fflush (FILE *__stream);\n\n// # 228 \"/usr/include/stdio.h\" 3 4\nextern int fflush_unlocked (FILE *__stream);\n// # 238 \"/usr/include/stdio.h\" 3 4\nextern int fcloseall (void);\n\n\n\n\n\n\n\n\n\nextern FILE *fopen (__const char *__restrict __filename,\n      __const char *__restrict __modes);\n\n\n\n\nextern FILE *freopen (__const char *__restrict __filename,\n        __const char *__restrict __modes,\n        FILE *__restrict __stream);\n// # 269 \"/usr/include/stdio.h\" 3 4\n\n\nextern FILE *fopen64 (__const char *__restrict __filename,\n        __const char *__restrict __modes);\nextern FILE *freopen64 (__const char *__restrict __filename,\n   __const char *__restrict __modes,\n   FILE *__restrict __stream);\n\n\n\n\nextern FILE *fdopen (int __fd, __const char *__modes) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern FILE *fopencookie (void *__restrict __magic_cookie,\n     __const char *__restrict __modes,\n     _IO_cookie_io_functions_t __io_funcs) __attribute__ ((__nothrow__));\n\n\nextern FILE *fmemopen (void *__s, size_t __len, __const char *__modes) __attribute__ ((__nothrow__));\n\n\n\n\nextern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__));\n\n\n\nextern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,\n      int __modes, size_t __n) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,\n         size_t __size) __attribute__ ((__nothrow__));\n\n\nextern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern int fprintf (FILE *__restrict __stream,\n      __const char *__restrict __format, ...);\n\n\n\n\nextern int printf (__const char *__restrict __format, ...);\n\nextern int sprintf (char *__restrict __s,\n      __const char *__restrict __format, ...) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int vfprintf (FILE *__restrict __s, __const char *__restrict __format,\n       __gnuc_va_list __arg);\n\n\n\n\nextern int vprintf (__const char *__restrict __format, __gnuc_va_list __arg);\n\nextern int vsprintf (char *__restrict __s, __const char *__restrict __format,\n       __gnuc_va_list __arg) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int snprintf (char *__restrict __s, size_t __maxlen,\n       __const char *__restrict __format, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));\n\nextern int vsnprintf (char *__restrict __s, size_t __maxlen,\n        __const char *__restrict __format, __gnuc_va_list __arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));\n\n\n\n\n\n\nextern int vasprintf (char **__restrict __ptr, __const char *__restrict __f,\n        __gnuc_va_list __arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0)));\nextern int __asprintf (char **__restrict __ptr,\n         __const char *__restrict __fmt, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));\nextern int asprintf (char **__restrict __ptr,\n       __const char *__restrict __fmt, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));\n\n\n\n\n\n\n\nextern int vdprintf (int __fd, __const char *__restrict __fmt,\n       __gnuc_va_list __arg)\n     __attribute__ ((__format__ (__printf__, 2, 0)));\nextern int dprintf (int __fd, __const char *__restrict __fmt, ...)\n     __attribute__ ((__format__ (__printf__, 2, 3)));\n\n\n\n\n\n\n\n\nextern int fscanf (FILE *__restrict __stream,\n     __const char *__restrict __format, ...) ;\n\n\n\n\nextern int scanf (__const char *__restrict __format, ...) ;\n\nextern int sscanf (__const char *__restrict __s,\n     __const char *__restrict __format, ...) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern int vfscanf (FILE *__restrict __s, __const char *__restrict __format,\n      __gnuc_va_list __arg)\n     __attribute__ ((__format__ (__scanf__, 2, 0))) ;\n\n\n\n\n\nextern int vscanf (__const char *__restrict __format, __gnuc_va_list __arg)\n     __attribute__ ((__format__ (__scanf__, 1, 0))) ;\n\n\nextern int vsscanf (__const char *__restrict __s,\n      __const char *__restrict __format, __gnuc_va_list __arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__scanf__, 2, 0)));\n\n\n\n\n\n\n\n\n\nextern int fgetc (FILE *__stream);\nextern int getc (FILE *__stream);\n\n\n\n\n\nextern int getchar (void);\n\n// # 460 \"/usr/include/stdio.h\" 3 4\nextern int getc_unlocked (FILE *__stream);\nextern int getchar_unlocked (void);\n// # 471 \"/usr/include/stdio.h\" 3 4\nextern int fgetc_unlocked (FILE *__stream);\n\n\n\n\n\n\n\n\n\n\n\nextern int fputc (int __c, FILE *__stream);\nextern int putc (int __c, FILE *__stream);\n\n\n\n\n\nextern int putchar (int __c);\n\n// # 504 \"/usr/include/stdio.h\" 3 4\nextern int fputc_unlocked (int __c, FILE *__stream);\n\n\n\n\n\n\n\nextern int putc_unlocked (int __c, FILE *__stream);\nextern int putchar_unlocked (int __c);\n\n\n\n\n\n\nextern int getw (FILE *__stream);\n\n\nextern int putw (int __w, FILE *__stream);\n\n\n\n\n\n\n\n\nextern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)\n     ;\n\n\n\n\n\n\nextern char *gets (char *__s) ;\n\n// # 550 \"/usr/include/stdio.h\" 3 4\nextern char *fgets_unlocked (char *__restrict __s, int __n,\n        FILE *__restrict __stream) ;\n// # 566 \"/usr/include/stdio.h\" 3 4\nextern __ssize_t __getdelim (char **__restrict __lineptr,\n          size_t *__restrict __n, int __delimiter,\n          FILE *__restrict __stream) ;\nextern __ssize_t getdelim (char **__restrict __lineptr,\n        size_t *__restrict __n, int __delimiter,\n        FILE *__restrict __stream) ;\n\n\n\n\n\n\n\nextern __ssize_t getline (char **__restrict __lineptr,\n       size_t *__restrict __n,\n       FILE *__restrict __stream) ;\n\n\n\n\n\n\n\n\nextern int fputs (__const char *__restrict __s, FILE *__restrict __stream);\n\n\n\n\n\nextern int puts (__const char *__s);\n\n\n\n\n\n\nextern int ungetc (int __c, FILE *__stream);\n\n\n\n\n\n\nextern size_t fread (void *__restrict __ptr, size_t __size,\n       size_t __n, FILE *__restrict __stream) ;\n\n\n\n\nextern size_t fwrite (__const void *__restrict __ptr, size_t __size,\n        size_t __n, FILE *__restrict __s) ;\n\n// # 627 \"/usr/include/stdio.h\" 3 4\nextern int fputs_unlocked (__const char *__restrict __s,\n      FILE *__restrict __stream);\n// # 638 \"/usr/include/stdio.h\" 3 4\nextern size_t fread_unlocked (void *__restrict __ptr, size_t __size,\n         size_t __n, FILE *__restrict __stream) ;\nextern size_t fwrite_unlocked (__const void *__restrict __ptr, size_t __size,\n          size_t __n, FILE *__restrict __stream) ;\n\n\n\n\n\n\n\n\nextern int fseek (FILE *__stream, long int __off, int __whence);\n\n\n\n\nextern long int ftell (FILE *__stream) ;\n\n\n\n\nextern void rewind (FILE *__stream);\n\n// # 674 \"/usr/include/stdio.h\" 3 4\nextern int fseeko (FILE *__stream, __off_t __off, int __whence);\n\n\n\n\nextern __off_t ftello (FILE *__stream) ;\n// # 693 \"/usr/include/stdio.h\" 3 4\n\n\n\n\n\n\nextern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);\n\n\n\n\nextern int fsetpos (FILE *__stream, __const fpos_t *__pos);\n// # 716 \"/usr/include/stdio.h\" 3 4\n\n\n\nextern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);\nextern __off64_t ftello64 (FILE *__stream) ;\nextern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);\nextern int fsetpos64 (FILE *__stream, __const fpos64_t *__pos);\n\n\n\n\nextern void clearerr (FILE *__stream) __attribute__ ((__nothrow__));\n\nextern int feof (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\nextern int ferror (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__));\nextern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;\nextern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\n\n\nextern void perror (__const char *__s);\n\n\n\n\n\n\n// # 1 \"/usr/include/bits/sys_errlist.h\" 1 3 4\n// # 27 \"/usr/include/bits/sys_errlist.h\" 3 4\nextern int sys_nerr;\nextern __const char *__const sys_errlist[];\n\n\nextern int _sys_nerr;\nextern __const char *__const _sys_errlist[];\n// # 755 \"/usr/include/stdio.h\" 2 3 4\n\n\n\n\nextern int fileno (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;\n// # 774 \"/usr/include/stdio.h\" 3 4\nextern FILE *popen (__const char *__command, __const char *__modes) ;\n\n\n\n\n\nextern int pclose (FILE *__stream);\n\n\n\n\n\nextern char *ctermid (char *__s) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *cuserid (char *__s);\n\n\n\n\nstruct obstack;\n\n\nextern int obstack_printf (struct obstack *__restrict __obstack,\n      __const char *__restrict __format, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));\nextern int obstack_vprintf (struct obstack *__restrict __obstack,\n       __const char *__restrict __format,\n       __gnuc_va_list __args)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0)));\n\n\n\n\n\n\n\nextern void flockfile (FILE *__stream) __attribute__ ((__nothrow__));\n\n\n\nextern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\n\nextern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__));\n// # 844 \"/usr/include/stdio.h\" 3 4\n\n// # 34 \"../cherokee/macros.h\" 2\n// # 1 \"/usr/include/stdlib.h\" 1 3 4\n// # 33 \"/usr/include/stdlib.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 34 \"/usr/include/stdlib.h\" 2 3 4\n\n\n\n\n\n\n\n\n// # 1 \"/usr/include/bits/waitflags.h\" 1 3 4\n// # 43 \"/usr/include/stdlib.h\" 2 3 4\n// # 1 \"/usr/include/bits/waitstatus.h\" 1 3 4\n// # 65 \"/usr/include/bits/waitstatus.h\" 3 4\n// # 1 \"/usr/include/endian.h\" 1 3 4\n// # 37 \"/usr/include/endian.h\" 3 4\n// # 1 \"/usr/include/bits/endian.h\" 1 3 4\n// # 38 \"/usr/include/endian.h\" 2 3 4\n// # 66 \"/usr/include/bits/waitstatus.h\" 2 3 4\n\nunion wait\n  {\n    int w_status;\n    struct\n      {\n\n unsigned int __w_termsig:7;\n unsigned int __w_coredump:1;\n unsigned int __w_retcode:8;\n unsigned int:16;\n\n\n\n\n\n\n\n      } __wait_terminated;\n    struct\n      {\n\n unsigned int __w_stopval:8;\n unsigned int __w_stopsig:8;\n unsigned int:16;\n\n\n\n\n\n\n      } __wait_stopped;\n  };\n// # 44 \"/usr/include/stdlib.h\" 2 3 4\n// # 68 \"/usr/include/stdlib.h\" 3 4\ntypedef union\n  {\n    union wait *__uptr;\n    int *__iptr;\n  } __WAIT_STATUS __attribute__ ((__transparent_union__));\n// # 96 \"/usr/include/stdlib.h\" 3 4\n\n\ntypedef struct\n  {\n    int quot;\n    int rem;\n  } div_t;\n\n\n\ntypedef struct\n  {\n    long int quot;\n    long int rem;\n  } ldiv_t;\n\n\n\n\n\n\n\n__extension__ typedef struct\n  {\n    long long int quot;\n    long long int rem;\n  } lldiv_t;\n\n\n// # 140 \"/usr/include/stdlib.h\" 3 4\nextern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern double atof (__const char *__nptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern int atoi (__const char *__nptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern long int atol (__const char *__nptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n__extension__ extern long long int atoll (__const char *__nptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern double strtod (__const char *__restrict __nptr,\n        char **__restrict __endptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern float strtof (__const char *__restrict __nptr,\n       char **__restrict __endptr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern long double strtold (__const char *__restrict __nptr,\n       char **__restrict __endptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern long int strtol (__const char *__restrict __nptr,\n   char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern unsigned long int strtoul (__const char *__restrict __nptr,\n      char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n__extension__\nextern long long int strtoq (__const char *__restrict __nptr,\n        char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n__extension__\nextern unsigned long long int strtouq (__const char *__restrict __nptr,\n           char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n__extension__\nextern long long int strtoll (__const char *__restrict __nptr,\n         char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n__extension__\nextern unsigned long long int strtoull (__const char *__restrict __nptr,\n     char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n// # 236 \"/usr/include/stdlib.h\" 3 4\n// # 1 \"/usr/include/xlocale.h\" 1 3 4\n// # 28 \"/usr/include/xlocale.h\" 3 4\ntypedef struct __locale_struct\n{\n\n  struct locale_data *__locales[13];\n\n\n  const unsigned short int *__ctype_b;\n  const int *__ctype_tolower;\n  const int *__ctype_toupper;\n\n\n  const char *__names[13];\n} *__locale_t;\n// # 237 \"/usr/include/stdlib.h\" 2 3 4\n\n\n\nextern long int strtol_l (__const char *__restrict __nptr,\n     char **__restrict __endptr, int __base,\n     __locale_t __loc) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;\n\nextern unsigned long int strtoul_l (__const char *__restrict __nptr,\n        char **__restrict __endptr,\n        int __base, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;\n\n__extension__\nextern long long int strtoll_l (__const char *__restrict __nptr,\n    char **__restrict __endptr, int __base,\n    __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;\n\n__extension__\nextern unsigned long long int strtoull_l (__const char *__restrict __nptr,\n       char **__restrict __endptr,\n       int __base, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;\n\nextern double strtod_l (__const char *__restrict __nptr,\n   char **__restrict __endptr, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;\n\nextern float strtof_l (__const char *__restrict __nptr,\n         char **__restrict __endptr, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;\n\nextern long double strtold_l (__const char *__restrict __nptr,\n         char **__restrict __endptr,\n         __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;\n\n\n\n\n\n\nextern double __strtod_internal (__const char *__restrict __nptr,\n     char **__restrict __endptr, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\nextern float __strtof_internal (__const char *__restrict __nptr,\n    char **__restrict __endptr, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\nextern long double __strtold_internal (__const char *__restrict __nptr,\n           char **__restrict __endptr,\n           int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern long int __strtol_internal (__const char *__restrict __nptr,\n       char **__restrict __endptr,\n       int __base, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern unsigned long int __strtoul_internal (__const char *__restrict __nptr,\n          char **__restrict __endptr,\n          int __base, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n__extension__\nextern long long int __strtoll_internal (__const char *__restrict __nptr,\n      char **__restrict __endptr,\n      int __base, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n__extension__\nextern unsigned long long int __strtoull_internal (__const char *\n         __restrict __nptr,\n         char **__restrict __endptr,\n         int __base, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 429 \"/usr/include/stdlib.h\" 3 4\nextern char *l64a (long int __n) __attribute__ ((__nothrow__)) ;\n\n\nextern long int a64l (__const char *__s)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n// # 1 \"/usr/include/sys/types.h\" 1 3 4\n// # 29 \"/usr/include/sys/types.h\" 3 4\n\n\n\n\n\n\ntypedef __u_char u_char;\ntypedef __u_short u_short;\ntypedef __u_int u_int;\ntypedef __u_long u_long;\ntypedef __quad_t quad_t;\ntypedef __u_quad_t u_quad_t;\ntypedef __fsid_t fsid_t;\n\n\n\n\ntypedef __loff_t loff_t;\n\n\n\ntypedef __ino_t ino_t;\n\n\n\n\n\n\ntypedef __ino64_t ino64_t;\n\n\n\n\ntypedef __dev_t dev_t;\n\n\n\n\ntypedef __gid_t gid_t;\n\n\n\n\ntypedef __mode_t mode_t;\n\n\n\n\ntypedef __nlink_t nlink_t;\n\n\n\n\ntypedef __uid_t uid_t;\n\n\n\n\n\ntypedef __off_t off_t;\n\n\n\n\n\n\ntypedef __off64_t off64_t;\n\n\n\n\ntypedef __pid_t pid_t;\n\n\n\n\ntypedef __id_t id_t;\n\n\n\n\ntypedef __ssize_t ssize_t;\n\n\n\n\n\ntypedef __daddr_t daddr_t;\ntypedef __caddr_t caddr_t;\n\n\n\n\n\ntypedef __key_t key_t;\n// # 133 \"/usr/include/sys/types.h\" 3 4\n// # 1 \"/usr/include/time.h\" 1 3 4\n// # 59 \"/usr/include/time.h\" 3 4\n\n\ntypedef __clock_t clock_t;\n\n\n\n// # 75 \"/usr/include/time.h\" 3 4\n\n\ntypedef __time_t time_t;\n\n\n\n// # 93 \"/usr/include/time.h\" 3 4\ntypedef __clockid_t clockid_t;\n// # 105 \"/usr/include/time.h\" 3 4\ntypedef __timer_t timer_t;\n// # 134 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\ntypedef __useconds_t useconds_t;\n\n\n\ntypedef __suseconds_t suseconds_t;\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 148 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\ntypedef unsigned long int ulong;\ntypedef unsigned short int ushort;\ntypedef unsigned int uint;\n// # 195 \"/usr/include/sys/types.h\" 3 4\ntypedef int int8_t __attribute__ ((__mode__ (__QI__)));\ntypedef int int16_t __attribute__ ((__mode__ (__HI__)));\ntypedef int int32_t __attribute__ ((__mode__ (__SI__)));\ntypedef int int64_t __attribute__ ((__mode__ (__DI__)));\n\n\ntypedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));\ntypedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));\ntypedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));\ntypedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));\n\ntypedef int register_t __attribute__ ((__mode__ (__word__)));\n// # 220 \"/usr/include/sys/types.h\" 3 4\n// # 1 \"/usr/include/sys/select.h\" 1 3 4\n// # 31 \"/usr/include/sys/select.h\" 3 4\n// # 1 \"/usr/include/bits/select.h\" 1 3 4\n// # 32 \"/usr/include/sys/select.h\" 2 3 4\n\n\n// # 1 \"/usr/include/bits/sigset.h\" 1 3 4\n// # 23 \"/usr/include/bits/sigset.h\" 3 4\ntypedef int __sig_atomic_t;\n\n\n\n\ntypedef struct\n  {\n    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];\n  } __sigset_t;\n// # 35 \"/usr/include/sys/select.h\" 2 3 4\n\n\n\ntypedef __sigset_t sigset_t;\n\n\n\n\n\n// # 1 \"/usr/include/time.h\" 1 3 4\n// # 121 \"/usr/include/time.h\" 3 4\nstruct timespec\n  {\n    __time_t tv_sec;\n    long int tv_nsec;\n  };\n// # 45 \"/usr/include/sys/select.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/time.h\" 1 3 4\n// # 69 \"/usr/include/bits/time.h\" 3 4\nstruct timeval\n  {\n    __time_t tv_sec;\n    __suseconds_t tv_usec;\n  };\n// # 47 \"/usr/include/sys/select.h\" 2 3 4\n// # 55 \"/usr/include/sys/select.h\" 3 4\ntypedef long int __fd_mask;\n// # 67 \"/usr/include/sys/select.h\" 3 4\ntypedef struct\n  {\n\n\n\n    __fd_mask fds_bits[1024 / (8 * sizeof (__fd_mask))];\n\n\n\n\n\n  } fd_set;\n\n\n\n\n\n\ntypedef __fd_mask fd_mask;\n// # 99 \"/usr/include/sys/select.h\" 3 4\n\n// # 109 \"/usr/include/sys/select.h\" 3 4\nextern int select (int __nfds, fd_set *__restrict __readfds,\n     fd_set *__restrict __writefds,\n     fd_set *__restrict __exceptfds,\n     struct timeval *__restrict __timeout);\n// # 121 \"/usr/include/sys/select.h\" 3 4\nextern int pselect (int __nfds, fd_set *__restrict __readfds,\n      fd_set *__restrict __writefds,\n      fd_set *__restrict __exceptfds,\n      const struct timespec *__restrict __timeout,\n      const __sigset_t *__restrict __sigmask);\n\n\n\n// # 221 \"/usr/include/sys/types.h\" 2 3 4\n\n\n// # 1 \"/usr/include/sys/sysmacros.h\" 1 3 4\n// # 29 \"/usr/include/sys/sysmacros.h\" 3 4\n__extension__\nextern __inline unsigned int gnu_dev_major (unsigned long long int __dev)\n     __attribute__ ((__nothrow__));\n__extension__\nextern __inline unsigned int gnu_dev_minor (unsigned long long int __dev)\n     __attribute__ ((__nothrow__));\n__extension__\nextern __inline unsigned long long int gnu_dev_makedev (unsigned int __major,\n       unsigned int __minor)\n     __attribute__ ((__nothrow__));\n\n\n__extension__ extern __inline unsigned int\n__attribute__ ((__nothrow__)) gnu_dev_major (unsigned long long int __dev)\n{\n  return ((__dev >> 8) & 0xfff) | ((unsigned int) (__dev >> 32) & ~0xfff);\n}\n\n__extension__ extern __inline unsigned int\n__attribute__ ((__nothrow__)) gnu_dev_minor (unsigned long long int __dev)\n{\n  return (__dev & 0xff) | ((unsigned int) (__dev >> 12) & ~0xff);\n}\n\n__extension__ extern __inline unsigned long long int\n__attribute__ ((__nothrow__)) gnu_dev_makedev (unsigned int __major, unsigned int __minor)\n{\n  return ((__minor & 0xff) | ((__major & 0xfff) << 8)\n   | (((unsigned long long int) (__minor & ~0xff)) << 12)\n   | (((unsigned long long int) (__major & ~0xfff)) << 32));\n}\n// # 224 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\n\ntypedef __blksize_t blksize_t;\n\n\n\n\n\n\ntypedef __blkcnt_t blkcnt_t;\n\n\n\ntypedef __fsblkcnt_t fsblkcnt_t;\n\n\n\ntypedef __fsfilcnt_t fsfilcnt_t;\n// # 262 \"/usr/include/sys/types.h\" 3 4\ntypedef __blkcnt64_t blkcnt64_t;\ntypedef __fsblkcnt64_t fsblkcnt64_t;\ntypedef __fsfilcnt64_t fsfilcnt64_t;\n\n\n\n\n\n// # 1 \"/usr/include/bits/pthreadtypes.h\" 1 3 4\n// # 23 \"/usr/include/bits/pthreadtypes.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 24 \"/usr/include/bits/pthreadtypes.h\" 2 3 4\n// # 50 \"/usr/include/bits/pthreadtypes.h\" 3 4\ntypedef unsigned long int pthread_t;\n\n\ntypedef union\n{\n  char __size[56];\n  long int __align;\n} pthread_attr_t;\n\n\n\ntypedef struct __pthread_internal_list\n{\n  struct __pthread_internal_list *__prev;\n  struct __pthread_internal_list *__next;\n} __pthread_list_t;\n// # 76 \"/usr/include/bits/pthreadtypes.h\" 3 4\ntypedef union\n{\n  struct __pthread_mutex_s\n  {\n    int __lock;\n    unsigned int __count;\n    int __owner;\n\n    unsigned int __nusers;\n\n\n\n    int __kind;\n\n    int __spins;\n    __pthread_list_t __list;\n// # 101 \"/usr/include/bits/pthreadtypes.h\" 3 4\n  } __data;\n  char __size[40];\n  long int __align;\n} pthread_mutex_t;\n\ntypedef union\n{\n  char __size[4];\n  int __align;\n} pthread_mutexattr_t;\n\n\n\n\ntypedef union\n{\n  struct\n  {\n    int __lock;\n    unsigned int __futex;\n    __extension__ unsigned long long int __total_seq;\n    __extension__ unsigned long long int __wakeup_seq;\n    __extension__ unsigned long long int __woken_seq;\n    void *__mutex;\n    unsigned int __nwaiters;\n    unsigned int __broadcast_seq;\n  } __data;\n  char __size[48];\n  __extension__ long long int __align;\n} pthread_cond_t;\n\ntypedef union\n{\n  char __size[4];\n  int __align;\n} pthread_condattr_t;\n\n\n\ntypedef unsigned int pthread_key_t;\n\n\n\ntypedef int pthread_once_t;\n\n\n\n\n\ntypedef union\n{\n\n  struct\n  {\n    int __lock;\n    unsigned int __nr_readers;\n    unsigned int __readers_wakeup;\n    unsigned int __writer_wakeup;\n    unsigned int __nr_readers_queued;\n    unsigned int __nr_writers_queued;\n    int __writer;\n    int __shared;\n    unsigned long int __pad1;\n    unsigned long int __pad2;\n\n\n    unsigned int __flags;\n  } __data;\n// # 187 \"/usr/include/bits/pthreadtypes.h\" 3 4\n  char __size[56];\n  long int __align;\n} pthread_rwlock_t;\n\ntypedef union\n{\n  char __size[8];\n  long int __align;\n} pthread_rwlockattr_t;\n\n\n\n\n\ntypedef volatile int pthread_spinlock_t;\n\n\n\n\ntypedef union\n{\n  char __size[32];\n  long int __align;\n} pthread_barrier_t;\n\ntypedef union\n{\n  char __size[4];\n  int __align;\n} pthread_barrierattr_t;\n// # 271 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\n// # 439 \"/usr/include/stdlib.h\" 2 3 4\n\n\n\n\n\n\nextern long int random (void) __attribute__ ((__nothrow__));\n\n\nextern void srandom (unsigned int __seed) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *initstate (unsigned int __seed, char *__statebuf,\n   size_t __statelen) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\nextern char *setstate (char *__statebuf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\n\nstruct random_data\n  {\n    int32_t *fptr;\n    int32_t *rptr;\n    int32_t *state;\n    int rand_type;\n    int rand_deg;\n    int rand_sep;\n    int32_t *end_ptr;\n  };\n\nextern int random_r (struct random_data *__restrict __buf,\n       int32_t *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern int srandom_r (unsigned int __seed, struct random_data *__buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\nextern int initstate_r (unsigned int __seed, char *__restrict __statebuf,\n   size_t __statelen,\n   struct random_data *__restrict __buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n\nextern int setstate_r (char *__restrict __statebuf,\n         struct random_data *__restrict __buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\nextern int rand (void) __attribute__ ((__nothrow__));\n\nextern void srand (unsigned int __seed) __attribute__ ((__nothrow__));\n\n\n\n\nextern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern double drand48 (void) __attribute__ ((__nothrow__));\nextern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern long int lrand48 (void) __attribute__ ((__nothrow__));\nextern long int nrand48 (unsigned short int __xsubi[3])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern long int mrand48 (void) __attribute__ ((__nothrow__));\nextern long int jrand48 (unsigned short int __xsubi[3])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern void srand48 (long int __seedval) __attribute__ ((__nothrow__));\nextern unsigned short int *seed48 (unsigned short int __seed16v[3])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\nextern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nstruct drand48_data\n  {\n    unsigned short int __x[3];\n    unsigned short int __old_x[3];\n    unsigned short int __c;\n    unsigned short int __init;\n    unsigned long long int __a;\n  };\n\n\nextern int drand48_r (struct drand48_data *__restrict __buffer,\n        double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern int erand48_r (unsigned short int __xsubi[3],\n        struct drand48_data *__restrict __buffer,\n        double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int lrand48_r (struct drand48_data *__restrict __buffer,\n        long int *__restrict __result)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern int nrand48_r (unsigned short int __xsubi[3],\n        struct drand48_data *__restrict __buffer,\n        long int *__restrict __result)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int mrand48_r (struct drand48_data *__restrict __buffer,\n        long int *__restrict __result)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern int jrand48_r (unsigned short int __xsubi[3],\n        struct drand48_data *__restrict __buffer,\n        long int *__restrict __result)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int srand48_r (long int __seedval, struct drand48_data *__buffer)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\nextern int seed48_r (unsigned short int __seed16v[3],\n       struct drand48_data *__buffer) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern int lcong48_r (unsigned short int __param[7],\n        struct drand48_data *__buffer)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\n\n\n\nextern void *malloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;\n\nextern void *calloc (size_t __nmemb, size_t __size)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;\n\n\n\n\n\n\n\nextern void *realloc (void *__ptr, size_t __size)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));\n\nextern void free (void *__ptr) __attribute__ ((__nothrow__));\n\n\n\n\nextern void cfree (void *__ptr) __attribute__ ((__nothrow__));\n\n\n\n// # 1 \"/usr/include/alloca.h\" 1 3 4\n// # 25 \"/usr/include/alloca.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 26 \"/usr/include/alloca.h\" 2 3 4\n\n\n\n\n\n\n\nextern void *alloca (size_t __size) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n// # 613 \"/usr/include/stdlib.h\" 2 3 4\n\n\n\n\nextern void *valloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;\n\n\n\n\nextern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\nextern void abort (void) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));\n\n\n\nextern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern void exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));\n\n\n\n\n\n\nextern void _Exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));\n\n\n\n\n\n\nextern char *getenv (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\nextern char *__secure_getenv (__const char *__name)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern int putenv (char *__string) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int setenv (__const char *__name, __const char *__value, int __replace)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\nextern int unsetenv (__const char *__name) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int clearenv (void) __attribute__ ((__nothrow__));\n// # 698 \"/usr/include/stdlib.h\" 3 4\nextern char *mktemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 709 \"/usr/include/stdlib.h\" 3 4\nextern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;\n// # 719 \"/usr/include/stdlib.h\" 3 4\nextern int mkstemp64 (char *__template) __attribute__ ((__nonnull__ (1))) ;\n// # 729 \"/usr/include/stdlib.h\" 3 4\nextern char *mkdtemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n\n\n\nextern int system (__const char *__command) ;\n\n\n\n\n\n\n\nextern char *canonicalize_file_name (__const char *__name)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 756 \"/usr/include/stdlib.h\" 3 4\nextern char *realpath (__const char *__restrict __name,\n         char *__restrict __resolved) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\ntypedef int (*__compar_fn_t) (__const void *, __const void *);\n\n\ntypedef __compar_fn_t comparison_fn_t;\n\n\n\n\n\n\nextern void *bsearch (__const void *__key, __const void *__base,\n        size_t __nmemb, size_t __size, __compar_fn_t __compar)\n     __attribute__ ((__nonnull__ (1, 2, 5))) ;\n\n\n\nextern void qsort (void *__base, size_t __nmemb, size_t __size,\n     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));\n\n\n\nextern int abs (int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\nextern long int labs (long int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\n\n\n\n__extension__ extern long long int llabs (long long int __x)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\n\n\n\n\n\n\n\nextern div_t div (int __numer, int __denom)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\nextern ldiv_t ldiv (long int __numer, long int __denom)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\n\n\n\n\n__extension__ extern lldiv_t lldiv (long long int __numer,\n        long long int __denom)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\n\n// # 821 \"/usr/include/stdlib.h\" 3 4\nextern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,\n     int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;\n\n\n\n\nextern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,\n     int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;\n\n\n\n\nextern char *gcvt (double __value, int __ndigit, char *__buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;\n\n\n\n\nextern char *qecvt (long double __value, int __ndigit,\n      int *__restrict __decpt, int *__restrict __sign)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;\nextern char *qfcvt (long double __value, int __ndigit,\n      int *__restrict __decpt, int *__restrict __sign)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;\nextern char *qgcvt (long double __value, int __ndigit, char *__buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;\n\n\n\n\nextern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,\n     int *__restrict __sign, char *__restrict __buf,\n     size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));\nextern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,\n     int *__restrict __sign, char *__restrict __buf,\n     size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));\n\nextern int qecvt_r (long double __value, int __ndigit,\n      int *__restrict __decpt, int *__restrict __sign,\n      char *__restrict __buf, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));\nextern int qfcvt_r (long double __value, int __ndigit,\n      int *__restrict __decpt, int *__restrict __sign,\n      char *__restrict __buf, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));\n\n\n\n\n\n\n\nextern int mblen (__const char *__s, size_t __n) __attribute__ ((__nothrow__)) ;\n\n\nextern int mbtowc (wchar_t *__restrict __pwc,\n     __const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__)) ;\n\n\nextern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__)) ;\n\n\n\nextern size_t mbstowcs (wchar_t *__restrict __pwcs,\n   __const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__));\n\nextern size_t wcstombs (char *__restrict __s,\n   __const wchar_t *__restrict __pwcs, size_t __n)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern int rpmatch (__const char *__response) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 909 \"/usr/include/stdlib.h\" 3 4\nextern int getsubopt (char **__restrict __optionp,\n        char *__const *__restrict __tokens,\n        char **__restrict __valuep)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3))) ;\n\n\n\n\n\nextern void setkey (__const char *__key) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\n\nextern int posix_openpt (int __oflag) ;\n\n\n\n\n\n\n\nextern int grantpt (int __fd) __attribute__ ((__nothrow__));\n\n\n\nextern int unlockpt (int __fd) __attribute__ ((__nothrow__));\n\n\n\n\nextern char *ptsname (int __fd) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\nextern int ptsname_r (int __fd, char *__buf, size_t __buflen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\nextern int getpt (void);\n\n\n\n\n\n\nextern int getloadavg (double __loadavg[], int __nelem)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 977 \"/usr/include/stdlib.h\" 3 4\n\n// # 35 \"../cherokee/macros.h\" 2\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stdarg.h\" 1 3 4\n// # 36 \"../cherokee/macros.h\" 2\n// # 34 \"common.h\" 2\n\n\n\n\ntypedef enum {\n false = 0,\n true = 1\n} cherokee_boolean_t;\n\ntypedef enum {\n ret_no_sys = -4,\n ret_nomem = -3,\n ret_deny = -2,\n ret_error = -1,\n ret_ok = 0,\n ret_eof = 1,\n ret_eof_have_data = 2,\n ret_not_found = 3,\n ret_file_not_found = 4,\n ret_eagain = 5,\n ret_ok_and_sent = 6\n} ret_t;\n\ntypedef unsigned int crc_t;\n\ntypedef int cint_t;\ntypedef char cchar_t;\ntypedef short cshort_t;\ntypedef long clong_t;\ntypedef long long cllong_t;\n\ntypedef unsigned int cuint_t;\ntypedef unsigned char cuchar_t;\ntypedef unsigned short cushort_t;\ntypedef unsigned long culong_t;\ntypedef unsigned long long cullong_t;\n\ntypedef void (*cherokee_func_free_t) (void *);\n\n\n// # 37 \"common-internal.h\" 2\n// # 1 \"threading.h\" 1\n// # 28 \"threading.h\"\n// # 1 \"common.h\" 1\n// # 29 \"threading.h\" 2\n\n\n\n\n// # 1 \"/usr/include/pthread.h\" 1 3 4\n// # 24 \"/usr/include/pthread.h\" 3 4\n// # 1 \"/usr/include/sched.h\" 1 3 4\n// # 29 \"/usr/include/sched.h\" 3 4\n// # 1 \"/usr/include/time.h\" 1 3 4\n// # 30 \"/usr/include/sched.h\" 2 3 4\n\n\n// # 1 \"/usr/include/bits/sched.h\" 1 3 4\n// # 65 \"/usr/include/bits/sched.h\" 3 4\nstruct sched_param\n  {\n    int __sched_priority;\n  };\n\n\n\n\n\nextern int clone (int (*__fn) (void *__arg), void *__child_stack,\n    int __flags, void *__arg, ...) __attribute__ ((__nothrow__));\n\n\nextern int unshare (int __flags) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\n\n\nstruct __sched_param\n  {\n    int __sched_priority;\n  };\n// # 104 \"/usr/include/bits/sched.h\" 3 4\ntypedef unsigned long int __cpu_mask;\n\n\n\n\n\n\ntypedef struct\n{\n  __cpu_mask __bits[1024 / (8 * sizeof (__cpu_mask))];\n} cpu_set_t;\n// # 33 \"/usr/include/sched.h\" 2 3 4\n\n\n\n\n\n\n\nextern int sched_setparam (__pid_t __pid, __const struct sched_param *__param)\n     __attribute__ ((__nothrow__));\n\n\nextern int sched_getparam (__pid_t __pid, struct sched_param *__param) __attribute__ ((__nothrow__));\n\n\nextern int sched_setscheduler (__pid_t __pid, int __policy,\n          __const struct sched_param *__param) __attribute__ ((__nothrow__));\n\n\nextern int sched_getscheduler (__pid_t __pid) __attribute__ ((__nothrow__));\n\n\nextern int sched_yield (void) __attribute__ ((__nothrow__));\n\n\nextern int sched_get_priority_max (int __algorithm) __attribute__ ((__nothrow__));\n\n\nextern int sched_get_priority_min (int __algorithm) __attribute__ ((__nothrow__));\n\n\nextern int sched_rr_get_interval (__pid_t __pid, struct timespec *__t) __attribute__ ((__nothrow__));\n// # 76 \"/usr/include/sched.h\" 3 4\nextern int sched_setaffinity (__pid_t __pid, size_t __cpusetsize,\n         __const cpu_set_t *__cpuset) __attribute__ ((__nothrow__));\n\n\nextern int sched_getaffinity (__pid_t __pid, size_t __cpusetsize,\n         cpu_set_t *__cpuset) __attribute__ ((__nothrow__));\n\n\n\n// # 25 \"/usr/include/pthread.h\" 2 3 4\n// # 1 \"/usr/include/time.h\" 1 3 4\n// # 31 \"/usr/include/time.h\" 3 4\n\n\n\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 40 \"/usr/include/time.h\" 2 3 4\n\n\n\n// # 1 \"/usr/include/bits/time.h\" 1 3 4\n// # 44 \"/usr/include/time.h\" 2 3 4\n// # 132 \"/usr/include/time.h\" 3 4\n\n\nstruct tm\n{\n  int tm_sec;\n  int tm_min;\n  int tm_hour;\n  int tm_mday;\n  int tm_mon;\n  int tm_year;\n  int tm_wday;\n  int tm_yday;\n  int tm_isdst;\n\n\n  long int tm_gmtoff;\n  __const char *tm_zone;\n\n\n\n\n};\n\n\n\n\n\n\n\n\nstruct itimerspec\n  {\n    struct timespec it_interval;\n    struct timespec it_value;\n  };\n\n\nstruct sigevent;\n// # 181 \"/usr/include/time.h\" 3 4\n\n\n\nextern clock_t clock (void) __attribute__ ((__nothrow__));\n\n\nextern time_t time (time_t *__timer) __attribute__ ((__nothrow__));\n\n\nextern double difftime (time_t __time1, time_t __time0)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\nextern time_t mktime (struct tm *__tp) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern size_t strftime (char *__restrict __s, size_t __maxsize,\n   __const char *__restrict __format,\n   __const struct tm *__restrict __tp) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *strptime (__const char *__restrict __s,\n         __const char *__restrict __fmt, struct tm *__tp)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern size_t strftime_l (char *__restrict __s, size_t __maxsize,\n     __const char *__restrict __format,\n     __const struct tm *__restrict __tp,\n     __locale_t __loc) __attribute__ ((__nothrow__));\n\nextern char *strptime_l (__const char *__restrict __s,\n    __const char *__restrict __fmt, struct tm *__tp,\n    __locale_t __loc) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern struct tm *gmtime (__const time_t *__timer) __attribute__ ((__nothrow__));\n\n\n\nextern struct tm *localtime (__const time_t *__timer) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern struct tm *gmtime_r (__const time_t *__restrict __timer,\n       struct tm *__restrict __tp) __attribute__ ((__nothrow__));\n\n\n\nextern struct tm *localtime_r (__const time_t *__restrict __timer,\n          struct tm *__restrict __tp) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *asctime (__const struct tm *__tp) __attribute__ ((__nothrow__));\n\n\nextern char *ctime (__const time_t *__timer) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern char *asctime_r (__const struct tm *__restrict __tp,\n   char *__restrict __buf) __attribute__ ((__nothrow__));\n\n\nextern char *ctime_r (__const time_t *__restrict __timer,\n        char *__restrict __buf) __attribute__ ((__nothrow__));\n\n\n\n\nextern char *__tzname[2];\nextern int __daylight;\nextern long int __timezone;\n\n\n\n\nextern char *tzname[2];\n\n\n\nextern void tzset (void) __attribute__ ((__nothrow__));\n\n\n\nextern int daylight;\nextern long int timezone;\n\n\n\n\n\nextern int stime (__const time_t *__when) __attribute__ ((__nothrow__));\n// # 312 \"/usr/include/time.h\" 3 4\nextern time_t timegm (struct tm *__tp) __attribute__ ((__nothrow__));\n\n\nextern time_t timelocal (struct tm *__tp) __attribute__ ((__nothrow__));\n\n\nextern int dysize (int __year) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n// # 327 \"/usr/include/time.h\" 3 4\nextern int nanosleep (__const struct timespec *__requested_time,\n        struct timespec *__remaining);\n\n\n\nextern int clock_getres (clockid_t __clock_id, struct timespec *__res) __attribute__ ((__nothrow__));\n\n\nextern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) __attribute__ ((__nothrow__));\n\n\nextern int clock_settime (clockid_t __clock_id, __const struct timespec *__tp)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int clock_nanosleep (clockid_t __clock_id, int __flags,\n       __const struct timespec *__req,\n       struct timespec *__rem);\n\n\nextern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) __attribute__ ((__nothrow__));\n\n\n\n\nextern int timer_create (clockid_t __clock_id,\n    struct sigevent *__restrict __evp,\n    timer_t *__restrict __timerid) __attribute__ ((__nothrow__));\n\n\nextern int timer_delete (timer_t __timerid) __attribute__ ((__nothrow__));\n\n\nextern int timer_settime (timer_t __timerid, int __flags,\n     __const struct itimerspec *__restrict __value,\n     struct itimerspec *__restrict __ovalue) __attribute__ ((__nothrow__));\n\n\nextern int timer_gettime (timer_t __timerid, struct itimerspec *__value)\n     __attribute__ ((__nothrow__));\n\n\nextern int timer_getoverrun (timer_t __timerid) __attribute__ ((__nothrow__));\n// # 389 \"/usr/include/time.h\" 3 4\nextern int getdate_err;\n// # 398 \"/usr/include/time.h\" 3 4\nextern struct tm *getdate (__const char *__string);\n// # 412 \"/usr/include/time.h\" 3 4\nextern int getdate_r (__const char *__restrict __string,\n        struct tm *__restrict __resbufp);\n\n\n\n// # 26 \"/usr/include/pthread.h\" 2 3 4\n\n\n// # 1 \"/usr/include/signal.h\" 1 3 4\n// # 31 \"/usr/include/signal.h\" 3 4\n\n\n// # 1 \"/usr/include/bits/sigset.h\" 1 3 4\n// # 34 \"/usr/include/signal.h\" 2 3 4\n// # 400 \"/usr/include/signal.h\" 3 4\n\n// # 29 \"/usr/include/pthread.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/setjmp.h\" 1 3 4\n// # 27 \"/usr/include/bits/setjmp.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 28 \"/usr/include/bits/setjmp.h\" 2 3 4\n\n\n\n\ntypedef long int __jmp_buf[8];\n// # 31 \"/usr/include/pthread.h\" 2 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 32 \"/usr/include/pthread.h\" 2 3 4\n\n\n\nenum\n{\n  PTHREAD_CREATE_JOINABLE,\n\n  PTHREAD_CREATE_DETACHED\n\n};\n\n\n\nenum\n{\n  PTHREAD_MUTEX_TIMED_NP,\n  PTHREAD_MUTEX_RECURSIVE_NP,\n  PTHREAD_MUTEX_ERRORCHECK_NP,\n  PTHREAD_MUTEX_ADAPTIVE_NP\n\n  ,\n  PTHREAD_MUTEX_NORMAL = PTHREAD_MUTEX_TIMED_NP,\n  PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,\n  PTHREAD_MUTEX_ERRORCHECK = PTHREAD_MUTEX_ERRORCHECK_NP,\n  PTHREAD_MUTEX_DEFAULT = PTHREAD_MUTEX_NORMAL\n\n\n\n  , PTHREAD_MUTEX_FAST_NP = PTHREAD_MUTEX_TIMED_NP\n\n};\n\n\n\n\nenum\n{\n  PTHREAD_MUTEX_STALLED_NP,\n  PTHREAD_MUTEX_ROBUST_NP\n};\n\n\n\n\n\nenum\n{\n  PTHREAD_PRIO_NONE,\n  PTHREAD_PRIO_INHERIT,\n  PTHREAD_PRIO_PROTECT\n};\n// # 114 \"/usr/include/pthread.h\" 3 4\nenum\n{\n  PTHREAD_RWLOCK_PREFER_READER_NP,\n  PTHREAD_RWLOCK_PREFER_WRITER_NP,\n  PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,\n  PTHREAD_RWLOCK_DEFAULT_NP = PTHREAD_RWLOCK_PREFER_READER_NP\n};\n// # 146 \"/usr/include/pthread.h\" 3 4\nenum\n{\n  PTHREAD_INHERIT_SCHED,\n\n  PTHREAD_EXPLICIT_SCHED\n\n};\n\n\n\nenum\n{\n  PTHREAD_SCOPE_SYSTEM,\n\n  PTHREAD_SCOPE_PROCESS\n\n};\n\n\n\nenum\n{\n  PTHREAD_PROCESS_PRIVATE,\n\n  PTHREAD_PROCESS_SHARED\n\n};\n// # 181 \"/usr/include/pthread.h\" 3 4\nstruct _pthread_cleanup_buffer\n{\n  void (*__routine) (void *);\n  void *__arg;\n  int __canceltype;\n  struct _pthread_cleanup_buffer *__prev;\n};\n\n\nenum\n{\n  PTHREAD_CANCEL_ENABLE,\n\n  PTHREAD_CANCEL_DISABLE\n\n};\nenum\n{\n  PTHREAD_CANCEL_DEFERRED,\n\n  PTHREAD_CANCEL_ASYNCHRONOUS\n\n};\n// # 219 \"/usr/include/pthread.h\" 3 4\n\n\n\n\n\nextern int pthread_create (pthread_t *__restrict __newthread,\n      __const pthread_attr_t *__restrict __attr,\n      void *(*__start_routine) (void *),\n      void *__restrict __arg) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));\n\n\n\n\n\nextern void pthread_exit (void *__retval) __attribute__ ((__noreturn__));\n\n\n\n\n\n\n\nextern int pthread_join (pthread_t __th, void **__thread_return);\n\n\n\n\nextern int pthread_tryjoin_np (pthread_t __th, void **__thread_return) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern int pthread_timedjoin_np (pthread_t __th, void **__thread_return,\n     __const struct timespec *__abstime);\n\n\n\n\n\n\nextern int pthread_detach (pthread_t __th) __attribute__ ((__nothrow__));\n\n\n\nextern pthread_t pthread_self (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\nextern int pthread_equal (pthread_t __thread1, pthread_t __thread2) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern int pthread_attr_init (pthread_attr_t *__attr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_attr_destroy (pthread_attr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_attr_getdetachstate (__const pthread_attr_t *__attr,\n     int *__detachstate)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_attr_setdetachstate (pthread_attr_t *__attr,\n     int __detachstate)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_attr_getguardsize (__const pthread_attr_t *__attr,\n          size_t *__guardsize)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_attr_setguardsize (pthread_attr_t *__attr,\n          size_t __guardsize)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_attr_getschedparam (__const pthread_attr_t *__restrict\n           __attr,\n           struct sched_param *__restrict __param)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_attr_setschedparam (pthread_attr_t *__restrict __attr,\n           __const struct sched_param *__restrict\n           __param) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_attr_getschedpolicy (__const pthread_attr_t *__restrict\n     __attr, int *__restrict __policy)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_attr_setschedpolicy (pthread_attr_t *__attr, int __policy)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_attr_getinheritsched (__const pthread_attr_t *__restrict\n      __attr, int *__restrict __inherit)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_attr_setinheritsched (pthread_attr_t *__attr,\n      int __inherit)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_attr_getscope (__const pthread_attr_t *__restrict __attr,\n      int *__restrict __scope)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_attr_setscope (pthread_attr_t *__attr, int __scope)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_attr_getstackaddr (__const pthread_attr_t *__restrict\n          __attr, void **__restrict __stackaddr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__deprecated__));\n\n\n\n\n\nextern int pthread_attr_setstackaddr (pthread_attr_t *__attr,\n          void *__stackaddr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__));\n\n\nextern int pthread_attr_getstacksize (__const pthread_attr_t *__restrict\n          __attr, size_t *__restrict __stacksize)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\nextern int pthread_attr_setstacksize (pthread_attr_t *__attr,\n          size_t __stacksize)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_attr_getstack (__const pthread_attr_t *__restrict __attr,\n      void **__restrict __stackaddr,\n      size_t *__restrict __stacksize)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3)));\n\n\n\n\nextern int pthread_attr_setstack (pthread_attr_t *__attr, void *__stackaddr,\n      size_t __stacksize) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int pthread_attr_setaffinity_np (pthread_attr_t *__attr,\n     size_t __cpusetsize,\n     __const cpu_set_t *__cpuset)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));\n\n\n\nextern int pthread_attr_getaffinity_np (__const pthread_attr_t *__attr,\n     size_t __cpusetsize,\n     cpu_set_t *__cpuset)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));\n\n\n\n\n\nextern int pthread_getattr_np (pthread_t __th, pthread_attr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\n\n\n\nextern int pthread_setschedparam (pthread_t __target_thread, int __policy,\n      __const struct sched_param *__param)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));\n\n\nextern int pthread_getschedparam (pthread_t __target_thread,\n      int *__restrict __policy,\n      struct sched_param *__restrict __param)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n\n\nextern int pthread_setschedprio (pthread_t __target_thread, int __prio)\n     __attribute__ ((__nothrow__));\n\n\n\n\nextern int pthread_getconcurrency (void) __attribute__ ((__nothrow__));\n\n\nextern int pthread_setconcurrency (int __level) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern int pthread_yield (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern int pthread_setaffinity_np (pthread_t __th, size_t __cpusetsize,\n       __const cpu_set_t *__cpuset)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));\n\n\nextern int pthread_getaffinity_np (pthread_t __th, size_t __cpusetsize,\n       cpu_set_t *__cpuset)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));\n// # 465 \"/usr/include/pthread.h\" 3 4\nextern int pthread_once (pthread_once_t *__once_control,\n    void (*__init_routine) (void)) __attribute__ ((__nonnull__ (1, 2)));\n// # 477 \"/usr/include/pthread.h\" 3 4\nextern int pthread_setcancelstate (int __state, int *__oldstate);\n\n\n\nextern int pthread_setcanceltype (int __type, int *__oldtype);\n\n\nextern int pthread_cancel (pthread_t __th);\n\n\n\n\nextern void pthread_testcancel (void);\n\n\n\n\ntypedef struct\n{\n  struct\n  {\n    __jmp_buf __cancel_jmp_buf;\n    int __mask_was_saved;\n  } __cancel_jmp_buf[1];\n  void *__pad[4];\n} __pthread_unwind_buf_t __attribute__ ((__aligned__));\n// # 511 \"/usr/include/pthread.h\" 3 4\nstruct __pthread_cleanup_frame\n{\n  void (*__cancel_routine) (void *);\n  void *__cancel_arg;\n  int __do_it;\n  int __cancel_type;\n};\n// # 651 \"/usr/include/pthread.h\" 3 4\nextern void __pthread_register_cancel (__pthread_unwind_buf_t *__buf)\n     ;\n// # 662 \"/usr/include/pthread.h\" 3 4\nextern void __pthread_unregister_cancel (__pthread_unwind_buf_t *__buf)\n  ;\n// # 685 \"/usr/include/pthread.h\" 3 4\nextern void __pthread_register_cancel_defer (__pthread_unwind_buf_t *__buf)\n     ;\n// # 697 \"/usr/include/pthread.h\" 3 4\nextern void __pthread_unregister_cancel_restore (__pthread_unwind_buf_t *__buf)\n  ;\n\n\n\nextern void __pthread_unwind_next (__pthread_unwind_buf_t *__buf)\n     __attribute__ ((__noreturn__))\n\n     __attribute__ ((__weak__))\n\n     ;\n\n\n\nstruct __jmp_buf_tag;\nextern int __sigsetjmp (struct __jmp_buf_tag *__env, int __savemask) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int pthread_mutex_init (pthread_mutex_t *__mutex,\n          __const pthread_mutexattr_t *__mutexattr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_mutex_destroy (pthread_mutex_t *__mutex)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_mutex_trylock (pthread_mutex_t *__mutex)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_mutex_lock (pthread_mutex_t *__mutex)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_mutex_timedlock (pthread_mutex_t *__restrict __mutex,\n                                    __const struct timespec *__restrict\n                                    __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern int pthread_mutex_unlock (pthread_mutex_t *__mutex)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int pthread_mutex_getprioceiling (__const pthread_mutex_t *\n      __restrict __mutex,\n      int *__restrict __prioceiling)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern int pthread_mutex_setprioceiling (pthread_mutex_t *__restrict __mutex,\n      int __prioceiling,\n      int *__restrict __old_ceiling)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));\n\n\n\n\n\nextern int pthread_mutex_consistent_np (pthread_mutex_t *__mutex)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\n\nextern int pthread_mutexattr_init (pthread_mutexattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_mutexattr_destroy (pthread_mutexattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_mutexattr_getpshared (__const pthread_mutexattr_t *\n      __restrict __attr,\n      int *__restrict __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_mutexattr_setpshared (pthread_mutexattr_t *__attr,\n      int __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_mutexattr_gettype (__const pthread_mutexattr_t *__restrict\n          __attr, int *__restrict __kind)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\nextern int pthread_mutexattr_settype (pthread_mutexattr_t *__attr, int __kind)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_mutexattr_getprotocol (__const pthread_mutexattr_t *\n       __restrict __attr,\n       int *__restrict __protocol)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern int pthread_mutexattr_setprotocol (pthread_mutexattr_t *__attr,\n       int __protocol)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_mutexattr_getprioceiling (__const pthread_mutexattr_t *\n          __restrict __attr,\n          int *__restrict __prioceiling)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_mutexattr_setprioceiling (pthread_mutexattr_t *__attr,\n          int __prioceiling)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int pthread_mutexattr_getrobust_np (__const pthread_mutexattr_t *__attr,\n        int *__robustness)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_mutexattr_setrobust_np (pthread_mutexattr_t *__attr,\n        int __robustness)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 845 \"/usr/include/pthread.h\" 3 4\nextern int pthread_rwlock_init (pthread_rwlock_t *__restrict __rwlock,\n    __const pthread_rwlockattr_t *__restrict\n    __attr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_rwlock_destroy (pthread_rwlock_t *__rwlock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_rwlock_rdlock (pthread_rwlock_t *__rwlock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_rwlock_tryrdlock (pthread_rwlock_t *__rwlock)\n  __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_rwlock_timedrdlock (pthread_rwlock_t *__restrict __rwlock,\n           __const struct timespec *__restrict\n           __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern int pthread_rwlock_wrlock (pthread_rwlock_t *__rwlock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_rwlock_trywrlock (pthread_rwlock_t *__rwlock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_rwlock_timedwrlock (pthread_rwlock_t *__restrict __rwlock,\n           __const struct timespec *__restrict\n           __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern int pthread_rwlock_unlock (pthread_rwlock_t *__rwlock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int pthread_rwlockattr_init (pthread_rwlockattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_rwlockattr_destroy (pthread_rwlockattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_rwlockattr_getpshared (__const pthread_rwlockattr_t *\n       __restrict __attr,\n       int *__restrict __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_rwlockattr_setpshared (pthread_rwlockattr_t *__attr,\n       int __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_rwlockattr_getkind_np (__const pthread_rwlockattr_t *\n       __restrict __attr,\n       int *__restrict __pref)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_rwlockattr_setkind_np (pthread_rwlockattr_t *__attr,\n       int __pref) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\n\nextern int pthread_cond_init (pthread_cond_t *__restrict __cond,\n         __const pthread_condattr_t *__restrict\n         __cond_attr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_cond_destroy (pthread_cond_t *__cond)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_cond_signal (pthread_cond_t *__cond)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_cond_broadcast (pthread_cond_t *__cond)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int pthread_cond_wait (pthread_cond_t *__restrict __cond,\n         pthread_mutex_t *__restrict __mutex)\n     __attribute__ ((__nonnull__ (1, 2)));\n// # 957 \"/usr/include/pthread.h\" 3 4\nextern int pthread_cond_timedwait (pthread_cond_t *__restrict __cond,\n       pthread_mutex_t *__restrict __mutex,\n       __const struct timespec *__restrict\n       __abstime) __attribute__ ((__nonnull__ (1, 2, 3)));\n\n\n\n\nextern int pthread_condattr_init (pthread_condattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_condattr_destroy (pthread_condattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_condattr_getpshared (__const pthread_condattr_t *\n                                        __restrict __attr,\n                                        int *__restrict __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_condattr_setpshared (pthread_condattr_t *__attr,\n                                        int __pshared) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_condattr_getclock (__const pthread_condattr_t *\n          __restrict __attr,\n          __clockid_t *__restrict __clock_id)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_condattr_setclock (pthread_condattr_t *__attr,\n          __clockid_t __clock_id)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 1001 \"/usr/include/pthread.h\" 3 4\nextern int pthread_spin_init (pthread_spinlock_t *__lock, int __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_spin_destroy (pthread_spinlock_t *__lock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_spin_lock (pthread_spinlock_t *__lock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_spin_trylock (pthread_spinlock_t *__lock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_spin_unlock (pthread_spinlock_t *__lock)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int pthread_barrier_init (pthread_barrier_t *__restrict __barrier,\n     __const pthread_barrierattr_t *__restrict\n     __attr, unsigned int __count)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_barrier_destroy (pthread_barrier_t *__barrier)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_barrier_wait (pthread_barrier_t *__barrier)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int pthread_barrierattr_init (pthread_barrierattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_barrierattr_destroy (pthread_barrierattr_t *__attr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_barrierattr_getpshared (__const pthread_barrierattr_t *\n        __restrict __attr,\n        int *__restrict __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int pthread_barrierattr_setpshared (pthread_barrierattr_t *__attr,\n                                           int __pshared)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 1068 \"/usr/include/pthread.h\" 3 4\nextern int pthread_key_create (pthread_key_t *__key,\n          void (*__destr_function) (void *))\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int pthread_key_delete (pthread_key_t __key) __attribute__ ((__nothrow__));\n\n\nextern void *pthread_getspecific (pthread_key_t __key) __attribute__ ((__nothrow__));\n\n\nextern int pthread_setspecific (pthread_key_t __key,\n    __const void *__pointer) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern int pthread_getcpuclockid (pthread_t __thread_id,\n      __clockid_t *__clock_id)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n// # 1102 \"/usr/include/pthread.h\" 3 4\nextern int pthread_atfork (void (*__prepare) (void),\n      void (*__parent) (void),\n      void (*__child) (void)) __attribute__ ((__nothrow__));\n// # 1116 \"/usr/include/pthread.h\" 3 4\n\n// # 34 \"threading.h\" 2\n\n\nextern pthread_mutexattr_t cherokee_mutexattr_fast;\nextern pthread_mutexattr_t cherokee_mutexattr_errorcheck;\n// # 48 \"threading.h\"\nextern pthread_key_t thread_error_writer_ptr;\nextern pthread_key_t thread_connection_ptr;\n\n\n\n\nret_t cherokee_threading_init (void);\nret_t cherokee_threading_free (void);\n// # 38 \"common-internal.h\" 2\n// # 1 \"error_log.h\" 1\n// # 32 \"error_log.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"error_log.h\" 2\n// # 1 \"../cherokee/logger.h\" 1\n// # 32 \"../cherokee/logger.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/logger.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 32 \"../cherokee/buffer.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/buffer.h\" 2\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 152 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 3 4\ntypedef long int ptrdiff_t;\n// # 34 \"../cherokee/buffer.h\" 2\n\n\n// # 1 \"/usr/include/string.h\" 1 3 4\n// # 28 \"/usr/include/string.h\" 3 4\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 34 \"/usr/include/string.h\" 2 3 4\n\n\n\n\nextern void *memcpy (void *__restrict __dest,\n       __const void *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern void *memmove (void *__dest, __const void *__src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\nextern void *memccpy (void *__restrict __dest, __const void *__restrict __src,\n        int __c, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int memcmp (__const void *__s1, __const void *__s2, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern void *memchr (__const void *__s, int __c, size_t __n)\n      __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern void *rawmemchr (__const void *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern void *memrchr (__const void *__s, int __c, size_t __n)\n      __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern char *strcpy (char *__restrict __dest, __const char *__restrict __src)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern char *strncpy (char *__restrict __dest,\n        __const char *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern char *strcat (char *__restrict __dest, __const char *__restrict __src)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern char *strncat (char *__restrict __dest, __const char *__restrict __src,\n        size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int strcmp (__const char *__s1, __const char *__s2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern int strncmp (__const char *__s1, __const char *__s2, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int strcoll (__const char *__s1, __const char *__s2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern size_t strxfrm (char *__restrict __dest,\n         __const char *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n// # 121 \"/usr/include/string.h\" 3 4\nextern int strcoll_l (__const char *__s1, __const char *__s2, __locale_t __l)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));\n\nextern size_t strxfrm_l (char *__dest, __const char *__src, size_t __n,\n    __locale_t __l) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n\n\n\n\nextern char *strdup (__const char *__s)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern char *strndup (__const char *__string, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));\n// # 165 \"/usr/include/string.h\" 3 4\n\n\nextern char *strchr (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\nextern char *strrchr (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern char *strchrnul (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern size_t strcspn (__const char *__s, __const char *__reject)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern size_t strspn (__const char *__s, __const char *__accept)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern char *strpbrk (__const char *__s, __const char *__accept)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern char *strstr (__const char *__haystack, __const char *__needle)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern char *strtok (char *__restrict __s, __const char *__restrict __delim)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\nextern char *__strtok_r (char *__restrict __s,\n    __const char *__restrict __delim,\n    char **__restrict __save_ptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n\nextern char *strtok_r (char *__restrict __s, __const char *__restrict __delim,\n         char **__restrict __save_ptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n\n\n\n\nextern char *strcasestr (__const char *__haystack, __const char *__needle)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\nextern void *memmem (__const void *__haystack, size_t __haystacklen,\n       __const void *__needle, size_t __needlelen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 3)));\n\n\n\nextern void *__mempcpy (void *__restrict __dest,\n   __const void *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern void *mempcpy (void *__restrict __dest,\n        __const void *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern size_t strlen (__const char *__s)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern size_t strnlen (__const char *__string, size_t __maxlen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern char *strerror (int __errnum) __attribute__ ((__nothrow__));\n\n// # 281 \"/usr/include/string.h\" 3 4\nextern char *strerror_r (int __errnum, char *__buf, size_t __buflen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\n\nextern void __bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern void bcopy (__const void *__src, void *__dest, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int bcmp (__const void *__s1, __const void *__s2, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern char *index (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern char *rindex (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int ffs (int __i) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\n\n\nextern int ffsl (long int __l) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n__extension__ extern int ffsll (long long int __ll)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\n\n\nextern int strcasecmp (__const char *__s1, __const char *__s2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int strncasecmp (__const char *__s1, __const char *__s2, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern int strcasecmp_l (__const char *__s1, __const char *__s2,\n    __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));\n\nextern int strncasecmp_l (__const char *__s1, __const char *__s2,\n     size_t __n, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));\n\n\n\n\n\nextern char *strsep (char **__restrict __stringp,\n       __const char *__restrict __delim)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\nextern int strverscmp (__const char *__s1, __const char *__s2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern char *strsignal (int __sig) __attribute__ ((__nothrow__));\n\n\nextern char *__stpcpy (char *__restrict __dest, __const char *__restrict __src)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern char *stpcpy (char *__restrict __dest, __const char *__restrict __src)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern char *__stpncpy (char *__restrict __dest,\n   __const char *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern char *stpncpy (char *__restrict __dest,\n        __const char *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern char *strfry (char *__string) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern void *memfrob (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern char *basename (__const char *__filename) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 426 \"/usr/include/string.h\" 3 4\n\n// # 37 \"../cherokee/buffer.h\" 2\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 1 3 4\n// # 11 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/syslimits.h\" 1 3 4\n\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 1 3 4\n// # 122 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 3 4\n// # 1 \"/usr/include/limits.h\" 1 3 4\n// # 145 \"/usr/include/limits.h\" 3 4\n// # 1 \"/usr/include/bits/posix1_lim.h\" 1 3 4\n// # 153 \"/usr/include/bits/posix1_lim.h\" 3 4\n// # 1 \"/usr/include/bits/local_lim.h\" 1 3 4\n// # 36 \"/usr/include/bits/local_lim.h\" 3 4\n// # 1 \"/usr/include/linux/limits.h\" 1 3 4\n// # 37 \"/usr/include/bits/local_lim.h\" 2 3 4\n// # 154 \"/usr/include/bits/posix1_lim.h\" 2 3 4\n// # 146 \"/usr/include/limits.h\" 2 3 4\n\n\n\n// # 1 \"/usr/include/bits/posix2_lim.h\" 1 3 4\n// # 150 \"/usr/include/limits.h\" 2 3 4\n\n\n\n// # 1 \"/usr/include/bits/xopen_lim.h\" 1 3 4\n// # 34 \"/usr/include/bits/xopen_lim.h\" 3 4\n// # 1 \"/usr/include/bits/stdio_lim.h\" 1 3 4\n// # 35 \"/usr/include/bits/xopen_lim.h\" 2 3 4\n// # 154 \"/usr/include/limits.h\" 2 3 4\n// # 123 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 2 3 4\n// # 8 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/syslimits.h\" 2 3 4\n// # 12 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 2 3 4\n// # 38 \"../cherokee/buffer.h\" 2\n\n\n\n\ntypedef struct {\n char *buf;\n cuint_t size;\n cuint_t len;\n} cherokee_buffer_t;\n// # 60 \"../cherokee/buffer.h\"\nret_t cherokee_buffer_new (cherokee_buffer_t **buf);\nret_t cherokee_buffer_free (cherokee_buffer_t *buf);\nret_t cherokee_buffer_init (cherokee_buffer_t *buf);\nret_t cherokee_buffer_mrproper (cherokee_buffer_t *buf);\nvoid cherokee_buffer_fake (cherokee_buffer_t *buf, const char *str, cuint_t len);\n\nvoid cherokee_buffer_clean (cherokee_buffer_t *buf);\nret_t cherokee_buffer_dup (cherokee_buffer_t *buf, cherokee_buffer_t **dup);\nvoid cherokee_buffer_swap_buffers (cherokee_buffer_t *buf, cherokee_buffer_t *second);\n\nret_t cherokee_buffer_add (cherokee_buffer_t *buf, const char *txt, size_t size);\nret_t cherokee_buffer_add_long10 (cherokee_buffer_t *buf, clong_t lNum);\nret_t cherokee_buffer_add_llong10 (cherokee_buffer_t *buf, cllong_t lNum);\nret_t cherokee_buffer_add_ulong10 (cherokee_buffer_t *buf, culong_t ulNum);\nret_t cherokee_buffer_add_ullong10 (cherokee_buffer_t *buf, cullong_t ulNum);\nret_t cherokee_buffer_add_ulong16 (cherokee_buffer_t *buf, culong_t ulNum);\nret_t cherokee_buffer_add_ullong16 (cherokee_buffer_t *buf, cullong_t ulNum);\nret_t cherokee_buffer_add_va (cherokee_buffer_t *buf, const char *format, ...);\nret_t cherokee_buffer_add_va_fixed (cherokee_buffer_t *buf, const char *format, ...);\nret_t cherokee_buffer_add_va_list (cherokee_buffer_t *buf, const char *format, va_list args);\nret_t cherokee_buffer_add_char (cherokee_buffer_t *buf, char c);\nret_t cherokee_buffer_add_char_n (cherokee_buffer_t *buf, char c, int n);\nret_t cherokee_buffer_add_buffer (cherokee_buffer_t *buf, cherokee_buffer_t *buf2);\nret_t cherokee_buffer_add_buffer_slice (cherokee_buffer_t *buf, cherokee_buffer_t *buf2, ssize_t begin, ssize_t end);\nret_t cherokee_buffer_add_fsize (cherokee_buffer_t *buf, unsigned long long size);\nret_t cherokee_buffer_prepend (cherokee_buffer_t *buf, const char *txt, size_t size);\n\ncint_t cherokee_buffer_cmp (cherokee_buffer_t *buf, char *txt, cuint_t txt_len);\ncint_t cherokee_buffer_cmp_buf (cherokee_buffer_t *buf, cherokee_buffer_t *buf2);\ncint_t cherokee_buffer_case_cmp (cherokee_buffer_t *buf, char *txt, cuint_t txt_len);\ncint_t cherokee_buffer_case_cmp_buf (cherokee_buffer_t *buf, cherokee_buffer_t *buf2);\n\nret_t cherokee_buffer_read_file (cherokee_buffer_t *buf, char *filename);\nret_t cherokee_buffer_read_from_fd (cherokee_buffer_t *buf, int fd, size_t size, size_t *ret_size);\n\nret_t cherokee_buffer_move_to_begin (cherokee_buffer_t *buf, cuint_t pos);\nret_t cherokee_buffer_drop_ending (cherokee_buffer_t *buf, cuint_t num_chars);\nret_t cherokee_buffer_multiply (cherokee_buffer_t *buf, int num);\nret_t cherokee_buffer_swap_chars (cherokee_buffer_t *buf, char a, char b);\nret_t cherokee_buffer_remove_dups (cherokee_buffer_t *buf, char c);\nret_t cherokee_buffer_remove_string (cherokee_buffer_t *buf, char *string, int string_len);\nret_t cherokee_buffer_remove_chunk (cherokee_buffer_t *buf, cuint_t from, cuint_t len);\nret_t cherokee_buffer_replace_string (cherokee_buffer_t *buf, const char *subs, int subs_len, const char *repl, int repl_len);\nret_t cherokee_buffer_substitute_string (cherokee_buffer_t *bufsrc, cherokee_buffer_t *bufdst, char *subs, int subs_len, char *repl, int repl_len);\nret_t cherokee_buffer_trim (cherokee_buffer_t *buf);\nret_t cherokee_buffer_insert (cherokee_buffer_t *buf, char *txt, size_t txt_len, size_t pos);\nret_t cherokee_buffer_insert_buffer (cherokee_buffer_t *buf, cherokee_buffer_t *src, size_t pos);\n\nret_t cherokee_buffer_get_utf8_len (cherokee_buffer_t *buf, cuint_t *len);\nret_t cherokee_buffer_ensure_addlen (cherokee_buffer_t *buf, size_t alen);\nret_t cherokee_buffer_ensure_size (cherokee_buffer_t *buf, size_t size);\n\nint cherokee_buffer_is_ending (cherokee_buffer_t *buf, char c);\nchar cherokee_buffer_end_char (cherokee_buffer_t *buf);\nsize_t cherokee_buffer_cnt_spn (cherokee_buffer_t *buf, cuint_t offset, const char *str);\nsize_t cherokee_buffer_cnt_cspn (cherokee_buffer_t *buf, cuint_t offset, const char *str);\n\ncrc_t cherokee_buffer_crc32 (cherokee_buffer_t *buf);\nret_t cherokee_buffer_encode_base64 (cherokee_buffer_t *buf, cherokee_buffer_t *encoded);\nret_t cherokee_buffer_decode_base64 (cherokee_buffer_t *buf);\nret_t cherokee_buffer_encode_md5 (cherokee_buffer_t *buf, cherokee_buffer_t *encoded);\nret_t cherokee_buffer_encode_md5_digest (cherokee_buffer_t *buf);\nret_t cherokee_buffer_encode_sha1 (cherokee_buffer_t *buf, cherokee_buffer_t *encoded);\nret_t cherokee_buffer_encode_sha1_digest (cherokee_buffer_t *buf);\nret_t cherokee_buffer_encode_sha1_base64 (cherokee_buffer_t *buf, cherokee_buffer_t *encoded);\nret_t cherokee_buffer_encode_sha512 (cherokee_buffer_t *buf, cherokee_buffer_t *encoded);\nret_t cherokee_buffer_encode_sha512_digest (cherokee_buffer_t *buf);\nret_t cherokee_buffer_encode_sha512_base64 (cherokee_buffer_t *buf, cherokee_buffer_t *encoded);\nret_t cherokee_buffer_encode_hex (cherokee_buffer_t *buf, cherokee_buffer_t *encoded);\nret_t cherokee_buffer_decode_hex (cherokee_buffer_t *buf);\nret_t cherokee_buffer_unescape_uri (cherokee_buffer_t *buf);\nret_t cherokee_buffer_escape_uri (cherokee_buffer_t *buf, cherokee_buffer_t *src);\nret_t cherokee_buffer_escape_uri_delims (cherokee_buffer_t *buf, cherokee_buffer_t *src);\nret_t cherokee_buffer_escape_arg (cherokee_buffer_t *buf, cherokee_buffer_t *src);\nret_t cherokee_buffer_add_escape_html (cherokee_buffer_t *buf, cherokee_buffer_t *src);\nret_t cherokee_buffer_escape_html (cherokee_buffer_t *buf, cherokee_buffer_t *src);\nret_t cherokee_buffer_add_comma_marks (cherokee_buffer_t *buf);\n\nret_t cherokee_buffer_to_lowcase (cherokee_buffer_t *buf);\nret_t cherokee_buffer_split_lines (cherokee_buffer_t *buf, int columns, const char *indent);\n\nret_t cherokee_buffer_print_debug (cherokee_buffer_t *buf, int length);\n\n\n\n// # 34 \"../cherokee/logger.h\" 2\n// # 1 \"../cherokee/module.h\" 1\n// # 32 \"../cherokee/module.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/module.h\" 2\n// # 1 \"../cherokee/plugin.h\" 1\n// # 32 \"../cherokee/plugin.h\"\n// # 1 \"../cherokee/http.h\" 1\n// # 32 \"../cherokee/http.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/http.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"../cherokee/http.h\" 2\n\n\n\n\ntypedef enum {\n http_version_09,\n http_version_10,\n http_version_11,\n http_version_unknown\n} cherokee_http_version_t;\n\ntypedef enum {\n http_unknown = 0LL,\n http_all_methods = 0x1FFFFFFFFLL,\n\n http_get = 1,\n http_post = 1LL << 1,\n http_head = 1LL << 2,\n http_put = 1LL << 3,\n http_options = 1LL << 4,\n http_delete = 1LL << 5,\n http_trace = 1LL << 6,\n http_connect = 1LL << 7,\n\n http_copy = 1LL << 8,\n http_lock = 1LL << 9,\n http_mkcol = 1LL << 10,\n http_move = 1LL << 11,\n http_notify = 1LL << 12,\n http_poll = 1LL << 13,\n http_propfind = 1LL << 14,\n http_proppatch = 1LL << 15,\n http_search = 1LL << 16,\n http_subscribe = 1LL << 17,\n http_unlock = 1LL << 18,\n http_unsubscribe = 1LL << 19,\n http_report = 1LL << 20,\n http_patch = 1LL << 21,\n http_version_control = 1LL << 22,\n http_checkout = 1LL << 23,\n http_uncheckout = 1LL << 24,\n http_checkin = 1LL << 25,\n http_update = 1LL << 26,\n http_label = 1LL << 27,\n http_mkworkspace = 1LL << 28,\n http_mkactivity = 1LL << 29,\n http_baseline_control = 1LL << 30,\n http_merge = 1LL << 31,\n http_invalid = 1LL << 32,\n http_purge = 1LL << 33\n} cherokee_http_method_t;\n\n\n\n\n\ntypedef enum {\n http_auth_nothing = 0,\n http_auth_basic = 1,\n http_auth_digest = 1 << 1\n} cherokee_http_auth_t;\n\ntypedef enum {\n http_upgrade_nothing,\n http_upgrade_http11,\n http_upgrade_tls10\n} cherokee_http_upgrade_t;\n\ntypedef enum {\n http_unset = 0,\n http_continue = 100,\n http_switching_protocols = 101,\n http_processing = 102,\n http_ok = 200,\n http_created = 201,\n http_accepted = 202,\n http_non_authoritative_info = 203,\n http_no_content = 204,\n http_reset_content = 205,\n http_partial_content = 206,\n http_multi_status = 207,\n http_im_used = 226,\n http_multiple_choices = 300,\n http_moved_permanently = 301,\n http_moved_temporarily = 302,\n  http_see_other = 303,\n http_not_modified = 304,\n http_use_proxy = 305,\n http_temporary_redirect = 307,\n http_bad_request = 400,\n http_unauthorized = 401,\n http_payment_required = 402,\n http_access_denied = 403,\n http_not_found = 404,\n http_method_not_allowed = 405,\n http_not_acceptable = 406,\n http_proxy_auth_required = 407,\n http_request_timeout = 408,\n http_conflict = 409,\n http_gone = 410,\n http_length_required = 411,\n http_precondition_failed = 412,\n  http_request_entity_too_large = 413,\n http_request_uri_too_long = 414,\n http_unsupported_media_type = 415,\n http_range_not_satisfiable = 416,\n http_expectation_failed = 417,\n http_unprocessable_entity = 422,\n http_locked = 423,\n http_failed_dependency = 424,\n http_unordered_collection = 425,\n http_upgrade_required = 426,\n http_retry_with = 449,\n http_internal_error = 500,\n http_not_implemented = 501,\n http_bad_gateway = 502,\n http_service_unavailable = 503,\n http_gateway_timeout = 504,\n http_version_not_supported = 505,\n http_variant_also_negotiates = 506,\n http_insufficient_storage = 507,\n http_bandwidth_limit_exceeded = 509,\n http_not_extended = 510\n} cherokee_http_t;\n// # 249 \"../cherokee/http.h\"\nret_t cherokee_http_method_to_string (cherokee_http_method_t method, const char **str, cuint_t *str_len);\nret_t cherokee_http_string_to_method (cherokee_buffer_t *string, cherokee_http_method_t *method);\nret_t cherokee_http_version_to_string (cherokee_http_version_t version, const char **str, cuint_t *str_len);\nret_t cherokee_http_code_to_string (cherokee_http_t code, const char **str);\nret_t cherokee_http_code_copy (cherokee_http_t code, cherokee_buffer_t *buf);\n\n\n// # 33 \"../cherokee/plugin.h\" 2\n\n\n\n\n\n\ntypedef enum {\n cherokee_generic = 1,\n cherokee_logger = 1 << 1,\n cherokee_handler = 1 << 2,\n cherokee_encoder = 1 << 3,\n cherokee_validator = 1 << 4,\n cherokee_balancer = 1 << 5,\n cherokee_rule = 1 << 6,\n cherokee_vrule = 1 << 7,\n cherokee_cryptor = 1 << 8,\n cherokee_collector = 1 << 9\n} cherokee_plugin_type_t;\n\n\n\n\ntypedef struct {\n cherokee_plugin_type_t type;\n void *instance;\n void *configure;\n const char *name;\n} cherokee_plugin_info_t;\n\n\n\n\n\n\ntypedef struct {\n cherokee_plugin_info_t plugin;\n cherokee_http_method_t valid_methods;\n} cherokee_plugin_info_handler_t;\n\ntypedef struct {\n cherokee_plugin_info_t plugin;\n cherokee_http_auth_t valid_methods;\n} cherokee_plugin_info_validator_t;\n// # 153 \"../cherokee/plugin.h\"\n\n// # 34 \"../cherokee/module.h\" 2\n// # 1 \"../cherokee/config_node.h\" 1\n// # 32 \"../cherokee/config_node.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/config_node.h\" 2\n// # 1 \"../cherokee/list.h\" 1\n// # 32 \"../cherokee/list.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/list.h\" 2\n\n\n\n\nstruct list_entry {\n struct list_entry *next;\n struct list_entry *prev;\n};\n\ntypedef struct list_entry cherokee_list_t;\ntypedef struct list_entry cherokee_list_entry_t;\n// # 67 \"../cherokee/list.h\"\nstatic inline int\ncherokee_list_empty (cherokee_list_t *list)\n{\n return (list->next == list);\n}\n\nstatic inline void\ncherokee_list_add (cherokee_list_t *new_entry, cherokee_list_t *head)\n{\n new_entry->next = head->next;\n new_entry->prev = head;\n head->next->prev = new_entry;\n head->next = new_entry;\n}\n\nstatic inline void\ncherokee_list_add_tail (cherokee_list_t *new_entry, cherokee_list_t *head)\n{\n new_entry->next = head;\n new_entry->prev = head->prev;\n head->prev->next = new_entry;\n head->prev = new_entry;\n}\n\nstatic inline void\ncherokee_list_del (cherokee_list_t *entry)\n{\n entry->next->prev = entry->prev;\n entry->prev->next = entry->next;\n}\n\nstatic inline void\ncherokee_list_reparent (cherokee_list_t *list, cherokee_list_t *new_entry)\n{\n if (cherokee_list_empty(list))\n  return;\n\n new_entry->next = list->next;\n new_entry->prev = list->prev;\n new_entry->prev->next = new_entry;\n new_entry->next->prev = new_entry;\n}\n\nvoid cherokee_list_sort (cherokee_list_t *head, int (*cmp)(cherokee_list_t *a, cherokee_list_t *b));\nret_t cherokee_list_get_len (cherokee_list_t *head, size_t *len);\n\n\n\n\n\ntypedef void (*cherokee_list_free_func) (void *);\n\ntypedef struct {\n cherokee_list_entry_t list;\n void *info;\n} cherokee_list_item_t;\n\n\n\n\nret_t cherokee_list_add_content (cherokee_list_t *head, void *item);\nret_t cherokee_list_add_tail_content (cherokee_list_t *head, void *item);\nret_t cherokee_list_invert (cherokee_list_t *head);\n\nret_t cherokee_list_content_free (cherokee_list_t *head, cherokee_list_free_func free_func);\nret_t cherokee_list_content_free_item (cherokee_list_t *head, cherokee_list_free_func free_func);\nret_t cherokee_list_content_free_item_simple (cherokee_list_t *head);\n\n\n\n// # 34 \"../cherokee/config_node.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 35 \"../cherokee/config_node.h\" 2\n\n\n\ntypedef struct {\n    cherokee_list_t entry;\n    cherokee_list_t child;\n\n    cherokee_buffer_t key;\n    cherokee_buffer_t val;\n} cherokee_config_node_t;\n\n\n\n\n\n\ntypedef ret_t (* cherokee_config_node_while_func_t) (cherokee_config_node_t *, void *);\ntypedef ret_t (* cherokee_config_node_list_func_t) (char *, void *);\n\nret_t cherokee_config_node_new (cherokee_config_node_t **conf);\nret_t cherokee_config_node_free (cherokee_config_node_t *conf);\nret_t cherokee_config_node_init (cherokee_config_node_t *conf);\nret_t cherokee_config_node_mrproper (cherokee_config_node_t *conf);\n\nret_t cherokee_config_node_add (cherokee_config_node_t *conf, const char *key, cherokee_buffer_t *val);\nret_t cherokee_config_node_add_buf (cherokee_config_node_t *conf, cherokee_buffer_t *key, cherokee_buffer_t *val);\n\nret_t cherokee_config_node_get (cherokee_config_node_t *conf, const char *key, cherokee_config_node_t **entry);\nret_t cherokee_config_node_get_buf (cherokee_config_node_t *conf, cherokee_buffer_t *key, cherokee_config_node_t **entry);\n\nret_t cherokee_config_node_while (cherokee_config_node_t *conf, cherokee_config_node_while_func_t func, void *data);\n\n\n\nret_t cherokee_config_node_read (cherokee_config_node_t *conf, const char *key, cherokee_buffer_t **buf);\nret_t cherokee_config_node_copy (cherokee_config_node_t *conf, const char *key, cherokee_buffer_t *buf);\n\nret_t cherokee_config_node_read_path (cherokee_config_node_t *conf, const char *key, cherokee_buffer_t **buf);\nret_t cherokee_config_node_read_int (cherokee_config_node_t *conf, const char *key, int *num);\nret_t cherokee_config_node_read_long (cherokee_config_node_t *conf, const char *key, long *num);\nret_t cherokee_config_node_read_bool (cherokee_config_node_t *conf, const char *key, cherokee_boolean_t *val);\nret_t cherokee_config_node_read_list (cherokee_config_node_t *conf, const char *key,\n           cherokee_config_node_list_func_t func, void *param);\n\nret_t cherokee_config_node_convert_list (cherokee_config_node_t *conf, const char *key, cherokee_list_t *list);\n\n\n// # 35 \"../cherokee/module.h\" 2\n// # 1 \"../cherokee/server.h\" 1\n// # 32 \"../cherokee/server.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/server.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"../cherokee/server.h\" 2\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 35 \"../cherokee/server.h\" 2\n\n\n\n\ntypedef struct cherokee_server cherokee_server_t;\n\n\nret_t cherokee_server_new (cherokee_server_t **srv);\nret_t cherokee_server_free (cherokee_server_t *srv);\nret_t cherokee_server_clean (cherokee_server_t *srv);\n\nret_t cherokee_server_initialize (cherokee_server_t *srv);\nret_t cherokee_server_step (cherokee_server_t *srv);\nret_t cherokee_server_stop (cherokee_server_t *srv);\n\nvoid cherokee_server_set_min_latency (cherokee_server_t *srv, int msecs);\nret_t cherokee_server_unlock_threads (cherokee_server_t *srv);\n\nret_t cherokee_server_read_config_file (cherokee_server_t *srv, const char *filename);\nret_t cherokee_server_read_config_string (cherokee_server_t *srv, cherokee_buffer_t *string);\n\nret_t cherokee_server_daemonize (cherokee_server_t *srv);\nret_t cherokee_server_write_pidfile (cherokee_server_t *srv);\n\nret_t cherokee_server_get_conns_num (cherokee_server_t *srv, cuint_t *num);\nret_t cherokee_server_get_active_conns (cherokee_server_t *srv, cuint_t *num);\nret_t cherokee_server_get_reusable_conns (cherokee_server_t *srv, cuint_t *num);\n\nret_t cherokee_server_set_backup_mode (cherokee_server_t *srv, cherokee_boolean_t active);\nret_t cherokee_server_get_backup_mode (cherokee_server_t *srv, cherokee_boolean_t *active);\nret_t cherokee_server_log_reopen (cherokee_server_t *srv);\n\n\n\nret_t cherokee_server_handle_HUP (cherokee_server_t *srv);\nret_t cherokee_server_handle_TERM (cherokee_server_t *srv);\nvoid cherokee_server_handle_panic (cherokee_server_t *srv);\n\n\n\n// # 36 \"../cherokee/module.h\" 2\n\n\n\n\n\ntypedef void * module_func_init_t;\ntypedef ret_t (* module_func_new_t) (void *);\ntypedef ret_t (* module_func_free_t) (void *);\ntypedef ret_t (* module_func_props_free_t) (void *);\ntypedef ret_t (* module_func_configure_t) (cherokee_config_node_t *conf, cherokee_server_t *srv, void **props);\n\n\n\n\ntypedef struct {\n module_func_props_free_t free;\n} cherokee_module_props_t;\n\n\n\n\n\n\n\ntypedef struct {\n cherokee_plugin_info_t *info;\n cherokee_module_props_t *props;\n\n module_func_new_t instance;\n void *init;\n module_func_free_t free;\n} cherokee_module_t;\n\n\n\n\n\n\nret_t cherokee_module_init_base (cherokee_module_t *module, cherokee_module_props_t *props, cherokee_plugin_info_t *info);\nret_t cherokee_module_get_name (cherokee_module_t *module, const char **name);\n\n\n\nret_t cherokee_module_props_init_base (cherokee_module_props_t *prop, module_func_props_free_t free_func);\nret_t cherokee_module_props_free_base (cherokee_module_props_t *prop);\nret_t cherokee_module_props_free (cherokee_module_props_t *prop);\n\n\n\n// # 35 \"../cherokee/logger.h\" 2\n// # 1 \"../cherokee/logger_writer.h\" 1\n// # 32 \"../cherokee/logger_writer.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/logger_writer.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"../cherokee/logger_writer.h\" 2\n// # 1 \"../cherokee/config_node.h\" 1\n// # 35 \"../cherokee/logger_writer.h\" 2\n\n\n\n\n\ntypedef enum {\n cherokee_logger_writer_stderr,\n cherokee_logger_writer_file,\n cherokee_logger_writer_syslog,\n cherokee_logger_writer_pipe\n} cherokee_logger_writer_types_t;\n\ntypedef struct {\n cherokee_list_t listed;\n cherokee_logger_writer_types_t type;\n\n int fd;\n size_t max_bufsize;\n cherokee_buffer_t buffer;\n\n cherokee_buffer_t filename;\n cherokee_buffer_t command;\n\n cherokee_boolean_t initialized;\n\n void *priv;\n} cherokee_logger_writer_t;\n\n\n\nret_t cherokee_logger_writer_new (cherokee_logger_writer_t **writer);\nret_t cherokee_logger_writer_new_stderr (cherokee_logger_writer_t **writer);\nret_t cherokee_logger_writer_free (cherokee_logger_writer_t *writer);\n\nret_t cherokee_logger_writer_configure (cherokee_logger_writer_t *writer, cherokee_config_node_t *conf);\n\nret_t cherokee_logger_writer_open (cherokee_logger_writer_t *writer);\nret_t cherokee_logger_writer_reopen (cherokee_logger_writer_t *writer);\nret_t cherokee_logger_writer_flush (cherokee_logger_writer_t *writer, cherokee_boolean_t locked);\n\nret_t cherokee_logger_writer_get_buf (cherokee_logger_writer_t *writer, cherokee_buffer_t **buf);\nret_t cherokee_logger_writer_release_buf (cherokee_logger_writer_t *writer);\n\n\nret_t cherokee_logger_writer_get_id (cherokee_config_node_t *conf, cherokee_buffer_t *id);\n\n\n// # 36 \"../cherokee/logger.h\" 2\n\n\n\n\n\n\ntypedef ret_t (* logger_func_new_t) (void **logger, void *vsrv, cherokee_config_node_t *config);\ntypedef ret_t (* logger_func_init_t) (void *logger);\ntypedef ret_t (* logger_func_free_t) (void *logger);\ntypedef ret_t (* logger_func_flush_t) (void *logger);\ntypedef ret_t (* logger_func_reopen_t) (void *logger);\ntypedef ret_t (* logger_func_write_access_t) (void *logger, void *conn);\n\n\ntypedef struct {\n cherokee_module_t module;\n struct cherokee_logger_private *priv;\n cherokee_boolean_t utc_time;\n\n\n\n logger_func_flush_t flush;\n logger_func_reopen_t reopen;\n logger_func_write_access_t write_access;\n} cherokee_logger_t;\n// # 79 \"../cherokee/logger.h\"\nret_t cherokee_logger_init_base (cherokee_logger_t *logger,\n           cherokee_plugin_info_t *info,\n           cherokee_config_node_t *config);\n\n\n\nret_t cherokee_logger_init (cherokee_logger_t *logger);\nret_t cherokee_logger_free (cherokee_logger_t *logger);\n\nret_t cherokee_logger_reopen (cherokee_logger_t *logger);\nret_t cherokee_logger_flush (cherokee_logger_t *logger);\nret_t cherokee_logger_write_access (cherokee_logger_t *logger, void *conn);\n\nret_t cherokee_logger_set_backup_mode (cherokee_logger_t *logger, cherokee_boolean_t active);\nret_t cherokee_logger_get_backup_mode (cherokee_logger_t *logger, cherokee_boolean_t *active);\n\n\n// # 34 \"error_log.h\" 2\n// # 1 \"../cherokee/errors_defs.h\" 1\n// # 35 \"error_log.h\" 2\n\ntypedef enum {\n cherokee_err_warning,\n cherokee_err_error,\n cherokee_err_critical\n} cherokee_error_type_t;\n\ntypedef struct {\n int id;\n const char *title;\n const char *description;\n const char *admin_url;\n const char *debug;\n int show_backtrace;\n} cherokee_error_t;\n// # 74 \"error_log.h\"\nret_t cherokee_error_log (cherokee_error_type_t type,\n      const char *filename,\n      int line,\n      int error_num, ...);\n\nret_t cherokee_error_errno_log (int errnumber,\n      cherokee_error_type_t type,\n      const char *filename,\n      int line,\n      int error_num, ...);\n\nret_t cherokee_error_set_default (cherokee_logger_writer_t *writer);\n// # 39 \"common-internal.h\" 2\n// # 65 \"common-internal.h\"\n// # 1 \"/usr/include/fcntl.h\" 1 3 4\n// # 30 \"/usr/include/fcntl.h\" 3 4\n\n\n\n\n// # 1 \"/usr/include/bits/fcntl.h\" 1 3 4\n// # 25 \"/usr/include/bits/fcntl.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 26 \"/usr/include/bits/fcntl.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/uio.h\" 1 3 4\n// # 44 \"/usr/include/bits/uio.h\" 3 4\nstruct iovec\n  {\n    void *iov_base;\n    size_t iov_len;\n  };\n// # 28 \"/usr/include/bits/fcntl.h\" 2 3 4\n// # 155 \"/usr/include/bits/fcntl.h\" 3 4\nstruct flock\n  {\n    short int l_type;\n    short int l_whence;\n\n    __off_t l_start;\n    __off_t l_len;\n\n\n\n\n    __pid_t l_pid;\n  };\n\n\nstruct flock64\n  {\n    short int l_type;\n    short int l_whence;\n    __off64_t l_start;\n    __off64_t l_len;\n    __pid_t l_pid;\n  };\n// # 222 \"/usr/include/bits/fcntl.h\" 3 4\n\n\n\n\n\nextern ssize_t readahead (int __fd, __off64_t __offset, size_t __count)\n    __attribute__ ((__nothrow__));\n\n\n\nextern int sync_file_range (int __fd, __off64_t __from, __off64_t __to,\n       unsigned int __flags);\n\n\n\nextern int vmsplice (int __fdout, const struct iovec *__iov, size_t __count,\n       unsigned int __flags);\n\n\nextern int splice (int __fdin, __off64_t *__offin, int __fdout,\n     __off64_t *__offout, size_t __len, unsigned int __flags)\n    __attribute__ ((__nothrow__));\n\n\nextern int tee (int __fdin, int __fdout, size_t __len, unsigned int __flags)\n    __attribute__ ((__nothrow__));\n\n\n\n\n// # 35 \"/usr/include/fcntl.h\" 2 3 4\n\n\n\n// # 1 \"/usr/include/sys/stat.h\" 1 3 4\n// # 103 \"/usr/include/sys/stat.h\" 3 4\n\n\n// # 1 \"/usr/include/bits/stat.h\" 1 3 4\n// # 43 \"/usr/include/bits/stat.h\" 3 4\nstruct stat\n  {\n    __dev_t st_dev;\n\n\n\n\n    __ino_t st_ino;\n\n\n\n\n\n\n\n    __nlink_t st_nlink;\n    __mode_t st_mode;\n\n    __uid_t st_uid;\n    __gid_t st_gid;\n\n    int pad0;\n\n    __dev_t st_rdev;\n\n\n\n\n    __off_t st_size;\n\n\n\n    __blksize_t st_blksize;\n\n    __blkcnt_t st_blocks;\n// # 88 \"/usr/include/bits/stat.h\" 3 4\n    struct timespec st_atim;\n    struct timespec st_mtim;\n    struct timespec st_ctim;\n// # 103 \"/usr/include/bits/stat.h\" 3 4\n    long int __unused[3];\n// # 112 \"/usr/include/bits/stat.h\" 3 4\n  };\n\n\n\nstruct stat64\n  {\n    __dev_t st_dev;\n\n    __ino64_t st_ino;\n    __nlink_t st_nlink;\n    __mode_t st_mode;\n\n\n\n\n\n\n    __uid_t st_uid;\n    __gid_t st_gid;\n\n    int pad0;\n    __dev_t st_rdev;\n    __off_t st_size;\n\n\n\n\n\n    __blksize_t st_blksize;\n    __blkcnt64_t st_blocks;\n\n\n\n\n\n\n\n    struct timespec st_atim;\n    struct timespec st_mtim;\n    struct timespec st_ctim;\n// # 164 \"/usr/include/bits/stat.h\" 3 4\n    long int __unused[3];\n\n\n\n  };\n// # 106 \"/usr/include/sys/stat.h\" 2 3 4\n// # 207 \"/usr/include/sys/stat.h\" 3 4\nextern int stat (__const char *__restrict __file,\n   struct stat *__restrict __buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern int fstat (int __fd, struct stat *__buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n// # 226 \"/usr/include/sys/stat.h\" 3 4\nextern int stat64 (__const char *__restrict __file,\n     struct stat64 *__restrict __buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern int fstat64 (int __fd, struct stat64 *__buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\n\n\n\nextern int fstatat (int __fd, __const char *__restrict __file,\n      struct stat *__restrict __buf, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n// # 250 \"/usr/include/sys/stat.h\" 3 4\nextern int fstatat64 (int __fd, __const char *__restrict __file,\n        struct stat64 *__restrict __buf, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n\n\n\n\n\n\nextern int lstat (__const char *__restrict __file,\n    struct stat *__restrict __buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n// # 272 \"/usr/include/sys/stat.h\" 3 4\nextern int lstat64 (__const char *__restrict __file,\n      struct stat64 *__restrict __buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern int chmod (__const char *__file, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int lchmod (__const char *__file, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int fchmod (int __fd, __mode_t __mode) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int fchmodat (int __fd, __const char *__file, __mode_t mode, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;\n\n\n\n\n\n\nextern __mode_t umask (__mode_t __mask) __attribute__ ((__nothrow__));\n\n\n\n\nextern __mode_t getumask (void) __attribute__ ((__nothrow__));\n\n\n\nextern int mkdir (__const char *__path, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int mkdirat (int __fd, __const char *__path, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\n\n\nextern int mknod (__const char *__path, __mode_t __mode, __dev_t __dev)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int mknodat (int __fd, __const char *__path, __mode_t __mode,\n      __dev_t __dev) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\nextern int mkfifo (__const char *__path, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int mkfifoat (int __fd, __const char *__path, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n// # 380 \"/usr/include/sys/stat.h\" 3 4\nextern int __fxstat (int __ver, int __fildes, struct stat *__stat_buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));\nextern int __xstat (int __ver, __const char *__filename,\n      struct stat *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\nextern int __lxstat (int __ver, __const char *__filename,\n       struct stat *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\nextern int __fxstatat (int __ver, int __fildes, __const char *__filename,\n         struct stat *__stat_buf, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4)));\n// # 413 \"/usr/include/sys/stat.h\" 3 4\nextern int __fxstat64 (int __ver, int __fildes, struct stat64 *__stat_buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));\nextern int __xstat64 (int __ver, __const char *__filename,\n        struct stat64 *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\nextern int __lxstat64 (int __ver, __const char *__filename,\n         struct stat64 *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\nextern int __fxstatat64 (int __ver, int __fildes, __const char *__filename,\n    struct stat64 *__stat_buf, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4)));\n\nextern int __xmknod (int __ver, __const char *__path, __mode_t __mode,\n       __dev_t *__dev) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n\nextern int __xmknodat (int __ver, int __fd, __const char *__path,\n         __mode_t __mode, __dev_t *__dev)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 5)));\n\n\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) stat (__const char *__path, struct stat *__statbuf)\n{\n  return __xstat (1, __path, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) lstat (__const char *__path, struct stat *__statbuf)\n{\n  return __lxstat (1, __path, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) fstat (int __fd, struct stat *__statbuf)\n{\n  return __fxstat (1, __fd, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) fstatat (int __fd, __const char *__filename, struct stat *__statbuf, int __flag)\n\n{\n  return __fxstatat (1, __fd, __filename, __statbuf, __flag);\n}\n\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) mknod (__const char *__path, __mode_t __mode, __dev_t __dev)\n{\n  return __xmknod (0, __path, __mode, &__dev);\n}\n\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) mknodat (int __fd, __const char *__path, __mode_t __mode, __dev_t __dev)\n\n{\n  return __xmknodat (0, __fd, __path, __mode, &__dev);\n}\n\n\n\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) stat64 (__const char *__path, struct stat64 *__statbuf)\n{\n  return __xstat64 (1, __path, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) lstat64 (__const char *__path, struct stat64 *__statbuf)\n{\n  return __lxstat64 (1, __path, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) fstat64 (int __fd, struct stat64 *__statbuf)\n{\n  return __fxstat64 (1, __fd, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) fstatat64 (int __fd, __const char *__filename, struct stat64 *__statbuf, int __flag)\n\n{\n  return __fxstatat64 (1, __fd, __filename, __statbuf, __flag);\n}\n\n\n\n\n\n\n\n// # 39 \"/usr/include/fcntl.h\" 2 3 4\n// # 76 \"/usr/include/fcntl.h\" 3 4\nextern int fcntl (int __fd, int __cmd, ...);\n// # 85 \"/usr/include/fcntl.h\" 3 4\nextern int open (__const char *__file, int __oflag, ...) __attribute__ ((__nonnull__ (1)));\n// # 95 \"/usr/include/fcntl.h\" 3 4\nextern int open64 (__const char *__file, int __oflag, ...) __attribute__ ((__nonnull__ (1)));\n// # 109 \"/usr/include/fcntl.h\" 3 4\nextern int openat (int __fd, __const char *__file, int __oflag, ...)\n     __attribute__ ((__nonnull__ (2)));\n// # 120 \"/usr/include/fcntl.h\" 3 4\nextern int openat64 (int __fd, __const char *__file, int __oflag, ...)\n     __attribute__ ((__nonnull__ (2)));\n// # 130 \"/usr/include/fcntl.h\" 3 4\nextern int creat (__const char *__file, __mode_t __mode) __attribute__ ((__nonnull__ (1)));\n// # 140 \"/usr/include/fcntl.h\" 3 4\nextern int creat64 (__const char *__file, __mode_t __mode) __attribute__ ((__nonnull__ (1)));\n// # 159 \"/usr/include/fcntl.h\" 3 4\nextern int lockf (int __fd, int __cmd, __off_t __len);\n// # 168 \"/usr/include/fcntl.h\" 3 4\nextern int lockf64 (int __fd, int __cmd, __off64_t __len);\n\n\n\n\n\n\n\nextern int posix_fadvise (int __fd, __off_t __offset, __off_t __len,\n     int __advise) __attribute__ ((__nothrow__));\n// # 188 \"/usr/include/fcntl.h\" 3 4\nextern int posix_fadvise64 (int __fd, __off64_t __offset, __off64_t __len,\n       int __advise) __attribute__ ((__nothrow__));\n// # 198 \"/usr/include/fcntl.h\" 3 4\nextern int posix_fallocate (int __fd, __off_t __offset, __off_t __len);\n// # 209 \"/usr/include/fcntl.h\" 3 4\nextern int posix_fallocate64 (int __fd, __off64_t __offset, __off64_t __len);\n\n\n\n\n// # 66 \"common-internal.h\" 2\n\n\n\n\n\n\n\n// # 1 \"/usr/include/dlfcn.h\" 1 3 4\n// # 26 \"/usr/include/dlfcn.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 27 \"/usr/include/dlfcn.h\" 2 3 4\n\n\n// # 1 \"/usr/include/bits/dlfcn.h\" 1 3 4\n// # 58 \"/usr/include/bits/dlfcn.h\" 3 4\n\n\n\nextern void _dl_mcount_wrapper_check (void *__selfpc) __attribute__ ((__nothrow__));\n\n\n// # 30 \"/usr/include/dlfcn.h\" 2 3 4\n// # 46 \"/usr/include/dlfcn.h\" 3 4\ntypedef long int Lmid_t;\n\n\n\n\n\n\n\n\n\n\n\nextern void *dlopen (__const char *__file, int __mode) __attribute__ ((__nothrow__));\n\n\n\nextern int dlclose (void *__handle) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern void *dlsym (void *__restrict __handle,\n      __const char *__restrict __name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\nextern void *dlmopen (Lmid_t __nsid, __const char *__file, int __mode) __attribute__ ((__nothrow__));\n\n\n\nextern void *dlvsym (void *__restrict __handle,\n       __const char *__restrict __name,\n       __const char *__restrict __version)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n\n\n\n\n\nextern char *dlerror (void) __attribute__ ((__nothrow__));\n\n\n\n\n\ntypedef struct\n{\n  __const char *dli_fname;\n  void *dli_fbase;\n  __const char *dli_sname;\n  void *dli_saddr;\n} Dl_info;\n\n\n\nextern int dladdr (__const void *__address, Dl_info *__info)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\nextern int dladdr1 (__const void *__address, Dl_info *__info,\n      void **__extra_info, int __flags) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\nenum\n  {\n\n    RTLD_DL_SYMENT = 1,\n\n\n    RTLD_DL_LINKMAP = 2\n  };\n\n\n\n\n\n\n\nextern int dlinfo (void *__restrict __handle,\n     int __request, void *__restrict __arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));\n\n\nenum\n  {\n\n    RTLD_DI_LMID = 1,\n\n\n\n    RTLD_DI_LINKMAP = 2,\n\n    RTLD_DI_CONFIGADDR = 3,\n\n\n\n\n\n\n    RTLD_DI_SERINFO = 4,\n    RTLD_DI_SERINFOSIZE = 5,\n\n\n\n    RTLD_DI_ORIGIN = 6,\n\n    RTLD_DI_PROFILENAME = 7,\n    RTLD_DI_PROFILEOUT = 8,\n\n\n\n\n    RTLD_DI_TLS_MODID = 9,\n\n\n\n\n\n    RTLD_DI_TLS_DATA = 10,\n\n    RTLD_DI_MAX = 10\n  };\n\n\n\n\ntypedef struct\n{\n  char *dls_name;\n  unsigned int dls_flags;\n} Dl_serpath;\n\n\n\ntypedef struct\n{\n  size_t dls_size;\n  unsigned int dls_cnt;\n  Dl_serpath dls_serpath[1];\n} Dl_serinfo;\n\n\n\n\n// # 74 \"common-internal.h\" 2\n\n\n\n// # 1 \"/usr/include/inttypes.h\" 1 3 4\n// # 28 \"/usr/include/inttypes.h\" 3 4\n// # 1 \"/usr/include/stdint.h\" 1 3 4\n// # 28 \"/usr/include/stdint.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 29 \"/usr/include/stdint.h\" 2 3 4\n// # 49 \"/usr/include/stdint.h\" 3 4\ntypedef unsigned char uint8_t;\ntypedef unsigned short int uint16_t;\n\ntypedef unsigned int uint32_t;\n\n\n\ntypedef unsigned long int uint64_t;\n// # 66 \"/usr/include/stdint.h\" 3 4\ntypedef signed char int_least8_t;\ntypedef short int int_least16_t;\ntypedef int int_least32_t;\n\ntypedef long int int_least64_t;\n\n\n\n\n\n\ntypedef unsigned char uint_least8_t;\ntypedef unsigned short int uint_least16_t;\ntypedef unsigned int uint_least32_t;\n\ntypedef unsigned long int uint_least64_t;\n// # 91 \"/usr/include/stdint.h\" 3 4\ntypedef signed char int_fast8_t;\n\ntypedef long int int_fast16_t;\ntypedef long int int_fast32_t;\ntypedef long int int_fast64_t;\n// # 104 \"/usr/include/stdint.h\" 3 4\ntypedef unsigned char uint_fast8_t;\n\ntypedef unsigned long int uint_fast16_t;\ntypedef unsigned long int uint_fast32_t;\ntypedef unsigned long int uint_fast64_t;\n// # 120 \"/usr/include/stdint.h\" 3 4\ntypedef long int intptr_t;\n\n\ntypedef unsigned long int uintptr_t;\n// # 135 \"/usr/include/stdint.h\" 3 4\ntypedef long int intmax_t;\ntypedef unsigned long int uintmax_t;\n// # 29 \"/usr/include/inttypes.h\" 2 3 4\n\n\n\n\n\n\ntypedef int __gwchar_t;\n// # 274 \"/usr/include/inttypes.h\" 3 4\n\n\n\n\n\ntypedef struct\n  {\n    long int quot;\n    long int rem;\n  } imaxdiv_t;\n// # 298 \"/usr/include/inttypes.h\" 3 4\nextern intmax_t imaxabs (intmax_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\nextern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)\n      __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\nextern intmax_t strtoimax (__const char *__restrict __nptr,\n      char **__restrict __endptr, int __base) __attribute__ ((__nothrow__));\n\n\nextern uintmax_t strtoumax (__const char *__restrict __nptr,\n       char ** __restrict __endptr, int __base) __attribute__ ((__nothrow__));\n\n\nextern intmax_t wcstoimax (__const __gwchar_t *__restrict __nptr,\n      __gwchar_t **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__));\n\n\nextern uintmax_t wcstoumax (__const __gwchar_t *__restrict __nptr,\n       __gwchar_t ** __restrict __endptr, int __base)\n     __attribute__ ((__nothrow__));\n// # 459 \"/usr/include/inttypes.h\" 3 4\n\n// # 78 \"common-internal.h\" 2\n// # 93 \"common-internal.h\"\n// # 1 \"/usr/include/sys/ipc.h\" 1 3 4\n// # 29 \"/usr/include/sys/ipc.h\" 3 4\n// # 1 \"/usr/include/bits/ipctypes.h\" 1 3 4\n// # 33 \"/usr/include/bits/ipctypes.h\" 3 4\ntypedef int __ipc_pid_t;\n// # 30 \"/usr/include/sys/ipc.h\" 2 3 4\n// # 1 \"/usr/include/bits/ipc.h\" 1 3 4\n// # 43 \"/usr/include/bits/ipc.h\" 3 4\nstruct ipc_perm\n  {\n    __key_t __key;\n    __uid_t uid;\n    __gid_t gid;\n    __uid_t cuid;\n    __gid_t cgid;\n    unsigned short int mode;\n    unsigned short int __pad1;\n    unsigned short int __seq;\n    unsigned short int __pad2;\n    unsigned long int __unused1;\n    unsigned long int __unused2;\n  };\n// # 31 \"/usr/include/sys/ipc.h\" 2 3 4\n// # 52 \"/usr/include/sys/ipc.h\" 3 4\n\n\n\nextern key_t ftok (__const char *__pathname, int __proj_id) __attribute__ ((__nothrow__));\n\n\n// # 94 \"common-internal.h\" 2\n// # 1 \"/usr/include/sys/sem.h\" 1 3 4\n// # 25 \"/usr/include/sys/sem.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 26 \"/usr/include/sys/sem.h\" 2 3 4\n\n\n\n\n\n// # 1 \"/usr/include/bits/sem.h\" 1 3 4\n// # 39 \"/usr/include/bits/sem.h\" 3 4\nstruct semid_ds\n{\n  struct ipc_perm sem_perm;\n  __time_t sem_otime;\n  unsigned long int __unused1;\n  __time_t sem_ctime;\n  unsigned long int __unused2;\n  unsigned long int sem_nsems;\n  unsigned long int __unused3;\n  unsigned long int __unused4;\n};\n// # 73 \"/usr/include/bits/sem.h\" 3 4\nstruct seminfo\n{\n  int semmap;\n  int semmni;\n  int semmns;\n  int semmnu;\n  int semmsl;\n  int semopm;\n  int semume;\n  int semusz;\n  int semvmx;\n  int semaem;\n};\n// # 32 \"/usr/include/sys/sem.h\" 2 3 4\n// # 42 \"/usr/include/sys/sem.h\" 3 4\nstruct sembuf\n{\n  unsigned short int sem_num;\n  short int sem_op;\n  short int sem_flg;\n};\n\n\n\n\n\nextern int semctl (int __semid, int __semnum, int __cmd, ...) __attribute__ ((__nothrow__));\n\n\nextern int semget (key_t __key, int __nsems, int __semflg) __attribute__ ((__nothrow__));\n\n\nextern int semop (int __semid, struct sembuf *__sops, size_t __nsops) __attribute__ ((__nothrow__));\n\n\n\nextern int semtimedop (int __semid, struct sembuf *__sops, size_t __nsops,\n         __const struct timespec *__timeout) __attribute__ ((__nothrow__));\n\n\n\n// # 95 \"common-internal.h\" 2\n// # 26 \"init.c\" 2\n// # 1 \"init.h\" 1\n// # 32 \"init.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"init.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"init.h\" 2\n// # 1 \"../cherokee/nullable.h\" 1\n// # 33 \"../cherokee/nullable.h\"\n\n\ntypedef int cherokee_null_bool_t;\ntypedef int cherokee_null_int_t;\n// # 46 \"../cherokee/nullable.h\"\n\n// # 35 \"init.h\" 2\n\n\n\n\n\nret_t cherokee_init (void);\nret_t cherokee_mrproper (void);\n\n\n\nextern cuint_t cherokee_cacheline_size;\nextern cint_t cherokee_cpu_number;\nextern cuint_t cherokee_fdlimit;\nextern cherokee_buffer_t cherokee_tmp_dir;\n\nextern cherokee_boolean_t cherokee_admin_child;\nextern cherokee_null_bool_t cherokee_readable_errors;\n\n\n// # 27 \"init.c\" 2\n// # 1 \"cacheline.h\" 1\n// # 32 \"cacheline.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"cacheline.h\" 2\n\n\n\nret_t cherokee_cacheline_size_get (cuint_t *size);\n\n\n// # 28 \"init.c\" 2\n// # 1 \"trace.h\" 1\n// # 32 \"trace.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"trace.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"trace.h\" 2\n\n\n\nret_t cherokee_trace_init (void);\nret_t cherokee_trace_set_modules (cherokee_buffer_t *modules);\nvoid cherokee_trace_do_trace (const char *entry, const char *file, int line, const char *func, const char *fmt, ...);\nret_t cherokee_trace_get_trace (cherokee_buffer_t **buf_ref);\nint cherokee_trace_is_tracing (void);\n\n\n// # 29 \"init.c\" 2\n// # 1 \"ncpus.h\" 1\n// # 28 \"ncpus.h\"\nint dcc_ncpus (int *ncpus);\n// # 30 \"init.c\" 2\n// # 1 \"util.h\" 1\n// # 32 \"util.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"util.h\" 2\n// # 1 \"../cherokee/avl.h\" 1\n// # 32 \"../cherokee/avl.h\"\n// # 1 \"../cherokee/buffer.h\" 1\n// # 33 \"../cherokee/avl.h\" 2\n// # 1 \"../cherokee/avl_generic.h\" 1\n// # 32 \"../cherokee/avl_generic.h\"\n// # 1 \"../cherokee/buffer.h\" 1\n// # 33 \"../cherokee/avl_generic.h\" 2\n\n\n\n\n\n\n\ntypedef struct cherokee_avl_generic_node cherokee_avl_generic_node_t;\n\nstruct cherokee_avl_generic_node {\n short balance;\n struct cherokee_avl_generic_node *left;\n struct cherokee_avl_generic_node *right;\n cherokee_boolean_t left_child;\n cherokee_boolean_t right_child;\n void *value;\n};\n\n\n\nret_t cherokee_avl_generic_node_init (cherokee_avl_generic_node_t *node);\n\n\n\n\n\ntypedef struct cherokee_avl_generic cherokee_avl_generic_t;\n\ntypedef ret_t (*avl_gen_node_mrproper_t) (cherokee_avl_generic_node_t *);\ntypedef ret_t (*avl_gen_node_cmp_t) (cherokee_avl_generic_node_t *, cherokee_avl_generic_node_t *, cherokee_avl_generic_t *);\ntypedef ret_t (*avl_gen_node_is_empty_t) (cherokee_avl_generic_node_t *);\n\n\nstruct cherokee_avl_generic {\n cherokee_avl_generic_node_t *root;\n\n\n avl_gen_node_mrproper_t node_mrproper;\n avl_gen_node_cmp_t node_cmp;\n avl_gen_node_is_empty_t node_is_empty;\n};\n\n\n\nret_t cherokee_avl_generic_init (cherokee_avl_generic_t *avl);\n\n\n\n\ntypedef ret_t (* cherokee_avl_generic_while_func_t) (cherokee_avl_generic_node_t *key, void *value, void *param);\n\nret_t cherokee_avl_mrproper (cherokee_avl_generic_t *avl, cherokee_func_free_t free_func);\nret_t cherokee_avl_free (cherokee_avl_generic_t *avl, cherokee_func_free_t free_func);\nret_t cherokee_avl_check (cherokee_avl_generic_t *avl);\nret_t cherokee_avl_len (cherokee_avl_generic_t *avl, size_t *len);\nint cherokee_avl_is_empty (cherokee_avl_generic_t *avl);\n\nret_t cherokee_avl_generic_add (cherokee_avl_generic_t *avl, cherokee_avl_generic_node_t *key, void *value);\nret_t cherokee_avl_generic_del (cherokee_avl_generic_t *avl, cherokee_avl_generic_node_t *key, void **value);\nret_t cherokee_avl_generic_get (cherokee_avl_generic_t *avl, cherokee_avl_generic_node_t *key, void **value);\n\nret_t cherokee_avl_generic_while (cherokee_avl_generic_t *avl,\n      cherokee_avl_generic_while_func_t func,\n      void *param,\n      cherokee_avl_generic_node_t **key,\n      void **value);\n\n\n// # 34 \"../cherokee/avl.h\" 2\n\n\n\n\n\n\ntypedef struct {\n cherokee_avl_generic_node_t base;\n cherokee_buffer_t key;\n} cherokee_avl_node_t;\n\n\n\ntypedef struct {\n cherokee_avl_generic_t base;\n cherokee_boolean_t case_insensitive;\n} cherokee_avl_t;\n\n\n\n\n\n\nret_t cherokee_avl_init (cherokee_avl_t *avl);\nret_t cherokee_avl_new (cherokee_avl_t **avl);\nret_t cherokee_avl_set_case (cherokee_avl_t *avl, cherokee_boolean_t case_insensitive);\n\nret_t cherokee_avl_add (cherokee_avl_t *avl, cherokee_buffer_t *key, void *value);\nret_t cherokee_avl_del (cherokee_avl_t *avl, cherokee_buffer_t *key, void **value);\nret_t cherokee_avl_get (cherokee_avl_t *avl, cherokee_buffer_t *key, void **value);\n\nret_t cherokee_avl_add_ptr (cherokee_avl_t *avl, const char *key, void *value);\nret_t cherokee_avl_del_ptr (cherokee_avl_t *avl, const char *key, void **value);\nret_t cherokee_avl_get_ptr (cherokee_avl_t *avl, const char *key, void **value);\n\n\ntypedef ret_t (* cherokee_avl_while_func_t) (cherokee_buffer_t *key, void *value, void *param);\n\nret_t cherokee_avl_while (cherokee_avl_generic_t *avl,\n     cherokee_avl_while_func_t func,\n     void *param,\n     cherokee_buffer_t **key,\n     void **value);\n\n\n\n// # 34 \"util.h\" 2\n// # 1 \"../cherokee/trace.h\" 1\n// # 35 \"util.h\" 2\n// # 1 \"../cherokee/plugin_loader.h\" 1\n// # 32 \"../cherokee/plugin_loader.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/plugin_loader.h\" 2\n// # 1 \"../cherokee/module.h\" 1\n// # 34 \"../cherokee/plugin_loader.h\" 2\n// # 1 \"../cherokee/avl.h\" 1\n// # 35 \"../cherokee/plugin_loader.h\" 2\n// # 1 \"../cherokee/plugin.h\" 1\n// # 36 \"../cherokee/plugin_loader.h\" 2\n\n\n\ntypedef struct {\n cherokee_plugin_info_t *info;\n void *dlopen_ref;\n cherokee_boolean_t built_in;\n} cherokee_plugin_loader_entry_t;\n\ntypedef struct {\n cherokee_avl_t table;\n cherokee_buffer_t module_dir;\n cherokee_buffer_t deps_dir;\n} cherokee_plugin_loader_t;\n\n\n\n\n\nret_t cherokee_plugin_loader_init (cherokee_plugin_loader_t *loader);\nret_t cherokee_plugin_loader_mrproper (cherokee_plugin_loader_t *loader);\n\nret_t cherokee_plugin_loader_set_directory (cherokee_plugin_loader_t *loader, cherokee_buffer_t *dir);\nret_t cherokee_plugin_loader_set_deps_dir (cherokee_plugin_loader_t *loader, cherokee_buffer_t *dir);\nret_t cherokee_plugin_loader_load (cherokee_plugin_loader_t *loader, const char *modname);\nret_t cherokee_plugin_loader_load_no_global (cherokee_plugin_loader_t *loader, const char *modname);\nret_t cherokee_plugin_loader_unload (cherokee_plugin_loader_t *loader, const char *modname);\n\nret_t cherokee_plugin_loader_get (cherokee_plugin_loader_t *loader, const char *modname, cherokee_plugin_info_t **info);\nret_t cherokee_plugin_loader_get_info (cherokee_plugin_loader_t *loader, const char *modname, cherokee_plugin_info_t **info);\nret_t cherokee_plugin_loader_get_sym (cherokee_plugin_loader_t *loader, const char *modname, const char *name, void **sym);\n\nret_t cherokee_plugin_loader_get_mods_info (cherokee_plugin_loader_t *loader, cherokee_buffer_t *builtin);\n\n\n// # 36 \"util.h\" 2\n\n\n// # 1 \"/usr/include/netinet/in.h\" 1 3 4\n// # 24 \"/usr/include/netinet/in.h\" 3 4\n// # 1 \"/usr/include/sys/socket.h\" 1 3 4\n// # 25 \"/usr/include/sys/socket.h\" 3 4\n\n\n// # 1 \"/usr/include/sys/uio.h\" 1 3 4\n// # 26 \"/usr/include/sys/uio.h\" 3 4\n\n\n\n// # 1 \"/usr/include/bits/uio.h\" 1 3 4\n// # 30 \"/usr/include/sys/uio.h\" 2 3 4\n// # 40 \"/usr/include/sys/uio.h\" 3 4\nextern ssize_t readv (int __fd, __const struct iovec *__iovec, int __count);\n// # 50 \"/usr/include/sys/uio.h\" 3 4\nextern ssize_t writev (int __fd, __const struct iovec *__iovec, int __count);\n\n\n// # 28 \"/usr/include/sys/socket.h\" 2 3 4\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 30 \"/usr/include/sys/socket.h\" 2 3 4\n\n\n\n\n\n// # 1 \"/usr/include/bits/socket.h\" 1 3 4\n// # 29 \"/usr/include/bits/socket.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 30 \"/usr/include/bits/socket.h\" 2 3 4\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 1 3 4\n// # 32 \"/usr/include/bits/socket.h\" 2 3 4\n\n\n\n\ntypedef __socklen_t socklen_t;\n\n\n\n\nenum __socket_type\n{\n  SOCK_STREAM = 1,\n\n\n  SOCK_DGRAM = 2,\n\n\n  SOCK_RAW = 3,\n\n  SOCK_RDM = 4,\n\n  SOCK_SEQPACKET = 5,\n\n\n  SOCK_PACKET = 10\n\n\n\n};\n// # 142 \"/usr/include/bits/socket.h\" 3 4\n// # 1 \"/usr/include/bits/sockaddr.h\" 1 3 4\n// # 29 \"/usr/include/bits/sockaddr.h\" 3 4\ntypedef unsigned short int sa_family_t;\n// # 143 \"/usr/include/bits/socket.h\" 2 3 4\n\n\nstruct sockaddr\n  {\n    sa_family_t sa_family;\n    char sa_data[14];\n  };\n// # 162 \"/usr/include/bits/socket.h\" 3 4\nstruct sockaddr_storage\n  {\n    sa_family_t ss_family;\n    __uint64_t __ss_align;\n    char __ss_padding[(128 - (2 * sizeof (__uint64_t)))];\n  };\n\n\n\nenum\n  {\n    MSG_OOB = 0x01,\n\n    MSG_PEEK = 0x02,\n\n    MSG_DONTROUTE = 0x04,\n\n\n\n    MSG_TRYHARD = MSG_DONTROUTE,\n\n\n    MSG_CTRUNC = 0x08,\n\n    MSG_PROXY = 0x10,\n\n    MSG_TRUNC = 0x20,\n\n    MSG_DONTWAIT = 0x40,\n\n    MSG_EOR = 0x80,\n\n    MSG_WAITALL = 0x100,\n\n    MSG_FIN = 0x200,\n\n    MSG_SYN = 0x400,\n\n    MSG_CONFIRM = 0x800,\n\n    MSG_RST = 0x1000,\n\n    MSG_ERRQUEUE = 0x2000,\n\n    MSG_NOSIGNAL = 0x4000,\n\n    MSG_MORE = 0x8000\n\n  };\n\n\n\n\nstruct msghdr\n  {\n    void *msg_name;\n    socklen_t msg_namelen;\n\n    struct iovec *msg_iov;\n    size_t msg_iovlen;\n\n    void *msg_control;\n    size_t msg_controllen;\n\n\n\n\n    int msg_flags;\n  };\n\n\nstruct cmsghdr\n  {\n    size_t cmsg_len;\n\n\n\n\n    int cmsg_level;\n    int cmsg_type;\n\n    __extension__ unsigned char __cmsg_data [];\n\n  };\n// # 263 \"/usr/include/bits/socket.h\" 3 4\nextern struct cmsghdr *__cmsg_nxthdr (struct msghdr *__mhdr,\n          struct cmsghdr *__cmsg) __attribute__ ((__nothrow__));\n// # 290 \"/usr/include/bits/socket.h\" 3 4\nenum\n  {\n    SCM_RIGHTS = 0x01\n\n\n    , SCM_CREDENTIALS = 0x02\n\n\n  };\n\n\n\nstruct ucred\n{\n  pid_t pid;\n  uid_t uid;\n  gid_t gid;\n};\n\n\n// # 1 \"/usr/include/asm/socket.h\" 1 3 4\n\n\n\n\n// # 1 \"/usr/include/asm-x86_64/socket.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/asm/sockios.h\" 1 3 4\n\n\n\n\n// # 1 \"/usr/include/asm-x86_64/sockios.h\" 1 3 4\n// # 6 \"/usr/include/asm/sockios.h\" 2 3 4\n// # 5 \"/usr/include/asm-x86_64/socket.h\" 2 3 4\n// # 6 \"/usr/include/asm/socket.h\" 2 3 4\n// # 311 \"/usr/include/bits/socket.h\" 2 3 4\n\n\n\nstruct linger\n  {\n    int l_onoff;\n    int l_linger;\n  };\n// # 36 \"/usr/include/sys/socket.h\" 2 3 4\n\n\n\n\nstruct osockaddr\n  {\n    unsigned short int sa_family;\n    unsigned char sa_data[14];\n  };\n\n\n\n\nenum\n{\n  SHUT_RD = 0,\n\n  SHUT_WR,\n\n  SHUT_RDWR\n\n};\n// # 87 \"/usr/include/sys/socket.h\" 3 4\ntypedef union { struct sockaddr *__restrict __sockaddr__; struct sockaddr_at *__restrict __sockaddr_at__; struct sockaddr_ax25 *__restrict __sockaddr_ax25__; struct sockaddr_dl *__restrict __sockaddr_dl__; struct sockaddr_eon *__restrict __sockaddr_eon__; struct sockaddr_in *__restrict __sockaddr_in__; struct sockaddr_in6 *__restrict __sockaddr_in6__; struct sockaddr_inarp *__restrict __sockaddr_inarp__; struct sockaddr_ipx *__restrict __sockaddr_ipx__; struct sockaddr_iso *__restrict __sockaddr_iso__; struct sockaddr_ns *__restrict __sockaddr_ns__; struct sockaddr_un *__restrict __sockaddr_un__; struct sockaddr_x25 *__restrict __sockaddr_x25__;\n       } __SOCKADDR_ARG __attribute__ ((__transparent_union__));\n\n\ntypedef union { __const struct sockaddr *__restrict __sockaddr__; __const struct sockaddr_at *__restrict __sockaddr_at__; __const struct sockaddr_ax25 *__restrict __sockaddr_ax25__; __const struct sockaddr_dl *__restrict __sockaddr_dl__; __const struct sockaddr_eon *__restrict __sockaddr_eon__; __const struct sockaddr_in *__restrict __sockaddr_in__; __const struct sockaddr_in6 *__restrict __sockaddr_in6__; __const struct sockaddr_inarp *__restrict __sockaddr_inarp__; __const struct sockaddr_ipx *__restrict __sockaddr_ipx__; __const struct sockaddr_iso *__restrict __sockaddr_iso__; __const struct sockaddr_ns *__restrict __sockaddr_ns__; __const struct sockaddr_un *__restrict __sockaddr_un__; __const struct sockaddr_x25 *__restrict __sockaddr_x25__;\n       } __CONST_SOCKADDR_ARG __attribute__ ((__transparent_union__));\n\n\n\n\n\n\n\nextern int socket (int __domain, int __type, int __protocol) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int socketpair (int __domain, int __type, int __protocol,\n         int __fds[2]) __attribute__ ((__nothrow__));\n\n\nextern int bind (int __fd, __CONST_SOCKADDR_ARG __addr, socklen_t __len)\n     __attribute__ ((__nothrow__));\n\n\nextern int getsockname (int __fd, __SOCKADDR_ARG __addr,\n   socklen_t *__restrict __len) __attribute__ ((__nothrow__));\n// # 124 \"/usr/include/sys/socket.h\" 3 4\nextern int connect (int __fd, __CONST_SOCKADDR_ARG __addr, socklen_t __len);\n\n\n\nextern int getpeername (int __fd, __SOCKADDR_ARG __addr,\n   socklen_t *__restrict __len) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern ssize_t send (int __fd, __const void *__buf, size_t __n, int __flags);\n\n\n\n\n\n\nextern ssize_t recv (int __fd, void *__buf, size_t __n, int __flags);\n\n\n\n\n\n\nextern ssize_t sendto (int __fd, __const void *__buf, size_t __n,\n         int __flags, __CONST_SOCKADDR_ARG __addr,\n         socklen_t __addr_len);\n// # 161 \"/usr/include/sys/socket.h\" 3 4\nextern ssize_t recvfrom (int __fd, void *__restrict __buf, size_t __n,\n    int __flags, __SOCKADDR_ARG __addr,\n    socklen_t *__restrict __addr_len);\n\n\n\n\n\n\n\nextern ssize_t sendmsg (int __fd, __const struct msghdr *__message,\n   int __flags);\n\n\n\n\n\n\nextern ssize_t recvmsg (int __fd, struct msghdr *__message, int __flags);\n\n\n\n\n\nextern int getsockopt (int __fd, int __level, int __optname,\n         void *__restrict __optval,\n         socklen_t *__restrict __optlen) __attribute__ ((__nothrow__));\n\n\n\n\nextern int setsockopt (int __fd, int __level, int __optname,\n         __const void *__optval, socklen_t __optlen) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int listen (int __fd, int __n) __attribute__ ((__nothrow__));\n// # 209 \"/usr/include/sys/socket.h\" 3 4\nextern int accept (int __fd, __SOCKADDR_ARG __addr,\n     socklen_t *__restrict __addr_len);\n\n\n\n\n\n\n\nextern int shutdown (int __fd, int __how) __attribute__ ((__nothrow__));\n\n\n\n\nextern int sockatmark (int __fd) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern int isfdtype (int __fd, int __fdtype) __attribute__ ((__nothrow__));\n// # 240 \"/usr/include/sys/socket.h\" 3 4\n\n// # 25 \"/usr/include/netinet/in.h\" 2 3 4\n\n\n\n\n\n\nenum\n  {\n    IPPROTO_IP = 0,\n\n    IPPROTO_HOPOPTS = 0,\n\n    IPPROTO_ICMP = 1,\n\n    IPPROTO_IGMP = 2,\n\n    IPPROTO_IPIP = 4,\n\n    IPPROTO_TCP = 6,\n\n    IPPROTO_EGP = 8,\n\n    IPPROTO_PUP = 12,\n\n    IPPROTO_UDP = 17,\n\n    IPPROTO_IDP = 22,\n\n    IPPROTO_TP = 29,\n\n    IPPROTO_IPV6 = 41,\n\n    IPPROTO_ROUTING = 43,\n\n    IPPROTO_FRAGMENT = 44,\n\n    IPPROTO_RSVP = 46,\n\n    IPPROTO_GRE = 47,\n\n    IPPROTO_ESP = 50,\n\n    IPPROTO_AH = 51,\n\n    IPPROTO_ICMPV6 = 58,\n\n    IPPROTO_NONE = 59,\n\n    IPPROTO_DSTOPTS = 60,\n\n    IPPROTO_MTP = 92,\n\n    IPPROTO_ENCAP = 98,\n\n    IPPROTO_PIM = 103,\n\n    IPPROTO_COMP = 108,\n\n    IPPROTO_SCTP = 132,\n\n    IPPROTO_RAW = 255,\n\n    IPPROTO_MAX\n  };\n\n\n\ntypedef uint16_t in_port_t;\n\n\nenum\n  {\n    IPPORT_ECHO = 7,\n    IPPORT_DISCARD = 9,\n    IPPORT_SYSTAT = 11,\n    IPPORT_DAYTIME = 13,\n    IPPORT_NETSTAT = 15,\n    IPPORT_FTP = 21,\n    IPPORT_TELNET = 23,\n    IPPORT_SMTP = 25,\n    IPPORT_TIMESERVER = 37,\n    IPPORT_NAMESERVER = 42,\n    IPPORT_WHOIS = 43,\n    IPPORT_MTP = 57,\n\n    IPPORT_TFTP = 69,\n    IPPORT_RJE = 77,\n    IPPORT_FINGER = 79,\n    IPPORT_TTYLINK = 87,\n    IPPORT_SUPDUP = 95,\n\n\n    IPPORT_EXECSERVER = 512,\n    IPPORT_LOGINSERVER = 513,\n    IPPORT_CMDSERVER = 514,\n    IPPORT_EFSSERVER = 520,\n\n\n    IPPORT_BIFFUDP = 512,\n    IPPORT_WHOSERVER = 513,\n    IPPORT_ROUTESERVER = 520,\n\n\n    IPPORT_RESERVED = 1024,\n\n\n    IPPORT_USERRESERVED = 5000\n  };\n\n\n\ntypedef uint32_t in_addr_t;\nstruct in_addr\n  {\n    in_addr_t s_addr;\n  };\n// # 193 \"/usr/include/netinet/in.h\" 3 4\nstruct in6_addr\n  {\n    union\n      {\n uint8_t u6_addr8[16];\n uint16_t u6_addr16[8];\n uint32_t u6_addr32[4];\n      } in6_u;\n\n\n\n  };\n\nextern const struct in6_addr in6addr_any;\nextern const struct in6_addr in6addr_loopback;\n// # 219 \"/usr/include/netinet/in.h\" 3 4\nstruct sockaddr_in\n  {\n    sa_family_t sin_family;\n    in_port_t sin_port;\n    struct in_addr sin_addr;\n\n\n    unsigned char sin_zero[sizeof (struct sockaddr) -\n      (sizeof (unsigned short int)) -\n      sizeof (in_port_t) -\n      sizeof (struct in_addr)];\n  };\n\n\nstruct sockaddr_in6\n  {\n    sa_family_t sin6_family;\n    in_port_t sin6_port;\n    uint32_t sin6_flowinfo;\n    struct in6_addr sin6_addr;\n    uint32_t sin6_scope_id;\n  };\n\n\n\nstruct ip_mreq\n  {\n\n    struct in_addr imr_multiaddr;\n\n\n    struct in_addr imr_interface;\n  };\n\nstruct ip_mreq_source\n  {\n\n    struct in_addr imr_multiaddr;\n\n\n    struct in_addr imr_interface;\n\n\n    struct in_addr imr_sourceaddr;\n  };\n\n\nstruct ipv6_mreq\n  {\n\n    struct in6_addr ipv6mr_multiaddr;\n\n\n    unsigned int ipv6mr_interface;\n  };\n\n\n\nstruct group_req\n  {\n\n    uint32_t gr_interface;\n\n\n    struct sockaddr_storage gr_group;\n  };\n\nstruct group_source_req\n  {\n\n    uint32_t gsr_interface;\n\n\n    struct sockaddr_storage gsr_group;\n\n\n    struct sockaddr_storage gsr_source;\n  };\n\n\n\nstruct ip_msfilter\n  {\n\n    struct in_addr imsf_multiaddr;\n\n\n    struct in_addr imsf_interface;\n\n\n    uint32_t imsf_fmode;\n\n\n    uint32_t imsf_numsrc;\n\n    struct in_addr imsf_slist[1];\n  };\n\n\n\n\n\nstruct group_filter\n  {\n\n    uint32_t gf_interface;\n\n\n    struct sockaddr_storage gf_group;\n\n\n    uint32_t gf_fmode;\n\n\n    uint32_t gf_numsrc;\n\n    struct sockaddr_storage gf_slist[1];\n};\n// # 345 \"/usr/include/netinet/in.h\" 3 4\n// # 1 \"/usr/include/bits/in.h\" 1 3 4\n// # 82 \"/usr/include/bits/in.h\" 3 4\nstruct ip_opts\n  {\n    struct in_addr ip_dst;\n    char ip_opts[40];\n  };\n\n\nstruct ip_mreqn\n  {\n    struct in_addr imr_multiaddr;\n    struct in_addr imr_address;\n    int imr_ifindex;\n  };\n\n\nstruct in_pktinfo\n  {\n    int ipi_ifindex;\n    struct in_addr ipi_spec_dst;\n    struct in_addr ipi_addr;\n  };\n// # 346 \"/usr/include/netinet/in.h\" 2 3 4\n// # 354 \"/usr/include/netinet/in.h\" 3 4\nextern uint32_t ntohl (uint32_t __netlong) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\nextern uint16_t ntohs (uint16_t __netshort)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__));\nextern uint32_t htonl (uint32_t __hostlong)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__));\nextern uint16_t htons (uint16_t __hostshort)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\n\n\n// # 1 \"/usr/include/bits/byteswap.h\" 1 3 4\n// # 27 \"/usr/include/bits/byteswap.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 28 \"/usr/include/bits/byteswap.h\" 2 3 4\n// # 366 \"/usr/include/netinet/in.h\" 2 3 4\n// # 428 \"/usr/include/netinet/in.h\" 3 4\nextern int bindresvport (int __sockfd, struct sockaddr_in *__sock_in) __attribute__ ((__nothrow__));\n\n\nextern int bindresvport6 (int __sockfd, struct sockaddr_in6 *__sock_in)\n     __attribute__ ((__nothrow__));\n// # 456 \"/usr/include/netinet/in.h\" 3 4\nstruct in6_pktinfo\n  {\n    struct in6_addr ipi6_addr;\n    unsigned int ipi6_ifindex;\n  };\n\n\nstruct ip6_mtuinfo\n  {\n    struct sockaddr_in6 ip6m_addr;\n    uint32_t ip6m_mtu;\n  };\n\n\n\n\nextern int inet6_option_space (int __nbytes)\n     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\nextern int inet6_option_init (void *__bp, struct cmsghdr **__cmsgp,\n         int __type) __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\nextern int inet6_option_append (struct cmsghdr *__cmsg,\n    __const uint8_t *__typep, int __multx,\n    int __plusy) __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\nextern uint8_t *inet6_option_alloc (struct cmsghdr *__cmsg, int __datalen,\n        int __multx, int __plusy)\n     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\nextern int inet6_option_next (__const struct cmsghdr *__cmsg,\n         uint8_t **__tptrp)\n     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\nextern int inet6_option_find (__const struct cmsghdr *__cmsg,\n         uint8_t **__tptrp, int __type)\n     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\n\n\n\nextern int inet6_opt_init (void *__extbuf, socklen_t __extlen) __attribute__ ((__nothrow__));\nextern int inet6_opt_append (void *__extbuf, socklen_t __extlen, int __offset,\n        uint8_t __type, socklen_t __len, uint8_t __align,\n        void **__databufp) __attribute__ ((__nothrow__));\nextern int inet6_opt_finish (void *__extbuf, socklen_t __extlen, int __offset)\n     __attribute__ ((__nothrow__));\nextern int inet6_opt_set_val (void *__databuf, int __offset, void *__val,\n         socklen_t __vallen) __attribute__ ((__nothrow__));\nextern int inet6_opt_next (void *__extbuf, socklen_t __extlen, int __offset,\n      uint8_t *__typep, socklen_t *__lenp,\n      void **__databufp) __attribute__ ((__nothrow__));\nextern int inet6_opt_find (void *__extbuf, socklen_t __extlen, int __offset,\n      uint8_t __type, socklen_t *__lenp,\n      void **__databufp) __attribute__ ((__nothrow__));\nextern int inet6_opt_get_val (void *__databuf, int __offset, void *__val,\n         socklen_t __vallen) __attribute__ ((__nothrow__));\n\n\n\nextern socklen_t inet6_rth_space (int __type, int __segments) __attribute__ ((__nothrow__));\nextern void *inet6_rth_init (void *__bp, socklen_t __bp_len, int __type,\n        int __segments) __attribute__ ((__nothrow__));\nextern int inet6_rth_add (void *__bp, __const struct in6_addr *__addr) __attribute__ ((__nothrow__));\nextern int inet6_rth_reverse (__const void *__in, void *__out) __attribute__ ((__nothrow__));\nextern int inet6_rth_segments (__const void *__bp) __attribute__ ((__nothrow__));\nextern struct in6_addr *inet6_rth_getaddr (__const void *__bp, int __index)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int getipv4sourcefilter (int __s, struct in_addr __interface_addr,\n    struct in_addr __group, uint32_t *__fmode,\n    uint32_t *__numsrc, struct in_addr *__slist)\n     __attribute__ ((__nothrow__));\n\n\nextern int setipv4sourcefilter (int __s, struct in_addr __interface_addr,\n    struct in_addr __group, uint32_t __fmode,\n    uint32_t __numsrc,\n    __const struct in_addr *__slist)\n     __attribute__ ((__nothrow__));\n\n\n\nextern int getsourcefilter (int __s, uint32_t __interface_addr,\n       __const struct sockaddr *__group,\n       socklen_t __grouplen, uint32_t *__fmode,\n       uint32_t *__numsrc,\n       struct sockaddr_storage *__slist) __attribute__ ((__nothrow__));\n\n\nextern int setsourcefilter (int __s, uint32_t __interface_addr,\n       __const struct sockaddr *__group,\n       socklen_t __grouplen, uint32_t __fmode,\n       uint32_t __numsrc,\n       __const struct sockaddr_storage *__slist) __attribute__ ((__nothrow__));\n\n\n\n// # 39 \"util.h\" 2\n\n\n\n// # 1 \"/usr/include/arpa/inet.h\" 1 3 4\n// # 31 \"/usr/include/arpa/inet.h\" 3 4\n\n\n\n\nextern in_addr_t inet_addr (__const char *__cp) __attribute__ ((__nothrow__));\n\n\nextern in_addr_t inet_lnaof (struct in_addr __in) __attribute__ ((__nothrow__));\n\n\n\nextern struct in_addr inet_makeaddr (in_addr_t __net, in_addr_t __host)\n     __attribute__ ((__nothrow__));\n\n\nextern in_addr_t inet_netof (struct in_addr __in) __attribute__ ((__nothrow__));\n\n\n\nextern in_addr_t inet_network (__const char *__cp) __attribute__ ((__nothrow__));\n\n\n\nextern char *inet_ntoa (struct in_addr __in) __attribute__ ((__nothrow__));\n\n\n\n\nextern int inet_pton (int __af, __const char *__restrict __cp,\n        void *__restrict __buf) __attribute__ ((__nothrow__));\n\n\n\n\nextern __const char *inet_ntop (int __af, __const void *__restrict __cp,\n    char *__restrict __buf, socklen_t __len)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int inet_aton (__const char *__cp, struct in_addr *__inp) __attribute__ ((__nothrow__));\n\n\n\nextern char *inet_neta (in_addr_t __net, char *__buf, size_t __len) __attribute__ ((__nothrow__));\n\n\n\n\nextern char *inet_net_ntop (int __af, __const void *__cp, int __bits,\n       char *__buf, size_t __len) __attribute__ ((__nothrow__));\n\n\n\n\nextern int inet_net_pton (int __af, __const char *__cp,\n     void *__buf, size_t __len) __attribute__ ((__nothrow__));\n\n\n\n\nextern unsigned int inet_nsap_addr (__const char *__cp,\n        unsigned char *__buf, int __len) __attribute__ ((__nothrow__));\n\n\n\nextern char *inet_nsap_ntoa (int __len, __const unsigned char *__cp,\n        char *__buf) __attribute__ ((__nothrow__));\n\n\n\n// # 43 \"util.h\" 2\n\n\n\n// # 1 \"/usr/include/pwd.h\" 1 3 4\n// # 28 \"/usr/include/pwd.h\" 3 4\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 34 \"/usr/include/pwd.h\" 2 3 4\n// # 50 \"/usr/include/pwd.h\" 3 4\nstruct passwd\n{\n  char *pw_name;\n  char *pw_passwd;\n  __uid_t pw_uid;\n  __gid_t pw_gid;\n  char *pw_gecos;\n  char *pw_dir;\n  char *pw_shell;\n};\n// # 73 \"/usr/include/pwd.h\" 3 4\nextern void setpwent (void);\n\n\n\n\n\nextern void endpwent (void);\n\n\n\n\n\nextern struct passwd *getpwent (void);\n// # 95 \"/usr/include/pwd.h\" 3 4\nextern struct passwd *fgetpwent (FILE *__stream);\n\n\n\n\n\n\n\nextern int putpwent (__const struct passwd *__restrict __p,\n       FILE *__restrict __f);\n\n\n\n\n\n\nextern struct passwd *getpwuid (__uid_t __uid);\n\n\n\n\n\nextern struct passwd *getpwnam (__const char *__name);\n// # 140 \"/usr/include/pwd.h\" 3 4\nextern int getpwent_r (struct passwd *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct passwd **__restrict __result);\n\n\nextern int getpwuid_r (__uid_t __uid,\n         struct passwd *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct passwd **__restrict __result);\n\nextern int getpwnam_r (__const char *__restrict __name,\n         struct passwd *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct passwd **__restrict __result);\n// # 164 \"/usr/include/pwd.h\" 3 4\nextern int fgetpwent_r (FILE *__restrict __stream,\n   struct passwd *__restrict __resultbuf,\n   char *__restrict __buffer, size_t __buflen,\n   struct passwd **__restrict __result);\n// # 181 \"/usr/include/pwd.h\" 3 4\nextern int getpw (__uid_t __uid, char *__buffer);\n\n\n\n// # 47 \"util.h\" 2\n\n\n\n// # 1 \"/usr/include/grp.h\" 1 3 4\n// # 28 \"/usr/include/grp.h\" 3 4\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 34 \"/usr/include/grp.h\" 2 3 4\n// # 43 \"/usr/include/grp.h\" 3 4\nstruct group\n  {\n    char *gr_name;\n    char *gr_passwd;\n    __gid_t gr_gid;\n    char **gr_mem;\n  };\n// # 63 \"/usr/include/grp.h\" 3 4\nextern void setgrent (void);\n\n\n\n\n\nextern void endgrent (void);\n\n\n\n\n\nextern struct group *getgrent (void);\n// # 85 \"/usr/include/grp.h\" 3 4\nextern struct group *fgetgrent (FILE *__stream);\n// # 95 \"/usr/include/grp.h\" 3 4\nextern int putgrent (__const struct group *__restrict __p,\n       FILE *__restrict __f);\n\n\n\n\n\n\nextern struct group *getgrgid (__gid_t __gid);\n\n\n\n\n\nextern struct group *getgrnam (__const char *__name);\n// # 133 \"/usr/include/grp.h\" 3 4\nextern int getgrent_r (struct group *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct group **__restrict __result);\n\n\n\n\n\n\nextern int getgrgid_r (__gid_t __gid, struct group *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct group **__restrict __result);\n\n\n\n\n\nextern int getgrnam_r (__const char *__restrict __name,\n         struct group *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct group **__restrict __result);\n// # 163 \"/usr/include/grp.h\" 3 4\nextern int fgetgrent_r (FILE *__restrict __stream,\n   struct group *__restrict __resultbuf,\n   char *__restrict __buffer, size_t __buflen,\n   struct group **__restrict __result);\n// # 175 \"/usr/include/grp.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 176 \"/usr/include/grp.h\" 2 3 4\n\n\nextern int setgroups (size_t __n, __const __gid_t *__groups) __attribute__ ((__nothrow__));\n// # 188 \"/usr/include/grp.h\" 3 4\nextern int getgrouplist (__const char *__user, __gid_t __group,\n    __gid_t *__groups, int *__ngroups);\n// # 199 \"/usr/include/grp.h\" 3 4\nextern int initgroups (__const char *__user, __gid_t __group);\n\n\n\n\n// # 51 \"util.h\" 2\n// # 59 \"util.h\"\n// # 1 \"/usr/include/netdb.h\" 1 3 4\n// # 33 \"/usr/include/netdb.h\" 3 4\n// # 1 \"/usr/include/rpc/netdb.h\" 1 3 4\n// # 42 \"/usr/include/rpc/netdb.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 43 \"/usr/include/rpc/netdb.h\" 2 3 4\n\n\n\nstruct rpcent\n{\n  char *r_name;\n  char **r_aliases;\n  int r_number;\n};\n\nextern void setrpcent (int __stayopen) __attribute__ ((__nothrow__));\nextern void endrpcent (void) __attribute__ ((__nothrow__));\nextern struct rpcent *getrpcbyname (__const char *__name) __attribute__ ((__nothrow__));\nextern struct rpcent *getrpcbynumber (int __number) __attribute__ ((__nothrow__));\nextern struct rpcent *getrpcent (void) __attribute__ ((__nothrow__));\n\n\nextern int getrpcbyname_r (__const char *__name, struct rpcent *__result_buf,\n      char *__buffer, size_t __buflen,\n      struct rpcent **__result) __attribute__ ((__nothrow__));\n\nextern int getrpcbynumber_r (int __number, struct rpcent *__result_buf,\n        char *__buffer, size_t __buflen,\n        struct rpcent **__result) __attribute__ ((__nothrow__));\n\nextern int getrpcent_r (struct rpcent *__result_buf, char *__buffer,\n   size_t __buflen, struct rpcent **__result) __attribute__ ((__nothrow__));\n\n\n\n// # 34 \"/usr/include/netdb.h\" 2 3 4\n\n\n\n\n// # 1 \"/usr/include/bits/siginfo.h\" 1 3 4\n// # 25 \"/usr/include/bits/siginfo.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 26 \"/usr/include/bits/siginfo.h\" 2 3 4\n\n\n\n\n\n\n\ntypedef union sigval\n  {\n    int sival_int;\n    void *sival_ptr;\n  } sigval_t;\n// # 273 \"/usr/include/bits/siginfo.h\" 3 4\ntypedef struct sigevent\n  {\n    sigval_t sigev_value;\n    int sigev_signo;\n    int sigev_notify;\n\n    union\n      {\n int _pad[((64 / sizeof (int)) - 4)];\n\n\n\n __pid_t _tid;\n\n struct\n   {\n     void (*_function) (sigval_t);\n     void *_attribute;\n   } _sigev_thread;\n      } _sigev_un;\n  } sigevent_t;\n\n\n\n\n\n\nenum\n{\n  SIGEV_SIGNAL = 0,\n\n  SIGEV_NONE,\n\n  SIGEV_THREAD,\n\n\n  SIGEV_THREAD_ID = 4\n\n};\n// # 39 \"/usr/include/netdb.h\" 2 3 4\n\n\n\n\n// # 1 \"/usr/include/bits/netdb.h\" 1 3 4\n// # 27 \"/usr/include/bits/netdb.h\" 3 4\nstruct netent\n{\n  char *n_name;\n  char **n_aliases;\n  int n_addrtype;\n  uint32_t n_net;\n};\n// # 44 \"/usr/include/netdb.h\" 2 3 4\n// # 54 \"/usr/include/netdb.h\" 3 4\n\n\n\n\n\n\n\nextern int *__h_errno_location (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n// # 88 \"/usr/include/netdb.h\" 3 4\nextern void herror (__const char *__str) __attribute__ ((__nothrow__));\n\n\nextern __const char *hstrerror (int __err_num) __attribute__ ((__nothrow__));\n\n\n\n\nstruct hostent\n{\n  char *h_name;\n  char **h_aliases;\n  int h_addrtype;\n  int h_length;\n  char **h_addr_list;\n\n};\n\n\n\n\n\n\nextern void sethostent (int __stay_open);\n\n\n\n\n\nextern void endhostent (void);\n\n\n\n\n\n\nextern struct hostent *gethostent (void);\n\n\n\n\n\n\nextern struct hostent *gethostbyaddr (__const void *__addr, __socklen_t __len,\n          int __type);\n\n\n\n\n\nextern struct hostent *gethostbyname (__const char *__name);\n// # 149 \"/usr/include/netdb.h\" 3 4\nextern struct hostent *gethostbyname2 (__const char *__name, int __af);\n// # 161 \"/usr/include/netdb.h\" 3 4\nextern int gethostent_r (struct hostent *__restrict __result_buf,\n    char *__restrict __buf, size_t __buflen,\n    struct hostent **__restrict __result,\n    int *__restrict __h_errnop);\n\nextern int gethostbyaddr_r (__const void *__restrict __addr, __socklen_t __len,\n       int __type,\n       struct hostent *__restrict __result_buf,\n       char *__restrict __buf, size_t __buflen,\n       struct hostent **__restrict __result,\n       int *__restrict __h_errnop);\n\nextern int gethostbyname_r (__const char *__restrict __name,\n       struct hostent *__restrict __result_buf,\n       char *__restrict __buf, size_t __buflen,\n       struct hostent **__restrict __result,\n       int *__restrict __h_errnop);\n\nextern int gethostbyname2_r (__const char *__restrict __name, int __af,\n        struct hostent *__restrict __result_buf,\n        char *__restrict __buf, size_t __buflen,\n        struct hostent **__restrict __result,\n        int *__restrict __h_errnop);\n// # 192 \"/usr/include/netdb.h\" 3 4\nextern void setnetent (int __stay_open);\n\n\n\n\n\nextern void endnetent (void);\n\n\n\n\n\n\nextern struct netent *getnetent (void);\n\n\n\n\n\n\nextern struct netent *getnetbyaddr (uint32_t __net, int __type);\n\n\n\n\n\nextern struct netent *getnetbyname (__const char *__name);\n// # 231 \"/usr/include/netdb.h\" 3 4\nextern int getnetent_r (struct netent *__restrict __result_buf,\n   char *__restrict __buf, size_t __buflen,\n   struct netent **__restrict __result,\n   int *__restrict __h_errnop);\n\nextern int getnetbyaddr_r (uint32_t __net, int __type,\n      struct netent *__restrict __result_buf,\n      char *__restrict __buf, size_t __buflen,\n      struct netent **__restrict __result,\n      int *__restrict __h_errnop);\n\nextern int getnetbyname_r (__const char *__restrict __name,\n      struct netent *__restrict __result_buf,\n      char *__restrict __buf, size_t __buflen,\n      struct netent **__restrict __result,\n      int *__restrict __h_errnop);\n\n\n\n\nstruct servent\n{\n  char *s_name;\n  char **s_aliases;\n  int s_port;\n  char *s_proto;\n};\n\n\n\n\n\n\nextern void setservent (int __stay_open);\n\n\n\n\n\nextern void endservent (void);\n\n\n\n\n\n\nextern struct servent *getservent (void);\n\n\n\n\n\n\nextern struct servent *getservbyname (__const char *__name,\n          __const char *__proto);\n\n\n\n\n\n\nextern struct servent *getservbyport (int __port, __const char *__proto);\n// # 303 \"/usr/include/netdb.h\" 3 4\nextern int getservent_r (struct servent *__restrict __result_buf,\n    char *__restrict __buf, size_t __buflen,\n    struct servent **__restrict __result);\n\nextern int getservbyname_r (__const char *__restrict __name,\n       __const char *__restrict __proto,\n       struct servent *__restrict __result_buf,\n       char *__restrict __buf, size_t __buflen,\n       struct servent **__restrict __result);\n\nextern int getservbyport_r (int __port, __const char *__restrict __proto,\n       struct servent *__restrict __result_buf,\n       char *__restrict __buf, size_t __buflen,\n       struct servent **__restrict __result);\n\n\n\n\nstruct protoent\n{\n  char *p_name;\n  char **p_aliases;\n  int p_proto;\n};\n\n\n\n\n\n\nextern void setprotoent (int __stay_open);\n\n\n\n\n\nextern void endprotoent (void);\n\n\n\n\n\n\nextern struct protoent *getprotoent (void);\n\n\n\n\n\nextern struct protoent *getprotobyname (__const char *__name);\n\n\n\n\n\nextern struct protoent *getprotobynumber (int __proto);\n// # 369 \"/usr/include/netdb.h\" 3 4\nextern int getprotoent_r (struct protoent *__restrict __result_buf,\n     char *__restrict __buf, size_t __buflen,\n     struct protoent **__restrict __result);\n\nextern int getprotobyname_r (__const char *__restrict __name,\n        struct protoent *__restrict __result_buf,\n        char *__restrict __buf, size_t __buflen,\n        struct protoent **__restrict __result);\n\nextern int getprotobynumber_r (int __proto,\n          struct protoent *__restrict __result_buf,\n          char *__restrict __buf, size_t __buflen,\n          struct protoent **__restrict __result);\n// # 390 \"/usr/include/netdb.h\" 3 4\nextern int setnetgrent (__const char *__netgroup);\n\n\n\n\n\n\n\nextern void endnetgrent (void);\n// # 407 \"/usr/include/netdb.h\" 3 4\nextern int getnetgrent (char **__restrict __hostp,\n   char **__restrict __userp,\n   char **__restrict __domainp);\n// # 418 \"/usr/include/netdb.h\" 3 4\nextern int innetgr (__const char *__netgroup, __const char *__host,\n      __const char *__user, __const char *domain);\n\n\n\n\n\n\n\nextern int getnetgrent_r (char **__restrict __hostp,\n     char **__restrict __userp,\n     char **__restrict __domainp,\n     char *__restrict __buffer, size_t __buflen);\n// # 446 \"/usr/include/netdb.h\" 3 4\nextern int rcmd (char **__restrict __ahost, unsigned short int __rport,\n   __const char *__restrict __locuser,\n   __const char *__restrict __remuser,\n   __const char *__restrict __cmd, int *__restrict __fd2p);\n// # 458 \"/usr/include/netdb.h\" 3 4\nextern int rcmd_af (char **__restrict __ahost, unsigned short int __rport,\n      __const char *__restrict __locuser,\n      __const char *__restrict __remuser,\n      __const char *__restrict __cmd, int *__restrict __fd2p,\n      sa_family_t __af);\n// # 474 \"/usr/include/netdb.h\" 3 4\nextern int rexec (char **__restrict __ahost, int __rport,\n    __const char *__restrict __name,\n    __const char *__restrict __pass,\n    __const char *__restrict __cmd, int *__restrict __fd2p);\n// # 486 \"/usr/include/netdb.h\" 3 4\nextern int rexec_af (char **__restrict __ahost, int __rport,\n       __const char *__restrict __name,\n       __const char *__restrict __pass,\n       __const char *__restrict __cmd, int *__restrict __fd2p,\n       sa_family_t __af);\n// # 500 \"/usr/include/netdb.h\" 3 4\nextern int ruserok (__const char *__rhost, int __suser,\n      __const char *__remuser, __const char *__locuser);\n// # 510 \"/usr/include/netdb.h\" 3 4\nextern int ruserok_af (__const char *__rhost, int __suser,\n         __const char *__remuser, __const char *__locuser,\n         sa_family_t __af);\n// # 522 \"/usr/include/netdb.h\" 3 4\nextern int rresvport (int *__alport);\n// # 531 \"/usr/include/netdb.h\" 3 4\nextern int rresvport_af (int *__alport, sa_family_t __af);\n\n\n\n\n\n\nstruct addrinfo\n{\n  int ai_flags;\n  int ai_family;\n  int ai_socktype;\n  int ai_protocol;\n  socklen_t ai_addrlen;\n  struct sockaddr *ai_addr;\n  char *ai_canonname;\n  struct addrinfo *ai_next;\n};\n\n\n\nstruct gaicb\n{\n  const char *ar_name;\n  const char *ar_service;\n  const struct addrinfo *ar_request;\n  struct addrinfo *ar_result;\n\n  int __return;\n  int __unused[5];\n};\n// # 631 \"/usr/include/netdb.h\" 3 4\nextern int getaddrinfo (__const char *__restrict __name,\n   __const char *__restrict __service,\n   __const struct addrinfo *__restrict __req,\n   struct addrinfo **__restrict __pai);\n\n\nextern void freeaddrinfo (struct addrinfo *__ai) __attribute__ ((__nothrow__));\n\n\nextern __const char *gai_strerror (int __ecode) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int getnameinfo (__const struct sockaddr *__restrict __sa,\n   socklen_t __salen, char *__restrict __host,\n   socklen_t __hostlen, char *__restrict __serv,\n   socklen_t __servlen, unsigned int __flags);\n// # 661 \"/usr/include/netdb.h\" 3 4\nextern int getaddrinfo_a (int __mode, struct gaicb *__list[__restrict],\n     int __ent, struct sigevent *__restrict __sig);\n// # 672 \"/usr/include/netdb.h\" 3 4\nextern int gai_suspend (__const struct gaicb *__const __list[], int __ent,\n   __const struct timespec *__timeout);\n\n\nextern int gai_error (struct gaicb *__req) __attribute__ ((__nothrow__));\n\n\nextern int gai_cancel (struct gaicb *__gaicbp) __attribute__ ((__nothrow__));\n\n\n\n// # 60 \"util.h\" 2\n\n\n// # 1 \"/usr/include/dirent.h\" 1 3 4\n// # 28 \"/usr/include/dirent.h\" 3 4\n\n// # 62 \"/usr/include/dirent.h\" 3 4\n// # 1 \"/usr/include/bits/dirent.h\" 1 3 4\n// # 23 \"/usr/include/bits/dirent.h\" 3 4\nstruct dirent\n  {\n\n    __ino_t d_ino;\n    __off_t d_off;\n\n\n\n\n    unsigned short int d_reclen;\n    unsigned char d_type;\n    char d_name[256];\n  };\n\n\nstruct dirent64\n  {\n    __ino64_t d_ino;\n    __off64_t d_off;\n    unsigned short int d_reclen;\n    unsigned char d_type;\n    char d_name[256];\n  };\n// # 63 \"/usr/include/dirent.h\" 2 3 4\n// # 98 \"/usr/include/dirent.h\" 3 4\nenum\n  {\n    DT_UNKNOWN = 0,\n\n    DT_FIFO = 1,\n\n    DT_CHR = 2,\n\n    DT_DIR = 4,\n\n    DT_BLK = 6,\n\n    DT_REG = 8,\n\n    DT_LNK = 10,\n\n    DT_SOCK = 12,\n\n    DT_WHT = 14\n\n  };\n// # 128 \"/usr/include/dirent.h\" 3 4\ntypedef struct __dirstream DIR;\n\n\n\n\n\n\nextern DIR *opendir (__const char *__name) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern DIR *fdopendir (int __fd);\n\n\n\n\n\n\n\nextern int closedir (DIR *__dirp) __attribute__ ((__nonnull__ (1)));\n// # 163 \"/usr/include/dirent.h\" 3 4\nextern struct dirent *readdir (DIR *__dirp) __attribute__ ((__nonnull__ (1)));\n// # 174 \"/usr/include/dirent.h\" 3 4\nextern struct dirent64 *readdir64 (DIR *__dirp) __attribute__ ((__nonnull__ (1)));\n// # 184 \"/usr/include/dirent.h\" 3 4\nextern int readdir_r (DIR *__restrict __dirp,\n        struct dirent *__restrict __entry,\n        struct dirent **__restrict __result)\n     __attribute__ ((__nonnull__ (1, 2, 3)));\n// # 201 \"/usr/include/dirent.h\" 3 4\nextern int readdir64_r (DIR *__restrict __dirp,\n   struct dirent64 *__restrict __entry,\n   struct dirent64 **__restrict __result)\n     __attribute__ ((__nonnull__ (1, 2, 3)));\n\n\n\n\nextern void rewinddir (DIR *__dirp) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern void seekdir (DIR *__dirp, long int __pos) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern long int telldir (DIR *__dirp) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int dirfd (DIR *__dirp) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 243 \"/usr/include/dirent.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 244 \"/usr/include/dirent.h\" 2 3 4\n\n\n\n\n\n\nextern int scandir (__const char *__restrict __dir,\n      struct dirent ***__restrict __namelist,\n      int (*__selector) (__const struct dirent *),\n      int (*__cmp) (__const void *, __const void *))\n     __attribute__ ((__nonnull__ (1, 2)));\n// # 271 \"/usr/include/dirent.h\" 3 4\nextern int scandir64 (__const char *__restrict __dir,\n        struct dirent64 ***__restrict __namelist,\n        int (*__selector) (__const struct dirent64 *),\n        int (*__cmp) (__const void *, __const void *))\n     __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\nextern int alphasort (__const void *__e1, __const void *__e2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n// # 293 \"/usr/include/dirent.h\" 3 4\nextern int alphasort64 (__const void *__e1, __const void *__e2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern int versionsort (__const void *__e1, __const void *__e2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n// # 314 \"/usr/include/dirent.h\" 3 4\nextern int versionsort64 (__const void *__e1, __const void *__e2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n// # 324 \"/usr/include/dirent.h\" 3 4\nextern __ssize_t getdirentries (int __fd, char *__restrict __buf,\n    size_t __nbytes,\n    __off_t *__restrict __basep)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n// # 341 \"/usr/include/dirent.h\" 3 4\nextern __ssize_t getdirentries64 (int __fd, char *__restrict __buf,\n      size_t __nbytes,\n      __off64_t *__restrict __basep)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n\n\n\n\n\n// # 63 \"util.h\" 2\n// # 1 \"/usr/include/errno.h\" 1 3 4\n// # 32 \"/usr/include/errno.h\" 3 4\n\n\n\n\n// # 1 \"/usr/include/bits/errno.h\" 1 3 4\n// # 25 \"/usr/include/bits/errno.h\" 3 4\n// # 1 \"/usr/include/linux/errno.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/asm/errno.h\" 1 3 4\n\n\n\n\n// # 1 \"/usr/include/asm-x86_64/errno.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/asm-generic/errno.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/asm-generic/errno-base.h\" 1 3 4\n// # 5 \"/usr/include/asm-generic/errno.h\" 2 3 4\n// # 5 \"/usr/include/asm-x86_64/errno.h\" 2 3 4\n// # 6 \"/usr/include/asm/errno.h\" 2 3 4\n// # 5 \"/usr/include/linux/errno.h\" 2 3 4\n// # 26 \"/usr/include/bits/errno.h\" 2 3 4\n// # 43 \"/usr/include/bits/errno.h\" 3 4\nextern int *__errno_location (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n// # 37 \"/usr/include/errno.h\" 2 3 4\n// # 55 \"/usr/include/errno.h\" 3 4\nextern char *program_invocation_name, *program_invocation_short_name;\n\n\n\n\n// # 69 \"/usr/include/errno.h\" 3 4\ntypedef int error_t;\n// # 64 \"util.h\" 2\n\n// # 1 \"../cherokee/buffer.h\" 1\n// # 66 \"util.h\" 2\n// # 1 \"../cherokee/iocache.h\" 1\n// # 32 \"../cherokee/iocache.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/iocache.h\" 2\n// # 1 \"../cherokee/server.h\" 1\n// # 34 \"../cherokee/iocache.h\" 2\n// # 1 \"../cherokee/cache.h\" 1\n// # 32 \"../cherokee/cache.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/cache.h\" 2\n// # 1 \"../cherokee/list.h\" 1\n// # 34 \"../cherokee/cache.h\" 2\n// # 1 \"../cherokee/avl.h\" 1\n// # 35 \"../cherokee/cache.h\" 2\n// # 1 \"../cherokee/config_node.h\" 1\n// # 36 \"../cherokee/cache.h\" 2\n\n\ntypedef struct cherokee_cache cherokee_cache_t;\ntypedef struct cherokee_cache_priv cherokee_cache_priv_t;\ntypedef struct cherokee_cache_entry cherokee_cache_entry_t;\n\n\ntypedef ret_t (* cherokee_cache_new_func_t) (struct cherokee_cache *cache,\n           cherokee_buffer_t *key,\n           void *param,\n           struct cherokee_cache_entry **ret);\n\ntypedef ret_t (* cherokee_cache_get_stats_t) (struct cherokee_cache *cache,\n           cherokee_buffer_t *key);\n\ntypedef ret_t (* cherokee_cache_entry_clean_t) (struct cherokee_cache_entry *entry);\ntypedef ret_t (* cherokee_cache_entry_fetch_t) (struct cherokee_cache_entry *entry);\ntypedef ret_t (* cherokee_cache_entry_free_t) (struct cherokee_cache_entry *entry);\n\n\ntypedef enum {\n cache_no_list = 0,\n cache_t1,\n cache_t2,\n cache_b1,\n cache_b2\n} cherokee_cache_list_t;\n\n\nstruct cherokee_cache {\n\n cherokee_avl_t map;\n\n\n cherokee_list_t _t1;\n cherokee_list_t _b1;\n cint_t len_t1;\n cint_t len_b1;\n\n\n cherokee_list_t _t2;\n cherokee_list_t _b2;\n cint_t len_t2;\n cint_t len_b2;\n\n\n cint_t max_size;\n cint_t target_t1;\n\n\n cuint_t count;\n cuint_t count_hit;\n cuint_t count_miss;\n\n\n cherokee_cache_new_func_t new_cb;\n void *new_cb_param;\n cherokee_cache_get_stats_t stats_cb;\n\n\n cherokee_cache_priv_t *priv;\n};\n\nstruct cherokee_cache_entry {\n\n cherokee_list_t listed;\n cherokee_buffer_t key;\n cherokee_cache_list_t in_list;\n\n cint_t ref_count;\n void *mutex;\n cherokee_cache_t *cache;\n\n\n cherokee_cache_entry_clean_t clean_cb;\n cherokee_cache_entry_fetch_t fetch_cb;\n cherokee_cache_entry_free_t free_cb;\n};\n// # 122 \"../cherokee/cache.h\"\nret_t cherokee_cache_entry_init (cherokee_cache_entry_t *entry,\n      cherokee_buffer_t *key,\n      cherokee_cache_t *cache,\n      void *mutex);\nret_t cherokee_cache_entry_unref (cherokee_cache_entry_t **entry);\n\n\n\nret_t cherokee_cache_init (cherokee_cache_t *cache);\nret_t cherokee_cache_mrproper (cherokee_cache_t *cache);\nret_t cherokee_cache_clean (cherokee_cache_t *cache);\n\n\n\nret_t cherokee_cache_configure (cherokee_cache_t *cache,\n    cherokee_config_node_t *conf);\n\nret_t cherokee_cache_get (cherokee_cache_t *cache,\n    cherokee_buffer_t *key,\n    cherokee_cache_entry_t **entry);\n\nret_t cherokee_cache_get_stats (cherokee_cache_t *cache,\n    cherokee_buffer_t *info);\n// # 35 \"../cherokee/iocache.h\" 2\n// # 1 \"../cherokee/config_node.h\" 1\n// # 36 \"../cherokee/iocache.h\" 2\n\n\n\n// # 1 \"/usr/include/unistd.h\" 1 3 4\n// # 28 \"/usr/include/unistd.h\" 3 4\n\n// # 173 \"/usr/include/unistd.h\" 3 4\n// # 1 \"/usr/include/bits/posix_opt.h\" 1 3 4\n// # 174 \"/usr/include/unistd.h\" 2 3 4\n\n\n\n// # 1 \"/usr/include/bits/environments.h\" 1 3 4\n// # 23 \"/usr/include/bits/environments.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 24 \"/usr/include/bits/environments.h\" 2 3 4\n// # 178 \"/usr/include/unistd.h\" 2 3 4\n// # 197 \"/usr/include/unistd.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 198 \"/usr/include/unistd.h\" 2 3 4\n// # 258 \"/usr/include/unistd.h\" 3 4\nextern int access (__const char *__name, int __type) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int euidaccess (__const char *__name, int __type)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int eaccess (__const char *__name, int __type)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int faccessat (int __fd, __const char *__file, int __type, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;\n// # 301 \"/usr/include/unistd.h\" 3 4\nextern __off_t lseek (int __fd, __off_t __offset, int __whence) __attribute__ ((__nothrow__));\n// # 312 \"/usr/include/unistd.h\" 3 4\nextern __off64_t lseek64 (int __fd, __off64_t __offset, int __whence)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int close (int __fd);\n\n\n\n\n\n\nextern ssize_t read (int __fd, void *__buf, size_t __nbytes) ;\n\n\n\n\n\nextern ssize_t write (int __fd, __const void *__buf, size_t __n) ;\n// # 343 \"/usr/include/unistd.h\" 3 4\nextern ssize_t pread (int __fd, void *__buf, size_t __nbytes,\n        __off_t __offset) ;\n\n\n\n\n\n\nextern ssize_t pwrite (int __fd, __const void *__buf, size_t __n,\n         __off_t __offset) ;\n// # 371 \"/usr/include/unistd.h\" 3 4\nextern ssize_t pread64 (int __fd, void *__buf, size_t __nbytes,\n   __off64_t __offset) ;\n\n\nextern ssize_t pwrite64 (int __fd, __const void *__buf, size_t __n,\n    __off64_t __offset) ;\n\n\n\n\n\n\n\nextern int pipe (int __pipedes[2]) __attribute__ ((__nothrow__)) ;\n// # 393 \"/usr/include/unistd.h\" 3 4\nextern unsigned int alarm (unsigned int __seconds) __attribute__ ((__nothrow__));\n// # 405 \"/usr/include/unistd.h\" 3 4\nextern unsigned int sleep (unsigned int __seconds);\n\n\n\n\n\n\nextern __useconds_t ualarm (__useconds_t __value, __useconds_t __interval)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int usleep (__useconds_t __useconds);\n// # 429 \"/usr/include/unistd.h\" 3 4\nextern int pause (void);\n\n\n\nextern int chown (__const char *__file, __uid_t __owner, __gid_t __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern int fchown (int __fd, __uid_t __owner, __gid_t __group) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern int lchown (__const char *__file, __uid_t __owner, __gid_t __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n\nextern int fchownat (int __fd, __const char *__file, __uid_t __owner,\n       __gid_t __group, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;\n\n\n\nextern int chdir (__const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern int fchdir (int __fd) __attribute__ ((__nothrow__)) ;\n// # 471 \"/usr/include/unistd.h\" 3 4\nextern char *getcwd (char *__buf, size_t __size) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\nextern char *get_current_dir_name (void) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern char *getwd (char *__buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__)) ;\n\n\n\n\nextern int dup (int __fd) __attribute__ ((__nothrow__)) ;\n\n\nextern int dup2 (int __fd, int __fd2) __attribute__ ((__nothrow__));\n\n\nextern char **__environ;\n\nextern char **environ;\n\n\n\n\n\nextern int execve (__const char *__path, char *__const __argv[],\n     char *__const __envp[]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int fexecve (int __fd, char *__const __argv[], char *__const __envp[])\n     __attribute__ ((__nothrow__));\n\n\n\n\nextern int execv (__const char *__path, char *__const __argv[])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int execle (__const char *__path, __const char *__arg, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int execl (__const char *__path, __const char *__arg, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int execvp (__const char *__file, char *__const __argv[])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int execlp (__const char *__file, __const char *__arg, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int nice (int __inc) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern void _exit (int __status) __attribute__ ((__noreturn__));\n\n\n\n\n\n// # 1 \"/usr/include/bits/confname.h\" 1 3 4\n// # 26 \"/usr/include/bits/confname.h\" 3 4\nenum\n  {\n    _PC_LINK_MAX,\n\n    _PC_MAX_CANON,\n\n    _PC_MAX_INPUT,\n\n    _PC_NAME_MAX,\n\n    _PC_PATH_MAX,\n\n    _PC_PIPE_BUF,\n\n    _PC_CHOWN_RESTRICTED,\n\n    _PC_NO_TRUNC,\n\n    _PC_VDISABLE,\n\n    _PC_SYNC_IO,\n\n    _PC_ASYNC_IO,\n\n    _PC_PRIO_IO,\n\n    _PC_SOCK_MAXBUF,\n\n    _PC_FILESIZEBITS,\n\n    _PC_REC_INCR_XFER_SIZE,\n\n    _PC_REC_MAX_XFER_SIZE,\n\n    _PC_REC_MIN_XFER_SIZE,\n\n    _PC_REC_XFER_ALIGN,\n\n    _PC_ALLOC_SIZE_MIN,\n\n    _PC_SYMLINK_MAX,\n\n    _PC_2_SYMLINKS\n\n  };\n\n\nenum\n  {\n    _SC_ARG_MAX,\n\n    _SC_CHILD_MAX,\n\n    _SC_CLK_TCK,\n\n    _SC_NGROUPS_MAX,\n\n    _SC_OPEN_MAX,\n\n    _SC_STREAM_MAX,\n\n    _SC_TZNAME_MAX,\n\n    _SC_JOB_CONTROL,\n\n    _SC_SAVED_IDS,\n\n    _SC_REALTIME_SIGNALS,\n\n    _SC_PRIORITY_SCHEDULING,\n\n    _SC_TIMERS,\n\n    _SC_ASYNCHRONOUS_IO,\n\n    _SC_PRIORITIZED_IO,\n\n    _SC_SYNCHRONIZED_IO,\n\n    _SC_FSYNC,\n\n    _SC_MAPPED_FILES,\n\n    _SC_MEMLOCK,\n\n    _SC_MEMLOCK_RANGE,\n\n    _SC_MEMORY_PROTECTION,\n\n    _SC_MESSAGE_PASSING,\n\n    _SC_SEMAPHORES,\n\n    _SC_SHARED_MEMORY_OBJECTS,\n\n    _SC_AIO_LISTIO_MAX,\n\n    _SC_AIO_MAX,\n\n    _SC_AIO_PRIO_DELTA_MAX,\n\n    _SC_DELAYTIMER_MAX,\n\n    _SC_MQ_OPEN_MAX,\n\n    _SC_MQ_PRIO_MAX,\n\n    _SC_VERSION,\n\n    _SC_PAGESIZE,\n\n\n    _SC_RTSIG_MAX,\n\n    _SC_SEM_NSEMS_MAX,\n\n    _SC_SEM_VALUE_MAX,\n\n    _SC_SIGQUEUE_MAX,\n\n    _SC_TIMER_MAX,\n\n\n\n\n    _SC_BC_BASE_MAX,\n\n    _SC_BC_DIM_MAX,\n\n    _SC_BC_SCALE_MAX,\n\n    _SC_BC_STRING_MAX,\n\n    _SC_COLL_WEIGHTS_MAX,\n\n    _SC_EQUIV_CLASS_MAX,\n\n    _SC_EXPR_NEST_MAX,\n\n    _SC_LINE_MAX,\n\n    _SC_RE_DUP_MAX,\n\n    _SC_CHARCLASS_NAME_MAX,\n\n\n    _SC_2_VERSION,\n\n    _SC_2_C_BIND,\n\n    _SC_2_C_DEV,\n\n    _SC_2_FORT_DEV,\n\n    _SC_2_FORT_RUN,\n\n    _SC_2_SW_DEV,\n\n    _SC_2_LOCALEDEF,\n\n\n    _SC_PII,\n\n    _SC_PII_XTI,\n\n    _SC_PII_SOCKET,\n\n    _SC_PII_INTERNET,\n\n    _SC_PII_OSI,\n\n    _SC_POLL,\n\n    _SC_SELECT,\n\n    _SC_UIO_MAXIOV,\n\n    _SC_IOV_MAX = _SC_UIO_MAXIOV,\n\n    _SC_PII_INTERNET_STREAM,\n\n    _SC_PII_INTERNET_DGRAM,\n\n    _SC_PII_OSI_COTS,\n\n    _SC_PII_OSI_CLTS,\n\n    _SC_PII_OSI_M,\n\n    _SC_T_IOV_MAX,\n\n\n\n    _SC_THREADS,\n\n    _SC_THREAD_SAFE_FUNCTIONS,\n\n    _SC_GETGR_R_SIZE_MAX,\n\n    _SC_GETPW_R_SIZE_MAX,\n\n    _SC_LOGIN_NAME_MAX,\n\n    _SC_TTY_NAME_MAX,\n\n    _SC_THREAD_DESTRUCTOR_ITERATIONS,\n\n    _SC_THREAD_KEYS_MAX,\n\n    _SC_THREAD_STACK_MIN,\n\n    _SC_THREAD_THREADS_MAX,\n\n    _SC_THREAD_ATTR_STACKADDR,\n\n    _SC_THREAD_ATTR_STACKSIZE,\n\n    _SC_THREAD_PRIORITY_SCHEDULING,\n\n    _SC_THREAD_PRIO_INHERIT,\n\n    _SC_THREAD_PRIO_PROTECT,\n\n    _SC_THREAD_PROCESS_SHARED,\n\n\n    _SC_NPROCESSORS_CONF,\n\n    _SC_NPROCESSORS_ONLN,\n\n    _SC_PHYS_PAGES,\n\n    _SC_AVPHYS_PAGES,\n\n    _SC_ATEXIT_MAX,\n\n    _SC_PASS_MAX,\n\n\n    _SC_XOPEN_VERSION,\n\n    _SC_XOPEN_XCU_VERSION,\n\n    _SC_XOPEN_UNIX,\n\n    _SC_XOPEN_CRYPT,\n\n    _SC_XOPEN_ENH_I18N,\n\n    _SC_XOPEN_SHM,\n\n\n    _SC_2_CHAR_TERM,\n\n    _SC_2_C_VERSION,\n\n    _SC_2_UPE,\n\n\n    _SC_XOPEN_XPG2,\n\n    _SC_XOPEN_XPG3,\n\n    _SC_XOPEN_XPG4,\n\n\n    _SC_CHAR_BIT,\n\n    _SC_CHAR_MAX,\n\n    _SC_CHAR_MIN,\n\n    _SC_INT_MAX,\n\n    _SC_INT_MIN,\n\n    _SC_LONG_BIT,\n\n    _SC_WORD_BIT,\n\n    _SC_MB_LEN_MAX,\n\n    _SC_NZERO,\n\n    _SC_SSIZE_MAX,\n\n    _SC_SCHAR_MAX,\n\n    _SC_SCHAR_MIN,\n\n    _SC_SHRT_MAX,\n\n    _SC_SHRT_MIN,\n\n    _SC_UCHAR_MAX,\n\n    _SC_UINT_MAX,\n\n    _SC_ULONG_MAX,\n\n    _SC_USHRT_MAX,\n\n\n    _SC_NL_ARGMAX,\n\n    _SC_NL_LANGMAX,\n\n    _SC_NL_MSGMAX,\n\n    _SC_NL_NMAX,\n\n    _SC_NL_SETMAX,\n\n    _SC_NL_TEXTMAX,\n\n\n    _SC_XBS5_ILP32_OFF32,\n\n    _SC_XBS5_ILP32_OFFBIG,\n\n    _SC_XBS5_LP64_OFF64,\n\n    _SC_XBS5_LPBIG_OFFBIG,\n\n\n    _SC_XOPEN_LEGACY,\n\n    _SC_XOPEN_REALTIME,\n\n    _SC_XOPEN_REALTIME_THREADS,\n\n\n    _SC_ADVISORY_INFO,\n\n    _SC_BARRIERS,\n\n    _SC_BASE,\n\n    _SC_C_LANG_SUPPORT,\n\n    _SC_C_LANG_SUPPORT_R,\n\n    _SC_CLOCK_SELECTION,\n\n    _SC_CPUTIME,\n\n    _SC_THREAD_CPUTIME,\n\n    _SC_DEVICE_IO,\n\n    _SC_DEVICE_SPECIFIC,\n\n    _SC_DEVICE_SPECIFIC_R,\n\n    _SC_FD_MGMT,\n\n    _SC_FIFO,\n\n    _SC_PIPE,\n\n    _SC_FILE_ATTRIBUTES,\n\n    _SC_FILE_LOCKING,\n\n    _SC_FILE_SYSTEM,\n\n    _SC_MONOTONIC_CLOCK,\n\n    _SC_MULTI_PROCESS,\n\n    _SC_SINGLE_PROCESS,\n\n    _SC_NETWORKING,\n\n    _SC_READER_WRITER_LOCKS,\n\n    _SC_SPIN_LOCKS,\n\n    _SC_REGEXP,\n\n    _SC_REGEX_VERSION,\n\n    _SC_SHELL,\n\n    _SC_SIGNALS,\n\n    _SC_SPAWN,\n\n    _SC_SPORADIC_SERVER,\n\n    _SC_THREAD_SPORADIC_SERVER,\n\n    _SC_SYSTEM_DATABASE,\n\n    _SC_SYSTEM_DATABASE_R,\n\n    _SC_TIMEOUTS,\n\n    _SC_TYPED_MEMORY_OBJECTS,\n\n    _SC_USER_GROUPS,\n\n    _SC_USER_GROUPS_R,\n\n    _SC_2_PBS,\n\n    _SC_2_PBS_ACCOUNTING,\n\n    _SC_2_PBS_LOCATE,\n\n    _SC_2_PBS_MESSAGE,\n\n    _SC_2_PBS_TRACK,\n\n    _SC_SYMLOOP_MAX,\n\n    _SC_STREAMS,\n\n    _SC_2_PBS_CHECKPOINT,\n\n\n    _SC_V6_ILP32_OFF32,\n\n    _SC_V6_ILP32_OFFBIG,\n\n    _SC_V6_LP64_OFF64,\n\n    _SC_V6_LPBIG_OFFBIG,\n\n\n    _SC_HOST_NAME_MAX,\n\n    _SC_TRACE,\n\n    _SC_TRACE_EVENT_FILTER,\n\n    _SC_TRACE_INHERIT,\n\n    _SC_TRACE_LOG,\n\n\n    _SC_LEVEL1_ICACHE_SIZE,\n\n    _SC_LEVEL1_ICACHE_ASSOC,\n\n    _SC_LEVEL1_ICACHE_LINESIZE,\n\n    _SC_LEVEL1_DCACHE_SIZE,\n\n    _SC_LEVEL1_DCACHE_ASSOC,\n\n    _SC_LEVEL1_DCACHE_LINESIZE,\n\n    _SC_LEVEL2_CACHE_SIZE,\n\n    _SC_LEVEL2_CACHE_ASSOC,\n\n    _SC_LEVEL2_CACHE_LINESIZE,\n\n    _SC_LEVEL3_CACHE_SIZE,\n\n    _SC_LEVEL3_CACHE_ASSOC,\n\n    _SC_LEVEL3_CACHE_LINESIZE,\n\n    _SC_LEVEL4_CACHE_SIZE,\n\n    _SC_LEVEL4_CACHE_ASSOC,\n\n    _SC_LEVEL4_CACHE_LINESIZE,\n\n\n\n    _SC_IPV6 = _SC_LEVEL1_ICACHE_SIZE + 50,\n\n    _SC_RAW_SOCKETS\n\n  };\n\n\nenum\n  {\n    _CS_PATH,\n\n\n    _CS_V6_WIDTH_RESTRICTED_ENVS,\n\n\n    _CS_GNU_LIBC_VERSION,\n\n    _CS_GNU_LIBPTHREAD_VERSION,\n\n\n    _CS_LFS_CFLAGS = 1000,\n\n    _CS_LFS_LDFLAGS,\n\n    _CS_LFS_LIBS,\n\n    _CS_LFS_LINTFLAGS,\n\n    _CS_LFS64_CFLAGS,\n\n    _CS_LFS64_LDFLAGS,\n\n    _CS_LFS64_LIBS,\n\n    _CS_LFS64_LINTFLAGS,\n\n\n    _CS_XBS5_ILP32_OFF32_CFLAGS = 1100,\n\n    _CS_XBS5_ILP32_OFF32_LDFLAGS,\n\n    _CS_XBS5_ILP32_OFF32_LIBS,\n\n    _CS_XBS5_ILP32_OFF32_LINTFLAGS,\n\n    _CS_XBS5_ILP32_OFFBIG_CFLAGS,\n\n    _CS_XBS5_ILP32_OFFBIG_LDFLAGS,\n\n    _CS_XBS5_ILP32_OFFBIG_LIBS,\n\n    _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,\n\n    _CS_XBS5_LP64_OFF64_CFLAGS,\n\n    _CS_XBS5_LP64_OFF64_LDFLAGS,\n\n    _CS_XBS5_LP64_OFF64_LIBS,\n\n    _CS_XBS5_LP64_OFF64_LINTFLAGS,\n\n    _CS_XBS5_LPBIG_OFFBIG_CFLAGS,\n\n    _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,\n\n    _CS_XBS5_LPBIG_OFFBIG_LIBS,\n\n    _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,\n\n\n    _CS_POSIX_V6_ILP32_OFF32_CFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFF32_LIBS,\n\n    _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFFBIG_LIBS,\n\n    _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,\n\n    _CS_POSIX_V6_LP64_OFF64_CFLAGS,\n\n    _CS_POSIX_V6_LP64_OFF64_LDFLAGS,\n\n    _CS_POSIX_V6_LP64_OFF64_LIBS,\n\n    _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,\n\n    _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,\n\n    _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,\n\n    _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,\n\n    _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS\n\n  };\n// # 555 \"/usr/include/unistd.h\" 2 3 4\n\n\nextern long int pathconf (__const char *__path, int __name)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern long int fpathconf (int __fd, int __name) __attribute__ ((__nothrow__));\n\n\nextern long int sysconf (int __name) __attribute__ ((__nothrow__));\n\n\n\nextern size_t confstr (int __name, char *__buf, size_t __len) __attribute__ ((__nothrow__));\n\n\n\n\nextern __pid_t getpid (void) __attribute__ ((__nothrow__));\n\n\nextern __pid_t getppid (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern __pid_t getpgrp (void) __attribute__ ((__nothrow__));\n// # 591 \"/usr/include/unistd.h\" 3 4\nextern __pid_t __getpgid (__pid_t __pid) __attribute__ ((__nothrow__));\n\nextern __pid_t getpgid (__pid_t __pid) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int setpgid (__pid_t __pid, __pid_t __pgid) __attribute__ ((__nothrow__));\n// # 617 \"/usr/include/unistd.h\" 3 4\nextern int setpgrp (void) __attribute__ ((__nothrow__));\n// # 634 \"/usr/include/unistd.h\" 3 4\nextern __pid_t setsid (void) __attribute__ ((__nothrow__));\n\n\n\nextern __pid_t getsid (__pid_t __pid) __attribute__ ((__nothrow__));\n\n\n\nextern __uid_t getuid (void) __attribute__ ((__nothrow__));\n\n\nextern __uid_t geteuid (void) __attribute__ ((__nothrow__));\n\n\nextern __gid_t getgid (void) __attribute__ ((__nothrow__));\n\n\nextern __gid_t getegid (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern int getgroups (int __size, __gid_t __list[]) __attribute__ ((__nothrow__)) ;\n\n\n\nextern int group_member (__gid_t __gid) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int setuid (__uid_t __uid) __attribute__ ((__nothrow__));\n\n\n\n\nextern int setreuid (__uid_t __ruid, __uid_t __euid) __attribute__ ((__nothrow__));\n\n\n\n\nextern int seteuid (__uid_t __uid) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int setgid (__gid_t __gid) __attribute__ ((__nothrow__));\n\n\n\n\nextern int setregid (__gid_t __rgid, __gid_t __egid) __attribute__ ((__nothrow__));\n\n\n\n\nextern int setegid (__gid_t __gid) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int getresuid (__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid)\n     __attribute__ ((__nothrow__));\n\n\n\nextern int getresgid (__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid)\n     __attribute__ ((__nothrow__));\n\n\n\nextern int setresuid (__uid_t __ruid, __uid_t __euid, __uid_t __suid)\n     __attribute__ ((__nothrow__));\n\n\n\nextern int setresgid (__gid_t __rgid, __gid_t __egid, __gid_t __sgid)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern __pid_t fork (void) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern __pid_t vfork (void) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *ttyname (int __fd) __attribute__ ((__nothrow__));\n\n\n\nextern int ttyname_r (int __fd, char *__buf, size_t __buflen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;\n\n\n\nextern int isatty (int __fd) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int ttyslot (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern int link (__const char *__from, __const char *__to)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;\n\n\n\n\nextern int linkat (int __fromfd, __const char *__from, int __tofd,\n     __const char *__to, int __flags)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4))) ;\n\n\n\n\nextern int symlink (__const char *__from, __const char *__to)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;\n\n\n\n\nextern ssize_t readlink (__const char *__restrict __path,\n    char *__restrict __buf, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;\n\n\n\n\nextern int symlinkat (__const char *__from, int __tofd,\n        __const char *__to) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;\n\n\nextern ssize_t readlinkat (int __fd, __const char *__restrict __path,\n      char *__restrict __buf, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3))) ;\n\n\n\nextern int unlink (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int unlinkat (int __fd, __const char *__name, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\nextern int rmdir (__const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern __pid_t tcgetpgrp (int __fd) __attribute__ ((__nothrow__));\n\n\nextern int tcsetpgrp (int __fd, __pid_t __pgrp_id) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern char *getlogin (void);\n\n\n\n\n\n\n\nextern int getlogin_r (char *__name, size_t __name_len) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int setlogin (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 837 \"/usr/include/unistd.h\" 3 4\n// # 1 \"/usr/include/getopt.h\" 1 3 4\n// # 59 \"/usr/include/getopt.h\" 3 4\nextern char *optarg;\n// # 73 \"/usr/include/getopt.h\" 3 4\nextern int optind;\n\n\n\n\nextern int opterr;\n\n\n\nextern int optopt;\n// # 152 \"/usr/include/getopt.h\" 3 4\nextern int getopt (int ___argc, char *const *___argv, const char *__shortopts)\n       __attribute__ ((__nothrow__));\n// # 838 \"/usr/include/unistd.h\" 2 3 4\n\n\n\n\n\n\n\nextern int gethostname (char *__name, size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int sethostname (__const char *__name, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern int sethostid (long int __id) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\nextern int getdomainname (char *__name, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\nextern int setdomainname (__const char *__name, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern int vhangup (void) __attribute__ ((__nothrow__));\n\n\nextern int revoke (__const char *__file) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n\n\nextern int profil (unsigned short int *__sample_buffer, size_t __size,\n     size_t __offset, unsigned int __scale)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int acct (__const char *__name) __attribute__ ((__nothrow__));\n\n\n\nextern char *getusershell (void) __attribute__ ((__nothrow__));\nextern void endusershell (void) __attribute__ ((__nothrow__));\nextern void setusershell (void) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int daemon (int __nochdir, int __noclose) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\nextern int chroot (__const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern char *getpass (__const char *__prompt) __attribute__ ((__nonnull__ (1)));\n// # 923 \"/usr/include/unistd.h\" 3 4\nextern int fsync (int __fd);\n\n\n\n\n\n\nextern long int gethostid (void);\n\n\nextern void sync (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern int getpagesize (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\n\n\nextern int getdtablesize (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern int truncate (__const char *__file, __off_t __length)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 960 \"/usr/include/unistd.h\" 3 4\nextern int truncate64 (__const char *__file, __off64_t __length)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 970 \"/usr/include/unistd.h\" 3 4\nextern int ftruncate (int __fd, __off_t __length) __attribute__ ((__nothrow__)) ;\n// # 980 \"/usr/include/unistd.h\" 3 4\nextern int ftruncate64 (int __fd, __off64_t __length) __attribute__ ((__nothrow__)) ;\n// # 990 \"/usr/include/unistd.h\" 3 4\nextern int brk (void *__addr) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\nextern void *sbrk (intptr_t __delta) __attribute__ ((__nothrow__));\n// # 1011 \"/usr/include/unistd.h\" 3 4\nextern long int syscall (long int __sysno, ...) __attribute__ ((__nothrow__));\n// # 1065 \"/usr/include/unistd.h\" 3 4\nextern int fdatasync (int __fildes);\n\n\n\n\n\n\n\nextern char *crypt (__const char *__key, __const char *__salt)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern void encrypt (char *__block, int __edflag) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern void swab (__const void *__restrict __from, void *__restrict __to,\n    ssize_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\n\nextern char *ctermid (char *__s) __attribute__ ((__nothrow__));\n// # 1103 \"/usr/include/unistd.h\" 3 4\n\n// # 40 \"../cherokee/iocache.h\" 2\n\ntypedef struct {\n cherokee_cache_t cache;\n\n\n cuint_t max_file_size;\n cuint_t min_file_size;\n cuint_t lasting_mmap;\n cuint_t lasting_stat;\n} cherokee_iocache_t;\n\ntypedef enum {\n iocache_nothing = 0,\n iocache_stat = 1,\n iocache_mmap = 1 << 1\n} cherokee_iocache_info_t;\n\ntypedef struct {\n\n cherokee_cache_entry_t base;\n cherokee_iocache_info_t info;\n\n\n struct stat state;\n ret_t state_ret;\n void *mmaped;\n size_t mmaped_len;\n} cherokee_iocache_entry_t;\n\n\n\n\n\n\n\nret_t cherokee_iocache_new (cherokee_iocache_t **iocache);\nret_t cherokee_iocache_free (cherokee_iocache_t *iocache);\n\nret_t cherokee_iocache_init (cherokee_iocache_t *iocache);\nret_t cherokee_iocache_mrproper (cherokee_iocache_t *iocache);\n\nret_t cherokee_iocache_configure (cherokee_iocache_t *iocache,\n     cherokee_config_node_t *conf);\n\n\n\nret_t cherokee_iocache_entry_unref (cherokee_iocache_entry_t **entry);\n\n\n\nret_t cherokee_iocache_autoget (cherokee_iocache_t *iocache,\n     cherokee_buffer_t *file,\n     cherokee_iocache_info_t info,\n     cherokee_iocache_entry_t **ret_io);\n\nret_t cherokee_iocache_autoget_fd (cherokee_iocache_t *iocache,\n     cherokee_buffer_t *file,\n     cherokee_iocache_info_t info,\n     int *fd,\n     cherokee_iocache_entry_t **ret_io);\n\n\nret_t cherokee_iocache_get_mmaped_size (cherokee_iocache_t *iocache, size_t *total);\n// # 67 \"util.h\" 2\n\n\n\n// # 87 \"util.h\"\nchar *strnstr (const char *s, const char *find, size_t slen);\n\n\n\n\n\nsize_t strlcat (char *dst, const char *src, size_t siz);\n\n\n\n\n\nchar *strncasestr (const char *s, const char *find, size_t slen);\nchar *strncasestrn (const char *s, size_t slen, const char *find, size_t findlen);\n\n\n\n\n\nextern const char hex2dec_tab[256];\nextern const char *month[13];\n\n\n\nchar *cherokee_strerror_r (int err, char *buf, size_t bufsize);\nint cherokee_isbigendian (void);\nchar *cherokee_min_str (char *s1, char *s2);\nchar *cherokee_max_str (char *s1, char *s2);\nint cherokee_estimate_va_length (const char *format, va_list ap);\nlong cherokee_eval_formated_time (cherokee_buffer_t *buf);\nret_t cherokee_fix_dirpath (cherokee_buffer_t *buf);\n\nret_t cherokee_find_header_end (cherokee_buffer_t *buf,\n         char **end,\n         cuint_t *sep_len);\n\nret_t cherokee_find_header_end_cstr (char *c_str,\n           cint_t c_len,\n           char **end,\n           cuint_t *sep_len);\n\nret_t cherokee_parse_host (cherokee_buffer_t *buf,\n         cherokee_buffer_t *host,\n         cuint_t *port);\n\nint cherokee_string_is_ipv6 (cherokee_buffer_t *ip);\nret_t cherokee_copy_local_address (void *socket, cherokee_buffer_t *buf);\n\nret_t cherokee_buf_add_bogonow (cherokee_buffer_t *buf,\n         cherokee_boolean_t update);\n\nret_t cherokee_buf_add_backtrace (cherokee_buffer_t *buf, int n_skip, const char *new_line, const char *line_pre);\n\nret_t cherokee_find_exec_in_path (const char *bin_name,\n         cherokee_buffer_t *fullpath);\n\nret_t cherokee_atoi (const char *str, int *ret_value);\nret_t cherokee_atob (const char *str, cherokee_boolean_t *ret_value);\n\n\n\nstruct tm *cherokee_gmtime (const time_t *timep, struct tm *result);\nstruct tm *cherokee_localtime (const time_t *timep, struct tm *result);\nlong *cherokee_get_timezone_ref (void);\n\n\n\nDIR * cherokee_opendir (const char *dirname);\nint cherokee_readdir (DIR *dirstream, struct dirent *entry, struct dirent **result);\nint cherokee_closedir (DIR *dirstream);\n\nint cherokee_stat (const char *restrict path, struct stat *buf);\nint cherokee_lstat (const char *restrict path, struct stat *buf);\nint cherokee_fstat (int filedes, struct stat *buf);\nint cherokee_access (const char *pathname, int mode);\nint cherokee_open (const char *path, int oflag, int mode);\nint cherokee_unlink (const char *path);\nint cherokee_pipe (int fildes[2]);\n\nret_t cherokee_gethostbyname (cherokee_buffer_t *hostname, struct addrinfo **addr);\n\nret_t cherokee_gethostname (cherokee_buffer_t *buf);\nret_t cherokee_syslog (int priority, cherokee_buffer_t *buf);\n\nret_t cherokee_getpwnam (const char *name, struct passwd *pwbuf, char *buf, size_t buflen);\nret_t cherokee_getpwuid (uid_t uid, struct passwd *pwbuf, char *buf, size_t buflen);\nret_t cherokee_getpwnam_uid (const char *name, struct passwd *pwbuf, char *buf, size_t buflen);\nret_t cherokee_getgrnam (const char *name, struct group *pwbuf, char *buf, size_t buflen);\nret_t cherokee_getgrgid (gid_t gid, struct group *pwbuf, char *buf, size_t buflen);\nret_t cherokee_getgrnam_gid (const char *name, struct group *pwbuf, char *buf, size_t buflen);\n\nret_t cherokee_mkstemp (cherokee_buffer_t *buffer, int *fd);\nret_t cherokee_mkdtemp (char *template);\n\nret_t cherokee_mkdir (const char *path, int mode);\nret_t cherokee_mkdir_p (cherokee_buffer_t *path, int mode);\nret_t cherokee_mkdir_p_perm (cherokee_buffer_t *dir_path, int create_mode, int ensure_perm);\nret_t cherokee_rm_rf (cherokee_buffer_t *path, uid_t uid);\n\nvoid cherokee_random_seed (void);\nlong cherokee_random (void);\n\nret_t cherokee_ntop (int family, struct sockaddr *addr, char *dst, size_t cnt);\nret_t cherokee_wait_pid (int pid, int *retcode);\nret_t cherokee_reset_signals (void);\n\nret_t cherokee_io_stat (cherokee_iocache_t *iocache,\n         cherokee_buffer_t *path,\n         cherokee_boolean_t useit,\n         struct stat *info_space,\n         cherokee_iocache_entry_t **io_entry,\n         struct stat **info);\n\n\n\nret_t cherokee_fd_set_nonblocking (int fd, cherokee_boolean_t enable);\nret_t cherokee_fd_set_nodelay (int fd, cherokee_boolean_t enable);\nret_t cherokee_fd_set_closexec (int fd);\nret_t cherokee_fd_set_reuseaddr (int fd);\nret_t cherokee_fd_close (int fd);\n\n\n\nret_t cherokee_sys_fdlimit_get (cuint_t *limit);\nret_t cherokee_sys_fdlimit_set (cuint_t limit);\nret_t cherokee_get_shell (const char **shell, const char **binary);\nret_t cherokee_tmp_dir_copy (cherokee_buffer_t *buffer);\n\n\n\nret_t cherokee_iovec_skip_sent (struct iovec orig[], uint16_t orig_len,\n    struct iovec dest[], uint16_t *dest_len,\n    size_t sent);\nret_t cherokee_iovec_was_sent (struct iovec orig[], uint16_t orig_len, size_t sent);\n\n\n\nvoid cherokee_trace (const char *entry, const char *file, int line, const char *func, const char *fmt, ...);\n\n\n\nret_t cherokee_path_short (cherokee_buffer_t *path);\nret_t cherokee_path_arg_eval (cherokee_buffer_t *path);\n\n\n\nret_t cherokee_split_pathinfo (cherokee_buffer_t *path,\n       cuint_t init_pos,\n       int allow_dirs,\n       char **pathinfo,\n       int *pathinfo_len);\n\nret_t cherokee_split_arguments (cherokee_buffer_t *request,\n       int init_pos,\n       char **arguments,\n       int *arguments_len);\n\nret_t cherokee_parse_query_string (cherokee_buffer_t *qstring,\n       cherokee_avl_t *arguments);\n\nchar *cherokee_header_get_next_line (char *line);\nret_t cherokee_header_del_entry (cherokee_buffer_t *header,\n          const char *header_name,\n          int header_name_len);\n\n\n\n// # 31 \"init.c\" 2\n// # 1 \"bogotime.h\" 1\n// # 28 \"bogotime.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 29 \"bogotime.h\" 2\n\n\n// # 1 \"/usr/include/sys/time.h\" 1 3 4\n// # 29 \"/usr/include/sys/time.h\" 3 4\n// # 1 \"/usr/include/bits/time.h\" 1 3 4\n// # 30 \"/usr/include/sys/time.h\" 2 3 4\n// # 39 \"/usr/include/sys/time.h\" 3 4\n\n// # 57 \"/usr/include/sys/time.h\" 3 4\nstruct timezone\n  {\n    int tz_minuteswest;\n    int tz_dsttime;\n  };\n\ntypedef struct timezone *__restrict __timezone_ptr_t;\n// # 73 \"/usr/include/sys/time.h\" 3 4\nextern int gettimeofday (struct timeval *__restrict __tv,\n    __timezone_ptr_t __tz) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int settimeofday (__const struct timeval *__tv,\n    __const struct timezone *__tz)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int adjtime (__const struct timeval *__delta,\n      struct timeval *__olddelta) __attribute__ ((__nothrow__));\n\n\n\n\nenum __itimer_which\n  {\n\n    ITIMER_REAL = 0,\n\n\n    ITIMER_VIRTUAL = 1,\n\n\n\n    ITIMER_PROF = 2\n\n  };\n\n\n\nstruct itimerval\n  {\n\n    struct timeval it_interval;\n\n    struct timeval it_value;\n  };\n\n\n\n\ntypedef enum __itimer_which __itimer_which_t;\n\n\n\n\n\n\nextern int getitimer (__itimer_which_t __which,\n        struct itimerval *__value) __attribute__ ((__nothrow__));\n\n\n\n\nextern int setitimer (__itimer_which_t __which,\n        __const struct itimerval *__restrict __new,\n        struct itimerval *__restrict __old) __attribute__ ((__nothrow__));\n\n\n\n\nextern int utimes (__const char *__file, __const struct timeval __tvp[2])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int lutimes (__const char *__file, __const struct timeval __tvp[2])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int futimes (int __fd, __const struct timeval __tvp[2]) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int futimesat (int __fd, __const char *__file,\n        __const struct timeval __tvp[2]) __attribute__ ((__nothrow__));\n// # 191 \"/usr/include/sys/time.h\" 3 4\n\n// # 32 \"bogotime.h\" 2\n\n\n\n\n// # 1 \"../cherokee/buffer.h\" 1\n// # 37 \"bogotime.h\" 2\n\ntypedef unsigned long long cherokee_msec_t;\ntypedef void (*bogotime_callback_t) (void *param);\n\n\n\n\n\nextern struct timeval cherokee_bogonow_tv;\nextern volatile cherokee_msec_t cherokee_bogonow_msec;\nextern volatile time_t cherokee_bogonow_now;\nextern long cherokee_bogonow_tzloc;\n\n\nextern struct tm cherokee_bogonow_tmloc;\nextern struct tm cherokee_bogonow_tmgmt;\nextern cherokee_buffer_t cherokee_bogonow_strgmt;\n\n\n\nret_t cherokee_bogotime_init (void);\nret_t cherokee_bogotime_free (void);\n\nret_t cherokee_bogotime_update (void);\nret_t cherokee_bogotime_try_update (void);\n\n\nvoid cherokee_bogotime_lock_read (void);\nvoid cherokee_bogotime_release (void);\n\n\nret_t cherokee_bogotime_add_callback (bogotime_callback_t func, void *param, time_t elapse);\n// # 32 \"init.c\" 2\n\n// # 1 \"spawner.h\" 1\n// # 40 \"spawner.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 41 \"spawner.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 42 \"spawner.h\" 2\n// # 1 \"../cherokee/shm.h\" 1\n// # 32 \"../cherokee/shm.h\"\n// # 1 \"../cherokee/common.h\" 1\n// # 33 \"../cherokee/shm.h\" 2\n// # 1 \"../cherokee/buffer.h\" 1\n// # 34 \"../cherokee/shm.h\" 2\n\n// # 1 \"/usr/include/semaphore.h\" 1 3 4\n// # 30 \"/usr/include/semaphore.h\" 3 4\n// # 1 \"/usr/include/bits/semaphore.h\" 1 3 4\n// # 24 \"/usr/include/bits/semaphore.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 25 \"/usr/include/bits/semaphore.h\" 2 3 4\n// # 40 \"/usr/include/bits/semaphore.h\" 3 4\ntypedef union\n{\n  char __size[32];\n  long int __align;\n} sem_t;\n// # 31 \"/usr/include/semaphore.h\" 2 3 4\n\n\n\n\n\n\nextern int sem_init (sem_t *__sem, int __pshared, unsigned int __value)\n     __attribute__ ((__nothrow__));\n\nextern int sem_destroy (sem_t *__sem) __attribute__ ((__nothrow__));\n\n\nextern sem_t *sem_open (__const char *__name, int __oflag, ...) __attribute__ ((__nothrow__));\n\n\nextern int sem_close (sem_t *__sem) __attribute__ ((__nothrow__));\n\n\nextern int sem_unlink (__const char *__name) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int sem_wait (sem_t *__sem);\n\n\n\n\n\n\nextern int sem_timedwait (sem_t *__restrict __sem,\n     __const struct timespec *__restrict __abstime);\n\n\n\nextern int sem_trywait (sem_t *__sem) __attribute__ ((__nothrow__));\n\n\nextern int sem_post (sem_t *__sem) __attribute__ ((__nothrow__));\n\n\nextern int sem_getvalue (sem_t *__restrict __sem, int *__restrict __sval)\n     __attribute__ ((__nothrow__));\n\n\n\n// # 36 \"../cherokee/shm.h\" 2\n\n\n\ntypedef struct {\n size_t len;\n void *mem;\n cherokee_buffer_t name;\n} cherokee_shm_t;\n\ntypedef struct {\n sem_t *sem;\n cherokee_buffer_t name;\n} cherokee_sem_t;\n\n\nret_t cherokee_shm_init (cherokee_shm_t *shm);\nret_t cherokee_shm_mrproper (cherokee_shm_t *shm);\nret_t cherokee_shm_create (cherokee_shm_t *shm, char *name, size_t len);\nret_t cherokee_shm_map (cherokee_shm_t *shm, cherokee_buffer_t *name);\n\n\n// # 43 \"spawner.h\" 2\n// # 1 \"../cherokee/logger_writer.h\" 1\n// # 44 \"spawner.h\" 2\n\n\n\n\n\nextern cherokee_shm_t cherokee_spawn_shared;\n\nret_t cherokee_spawner_set_active (cherokee_boolean_t active);\n\nret_t cherokee_spawner_init (void);\nret_t cherokee_spawner_free (void);\n\nret_t cherokee_spawner_spawn (cherokee_buffer_t *binary,\n       cherokee_buffer_t *user_name,\n       uid_t uid,\n       gid_t gid,\n       int env_inherited,\n       char **envp,\n       cherokee_logger_writer_t *error_writer,\n       pid_t *pid_ret);\n\n\n// # 34 \"init.c\" 2\n\n\n\ncuint_t cherokee_cacheline_size;\ncint_t cherokee_cpu_number;\ncuint_t cherokee_fdlimit;\ncherokee_buffer_t cherokee_tmp_dir;\ncherokee_boolean_t cherokee_admin_child;\ncherokee_null_bool_t cherokee_readable_errors;\n\nstatic cherokee_boolean_t _cherokee_init = false;\n\nstatic ret_t\ninit_tmp_dir (void)\n{\n ret_t ret;\n\n cherokee_buffer_init (&cherokee_tmp_dir);\n cherokee_tmp_dir_copy (&cherokee_tmp_dir);\n cherokee_buffer_add (&cherokee_tmp_dir, \"/cherokee.XXXXXXXXXXX\", (sizeof(\"/cherokee.XXXXXXXXXXX\") - 1));\n\n ret = cherokee_mkdtemp (cherokee_tmp_dir.buf);\n if ((ret != ret_ok)) {\n  return ret_error;\n }\n\n return ret_ok;\n}\n\nret_t\ncherokee_init (void)\n{\n ret_t ret;\n\n if (_cherokee_init)\n  return ret_ok;\n\n\n\n\n\n\n\n cherokee_trace_init();\n\n\n\n cherokee_bogotime_init();\n cherokee_bogotime_update();\n\n\n\n cherokee_threading_init();\n\n\n\n dcc_ncpus (&cherokee_cpu_number);\n if (cherokee_cpu_number < 1) {\n  cherokee_error_log (cherokee_err_warning, \"init.c\", 92, 187, cherokee_cpu_number);\n  cherokee_cpu_number = 1;\n }\n\n\n\n cherokee_cacheline_size_get (&cherokee_cacheline_size);\n\n\n\n ret = cherokee_sys_fdlimit_get (&cherokee_fdlimit);\n if (ret < ret_ok) {\n  cherokee_error_log (cherokee_err_error, \"init.c\", 104, 188);\n  return ret;\n }\n\n\n\n ret = init_tmp_dir();\n if (ret != ret_ok) {\n  return ret;\n }\n\n cherokee_admin_child = false;\n cherokee_readable_errors = 0xFC;\n\n _cherokee_init = true;\n return ret_ok;\n}\n\nret_t\ncherokee_mrproper (void)\n{\n cherokee_buffer_mrproper (&cherokee_tmp_dir);\n\n cherokee_bogotime_free();\n cherokee_threading_free();\n\n return ret_ok;\n}\n",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/C_tests/test2012_102.c": "// # 1 \"module.c\"\n// # 1 \"<built-in>\"\n// # 1 \"<command-line>\"\n// # 1 \"module.c\"\n// # 29 \"module.c\"\n// # 1 \"zsh.mdh\" 1\n// # 16 \"zsh.mdh\"\n// # 1 \"../config.h\" 1\n// # 17 \"zsh.mdh\" 2\n// # 1 \"zsh_system.h\" 1\n// # 123 \"zsh_system.h\"\n// # 1 \"/usr/include/sys/types.h\" 1 3 4\n// # 27 \"/usr/include/sys/types.h\" 3 4\n// # 1 \"/usr/include/features.h\" 1 3 4\n// # 329 \"/usr/include/features.h\" 3 4\n// # 1 \"/usr/include/sys/cdefs.h\" 1 3 4\n// # 313 \"/usr/include/sys/cdefs.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 314 \"/usr/include/sys/cdefs.h\" 2 3 4\n// # 330 \"/usr/include/features.h\" 2 3 4\n// # 352 \"/usr/include/features.h\" 3 4\n// # 1 \"/usr/include/gnu/stubs.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 5 \"/usr/include/gnu/stubs.h\" 2 3 4\n\n\n\n\n// # 1 \"/usr/include/gnu/stubs-64.h\" 1 3 4\n// # 10 \"/usr/include/gnu/stubs.h\" 2 3 4\n// # 353 \"/usr/include/features.h\" 2 3 4\n// # 28 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\n// # 1 \"/usr/include/bits/types.h\" 1 3 4\n// # 28 \"/usr/include/bits/types.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 29 \"/usr/include/bits/types.h\" 2 3 4\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 214 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 3 4\ntypedef long unsigned int size_t;\n// # 32 \"/usr/include/bits/types.h\" 2 3 4\n\n\ntypedef unsigned char __u_char;\ntypedef unsigned short int __u_short;\ntypedef unsigned int __u_int;\ntypedef unsigned long int __u_long;\n\n\ntypedef signed char __int8_t;\ntypedef unsigned char __uint8_t;\ntypedef signed short int __int16_t;\ntypedef unsigned short int __uint16_t;\ntypedef signed int __int32_t;\ntypedef unsigned int __uint32_t;\n\ntypedef signed long int __int64_t;\ntypedef unsigned long int __uint64_t;\n\n\n\n\n\n\n\ntypedef long int __quad_t;\ntypedef unsigned long int __u_quad_t;\n// # 134 \"/usr/include/bits/types.h\" 3 4\n// # 1 \"/usr/include/bits/typesizes.h\" 1 3 4\n// # 135 \"/usr/include/bits/types.h\" 2 3 4\n\n\ntypedef unsigned long int __dev_t;\ntypedef unsigned int __uid_t;\ntypedef unsigned int __gid_t;\ntypedef unsigned long int __ino_t;\ntypedef unsigned long int __ino64_t;\ntypedef unsigned int __mode_t;\ntypedef unsigned long int __nlink_t;\ntypedef long int __off_t;\ntypedef long int __off64_t;\ntypedef int __pid_t;\ntypedef struct { int __val[2]; } __fsid_t;\ntypedef long int __clock_t;\ntypedef unsigned long int __rlim_t;\ntypedef unsigned long int __rlim64_t;\ntypedef unsigned int __id_t;\ntypedef long int __time_t;\ntypedef unsigned int __useconds_t;\ntypedef long int __suseconds_t;\n\ntypedef int __daddr_t;\ntypedef long int __swblk_t;\ntypedef int __key_t;\n\n\ntypedef int __clockid_t;\n\n\ntypedef void * __timer_t;\n\n\ntypedef long int __blksize_t;\n\n\n\n\ntypedef long int __blkcnt_t;\ntypedef long int __blkcnt64_t;\n\n\ntypedef unsigned long int __fsblkcnt_t;\ntypedef unsigned long int __fsblkcnt64_t;\n\n\ntypedef unsigned long int __fsfilcnt_t;\ntypedef unsigned long int __fsfilcnt64_t;\n\ntypedef long int __ssize_t;\n\n\n\ntypedef __off64_t __loff_t;\ntypedef __quad_t *__qaddr_t;\ntypedef char *__caddr_t;\n\n\ntypedef long int __intptr_t;\n\n\ntypedef unsigned int __socklen_t;\n// # 32 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\ntypedef __u_char u_char;\ntypedef __u_short u_short;\ntypedef __u_int u_int;\ntypedef __u_long u_long;\ntypedef __quad_t quad_t;\ntypedef __u_quad_t u_quad_t;\ntypedef __fsid_t fsid_t;\n\n\n\n\ntypedef __loff_t loff_t;\n\n\n\ntypedef __ino_t ino_t;\n\n\n\n\n\n\ntypedef __ino64_t ino64_t;\n\n\n\n\ntypedef __dev_t dev_t;\n\n\n\n\ntypedef __gid_t gid_t;\n\n\n\n\ntypedef __mode_t mode_t;\n\n\n\n\ntypedef __nlink_t nlink_t;\n\n\n\n\ntypedef __uid_t uid_t;\n\n\n\n\n\ntypedef __off_t off_t;\n\n\n\n\n\n\ntypedef __off64_t off64_t;\n\n\n\n\ntypedef __pid_t pid_t;\n\n\n\n\ntypedef __id_t id_t;\n\n\n\n\ntypedef __ssize_t ssize_t;\n\n\n\n\n\ntypedef __daddr_t daddr_t;\ntypedef __caddr_t caddr_t;\n\n\n\n\n\ntypedef __key_t key_t;\n// # 133 \"/usr/include/sys/types.h\" 3 4\n// # 1 \"/usr/include/time.h\" 1 3 4\n// # 59 \"/usr/include/time.h\" 3 4\n\n\ntypedef __clock_t clock_t;\n\n\n\n// # 75 \"/usr/include/time.h\" 3 4\n\n\ntypedef __time_t time_t;\n\n\n\n// # 93 \"/usr/include/time.h\" 3 4\ntypedef __clockid_t clockid_t;\n// # 105 \"/usr/include/time.h\" 3 4\ntypedef __timer_t timer_t;\n// # 134 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\ntypedef __useconds_t useconds_t;\n\n\n\ntypedef __suseconds_t suseconds_t;\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 148 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\ntypedef unsigned long int ulong;\ntypedef unsigned short int ushort;\ntypedef unsigned int uint;\n// # 195 \"/usr/include/sys/types.h\" 3 4\ntypedef int int8_t __attribute__ ((__mode__ (__QI__)));\ntypedef int int16_t __attribute__ ((__mode__ (__HI__)));\ntypedef int int32_t __attribute__ ((__mode__ (__SI__)));\ntypedef int int64_t __attribute__ ((__mode__ (__DI__)));\n\n\ntypedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));\ntypedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));\ntypedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));\ntypedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));\n\ntypedef int register_t __attribute__ ((__mode__ (__word__)));\n// # 217 \"/usr/include/sys/types.h\" 3 4\n// # 1 \"/usr/include/endian.h\" 1 3 4\n// # 37 \"/usr/include/endian.h\" 3 4\n// # 1 \"/usr/include/bits/endian.h\" 1 3 4\n// # 38 \"/usr/include/endian.h\" 2 3 4\n// # 218 \"/usr/include/sys/types.h\" 2 3 4\n\n\n// # 1 \"/usr/include/sys/select.h\" 1 3 4\n// # 31 \"/usr/include/sys/select.h\" 3 4\n// # 1 \"/usr/include/bits/select.h\" 1 3 4\n// # 32 \"/usr/include/sys/select.h\" 2 3 4\n\n\n// # 1 \"/usr/include/bits/sigset.h\" 1 3 4\n// # 23 \"/usr/include/bits/sigset.h\" 3 4\ntypedef int __sig_atomic_t;\n\n\n\n\ntypedef struct\n  {\n    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];\n  } __sigset_t;\n// # 35 \"/usr/include/sys/select.h\" 2 3 4\n\n\n\ntypedef __sigset_t sigset_t;\n\n\n\n\n\n// # 1 \"/usr/include/time.h\" 1 3 4\n// # 121 \"/usr/include/time.h\" 3 4\nstruct timespec\n  {\n    __time_t tv_sec;\n    long int tv_nsec;\n  };\n// # 45 \"/usr/include/sys/select.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/time.h\" 1 3 4\n// # 69 \"/usr/include/bits/time.h\" 3 4\nstruct timeval\n  {\n    __time_t tv_sec;\n    __suseconds_t tv_usec;\n  };\n// # 47 \"/usr/include/sys/select.h\" 2 3 4\n// # 55 \"/usr/include/sys/select.h\" 3 4\ntypedef long int __fd_mask;\n// # 67 \"/usr/include/sys/select.h\" 3 4\ntypedef struct\n  {\n\n\n\n    __fd_mask fds_bits[1024 / (8 * sizeof (__fd_mask))];\n\n\n\n\n\n  } fd_set;\n\n\n\n\n\n\ntypedef __fd_mask fd_mask;\n// # 99 \"/usr/include/sys/select.h\" 3 4\n\n// # 109 \"/usr/include/sys/select.h\" 3 4\nextern int select (int __nfds, fd_set *__restrict __readfds,\n     fd_set *__restrict __writefds,\n     fd_set *__restrict __exceptfds,\n     struct timeval *__restrict __timeout);\n// # 121 \"/usr/include/sys/select.h\" 3 4\nextern int pselect (int __nfds, fd_set *__restrict __readfds,\n      fd_set *__restrict __writefds,\n      fd_set *__restrict __exceptfds,\n      const struct timespec *__restrict __timeout,\n      const __sigset_t *__restrict __sigmask);\n\n\n\n// # 221 \"/usr/include/sys/types.h\" 2 3 4\n\n\n// # 1 \"/usr/include/sys/sysmacros.h\" 1 3 4\n// # 29 \"/usr/include/sys/sysmacros.h\" 3 4\n__extension__\nextern __inline unsigned int gnu_dev_major (unsigned long long int __dev)\n     __attribute__ ((__nothrow__));\n__extension__\nextern __inline unsigned int gnu_dev_minor (unsigned long long int __dev)\n     __attribute__ ((__nothrow__));\n__extension__\nextern __inline unsigned long long int gnu_dev_makedev (unsigned int __major,\n       unsigned int __minor)\n     __attribute__ ((__nothrow__));\n\n\n__extension__ extern __inline unsigned int\n__attribute__ ((__nothrow__)) gnu_dev_major (unsigned long long int __dev)\n{\n  return ((__dev >> 8) & 0xfff) | ((unsigned int) (__dev >> 32) & ~0xfff);\n}\n\n__extension__ extern __inline unsigned int\n__attribute__ ((__nothrow__)) gnu_dev_minor (unsigned long long int __dev)\n{\n  return (__dev & 0xff) | ((unsigned int) (__dev >> 12) & ~0xff);\n}\n\n__extension__ extern __inline unsigned long long int\n__attribute__ ((__nothrow__)) gnu_dev_makedev (unsigned int __major, unsigned int __minor)\n{\n  return ((__minor & 0xff) | ((__major & 0xfff) << 8)\n   | (((unsigned long long int) (__minor & ~0xff)) << 12)\n   | (((unsigned long long int) (__major & ~0xfff)) << 32));\n}\n// # 224 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\n\ntypedef __blksize_t blksize_t;\n\n\n\n\n\n\ntypedef __blkcnt_t blkcnt_t;\n\n\n\ntypedef __fsblkcnt_t fsblkcnt_t;\n\n\n\ntypedef __fsfilcnt_t fsfilcnt_t;\n// # 262 \"/usr/include/sys/types.h\" 3 4\ntypedef __blkcnt64_t blkcnt64_t;\ntypedef __fsblkcnt64_t fsblkcnt64_t;\ntypedef __fsfilcnt64_t fsfilcnt64_t;\n\n\n\n\n\n// # 1 \"/usr/include/bits/pthreadtypes.h\" 1 3 4\n// # 23 \"/usr/include/bits/pthreadtypes.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 24 \"/usr/include/bits/pthreadtypes.h\" 2 3 4\n// # 50 \"/usr/include/bits/pthreadtypes.h\" 3 4\ntypedef unsigned long int pthread_t;\n\n\ntypedef union\n{\n  char __size[56];\n  long int __align;\n} pthread_attr_t;\n\n\n\ntypedef struct __pthread_internal_list\n{\n  struct __pthread_internal_list *__prev;\n  struct __pthread_internal_list *__next;\n} __pthread_list_t;\n// # 76 \"/usr/include/bits/pthreadtypes.h\" 3 4\ntypedef union\n{\n  struct __pthread_mutex_s\n  {\n    int __lock;\n    unsigned int __count;\n    int __owner;\n\n    unsigned int __nusers;\n\n\n\n    int __kind;\n\n    int __spins;\n    __pthread_list_t __list;\n// # 101 \"/usr/include/bits/pthreadtypes.h\" 3 4\n  } __data;\n  char __size[40];\n  long int __align;\n} pthread_mutex_t;\n\ntypedef union\n{\n  char __size[4];\n  int __align;\n} pthread_mutexattr_t;\n\n\n\n\ntypedef union\n{\n  struct\n  {\n    int __lock;\n    unsigned int __futex;\n    __extension__ unsigned long long int __total_seq;\n    __extension__ unsigned long long int __wakeup_seq;\n    __extension__ unsigned long long int __woken_seq;\n    void *__mutex;\n    unsigned int __nwaiters;\n    unsigned int __broadcast_seq;\n  } __data;\n  char __size[48];\n  __extension__ long long int __align;\n} pthread_cond_t;\n\ntypedef union\n{\n  char __size[4];\n  int __align;\n} pthread_condattr_t;\n\n\n\ntypedef unsigned int pthread_key_t;\n\n\n\ntypedef int pthread_once_t;\n\n\n\n\n\ntypedef union\n{\n\n  struct\n  {\n    int __lock;\n    unsigned int __nr_readers;\n    unsigned int __readers_wakeup;\n    unsigned int __writer_wakeup;\n    unsigned int __nr_readers_queued;\n    unsigned int __nr_writers_queued;\n    int __writer;\n    int __shared;\n    unsigned long int __pad1;\n    unsigned long int __pad2;\n\n\n    unsigned int __flags;\n  } __data;\n// # 187 \"/usr/include/bits/pthreadtypes.h\" 3 4\n  char __size[56];\n  long int __align;\n} pthread_rwlock_t;\n\ntypedef union\n{\n  char __size[8];\n  long int __align;\n} pthread_rwlockattr_t;\n\n\n\n\n\ntypedef volatile int pthread_spinlock_t;\n\n\n\n\ntypedef union\n{\n  char __size[32];\n  long int __align;\n} pthread_barrier_t;\n\ntypedef union\n{\n  char __size[4];\n  int __align;\n} pthread_barrierattr_t;\n// # 271 \"/usr/include/sys/types.h\" 2 3 4\n\n\n\n// # 124 \"zsh_system.h\" 2\n\n\n\n// # 1 \"/usr/include/unistd.h\" 1 3 4\n// # 28 \"/usr/include/unistd.h\" 3 4\n\n// # 173 \"/usr/include/unistd.h\" 3 4\n// # 1 \"/usr/include/bits/posix_opt.h\" 1 3 4\n// # 174 \"/usr/include/unistd.h\" 2 3 4\n\n\n\n// # 1 \"/usr/include/bits/environments.h\" 1 3 4\n// # 23 \"/usr/include/bits/environments.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 24 \"/usr/include/bits/environments.h\" 2 3 4\n// # 178 \"/usr/include/unistd.h\" 2 3 4\n// # 197 \"/usr/include/unistd.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 198 \"/usr/include/unistd.h\" 2 3 4\n// # 238 \"/usr/include/unistd.h\" 3 4\ntypedef __intptr_t intptr_t;\n\n\n\n\n\n\ntypedef __socklen_t socklen_t;\n// # 258 \"/usr/include/unistd.h\" 3 4\nextern int access (__const char *__name, int __type) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int euidaccess (__const char *__name, int __type)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int eaccess (__const char *__name, int __type)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int faccessat (int __fd, __const char *__file, int __type, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;\n// # 301 \"/usr/include/unistd.h\" 3 4\nextern __off_t lseek (int __fd, __off_t __offset, int __whence) __attribute__ ((__nothrow__));\n// # 312 \"/usr/include/unistd.h\" 3 4\nextern __off64_t lseek64 (int __fd, __off64_t __offset, int __whence)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int close (int __fd);\n\n\n\n\n\n\nextern ssize_t read (int __fd, void *__buf, size_t __nbytes) ;\n\n\n\n\n\nextern ssize_t write (int __fd, __const void *__buf, size_t __n) ;\n// # 343 \"/usr/include/unistd.h\" 3 4\nextern ssize_t pread (int __fd, void *__buf, size_t __nbytes,\n        __off_t __offset) ;\n\n\n\n\n\n\nextern ssize_t pwrite (int __fd, __const void *__buf, size_t __n,\n         __off_t __offset) ;\n// # 371 \"/usr/include/unistd.h\" 3 4\nextern ssize_t pread64 (int __fd, void *__buf, size_t __nbytes,\n   __off64_t __offset) ;\n\n\nextern ssize_t pwrite64 (int __fd, __const void *__buf, size_t __n,\n    __off64_t __offset) ;\n\n\n\n\n\n\n\nextern int pipe (int __pipedes[2]) __attribute__ ((__nothrow__)) ;\n// # 393 \"/usr/include/unistd.h\" 3 4\nextern unsigned int alarm (unsigned int __seconds) __attribute__ ((__nothrow__));\n// # 405 \"/usr/include/unistd.h\" 3 4\nextern unsigned int sleep (unsigned int __seconds);\n\n\n\n\n\n\nextern __useconds_t ualarm (__useconds_t __value, __useconds_t __interval)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int usleep (__useconds_t __useconds);\n// # 429 \"/usr/include/unistd.h\" 3 4\nextern int pause (void);\n\n\n\nextern int chown (__const char *__file, __uid_t __owner, __gid_t __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern int fchown (int __fd, __uid_t __owner, __gid_t __group) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern int lchown (__const char *__file, __uid_t __owner, __gid_t __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n\nextern int fchownat (int __fd, __const char *__file, __uid_t __owner,\n       __gid_t __group, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;\n\n\n\nextern int chdir (__const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern int fchdir (int __fd) __attribute__ ((__nothrow__)) ;\n// # 471 \"/usr/include/unistd.h\" 3 4\nextern char *getcwd (char *__buf, size_t __size) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\nextern char *get_current_dir_name (void) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern char *getwd (char *__buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__)) ;\n\n\n\n\nextern int dup (int __fd) __attribute__ ((__nothrow__)) ;\n\n\nextern int dup2 (int __fd, int __fd2) __attribute__ ((__nothrow__));\n\n\nextern char **__environ;\n\nextern char **environ;\n\n\n\n\n\nextern int execve (__const char *__path, char *__const __argv[],\n     char *__const __envp[]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int fexecve (int __fd, char *__const __argv[], char *__const __envp[])\n     __attribute__ ((__nothrow__));\n\n\n\n\nextern int execv (__const char *__path, char *__const __argv[])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int execle (__const char *__path, __const char *__arg, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int execl (__const char *__path, __const char *__arg, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int execvp (__const char *__file, char *__const __argv[])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int execlp (__const char *__file, __const char *__arg, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int nice (int __inc) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern void _exit (int __status) __attribute__ ((__noreturn__));\n\n\n\n\n\n// # 1 \"/usr/include/bits/confname.h\" 1 3 4\n// # 26 \"/usr/include/bits/confname.h\" 3 4\nenum\n  {\n    _PC_LINK_MAX,\n\n    _PC_MAX_CANON,\n\n    _PC_MAX_INPUT,\n\n    _PC_NAME_MAX,\n\n    _PC_PATH_MAX,\n\n    _PC_PIPE_BUF,\n\n    _PC_CHOWN_RESTRICTED,\n\n    _PC_NO_TRUNC,\n\n    _PC_VDISABLE,\n\n    _PC_SYNC_IO,\n\n    _PC_ASYNC_IO,\n\n    _PC_PRIO_IO,\n\n    _PC_SOCK_MAXBUF,\n\n    _PC_FILESIZEBITS,\n\n    _PC_REC_INCR_XFER_SIZE,\n\n    _PC_REC_MAX_XFER_SIZE,\n\n    _PC_REC_MIN_XFER_SIZE,\n\n    _PC_REC_XFER_ALIGN,\n\n    _PC_ALLOC_SIZE_MIN,\n\n    _PC_SYMLINK_MAX,\n\n    _PC_2_SYMLINKS\n\n  };\n\n\nenum\n  {\n    _SC_ARG_MAX,\n\n    _SC_CHILD_MAX,\n\n    _SC_CLK_TCK,\n\n    _SC_NGROUPS_MAX,\n\n    _SC_OPEN_MAX,\n\n    _SC_STREAM_MAX,\n\n    _SC_TZNAME_MAX,\n\n    _SC_JOB_CONTROL,\n\n    _SC_SAVED_IDS,\n\n    _SC_REALTIME_SIGNALS,\n\n    _SC_PRIORITY_SCHEDULING,\n\n    _SC_TIMERS,\n\n    _SC_ASYNCHRONOUS_IO,\n\n    _SC_PRIORITIZED_IO,\n\n    _SC_SYNCHRONIZED_IO,\n\n    _SC_FSYNC,\n\n    _SC_MAPPED_FILES,\n\n    _SC_MEMLOCK,\n\n    _SC_MEMLOCK_RANGE,\n\n    _SC_MEMORY_PROTECTION,\n\n    _SC_MESSAGE_PASSING,\n\n    _SC_SEMAPHORES,\n\n    _SC_SHARED_MEMORY_OBJECTS,\n\n    _SC_AIO_LISTIO_MAX,\n\n    _SC_AIO_MAX,\n\n    _SC_AIO_PRIO_DELTA_MAX,\n\n    _SC_DELAYTIMER_MAX,\n\n    _SC_MQ_OPEN_MAX,\n\n    _SC_MQ_PRIO_MAX,\n\n    _SC_VERSION,\n\n    _SC_PAGESIZE,\n\n\n    _SC_RTSIG_MAX,\n\n    _SC_SEM_NSEMS_MAX,\n\n    _SC_SEM_VALUE_MAX,\n\n    _SC_SIGQUEUE_MAX,\n\n    _SC_TIMER_MAX,\n\n\n\n\n    _SC_BC_BASE_MAX,\n\n    _SC_BC_DIM_MAX,\n\n    _SC_BC_SCALE_MAX,\n\n    _SC_BC_STRING_MAX,\n\n    _SC_COLL_WEIGHTS_MAX,\n\n    _SC_EQUIV_CLASS_MAX,\n\n    _SC_EXPR_NEST_MAX,\n\n    _SC_LINE_MAX,\n\n    _SC_RE_DUP_MAX,\n\n    _SC_CHARCLASS_NAME_MAX,\n\n\n    _SC_2_VERSION,\n\n    _SC_2_C_BIND,\n\n    _SC_2_C_DEV,\n\n    _SC_2_FORT_DEV,\n\n    _SC_2_FORT_RUN,\n\n    _SC_2_SW_DEV,\n\n    _SC_2_LOCALEDEF,\n\n\n    _SC_PII,\n\n    _SC_PII_XTI,\n\n    _SC_PII_SOCKET,\n\n    _SC_PII_INTERNET,\n\n    _SC_PII_OSI,\n\n    _SC_POLL,\n\n    _SC_SELECT,\n\n    _SC_UIO_MAXIOV,\n\n    _SC_IOV_MAX = _SC_UIO_MAXIOV,\n\n    _SC_PII_INTERNET_STREAM,\n\n    _SC_PII_INTERNET_DGRAM,\n\n    _SC_PII_OSI_COTS,\n\n    _SC_PII_OSI_CLTS,\n\n    _SC_PII_OSI_M,\n\n    _SC_T_IOV_MAX,\n\n\n\n    _SC_THREADS,\n\n    _SC_THREAD_SAFE_FUNCTIONS,\n\n    _SC_GETGR_R_SIZE_MAX,\n\n    _SC_GETPW_R_SIZE_MAX,\n\n    _SC_LOGIN_NAME_MAX,\n\n    _SC_TTY_NAME_MAX,\n\n    _SC_THREAD_DESTRUCTOR_ITERATIONS,\n\n    _SC_THREAD_KEYS_MAX,\n\n    _SC_THREAD_STACK_MIN,\n\n    _SC_THREAD_THREADS_MAX,\n\n    _SC_THREAD_ATTR_STACKADDR,\n\n    _SC_THREAD_ATTR_STACKSIZE,\n\n    _SC_THREAD_PRIORITY_SCHEDULING,\n\n    _SC_THREAD_PRIO_INHERIT,\n\n    _SC_THREAD_PRIO_PROTECT,\n\n    _SC_THREAD_PROCESS_SHARED,\n\n\n    _SC_NPROCESSORS_CONF,\n\n    _SC_NPROCESSORS_ONLN,\n\n    _SC_PHYS_PAGES,\n\n    _SC_AVPHYS_PAGES,\n\n    _SC_ATEXIT_MAX,\n\n    _SC_PASS_MAX,\n\n\n    _SC_XOPEN_VERSION,\n\n    _SC_XOPEN_XCU_VERSION,\n\n    _SC_XOPEN_UNIX,\n\n    _SC_XOPEN_CRYPT,\n\n    _SC_XOPEN_ENH_I18N,\n\n    _SC_XOPEN_SHM,\n\n\n    _SC_2_CHAR_TERM,\n\n    _SC_2_C_VERSION,\n\n    _SC_2_UPE,\n\n\n    _SC_XOPEN_XPG2,\n\n    _SC_XOPEN_XPG3,\n\n    _SC_XOPEN_XPG4,\n\n\n    _SC_CHAR_BIT,\n\n    _SC_CHAR_MAX,\n\n    _SC_CHAR_MIN,\n\n    _SC_INT_MAX,\n\n    _SC_INT_MIN,\n\n    _SC_LONG_BIT,\n\n    _SC_WORD_BIT,\n\n    _SC_MB_LEN_MAX,\n\n    _SC_NZERO,\n\n    _SC_SSIZE_MAX,\n\n    _SC_SCHAR_MAX,\n\n    _SC_SCHAR_MIN,\n\n    _SC_SHRT_MAX,\n\n    _SC_SHRT_MIN,\n\n    _SC_UCHAR_MAX,\n\n    _SC_UINT_MAX,\n\n    _SC_ULONG_MAX,\n\n    _SC_USHRT_MAX,\n\n\n    _SC_NL_ARGMAX,\n\n    _SC_NL_LANGMAX,\n\n    _SC_NL_MSGMAX,\n\n    _SC_NL_NMAX,\n\n    _SC_NL_SETMAX,\n\n    _SC_NL_TEXTMAX,\n\n\n    _SC_XBS5_ILP32_OFF32,\n\n    _SC_XBS5_ILP32_OFFBIG,\n\n    _SC_XBS5_LP64_OFF64,\n\n    _SC_XBS5_LPBIG_OFFBIG,\n\n\n    _SC_XOPEN_LEGACY,\n\n    _SC_XOPEN_REALTIME,\n\n    _SC_XOPEN_REALTIME_THREADS,\n\n\n    _SC_ADVISORY_INFO,\n\n    _SC_BARRIERS,\n\n    _SC_BASE,\n\n    _SC_C_LANG_SUPPORT,\n\n    _SC_C_LANG_SUPPORT_R,\n\n    _SC_CLOCK_SELECTION,\n\n    _SC_CPUTIME,\n\n    _SC_THREAD_CPUTIME,\n\n    _SC_DEVICE_IO,\n\n    _SC_DEVICE_SPECIFIC,\n\n    _SC_DEVICE_SPECIFIC_R,\n\n    _SC_FD_MGMT,\n\n    _SC_FIFO,\n\n    _SC_PIPE,\n\n    _SC_FILE_ATTRIBUTES,\n\n    _SC_FILE_LOCKING,\n\n    _SC_FILE_SYSTEM,\n\n    _SC_MONOTONIC_CLOCK,\n\n    _SC_MULTI_PROCESS,\n\n    _SC_SINGLE_PROCESS,\n\n    _SC_NETWORKING,\n\n    _SC_READER_WRITER_LOCKS,\n\n    _SC_SPIN_LOCKS,\n\n    _SC_REGEXP,\n\n    _SC_REGEX_VERSION,\n\n    _SC_SHELL,\n\n    _SC_SIGNALS,\n\n    _SC_SPAWN,\n\n    _SC_SPORADIC_SERVER,\n\n    _SC_THREAD_SPORADIC_SERVER,\n\n    _SC_SYSTEM_DATABASE,\n\n    _SC_SYSTEM_DATABASE_R,\n\n    _SC_TIMEOUTS,\n\n    _SC_TYPED_MEMORY_OBJECTS,\n\n    _SC_USER_GROUPS,\n\n    _SC_USER_GROUPS_R,\n\n    _SC_2_PBS,\n\n    _SC_2_PBS_ACCOUNTING,\n\n    _SC_2_PBS_LOCATE,\n\n    _SC_2_PBS_MESSAGE,\n\n    _SC_2_PBS_TRACK,\n\n    _SC_SYMLOOP_MAX,\n\n    _SC_STREAMS,\n\n    _SC_2_PBS_CHECKPOINT,\n\n\n    _SC_V6_ILP32_OFF32,\n\n    _SC_V6_ILP32_OFFBIG,\n\n    _SC_V6_LP64_OFF64,\n\n    _SC_V6_LPBIG_OFFBIG,\n\n\n    _SC_HOST_NAME_MAX,\n\n    _SC_TRACE,\n\n    _SC_TRACE_EVENT_FILTER,\n\n    _SC_TRACE_INHERIT,\n\n    _SC_TRACE_LOG,\n\n\n    _SC_LEVEL1_ICACHE_SIZE,\n\n    _SC_LEVEL1_ICACHE_ASSOC,\n\n    _SC_LEVEL1_ICACHE_LINESIZE,\n\n    _SC_LEVEL1_DCACHE_SIZE,\n\n    _SC_LEVEL1_DCACHE_ASSOC,\n\n    _SC_LEVEL1_DCACHE_LINESIZE,\n\n    _SC_LEVEL2_CACHE_SIZE,\n\n    _SC_LEVEL2_CACHE_ASSOC,\n\n    _SC_LEVEL2_CACHE_LINESIZE,\n\n    _SC_LEVEL3_CACHE_SIZE,\n\n    _SC_LEVEL3_CACHE_ASSOC,\n\n    _SC_LEVEL3_CACHE_LINESIZE,\n\n    _SC_LEVEL4_CACHE_SIZE,\n\n    _SC_LEVEL4_CACHE_ASSOC,\n\n    _SC_LEVEL4_CACHE_LINESIZE,\n\n\n\n    _SC_IPV6 = _SC_LEVEL1_ICACHE_SIZE + 50,\n\n    _SC_RAW_SOCKETS\n\n  };\n\n\nenum\n  {\n    _CS_PATH,\n\n\n    _CS_V6_WIDTH_RESTRICTED_ENVS,\n\n\n    _CS_GNU_LIBC_VERSION,\n\n    _CS_GNU_LIBPTHREAD_VERSION,\n\n\n    _CS_LFS_CFLAGS = 1000,\n\n    _CS_LFS_LDFLAGS,\n\n    _CS_LFS_LIBS,\n\n    _CS_LFS_LINTFLAGS,\n\n    _CS_LFS64_CFLAGS,\n\n    _CS_LFS64_LDFLAGS,\n\n    _CS_LFS64_LIBS,\n\n    _CS_LFS64_LINTFLAGS,\n\n\n    _CS_XBS5_ILP32_OFF32_CFLAGS = 1100,\n\n    _CS_XBS5_ILP32_OFF32_LDFLAGS,\n\n    _CS_XBS5_ILP32_OFF32_LIBS,\n\n    _CS_XBS5_ILP32_OFF32_LINTFLAGS,\n\n    _CS_XBS5_ILP32_OFFBIG_CFLAGS,\n\n    _CS_XBS5_ILP32_OFFBIG_LDFLAGS,\n\n    _CS_XBS5_ILP32_OFFBIG_LIBS,\n\n    _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,\n\n    _CS_XBS5_LP64_OFF64_CFLAGS,\n\n    _CS_XBS5_LP64_OFF64_LDFLAGS,\n\n    _CS_XBS5_LP64_OFF64_LIBS,\n\n    _CS_XBS5_LP64_OFF64_LINTFLAGS,\n\n    _CS_XBS5_LPBIG_OFFBIG_CFLAGS,\n\n    _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,\n\n    _CS_XBS5_LPBIG_OFFBIG_LIBS,\n\n    _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,\n\n\n    _CS_POSIX_V6_ILP32_OFF32_CFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFF32_LIBS,\n\n    _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,\n\n    _CS_POSIX_V6_ILP32_OFFBIG_LIBS,\n\n    _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,\n\n    _CS_POSIX_V6_LP64_OFF64_CFLAGS,\n\n    _CS_POSIX_V6_LP64_OFF64_LDFLAGS,\n\n    _CS_POSIX_V6_LP64_OFF64_LIBS,\n\n    _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,\n\n    _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,\n\n    _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,\n\n    _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,\n\n    _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS\n\n  };\n// # 555 \"/usr/include/unistd.h\" 2 3 4\n\n\nextern long int pathconf (__const char *__path, int __name)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern long int fpathconf (int __fd, int __name) __attribute__ ((__nothrow__));\n\n\nextern long int sysconf (int __name) __attribute__ ((__nothrow__));\n\n\n\nextern size_t confstr (int __name, char *__buf, size_t __len) __attribute__ ((__nothrow__));\n\n\n\n\nextern __pid_t getpid (void) __attribute__ ((__nothrow__));\n\n\nextern __pid_t getppid (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern __pid_t getpgrp (void) __attribute__ ((__nothrow__));\n// # 591 \"/usr/include/unistd.h\" 3 4\nextern __pid_t __getpgid (__pid_t __pid) __attribute__ ((__nothrow__));\n\nextern __pid_t getpgid (__pid_t __pid) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int setpgid (__pid_t __pid, __pid_t __pgid) __attribute__ ((__nothrow__));\n// # 617 \"/usr/include/unistd.h\" 3 4\nextern int setpgrp (void) __attribute__ ((__nothrow__));\n// # 634 \"/usr/include/unistd.h\" 3 4\nextern __pid_t setsid (void) __attribute__ ((__nothrow__));\n\n\n\nextern __pid_t getsid (__pid_t __pid) __attribute__ ((__nothrow__));\n\n\n\nextern __uid_t getuid (void) __attribute__ ((__nothrow__));\n\n\nextern __uid_t geteuid (void) __attribute__ ((__nothrow__));\n\n\nextern __gid_t getgid (void) __attribute__ ((__nothrow__));\n\n\nextern __gid_t getegid (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern int getgroups (int __size, __gid_t __list[]) __attribute__ ((__nothrow__)) ;\n\n\n\nextern int group_member (__gid_t __gid) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int setuid (__uid_t __uid) __attribute__ ((__nothrow__));\n\n\n\n\nextern int setreuid (__uid_t __ruid, __uid_t __euid) __attribute__ ((__nothrow__));\n\n\n\n\nextern int seteuid (__uid_t __uid) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int setgid (__gid_t __gid) __attribute__ ((__nothrow__));\n\n\n\n\nextern int setregid (__gid_t __rgid, __gid_t __egid) __attribute__ ((__nothrow__));\n\n\n\n\nextern int setegid (__gid_t __gid) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int getresuid (__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid)\n     __attribute__ ((__nothrow__));\n\n\n\nextern int getresgid (__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid)\n     __attribute__ ((__nothrow__));\n\n\n\nextern int setresuid (__uid_t __ruid, __uid_t __euid, __uid_t __suid)\n     __attribute__ ((__nothrow__));\n\n\n\nextern int setresgid (__gid_t __rgid, __gid_t __egid, __gid_t __sgid)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern __pid_t fork (void) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern __pid_t vfork (void) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *ttyname (int __fd) __attribute__ ((__nothrow__));\n\n\n\nextern int ttyname_r (int __fd, char *__buf, size_t __buflen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;\n\n\n\nextern int isatty (int __fd) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int ttyslot (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern int link (__const char *__from, __const char *__to)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;\n\n\n\n\nextern int linkat (int __fromfd, __const char *__from, int __tofd,\n     __const char *__to, int __flags)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4))) ;\n\n\n\n\nextern int symlink (__const char *__from, __const char *__to)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;\n\n\n\n\nextern ssize_t readlink (__const char *__restrict __path,\n    char *__restrict __buf, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2))) ;\n\n\n\n\nextern int symlinkat (__const char *__from, int __tofd,\n        __const char *__to) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;\n\n\nextern ssize_t readlinkat (int __fd, __const char *__restrict __path,\n      char *__restrict __buf, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3))) ;\n\n\n\nextern int unlink (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int unlinkat (int __fd, __const char *__name, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\nextern int rmdir (__const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern __pid_t tcgetpgrp (int __fd) __attribute__ ((__nothrow__));\n\n\nextern int tcsetpgrp (int __fd, __pid_t __pgrp_id) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern char *getlogin (void);\n\n\n\n\n\n\n\nextern int getlogin_r (char *__name, size_t __name_len) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int setlogin (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 837 \"/usr/include/unistd.h\" 3 4\n// # 1 \"/usr/include/getopt.h\" 1 3 4\n// # 59 \"/usr/include/getopt.h\" 3 4\nextern char *optarg;\n// # 73 \"/usr/include/getopt.h\" 3 4\nextern int optind;\n\n\n\n\nextern int opterr;\n\n\n\nextern int optopt;\n// # 152 \"/usr/include/getopt.h\" 3 4\nextern int getopt (int ___argc, char *const *___argv, const char *__shortopts)\n       __attribute__ ((__nothrow__));\n// # 838 \"/usr/include/unistd.h\" 2 3 4\n\n\n\n\n\n\n\nextern int gethostname (char *__name, size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int sethostname (__const char *__name, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern int sethostid (long int __id) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\nextern int getdomainname (char *__name, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\nextern int setdomainname (__const char *__name, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern int vhangup (void) __attribute__ ((__nothrow__));\n\n\nextern int revoke (__const char *__file) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n\n\nextern int profil (unsigned short int *__sample_buffer, size_t __size,\n     size_t __offset, unsigned int __scale)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int acct (__const char *__name) __attribute__ ((__nothrow__));\n\n\n\nextern char *getusershell (void) __attribute__ ((__nothrow__));\nextern void endusershell (void) __attribute__ ((__nothrow__));\nextern void setusershell (void) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int daemon (int __nochdir, int __noclose) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\nextern int chroot (__const char *__path) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern char *getpass (__const char *__prompt) __attribute__ ((__nonnull__ (1)));\n// # 923 \"/usr/include/unistd.h\" 3 4\nextern int fsync (int __fd);\n\n\n\n\n\n\nextern long int gethostid (void);\n\n\nextern void sync (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern int getpagesize (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\n\n\nextern int getdtablesize (void) __attribute__ ((__nothrow__));\n\n\n\n\nextern int truncate (__const char *__file, __off_t __length)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 960 \"/usr/include/unistd.h\" 3 4\nextern int truncate64 (__const char *__file, __off64_t __length)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 970 \"/usr/include/unistd.h\" 3 4\nextern int ftruncate (int __fd, __off_t __length) __attribute__ ((__nothrow__)) ;\n// # 980 \"/usr/include/unistd.h\" 3 4\nextern int ftruncate64 (int __fd, __off64_t __length) __attribute__ ((__nothrow__)) ;\n// # 990 \"/usr/include/unistd.h\" 3 4\nextern int brk (void *__addr) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\nextern void *sbrk (intptr_t __delta) __attribute__ ((__nothrow__));\n// # 1011 \"/usr/include/unistd.h\" 3 4\nextern long int syscall (long int __sysno, ...) __attribute__ ((__nothrow__));\n// # 1034 \"/usr/include/unistd.h\" 3 4\nextern int lockf (int __fd, int __cmd, __off_t __len) ;\n// # 1044 \"/usr/include/unistd.h\" 3 4\nextern int lockf64 (int __fd, int __cmd, __off64_t __len) ;\n// # 1065 \"/usr/include/unistd.h\" 3 4\nextern int fdatasync (int __fildes);\n\n\n\n\n\n\n\nextern char *crypt (__const char *__key, __const char *__salt)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern void encrypt (char *__block, int __edflag) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern void swab (__const void *__restrict __from, void *__restrict __to,\n    ssize_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\n\nextern char *ctermid (char *__s) __attribute__ ((__nothrow__));\n// # 1103 \"/usr/include/unistd.h\" 3 4\n\n// # 128 \"zsh_system.h\" 2\n// # 137 \"zsh_system.h\"\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 152 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 3 4\ntypedef long int ptrdiff_t;\n// # 326 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 3 4\ntypedef int wchar_t;\n// # 138 \"zsh_system.h\" 2\n\n\n// # 1 \"/usr/include/stdio.h\" 1 3 4\n// # 30 \"/usr/include/stdio.h\" 3 4\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 35 \"/usr/include/stdio.h\" 2 3 4\n// # 44 \"/usr/include/stdio.h\" 3 4\n\n\ntypedef struct _IO_FILE FILE;\n\n\n\n\n\n// # 62 \"/usr/include/stdio.h\" 3 4\ntypedef struct _IO_FILE __FILE;\n// # 72 \"/usr/include/stdio.h\" 3 4\n// # 1 \"/usr/include/libio.h\" 1 3 4\n// # 32 \"/usr/include/libio.h\" 3 4\n// # 1 \"/usr/include/_G_config.h\" 1 3 4\n// # 14 \"/usr/include/_G_config.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 355 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 3 4\ntypedef unsigned int wint_t;\n// # 15 \"/usr/include/_G_config.h\" 2 3 4\n// # 24 \"/usr/include/_G_config.h\" 3 4\n// # 1 \"/usr/include/wchar.h\" 1 3 4\n// # 48 \"/usr/include/wchar.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 49 \"/usr/include/wchar.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/wchar.h\" 1 3 4\n// # 51 \"/usr/include/wchar.h\" 2 3 4\n// # 76 \"/usr/include/wchar.h\" 3 4\ntypedef struct\n{\n  int __count;\n  union\n  {\n    wint_t __wch;\n    char __wchb[4];\n  } __value;\n} __mbstate_t;\n// # 25 \"/usr/include/_G_config.h\" 2 3 4\n\ntypedef struct\n{\n  __off_t __pos;\n  __mbstate_t __state;\n} _G_fpos_t;\ntypedef struct\n{\n  __off64_t __pos;\n  __mbstate_t __state;\n} _G_fpos64_t;\n// # 44 \"/usr/include/_G_config.h\" 3 4\n// # 1 \"/usr/include/gconv.h\" 1 3 4\n// # 28 \"/usr/include/gconv.h\" 3 4\n// # 1 \"/usr/include/wchar.h\" 1 3 4\n// # 48 \"/usr/include/wchar.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 49 \"/usr/include/wchar.h\" 2 3 4\n// # 29 \"/usr/include/gconv.h\" 2 3 4\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 32 \"/usr/include/gconv.h\" 2 3 4\n\n\n\n\n\nenum\n{\n  __GCONV_OK = 0,\n  __GCONV_NOCONV,\n  __GCONV_NODB,\n  __GCONV_NOMEM,\n\n  __GCONV_EMPTY_INPUT,\n  __GCONV_FULL_OUTPUT,\n  __GCONV_ILLEGAL_INPUT,\n  __GCONV_INCOMPLETE_INPUT,\n\n  __GCONV_ILLEGAL_DESCRIPTOR,\n  __GCONV_INTERNAL_ERROR\n};\n\n\n\nenum\n{\n  __GCONV_IS_LAST = 0x0001,\n  __GCONV_IGNORE_ERRORS = 0x0002\n};\n\n\n\nstruct __gconv_step;\nstruct __gconv_step_data;\nstruct __gconv_loaded_object;\nstruct __gconv_trans_data;\n\n\n\ntypedef int (*__gconv_fct) (struct __gconv_step *, struct __gconv_step_data *,\n       __const unsigned char **, __const unsigned char *,\n       unsigned char **, size_t *, int, int);\n\n\ntypedef wint_t (*__gconv_btowc_fct) (struct __gconv_step *, unsigned char);\n\n\ntypedef int (*__gconv_init_fct) (struct __gconv_step *);\ntypedef void (*__gconv_end_fct) (struct __gconv_step *);\n\n\n\ntypedef int (*__gconv_trans_fct) (struct __gconv_step *,\n      struct __gconv_step_data *, void *,\n      __const unsigned char *,\n      __const unsigned char **,\n      __const unsigned char *, unsigned char **,\n      size_t *);\n\n\ntypedef int (*__gconv_trans_context_fct) (void *, __const unsigned char *,\n       __const unsigned char *,\n       unsigned char *, unsigned char *);\n\n\ntypedef int (*__gconv_trans_query_fct) (__const char *, __const char ***,\n     size_t *);\n\n\ntypedef int (*__gconv_trans_init_fct) (void **, const char *);\ntypedef void (*__gconv_trans_end_fct) (void *);\n\nstruct __gconv_trans_data\n{\n\n  __gconv_trans_fct __trans_fct;\n  __gconv_trans_context_fct __trans_context_fct;\n  __gconv_trans_end_fct __trans_end_fct;\n  void *__data;\n  struct __gconv_trans_data *__next;\n};\n\n\n\nstruct __gconv_step\n{\n  struct __gconv_loaded_object *__shlib_handle;\n  __const char *__modname;\n\n  int __counter;\n\n  char *__from_name;\n  char *__to_name;\n\n  __gconv_fct __fct;\n  __gconv_btowc_fct __btowc_fct;\n  __gconv_init_fct __init_fct;\n  __gconv_end_fct __end_fct;\n\n\n\n  int __min_needed_from;\n  int __max_needed_from;\n  int __min_needed_to;\n  int __max_needed_to;\n\n\n  int __stateful;\n\n  void *__data;\n};\n\n\n\nstruct __gconv_step_data\n{\n  unsigned char *__outbuf;\n  unsigned char *__outbufend;\n\n\n\n  int __flags;\n\n\n\n  int __invocation_counter;\n\n\n\n  int __internal_use;\n\n  __mbstate_t *__statep;\n  __mbstate_t __state;\n\n\n\n  struct __gconv_trans_data *__trans;\n};\n\n\n\ntypedef struct __gconv_info\n{\n  size_t __nsteps;\n  struct __gconv_step *__steps;\n  __extension__ struct __gconv_step_data __data [];\n} *__gconv_t;\n// # 45 \"/usr/include/_G_config.h\" 2 3 4\ntypedef union\n{\n  struct __gconv_info __cd;\n  struct\n  {\n    struct __gconv_info __cd;\n    struct __gconv_step_data __data;\n  } __combined;\n} _G_iconv_t;\n\ntypedef int _G_int16_t __attribute__ ((__mode__ (__HI__)));\ntypedef int _G_int32_t __attribute__ ((__mode__ (__SI__)));\ntypedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));\ntypedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));\n// # 33 \"/usr/include/libio.h\" 2 3 4\n// # 53 \"/usr/include/libio.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stdarg.h\" 1 3 4\n// # 43 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stdarg.h\" 3 4\ntypedef __builtin_va_list __gnuc_va_list;\n// # 54 \"/usr/include/libio.h\" 2 3 4\n// # 167 \"/usr/include/libio.h\" 3 4\nstruct _IO_jump_t; struct _IO_FILE;\n// # 177 \"/usr/include/libio.h\" 3 4\ntypedef void _IO_lock_t;\n\n\n\n\n\nstruct _IO_marker {\n  struct _IO_marker *_next;\n  struct _IO_FILE *_sbuf;\n\n\n\n  int _pos;\n// # 200 \"/usr/include/libio.h\" 3 4\n};\n\n\nenum __codecvt_result\n{\n  __codecvt_ok,\n  __codecvt_partial,\n  __codecvt_error,\n  __codecvt_noconv\n};\n// # 268 \"/usr/include/libio.h\" 3 4\nstruct _IO_FILE {\n  int _flags;\n\n\n\n\n  char* _IO_read_ptr;\n  char* _IO_read_end;\n  char* _IO_read_base;\n  char* _IO_write_base;\n  char* _IO_write_ptr;\n  char* _IO_write_end;\n  char* _IO_buf_base;\n  char* _IO_buf_end;\n\n  char *_IO_save_base;\n  char *_IO_backup_base;\n  char *_IO_save_end;\n\n  struct _IO_marker *_markers;\n\n  struct _IO_FILE *_chain;\n\n  int _fileno;\n\n\n\n  int _flags2;\n\n  __off_t _old_offset;\n\n\n\n  unsigned short _cur_column;\n  signed char _vtable_offset;\n  char _shortbuf[1];\n\n\n\n  _IO_lock_t *_lock;\n// # 316 \"/usr/include/libio.h\" 3 4\n  __off64_t _offset;\n// # 325 \"/usr/include/libio.h\" 3 4\n  void *__pad1;\n  void *__pad2;\n  void *__pad3;\n  void *__pad4;\n  size_t __pad5;\n\n  int _mode;\n\n  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];\n\n};\n\n\ntypedef struct _IO_FILE _IO_FILE;\n\n\nstruct _IO_FILE_plus;\n\nextern struct _IO_FILE_plus _IO_2_1_stdin_;\nextern struct _IO_FILE_plus _IO_2_1_stdout_;\nextern struct _IO_FILE_plus _IO_2_1_stderr_;\n// # 361 \"/usr/include/libio.h\" 3 4\ntypedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);\n\n\n\n\n\n\n\ntypedef __ssize_t __io_write_fn (void *__cookie, __const char *__buf,\n     size_t __n);\n\n\n\n\n\n\n\ntypedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);\n\n\ntypedef int __io_close_fn (void *__cookie);\n\n\n\n\ntypedef __io_read_fn cookie_read_function_t;\ntypedef __io_write_fn cookie_write_function_t;\ntypedef __io_seek_fn cookie_seek_function_t;\ntypedef __io_close_fn cookie_close_function_t;\n\n\ntypedef struct\n{\n  __io_read_fn *read;\n  __io_write_fn *write;\n  __io_seek_fn *seek;\n  __io_close_fn *close;\n} _IO_cookie_io_functions_t;\ntypedef _IO_cookie_io_functions_t cookie_io_functions_t;\n\nstruct _IO_cookie_file;\n\n\nextern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,\n        void *__cookie, _IO_cookie_io_functions_t __fns);\n\n\n\n\n\n\n\nextern int __underflow (_IO_FILE *);\nextern int __uflow (_IO_FILE *);\nextern int __overflow (_IO_FILE *, int);\nextern wint_t __wunderflow (_IO_FILE *);\nextern wint_t __wuflow (_IO_FILE *);\nextern wint_t __woverflow (_IO_FILE *, wint_t);\n// # 451 \"/usr/include/libio.h\" 3 4\nextern int _IO_getc (_IO_FILE *__fp);\nextern int _IO_putc (int __c, _IO_FILE *__fp);\nextern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__));\nextern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__));\n\nextern int _IO_peekc_locked (_IO_FILE *__fp);\n\n\n\n\n\nextern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__));\nextern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__));\nextern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__));\n// # 481 \"/usr/include/libio.h\" 3 4\nextern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,\n   __gnuc_va_list, int *__restrict);\nextern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,\n    __gnuc_va_list);\nextern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);\nextern size_t _IO_sgetn (_IO_FILE *, void *, size_t);\n\nextern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);\nextern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);\n\nextern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__));\n// # 73 \"/usr/include/stdio.h\" 2 3 4\n\n\n\n\ntypedef __gnuc_va_list va_list;\n// # 86 \"/usr/include/stdio.h\" 3 4\n\n\ntypedef _G_fpos_t fpos_t;\n\n\n\n\n\ntypedef _G_fpos64_t fpos64_t;\n// # 138 \"/usr/include/stdio.h\" 3 4\n// # 1 \"/usr/include/bits/stdio_lim.h\" 1 3 4\n// # 139 \"/usr/include/stdio.h\" 2 3 4\n\n\n\nextern struct _IO_FILE *stdin;\nextern struct _IO_FILE *stdout;\nextern struct _IO_FILE *stderr;\n\n\n\n\n\n\n\n\n\nextern int remove (__const char *__filename) __attribute__ ((__nothrow__));\n\nextern int rename (__const char *__old, __const char *__new) __attribute__ ((__nothrow__));\n\n\n\n\nextern int renameat (int __oldfd, __const char *__old, int __newfd,\n       __const char *__new) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern FILE *tmpfile (void);\n// # 181 \"/usr/include/stdio.h\" 3 4\nextern FILE *tmpfile64 (void);\n\n\n\nextern char *tmpnam (char *__s) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__));\n// # 203 \"/usr/include/stdio.h\" 3 4\nextern char *tempnam (__const char *__dir, __const char *__pfx)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__));\n\n\n\n\n\n\n\n\nextern int fclose (FILE *__stream);\n\n\n\n\nextern int fflush (FILE *__stream);\n\n// # 228 \"/usr/include/stdio.h\" 3 4\nextern int fflush_unlocked (FILE *__stream);\n// # 238 \"/usr/include/stdio.h\" 3 4\nextern int fcloseall (void);\n\n\n\n\n\n\n\n\n\nextern FILE *fopen (__const char *__restrict __filename,\n      __const char *__restrict __modes);\n\n\n\n\nextern FILE *freopen (__const char *__restrict __filename,\n        __const char *__restrict __modes,\n        FILE *__restrict __stream);\n// # 269 \"/usr/include/stdio.h\" 3 4\n\n\nextern FILE *fopen64 (__const char *__restrict __filename,\n        __const char *__restrict __modes);\nextern FILE *freopen64 (__const char *__restrict __filename,\n   __const char *__restrict __modes,\n   FILE *__restrict __stream);\n\n\n\n\nextern FILE *fdopen (int __fd, __const char *__modes) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern FILE *fopencookie (void *__restrict __magic_cookie,\n     __const char *__restrict __modes,\n     _IO_cookie_io_functions_t __io_funcs) __attribute__ ((__nothrow__));\n\n\nextern FILE *fmemopen (void *__s, size_t __len, __const char *__modes) __attribute__ ((__nothrow__));\n\n\n\n\nextern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__));\n\n\n\nextern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,\n      int __modes, size_t __n) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,\n         size_t __size) __attribute__ ((__nothrow__));\n\n\nextern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern int fprintf (FILE *__restrict __stream,\n      __const char *__restrict __format, ...);\n\n\n\n\nextern int printf (__const char *__restrict __format, ...);\n\nextern int sprintf (char *__restrict __s,\n      __const char *__restrict __format, ...) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int vfprintf (FILE *__restrict __s, __const char *__restrict __format,\n       __gnuc_va_list __arg);\n\n\n\n\nextern int vprintf (__const char *__restrict __format, __gnuc_va_list __arg);\n\nextern int vsprintf (char *__restrict __s, __const char *__restrict __format,\n       __gnuc_va_list __arg) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int snprintf (char *__restrict __s, size_t __maxlen,\n       __const char *__restrict __format, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));\n\nextern int vsnprintf (char *__restrict __s, size_t __maxlen,\n        __const char *__restrict __format, __gnuc_va_list __arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));\n\n\n\n\n\n\nextern int vasprintf (char **__restrict __ptr, __const char *__restrict __f,\n        __gnuc_va_list __arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0)));\nextern int __asprintf (char **__restrict __ptr,\n         __const char *__restrict __fmt, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));\nextern int asprintf (char **__restrict __ptr,\n       __const char *__restrict __fmt, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));\n\n\n\n\n\n\n\nextern int vdprintf (int __fd, __const char *__restrict __fmt,\n       __gnuc_va_list __arg)\n     __attribute__ ((__format__ (__printf__, 2, 0)));\nextern int dprintf (int __fd, __const char *__restrict __fmt, ...)\n     __attribute__ ((__format__ (__printf__, 2, 3)));\n\n\n\n\n\n\n\n\nextern int fscanf (FILE *__restrict __stream,\n     __const char *__restrict __format, ...) ;\n\n\n\n\nextern int scanf (__const char *__restrict __format, ...) ;\n\nextern int sscanf (__const char *__restrict __s,\n     __const char *__restrict __format, ...) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern int vfscanf (FILE *__restrict __s, __const char *__restrict __format,\n      __gnuc_va_list __arg)\n     __attribute__ ((__format__ (__scanf__, 2, 0))) ;\n\n\n\n\n\nextern int vscanf (__const char *__restrict __format, __gnuc_va_list __arg)\n     __attribute__ ((__format__ (__scanf__, 1, 0))) ;\n\n\nextern int vsscanf (__const char *__restrict __s,\n      __const char *__restrict __format, __gnuc_va_list __arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__scanf__, 2, 0)));\n\n\n\n\n\n\n\n\n\nextern int fgetc (FILE *__stream);\nextern int getc (FILE *__stream);\n\n\n\n\n\nextern int getchar (void);\n\n// # 460 \"/usr/include/stdio.h\" 3 4\nextern int getc_unlocked (FILE *__stream);\nextern int getchar_unlocked (void);\n// # 471 \"/usr/include/stdio.h\" 3 4\nextern int fgetc_unlocked (FILE *__stream);\n\n\n\n\n\n\n\n\n\n\n\nextern int fputc (int __c, FILE *__stream);\nextern int putc (int __c, FILE *__stream);\n\n\n\n\n\nextern int putchar (int __c);\n\n// # 504 \"/usr/include/stdio.h\" 3 4\nextern int fputc_unlocked (int __c, FILE *__stream);\n\n\n\n\n\n\n\nextern int putc_unlocked (int __c, FILE *__stream);\nextern int putchar_unlocked (int __c);\n\n\n\n\n\n\nextern int getw (FILE *__stream);\n\n\nextern int putw (int __w, FILE *__stream);\n\n\n\n\n\n\n\n\nextern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)\n     ;\n\n\n\n\n\n\nextern char *gets (char *__s) ;\n\n// # 550 \"/usr/include/stdio.h\" 3 4\nextern char *fgets_unlocked (char *__restrict __s, int __n,\n        FILE *__restrict __stream) ;\n// # 566 \"/usr/include/stdio.h\" 3 4\nextern __ssize_t __getdelim (char **__restrict __lineptr,\n          size_t *__restrict __n, int __delimiter,\n          FILE *__restrict __stream) ;\nextern __ssize_t getdelim (char **__restrict __lineptr,\n        size_t *__restrict __n, int __delimiter,\n        FILE *__restrict __stream) ;\n\n\n\n\n\n\n\nextern __ssize_t getline (char **__restrict __lineptr,\n       size_t *__restrict __n,\n       FILE *__restrict __stream) ;\n\n\n\n\n\n\n\n\nextern int fputs (__const char *__restrict __s, FILE *__restrict __stream);\n\n\n\n\n\nextern int puts (__const char *__s);\n\n\n\n\n\n\nextern int ungetc (int __c, FILE *__stream);\n\n\n\n\n\n\nextern size_t fread (void *__restrict __ptr, size_t __size,\n       size_t __n, FILE *__restrict __stream) ;\n\n\n\n\nextern size_t fwrite (__const void *__restrict __ptr, size_t __size,\n        size_t __n, FILE *__restrict __s) ;\n\n// # 627 \"/usr/include/stdio.h\" 3 4\nextern int fputs_unlocked (__const char *__restrict __s,\n      FILE *__restrict __stream);\n// # 638 \"/usr/include/stdio.h\" 3 4\nextern size_t fread_unlocked (void *__restrict __ptr, size_t __size,\n         size_t __n, FILE *__restrict __stream) ;\nextern size_t fwrite_unlocked (__const void *__restrict __ptr, size_t __size,\n          size_t __n, FILE *__restrict __stream) ;\n\n\n\n\n\n\n\n\nextern int fseek (FILE *__stream, long int __off, int __whence);\n\n\n\n\nextern long int ftell (FILE *__stream) ;\n\n\n\n\nextern void rewind (FILE *__stream);\n\n// # 674 \"/usr/include/stdio.h\" 3 4\nextern int fseeko (FILE *__stream, __off_t __off, int __whence);\n\n\n\n\nextern __off_t ftello (FILE *__stream) ;\n// # 693 \"/usr/include/stdio.h\" 3 4\n\n\n\n\n\n\nextern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);\n\n\n\n\nextern int fsetpos (FILE *__stream, __const fpos_t *__pos);\n// # 716 \"/usr/include/stdio.h\" 3 4\n\n\n\nextern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);\nextern __off64_t ftello64 (FILE *__stream) ;\nextern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);\nextern int fsetpos64 (FILE *__stream, __const fpos64_t *__pos);\n\n\n\n\nextern void clearerr (FILE *__stream) __attribute__ ((__nothrow__));\n\nextern int feof (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\nextern int ferror (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__));\nextern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;\nextern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\n\n\nextern void perror (__const char *__s);\n\n\n\n\n\n\n// # 1 \"/usr/include/bits/sys_errlist.h\" 1 3 4\n// # 27 \"/usr/include/bits/sys_errlist.h\" 3 4\nextern int sys_nerr;\nextern __const char *__const sys_errlist[];\n\n\nextern int _sys_nerr;\nextern __const char *__const _sys_errlist[];\n// # 755 \"/usr/include/stdio.h\" 2 3 4\n\n\n\n\nextern int fileno (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__)) ;\n// # 774 \"/usr/include/stdio.h\" 3 4\nextern FILE *popen (__const char *__command, __const char *__modes) ;\n\n\n\n\n\nextern int pclose (FILE *__stream);\n\n\n\n\n\nextern char *ctermid (char *__s) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *cuserid (char *__s);\n\n\n\n\nstruct obstack;\n\n\nextern int obstack_printf (struct obstack *__restrict __obstack,\n      __const char *__restrict __format, ...)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));\nextern int obstack_vprintf (struct obstack *__restrict __obstack,\n       __const char *__restrict __format,\n       __gnuc_va_list __args)\n     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0)));\n\n\n\n\n\n\n\nextern void flockfile (FILE *__stream) __attribute__ ((__nothrow__));\n\n\n\nextern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__)) ;\n\n\nextern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__));\n// # 844 \"/usr/include/stdio.h\" 3 4\n\n// # 141 \"zsh_system.h\" 2\n// # 1 \"/usr/include/ctype.h\" 1 3 4\n// # 30 \"/usr/include/ctype.h\" 3 4\n\n// # 48 \"/usr/include/ctype.h\" 3 4\nenum\n{\n  _ISupper = ((0) < 8 ? ((1 << (0)) << 8) : ((1 << (0)) >> 8)),\n  _ISlower = ((1) < 8 ? ((1 << (1)) << 8) : ((1 << (1)) >> 8)),\n  _ISalpha = ((2) < 8 ? ((1 << (2)) << 8) : ((1 << (2)) >> 8)),\n  _ISdigit = ((3) < 8 ? ((1 << (3)) << 8) : ((1 << (3)) >> 8)),\n  _ISxdigit = ((4) < 8 ? ((1 << (4)) << 8) : ((1 << (4)) >> 8)),\n  _ISspace = ((5) < 8 ? ((1 << (5)) << 8) : ((1 << (5)) >> 8)),\n  _ISprint = ((6) < 8 ? ((1 << (6)) << 8) : ((1 << (6)) >> 8)),\n  _ISgraph = ((7) < 8 ? ((1 << (7)) << 8) : ((1 << (7)) >> 8)),\n  _ISblank = ((8) < 8 ? ((1 << (8)) << 8) : ((1 << (8)) >> 8)),\n  _IScntrl = ((9) < 8 ? ((1 << (9)) << 8) : ((1 << (9)) >> 8)),\n  _ISpunct = ((10) < 8 ? ((1 << (10)) << 8) : ((1 << (10)) >> 8)),\n  _ISalnum = ((11) < 8 ? ((1 << (11)) << 8) : ((1 << (11)) >> 8))\n};\n// # 81 \"/usr/include/ctype.h\" 3 4\nextern __const unsigned short int **__ctype_b_loc (void)\n     __attribute__ ((__const));\nextern __const __int32_t **__ctype_tolower_loc (void)\n     __attribute__ ((__const));\nextern __const __int32_t **__ctype_toupper_loc (void)\n     __attribute__ ((__const));\n// # 96 \"/usr/include/ctype.h\" 3 4\n\n\n\n\n\n\nextern int isalnum (int) __attribute__ ((__nothrow__));\nextern int isalpha (int) __attribute__ ((__nothrow__));\nextern int iscntrl (int) __attribute__ ((__nothrow__));\nextern int isdigit (int) __attribute__ ((__nothrow__));\nextern int islower (int) __attribute__ ((__nothrow__));\nextern int isgraph (int) __attribute__ ((__nothrow__));\nextern int isprint (int) __attribute__ ((__nothrow__));\nextern int ispunct (int) __attribute__ ((__nothrow__));\nextern int isspace (int) __attribute__ ((__nothrow__));\nextern int isupper (int) __attribute__ ((__nothrow__));\nextern int isxdigit (int) __attribute__ ((__nothrow__));\n\n\n\nextern int tolower (int __c) __attribute__ ((__nothrow__));\n\n\nextern int toupper (int __c) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern int isblank (int) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int isctype (int __c, int __mask) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int isascii (int __c) __attribute__ ((__nothrow__));\n\n\n\nextern int toascii (int __c) __attribute__ ((__nothrow__));\n\n\n\nextern int _toupper (int) __attribute__ ((__nothrow__));\nextern int _tolower (int) __attribute__ ((__nothrow__));\n// # 233 \"/usr/include/ctype.h\" 3 4\n// # 1 \"/usr/include/xlocale.h\" 1 3 4\n// # 28 \"/usr/include/xlocale.h\" 3 4\ntypedef struct __locale_struct\n{\n\n  struct locale_data *__locales[13];\n\n\n  const unsigned short int *__ctype_b;\n  const int *__ctype_tolower;\n  const int *__ctype_toupper;\n\n\n  const char *__names[13];\n} *__locale_t;\n// # 234 \"/usr/include/ctype.h\" 2 3 4\n// # 247 \"/usr/include/ctype.h\" 3 4\nextern int isalnum_l (int, __locale_t) __attribute__ ((__nothrow__));\nextern int isalpha_l (int, __locale_t) __attribute__ ((__nothrow__));\nextern int iscntrl_l (int, __locale_t) __attribute__ ((__nothrow__));\nextern int isdigit_l (int, __locale_t) __attribute__ ((__nothrow__));\nextern int islower_l (int, __locale_t) __attribute__ ((__nothrow__));\nextern int isgraph_l (int, __locale_t) __attribute__ ((__nothrow__));\nextern int isprint_l (int, __locale_t) __attribute__ ((__nothrow__));\nextern int ispunct_l (int, __locale_t) __attribute__ ((__nothrow__));\nextern int isspace_l (int, __locale_t) __attribute__ ((__nothrow__));\nextern int isupper_l (int, __locale_t) __attribute__ ((__nothrow__));\nextern int isxdigit_l (int, __locale_t) __attribute__ ((__nothrow__));\n\nextern int isblank_l (int, __locale_t) __attribute__ ((__nothrow__));\n\n\n\nextern int __tolower_l (int __c, __locale_t __l) __attribute__ ((__nothrow__));\nextern int tolower_l (int __c, __locale_t __l) __attribute__ ((__nothrow__));\n\n\nextern int __toupper_l (int __c, __locale_t __l) __attribute__ ((__nothrow__));\nextern int toupper_l (int __c, __locale_t __l) __attribute__ ((__nothrow__));\n// # 323 \"/usr/include/ctype.h\" 3 4\n\n// # 142 \"zsh_system.h\" 2\n// # 1 \"/usr/include/sys/stat.h\" 1 3 4\n// # 37 \"/usr/include/sys/stat.h\" 3 4\n// # 1 \"/usr/include/time.h\" 1 3 4\n// # 38 \"/usr/include/sys/stat.h\" 2 3 4\n// # 103 \"/usr/include/sys/stat.h\" 3 4\n\n\n// # 1 \"/usr/include/bits/stat.h\" 1 3 4\n// # 43 \"/usr/include/bits/stat.h\" 3 4\nstruct stat\n  {\n    __dev_t st_dev;\n\n\n\n\n    __ino_t st_ino;\n\n\n\n\n\n\n\n    __nlink_t st_nlink;\n    __mode_t st_mode;\n\n    __uid_t st_uid;\n    __gid_t st_gid;\n\n    int pad0;\n\n    __dev_t st_rdev;\n\n\n\n\n    __off_t st_size;\n\n\n\n    __blksize_t st_blksize;\n\n    __blkcnt_t st_blocks;\n// # 88 \"/usr/include/bits/stat.h\" 3 4\n    struct timespec st_atim;\n    struct timespec st_mtim;\n    struct timespec st_ctim;\n// # 103 \"/usr/include/bits/stat.h\" 3 4\n    long int __unused[3];\n// # 112 \"/usr/include/bits/stat.h\" 3 4\n  };\n\n\n\nstruct stat64\n  {\n    __dev_t st_dev;\n\n    __ino64_t st_ino;\n    __nlink_t st_nlink;\n    __mode_t st_mode;\n\n\n\n\n\n\n    __uid_t st_uid;\n    __gid_t st_gid;\n\n    int pad0;\n    __dev_t st_rdev;\n    __off_t st_size;\n\n\n\n\n\n    __blksize_t st_blksize;\n    __blkcnt64_t st_blocks;\n\n\n\n\n\n\n\n    struct timespec st_atim;\n    struct timespec st_mtim;\n    struct timespec st_ctim;\n// # 164 \"/usr/include/bits/stat.h\" 3 4\n    long int __unused[3];\n\n\n\n  };\n// # 106 \"/usr/include/sys/stat.h\" 2 3 4\n// # 207 \"/usr/include/sys/stat.h\" 3 4\nextern int stat (__const char *__restrict __file,\n   struct stat *__restrict __buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern int fstat (int __fd, struct stat *__buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n// # 226 \"/usr/include/sys/stat.h\" 3 4\nextern int stat64 (__const char *__restrict __file,\n     struct stat64 *__restrict __buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern int fstat64 (int __fd, struct stat64 *__buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\n\n\n\nextern int fstatat (int __fd, __const char *__restrict __file,\n      struct stat *__restrict __buf, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n// # 250 \"/usr/include/sys/stat.h\" 3 4\nextern int fstatat64 (int __fd, __const char *__restrict __file,\n        struct stat64 *__restrict __buf, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n\n\n\n\n\n\nextern int lstat (__const char *__restrict __file,\n    struct stat *__restrict __buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n// # 272 \"/usr/include/sys/stat.h\" 3 4\nextern int lstat64 (__const char *__restrict __file,\n      struct stat64 *__restrict __buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern int chmod (__const char *__file, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int lchmod (__const char *__file, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int fchmod (int __fd, __mode_t __mode) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int fchmodat (int __fd, __const char *__file, __mode_t mode, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2))) ;\n\n\n\n\n\n\nextern __mode_t umask (__mode_t __mask) __attribute__ ((__nothrow__));\n\n\n\n\nextern __mode_t getumask (void) __attribute__ ((__nothrow__));\n\n\n\nextern int mkdir (__const char *__path, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int mkdirat (int __fd, __const char *__path, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\n\n\nextern int mknod (__const char *__path, __mode_t __mode, __dev_t __dev)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int mknodat (int __fd, __const char *__path, __mode_t __mode,\n      __dev_t __dev) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\nextern int mkfifo (__const char *__path, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int mkfifoat (int __fd, __const char *__path, __mode_t __mode)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n// # 380 \"/usr/include/sys/stat.h\" 3 4\nextern int __fxstat (int __ver, int __fildes, struct stat *__stat_buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));\nextern int __xstat (int __ver, __const char *__filename,\n      struct stat *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\nextern int __lxstat (int __ver, __const char *__filename,\n       struct stat *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\nextern int __fxstatat (int __ver, int __fildes, __const char *__filename,\n         struct stat *__stat_buf, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4)));\n// # 413 \"/usr/include/sys/stat.h\" 3 4\nextern int __fxstat64 (int __ver, int __fildes, struct stat64 *__stat_buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3)));\nextern int __xstat64 (int __ver, __const char *__filename,\n        struct stat64 *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\nextern int __lxstat64 (int __ver, __const char *__filename,\n         struct stat64 *__stat_buf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\nextern int __fxstatat64 (int __ver, int __fildes, __const char *__filename,\n    struct stat64 *__stat_buf, int __flag)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4)));\n\nextern int __xmknod (int __ver, __const char *__path, __mode_t __mode,\n       __dev_t *__dev) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n\nextern int __xmknodat (int __ver, int __fd, __const char *__path,\n         __mode_t __mode, __dev_t *__dev)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 5)));\n\n\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) stat (__const char *__path, struct stat *__statbuf)\n{\n  return __xstat (1, __path, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) lstat (__const char *__path, struct stat *__statbuf)\n{\n  return __lxstat (1, __path, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) fstat (int __fd, struct stat *__statbuf)\n{\n  return __fxstat (1, __fd, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) fstatat (int __fd, __const char *__filename, struct stat *__statbuf, int __flag)\n\n{\n  return __fxstatat (1, __fd, __filename, __statbuf, __flag);\n}\n\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) mknod (__const char *__path, __mode_t __mode, __dev_t __dev)\n{\n  return __xmknod (0, __path, __mode, &__dev);\n}\n\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) mknodat (int __fd, __const char *__path, __mode_t __mode, __dev_t __dev)\n\n{\n  return __xmknodat (0, __fd, __path, __mode, &__dev);\n}\n\n\n\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) stat64 (__const char *__path, struct stat64 *__statbuf)\n{\n  return __xstat64 (1, __path, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) lstat64 (__const char *__path, struct stat64 *__statbuf)\n{\n  return __lxstat64 (1, __path, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) fstat64 (int __fd, struct stat64 *__statbuf)\n{\n  return __fxstat64 (1, __fd, __statbuf);\n}\n\n\nextern __inline__ int\n__attribute__ ((__nothrow__)) fstatat64 (int __fd, __const char *__filename, struct stat64 *__statbuf, int __flag)\n\n{\n  return __fxstatat64 (1, __fd, __filename, __statbuf, __flag);\n}\n\n\n\n\n\n\n\n// # 143 \"zsh_system.h\" 2\n// # 1 \"/usr/include/signal.h\" 1 3 4\n// # 31 \"/usr/include/signal.h\" 3 4\n\n\n// # 1 \"/usr/include/bits/sigset.h\" 1 3 4\n// # 103 \"/usr/include/bits/sigset.h\" 3 4\nextern int __sigismember (__const __sigset_t *, int);\nextern int __sigaddset (__sigset_t *, int);\nextern int __sigdelset (__sigset_t *, int);\n// # 34 \"/usr/include/signal.h\" 2 3 4\n\n\n\n\n\n\n\ntypedef __sig_atomic_t sig_atomic_t;\n\n// # 58 \"/usr/include/signal.h\" 3 4\n// # 1 \"/usr/include/bits/signum.h\" 1 3 4\n// # 59 \"/usr/include/signal.h\" 2 3 4\n// # 75 \"/usr/include/signal.h\" 3 4\ntypedef void (*__sighandler_t) (int);\n\n\n\n\nextern __sighandler_t __sysv_signal (int __sig, __sighandler_t __handler)\n     __attribute__ ((__nothrow__));\n\nextern __sighandler_t sysv_signal (int __sig, __sighandler_t __handler)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern __sighandler_t signal (int __sig, __sighandler_t __handler)\n     __attribute__ ((__nothrow__));\n// # 104 \"/usr/include/signal.h\" 3 4\n\n\n\n\n\nextern __sighandler_t bsd_signal (int __sig, __sighandler_t __handler)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int kill (__pid_t __pid, int __sig) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int killpg (__pid_t __pgrp, int __sig) __attribute__ ((__nothrow__));\n\n\n\n\nextern int raise (int __sig) __attribute__ ((__nothrow__));\n\n\n\n\nextern __sighandler_t ssignal (int __sig, __sighandler_t __handler)\n     __attribute__ ((__nothrow__));\nextern int gsignal (int __sig) __attribute__ ((__nothrow__));\n\n\n\n\nextern void psignal (int __sig, __const char *__s);\n// # 153 \"/usr/include/signal.h\" 3 4\nextern int __sigpause (int __sig_or_mask, int __is_sig);\n// # 162 \"/usr/include/signal.h\" 3 4\nextern int sigpause (int __sig) __asm__ (\"__xpg_sigpause\");\n// # 181 \"/usr/include/signal.h\" 3 4\nextern int sigblock (int __mask) __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\n\n\nextern int sigsetmask (int __mask) __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\n\n\nextern int siggetmask (void) __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\n// # 196 \"/usr/include/signal.h\" 3 4\ntypedef __sighandler_t sighandler_t;\n\n\n\n\ntypedef __sighandler_t sig_t;\n\n\n\n\n\n\n\n// # 1 \"/usr/include/time.h\" 1 3 4\n// # 210 \"/usr/include/signal.h\" 2 3 4\n\n\n// # 1 \"/usr/include/bits/siginfo.h\" 1 3 4\n// # 25 \"/usr/include/bits/siginfo.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 26 \"/usr/include/bits/siginfo.h\" 2 3 4\n\n\n\n\n\n\n\ntypedef union sigval\n  {\n    int sival_int;\n    void *sival_ptr;\n  } sigval_t;\n// # 51 \"/usr/include/bits/siginfo.h\" 3 4\ntypedef struct siginfo\n  {\n    int si_signo;\n    int si_errno;\n\n    int si_code;\n\n    union\n      {\n int _pad[((128 / sizeof (int)) - 4)];\n\n\n struct\n   {\n     __pid_t si_pid;\n     __uid_t si_uid;\n   } _kill;\n\n\n struct\n   {\n     int si_tid;\n     int si_overrun;\n     sigval_t si_sigval;\n   } _timer;\n\n\n struct\n   {\n     __pid_t si_pid;\n     __uid_t si_uid;\n     sigval_t si_sigval;\n   } _rt;\n\n\n struct\n   {\n     __pid_t si_pid;\n     __uid_t si_uid;\n     int si_status;\n     __clock_t si_utime;\n     __clock_t si_stime;\n   } _sigchld;\n\n\n struct\n   {\n     void *si_addr;\n   } _sigfault;\n\n\n struct\n   {\n     long int si_band;\n     int si_fd;\n   } _sigpoll;\n      } _sifields;\n  } siginfo_t;\n// # 129 \"/usr/include/bits/siginfo.h\" 3 4\nenum\n{\n  SI_ASYNCNL = -60,\n\n  SI_TKILL = -6,\n\n  SI_SIGIO,\n\n  SI_ASYNCIO,\n\n  SI_MESGQ,\n\n  SI_TIMER,\n\n  SI_QUEUE,\n\n  SI_USER,\n\n  SI_KERNEL = 0x80\n\n};\n\n\n\nenum\n{\n  ILL_ILLOPC = 1,\n\n  ILL_ILLOPN,\n\n  ILL_ILLADR,\n\n  ILL_ILLTRP,\n\n  ILL_PRVOPC,\n\n  ILL_PRVREG,\n\n  ILL_COPROC,\n\n  ILL_BADSTK\n\n};\n\n\nenum\n{\n  FPE_INTDIV = 1,\n\n  FPE_INTOVF,\n\n  FPE_FLTDIV,\n\n  FPE_FLTOVF,\n\n  FPE_FLTUND,\n\n  FPE_FLTRES,\n\n  FPE_FLTINV,\n\n  FPE_FLTSUB\n\n};\n\n\nenum\n{\n  SEGV_MAPERR = 1,\n\n  SEGV_ACCERR\n\n};\n\n\nenum\n{\n  BUS_ADRALN = 1,\n\n  BUS_ADRERR,\n\n  BUS_OBJERR\n\n};\n\n\nenum\n{\n  TRAP_BRKPT = 1,\n\n  TRAP_TRACE\n\n};\n\n\nenum\n{\n  CLD_EXITED = 1,\n\n  CLD_KILLED,\n\n  CLD_DUMPED,\n\n  CLD_TRAPPED,\n\n  CLD_STOPPED,\n\n  CLD_CONTINUED\n\n};\n\n\nenum\n{\n  POLL_IN = 1,\n\n  POLL_OUT,\n\n  POLL_MSG,\n\n  POLL_ERR,\n\n  POLL_PRI,\n\n  POLL_HUP\n\n};\n// # 273 \"/usr/include/bits/siginfo.h\" 3 4\ntypedef struct sigevent\n  {\n    sigval_t sigev_value;\n    int sigev_signo;\n    int sigev_notify;\n\n    union\n      {\n int _pad[((64 / sizeof (int)) - 4)];\n\n\n\n __pid_t _tid;\n\n struct\n   {\n     void (*_function) (sigval_t);\n     void *_attribute;\n   } _sigev_thread;\n      } _sigev_un;\n  } sigevent_t;\n\n\n\n\n\n\nenum\n{\n  SIGEV_SIGNAL = 0,\n\n  SIGEV_NONE,\n\n  SIGEV_THREAD,\n\n\n  SIGEV_THREAD_ID = 4\n\n};\n// # 213 \"/usr/include/signal.h\" 2 3 4\n\n\n\nextern int sigemptyset (sigset_t *__set) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int sigfillset (sigset_t *__set) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int sigaddset (sigset_t *__set, int __signo) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int sigdelset (sigset_t *__set, int __signo) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int sigismember (__const sigset_t *__set, int __signo)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int sigisemptyset (__const sigset_t *__set) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int sigandset (sigset_t *__set, __const sigset_t *__left,\n        __const sigset_t *__right) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3)));\n\n\nextern int sigorset (sigset_t *__set, __const sigset_t *__left,\n       __const sigset_t *__right) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3)));\n\n\n\n\n// # 1 \"/usr/include/bits/sigaction.h\" 1 3 4\n// # 25 \"/usr/include/bits/sigaction.h\" 3 4\nstruct sigaction\n  {\n\n\n    union\n      {\n\n __sighandler_t sa_handler;\n\n void (*sa_sigaction) (int, siginfo_t *, void *);\n      }\n    __sigaction_handler;\n\n\n\n\n\n\n\n    __sigset_t sa_mask;\n\n\n    int sa_flags;\n\n\n    void (*sa_restorer) (void);\n  };\n// # 247 \"/usr/include/signal.h\" 2 3 4\n\n\nextern int sigprocmask (int __how, __const sigset_t *__restrict __set,\n   sigset_t *__restrict __oset) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int sigsuspend (__const sigset_t *__set) __attribute__ ((__nonnull__ (1)));\n\n\nextern int sigaction (int __sig, __const struct sigaction *__restrict __act,\n        struct sigaction *__restrict __oact) __attribute__ ((__nothrow__));\n\n\nextern int sigpending (sigset_t *__set) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int sigwait (__const sigset_t *__restrict __set, int *__restrict __sig)\n     __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\nextern int sigwaitinfo (__const sigset_t *__restrict __set,\n   siginfo_t *__restrict __info) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern int sigtimedwait (__const sigset_t *__restrict __set,\n    siginfo_t *__restrict __info,\n    __const struct timespec *__restrict __timeout)\n     __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int sigqueue (__pid_t __pid, int __sig, __const union sigval __val)\n     __attribute__ ((__nothrow__));\n// # 304 \"/usr/include/signal.h\" 3 4\nextern __const char *__const _sys_siglist[65];\nextern __const char *__const sys_siglist[65];\n\n\nstruct sigvec\n  {\n    __sighandler_t sv_handler;\n    int sv_mask;\n\n    int sv_flags;\n\n  };\n// # 328 \"/usr/include/signal.h\" 3 4\nextern int sigvec (int __sig, __const struct sigvec *__vec,\n     struct sigvec *__ovec) __attribute__ ((__nothrow__));\n\n\n\n// # 1 \"/usr/include/bits/sigcontext.h\" 1 3 4\n// # 26 \"/usr/include/bits/sigcontext.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 27 \"/usr/include/bits/sigcontext.h\" 2 3 4\n\nstruct _fpreg\n{\n  unsigned short significand[4];\n  unsigned short exponent;\n};\n\nstruct _fpxreg\n{\n  unsigned short significand[4];\n  unsigned short exponent;\n  unsigned short padding[3];\n};\n\nstruct _xmmreg\n{\n  __uint32_t element[4];\n};\n// # 109 \"/usr/include/bits/sigcontext.h\" 3 4\nstruct _fpstate\n{\n\n  __uint16_t cwd;\n  __uint16_t swd;\n  __uint16_t ftw;\n  __uint16_t fop;\n  __uint64_t rip;\n  __uint64_t rdp;\n  __uint32_t mxcsr;\n  __uint32_t mxcr_mask;\n  struct _fpxreg _st[8];\n  struct _xmmreg _xmm[16];\n  __uint32_t padding[24];\n};\n\nstruct sigcontext\n{\n  unsigned long r8;\n  unsigned long r9;\n  unsigned long r10;\n  unsigned long r11;\n  unsigned long r12;\n  unsigned long r13;\n  unsigned long r14;\n  unsigned long r15;\n  unsigned long rdi;\n  unsigned long rsi;\n  unsigned long rbp;\n  unsigned long rbx;\n  unsigned long rdx;\n  unsigned long rax;\n  unsigned long rcx;\n  unsigned long rsp;\n  unsigned long rip;\n  unsigned long eflags;\n  unsigned short cs;\n  unsigned short gs;\n  unsigned short fs;\n  unsigned short __pad0;\n  unsigned long err;\n  unsigned long trapno;\n  unsigned long oldmask;\n  unsigned long cr2;\n  struct _fpstate * fpstate;\n  unsigned long __reserved1 [8];\n};\n// # 334 \"/usr/include/signal.h\" 2 3 4\n\n\nextern int sigreturn (struct sigcontext *__scp) __attribute__ ((__nothrow__));\n// # 346 \"/usr/include/signal.h\" 3 4\nextern int siginterrupt (int __sig, int __interrupt) __attribute__ ((__nothrow__));\n\n// # 1 \"/usr/include/bits/sigstack.h\" 1 3 4\n// # 26 \"/usr/include/bits/sigstack.h\" 3 4\nstruct sigstack\n  {\n    void *ss_sp;\n    int ss_onstack;\n  };\n\n\n\nenum\n{\n  SS_ONSTACK = 1,\n\n  SS_DISABLE\n\n};\n// # 50 \"/usr/include/bits/sigstack.h\" 3 4\ntypedef struct sigaltstack\n  {\n    void *ss_sp;\n    int ss_flags;\n    size_t ss_size;\n  } stack_t;\n// # 349 \"/usr/include/signal.h\" 2 3 4\n\n\n// # 1 \"/usr/include/sys/ucontext.h\" 1 3 4\n// # 23 \"/usr/include/sys/ucontext.h\" 3 4\n// # 1 \"/usr/include/signal.h\" 1 3 4\n// # 24 \"/usr/include/sys/ucontext.h\" 2 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 25 \"/usr/include/sys/ucontext.h\" 2 3 4\n// # 33 \"/usr/include/sys/ucontext.h\" 3 4\ntypedef long int greg_t;\n\n\n\n\n\ntypedef greg_t gregset_t[23];\n\n\n\nenum\n{\n  REG_R8 = 0,\n\n  REG_R9,\n\n  REG_R10,\n\n  REG_R11,\n\n  REG_R12,\n\n  REG_R13,\n\n  REG_R14,\n\n  REG_R15,\n\n  REG_RDI,\n\n  REG_RSI,\n\n  REG_RBP,\n\n  REG_RBX,\n\n  REG_RDX,\n\n  REG_RAX,\n\n  REG_RCX,\n\n  REG_RSP,\n\n  REG_RIP,\n\n  REG_EFL,\n\n  REG_CSGSFS,\n\n  REG_ERR,\n\n  REG_TRAPNO,\n\n  REG_OLDMASK,\n\n  REG_CR2\n\n};\n\n\nstruct _libc_fpxreg\n{\n  unsigned short int significand[4];\n  unsigned short int exponent;\n  unsigned short int padding[3];\n};\n\nstruct _libc_xmmreg\n{\n  __uint32_t element[4];\n};\n\nstruct _libc_fpstate\n{\n\n  __uint16_t cwd;\n  __uint16_t swd;\n  __uint16_t ftw;\n  __uint16_t fop;\n  __uint64_t rip;\n  __uint64_t rdp;\n  __uint32_t mxcsr;\n  __uint32_t mxcr_mask;\n  struct _libc_fpxreg _st[8];\n  struct _libc_xmmreg _xmm[16];\n  __uint32_t padding[24];\n};\n\n\ntypedef struct _libc_fpstate *fpregset_t;\n\n\ntypedef struct\n  {\n    gregset_t gregs;\n\n    fpregset_t fpregs;\n    unsigned long __reserved1 [8];\n} mcontext_t;\n\n\ntypedef struct ucontext\n  {\n    unsigned long int uc_flags;\n    struct ucontext *uc_link;\n    stack_t uc_stack;\n    mcontext_t uc_mcontext;\n    __sigset_t uc_sigmask;\n    struct _libc_fpstate __fpregs_mem;\n  } ucontext_t;\n// # 352 \"/usr/include/signal.h\" 2 3 4\n\n\n\n\n\nextern int sigstack (struct sigstack *__ss, struct sigstack *__oss)\n     __attribute__ ((__nothrow__)) __attribute__ ((__deprecated__));\n\n\n\nextern int sigaltstack (__const struct sigaltstack *__restrict __ss,\n   struct sigaltstack *__restrict __oss) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern int sighold (int __sig) __attribute__ ((__nothrow__));\n\n\nextern int sigrelse (int __sig) __attribute__ ((__nothrow__));\n\n\nextern int sigignore (int __sig) __attribute__ ((__nothrow__));\n\n\nextern __sighandler_t sigset (int __sig, __sighandler_t __disp) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n// # 1 \"/usr/include/bits/sigthread.h\" 1 3 4\n// # 31 \"/usr/include/bits/sigthread.h\" 3 4\nextern int pthread_sigmask (int __how,\n       __const __sigset_t *__restrict __newmask,\n       __sigset_t *__restrict __oldmask)__attribute__ ((__nothrow__));\n\n\nextern int pthread_kill (pthread_t __threadid, int __signo) __attribute__ ((__nothrow__));\n// # 388 \"/usr/include/signal.h\" 2 3 4\n\n\n\n\n\n\nextern int __libc_current_sigrtmin (void) __attribute__ ((__nothrow__));\n\nextern int __libc_current_sigrtmax (void) __attribute__ ((__nothrow__));\n\n\n\n\n// # 144 \"zsh_system.h\" 2\n// # 1 \"/usr/include/setjmp.h\" 1 3 4\n// # 28 \"/usr/include/setjmp.h\" 3 4\n\n\n// # 1 \"/usr/include/bits/setjmp.h\" 1 3 4\n// # 27 \"/usr/include/bits/setjmp.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 28 \"/usr/include/bits/setjmp.h\" 2 3 4\n\n\n\n\ntypedef long int __jmp_buf[8];\n// # 31 \"/usr/include/setjmp.h\" 2 3 4\n// # 1 \"/usr/include/bits/sigset.h\" 1 3 4\n// # 32 \"/usr/include/setjmp.h\" 2 3 4\n\n\n\n\ntypedef struct __jmp_buf_tag\n  {\n\n\n\n\n    __jmp_buf __jmpbuf;\n    int __mask_was_saved;\n    __sigset_t __saved_mask;\n  } jmp_buf[1];\n\n\n\n\nextern int setjmp (jmp_buf __env) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern int __sigsetjmp (struct __jmp_buf_tag __env[1], int __savemask) __attribute__ ((__nothrow__));\n\n\n\n\nextern int _setjmp (struct __jmp_buf_tag __env[1]) __attribute__ ((__nothrow__));\n// # 76 \"/usr/include/setjmp.h\" 3 4\n\n\n\n\nextern void longjmp (struct __jmp_buf_tag __env[1], int __val)\n     __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));\n\n\n\n\n\n\n\nextern void _longjmp (struct __jmp_buf_tag __env[1], int __val)\n     __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));\n\n\n\n\n\n\n\ntypedef struct __jmp_buf_tag sigjmp_buf[1];\n// # 108 \"/usr/include/setjmp.h\" 3 4\nextern void siglongjmp (sigjmp_buf __env, int __val)\n     __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));\n\n\n\n// # 145 \"zsh_system.h\" 2\n\n\n// # 1 \"/usr/include/pwd.h\" 1 3 4\n// # 28 \"/usr/include/pwd.h\" 3 4\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 34 \"/usr/include/pwd.h\" 2 3 4\n// # 50 \"/usr/include/pwd.h\" 3 4\nstruct passwd\n{\n  char *pw_name;\n  char *pw_passwd;\n  __uid_t pw_uid;\n  __gid_t pw_gid;\n  char *pw_gecos;\n  char *pw_dir;\n  char *pw_shell;\n};\n// # 73 \"/usr/include/pwd.h\" 3 4\nextern void setpwent (void);\n\n\n\n\n\nextern void endpwent (void);\n\n\n\n\n\nextern struct passwd *getpwent (void);\n// # 95 \"/usr/include/pwd.h\" 3 4\nextern struct passwd *fgetpwent (FILE *__stream);\n\n\n\n\n\n\n\nextern int putpwent (__const struct passwd *__restrict __p,\n       FILE *__restrict __f);\n\n\n\n\n\n\nextern struct passwd *getpwuid (__uid_t __uid);\n\n\n\n\n\nextern struct passwd *getpwnam (__const char *__name);\n// # 140 \"/usr/include/pwd.h\" 3 4\nextern int getpwent_r (struct passwd *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct passwd **__restrict __result);\n\n\nextern int getpwuid_r (__uid_t __uid,\n         struct passwd *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct passwd **__restrict __result);\n\nextern int getpwnam_r (__const char *__restrict __name,\n         struct passwd *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct passwd **__restrict __result);\n// # 164 \"/usr/include/pwd.h\" 3 4\nextern int fgetpwent_r (FILE *__restrict __stream,\n   struct passwd *__restrict __resultbuf,\n   char *__restrict __buffer, size_t __buflen,\n   struct passwd **__restrict __result);\n// # 181 \"/usr/include/pwd.h\" 3 4\nextern int getpw (__uid_t __uid, char *__buffer);\n\n\n\n// # 148 \"zsh_system.h\" 2\n\n\n\n// # 1 \"/usr/include/grp.h\" 1 3 4\n// # 28 \"/usr/include/grp.h\" 3 4\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 34 \"/usr/include/grp.h\" 2 3 4\n// # 43 \"/usr/include/grp.h\" 3 4\nstruct group\n  {\n    char *gr_name;\n    char *gr_passwd;\n    __gid_t gr_gid;\n    char **gr_mem;\n  };\n// # 63 \"/usr/include/grp.h\" 3 4\nextern void setgrent (void);\n\n\n\n\n\nextern void endgrent (void);\n\n\n\n\n\nextern struct group *getgrent (void);\n// # 85 \"/usr/include/grp.h\" 3 4\nextern struct group *fgetgrent (FILE *__stream);\n// # 95 \"/usr/include/grp.h\" 3 4\nextern int putgrent (__const struct group *__restrict __p,\n       FILE *__restrict __f);\n\n\n\n\n\n\nextern struct group *getgrgid (__gid_t __gid);\n\n\n\n\n\nextern struct group *getgrnam (__const char *__name);\n// # 133 \"/usr/include/grp.h\" 3 4\nextern int getgrent_r (struct group *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct group **__restrict __result);\n\n\n\n\n\n\nextern int getgrgid_r (__gid_t __gid, struct group *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct group **__restrict __result);\n\n\n\n\n\nextern int getgrnam_r (__const char *__restrict __name,\n         struct group *__restrict __resultbuf,\n         char *__restrict __buffer, size_t __buflen,\n         struct group **__restrict __result);\n// # 163 \"/usr/include/grp.h\" 3 4\nextern int fgetgrent_r (FILE *__restrict __stream,\n   struct group *__restrict __resultbuf,\n   char *__restrict __buffer, size_t __buflen,\n   struct group **__restrict __result);\n// # 175 \"/usr/include/grp.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 176 \"/usr/include/grp.h\" 2 3 4\n\n\nextern int setgroups (size_t __n, __const __gid_t *__groups) __attribute__ ((__nothrow__));\n// # 188 \"/usr/include/grp.h\" 3 4\nextern int getgrouplist (__const char *__user, __gid_t __group,\n    __gid_t *__groups, int *__ngroups);\n// # 199 \"/usr/include/grp.h\" 3 4\nextern int initgroups (__const char *__user, __gid_t __group);\n\n\n\n\n// # 152 \"zsh_system.h\" 2\n\n\n\n// # 1 \"/usr/include/dirent.h\" 1 3 4\n// # 28 \"/usr/include/dirent.h\" 3 4\n\n// # 62 \"/usr/include/dirent.h\" 3 4\n// # 1 \"/usr/include/bits/dirent.h\" 1 3 4\n// # 23 \"/usr/include/bits/dirent.h\" 3 4\nstruct dirent\n  {\n\n    __ino_t d_ino;\n    __off_t d_off;\n\n\n\n\n    unsigned short int d_reclen;\n    unsigned char d_type;\n    char d_name[256];\n  };\n\n\nstruct dirent64\n  {\n    __ino64_t d_ino;\n    __off64_t d_off;\n    unsigned short int d_reclen;\n    unsigned char d_type;\n    char d_name[256];\n  };\n// # 63 \"/usr/include/dirent.h\" 2 3 4\n// # 98 \"/usr/include/dirent.h\" 3 4\nenum\n  {\n    DT_UNKNOWN = 0,\n\n    DT_FIFO = 1,\n\n    DT_CHR = 2,\n\n    DT_DIR = 4,\n\n    DT_BLK = 6,\n\n    DT_REG = 8,\n\n    DT_LNK = 10,\n\n    DT_SOCK = 12,\n\n    DT_WHT = 14\n\n  };\n// # 128 \"/usr/include/dirent.h\" 3 4\ntypedef struct __dirstream DIR;\n\n\n\n\n\n\nextern DIR *opendir (__const char *__name) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern DIR *fdopendir (int __fd);\n\n\n\n\n\n\n\nextern int closedir (DIR *__dirp) __attribute__ ((__nonnull__ (1)));\n// # 163 \"/usr/include/dirent.h\" 3 4\nextern struct dirent *readdir (DIR *__dirp) __attribute__ ((__nonnull__ (1)));\n// # 174 \"/usr/include/dirent.h\" 3 4\nextern struct dirent64 *readdir64 (DIR *__dirp) __attribute__ ((__nonnull__ (1)));\n// # 184 \"/usr/include/dirent.h\" 3 4\nextern int readdir_r (DIR *__restrict __dirp,\n        struct dirent *__restrict __entry,\n        struct dirent **__restrict __result)\n     __attribute__ ((__nonnull__ (1, 2, 3)));\n// # 201 \"/usr/include/dirent.h\" 3 4\nextern int readdir64_r (DIR *__restrict __dirp,\n   struct dirent64 *__restrict __entry,\n   struct dirent64 **__restrict __result)\n     __attribute__ ((__nonnull__ (1, 2, 3)));\n\n\n\n\nextern void rewinddir (DIR *__dirp) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern void seekdir (DIR *__dirp, long int __pos) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern long int telldir (DIR *__dirp) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int dirfd (DIR *__dirp) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\n\n// # 1 \"/usr/include/bits/posix1_lim.h\" 1 3 4\n// # 153 \"/usr/include/bits/posix1_lim.h\" 3 4\n// # 1 \"/usr/include/bits/local_lim.h\" 1 3 4\n// # 36 \"/usr/include/bits/local_lim.h\" 3 4\n// # 1 \"/usr/include/linux/limits.h\" 1 3 4\n// # 37 \"/usr/include/bits/local_lim.h\" 2 3 4\n// # 154 \"/usr/include/bits/posix1_lim.h\" 2 3 4\n// # 233 \"/usr/include/dirent.h\" 2 3 4\n// # 243 \"/usr/include/dirent.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 244 \"/usr/include/dirent.h\" 2 3 4\n\n\n\n\n\n\nextern int scandir (__const char *__restrict __dir,\n      struct dirent ***__restrict __namelist,\n      int (*__selector) (__const struct dirent *),\n      int (*__cmp) (__const void *, __const void *))\n     __attribute__ ((__nonnull__ (1, 2)));\n// # 271 \"/usr/include/dirent.h\" 3 4\nextern int scandir64 (__const char *__restrict __dir,\n        struct dirent64 ***__restrict __namelist,\n        int (*__selector) (__const struct dirent64 *),\n        int (*__cmp) (__const void *, __const void *))\n     __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\nextern int alphasort (__const void *__e1, __const void *__e2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n// # 293 \"/usr/include/dirent.h\" 3 4\nextern int alphasort64 (__const void *__e1, __const void *__e2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern int versionsort (__const void *__e1, __const void *__e2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n// # 314 \"/usr/include/dirent.h\" 3 4\nextern int versionsort64 (__const void *__e1, __const void *__e2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n// # 324 \"/usr/include/dirent.h\" 3 4\nextern __ssize_t getdirentries (int __fd, char *__restrict __buf,\n    size_t __nbytes,\n    __off_t *__restrict __basep)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n// # 341 \"/usr/include/dirent.h\" 3 4\nextern __ssize_t getdirentries64 (int __fd, char *__restrict __buf,\n      size_t __nbytes,\n      __off64_t *__restrict __basep)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n\n\n\n\n\n// # 156 \"zsh_system.h\" 2\n// # 183 \"zsh_system.h\"\n// # 1 \"/usr/include/stdlib.h\" 1 3 4\n// # 33 \"/usr/include/stdlib.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 34 \"/usr/include/stdlib.h\" 2 3 4\n\n\n\n\n\n\n\n\n// # 1 \"/usr/include/bits/waitflags.h\" 1 3 4\n// # 43 \"/usr/include/stdlib.h\" 2 3 4\n// # 1 \"/usr/include/bits/waitstatus.h\" 1 3 4\n// # 67 \"/usr/include/bits/waitstatus.h\" 3 4\nunion wait\n  {\n    int w_status;\n    struct\n      {\n\n unsigned int __w_termsig:7;\n unsigned int __w_coredump:1;\n unsigned int __w_retcode:8;\n unsigned int:16;\n\n\n\n\n\n\n\n      } __wait_terminated;\n    struct\n      {\n\n unsigned int __w_stopval:8;\n unsigned int __w_stopsig:8;\n unsigned int:16;\n\n\n\n\n\n\n      } __wait_stopped;\n  };\n// # 44 \"/usr/include/stdlib.h\" 2 3 4\n// # 68 \"/usr/include/stdlib.h\" 3 4\ntypedef union\n  {\n    union wait *__uptr;\n    int *__iptr;\n  } __WAIT_STATUS __attribute__ ((__transparent_union__));\n// # 96 \"/usr/include/stdlib.h\" 3 4\n\n\ntypedef struct\n  {\n    int quot;\n    int rem;\n  } div_t;\n\n\n\ntypedef struct\n  {\n    long int quot;\n    long int rem;\n  } ldiv_t;\n\n\n\n\n\n\n\n__extension__ typedef struct\n  {\n    long long int quot;\n    long long int rem;\n  } lldiv_t;\n\n\n// # 140 \"/usr/include/stdlib.h\" 3 4\nextern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__)) ;\n\n\n\n\nextern double atof (__const char *__nptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern int atoi (__const char *__nptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern long int atol (__const char *__nptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n__extension__ extern long long int atoll (__const char *__nptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern double strtod (__const char *__restrict __nptr,\n        char **__restrict __endptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern float strtof (__const char *__restrict __nptr,\n       char **__restrict __endptr) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern long double strtold (__const char *__restrict __nptr,\n       char **__restrict __endptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern long int strtol (__const char *__restrict __nptr,\n   char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern unsigned long int strtoul (__const char *__restrict __nptr,\n      char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n__extension__\nextern long long int strtoq (__const char *__restrict __nptr,\n        char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n__extension__\nextern unsigned long long int strtouq (__const char *__restrict __nptr,\n           char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n__extension__\nextern long long int strtoll (__const char *__restrict __nptr,\n         char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n__extension__\nextern unsigned long long int strtoull (__const char *__restrict __nptr,\n     char **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n// # 240 \"/usr/include/stdlib.h\" 3 4\nextern long int strtol_l (__const char *__restrict __nptr,\n     char **__restrict __endptr, int __base,\n     __locale_t __loc) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;\n\nextern unsigned long int strtoul_l (__const char *__restrict __nptr,\n        char **__restrict __endptr,\n        int __base, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;\n\n__extension__\nextern long long int strtoll_l (__const char *__restrict __nptr,\n    char **__restrict __endptr, int __base,\n    __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;\n\n__extension__\nextern unsigned long long int strtoull_l (__const char *__restrict __nptr,\n       char **__restrict __endptr,\n       int __base, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 4))) ;\n\nextern double strtod_l (__const char *__restrict __nptr,\n   char **__restrict __endptr, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;\n\nextern float strtof_l (__const char *__restrict __nptr,\n         char **__restrict __endptr, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;\n\nextern long double strtold_l (__const char *__restrict __nptr,\n         char **__restrict __endptr,\n         __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3))) ;\n\n\n\n\n\n\nextern double __strtod_internal (__const char *__restrict __nptr,\n     char **__restrict __endptr, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\nextern float __strtof_internal (__const char *__restrict __nptr,\n    char **__restrict __endptr, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\nextern long double __strtold_internal (__const char *__restrict __nptr,\n           char **__restrict __endptr,\n           int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\nextern long int __strtol_internal (__const char *__restrict __nptr,\n       char **__restrict __endptr,\n       int __base, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\nextern unsigned long int __strtoul_internal (__const char *__restrict __nptr,\n          char **__restrict __endptr,\n          int __base, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n__extension__\nextern long long int __strtoll_internal (__const char *__restrict __nptr,\n      char **__restrict __endptr,\n      int __base, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n__extension__\nextern unsigned long long int __strtoull_internal (__const char *\n         __restrict __nptr,\n         char **__restrict __endptr,\n         int __base, int __group)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 429 \"/usr/include/stdlib.h\" 3 4\nextern char *l64a (long int __n) __attribute__ ((__nothrow__)) ;\n\n\nextern long int a64l (__const char *__s)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;\n// # 445 \"/usr/include/stdlib.h\" 3 4\nextern long int random (void) __attribute__ ((__nothrow__));\n\n\nextern void srandom (unsigned int __seed) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *initstate (unsigned int __seed, char *__statebuf,\n   size_t __statelen) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\nextern char *setstate (char *__statebuf) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\n\nstruct random_data\n  {\n    int32_t *fptr;\n    int32_t *rptr;\n    int32_t *state;\n    int rand_type;\n    int rand_deg;\n    int rand_sep;\n    int32_t *end_ptr;\n  };\n\nextern int random_r (struct random_data *__restrict __buf,\n       int32_t *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern int srandom_r (unsigned int __seed, struct random_data *__buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\nextern int initstate_r (unsigned int __seed, char *__restrict __statebuf,\n   size_t __statelen,\n   struct random_data *__restrict __buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n\nextern int setstate_r (char *__restrict __statebuf,\n         struct random_data *__restrict __buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\nextern int rand (void) __attribute__ ((__nothrow__));\n\nextern void srand (unsigned int __seed) __attribute__ ((__nothrow__));\n\n\n\n\nextern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern double drand48 (void) __attribute__ ((__nothrow__));\nextern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern long int lrand48 (void) __attribute__ ((__nothrow__));\nextern long int nrand48 (unsigned short int __xsubi[3])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern long int mrand48 (void) __attribute__ ((__nothrow__));\nextern long int jrand48 (unsigned short int __xsubi[3])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern void srand48 (long int __seedval) __attribute__ ((__nothrow__));\nextern unsigned short int *seed48 (unsigned short int __seed16v[3])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\nextern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nstruct drand48_data\n  {\n    unsigned short int __x[3];\n    unsigned short int __old_x[3];\n    unsigned short int __c;\n    unsigned short int __init;\n    unsigned long long int __a;\n  };\n\n\nextern int drand48_r (struct drand48_data *__restrict __buffer,\n        double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern int erand48_r (unsigned short int __xsubi[3],\n        struct drand48_data *__restrict __buffer,\n        double *__restrict __result) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int lrand48_r (struct drand48_data *__restrict __buffer,\n        long int *__restrict __result)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern int nrand48_r (unsigned short int __xsubi[3],\n        struct drand48_data *__restrict __buffer,\n        long int *__restrict __result)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int mrand48_r (struct drand48_data *__restrict __buffer,\n        long int *__restrict __result)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern int jrand48_r (unsigned short int __xsubi[3],\n        struct drand48_data *__restrict __buffer,\n        long int *__restrict __result)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int srand48_r (long int __seedval, struct drand48_data *__buffer)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\nextern int seed48_r (unsigned short int __seed16v[3],\n       struct drand48_data *__buffer) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern int lcong48_r (unsigned short int __param[7],\n        struct drand48_data *__buffer)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\n\n\n\nextern void *malloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;\n\nextern void *calloc (size_t __nmemb, size_t __size)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;\n\n\n\n\n\n\n\nextern void *realloc (void *__ptr, size_t __size)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));\n\nextern void free (void *__ptr) __attribute__ ((__nothrow__));\n\n\n\n\nextern void cfree (void *__ptr) __attribute__ ((__nothrow__));\n\n\n\n// # 1 \"/usr/include/alloca.h\" 1 3 4\n// # 25 \"/usr/include/alloca.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 26 \"/usr/include/alloca.h\" 2 3 4\n\n\n\n\n\n\n\nextern void *alloca (size_t __size) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n// # 613 \"/usr/include/stdlib.h\" 2 3 4\n\n\n\n\nextern void *valloc (size_t __size) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) ;\n\n\n\n\nextern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\nextern void abort (void) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));\n\n\n\nextern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern void exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));\n\n\n\n\n\n\nextern void _Exit (int __status) __attribute__ ((__nothrow__)) __attribute__ ((__noreturn__));\n\n\n\n\n\n\nextern char *getenv (__const char *__name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\nextern char *__secure_getenv (__const char *__name)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\nextern int putenv (char *__string) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int setenv (__const char *__name, __const char *__value, int __replace)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\nextern int unsetenv (__const char *__name) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int clearenv (void) __attribute__ ((__nothrow__));\n// # 698 \"/usr/include/stdlib.h\" 3 4\nextern char *mktemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 709 \"/usr/include/stdlib.h\" 3 4\nextern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;\n// # 719 \"/usr/include/stdlib.h\" 3 4\nextern int mkstemp64 (char *__template) __attribute__ ((__nonnull__ (1))) ;\n// # 729 \"/usr/include/stdlib.h\" 3 4\nextern char *mkdtemp (char *__template) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n\n\n\n\n\n\n\n\nextern int system (__const char *__command) ;\n\n\n\n\n\n\n\nextern char *canonicalize_file_name (__const char *__name)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 756 \"/usr/include/stdlib.h\" 3 4\nextern char *realpath (__const char *__restrict __name,\n         char *__restrict __resolved) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\ntypedef int (*__compar_fn_t) (__const void *, __const void *);\n\n\ntypedef __compar_fn_t comparison_fn_t;\n\n\n\n\n\n\nextern void *bsearch (__const void *__key, __const void *__base,\n        size_t __nmemb, size_t __size, __compar_fn_t __compar)\n     __attribute__ ((__nonnull__ (1, 2, 5))) ;\n\n\n\nextern void qsort (void *__base, size_t __nmemb, size_t __size,\n     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));\n\n\n\nextern int abs (int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\nextern long int labs (long int __x) __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\n\n\n\n__extension__ extern long long int llabs (long long int __x)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\n\n\n\n\n\n\n\nextern div_t div (int __numer, int __denom)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\nextern ldiv_t ldiv (long int __numer, long int __denom)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\n\n\n\n\n__extension__ extern lldiv_t lldiv (long long int __numer,\n        long long int __denom)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__)) ;\n\n// # 821 \"/usr/include/stdlib.h\" 3 4\nextern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,\n     int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;\n\n\n\n\nextern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,\n     int *__restrict __sign) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;\n\n\n\n\nextern char *gcvt (double __value, int __ndigit, char *__buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;\n\n\n\n\nextern char *qecvt (long double __value, int __ndigit,\n      int *__restrict __decpt, int *__restrict __sign)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;\nextern char *qfcvt (long double __value, int __ndigit,\n      int *__restrict __decpt, int *__restrict __sign)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4))) ;\nextern char *qgcvt (long double __value, int __ndigit, char *__buf)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3))) ;\n\n\n\n\nextern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,\n     int *__restrict __sign, char *__restrict __buf,\n     size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));\nextern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,\n     int *__restrict __sign, char *__restrict __buf,\n     size_t __len) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));\n\nextern int qecvt_r (long double __value, int __ndigit,\n      int *__restrict __decpt, int *__restrict __sign,\n      char *__restrict __buf, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));\nextern int qfcvt_r (long double __value, int __ndigit,\n      int *__restrict __decpt, int *__restrict __sign,\n      char *__restrict __buf, size_t __len)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (3, 4, 5)));\n\n\n\n\n\n\n\nextern int mblen (__const char *__s, size_t __n) __attribute__ ((__nothrow__)) ;\n\n\nextern int mbtowc (wchar_t *__restrict __pwc,\n     __const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__)) ;\n\n\nextern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__)) ;\n\n\n\nextern size_t mbstowcs (wchar_t *__restrict __pwcs,\n   __const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__));\n\nextern size_t wcstombs (char *__restrict __s,\n   __const wchar_t *__restrict __pwcs, size_t __n)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern int rpmatch (__const char *__response) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1))) ;\n// # 909 \"/usr/include/stdlib.h\" 3 4\nextern int getsubopt (char **__restrict __optionp,\n        char *__const *__restrict __tokens,\n        char **__restrict __valuep)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2, 3))) ;\n\n\n\n\n\nextern void setkey (__const char *__key) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\n\nextern int posix_openpt (int __oflag) ;\n\n\n\n\n\n\n\nextern int grantpt (int __fd) __attribute__ ((__nothrow__));\n\n\n\nextern int unlockpt (int __fd) __attribute__ ((__nothrow__));\n\n\n\n\nextern char *ptsname (int __fd) __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\nextern int ptsname_r (int __fd, char *__buf, size_t __buflen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\nextern int getpt (void);\n\n\n\n\n\n\nextern int getloadavg (double __loadavg[], int __nelem)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 977 \"/usr/include/stdlib.h\" 3 4\n\n// # 184 \"zsh_system.h\" 2\n// # 199 \"zsh_system.h\"\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stdarg.h\" 1 3 4\n// # 200 \"zsh_system.h\" 2\n// # 231 \"zsh_system.h\"\n// # 1 \"/usr/include/errno.h\" 1 3 4\n// # 32 \"/usr/include/errno.h\" 3 4\n\n\n\n\n// # 1 \"/usr/include/bits/errno.h\" 1 3 4\n// # 25 \"/usr/include/bits/errno.h\" 3 4\n// # 1 \"/usr/include/linux/errno.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/asm/errno.h\" 1 3 4\n\n\n\n\n// # 1 \"/usr/include/asm-x86_64/errno.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/asm-generic/errno.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/asm-generic/errno-base.h\" 1 3 4\n// # 5 \"/usr/include/asm-generic/errno.h\" 2 3 4\n// # 5 \"/usr/include/asm-x86_64/errno.h\" 2 3 4\n// # 6 \"/usr/include/asm/errno.h\" 2 3 4\n// # 5 \"/usr/include/linux/errno.h\" 2 3 4\n// # 26 \"/usr/include/bits/errno.h\" 2 3 4\n// # 43 \"/usr/include/bits/errno.h\" 3 4\nextern int *__errno_location (void) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n// # 37 \"/usr/include/errno.h\" 2 3 4\n// # 55 \"/usr/include/errno.h\" 3 4\nextern char *program_invocation_name, *program_invocation_short_name;\n\n\n\n\n// # 69 \"/usr/include/errno.h\" 3 4\ntypedef int error_t;\n// # 232 \"zsh_system.h\" 2\n\n\n\n// # 1 \"/usr/include/sys/time.h\" 1 3 4\n// # 27 \"/usr/include/sys/time.h\" 3 4\n// # 1 \"/usr/include/time.h\" 1 3 4\n// # 28 \"/usr/include/sys/time.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/time.h\" 1 3 4\n// # 30 \"/usr/include/sys/time.h\" 2 3 4\n// # 39 \"/usr/include/sys/time.h\" 3 4\n\n// # 57 \"/usr/include/sys/time.h\" 3 4\nstruct timezone\n  {\n    int tz_minuteswest;\n    int tz_dsttime;\n  };\n\ntypedef struct timezone *__restrict __timezone_ptr_t;\n// # 73 \"/usr/include/sys/time.h\" 3 4\nextern int gettimeofday (struct timeval *__restrict __tv,\n    __timezone_ptr_t __tz) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\nextern int settimeofday (__const struct timeval *__tv,\n    __const struct timezone *__tz)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern int adjtime (__const struct timeval *__delta,\n      struct timeval *__olddelta) __attribute__ ((__nothrow__));\n\n\n\n\nenum __itimer_which\n  {\n\n    ITIMER_REAL = 0,\n\n\n    ITIMER_VIRTUAL = 1,\n\n\n\n    ITIMER_PROF = 2\n\n  };\n\n\n\nstruct itimerval\n  {\n\n    struct timeval it_interval;\n\n    struct timeval it_value;\n  };\n\n\n\n\ntypedef enum __itimer_which __itimer_which_t;\n\n\n\n\n\n\nextern int getitimer (__itimer_which_t __which,\n        struct itimerval *__value) __attribute__ ((__nothrow__));\n\n\n\n\nextern int setitimer (__itimer_which_t __which,\n        __const struct itimerval *__restrict __new,\n        struct itimerval *__restrict __old) __attribute__ ((__nothrow__));\n\n\n\n\nextern int utimes (__const char *__file, __const struct timeval __tvp[2])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int lutimes (__const char *__file, __const struct timeval __tvp[2])\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int futimes (int __fd, __const struct timeval __tvp[2]) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int futimesat (int __fd, __const char *__file,\n        __const struct timeval __tvp[2]) __attribute__ ((__nothrow__));\n// # 191 \"/usr/include/sys/time.h\" 3 4\n\n// # 236 \"zsh_system.h\" 2\n// # 1 \"/usr/include/time.h\" 1 3 4\n// # 31 \"/usr/include/time.h\" 3 4\n\n\n\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 40 \"/usr/include/time.h\" 2 3 4\n\n\n\n// # 1 \"/usr/include/bits/time.h\" 1 3 4\n// # 44 \"/usr/include/time.h\" 2 3 4\n// # 132 \"/usr/include/time.h\" 3 4\n\n\nstruct tm\n{\n  int tm_sec;\n  int tm_min;\n  int tm_hour;\n  int tm_mday;\n  int tm_mon;\n  int tm_year;\n  int tm_wday;\n  int tm_yday;\n  int tm_isdst;\n\n\n  long int tm_gmtoff;\n  __const char *tm_zone;\n\n\n\n\n};\n\n\n\n\n\n\n\n\nstruct itimerspec\n  {\n    struct timespec it_interval;\n    struct timespec it_value;\n  };\n\n\nstruct sigevent;\n// # 181 \"/usr/include/time.h\" 3 4\n\n\n\nextern clock_t clock (void) __attribute__ ((__nothrow__));\n\n\nextern time_t time (time_t *__timer) __attribute__ ((__nothrow__));\n\n\nextern double difftime (time_t __time1, time_t __time0)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\nextern time_t mktime (struct tm *__tp) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern size_t strftime (char *__restrict __s, size_t __maxsize,\n   __const char *__restrict __format,\n   __const struct tm *__restrict __tp) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *strptime (__const char *__restrict __s,\n         __const char *__restrict __fmt, struct tm *__tp)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern size_t strftime_l (char *__restrict __s, size_t __maxsize,\n     __const char *__restrict __format,\n     __const struct tm *__restrict __tp,\n     __locale_t __loc) __attribute__ ((__nothrow__));\n\nextern char *strptime_l (__const char *__restrict __s,\n    __const char *__restrict __fmt, struct tm *__tp,\n    __locale_t __loc) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern struct tm *gmtime (__const time_t *__timer) __attribute__ ((__nothrow__));\n\n\n\nextern struct tm *localtime (__const time_t *__timer) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern struct tm *gmtime_r (__const time_t *__restrict __timer,\n       struct tm *__restrict __tp) __attribute__ ((__nothrow__));\n\n\n\nextern struct tm *localtime_r (__const time_t *__restrict __timer,\n          struct tm *__restrict __tp) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern char *asctime (__const struct tm *__tp) __attribute__ ((__nothrow__));\n\n\nextern char *ctime (__const time_t *__timer) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern char *asctime_r (__const struct tm *__restrict __tp,\n   char *__restrict __buf) __attribute__ ((__nothrow__));\n\n\nextern char *ctime_r (__const time_t *__restrict __timer,\n        char *__restrict __buf) __attribute__ ((__nothrow__));\n\n\n\n\nextern char *__tzname[2];\nextern int __daylight;\nextern long int __timezone;\n\n\n\n\nextern char *tzname[2];\n\n\n\nextern void tzset (void) __attribute__ ((__nothrow__));\n\n\n\nextern int daylight;\nextern long int timezone;\n\n\n\n\n\nextern int stime (__const time_t *__when) __attribute__ ((__nothrow__));\n// # 312 \"/usr/include/time.h\" 3 4\nextern time_t timegm (struct tm *__tp) __attribute__ ((__nothrow__));\n\n\nextern time_t timelocal (struct tm *__tp) __attribute__ ((__nothrow__));\n\n\nextern int dysize (int __year) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n// # 327 \"/usr/include/time.h\" 3 4\nextern int nanosleep (__const struct timespec *__requested_time,\n        struct timespec *__remaining);\n\n\n\nextern int clock_getres (clockid_t __clock_id, struct timespec *__res) __attribute__ ((__nothrow__));\n\n\nextern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) __attribute__ ((__nothrow__));\n\n\nextern int clock_settime (clockid_t __clock_id, __const struct timespec *__tp)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int clock_nanosleep (clockid_t __clock_id, int __flags,\n       __const struct timespec *__req,\n       struct timespec *__rem);\n\n\nextern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) __attribute__ ((__nothrow__));\n\n\n\n\nextern int timer_create (clockid_t __clock_id,\n    struct sigevent *__restrict __evp,\n    timer_t *__restrict __timerid) __attribute__ ((__nothrow__));\n\n\nextern int timer_delete (timer_t __timerid) __attribute__ ((__nothrow__));\n\n\nextern int timer_settime (timer_t __timerid, int __flags,\n     __const struct itimerspec *__restrict __value,\n     struct itimerspec *__restrict __ovalue) __attribute__ ((__nothrow__));\n\n\nextern int timer_gettime (timer_t __timerid, struct itimerspec *__value)\n     __attribute__ ((__nothrow__));\n\n\nextern int timer_getoverrun (timer_t __timerid) __attribute__ ((__nothrow__));\n// # 389 \"/usr/include/time.h\" 3 4\nextern int getdate_err;\n// # 398 \"/usr/include/time.h\" 3 4\nextern struct tm *getdate (__const char *__string);\n// # 412 \"/usr/include/time.h\" 3 4\nextern int getdate_r (__const char *__restrict __string,\n        struct tm *__restrict __resbufp);\n\n\n\n// # 237 \"zsh_system.h\" 2\n// # 267 \"zsh_system.h\"\n// # 1 \"/usr/include/sys/times.h\" 1 3 4\n// # 32 \"/usr/include/sys/times.h\" 3 4\n\n\n\nstruct tms\n  {\n    clock_t tms_utime;\n    clock_t tms_stime;\n\n    clock_t tms_cutime;\n    clock_t tms_cstime;\n  };\n\n\n\n\n\n\nextern clock_t times (struct tms *__buffer) __attribute__ ((__nothrow__));\n\n\n// # 268 \"zsh_system.h\" 2\n\n\n\n// # 1 \"/usr/include/string.h\" 1 3 4\n// # 28 \"/usr/include/string.h\" 3 4\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 34 \"/usr/include/string.h\" 2 3 4\n\n\n\n\nextern void *memcpy (void *__restrict __dest,\n       __const void *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern void *memmove (void *__dest, __const void *__src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\nextern void *memccpy (void *__restrict __dest, __const void *__restrict __src,\n        int __c, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int memcmp (__const void *__s1, __const void *__s2, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern void *memchr (__const void *__s, int __c, size_t __n)\n      __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern void *rawmemchr (__const void *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern void *memrchr (__const void *__s, int __c, size_t __n)\n      __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern char *strcpy (char *__restrict __dest, __const char *__restrict __src)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern char *strncpy (char *__restrict __dest,\n        __const char *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern char *strcat (char *__restrict __dest, __const char *__restrict __src)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern char *strncat (char *__restrict __dest, __const char *__restrict __src,\n        size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int strcmp (__const char *__s1, __const char *__s2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern int strncmp (__const char *__s1, __const char *__s2, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int strcoll (__const char *__s1, __const char *__s2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern size_t strxfrm (char *__restrict __dest,\n         __const char *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n// # 121 \"/usr/include/string.h\" 3 4\nextern int strcoll_l (__const char *__s1, __const char *__s2, __locale_t __l)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));\n\nextern size_t strxfrm_l (char *__dest, __const char *__src, size_t __n,\n    __locale_t __l) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 4)));\n\n\n\n\nextern char *strdup (__const char *__s)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern char *strndup (__const char *__string, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));\n// # 165 \"/usr/include/string.h\" 3 4\n\n\nextern char *strchr (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\nextern char *strrchr (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern char *strchrnul (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern size_t strcspn (__const char *__s, __const char *__reject)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern size_t strspn (__const char *__s, __const char *__accept)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern char *strpbrk (__const char *__s, __const char *__accept)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\nextern char *strstr (__const char *__haystack, __const char *__needle)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern char *strtok (char *__restrict __s, __const char *__restrict __delim)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\nextern char *__strtok_r (char *__restrict __s,\n    __const char *__restrict __delim,\n    char **__restrict __save_ptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n\nextern char *strtok_r (char *__restrict __s, __const char *__restrict __delim,\n         char **__restrict __save_ptr)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n\n\n\n\nextern char *strcasestr (__const char *__haystack, __const char *__needle)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\n\nextern void *memmem (__const void *__haystack, size_t __haystacklen,\n       __const void *__needle, size_t __needlelen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 3)));\n\n\n\nextern void *__mempcpy (void *__restrict __dest,\n   __const void *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern void *mempcpy (void *__restrict __dest,\n        __const void *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern size_t strlen (__const char *__s)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern size_t strnlen (__const char *__string, size_t __maxlen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\nextern char *strerror (int __errnum) __attribute__ ((__nothrow__));\n\n// # 281 \"/usr/include/string.h\" 3 4\nextern char *strerror_r (int __errnum, char *__buf, size_t __buflen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\n\nextern void __bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern void bcopy (__const void *__src, void *__dest, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int bcmp (__const void *__s1, __const void *__s2, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern char *index (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern char *rindex (__const char *__s, int __c)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern int ffs (int __i) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\n\n\nextern int ffsl (long int __l) __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n__extension__ extern int ffsll (long long int __ll)\n     __attribute__ ((__nothrow__)) __attribute__ ((__const__));\n\n\n\n\nextern int strcasecmp (__const char *__s1, __const char *__s2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern int strncasecmp (__const char *__s1, __const char *__s2, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\n\nextern int strcasecmp_l (__const char *__s1, __const char *__s2,\n    __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));\n\nextern int strncasecmp_l (__const char *__s1, __const char *__s2,\n     size_t __n, __locale_t __loc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));\n\n\n\n\n\nextern char *strsep (char **__restrict __stringp,\n       __const char *__restrict __delim)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\n\nextern int strverscmp (__const char *__s1, __const char *__s2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern char *strsignal (int __sig) __attribute__ ((__nothrow__));\n\n\nextern char *__stpcpy (char *__restrict __dest, __const char *__restrict __src)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern char *stpcpy (char *__restrict __dest, __const char *__restrict __src)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\n\nextern char *__stpncpy (char *__restrict __dest,\n   __const char *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\nextern char *stpncpy (char *__restrict __dest,\n        __const char *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));\n\n\nextern char *strfry (char *__string) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern void *memfrob (void *__s, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\n\n\n\nextern char *basename (__const char *__filename) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n// # 426 \"/usr/include/string.h\" 3 4\n\n// # 272 \"zsh_system.h\" 2\n// # 282 \"zsh_system.h\"\n// # 1 \"/usr/include/locale.h\" 1 3 4\n// # 29 \"/usr/include/locale.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 30 \"/usr/include/locale.h\" 2 3 4\n// # 1 \"/usr/include/bits/locale.h\" 1 3 4\n// # 27 \"/usr/include/bits/locale.h\" 3 4\nenum\n{\n  __LC_CTYPE = 0,\n  __LC_NUMERIC = 1,\n  __LC_TIME = 2,\n  __LC_COLLATE = 3,\n  __LC_MONETARY = 4,\n  __LC_MESSAGES = 5,\n  __LC_ALL = 6,\n  __LC_PAPER = 7,\n  __LC_NAME = 8,\n  __LC_ADDRESS = 9,\n  __LC_TELEPHONE = 10,\n  __LC_MEASUREMENT = 11,\n  __LC_IDENTIFICATION = 12\n};\n// # 31 \"/usr/include/locale.h\" 2 3 4\n\n\n// # 52 \"/usr/include/locale.h\" 3 4\nstruct lconv\n{\n\n\n  char *decimal_point;\n  char *thousands_sep;\n\n\n\n\n\n  char *grouping;\n\n\n\n\n\n  char *int_curr_symbol;\n  char *currency_symbol;\n  char *mon_decimal_point;\n  char *mon_thousands_sep;\n  char *mon_grouping;\n  char *positive_sign;\n  char *negative_sign;\n  char int_frac_digits;\n  char frac_digits;\n\n  char p_cs_precedes;\n\n  char p_sep_by_space;\n\n  char n_cs_precedes;\n\n  char n_sep_by_space;\n\n\n\n\n\n\n  char p_sign_posn;\n  char n_sign_posn;\n\n\n  char int_p_cs_precedes;\n\n  char int_p_sep_by_space;\n\n  char int_n_cs_precedes;\n\n  char int_n_sep_by_space;\n\n\n\n\n\n\n  char int_p_sign_posn;\n  char int_n_sign_posn;\n// # 119 \"/usr/include/locale.h\" 3 4\n};\n\n\n\n\n\nextern char *setlocale (int __category, __const char *__locale) __attribute__ ((__nothrow__));\n\n\nextern struct lconv *localeconv (void) __attribute__ ((__nothrow__));\n\n\n// # 148 \"/usr/include/locale.h\" 3 4\ntypedef __locale_t locale_t;\n\n\n\n\n\nextern __locale_t newlocale (int __category_mask, __const char *__locale,\n        __locale_t __base) __attribute__ ((__nothrow__));\n// # 189 \"/usr/include/locale.h\" 3 4\nextern __locale_t duplocale (__locale_t __dataset) __attribute__ ((__nothrow__));\n\n\n\nextern void freelocale (__locale_t __dataset) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern __locale_t uselocale (__locale_t __dataset) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\n// # 283 \"zsh_system.h\" 2\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 1 3 4\n// # 11 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/syslimits.h\" 1 3 4\n\n\n\n\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 1 3 4\n// # 122 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 3 4\n// # 1 \"/usr/include/limits.h\" 1 3 4\n// # 149 \"/usr/include/limits.h\" 3 4\n// # 1 \"/usr/include/bits/posix2_lim.h\" 1 3 4\n// # 150 \"/usr/include/limits.h\" 2 3 4\n\n\n\n// # 1 \"/usr/include/bits/xopen_lim.h\" 1 3 4\n// # 34 \"/usr/include/bits/xopen_lim.h\" 3 4\n// # 1 \"/usr/include/bits/stdio_lim.h\" 1 3 4\n// # 35 \"/usr/include/bits/xopen_lim.h\" 2 3 4\n// # 154 \"/usr/include/limits.h\" 2 3 4\n// # 123 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 2 3 4\n// # 8 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/syslimits.h\" 2 3 4\n// # 12 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 2 3 4\n// # 287 \"zsh_system.h\" 2\n// # 329 \"zsh_system.h\"\n// # 1 \"/usr/include/fcntl.h\" 1 3 4\n// # 30 \"/usr/include/fcntl.h\" 3 4\n\n\n\n\n// # 1 \"/usr/include/bits/fcntl.h\" 1 3 4\n// # 25 \"/usr/include/bits/fcntl.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 26 \"/usr/include/bits/fcntl.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/uio.h\" 1 3 4\n// # 44 \"/usr/include/bits/uio.h\" 3 4\nstruct iovec\n  {\n    void *iov_base;\n    size_t iov_len;\n  };\n// # 28 \"/usr/include/bits/fcntl.h\" 2 3 4\n// # 155 \"/usr/include/bits/fcntl.h\" 3 4\nstruct flock\n  {\n    short int l_type;\n    short int l_whence;\n\n    __off_t l_start;\n    __off_t l_len;\n\n\n\n\n    __pid_t l_pid;\n  };\n\n\nstruct flock64\n  {\n    short int l_type;\n    short int l_whence;\n    __off64_t l_start;\n    __off64_t l_len;\n    __pid_t l_pid;\n  };\n// # 222 \"/usr/include/bits/fcntl.h\" 3 4\n\n\n\n\n\nextern ssize_t readahead (int __fd, __off64_t __offset, size_t __count)\n    __attribute__ ((__nothrow__));\n\n\n\nextern int sync_file_range (int __fd, __off64_t __from, __off64_t __to,\n       unsigned int __flags);\n\n\n\nextern int vmsplice (int __fdout, const struct iovec *__iov, size_t __count,\n       unsigned int __flags);\n\n\nextern int splice (int __fdin, __off64_t *__offin, int __fdout,\n     __off64_t *__offout, size_t __len, unsigned int __flags)\n    __attribute__ ((__nothrow__));\n\n\nextern int tee (int __fdin, int __fdout, size_t __len, unsigned int __flags)\n    __attribute__ ((__nothrow__));\n\n\n\n\n// # 35 \"/usr/include/fcntl.h\" 2 3 4\n// # 76 \"/usr/include/fcntl.h\" 3 4\nextern int fcntl (int __fd, int __cmd, ...);\n// # 85 \"/usr/include/fcntl.h\" 3 4\nextern int open (__const char *__file, int __oflag, ...) __attribute__ ((__nonnull__ (1)));\n// # 95 \"/usr/include/fcntl.h\" 3 4\nextern int open64 (__const char *__file, int __oflag, ...) __attribute__ ((__nonnull__ (1)));\n// # 109 \"/usr/include/fcntl.h\" 3 4\nextern int openat (int __fd, __const char *__file, int __oflag, ...)\n     __attribute__ ((__nonnull__ (2)));\n// # 120 \"/usr/include/fcntl.h\" 3 4\nextern int openat64 (int __fd, __const char *__file, int __oflag, ...)\n     __attribute__ ((__nonnull__ (2)));\n// # 130 \"/usr/include/fcntl.h\" 3 4\nextern int creat (__const char *__file, __mode_t __mode) __attribute__ ((__nonnull__ (1)));\n// # 140 \"/usr/include/fcntl.h\" 3 4\nextern int creat64 (__const char *__file, __mode_t __mode) __attribute__ ((__nonnull__ (1)));\n// # 176 \"/usr/include/fcntl.h\" 3 4\nextern int posix_fadvise (int __fd, __off_t __offset, __off_t __len,\n     int __advise) __attribute__ ((__nothrow__));\n// # 188 \"/usr/include/fcntl.h\" 3 4\nextern int posix_fadvise64 (int __fd, __off64_t __offset, __off64_t __len,\n       int __advise) __attribute__ ((__nothrow__));\n// # 198 \"/usr/include/fcntl.h\" 3 4\nextern int posix_fallocate (int __fd, __off_t __offset, __off_t __len);\n// # 209 \"/usr/include/fcntl.h\" 3 4\nextern int posix_fallocate64 (int __fd, __off64_t __offset, __off64_t __len);\n\n\n\n\n// # 330 \"zsh_system.h\" 2\n// # 341 \"zsh_system.h\"\n// # 1 \"/usr/include/sys/wait.h\" 1 3 4\n// # 29 \"/usr/include/sys/wait.h\" 3 4\n\n\n\n// # 1 \"/usr/include/sys/resource.h\" 1 3 4\n// # 25 \"/usr/include/sys/resource.h\" 3 4\n// # 1 \"/usr/include/bits/resource.h\" 1 3 4\n// # 33 \"/usr/include/bits/resource.h\" 3 4\nenum __rlimit_resource\n{\n\n  RLIMIT_CPU = 0,\n\n\n\n  RLIMIT_FSIZE = 1,\n\n\n\n  RLIMIT_DATA = 2,\n\n\n\n  RLIMIT_STACK = 3,\n\n\n\n  RLIMIT_CORE = 4,\n\n\n\n\n\n\n  __RLIMIT_RSS = 5,\n\n\n\n  RLIMIT_NOFILE = 7,\n  __RLIMIT_OFILE = RLIMIT_NOFILE,\n\n\n\n\n  RLIMIT_AS = 9,\n\n\n\n  __RLIMIT_NPROC = 6,\n\n\n\n  __RLIMIT_MEMLOCK = 8,\n\n\n\n  __RLIMIT_LOCKS = 10,\n\n\n\n  __RLIMIT_SIGPENDING = 11,\n\n\n\n  __RLIMIT_MSGQUEUE = 12,\n\n\n\n\n\n  __RLIMIT_NICE = 13,\n\n\n\n\n  __RLIMIT_RTPRIO = 14,\n\n\n  __RLIMIT_NLIMITS = 15,\n  __RLIM_NLIMITS = __RLIMIT_NLIMITS\n\n\n};\n// # 127 \"/usr/include/bits/resource.h\" 3 4\ntypedef __rlim_t rlim_t;\n\n\n\n\ntypedef __rlim64_t rlim64_t;\n\n\nstruct rlimit\n  {\n\n    rlim_t rlim_cur;\n\n    rlim_t rlim_max;\n  };\n\n\nstruct rlimit64\n  {\n\n    rlim64_t rlim_cur;\n\n    rlim64_t rlim_max;\n };\n\n\n\nenum __rusage_who\n{\n\n  RUSAGE_SELF = 0,\n\n\n\n  RUSAGE_CHILDREN = -1,\n\n\n\n\n  RUSAGE_THREAD = 1\n\n\n\n\n};\n\n\n// # 1 \"/usr/include/bits/time.h\" 1 3 4\n// # 175 \"/usr/include/bits/resource.h\" 2 3 4\n\n\nstruct rusage\n  {\n\n    struct timeval ru_utime;\n\n    struct timeval ru_stime;\n\n    long int ru_maxrss;\n\n\n    long int ru_ixrss;\n\n    long int ru_idrss;\n\n    long int ru_isrss;\n\n\n    long int ru_minflt;\n\n    long int ru_majflt;\n\n    long int ru_nswap;\n\n\n    long int ru_inblock;\n\n    long int ru_oublock;\n\n    long int ru_msgsnd;\n\n    long int ru_msgrcv;\n\n    long int ru_nsignals;\n\n\n\n    long int ru_nvcsw;\n\n\n    long int ru_nivcsw;\n  };\n\n\n\n\n\n\n\nenum __priority_which\n{\n  PRIO_PROCESS = 0,\n\n  PRIO_PGRP = 1,\n\n  PRIO_USER = 2\n\n};\n// # 26 \"/usr/include/sys/resource.h\" 2 3 4\n\n\n\n\n\n\n\n\n\n\n\n\n\ntypedef enum __rlimit_resource __rlimit_resource_t;\ntypedef enum __rusage_who __rusage_who_t;\ntypedef enum __priority_which __priority_which_t;\n// # 51 \"/usr/include/sys/resource.h\" 3 4\nextern int getrlimit (__rlimit_resource_t __resource,\n        struct rlimit *__rlimits) __attribute__ ((__nothrow__));\n// # 62 \"/usr/include/sys/resource.h\" 3 4\nextern int getrlimit64 (__rlimit_resource_t __resource,\n   struct rlimit64 *__rlimits) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int setrlimit (__rlimit_resource_t __resource,\n        __const struct rlimit *__rlimits) __attribute__ ((__nothrow__));\n// # 82 \"/usr/include/sys/resource.h\" 3 4\nextern int setrlimit64 (__rlimit_resource_t __resource,\n   __const struct rlimit64 *__rlimits) __attribute__ ((__nothrow__));\n\n\n\n\nextern int getrusage (__rusage_who_t __who, struct rusage *__usage) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int getpriority (__priority_which_t __which, id_t __who) __attribute__ ((__nothrow__));\n\n\n\nextern int setpriority (__priority_which_t __which, id_t __who, int __prio)\n     __attribute__ ((__nothrow__));\n\n\n// # 33 \"/usr/include/sys/wait.h\" 2 3 4\n// # 102 \"/usr/include/sys/wait.h\" 3 4\ntypedef enum\n{\n  P_ALL,\n  P_PID,\n  P_PGID\n} idtype_t;\n// # 116 \"/usr/include/sys/wait.h\" 3 4\nextern __pid_t wait (__WAIT_STATUS __stat_loc);\n// # 139 \"/usr/include/sys/wait.h\" 3 4\nextern __pid_t waitpid (__pid_t __pid, int *__stat_loc, int __options);\n\n\n\n// # 1 \"/usr/include/bits/siginfo.h\" 1 3 4\n// # 25 \"/usr/include/bits/siginfo.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 26 \"/usr/include/bits/siginfo.h\" 2 3 4\n// # 144 \"/usr/include/sys/wait.h\" 2 3 4\n// # 155 \"/usr/include/sys/wait.h\" 3 4\nextern int waitid (idtype_t __idtype, __id_t __id, siginfo_t *__infop,\n     int __options);\n\n\n\n\n\nstruct rusage;\n\n\n\n\n\n\nextern __pid_t wait3 (__WAIT_STATUS __stat_loc, int __options,\n        struct rusage * __usage) __attribute__ ((__nothrow__));\n\n\n\n\n\nstruct rusage;\n\n\nextern __pid_t wait4 (__pid_t __pid, __WAIT_STATUS __stat_loc, int __options,\n        struct rusage *__usage) __attribute__ ((__nothrow__));\n\n\n\n\n// # 342 \"zsh_system.h\" 2\n// # 402 \"zsh_system.h\"\n// # 1 \"/usr/include/termios.h\" 1 3 4\n// # 36 \"/usr/include/termios.h\" 3 4\n\n\n\n\n// # 1 \"/usr/include/bits/termios.h\" 1 3 4\n// # 25 \"/usr/include/bits/termios.h\" 3 4\ntypedef unsigned char cc_t;\ntypedef unsigned int speed_t;\ntypedef unsigned int tcflag_t;\n\n\nstruct termios\n  {\n    tcflag_t c_iflag;\n    tcflag_t c_oflag;\n    tcflag_t c_cflag;\n    tcflag_t c_lflag;\n    cc_t c_line;\n    cc_t c_cc[32];\n    speed_t c_ispeed;\n    speed_t c_ospeed;\n\n\n  };\n// # 41 \"/usr/include/termios.h\" 2 3 4\n// # 49 \"/usr/include/termios.h\" 3 4\nextern speed_t cfgetospeed (__const struct termios *__termios_p) __attribute__ ((__nothrow__));\n\n\nextern speed_t cfgetispeed (__const struct termios *__termios_p) __attribute__ ((__nothrow__));\n\n\nextern int cfsetospeed (struct termios *__termios_p, speed_t __speed) __attribute__ ((__nothrow__));\n\n\nextern int cfsetispeed (struct termios *__termios_p, speed_t __speed) __attribute__ ((__nothrow__));\n\n\n\nextern int cfsetspeed (struct termios *__termios_p, speed_t __speed) __attribute__ ((__nothrow__));\n\n\n\n\nextern int tcgetattr (int __fd, struct termios *__termios_p) __attribute__ ((__nothrow__));\n\n\n\nextern int tcsetattr (int __fd, int __optional_actions,\n        __const struct termios *__termios_p) __attribute__ ((__nothrow__));\n\n\n\n\nextern void cfmakeraw (struct termios *__termios_p) __attribute__ ((__nothrow__));\n\n\n\nextern int tcsendbreak (int __fd, int __duration) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int tcdrain (int __fd);\n\n\n\nextern int tcflush (int __fd, int __queue_selector) __attribute__ ((__nothrow__));\n\n\n\nextern int tcflow (int __fd, int __action) __attribute__ ((__nothrow__));\n\n\n\n\nextern __pid_t tcgetsid (int __fd) __attribute__ ((__nothrow__));\n\n\n\n\n// # 1 \"/usr/include/sys/ttydefaults.h\" 1 3 4\n// # 106 \"/usr/include/termios.h\" 2 3 4\n\n\n\n// # 403 \"zsh_system.h\" 2\n// # 421 \"zsh_system.h\"\n// # 1 \"/usr/include/sys/ioctl.h\" 1 3 4\n// # 24 \"/usr/include/sys/ioctl.h\" 3 4\n\n\n\n// # 1 \"/usr/include/bits/ioctls.h\" 1 3 4\n// # 24 \"/usr/include/bits/ioctls.h\" 3 4\n// # 1 \"/usr/include/asm/ioctls.h\" 1 3 4\n\n\n\n\n// # 1 \"/usr/include/asm-x86_64/ioctls.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/asm/ioctl.h\" 1 3 4\n\n\n\n\n// # 1 \"/usr/include/asm-x86_64/ioctl.h\" 1 3 4\n// # 1 \"/usr/include/asm-generic/ioctl.h\" 1 3 4\n// # 1 \"/usr/include/asm-x86_64/ioctl.h\" 2 3 4\n// # 6 \"/usr/include/asm/ioctl.h\" 2 3 4\n// # 5 \"/usr/include/asm-x86_64/ioctls.h\" 2 3 4\n// # 6 \"/usr/include/asm/ioctls.h\" 2 3 4\n// # 25 \"/usr/include/bits/ioctls.h\" 2 3 4\n// # 28 \"/usr/include/sys/ioctl.h\" 2 3 4\n\n\n// # 1 \"/usr/include/bits/ioctl-types.h\" 1 3 4\n// # 28 \"/usr/include/bits/ioctl-types.h\" 3 4\nstruct winsize\n  {\n    unsigned short int ws_row;\n    unsigned short int ws_col;\n    unsigned short int ws_xpixel;\n    unsigned short int ws_ypixel;\n  };\n\n\nstruct termio\n  {\n    unsigned short int c_iflag;\n    unsigned short int c_oflag;\n    unsigned short int c_cflag;\n    unsigned short int c_lflag;\n    unsigned char c_line;\n    unsigned char c_cc[8];\n};\n// # 31 \"/usr/include/sys/ioctl.h\" 2 3 4\n\n\n\n\n\n\n// # 1 \"/usr/include/sys/ttydefaults.h\" 1 3 4\n// # 38 \"/usr/include/sys/ioctl.h\" 2 3 4\n\n\n\n\nextern int ioctl (int __fd, unsigned long int __request, ...) __attribute__ ((__nothrow__));\n\n\n// # 422 \"zsh_system.h\" 2\n\n\n\n\n\n\n\n// # 1 \"/usr/include/sys/param.h\" 1 3 4\n// # 22 \"/usr/include/sys/param.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/limits.h\" 1 3 4\n// # 23 \"/usr/include/sys/param.h\" 2 3 4\n\n// # 1 \"/usr/include/linux/param.h\" 1 3 4\n\n\n\n// # 1 \"/usr/include/asm/param.h\" 1 3 4\n\n\n\n\n// # 1 \"/usr/include/asm-x86_64/param.h\" 1 3 4\n// # 6 \"/usr/include/asm/param.h\" 2 3 4\n// # 5 \"/usr/include/linux/param.h\" 2 3 4\n// # 25 \"/usr/include/sys/param.h\" 2 3 4\n// # 430 \"zsh_system.h\" 2\n\n\n\n// # 1 \"/usr/include/sys/utsname.h\" 1 3 4\n// # 28 \"/usr/include/sys/utsname.h\" 3 4\n\n\n// # 1 \"/usr/include/bits/utsname.h\" 1 3 4\n// # 31 \"/usr/include/sys/utsname.h\" 2 3 4\n// # 49 \"/usr/include/sys/utsname.h\" 3 4\nstruct utsname\n  {\n\n    char sysname[65];\n\n\n    char nodename[65];\n\n\n    char release[65];\n\n    char version[65];\n\n\n    char machine[65];\n\n\n\n\n    char domainname[65];\n\n\n\n\n  };\n// # 82 \"/usr/include/sys/utsname.h\" 3 4\nextern int uname (struct utsname *__name) __attribute__ ((__nothrow__));\n\n\n\n// # 434 \"zsh_system.h\" 2\n// # 510 \"zsh_system.h\"\n// # 1 \"/usr/include/sys/capability.h\" 1 3 4\n// # 24 \"/usr/include/sys/capability.h\" 3 4\n// # 1 \"/usr/include/stdint.h\" 1 3 4\n// # 28 \"/usr/include/stdint.h\" 3 4\n// # 1 \"/usr/include/bits/wordsize.h\" 1 3 4\n// # 29 \"/usr/include/stdint.h\" 2 3 4\n// # 49 \"/usr/include/stdint.h\" 3 4\ntypedef unsigned char uint8_t;\ntypedef unsigned short int uint16_t;\n\ntypedef unsigned int uint32_t;\n\n\n\ntypedef unsigned long int uint64_t;\n// # 66 \"/usr/include/stdint.h\" 3 4\ntypedef signed char int_least8_t;\ntypedef short int int_least16_t;\ntypedef int int_least32_t;\n\ntypedef long int int_least64_t;\n\n\n\n\n\n\ntypedef unsigned char uint_least8_t;\ntypedef unsigned short int uint_least16_t;\ntypedef unsigned int uint_least32_t;\n\ntypedef unsigned long int uint_least64_t;\n// # 91 \"/usr/include/stdint.h\" 3 4\ntypedef signed char int_fast8_t;\n\ntypedef long int int_fast16_t;\ntypedef long int int_fast32_t;\ntypedef long int int_fast64_t;\n// # 104 \"/usr/include/stdint.h\" 3 4\ntypedef unsigned char uint_fast8_t;\n\ntypedef unsigned long int uint_fast16_t;\ntypedef unsigned long int uint_fast32_t;\ntypedef unsigned long int uint_fast64_t;\n// # 123 \"/usr/include/stdint.h\" 3 4\ntypedef unsigned long int uintptr_t;\n// # 135 \"/usr/include/stdint.h\" 3 4\ntypedef long int intmax_t;\ntypedef unsigned long int uintmax_t;\n// # 25 \"/usr/include/sys/capability.h\" 2 3 4\n\n\n\n\n\n\n\ntypedef unsigned int __u32;\n\n// # 1 \"/usr/include/linux/capability.h\" 1 3 4\n// # 16 \"/usr/include/linux/capability.h\" 3 4\n// # 1 \"/usr/include/linux/types.h\" 1 3 4\n// # 17 \"/usr/include/linux/capability.h\" 2 3 4\n// # 31 \"/usr/include/linux/capability.h\" 3 4\ntypedef struct __user_cap_header_struct {\n __u32 version;\n int pid;\n} *cap_user_header_t;\n\ntypedef struct __user_cap_data_struct {\n        __u32 effective;\n        __u32 permitted;\n        __u32 inheritable;\n} *cap_user_data_t;\n// # 35 \"/usr/include/sys/capability.h\" 2 3 4\n// # 44 \"/usr/include/sys/capability.h\" 3 4\ntypedef struct _cap_struct *cap_t;\n\n\n\n\n\n\n\ntypedef int cap_value_t;\n\n\n\n\ntypedef enum {\n    CAP_EFFECTIVE=0,\n    CAP_PERMITTED=1,\n    CAP_INHERITABLE=2\n} cap_flag_t;\n\n\n\n\ntypedef enum {\n    CAP_CLEAR=0,\n    CAP_SET=1\n} cap_flag_value_t;\n\n\n\n\n\n\ncap_t cap_dup(cap_t);\nint cap_free(void *);\ncap_t cap_init(void);\n\n\nint cap_get_flag(cap_t, cap_value_t, cap_flag_t, cap_flag_value_t *);\nint cap_set_flag(cap_t, cap_flag_t, int, cap_value_t *, cap_flag_value_t);\nint cap_clear(cap_t);\n\n\ncap_t cap_get_fd(int);\ncap_t cap_get_file(const char *);\nint cap_set_fd(int, cap_t);\nint cap_set_file(const char *, cap_t);\n\n\ncap_t cap_get_proc(void);\nint cap_set_proc(cap_t);\n\n\nssize_t cap_size(cap_t);\nssize_t cap_copy_ext(void *, cap_t, ssize_t);\ncap_t cap_copy_int(const void *);\n\n\ncap_t cap_from_text(const char *);\nchar * cap_to_text(cap_t, ssize_t *);\n// # 511 \"zsh_system.h\" 2\n// # 718 \"zsh_system.h\"\nextern char **environ;\n// # 798 \"zsh_system.h\"\n// # 1 \"/usr/include/wchar.h\" 1 3 4\n// # 48 \"/usr/include/wchar.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 49 \"/usr/include/wchar.h\" 2 3 4\n// # 93 \"/usr/include/wchar.h\" 3 4\n\n\ntypedef __mbstate_t mbstate_t;\n\n\n\n// # 118 \"/usr/include/wchar.h\" 3 4\n\n\n\n\n\nstruct tm;\n\n\n\n\n\n\n\n\n\nextern wchar_t *wcscpy (wchar_t *__restrict __dest,\n   __const wchar_t *__restrict __src) __attribute__ ((__nothrow__));\n\nextern wchar_t *wcsncpy (wchar_t *__restrict __dest,\n    __const wchar_t *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__));\n\n\nextern wchar_t *wcscat (wchar_t *__restrict __dest,\n   __const wchar_t *__restrict __src) __attribute__ ((__nothrow__));\n\nextern wchar_t *wcsncat (wchar_t *__restrict __dest,\n    __const wchar_t *__restrict __src, size_t __n)\n     __attribute__ ((__nothrow__));\n\n\nextern int wcscmp (__const wchar_t *__s1, __const wchar_t *__s2)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\nextern int wcsncmp (__const wchar_t *__s1, __const wchar_t *__s2, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\n\n\n\nextern int wcscasecmp (__const wchar_t *__s1, __const wchar_t *__s2) __attribute__ ((__nothrow__));\n\n\nextern int wcsncasecmp (__const wchar_t *__s1, __const wchar_t *__s2,\n   size_t __n) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int wcscasecmp_l (__const wchar_t *__s1, __const wchar_t *__s2,\n    __locale_t __loc) __attribute__ ((__nothrow__));\n\nextern int wcsncasecmp_l (__const wchar_t *__s1, __const wchar_t *__s2,\n     size_t __n, __locale_t __loc) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int wcscoll (__const wchar_t *__s1, __const wchar_t *__s2) __attribute__ ((__nothrow__));\n\n\n\nextern size_t wcsxfrm (wchar_t *__restrict __s1,\n         __const wchar_t *__restrict __s2, size_t __n) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern int wcscoll_l (__const wchar_t *__s1, __const wchar_t *__s2,\n        __locale_t __loc) __attribute__ ((__nothrow__));\n\n\n\n\nextern size_t wcsxfrm_l (wchar_t *__s1, __const wchar_t *__s2,\n    size_t __n, __locale_t __loc) __attribute__ ((__nothrow__));\n\n\nextern wchar_t *wcsdup (__const wchar_t *__s) __attribute__ ((__nothrow__)) __attribute__ ((__malloc__));\n\n\n\n\nextern wchar_t *wcschr (__const wchar_t *__wcs, wchar_t __wc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\nextern wchar_t *wcsrchr (__const wchar_t *__wcs, wchar_t __wc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\n\n\n\n\nextern wchar_t *wcschrnul (__const wchar_t *__s, wchar_t __wc)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\n\n\n\n\nextern size_t wcscspn (__const wchar_t *__wcs, __const wchar_t *__reject)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\n\nextern size_t wcsspn (__const wchar_t *__wcs, __const wchar_t *__accept)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\nextern wchar_t *wcspbrk (__const wchar_t *__wcs, __const wchar_t *__accept)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\nextern wchar_t *wcsstr (__const wchar_t *__haystack, __const wchar_t *__needle)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\n\nextern wchar_t *wcstok (wchar_t *__restrict __s,\n   __const wchar_t *__restrict __delim,\n   wchar_t **__restrict __ptr) __attribute__ ((__nothrow__));\n\n\nextern size_t wcslen (__const wchar_t *__s) __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\n\n\n\nextern wchar_t *wcswcs (__const wchar_t *__haystack, __const wchar_t *__needle)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\n\n\n\nextern size_t wcsnlen (__const wchar_t *__s, size_t __maxlen)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\n\n\n\n\nextern wchar_t *wmemchr (__const wchar_t *__s, wchar_t __c, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\n\nextern int wmemcmp (__const wchar_t *__restrict __s1,\n      __const wchar_t *__restrict __s2, size_t __n)\n     __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\n\nextern wchar_t *wmemcpy (wchar_t *__restrict __s1,\n    __const wchar_t *__restrict __s2, size_t __n) __attribute__ ((__nothrow__));\n\n\n\nextern wchar_t *wmemmove (wchar_t *__s1, __const wchar_t *__s2, size_t __n)\n     __attribute__ ((__nothrow__));\n\n\nextern wchar_t *wmemset (wchar_t *__s, wchar_t __c, size_t __n) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern wchar_t *wmempcpy (wchar_t *__restrict __s1,\n     __const wchar_t *__restrict __s2, size_t __n)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern wint_t btowc (int __c) __attribute__ ((__nothrow__));\n\n\n\nextern int wctob (wint_t __c) __attribute__ ((__nothrow__));\n\n\n\nextern int mbsinit (__const mbstate_t *__ps) __attribute__ ((__nothrow__)) __attribute__ ((__pure__));\n\n\n\nextern size_t mbrtowc (wchar_t *__restrict __pwc,\n         __const char *__restrict __s, size_t __n,\n         mbstate_t *__p) __attribute__ ((__nothrow__));\n\n\nextern size_t wcrtomb (char *__restrict __s, wchar_t __wc,\n         mbstate_t *__restrict __ps) __attribute__ ((__nothrow__));\n\n\nextern size_t __mbrlen (__const char *__restrict __s, size_t __n,\n   mbstate_t *__restrict __ps) __attribute__ ((__nothrow__));\nextern size_t mbrlen (__const char *__restrict __s, size_t __n,\n        mbstate_t *__restrict __ps) __attribute__ ((__nothrow__));\n\n// # 348 \"/usr/include/wchar.h\" 3 4\n\n\n\nextern size_t mbsrtowcs (wchar_t *__restrict __dst,\n    __const char **__restrict __src, size_t __len,\n    mbstate_t *__restrict __ps) __attribute__ ((__nothrow__));\n\n\n\nextern size_t wcsrtombs (char *__restrict __dst,\n    __const wchar_t **__restrict __src, size_t __len,\n    mbstate_t *__restrict __ps) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern size_t mbsnrtowcs (wchar_t *__restrict __dst,\n     __const char **__restrict __src, size_t __nmc,\n     size_t __len, mbstate_t *__restrict __ps) __attribute__ ((__nothrow__));\n\n\n\nextern size_t wcsnrtombs (char *__restrict __dst,\n     __const wchar_t **__restrict __src,\n     size_t __nwc, size_t __len,\n     mbstate_t *__restrict __ps) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int wcwidth (wchar_t __c) __attribute__ ((__nothrow__));\n\n\n\nextern int wcswidth (__const wchar_t *__s, size_t __n) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern double wcstod (__const wchar_t *__restrict __nptr,\n        wchar_t **__restrict __endptr) __attribute__ ((__nothrow__));\n\n\n\nextern float wcstof (__const wchar_t *__restrict __nptr,\n       wchar_t **__restrict __endptr) __attribute__ ((__nothrow__));\nextern long double wcstold (__const wchar_t *__restrict __nptr,\n       wchar_t **__restrict __endptr) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern long int wcstol (__const wchar_t *__restrict __nptr,\n   wchar_t **__restrict __endptr, int __base) __attribute__ ((__nothrow__));\n\n\n\nextern unsigned long int wcstoul (__const wchar_t *__restrict __nptr,\n      wchar_t **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__));\n\n\n\n\n__extension__\nextern long long int wcstoll (__const wchar_t *__restrict __nptr,\n         wchar_t **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__));\n\n\n\n__extension__\nextern unsigned long long int wcstoull (__const wchar_t *__restrict __nptr,\n     wchar_t **__restrict __endptr,\n     int __base) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n__extension__\nextern long long int wcstoq (__const wchar_t *__restrict __nptr,\n        wchar_t **__restrict __endptr, int __base)\n     __attribute__ ((__nothrow__));\n\n\n\n__extension__\nextern unsigned long long int wcstouq (__const wchar_t *__restrict __nptr,\n           wchar_t **__restrict __endptr,\n           int __base) __attribute__ ((__nothrow__));\n// # 467 \"/usr/include/wchar.h\" 3 4\nextern long int wcstol_l (__const wchar_t *__restrict __nptr,\n     wchar_t **__restrict __endptr, int __base,\n     __locale_t __loc) __attribute__ ((__nothrow__));\n\nextern unsigned long int wcstoul_l (__const wchar_t *__restrict __nptr,\n        wchar_t **__restrict __endptr,\n        int __base, __locale_t __loc) __attribute__ ((__nothrow__));\n\n__extension__\nextern long long int wcstoll_l (__const wchar_t *__restrict __nptr,\n    wchar_t **__restrict __endptr,\n    int __base, __locale_t __loc) __attribute__ ((__nothrow__));\n\n__extension__\nextern unsigned long long int wcstoull_l (__const wchar_t *__restrict __nptr,\n       wchar_t **__restrict __endptr,\n       int __base, __locale_t __loc)\n     __attribute__ ((__nothrow__));\n\nextern double wcstod_l (__const wchar_t *__restrict __nptr,\n   wchar_t **__restrict __endptr, __locale_t __loc)\n     __attribute__ ((__nothrow__));\n\nextern float wcstof_l (__const wchar_t *__restrict __nptr,\n         wchar_t **__restrict __endptr, __locale_t __loc)\n     __attribute__ ((__nothrow__));\n\nextern long double wcstold_l (__const wchar_t *__restrict __nptr,\n         wchar_t **__restrict __endptr,\n         __locale_t __loc) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern double __wcstod_internal (__const wchar_t *__restrict __nptr,\n     wchar_t **__restrict __endptr, int __group)\n     __attribute__ ((__nothrow__));\nextern float __wcstof_internal (__const wchar_t *__restrict __nptr,\n    wchar_t **__restrict __endptr, int __group)\n     __attribute__ ((__nothrow__));\nextern long double __wcstold_internal (__const wchar_t *__restrict __nptr,\n           wchar_t **__restrict __endptr,\n           int __group) __attribute__ ((__nothrow__));\n// # 593 \"/usr/include/wchar.h\" 3 4\nextern wchar_t *wcpcpy (wchar_t *__dest, __const wchar_t *__src) __attribute__ ((__nothrow__));\n\n\n\nextern wchar_t *wcpncpy (wchar_t *__dest, __const wchar_t *__src, size_t __n)\n     __attribute__ ((__nothrow__));\n// # 607 \"/usr/include/wchar.h\" 3 4\nextern __FILE *open_wmemstream (wchar_t **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int fwide (__FILE *__fp, int __mode) __attribute__ ((__nothrow__));\n\n\n\n\n\n\nextern int fwprintf (__FILE *__restrict __stream,\n       __const wchar_t *__restrict __format, ...)\n                                                           ;\n\n\n\n\nextern int wprintf (__const wchar_t *__restrict __format, ...)\n                                                           ;\n\nextern int swprintf (wchar_t *__restrict __s, size_t __n,\n       __const wchar_t *__restrict __format, ...)\n     __attribute__ ((__nothrow__)) ;\n\n\n\n\n\nextern int vfwprintf (__FILE *__restrict __s,\n        __const wchar_t *__restrict __format,\n        __gnuc_va_list __arg)\n                                                           ;\n\n\n\n\nextern int vwprintf (__const wchar_t *__restrict __format,\n       __gnuc_va_list __arg)\n                                                           ;\n\n\nextern int vswprintf (wchar_t *__restrict __s, size_t __n,\n        __const wchar_t *__restrict __format,\n        __gnuc_va_list __arg)\n     __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\nextern int fwscanf (__FILE *__restrict __stream,\n      __const wchar_t *__restrict __format, ...)\n                                                          ;\n\n\n\n\nextern int wscanf (__const wchar_t *__restrict __format, ...)\n                                                          ;\n\nextern int swscanf (__const wchar_t *__restrict __s,\n      __const wchar_t *__restrict __format, ...)\n     __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\n\n\n\n\n\nextern int vfwscanf (__FILE *__restrict __s,\n       __const wchar_t *__restrict __format,\n       __gnuc_va_list __arg)\n                                                          ;\n\n\n\n\nextern int vwscanf (__const wchar_t *__restrict __format,\n      __gnuc_va_list __arg)\n                                                          ;\n\nextern int vswscanf (__const wchar_t *__restrict __s,\n       __const wchar_t *__restrict __format,\n       __gnuc_va_list __arg)\n     __attribute__ ((__nothrow__)) ;\n\n\n\n\n\n\n\n\n\n\nextern wint_t fgetwc (__FILE *__stream);\nextern wint_t getwc (__FILE *__stream);\n\n\n\n\n\nextern wint_t getwchar (void);\n\n\n\n\n\n\nextern wint_t fputwc (wchar_t __wc, __FILE *__stream);\nextern wint_t putwc (wchar_t __wc, __FILE *__stream);\n\n\n\n\n\nextern wint_t putwchar (wchar_t __wc);\n\n\n\n\n\n\n\nextern wchar_t *fgetws (wchar_t *__restrict __ws, int __n,\n   __FILE *__restrict __stream);\n\n\n\n\n\nextern int fputws (__const wchar_t *__restrict __ws,\n     __FILE *__restrict __stream);\n\n\n\n\n\n\nextern wint_t ungetwc (wint_t __wc, __FILE *__stream);\n\n// # 768 \"/usr/include/wchar.h\" 3 4\nextern wint_t getwc_unlocked (__FILE *__stream);\nextern wint_t getwchar_unlocked (void);\n\n\n\n\n\n\n\nextern wint_t fgetwc_unlocked (__FILE *__stream);\n\n\n\n\n\n\n\nextern wint_t fputwc_unlocked (wchar_t __wc, __FILE *__stream);\n// # 794 \"/usr/include/wchar.h\" 3 4\nextern wint_t putwc_unlocked (wchar_t __wc, __FILE *__stream);\nextern wint_t putwchar_unlocked (wchar_t __wc);\n// # 804 \"/usr/include/wchar.h\" 3 4\nextern wchar_t *fgetws_unlocked (wchar_t *__restrict __ws, int __n,\n     __FILE *__restrict __stream);\n\n\n\n\n\n\n\nextern int fputws_unlocked (__const wchar_t *__restrict __ws,\n       __FILE *__restrict __stream);\n\n\n\n\n\n\n\nextern size_t wcsftime (wchar_t *__restrict __s, size_t __maxsize,\n   __const wchar_t *__restrict __format,\n   __const struct tm *__restrict __tp) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern size_t wcsftime_l (wchar_t *__restrict __s, size_t __maxsize,\n     __const wchar_t *__restrict __format,\n     __const struct tm *__restrict __tp,\n     __locale_t __loc) __attribute__ ((__nothrow__));\n// # 858 \"/usr/include/wchar.h\" 3 4\n\n// # 799 \"zsh_system.h\" 2\n// # 1 \"/usr/include/wctype.h\" 1 3 4\n// # 35 \"/usr/include/wctype.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 36 \"/usr/include/wctype.h\" 2 3 4\n// # 45 \"/usr/include/wctype.h\" 3 4\n\n// # 63 \"/usr/include/wctype.h\" 3 4\n\n\n\ntypedef unsigned long int wctype_t;\n\n// # 85 \"/usr/include/wctype.h\" 3 4\nenum\n{\n  __ISwupper = 0,\n  __ISwlower = 1,\n  __ISwalpha = 2,\n  __ISwdigit = 3,\n  __ISwxdigit = 4,\n  __ISwspace = 5,\n  __ISwprint = 6,\n  __ISwgraph = 7,\n  __ISwblank = 8,\n  __ISwcntrl = 9,\n  __ISwpunct = 10,\n  __ISwalnum = 11,\n\n  _ISwupper = ((__ISwupper) < 8 ? (int) ((1UL << (__ISwupper)) << 24) : ((__ISwupper) < 16 ? (int) ((1UL << (__ISwupper)) << 8) : ((__ISwupper) < 24 ? (int) ((1UL << (__ISwupper)) >> 8) : (int) ((1UL << (__ISwupper)) >> 24)))),\n  _ISwlower = ((__ISwlower) < 8 ? (int) ((1UL << (__ISwlower)) << 24) : ((__ISwlower) < 16 ? (int) ((1UL << (__ISwlower)) << 8) : ((__ISwlower) < 24 ? (int) ((1UL << (__ISwlower)) >> 8) : (int) ((1UL << (__ISwlower)) >> 24)))),\n  _ISwalpha = ((__ISwalpha) < 8 ? (int) ((1UL << (__ISwalpha)) << 24) : ((__ISwalpha) < 16 ? (int) ((1UL << (__ISwalpha)) << 8) : ((__ISwalpha) < 24 ? (int) ((1UL << (__ISwalpha)) >> 8) : (int) ((1UL << (__ISwalpha)) >> 24)))),\n  _ISwdigit = ((__ISwdigit) < 8 ? (int) ((1UL << (__ISwdigit)) << 24) : ((__ISwdigit) < 16 ? (int) ((1UL << (__ISwdigit)) << 8) : ((__ISwdigit) < 24 ? (int) ((1UL << (__ISwdigit)) >> 8) : (int) ((1UL << (__ISwdigit)) >> 24)))),\n  _ISwxdigit = ((__ISwxdigit) < 8 ? (int) ((1UL << (__ISwxdigit)) << 24) : ((__ISwxdigit) < 16 ? (int) ((1UL << (__ISwxdigit)) << 8) : ((__ISwxdigit) < 24 ? (int) ((1UL << (__ISwxdigit)) >> 8) : (int) ((1UL << (__ISwxdigit)) >> 24)))),\n  _ISwspace = ((__ISwspace) < 8 ? (int) ((1UL << (__ISwspace)) << 24) : ((__ISwspace) < 16 ? (int) ((1UL << (__ISwspace)) << 8) : ((__ISwspace) < 24 ? (int) ((1UL << (__ISwspace)) >> 8) : (int) ((1UL << (__ISwspace)) >> 24)))),\n  _ISwprint = ((__ISwprint) < 8 ? (int) ((1UL << (__ISwprint)) << 24) : ((__ISwprint) < 16 ? (int) ((1UL << (__ISwprint)) << 8) : ((__ISwprint) < 24 ? (int) ((1UL << (__ISwprint)) >> 8) : (int) ((1UL << (__ISwprint)) >> 24)))),\n  _ISwgraph = ((__ISwgraph) < 8 ? (int) ((1UL << (__ISwgraph)) << 24) : ((__ISwgraph) < 16 ? (int) ((1UL << (__ISwgraph)) << 8) : ((__ISwgraph) < 24 ? (int) ((1UL << (__ISwgraph)) >> 8) : (int) ((1UL << (__ISwgraph)) >> 24)))),\n  _ISwblank = ((__ISwblank) < 8 ? (int) ((1UL << (__ISwblank)) << 24) : ((__ISwblank) < 16 ? (int) ((1UL << (__ISwblank)) << 8) : ((__ISwblank) < 24 ? (int) ((1UL << (__ISwblank)) >> 8) : (int) ((1UL << (__ISwblank)) >> 24)))),\n  _ISwcntrl = ((__ISwcntrl) < 8 ? (int) ((1UL << (__ISwcntrl)) << 24) : ((__ISwcntrl) < 16 ? (int) ((1UL << (__ISwcntrl)) << 8) : ((__ISwcntrl) < 24 ? (int) ((1UL << (__ISwcntrl)) >> 8) : (int) ((1UL << (__ISwcntrl)) >> 24)))),\n  _ISwpunct = ((__ISwpunct) < 8 ? (int) ((1UL << (__ISwpunct)) << 24) : ((__ISwpunct) < 16 ? (int) ((1UL << (__ISwpunct)) << 8) : ((__ISwpunct) < 24 ? (int) ((1UL << (__ISwpunct)) >> 8) : (int) ((1UL << (__ISwpunct)) >> 24)))),\n  _ISwalnum = ((__ISwalnum) < 8 ? (int) ((1UL << (__ISwalnum)) << 24) : ((__ISwalnum) < 16 ? (int) ((1UL << (__ISwalnum)) << 8) : ((__ISwalnum) < 24 ? (int) ((1UL << (__ISwalnum)) >> 8) : (int) ((1UL << (__ISwalnum)) >> 24))))\n};\n\n\n\n\n\n\n\n\n\n\n\n\nextern int iswalnum (wint_t __wc) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int iswalpha (wint_t __wc) __attribute__ ((__nothrow__));\n\n\nextern int iswcntrl (wint_t __wc) __attribute__ ((__nothrow__));\n\n\n\nextern int iswdigit (wint_t __wc) __attribute__ ((__nothrow__));\n\n\n\nextern int iswgraph (wint_t __wc) __attribute__ ((__nothrow__));\n\n\n\n\nextern int iswlower (wint_t __wc) __attribute__ ((__nothrow__));\n\n\nextern int iswprint (wint_t __wc) __attribute__ ((__nothrow__));\n\n\n\n\nextern int iswpunct (wint_t __wc) __attribute__ ((__nothrow__));\n\n\n\n\nextern int iswspace (wint_t __wc) __attribute__ ((__nothrow__));\n\n\n\n\nextern int iswupper (wint_t __wc) __attribute__ ((__nothrow__));\n\n\n\n\nextern int iswxdigit (wint_t __wc) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int iswblank (wint_t __wc) __attribute__ ((__nothrow__));\n// # 185 \"/usr/include/wctype.h\" 3 4\nextern wctype_t wctype (__const char *__property) __attribute__ ((__nothrow__));\n\n\n\nextern int iswctype (wint_t __wc, wctype_t __desc) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\n\n\ntypedef __const __int32_t *wctrans_t;\n\n\n\n\n\n\n\nextern wint_t towlower (wint_t __wc) __attribute__ ((__nothrow__));\n\n\nextern wint_t towupper (wint_t __wc) __attribute__ ((__nothrow__));\n\n\n\n// # 227 \"/usr/include/wctype.h\" 3 4\n\n\n\n\n\nextern wctrans_t wctrans (__const char *__property) __attribute__ ((__nothrow__));\n\n\nextern wint_t towctrans (wint_t __wc, wctrans_t __desc) __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\n\nextern int iswalnum_l (wint_t __wc, __locale_t __locale) __attribute__ ((__nothrow__));\n\n\n\n\n\nextern int iswalpha_l (wint_t __wc, __locale_t __locale) __attribute__ ((__nothrow__));\n\n\nextern int iswcntrl_l (wint_t __wc, __locale_t __locale) __attribute__ ((__nothrow__));\n\n\n\nextern int iswdigit_l (wint_t __wc, __locale_t __locale) __attribute__ ((__nothrow__));\n\n\n\nextern int iswgraph_l (wint_t __wc, __locale_t __locale) __attribute__ ((__nothrow__));\n\n\n\n\nextern int iswlower_l (wint_t __wc, __locale_t __locale) __attribute__ ((__nothrow__));\n\n\nextern int iswprint_l (wint_t __wc, __locale_t __locale) __attribute__ ((__nothrow__));\n\n\n\n\nextern int iswpunct_l (wint_t __wc, __locale_t __locale) __attribute__ ((__nothrow__));\n\n\n\n\nextern int iswspace_l (wint_t __wc, __locale_t __locale) __attribute__ ((__nothrow__));\n\n\n\n\nextern int iswupper_l (wint_t __wc, __locale_t __locale) __attribute__ ((__nothrow__));\n\n\n\n\nextern int iswxdigit_l (wint_t __wc, __locale_t __locale) __attribute__ ((__nothrow__));\n\n\n\n\nextern int iswblank_l (wint_t __wc, __locale_t __locale) __attribute__ ((__nothrow__));\n\n\n\nextern wctype_t wctype_l (__const char *__property, __locale_t __locale)\n     __attribute__ ((__nothrow__));\n\n\n\nextern int iswctype_l (wint_t __wc, wctype_t __desc, __locale_t __locale)\n     __attribute__ ((__nothrow__));\n\n\n\n\n\n\n\nextern wint_t towlower_l (wint_t __wc, __locale_t __locale) __attribute__ ((__nothrow__));\n\n\nextern wint_t towupper_l (wint_t __wc, __locale_t __locale) __attribute__ ((__nothrow__));\n\n\n\nextern wctrans_t wctrans_l (__const char *__property, __locale_t __locale)\n     __attribute__ ((__nothrow__));\n\n\nextern wint_t towctrans_l (wint_t __wc, wctrans_t __desc,\n      __locale_t __locale) __attribute__ ((__nothrow__));\n\n\n\n\n// # 800 \"zsh_system.h\" 2\n\n\n// # 1 \"/usr/include/langinfo.h\" 1 3 4\n// # 24 \"/usr/include/langinfo.h\" 3 4\n// # 1 \"/usr/include/nl_types.h\" 1 3 4\n// # 31 \"/usr/include/nl_types.h\" 3 4\n\n\n\ntypedef void *nl_catd;\n\n\ntypedef int nl_item;\n\n\n\n\n\nextern nl_catd catopen (__const char *__cat_name, int __flag) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern char *catgets (nl_catd __catalog, int __set, int __number,\n        __const char *__string) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\nextern int catclose (nl_catd __catalog) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n// # 25 \"/usr/include/langinfo.h\" 2 3 4\n\n// # 1 \"/usr/include/bits/locale.h\" 1 3 4\n// # 27 \"/usr/include/langinfo.h\" 2 3 4\n\n\n\n// # 42 \"/usr/include/langinfo.h\" 3 4\nenum\n{\n\n\n\n  ABDAY_1 = (((__LC_TIME) << 16) | (0)),\n\n  ABDAY_2,\n\n  ABDAY_3,\n\n  ABDAY_4,\n\n  ABDAY_5,\n\n  ABDAY_6,\n\n  ABDAY_7,\n\n\n\n  DAY_1,\n\n  DAY_2,\n\n  DAY_3,\n\n  DAY_4,\n\n  DAY_5,\n\n  DAY_6,\n\n  DAY_7,\n\n\n\n  ABMON_1,\n\n  ABMON_2,\n\n  ABMON_3,\n\n  ABMON_4,\n\n  ABMON_5,\n\n  ABMON_6,\n\n  ABMON_7,\n\n  ABMON_8,\n\n  ABMON_9,\n\n  ABMON_10,\n\n  ABMON_11,\n\n  ABMON_12,\n\n\n\n  MON_1,\n\n  MON_2,\n\n  MON_3,\n\n  MON_4,\n\n  MON_5,\n\n  MON_6,\n\n  MON_7,\n\n  MON_8,\n\n  MON_9,\n\n  MON_10,\n\n  MON_11,\n\n  MON_12,\n\n\n  AM_STR,\n\n  PM_STR,\n\n\n  D_T_FMT,\n\n  D_FMT,\n\n  T_FMT,\n\n  T_FMT_AMPM,\n\n\n  ERA,\n\n  __ERA_YEAR,\n\n\n\n  ERA_D_FMT,\n\n  ALT_DIGITS,\n\n  ERA_D_T_FMT,\n\n  ERA_T_FMT,\n\n\n  _NL_TIME_ERA_NUM_ENTRIES,\n  _NL_TIME_ERA_ENTRIES,\n\n  _NL_WABDAY_1,\n  _NL_WABDAY_2,\n  _NL_WABDAY_3,\n  _NL_WABDAY_4,\n  _NL_WABDAY_5,\n  _NL_WABDAY_6,\n  _NL_WABDAY_7,\n\n\n  _NL_WDAY_1,\n  _NL_WDAY_2,\n  _NL_WDAY_3,\n  _NL_WDAY_4,\n  _NL_WDAY_5,\n  _NL_WDAY_6,\n  _NL_WDAY_7,\n\n\n  _NL_WABMON_1,\n  _NL_WABMON_2,\n  _NL_WABMON_3,\n  _NL_WABMON_4,\n  _NL_WABMON_5,\n  _NL_WABMON_6,\n  _NL_WABMON_7,\n  _NL_WABMON_8,\n  _NL_WABMON_9,\n  _NL_WABMON_10,\n  _NL_WABMON_11,\n  _NL_WABMON_12,\n\n\n  _NL_WMON_1,\n  _NL_WMON_2,\n  _NL_WMON_3,\n  _NL_WMON_4,\n  _NL_WMON_5,\n  _NL_WMON_6,\n  _NL_WMON_7,\n  _NL_WMON_8,\n  _NL_WMON_9,\n  _NL_WMON_10,\n  _NL_WMON_11,\n  _NL_WMON_12,\n\n  _NL_WAM_STR,\n  _NL_WPM_STR,\n\n  _NL_WD_T_FMT,\n  _NL_WD_FMT,\n  _NL_WT_FMT,\n  _NL_WT_FMT_AMPM,\n\n  _NL_WERA_YEAR,\n  _NL_WERA_D_FMT,\n  _NL_WALT_DIGITS,\n  _NL_WERA_D_T_FMT,\n  _NL_WERA_T_FMT,\n\n  _NL_TIME_WEEK_NDAYS,\n  _NL_TIME_WEEK_1STDAY,\n  _NL_TIME_WEEK_1STWEEK,\n  _NL_TIME_FIRST_WEEKDAY,\n  _NL_TIME_FIRST_WORKDAY,\n  _NL_TIME_CAL_DIRECTION,\n  _NL_TIME_TIMEZONE,\n\n  _DATE_FMT,\n\n  _NL_W_DATE_FMT,\n\n  _NL_TIME_CODESET,\n\n  _NL_NUM_LC_TIME,\n\n\n\n\n  _NL_COLLATE_NRULES = (((__LC_COLLATE) << 16) | (0)),\n  _NL_COLLATE_RULESETS,\n  _NL_COLLATE_TABLEMB,\n  _NL_COLLATE_WEIGHTMB,\n  _NL_COLLATE_EXTRAMB,\n  _NL_COLLATE_INDIRECTMB,\n  _NL_COLLATE_GAP1,\n  _NL_COLLATE_GAP2,\n  _NL_COLLATE_GAP3,\n  _NL_COLLATE_TABLEWC,\n  _NL_COLLATE_WEIGHTWC,\n  _NL_COLLATE_EXTRAWC,\n  _NL_COLLATE_INDIRECTWC,\n  _NL_COLLATE_SYMB_HASH_SIZEMB,\n  _NL_COLLATE_SYMB_TABLEMB,\n  _NL_COLLATE_SYMB_EXTRAMB,\n  _NL_COLLATE_COLLSEQMB,\n  _NL_COLLATE_COLLSEQWC,\n  _NL_COLLATE_CODESET,\n  _NL_NUM_LC_COLLATE,\n\n\n\n\n  _NL_CTYPE_CLASS = (((__LC_CTYPE) << 16) | (0)),\n  _NL_CTYPE_TOUPPER,\n  _NL_CTYPE_GAP1,\n  _NL_CTYPE_TOLOWER,\n  _NL_CTYPE_GAP2,\n  _NL_CTYPE_CLASS32,\n  _NL_CTYPE_GAP3,\n  _NL_CTYPE_GAP4,\n  _NL_CTYPE_GAP5,\n  _NL_CTYPE_GAP6,\n  _NL_CTYPE_CLASS_NAMES,\n  _NL_CTYPE_MAP_NAMES,\n  _NL_CTYPE_WIDTH,\n  _NL_CTYPE_MB_CUR_MAX,\n  _NL_CTYPE_CODESET_NAME,\n  CODESET = _NL_CTYPE_CODESET_NAME,\n\n  _NL_CTYPE_TOUPPER32,\n  _NL_CTYPE_TOLOWER32,\n  _NL_CTYPE_CLASS_OFFSET,\n  _NL_CTYPE_MAP_OFFSET,\n  _NL_CTYPE_INDIGITS_MB_LEN,\n  _NL_CTYPE_INDIGITS0_MB,\n  _NL_CTYPE_INDIGITS1_MB,\n  _NL_CTYPE_INDIGITS2_MB,\n  _NL_CTYPE_INDIGITS3_MB,\n  _NL_CTYPE_INDIGITS4_MB,\n  _NL_CTYPE_INDIGITS5_MB,\n  _NL_CTYPE_INDIGITS6_MB,\n  _NL_CTYPE_INDIGITS7_MB,\n  _NL_CTYPE_INDIGITS8_MB,\n  _NL_CTYPE_INDIGITS9_MB,\n  _NL_CTYPE_INDIGITS_WC_LEN,\n  _NL_CTYPE_INDIGITS0_WC,\n  _NL_CTYPE_INDIGITS1_WC,\n  _NL_CTYPE_INDIGITS2_WC,\n  _NL_CTYPE_INDIGITS3_WC,\n  _NL_CTYPE_INDIGITS4_WC,\n  _NL_CTYPE_INDIGITS5_WC,\n  _NL_CTYPE_INDIGITS6_WC,\n  _NL_CTYPE_INDIGITS7_WC,\n  _NL_CTYPE_INDIGITS8_WC,\n  _NL_CTYPE_INDIGITS9_WC,\n  _NL_CTYPE_OUTDIGIT0_MB,\n  _NL_CTYPE_OUTDIGIT1_MB,\n  _NL_CTYPE_OUTDIGIT2_MB,\n  _NL_CTYPE_OUTDIGIT3_MB,\n  _NL_CTYPE_OUTDIGIT4_MB,\n  _NL_CTYPE_OUTDIGIT5_MB,\n  _NL_CTYPE_OUTDIGIT6_MB,\n  _NL_CTYPE_OUTDIGIT7_MB,\n  _NL_CTYPE_OUTDIGIT8_MB,\n  _NL_CTYPE_OUTDIGIT9_MB,\n  _NL_CTYPE_OUTDIGIT0_WC,\n  _NL_CTYPE_OUTDIGIT1_WC,\n  _NL_CTYPE_OUTDIGIT2_WC,\n  _NL_CTYPE_OUTDIGIT3_WC,\n  _NL_CTYPE_OUTDIGIT4_WC,\n  _NL_CTYPE_OUTDIGIT5_WC,\n  _NL_CTYPE_OUTDIGIT6_WC,\n  _NL_CTYPE_OUTDIGIT7_WC,\n  _NL_CTYPE_OUTDIGIT8_WC,\n  _NL_CTYPE_OUTDIGIT9_WC,\n  _NL_CTYPE_TRANSLIT_TAB_SIZE,\n  _NL_CTYPE_TRANSLIT_FROM_IDX,\n  _NL_CTYPE_TRANSLIT_FROM_TBL,\n  _NL_CTYPE_TRANSLIT_TO_IDX,\n  _NL_CTYPE_TRANSLIT_TO_TBL,\n  _NL_CTYPE_TRANSLIT_DEFAULT_MISSING_LEN,\n  _NL_CTYPE_TRANSLIT_DEFAULT_MISSING,\n  _NL_CTYPE_TRANSLIT_IGNORE_LEN,\n  _NL_CTYPE_TRANSLIT_IGNORE,\n  _NL_CTYPE_MAP_TO_NONASCII,\n  _NL_CTYPE_EXTRA_MAP_1,\n  _NL_CTYPE_EXTRA_MAP_2,\n  _NL_CTYPE_EXTRA_MAP_3,\n  _NL_CTYPE_EXTRA_MAP_4,\n  _NL_CTYPE_EXTRA_MAP_5,\n  _NL_CTYPE_EXTRA_MAP_6,\n  _NL_CTYPE_EXTRA_MAP_7,\n  _NL_CTYPE_EXTRA_MAP_8,\n  _NL_CTYPE_EXTRA_MAP_9,\n  _NL_CTYPE_EXTRA_MAP_10,\n  _NL_CTYPE_EXTRA_MAP_11,\n  _NL_CTYPE_EXTRA_MAP_12,\n  _NL_CTYPE_EXTRA_MAP_13,\n  _NL_CTYPE_EXTRA_MAP_14,\n  _NL_NUM_LC_CTYPE,\n\n\n\n\n  __INT_CURR_SYMBOL = (((__LC_MONETARY) << 16) | (0)),\n\n\n\n  __CURRENCY_SYMBOL,\n\n\n\n  __MON_DECIMAL_POINT,\n\n\n\n  __MON_THOUSANDS_SEP,\n\n\n\n  __MON_GROUPING,\n\n\n\n  __POSITIVE_SIGN,\n\n\n\n  __NEGATIVE_SIGN,\n\n\n\n  __INT_FRAC_DIGITS,\n\n\n\n  __FRAC_DIGITS,\n\n\n\n  __P_CS_PRECEDES,\n\n\n\n  __P_SEP_BY_SPACE,\n\n\n\n  __N_CS_PRECEDES,\n\n\n\n  __N_SEP_BY_SPACE,\n\n\n\n  __P_SIGN_POSN,\n\n\n\n  __N_SIGN_POSN,\n\n\n\n  _NL_MONETARY_CRNCYSTR,\n\n  __INT_P_CS_PRECEDES,\n\n\n\n  __INT_P_SEP_BY_SPACE,\n\n\n\n  __INT_N_CS_PRECEDES,\n\n\n\n  __INT_N_SEP_BY_SPACE,\n\n\n\n  __INT_P_SIGN_POSN,\n\n\n\n  __INT_N_SIGN_POSN,\n\n\n\n  _NL_MONETARY_DUO_INT_CURR_SYMBOL,\n  _NL_MONETARY_DUO_CURRENCY_SYMBOL,\n  _NL_MONETARY_DUO_INT_FRAC_DIGITS,\n  _NL_MONETARY_DUO_FRAC_DIGITS,\n  _NL_MONETARY_DUO_P_CS_PRECEDES,\n  _NL_MONETARY_DUO_P_SEP_BY_SPACE,\n  _NL_MONETARY_DUO_N_CS_PRECEDES,\n  _NL_MONETARY_DUO_N_SEP_BY_SPACE,\n  _NL_MONETARY_DUO_INT_P_CS_PRECEDES,\n  _NL_MONETARY_DUO_INT_P_SEP_BY_SPACE,\n  _NL_MONETARY_DUO_INT_N_CS_PRECEDES,\n  _NL_MONETARY_DUO_INT_N_SEP_BY_SPACE,\n  _NL_MONETARY_DUO_P_SIGN_POSN,\n  _NL_MONETARY_DUO_N_SIGN_POSN,\n  _NL_MONETARY_DUO_INT_P_SIGN_POSN,\n  _NL_MONETARY_DUO_INT_N_SIGN_POSN,\n  _NL_MONETARY_UNO_VALID_FROM,\n  _NL_MONETARY_UNO_VALID_TO,\n  _NL_MONETARY_DUO_VALID_FROM,\n  _NL_MONETARY_DUO_VALID_TO,\n  _NL_MONETARY_CONVERSION_RATE,\n  _NL_MONETARY_DECIMAL_POINT_WC,\n  _NL_MONETARY_THOUSANDS_SEP_WC,\n  _NL_MONETARY_CODESET,\n  _NL_NUM_LC_MONETARY,\n\n\n\n  __DECIMAL_POINT = (((__LC_NUMERIC) << 16) | (0)),\n\n\n\n  RADIXCHAR = __DECIMAL_POINT,\n\n  __THOUSANDS_SEP,\n\n\n\n  THOUSEP = __THOUSANDS_SEP,\n\n  __GROUPING,\n\n\n\n  _NL_NUMERIC_DECIMAL_POINT_WC,\n  _NL_NUMERIC_THOUSANDS_SEP_WC,\n  _NL_NUMERIC_CODESET,\n  _NL_NUM_LC_NUMERIC,\n\n  __YESEXPR = (((__LC_MESSAGES) << 16) | (0)),\n\n  __NOEXPR,\n\n  __YESSTR,\n\n\n\n  __NOSTR,\n\n\n\n  _NL_MESSAGES_CODESET,\n  _NL_NUM_LC_MESSAGES,\n\n  _NL_PAPER_HEIGHT = (((__LC_PAPER) << 16) | (0)),\n  _NL_PAPER_WIDTH,\n  _NL_PAPER_CODESET,\n  _NL_NUM_LC_PAPER,\n\n  _NL_NAME_NAME_FMT = (((__LC_NAME) << 16) | (0)),\n  _NL_NAME_NAME_GEN,\n  _NL_NAME_NAME_MR,\n  _NL_NAME_NAME_MRS,\n  _NL_NAME_NAME_MISS,\n  _NL_NAME_NAME_MS,\n  _NL_NAME_CODESET,\n  _NL_NUM_LC_NAME,\n\n  _NL_ADDRESS_POSTAL_FMT = (((__LC_ADDRESS) << 16) | (0)),\n  _NL_ADDRESS_COUNTRY_NAME,\n  _NL_ADDRESS_COUNTRY_POST,\n  _NL_ADDRESS_COUNTRY_AB2,\n  _NL_ADDRESS_COUNTRY_AB3,\n  _NL_ADDRESS_COUNTRY_CAR,\n  _NL_ADDRESS_COUNTRY_NUM,\n  _NL_ADDRESS_COUNTRY_ISBN,\n  _NL_ADDRESS_LANG_NAME,\n  _NL_ADDRESS_LANG_AB,\n  _NL_ADDRESS_LANG_TERM,\n  _NL_ADDRESS_LANG_LIB,\n  _NL_ADDRESS_CODESET,\n  _NL_NUM_LC_ADDRESS,\n\n  _NL_TELEPHONE_TEL_INT_FMT = (((__LC_TELEPHONE) << 16) | (0)),\n  _NL_TELEPHONE_TEL_DOM_FMT,\n  _NL_TELEPHONE_INT_SELECT,\n  _NL_TELEPHONE_INT_PREFIX,\n  _NL_TELEPHONE_CODESET,\n  _NL_NUM_LC_TELEPHONE,\n\n  _NL_MEASUREMENT_MEASUREMENT = (((__LC_MEASUREMENT) << 16) | (0)),\n  _NL_MEASUREMENT_CODESET,\n  _NL_NUM_LC_MEASUREMENT,\n\n  _NL_IDENTIFICATION_TITLE = (((__LC_IDENTIFICATION) << 16) | (0)),\n  _NL_IDENTIFICATION_SOURCE,\n  _NL_IDENTIFICATION_ADDRESS,\n  _NL_IDENTIFICATION_CONTACT,\n  _NL_IDENTIFICATION_EMAIL,\n  _NL_IDENTIFICATION_TEL,\n  _NL_IDENTIFICATION_FAX,\n  _NL_IDENTIFICATION_LANGUAGE,\n  _NL_IDENTIFICATION_TERRITORY,\n  _NL_IDENTIFICATION_AUDIENCE,\n  _NL_IDENTIFICATION_APPLICATION,\n  _NL_IDENTIFICATION_ABBREVIATION,\n  _NL_IDENTIFICATION_REVISION,\n  _NL_IDENTIFICATION_DATE,\n  _NL_IDENTIFICATION_CATEGORY,\n  _NL_IDENTIFICATION_CODESET,\n  _NL_NUM_LC_IDENTIFICATION,\n\n\n  _NL_NUM\n};\n// # 582 \"/usr/include/langinfo.h\" 3 4\nextern char *nl_langinfo (nl_item __item) __attribute__ ((__nothrow__));\n// # 593 \"/usr/include/langinfo.h\" 3 4\nextern char *nl_langinfo_l (nl_item __item, __locale_t l);\n\n\n\n// # 803 \"zsh_system.h\" 2\n\n// # 1 \"/usr/include/iconv.h\" 1 3 4\n// # 24 \"/usr/include/iconv.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 25 \"/usr/include/iconv.h\" 2 3 4\n\n\n\n\n\ntypedef void *iconv_t;\n\n\n\n\n\n\n\nextern iconv_t iconv_open (__const char *__tocode, __const char *__fromcode);\n\n\n\n\nextern size_t iconv (iconv_t __cd, char **__restrict __inbuf,\n       size_t *__restrict __inbytesleft,\n       char **__restrict __outbuf,\n       size_t *__restrict __outbytesleft);\n\n\n\n\n\nextern int iconv_close (iconv_t __cd);\n\n\n// # 805 \"zsh_system.h\" 2\n// # 865 \"zsh_system.h\"\n// # 1 \"/usr/include/termio.h\" 1 3 4\n// # 866 \"zsh_system.h\" 2\n\n\n// # 1 \"zshcurses.h\" 1\n// # 1 \"/usr/include/ncursesw/ncurses.h\" 1 3 4\n// # 66 \"/usr/include/ncursesw/ncurses.h\" 3 4\n// # 1 \"/usr/include/ncursesw/ncurses_dll.h\" 1 3 4\n// # 67 \"/usr/include/ncursesw/ncurses.h\" 2 3 4\n// # 122 \"/usr/include/ncursesw/ncurses.h\" 3 4\ntypedef unsigned long chtype;\ntypedef unsigned long mmask_t;\n\n\n\n// # 1 \"/usr/include/ncursesw/unctrl.h\" 1 3 4\n// # 54 \"/usr/include/ncursesw/unctrl.h\" 3 4\n// # 1 \"/usr/include/ncursesw/curses.h\" 1 3 4\n// # 55 \"/usr/include/ncursesw/unctrl.h\" 2 3 4\n\n\n char * unctrl (chtype);\n// # 128 \"/usr/include/ncursesw/ncurses.h\" 2 3 4\n\n\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 131 \"/usr/include/ncursesw/ncurses.h\" 2 3 4\n// # 151 \"/usr/include/ncursesw/ncurses.h\" 3 4\ntypedef unsigned char NCURSES_BOOL;\n// # 161 \"/usr/include/ncursesw/ncurses.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stdbool.h\" 1 3 4\n// # 162 \"/usr/include/ncursesw/ncurses.h\" 2 3 4\n// # 202 \"/usr/include/ncursesw/ncurses.h\" 3 4\nextern int COLORS;\nextern int COLOR_PAIRS;\n// # 220 \"/usr/include/ncursesw/ncurses.h\" 3 4\nextern chtype acs_map[];\n// # 310 \"/usr/include/ncursesw/ncurses.h\" 3 4\ntypedef struct screen SCREEN;\ntypedef struct _win_st WINDOW;\n\ntypedef chtype attr_t;\n// # 337 \"/usr/include/ncursesw/ncurses.h\" 3 4\ntypedef struct\n{\n    attr_t attr;\n    wchar_t chars[5];\n\n\n\n}\ncchar_t;\n\n\n\nstruct ldat;\n\nstruct _win_st\n{\n short _cury, _curx;\n\n\n short _maxy, _maxx;\n short _begy, _begx;\n\n short _flags;\n\n\n attr_t _attrs;\n chtype _bkgd;\n\n\n _Bool _notimeout;\n _Bool _clear;\n _Bool _leaveok;\n _Bool _scroll;\n _Bool _idlok;\n _Bool _idcok;\n _Bool _immed;\n _Bool _sync;\n _Bool _use_keypad;\n int _delay;\n\n struct ldat *_line;\n\n\n short _regtop;\n short _regbottom;\n\n\n int _parx;\n int _pary;\n WINDOW *_parent;\n\n\n struct pdat\n {\n     short _pad_y, _pad_x;\n     short _pad_top, _pad_left;\n     short _pad_bottom, _pad_right;\n } _pad;\n\n short _yoffset;\n\n\n cchar_t _bkgrnd;\n\n\n\n\n};\n\nextern WINDOW * stdscr;\nextern WINDOW * curscr;\nextern WINDOW * newscr;\n\nextern int LINES;\nextern int COLS;\nextern int TABSIZE;\n\n\n\n\nextern int ESCDELAY;\n\nextern char ttytype[];\n\n\n\n\n\nextern _Bool is_term_resized (int, int);\nextern char * keybound (int, int);\nextern const char * curses_version (void);\nextern int assume_default_colors (int, int);\nextern int define_key (const char *, int);\nextern int key_defined (const char *);\nextern int keyok (int, _Bool);\nextern int resize_term (int, int);\nextern int resizeterm (int, int);\nextern int use_default_colors (void);\nextern int use_extended_names (_Bool);\nextern int use_legacy_coding (int);\nextern int wresize (WINDOW *, int, int);\nextern void nofilter(void);\n// # 537 \"/usr/include/ncursesw/ncurses.h\" 3 4\nextern int addch (const chtype);\nextern int addchnstr (const chtype *, int);\nextern int addchstr (const chtype *);\nextern int addnstr (const char *, int);\nextern int addstr (const char *);\nextern int attroff (int);\nextern int attron (int);\nextern int attrset (int);\nextern int attr_get (attr_t *, short *, void *);\nextern int attr_off (attr_t, void *);\nextern int attr_on (attr_t, void *);\nextern int attr_set (attr_t, short, void *);\nextern int baudrate (void);\nextern int beep (void);\nextern int bkgd (chtype);\nextern void bkgdset (chtype);\nextern int border (chtype,chtype,chtype,chtype,chtype,chtype,chtype,chtype);\nextern int box (WINDOW *, chtype, chtype);\nextern _Bool can_change_color (void);\nextern int cbreak (void);\nextern int chgat (int, attr_t, short, const void *);\nextern int clear (void);\nextern int clearok (WINDOW *,_Bool);\nextern int clrtobot (void);\nextern int clrtoeol (void);\nextern int color_content (short,short*,short*,short*);\nextern int color_set (short,void*);\nextern int COLOR_PAIR (int);\nextern int copywin (const WINDOW*,WINDOW*,int,int,int,int,int,int,int);\nextern int curs_set (int);\nextern int def_prog_mode (void);\nextern int def_shell_mode (void);\nextern int delay_output (int);\nextern int delch (void);\nextern void delscreen (SCREEN *);\nextern int delwin (WINDOW *);\nextern int deleteln (void);\nextern WINDOW * derwin (WINDOW *,int,int,int,int);\nextern int doupdate (void);\nextern WINDOW * dupwin (WINDOW *);\nextern int echo (void);\nextern int echochar (const chtype);\nextern int erase (void);\nextern int endwin (void);\nextern char erasechar (void);\nextern void filter (void);\nextern int flash (void);\nextern int flushinp (void);\nextern chtype getbkgd (WINDOW *);\nextern int getch (void);\nextern int getnstr (char *, int);\nextern int getstr (char *);\nextern WINDOW * getwin (FILE *);\nextern int halfdelay (int);\nextern _Bool has_colors (void);\nextern _Bool has_ic (void);\nextern _Bool has_il (void);\nextern int hline (chtype, int);\nextern void idcok (WINDOW *, _Bool);\nextern int idlok (WINDOW *, _Bool);\nextern void immedok (WINDOW *, _Bool);\nextern chtype inch (void);\nextern int inchnstr (chtype *, int);\nextern int inchstr (chtype *);\nextern WINDOW * initscr (void);\nextern int init_color (short,short,short,short);\nextern int init_pair (short,short,short);\nextern int innstr (char *, int);\nextern int insch (chtype);\nextern int insdelln (int);\nextern int insertln (void);\nextern int insnstr (const char *, int);\nextern int insstr (const char *);\nextern int instr (char *);\nextern int intrflush (WINDOW *,_Bool);\nextern _Bool isendwin (void);\nextern _Bool is_linetouched (WINDOW *,int);\nextern _Bool is_wintouched (WINDOW *);\nextern char * keyname (int);\nextern int keypad (WINDOW *,_Bool);\nextern char killchar (void);\nextern int leaveok (WINDOW *,_Bool);\nextern char * longname (void);\nextern int meta (WINDOW *,_Bool);\nextern int move (int, int);\nextern int mvaddch (int, int, const chtype);\nextern int mvaddchnstr (int, int, const chtype *, int);\nextern int mvaddchstr (int, int, const chtype *);\nextern int mvaddnstr (int, int, const char *, int);\nextern int mvaddstr (int, int, const char *);\nextern int mvchgat (int, int, int, attr_t, short, const void *);\nextern int mvcur (int,int,int,int);\nextern int mvdelch (int, int);\nextern int mvderwin (WINDOW *, int, int);\nextern int mvgetch (int, int);\nextern int mvgetnstr (int, int, char *, int);\nextern int mvgetstr (int, int, char *);\nextern int mvhline (int, int, chtype, int);\nextern chtype mvinch (int, int);\nextern int mvinchnstr (int, int, chtype *, int);\nextern int mvinchstr (int, int, chtype *);\nextern int mvinnstr (int, int, char *, int);\nextern int mvinsch (int, int, chtype);\nextern int mvinsnstr (int, int, const char *, int);\nextern int mvinsstr (int, int, const char *);\nextern int mvinstr (int, int, char *);\nextern int mvprintw (int,int, const char *,...)\n  ;\nextern int mvscanw (int,int, char *,...)\n  ;\nextern int mvvline (int, int, chtype, int);\nextern int mvwaddch (WINDOW *, int, int, const chtype);\nextern int mvwaddchnstr (WINDOW *, int, int, const chtype *, int);\nextern int mvwaddchstr (WINDOW *, int, int, const chtype *);\nextern int mvwaddnstr (WINDOW *, int, int, const char *, int);\nextern int mvwaddstr (WINDOW *, int, int, const char *);\nextern int mvwchgat (WINDOW *, int, int, int, attr_t, short, const void *);\nextern int mvwdelch (WINDOW *, int, int);\nextern int mvwgetch (WINDOW *, int, int);\nextern int mvwgetnstr (WINDOW *, int, int, char *, int);\nextern int mvwgetstr (WINDOW *, int, int, char *);\nextern int mvwhline (WINDOW *, int, int, chtype, int);\nextern int mvwin (WINDOW *,int,int);\nextern chtype mvwinch (WINDOW *, int, int);\nextern int mvwinchnstr (WINDOW *, int, int, chtype *, int);\nextern int mvwinchstr (WINDOW *, int, int, chtype *);\nextern int mvwinnstr (WINDOW *, int, int, char *, int);\nextern int mvwinsch (WINDOW *, int, int, chtype);\nextern int mvwinsnstr (WINDOW *, int, int, const char *, int);\nextern int mvwinsstr (WINDOW *, int, int, const char *);\nextern int mvwinstr (WINDOW *, int, int, char *);\nextern int mvwprintw (WINDOW*,int,int, const char *,...)\n  ;\nextern int mvwscanw (WINDOW *,int,int, char *,...)\n  ;\nextern int mvwvline (WINDOW *,int, int, chtype, int);\nextern int napms (int);\nextern WINDOW * newpad (int,int);\nextern SCREEN * newterm ( char *,FILE *,FILE *);\nextern WINDOW * newwin (int,int,int,int);\nextern int nl (void);\nextern int nocbreak (void);\nextern int nodelay (WINDOW *,_Bool);\nextern int noecho (void);\nextern int nonl (void);\nextern void noqiflush (void);\nextern int noraw (void);\nextern int notimeout (WINDOW *,_Bool);\nextern int overlay (const WINDOW*,WINDOW *);\nextern int overwrite (const WINDOW*,WINDOW *);\nextern int pair_content (short,short*,short*);\nextern int PAIR_NUMBER (int);\nextern int pechochar (WINDOW *, const chtype);\nextern int pnoutrefresh (WINDOW*,int,int,int,int,int,int);\nextern int prefresh (WINDOW *,int,int,int,int,int,int);\nextern int printw (const char *,...)\n  ;\nextern int putp (const char *);\nextern int putwin (WINDOW *, FILE *);\nextern void qiflush (void);\nextern int raw (void);\nextern int redrawwin (WINDOW *);\nextern int refresh (void);\nextern int resetty (void);\nextern int reset_prog_mode (void);\nextern int reset_shell_mode (void);\nextern int ripoffline (int, int (*)(WINDOW *, int));\nextern int savetty (void);\nextern int scanw ( char *,...)\n  ;\nextern int scr_dump (const char *);\nextern int scr_init (const char *);\nextern int scrl (int);\nextern int scroll (WINDOW *);\nextern int scrollok (WINDOW *,_Bool);\nextern int scr_restore (const char *);\nextern int scr_set (const char *);\nextern int setscrreg (int,int);\nextern SCREEN * set_term (SCREEN *);\nextern int slk_attroff (const chtype);\nextern int slk_attr_off (const attr_t, void *);\nextern int slk_attron (const chtype);\nextern int slk_attr_on (attr_t,void*);\nextern int slk_attrset (const chtype);\nextern attr_t slk_attr (void);\nextern int slk_attr_set (const attr_t,short,void*);\nextern int slk_clear (void);\nextern int slk_color (short);\nextern int slk_init (int);\nextern char * slk_label (int);\nextern int slk_noutrefresh (void);\nextern int slk_refresh (void);\nextern int slk_restore (void);\nextern int slk_set (int,const char *,int);\nextern int slk_touch (void);\nextern int standout (void);\nextern int standend (void);\nextern int start_color (void);\nextern WINDOW * subpad (WINDOW *, int, int, int, int);\nextern WINDOW * subwin (WINDOW *,int,int,int,int);\nextern int syncok (WINDOW *, _Bool);\nextern chtype termattrs (void);\nextern char * termname (void);\nextern int tigetflag ( char *);\nextern int tigetnum ( char *);\nextern char * tigetstr ( char *);\nextern void timeout (int);\nextern int touchline (WINDOW *, int, int);\nextern int touchwin (WINDOW *);\nextern char * tparm ( char *, ...);\nextern int typeahead (int);\nextern int ungetch (int);\nextern int untouchwin (WINDOW *);\nextern void use_env (_Bool);\nextern int vidattr (chtype);\nextern int vidputs (chtype, int (*)(int));\nextern int vline (chtype, int);\nextern int vwprintw (WINDOW *, const char *,va_list);\nextern int vw_printw (WINDOW *, const char *,va_list);\nextern int vwscanw (WINDOW *, char *,va_list);\nextern int vw_scanw (WINDOW *, char *,va_list);\nextern int waddch (WINDOW *, const chtype);\nextern int waddchnstr (WINDOW *,const chtype *,int);\nextern int waddchstr (WINDOW *,const chtype *);\nextern int waddnstr (WINDOW *,const char *,int);\nextern int waddstr (WINDOW *,const char *);\nextern int wattron (WINDOW *, int);\nextern int wattroff (WINDOW *, int);\nextern int wattrset (WINDOW *, int);\nextern int wattr_get (WINDOW *, attr_t *, short *, void *);\nextern int wattr_on (WINDOW *, attr_t, void *);\nextern int wattr_off (WINDOW *, attr_t, void *);\nextern int wattr_set (WINDOW *, attr_t, short, void *);\nextern int wbkgd (WINDOW *, chtype);\nextern void wbkgdset (WINDOW *,chtype);\nextern int wborder (WINDOW *,chtype,chtype,chtype,chtype,chtype,chtype,chtype,chtype);\nextern int wchgat (WINDOW *, int, attr_t, short, const void *);\nextern int wclear (WINDOW *);\nextern int wclrtobot (WINDOW *);\nextern int wclrtoeol (WINDOW *);\nextern int wcolor_set (WINDOW*,short,void*);\nextern void wcursyncup (WINDOW *);\nextern int wdelch (WINDOW *);\nextern int wdeleteln (WINDOW *);\nextern int wechochar (WINDOW *, const chtype);\nextern int werase (WINDOW *);\nextern int wgetch (WINDOW *);\nextern int wgetnstr (WINDOW *,char *,int);\nextern int wgetstr (WINDOW *, char *);\nextern int whline (WINDOW *, chtype, int);\nextern chtype winch (WINDOW *);\nextern int winchnstr (WINDOW *, chtype *, int);\nextern int winchstr (WINDOW *, chtype *);\nextern int winnstr (WINDOW *, char *, int);\nextern int winsch (WINDOW *, chtype);\nextern int winsdelln (WINDOW *,int);\nextern int winsertln (WINDOW *);\nextern int winsnstr (WINDOW *, const char *,int);\nextern int winsstr (WINDOW *, const char *);\nextern int winstr (WINDOW *, char *);\nextern int wmove (WINDOW *,int,int);\nextern int wnoutrefresh (WINDOW *);\nextern int wprintw (WINDOW *, const char *,...)\n  ;\nextern int wredrawln (WINDOW *,int,int);\nextern int wrefresh (WINDOW *);\nextern int wscanw (WINDOW *, char *,...)\n  ;\nextern int wscrl (WINDOW *,int);\nextern int wsetscrreg (WINDOW *,int,int);\nextern int wstandout (WINDOW *);\nextern int wstandend (WINDOW *);\nextern void wsyncdown (WINDOW *);\nextern void wsyncup (WINDOW *);\nextern void wtimeout (WINDOW *,int);\nextern int wtouchln (WINDOW *,int,int,int);\nextern int wvline (WINDOW *,chtype,int);\n\n\n\n\nextern int getcurx (const WINDOW *);\nextern int getcury (const WINDOW *);\nextern int getbegx (const WINDOW *);\nextern int getbegy (const WINDOW *);\nextern int getmaxx (const WINDOW *);\nextern int getmaxy (const WINDOW *);\nextern int getparx (const WINDOW *);\nextern int getpary (const WINDOW *);\n// # 1204 \"/usr/include/ncursesw/ncurses.h\" 3 4\nextern cchar_t * _nc_wacs;\n// # 1267 \"/usr/include/ncursesw/ncurses.h\" 3 4\nextern int add_wch (const cchar_t *);\nextern int add_wchnstr (const cchar_t *, int);\nextern int add_wchstr (const cchar_t *);\nextern int addnwstr (const wchar_t *, int);\nextern int addwstr (const wchar_t *);\nextern int bkgrnd (const cchar_t *);\nextern void bkgrndset (const cchar_t *);\nextern int border_set (const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);\nextern int box_set (WINDOW *, const cchar_t *, const cchar_t *);\nextern int echo_wchar (const cchar_t *);\nextern int erasewchar (wchar_t*);\nextern int get_wch (wint_t *);\nextern int get_wstr (wint_t *);\nextern int getbkgrnd (cchar_t *);\nextern int getcchar (const cchar_t *, wchar_t*, attr_t*, short*, void*);\nextern int getn_wstr (wint_t *, int);\nextern int hline_set (const cchar_t *, int);\nextern int in_wch (cchar_t *);\nextern int in_wchnstr (cchar_t *, int);\nextern int in_wchstr (cchar_t *);\nextern int innwstr (wchar_t *, int);\nextern int ins_nwstr (const wchar_t *, int);\nextern int ins_wch (const cchar_t *);\nextern int ins_wstr (const wchar_t *);\nextern int inwstr (wchar_t *);\nextern char* key_name (wchar_t);\nextern int killwchar (wchar_t *);\nextern int mvadd_wch (int, int, const cchar_t *);\nextern int mvadd_wchnstr (int, int, const cchar_t *, int);\nextern int mvadd_wchstr (int, int, const cchar_t *);\nextern int mvaddnwstr (int, int, const wchar_t *, int);\nextern int mvaddwstr (int, int, const wchar_t *);\nextern int mvget_wch (int, int, wint_t *);\nextern int mvget_wstr (int, int, wint_t *);\nextern int mvgetn_wstr (int, int, wint_t *, int);\nextern int mvhline_set (int, int, const cchar_t *, int);\nextern int mvin_wch (int, int, cchar_t *);\nextern int mvin_wchnstr (int, int, cchar_t *, int);\nextern int mvin_wchstr (int, int, cchar_t *);\nextern int mvinnwstr (int, int, wchar_t *, int);\nextern int mvins_nwstr (int, int, const wchar_t *, int);\nextern int mvins_wch (int, int, const cchar_t *);\nextern int mvins_wstr (int, int, const wchar_t *);\nextern int mvinwstr (int, int, wchar_t *);\nextern int mvvline_set (int, int, const cchar_t *, int);\nextern int mvwadd_wch (WINDOW *, int, int, const cchar_t *);\nextern int mvwadd_wchnstr (WINDOW *, int, int, const cchar_t *, int);\nextern int mvwadd_wchstr (WINDOW *, int, int, const cchar_t *);\nextern int mvwaddnwstr (WINDOW *, int, int, const wchar_t *, int);\nextern int mvwaddwstr (WINDOW *, int, int, const wchar_t *);\nextern int mvwget_wch (WINDOW *, int, int, wint_t *);\nextern int mvwget_wstr (WINDOW *, int, int, wint_t *);\nextern int mvwgetn_wstr (WINDOW *, int, int, wint_t *, int);\nextern int mvwhline_set (WINDOW *, int, int, const cchar_t *, int);\nextern int mvwin_wch (WINDOW *, int, int, cchar_t *);\nextern int mvwin_wchnstr (WINDOW *, int,int, cchar_t *,int);\nextern int mvwin_wchstr (WINDOW *, int, int, cchar_t *);\nextern int mvwinnwstr (WINDOW *, int, int, wchar_t *, int);\nextern int mvwins_nwstr (WINDOW *, int,int, const wchar_t *,int);\nextern int mvwins_wch (WINDOW *, int, int, const cchar_t *);\nextern int mvwins_wstr (WINDOW *, int, int, const wchar_t *);\nextern int mvwinwstr (WINDOW *, int, int, wchar_t *);\nextern int mvwvline_set (WINDOW *, int,int, const cchar_t *,int);\nextern int pecho_wchar (WINDOW *, const cchar_t *);\nextern int setcchar (cchar_t *, const wchar_t *, const attr_t, short, const void *);\nextern int slk_wset (int, const wchar_t *, int);\nextern attr_t term_attrs (void);\nextern int unget_wch (const wchar_t);\nextern int vid_attr (attr_t, short, void *);\nextern int vid_puts (attr_t, short, void *, int (*)(int));\nextern int vline_set (const cchar_t *, int);\nextern int wadd_wch (WINDOW *,const cchar_t *);\nextern int wadd_wchnstr (WINDOW *,const cchar_t *,int);\nextern int wadd_wchstr (WINDOW *,const cchar_t *);\nextern int waddnwstr (WINDOW *,const wchar_t *,int);\nextern int waddwstr (WINDOW *,const wchar_t *);\nextern int wbkgrnd (WINDOW *,const cchar_t *);\nextern void wbkgrndset (WINDOW *,const cchar_t *);\nextern int wborder_set (WINDOW *,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);\nextern int wecho_wchar (WINDOW *, const cchar_t *);\nextern int wget_wch (WINDOW *, wint_t *);\nextern int wget_wstr (WINDOW *, wint_t *);\nextern int wgetbkgrnd (WINDOW *, cchar_t *);\nextern int wgetn_wstr (WINDOW *,wint_t *, int);\nextern int whline_set (WINDOW *, const cchar_t *, int);\nextern int win_wch (WINDOW *, cchar_t *);\nextern int win_wchnstr (WINDOW *, cchar_t *, int);\nextern int win_wchstr (WINDOW *, cchar_t *);\nextern int winnwstr (WINDOW *, wchar_t *, int);\nextern int wins_nwstr (WINDOW *, const wchar_t *, int);\nextern int wins_wch (WINDOW *, const cchar_t *);\nextern int wins_wstr (WINDOW *, const wchar_t *);\nextern int winwstr (WINDOW *, wchar_t *);\nextern wchar_t* wunctrl (cchar_t *);\nextern int wvline_set (WINDOW *, const cchar_t *, int);\n// # 1532 \"/usr/include/ncursesw/ncurses.h\" 3 4\ntypedef struct\n{\n    short id;\n    int x, y, z;\n    mmask_t bstate;\n}\nMEVENT;\n\nextern int getmouse (MEVENT *);\nextern int ungetmouse (MEVENT *);\nextern mmask_t mousemask (mmask_t, mmask_t *);\nextern _Bool wenclose (const WINDOW *, int, int);\nextern int mouseinterval (int);\nextern _Bool wmouse_trafo (const WINDOW*, int*, int*, _Bool);\nextern _Bool mouse_trafo (int*, int*, _Bool);\n\n\n\n\n\nextern int mcprint (char *, int);\nextern int has_key (int);\n\n\n\nextern void _tracef (const char *, ...) ;\nextern void _tracedump (const char *, WINDOW *);\nextern char * _traceattr (attr_t);\nextern char * _traceattr2 (int, chtype);\nextern char * _nc_tracebits (void);\nextern char * _tracechar (int);\nextern char * _tracechtype (chtype);\nextern char * _tracechtype2 (int, chtype);\n\n\nextern char * _tracecchar_t (const cchar_t *);\n\nextern char * _tracecchar_t2 (int, const cchar_t *);\n\n\n\n\nextern char * _tracemouse (const MEVENT *);\nextern void trace (const unsigned int);\n// # 1 \"zshcurses.h\" 2\n// # 869 \"zsh_system.h\" 2\n\n// # 1 \"zshterm.h\" 1\n// # 1 \"/usr/include/ncursesw/term.h\" 1 3 4\n// # 673 \"/usr/include/ncursesw/term.h\" 3 4\ntypedef struct termtype {\n    char *term_names;\n    char *str_table;\n    char *Booleans;\n    short *Numbers;\n    char **Strings;\n\n\n    char *ext_str_table;\n    char **ext_Names;\n\n    unsigned short num_Booleans;\n    unsigned short num_Numbers;\n    unsigned short num_Strings;\n\n    unsigned short ext_Booleans;\n    unsigned short ext_Numbers;\n    unsigned short ext_Strings;\n\n\n} TERMTYPE;\n\ntypedef struct term {\n    TERMTYPE type;\n    short Filedes;\n    struct termios Ottyb,\n  Nttyb;\n    int _baudrate;\n    char * _termname;\n} TERMINAL;\n\nextern TERMINAL * cur_term;\n// # 729 \"/usr/include/ncursesw/term.h\" 3 4\nextern char * const boolnames[];\nextern char * const boolcodes[];\nextern char * const boolfnames[];\nextern char * const numnames[];\nextern char * const numcodes[];\nextern char * const numfnames[];\nextern char * const strnames[];\nextern char * const strcodes[];\nextern char * const strfnames[];\n\n\n\n\nextern int _nc_set_tty_mode (struct termios *buf);\nextern int _nc_get_tty_mode (struct termios *buf);\nextern int _nc_read_entry (const char * const, char * const, TERMTYPE *const);\nextern int _nc_read_file_entry (const char *const, TERMTYPE *);\nextern char * _nc_first_name (const char *const);\nextern int _nc_name_match (const char *const, const char *const, const char *const);\nextern int _nc_read_termcap_entry (const char *const, TERMTYPE *const);\nextern const TERMTYPE * _nc_fallback (const char *);\n\n\nextern TERMINAL * set_curterm (TERMINAL *);\nextern int del_curterm (TERMINAL *);\n\n\nextern int restartterm ( char *, int, int *);\nextern int setupterm ( char *,int,int *);\n// # 771 \"/usr/include/ncursesw/term.h\" 3 4\nextern char * tgetstr ( char *, char **);\nextern char * tgoto (const char *, int, int);\nextern int tgetent (char *, const char *);\nextern int tgetflag ( char *);\nextern int tgetnum ( char *);\nextern int tputs (const char *, int, int (*)(int));\n// # 1 \"zshterm.h\" 2\n// # 871 \"zsh_system.h\" 2\n// # 18 \"zsh.mdh\" 2\n// # 1 \"zsh.h\" 1\n// # 48 \"zsh.h\"\ntypedef long zlong;\ntypedef unsigned long zulong;\n// # 61 \"zsh.h\"\ntypedef struct {\n    union {\n zlong l;\n double d;\n    } u;\n    int type;\n} mnumber;\n\n\n\n\n\ntypedef struct mathfunc *MathFunc;\ntypedef mnumber (*NumMathFunc)(char *, int, mnumber *, int);\ntypedef mnumber (*StrMathFunc)(char *, char *, int);\n\nstruct mathfunc {\n    MathFunc next;\n    char *name;\n    int flags;\n    NumMathFunc nfunc;\n    StrMathFunc sfunc;\n    char *module;\n    int minargs;\n    int maxargs;\n    int funcid;\n};\n// # 197 \"zsh.h\"\nenum {\n\n\n\n\n    QT_NONE,\n\n    QT_BACKSLASH,\n\n    QT_SINGLE,\n\n    QT_DOUBLE,\n\n    QT_DOLLARS,\n\n\n\n\n\n    QT_BACKTICK,\n\n\n\n\n    QT_SINGLE_OPTIONAL,\n\n\n\n    QT_BACKSLASH_SHOWNULL\n};\n// # 235 \"zsh.h\"\nenum {\n    NULLTOK,\n    SEPER,\n    NEWLIN,\n    SEMI,\n    DSEMI,\n    AMPER,\n    INPAR,\n    OUTPAR,\n    DBAR,\n    DAMPER,\n    OUTANG,\n    OUTANGBANG,\n    DOUTANG,\n    DOUTANGBANG,\n    INANG,\n    INOUTANG,\n    DINANG,\n    DINANGDASH,\n    INANGAMP,\n    OUTANGAMP,\n    AMPOUTANG,\n    OUTANGAMPBANG,\n    DOUTANGAMP,\n    DOUTANGAMPBANG,\n    TRINANG,\n    BAR,\n    BARAMP,\n    INOUTPAR,\n    DINPAR,\n    DOUTPAR,\n    AMPERBANG,\n    SEMIAMP,\n    SEMIBAR,\n    DOUTBRACK,\n    STRING,\n    ENVSTRING,\n    ENVARRAY,\n    ENDINPUT,\n    LEXERR,\n\n\n    BANG,\n    DINBRACK,\n    INBRACE,\n    OUTBRACE,\n    CASE,\n    COPROC,\n    DOLOOP,\n    DONE,\n    ELIF,\n    ELSE,\n    ZEND,\n    ESAC,\n    FI,\n    FOR,\n    FOREACH,\n    FUNC,\n    IF,\n    NOCORRECT,\n    REPEAT,\n    SELECT,\n    THEN,\n    TIME,\n    UNTIL,\n    WHILE\n};\n\n\n\n\n\nenum {\n    REDIR_WRITE,\n    REDIR_WRITENOW,\n    REDIR_APP,\n    REDIR_APPNOW,\n    REDIR_ERRWRITE,\n    REDIR_ERRWRITENOW,\n    REDIR_ERRAPP,\n    REDIR_ERRAPPNOW,\n    REDIR_READWRITE,\n    REDIR_READ,\n    REDIR_HEREDOC,\n    REDIR_HEREDOCDASH,\n    REDIR_HERESTR,\n    REDIR_MERGEIN,\n    REDIR_MERGEOUT,\n    REDIR_CLOSE,\n    REDIR_INPIPE,\n    REDIR_OUTPIPE\n};\n// # 403 \"zsh.h\"\ntypedef struct alias *Alias;\ntypedef struct asgment *Asgment;\ntypedef struct builtin *Builtin;\ntypedef struct cmdnam *Cmdnam;\ntypedef struct complist *Complist;\ntypedef struct conddef *Conddef;\ntypedef struct dirsav *Dirsav;\ntypedef struct features *Features;\ntypedef struct feature_enables *Feature_enables;\ntypedef struct funcstack *Funcstack;\ntypedef struct funcwrap *FuncWrap;\ntypedef struct hashnode *HashNode;\ntypedef struct hashtable *HashTable;\ntypedef struct heap *Heap;\ntypedef struct heapstack *Heapstack;\ntypedef struct histent *Histent;\ntypedef struct hookdef *Hookdef;\ntypedef struct job *Job;\ntypedef struct linkedmod *Linkedmod;\ntypedef struct linknode *LinkNode;\ntypedef union linkroot *LinkList;\ntypedef struct module *Module;\ntypedef struct nameddir *Nameddir;\ntypedef struct options *Options;\ntypedef struct optname *Optname;\ntypedef struct param *Param;\ntypedef struct paramdef *Paramdef;\ntypedef struct patprog *Patprog;\ntypedef struct prepromptfn *Prepromptfn;\ntypedef struct process *Process;\ntypedef struct redir *Redir;\ntypedef struct reswd *Reswd;\ntypedef struct shfunc *Shfunc;\ntypedef struct timedfn *Timedfn;\ntypedef struct value *Value;\n\n\n\n\n\n\n\nstruct linknode {\n    LinkNode next;\n    LinkNode prev;\n    void *dat;\n};\n\nstruct linklist {\n    LinkNode first;\n    LinkNode last;\n    int flags;\n};\n\nunion linkroot {\n    struct linklist list;\n    struct linknode node;\n};\n// # 509 \"zsh.h\"\ntypedef void (*voidvoidfnptr_t) (void);\n\n\n\n\nstruct prepromptfn {\n    voidvoidfnptr_t func;\n};\n\n\n\n\n\nstruct timedfn {\n    voidvoidfnptr_t func;\n    time_t when;\n};\n// # 562 \"zsh.h\"\ntypedef int (*CondHandler) (char **, int);\n\nstruct conddef {\n    Conddef next;\n    char *name;\n    int flags;\n    CondHandler handler;\n    int min;\n    int max;\n    int condid;\n    char *module;\n};\n// # 587 \"zsh.h\"\nenum {\n\n    REDIRF_FROM_HEREDOC = 1\n};\n\n\n\nstruct redir {\n    int type;\n    int flags;\n    int fd1, fd2;\n    char *name;\n    char *varid;\n    char *here_terminator;\n    char *munged_here_terminator;\n};\n// # 616 \"zsh.h\"\nstruct multio {\n    int ct;\n    int rflag;\n    int pipe;\n    int fds[8];\n};\n\n\n\nstruct asgment {\n    struct asgment *next;\n    char *name;\n    char *value;\n};\n\n\n\nstruct value {\n    int isarr;\n    Param pm;\n    int flags;\n    int start;\n    int end;\n    char **arr;\n};\n\nenum {\n    VALFLAG_INV = 0x0001,\n    VALFLAG_EMPTY = 0x0002,\n    VALFLAG_SUBST = 0x0004\n};\n\n\n\n\n\n\n\ntypedef unsigned int wordcode;\ntypedef wordcode *Wordcode;\n\ntypedef struct funcdump *FuncDump;\ntypedef struct eprog *Eprog;\n\nstruct funcdump {\n    FuncDump next;\n    dev_t dev;\n    ino_t ino;\n    int fd;\n    Wordcode map;\n    Wordcode addr;\n    int len;\n    int count;\n    char *filename;\n};\n// # 689 \"zsh.h\"\nstruct eprog {\n    int flags;\n    int len;\n    int npats;\n    int nref;\n    Patprog *pats;\n    Wordcode prog;\n    char *strs;\n    Shfunc shf;\n    FuncDump dump;\n};\n\n\n\n\n\n\ntypedef struct estate *Estate;\n\nstruct estate {\n    Eprog prog;\n    Wordcode pc;\n    char *strs;\n};\n\ntypedef struct eccstr *Eccstr;\n\nstruct eccstr {\n    Eccstr left, right;\n    char *str;\n    wordcode offs, aoffs;\n    int nfunc;\n};\n// # 878 \"zsh.h\"\nstruct job {\n    pid_t gleader;\n    pid_t other;\n    int stat;\n    char *pwd;\n\n    struct process *procs;\n    struct process *auxprocs;\n    LinkList filelist;\n    int stty_in_env;\n    struct ttyinfo *ty;\n};\n// # 914 \"zsh.h\"\nstruct timeinfo {\n    long ut;\n    long st;\n};\n// # 927 \"zsh.h\"\ntypedef struct rusage child_times_t;\n\n\n\n\nstruct process {\n    struct process *next;\n    pid_t pid;\n    char text[80];\n    int status;\n    child_times_t ti;\n    struct timeval bgtime;\n    struct timeval endtime;\n};\n\nstruct execstack {\n    struct execstack *next;\n\n    pid_t list_pipe_pid;\n    int nowait;\n    int pline_level;\n    int list_pipe_child;\n    int list_pipe_job;\n    char list_pipe_text[80];\n    int lastval;\n    int noeval;\n    int badcshglob;\n    pid_t cmdoutpid;\n    int cmdoutval;\n    int use_cmdoutval;\n    int trap_return;\n    int trap_state;\n    int trapisfunc;\n    int traplocallevel;\n    int noerrs;\n    int subsh_close;\n    char *underscore;\n};\n\nstruct heredocs {\n    struct heredocs *next;\n    int type;\n    int pc;\n    char *str;\n};\n\nstruct dirsav {\n    int dirfd, level;\n    char *dirname;\n    dev_t dev;\n    ino_t ino;\n};\n\n\n\n\n\n\n\ntypedef void *(*VFunc) (void *);\ntypedef void (*FreeFunc) (void *);\n\ntypedef unsigned (*HashFunc) (const char *);\ntypedef void (*TableFunc) (HashTable);\n\n\n\n\n\ntypedef void (*AddNodeFunc) (HashTable, char *, void *);\ntypedef HashNode (*GetNodeFunc) (HashTable, const char *);\ntypedef HashNode (*RemoveNodeFunc) (HashTable, const char *);\ntypedef void (*FreeNodeFunc) (HashNode);\ntypedef int (*CompareFunc) (const char *, const char *);\n\n\n\ntypedef void (*ScanFunc) (HashNode, int);\ntypedef void (*ScanTabFunc) (HashTable, ScanFunc, int);\n\ntypedef void (*PrintTableStats) (HashTable);\n\n\n\nstruct hashtable {\n\n    int hsize;\n    int ct;\n    HashNode *nodes;\n    void *tmpdata;\n\n\n    HashFunc hash;\n    TableFunc emptytable;\n    TableFunc filltable;\n    CompareFunc cmpnodes;\n    AddNodeFunc addnode;\n    GetNodeFunc getnode;\n    GetNodeFunc getnode2;\n\n    RemoveNodeFunc removenode;\n    ScanFunc disablenode;\n    ScanFunc enablenode;\n    FreeNodeFunc freenode;\n    ScanFunc printnode;\n    ScanTabFunc scantab;\n\n\n\n\n};\n\n\n\nstruct hashnode {\n    HashNode next;\n    char *nam;\n    int flags;\n};\n// # 1054 \"zsh.h\"\nstruct optname {\n    struct hashnode node;\n    int optno;\n};\n\n\n\nstruct reswd {\n    struct hashnode node;\n    int token;\n};\n\n\n\nstruct alias {\n    struct hashnode node;\n    char *text;\n    int inuse;\n};\n// # 1082 \"zsh.h\"\nstruct cmdnam {\n    struct hashnode node;\n    union {\n char **name;\n char *cmd;\n    }\n    u;\n};\n\n\n\n\n\n\n\nstruct shfunc {\n    struct hashnode node;\n    char *filename;\n    zlong lineno;\n    Eprog funcdef;\n    int emulation;\n};\n// # 1118 \"zsh.h\"\nenum {\n    FS_SOURCE,\n    FS_FUNC,\n    FS_EVAL\n};\n\n\n\nstruct funcstack {\n    Funcstack prev;\n    char *name;\n    char *filename;\n    char *caller;\n    zlong flineno;\n    zlong lineno;\n    int tp;\n};\n\n\n\ntypedef int (*WrapFunc) (Eprog, FuncWrap, char *);\n\nstruct funcwrap {\n    FuncWrap next;\n    int flags;\n    WrapFunc handler;\n    Module module;\n};\n// # 1194 \"zsh.h\"\nstruct options {\n    unsigned char ind[128];\n    char **args;\n    int argscount, argsalloc;\n};\n\n\n\n\n\n\n\ntypedef int (*HandlerFunc) (char *, char **, Options, int);\n\n\nstruct builtin {\n    struct hashnode node;\n    HandlerFunc handlerfunc;\n    int minargs;\n    int maxargs;\n    int funcid;\n    char *optstr;\n    char *defopts;\n};\n// # 1251 \"zsh.h\"\nstruct module {\n    struct hashnode node;\n    union {\n void *handle;\n Linkedmod linked;\n char *alias;\n    } u;\n    LinkList autoloads;\n    LinkList deps;\n    int wrapper;\n};\n// # 1282 \"zsh.h\"\ntypedef int (*Module_generic_func) (void);\ntypedef int (*Module_void_func) (Module);\ntypedef int (*Module_features_func) (Module, char ***);\ntypedef int (*Module_enables_func) (Module, int **);\n\nstruct linkedmod {\n    char *name;\n    Module_void_func setup;\n    Module_features_func features;\n    Module_enables_func enables;\n    Module_void_func boot;\n    Module_void_func cleanup;\n    Module_void_func finish;\n};\n\n\n\n\n\nstruct features {\n\n    Builtin bn_list;\n    int bn_size;\n\n    Conddef cd_list;\n    int cd_size;\n\n    MathFunc mf_list;\n    int mf_size;\n\n    Paramdef pd_list;\n    int pd_size;\n\n    int n_abstract;\n};\n\n\n\n\nstruct feature_enables {\n\n    char *str;\n\n    Patprog pat;\n};\n\n\n\ntypedef int (*Hookfn) (Hookdef, void *);\n\nstruct hookdef {\n    Hookdef next;\n    char *name;\n    Hookfn def;\n    int flags;\n    LinkList funcs;\n};\n// # 1349 \"zsh.h\"\nstruct patprog {\n    long startoff;\n    long size;\n    long mustoff;\n    long patmlen;\n    int globflags;\n    int globend;\n    int flags;\n    int patnpar;\n    char patstartch;\n};\n// # 1438 \"zsh.h\"\ntypedef const struct gsu_scalar *GsuScalar;\ntypedef const struct gsu_integer *GsuInteger;\ntypedef const struct gsu_float *GsuFloat;\ntypedef const struct gsu_array *GsuArray;\ntypedef const struct gsu_hash *GsuHash;\n\nstruct gsu_scalar {\n    char *(*getfn) (Param);\n    void (*setfn) (Param, char *);\n    void (*unsetfn) (Param, int);\n};\n\nstruct gsu_integer {\n    zlong (*getfn) (Param);\n    void (*setfn) (Param, zlong);\n    void (*unsetfn) (Param, int);\n};\n\nstruct gsu_float {\n    double (*getfn) (Param);\n    void (*setfn) (Param, double);\n    void (*unsetfn) (Param, int);\n};\n\nstruct gsu_array {\n    char **(*getfn) (Param);\n    void (*setfn) (Param, char **);\n    void (*unsetfn) (Param, int);\n};\n\nstruct gsu_hash {\n    HashTable (*getfn) (Param);\n    void (*setfn) (Param, HashTable);\n    void (*unsetfn) (Param, int);\n};\n\n\n\n\nstruct param {\n    struct hashnode node;\n\n\n    union {\n void *data;\n char **arr;\n char *str;\n zlong val;\n zlong *valptr;\n double dval;\n\n        HashTable hash;\n    } u;\n// # 1500 \"zsh.h\"\n    union {\n GsuScalar s;\n GsuInteger i;\n GsuFloat f;\n GsuArray a;\n GsuHash h;\n    } gsu;\n\n    int base;\n    int width;\n    char *env;\n    char *ename;\n    Param old;\n    int level;\n};\n\n\nstruct tieddata {\n    char ***arrptr;\n    int joinchar;\n};\n// # 1631 \"zsh.h\"\nstruct repldata {\n    int b, e;\n    char *replstr;\n};\ntypedef struct repldata *Repldata;\n\n\n\n\nenum {\n\n    ZSHTOK_SUBST = 0x0001,\n\n    ZSHTOK_SHGLOB = 0x0002\n};\n// # 1676 \"zsh.h\"\nstruct paramdef {\n    char *name;\n    int flags;\n    void *var;\n    const void *gsu;\n    GetNodeFunc getnfn;\n    ScanTabFunc scantfn;\n    Param pm;\n};\n// # 1727 \"zsh.h\"\nenum {\n    ASSPM_AUGMENT = 1 << 0,\n    ASSPM_WARN_CREATE = 1 << 1\n};\n\n\n\nstruct nameddir {\n    struct hashnode node;\n    char *dir;\n    int diff;\n};\n\n\n\n\n\n\n\ntypedef struct {\n\n    char *name;\n\n    gid_t gid;\n} groupmap;\ntypedef groupmap *Groupmap;\n\n\ntypedef struct {\n\n    Groupmap array;\n\n    int num;\n} groupset;\ntypedef groupset *Groupset;\n// # 1780 \"zsh.h\"\nenum loop_return {\n\n    LOOP_OK,\n\n    LOOP_EMPTY,\n\n    LOOP_ERROR\n};\n\n\n\nenum source_return {\n\n    SOURCE_OK = 0,\n\n    SOURCE_NOT_FOUND = 1,\n\n    SOURCE_ERROR = 2\n};\n\n\n\n\n\n\n\nstruct histent {\n    struct hashnode node;\n\n    Histent up;\n    Histent down;\n    char *zle_text;\n\n\n\n\n    time_t stim;\n    time_t ftim;\n    short *words;\n\n    int nwords;\n    zlong histnum;\n};\n// # 1933 \"zsh.h\"\nenum {\n    OPT_INVALID,\n    ALIASESOPT,\n    ALLEXPORT,\n    ALWAYSLASTPROMPT,\n    ALWAYSTOEND,\n    APPENDHISTORY,\n    AUTOCD,\n    AUTOCONTINUE,\n    AUTOLIST,\n    AUTOMENU,\n    AUTONAMEDIRS,\n    AUTOPARAMKEYS,\n    AUTOPARAMSLASH,\n    AUTOPUSHD,\n    AUTOREMOVESLASH,\n    AUTORESUME,\n    BADPATTERN,\n    BANGHIST,\n    BAREGLOBQUAL,\n    BASHAUTOLIST,\n    BASHREMATCH,\n    BEEP,\n    BGNICE,\n    BRACECCL,\n    BSDECHO,\n    CASEGLOB,\n    CASEMATCH,\n    CBASES,\n    CDABLEVARS,\n    CHASEDOTS,\n    CHASELINKS,\n    CHECKJOBS,\n    CLOBBER,\n    COMBININGCHARS,\n    COMPLETEALIASES,\n    COMPLETEINWORD,\n    CORRECT,\n    CORRECTALL,\n    CPRECEDENCES,\n    CSHJUNKIEHISTORY,\n    CSHJUNKIELOOPS,\n    CSHJUNKIEQUOTES,\n    CSHNULLCMD,\n    CSHNULLGLOB,\n    DEBUGBEFORECMD,\n    EMACSMODE,\n    EQUALS,\n    ERREXIT,\n    ERRRETURN,\n    EXECOPT,\n    EXTENDEDGLOB,\n    EXTENDEDHISTORY,\n    EVALLINENO,\n    FLOWCONTROL,\n    FUNCTIONARGZERO,\n    GLOBOPT,\n    GLOBALEXPORT,\n    GLOBALRCS,\n    GLOBASSIGN,\n    GLOBCOMPLETE,\n    GLOBDOTS,\n    GLOBSUBST,\n    HASHCMDS,\n    HASHDIRS,\n    HASHEXECUTABLESONLY,\n    HASHLISTALL,\n    HISTALLOWCLOBBER,\n    HISTBEEP,\n    HISTEXPIREDUPSFIRST,\n    HISTFCNTLLOCK,\n    HISTFINDNODUPS,\n    HISTIGNOREALLDUPS,\n    HISTIGNOREDUPS,\n    HISTIGNORESPACE,\n    HISTLEXWORDS,\n    HISTNOFUNCTIONS,\n    HISTNOSTORE,\n    HISTREDUCEBLANKS,\n    HISTSAVEBYCOPY,\n    HISTSAVENODUPS,\n    HISTSUBSTPATTERN,\n    HISTVERIFY,\n    HUP,\n    IGNOREBRACES,\n    IGNORECLOSEBRACES,\n    IGNOREEOF,\n    INCAPPENDHISTORY,\n    INTERACTIVE,\n    INTERACTIVECOMMENTS,\n    KSHARRAYS,\n    KSHAUTOLOAD,\n    KSHGLOB,\n    KSHOPTIONPRINT,\n    KSHTYPESET,\n    KSHZEROSUBSCRIPT,\n    LISTAMBIGUOUS,\n    LISTBEEP,\n    LISTPACKED,\n    LISTROWSFIRST,\n    LISTTYPES,\n    LOCALOPTIONS,\n    LOCALTRAPS,\n    LOGINSHELL,\n    LONGLISTJOBS,\n    MAGICEQUALSUBST,\n    MAILWARNING,\n    MARKDIRS,\n    MENUCOMPLETE,\n    MONITOR,\n    MULTIBYTE,\n    MULTIFUNCDEF,\n    MULTIOS,\n    NOMATCH,\n    NOTIFY,\n    NULLGLOB,\n    NUMERICGLOBSORT,\n    OCTALZEROES,\n    OVERSTRIKE,\n    PATHDIRS,\n    PATHSCRIPT,\n    POSIXALIASES,\n    POSIXBUILTINS,\n    POSIXCD,\n    POSIXIDENTIFIERS,\n    POSIXJOBS,\n    POSIXSTRINGS,\n    POSIXTRAPS,\n    PRINTEIGHTBIT,\n    PRINTEXITVALUE,\n    PRIVILEGED,\n    PROMPTBANG,\n    PROMPTCR,\n    PROMPTPERCENT,\n    PROMPTSP,\n    PROMPTSUBST,\n    PUSHDIGNOREDUPS,\n    PUSHDMINUS,\n    PUSHDSILENT,\n    PUSHDTOHOME,\n    RCEXPANDPARAM,\n    RCQUOTES,\n    RCS,\n    RECEXACT,\n    REMATCHPCRE,\n    RESTRICTED,\n    RMSTARSILENT,\n    RMSTARWAIT,\n    SHAREHISTORY,\n    SHFILEEXPANSION,\n    SHGLOB,\n    SHINSTDIN,\n    SHNULLCMD,\n    SHOPTIONLETTERS,\n    SHORTLOOPS,\n    SHWORDSPLIT,\n    SINGLECOMMAND,\n    SINGLELINEZLE,\n    SOURCETRACE,\n    SUNKEYBOARDHACK,\n    TRANSIENTRPROMPT,\n    TRAPSASYNC,\n    TYPESETSILENT,\n    UNSET,\n    VERBOSE,\n    VIMODE,\n    WARNCREATEGLOBAL,\n    XTRACE,\n    USEZLE,\n    DVORAK,\n    OPT_SIZE\n};\n// # 2120 \"zsh.h\"\nstruct ttyinfo {\n\n    struct termios tio;\n// # 2134 \"zsh.h\"\n    struct winsize winsize;\n\n};\n// # 2286 \"zsh.h\"\nenum {\n\n    TSC_RAW = 0x0001,\n\n    TSC_PROMPT = 0x0002,\n\n    TSC_OUTPUT_MASK = 0x0003,\n\n    TSC_DIRTY = 0x0004\n};\n// # 2354 \"zsh.h\"\ntypedef unsigned int Heapid;\n// # 2399 \"zsh.h\"\nstruct heapstack {\n    struct heapstack *next;\n    size_t used;\n\n\n\n};\n\n\n\nstruct heap {\n    struct heap *next;\n    size_t size;\n    size_t used;\n    struct heapstack *sp;\n// # 2426 \"zsh.h\"\n}\n\n\n\n;\n// # 2475 \"zsh.h\"\nenum trap_state {\n\n    TRAP_STATE_INACTIVE,\n\n\n\n\n    TRAP_STATE_PRIMED,\n\n\n\n\n    TRAP_STATE_FORCE_RETURN\n};\n// # 2497 \"zsh.h\"\ntypedef int (*CompareFn) (const void *, const void *);\n\nenum {\n    SORTIT_ANYOLDHOW = 0,\n    SORTIT_IGNORING_CASE = 1,\n    SORTIT_NUMERICALLY = 2,\n    SORTIT_BACKWARDS = 4,\n\n\n\n\n    SORTIT_IGNORING_BACKSLASHES = 8,\n\n\n\n\n    SORTIT_SOMEHOW = 16,\n};\n\n\n\n\nstruct sortelt {\n\n    char *orig;\n\n    const char *cmp;\n\n\n\n\n    int origlen;\n\n\n\n\n    int len;\n};\n\ntypedef struct sortelt *SortElt;\n\n\n\n\n\nenum {\n    CASMOD_NONE,\n    CASMOD_UPPER,\n    CASMOD_LOWER,\n    CASMOD_CAPS\n};\n// # 2557 \"zsh.h\"\nenum {\n\n\n\n\n\n    GETKEY_OCTAL_ESC = (1 << 0),\n\n\n\n\n\n\n    GETKEY_EMACS = (1 << 1),\n\n    GETKEY_CTRL = (1 << 2),\n\n    GETKEY_BACKSLASH_C = (1 << 3),\n\n    GETKEY_DOLLAR_QUOTE = (1 << 4),\n\n    GETKEY_BACKSLASH_MINUS = (1 << 5),\n\n    GETKEY_SINGLE_CHAR = (1 << 6),\n\n\n\n\n\n    GETKEY_UPDATE_OFFSET = (1 << 7),\n\n\n\n    GETKEY_PRINTF_PERCENT = (1 << 8)\n};\n// # 2631 \"zsh.h\"\nenum {\n    ZLCON_LINE_START,\n    ZLCON_LINE_CONT,\n    ZLCON_SELECT,\n    ZLCON_VARED\n};\n\n\n\n\n\n\n\ntypedef int (*CompctlReadFn) (char *, char **, Options, char *);\n\n\n\ntypedef char * (*ZleEntryPoint)(int cmd, va_list ap);\n\n\n\nenum {\n    ZLE_CMD_GET_LINE,\n    ZLE_CMD_READ,\n    ZLE_CMD_ADD_TO_LINE,\n    ZLE_CMD_TRASH,\n    ZLE_CMD_RESET_PROMPT,\n    ZLE_CMD_REFRESH,\n    ZLE_CMD_SET_KEYMAP,\n    ZLE_CMD_GET_KEY\n};\n// # 2674 \"zsh.h\"\ntypedef wint_t convchar_t;\n// # 19 \"zsh.mdh\" 2\n// # 1 \"sigcount.h\" 1\n// # 20 \"zsh.mdh\" 2\n// # 1 \"signals.h\" 1\n// # 106 \"signals.h\"\nextern sigset_t signal_block (sigset_t);\n\n\nextern sigset_t signal_unblock (sigset_t);\n// # 21 \"zsh.mdh\" 2\n// # 1 \"prototypes.h\" 1\n// # 22 \"zsh.mdh\" 2\n// # 1 \"hashtable.h\" 1\n// # 23 \"zsh.mdh\" 2\n// # 1 \"ztype.h\" 1\n// # 24 \"zsh.mdh\" 2\n// # 34 \"zsh.mdh\"\n// # 1 \"builtin.epro\" 1\n\n\n\n\nextern HashTable builtintab;\nextern void createbuiltintable (void);\nextern void init_builtins (void);\nextern int execbuiltin (LinkList args,Builtin bn);\nextern int bin_enable (char*name,char**argv,Options ops,int func);\nextern int bin_set (char*nam,char**args,Options ops __attribute__((__unused__)),int func __attribute__((__unused__)));\nextern int doprintdir;\nextern int bin_pwd (char*name __attribute__((__unused__)),char**argv __attribute__((__unused__)),Options ops,int func __attribute__((__unused__)));\nextern LinkList dirstack;\nextern int bin_dirs (char*name __attribute__((__unused__)),char**argv,Options ops,int func __attribute__((__unused__)));\nextern void set_pwd_env (void);\nextern int bin_cd (char*nam,char**argv,Options ops,int func);\nextern char*cd_able_vars (char*s);\nextern int fixdir (char*src);\nextern void printqt (char*str);\nextern void printif (char*str,int c);\nextern int bin_fc (char*nam,char**argv,Options ops,int func);\nextern int bin_typeset (char*name,char**argv,Options ops,int func);\nextern int eval_autoload (Shfunc shf,char*name,Options ops,int func);\nextern int bin_functions (char*name,char**argv,Options ops,int func);\nextern Eprog mkautofn (Shfunc shf);\nextern int bin_unset (char*name,char**argv,Options ops,int func);\nextern int bin_whence (char*nam,char**argv,Options ops,int func);\nextern int bin_hash (char*name,char**argv,Options ops,int func __attribute__((__unused__)));\nextern int bin_unhash (char*name,char**argv,Options ops,int func __attribute__((__unused__)));\nextern int bin_alias (char*name,char**argv,Options ops,int func __attribute__((__unused__)));\nextern int bin_true (char*name __attribute__((__unused__)),char**argv __attribute__((__unused__)),Options ops __attribute__((__unused__)),int func __attribute__((__unused__)));\nextern int bin_false (char*name __attribute__((__unused__)),char**argv __attribute__((__unused__)),Options ops __attribute__((__unused__)),int func __attribute__((__unused__)));\nextern LinkList bufstack;\nextern int bin_print (char*name,char**args,Options ops,int func);\nextern int bin_shift (char*name,char**argv,Options ops __attribute__((__unused__)),int func __attribute__((__unused__)));\nextern int optcind;\nextern int bin_getopts (char*name __attribute__((__unused__)),char**argv,Options ops __attribute__((__unused__)),int func __attribute__((__unused__)));\nextern int exit_pending;\nextern int bin_break (char*name,char**argv,Options ops __attribute__((__unused__)),int func);\nextern int stopmsg;\nextern void zexit (int val,int from_where);\nextern int bin_dot (char*name,char**argv,Options ops __attribute__((__unused__)),int func __attribute__((__unused__)));\nextern int bin_emulate (char*nam __attribute__((__unused__)),char**argv,Options ops,int func __attribute__((__unused__)));\nextern int ineval;\nextern int bin_eval (char*nam __attribute__((__unused__)),char**argv,Options ops __attribute__((__unused__)),int func __attribute__((__unused__)));\nextern int bin_read (char*name,char**args,Options ops,int func __attribute__((__unused__)));\nextern char**testargs;\nextern char**curtestarg;\nextern void testlex (void);\nextern int bin_test (char*name,char**argv,Options ops __attribute__((__unused__)),int func);\nextern int bin_times (char*name __attribute__((__unused__)),char**argv __attribute__((__unused__)),Options ops __attribute__((__unused__)),int func __attribute__((__unused__)));\nextern int bin_trap (char*name,char**argv,Options ops __attribute__((__unused__)),int func __attribute__((__unused__)));\nextern int bin_ttyctl (char*name __attribute__((__unused__)),char**argv __attribute__((__unused__)),Options ops,int func __attribute__((__unused__)));\nextern int bin_let (char*name __attribute__((__unused__)),char**argv,Options ops __attribute__((__unused__)),int func __attribute__((__unused__)));\nextern int bin_umask (char*nam,char**args,Options ops,int func __attribute__((__unused__)));\nextern int bin_notavail (char*nam,char**argv __attribute__((__unused__)),Options ops __attribute__((__unused__)),int func __attribute__((__unused__)));\n// # 35 \"zsh.mdh\" 2\n// # 1 \"compat.epro\" 1\n\n\n\n\nextern long zpathmax (char*dir);\nextern long zopenmax (void);\nextern char*zgetdir (struct dirsav*d);\nextern char*zgetcwd (void);\nextern int zchdir (char*dir);\n// # 36 \"zsh.mdh\" 2\n// # 1 \"cond.epro\" 1\n\n\n\n\nextern int evalcond (Estate state,char*fromtest);\nextern char*cond_str (char**args,int num,int raw);\nextern zlong cond_val (char**args,int num);\nextern int cond_match (char**args,int num,char*str);\n// # 37 \"zsh.mdh\" 2\n// # 1 \"exec.epro\" 1\n\n\n\n\nextern int noerrexit;\nextern int noerrs;\nextern int nohistsave;\nextern int errflag;\nextern int trap_state;\nextern int trap_return;\nextern int subsh;\nextern int retflag;\nextern long lastval2;\nextern unsigned char*fdtable;\nextern int fdtable_size;\nextern int max_zsh_fd;\nextern int coprocin;\nextern int coprocout;\nextern int fdtable_flocks;\nextern int zleactive;\nextern pid_t cmdoutpid;\nextern int cmdoutval;\nextern int use_cmdoutval;\nextern int sfcontext;\nextern struct execstack*exstack;\nextern Funcstack funcstack;\nextern Eprog parse_string (char*s,int reset_lineno);\n\nextern struct rlimit current_limits[__RLIM_NLIMITS];\nextern struct rlimit limits[__RLIM_NLIMITS];\nextern int zsetlimit (int limnum,char*nam);\nextern int setlimits (char*nam);\n\nextern int list_pipe;\nextern int simple_pline;\nextern char*findcmd (char*arg0,int docopy);\nextern int iscom (char*s);\nextern int isreallycom (Cmdnam cn);\nextern int isrelative (char*s);\nextern Cmdnam hashcmd (char*arg0,char**pp);\nextern int forklevel;\nextern void execstring (char*s,int dont_change_job,int exiting,char*context);\nextern void execode (Eprog p,int dont_change_job,int exiting,char*context);\nextern void execlist (Estate state,int dont_change_job,int exiting);\nextern void untokenize (char*s);\nextern void quote_tokenized_output (char*str,FILE*file);\nextern void setunderscore (char*str);\nextern void execsubst (LinkList strs);\nextern void closem (int how);\nextern char*gethere (char**strp,int typ);\nextern LinkList getoutput (char*cmd,int qt);\nextern LinkList readoutput (int in,int qt);\nextern char*getoutputfile (char*cmd,char**eptr);\nextern char*getproc (char*cmd,char**eptr);\nextern Shfunc loadautofn (Shfunc shf,int fksh,int autol);\nextern int doshfunc (Shfunc shfunc,LinkList doshargs,int noreturnval);\nextern void runshfunc (Eprog prog,FuncWrap wrap,char*name);\nextern Eprog getfpfunc (char*s,int*ksh,char**fname);\nextern Eprog stripkshdef (Eprog prog,char*name);\nextern void execsave (void);\nextern void execrestore (void);\n// # 38 \"zsh.mdh\" 2\n// # 1 \"glob.epro\" 1\n\n\n\n\nextern int badcshglob;\nextern int pathpos;\nextern char*pathbuf;\nextern char*glob_pre;\nextern char*glob_suf;\nextern int haswilds (char*str);\nextern void zglob (LinkList list,LinkNode np,int nountok);\nextern char file_type (mode_t filemode);\nextern int hasbraces (char*str);\nextern int xpandredir (struct redir*fn,LinkList redirtab);\nextern void xpandbraces (LinkList list,LinkNode*np);\nextern int matchpat (char*a,char*b);\nextern int getmatch (char**sp,char*pat,int fl,int n,char*replstr);\nextern void getmatcharr (char***ap,char*pat,int fl,int n,char*replstr);\nextern int getmatchlist (char*str,Patprog p,LinkList*repllistp);\nextern void freematchlist (LinkList repllist);\n\n\n\nextern void tokenize (char*s);\nextern void shtokenize (char*s);\nextern void remnulargs (char*s);\n// # 39 \"zsh.mdh\" 2\n// # 1 \"hashtable.epro\" 1\n\n\n\n\nextern unsigned hasher (const char*str);\nextern HashTable newhashtable (int size,char const*name __attribute__((__unused__)),PrintTableStats printinfo __attribute__((__unused__)));\nextern void deletehashtable (HashTable ht);\nextern void addhashnode (HashTable ht,char*nam,void*nodeptr);\nextern HashNode addhashnode2 (HashTable ht,char*nam,void*nodeptr);\nextern HashNode gethashnode (HashTable ht,const char*nam);\nextern HashNode gethashnode2 (HashTable ht,const char*nam);\nextern HashNode removehashnode (HashTable ht,const char*nam);\nextern void disablehashnode (HashNode hn,int flags __attribute__((__unused__)));\nextern void enablehashnode (HashNode hn,int flags __attribute__((__unused__)));\nextern int scanmatchtable (HashTable ht,Patprog pprog,int sorted,int flags1,int flags2,ScanFunc scanfunc,int scanflags);\nextern int scanhashtable (HashTable ht,int sorted,int flags1,int flags2,ScanFunc scanfunc,int scanflags);\nextern void emptyhashtable (HashTable ht);\n\n\n\nextern HashTable cmdnamtab;\nextern char**pathchecked;\nextern void createcmdnamtable (void);\nextern void hashdir (char**dirp);\nextern HashTable shfunctab;\nextern void createshfunctable (void);\nextern HashTable reswdtab;\nextern void createreswdtable (void);\nextern HashTable aliastab;\nextern HashTable sufaliastab;\nextern void createaliastable (HashTable ht);\nextern void createaliastables (void);\nextern Alias createaliasnode (char*txt,int flags);\nextern void createhisttable (void);\nextern unsigned histhasher (const char*str);\nextern void emptyhisttable (HashTable ht);\nextern int histstrcmp (const char*str1,const char*str2);\nextern void addhistnode (HashTable ht,char*nam,void*nodeptr);\nextern void freehistnode (HashNode nodeptr);\nextern void freehistdata (Histent he,int unlink);\n// # 40 \"zsh.mdh\" 2\n// # 1 \"hashnameddir.epro\" 1\n\n\n\n\nextern HashTable nameddirtab;\nextern void createnameddirtable (void);\n// # 41 \"zsh.mdh\" 2\n// # 1 \"hist.epro\" 1\n\n\n\n\nextern int(*hgetc)(void);\nextern void(*hungetc)(int);\nextern void(*hwaddc)(int);\nextern void(*hwbegin)(int);\nextern void(*hwend)(void);\nextern void(*addtoline)(int);\nextern int stophist;\nextern int expanding;\nextern int excs;\nextern int exlast;\nextern zlong curhist;\nextern struct histent curline;\nextern zlong histlinect;\nextern HashTable histtab;\nextern Histent hist_ring;\nextern zlong histsiz;\nextern zlong savehistsiz;\nextern int histdone;\nextern int histactive;\nextern int hist_ignore_all_dups;\nextern int hist_skip_flags;\nextern short*chwords;\nextern int chwordlen;\nextern int chwordpos;\nextern char*hsubl;\nextern char*hsubr;\nextern char*hptr;\nextern char*chline;\nextern char*zle_chline;\nextern int qbang;\nextern int hlinesz;\nextern void iaddtoline (int c);\nextern void herrflush (void);\nextern void strinbeg (int dohist);\nextern void strinend (void);\nextern void hbegin (int dohist);\nextern void histreduceblanks (void);\nextern void histremovedups (void);\nextern zlong addhistnum (zlong hl,int n,int xflags);\nextern Histent movehistent (Histent he,int n,int xflags);\nextern Histent up_histent (Histent he);\nextern Histent down_histent (Histent he);\nextern Histent gethistent (zlong ev,int nearmatch);\nextern Histent prepnexthistent (void);\nextern int hend (Eprog prog);\nextern int hwgetword;\nextern void ihwbegin (int offset);\nextern void ihwend (void);\nextern void histbackword (void);\nextern void hwrep (char*rep);\nextern char*hgetline (void);\nextern zlong hcomsearch (char*str);\nextern int chabspath (char**junkptr);\nextern int chrealpath (char**junkptr);\nextern int remtpath (char**junkptr);\nextern int remtext (char**junkptr);\nextern int rembutext (char**junkptr);\nextern int remlpaths (char**junkptr);\nextern char*casemodify (char*str,int how);\nextern int subst (char**strptr,char*in,char*out,int gbal);\nextern void checkcurline (Histent he);\nextern Histent quietgethist (int ev);\nextern int quote (char**tr);\nextern void inithist (void);\nextern void resizehistents (void);\nextern void readhistfile (char*fn,int err,int readflags);\nextern void savehistfile (char*fn,int err,int writeflags);\nextern int lockhistfile (char*fn,int keep_trying);\nextern void unlockhistfile (char*fn);\nextern int histfileIsLocked (void);\nextern LinkList bufferwords (LinkList list,char*buf,int*index,int flags);\nextern void histsplitwords (char*lineptr,short**wordsp,int*nwordsp,int*nwordposp,int uselex);\nextern int pushhiststack (char*hf,zlong hs,zlong shs,int level);\nextern int pophiststack (void);\nextern int saveandpophiststack (int pop_through,int writeflags);\n// # 42 \"zsh.mdh\" 2\n// # 1 \"init.epro\" 1\n\n\n\n\nextern int noexitct;\nextern char*zunderscore;\nextern int underscorelen;\nextern int underscoreused;\nextern int sourcelevel;\nextern int SHTTY;\nextern FILE*shout;\nextern char*tcstr[34];\nextern int tclen[34];\nextern int tclines;\nextern int tccolumns;\nextern int hasam;\nextern int hasxn;\nextern int tccolours;\nextern sigset_t sigchld_mask;\nextern struct hookdef zshhooks[];\nextern enum loop_return loop (int toplevel,int justonce);\nextern char*parseopts (char*nam,char***argvp);\nextern void init_io (void);\nextern void init_shout (void);\nextern char*tccap_get_name (int cap);\nextern int init_term (void);\nextern void setupvals (void);\nextern void init_signals (void);\nextern void run_init_scripts (void);\nextern void init_misc (void);\nextern enum source_return source (char*s);\nextern void sourcehome (char*s);\nextern void init_bltinmods (void);\nextern void noop_function (void);\nextern void noop_function_int (int nothing __attribute__((__unused__)));\nextern ZleEntryPoint zle_entry_ptr;\nextern int zle_load_state;\nextern char * zleentry(int cmd, ...);\nextern CompctlReadFn compctlreadptr;\nextern int fallback_compctlread (char*name,char**args __attribute__((__unused__)),Options ops __attribute__((__unused__)),char*reply __attribute__((__unused__)));\nextern int use_exit_printed;\nextern int zsh_main (int argc __attribute__((__unused__)),char**argv);\n// # 43 \"zsh.mdh\" 2\n// # 1 \"input.epro\" 1\n\n\n\n\nextern int SHIN;\nextern FILE*bshin;\nextern int strin;\nextern int inbufct;\nextern int inbufflags;\nextern char*shingetline (void);\nextern int ingetc (void);\nextern void inungetc (int c);\nextern int stuff (char*fn);\nextern void inerrflush (void);\nextern void inpush (char*str,int flags,Alias inalias);\nextern void inpop (void);\nextern void inpopalias (void);\nextern char*ingetptr (void);\n// # 44 \"zsh.mdh\" 2\n// # 1 \"jobs.epro\" 1\n\n\n\n\nextern pid_t origpgrp;\nextern pid_t mypgrp;\nextern int thisjob;\nextern int curjob;\nextern int prevjob;\nextern struct job*jobtab;\nextern int jobtabsize;\nextern int maxjob;\n\n\n\nextern int ttyfrozen;\nextern int prev_errflag;\nextern int prev_breaks;\nextern int errbrk_saved;\nextern int numpipestats;\nextern int pipestats[256];\nextern long lastpid_status;\nextern void makerunning (Job jn);\nextern int findproc (pid_t pid,Job*jptr,Process*pptr,int aux);\nextern int hasprocs (int job);\nextern void get_usage (void);\nextern void update_process (Process pn,int status);\nextern void check_cursh_sig (int sig);\nextern void update_job (Job jn);\n\n\nextern int printjob (Job jn,int lng,int synch);\nextern void deletefilelist (LinkList file_list,int disowning);\nextern void freejob (Job jn,int deleting);\nextern void deletejob (Job jn,int disowning);\nextern void addproc (pid_t pid,char*text,int aux,struct timeval*bgtime);\nextern int havefiles (void);\nextern int waitforpid (pid_t pid,int wait_cmd);\nextern void waitjobs (void);\nextern void clearjobtab (int monitor);\nextern int initjob (void);\nextern void setjobpwd (void);\nextern void spawnjob (void);\nextern void shelltime (void);\nextern void scanjobs (void);\nextern int getjob (const char*s,const char*prog);\nextern void init_jobs (char**argv,char**envp);\nextern int expandjobtab (void);\nextern void maybeshrinkjobtab (void);\nextern int bin_fg (char*name,char**argv,Options ops,int func);\nextern int bin_kill (char*nam,char**argv,Options ops __attribute__((__unused__)),int func __attribute__((__unused__)));\nextern int getsignum (const char*s);\nextern const char*getsigname (int sig);\nextern HashNode gettrapnode (int sig,int ignoredisable);\nextern void removetrapnode (int sig);\nextern int bin_suspend (char*name,char**argv __attribute__((__unused__)),Options ops,int func __attribute__((__unused__)));\nextern int findjobnam (const char*s);\nextern void acquire_pgrp (void);\nextern void release_pgrp (void);\n// # 45 \"zsh.mdh\" 2\n// # 1 \"lex.epro\" 1\n\n\n\n\nextern char ztokens[];\nextern char*zshlextext;\nextern char*tokstr;\nextern int tok;\nextern int tokfd;\nextern zlong toklineno;\nextern int lexstop;\nextern int isfirstln;\nextern int isfirstch;\nextern int inalmore;\nextern int nocorrect;\nextern int zlemetacs;\nextern int zlemetall;\nextern int inwhat;\nextern int addedx;\nextern int wb;\nextern int we;\nextern int noaliases;\nextern int lexflags;\nextern int wordbeg;\nextern int parbegin;\nextern int parend;\nextern int nocomments;\nextern char*tokstrings[WHILE+1];\nextern void lexsave (void);\nextern void lexrestore (void);\nextern void zshlex (void);\nextern void ctxtlex (void);\nextern void initlextabs (void);\nextern void lexinit (void);\nextern void add (int c);\nextern int parsestr (char*s);\nextern int parsestrnoerr (char*s);\nextern char*parse_subscript (char*s,int sub,int endchar);\nextern int parse_subst_string (char*s);\nextern void gotword (void);\nextern int exalias (void);\n// # 46 \"zsh.mdh\" 2\n// # 1 \"linklist.epro\" 1\n\n\n\n\nextern LinkList newlinklist (void);\nextern LinkList znewlinklist (void);\nextern LinkNode insertlinknode (LinkList list,LinkNode node,void*dat);\nextern LinkNode zinsertlinknode (LinkList list,LinkNode node,void*dat);\nextern LinkNode uinsertlinknode (LinkList list,LinkNode node,LinkNode new);\nextern void insertlinklist (LinkList l,LinkNode where,LinkList x);\nextern void*getlinknode (LinkList list);\nextern void*ugetnode (LinkList list);\nextern void*remnode (LinkList list,LinkNode nd);\nextern void*uremnode (LinkList list,LinkNode nd);\nextern void freelinklist (LinkList list,FreeFunc freefunc);\nextern int countlinknodes (LinkList list);\nextern void rolllist (LinkList l,LinkNode nd);\nextern LinkList newsizedlist (int size);\nextern LinkNode linknodebydatum (LinkList list,void*dat);\nextern LinkNode linknodebystring (LinkList list,char*dat);\nextern char**hlinklist2array (LinkList list,int copy);\nextern char**zlinklist2array (LinkList list);\n// # 47 \"zsh.mdh\" 2\n// # 1 \"loop.epro\" 1\n\n\n\n\nextern int loops;\nextern int contflag;\nextern int breaks;\nextern int execfor (Estate state,int do_exec);\nextern int execselect (Estate state,int do_exec __attribute__((__unused__)));\nextern size_t selectlist (LinkList l,size_t start);\nextern int execwhile (Estate state,int do_exec __attribute__((__unused__)));\nextern int execrepeat (Estate state,int do_exec __attribute__((__unused__)));\nextern int execif (Estate state,int do_exec);\nextern int execcase (Estate state,int do_exec);\nextern zlong try_errflag;\nextern zlong try_tryflag;\nextern int exectry (Estate state,int do_exec);\n// # 48 \"zsh.mdh\" 2\n// # 1 \"math.epro\" 1\n\n\n\n\nextern int noeval;\nextern mnumber zero_mnumber;\nextern mnumber lastmathval;\nextern int lastbase;\nextern int outputradix;\nextern void op (int what);\nextern mnumber matheval (char*s);\nextern zlong mathevali (char*s);\nextern zlong mathevalarg (char*s,char**ss);\n// # 49 \"zsh.mdh\" 2\n// # 1 \"mem.epro\" 1\n\n\n\n\n\n\n\nextern Heap new_heaps (void);\nextern void old_heaps (Heap old);\nextern Heap switch_heaps (Heap new);\nextern void pushheap (void);\nextern void freeheap (void);\nextern void popheap (void);\nextern void*zheapptr (void*p);\nextern void*zhalloc (size_t size);\nextern void*hrealloc (char*p,size_t old,size_t new);\n\n\n\nextern void*hcalloc (size_t size);\nextern void*zalloc (size_t size);\nextern void*zshcalloc (size_t size);\nextern void*zrealloc (void*ptr,size_t size);\n\n\n\n\n\nextern void zfree (void*p,int sz __attribute__((__unused__)));\nextern void zsfree (char*p);\n// # 50 \"zsh.mdh\" 2\n// # 1 \"module.epro\" 1\n\n\n\n\nextern LinkList linkedmodules;\nextern char**module_path;\nextern HashTable modulestab;\nextern HashTable newmoduletable (int size,char const*name);\nextern int setup_zshQsmain (Module m __attribute__((__unused__)));\nextern int features_zshQsmain (Module m __attribute__((__unused__)),char***features __attribute__((__unused__)));\nextern int enables_zshQsmain (Module m __attribute__((__unused__)),int**enables __attribute__((__unused__)));\nextern int boot_zshQsmain (Module m __attribute__((__unused__)));\nextern int cleanup_zshQsmain (Module m __attribute__((__unused__)));\nextern int finish_zshQsmain (Module m __attribute__((__unused__)));\nextern void register_module (char*n,Module_void_func setup,Module_features_func features,Module_enables_func enables,Module_void_func boot,Module_void_func cleanup,Module_void_func finish);\nextern Linkedmod module_linked (char const*name);\nextern int deletebuiltin (const char*nam);\nextern int addbuiltins (char const*nam,Builtin binl,int size);\nextern FuncWrap wrappers;\nextern int addwrapper (Module m,FuncWrap w);\nextern int deletewrapper (Module m,FuncWrap w);\nextern Conddef condtab;\nextern Conddef getconddef (int inf,const char*name,int autol);\nextern int deleteconddef (Conddef c);\nextern Hookdef hooktab;\nextern Hookdef gethookdef (char*n);\nextern int addhookdef (Hookdef h);\nextern int addhookdefs (Module m,Hookdef h,int size);\nextern int deletehookdef (Hookdef h);\nextern int deletehookdefs (Module m __attribute__((__unused__)),Hookdef h,int size);\nextern int addhookdeffunc (Hookdef h,Hookfn f);\nextern int addhookfunc (char*n,Hookfn f);\nextern int deletehookdeffunc (Hookdef h,Hookfn f);\nextern int deletehookfunc (char*n,Hookfn f);\nextern int runhookdef (Hookdef h,void*d);\nextern int addparamdef (Paramdef d);\nextern int deleteparamdef (Paramdef d);\nextern MathFunc mathfuncs;\nextern void removemathfunc (MathFunc previous,MathFunc current);\nextern MathFunc getmathfunc (const char*name,int autol);\nextern int deletemathfunc (MathFunc f);\n// # 50 \"module.epro\"\nextern int module_loaded (const char*name);\n\n\n\n\n\n\nextern int load_module (char const*name,Feature_enables enablesarr,int silent);\nextern int require_module (const char*module,Feature_enables features);\nextern void add_dep (const char*name,char*from);\nextern int bin_zmodload (char*nam,char**args,Options ops,int func __attribute__((__unused__)));\nextern int unload_module (Module m);\nextern int unload_named_module (char*modname,char*nam,int silent);\nextern char**featuresarray (Module m __attribute__((__unused__)),Features f);\nextern int*getfeatureenables (Module m __attribute__((__unused__)),Features f);\nextern int setfeatureenables (Module m,Features f,int*e);\nextern int handlefeatures (Module m,Features f,int**enables);\nextern int ensurefeature (const char*modname,const char*prefix,const char*feature);\nextern int autofeatures (const char*cmdnam,const char*module,char**features,int prefchar,int defflags);\n// # 51 \"zsh.mdh\" 2\n// # 1 \"options.epro\" 1\n\n\n\n\nextern int emulation;\nextern int sticky_emulation;\nextern char opts[OPT_SIZE];\nextern HashTable optiontab;\nextern void createoptiontable (void);\nextern void installemulation (void);\nextern void emulate (const char*zsh_name,int fully);\nextern int bin_setopt (char*nam,char**args,Options ops __attribute__((__unused__)),int isun);\nextern int optlookup (char const*name);\nextern int optlookupc (char c);\nextern int dosetopt (int optno,int value,int force);\nextern char*dashgetfn (Param pm __attribute__((__unused__)));\nextern void printoptionstates (int hadplus);\nextern void printoptionlist (void);\n// # 52 \"zsh.mdh\" 2\n// # 1 \"params.epro\" 1\n\n\n\n\nextern int locallevel;\nextern char**pparams;\nextern char**cdpath;\nextern char**fpath;\nextern char**mailpath;\nextern char**manpath;\nextern char**psvar;\nextern char**watch;\nextern char**zsh_eval_context;\nextern char**path;\nextern char**fignore;\nextern char*argzero;\nextern char*home;\nextern char*nullcmd;\nextern char*oldpwd;\nextern char*zoptarg;\nextern char*prompt;\nextern char*prompt2;\nextern char*prompt3;\nextern char*prompt4;\nextern char*readnullcmd;\nextern char*rprompt;\nextern char*rprompt2;\nextern char*sprompt;\nextern char*wordchars;\nextern char*zsh_name;\nextern char*ifs;\nextern char*postedit;\nextern char*term;\nextern char*zsh_terminfo;\nextern char*ttystrname;\nextern char*pwd;\nextern zlong lastval;\nextern zlong mypid;\nextern zlong lastpid;\nextern zlong zterm_columns;\nextern zlong zterm_lines;\nextern zlong ppid;\nextern zlong zsh_subshell;\nextern zlong lineno;\nextern zlong zoptind;\nextern zlong shlvl;\nextern unsigned char bangchar;\nextern unsigned char hatchar;\nextern unsigned char hashchar;\nextern unsigned char keyboardhackchar;\nextern struct timeval shtimer;\nextern int termflags;\nextern const struct gsu_scalar stdscalar_gsu;\nextern const struct gsu_scalar varscalar_gsu;\nextern const struct gsu_scalar nullsetscalar_gsu;\nextern const struct gsu_integer stdinteger_gsu;\nextern const struct gsu_integer varinteger_gsu;\nextern const struct gsu_integer nullsetinteger_gsu;\nextern const struct gsu_float stdfloat_gsu;\nextern const struct gsu_array stdarray_gsu;\nextern const struct gsu_array vararray_gsu;\nextern const struct gsu_hash stdhash_gsu;\nextern const struct gsu_hash nullsethash_gsu;\nextern HashTable paramtab;\nextern HashTable realparamtab;\nextern HashTable newparamtable (int size,char const*name);\nextern HashTable copyparamtable (HashTable ht,char*name);\nextern void deleteparamtable (HashTable t);\nextern void scancountparams (HashNode hn __attribute__((__unused__)),int flags);\nextern char**paramvalarr (HashTable ht,int flags);\nextern void createparamtable (void);\nextern void assigngetset (Param pm);\nextern Param createparam (char*name,int flags);\nextern Param createspecialhash (char*name,GetNodeFunc get,ScanTabFunc scan,int flags);\nextern void copyparam (Param tpm,Param pm,int fakecopy);\nextern int isident (char*s);\nextern int getindex (char**pptr,Value v,int flags);\nextern Value getvalue (Value v,char**pptr,int bracks);\nextern Value fetchvalue (Value v,char**pptr,int bracks,int flags);\nextern char*getstrvalue (Value v);\nextern char**getarrvalue (Value v);\nextern zlong getintvalue (Value v);\nextern mnumber getnumvalue (Value v);\nextern void export_param (Param pm);\nextern void setstrvalue (Value v,char*val);\nextern void setnumvalue (Value v,mnumber val);\nextern void setarrvalue (Value v,char**val);\nextern zlong getiparam (char*s);\nextern mnumber getnparam (char*s);\nextern char*getsparam (char*s);\nextern char**getaparam (char*s);\nextern char**gethparam (char*s);\nextern char**gethkparam (char*s);\nextern Param assignsparam (char*s,char*val,int flags);\nextern Param assignaparam (char*s,char**val,int flags);\nextern Param sethparam (char*s,char**val);\nextern Param setnparam (char*s,mnumber val);\nextern Param setiparam (char*s,zlong val);\nextern void unsetparam (char*s);\nextern int unsetparam_pm (Param pm,int altflag,int exp);\nextern void stdunsetfn (Param pm,int exp __attribute__((__unused__)));\nextern zlong intgetfn (Param pm);\nextern char*strgetfn (Param pm);\nextern void strsetfn (Param pm,char*x);\nextern char**arrgetfn (Param pm);\nextern void arrsetfn (Param pm,char**x);\nextern HashTable hashgetfn (Param pm);\nextern void hashsetfn (Param pm,HashTable x);\nextern void nullsethashfn (Param pm __attribute__((__unused__)),HashTable x);\nextern void arrhashsetfn (Param pm,char**val,int augment);\nextern void nullstrsetfn (Param pm __attribute__((__unused__)),char*x);\nextern void nullintsetfn (Param pm __attribute__((__unused__)),zlong x __attribute__((__unused__)));\nextern void nullunsetfn (Param pm __attribute__((__unused__)),int exp __attribute__((__unused__)));\nextern zlong intvargetfn (Param pm);\nextern void intvarsetfn (Param pm,zlong x);\nextern void zlevarsetfn (Param pm,zlong x);\nextern void strvarsetfn (Param pm,char*x);\nextern char*strvargetfn (Param pm);\nextern char**arrvargetfn (Param pm);\nextern void arrvarsetfn (Param pm,char**x);\nextern char*colonarrgetfn (Param pm);\nextern void colonarrsetfn (Param pm,char*x);\nextern char*tiedarrgetfn (Param pm);\nextern void tiedarrsetfn (Param pm,char*x);\nextern void tiedarrunsetfn (Param pm,int exp __attribute__((__unused__)));\nextern HashTable newuniqtable (zlong size);\nextern void uniqarray (char**x);\nextern void zhuniqarray (char**x);\nextern zlong poundgetfn (Param pm __attribute__((__unused__)));\nextern zlong randomgetfn (Param pm __attribute__((__unused__)));\nextern void randomsetfn (Param pm __attribute__((__unused__)),zlong v);\nextern zlong intsecondsgetfn (Param pm __attribute__((__unused__)));\nextern void intsecondssetfn (Param pm __attribute__((__unused__)),zlong x);\nextern double floatsecondsgetfn (Param pm __attribute__((__unused__)));\nextern void floatsecondssetfn (Param pm __attribute__((__unused__)),double x);\nextern double getrawseconds (void);\nextern void setrawseconds (double x);\nextern int setsecondstype (Param pm,int on,int off);\nextern char*usernamegetfn (Param pm __attribute__((__unused__)));\nextern void usernamesetfn (Param pm __attribute__((__unused__)),char*x);\nextern zlong uidgetfn (Param pm __attribute__((__unused__)));\nextern void uidsetfn (Param pm __attribute__((__unused__)),zlong x);\nextern zlong euidgetfn (Param pm __attribute__((__unused__)));\nextern void euidsetfn (Param pm __attribute__((__unused__)),zlong x);\nextern zlong gidgetfn (Param pm __attribute__((__unused__)));\nextern void gidsetfn (Param pm __attribute__((__unused__)),zlong x);\nextern zlong egidgetfn (Param pm __attribute__((__unused__)));\nextern void egidsetfn (Param pm __attribute__((__unused__)),zlong x);\nextern zlong ttyidlegetfn (Param pm __attribute__((__unused__)));\nextern char*ifsgetfn (Param pm __attribute__((__unused__)));\nextern void ifssetfn (Param pm __attribute__((__unused__)),char*x);\nextern void lc_allsetfn (Param pm,char*x);\nextern void langsetfn (Param pm,char*x);\nextern void lcsetfn (Param pm,char*x);\nextern zlong histsizegetfn (Param pm __attribute__((__unused__)));\nextern void histsizesetfn (Param pm __attribute__((__unused__)),zlong v);\nextern zlong savehistsizegetfn (Param pm __attribute__((__unused__)));\nextern void savehistsizesetfn (Param pm __attribute__((__unused__)),zlong v);\nextern void errnosetfn (Param pm __attribute__((__unused__)),zlong x);\nextern zlong errnogetfn (Param pm __attribute__((__unused__)));\nextern char*keyboardhackgetfn (Param pm __attribute__((__unused__)));\nextern void keyboardhacksetfn (Param pm __attribute__((__unused__)),char*x);\nextern char*histcharsgetfn (Param pm __attribute__((__unused__)));\nextern void histcharssetfn (Param pm __attribute__((__unused__)),char*x);\nextern char*homegetfn (Param pm __attribute__((__unused__)));\nextern void homesetfn (Param pm __attribute__((__unused__)),char*x);\nextern char*wordcharsgetfn (Param pm __attribute__((__unused__)));\nextern void wordcharssetfn (Param pm __attribute__((__unused__)),char*x);\nextern char*underscoregetfn (Param pm __attribute__((__unused__)));\nextern char*termgetfn (Param pm __attribute__((__unused__)));\nextern void termsetfn (Param pm __attribute__((__unused__)),char*x);\nextern char*terminfogetfn (Param pm __attribute__((__unused__)));\nextern void terminfosetfn (Param pm,char*x);\nextern void arrfixenv (char*s,char**t);\nextern int zputenv (char*str);\n\n\nextern char*zgetenv (char*name);\nextern void addenv (Param pm,char*value);\nextern void delenvvalue (char*x);\nextern void delenv (Param pm);\nextern void convbase (char*s,zlong v,int base);\nextern char*convfloat (double dval,int digits,int flags,FILE*fout);\nextern void startparamscope (void);\nextern void endparamscope (void);\nextern void freeparamnode (HashNode hn);\nextern void printparamnode (HashNode hn,int printflags);\n// # 53 \"zsh.mdh\" 2\n// # 1 \"parse.epro\" 1\n\n\n\n\nextern int incmdpos;\nextern int aliasspaceflag;\nextern int incond;\nextern int inredir;\nextern int incasepat;\nextern int isnewlin;\nextern int infor;\nextern struct heredocs*hdocs;\nextern int eclen;\nextern int ecused;\nextern int ecnpats;\nextern Wordcode ecbuf;\nextern Eccstr ecstrs;\nextern int ecsoffs;\nextern int ecssub;\nextern int ecnfunc;\nextern int empty_eprog (Eprog p);\nextern Eprog parse_event (void);\nextern Eprog parse_list (void);\nextern Eprog parse_cond (void);\nextern void setheredoc (int pc,int type,char*str,char*termstr,char*munged_termstr);\nextern void(*condlex)(void);\nextern Eprog dupeprog (Eprog p,int heap);\nextern void useeprog (Eprog p);\nextern void freeeprog (Eprog p);\nextern char*ecgetstr (Estate s,int dup,int*tok);\nextern char*ecrawstr (Eprog p,Wordcode pc,int*tok);\nextern char**ecgetarr (Estate s,int num,int dup,int*tok);\nextern LinkList ecgetlist (Estate s,int num,int dup,int*tok);\nextern LinkList ecgetredirs (Estate s);\nextern struct eprog dummy_eprog;\nextern void init_eprog (void);\nextern int bin_zcompile (char*nam,char**args,Options ops,int func __attribute__((__unused__)));\n\n\n\n\n\n\n\nextern Eprog try_dump_file (char*path,char*name,char*file,int*ksh);\nextern Eprog try_source_file (char*file);\nextern void incrdumpcount (FuncDump f);\nextern void decrdumpcount (FuncDump f);\nextern void closedumps (void);\nextern void closedumps (void);\nextern int dump_autoload (char*nam,char*file,int on,Options ops,int func);\n// # 54 \"zsh.mdh\" 2\n// # 1 \"pattern.epro\" 1\n\n\n\n\nextern void patcompstart (void);\nextern Patprog patcompile (char*exp,int inflags,char**endexp);\nextern int patgetglobflags (char**strp,long*assertp,int*ignore);\nextern int range_type (char*start,int len);\nextern int pattern_range_to_string (char*rangestr,char*outstr);\nextern int errsfound;\nextern int forceerrs;\nextern void pattrystart (void);\nextern int pattry (Patprog prog,char*string);\nextern int pattrylen (Patprog prog,char*string,int len,int unmetalen,int offset);\nextern int pattryrefs (Patprog prog,char*string,int stringlen,int unmetalen,int patoffset,int*nump,int*begp,int*endp);\nextern int patmatchlen (void);\n\nextern int mb_patmatchrange (char*range,wchar_t ch,wint_t*indptr,int*mtp);\nextern int mb_patmatchindex (char*range,wint_t ind,wint_t*chr,int*mtp);\n\nextern int patmatchrange (char*range,int ch,int*indptr,int*mtp);\n\n\n\nextern void freepatprog (Patprog prog);\n// # 55 \"zsh.mdh\" 2\n// # 1 \"prompt.epro\" 1\n\n\n\n\nextern unsigned txtattrmask;\nextern unsigned char*cmdstack;\nextern int cmdsp;\nextern char*promptexpand (char*s,int ns,char*rs,char*Rs,unsigned int*txtchangep);\nextern void stradd (char*d);\nextern void tsetcap (int cap,int flags);\nextern int putstr (int d);\nextern void countprompt (char*str,int*wp,int*hp,int overf);\nextern void cmdpush (int cmdtok);\nextern void cmdpop (void);\nextern int match_colour (const char**teststrp,int is_fg,int colour);\nextern void match_highlight (const char*teststr,int*on_var);\nextern int output_highlight (int atr,char*buf);\nextern void set_default_colour_sequences (void);\nextern void allocate_colour_buffer (void);\nextern void free_colour_buffer (void);\nextern void set_colour_attribute (int atr,int fg_bg,int flags);\n// # 56 \"zsh.mdh\" 2\n// # 1 \"signals.epro\" 1\n\n\n\n\nextern int sigtrapped[(31 +3)];\nextern Eprog siglists[(31 +3)];\nextern int nsigtrapped;\nextern int queueing_enabled;\nextern int queue_front;\nextern int queue_rear;\nextern int signal_queue[128];\nextern sigset_t signal_mask_queue[128];\nextern int trap_queueing_enabled;\nextern int trap_queue_front;\nextern int trap_queue_rear;\nextern int trap_queue[128];\nextern void install_handler (int sig);\nextern void intr (void);\nextern void holdintr (void);\nextern void noholdintr (void);\nextern sigset_t signal_mask (int sig);\n\n\nextern sigset_t signal_setmask (sigset_t set);\nextern int signal_suspend (int sig __attribute__((__unused__)),int wait_cmd);\nextern int last_signal;\nextern void wait_for_processes (void);\nextern void zhandler (int sig);\nextern void killrunjobs (int from_signal);\nextern int killjb (Job jn,int sig);\nextern int settrap (int sig,Eprog l,int flags);\nextern void unsettrap (int sig);\nextern HashNode removetrap (int sig);\nextern void starttrapscope (void);\nextern void endtrapscope (void);\nextern void queue_traps (int wait_cmd);\nextern void unqueue_traps (void);\nextern int intrap;\nextern int trapisfunc;\nextern int traplocallevel;\nextern void dotrap (int sig);\n// # 57 \"zsh.mdh\" 2\n// # 1 \"signames.epro\" 1\n\n\n\n\n\nextern char*sig_msg[31 +2];\nextern char*sigs[31 +4];\n// # 58 \"zsh.mdh\" 2\n// # 1 \"sort.epro\" 1\n\n\n\n\nextern int zstrcmp (const char*as,const char*bs,int sortflags);\nextern void strmetasort (char**array,int sortwhat,int*unmetalenp);\n// # 59 \"zsh.mdh\" 2\n// # 1 \"string.epro\" 1\n\n\n\n\nextern char*dupstring (const char*s);\nextern char*ztrdup (const char*s);\n\nextern wchar_t*wcs_ztrdup (const wchar_t*s);\n\nextern char*tricat (char const*s1,char const*s2,char const*s3);\nextern char*zhtricat (char const*s1,char const*s2,char const*s3);\nextern char*dyncat (const char*s1,const char*s2);\nextern char*bicat (const char*s1,const char*s2);\nextern char*dupstrpfx (const char*s,int len);\nextern char*ztrduppfx (const char*s,int len);\nextern char*appstr (char*base,char const*append);\nextern char*strend (char*str);\n// # 60 \"zsh.mdh\" 2\n// # 1 \"subst.epro\" 1\n\n\n\n\nextern char nulstring[];\nextern void prefork (LinkList list,int flags);\nextern char*quotesubst (char*str);\nextern void globlist (LinkList list,int nountok);\nextern void singsub (char**s);\nextern void filesub (char**namptr,int assign);\nextern char*equalsubstr (char*str,int assign,int nomatch);\nextern int filesubstr (char**namptr,int assign);\nextern char*get_strarg (char*s,int*lenp);\nextern void modify (char**str,char**ptr);\n// # 61 \"zsh.mdh\" 2\n// # 1 \"text.epro\" 1\n\n\n\n\nextern char*getpermtext (Eprog prog,Wordcode c,int start_indent);\nextern char*getjobtext (Eprog prog,Wordcode c);\nextern void getredirs (LinkList redirs);\n// # 62 \"zsh.mdh\" 2\n// # 1 \"utils.epro\" 1\n\n\n\n\nextern char*scriptname;\nextern char*scriptfilename;\nextern int incompfunc;\nextern void zerr(const char *fmt, ...);\nextern void zerrnam(const char *cmd, const char *fmt, ...);\nextern void zwarn(const char *fmt, ...);\nextern void zwarnnam(const char *cmd, const char *fmt, ...);\nextern void dputs(const char *message, ...);\nextern void zerrmsg (FILE*file,const char*fmt,va_list ap);\nextern int putraw (int c);\nextern int putshout (int c);\nextern char*nicechar (int c);\n\nextern void mb_metacharinit (void);\nextern char*wcs_nicechar (wchar_t c,size_t*widthp,char**swidep);\nextern int zwcwidth (wint_t wc);\n\nextern char*pathprog (char*prog,char**namep);\nextern char*findpwd (char*s);\nextern int ispwd (char*s);\nextern char*xsymlink (char*s);\nextern void print_if_link (char*s);\nextern void fprintdir (char*s,FILE*f);\nextern char*substnamedir (char*s);\nextern uid_t cached_uid;\nextern char*cached_username;\nextern char*get_username (void);\nextern Nameddir finddir (char*s);\nextern void adduserdir (char*s,char*t,int flags,int always);\nextern char*getnameddir (char*name);\nextern void addprepromptfn (voidvoidfnptr_t func);\nextern void delprepromptfn (voidvoidfnptr_t func);\nextern LinkList timedfns;\nextern void addtimedfn (voidvoidfnptr_t func,time_t when);\nextern void deltimedfn (voidvoidfnptr_t func);\nextern time_t lastmailcheck;\nextern time_t lastwatch;\nextern int callhookfunc (char*name,LinkList lnklst,int arrayp,int*retval);\nextern void preprompt (void);\nextern FILE*xtrerr;\nextern void printprompt4 (void);\nextern void freestr (void*a);\nextern void gettyinfo (struct ttyinfo*ti);\nextern void settyinfo (struct ttyinfo*ti);\nextern struct ttyinfo shttyinfo;\nextern int resetneeded;\nextern int winchanged;\nextern void adjustwinsize (int from);\nextern int movefd (int fd);\nextern int redup (int x,int y);\nextern void addlockfd (int fd,int cloexec);\nextern int zclose (int fd);\nextern int zcloselockfd (int fd);\nextern char*gettempname (const char*prefix,int use_heap);\nextern int gettempfile (const char*prefix,int use_heap,char**tempname);\nextern int has_token (const char*s);\nextern void chuck (char*str);\nextern int tulower (int c);\nextern int tuupper (int c);\nextern void ztrncpy (char*s,char*t,int len);\nextern void strucpy (char**s,char*t);\nextern void struncpy (char**s,char*t,int n);\nextern int arrlen (char**s);\nextern int skipparens (char inpar,char outpar,char**s);\nextern zlong zstrtol (const char*s,char**t,int base);\nextern int setblock_fd (int turnonblocking,int fd,long*modep);\nextern int setblock_stdin (void);\nextern int read_poll (int fd,int*readchar,int polltty,zlong microseconds);\nextern int checkrmall (char*s);\nextern ssize_t read_loop (int fd,char*buf,size_t len);\nextern ssize_t write_loop (int fd,const char*buf,size_t len);\nextern int noquery (int purge);\nextern int getquery (char*valid_chars,int purge);\nextern void spckword (char**s,int hist,int cmd,int ask);\nextern int ztrftime (char*buf,int bufsize,char*fmt,struct tm*tm);\nextern char*zjoin (char**arr,int delim,int heap);\nextern char**colonsplit (char*s,int uniq);\nextern char**spacesplit (char*s,int allownull,int heap,int quote);\nextern char*findword (char**s,char*sep);\nextern int wordcount (char*s,char*sep,int mul);\nextern char*sepjoin (char**s,char*sep,int heap);\nextern char**sepsplit (char*s,char*sep,int allownull,int heap);\nextern Shfunc getshfunc (char*nam);\nextern char**subst_string_by_func (Shfunc func,char*arg1,char*orig);\nextern char**subst_string_by_hook (char*name,char*arg1,char*orig);\nextern char**mkarray (char*s);\nextern void zbeep (void);\nextern void freearray (char**s);\nextern int equalsplit (char*s,char**t);\nextern short int typtab[256];\nextern void inittyptab (void);\nextern void makecommaspecial (int yesno);\n\nextern int wcsiblank (wint_t wc);\nextern int wcsitype (wchar_t c,int itype);\n\nextern char*itype_end (const char*ptr,int itype,int once);\nextern char**arrdup (char**s);\nextern char**zarrdup (char**s);\n\nextern wchar_t**wcs_zarrdup (wchar_t**s);\n\nextern void setcbreak (void);\nextern void attachtty (pid_t pgrp);\nextern pid_t gettygrp (void);\nextern char*metafy (char*buf,int len,int heap);\nextern char*ztrdup_metafy (const char*s);\nextern char*unmetafy (char*s,int*len);\nextern int metalen (const char*s,int len);\nextern char*unmeta (const char*file_name);\nextern int ztrcmp (char const*s1,char const*s2);\nextern int ztrlen (char const*s);\nextern int ztrsub (char const*t,char const*s);\nextern char*zreaddir (DIR*dir,int ignoredots);\nextern int zputs (char const*s,FILE*stream);\nextern char*nicedup (char const*s,int heap);\nextern char*nicedupstring (char const*s);\nextern int nicezputs (char const*s,FILE*stream);\nextern size_t niceztrlen (char const*s);\n\nextern size_t mb_niceformat (const char*s,FILE*stream,char**outstrp,int heap);\nextern char*nicedup (const char*s,int heap);\nextern int mb_metacharlenconv_r (const char*s,wint_t*wcp,mbstate_t*mbsp);\nextern int mb_metacharlenconv (const char*s,wint_t*wcp);\nextern int mb_metastrlen (char*ptr,int width);\n\n\n\nextern int hasspecial (char const*s);\nextern char*quotestring (const char*s,char**e,int instring);\nextern int quotedzputs (char const*s,FILE*stream);\nextern char*dquotedztrdup (char const*s);\nextern char*getkeystring (char*s,int*len,int how,int*misc);\nextern int strpfx (const char*s,const char*t);\nextern int strsfx (char*s,char*t);\nextern void init_dirsav (Dirsav d);\nextern int lchdir (char const*path,struct dirsav*d,int hard);\nextern int restoredir (struct dirsav*d);\nextern int privasserted (void);\nextern int mode_to_octal (mode_t mode);\nextern int mailstat (char*path,struct stat*st);\n// # 63 \"zsh.mdh\" 2\n// # 1 \"watch.epro\" 1\n\n\n\n\nextern char const*const default_watchfmt;\nextern void dowatch (void);\nextern int bin_log (char*nam __attribute__((__unused__)),char**argv __attribute__((__unused__)),Options ops __attribute__((__unused__)),int func __attribute__((__unused__)));\nextern void dowatch (void);\nextern int bin_log (char*nam,char**argv,Options ops,int func);\n// # 64 \"zsh.mdh\" 2\n// # 30 \"module.c\" 2\n// # 1 \"module.pro\" 1\n\nstatic int addbuiltin (Builtin b);\nstatic int add_autobin (const char*module,const char*bnam,int flags);\nstatic int del_autobin (const char*module __attribute__((__unused__)),const char*bnam,int flags);\nstatic int setbuiltins (char const*nam,Builtin binl,int size,int*e);\nstatic int addconddef (Conddef c);\nstatic int setconddefs (char const*nam,Conddef c,int size,int*e);\nstatic int add_autocond (const char*module,const char*cnam,int flags);\nstatic int del_autocond (const char*modnam __attribute__((__unused__)),const char*cnam,int flags);\nstatic int setparamdefs (char const*nam,Paramdef d,int size,int*e);\nstatic int add_autoparam (const char*module,const char*pnam,int flags);\nstatic int del_autoparam (const char*modnam __attribute__((__unused__)),const char*pnam,int flags);\nstatic int addmathfunc (MathFunc f);\nstatic int setmathfuncs (char const*nam,MathFunc f,int size,int*e);\nstatic int add_automathfunc (const char*module,const char*fnam,int flags);\nstatic int del_automathfunc (const char*modnam __attribute__((__unused__)),const char*fnam,int flags);\n\n\n\n\n\n\nstatic void*try_load_module (char const*name);\nstatic void*do_load_module (char const*name,int silent);\n\n\n\nstatic Module find_module (const char*name,int flags,const char**namep);\nstatic void delete_module (Module m);\n// # 39 \"module.pro\"\nstatic int dyn_setup_module (Module m);\nstatic int dyn_features_module (Module m,char***features);\nstatic int dyn_enables_module (Module m,int**enables);\nstatic int dyn_boot_module (Module m);\nstatic int dyn_cleanup_module (Module m);\nstatic int dyn_finish_module (Module m);\n\nstatic int setup_module (Module m);\nstatic int features_module (Module m,char***features);\nstatic int enables_module (Module m,int**enables);\nstatic int boot_module (Module m);\nstatic int cleanup_module (Module m);\nstatic int finish_module (Module m);\n// # 60 \"module.pro\"\nstatic int do_module_features (Module m,Feature_enables enablesarr,int flags);\nstatic int do_boot_module (Module m,Feature_enables enablesarr,int silent);\nstatic int do_cleanup_module (Module m);\nstatic int modname_ok (char const*p);\nstatic void autoloadscan (HashNode hn,int printflags);\nstatic int bin_zmodload_alias (char*nam,char**args,Options ops);\nstatic int bin_zmodload_exist (char*nam __attribute__((__unused__)),char**args,Options ops);\nstatic int bin_zmodload_dep (char*nam __attribute__((__unused__)),char**args,Options ops);\nstatic int bin_zmodload_auto (char*nam,char**args,Options ops);\nstatic int bin_zmodload_load (char*nam,char**args,Options ops);\nstatic int bin_zmodload_features (const char*nam,char**args,Options ops);\n// # 31 \"module.c\" 2\n// # 39 \"module.c\"\nLinkList linkedmodules;\n\n\n\n\nchar **module_path;\n\n\n\n\n HashTable modulestab;\n\n\n\n\n\n\nenum {\n\n\n\n\n\n    FEAT_IGNORE = 0x0001,\n\n    FEAT_INFIX = 0x0002,\n\n\n\n\n\n\n    FEAT_AUTOALL = 0x0004,\n\n\n\n\n    FEAT_REMOVE = 0x0008,\n\n\n\n\n    FEAT_CHECKAUTO = 0x0010\n};\n// # 102 \"module.c\"\ntypedef int (*autofeaturefn_t)(const char *module, const char *feature,\n          int flags);\n\n\nenum {\n\n\n\n    FINDMOD_ALIASP = 0x0001,\n\n\n\n\n    FINDMOD_CREATE = 0x0002,\n};\n\nstatic void\nfreemodulenode(HashNode hn)\n{\n    Module m = (Module) hn;\n\n    if (m->node.flags & (1<<6))\n zsfree(m->u.alias);\n    zsfree(m->node.nam);\n    if (m->autoloads)\n freelinklist(m->autoloads, freestr);\n    if (m->deps)\n freelinklist(m->deps, freestr);\n    zfree(m, sizeof(*m));\n}\n\n\nenum {\n\n    PRINTMOD_LIST = 0x0001,\n\n    PRINTMOD_EXIST = 0x0002,\n\n    PRINTMOD_ALIAS = 0x0004,\n\n    PRINTMOD_DEPS = 0x0008,\n\n    PRINTMOD_FEATURES = 0x0010,\n\n    PRINTMOD_LISTALL = 0x0020,\n\n    PRINTMOD_AUTO = 0x0040\n};\n\n\n\nstatic void\nprintmodulenode(HashNode hn, int flags)\n{\n    Module m = (Module)hn;\n\n\n\n\n\n    const char *modname = m->node.nam;\n\n    if (flags & PRINTMOD_DEPS) {\n\n\n\n LinkNode n;\n\n if (!m->deps)\n     return;\n\n if (flags & PRINTMOD_LIST) {\n     printf(\"zmodload -d \");\n     if (modname[0] == '-')\n  fputs(\"-- \", stdout);\n     quotedzputs(modname, stdout);\n } else {\n     (void)mb_niceformat((modname), (stdout), ((void *)0), 0);\n     putchar(':');\n }\n for (n = ((m->deps)->list.first); n; (n = ((n)->next))) {\n     putchar(' ');\n     if (flags & PRINTMOD_LIST)\n  quotedzputs((char *) ((n)->dat), stdout);\n     else\n  (void)mb_niceformat(((char *) ((n)->dat)), (stdout), ((void *)0), 0);\n }\n    } else if (flags & PRINTMOD_EXIST) {\n\n\n\n\n if (m->node.flags & (1<<6)) {\n     if (!(flags & PRINTMOD_ALIAS) ||\n  !(m = find_module(m->u.alias, FINDMOD_ALIASP, ((void *)0))))\n  return;\n }\n if (!m->u.handle || (m->node.flags & (1<<1)))\n     return;\n (void)mb_niceformat((modname), (stdout), ((void *)0), 0);\n   } else if (m->node.flags & (1<<6)) {\n\n\n\n if (flags & PRINTMOD_LIST) {\n     printf(\"zmodload -A \");\n     if (modname[0] == '-')\n  fputs(\"-- \", stdout);\n     quotedzputs(modname, stdout);\n     putchar('=');\n     quotedzputs(m->u.alias, stdout);\n } else {\n     (void)mb_niceformat((modname), (stdout), ((void *)0), 0);\n     fputs(\" -> \", stdout);\n     (void)mb_niceformat((m->u.alias), (stdout), ((void *)0), 0);\n }\n    } else if (m->u.handle || (flags & PRINTMOD_AUTO)) {\n\n\n\n if (flags & PRINTMOD_LIST) {\n\n\n\n\n     char **features = ((void *)0);\n     int *enables = ((void *)0);\n     if (flags & PRINTMOD_AUTO) {\n  if (!m->autoloads || !((m->autoloads)->list.first))\n      return;\n     } else if (flags & PRINTMOD_FEATURES) {\n  if (features_module(m, &features) ||\n      enables_module(m, &enables) ||\n      !*features)\n      return;\n     }\n     printf(\"zmodload \");\n     if (flags & PRINTMOD_AUTO) {\n  fputs(\"-Fa \", stdout);\n     } else if (features)\n  fputs(\"-F \", stdout);\n     if(modname[0] == '-')\n  fputs(\"-- \", stdout);\n     quotedzputs(modname, stdout);\n     if (flags & PRINTMOD_AUTO) {\n  LinkNode an;\n  for (an = ((m->autoloads)->list.first); an; (an = ((an)->next))) {\n      putchar(' ');\n      quotedzputs((char *)((an)->dat), stdout);\n  }\n     } else if (features) {\n  const char *f;\n  while ((f = *features++)) {\n      int on = *enables++;\n      if (flags & PRINTMOD_LISTALL)\n   printf(\" %s\", on ? \"+\" : \"-\");\n      else if (!on)\n   continue;\n      else\n   putchar(' ');\n      quotedzputs(f, stdout);\n  }\n     }\n } else\n     (void)mb_niceformat((modname), (stdout), ((void *)0), 0);\n    } else\n return;\n    putchar('\\n');\n}\n\n\nHashTable\nnewmoduletable(int size, char const *name)\n{\n    HashTable ht;\n    ht = newhashtable(size, name, ((void *)0));\n\n    ht->hash = hasher;\n    ht->emptytable = emptyhashtable;\n    ht->filltable = ((void *)0);\n    ht->cmpnodes = strcmp;\n    ht->addnode = addhashnode;\n\n    ht->getnode = gethashnode2;\n    ht->getnode2 = gethashnode2;\n    ht->removenode = removehashnode;\n    ht->disablenode = ((void *)0);\n    ht->enablenode = ((void *)0);\n    ht->freenode = freemodulenode;\n    ht->printnode = printmodulenode;\n\n    return ht;\n}\n// # 305 \"module.c\"\nint\nsetup_zshQsmain(Module m __attribute__((__unused__)))\n{\n    return 0;\n}\n\n\nint\nfeatures_zshQsmain(Module m __attribute__((__unused__)), char ***features __attribute__((__unused__)))\n{\n\n\n\n\n    return 1;\n}\n\n\nint\nenables_zshQsmain(Module m __attribute__((__unused__)), int **enables __attribute__((__unused__)))\n{\n    return 1;\n}\n\n\nint\nboot_zshQsmain(Module m __attribute__((__unused__)))\n{\n    return 0;\n}\n\n\nint\ncleanup_zshQsmain(Module m __attribute__((__unused__)))\n{\n    return 0;\n}\n\n\nint\nfinish_zshQsmain(Module m __attribute__((__unused__)))\n{\n    return 0;\n}\n// # 358 \"module.c\"\nvoid\nregister_module(char *n, Module_void_func setup,\n  Module_features_func features,\n  Module_enables_func enables,\n  Module_void_func boot,\n  Module_void_func cleanup,\n  Module_void_func finish)\n{\n    Linkedmod m;\n\n    m = (Linkedmod) zalloc(sizeof(*m));\n\n    m->name = ztrdup(n);\n    m->setup = setup;\n    m->features = features;\n    m->enables = enables;\n    m->boot = boot;\n    m->cleanup = cleanup;\n    m->finish = finish;\n\n    zinsertlinknode(linkedmodules,((linkedmodules)->list.last),m);\n}\n\n\n\n\nLinkedmod\nmodule_linked(char const *name)\n{\n    LinkNode node;\n\n    for (node = ((linkedmodules)->list.first); node; (node = ((node)->next)))\n if (!strcmp(((Linkedmod) ((node)->dat))->name, name))\n     return (Linkedmod) ((node)->dat);\n\n    return ((void *)0);\n}\n// # 408 \"module.c\"\nstatic int\naddbuiltin(Builtin b)\n{\n    Builtin bn = (Builtin) builtintab->getnode2(builtintab, b->node.nam);\n    if (bn && (bn->node.flags & (1<<3)))\n return 1;\n    if (bn)\n builtintab->freenode(builtintab->removenode(builtintab, b->node.nam));\n    builtintab->addnode(builtintab, b->node.nam, b);\n    return 0;\n}\n\n\n\n\n\n\nstatic int\nadd_autobin(const char *module, const char *bnam, int flags)\n{\n    Builtin bn;\n    int ret;\n\n    bn = zshcalloc(sizeof(*bn));\n    bn->node.nam = ztrdup(bnam);\n    bn->optstr = ztrdup(module);\n    if (flags & FEAT_AUTOALL)\n bn->node.flags |= (1<<17);\n    if ((ret = addbuiltin(bn))) {\n builtintab->freenode(&bn->node);\n if (!(flags & FEAT_IGNORE))\n     return 1;\n    }\n    return 0;\n}\n\n\n\n\n\nint\ndeletebuiltin(const char *nam)\n{\n    Builtin bn;\n\n    bn = (Builtin) builtintab->removenode(builtintab, nam);\n    if (!bn)\n return -1;\n    builtintab->freenode(&bn->node);\n    return 0;\n}\n\n\n\n\nstatic int\ndel_autobin(const char *module __attribute__((__unused__)), const char *bnam, int flags)\n{\n    Builtin bn = (Builtin) builtintab->getnode2(builtintab, bnam);\n    if (!bn) {\n if(!(flags & FEAT_IGNORE))\n     return 2;\n    } else if (bn->node.flags & (1<<3)) {\n if (!(flags & FEAT_IGNORE))\n     return 3;\n    } else\n deletebuiltin(bnam);\n\n    return 0;\n}\n// # 500 \"module.c\"\nstatic int\nsetbuiltins(char const *nam, Builtin binl, int size, int *e)\n{\n    int ret = 0, n;\n\n    for(n = 0; n < size; n++) {\n Builtin b = &binl[n];\n if (e && *e++) {\n     if (b->node.flags & (1<<3))\n  continue;\n     if (addbuiltin(b)) {\n  zwarnnam(nam,\n    \"name clash when adding builtin `%s'\", b->node.nam);\n  ret = 1;\n     } else {\n  b->node.flags |= (1<<3);\n     }\n } else {\n     if (!(b->node.flags & (1<<3)))\n  continue;\n     if (deletebuiltin(b->node.nam)) {\n  zwarnnam(nam, \"builtin `%s' already deleted\", b->node.nam);\n  ret = 1;\n     } else {\n  b->node.flags &= ~(1<<3);\n     }\n }\n    }\n    return ret;\n}\n// # 543 \"module.c\"\n int\naddbuiltins(char const *nam, Builtin binl, int size)\n{\n    int ret = 0, n;\n\n    for(n = 0; n < size; n++) {\n Builtin b = &binl[n];\n if(b->node.flags & (1<<3))\n     continue;\n if(addbuiltin(b)) {\n     zwarnnam(nam, \"name clash when adding builtin `%s'\", b->node.nam);\n     ret = 1;\n } else {\n     b->node.flags |= (1<<3);\n }\n    }\n    return ret;\n}\n// # 570 \"module.c\"\nFuncWrap wrappers;\n\n\n\n\n\n int\naddwrapper(Module m, FuncWrap w)\n{\n    FuncWrap p, q;\n\n\n\n\n\n\n\n    if (m->node.flags & (1<<6))\n return 1;\n\n    if (w->flags & 1)\n return 1;\n    for (p = wrappers, q = ((void *)0); p; q = p, p = p->next);\n    if (q)\n q->next = w;\n    else\n wrappers = w;\n    w->next = ((void *)0);\n    w->flags |= 1;\n    w->module = m;\n\n    return 0;\n}\n\n\n\n\n\n int\ndeletewrapper(Module m, FuncWrap w)\n{\n    FuncWrap p, q;\n\n    if (m->node.flags & (1<<6))\n return 1;\n\n    if (w->flags & 1) {\n for (p = wrappers, q = ((void *)0); p && p != w; q = p, p = p->next);\n\n if (p) {\n     if (q)\n  q->next = p->next;\n     else\n  wrappers = p->next;\n     p->flags &= ~1;\n\n     return 0;\n }\n    }\n    return 1;\n}\n// # 640 \"module.c\"\n Conddef condtab;\n\n\n\n\n\n\nConddef\ngetconddef(int inf, const char *name, int autol)\n{\n    Conddef p;\n    int f = 1;\n\n    do {\n for (p = condtab; p; p = p->next) {\n     if ((!!inf == !!(p->flags & 1)) &&\n  !strcmp(name, p->name))\n  break;\n }\n if (autol && p && p->module) {\n\n\n\n\n     if (f) {\n  (void)ensurefeature(p->module,\n        (p->flags & 1) ? \"C:\" : \"c:\",\n        (p->flags & 4) ? ((void *)0) : name);\n  f = 0;\n  p = ((void *)0);\n     } else {\n  deleteconddef(p);\n  return ((void *)0);\n     }\n } else\n     break;\n    } while (!p);\n    return p;\n}\n// # 691 \"module.c\"\nstatic int\naddconddef(Conddef c)\n{\n    Conddef p = getconddef((c->flags & 1), c->name, 0);\n\n    if (p) {\n if (!p->module || (p->flags & 2))\n     return 1;\n\n\n deleteconddef(p);\n    }\n    c->next = condtab;\n    condtab = c;\n    return 0;\n}\n\n\n\n\n\nint\ndeleteconddef(Conddef c)\n{\n    Conddef p, q;\n\n    for (p = condtab, q = ((void *)0); p && p != c; q = p, p = p->next);\n\n    if (p) {\n if (q)\n     q->next = p->next;\n else\n     condtab = p->next;\n\n if (p->module) {\n\n     zsfree(p->name);\n     zsfree(p->module);\n     zfree(p, sizeof(*p));\n }\n return 0;\n    }\n    return -1;\n}\n\n\n\n\n\n\n\nstatic int\nsetconddefs(char const *nam, Conddef c, int size, int *e)\n{\n    int ret = 0;\n\n    while (size--) {\n if (e && *e++) {\n     if (c->flags & 2) {\n  c++;\n  continue;\n     }\n     if (addconddef(c)) {\n  zwarnnam(nam, \"name clash when adding condition `%s'\",\n    c->name);\n  ret = 1;\n     } else {\n  c->flags |= 2;\n     }\n } else {\n     if (!(c->flags & 2)) {\n  c++;\n  continue;\n     }\n     if (deleteconddef(c)) {\n  zwarnnam(nam, \"condition `%s' already deleted\", c->name);\n  ret = 1;\n     } else {\n  c->flags &= ~2;\n     }\n }\n c++;\n    }\n    return ret;\n}\n\n\n\n\nstatic int\nadd_autocond(const char *module, const char *cnam, int flags)\n{\n    Conddef c;\n\n    c = (Conddef) zalloc(sizeof(*c));\n\n    c->name = ztrdup(cnam);\n    c->flags = ((flags & FEAT_INFIX) ? 1 : 0);\n    if (flags & FEAT_AUTOALL)\n c->flags |= 4;\n    c->module = ztrdup(module);\n\n    if (addconddef(c)) {\n zsfree(c->name);\n zsfree(c->module);\n zfree(c, sizeof(*c));\n\n if (!(flags & FEAT_IGNORE))\n     return 1;\n    }\n    return 0;\n}\n\n\n\n\nstatic int\ndel_autocond(const char *modnam __attribute__((__unused__)), const char *cnam, int flags)\n{\n    Conddef cd = getconddef((flags & FEAT_INFIX) ? 1 : 0, cnam, 0);\n\n    if (!cd) {\n if (!(flags & FEAT_IGNORE)) {\n     return 2;\n }\n    } else if (cd->flags & 2) {\n if (!(flags & FEAT_IGNORE))\n     return 3;\n    } else\n deleteconddef(cd);\n\n    return 0;\n}\n// # 832 \"module.c\"\nHookdef hooktab;\n\n\n\n\nHookdef\ngethookdef(char *n)\n{\n    Hookdef p;\n\n    for (p = hooktab; p; p = p->next)\n if (!strcmp(n, p->name))\n     return p;\n    return ((void *)0);\n}\n\n\n\n\n\nint\naddhookdef(Hookdef h)\n{\n    if (gethookdef(h->name))\n return 1;\n\n    h->next = hooktab;\n    hooktab = h;\n    h->funcs = znewlinklist();\n\n    return 0;\n}\n\n\n\n\n\n\n\n int\naddhookdefs(Module m, Hookdef h, int size)\n{\n    int ret = 0;\n\n    while (size--) {\n if (addhookdef(h)) {\n     zwarnnam(m ? m->node.nam : ((void *)0),\n       \"name clash when adding hook `%s'\", h->name);\n     ret = 1;\n }\n h++;\n    }\n    return ret;\n}\n\n\n\n\nint\ndeletehookdef(Hookdef h)\n{\n    Hookdef p, q;\n\n    for (p = hooktab, q = ((void *)0); p && p != h; q = p, p = p->next);\n\n    if (!p)\n return 1;\n\n    if (q)\n q->next = p->next;\n    else\n hooktab = p->next;\n    freelinklist(p->funcs, ((void *)0));\n    return 0;\n}\n\n\n\n\n int\ndeletehookdefs(Module m __attribute__((__unused__)), Hookdef h, int size)\n{\n    int ret = 0;\n\n    while (size--) {\n if (deletehookdef(h))\n     ret = 1;\n h++;\n    }\n    return ret;\n}\n\n\n\n\nint\naddhookdeffunc(Hookdef h, Hookfn f)\n{\n    zinsertlinknode(h->funcs,((h->funcs)->list.last),(void *) f);\n\n    return 0;\n}\n\n\n int\naddhookfunc(char *n, Hookfn f)\n{\n    Hookdef h = gethookdef(n);\n\n    if (h)\n return addhookdeffunc(h, f);\n    return 1;\n}\n\n\n\n\nint\ndeletehookdeffunc(Hookdef h, Hookfn f)\n{\n    LinkNode p;\n\n    for (p = ((h->funcs)->list.first); p; (p = ((p)->next)))\n if (f == (Hookfn) ((p)->dat)) {\n     remnode(h->funcs, p);\n     return 0;\n }\n    return 1;\n}\n\n\n\n\n int\ndeletehookfunc(char *n, Hookfn f)\n{\n    Hookdef h = gethookdef(n);\n\n    if (h)\n return deletehookdeffunc(h, f);\n    return 1;\n}\n\n\n\n\n int\nrunhookdef(Hookdef h, void *d)\n{\n    if ((((h->funcs)->list.first) == ((void *)0))) {\n if (h->def)\n     return h->def(h, d);\n return 0;\n    } else if (h->flags & 1) {\n LinkNode p;\n int r;\n\n for (p = ((h->funcs)->list.first); p; (p = ((p)->next)))\n     if ((r = ((Hookfn) ((p)->dat))(h, d)))\n  return r;\n if (h->def)\n     return h->def(h, d);\n return 0;\n    } else\n return ((Hookfn) ((((h->funcs)->list.last))->dat))(h, d);\n}\n// # 1014 \"module.c\"\nstatic int\ncheckaddparam(const char *nam, int opt_i)\n{\n    Param pm;\n\n    if (!(pm = (Param) gethashnode2(paramtab, nam)))\n return 0;\n\n    if (pm->level || !(pm->node.flags & (1<<27))) {\n// # 1031 \"module.c\"\n if (!opt_i || !pm->level) {\n     zwarn(\"Can't add module parameter `%s': %s\",\n    nam, pm->level ?\n    \"local parameter exists\" :\n    \"parameter already exists\");\n     return 1;\n }\n return 2;\n    }\n\n    unsetparam_pm(pm, 0, 1);\n    return 0;\n}\n\n\n\n\n\nint\naddparamdef(Paramdef d)\n{\n    Param pm;\n\n    if (checkaddparam(d->name, 0))\n return 1;\n\n    if (d->getnfn) {\n if (!(pm = createspecialhash(d->name, d->getnfn,\n         d->scantfn, d->flags)))\n     return 1;\n    }\n    else if (!(pm = createparam(d->name, d->flags)) &&\n !(pm = (Param) paramtab->getnode(paramtab, d->name)))\n return 1;\n\n    d->pm = pm;\n    pm->level = 0;\n    if (d->var)\n pm->u.data = d->var;\n    if (d->var || d->gsu) {\n\n\n\n\n switch ((pm->node.flags & (0|(1<<1)|(1<<2)|(1<<3)|(1<<0)|(1<<4)))) {\n case 0:\n     pm->gsu.s = d->gsu ? (GsuScalar)d->gsu : &varscalar_gsu;\n     break;\n\n case (1<<1):\n     pm->gsu.i = d->gsu ? (GsuInteger)d->gsu : &varinteger_gsu;\n     break;\n\n case (1<<3):\n case (1<<2):\n     pm->gsu.f = d->gsu;\n     break;\n\n case (1<<0):\n     pm->gsu.a = d->gsu ? (GsuArray)d->gsu : &vararray_gsu;\n     break;\n\n case (1<<4):\n\n     if (d->gsu)\n  pm->gsu.h = (GsuHash)d->gsu;\n     break;\n\n default:\n     unsetparam_pm(pm, 0, 1);\n     return 1;\n }\n    }\n\n    return 0;\n}\n\n\n\n\nint\ndeleteparamdef(Paramdef d)\n{\n    Param pm = (Param) paramtab->getnode(paramtab, d->name);\n\n    if (!pm)\n return 1;\n    if (pm != d->pm) {\n\n\n\n\n Param prevpm, searchpm;\n for (prevpm = pm, searchpm = pm->old;\n      searchpm;\n      prevpm = searchpm, searchpm = searchpm->old)\n     if (searchpm == d->pm)\n  break;\n\n if (!searchpm)\n     return 1;\n\n paramtab->removenode(paramtab, pm->node.nam);\n prevpm->old = searchpm->old;\n searchpm->old = pm;\n paramtab->addnode(paramtab, searchpm->node.nam, searchpm);\n\n pm = searchpm;\n    }\n    pm->node.flags = (pm->node.flags & ~(1<<10)) | (1<<26);\n    unsetparam_pm(pm, 0, 1);\n    d->pm = ((void *)0);\n    return 0;\n}\n\n\n\n\n\n\n\nstatic int\nsetparamdefs(char const *nam, Paramdef d, int size, int *e)\n{\n    int ret = 0;\n\n    while (size--) {\n if (e && *e++) {\n     if (d->pm) {\n  d++;\n  continue;\n     }\n     if (addparamdef(d)) {\n  zwarnnam(nam, \"error when adding parameter `%s'\", d->name);\n  ret = 1;\n     }\n } else {\n     if (!d->pm) {\n  d++;\n  continue;\n     }\n     if (deleteparamdef(d)) {\n  zwarnnam(nam, \"parameter `%s' already deleted\", d->name);\n  ret = 1;\n     }\n }\n d++;\n    }\n    return ret;\n}\n\n\n\n\nstatic int\nadd_autoparam(const char *module, const char *pnam, int flags)\n{\n    Param pm;\n    int ret;\n\n    (queueing_enabled++);\n    if ((ret = checkaddparam(pnam, (flags & FEAT_IGNORE)))) {\n do { ; if (!--queueing_enabled) do { while (queue_front != queue_rear) { sigset_t oset; queue_front = (queue_front + 1) % 128; oset = signal_setmask(signal_mask_queue[queue_front]); zhandler(signal_queue[queue_front]); signal_setmask(oset); } } while (0); } while (0);\n\n\n\n\n\n\n\n return ret == 2 ? 0 : -1;\n    }\n\n    pm = assignsparam(dupstring(pnam),ztrdup(module),0);\n\n    pm->node.flags |= (1<<27);\n    if (flags & FEAT_AUTOALL)\n pm->node.flags |= (1<<28);\n    do { ; if (!--queueing_enabled) do { while (queue_front != queue_rear) { sigset_t oset; queue_front = (queue_front + 1) % 128; oset = signal_setmask(signal_mask_queue[queue_front]); zhandler(signal_queue[queue_front]); signal_setmask(oset); } } while (0); } while (0);\n\n    return 0;\n}\n\n\n\n\nstatic int\ndel_autoparam(const char *modnam __attribute__((__unused__)), const char *pnam, int flags)\n{\n    Param pm = (Param) gethashnode2(paramtab, pnam);\n\n    if (!pm) {\n if (!(flags & FEAT_IGNORE))\n     return 2;\n    } else if (!(pm->node.flags & (1<<27))) {\n if (!(flags & FEAT_IGNORE))\n     return 3;\n    } else\n unsetparam_pm(pm, 0, 1);\n\n    return 0;\n}\n// # 1241 \"module.c\"\nMathFunc mathfuncs;\n\n\n\n\n\n\n\nvoid\nremovemathfunc(MathFunc previous, MathFunc current)\n{\n    if (previous)\n previous->next = current->next;\n    else\n mathfuncs = current->next;\n\n    zsfree(current->name);\n    zsfree(current->module);\n    zfree(current, sizeof(*current));\n}\n\n\n\n\nMathFunc\ngetmathfunc(const char *name, int autol)\n{\n    MathFunc p, q = ((void *)0);\n\n    for (p = mathfuncs; p; q = p, p = p->next)\n if (!strcmp(name, p->name)) {\n     if (autol && p->module && !(p->flags & 4)) {\n  char *n = dupstring(p->module);\n  int flags = p->flags;\n\n  removemathfunc(q, p);\n\n  (void)ensurefeature(n, \"f:\", (flags & 8) ? ((void *)0) :\n        name);\n\n        p = getmathfunc(name, 0);\n        if (!p) {\n     zerr(\"autoloading module %s failed to define math function: %s\", n, name);\n        }\n     }\n     return p;\n }\n\n    return ((void *)0);\n}\n\n\n\n\nstatic int\naddmathfunc(MathFunc f)\n{\n    MathFunc p, q = ((void *)0);\n\n    if (f->flags & 2)\n return 1;\n\n    for (p = mathfuncs; p; q = p, p = p->next)\n if (!strcmp(f->name, p->name)) {\n     if (p->module && !(p->flags & 4)) {\n\n\n\n  removemathfunc(q, p);\n  break;\n     }\n     return 1;\n }\n\n    f->next = mathfuncs;\n    mathfuncs = f;\n\n    return 0;\n}\n\n\n\n\n int\ndeletemathfunc(MathFunc f)\n{\n    MathFunc p, q;\n\n    for (p = mathfuncs, q = ((void *)0); p && p != f; q = p, p = p->next);\n\n    if (p) {\n if (q)\n     q->next = f->next;\n else\n     mathfuncs = f->next;\n\n\n if (f->module) {\n     zsfree(f->name);\n     zsfree(f->module);\n     zfree(f, sizeof(*f));\n } else\n     f->flags &= ~2;\n\n return 0;\n    }\n    return -1;\n}\n\n\n\n\n\n\n\nstatic int\nsetmathfuncs(char const *nam, MathFunc f, int size, int *e)\n{\n    int ret = 0;\n\n    while (size--) {\n if (e && *e++) {\n     if (f->flags & 2) {\n  f++;\n  continue;\n     }\n     if (addmathfunc(f)) {\n  zwarnnam(nam, \"name clash when adding math function `%s'\",\n    f->name);\n  ret = 1;\n     } else {\n  f->flags |= 2;\n     }\n } else {\n     if (!(f->flags & 2)) {\n  f++;\n  continue;\n     }\n     if (deletemathfunc(f)) {\n  zwarnnam(nam, \"math function `%s' already deleted\", f->name);\n  ret = 1;\n     } else {\n  f->flags &= ~2;\n     }\n }\n f++;\n    }\n    return ret;\n}\n\n\n\n\nstatic int\nadd_automathfunc(const char *module, const char *fnam, int flags)\n{\n    MathFunc f;\n\n    f = (MathFunc) zalloc(sizeof(*f));\n\n    f->name = ztrdup(fnam);\n    f->module = ztrdup(module);\n    f->flags = 0;\n\n    if (addmathfunc(f)) {\n zsfree(f->name);\n zsfree(f->module);\n zfree(f, sizeof(*f));\n\n if (!(flags & FEAT_IGNORE))\n     return 1;\n    }\n\n    return 0;\n}\n\n\n\n\nstatic int\ndel_automathfunc(const char *modnam __attribute__((__unused__)), const char *fnam, int flags)\n{\n    MathFunc f = getmathfunc(fnam, 0);\n\n    if (!f) {\n if (!(flags & FEAT_IGNORE))\n     return 2;\n    } else if (f->flags & 2) {\n if (!(flags & FEAT_IGNORE))\n     return 3;\n    } else\n deletemathfunc(f);\n\n    return 0;\n}\n// # 1494 \"module.c\"\n// # 1 \"/usr/include/dlfcn.h\" 1 3 4\n// # 26 \"/usr/include/dlfcn.h\" 3 4\n// # 1 \"/nfs/apps/gcc/4.2.4/lib/gcc/x86_64-unknown-linux-gnu/4.2.4/include/stddef.h\" 1 3 4\n// # 27 \"/usr/include/dlfcn.h\" 2 3 4\n\n\n// # 1 \"/usr/include/bits/dlfcn.h\" 1 3 4\n// # 58 \"/usr/include/bits/dlfcn.h\" 3 4\n\n\n\nextern void _dl_mcount_wrapper_check (void *__selfpc) __attribute__ ((__nothrow__));\n\n\n// # 30 \"/usr/include/dlfcn.h\" 2 3 4\n// # 46 \"/usr/include/dlfcn.h\" 3 4\ntypedef long int Lmid_t;\n\n\n\n\n\n\n\n\n\n\n\nextern void *dlopen (__const char *__file, int __mode) __attribute__ ((__nothrow__));\n\n\n\nextern int dlclose (void *__handle) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n\n\n\nextern void *dlsym (void *__restrict __handle,\n      __const char *__restrict __name) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\nextern void *dlmopen (Lmid_t __nsid, __const char *__file, int __mode) __attribute__ ((__nothrow__));\n\n\n\nextern void *dlvsym (void *__restrict __handle,\n       __const char *__restrict __name,\n       __const char *__restrict __version)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2, 3)));\n\n\n\n\n\nextern char *dlerror (void) __attribute__ ((__nothrow__));\n\n\n\n\n\ntypedef struct\n{\n  __const char *dli_fname;\n  void *dli_fbase;\n  __const char *dli_sname;\n  void *dli_saddr;\n} Dl_info;\n\n\n\nextern int dladdr (__const void *__address, Dl_info *__info)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\nextern int dladdr1 (__const void *__address, Dl_info *__info,\n      void **__extra_info, int __flags) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (2)));\n\n\n\n\nenum\n  {\n\n    RTLD_DL_SYMENT = 1,\n\n\n    RTLD_DL_LINKMAP = 2\n  };\n\n\n\n\n\n\n\nextern int dlinfo (void *__restrict __handle,\n     int __request, void *__restrict __arg)\n     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));\n\n\nenum\n  {\n\n    RTLD_DI_LMID = 1,\n\n\n\n    RTLD_DI_LINKMAP = 2,\n\n    RTLD_DI_CONFIGADDR = 3,\n\n\n\n\n\n\n    RTLD_DI_SERINFO = 4,\n    RTLD_DI_SERINFOSIZE = 5,\n\n\n\n    RTLD_DI_ORIGIN = 6,\n\n    RTLD_DI_PROFILENAME = 7,\n    RTLD_DI_PROFILEOUT = 8,\n\n\n\n\n    RTLD_DI_TLS_MODID = 9,\n\n\n\n\n\n    RTLD_DI_TLS_DATA = 10,\n\n    RTLD_DI_MAX = 10\n  };\n\n\n\n\ntypedef struct\n{\n  char *dls_name;\n  unsigned int dls_flags;\n} Dl_serpath;\n\n\n\ntypedef struct\n{\n  size_t dls_size;\n  unsigned int dls_cnt;\n  Dl_serpath dls_serpath[1];\n} Dl_serinfo;\n\n\n\n\n// # 1495 \"module.c\" 2\n// # 1567 \"module.c\"\nstatic void *\ntry_load_module(char const *name)\n{\n    char buf[4096 + 1];\n    char **pp;\n    void *ret = ((void *)0);\n    int l;\n\n    l = 1 + strlen(name) + 1 + strlen(\"so\");\n    for (pp = module_path; !ret && *pp; pp++) {\n if (l + (**pp ? strlen(*pp) : 1) > 4096)\n     continue;\n sprintf(buf, \"%s/%s.%s\", **pp ? *pp : \".\", name, \"so\");\n ret = dlopen(unmeta(buf), 0x00001 | 0x00100);\n    }\n\n    return ret;\n}\n\n\n\n\n\n\n\nstatic void *\ndo_load_module(char const *name, int silent)\n{\n    void *ret;\n\n    ret = try_load_module(name);\n    if (!ret && !silent) {\n\n zwarn(\"failed to load module `%s': %s\", name,\n       metafy(dlerror(), -1, 1));\n\n\n\n    }\n    return ret;\n}\n// # 1640 \"module.c\"\nstatic Module\nfind_module(const char *name, int flags, const char **namep)\n{\n    Module m;\n\n    m = (Module)modulestab->getnode2(modulestab, name);\n    if (m) {\n if ((flags & FINDMOD_ALIASP) && (m->node.flags & (1<<6))) {\n     if (namep)\n  *namep = m->u.alias;\n     return find_module(m->u.alias, flags, namep);\n }\n if (namep)\n     *namep = m->node.nam;\n return m;\n    }\n    if (!(flags & FINDMOD_CREATE))\n return ((void *)0);\n    m = zshcalloc(sizeof(*m));\n    modulestab->addnode(modulestab, ztrdup(name), m);\n    return m;\n}\n\n\n\n\n\n\nstatic void\ndelete_module(Module m)\n{\n    modulestab->removenode(modulestab, m->node.nam);\n\n    modulestab->freenode(&m->node);\n}\n// # 1684 \"module.c\"\n int\nmodule_loaded(const char *name)\n{\n    Module m;\n\n    return ((m = find_module(name, FINDMOD_ALIASP, ((void *)0))) &&\n     m->u.handle &&\n     !(m->node.flags & (1<<1)));\n}\n// # 1751 \"module.c\"\nstatic Module_generic_func\nmodule_func(Module m, char *name)\n{\n\n    return (Module_generic_func) dlsym(m->u.handle, name);\n// # 1778 \"module.c\"\n}\n\n\nstatic int\ndyn_setup_module(Module m)\n{\n    Module_void_func fn = (Module_void_func)module_func(m, \"setup_\");\n\n    if (fn)\n return fn(m);\n    zwarnnam(m->node.nam, \"no setup function\");\n    return 1;\n}\n\n\nstatic int\ndyn_features_module(Module m, char ***features)\n{\n    Module_features_func fn =\n (Module_features_func)module_func(m, \"features_\");\n\n    if (fn)\n return fn(m, features);\n\n    return 1;\n}\n\n\nstatic int\ndyn_enables_module(Module m, int **enables)\n{\n    Module_enables_func fn = (Module_enables_func)module_func(m, \"enables_\");\n\n    if (fn)\n return fn(m, enables);\n\n    return 1;\n}\n\n\nstatic int\ndyn_boot_module(Module m)\n{\n    Module_void_func fn = (Module_void_func)module_func(m, \"boot_\");\n\n    if(fn)\n return fn(m);\n    zwarnnam(m->node.nam, \"no boot function\");\n    return 1;\n}\n\n\nstatic int\ndyn_cleanup_module(Module m)\n{\n    Module_void_func fn = (Module_void_func)module_func(m, \"cleanup_\");\n\n    if(fn)\n return fn(m);\n    zwarnnam(m->node.nam, \"no cleanup function\");\n    return 1;\n}\n\n\n\n\n\nstatic int\ndyn_finish_module(Module m)\n{\n    Module_void_func fn = (Module_void_func)module_func(m, \"finish_\");\n    int r;\n\n    if (fn)\n r = fn(m);\n    else {\n zwarnnam(m->node.nam, \"no finish function\");\n r = 1;\n    }\n    dlclose(m->u.handle);\n    return r;\n}\n\n\n\n\n\nstatic int\nsetup_module(Module m)\n{\n    return ((m->node.flags & (1<<3)) ?\n     (m->u.linked->setup)(m) : dyn_setup_module(m));\n}\n\n\nstatic int\nfeatures_module(Module m, char ***features)\n{\n    return ((m->node.flags & (1<<3)) ?\n     (m->u.linked->features)(m, features) :\n     dyn_features_module(m, features));\n}\n\n\nstatic int\nenables_module(Module m, int **enables)\n{\n    return ((m->node.flags & (1<<3)) ?\n     (m->u.linked->enables)(m, enables) :\n     dyn_enables_module(m, enables));\n}\n\n\nstatic int\nboot_module(Module m)\n{\n    return ((m->node.flags & (1<<3)) ?\n     (m->u.linked->boot)(m) : dyn_boot_module(m));\n}\n\n\nstatic int\ncleanup_module(Module m)\n{\n    return ((m->node.flags & (1<<3)) ?\n     (m->u.linked->cleanup)(m) : dyn_cleanup_module(m));\n}\n\n\nstatic int\nfinish_module(Module m)\n{\n    return ((m->node.flags & (1<<3)) ?\n     (m->u.linked->finish)(m) : dyn_finish_module(m));\n}\n// # 1979 \"module.c\"\nstatic int\ndo_module_features(Module m, Feature_enables enablesarr, int flags)\n{\n    char **features;\n    int ret = 0;\n\n    if (features_module(m, &features) == 0) {\n\n\n\n\n\n\n\n int *enables = ((void *)0);\n if (enables_module(m, &enables)) {\n\n     if (!(flags & FEAT_IGNORE))\n  zwarn(\"error getting enabled features for module `%s'\",\n        m->node.nam);\n     return 1;\n }\n\n if ((flags & FEAT_CHECKAUTO) && m->autoloads) {\n\n\n\n\n\n\n     LinkNode an, nextn;\n     for (an = ((m->autoloads)->list.first); an; an = nextn) {\n  char *al = (char *)((an)->dat), **ptr;\n\n  nextn = ((an)->next);\n  for (ptr = features; *ptr; ptr++)\n      if (!strcmp(al, *ptr))\n   break;\n  if (!*ptr) {\n      char *arg[2];\n      if (!(flags & FEAT_IGNORE))\n   zwarn(\n      \"module `%s' has no such feature: `%s': autoload cancelled\",\n      m->node.nam, al);\n\n\n\n\n      arg[0] = al = dupstring(al);\n      arg[1] = ((void *)0);\n      (void)autofeatures(((void *)0), m->node.nam, arg, 0,\n           FEAT_IGNORE|FEAT_REMOVE);\n\n\n\n\n      if (enablesarr) {\n   Feature_enables fep;\n   for (fep = enablesarr; fep->str; fep++) {\n       char *str = fep->str;\n       if (*str == '+' || *str == '-')\n    str++;\n       if (fep->pat ? pattry(fep->pat, al) :\n    !strcmp(al, str)) {\n\n    ret = 1;\n    while (fep->str) {\n        fep->str = fep[1].str;\n        fep->pat = fep[1].pat;\n        fep++;\n    }\n    if (!fep->pat)\n        break;\n       }\n   }\n      }\n  }\n     }\n }\n\n if (enablesarr) {\n     Feature_enables fep;\n     for (fep = enablesarr; fep->str; fep++) {\n  char **fp, *esp = fep->str;\n  int on = 1, found = 0;\n  if (*esp == '+')\n      esp++;\n  else if (*esp == '-') {\n      on = 0;\n      esp++;\n  }\n  for (fp = features; *fp; fp++)\n      if (fep->pat ? pattry(fep->pat, *fp) : !strcmp(*fp, esp)) {\n   enables[fp - features] = on;\n   found++;\n   if (!fep->pat)\n       break;\n      }\n  if (!found) {\n      if (!(flags & FEAT_IGNORE))\n   zwarn(fep->pat ?\n         \"module `%s' has no feature matching: `%s'\" :\n         \"module `%s' has no such feature: `%s'\",\n         m->node.nam, esp);\n      return 1;\n  }\n     }\n } else {\n\n\n\n\n     int n_features = arrlen(features);\n     int *ep;\n     for (ep = enables; n_features--; ep++)\n  *ep = 1;\n }\n\n if (enables_module(m, &enables))\n     return 2;\n    } else if (enablesarr) {\n if (!(flags & FEAT_IGNORE))\n     zwarn(\"module `%s' does not support features\", m->node.nam);\n return 1;\n    }\n\n\n    return ret;\n}\n// # 2120 \"module.c\"\nstatic int\ndo_boot_module(Module m, Feature_enables enablesarr, int silent)\n{\n    int ret = do_module_features(m, enablesarr,\n     silent ? FEAT_IGNORE|FEAT_CHECKAUTO :\n     FEAT_CHECKAUTO);\n\n    if (ret == 1)\n return 1;\n\n    if (boot_module(m))\n return 1;\n    return ret;\n}\n\n\n\n\n\n\nstatic int\ndo_cleanup_module(Module m)\n{\n    return (m->node.flags & (1<<3)) ?\n (m->u.linked && m->u.linked->cleanup(m)) :\n (m->u.handle && cleanup_module(m));\n}\n\n\n\n\n\n\n\nstatic int\nmodname_ok(char const *p)\n{\n    do {\n p = itype_end(p, (1 << 7), 0);\n if (!*p)\n     return 1;\n    } while(*p++ == '/');\n    return 0;\n}\n// # 2182 \"module.c\"\n int\nload_module(char const *name, Feature_enables enablesarr, int silent)\n{\n    Module m;\n    void *handle = ((void *)0);\n    Linkedmod linked;\n    int set, bootret;\n\n    if (!modname_ok(name)) {\n if (!silent)\n     zerr(\"invalid module name `%s'\", name);\n return 1;\n    }\n\n\n\n\n\n    (queueing_enabled++);\n    if (!(m = find_module(name, FINDMOD_ALIASP, &name))) {\n if (!(linked = module_linked(name)) &&\n     !(handle = do_load_module(name, silent))) {\n     do { ; if (!--queueing_enabled) do { while (queue_front != queue_rear) { sigset_t oset; queue_front = (queue_front + 1) % 128; oset = signal_setmask(signal_mask_queue[queue_front]); zhandler(signal_queue[queue_front]); signal_setmask(oset); } } while (0); } while (0);\n     return 1;\n }\n m = zshcalloc(sizeof(*m));\n if (handle) {\n     m->u.handle = handle;\n     m->node.flags |= (1<<2);\n } else {\n     m->u.linked = linked;\n     m->node.flags |= (1<<2) | (1<<3);\n }\n modulestab->addnode(modulestab, ztrdup(name), m);\n\n if ((set = setup_module(m)) ||\n     (bootret = do_boot_module(m, enablesarr, silent)) == 1) {\n     if (!set)\n  do_cleanup_module(m);\n     finish_module(m);\n     delete_module(m);\n     do { ; if (!--queueing_enabled) do { while (queue_front != queue_rear) { sigset_t oset; queue_front = (queue_front + 1) % 128; oset = signal_setmask(signal_mask_queue[queue_front]); zhandler(signal_queue[queue_front]); signal_setmask(oset); } } while (0); } while (0);\n     return 1;\n }\n m->node.flags |= (1<<4) | (1<<5);\n m->node.flags &= ~(1<<2);\n do { ; if (!--queueing_enabled) do { while (queue_front != queue_rear) { sigset_t oset; queue_front = (queue_front + 1) % 128; oset = signal_setmask(signal_mask_queue[queue_front]); zhandler(signal_queue[queue_front]); signal_setmask(oset); } } while (0); } while (0);\n return bootret;\n    }\n    if (m->node.flags & (1<<2)) {\n do { ; if (!--queueing_enabled) do { while (queue_front != queue_rear) { sigset_t oset; queue_front = (queue_front + 1) % 128; oset = signal_setmask(signal_mask_queue[queue_front]); zhandler(signal_queue[queue_front]); signal_setmask(oset); } } while (0); } while (0);\n return 0;\n    }\n    if (m->node.flags & (1<<1))\n m->node.flags &= ~(1<<1);\n    else if ((m->node.flags & (1<<3)) ? m->u.linked : m->u.handle) {\n do { ; if (!--queueing_enabled) do { while (queue_front != queue_rear) { sigset_t oset; queue_front = (queue_front + 1) % 128; oset = signal_setmask(signal_mask_queue[queue_front]); zhandler(signal_queue[queue_front]); signal_setmask(oset); } } while (0); } while (0);\n return 0;\n    }\n    if (m->node.flags & (1<<0)) {\n zerr(\"circular dependencies for module ;%s\", name);\n return 1;\n    }\n    m->node.flags |= (1<<0);\n\n\n\n\n    if (m->deps) {\n LinkNode n;\n for (n = ((m->deps)->list.first); n; (n = ((n)->next)))\n     if (load_module((char *) ((n)->dat), ((void *)0), silent) == 1) {\n  m->node.flags &= ~(1<<0);\n  do { ; if (!--queueing_enabled) do { while (queue_front != queue_rear) { sigset_t oset; queue_front = (queue_front + 1) % 128; oset = signal_setmask(signal_mask_queue[queue_front]); zhandler(signal_queue[queue_front]); signal_setmask(oset); } } while (0); } while (0);\n  return 1;\n     }\n    }\n    m->node.flags &= ~(1<<0);\n    if (!m->u.handle) {\n handle = ((void *)0);\n if (!(linked = module_linked(name)) &&\n     !(handle = do_load_module(name, silent))) {\n     do { ; if (!--queueing_enabled) do { while (queue_front != queue_rear) { sigset_t oset; queue_front = (queue_front + 1) % 128; oset = signal_setmask(signal_mask_queue[queue_front]); zhandler(signal_queue[queue_front]); signal_setmask(oset); } } while (0); } while (0);\n     return 1;\n }\n if (handle) {\n     m->u.handle = handle;\n     m->node.flags |= (1<<2);\n } else {\n     m->u.linked = linked;\n     m->node.flags |= (1<<2) | (1<<3);\n }\n if (setup_module(m)) {\n     finish_module(m);\n     if (handle)\n  m->u.handle = ((void *)0);\n     else\n  m->u.linked = ((void *)0);\n     m->node.flags &= ~(1<<2);\n     do { ; if (!--queueing_enabled) do { while (queue_front != queue_rear) { sigset_t oset; queue_front = (queue_front + 1) % 128; oset = signal_setmask(signal_mask_queue[queue_front]); zhandler(signal_queue[queue_front]); signal_setmask(oset); } } while (0); } while (0);\n     return 1;\n }\n m->node.flags |= (1<<4);\n    }\n    m->node.flags |= (1<<2);\n    if ((bootret = do_boot_module(m, enablesarr, silent)) == 1) {\n do_cleanup_module(m);\n finish_module(m);\n if (m->node.flags & (1<<3))\n     m->u.linked = ((void *)0);\n else\n     m->u.handle = ((void *)0);\n m->node.flags &= ~(1<<2);\n do { ; if (!--queueing_enabled) do { while (queue_front != queue_rear) { sigset_t oset; queue_front = (queue_front + 1) % 128; oset = signal_setmask(signal_mask_queue[queue_front]); zhandler(signal_queue[queue_front]); signal_setmask(oset); } } while (0); } while (0);\n return 1;\n    }\n    m->node.flags |= (1<<5);\n    m->node.flags &= ~(1<<2);\n    do { ; if (!--queueing_enabled) do { while (queue_front != queue_rear) { sigset_t oset; queue_front = (queue_front + 1) % 128; oset = signal_setmask(signal_mask_queue[queue_front]); zhandler(signal_queue[queue_front]); signal_setmask(oset); } } while (0); } while (0);\n    return bootret;\n}\n// # 2324 \"module.c\"\n int\nrequire_module(const char *module, Feature_enables features)\n{\n    Module m = ((void *)0);\n    int ret = 0;\n\n\n    (queueing_enabled++);\n    m = find_module(module, FINDMOD_ALIASP, &module);\n    if (!m || !m->u.handle ||\n (m->node.flags & (1<<1)))\n ret = load_module(module, features, 0);\n    else\n ret = do_module_features(m, features, 0);\n    do { ; if (!--queueing_enabled) do { while (queue_front != queue_rear) { sigset_t oset; queue_front = (queue_front + 1) % 128; oset = signal_setmask(signal_mask_queue[queue_front]); zhandler(signal_queue[queue_front]); signal_setmask(oset); } } while (0); } while (0);\n\n    return ret;\n}\n\n\n\n\n\n\n\nvoid\nadd_dep(const char *name, char *from)\n{\n    LinkNode node;\n    Module m;\n// # 2367 \"module.c\"\n    m = find_module(name, FINDMOD_ALIASP|FINDMOD_CREATE, &name);\n    if (!m->deps)\n m->deps = znewlinklist();\n    for (node = ((m->deps)->list.first);\n  node && strcmp((char *) ((node)->dat), from);\n  (node = ((node)->next)));\n    if (!node)\n zinsertlinknode(m->deps,((m->deps)->list.last),ztrdup(from));\n}\n\n\n\n\n\n\n\nstatic void\nautoloadscan(HashNode hn, int printflags)\n{\n    Builtin bn = (Builtin) hn;\n\n    if(bn->node.flags & (1<<3))\n return;\n    if(printflags & (1<<2)) {\n fputs(\"zmodload -ab \", stdout);\n if(bn->optstr[0] == '-')\n     fputs(\"-- \", stdout);\n quotedzputs(bn->optstr, stdout);\n if(strcmp(bn->node.nam, bn->optstr)) {\n     putchar(' ');\n     quotedzputs(bn->node.nam, stdout);\n }\n    } else {\n (void)mb_niceformat((bn->node.nam), (stdout), ((void *)0), 0);\n if(strcmp(bn->node.nam, bn->optstr)) {\n     fputs(\" (\", stdout);\n     (void)mb_niceformat((bn->optstr), (stdout), ((void *)0), 0);\n     putchar(')');\n }\n    }\n    putchar('\\n');\n}\n// # 2420 \"module.c\"\nint\nbin_zmodload(char *nam, char **args, Options ops, int func __attribute__((__unused__)))\n{\n    int ops_bcpf = ((ops)->ind['b'] != 0) || ((ops)->ind['c'] != 0) ||\n ((ops)->ind['p'] != 0) || ((ops)->ind['f'] != 0);\n    int ops_au = ((ops)->ind['a'] != 0) || ((ops)->ind['u'] != 0);\n    int ret = 1, autoopts;\n\n    char *fonly = \"lP\", *fp;\n\n    if (ops_bcpf && !ops_au) {\n zwarnnam(nam, \"-b, -c, -f, and -p must be combined with -a or -u\");\n return 1;\n    }\n    if (((ops)->ind['F'] != 0) && (ops_bcpf || ((ops)->ind['u'] != 0))) {\n zwarnnam(nam, \"-b, -c, -f, -p and -u cannot be combined with -F\");\n return 1;\n    }\n    if (((ops)->ind['A'] != 0) || ((ops)->ind['R'] != 0)) {\n if (ops_bcpf || ops_au || ((ops)->ind['d'] != 0) ||\n     (((ops)->ind['R'] != 0) && ((ops)->ind['e'] != 0))) {\n     zwarnnam(nam, \"illegal flags combined with -A or -R\");\n     return 1;\n }\n if (!((ops)->ind['e'] != 0))\n     return bin_zmodload_alias(nam, args, ops);\n    }\n    if (((ops)->ind['d'] != 0) && ((ops)->ind['a'] != 0)) {\n zwarnnam(nam, \"-d cannot be combined with -a\");\n return 1;\n    }\n    if (((ops)->ind['u'] != 0) && !*args) {\n zwarnnam(nam, \"what do you want to unload?\");\n return 1;\n    }\n    if (((ops)->ind['e'] != 0) && (((ops)->ind['I'] != 0) || ((ops)->ind['L'] != 0) ||\n          (((ops)->ind['a'] != 0) && !((ops)->ind['F'] != 0))\n          || ((ops)->ind['d'] != 0) ||\n          ((ops)->ind['i'] != 0) || ((ops)->ind['u'] != 0))) {\n zwarnnam(nam, \"-e cannot be combined with other options\");\n\n return 1;\n    }\n    for (fp = fonly; *fp; fp++) {\n if (((ops)->ind[((unsigned char)(*fp))] != 0) && !((ops)->ind['F'] != 0)) {\n     zwarnnam(nam, \"-%c is only allowed with -F\", *fp);\n     return 1;\n }\n    }\n    (queueing_enabled++);\n    if (((ops)->ind['F'] != 0))\n ret = bin_zmodload_features(nam, args, ops);\n    else if (((ops)->ind['e'] != 0))\n ret = bin_zmodload_exist(nam, args, ops);\n    else if (((ops)->ind['d'] != 0))\n ret = bin_zmodload_dep(nam, args, ops);\n    else if ((autoopts = ((ops)->ind['b'] != 0) + ((ops)->ind['c'] != 0) +\n       ((ops)->ind['p'] != 0) + ((ops)->ind['f'] != 0)) ||\n\n      ((ops)->ind['a'] != 0)) {\n if (autoopts > 1) {\n     zwarnnam(nam, \"use only one of -b, -c, or -p\");\n     ret = 1;\n } else\n     ret = bin_zmodload_auto(nam, args, ops);\n    } else\n ret = bin_zmodload_load(nam, args, ops);\n    do { ; if (!--queueing_enabled) do { while (queue_front != queue_rear) { sigset_t oset; queue_front = (queue_front + 1) % 128; oset = signal_setmask(signal_mask_queue[queue_front]); zhandler(signal_queue[queue_front]); signal_setmask(oset); } } while (0); } while (0);\n\n    return ret;\n}\n\n\n\n\nstatic int\nbin_zmodload_alias(char *nam, char **args, Options ops)\n{\n// # 2511 \"module.c\"\n    Module m;\n\n    if (!*args) {\n if (((ops)->ind['R'] != 0)) {\n     zwarnnam(nam, \"no module alias to remove\");\n     return 1;\n }\n scanhashtable(modulestab, 1, (1<<6), 0,\n        modulestab->printnode,\n        ((ops)->ind['L'] != 0) ? PRINTMOD_LIST : 0);\n return 0;\n    }\n\n    for (; *args; args++) {\n char *eqpos = strchr(*args, '=');\n char *aliasname = eqpos ? eqpos+1 : ((void *)0);\n if (eqpos)\n     *eqpos = '\\0';\n if (!modname_ok(*args)) {\n     zwarnnam(nam, \"invalid module name `%s'\", *args);\n     return 1;\n }\n if (((ops)->ind['R'] != 0)) {\n     if (aliasname) {\n  zwarnnam(nam, \"bad syntax for removing module alias: %s\",\n    *args);\n  return 1;\n     }\n     m = find_module(*args, 0, ((void *)0));\n     if (m) {\n  if (!(m->node.flags & (1<<6))) {\n      zwarnnam(nam, \"module is not an alias: %s\", *args);\n      return 1;\n  }\n  delete_module(m);\n     } else {\n  zwarnnam(nam, \"no such module alias: %s\", *args);\n  return 1;\n     }\n } else {\n     if (aliasname) {\n  const char *mname = aliasname;\n  if (!modname_ok(aliasname)) {\n      zwarnnam(nam, \"invalid module name `%s'\", aliasname);\n      return 1;\n  }\n  do {\n      if (!strcmp(mname, *args)) {\n   zwarnnam(nam, \"module alias would refer to itself: %s\",\n     *args);\n   return 1;\n      }\n  } while ((m = find_module(mname, 0, ((void *)0)))\n    && (m->node.flags & (1<<6))\n    && (mname = m->u.alias));\n  m = find_module(*args, 0, ((void *)0));\n  if (m) {\n      if (!(m->node.flags & (1<<6))) {\n   zwarnnam(nam, \"module is not an alias: %s\", *args);\n   return 1;\n      }\n      zsfree(m->u.alias);\n  } else {\n      m = (Module) zshcalloc(sizeof(*m));\n      m->node.flags = (1<<6);\n      modulestab->addnode(modulestab, ztrdup(*args), m);\n  }\n  m->u.alias = ztrdup(aliasname);\n     } else {\n  if ((m = find_module(*args, 0, ((void *)0)))) {\n      if (m->node.flags & (1<<6))\n   modulestab->printnode(&m->node,\n           ((ops)->ind['L'] != 0) ?\n           PRINTMOD_LIST : 0);\n      else {\n   zwarnnam(nam, \"module is not an alias: %s\", *args);\n   return 1;\n      }\n  } else {\n      zwarnnam(nam, \"no such module alias: %s\", *args);\n      return 1;\n  }\n     }\n }\n    }\n\n    return 0;\n}\n\n\n\n\nstatic int\nbin_zmodload_exist(char *nam __attribute__((__unused__)), char **args, Options ops)\n{\n    Module m;\n\n    if (!*args) {\n scanhashtable(modulestab, 1, 0, 0, modulestab->printnode,\n        ((ops)->ind['A'] != 0) ? PRINTMOD_EXIST|PRINTMOD_ALIAS :\n        PRINTMOD_EXIST);\n return 0;\n    } else {\n int ret = 0;\n\n for (; !ret && *args; args++) {\n     if (!(m = find_module(*args, FINDMOD_ALIASP, ((void *)0)))\n  || !m->u.handle\n  || (m->node.flags & (1<<1)))\n  ret = 1;\n }\n return ret;\n    }\n}\n\n\n\n\nstatic int\nbin_zmodload_dep(char *nam __attribute__((__unused__)), char **args, Options ops)\n{\n    Module m;\n    if (((ops)->ind['u'] != 0)) {\n\n const char *tnam = *args++;\n m = find_module(tnam, FINDMOD_ALIASP, &tnam);\n if (!m)\n     return 0;\n if (*args && m->deps) {\n     do {\n  LinkNode dnode;\n  for (dnode = ((m->deps)->list.first); dnode; (dnode = ((dnode)->next)))\n      if (!strcmp(*args, ((dnode)->dat))) {\n   zsfree(((dnode)->dat));\n   remnode(m->deps, dnode);\n   break;\n      }\n     } while(*++args);\n     if ((((m->deps)->list.first) == ((void *)0))) {\n  freelinklist(m->deps, freestr);\n  m->deps = ((void *)0);\n     }\n } else {\n     if (m->deps) {\n  freelinklist(m->deps, freestr);\n  m->deps = ((void *)0);\n     }\n }\n if (!m->deps && !m->u.handle)\n     delete_module(m);\n return 0;\n    } else if (!args[0] || !args[1]) {\n\n int depflags = ((ops)->ind['L'] != 0) ?\n     PRINTMOD_DEPS|PRINTMOD_LIST : PRINTMOD_DEPS;\n if (args[0]) {\n     if ((m = (Module)modulestab->getnode2(modulestab, args[0])))\n  modulestab->printnode(&m->node, depflags);\n } else {\n     scanhashtable(modulestab, 1, 0, 0, modulestab->printnode,\n     depflags);\n }\n return 0;\n    } else {\n\n int ret = 0;\n char *tnam = *args++;\n\n for (; *args; args++)\n     add_dep(tnam, *args);\n return ret;\n    }\n}\n\n\n\n\n\n\nstatic void\nprintautoparams(HashNode hn, int lon)\n{\n    Param pm = (Param) hn;\n\n    if (pm->node.flags & (1<<27)) {\n if (lon)\n     printf(\"zmodload -ap %s %s\\n\", pm->u.str, pm->node.nam);\n else\n     printf(\"%s (%s)\\n\", pm->node.nam, pm->u.str);\n    }\n}\n\n\n\n\nstatic int\nbin_zmodload_auto(char *nam, char **args, Options ops)\n{\n    int fchar, flags;\n    char *modnam;\n\n    if (((ops)->ind['c'] != 0)) {\n if (!*args) {\n\n     Conddef p;\n\n     for (p = condtab; p; p = p->next) {\n  if (p->module) {\n      if (((ops)->ind['L'] != 0)) {\n   fputs(\"zmodload -ac\", stdout);\n   if (p->flags & 1)\n       putchar('I');\n   printf(\" %s %s\\n\", p->module, p->name);\n      } else {\n   if (p->flags & 1)\n       fputs(\"infix \", stdout);\n   else\n       fputs(\"post \", stdout);\n   printf(\"%s (%s)\\n\",p->name, p->module);\n      }\n  }\n     }\n     return 0;\n }\n fchar = ((ops)->ind['I'] != 0) ? 'C' : 'c';\n    } else if (((ops)->ind['p'] != 0)) {\n if (!*args) {\n\n     scanhashtable(paramtab, 1, 0, 0, printautoparams,\n     ((ops)->ind['L'] != 0));\n     return 0;\n }\n fchar = 'p';\n    } else if (((ops)->ind['f'] != 0)) {\n if (!*args) {\n\n     MathFunc p;\n\n     for (p = mathfuncs; p; p = p->next) {\n  if (!(p->flags & 4) && p->module) {\n      if (((ops)->ind['L'] != 0)) {\n   fputs(\"zmodload -af\", stdout);\n   printf(\" %s %s\\n\", p->module, p->name);\n      } else\n   printf(\"%s (%s)\\n\",p->name, p->module);\n  }\n     }\n     return 0;\n }\n fchar = 'f';\n    } else {\n\n if (!*args) {\n\n     scanhashtable(builtintab, 1, 0, 0,\n     autoloadscan, ((ops)->ind['L'] != 0) ? (1<<2) : 0);\n     return 0;\n }\n fchar = 'b';\n    }\n\n    flags = FEAT_AUTOALL;\n    if (((ops)->ind['i'] != 0))\n flags |= FEAT_IGNORE;\n    if (((ops)->ind['u'] != 0)) {\n\n flags |= FEAT_REMOVE;\n modnam = ((void *)0);\n    } else {\n\n modnam = *args;\n\n if (args[1])\n     args++;\n    }\n    return autofeatures(nam, modnam, args, fchar, flags);\n}\n\n\n\n\nint\nunload_module(Module m)\n{\n    int del;\n\n\n\n\n    if (m->node.flags & (1<<6)) {\n m = find_module(m->u.alias, FINDMOD_ALIASP, ((void *)0));\n if (!m)\n     return 1;\n    }\n\n\n\n\n\n\n\n    if ((m->node.flags & (1<<4)) &&\n !(m->node.flags & (1<<1)) &&\n do_cleanup_module(m))\n return 1;\n    m->node.flags &= ~((1<<5)|(1<<4));\n\n    del = (m->node.flags & (1<<1));\n\n    if (m->wrapper) {\n m->node.flags |= (1<<1);\n return 0;\n    }\n    m->node.flags &= ~(1<<1);\n\n\n\n\n\n    if (m->node.flags & (1<<3)) {\n if (m->u.linked) {\n     m->u.linked->finish(m);\n     m->u.linked = ((void *)0);\n }\n    } else {\n if (m->u.handle) {\n     finish_module(m);\n     m->u.handle = ((void *)0);\n }\n    }\n\n    if (del && m->deps) {\n\n\n LinkNode n;\n\n for (n = ((m->deps)->list.first); n; (n = ((n)->next))) {\n     Module dm = find_module((char *) ((n)->dat),\n        FINDMOD_ALIASP, ((void *)0));\n\n     if (dm &&\n  (dm->node.flags & (1<<1))) {\n\n  Module am;\n  int du = 1, i;\n\n  for (i = 0; du && i < modulestab->hsize; i++) {\n      for (am = (Module)modulestab->nodes[i]; du && am;\n    am = (Module)am->node.next) {\n   LinkNode sn;\n\n\n\n\n   if (am == m || !am->deps)\n       continue;\n\n   if ((am->node.flags & (1<<3)) ?\n       !am->u.linked : !am->u.handle)\n       continue;\n   for (sn = ((am->deps)->list.first); du && sn;\n        (sn = ((sn)->next))) {\n       if (!strcmp((char *) ((sn)->dat),\n     dm->node.nam))\n    du = 0;\n   }\n      }\n  }\n  if (du)\n      unload_module(dm);\n     }\n }\n    }\n    if (m->autoloads && ((m->autoloads)->list.first)) {\n\n\n\n\n autofeatures(\"zsh\", m->node.nam,\n       hlinklist2array(m->autoloads, 0), 0, FEAT_IGNORE);\n    } else if (!m->deps) {\n delete_module(m);\n    }\n    return 0;\n}\n// # 2904 \"module.c\"\nint\nunload_named_module(char *modname, char *nam, int silent)\n{\n    const char *mname;\n    Module m;\n    int ret = 0;\n\n    m = find_module(modname, FINDMOD_ALIASP, &mname);\n    if (m) {\n int i, del = 0;\n Module dm;\n\n for (i = 0; i < modulestab->hsize; i++) {\n     for (dm = (Module)modulestab->nodes[i]; dm;\n   dm = (Module)dm->node.next) {\n  LinkNode dn;\n  if (!dm->deps || !dm->u.handle)\n      continue;\n  for (dn = ((dm->deps)->list.first); dn; (dn = ((dn)->next))) {\n      if (!strcmp((char *) ((dn)->dat), mname)) {\n   if (dm->node.flags & (1<<1))\n       del = 1;\n   else {\n       zwarnnam(nam, \"module %s is in use by another module and cannot be unloaded\", mname);\n       return 1;\n   }\n      }\n  }\n     }\n }\n if (del)\n     m->wrapper++;\n if (unload_module(m))\n     ret = 1;\n if (del)\n     m->wrapper--;\n    } else if (!silent) {\n zwarnnam(nam, \"no such module %s\", modname);\n ret = 1;\n    }\n\n    return ret;\n}\n\n\n\n\nstatic int\nbin_zmodload_load(char *nam, char **args, Options ops)\n{\n    int ret = 0;\n    if(((ops)->ind['u'] != 0)) {\n\n for(; *args; args++) {\n     if (unload_named_module(*args, nam, ((ops)->ind['i'] != 0)))\n  ret = 1;\n }\n return ret;\n    } else if(!*args) {\n\n scanhashtable(modulestab, 1, 0, (1<<1)|(1<<6),\n        modulestab->printnode,\n        ((ops)->ind['L'] != 0) ? PRINTMOD_LIST : 0);\n return 0;\n    } else {\n\n for (; *args; args++) {\n     int tmpret = require_module(*args, ((void *)0));\n     if (tmpret && ret != 1)\n  ret = tmpret;\n }\n\n return ret;\n    }\n}\n\n\n\n\nstatic int\nbin_zmodload_features(const char *nam, char **args, Options ops)\n{\n    int iarg;\n    char *modname = *args;\n    Patprog *patprogs;\n    Feature_enables features, fep;\n\n    if (modname)\n args++;\n    else if (((ops)->ind['L'] != 0)) {\n int printflags = PRINTMOD_LIST|PRINTMOD_FEATURES;\n if (((ops)->ind['P'] != 0)) {\n     zwarnnam(nam, \"-P is only allowed with a module name\");\n     return 1;\n }\n if (((ops)->ind['l'] != 0))\n     printflags |= PRINTMOD_LISTALL;\n if (((ops)->ind['a'] != 0))\n     printflags |= PRINTMOD_AUTO;\n scanhashtable(modulestab, 1, 0, (1<<6),\n        modulestab->printnode, printflags);\n return 0;\n    }\n\n    if (!modname) {\n zwarnnam(nam, \"-F requires a module name\");\n return 1;\n    }\n\n    if (((ops)->ind['m'] != 0)) {\n char **argp;\n Patprog *patprogp;\n\n\n patprogp = patprogs =\n     (Patprog *)zhalloc(arrlen(args)*sizeof(Patprog));\n for (argp = args; *argp; argp++, patprogp++) {\n     char *arg = *argp;\n     if (*arg == '+' || *arg == '-')\n  arg++;\n     tokenize(arg);\n     *patprogp = patcompile(arg, 0, 0);\n }\n    } else\n patprogs = ((void *)0);\n\n    if (((ops)->ind['l'] != 0) || ((ops)->ind['L'] != 0) || ((ops)->ind['e'] != 0)) {\n\n\n\n\n\n\n\n Module m;\n char **features, **fp, **arrset = ((void *)0), **arrp = ((void *)0);\n int *enables = ((void *)0), *ep;\n char *param = (((ops)->ind['P'] > 3) ? ((ops)->args[((ops)->ind['P'] >> 2) - 1]) : ((void *)0));\n\n m = find_module(modname, FINDMOD_ALIASP, ((void *)0));\n if (((ops)->ind['a'] != 0)) {\n     LinkNode ln;\n\n\n\n     if (!m || !m->autoloads)\n  return 1;\n     if (((ops)->ind['e'] != 0)) {\n  for (fp = args; *fp; fp++) {\n      char *fstr = *fp;\n      int sense = 1;\n      if (*fstr == '+')\n   fstr++;\n      else if (*fstr == '-') {\n   fstr++;\n   sense = 0;\n      }\n      if ((linknodebystring(m->autoloads, fstr) != ((void *)0)) !=\n   sense)\n   return 1;\n  }\n  return 0;\n     }\n     if (param) {\n  arrp = arrset = (char **)zalloc(sizeof(char*) *\n     (countlinknodes(m->autoloads)+1));\n     } else if (((ops)->ind['L'] != 0)) {\n  printf(\"zmodload -aF %s%c\", m->node.nam,\n         m->autoloads && ((m->autoloads)->list.first) ? ' ' : '\\n');\n  arrp = ((void *)0);\n     }\n     for (ln = ((m->autoloads)->list.first); ln; (ln = ((ln)->next))) {\n  char *al = (char *)((ln)->dat);\n  if (param)\n      *arrp++ = ztrdup(al);\n  else\n      printf(\"%s%c\", al,\n      ((ops)->ind['L'] != 0) && ((ln)->next) ? ' ' : '\\n');\n     }\n     if (param) {\n  *arrp = ((void *)0);\n  if (!assignaparam(param,arrset,0))\n      return 1;\n     }\n     return 0;\n }\n if (!m || !m->u.handle || (m->node.flags & (1<<1))) {\n     if (!((ops)->ind['e'] != 0))\n  zwarnnam(nam, \"module `%s' is not yet loaded\", modname);\n     return 1;\n }\n if (features_module(m, &features)) {\n     if (!((ops)->ind['e'] != 0))\n  zwarnnam(nam, \"module `%s' does not support features\",\n    m->node.nam);\n     return 1;\n }\n if (enables_module(m, &enables)) {\n\n     zwarnnam(nam, \"error getting enabled features for module `%s'\",\n       m->node.nam);\n     return 1;\n }\n for (arrp = args, iarg = 0; *arrp; arrp++, iarg++) {\n     char *arg = *arrp;\n     int on, found = 0;\n     if (*arg == '-') {\n  on = 0;\n  arg++;\n     } else if (*arg == '+') {\n  on = 1;\n  arg++;\n     } else\n  on = -1;\n     for (fp = features, ep = enables; *fp; fp++, ep++) {\n  if (patprogs ? pattry(patprogs[iarg], *fp) :\n      !strcmp(arg, *fp)) {\n\n      if (((ops)->ind['e'] != 0) && on != -1 &&\n   on != (*ep & 1))\n   return 1;\n      found++;\n      if (!patprogs)\n   break;\n  }\n     }\n     if (!found) {\n  if (!((ops)->ind['e'] != 0))\n      zwarnnam(nam, patprogs ?\n        \"module `%s' has no feature matching: `%s'\" :\n        \"module `%s' has no such feature: `%s'\",\n        modname, *arrp);\n  return 1;\n     }\n }\n if (((ops)->ind['e'] != 0))\n     return 0;\n if (param) {\n     int arrlen = 0;\n     for (fp = features, ep = enables; *fp; fp++, ep++) {\n  if (((ops)->ind['L'] != 0) && !((ops)->ind['l'] != 0) &&\n      !*ep)\n      continue;\n  if (*args) {\n      char **argp;\n      for (argp = args, iarg = 0; *argp; argp++, iarg++) {\n   char *arg = *argp;\n\n   if (*arg == '+' || *arg == '-')\n       arg++;\n   if (patprogs ? pattry(patprogs[iarg], *fp) :\n       !strcmp(*fp, arg))\n       break;\n      }\n      if (!*argp)\n   continue;\n  }\n  arrlen++;\n     }\n     arrp = arrset = zalloc(sizeof(char *) * (arrlen+1));\n } else if (((ops)->ind['L'] != 0))\n     printf(\"zmodload -F %s \", m->node.nam);\n for (fp = features, ep = enables; *fp; fp++, ep++) {\n     char *onoff;\n     int term;\n     if (*args) {\n  char **argp;\n  for (argp = args, iarg = 0; *argp; argp++, iarg++) {\n      char *arg = *argp;\n      if (*arg == '+' || *arg == '-')\n   arg++;\n      if (patprogs ? pattry(patprogs[iarg], *fp) :\n   !strcmp(*fp, *argp))\n   break;\n  }\n  if (!*argp)\n      continue;\n     }\n     if (((ops)->ind['L'] != 0) && !((ops)->ind['l'] != 0)) {\n  if (!*ep)\n      continue;\n  onoff = \"\";\n     } else if (*ep) {\n  onoff = \"+\";\n     } else {\n  onoff = \"-\";\n     }\n     if (param) {\n  *arrp++ = bicat(onoff, *fp);\n     } else {\n  if (((ops)->ind['L'] != 0) && fp[1]) {\n      term = ' ';\n  } else {\n      term = '\\n';\n  }\n  printf(\"%s%s%c\", onoff, *fp, term);\n     }\n }\n if (param) {\n     *arrp = ((void *)0);\n     if (!assignaparam(param,arrset,0))\n  return 1;\n }\n return 0;\n    } else if (((ops)->ind['P'] != 0)) {\n zwarnnam(nam, \"-P can only be used with -l or -L\");\n return 1;\n    } else if (((ops)->ind['a'] != 0)) {\n if (((ops)->ind['m'] != 0)) {\n     zwarnnam(nam, \"-m cannot be used with -a\");\n     return 1;\n }\n// # 3227 \"module.c\"\n return autofeatures(nam, modname, args, 0, FEAT_IGNORE);\n    }\n\n    fep = features =\n (Feature_enables)zhalloc((arrlen(args)+1)*sizeof(*fep));\n\n    while (*args) {\n fep->str = *args++;\n fep->pat = patprogs ? *patprogs++ : ((void *)0);\n fep++;\n    }\n    fep->str = ((void *)0);\n    fep->pat = ((void *)0);\n\n    return require_module(modname, features);\n}\n// # 3259 \"module.c\"\n char **\nfeaturesarray(Module m __attribute__((__unused__)), Features f)\n{\n    int bn_size = f->bn_size, cd_size = f->cd_size;\n    int mf_size = f->mf_size, pd_size = f->pd_size;\n    int features_size = bn_size + cd_size + pd_size + mf_size + f->n_abstract;\n    Builtin bnp = f->bn_list;\n    Conddef cdp = f->cd_list;\n    MathFunc mfp = f->mf_list;\n    Paramdef pdp = f->pd_list;\n    char **features = (char **)zhalloc((features_size + 1) * sizeof(char *));\n    char **featurep = features;\n\n    while (bn_size--)\n *featurep++ = dyncat(\"b:\", (bnp++)->node.nam);\n    while (cd_size--) {\n *featurep++ = dyncat((cdp->flags & 1) ? \"C:\" : \"c:\",\n        cdp->name);\n cdp++;\n    }\n    while (mf_size--)\n *featurep++ = dyncat(\"f:\", (mfp++)->name);\n    while (pd_size--)\n *featurep++ = dyncat(\"p:\", (pdp++)->name);\n\n    features[features_size] = ((void *)0);\n    return features;\n}\n\n\n\n\n\n\n\n int *\ngetfeatureenables(Module m __attribute__((__unused__)), Features f)\n{\n    int bn_size = f->bn_size, cd_size = f->cd_size;\n    int mf_size = f->mf_size, pd_size = f->pd_size;\n    int features_size = bn_size + cd_size + mf_size + pd_size + f->n_abstract;\n    Builtin bnp = f->bn_list;\n    Conddef cdp = f->cd_list;\n    MathFunc mfp = f->mf_list;\n    Paramdef pdp = f->pd_list;\n    int *enables = zhalloc(sizeof(int) * features_size);\n    int *enablep = enables;\n\n    while (bn_size--)\n *enablep++ = ((bnp++)->node.flags & (1<<3)) ? 1 : 0;\n    while (cd_size--)\n *enablep++ = ((cdp++)->flags & 2) ? 1 : 0;\n    while (mf_size--)\n *enablep++ = ((mfp++)->flags & 2) ? 1 : 0;\n    while (pd_size--)\n *enablep++ = (pdp++)->pm ? 1 : 0;\n\n    return enables;\n}\n// # 3330 \"module.c\"\n int\nsetfeatureenables(Module m, Features f, int *e)\n{\n    int ret = 0;\n\n    if (f->bn_size) {\n if (setbuiltins(m->node.nam, f->bn_list, f->bn_size, e))\n     ret = 1;\n if (e)\n     e += f->bn_size;\n    }\n    if (f->cd_size) {\n if (setconddefs(m->node.nam, f->cd_list, f->cd_size, e))\n     ret = 1;\n if (e)\n     e += f->cd_size;\n    }\n    if (f->mf_size) {\n if (setmathfuncs(m->node.nam, f->mf_list, f->mf_size, e))\n     ret = 1;\n    }\n    if (f->pd_size) {\n if (setparamdefs(m->node.nam, f->pd_list, f->pd_size, e))\n     ret = 1;\n if (e)\n     e += f->pd_size;\n    }\n    return ret;\n}\n\n\n\n\n\n\n\n int\nhandlefeatures(Module m, Features f, int **enables)\n{\n    if (!enables || *enables)\n return setfeatureenables(m, f, *enables);\n    *enables = getfeatureenables(m, f);\n    return 0;\n}\n// # 3393 \"module.c\"\n int\nensurefeature(const char *modname, const char *prefix, const char *feature)\n{\n    char *f;\n    struct feature_enables features[2];\n\n    if (!feature)\n return require_module(modname, ((void *)0));\n    f = dyncat(prefix, feature);\n\n    features[0].str = f;\n    features[0].pat = ((void *)0);\n    features[1].str = ((void *)0);\n    features[1].pat = ((void *)0);\n    return require_module(modname, features);\n}\n\n\n\n\n\n\nint\nautofeatures(const char *cmdnam, const char *module, char **features,\n      int prefchar, int defflags)\n{\n    int ret = 0, subret;\n    Module defm, m;\n    char **modfeatures = ((void *)0);\n    if (module) {\n defm = (Module)find_module(module,\n       FINDMOD_ALIASP|FINDMOD_CREATE, ((void *)0));\n if ((defm->node.flags & (1<<3)) ? defm->u.linked :\n     defm->u.handle)\n     (void)features_module(defm, &modfeatures);\n    } else\n defm = ((void *)0);\n\n    for (; *features; features++) {\n char *fnam, *typnam, *feature;\n int add, fchar, flags = defflags;\n autofeaturefn_t fn;\n\n if (prefchar) {\n\n\n\n\n     add = 1;\n     fchar = prefchar;\n     fnam = *features;\n     feature = zhalloc(strlen(fnam) + 3);\n     sprintf(feature, \"%c:%s\", fchar, fnam);\n } else {\n     feature = *features;\n     if (*feature == '-') {\n  add = 0;\n  feature++;\n     } else {\n  add = 1;\n  if (*feature == '+')\n      feature++;\n     }\n\n     if (!*feature || feature[1] != ':') {\n  zwarnnam(cmdnam, \"bad format for autoloadable feature: `%s'\",\n    feature);\n  ret = 1;\n  continue;\n     }\n     fnam = feature + 2;\n     fchar = feature[0];\n }\n if (flags & FEAT_REMOVE)\n     add = 0;\n\n switch (fchar) {\n case 'b':\n     fn = add ? add_autobin : del_autobin;\n     typnam = \"builtin\";\n     break;\n\n case 'C':\n     flags |= FEAT_INFIX;\n\n case 'c':\n     fn = add ? add_autocond : del_autocond;\n     typnam = \"condition\";\n     break;\n\n case 'f':\n     fn = add ? add_automathfunc : del_automathfunc;\n     typnam = \"math function\";\n     break;\n\n case 'p':\n     fn = add ? add_autoparam : del_autoparam;\n     typnam = \"parameter\";\n     break;\n\n default:\n     zwarnnam(cmdnam, \"bad autoloadable feature type: `%c'\",\n       fchar);\n     ret = 1;\n     continue;\n }\n\n if (strchr(fnam, '/')) {\n     zwarnnam(cmdnam, \"%s: `/' is illegal in a %s\", fnam, typnam);\n     ret = 1;\n     continue;\n }\n\n if (!module) {\n\n\n\n\n     int i;\n     for (i = 0, m = ((void *)0); !m && i < modulestab->hsize; i++) {\n  for (m = (Module)modulestab->nodes[i]; m;\n       m = (Module)m->node.next) {\n      if (m->autoloads &&\n   linknodebystring(m->autoloads, feature))\n   break;\n  }\n     }\n     if (!m) {\n  if (!(flags & FEAT_IGNORE)) {\n      ret = 1;\n      zwarnnam(cmdnam, \"%s: no such %s\", fnam, typnam);\n  }\n  continue;\n     }\n } else\n     m = defm;\n\n subret = 0;\n if (add) {\n     char **ptr;\n     if (modfeatures) {\n\n\n\n\n  for (ptr = modfeatures; *ptr; ptr++)\n      if (!strcmp(*ptr, feature))\n   break;\n  if (!*ptr) {\n      zwarnnam(cmdnam, \"module `%s' has no such feature: `%s'\",\n        m->node.nam, feature);\n      ret = 1;\n      continue;\n  }\n     }\n     if (!m->autoloads) {\n  m->autoloads = znewlinklist();\n  zinsertlinknode(m->autoloads,((m->autoloads)->list.last),ztrdup(feature));\n     } else {\n\n  LinkNode ln, prev = (LinkNode)m->autoloads;\n  while ((ln = ((prev)->next))) {\n      int cmp = strcmp(feature, (char *)((ln)->dat));\n      if (cmp == 0) {\n\n   break;\n      }\n      if (cmp < 0) {\n   zinsertlinknode(m->autoloads, prev,\n     ztrdup(feature));\n   break;\n      }\n      prev = ln;\n  }\n  if (!ln)\n      zinsertlinknode(m->autoloads,((m->autoloads)->list.last),ztrdup(feature));\n     }\n } else if (m->autoloads) {\n     LinkNode ln;\n     if ((ln = linknodebystring(m->autoloads, feature)))\n  zsfree((char *)remnode(m->autoloads, ln));\n     else {\n\n\n\n\n  subret = (flags & FEAT_IGNORE) ? -2 : 2;\n     }\n }\n\n if (subret == 0)\n     subret = fn(module, fnam, flags);\n\n if (subret != 0) {\n\n     if (subret != -2)\n  ret = 1;\n     switch (subret) {\n     case 1:\n  zwarnnam(cmdnam, \"failed to add %s `%s'\", typnam, fnam);\n  break;\n\n     case 2:\n  zwarnnam(cmdnam, \"%s: no such %s\", fnam, typnam);\n  break;\n\n     case 3:\n  zwarnnam(cmdnam, \"%s: %s is already defined\", fnam, typnam);\n  break;\n\n     default:\n\n  break;\n     }\n }\n    }\n\n    return ret;\n}\n"
    },
    "skipped": [
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/cuda-headers.tgz",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_project_ROSETTA_empty/MSVS_project_ROSETTA_empty.suo",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_project_ROSETTA_empty/MSVS_project_ROSETTA_empty.ncb",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_project_ROSETTA_empty/MSVS_project_ROSETTA_empty/Debug/vc80.pdb",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_project_ROSETTA_empty/MSVS_project_ROSETTA_empty/Debug/vc80.idb",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_project_ROSETTA_empty/MSVS_project_ROSETTA_empty/Debug/string_functions.obj",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_project_ROSETTA_empty/MSVS_project_ROSETTA_empty/Debug/processSupport.obj",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_project_ROSETTA_empty/MSVS_project_ROSETTA_empty/Debug/escape.obj",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_project_ROSETTA_empty/MSVS_project_ROSETTA_empty/Debug/commandline_processing.obj",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_project_ROSETTA_empty/MSVS_project_ROSETTA_empty/Debug/FileNameClassifier.obj",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_project_ROSETTA_empty/MSVS_project_ROSETTA_empty/Debug/BuildLog.htm",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_ROSE/MSVS_ROSE.suo",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_ROSE/MSVS_UTIL/Debug/vc90.pdb",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_ROSE/MSVS_UTIL/Debug/vc90.idb",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_ROSE/MSVS_UTIL/Debug/BuildLog.htm",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_ROSE/MSVS_ROSETTA/Debug/vc90.pdb",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_ROSE/MSVS_ROSETTA/Debug/vc90.idb",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_ROSE/MSVS_ROSETTA/Debug/BuildLog.htm",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_ROSE/MSVS_ROSE/Debug/vc90.pdb",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_ROSE/MSVS_ROSE/Debug/vc90.idb",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_ROSE/MSVS_ROSE/Debug/BuildLog.htm",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/winspecific/MSVS_ROSE/Debug/MSVS_ROSETTA.pdb",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tutorial/transformation_srcode.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tutorial/transformation_cfg.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tutorial/lattice_cpa.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tutorial/dfa_ex.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tutorial/dfa_cpa.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tutorial/code_replacement_transformation.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tutorial/buffer2.bin",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tutorial/IBM_Examples.tar.gz",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tutorial/roseHPCT/profiled-p93-save.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/vm-final.raw",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/schulz-sample2.so",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/schulz-sample2-p.so",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/schulz-sample1.so",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/schulz-sample1-p.so",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/puttytel.exe",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/proxycfg.exe",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/pocketputty2.exe",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/pocketputty.exe",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/libm-2.3.6.so",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/libTest-amd64.a",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/i686-test1.O3.bin",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/i686-test1.O3-stripped.bin",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/i686-test1.O0.bin",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/i386-fsck.cramfs",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/hello.mips",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/fnord.ppc",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/fnord.i386",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/exefmt.exe",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/buffer2.rot13",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/buffer2.raw",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/buffer2.bin",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/asm_code_samples_gcc.exe",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/PFE32.EXE",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/specimens/binary/ARPPRODUCTICON.exe",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/input_codes/minimal/minimal.binary",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP_OLD/poptest.tgz",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/pop-distro/doc/web/reddivider.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/pop-distro/doc/web/POPdpgrid.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/pop-distro/doc/userguide/UsersGuide.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/pop-distro/doc/userguide/POPusers_chap6.tex",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/pop-distro/doc/userguide/POPusers_chap5.tex",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/pop-distro/doc/userguide/POPusers_chap4.tex",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/pop-distro/doc/userguide/POPusers_chap3.tex",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/pop-distro/doc/userguide/POPusers_chap1.tex",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/pop-distro/doc/userguide/POPusers.bib",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/udunits/udunits2.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/udunits/prog/udunits2prog.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/udunits/lib/udunits2lib.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/udunits/lib/testUnits.c",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/udunits/lib/formatter.c",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/udunits/lib/xmlSuccesses/prefixes.xml",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/udunits/lib/xmlFailures/prefixEncoding.xml",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/udunits/lib/xmlFailures/inconsistentPrefixEncoding.xml",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/nctest/ref_nctest_classic.nc",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/nctest/ref_nctest_64bit_offset.nc",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdump/ref_tst_compounds4.nc",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdump/ref_tst_compounds3.nc",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdump/ref_tst_compounds2.nc",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdump/ref_nc_test_netcdf4_4_0.nc",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdump/ref_nc_test_netcdf4.cdl",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdump/ctest64.c",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdump/ctest.c",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/whoi.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/text.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/testfile.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.vs5.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.vs4.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.vs3.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.vs2.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.vs1.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.sds7.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.sds6.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.sds5.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.sds4.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.sds3.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.sds2.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.sds1.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.gr5.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.gr4.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.gr3.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.gr2.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.gr1.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.SwathFile.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.PointFile.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.69.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.67.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.66.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.57.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.56.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.55.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.53.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.50.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.32.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.31.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.23.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.22.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.07.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.06a.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.06.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.05.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.04.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.03.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.02.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/test.01.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/synth8.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/synth7.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/synth6.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/synth5.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/synth4.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/synth3.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/synth2.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/synth1.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/saco1.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/pbug0001b.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/ingrid.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/in_v.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/in_no_three_double_dmn.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/in_2.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/in1.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/in.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/fnoc1.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/data.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/ceopL2AIRS2.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/ceopL2AIRS2-2.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/ber-2002-10-01.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/bears.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/b31a.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/b31.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/SimpleDrdsExample.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/OverideExample.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/NestedSeq2.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/NestedSeq.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/EOSDB.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/Drifters.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/D1.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/1998-6-avhrr.dat.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/1990-S1700101.HDF.WVC_Lat.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/123bears.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/testdata3/123.nc.dods",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/expectremote3/test.nc.dmp",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/expected4/text.nc.dmp",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/expected4/test.nc.dmp",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/expected3/text.nc.dmp",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/expected3/test.nc.dmp",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/ncdap_test/expected3/pbug0001b.dmp",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/libsrc4/ref_tst_xplatform2_2.nc",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/libsrc4/ref_tst_xplatform2_1.nc",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/libsrc4/ref_tst_interops4.nc",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/libsrc4/ref_tst_h_compounds2.h5",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/libsrc4/ref_tst_h_compounds.h5",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/libsrc4/ref_tst_dims.nc",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/libsrc4/ref_tst_compounds.nc",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/RunTests/FortranTests/LANL_POP/netcdf-4.1.1/libcf/doc/libcf.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/copyAST_tests/copytest2007_58.C",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/string_0xfe_0xff_1.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/intrinsic_actual_4.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/int_1.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/initialization_12.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/extended_char_comparison_1.f",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/data_implied_do_1.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/bom_error.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/bom_UTF16-LE.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/bom_UTF16-BE.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/bom_UTF-32.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/anint_1.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/altreturn_5.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/altreturn_4.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/alloc_comp_default_init_2.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/achar_3.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/achar_2.f90",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/g77/19981216-0.f",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Cxx_tests/test2007_90.C",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Cxx_tests/test2007_104.C",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Cxx11_tests/test2014_07.C",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/tests/nonsmoke/functional/CompileTests/Cxx11_tests/test2012_05.C",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/tview.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/util/Viewer.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/util/Viewer$MyFocusListener.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/util/Viewer$4.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/util/Viewer$3.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/util/Viewer$2.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/util/Viewer$1.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/util/ScreenShot.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/util/PosInfo.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/util/MyHighlightPainter.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/util/Highlight.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/util/FileHandler.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/util/Colors.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/util/ColorDialog.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseIndependentSupport/tview/util/ColorDialog$1.class",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/WidgetIcons/Rose.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/WidgetIcons/PropTreeWidget.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/WidgetIcons/Kiviat.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/WidgetIcons/Graph.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/WidgetIcons/CallGraph.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/variable.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/typedef.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/sourcefiles.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/sourcefile.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/project.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/pragma.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/namespace.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/loop.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/includes.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/include.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/function.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/enum.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/class.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/binaryfiles.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/NodeIcons/binaryfile.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/AppIcons/info.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/AppIcons/document-save.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/AppIcons/document-save-as.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/AppIcons/document-properties.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/AppIcons/document-open.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/util/AppIcons/application-exit.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/overview.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/astTreeView_big.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/astTreeView.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/astNodePropertyView.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/Tutorial_QtDesigner.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/TaskSystem.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/QCodeEditWidget.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/PropertyTreeWidget.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/ProjectView.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/NodeInfoWidget.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/MetricsConfig.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/LinkMechanism.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/Kiviat_Settings.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/KiviatTester.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/Kiviat.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/CallGraphWidget.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/BeautifiedAst_with_Kiviat.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/BeautifiedAst_CodeView.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/BeautifiedAst.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/AstGraphView.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/AstBrowserWidget.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/doc/images/AsmView.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/TaskSystem/images/gears.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/TaskSystem/images/compile_warning.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/TaskSystem/images/compile_unspecified.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/TaskSystem/images/compile_error.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QtGradientEditor/images/zoomout.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QtGradientEditor/images/zoomin.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QtGradientEditor/images/up.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QtGradientEditor/images/typeradial.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QtGradientEditor/images/typelinear.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QtGradientEditor/images/typeconical.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QtGradientEditor/images/spreadrepeat.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QtGradientEditor/images/spreadreflect.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QtGradientEditor/images/spreadpad.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QtGradientEditor/images/plus.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QtGradientEditor/images/minus.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QtGradientEditor/images/editdelete.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QtGradientEditor/images/edit.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QtGradientEditor/images/down.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/warning.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/up.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/unindent.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/undo.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/underline.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/uncomment.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/textcolor.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/strokecolor.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/strikeout.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/settings.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/saveas.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/save.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/replace.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/reload.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/redo.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/print.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/paste.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/package_settings.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/open.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/new.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/italic.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/indent.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/goto.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/formats.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/find.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/fillcolor.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/exit.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/error.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/editor.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/down.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/debug-resume.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/cut.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/copy.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/comment.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/closeall.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/break.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/QCodeEditWidget/bold.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/BeautifiedAst/icons/sourcefile.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/BeautifiedAst/icons/project.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/BeautifiedAst/icons/namespace.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/BeautifiedAst/icons/loop.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/BeautifiedAst/icons/includes.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/BeautifiedAst/icons/include.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/BeautifiedAst/icons/function.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/BeautifiedAst/icons/class.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/AstGraphWidget/icons/view-refresh.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/AstGraphWidget/icons/start-here.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/AstGraphWidget/icons/media-playback-start.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/roseExtensions/qtWidgets/AstGraphWidget/icons/media-playback-pause.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/midend/abstractMemoryObject/original_design.doc",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/frontend/SageIII/EXPR-GRAM.0.1.tar",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/frontend/Experimental_Ada_ROSE_Connection/dot_asis/dot_asis_library/include/a_nodes.h",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/frontend/ECJ_ROSE_Connection/cpp_vs_java.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/frontend/ECJ_ROSE_Connection/JavaDesignInROSE.pptx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/frontend/BinaryFormats/BinaryFileFormat.ppt",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/frontend/BinaryFormats/BinaryFileFormat.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/aterm-bundle-2.2.tar.gz",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/qrose/docs/QROSE.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/qrose/docs/QROSE.docx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/win32/msvc/libhpdf.res",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/win32/mingw/libhpdf_mingw.res",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/win32/mingw/libhpdf_cygwin.res",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/win32/bcc32/libhpdf.res",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/include/hpdf_objects.h",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/vb6/Form1.frm",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/ruby/demo/jpfont_demo.rb",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/OutlineDemo.cs",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/JPFontDemo.cs",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/rawimage/32_32_rgb.dat",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/rawimage/32_32_gray.dat",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/rawimage/32_32_2color.dat",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/maskimage.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn6a16.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn6a08.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn4a16.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn4a08.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn3p08.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn3p04.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn3p02.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn3p01.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn2c16.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn2c08.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn0g16.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn0g08.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn0g04.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn0g02.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/if/c#/demo/pngsuite/basn0g01.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/ttfont_demo_jp.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/ttfont_demo.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/text_demo2.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/text_demo.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/text_annotation.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/text_annotation.c",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/slide_show_demo.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/raw_image_demo.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/png_demo.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/permission.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/outline_demo.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/outline_demo.c",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/link_annotation.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/line_demo.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/jpfont_demo.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/jpeg_demo.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/image_demo.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/grid_sheet.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/font_demo.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/ext_gstate_demo.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/encryption.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/encoding_list.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/arc_demo.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/type1/a010013l.pfb",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/ttfont/PenguinAttack.ttf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/rawimage/32_32_rgb.dat",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/rawimage/32_32_gray.dat",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/rawimage/32_32_2color.dat",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/maskimage.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn6a16.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn6a08.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn4a16.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn4a08.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn3p08.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn3p04.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn3p02.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn3p01.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn2c16.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn2c08.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn0g16.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn0g08.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn0g04.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn0g02.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/pngsuite/basn0g01.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/mbtext/sjis.txt",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/mbtext/euc.txt",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/mbtext/cp936.txt",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/mbtext/cp932.txt",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/mbtext/EUC_JP.txt",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/images/rgb.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/libharu-2.1.0/demo/images/gray.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/java-parser/ecjsrc-3.8.2.jar",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/java-parser/ecj-3.8.2.jar",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/fortran-parser/OpenFortranParser-20200819-JDK8.jar",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/fortran-parser/OpenFortranParser-20200704.jar",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/experimental-jovial-parser/share/rose/Jovial.tbl",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/experimental-fortran-parser/syntax-v0.14/OLD_Fortran.tbl",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/experimental-fortran-parser/syntax-v0.14/FortranFixed.tbl",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/experimental-fortran-parser/share/rose/Fortran.tbl",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/experimental-fortran-parser/share/rose/CUDA_Fortran.tbl",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/experimental-cobol-parser/bin/Cobol.tbl",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/src/3rdPartyLibraries/antlr-jars/antlr-3.5.2-complete.jar",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/scripts/txt2html-2.44.tar.gz",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/scripts/qmsh.tar",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/scripts/qmsh-8-14.tar",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/scripts/patchelf-0.9.tar.gz",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/scripts/graph.tar",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/scripts/lc/ARES/testing/testing_status.xlsx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/COMPASS_SUBMIT.tar.gz",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/traceAnalysis/vmp-hw-part.trace",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/simulator2/linux-vdso.so",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/simulator2/linux-gate.so",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/palette/palette-talk.ppt",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/fuse/src/img/divGO.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/fuse/src/img/divDL.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/fuse/src/dbglog/img/linkUp.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/fuse/src/dbglog/img/linkDown.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/fuse/src/dbglog/img/divGO.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/fuse/src/dbglog/img/divDL.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/extractMPISkeleton/tests/master-slave/master-slave/io.c.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/compass.zargo",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/window-close.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/view-statistics.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/view-refresh.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/refresh.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/process-stop.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/ok.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/mail-mark-notjunk.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/gears.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/flag-yellow.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/flag-red.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/flag-green.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/error.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/edit-undo.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/edit-select-all.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/edit-redo.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/edit-paste.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/edit-find.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/edit-delete.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/edit-cut.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/edit-copy.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/document-save.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/document-save-as.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/document-properties.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/dialog-ok-apply.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/dialog-close.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/dialog-cancel.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/compass.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/chronometer.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/application-exit.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/gui2/icons/HelpIcon.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/doc/emacs_screenshot.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/doc/compassdesign.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/doc/compass_vim7.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/doc/compass_pic.ppt",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/doc/compass_pic.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/doc/compass_arc.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/doc/ToolGear_gui_compass_01.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/doc/ToolGear_gui_compass_01.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/doc/CompassScreenshot.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/compass/tools/compass/doc/CompassScreenshot.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/autoTuning/doc/rose-autotuning-overview.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/autoTuning/doc/phase3.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/autoTuning/doc/phase12.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/autoTuning/doc/hpctoolkit-smg2000.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/autoTuning/doc/activeHarmony_offline.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/autoTuning/doc/activeHarmony2.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SMTPathFeasibility/docs/analyzePathDocumentation.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/tools/interval/interval.optla",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/tools/annotcheck/gencode.pl",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/testsuite/mrtc/success/adpcm.c",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/src/termite/tests/test_control.C.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/src/termite/satire/TermPrinter.h",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/src/termite/doc/bonitz_manual.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/src/experimental/specs/shape/tests/test9.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/pldoc/zoomout.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/pldoc/zoomin.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/pldoc/up.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/pldoc/source.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/pldoc/reload.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/pldoc/favicon.ico",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/pldoc/edit.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/ltx2htm/icons/yellow_pages.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/ltx2htm/icons/up.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/ltx2htm/icons/prev.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/ltx2htm/icons/next.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/ltx2htm/icons/info.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/ltx2htm/icons/index.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/ltx2htm/icons/home.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/icons/internet-news-reader.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/icons/go-up.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/icons/go-previous.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/icons/go-next.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/icons/go-home.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/SATIrE/docs/icons/folder-saved-search.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTED/CppRuntimeSystem/DebuggerQt/icons/variable.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTED/CppRuntimeSystem/DebuggerQt/icons/scope.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTED/CppRuntimeSystem/DebuggerQt/icons/file.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTED/CppRuntimeSystem/DebuggerQt/icons/document-save.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTED/CppRuntimeSystem/DebuggerQt/icons/document-save-as.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTED/CppRuntimeSystem/DebuggerQt/icons/document-properties.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTED/CppRuntimeSystem/DebuggerQt/icons/document-open.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTED/CppRuntimeSystem/DebuggerQt/icons/basic_type.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTED/CppRuntimeSystem/DebuggerQt/icons/arrow.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTED/CppRuntimeSystem/DebuggerQt/icons/array.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTED/CppRuntimeSystem/DebuggerQt/icons/application-exit.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTED/CppRuntimeSystem/DebuggerQt/icons/allocation.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTC2/tests/unsorted/seq_examples/pointer_example_class_structed.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTC2/tests/unsorted/seq_examples/pointer_example_class_structed.cpp.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTC2/tests/unsorted/seq_examples/pointer_example_class.cpp.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTC2/tests/unsorted/seq_examples/pointer_example7_out_gpp.c",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTC2/tests/unsorted/seq_examples/pointer_example.upc.dot.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTC2/tests/unsorted/seq_examples/cout_out.txt",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTC2/tests/unsorted/par_examples/upc_pthread_hello_world_translated.c",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/RTC2/doc/rtc-sam-collie.docx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/QtDesignerPlugins/icons/Rose.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/QtDesignerPlugins/icons/PropTreeWidget.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/QtDesignerPlugins/icons/Kiviat.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/QtDesignerPlugins/icons/Graph.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/PolyOpt2/doc/polyopt.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/PolyOpt2/doc/htmldoc.tar.gz",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/MatrixTesting/lib/matrix/blacklisted.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/CodeThorn/src/counterexamples/Problem1.exe",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/CertSecureCodeProject/graphs/foo_WholeAST.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/CertSecureCodeProject/graphs/foo.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/CertSecureCodeProject/graphs/AST.xml.gz",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryCloneDetection/syntactic/fig/values_of_k.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryCloneDetection/syntactic/fig/values_of_k.fig",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryCloneDetection/syntactic/fig/k_vs_quality.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryCloneDetection/syntactic/fig/k_vs_quality.fig",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryCloneDetection/semantic/builtins.so",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/view-24x24.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/view-16x16.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/view-12x12.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/separate-24x24.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/semantics-reg-top-pressed-24x24.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/semantics-reg-top-24x24.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/semantics-reg-bottom-pressed-24x24.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/semantics-reg-bottom-24x24.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/semantics-mem-top-pressed-24x24.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/semantics-mem-top-24x24.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/semantics-mem-bottom-pressed-24x24.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/semantics-mem-bottom-24x24.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/move-24x24.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/logo.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/join-24x24.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/delete-24x24.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/projects/BinaryAnalysisTools/images/banner.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/exampleTranslators/documentedExamples/simpleTranslatorExamples/AST-pdf2.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/readmes/README.windows",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/roseDiagrams.jpg",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/rose-processing-phases.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/rose-git-hudson.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/nmi-screenshot.png",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/git_collaboration_diagram.pptx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/git_collaboration_diagram.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/diagrams.pptx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/demo.tex",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/compass_rose.gif",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/asm_code_samples_gcc.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/powerpoints/rose_compiler_users.pptx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/powerpoints/SIAM_SkeletonGeneration_v3.pptx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/powerpoints/ROSE_ManyCoreRuntime_2011_v5.pptx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/powerpoints/ROSE_CASC_Exascale_Workshop_ROSE_v4.pptx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/powerpoints/ROSE_August_2010_v1.pptx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/powerpoints/ROSE_August_2010_ExascaleDesign_v1.pptx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/powerpoints/Liao-ET-HPC-workshop-final.ppt",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/powerpoints/Fault_Resilience_v1.0.pptx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/powerpoints/ExascaleCompilers_March2012_ROSE.pptx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/powerpoints/ExaCT_AllHands_March2012_ROSE.pptx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/powerpoints/Accomplishment-Computer_Science-Quinlan-Rose.pptx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/powerpoints/ASCR_Workshop_Quinlan_Slide.pptx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/AstProcessing/astprocessingdoc_example1_TopDownBottomUp.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/AstProcessing/astprocessingdoc_example1_TopDown.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/AstProcessing/astprocessingdoc_example1_Preorder.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/AstProcessing/astprocessingdoc_example1_Postorder.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/docs/Rose/AstProcessing/astprocessingdoc_example1_BottomUp.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/cmake/ConfigureChecks.cmake",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/LicenseInformation/edison_group.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/LicenseInformation/BSD.pdf",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/.git/objects/pack/pack-81286148a11238d6e2b28b0930588c07da937731.idx",
        "/var/tmp/sochat1/spack-stage/spack-stage-rose-develop-lhusxbi7ple3g4yavrslru7tm47oihbv/spack-src/.git/objects/pack/pack-81286148a11238d6e2b28b0930588c07da937731.pack"
    ],
    "total_files": 31231
}